{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12440,
  "instance_id": "ClickHouse__ClickHouse-12440",
  "issue_numbers": [
    "11044"
  ],
  "base_commit": "d64e51d1a78c1b53c33915ca0f75c97b2333844f",
  "patch": "diff --git a/programs/benchmark/Benchmark.cpp b/programs/benchmark/Benchmark.cpp\nindex 89b9a877d5e3..8da164d01d66 100644\n--- a/programs/benchmark/Benchmark.cpp\n+++ b/programs/benchmark/Benchmark.cpp\n@@ -84,7 +84,8 @@ class Benchmark : public Poco::Util::Application\n             UInt16 cur_port = i >= ports_.size() ? 9000 : ports_[i];\n             std::string cur_host = i >= hosts_.size() ? \"localhost\" : hosts_[i];\n \n-            connections.emplace_back(std::make_unique<ConnectionPool>(concurrency, cur_host, cur_port, default_database_, user_, password_, \"benchmark\", Protocol::Compression::Enable, secure));\n+            connections.emplace_back(std::make_unique<ConnectionPool>(\n+                concurrency, cur_host, cur_port, default_database_, user_, password_, \"benchmark\", Protocol::Compression::Enable, secure));\n             comparison_info_per_interval.emplace_back(std::make_shared<Stats>());\n             comparison_info_total.emplace_back(std::make_shared<Stats>());\n         }\n@@ -563,7 +564,7 @@ int mainEntryClickHouseBenchmark(int argc, char ** argv)\n         desc.add_options()\n             (\"help\",                                                            \"produce help message\")\n             (\"concurrency,c\", value<unsigned>()->default_value(1),              \"number of parallel queries\")\n-            (\"delay,d\",       value<double>()->default_value(1),                \"delay between intermediate reports in seconds (set 0 to disable reports)\")\n+            (\"delay,d\",       value<double>()->default_value(1), \"delay between intermediate reports in seconds (set 0 to disable reports)\")\n             (\"stage\",         value<std::string>()->default_value(\"complete\"),  \"request query processing up to specified stage: complete,fetch_columns,with_mergeable_state\")\n             (\"iterations,i\",  value<size_t>()->default_value(0),                \"amount of queries to be executed\")\n             (\"timelimit,t\",   value<double>()->default_value(0.),               \"stop launch of queries after specified time limit\")\n@@ -600,8 +601,15 @@ int mainEntryClickHouseBenchmark(int argc, char ** argv)\n \n         print_stacktrace = options.count(\"stacktrace\");\n \n+        /// NOTE Maybe clickhouse-benchmark should also respect .xml configuration of clickhouse-client.\n+\n+        UInt16 default_port = options.count(\"secure\") ? DBMS_DEFAULT_SECURE_PORT : DBMS_DEFAULT_PORT;\n+\n         UseSSL use_ssl;\n-        Ports ports = options.count(\"port\") ? options[\"port\"].as<Ports>() : Ports({9000});\n+        Ports ports = options.count(\"port\")\n+            ? options[\"port\"].as<Ports>()\n+            : Ports({default_port});\n+\n         Strings hosts = options.count(\"host\") ? options[\"host\"].as<Strings>() : Strings({\"localhost\"});\n \n         Benchmark benchmark(\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01393_benchmark_secure_port.reference b/tests/queries/0_stateless/01393_benchmark_secure_port.reference\nnew file mode 100644\nindex 000000000000..4615c5c648a2\n--- /dev/null\n+++ b/tests/queries/0_stateless/01393_benchmark_secure_port.reference\n@@ -0,0 +1,1 @@\n+Queries executed: 100.\ndiff --git a/tests/queries/0_stateless/01393_benchmark_secure_port.sh b/tests/queries/0_stateless/01393_benchmark_secure_port.sh\nnew file mode 100755\nindex 000000000000..32f092ca58a4\n--- /dev/null\n+++ b/tests/queries/0_stateless/01393_benchmark_secure_port.sh\n@@ -0,0 +1,6 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+. $CURDIR/../shell_config.sh\n+\n+$CLICKHOUSE_BENCHMARK --secure -i 100 <<< 'SELECT 1' 2>&1 | grep -F 'Queries executed'\n",
  "problem_statement": "Incorrect secure port in clickhouse-benchmark \n**Describe the bug**\r\nWe need to set correct port with `--secure` setting\r\n**How to reproduce**\r\n```\r\nclickhouse-benchmark --host localhost --user user --password password --secure  <<< \"SELECT 1\"\r\nLoaded 1 queries.\r\nDB::NetException: Connection refused (localhost:9000)\r\n```\r\nHere we try to connect to 9000 instead of 9440\r\n\n",
  "hints_text": "",
  "created_at": "2020-07-12T18:55:23Z"
}