{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 49537,
  "instance_id": "ClickHouse__ClickHouse-49537",
  "issue_numbers": [
    "49153"
  ],
  "base_commit": "2104baabce4392e5b1034c8d04ba6aaf245741df",
  "patch": "diff --git a/src/Core/Settings.h b/src/Core/Settings.h\nindex 42ae645615aa..dbac8a7ec537 100644\n--- a/src/Core/Settings.h\n+++ b/src/Core/Settings.h\n@@ -903,6 +903,7 @@ class IColumn;\n     M(UInt64, output_format_pretty_max_value_width, 10000, \"Maximum width of value to display in Pretty formats. If greater - it will be cut.\", 0) \\\n     M(Bool, output_format_pretty_color, true, \"Use ANSI escape sequences to paint colors in Pretty formats\", 0) \\\n     M(String, output_format_pretty_grid_charset, \"UTF-8\", \"Charset for printing grid borders. Available charsets: ASCII, UTF-8 (default one).\", 0) \\\n+    M(Milliseconds, output_format_pretty_squash_ms, 100, \"Squash blocks in Pretty formats if the time passed after the previous block is not greater than the specified threshold in milliseconds. This avoids printing miltiple small blocks.\", 0) \\\n     M(UInt64, output_format_parquet_row_group_size, 1000000, \"Target row group size in rows.\", 0) \\\n     M(UInt64, output_format_parquet_row_group_size_bytes, 512 * 1024 * 1024, \"Target row group size in bytes, before compression.\", 0) \\\n     M(Bool, output_format_parquet_string_as_string, false, \"Use Parquet String type instead of Binary for String columns.\", 0) \\\ndiff --git a/src/Formats/FormatFactory.cpp b/src/Formats/FormatFactory.cpp\nindex 082ccb859702..d7e9c33c8224 100644\n--- a/src/Formats/FormatFactory.cpp\n+++ b/src/Formats/FormatFactory.cpp\n@@ -128,6 +128,7 @@ FormatSettings getFormatSettings(ContextPtr context, const Settings & settings)\n     format_settings.pretty.max_rows = settings.output_format_pretty_max_rows;\n     format_settings.pretty.max_value_width = settings.output_format_pretty_max_value_width;\n     format_settings.pretty.output_format_pretty_row_numbers = settings.output_format_pretty_row_numbers;\n+    format_settings.pretty.squash_milliseconds = static_cast<UInt64>(settings.output_format_pretty_squash_ms);\n     format_settings.protobuf.input_flatten_google_wrappers = settings.input_format_protobuf_flatten_google_wrappers;\n     format_settings.protobuf.output_nullables_with_google_wrappers = settings.output_format_protobuf_nullables_with_google_wrappers;\n     format_settings.protobuf.skip_fields_with_unsupported_types_in_schema_inference = settings.input_format_protobuf_skip_fields_with_unsupported_types_in_schema_inference;\ndiff --git a/src/Formats/FormatSettings.h b/src/Formats/FormatSettings.h\nindex b9a55ffaa830..3a2e818d540b 100644\n--- a/src/Formats/FormatSettings.h\n+++ b/src/Formats/FormatSettings.h\n@@ -227,6 +227,7 @@ struct FormatSettings\n         UInt64 max_rows = 10000;\n         UInt64 max_column_pad_width = 250;\n         UInt64 max_value_width = 10000;\n+        UInt64 squash_milliseconds = 100;\n         bool color = true;\n \n         bool output_format_pretty_row_numbers = false;\ndiff --git a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\nindex 14648e68f94a..bfcc4c101d90 100644\n--- a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\n+++ b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\n@@ -137,21 +137,25 @@ void PrettyBlockOutputFormat::write(Chunk chunk, PortKind port_kind)\n         total_rows += chunk.getNumRows();\n         return;\n     }\n-    if (mono_block)\n+\n+    if (mono_block\n+        || (format_settings.pretty.squash_milliseconds\n+            && time_after_previous_chunk.elapsedMilliseconds() <= format_settings.pretty.squash_milliseconds))\n     {\n         if (port_kind == PortKind::Main)\n         {\n-            if (mono_chunk)\n-                mono_chunk.append(chunk);\n+            if (squashed_chunk)\n+                squashed_chunk.append(chunk);\n             else\n-                mono_chunk = std::move(chunk);\n+                squashed_chunk = std::move(chunk);\n             return;\n         }\n \n         /// Should be written from writeSuffix()\n-        assert(!mono_chunk);\n+        assert(!squashed_chunk);\n     }\n \n+    writeSquashedChunkIfNeeded();\n     writeChunk(chunk, port_kind);\n }\n \n@@ -389,18 +393,20 @@ void PrettyBlockOutputFormat::consumeExtremes(Chunk chunk)\n }\n \n \n-void PrettyBlockOutputFormat::writeMonoChunkIfNeeded()\n+void PrettyBlockOutputFormat::writeSquashedChunkIfNeeded()\n {\n-    if (mono_chunk)\n+    if (squashed_chunk)\n     {\n-        writeChunk(mono_chunk, PortKind::Main);\n-        mono_chunk.clear();\n+        writeChunk(squashed_chunk, PortKind::Main);\n+        squashed_chunk.clear();\n+        if (format_settings.pretty.squash_milliseconds)\n+            time_after_previous_chunk.restart();\n     }\n }\n \n void PrettyBlockOutputFormat::writeSuffix()\n {\n-    writeMonoChunkIfNeeded();\n+    writeSquashedChunkIfNeeded();\n \n     if (total_rows >= format_settings.pretty.max_rows)\n     {\ndiff --git a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\nindex dfb23ac63f92..621f13871964 100644\n--- a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\n+++ b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\n@@ -39,7 +39,7 @@ class PrettyBlockOutputFormat : public IOutputFormat\n \n     void write(Chunk chunk, PortKind port_kind);\n     virtual void writeChunk(const Chunk & chunk, PortKind port_kind);\n-    void writeMonoChunkIfNeeded();\n+    void writeSquashedChunkIfNeeded();\n     void writeSuffix() override;\n \n     void onRowsReadBeforeUpdate() override { total_rows = getRowsReadBefore(); }\n@@ -59,11 +59,11 @@ class PrettyBlockOutputFormat : public IOutputFormat\n \n private:\n     bool mono_block;\n-    /// For mono_block == true only\n-    Chunk mono_chunk;\n+    Chunk squashed_chunk;\n+    Stopwatch time_after_previous_chunk; /// For squashing.\n };\n \n-template <class OutputFormat>\n+template <typename OutputFormat>\n void registerPrettyFormatWithNoEscapesAndMonoBlock(FormatFactory & factory, const String & base_name)\n {\n     auto creator = [&](FormatFactory & fact, const String & name, bool no_escapes, bool mono_block)\n@@ -81,8 +81,6 @@ void registerPrettyFormatWithNoEscapesAndMonoBlock(FormatFactory & factory, cons\n             }\n             return std::make_shared<OutputFormat>(buf, sample, format_settings, mono_block);\n         });\n-        if (!mono_block)\n-            factory.markOutputFormatSupportsParallelFormatting(name);\n     };\n     creator(factory, base_name, false, false);\n     creator(factory, base_name + \"NoEscapes\", true, false);\ndiff --git a/src/Processors/Formats/Impl/PrettySpaceBlockOutputFormat.cpp b/src/Processors/Formats/Impl/PrettySpaceBlockOutputFormat.cpp\nindex 0fb1a413a6cd..e54d88a11b20 100644\n--- a/src/Processors/Formats/Impl/PrettySpaceBlockOutputFormat.cpp\n+++ b/src/Processors/Formats/Impl/PrettySpaceBlockOutputFormat.cpp\n@@ -100,7 +100,7 @@ void PrettySpaceBlockOutputFormat::writeChunk(const Chunk & chunk, PortKind port\n \n void PrettySpaceBlockOutputFormat::writeSuffix()\n {\n-    writeMonoChunkIfNeeded();\n+    writeSquashedChunkIfNeeded();\n \n     if (total_rows >= format_settings.pretty.max_rows)\n     {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00098_k_union_all.sql b/tests/queries/0_stateless/00098_k_union_all.sql\nindex 311e5bb19c45..8f396d3479ad 100644\n--- a/tests/queries/0_stateless/00098_k_union_all.sql\n+++ b/tests/queries/0_stateless/00098_k_union_all.sql\n@@ -1,3 +1,4 @@\n+SET output_format_pretty_squash_ms = 0;\n SELECT 1 FORMAT PrettySpace;\n SELECT 1 UNION ALL SELECT 1 FORMAT PrettySpace;\n SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 FORMAT PrettySpace;\ndiff --git a/tests/queries/0_stateless/00405_pretty_formats.sql b/tests/queries/0_stateless/00405_pretty_formats.sql\nindex 3c8af7762784..a7dc5aa06008 100644\n--- a/tests/queries/0_stateless/00405_pretty_formats.sql\n+++ b/tests/queries/0_stateless/00405_pretty_formats.sql\n@@ -1,3 +1,5 @@\n+SET output_format_pretty_squash_ms = 0;\n+\n SELECT number AS hello, toString(number) AS world, (hello, world) AS tuple, nullIf(hello % 3, 0) AS sometimes_nulls FROM system.numbers LIMIT 10 SETTINGS max_block_size = 5 FORMAT Pretty;\n SELECT number AS hello, toString(number) AS world, (hello, world) AS tuple, nullIf(hello % 3, 0) AS sometimes_nulls FROM system.numbers LIMIT 10 SETTINGS max_block_size = 5 FORMAT PrettyCompact;\n SELECT number AS hello, toString(number) AS world, (hello, world) AS tuple, nullIf(hello % 3, 0) AS sometimes_nulls FROM system.numbers LIMIT 10 SETTINGS max_block_size = 5 FORMAT PrettySpace;\ndiff --git a/tests/queries/0_stateless/00730_unicode_terminal_format.sql b/tests/queries/0_stateless/00730_unicode_terminal_format.sql\nindex b7a8084c406e..6327b41a05a0 100644\n--- a/tests/queries/0_stateless/00730_unicode_terminal_format.sql\n+++ b/tests/queries/0_stateless/00730_unicode_terminal_format.sql\n@@ -1,5 +1,7 @@\n DROP TABLE IF EXISTS unicode;\n \n+SET output_format_pretty_squash_ms = 0;\n+\n CREATE TABLE unicode(c1 String, c2 String) ENGINE = Memory;\n INSERT INTO unicode VALUES ('\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435', '\u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c!');\n INSERT INTO unicode VALUES ('\u4f60\u597d', '\u8fd9\u6bb5\u4ee3\u7801\u662f\u53ef\u4ee5\u7f16\u8f91\u5e76\u4e14\u80fd\u591f\u8fd0\u884c\u7684\uff01');\ndiff --git a/tests/queries/0_stateless/01065_window_view_event_hop_watch_bounded.py b/tests/queries/0_stateless/01065_window_view_event_hop_watch_bounded.py\nindex 7f00130b184e..52d0c2c87d45 100755\n--- a/tests/queries/0_stateless/01065_window_view_event_hop_watch_bounded.py\n+++ b/tests/queries/0_stateless/01065_window_view_event_hop_watch_bounded.py\n@@ -19,13 +19,17 @@\n     client1.expect(prompt)\n     client2.expect(prompt)\n \n-    client1.send(\"SET allow_experimental_analyzer = 0\")\n+    client1.send(\n+        \"SET allow_experimental_analyzer = 0, output_format_pretty_squash_ms = 0;\"\n+    )\n     client1.expect(prompt)\n     client1.send(\"SET allow_experimental_window_view = 1\")\n     client1.expect(prompt)\n     client1.send(\"SET window_view_heartbeat_interval = 1\")\n     client1.expect(prompt)\n-    client2.send(\"SET allow_experimental_window_view = 1\")\n+    client2.send(\n+        \"SET allow_experimental_window_view = 1, output_format_pretty_squash_ms = 0;\"\n+    )\n     client2.expect(prompt)\n \n     client1.send(\ndiff --git a/tests/queries/0_stateless/01082_window_view_watch_limit.py b/tests/queries/0_stateless/01082_window_view_watch_limit.py\nindex 12c8d2955918..07dbc232a63d 100755\n--- a/tests/queries/0_stateless/01082_window_view_watch_limit.py\n+++ b/tests/queries/0_stateless/01082_window_view_watch_limit.py\n@@ -19,13 +19,17 @@\n     client1.expect(prompt)\n     client2.expect(prompt)\n \n-    client1.send(\"SET allow_experimental_analyzer = 0\")\n+    client1.send(\n+        \"SET allow_experimental_analyzer = 0, output_format_pretty_squash_ms = 0;\"\n+    )\n     client1.expect(prompt)\n     client1.send(\"SET allow_experimental_window_view = 1\")\n     client1.expect(prompt)\n     client1.send(\"SET window_view_heartbeat_interval = 1\")\n     client1.expect(prompt)\n-    client2.send(\"SET allow_experimental_window_view = 1\")\n+    client2.send(\n+        \"SET allow_experimental_window_view = 1, output_format_pretty_squash_ms = 0;\"\n+    )\n     client2.expect(prompt)\n \n     client1.send(\"CREATE DATABASE IF NOT EXISTS 01082_window_view_watch_limit\")\ndiff --git a/tests/queries/0_stateless/01509_output_format_pretty_row_numbers.sql b/tests/queries/0_stateless/01509_output_format_pretty_row_numbers.sql\nindex f8ec0be74d7d..fb4c743d54bb 100644\n--- a/tests/queries/0_stateless/01509_output_format_pretty_row_numbers.sql\n+++ b/tests/queries/0_stateless/01509_output_format_pretty_row_numbers.sql\n@@ -1,3 +1,5 @@\n+SET output_format_pretty_squash_ms = 0;\n+\n SELECT * FROM numbers(10) FORMAT Pretty;\n SELECT * FROM numbers(10) FORMAT PrettyCompact;\n SELECT * FROM numbers(10) FORMAT PrettyCompactMonoBlock;\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_Pretty.reference b/tests/queries/0_stateless/02122_parallel_formatting_Pretty.reference\ndeleted file mode 100644\nindex 72d346f82f73..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_Pretty.reference\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Pretty-1\n-Pretty-2\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_Pretty.sh b/tests/queries/0_stateless/02122_parallel_formatting_Pretty.sh\ndeleted file mode 100755\nindex a72510b06140..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_Pretty.sh\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-#!/usr/bin/env bash\n-# Tags: no-fasttest\n-\n-CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n-${CUR_DIR}/02122_parallel_formatting.lib Pretty\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompact.reference b/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompact.reference\ndeleted file mode 100644\nindex 35761b294db8..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompact.reference\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-PrettyCompact-1\n-PrettyCompact-2\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompact.sh b/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompact.sh\ndeleted file mode 100755\nindex 351f7ce0cd6d..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompact.sh\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-#!/usr/bin/env bash\n-# Tags: no-fasttest\n-\n-CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n-${CUR_DIR}/02122_parallel_formatting.lib PrettyCompact\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompactNoEscapes.reference b/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompactNoEscapes.reference\ndeleted file mode 100644\nindex 8b70c25b168b..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompactNoEscapes.reference\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-PrettyCompactNoEscapes-1\n-PrettyCompactNoEscapes-2\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompactNoEscapes.sh b/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompactNoEscapes.sh\ndeleted file mode 100755\nindex fd1e7a83ead8..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettyCompactNoEscapes.sh\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-#!/usr/bin/env bash\n-# Tags: no-fasttest\n-\n-CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n-${CUR_DIR}/02122_parallel_formatting.lib PrettyCompactNoEscapes\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettyNoEscapes.reference b/tests/queries/0_stateless/02122_parallel_formatting_PrettyNoEscapes.reference\ndeleted file mode 100644\nindex e2bfec67b7cb..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettyNoEscapes.reference\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-PrettyNoEscapes-1\n-PrettyNoEscapes-2\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettyNoEscapes.sh b/tests/queries/0_stateless/02122_parallel_formatting_PrettyNoEscapes.sh\ndeleted file mode 100755\nindex 20e6d9c6973a..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettyNoEscapes.sh\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-#!/usr/bin/env bash\n-# Tags: no-fasttest\n-\n-CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n-${CUR_DIR}/02122_parallel_formatting.lib PrettyNoEscapes\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettySpace.reference b/tests/queries/0_stateless/02122_parallel_formatting_PrettySpace.reference\ndeleted file mode 100644\nindex fab8c8bde762..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettySpace.reference\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-PrettySpace-1\n-PrettySpace-2\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettySpace.sh b/tests/queries/0_stateless/02122_parallel_formatting_PrettySpace.sh\ndeleted file mode 100755\nindex 8af990d9113a..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettySpace.sh\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-#!/usr/bin/env bash\n-# Tags: no-fasttest\n-\n-CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n-${CUR_DIR}/02122_parallel_formatting.lib PrettySpace\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettySpaceNoEscapes.reference b/tests/queries/0_stateless/02122_parallel_formatting_PrettySpaceNoEscapes.reference\ndeleted file mode 100644\nindex 154ee87e82a1..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettySpaceNoEscapes.reference\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-PrettySpaceNoEscapes-1\n-PrettySpaceNoEscapes-2\ndiff --git a/tests/queries/0_stateless/02122_parallel_formatting_PrettySpaceNoEscapes.sh b/tests/queries/0_stateless/02122_parallel_formatting_PrettySpaceNoEscapes.sh\ndeleted file mode 100755\nindex 8fcbfbc16cfd..000000000000\n--- a/tests/queries/0_stateless/02122_parallel_formatting_PrettySpaceNoEscapes.sh\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-#!/usr/bin/env bash\n-# Tags: no-fasttest\n-\n-CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n-${CUR_DIR}/02122_parallel_formatting.lib PrettySpaceNoEscapes\ndiff --git a/tests/queries/0_stateless/02375_pretty_formats.sql.j2 b/tests/queries/0_stateless/02375_pretty_formats.sql.j2\nindex cc61346d267f..92e0a357138f 100644\n--- a/tests/queries/0_stateless/02375_pretty_formats.sql.j2\n+++ b/tests/queries/0_stateless/02375_pretty_formats.sql.j2\n@@ -3,6 +3,7 @@\n                   'PrettySpaceNoEscapesMonoBlock'] -%}\n \n select '{{ format }}';\n+SET output_format_pretty_squash_ms = 0;\n select number as x, number + 1 as y from numbers(4) settings max_block_size=2 format {{ format }};\n \n {% endfor -%}\ndiff --git a/tests/queries/0_stateless/02731_pretty_time_based_squashing.reference b/tests/queries/0_stateless/02731_pretty_time_based_squashing.reference\nnew file mode 100644\nindex 000000000000..653faf33a468\n--- /dev/null\n+++ b/tests/queries/0_stateless/02731_pretty_time_based_squashing.reference\n@@ -0,0 +1,14 @@\n+\u250c\u2500\u001b[1mnumber\u001b[0m\u2500\u2510\n+\u2502      0 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mnumber\u001b[0m\u2500\u2510\n+\u2502      1 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mnumber\u001b[0m\u2500\u2510\n+\u2502      2 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mnumber\u001b[0m\u2500\u2510\n+\u2502      0 \u2502\n+\u2502      1 \u2502\n+\u2502      2 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\ndiff --git a/tests/queries/0_stateless/02731_pretty_time_based_squashing.sql b/tests/queries/0_stateless/02731_pretty_time_based_squashing.sql\nnew file mode 100644\nindex 000000000000..e5656c8e1cac\n--- /dev/null\n+++ b/tests/queries/0_stateless/02731_pretty_time_based_squashing.sql\n@@ -0,0 +1,2 @@\n+SELECT * FROM numbers(3) FORMAT PrettyCompact SETTINGS max_block_size = 1, max_threads = 1, output_format_pretty_squash_ms = 0;\n+SELECT * FROM numbers(3) FORMAT PrettyCompact SETTINGS max_block_size = 1, max_threads = 1, output_format_pretty_squash_ms = 600_000;\n",
  "problem_statement": "Pretty formats: squash blocks if not much time passed since output of the previous block.\n```\r\n\u250c\u2500exception_code\u2500\u252c\u2500\u2500count()\u2500\u2510\r\n\u2502            252 \u2502 35961274 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500exception_code\u2500\u252c\u2500count()\u2500\u2510\r\n\u2502            645 \u2502  721594 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500exception_code\u2500\u252c\u2500count()\u2500\u2510\r\n\u2502           1001 \u2502  719897 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500exception_code\u2500\u252c\u2500count()\u2500\u2510\r\n\u2502             26 \u2502  679782 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500exception_code\u2500\u252c\u2500count()\u2500\u2510\r\n\u2502             62 \u2502  465018 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500exception_code\u2500\u252c\u2500count()\u2500\u2510\r\n\u2502            241 \u2502  443922 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nThis output looks bad.\r\n\r\nLet's squash blocks before formatting unless they are large or 100 ms passed since the first block.\r\nThe max timeout can be controlled by a setting.\r\n\r\nThe feature can be implemented by extending the Squashing... something, but it should apply only for pretty formats.\n",
  "hints_text": "",
  "created_at": "2023-05-05T04:38:54Z"
}