You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Minmax index on aggregate function breaks merges for table
> Please make sure that the version you're using is still supported

23.10.5.20

> You have to provide the following information whenever possible.

**Describe what's wrong**

minmax index on aggregate function causes broken merges

table column
```sql
`avg_time` AggregateFunction(avgWeighted, Int64, UInt64) CODEC(ZSTD(1)),
```

index on table
```
INDEX idx_avg_time avg_time TYPE minmax GRANULARITY 1,
```

error seen in system.merge_log causing merge failures
```
Code: 43. DB::Exception: Operator < is not implemented for AggregateFunctionStateData. (ILLEGAL_TYPE_OF_ARGUMENT), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000cdce617 in /usr/bin/clickhouse
1. DB::Exception::Exception<char const (&) [62]>(int, char const (&) [62]) @ 0x0000000007b746e0 in /usr/bin/clickhouse
2. auto DB::Field::dispatch<auto auto DB::applyVisitor<DB::FieldVisitorAccurateLess, DB::FieldRef&, DB::FieldRef&>(DB::FieldVisitorAccurateLess&&, DB::FieldRef&, DB::FieldRef&)::'lambda'(DB::FieldVisitorAccurateLess&)::operator()<DB::AggregateFunctionStateData>(DB::FieldVisitorAccurateLess&) const::'lambda'(DB::FieldVisitorAccurateLess&), DB::FieldRef&>(DB::FieldVisitorAccurateLess&&, DB::FieldRef&) @ 0x00000000134d7e04 in /usr/bin/clickhouse
3. auto DB::Field::dispatch<auto DB::applyVisitor<DB::FieldVisitorAccurateLess, DB::FieldRef&, DB::FieldRef&>(DB::FieldVisitorAccurateLess&&, DB::FieldRef&, DB::FieldRef&)::'lambda'(DB::FieldVisitorAccurateLess&), DB::FieldRef&>(DB::FieldVisitorAccurateLess&&, DB::FieldRef&) @ 0x00000000134d20bd in /usr/bin/clickhouse
4. DB::MergeTreeIndexAggregatorMinMax::update(DB::Block const&, unsigned long*, unsigned long) @ 0x0000000013664915 in /usr/bin/clickhouse
5. DB::MergeTreeDataPartWriterOnDisk::calculateAndSerializeSkipIndices(DB::Block const&, std::vector<DB::Granule, std::allocator<DB::Granule>> const&) @ 0x0000000013611be9 in /usr/bin/clickhouse
6. DB::MergeTreeDataPartWriterWide::write(DB::Block const&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const*) @ 0x0000000013615367 in /usr/bin/clickhouse
7. DB::MergedBlockOutputStream::write(DB::Block const&) @ 0x000000001375db64 in /usr/bin/clickhouse
8. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x00000000135219f0 in /usr/bin/clickhouse
9. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x000000001352154b in /usr/bin/clickhouse
10. DB::MergeTask::execute() @ 0x00000000135268f9 in /usr/bin/clickhouse
11. DB::ReplicatedMergeMutateTaskBase::executeStep() @ 0x00000000137c61ce in /usr/bin/clickhouse
12. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x000000001353855b in /usr/bin/clickhouse
13. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x000000000ceb7abf in /usr/bin/clickhouse
14. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000000cebb5dc in /usr/bin/clickhouse
15. void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000000ceb9e07 in /usr/bin/clickhouse
16. ? @ 0x00007f2a86e41609 in ?
17. ? @ 0x00007f2a86d66133 in ?
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
