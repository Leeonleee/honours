You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Column declaration: [NOT] NULL right after type
Execution of this query
```
create table t (c1 int(11) DEFAULT 1 NULL) engine=MergeTree order by tuple()
```
will return parsed query
```
CREATE TABLE t
(
     `c1` int NULL DEFAULT 1
)
ENGINE = MergeTree
ORDER BY tuple()
```
In the parsed query, NULL comes before DEFAULT, in the initial - other way around.
If I try to execute the parsed query, Iâ€™ll get the following error:
```
Syntax error: failed at position 36 ('DEFAULT') (line 3, col 19):

CREATE TABLE t
(
    `c1` int NULL DEFAULT 1
)
ENGINE = MergeTree
ORDER BY tuple()

Expected one of: COMMENT, CODEC, TTL, token, Comma, ClosingRoundBracket
```
This is confusing. 
See also discussion in #37087

Considerations:
(1) considering simplification of migration from other databases (see, for example, #37178) probably it makes sense to keep support for old column declaration, - MySQL supports both ways: `NULL DEFAULT 1` and `DEFAULT 1 NULL`, even `COMMENT '1' NULL` which we don't support. This way it'll keep the change backward compatible
(2) from another side ... I guess ... there is no target to support all variants of different syntax. It's not desirable to complicate parser implementation just for this reason


Wrong order of NOT NULL data type modifier and DEFAULT.
**Describe the unexpected behaviour**

```
:) CREATE TEMPORARY TABLE test (x INT NOT NULL DEFAULT 1)

Syntax error: failed at position 52 ('DEFAULT') (line 3, col 22):

CREATE TEMPORARY TABLE test
(
    `x` INT NOT NULL DEFAULT 1
                     ^
)

Expected one of: COMMENT, CODEC, TTL, token, Comma, ClosingRoundBracket
```

But this query succeeded:

```
:) CREATE TEMPORARY TABLE test (x INT DEFAULT 1 NOT NULL)

CREATE TEMPORARY TABLE test
(
    `x` INT NOT NULL DEFAULT 1
)
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
