diff --git a/tests/queries/0_stateless/03224_tuple_element_identifier.reference b/tests/queries/0_stateless/03224_tuple_element_identifier.reference
new file mode 100644
index 000000000000..0fc9e7410c19
--- /dev/null
+++ b/tests/queries/0_stateless/03224_tuple_element_identifier.reference
@@ -0,0 +1,4 @@
+([('wtf')])	[('wtf')]	wtf
+([('wtf')])	[('wtf')]	wtf
+Hello
+('Hello')	Hello	Hello	Hello
diff --git a/tests/queries/0_stateless/03224_tuple_element_identifier.sql b/tests/queries/0_stateless/03224_tuple_element_identifier.sql
new file mode 100644
index 000000000000..2a7fb9a97a3c
--- /dev/null
+++ b/tests/queries/0_stateless/03224_tuple_element_identifier.sql
@@ -0,0 +1,13 @@
+SET enable_analyzer = 1;
+
+SELECT JSONExtract('{"hello":[{"world":"wtf"}]}', 'Tuple(hello Array(Tuple(world String)))') AS x,
+    x.hello, x.hello[1].world;
+
+SELECT JSONExtract('{"hello":[{" wow ":"wtf"}]}', 'Tuple(hello Array(Tuple(` wow ` String)))') AS x,
+    x.hello, x.hello[1].` wow `;
+
+SELECT JSONExtract('{"hello":[{" wow ":"wtf"}]}', 'Tuple(hello Array(Tuple(` wow ` String)))') AS x,
+    x.hello, x.hello[1].`wow`; -- { serverError NOT_FOUND_COLUMN_IN_BLOCK }
+
+SELECT ('Hello' AS world,).world;
+SELECT ('Hello' AS world,) AS t, t.world, (t).world, identity(t).world;
