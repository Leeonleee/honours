{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 5560,
  "instance_id": "ClickHouse__ClickHouse-5560",
  "issue_numbers": [
    "5439"
  ],
  "base_commit": "00a1ac64a48aa3c0c359d80b39a89f8e0ceb2543",
  "patch": "diff --git a/dbms/src/Formats/PrettySpaceBlockOutputStream.cpp b/dbms/src/Formats/PrettySpaceBlockOutputStream.cpp\nindex 6cad669fd499..b210af2551ab 100644\n--- a/dbms/src/Formats/PrettySpaceBlockOutputStream.cpp\n+++ b/dbms/src/Formats/PrettySpaceBlockOutputStream.cpp\n@@ -7,7 +7,6 @@\n namespace DB\n {\n \n-\n void PrettySpaceBlockOutputStream::write(const Block & block)\n {\n     UInt64 max_rows = format_settings.pretty.max_rows;\n@@ -26,12 +25,6 @@ void PrettySpaceBlockOutputStream::write(const Block & block)\n     Widths name_widths;\n     calculateWidths(block, widths, max_widths, name_widths, format_settings);\n \n-    /// Do not align on too long values.\n-    if (terminal_width > 80)\n-        for (size_t i = 0; i < columns; ++i)\n-            if (max_widths[i] > terminal_width / 2)\n-                max_widths[i] = terminal_width / 2;\n-\n     /// Names\n     for (size_t i = 0; i < columns; ++i)\n     {\n",
  "test_patch": "diff --git a/dbms/tests/performance/select_format.xml b/dbms/tests/performance/select_format.xml\nindex 609dbb6bca29..7ebbf87fc80b 100644\n--- a/dbms/tests/performance/select_format.xml\n+++ b/dbms/tests/performance/select_format.xml\n@@ -40,6 +40,7 @@\n                 <value>PrettyCompact</value>\n                 <value>PrettyCompactMonoBlock</value>\n                 <value>PrettyNoEscapes</value>\n+                <value>PrettySpace</value>\n                 <value>RowBinary</value>\n                 <value>Native</value>\n                 <value>XML</value>\n",
  "problem_statement": "PrettySpace format: infinite loop printing whitespaces\n```\r\ncreate table test_pretty_space_bug(property String,value String) Engine=TinyLog;\r\n\r\ninsert into test_pretty_space_bug values ('geoplugin_request','3.3.3.3'),('geoplugin_status','200'),('geoplugin_delay','1ms'),('geoplugin_credit','Some of the returned data includes GeoLite data created by MaxMind available from <a href=\\'http://www.maxmind.com\\'>http://www.maxmind.com</a>.'),('geoplugin_city','Seattle'),('geoplugin_region','Washington'),('geoplugin_regionCode','WA'),('geoplugin_regionName','Washington'),('geoplugin_areaCode',''),('geoplugin_dmaCode','819'),('geoplugin_countryCode','US'),('geoplugin_countryName','United States'),('geoplugin_inEU','0'),('geoplugin_euVATrate',''),('geoplugin_continentCode','NA'),('geoplugin_continentName','North America'),('geoplugin_latitude','47.6339'),('geoplugin_longitude','-122.3476'),('geoplugin_locationAccuracyRadius','1000'),('geoplugin_timezone','America/Los_Angeles'),('geoplugin_currencyCode','USD'),('geoplugin_currencySymbol','&#36;'),('geoplugin_currencySymbol_UTF8','$'),('geoplugin_currencyConverter','1');\r\n\r\nselect * from test_pretty_space_bug FORMAT PrettySpace;\r\n```\n",
  "hints_text": "",
  "created_at": "2019-06-07T21:13:01Z",
  "modified_files": [
    "dbms/src/Formats/PrettySpaceBlockOutputStream.cpp"
  ],
  "modified_test_files": [
    "dbms/tests/performance/select_format.xml"
  ]
}