{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 78854,
  "instance_id": "ClickHouse__ClickHouse-78854",
  "issue_numbers": [
    "78314"
  ],
  "base_commit": "268b034eb470737e053e28ba5b86bc4577432da1",
  "patch": "diff --git a/src/Dictionaries/getDictionaryConfigurationFromAST.cpp b/src/Dictionaries/getDictionaryConfigurationFromAST.cpp\nindex 32e18a6cf9d9..db779ad66065 100644\n--- a/src/Dictionaries/getDictionaryConfigurationFromAST.cpp\n+++ b/src/Dictionaries/getDictionaryConfigurationFromAST.cpp\n@@ -81,6 +81,14 @@ void buildLifetimeConfiguration(\n     if (!lifetime)\n         return;\n \n+    if (lifetime->min_sec > lifetime->max_sec)\n+    {\n+        throw DB::Exception(\n+            ErrorCodes::BAD_ARGUMENTS,\n+            \"{} parameter 'MIN' must be less than or equal to 'MAX'\",\n+            lifetime->getID(0));\n+    }\n+\n     AutoPtr<Element> lifetime_element(doc->createElement(\"lifetime\"));\n     AutoPtr<Element> min_element(doc->createElement(\"min\"));\n     AutoPtr<Element> max_element(doc->createElement(\"max\"));\n@@ -136,6 +144,8 @@ void buildLayoutConfiguration(\n         }\n     }\n \n+    const auto is_ssd_cache_layout = layout->layout_type == \"ssd_cache\";\n+\n     for (const auto & param : layout->parameters->children)\n     {\n         const ASTPair * pair = param->as<ASTPair>();\n@@ -166,6 +176,17 @@ void buildLayoutConfiguration(\n                 value_field.getTypeName());\n         }\n \n+        if (is_ssd_cache_layout)\n+        {\n+            if (value_field.getType() == Field::Types::UInt64 && value_field.safeGet<::UInt64>() == 0)\n+            {\n+                throw DB::Exception(\n+                    ErrorCodes::BAD_ARGUMENTS,\n+                    \"{} parameter value should be positive number\",\n+                    layout->getID(0));\n+            }\n+        }\n+\n         AutoPtr<Element> layout_type_parameter_element(doc->createElement(pair->first));\n         AutoPtr<Text> value_to_append(doc->createTextNode(toString(value_field)));\n         layout_type_parameter_element->appendChild(value_to_append);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03405_ssd_cache_incorrect_min_max_lifetimes_and_block_size.reference b/tests/queries/0_stateless/03405_ssd_cache_incorrect_min_max_lifetimes_and_block_size.reference\nnew file mode 100644\nindex 000000000000..7b47fa15e6fa\n--- /dev/null\n+++ b/tests/queries/0_stateless/03405_ssd_cache_incorrect_min_max_lifetimes_and_block_size.reference\n@@ -0,0 +1,3 @@\n+BLOCK_SIZE is a negative value.\n+BLOCK_SIZE is zero.\n+WRITE_BUFFER_SIZE is zero.\ndiff --git a/tests/queries/0_stateless/03405_ssd_cache_incorrect_min_max_lifetimes_and_block_size.sql b/tests/queries/0_stateless/03405_ssd_cache_incorrect_min_max_lifetimes_and_block_size.sql\nnew file mode 100644\nindex 000000000000..8a20d1146dc4\n--- /dev/null\n+++ b/tests/queries/0_stateless/03405_ssd_cache_incorrect_min_max_lifetimes_and_block_size.sql\n@@ -0,0 +1,18 @@\n+-- Tags: no-ordinary-database\n+\n+-- Tests that various conditions are checked during creation of a ssd_cache layout of a dictionary\n+\n+-- Github issue #78314\n+\n+DROP DICTIONARY IF EXISTS dx;\n+\n+SELECT 'BLOCK_SIZE is a negative value.';\n+CREATE DICTIONARY dx (col Int64 default null) PRIMARY KEY (col) SOURCE(NULL()) LAYOUT(SSD_CACHE(BLOCK_SIZE -1)) LIFETIME(1); -- { serverError BAD_ARGUMENTS }\n+\n+SELECT 'BLOCK_SIZE is zero.';\n+CREATE DICTIONARY dx (col Int64 default null) PRIMARY KEY (col) SOURCE(NULL()) LAYOUT(SSD_CACHE(BLOCK_SIZE 0)) LIFETIME(1); -- { serverError BAD_ARGUMENTS }\n+\n+SELECT 'WRITE_BUFFER_SIZE is zero.';\n+CREATE DICTIONARY dx (col Int64 default null) PRIMARY KEY (col) SOURCE(NULL()) LAYOUT(SSD_CACHE(WRITE_BUFFER_SIZE 0)) LIFETIME(1); -- { serverError BAD_ARGUMENTS }\n+\n+DROP DICTIONARY IF EXISTS dx;\ndiff --git a/tests/queries/0_stateless/03406_dictionary_incorrect_min_max_lifetimes.reference b/tests/queries/0_stateless/03406_dictionary_incorrect_min_max_lifetimes.reference\nnew file mode 100644\nindex 000000000000..601280c38546\n--- /dev/null\n+++ b/tests/queries/0_stateless/03406_dictionary_incorrect_min_max_lifetimes.reference\n@@ -0,0 +1,3 @@\n+MIN is a negative value.\n+MAX is a negative value.\n+MIN is greater than MAX.\ndiff --git a/tests/queries/0_stateless/03406_dictionary_incorrect_min_max_lifetimes.sql b/tests/queries/0_stateless/03406_dictionary_incorrect_min_max_lifetimes.sql\nnew file mode 100644\nindex 000000000000..4de8843907e3\n--- /dev/null\n+++ b/tests/queries/0_stateless/03406_dictionary_incorrect_min_max_lifetimes.sql\n@@ -0,0 +1,22 @@\n+-- Tags: no-ordinary-database\n+\n+-- Tests that various lifetime conditions are checked during creation of a dictionary\n+\n+-- Github issue #78314\n+\n+DROP DICTIONARY IF EXISTS dx;\n+DROP TABLE IF EXISTS tbl;\n+\n+CREATE TABLE tbl (col Int) ENGINE = Memory;\n+\n+SELECT 'MIN is a negative value.';\n+CREATE DICTIONARY dx (col Int DEFAULT 1) PRIMARY KEY (col) SOURCE(CLICKHOUSE(TABLE 'tbl')) LAYOUT(HASHED_ARRAY()) LIFETIME(MIN -1 MAX 0); -- { clientError SYNTAX_ERROR }\n+\n+SELECT 'MAX is a negative value.';\n+CREATE DICTIONARY dx (col Int DEFAULT 1) PRIMARY KEY (col) SOURCE(CLICKHOUSE(TABLE 'tbl')) LAYOUT(HASHED_ARRAY()) LIFETIME(MIN 0 MAX -1); -- { clientError SYNTAX_ERROR }\n+\n+SELECT 'MIN is greater than MAX.';\n+CREATE DICTIONARY dx (col Int DEFAULT 1) PRIMARY KEY (col) SOURCE(CLICKHOUSE(TABLE 'tbl')) LAYOUT(HASHED_ARRAY()) LIFETIME(MIN 1 MAX 0); -- { serverError BAD_ARGUMENTS }\n+\n+DROP DICTIONARY IF EXISTS dx;\n+DROP TABLE IF EXISTS tbl;\n",
  "problem_statement": "Another division by 0\n### Describe the bug\n\nThis time happens with dictionaries with `block_size` 0\n\n### How to reproduce\n\nRun Fiddle: https://fiddle.clickhouse.com/ac7905e3-ea7d-40db-9ef8-f1f94ec72656\n\n### Error message and/or stacktrace\n\nStack trace:\n\n```\n#0  0x00005555670e03f5 in DB::parseSSDCacheStorageConfiguration (config=..., full_name=..., layout_type=..., dictionary_layout_prefix=..., dict_lifetime=...) at src/Dictionaries/registerCacheDictionaries.cpp:110\n#1  0x00005555671054b1 in DB::createCacheDictionaryLayout<(DB::DictionaryKeyType)0, true> (full_name=..., dict_struct=..., config=..., config_prefix=..., source_ptr=..., global_context=..., created_from_ddl=<optimized out>)\n    at src/Dictionaries/registerCacheDictionaries.cpp:225\n#2  0x00005555670e1175 in DB::registerDictionaryCache(DB::DictionaryFactory&)::$_2::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool) const (source_ptr=..., \n    global_context=..., this=<optimized out>, full_name=..., dict_struct=..., config=..., config_prefix=..., created_from_ddl=<optimized out>) at src/Dictionaries/registerCacheDictionaries.cpp:293\n#3  std::__1::__invoke[abi:se190107]<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_2&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool>(DB::registerDictionaryCache(DB::DictionaryFactory&)::$_2&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) (__args=<optimized out>, __args=<optimized out>, __f=..., __args=<optimized out>, \n    __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>) at contrib/llvm-project/libcxx/include/__type_traits/invoke.h:149\n#4  std::__1::__invoke_void_return_wrapper<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> >, false>::__call[abi:se190107]<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_2&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool>(DB::registerDictionaryCache(DB::DictionaryFactory&)::$_2&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) (__args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>)\n    at contrib/llvm-project/libcxx/include/__type_traits/invoke.h:216\n#5  std::__1::__function::__default_alloc_func<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_2, std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator()[abi:se190107](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) (\n    __arg=<optimized out>, __arg=<optimized out>, this=<optimized out>, __arg=<optimized out>, __arg=<optimized out>, __arg=<optimized out>, __arg=<optimized out>, __arg=<optimized out>)\n    at contrib/llvm-project/libcxx/include/__functional/function.h:210\n#6  std::__1::__function::__policy_invoker<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::__call_impl[abi:se190107]<std::__1::__function::__default_alloc_func<DB::registerDictionaryCache(DB::DictionaryFactory&)::$_2, std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)> >(std::__1::__function::__policy_storage const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool) (__buf=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>)\n    at contrib/llvm-project/libcxx/include/__functional/function.h:610\n#7  0x00005555681c249d in std::__1::__function::__policy_func<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> > (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator()[abi:se190107](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>&&, std::__1::shared_ptr<DB::Context const>&&, bool&&) const (this=0x7ffeb0451c80, __args=<optimized out>, \n    __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>) at contrib/llvm-project/libcxx/include/__functional/function.h:716\n#8  std::__1::function<std::__1::unique_ptr<DB::IDictionary, std::__1::default_delete<DB::IDictionary> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDictionarySource>, std::__1::shared_ptr<DB::Context const>, bool)>::operator() (\n    this=0x7ffeb0451c80, __arg=<optimized out>, __arg=<optimized out>, __arg=<optimized out>, __arg=<optimized out>, __arg=<optimized out>, __arg=<optimized out>, __arg=<optimized out>)\n    at contrib/llvm-project/libcxx/include/__functional/function.h:989\n#9  DB::DictionaryFactory::create (this=0x555575b692b8 <DB::DictionaryFactory::instance()::ret>, name=..., config=..., config_prefix=..., global_context=..., created_from_ddl=<optimized out>)\n    at src/Dictionaries/DictionaryFactory.cpp:58\n#10 0x0000555569cf94a4 in DB::ExternalDictionariesLoader::createObject (this=<optimized out>, name=..., config=..., key_in_config=..., repository_name=...) at src/Interpreters/ExternalDictionariesLoader.cpp:47\n#11 0x0000555569d05348 in DB::ExternalLoader::createOrCloneObject (this=0x7ffeb0451c80, previous_version=..., name=..., config=...) at src/Interpreters/ExternalLoader.cpp:1512\n#12 DB::ExternalLoader::LoadingDispatcher::loadSingleObject (this=this@entry=0x7ffd35b7e900, name=..., config=..., previous_version=...) at src/Interpreters/ExternalLoader.cpp:1043\n#13 0x0000555569d03ddd in DB::ExternalLoader::LoadingDispatcher::doLoading (this=<optimized out>, name=..., loading_id=<optimized out>, forced_to_reload=<optimized out>, min_id_to_finish_loading_dependencies_=<optimized out>, \n    async=<optimized out>, thread_group=...) at src/Interpreters/ExternalLoader.cpp:998\n#14 0x0000555569d07df4 in std::__1::__invoke[abi:se190107]<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&, std::__1::shared_ptr<DB::ThreadGroup>&, void>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&, std::__1::shared_ptr<DB::ThreadGroup>&) (\n    __a0=@0x7ffd259ebe10: 0x7ffd35b7e900, __args=..., __args=..., __args=..., __args=..., __args=..., __args=..., __f=<optimized out>) at contrib/llvm-project/libcxx/include/__type_traits/invoke.h:117\n#15 std::__1::__apply_tuple_impl[abi:se190107]<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup> >&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup> >&, std::__1::__tuple_indices<0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul>) (__t=..., __f=<optimized out>) at contrib/llvm-project/libcxx/include/tuple:1354\n#16 std::__1::apply[abi:se190107]<void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup> >&>(void (DB::ExternalLoader::LoadingDispatcher::*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup>), std::__1::tuple<DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup> >&) (__t=..., \n    __f=<optimized out>) at contrib/llvm-project/libcxx/include/tuple:1358\n#17 ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<void (DB::ExternalLoader::LoadingDispatcher::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool, std::__1::shared_ptr<DB::ThreadGroup> >(void (DB::ExternalLoader::LoadingDispatcher::*&&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long&, bool&, unsigned long&, bool&&, std::__1::shared_ptr<DB::ThreadGroup>&&)::{lambda()#1}::operator()() (this=0x7ffeb371dc00) at src/Common/ThreadPool.h:312\n#18 0x0000555565134632 in std::__1::__function::__policy_func<void ()>::operator()[abi:se190107]() const (this=0x7ffd259ec210) at contrib/llvm-project/libcxx/include/__functional/function.h:716\n#19 std::__1::function<void()>::operator() (this=0x7ffd259ec210) at contrib/llvm-project/libcxx/include/__functional/function.h:989\n#20 ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::worker (this=0x7ffeb36da060) at src/Common/ThreadPool.cpp:809\n#21 0x000055556513a920 in std::__1::__invoke[abi:se190107]<void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*, , void>(void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*&&) (__f=<optimized out>, __a0=<optimized out>) at contrib/llvm-project/libcxx/include/__type_traits/invoke.h:117\n#22 std::__1::__thread_execute[abi:se190107]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*, 2ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*>&, std::__1::__tuple_indices<2ul>) (__t=...) at contrib/llvm-project/libcxx/include/__thread/thread.h:192\n#23 std::__1::__thread_proxy[abi:se190107]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*> >(void*) (__vp=<optimized out>) at contrib/llvm-project/libcxx/include/__thread/thread.h:201\n#24 0x00007ffff7ca1e2e in start_thread (arg=<optimized out>) at nptl/pthread_create.c:447\n#25 0x00007ffff7d33a4c in __GI___clone3 () at .sysdeps/unix/sysv/linux/x86_64/clone3.S:78\n```\n",
  "hints_text": "Same happens with `WRITE_BUFFER_SIZE`: https://fiddle.clickhouse.com/d10be2f2-1276-413c-9310-206b6c2ec785\nAnother small issue: max lifetime value smaller than min:\n\n```sql\nCREATE TABLE t0 (c0 Int) ENGINE = Memory;\nCREATE DICTIONARY d0 (c0 Int DEFAULT 1) PRIMARY KEY (c0) SOURCE(CLICKHOUSE(TABLE 't0')) LAYOUT(HASHED_ARRAY()) LIFETIME(MIN 1 MAX 0);\nSELECT 1 FROM d0;\n```\nWith UBSAN:\n```\n[ip-172-31-18-156] 2025.03.27 17:03:11.352782 [ 1361414 ] <Fatal> BaseDaemon: ########################################\n[ip-172-31-18-156] 2025.03.27 17:03:11.352856 [ 1361414 ] <Fatal> BaseDaemon: (version 25.4.1.1317 (official build), build id: B2686AA23D95C41E2FCEC7CD5CD3AA84C7B7326E, git hash: 3ddea7c2e0ac8f6874be66980acedc8a43e67156) (from thread 1361398) (query_id: df652b49-307e-4134-9603-e87a0b013ace) (query: SELECT 1 FROM d0) Received signal sanitizer trap (-3)\n[ip-172-31-18-156] 2025.03.27 17:03:11.352891 [ 1361414 ] <Fatal> BaseDaemon: Sanitizer trap.\n[ip-172-31-18-156] 2025.03.27 17:03:11.352924 [ 1361414 ] <Fatal> BaseDaemon: Stack trace: 0x000055557901c543 0x0000555579521b8b 0x000055556d1dad30 0x000055556d1e55c7 0x00005555830fba65 0x00005555830ebdbe 0x00005555830f6c4c 0x00005555830fd8b1 0x00005555790fe82f 0x00005555791064ca 0x00007ffff7ca1e2e 0x00007ffff7d33a4c\n[ip-172-31-18-156] 2025.03.27 17:03:11.363485 [ 1361414 ] <Fatal> BaseDaemon: 0.0. inlined from src/Common/StackTrace.cpp:386: StackTrace::tryCapture()\n[ip-172-31-18-156] 2025.03.27 17:03:11.363521 [ 1361414 ] <Fatal> BaseDaemon: 0. src/Common/StackTrace.cpp:61: StackTrace::StackTrace() @ 0x0000000023ac8543\n[ip-172-31-18-156] 2025.03.27 17:03:11.379720 [ 1361414 ] <Fatal> BaseDaemon: 1. src/Common/SignalHandlers.cpp:212: sanitizerDeathCallback() @ 0x0000000023fcdb8b\n[ip-172-31-18-156] 2025.03.27 17:03:11.432222 [ 1361414 ] <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0x0000000017c86d30\n[ip-172-31-18-156] 2025.03.27 17:03:11.460898 [ 1361414 ] <Fatal> BaseDaemon: 3. ? @ 0x0000000017c915c7\n[ip-172-31-18-156] 2025.03.27 17:03:11.482464 [ 1361414 ] <Fatal> BaseDaemon: 4.0. inlined from contrib/llvm-project/libcxx/include/__chrono/duration.h:92: std::chrono::__duration_cast<std::chrono::duration<long long, std::ratio<1l, 1l>>, std::chrono::duration<long long, std::ratio<1l, 1000000l>>, std::ratio<1000000l, 1l>, false, true>::operator()[abi:ne190107](std::chrono::duration<long long, std::ratio<1l, 1l>> const&) const\n[ip-172-31-18-156] 2025.03.27 17:03:11.482509 [ 1361414 ] <Fatal> BaseDaemon: 4.1. inlined from contrib/llvm-project/libcxx/include/__chrono/duration.h:107: std::chrono::duration<long long, std::ratio<1l, 1000000l>> std::chrono::duration_cast[abi:ne190107]<std::chrono::duration<long long, std::ratio<1l, 1000000l>>, long long, std::ratio<1l, 1l>, 0>(std::chrono::duration<long long, std::ratio<1l, 1l>> const&)\n[ip-172-31-18-156] 2025.03.27 17:03:11.482551 [ 1361414 ] <Fatal> BaseDaemon: 4.2. inlined from contrib/llvm-project/libcxx/include/__chrono/duration.h:220: duration<long long, std::ratio<1L, 1L>, 0>\n[ip-172-31-18-156] 2025.03.27 17:03:11.482610 [ 1361414 ] <Fatal> BaseDaemon: 4.3. inlined from contrib/llvm-project/libcxx/include/__chrono/duration.h:397: std::common_type<std::chrono::duration<long long, std::ratio<1l, 1000000l>>, std::chrono::duration<long long, std::ratio<1l, 1l>>>::type std::chrono::operator+[abi:ne190107]<long long, std::ratio<1l, 1000000l>, long long, std::ratio<1l, 1l>>(std::chrono::duration<long long, std::ratio<1l, 1000000l>> const&, std::chrono::duration<long long, std::ratio<1l, 1l>> const&)\n[ip-172-31-18-156] 2025.03.27 17:03:11.482767 [ 1361414 ] <Fatal> BaseDaemon: 4.4. inlined from contrib/llvm-project/libcxx/include/__chrono/time_point.h:184: std::chrono::time_point<std::chrono::system_clock, std::common_type<std::chrono::duration<long long, std::ratio<1l, 1000000l>>, std::chrono::duration<long long, std::ratio<1l, 1l>>>::type> std::chrono::operator+[abi:ne190107]<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1l, 1000000l>>, long long, std::ratio<1l, 1l>>(std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1l, 1000000l>>> const&, std::chrono::duration<long long, std::ratio<1l, 1l>> const&)\n[ip-172-31-18-156] 2025.03.27 17:03:11.482807 [ 1361414 ] <Fatal> BaseDaemon: 4. src/Interpreters/ExternalLoader.cpp:0: DB::ExternalLoader::LoadingDispatcher::calculateNextUpdateTime(std::shared_ptr<DB::IExternalLoadable const> const&, unsigned long) const @ 0x000000002dba7a65\n[ip-172-31-18-156] 2025.03.27 17:03:11.516406 [ 1361414 ] <Fatal> BaseDaemon: 5. src/Interpreters/ExternalLoader.cpp:1075: DB::ExternalLoader::LoadingDispatcher::saveResultOfLoadingSingleObject(String const&, unsigned long, std::shared_ptr<DB::IExternalLoadable const>, std::shared_ptr<DB::IExternalLoadable>, std::exception_ptr, unsigned long, DB::(anonymous namespace)::LoadingGuardForAsyncLoad const&) @ 0x000000002db97dbe\n[ip-172-31-18-156] 2025.03.27 17:03:11.547674 [ 1361414 ] <Fatal> BaseDaemon: 6. src/Interpreters/ExternalLoader.cpp:1005: DB::ExternalLoader::LoadingDispatcher::doLoading(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>) @ 0x000000002dba2c4c\n[ip-172-31-18-156] 2025.03.27 17:03:11.570244 [ 1361414 ] <Fatal> BaseDaemon: 7.0. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:117: decltype(*std::declval<DB::ExternalLoader::LoadingDispatcher*&>().*std::declval<void (DB::ExternalLoader::LoadingDispatcher::*&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>)>()(std::declval<String&>(), std::declval<unsigned long&>(), std::declval<bool&>(), std::declval<unsigned long&>(), std::declval<bool&>(), std::declval<std::shared_ptr<DB::ThreadGroup>&>())) std::__invoke[abi:ne190107]<void (DB::ExternalLoader::LoadingDispatcher::*&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*&, String&, unsigned long&, bool&, unsigned long&, bool&, std::shared_ptr<DB::ThreadGroup>&, void>(void (DB::ExternalLoader::LoadingDispatcher::*&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*&, String&, unsigned long&, bool&, unsigned long&, bool&, std::shared_ptr<DB::ThreadGroup>&)\n[ip-172-31-18-156] 2025.03.27 17:03:11.570290 [ 1361414 ] <Fatal> BaseDaemon: 7.1. inlined from contrib/llvm-project/libcxx/include/tuple:1354: decltype(auto) std::__apply_tuple_impl[abi:ne190107]<void (DB::ExternalLoader::LoadingDispatcher::*&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), std::tuple<DB::ExternalLoader::LoadingDispatcher*, String, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>>&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul>(void (DB::ExternalLoader::LoadingDispatcher::*&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), std::tuple<DB::ExternalLoader::LoadingDispatcher*, String, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>>&, std::__tuple_indices<0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul>)\n[ip-172-31-18-156] 2025.03.27 17:03:11.570346 [ 1361414 ] <Fatal> BaseDaemon: 7.2. inlined from contrib/llvm-project/libcxx/include/tuple:1358: decltype(auto) std::apply[abi:ne190107]<void (DB::ExternalLoader::LoadingDispatcher::*&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), std::tuple<DB::ExternalLoader::LoadingDispatcher*, String, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>>&>(void (DB::ExternalLoader::LoadingDispatcher::*&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), std::tuple<DB::ExternalLoader::LoadingDispatcher*, String, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>>&)\n[ip-172-31-18-156] 2025.03.27 17:03:11.570388 [ 1361414 ] <Fatal> BaseDaemon: 7. src/Common/ThreadPool.h:312: ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<void (DB::ExternalLoader::LoadingDispatcher::*)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*, String&, unsigned long&, bool&, unsigned long&, bool, std::shared_ptr<DB::ThreadGroup>>(void (DB::ExternalLoader::LoadingDispatcher::*&&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*&&, String&, unsigned long&, bool&, unsigned long&, bool&&, std::shared_ptr<DB::ThreadGroup>&&)::'lambda'()::operator()() @ 0x000000002dba98b1\n[ip-172-31-18-156] 2025.03.27 17:03:11.581400 [ 1361414 ] <Fatal> BaseDaemon: 8.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:716: ?\n[ip-172-31-18-156] 2025.03.27 17:03:11.581430 [ 1361414 ] <Fatal> BaseDaemon: 8.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:989: ?\n[ip-172-31-18-156] 2025.03.27 17:03:11.581464 [ 1361414 ] <Fatal> BaseDaemon: 8. src/Common/ThreadPool.cpp:809: ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000023baa82f\n[ip-172-31-18-156] 2025.03.27 17:03:11.601147 [ 1361414 ] <Fatal> BaseDaemon: 9.0. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:117: decltype(*std::declval<ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>().*std::declval<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)()>()()) std::__invoke[abi:ne190107]<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, void>(void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*&&)\n[ip-172-31-18-156] 2025.03.27 17:03:11.601185 [ 1361414 ] <Fatal> BaseDaemon: 9.1. inlined from contrib/llvm-project/libcxx/include/__thread/thread.h:192: void std::__thread_execute[abi:ne190107]<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, 2ul>(std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>&, std::__tuple_indices<2ul>)\n[ip-172-31-18-156] 2025.03.27 17:03:11.601227 [ 1361414 ] <Fatal> BaseDaemon: 9. contrib/llvm-project/libcxx/include/__thread/thread.h:201: void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x0000000023bb24ca\n[ip-172-31-18-156] 2025.03.27 17:03:11.601261 [ 1361414 ] <Fatal> BaseDaemon: 10. ? @ 0x00007ffff7ca1e2e\n[ip-172-31-18-156] 2025.03.27 17:03:11.601295 [ 1361414 ] <Fatal> BaseDaemon: 11. ? @ 0x00007ffff7d33a4c\n[ip-172-31-18-156] 2025.03.27 17:03:11.863950 [ 1361414 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 3A08C3315C40960E1146A98A33BE810E)\n[ip-172-31-18-156] 2025.03.27 17:03:12.083901 [ 1361414 ] <Fatal> BaseDaemon: Changed settings: allow_reorder_prewhere_conditions = true, allow_suspicious_low_cardinality_types = true, allow_suspicious_fixed_string_types = true, allow_suspicious_indices = true, allow_suspicious_ttl_expressions = true, allow_suspicious_variant_types = true, allow_suspicious_primary_key = true, allow_suspicious_types_in_group_by = true, allow_suspicious_types_in_order_by = true, allow_not_comparable_types_in_order_by = true, allow_not_comparable_types_in_comparison_functions = true, allow_nonconst_timezone_arguments = true, allow_nondeterministic_optimize_skip_unused_shards = true, allow_distributed_ddl = true, allow_suspicious_codecs = true, enable_zstd_qat_codec = true, enable_deflate_qpl_codec = true, max_execution_time = 25., allow_custom_error_code_in_throwif = true, allow_ddl = true, allow_introspection_functions = true, allow_execute_multiif_columnar = true, allow_drop_detached = true, allow_materialized_view_with_bad_select = true, allow_settings_after_format_in_insert = true, allow_nondeterministic_mutations = true, allow_non_metadata_alters = true, allow_experimental_kafka_offsets_storage_in_keeper = true, allow_unrestricted_reads_from_keeper = true, allow_deprecated_database_ordinary = true, allow_deprecated_syntax_for_merge_tree = true, allow_get_client_http_header = true, allow_create_index_without_type = true, allow_named_collection_override_by_default = true, allow_deprecated_error_prone_window_functions = true, allow_deprecated_snowflake_conversion_functions = true, allow_experimental_parallel_reading_from_replicas = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_two_replicas', parallel_replicas_for_non_replicated_merge_tree = true, parallel_replicas_for_cluster_engines = false, allow_experimental_analyzer = true, allow_experimental_variant_type = true, allow_experimental_dynamic_type = true, allow_experimental_json_type = true, allow_experimental_materialized_postgresql_table = true, allow_experimental_funnel_functions = true, allow_experimental_nlp_functions = true, allow_experimental_hash_functions = true, allow_experimental_object_type = true, allow_experimental_time_series_table = true, allow_experimental_vector_similarity_index = true, allow_experimental_codecs = true, allow_experimental_shared_set_join = true, allow_experimental_join_right_table_sorting = true, allow_experimental_statistics = true, allow_archive_path_syntax = true, allow_experimental_inverted_index = true, allow_experimental_full_text_index = true, allow_experimental_join_condition = true, allow_experimental_live_view = true, allow_experimental_window_view = true, allow_experimental_database_materialized_postgresql = true, allow_experimental_database_iceberg = true, allow_experimental_kusto_dialect = true, allow_experimental_prql_dialect = true, allow_experimental_ts_to_grid_aggregate_function = true, allow_experimental_bfloat16_type = true, type_json_skip_duplicated_paths = true\n```",
  "created_at": "2025-04-08T17:24:01Z"
}