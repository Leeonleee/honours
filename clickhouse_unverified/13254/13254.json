{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 13254,
  "instance_id": "ClickHouse__ClickHouse-13254",
  "issue_numbers": [
    "12491"
  ],
  "base_commit": "1e91238466ab1a931706429582ebf5ce22e94738",
  "patch": "diff --git a/src/AggregateFunctions/AggregateFunctionUniq.h b/src/AggregateFunctions/AggregateFunctionUniq.h\nindex 920232ee92cb..8621e0d5db9f 100644\n--- a/src/AggregateFunctions/AggregateFunctionUniq.h\n+++ b/src/AggregateFunctions/AggregateFunctionUniq.h\n@@ -276,7 +276,8 @@ class AggregateFunctionUniqVariadic final : public IAggregateFunctionDataHelper<\n \n     void add(AggregateDataPtr place, const IColumn ** columns, size_t row_num, Arena *) const override\n     {\n-        this->data(place).set.insert(typename Data::Set::value_type(UniqVariadicHash<is_exact, argument_is_tuple>::apply(num_args, columns, row_num)));\n+        this->data(place).set.insert(typename Data::Set::value_type(\n+            UniqVariadicHash<is_exact, argument_is_tuple>::apply(num_args, columns, row_num)));\n     }\n \n     void merge(AggregateDataPtr place, ConstAggregateDataPtr rhs, Arena *) const override\ndiff --git a/src/Common/HashTable/HashMap.h b/src/Common/HashTable/HashMap.h\nindex 3ecbd9f263c3..e09f60c4294a 100644\n--- a/src/Common/HashTable/HashMap.h\n+++ b/src/Common/HashTable/HashMap.h\n@@ -61,9 +61,9 @@ struct HashMapCell\n     /// Get the key (internally).\n     static const Key & getKey(const value_type & value) { return value.first; }\n \n-    bool keyEquals(const Key & key_) const { return value.first == key_; }\n-    bool keyEquals(const Key & key_, size_t /*hash_*/) const { return value.first == key_; }\n-    bool keyEquals(const Key & key_, size_t /*hash_*/, const State & /*state*/) const { return value.first == key_; }\n+    bool keyEquals(const Key & key_) const { return bitEquals(value.first, key_); }\n+    bool keyEquals(const Key & key_, size_t /*hash_*/) const { return bitEquals(value.first, key_); }\n+    bool keyEquals(const Key & key_, size_t /*hash_*/, const State & /*state*/) const { return bitEquals(value.first, key_); }\n \n     void setHash(size_t /*hash_value*/) {}\n     size_t getHash(const Hash & hash) const { return hash(value.first); }\n@@ -120,8 +120,8 @@ struct HashMapCellWithSavedHash : public HashMapCell<Key, TMapped, Hash, TState>\n \n     using Base::Base;\n \n-    bool keyEquals(const Key & key_) const { return this->value.first == key_; }\n-    bool keyEquals(const Key & key_, size_t hash_) const { return saved_hash == hash_ && this->value.first == key_; }\n+    bool keyEquals(const Key & key_) const { return bitEquals(this->value.first, key_); }\n+    bool keyEquals(const Key & key_, size_t hash_) const { return saved_hash == hash_ && bitEquals(this->value.first, key_); }\n     bool keyEquals(const Key & key_, size_t hash_, const typename Base::State &) const { return keyEquals(key_, hash_); }\n \n     void setHash(size_t hash_value) { saved_hash = hash_value; }\ndiff --git a/src/Common/HashTable/HashSet.h b/src/Common/HashTable/HashSet.h\nindex c79e05073fcf..19dba189ddc8 100644\n--- a/src/Common/HashTable/HashSet.h\n+++ b/src/Common/HashTable/HashSet.h\n@@ -76,8 +76,8 @@ struct HashSetCellWithSavedHash : public HashTableCell<Key, Hash, TState>\n     HashSetCellWithSavedHash() : Base() {}\n     HashSetCellWithSavedHash(const Key & key_, const typename Base::State & state) : Base(key_, state) {}\n \n-    bool keyEquals(const Key & key_) const { return this->key == key_; }\n-    bool keyEquals(const Key & key_, size_t hash_) const { return saved_hash == hash_ && this->key == key_; }\n+    bool keyEquals(const Key & key_) const { return bitEquals(this->key, key_); }\n+    bool keyEquals(const Key & key_, size_t hash_) const { return saved_hash == hash_ && bitEquals(this->key, key_); }\n     bool keyEquals(const Key & key_, size_t hash_, const typename Base::State &) const { return keyEquals(key_, hash_); }\n \n     void setHash(size_t hash_value) { saved_hash = hash_value; }\ndiff --git a/src/Common/HashTable/HashTable.h b/src/Common/HashTable/HashTable.h\nindex 528e719c05b9..5c8e7917eb06 100644\n--- a/src/Common/HashTable/HashTable.h\n+++ b/src/Common/HashTable/HashTable.h\n@@ -75,6 +75,25 @@ void set(T & x) { x = 0; }\n \n }\n \n+\n+/** Numbers are compared bitwise.\n+  * Complex types are compared by operator== as usual (this is important if there are gaps).\n+  *\n+  * This is needed if you use floats as keys. They are compared by bit equality.\n+  * Otherwise the invariants in hash table probing do not met when NaNs are present.\n+  */\n+template <typename T>\n+inline bool bitEquals(T && a, T && b)\n+{\n+    using RealT = std::decay_t<T>;\n+\n+    if constexpr (std::is_floating_point_v<RealT>)\n+        return 0 == memcmp(&a, &b, sizeof(RealT));  /// Note that memcmp with constant size is compiler builtin.\n+    else\n+        return a == b;\n+}\n+\n+\n /**\n   * getKey/Mapped -- methods to get key/\"mapped\" values from the LookupResult returned by find() and\n   * emplace() methods of HashTable. Must not be called for a null LookupResult.\n@@ -150,9 +169,9 @@ struct HashTableCell\n     static const Key & getKey(const value_type & value) { return value; }\n \n     /// Are the keys at the cells equal?\n-    bool keyEquals(const Key & key_) const { return key == key_; }\n-    bool keyEquals(const Key & key_, size_t /*hash_*/) const { return key == key_; }\n-    bool keyEquals(const Key & key_, size_t /*hash_*/, const State & /*state*/) const { return key == key_; }\n+    bool keyEquals(const Key & key_) const { return bitEquals(key, key_); }\n+    bool keyEquals(const Key & key_, size_t /*hash_*/) const { return bitEquals(key, key_); }\n+    bool keyEquals(const Key & key_, size_t /*hash_*/, const State & /*state*/) const { return bitEquals(key, key_); }\n \n     /// If the cell can remember the value of the hash function, then remember it.\n     void setHash(size_t /*hash_value*/) {}\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01428_hash_set_nan_key.reference b/tests/queries/0_stateless/01428_hash_set_nan_key.reference\nnew file mode 100644\nindex 000000000000..6bd552c8e41e\n--- /dev/null\n+++ b/tests/queries/0_stateless/01428_hash_set_nan_key.reference\n@@ -0,0 +1,7 @@\n+1\n+1\n+nan\n+nan\n+[nan]\n+nan\n+10\ndiff --git a/tests/queries/0_stateless/01428_hash_set_nan_key.sql b/tests/queries/0_stateless/01428_hash_set_nan_key.sql\nnew file mode 100644\nindex 000000000000..0408e30070a3\n--- /dev/null\n+++ b/tests/queries/0_stateless/01428_hash_set_nan_key.sql\n@@ -0,0 +1,10 @@\n+SELECT uniqExact(nan) FROM numbers(1000);\n+SELECT uniqExact(number % inf) FROM numbers(1000);\n+SELECT sumDistinct(number % inf) FROM numbers(1000);\n+SELECT DISTINCT number % inf FROM numbers(1000);\n+\n+SELECT topKWeightedMerge(1)(initializeAggregation('topKWeightedState(1)', nan, arrayJoin(range(10))));\n+\n+select number % inf k from numbers(256) group by k;\n+\n+SELECT uniqExact(reinterpretAsFloat64(reinterpretAsFixedString(reinterpretAsUInt64(reinterpretAsFixedString(nan)) + number))) FROM numbers(10);\n",
  "problem_statement": "topKWeightedState with nan: emplaceNonZeroImpl: Assertion `!buf[new_place].isZero(*this)' failed\n```\r\nSELECT topKWeightedMergeState(1)(initializeAggregation('topKWeightedState(1)', nan, arrayJoin(range(10))))\r\n\r\n\r\nclickhouse-server: /home/akuzm/ch4/ch/src/Common/HashTable/HashTable.h:817: void HashTable<double, HashMapCellWithSavedHash<double, DB::SpaceSaving<double, HashCRC32<DB::Float64> >::Counter *, HashCRC32<DB::Float64>, HashTableNoState>, HashCRC32<DB::Float64>, HashTableGrower<4>, AllocatorWithStackMemory<Allocator<true, true>, 384, 1> >::emplaceNonZeroImpl(size_t, KeyHolder &&, HashTable::LookupResult &, bool &, size_t) [Key = double, Cell = HashMapCellWithSavedHash<double, DB::SpaceSaving<double, HashCRC32<DB::Float64> >::Counter *, HashCRC32<DB::Float64>, HashTableNoState>, Hash = HashCRC32<DB::Float64>, Grower = HashTableGrower<4>, Allocator = AllocatorWithStackMemory<Allocator<true, true>, 384, 1>, KeyHolder = const double &]: Assertion `!buf[new_place].isZero(*this)' failed.\r\n2020.07.14 17:00:30.322621 [ 155916 ] {} <Trace> BaseDaemon: Received signal 6\r\n2020.07.14 17:00:30.323015 [ 155999 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.07.14 17:00:30.323536 [ 155999 ] {} <Fatal> BaseDaemon: (version 20.7.1.1, build id: F176DE2A5C050ABF) (from thread 155986) (query_id: 450762ad-4b6a-4838-855c-ce533020749a) Received signal Aborted (6)\r\n2020.07.14 17:00:30.323670 [ 155999 ] {} <Fatal> BaseDaemon: \r\n2020.07.14 17:00:30.323857 [ 155999 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f14ac2ab18b 0x7f14ac28a859 0x7f14ac28a729 0x7f14ac29bf36 0x7f14aba6bd46 0x7f14aba6c37f 0x7f14aba7fc2a 0x7f14ab11793e 0x7f14ab117bc6 0x7f149f23eb01 0x7f149f23fd24 0x7f149b0cd450 0x7f149b0cb7b1 0x7f149ba114cc 0x7f149ba11440 0x7f149ba113fd 0x7f149ba113ad 0x7f149ba1137d 0x7f149ba104ce 0x7f14b09f1575 0x7f14b09f1515 0x7f149ba0eb05 0x7f149ba0f329 0x7f149ba0d850 0x7f149ba0cf36 0x7f149ba3ab5d 0x7f149ba3aac2 0x7f149ba3aa4d\r\n2020.07.14 17:00:30.324231 [ 155999 ] {} <Fatal> BaseDaemon: 4. /build/glibc-YYA7BZ/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51: raise @ 0x4618b in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.14 17:00:30.324410 [ 155999 ] {} <Fatal> BaseDaemon: 5. /build/glibc-YYA7BZ/glibc-2.31/stdlib/abort.c:81: abort @ 0x25859 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.14 17:00:30.324640 [ 155999 ] {} <Fatal> BaseDaemon: 6. /build/glibc-YYA7BZ/glibc-2.31/intl/loadmsgcat.c:509: _nl_load_domain.cold @ 0x25729 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.14 17:00:30.324913 [ 155999 ] {} <Fatal> BaseDaemon: 7. ? @ 0x36f36 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.14 17:00:30.333668 [ 155999 ] {} <Fatal> BaseDaemon: 8. /home/akuzm/ch4/ch/src/Common/HashTable/HashTable.h:813: DB::SpaceSaving<double, HashCRC32<double> >::rebuildCounterMap() @ 0x2fcad46 in /home/akuzm/ch4/build-clang10/src/AggregateFunctions/libclickhouse_aggregate_functionsd.so\r\n2020.07.14 17:00:30.342397 [ 155999 ] {} <Fatal> BaseDaemon: 9. /home/akuzm/ch4/ch/src/Common/SpaceSaving.h:259: DB::SpaceSaving<double, HashCRC32<double> >::merge(DB::SpaceSaving<double, HashCRC32<double> > const&) @ 0x2fcb37f in /home/akuzm/ch4/build-clang10/src/AggregateFunctions/libclickhouse_aggregate_functionsd.so\r\n2020.07.14 17:00:30.350287 [ 155999 ] {} <Fatal> BaseDaemon: 10. /home/akuzm/ch4/ch/src/AggregateFunctions/AggregateFunctionTopK.h:68: DB::AggregateFunctionTopK<double, true>::merge(char*, char const*, DB::Arena*) const @ 0x2fdec2a in /home/akuzm/ch4/build-clang10/src/AggregateFunctions/libclickhouse_aggregate_functionsd.so\r\n2020.07.14 17:00:30.351818 [ 155999 ] {} <Fatal> BaseDaemon: 11. /home/akuzm/ch4/ch/src/AggregateFunctions/AggregateFunctionMerge.h:79: DB::AggregateFunctionMerge::add(char*, DB::IColumn const**, unsigned long, DB::Arena*) const @ 0x267693e in /home/akuzm/ch4/build-clang10/src/AggregateFunctions/libclickhouse_aggregate_functionsd.so\r\n2020.07.14 17:00:30.353264 [ 155999 ] {} <Fatal> BaseDaemon: 12. /home/akuzm/ch4/ch/src/AggregateFunctions/IAggregateFunction.h:209: DB::IAggregateFunctionHelper<DB::AggregateFunctionMerge>::addBatchSinglePlace(unsigned long, char*, DB::IColumn const**, DB::Arena*) const @ 0x2676bc6 in /home/akuzm/ch4/build-clang10/src/AggregateFunctions/libclickhouse_aggregate_functionsd.so\r\n2020.07.14 17:00:30.353877 [ 155999 ] {} <Fatal> BaseDaemon: 13. /home/akuzm/ch4/ch/src/Interpreters/Aggregator.cpp:576: DB::Aggregator::executeWithoutKeyImpl(char*&, unsigned long, DB::Aggregator::AggregateFunctionInstruction*, DB::Arena*) @ 0xe41b01 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n2020.07.14 17:00:30.354446 [ 155999 ] {} <Fatal> BaseDaemon: 14. /home/akuzm/ch4/ch/src/Interpreters/Aggregator.cpp:719: DB::Aggregator::executeOnBlock(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >, unsigned long, DB::AggregatedDataVariants&, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >&, std::__1::vector<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >, std::__1::allocator<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > > >&, bool&) @ 0xe42d24 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n2020.07.14 17:00:30.354953 [ 155999 ] {} <Fatal> BaseDaemon: 15. /home/akuzm/ch4/ch/src/Processors/Transforms/AggregatingTransform.cpp:524: DB::AggregatingTransform::consume(DB::Chunk) @ 0x222450 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_transformsd.so\r\n2020.07.14 17:00:30.355393 [ 155999 ] {} <Fatal> BaseDaemon: 16. /home/akuzm/ch4/ch/src/Processors/Transforms/AggregatingTransform.cpp:494: DB::AggregatingTransform::work() @ 0x2207b1 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_transformsd.so\r\n2020.07.14 17:00:30.356001 [ 155999 ] {} <Fatal> BaseDaemon: 17. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:155: DB::executeJob(DB::IProcessor*) @ 0x13d4cc in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.356684 [ 155999 ] {} <Fatal> BaseDaemon: 18. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:172: DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1::operator()() const @ 0x13d440 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.357438 [ 155999 ] {} <Fatal> BaseDaemon: 19. /home/akuzm/ch4/ch/contrib/libcxx/include/type_traits:3519: decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&) @ 0x13d3fd in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.358308 [ 155999 ] {} <Fatal> BaseDaemon: 20. /home/akuzm/ch4/ch/contrib/libcxx/include/__functional_base:349: void std::__1::__invoke_void_return_wrapper<void>::__call<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&) @ 0x13d3ad in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.359217 [ 155999 ] {} <Fatal> BaseDaemon: 21. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:1540: std::__1::__function::__alloc_func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1, std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1>, void ()>::operator()() @ 0x13d37d in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.359850 [ 155999 ] {} <Fatal> BaseDaemon: 22. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:1714: std::__1::__function::__func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1, std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1>, void ()>::operator()() @ 0x13c4ce in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.362338 [ 155999 ] {} <Fatal> BaseDaemon: 23. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:1867: std::__1::__function::__value_func<void ()>::operator()() const @ 0x1c8575 in /home/akuzm/ch4/build-clang10/programs/server/libclickhouse-server-libd.so\r\n2020.07.14 17:00:30.364166 [ 155999 ] {} <Fatal> BaseDaemon: 24. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:2473: std::__1::function<void ()>::operator()() const @ 0x1c8515 in /home/akuzm/ch4/build-clang10/programs/server/libclickhouse-server-libd.so\r\n2020.07.14 17:00:30.364681 [ 155999 ] {} <Fatal> BaseDaemon: 25. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:633: DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x13ab05 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.365095 [ 155999 ] {} <Fatal> BaseDaemon: 26. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:546: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0x13b329 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.365421 [ 155999 ] {} <Fatal> BaseDaemon: 27. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:812: DB::PipelineExecutor::executeImpl(unsigned long) @ 0x139850 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.365770 [ 155999 ] {} <Fatal> BaseDaemon: 28. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:479: DB::PipelineExecutor::execute(unsigned long) @ 0x138f36 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.366172 [ 155999 ] {} <Fatal> BaseDaemon: 29. /home/akuzm/ch4/ch/src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:79: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0x166b5d in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.366522 [ 155999 ] {} <Fatal> BaseDaemon: 30. /home/akuzm/ch4/ch/src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:101: DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const @ 0x166ac2 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.14 17:00:30.366863 [ 155999 ] {} <Fatal> BaseDaemon: 31. /home/akuzm/ch4/ch/contrib/libcxx/include/type_traits:3525: decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&) @ 0x166a4d in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n```\n",
  "hints_text": "Same problem with `uniqExact`, `sumDistinct`, etc.\r\n\r\n```\r\nselect uniqExact(number % inf) from numbers(255)\r\n\r\n\r\nclickhouse-server: /home/akuzm/ch4/ch/src/Common/HashTable/HashTable.h:817: void HashTable<double, HashTableCell<double, HashCRC32<DB::Float64>, HashTableNoState>, HashCRC32<DB::Float64>, HashTableGrower<4>, AllocatorWithStackMemory<Allocator<true, true>, 128, 1> >::emplaceNonZeroImpl(size_t, KeyHolder &&, HashTable::LookupResult &, bool &, size_t) [Key = double, Cell = HashTableCell<double, HashCRC32<DB::Float64>, HashTableNoState>, Hash = HashCRC32<DB::Float64>, Grower = HashTableGrower<4>, Allocator = AllocatorWithStackMemory<Allocator<true, true>, 128, 1>, KeyHolder = const double &]: Assertion `!buf[new_place].isZero(*this)' failed.\r\n2020.07.31 02:57:02.463230 [ 1278809 ] {} <Trace> BaseDaemon: Received signal 6\r\n2020.07.31 02:57:02.463521 [ 1278884 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.07.31 02:57:02.464163 [ 1278884 ] {} <Fatal> BaseDaemon: (version 20.7.1.1, build id: 21B0DCC47427FD8E) (from thread 1278860) (query_id: e1a44946-0413-46cb-acf9-5e8314427eb8) Received signal Aborted (6)\r\n2020.07.31 02:57:02.464288 [ 1278884 ] {} <Fatal> BaseDaemon: \r\n2020.07.31 02:57:02.464461 [ 1278884 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f769ffcc18b 0x7f769ffab859 0x7f769ffab729 0x7f769ffbcf36 0x7f769f85721b 0x7f7692d61b21 0x7f7692d62d44 0x7f768ebe8450 0x7f768ebe67b1 0x7f768f52c4ac 0x7f768f52c420 0x7f768f52c3dd 0x7f768f52c38d 0x7f768f52c35d 0x7f768f52b4ae 0x7f76a471c635 0x7f76a471c5d5 0x7f768f529ae5 0x7f768f52a309 0x7f768f528830 0x7f768f527f16 0x7f768f555b3d 0x7f768f555aa2 0x7f768f555a2d 0x7f768f5559f1 0x7f768f5559c2 0x7f768f5558bc 0x7f768f55584d\r\n2020.07.31 02:57:02.464880 [ 1278884 ] {} <Fatal> BaseDaemon: 4. /build/glibc-YYA7BZ/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51: gsignal @ 0x4618b in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.31 02:57:02.465036 [ 1278884 ] {} <Fatal> BaseDaemon: 5. /build/glibc-YYA7BZ/glibc-2.31/stdlib/abort.c:81: abort @ 0x25859 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.31 02:57:02.465255 [ 1278884 ] {} <Fatal> BaseDaemon: 6. /build/glibc-YYA7BZ/glibc-2.31/intl/loadmsgcat.c:509: _nl_load_domain.cold @ 0x25729 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.31 02:57:02.465539 [ 1278884 ] {} <Fatal> BaseDaemon: 7. ? @ 0x36f36 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.31 02:57:02.474018 [ 1278884 ] {} <Fatal> BaseDaemon: 8. /home/akuzm/ch4/ch/src/Common/HashTable/HashTable.h:813: DB::IAggregateFunctionHelper<DB::AggregateFunctionUniq<double, DB::AggregateFunctionUniqExactData<double> > >::addBatchSinglePlace(unsigned long, char*, DB::IColumn const**, DB::Arena*) const @ 0x309521b in /home/akuzm/ch4/build-clang10/src/AggregateFunctions/libclickhouse_aggregate_functionsd.so\r\n2020.07.31 02:57:02.474539 [ 1278884 ] {} <Fatal> BaseDaemon: 9. /home/akuzm/ch4/ch/src/Interpreters/Aggregator.cpp:576: DB::Aggregator::executeWithoutKeyImpl(char*&, unsigned long, DB::Aggregator::AggregateFunctionInstruction*, DB::Arena*) @ 0xe48b21 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n2020.07.31 02:57:02.474957 [ 1278884 ] {} <Fatal> BaseDaemon: 10. /home/akuzm/ch4/ch/src/Interpreters/Aggregator.cpp:719: DB::Aggregator::executeOnBlock(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >, unsigned long, DB::AggregatedDataVariants&, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >&, std::__1::vector<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >, std::__1::allocator<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > > >&, bool&) @ 0xe49d44 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n2020.07.31 02:57:02.475389 [ 1278884 ] {} <Fatal> BaseDaemon: 11. /home/akuzm/ch4/ch/src/Processors/Transforms/AggregatingTransform.cpp:524: DB::AggregatingTransform::consume(DB::Chunk) @ 0x222450 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_transformsd.so\r\n2020.07.31 02:57:02.475715 [ 1278884 ] {} <Fatal> BaseDaemon: 12. /home/akuzm/ch4/ch/src/Processors/Transforms/AggregatingTransform.cpp:494: DB::AggregatingTransform::work() @ 0x2207b1 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_transformsd.so\r\n2020.07.31 02:57:02.476059 [ 1278884 ] {} <Fatal> BaseDaemon: 13. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:155: DB::executeJob(DB::IProcessor*) @ 0x13d4ac in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.476377 [ 1278884 ] {} <Fatal> BaseDaemon: 14. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:172: DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1::operator()() const @ 0x13d420 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.476753 [ 1278884 ] {} <Fatal> BaseDaemon: 15. /home/akuzm/ch4/ch/contrib/libcxx/include/type_traits:3519: decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&) @ 0x13d3dd in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.477087 [ 1278884 ] {} <Fatal> BaseDaemon: 16. /home/akuzm/ch4/ch/contrib/libcxx/include/__functional_base:349: void std::__1::__invoke_void_return_wrapper<void>::__call<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&) @ 0x13d38d in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.477380 [ 1278884 ] {} <Fatal> BaseDaemon: 17. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:1540: std::__1::__function::__alloc_func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1, std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1>, void ()>::operator()() @ 0x13d35d in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.477652 [ 1278884 ] {} <Fatal> BaseDaemon: 18. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:1714: std::__1::__function::__func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1, std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1>, void ()>::operator()() @ 0x13c4ae in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.479398 [ 1278884 ] {} <Fatal> BaseDaemon: 19. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:1867: std::__1::__function::__value_func<void ()>::operator()() const @ 0x1c8635 in /home/akuzm/ch4/build-clang10/programs/server/libclickhouse-server-libd.so\r\n2020.07.31 02:57:02.481130 [ 1278884 ] {} <Fatal> BaseDaemon: 20. /home/akuzm/ch4/ch/contrib/libcxx/include/functional:2473: std::__1::function<void ()>::operator()() const @ 0x1c85d5 in /home/akuzm/ch4/build-clang10/programs/server/libclickhouse-server-libd.so\r\n2020.07.31 02:57:02.481471 [ 1278884 ] {} <Fatal> BaseDaemon: 21. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:633: DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x13aae5 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.481765 [ 1278884 ] {} <Fatal> BaseDaemon: 22. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:546: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0x13b309 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.482013 [ 1278884 ] {} <Fatal> BaseDaemon: 23. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:812: DB::PipelineExecutor::executeImpl(unsigned long) @ 0x139830 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.482224 [ 1278884 ] {} <Fatal> BaseDaemon: 24. /home/akuzm/ch4/ch/src/Processors/Executors/PipelineExecutor.cpp:479: DB::PipelineExecutor::execute(unsigned long) @ 0x138f16 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.482493 [ 1278884 ] {} <Fatal> BaseDaemon: 25. /home/akuzm/ch4/ch/src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:79: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0x166b3d in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.482788 [ 1278884 ] {} <Fatal> BaseDaemon: 26. /home/akuzm/ch4/ch/src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:101: DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const @ 0x166aa2 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.483070 [ 1278884 ] {} <Fatal> BaseDaemon: 27. /home/akuzm/ch4/ch/contrib/libcxx/include/type_traits:3525: decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&) @ 0x166a2d in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.483325 [ 1278884 ] {} <Fatal> BaseDaemon: 28. /home/akuzm/ch4/ch/contrib/libcxx/include/tuple:1415: decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&, std::__1::tuple<> const&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&, std::__1::tuple<> const&, std::__1::__tuple_indices<>) @ 0x1669f1 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.483574 [ 1278884 ] {} <Fatal> BaseDaemon: 29. /home/akuzm/ch4/ch/contrib/libcxx/include/tuple:1424: decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&, std::__1::tuple<> const&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0 const&, std::__1::tuple<> const&) @ 0x1669c2 in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.483848 [ 1278884 ] {} <Fatal> BaseDaemon: 30. /home/akuzm/ch4/ch/src/Common/ThreadPool.h:168: ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()::operator()() const @ 0x1668bc in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n2020.07.31 02:57:02.484112 [ 1278884 ] {} <Fatal> BaseDaemon: 31. /home/akuzm/ch4/ch/contrib/libcxx/include/type_traits:3519: decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) @ 0x16684d in /home/akuzm/ch4/build-clang10/src/libclickhouse_processors_executorsd.so\r\n```\r\n\r\nInterestingly, NaNs work OK in aggregation keys: \r\n```\r\n/4/ :) select number % inf k from numbers(256) group by k;\r\n\r\n\u250c\u2500\u2500\u2500k\u2500\u2510\r\n\u2502 nan \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\nThe reason is probably that in the above example, the `key64` aggregation method is used, and the `double` key is reinterpreted as `UInt64`. We can do the same in the affected functions.",
  "created_at": "2020-08-03T00:08:55Z"
}