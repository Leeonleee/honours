You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
LLVM: Msan - use of uninitialized value in stress test
@kitaisreal Do you know if this is a known issue? Thanks.

https://s3.amazonaws.com/clickhouse-test-reports/51132/75b7121759ac4bb1fc12078042d52a445ae319a5/stress_test__msan_.html

```
==1673==WARNING: MemorySanitizer: use-of-uninitialized-value
    #0 0x55edb962f6b3 in llvm::SelectionDAGBuilder::visitInsertValue(llvm::InsertValueInst const&) (/usr/bin/clickhouse+0x497af6b3) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #1 0x55edb95d913b in llvm::SelectionDAGBuilder::visit(unsigned int, llvm::User const&) (/usr/bin/clickhouse+0x4975913b) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #2 0x55edb95d555d in llvm::SelectionDAGBuilder::visit(llvm::Instruction const&) (/usr/bin/clickhouse+0x4975555d) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #3 0x55edb989ad29 in llvm::SelectionDAGISel::SelectBasicBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, true>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, true>, bool&) (/usr/bin/clickhouse+0x49a1ad29) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #4 0x55edb9897e46 in llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) (/usr/bin/clickhouse+0x49a17e46) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #5 0x55edb988cb8d in llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) (/usr/bin/clickhouse+0x49a0cb8d) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #6 0x55edb8b3a598 in (anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) X86ISelDAGToDAG.cpp
    #7 0x55edba0f321d in llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (/usr/bin/clickhouse+0x4a27321d) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #8 0x55edbdfb7d2f in llvm::FPPassManager::runOnFunction(llvm::Function&) (/usr/bin/clickhouse+0x4e137d2f) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #9 0x55edbdfd9ca9 in llvm::FPPassManager::runOnModule(llvm::Module&) (/usr/bin/clickhouse+0x4e159ca9) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #10 0x55edbdfbba37 in llvm::legacy::PassManagerImpl::run(llvm::Module&) (/usr/bin/clickhouse+0x4e13ba37) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #11 0x55edbdfda6a2 in llvm::legacy::PassManager::run(llvm::Module&) (/usr/bin/clickhouse+0x4e15a6a2) (BuildId: 3c17f40ef79b7d9ad8ce7f0d72e31e5d6c9e65d5)
    #12 0x55edb1634109 in DB::JITCompiler::compile(llvm::Module&) build_docker/./src/Interpreters/JIT/CHJIT.cpp:78:22
    #13 0x55edb162ff82 in DB::CHJIT::compileModule(std::__1::unique_ptr<llvm::Module, std::__1::default_delete<llvm::Module>>) build_docker/./src/Interpreters/JIT/CHJIT.cpp:378:29
    #14 0x55edb162f35e in DB::CHJIT::compileModule(std::__1::function<void (llvm::Module&)>) build_docker/./src/Interpreters/JIT/CHJIT.cpp:359:24
    #15 0x55edb1667671 in DB::compileFunction(DB::CHJIT&, DB::IFunctionBase const&) build_docker/./src/Interpreters/JIT/compileFunction.cpp:169:32
    #16 0x55edaeec1414 in DB::compile(DB::CompileDAG const&, unsigned long)::$_0::operator()() const build_docker/./src/Interpreters/ExpressionJIT.cpp:303:38
    #17 0x55edaeec1414 in std::__1::pair<std::__1::shared_ptr<DB::CompiledExpressionCacheEntry>, bool> DB::CacheBase<wide::integer<128ul, unsigned int>, DB::CompiledExpressionCacheEntry, UInt128Hash, DB::CompiledFunctionWeightFunction>::getOrSet<DB::compile(DB::CompileDAG const&, unsigned long)::$_0>(wide::integer<128ul, unsigned int> const&, DB::compile(DB::CompileDAG const&, unsigned long)::$_0&&) build_docker/./src/Common/CacheBase.h:148:24
    #18 0x55edaeec1414 in DB::compile(DB::CompileDAG const&, unsigned long) build_docker/./src/Interpreters/ExpressionJIT.cpp:300:70
    #19 0x55edaeec1414 in DB::ActionsDAG::compileFunctions(unsigned long, std::__1::unordered_set<DB::ActionsDAG::Node const*, std::__1::hash<DB::ActionsDAG::Node const*>, std::__1::equal_to<DB::ActionsDAG::Node const*>, std::__1::allocator<DB::ActionsDAG::Node const*>> const&) build_docker/./src/Interpreters/ExpressionJIT.cpp:593:23
    #20 0x55edad7d454d in DB::ActionsDAG::compileExpressions(unsigned long, std::__1::unordered_set<DB::ActionsDAG::Node const*, std::__1::hash<DB::ActionsDAG::Node const*>, std::__1::equal_to<DB::ActionsDAG::Node const*>, std::__1::allocator<DB::ActionsDAG::Node const*>> const&) build_docker/./src/Interpreters/ActionsDAG.cpp:1071:5
    #21 0x55edadeb0aaf in DB::ExpressionActions::ExpressionActions(std::__1::shared_ptr<DB::ActionsDAG>, DB::ExpressionActionsSettings const&) build_docker/./src/Interpreters/ExpressionActions.cpp:62:22
    #22 0x55edb3e9d187 in DB::ExpressionActions* std::__1::construct_at[abi:v15000]<DB::ExpressionActions, std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&, DB::ExpressionActions*>(DB::ExpressionActions*, std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:35:48
    #23 0x55edb3e9d187 in void std::__1::allocator_traits<std::__1::allocator<DB::ExpressionActions>>::construct[abi:v15000]<DB::ExpressionActions, std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&, void, void>(std::__1::allocator<DB::ExpressionActions>&, DB::ExpressionActions*, std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/allocator_traits.h:298:9
    #24 0x55edb3e9d187 in std::__1::__shared_ptr_emplace<DB::ExpressionActions, std::__1::allocator<DB::ExpressionActions>>::__shared_ptr_emplace[abi:v15000]<std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&>(std::__1::allocator<DB::ExpressionActions>, std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:292:9
    #25 0x55edb3e9d187 in std::__1::shared_ptr<DB::ExpressionActions> std::__1::allocate_shared[abi:v15000]<DB::ExpressionActions, std::__1::allocator<DB::ExpressionActions>, std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&, void>(std::__1::allocator<DB::ExpressionActions> const&, std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:953:55
    #26 0x55edb57e8c50 in std::__1::shared_ptr<DB::ExpressionActions> std::__1::make_shared[abi:v15000]<DB::ExpressionActions, std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&, void>(std::__1::shared_ptr<DB::ActionsDAG>&, DB::ExpressionActionsSettings const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:962:12
    #27 0x55edb57e8c50 in DB::ExpressionStep::transformPipeline(DB::QueryPipelineBuilder&, DB::BuildQueryPipelineSettings const&) build_docker/./src/Processors/QueryPlan/ExpressionStep.cpp:39:23
    #28 0x55edb5829baf in DB::ITransformingStep::updatePipeline(std::__1::vector<std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>, std::__1::allocator<std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>>>, DB::BuildQueryPipelineSettings const&) build_docker/./src/Processors/QueryPlan/ITransformingStep.cpp:41:9
    #29 0x55edb587feb0 in DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) build_docker/./src/Processors/QueryPlan/QueryPlan.cpp:189:47
    #30 0x55edb083493a in DB::InterpreterSelectWithUnionQuery::execute() build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:379:31
    #31 0x55edb13d86f1 in DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) build_docker/./src/Interpreters/executeQuery.cpp:746:40
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
