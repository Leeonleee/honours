You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
`TRIM` does not support empty trim characters, pt. II
This issue is motivated by https://github.com/ClickHouse/ClickHouse/issues/67792#issuecomment-2373036614.

As per #68455, function `TRIM` supports empty characters `''` as a trim character argument. This was implemented as a shortcut for `''` in src/Parsers/ExpressionListParsers.cpp.

The problem is that _computed_ empty trim characters still throw an error, e.g.

```sql
SELECT TRIM(leading concat('') FROM 'foo');

-- Code: 36. DB::Exception: Received from localhost:9000. DB::Exception: The pattern argument is not a valid re2 pattern: missing ]: []+: In scope SELECT replaceRegexpOne('foo', concat('^[', regexpQuoteMeta(concat('')), ']+'), ''). (BAD_ARGUMENTS)
```

The code calls `regexpReplaceOne` with pattern `^[]+` which is not a valid re2 pattern.

I think the problem is that we map to `regexpReplaceAll` at all. We should rather
- extend the existing trim function (src/Functions/trim.cpp) with two optional arguments: the trim character (right now, it is hardcoded to `' '`) and an integer mode argument (0 = both, 1 = left, 2 = right)
- replace the mapping from `regexpReplaceAll` to the extended trim function.

Since `trim` is not based on regexps, any regexp-related issues will go away with that + it will probably also be faster.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
