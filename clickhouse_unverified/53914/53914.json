{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 53914,
  "instance_id": "ClickHouse__ClickHouse-53914",
  "issue_numbers": [
    "53543"
  ],
  "base_commit": "cb831a5fb7d50c71ba04e8233bcfffa6b7c2c21f",
  "patch": "diff --git a/src/Parsers/ExpressionListParsers.cpp b/src/Parsers/ExpressionListParsers.cpp\nindex cd3995310647..61cac0480a9b 100644\n--- a/src/Parsers/ExpressionListParsers.cpp\n+++ b/src/Parsers/ExpressionListParsers.cpp\n@@ -865,6 +865,10 @@ class ExpressionLayer : public Layer\n                 if (!ParserKeyword(\"FROM\").ignore(test_pos, test_expected))\n                     return true;\n \n+                // If there is a comma after 'from' then the first one was a name of a column\n+                if (test_pos->type == TokenType::Comma)\n+                    return true;\n+\n                 /// If we parse a second FROM then the first one was a name of a column\n                 if (ParserKeyword(\"FROM\").ignore(test_pos, test_expected))\n                     return true;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02868_select_support_from_keywords.reference b/tests/queries/0_stateless/02868_select_support_from_keywords.reference\nnew file mode 100644\nindex 000000000000..d2dcb047cf0a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02868_select_support_from_keywords.reference\n@@ -0,0 +1,1 @@\n+CREATE VIEW default.test_view\\n(\\n    `date` Date,\\n    `__sign` Int8,\\n    `from` Float64,\\n    `to` Float64\\n) AS\\nWITH cte AS\\n    (\\n        SELECT\\n            date,\\n            __sign,\\n            from,\\n            to\\n        FROM default.test_table\\n        FINAL\\n    )\\nSELECT\\n    date,\\n    __sign,\\n    from,\\n    to\\nFROM cte\ndiff --git a/tests/queries/0_stateless/02868_select_support_from_keywords.sql b/tests/queries/0_stateless/02868_select_support_from_keywords.sql\nnew file mode 100644\nindex 000000000000..dc06651a8eb1\n--- /dev/null\n+++ b/tests/queries/0_stateless/02868_select_support_from_keywords.sql\n@@ -0,0 +1,5 @@\n+create table test_table ( `date` Date, `__sign` Int8, `from` Float64, `to` Float64 ) ENGINE = CollapsingMergeTree(__sign) PARTITION BY toYYYYMM(date) ORDER BY (date) SETTINGS index_granularity = 8192;\n+create VIEW test_view AS WITH cte AS (SELECT date, __sign, \"from\", \"to\" FROM test_table FINAL) SELECT date, __sign, \"from\", \"to\" FROM cte;\n+show create table test_view;\n+drop table test_view;\n+drop table test_table;\n",
  "problem_statement": "ClickHouse is deleting quotes during the view definition saving\nClickhouse is deleting quotes in inner selects during view definition saving.\r\nHow to repeat the error:\r\n\r\nCreate table:\r\n```\r\ncreate table test_table (\r\n `date` Date,\r\n `__sign` Int8,\r\n `from` Float64,\r\n `to` Float64,\r\n)\r\nENGINE = CollapsingMergeTree(__sign)\r\nPARTITION BY toYYYYMM(date)\r\nORDER BY (date)\r\nSETTINGS index_granularity = 8192;\r\n```\r\nThen create view\r\n```\r\ncreate VIEW test_view\r\nAS\r\nWITH cte AS\r\n    (\r\n        SELECT\r\n            date,\r\n            __sign,\r\n            \"from\",\r\n            \"to\",\r\n        FROM test_table\r\n        FINAL\r\n    )\r\nSELECT\r\n    date,\r\n    __sign,\r\n    \"from\",\r\n    \"to\",\r\nFROM\r\ncte\r\n```\r\nThe view will be saved as:\r\n```\r\nATTACH VIEW _ UUID '1a25bb46-3e50-424d-915b-79af0857ceec'\r\n(\r\n    `date` Date,\r\n    `__sign` Int8,\r\n    `from` Float64,\r\n    `to` Float64\r\n) AS\r\nWITH cte AS\r\n    (\r\n        SELECT\r\n            date,\r\n            __sign,\r\n            from,\r\n            to\r\n        FROM default.test_table\r\n        FINAL\r\n    )\r\nSELECT\r\n    date,\r\n    __sign,\r\n    from,\r\n    to\r\nFROM\r\ncte\r\n```\r\nAs you can see, Clickhouse is missing quotes in the inner queue during saving.\r\n\r\nIf we will restart the Clickhouse it will not be started cause of an error in view metadata.\r\nError from errors log:\r\n```\r\n0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c9f4304 in /usr/bin/clickhouse\r\n1. ? @ 0x0000000008adc940 in /usr/bin/clickhouse\r\n2. DB::DatabaseOnDisk::parseQueryFromMetadata(Poco::Logger*, std::shared_ptr<DB::Context const>, String const&, bool, bool) @ 0x0000000010c51568 in /usr/bin/clickhouse\r\n3. ? @ 0x0000000010c6a748 in /usr/bin/clickhouse\r\n4. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x000000000cac4e78 in /usr/bin/clickhouse\r\n5. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000000cac78a0 in /usr/bin/clickhouse\r\n6. ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x000000000cac0ef8 in /usr/bin/clickhouse\r\n7. ? @ 0x000000000cac65a8 in /usr/bin/clickhouse\r\n8. start_thread @ 0x0000000000007624 in /usr/lib/aarch64-linux-gnu/libpthread-2.31.so\r\n9. ? @ 0x00000000000d149c in /usr/lib/aarch64-linux-gnu/libc-2.31.so\r\n (version 23.7.4.5 (official build))\r\n2023.08.18 09:45:47.870721 [ 1 ] {} <Error> Application: DB::Exception: Syntax error (in file /var/lib/clickhouse/store/3be/3be24c40-9d50-4904-a286-121fd6454180/test_view.sql): failed at position 226 (',') (line 13, col 17): ,\r\n            to\r\n        FROM default.test_table\r\n        FINAL\r\n    )\r\nSELECT\r\n    date,\r\n    __sign,\r\n    from,\r\n    to\r\nFROM\r\ncte\r\n. Expected one of: table, table function, subquery or list of joined tables, table or subquery or table function, element of expression with optional alias, SELECT subquery, function, compound identifier, list of elements, identifier: Cannot parse definition from metadata file /var/lib/clickhouse/store/3be/3be24c40-9d50-4904-a286-121fd6454180/test_view.sql\r\n```\r\nError from usual logs:\r\n```\r\n0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c9f4304 in /usr/bin/clickhouse\r\n1. ? @ 0x0000000008adc940 in /usr/bin/clickhouse\r\n2. DB::DatabaseOnDisk::parseQueryFromMetadata(Poco::Logger*, std::shared_ptr<DB::Context const>, String const&, bool, bool) @ 0x0000000010c51568 in /usr/bin/clickhouse\r\n3. ? @ 0x0000000010c6a748 in /usr/bin/clickhouse\r\n4. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x000000000cac4e78 in /usr/bin/clickhouse\r\n5. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000000cac78a0 in /usr/bin/clickhouse\r\n6. ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x000000000cac0ef8 in /usr/bin/clickhouse\r\n7. ? @ 0x000000000cac65a8 in /usr/bin/clickhouse\r\n8. start_thread @ 0x0000000000007624 in /usr/lib/aarch64-linux-gnu/libpthread-2.31.so\r\n9. ? @ 0x00000000000d149c in /usr/lib/aarch64-linux-gnu/libc-2.31.so\r\n (version 23.7.4.5 (official build))\r\n2023.08.18 09:45:47.870721 [ 1 ] {} <Error> Application: DB::Exception: Syntax error (in file /var/lib/clickhouse/store/3be/3be24c40-9d50-4904-a286-121fd6454180/test_view.sql): failed at position 226 (',') (line 13, col 17): ,\r\n            to\r\n        FROM default.test_table\r\n        FINAL\r\n    )\r\nSELECT\r\n    date,\r\n    __sign,\r\n    from,\r\n    to\r\nFROM\r\ncte\r\n. Expected one of: table, table function, subquery or list of joined tables, table or subquery or table function, element of expression with optional alias, SELECT subquery, function, compound identifier, list of elements, identifier: Cannot parse definition from metadata file /var/lib/clickhouse/store/3be/3be24c40-9d50-4904-a286-121fd6454180/test_view.sql\r\n2023.08.18 09:45:47.871879 [ 1 ] {} <Information> Application: shutting down\r\n2023.08.18 09:45:47.872952 [ 1 ] {} <Debug> Application: Uninitializing subsystem: Logging Subsystem\r\n2023.08.18 09:45:47.873784 [ 48 ] {} <Information> BaseDaemon: Stop SignalListener thread\r\n```\r\nWe detected it during migration from CH version 22.3.17.13 to 23.4.2.11. In 22.3.17.13 it's working, but if you change the version to a higher - Clickhouse just will not start cause of this error. It also tests for the CH version 23.7.4.5 - the same behavior.\r\n\r\n\n",
  "hints_text": "Similar issue:\r\n```\r\ndell9510 :) SELECT 1 \"from\"\r\n\r\nSELECT 1 AS from\r\n\r\nQuery id: 6e98125f-09b4-4d6c-91f5-56c447f01134\r\n\r\n\u250c\u2500from\u2500\u2510\r\n\u2502    1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.007 sec. \r\n\r\ndell9510 :) SELECT 1 from\r\n\r\nSyntax error: failed at position 14 (end of query):\r\n\r\nSELECT 1 from \r\n\r\nExpected one of: table, table function, subquery or list of joined tables, table or subquery or table function, element of expression with optional alias, SELECT subquery, function, compound identifier, list of elements, identifier, string literal table identifier\r\n\r\n```\n@alexey-milovidov @tavplubix Hello, I would like to take responsibility for fixing this bug. Could it be assigned to me? Thank you.\r\n\r\nCurrently, I intend to always quote identifiers in the SELECT clause when formatting the CREATE SQL statement.(#53771) Is this approach appropriate?\r\nexample: \r\n```\r\ncreate VIEW test_view AS\r\nSELECT\r\n    date,\r\n    __sign,\r\n    \"from\",\r\n    \"to\"\r\nFROM test_table;\r\n```\r\nWill be formatted as:\r\n```\r\nCREATE VIEW default.test_view\r\n(\r\n    `date` Date,\r\n    `__sign` Int8,\r\n    `from` Float64,\r\n    `to` Float64\r\n) AS\r\nSELECT\r\n    `date`,\r\n    `__sign`,\r\n    `from`,\r\n    `to`\r\nFROM `default`.`test_table`\r\n```\r\n\r\n\r\nAlternatively, another solution could be to consider the inclusion of keywords during the parsing of the SELECT SQL statement. For example, allowing \"`select col1, from, to FROM table;`\" (although I'm not certain if supporting this syntax is a good idea).\n> Currently, I intend to always quote identifiers in the SELECT clause when formatting the CREATE SQL statement.(https://github.com/ClickHouse/ClickHouse/pull/53771) Is this approach appropriate?\r\n\r\nMaybe it's okay, but I'm not sure. It would be much better to keep identifiers unquoted when possible. In particular, you will have to update tons of tests because of this change, because we have a lot of tests that rely on query formatting",
  "created_at": "2023-08-29T07:33:05Z"
}