{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 43410,
  "instance_id": "ClickHouse__ClickHouse-43410",
  "issue_numbers": [
    "43377"
  ],
  "base_commit": "f0dbfbb0f4db53a4654a8de7bf9ebf47fec3ef0f",
  "patch": "diff --git a/src/Interpreters/InterpreterSelectQuery.cpp b/src/Interpreters/InterpreterSelectQuery.cpp\nindex 2e20cfbd9643..3bb6b2e2c87f 100644\n--- a/src/Interpreters/InterpreterSelectQuery.cpp\n+++ b/src/Interpreters/InterpreterSelectQuery.cpp\n@@ -2728,13 +2728,18 @@ void InterpreterSelectQuery::executeDistinct(QueryPlan & query_plan, bool before\n     {\n         const Settings & settings = context->getSettingsRef();\n \n-        auto [limit_length, limit_offset] = getLimitLengthAndOffset(query, context);\n         UInt64 limit_for_distinct = 0;\n \n-        /// If after this stage of DISTINCT ORDER BY is not executed,\n+        /// If after this stage of DISTINCT,\n+        /// (1) ORDER BY is not executed\n+        /// (2) there is no LIMIT BY (todo: we can check if DISTINCT and LIMIT BY expressions are match)\n         /// then you can get no more than limit_length + limit_offset of different rows.\n-        if ((!query.orderBy() || !before_order) && limit_length <= std::numeric_limits<UInt64>::max() - limit_offset)\n-            limit_for_distinct = limit_length + limit_offset;\n+        if ((!query.orderBy() || !before_order) && !query.limitBy())\n+        {\n+            auto [limit_length, limit_offset] = getLimitLengthAndOffset(query, context);\n+            if (limit_length <= std::numeric_limits<UInt64>::max() - limit_offset)\n+                limit_for_distinct = limit_length + limit_offset;\n+        }\n \n         SizeLimits limits(settings.max_rows_in_distinct, settings.max_bytes_in_distinct, settings.distinct_overflow_mode);\n \n",
  "test_patch": "diff --git a/tests/queries/1_stateful/00176_distinct_limit_by_limit_bug_43377.reference b/tests/queries/1_stateful/00176_distinct_limit_by_limit_bug_43377.reference\nnew file mode 100644\nindex 000000000000..f599e28b8ab0\n--- /dev/null\n+++ b/tests/queries/1_stateful/00176_distinct_limit_by_limit_bug_43377.reference\n@@ -0,0 +1,1 @@\n+10\ndiff --git a/tests/queries/1_stateful/00176_distinct_limit_by_limit_bug_43377.sql b/tests/queries/1_stateful/00176_distinct_limit_by_limit_bug_43377.sql\nnew file mode 100644\nindex 000000000000..6397d7f5a281\n--- /dev/null\n+++ b/tests/queries/1_stateful/00176_distinct_limit_by_limit_bug_43377.sql\n@@ -0,0 +1,11 @@\n+SELECT count()\n+FROM\n+(\n+    SELECT DISTINCT\n+        Title,\n+        SearchPhrase\n+    FROM test.hits\n+    WHERE (SearchPhrase != '') AND (NOT match(Title, '[\u0430-\u044f\u0410-\u042f\u0451\u0401]')) AND (NOT match(SearchPhrase, '[\u0430-\u044f\u0410-\u042f\u0451\u0401]'))\n+    LIMIT 1 BY Title\n+    LIMIT 10\n+);\n",
  "problem_statement": "Bug: DISTINCT + LIMIT BY + LIMIT\n**Describe what's wrong**\r\nRequest with `DISTINCT`+`LIMIT BY`+`LIMIT` return less rows than provided in `LIMIT`\r\n\r\n**Does it reproduce on recent release?**\r\n22.11\r\n\r\n**How to reproduce**\r\nThe following query from hits table returns less number of rows then provided in LIMIT\r\n```\r\nSELECT DISTINCT\r\n    Title,\r\n    SearchPhrase\r\nFROM hits_v1\r\nWHERE (SearchPhrase != '') AND (NOT match(Title, '[\u0430-\u044f\u0410-\u042f\u0451\u0401]')) AND (NOT match(SearchPhrase, '[\u0430-\u044f\u0410-\u042f\u0451\u0401]'))\r\nLIMIT 1 BY\r\n    Title,\r\n    SearchPhrase\r\nLIMIT 10\r\n````\r\n**Expected behavior**\r\nQuery returns number of rows provided in `LIMIT`\r\n\n",
  "hints_text": "When a query plan is build, limit hint is provided to DISTINCT step. And it seems it\u2019s provided w/o consideration if LIMIT BY is presented in the corresponding query. DISTINCT executed before LIMIT BY, so, DISTINCT produce number of rows according to limit hint (20 in this case) and then LIMIT BY is applied on top.\r\nSo, if LIMIT BY has the same expression as DISTINCT, then the result will be as expected, otherwise it\u2019ll be always different since DISTINCT output in non-deterministic for this particular query\r\n\r\n```\r\n\u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 Expression (Projection)                             \u2502\r\n\u2502   Limit                                             \u2502\r\n\u2502     LimitBy                                         \u2502\r\n\u2502       Expression (Before LIMIT BY)                  \u2502\r\n\u2502         Distinct                                    \u2502\r\n\u2502           Distinct (Preliminary DISTINCT)           \u2502\r\n\u2502             Expression (Before ORDER BY)            \u2502\r\n\u2502               Filter (WHERE)                        \u2502\r\n\u2502                 ReadFromMergeTree (default.hits_v1) \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n",
  "created_at": "2022-11-20T23:13:11Z"
}