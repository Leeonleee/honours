{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 25697,
  "instance_id": "ClickHouse__ClickHouse-25697",
  "issue_numbers": [
    "25683"
  ],
  "base_commit": "a14724ca7b0101927c359581e6d4b05453dc0049",
  "patch": "diff --git a/src/Server/MySQLHandler.cpp b/src/Server/MySQLHandler.cpp\nindex 497c0574fae2..f06ae2cb8f19 100644\n--- a/src/Server/MySQLHandler.cpp\n+++ b/src/Server/MySQLHandler.cpp\n@@ -130,6 +130,8 @@ void MySQLHandler::run()\n \n         authenticate(handshake_response.username, handshake_response.auth_plugin_name, handshake_response.auth_response);\n \n+        connection_context->getClientInfo().initial_user = handshake_response.username;\n+\n         try\n         {\n             if (!handshake_response.database.empty())\n",
  "test_patch": "diff --git a/tests/integration/test_mysql_protocol/test.py b/tests/integration/test_mysql_protocol/test.py\nindex f2d3f46b9bc1..6b61a8b6fc81 100644\n--- a/tests/integration/test_mysql_protocol/test.py\n+++ b/tests/integration/test_mysql_protocol/test.py\n@@ -200,6 +200,14 @@ def test_mysql_replacement_query(started_cluster):\n     assert stdout.decode() == 'DATABASE()\\ndefault\\n'\n \n \n+def test_mysql_select_user(started_cluster):\n+    code, (stdout, stderr) = started_cluster.mysql_client_container.exec_run('''\n+        mysql --protocol tcp -h {host} -P {port} default -u default --password=123\n+        -e \"select user();\"\n+    '''.format(host=started_cluster.get_instance_ip('node'), port=server_port), demux=True)\n+    assert code == 0\n+    assert stdout.decode() == 'currentUser()\\ndefault\\n'\n+\n def test_mysql_explain(started_cluster):\n     # EXPLAIN SELECT 1\n     code, (stdout, stderr) = started_cluster.mysql_client_container.exec_run('''\n@@ -312,6 +320,7 @@ def test_mysql_set_variables(started_cluster):\n     assert code == 0\n \n \n+\n def test_python_client(started_cluster):\n     client = pymysql.connections.Connection(host=started_cluster.get_instance_ip('node'), user='user_with_double_sha1', password='abacaba',\n                                             database='default', port=server_port)\n",
  "problem_statement": "mysql connect clickhouse port 9004 get  Segmentation fault (core dumped)\nYou have to provide the following information whenever possible.\r\n#/usr/local/mysql/bin/mysql -h127.0.0.1 -P9004 -udefault\r\nWelcome to the MySQL monitor. Commands end with ; or \\g.\r\nYour MySQL connection id is 17\r\nServer version: 21.6.5.37-ClickHouse\r\n\r\nCopyright (c) 2000, 2021, Oracle and/or its affiliates.\r\n\r\nOracle is a registered trademark of Oracle Corporation and/or its\r\naffiliates. Other names may be trademarks of their respective\r\nowners.\r\n\r\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\r\n\r\nSegmentation fault (core dumped)\r\n\r\nA clear and concise description of what works not as it is supposed to.\r\ncentos 7.5 \r\nmysql client version : 8.0.20, 8.0.22,8.0.25 \r\n\r\nclickhouse server verion : 21.6.4 late \r\n\r\n\r\n\r\n**How to reproduce**\r\n\r\n* clickhouse server verion : 21.6.4 \r\n\r\nmysql --version\r\nmysql  Ver 8.0.25 for macos11 on x86_64 (MySQL Community Server - GPL)\r\nmysql --version\r\nmysql  Ver 8.0.23 for Linux on x86_64 (MySQL Community Server - GPL)\r\n\r\n**Expected behavior**\r\n\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Error message and/or stacktrace**\r\nstrace /usr/local/mysql/bin/mysql -h127.0.0.1 -P9004 -uwubx -p\r\nmunmap(0x7f5dbb4f5000, 4096) = 0\r\nsendto(3, \"\\16\\0\\0\\0\\3select USER()\", 18, 0, NULL, 0) = 18\r\nrecvfrom(3, \"\\1\\0\\0\\1\\1#\\0\\0\\2\\3def\\0\\0\\0\\rcurrentUser()\\0\\f\"..., 16384, 0, NULL, NULL) = 131\r\n--- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_MAPERR, si_addr=NULL} ---\r\n+++ killed by SIGSEGV +++\r\nSegmentation fault\r\n\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\n\r\ngdb ./bin/mysql ./core.18564\r\n\r\n(gdb) bt\r\n#0 0x00007ffff620e721 in __strlen_sse2_pminub () from /lib64/libc.so.6\r\n#1 0x000000000043ebcc in my_strdup (key=key@entry=0, from=0x0, my_flags=my_flags@entry=16)\r\nat /data/mysql-8.0.20/mysys/my_malloc.cc:295\r\n#2 0x000000000040c234 in init_username () at /data/mysql-8.0.20/client/mysql.cc:5228\r\n#3 init_username () at /data/mysql-8.0.20/client/mysql.cc:5219\r\n#4 0x0000000000414450 in construct_prompt () at /data/mysql-8.0.20/client/mysql.cc:5131\r\n#5 read_and_execute(bool) () at /data/mysql-8.0.20/client/mysql.cc:2216\r\n#6 0x000000000040a357 in main () at /data/mysql-8.0.20/client/mysql.cc:1432\r\n#7 0x00007ffff60c1555 in __libc_start_main () from /lib64/libc.so.6\r\n#8 0x000000000040add0 in _start () at /opt/rh/devtoolset-8/root/usr/include/c++/8/new:169\r\n\r\n//client/mysql.cc\r\nstatic void init_username() {\r\n      my_free(full_username);\r\n      my_free(part_username);\r\n      \r\n      MYSQL_RES *result = nullptr;\r\n      if (!mysql_query(&mysql, \"select USER()\") \r\n     &&  (result = mysql_use_result(&mysql))) {\r\n            MYSQL_ROW cur = mysql_fetch_row(result);\r\n            full_username = my_strdup(PSI_NOT_INSTRUMENTED, cur[0], MYF(MY_WME));\r\n            part_username =\r\n            my_strdup(PSI_NOT_INSTRUMENTED, strtok(cur[0], \"@\"), MYF(MY_WME));\r\n            (void)mysql_fetch_row(result); // Read eof\r\n      }\r\n}\r\n\r\nfrom source and gdb trace get use mysql client connect clickhouse 9004 execute **select USER()** get 0x0\r\n\r\nmaybe clickhouse mysql protocol context->getClientInfo not implementation.\r\n\r\n#except \r\nplease implementat clickhouse server mysql protocol context->getClientInfo\r\n\n",
  "hints_text": "",
  "created_at": "2021-06-25T02:21:51Z"
}