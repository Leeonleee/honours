You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
UDF are considered deterministic
### Company or project name

_No response_

### Describe what's wrong

Opposite to what's described in [QueryCache documentation](https://clickhouse.com/docs/en/operations/query-cache#configuration-settings-and-usage) UDF's are managed as deterministic by default.

This is opposite to the request in issue #59988 but needs to be fixed before in order to implement that feature.



### Does it reproduce on the most recent release?

Yes

### How to reproduce

```sql
CREATE FUNCTION parity_str AS (n) -> if(n % 2, 'odd', 'even');
SELECT parity_str(4) settings use_query_cache = 1;

SELECT count(*) FROM system.query_cache; -- returns 1
```

Something similar happens with externally defined UDFs.

### Expected behavior

In the previous example the `SELECT count(*) FROM system.query_cache; `should return `0` at the end.

### Error message and/or stacktrace

_No response_

### Additional context

`astContainsNonDeterministicFunctions` internally uses the visitor code in:

`QuerryResultCache.cpp:HasNonDeterministicFunctionsMatcher:visit`

The problem is that this function uses the UDF function name to call

`FunctionFactory.cpp:FunctionFactory::tryGet`

Ignoring the functions in `UserDefinedSQLFunctionFactory` and `UserDefinedExecutableFunctionFactory`
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
