diff --git a/dbms/programs/server/users.xml b/dbms/programs/server/users.xml
index 0058ee511846..87e6c406b0a3 100644
--- a/dbms/programs/server/users.xml
+++ b/dbms/programs/server/users.xml
@@ -83,30 +83,7 @@
 
             <!-- Quota for user. -->
             <quota>default</quota>
-
-            <!-- Example of row level security policy. -->
-            <!-- <databases>
-                <test>
-                    <filtered_table1>
-                        <filter>a = 1</filter>
-                    </filtered_table1>
-                    <filtered_table2>
-                        <filter>a + b &lt; 1 or c - d &gt; 5</filter>
-                    </filtered_table2>
-                </test>
-            </databases> -->
         </default>
-
-        <!-- Example of user with readonly access. -->
-        <!-- <readonly>
-            <password></password>
-            <networks incl="networks" replace="replace">
-                <ip>::1</ip>
-                <ip>127.0.0.1</ip>
-            </networks>
-            <profile>readonly</profile>
-            <quota>default</quota>
-        </readonly> -->
     </users>
 
     <!-- Quotas. -->
diff --git a/dbms/src/Access/UsersConfigAccessStorage.cpp b/dbms/src/Access/UsersConfigAccessStorage.cpp
index c9671afaca1c..033e8f557b7c 100644
--- a/dbms/src/Access/UsersConfigAccessStorage.cpp
+++ b/dbms/src/Access/UsersConfigAccessStorage.cpp
@@ -135,13 +135,25 @@ namespace
                 for (const String & database : databases)
                 {
                     const String database_config = databases_config + "." + database;
-                    Poco::Util::AbstractConfiguration::Keys table_names;
-                    config.keys(database_config, table_names);
+                    Poco::Util::AbstractConfiguration::Keys keys_in_database_config;
+                    config.keys(database_config, keys_in_database_config);
 
                     /// Read table properties
-                    for (const String & table_name : table_names)
+                    for (const String & key_in_database_config : keys_in_database_config)
                     {
-                        const auto filter_config = database_config + "." + table_name + ".filter";
+                        String table_name = key_in_database_config;
+                        String filter_config = database_config + "." + table_name + ".filter";
+
+                        if (key_in_database_config.starts_with("table["))
+                        {
+                            const auto table_name_config = database_config + "." + table_name + "[@name]";
+                            if (config.has(table_name_config))
+                            {
+                                table_name = config.getString(table_name_config);
+                                filter_config = database_config + ".table[@name='" + table_name + "']";
+                            }
+                        }
+
                         if (config.has(filter_config))
                         {
                             try
diff --git a/dbms/src/IO/S3Common.cpp b/dbms/src/IO/S3Common.cpp
index a9015ca5982a..b981c34c2d24 100644
--- a/dbms/src/IO/S3Common.cpp
+++ b/dbms/src/IO/S3Common.cpp
@@ -29,7 +29,7 @@ const std::pair<LogsLevel, Message::Priority> & convertLogLevel(Aws::Utils::Logg
     return mapping.at(log_level);
 }
 
-class AWSLogger : public Aws::Utils::Logging::LogSystemInterface
+class AWSLogger final : public Aws::Utils::Logging::LogSystemInterface
 {
 public:
     ~AWSLogger() final = default;
