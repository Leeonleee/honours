{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 16997,
  "instance_id": "ClickHouse__ClickHouse-16997",
  "issue_numbers": [
    "16616"
  ],
  "base_commit": "7d7b19a201b6c8075dbf3757fbddb6354900543c",
  "patch": "diff --git a/docs/en/sql-reference/statements/create/dictionary.md b/docs/en/sql-reference/statements/create/dictionary.md\nindex b1098c54703e..3fe94e267e4a 100644\n--- a/docs/en/sql-reference/statements/create/dictionary.md\n+++ b/docs/en/sql-reference/statements/create/dictionary.md\n@@ -20,7 +20,7 @@ CREATE DICTIONARY [IF NOT EXISTS] [db.]dictionary_name [ON CLUSTER cluster]\n PRIMARY KEY key1, key2\n SOURCE(SOURCE_NAME([param1 value1 ... paramN valueN]))\n LAYOUT(LAYOUT_NAME([param_name param_value]))\n-LIFETIME([MIN val1] MAX val2)\n+LIFETIME({MIN min_val MAX max_val | max_val})\n ```\n \n External dictionary structure consists of attributes. Dictionary attributes are specified similarly to table columns. The only required attribute property is its type, all other properties may have default values.\ndiff --git a/docs/es/sql-reference/statements/create.md b/docs/es/sql-reference/statements/create.md\nindex b851435286e5..db3194ae1142 100644\n--- a/docs/es/sql-reference/statements/create.md\n+++ b/docs/es/sql-reference/statements/create.md\n@@ -291,7 +291,7 @@ CREATE DICTIONARY [IF NOT EXISTS] [db.]dictionary_name [ON CLUSTER cluster]\n PRIMARY KEY key1, key2\n SOURCE(SOURCE_NAME([param1 value1 ... paramN valueN]))\n LAYOUT(LAYOUT_NAME([param_name param_value]))\n-LIFETIME([MIN val1] MAX val2)\n+LIFETIME({MIN min_val MAX max_val | max_val})\n ```\n \n Crear [diccionario externo](../../sql-reference/dictionaries/external-dictionaries/external-dicts.md) con dado [estructura](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure.md), [fuente](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources.md), [dise\u00f1o](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout.md) y [vida](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime.md).\ndiff --git a/docs/fa/sql-reference/statements/create.md b/docs/fa/sql-reference/statements/create.md\nindex c4b7ede05dd4..970e8ee75350 100644\n--- a/docs/fa/sql-reference/statements/create.md\n+++ b/docs/fa/sql-reference/statements/create.md\n@@ -291,7 +291,7 @@ CREATE DICTIONARY [IF NOT EXISTS] [db.]dictionary_name [ON CLUSTER cluster]\n PRIMARY KEY key1, key2\n SOURCE(SOURCE_NAME([param1 value1 ... paramN valueN]))\n LAYOUT(LAYOUT_NAME([param_name param_value]))\n-LIFETIME([MIN val1] MAX val2)\n+LIFETIME({MIN min_val MAX max_val | max_val})\n ```\n \n \u0627\u06cc\u062c\u0627\u062f [\u0641\u0631\u0647\u0646\u06af \u0644\u063a\u062a \u062e\u0627\u0631\u062c\u06cc](../../sql-reference/dictionaries/external-dictionaries/external-dicts.md) \u0628\u0627 \u062a\u0648\u062c\u0647 \u0628\u0647 [\u0633\u0627\u062e\u062a\u0627\u0631](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure.md), [\u0645\u062a\u0646](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources.md), [\u0637\u0631\u062d\u0628\u0646\u062f\u06cc](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout.md) \u0648 [\u0637\u0648\u0644 \u0639\u0645\u0631](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime.md).\ndiff --git a/docs/fr/sql-reference/statements/create.md b/docs/fr/sql-reference/statements/create.md\nindex f7b3790baf23..e7c8040ee6ef 100644\n--- a/docs/fr/sql-reference/statements/create.md\n+++ b/docs/fr/sql-reference/statements/create.md\n@@ -291,7 +291,7 @@ CREATE DICTIONARY [IF NOT EXISTS] [db.]dictionary_name [ON CLUSTER cluster]\n PRIMARY KEY key1, key2\n SOURCE(SOURCE_NAME([param1 value1 ... paramN valueN]))\n LAYOUT(LAYOUT_NAME([param_name param_value]))\n-LIFETIME([MIN val1] MAX val2)\n+LIFETIME({MIN min_val MAX max_val | max_val})\n ```\n \n Cr\u00e9e [externe dictionnaire](../../sql-reference/dictionaries/external-dictionaries/external-dicts.md) avec le [structure](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure.md), [source](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources.md), [disposition](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout.md) et [vie](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime.md).\ndiff --git a/docs/ja/sql-reference/statements/create.md b/docs/ja/sql-reference/statements/create.md\nindex ae518dbfac84..1d1f2c575567 100644\n--- a/docs/ja/sql-reference/statements/create.md\n+++ b/docs/ja/sql-reference/statements/create.md\n@@ -291,7 +291,7 @@ CREATE DICTIONARY [IF NOT EXISTS] [db.]dictionary_name [ON CLUSTER cluster]\n PRIMARY KEY key1, key2\n SOURCE(SOURCE_NAME([param1 value1 ... paramN valueN]))\n LAYOUT(LAYOUT_NAME([param_name param_value]))\n-LIFETIME([MIN val1] MAX val2)\n+LIFETIME({MIN min_val MAX max_val | max_val})\n ```\n \n \u4f5c\u6210 [\u5916\u90e8\u8f9e\u66f8](../../sql-reference/dictionaries/external-dictionaries/external-dicts.md) \u4e0e\u3048\u3089\u308c\u305f\u3068 [\u69cb\u9020](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure.md), [\u30bd\u30fc\u30b9](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources.md), [\u30ec\u30a4\u30a2\u30a6\u30c8](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout.md) \u3068 [\u751f\u6daf](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime.md).\ndiff --git a/docs/ru/sql-reference/statements/create/dictionary.md b/docs/ru/sql-reference/statements/create/dictionary.md\nindex a20dc812e029..3134a89483bc 100644\n--- a/docs/ru/sql-reference/statements/create/dictionary.md\n+++ b/docs/ru/sql-reference/statements/create/dictionary.md\n@@ -16,7 +16,7 @@ CREATE DICTIONARY [IF NOT EXISTS] [db.]dictionary_name [ON CLUSTER cluster]\n PRIMARY KEY key1, key2\n SOURCE(SOURCE_NAME([param1 value1 ... paramN valueN]))\n LAYOUT(LAYOUT_NAME([param_name param_value]))\n-LIFETIME([MIN val1] MAX val2)\n+LIFETIME({MIN min_val MAX max_val | max_val})\n ```\n \n \u0421\u043e\u0437\u0434\u0430\u0451\u0442 [\u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c](../../../sql-reference/dictionaries/external-dictionaries/external-dicts.md) \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 [\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043e\u0439](../../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure.md), [\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u043c](../../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources.md), [\u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0432 \u043f\u0430\u043c\u044f\u0442\u0438](../../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout.md) \u0438 [\u043f\u0435\u0440\u0438\u043e\u0434\u043e\u043c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f](../../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime.md).\n@@ -27,5 +27,5 @@ LIFETIME([MIN val1] MAX val2)\n \n \u0421\u043c\u043e\u0442\u0440\u0438\u0442\u0435 [\u0412\u043d\u0435\u0448\u043d\u0438\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u0438](../../../sql-reference/dictionaries/external-dictionaries/external-dicts.md).\n \n-[\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0430\u0442\u044c\u044f](https://clickhouse.tech/docs/ru/sql-reference/statements/create/dictionary) \n+[\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0430\u0442\u044c\u044f](https://clickhouse.tech/docs/ru/sql-reference/statements/create/dictionary)\n <!--hide-->\n\\ No newline at end of file\ndiff --git a/docs/tr/sql-reference/statements/create.md b/docs/tr/sql-reference/statements/create.md\nindex 79bdb45f9e4f..78390564880b 100644\n--- a/docs/tr/sql-reference/statements/create.md\n+++ b/docs/tr/sql-reference/statements/create.md\n@@ -291,7 +291,7 @@ CREATE DICTIONARY [IF NOT EXISTS] [db.]dictionary_name [ON CLUSTER cluster]\n PRIMARY KEY key1, key2\n SOURCE(SOURCE_NAME([param1 value1 ... paramN valueN]))\n LAYOUT(LAYOUT_NAME([param_name param_value]))\n-LIFETIME([MIN val1] MAX val2)\n+LIFETIME({MIN min_val MAX max_val | max_val})\n ```\n \n Olu\u015fturuyor [d\u0131\u015f s\u00f6zl\u00fck](../../sql-reference/dictionaries/external-dictionaries/external-dicts.md) verilen ile [yap\u0131l\u0131](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure.md), [kaynakl\u0131](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources.md), [d\u00fczen](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout.md) ve [\u00f6m\u00fcr](../../sql-reference/dictionaries/external-dictionaries/external-dicts-dict-lifetime.md).\ndiff --git a/docs/zh/sql-reference/statements/create.md b/docs/zh/sql-reference/statements/create.md\nindex fa3cb8e5ea50..639af0841dc7 100644\n--- a/docs/zh/sql-reference/statements/create.md\n+++ b/docs/zh/sql-reference/statements/create.md\n@@ -259,5 +259,5 @@ CREATE DICTIONARY [IF NOT EXISTS] [db.]dictionary_name [ON CLUSTER cluster]\n PRIMARY KEY key1, key2\n SOURCE(SOURCE_NAME([param1 value1 ... paramN valueN]))\n LAYOUT(LAYOUT_NAME([param_name param_value]))\n-LIFETIME([MIN val1] MAX val2)\n+LIFETIME({MIN min_val MAX max_val | max_val})\n ```\ndiff --git a/src/Dictionaries/ClickHouseDictionarySource.cpp b/src/Dictionaries/ClickHouseDictionarySource.cpp\nindex 8199b16a94bb..8d733bcd90ab 100644\n--- a/src/Dictionaries/ClickHouseDictionarySource.cpp\n+++ b/src/Dictionaries/ClickHouseDictionarySource.cpp\n@@ -17,13 +17,14 @@\n \n namespace DB\n {\n-namespace ErrorCodes\n-{\n-}\n-\n \n static const size_t MAX_CONNECTIONS = 16;\n \n+inline static UInt16 getPortFromContext(const Context & context, bool secure)\n+{\n+    return secure ? context.getTCPPortSecure().value_or(0) : context.getTCPPort();\n+}\n+\n static ConnectionPoolWithFailoverPtr createPool(\n     const std::string & host,\n     UInt16 port,\n@@ -59,10 +60,10 @@ ClickHouseDictionarySource::ClickHouseDictionarySource(\n     const std::string & default_database)\n     : update_time{std::chrono::system_clock::from_time_t(0)}\n     , dict_struct{dict_struct_}\n-    , host{config.getString(config_prefix + \".host\")}\n-    , port(config.getInt(config_prefix + \".port\"))\n     , secure(config.getBool(config_prefix + \".secure\", false))\n-    , user{config.getString(config_prefix + \".user\", \"\")}\n+    , host{config.getString(config_prefix + \".host\", \"localhost\")}\n+    , port(config.getInt(config_prefix + \".port\", getPortFromContext(context_, secure)))\n+    , user{config.getString(config_prefix + \".user\", \"default\")}\n     , password{config.getString(config_prefix + \".password\", \"\")}\n     , db{config.getString(config_prefix + \".db\", default_database)}\n     , table{config.getString(config_prefix + \".table\")}\n@@ -72,7 +73,7 @@ ClickHouseDictionarySource::ClickHouseDictionarySource(\n     , query_builder{dict_struct, db, \"\", table, where, IdentifierQuotingStyle::Backticks}\n     , sample_block{sample_block_}\n     , context(context_)\n-    , is_local{isLocalAddress({host, port}, secure ? context.getTCPPortSecure().value_or(0) : context.getTCPPort())}\n+    , is_local{isLocalAddress({host, port}, getPortFromContext(context_, secure))}\n     , pool{is_local ? nullptr : createPool(host, port, secure, db, user, password)}\n     , load_all_query{query_builder.composeLoadAllQuery()}\n {\n@@ -92,9 +93,9 @@ ClickHouseDictionarySource::ClickHouseDictionarySource(\n ClickHouseDictionarySource::ClickHouseDictionarySource(const ClickHouseDictionarySource & other)\n     : update_time{other.update_time}\n     , dict_struct{other.dict_struct}\n+    , secure{other.secure}\n     , host{other.host}\n     , port{other.port}\n-    , secure{other.secure}\n     , user{other.user}\n     , password{other.password}\n     , db{other.db}\ndiff --git a/src/Dictionaries/ClickHouseDictionarySource.h b/src/Dictionaries/ClickHouseDictionarySource.h\nindex 8017d458b7e4..9ef77d061fdb 100644\n--- a/src/Dictionaries/ClickHouseDictionarySource.h\n+++ b/src/Dictionaries/ClickHouseDictionarySource.h\n@@ -61,9 +61,9 @@ class ClickHouseDictionarySource final : public IDictionarySource\n \n     std::chrono::time_point<std::chrono::system_clock> update_time;\n     const DictionaryStructure dict_struct;\n+    const bool secure;\n     const std::string host;\n     const UInt16 port;\n-    const bool secure;\n     const std::string user;\n     const std::string password;\n     const std::string db;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01018_ddl_dictionaries_select.reference b/tests/queries/0_stateless/01018_ddl_dictionaries_select.reference\nindex 28ee2a8690ba..f69302fb90fb 100644\n--- a/tests/queries/0_stateless/01018_ddl_dictionaries_select.reference\n+++ b/tests/queries/0_stateless/01018_ddl_dictionaries_select.reference\n@@ -7,6 +7,8 @@\n 17\n 11\n 11\n+17\n+11\n 7\n 11\n 6\ndiff --git a/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql b/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql\nindex 4b548a913ea6..4bb506579cca 100644\n--- a/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql\n+++ b/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql\n@@ -51,6 +51,27 @@ DROP DICTIONARY database_for_dict.dict1;\n \n SELECT dictGetUInt8('database_for_dict.dict1', 'second_column', toUInt64(11)); -- {serverError 36}\n \n+-- SOURCE(CLICKHOUSE(...)) uses default params if not specified\n+DROP DICTIONARY IF EXISTS database_for_dict.dict1;\n+\n+CREATE DICTIONARY database_for_dict.dict1\n+(\n+  key_column UInt64 DEFAULT 0,\n+  second_column UInt8 DEFAULT 1,\n+  third_column String DEFAULT 'qqq',\n+  fourth_column Float64 DEFAULT 42.0\n+)\n+PRIMARY KEY key_column\n+SOURCE(CLICKHOUSE(TABLE 'table_for_dict' DB 'database_for_dict'))\n+LIFETIME(MIN 1 MAX 10)\n+LAYOUT(FLAT());\n+\n+SELECT dictGetUInt8('database_for_dict.dict1', 'second_column', toUInt64(11));\n+\n+SELECT count(distinct(dictGetUInt8('database_for_dict.dict1', 'second_column', toUInt64(number)))) from numbers(100);\n+\n+DROP DICTIONARY database_for_dict.dict1;\n+\n CREATE DICTIONARY database_for_dict.dict1\n (\n   key_column UInt64 DEFAULT 0,\n",
  "problem_statement": "Poor usability of CREATE DICTIONARY query with CLICKHOUSE source.\nIt's not possible to avoid specifying port (server port should be implied).\r\nIt's not possible to avoid specifying user (default user should be assumed).\r\nIt's not possible to avoid specifying host (localhost should be assumed).\r\n\r\nDocumentation states that I can specify `LAYOUT(MAX 30)` and omit `MIN`.\r\nhttps://clickhouse.tech/docs/en/sql-reference/statements/create/dictionary/\r\nIt does not work.\n",
  "hints_text": "Supersedes https://github.com/ClickHouse/ClickHouse/issues/15607",
  "created_at": "2020-11-14T13:48:20Z",
  "modified_files": [
    "docs/en/sql-reference/statements/create/dictionary.md",
    "docs/es/sql-reference/statements/create.md",
    "docs/fa/sql-reference/statements/create.md",
    "docs/fr/sql-reference/statements/create.md",
    "docs/ja/sql-reference/statements/create.md",
    "docs/ru/sql-reference/statements/create/dictionary.md",
    "docs/tr/sql-reference/statements/create.md",
    "docs/zh/sql-reference/statements/create.md",
    "src/Dictionaries/ClickHouseDictionarySource.cpp",
    "src/Dictionaries/ClickHouseDictionarySource.h"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01018_ddl_dictionaries_select.reference",
    "tests/queries/0_stateless/01018_ddl_dictionaries_select.sql"
  ]
}