{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 80300,
  "instance_id": "ClickHouse__ClickHouse-80300",
  "issue_numbers": [
    "80085"
  ],
  "base_commit": "bb83c846e7b78f63b6175243474f58944303424b",
  "patch": "diff --git a/programs/local/LocalServer.cpp b/programs/local/LocalServer.cpp\nindex 4a3093ff69f2..f30e47c4ea4e 100644\n--- a/programs/local/LocalServer.cpp\n+++ b/programs/local/LocalServer.cpp\n@@ -948,14 +948,14 @@ void LocalServer::processConfig()\n                 DatabaseCatalog::instance().startupBackgroundTasks();\n             }\n \n-            /// For ClickHouse local if path is not set the loader will be disabled.\n-            global_context->getUserDefinedSQLObjectsStorage().loadObjects();\n-\n             LOG_DEBUG(log, \"Loaded metadata.\");\n         }\n \n         if (!attached_system_database)\n             attachSystemTablesServer(global_context, *createMemoryDatabaseIfNotExists(global_context, DatabaseCatalog::SYSTEM_DATABASE), false);\n+\n+        if (fs::exists(fs::path(path) / \"user_defined\"))\n+            global_context->getUserDefinedSQLObjectsStorage().loadObjects();\n     }\n     else if (!getClientConfiguration().has(\"no-system-tables\"))\n     {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03463_local_sql_udf_persistence.reference b/tests/queries/0_stateless/03463_local_sql_udf_persistence.reference\nnew file mode 100644\nindex 000000000000..4792e70f3330\n--- /dev/null\n+++ b/tests/queries/0_stateless/03463_local_sql_udf_persistence.reference\n@@ -0,0 +1,2 @@\n+2\n+3\ndiff --git a/tests/queries/0_stateless/03463_local_sql_udf_persistence.sh b/tests/queries/0_stateless/03463_local_sql_udf_persistence.sh\nnew file mode 100755\nindex 000000000000..5f4172b28654\n--- /dev/null\n+++ b/tests/queries/0_stateless/03463_local_sql_udf_persistence.sh\n@@ -0,0 +1,8 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+$CLICKHOUSE_LOCAL --path \"${CLICKHOUSE_TMP}\" \"CREATE FUNCTION f AS x -> x + 1; SELECT f(1);\"\n+$CLICKHOUSE_LOCAL --path \"${CLICKHOUSE_TMP}\" \"SELECT f(2); DROP FUNCTION f;\"\n",
  "problem_statement": "clickhouse-local does not load SQL UDFs on startup\n### Company or project name\n\nAgnostic\n\n### Describe what's wrong\n\nclickhouse-local does not load SQL user-defined functions on startup.\n\n### Does it reproduce on the most recent release?\n\nYes\n\n### How to reproduce\n\nRun clickhouse-local with --path parameter\n\n```sh\nclickhouse local --path=/tmp/clickhouse --output-format Markdown\n```\n\nCreate a SQL user defined function\n\n```sql\nCREATE OR REPLACE FUNCTION id AS (s) -> s;\n```\n\nUse it in a query\n\n```sql\nselect id('hello')\n```\n\nEverything is fine\n\n| id(\\'hello\\') |\n|:-|\n| hello |\n\nQuit clickhouse-local.\nThe `function_id.sql` file has been created in the `user_defined` directory\n\n```sh\n/tmp/clickhouse\n\u251c\u2500\u2500 tmp\n\u2514\u2500\u2500 user_defined\n    \u2514\u2500\u2500 function_id.sql\n```\n\nStart clickhouse-local again with the same parameters as above\n\n```sh\nclickhouse local --path=/tmp/clickhouse --output-format Markdown\n```\n\nRun the same query\n\n```sql\nselect id('hello')\n```\n\nThe function does not exists. But I we saw above, the SQL file does exists.\nSeems like clickhouse-local is not loading SQL user-defined files at startup.\n\n```sh\nReceived exception:\nCode: 46. DB::Exception: Function with name `id` does not exist. In scope SELECT id('hello'). Maybe you meant: ['if','in']. (UNKNOWN_FUNCTION)\n```\n\n### Expected behavior\n\nThe UDF created in the first run should be loader at startup on the following runs and made available.\n\n### Error message and/or stacktrace\n\nReceived exception:\nCode: 46. DB::Exception: Function with name `id` does not exist. In scope SELECT id('hello'). Maybe you meant: ['if','in']. (UNKNOWN_FUNCTION)\n\n### Additional context\n\n_No response_\n",
  "hints_text": "Just to let you know: it used to work ok with previous Clickhouse versions (at least up to 2025.03)\nDigging through the code, it seems like `clickhouse-local` whould only execute SQL UDF loading code if the `--path` contains a `metadata`subdirectory.\n\nhttps://github.com/ClickHouse/ClickHouse/blob/2ae25a963750e95b4e8cf9cd051ef94428860d89/programs/local/LocalServer.cpp#L952\n\nAny idea why ?",
  "created_at": "2025-05-16T03:34:58Z"
}