{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 59040,
  "instance_id": "ClickHouse__ClickHouse-59040",
  "issue_numbers": [
    "59039"
  ],
  "base_commit": "6f4c0925ab399fc248fec1b89ed6393bcf6978f0",
  "patch": "diff --git a/src/Storages/MergeTree/MutateTask.cpp b/src/Storages/MergeTree/MutateTask.cpp\nindex e4070aa82626..48aad368dd47 100644\n--- a/src/Storages/MergeTree/MutateTask.cpp\n+++ b/src/Storages/MergeTree/MutateTask.cpp\n@@ -674,15 +674,25 @@ static NameToNameVector collectFilesForRenames(\n     {\n         if (command.type == MutationCommand::Type::DROP_INDEX)\n         {\n-            if (source_part->checksums.has(INDEX_FILE_PREFIX + command.column_name + \".idx2\"))\n+            static const std::array<String, 2> suffixes = {\".idx2\", \".idx\"};\n+            static const std::array<String, 4> gin_suffixes = {\".gin_dict\", \".gin_post\", \".gin_seg\", \".gin_sid\"}; /// .gin_* is inverted index\n+\n+            for (const auto & suffix : suffixes)\n             {\n-                add_rename(INDEX_FILE_PREFIX + command.column_name + \".idx2\", \"\");\n-                add_rename(INDEX_FILE_PREFIX + command.column_name + mrk_extension, \"\");\n+                const String filename = INDEX_FILE_PREFIX + command.column_name + suffix;\n+                const String filename_mrk = INDEX_FILE_PREFIX + command.column_name + mrk_extension;\n+\n+                if (source_part->checksums.has(filename))\n+                {\n+                    add_rename(filename, \"\");\n+                    add_rename(filename_mrk, \"\");\n+                }\n             }\n-            else if (source_part->checksums.has(INDEX_FILE_PREFIX + command.column_name + \".idx\"))\n+            for (const auto & gin_suffix : gin_suffixes)\n             {\n-                add_rename(INDEX_FILE_PREFIX + command.column_name + \".idx\", \"\");\n-                add_rename(INDEX_FILE_PREFIX + command.column_name + mrk_extension, \"\");\n+                const String filename = INDEX_FILE_PREFIX + command.column_name + gin_suffix;\n+                if (source_part->checksums.has(filename))\n+                    add_rename(filename, \"\");\n             }\n         }\n         else if (command.type == MutationCommand::Type::DROP_PROJECTION)\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02346_inverted_index_bug59039.reference b/tests/queries/0_stateless/02346_inverted_index_bug59039.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02346_inverted_index_bug59039.sql b/tests/queries/0_stateless/02346_inverted_index_bug59039.sql\nnew file mode 100644\nindex 000000000000..0ef0cb0c7337\n--- /dev/null\n+++ b/tests/queries/0_stateless/02346_inverted_index_bug59039.sql\n@@ -0,0 +1,20 @@\n+-- This is supposed to test that DROP INDEX removes all index related files. Can't test this directly but at least run the statement and\n+-- check that no bad things happen.\n+\n+SET allow_experimental_inverted_index = 1;\n+\n+DROP TABLE IF EXISTS tab;\n+\n+CREATE TABLE tab\n+(\n+    id UInt64,\n+    doc String,\n+    INDEX text_idx doc TYPE inverted\n+)\n+ENGINE = MergeTree\n+ORDER BY id\n+SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;\n+\n+ALTER TABLE tab DROP INDEX text_idx;\n+\n+DROP TABLE tab;\n",
  "problem_statement": "Can't remove index files from datapart using the drop index statement.\n**Describe what's wrong**\r\n\r\nCan't remove index files from `datapart` using the `drop index` statement.\r\nTheoretically, the `alter drop index` statement should trigger a mutation, which in the new `datapart` would remove the related `skip-index` files. However, when I delete `inverted` indexes from the table, I found that they are not deleted in the datapart (the inverted index file extension is `.gin_xx`).\r\n\r\n**Does it reproduce on recent release?**\r\nYes, using release date `2024-01-05` can reproduce this bug.\r\nimage: `clickhouse/clickhouse-server:latest`\r\nDigest: `sha256:2ff5796c67e8d588273a5f3f84184b9cdaa39a324bcf74abd3652d818d755f8c`\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use\r\n\r\nI'm using the latest `clickhouse-server`\r\n```bash\r\n\u276f docker pull clickhouse/clickhouse-server:latest\r\nlatest: Pulling from clickhouse/clickhouse-server\r\nDigest: sha256:2ff5796c67e8d588273a5f3f84184b9cdaa39a324bcf74abd3652d818d755f8c\r\nStatus: Image is up to date for clickhouse/clickhouse-server:latest\r\ndocker.io/clickhouse/clickhouse-server:latest\r\n```\r\nHere is my `docker-compose.yaml`, you can run `docker compose up` to start it.\r\n```yaml\r\nversion: '3.7'\r\n\r\nservices:\r\n  clickhouse:\r\n    image: clickhouse/clickhouse-server:latest\r\n    ports:\r\n      - '8123:8123'\r\n      - '9000:9000'\r\n      - '8998:8998'\r\n      - '9363:9363'\r\n      - '9116:9116'\r\n    ulimits:\r\n      memlock: -1\r\n    volumes:\r\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/data:/var/lib/clickhouse\r\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/log:/var/log/clickhouse-server\r\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/config:/etc/clickhouse-server\r\n```\r\n* Queries to run that lead to unexpected result\r\n\r\n_Step1. create table for test_\r\n```sql\r\nDROP TABLE IF EXISTS simple_table_curd SYNC;\r\n\r\nCREATE TABLE simple_table_curd\r\n(\r\n    `id` UInt64,\r\n    `doc` String,\r\n    INDEX text_idx doc TYPE inverted GRANULARITY 1\r\n)\r\nENGINE = MergeTree\r\nORDER BY id\r\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;\r\n```\r\n\r\n _Step2. insert some sample data_\r\n```sql\r\nINSERT INTO simple_table_curd VALUES (0, 'Ancient empires rise and fall, shaping history''s course.'),(1, 'Artistic expressions reflect diverse cultural heritages.'),(2, 'Social movements transform societies, forging new paths.'),(3, 'Economies fluctuate, reflecting the complex interplay of global forces.'),(4, 'Strategic military campaigns alter the balance of power.'),(5, 'Quantum leaps redefine understanding of physical laws.'),(6, 'Chemical reactions unlock mysteries of nature.'), (7, 'Philosophical debates ponder the essence of existence.'),(8, 'Marriages blend traditions, celebrating love''s union.'),(9, 'Explorers discover uncharted territories, expanding world maps.'),(10, 'Innovations in technology drive societal progress.'),(11, 'Environmental conservation efforts protect Earth''s biodiversity.'),(12, 'Diplomatic negotiations seek to resolve international conflicts.'),(13, 'Ancient philosophies provide wisdom for modern dilemmas.'),(14, 'Economic theories debate the merits of market systems.'),(15, 'Military strategies evolve with technological advancements.'),(16, 'Physics theories delve into the universe''s mysteries.'),(17, 'Chemical compounds play crucial roles in medical breakthroughs.'),(18, 'Philosophers debate ethics in the age of artificial intelligence.'),(19, 'Wedding ceremonies across cultures symbolize lifelong commitment.');\r\n```\r\n\r\n _Step3. pay attention to inverted files stored in datapart_\r\n\r\n<img width=\"1497\" alt=\"image\" src=\"https://github.com/ClickHouse/ClickHouse/assets/42711279/1be4f9f9-33a9-4054-8569-2808e665c79a\">\r\n\r\nDatapart stored 6 index files, 2 of them is skip-index files, 4 of them is gin-index files.\r\n\r\n _Step4. drop inverted index_\r\n\r\n```sql\r\nALTER TABLE simple_table_curd DROP INDEX text_idx;\r\n```\r\n<img width=\"1494\" alt=\"image\" src=\"https://github.com/ClickHouse/ClickHouse/assets/42711279/7ba28714-5de0-479b-ac69-b371a38b044a\">\r\n\r\nAs you can see, the two skip-index files were deleted, but the gin-index index files were not successfully removed.\r\n\r\n**Expected behavior**\r\n\r\nI hope that the gin-index files can also be deleted by Alter Drop Index statement.\r\n\r\n<img width=\"1499\" alt=\"image\" src=\"https://github.com/ClickHouse/ClickHouse/assets/42711279/e35782a5-77d4-4568-ba9b-dbb3ac94865b\">\r\n\n",
  "hints_text": "",
  "created_at": "2024-01-22T03:51:27Z"
}