{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 63443,
  "instance_id": "ClickHouse__ClickHouse-63443",
  "issue_numbers": [
    "63441"
  ],
  "base_commit": "7700b2c1a337d701a21aced9c566e0cc8d749473",
  "patch": "diff --git a/src/Functions/FunctionsConversion.cpp b/src/Functions/FunctionsConversion.cpp\nindex a16ce136b9a7..0da84d6d224c 100644\n--- a/src/Functions/FunctionsConversion.cpp\n+++ b/src/Functions/FunctionsConversion.cpp\n@@ -4853,7 +4853,7 @@ FunctionBasePtr createFunctionBaseCast(\n         DataTypeUInt8, DataTypeUInt16, DataTypeUInt32, DataTypeUInt64, DataTypeUInt128, DataTypeUInt256,\n         DataTypeInt8, DataTypeInt16, DataTypeInt32, DataTypeInt64, DataTypeInt128, DataTypeInt256,\n         DataTypeFloat32, DataTypeFloat64,\n-        DataTypeDate, DataTypeDate32, DataTypeDateTime,\n+        DataTypeDate, DataTypeDate32, DataTypeDateTime, DataTypeDateTime64,\n         DataTypeString>(return_type.get(), [&](auto & type)\n         {\n             monotonicity = FunctionTo<std::decay_t<decltype(type)>>::Type::Monotonic::get;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02373_datetime64_monotonicity.queries b/tests/queries/0_stateless/02373_datetime64_monotonicity.queries\ndeleted file mode 100644\nindex 404e3391205b..000000000000\n--- a/tests/queries/0_stateless/02373_datetime64_monotonicity.queries\n+++ /dev/null\n@@ -1,57 +0,0 @@\n-drop table if exists dt64_monot_test;\n-drop table if exists dt64_monot_test_string;\n-CREATE TABLE dt64_monot_test(`date_time` DateTime64(3, 'Europe/Berlin'), `id` String) ENGINE = MergeTree PARTITION BY toDate(date_time, 'Europe/Berlin') ORDER BY date_time;\n-insert into dt64_monot_test select toDateTime64('2020-01-01 00:00:00.000',3)+number , '' from numbers(10);\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime(date_time) >= toDateTime('2020-01-01 00:00:00') SETTINGS force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count()\u3000FROM dt64_monot_test WHERE toDateTime64(date_time, 3) >= '2020-01-01 00:00:01.111' SETTINGS force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time, 3) >= '2020-01-01 00:00:00.000' SETTINGS force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) >= toDateTime64('2020-01-01 00:00:00.000001', 3) SETTINGS force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) >= toDateTime64('2020-01-01 00:00:00.000001', 3, 'Europe/Berlin') SETTINGS force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) >= toDateTime64('2020-01-01 00:00:00.000001',6) SETTINGS force_index_by_date = 1; -- { serverError 277}\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) >= toDateTime64('2020-01-01 00:00:00.000001',6, 'Europe/Berlin') SETTINGS force_primary_key = 1; -- { serverError 277}\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) >= toDateTime64('2020-01-01 00:00:00.000001',6) SETTINGS force_primary_key = 1; -- { serverError 277}\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) <= toDateTime64('2020-01-01 00:00:00.000001',3, 'Europe/Berlin') settings force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) <= toDateTime64('2020-01-01 00:00:00.000001',3) settings force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) = toDateTime64('2020-01-01 00:00:00.000000',6);\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,3) = toDateTime64('2020-01-01 00:00:00.000000',6, 'Europe/Berlin');\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,6) = toDateTime64('2020-01-01 00:00:00.000000',6) settings force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,6) = toDateTime64('2020-01-01 00:00:00.000001',6, 'Europe/Berlin') settings force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,6) > toDateTime64('2020-01-01 00:00:00.000001',6, 'Europe/Berlin') settings force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,6) >= toDateTime64('2020-01-01 00:00:00.000001',6, 'Europe/Berlin') settings force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,6) >= toDateTime64('2020-01-01 00:00:00.000001',6) settings force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,0) >= toDateTime64('2020-01-01 00:00:00.000001',0, 'Europe/Berlin') settings force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,0) >= toDateTime64('2020-01-01 00:00:00.000001',0) settings force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,0) >= '2020-01-01 00:00:00' settings force_index_by_date = 1, force_primary_key = 1;\n-\n-SELECT count() FROM dt64_monot_test WHERE toDateTime64(date_time,0) >= '2020-01-01 00:00:01.1' settings force_index_by_date = 1, force_primary_key = 1;\n-\n-create table dt64_monot_test_string(date_time String, x String) Engine=MergeTree order by date_time;\n-insert into dt64_monot_test_string select '2020-01-01 00:00:00.000000001', '' from numbers(1);\n-insert into dt64_monot_test_string select '2020-01-01 00:00:00.000', '' from numbers(10);\n-\n-SELECT count() FROM dt64_monot_test_string WHERE toDateTime64(date_time,9) = '2020-01-01 00:00:00.000000000';\n-SELECT count() FROM dt64_monot_test_string WHERE toDateTime64(date_time,3) = '2020-01-01 00:00:00.000000001';\n-SELECT count() FROM dt64_monot_test_string WHERE toDateTime64(date_time,9) = '2020-01-01 00:00:00';\n-\n-drop table dt64_monot_test;\n-drop table dt64_monot_test_string;\ndiff --git a/tests/queries/0_stateless/02373_datetime64_monotonicity.reference b/tests/queries/0_stateless/02373_datetime64_monotonicity.reference\nindex 935ee685cc99..dd7ddf43e704 100644\n--- a/tests/queries/0_stateless/02373_datetime64_monotonicity.reference\n+++ b/tests/queries/0_stateless/02373_datetime64_monotonicity.reference\n@@ -4,6 +4,9 @@ Asia/Tehran\n 0\n 10\n 0\n+9\n+0\n+9\n 10\n 1\n 1\n@@ -27,6 +30,9 @@ UTC\n 10\n 10\n 10\n+9\n+10\n+9\n 0\n 1\n 1\n@@ -50,6 +56,9 @@ Canada/Atlantic\n 10\n 10\n 10\n+9\n+10\n+9\n 0\n 1\n 1\n@@ -73,6 +82,9 @@ Europe/Berlin\n 10\n 10\n 10\n+9\n+9\n+9\n 1\n 1\n 1\ndiff --git a/tests/queries/0_stateless/02373_datetime64_monotonicity.sh b/tests/queries/0_stateless/02373_datetime64_monotonicity.sh\nindex 0e0dc0ec22ab..7e852aa24b0b 100755\n--- a/tests/queries/0_stateless/02373_datetime64_monotonicity.sh\n+++ b/tests/queries/0_stateless/02373_datetime64_monotonicity.sh\n@@ -7,6 +7,44 @@ CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n for tz in Asia/Tehran UTC Canada/Atlantic Europe/Berlin\n do\n     echo \"$tz\"\n-    TZ=$tz $CLICKHOUSE_LOCAL -mn < ${CUR_DIR}/02373_datetime64_monotonicity.queries\n+    TZ=$tz $CLICKHOUSE_LOCAL --multiline --multiquery \"\n+      drop table if exists dt64_monotonicity_test;\n+      drop table if exists dt64_monotonicity_test_string;\n+      CREATE TABLE dt64_monotonicity_test (date_time DateTime64(3, 'Europe/Berlin'), id String) ENGINE = MergeTree PARTITION BY toDate(date_time, 'Europe/Berlin') ORDER BY date_time;\n+      insert into dt64_monotonicity_test select toDateTime64('2020-01-01 00:00:00.000', 3) + number, '' from numbers(10);\n+\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime(date_time) >= toDateTime('2020-01-01 00:00:00') SETTINGS force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) >= '2020-01-01 00:00:01.111' SETTINGS force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) >= '2020-01-01 00:00:00.000' SETTINGS force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) >= toDateTime64('2020-01-01 00:00:00.000001', 3) SETTINGS force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) >= toDateTime64('2020-01-01 00:00:00.000001', 3, 'Europe/Berlin') SETTINGS force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) >= toDateTime64('2020-01-01 00:00:00.000001', 6) SETTINGS force_index_by_date = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) >= toDateTime64('2020-01-01 00:00:00.000001', 6, 'Europe/Berlin') SETTINGS force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) >= toDateTime64('2020-01-01 00:00:00.000001', 6) SETTINGS force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) <= toDateTime64('2020-01-01 00:00:00.000001', 3, 'Europe/Berlin') settings force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) <= toDateTime64('2020-01-01 00:00:00.000001', 3) settings force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) = toDateTime64('2020-01-01 00:00:00.000000', 6);\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 3) = toDateTime64('2020-01-01 00:00:00.000000', 6, 'Europe/Berlin');\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 6) = toDateTime64('2020-01-01 00:00:00.000000', 6) settings force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 6) = toDateTime64('2020-01-01 00:00:00.000001', 6, 'Europe/Berlin') settings force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 6) > toDateTime64('2020-01-01 00:00:00.000001', 6, 'Europe/Berlin') settings force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 6) >= toDateTime64('2020-01-01 00:00:00.000001', 6, 'Europe/Berlin') settings force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 6) >= toDateTime64('2020-01-01 00:00:00.000001', 6) settings force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 0) >= toDateTime64('2020-01-01 00:00:00.000001', 0, 'Europe/Berlin') settings force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 0) >= toDateTime64('2020-01-01 00:00:00.000001', 0) settings force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 0) >= '2020-01-01 00:00:00' settings force_index_by_date = 1, force_primary_key = 1;\n+      SELECT count() FROM dt64_monotonicity_test WHERE toDateTime64(date_time, 0) >= '2020-01-01 00:00:01.1' settings force_index_by_date = 1, force_primary_key = 1;\n+\n+      create table dt64_monotonicity_test_string(date_time String, x String) Engine=MergeTree order by date_time;\n+      insert into dt64_monotonicity_test_string select '2020-01-01 00:00:00.000000001', '' from numbers(1);\n+      insert into dt64_monotonicity_test_string select '2020-01-01 00:00:00.000', '' from numbers(10);\n+\n+      SELECT count() FROM dt64_monotonicity_test_string WHERE toDateTime64(date_time,9) = '2020-01-01 00:00:00.000000000';\n+      SELECT count() FROM dt64_monotonicity_test_string WHERE toDateTime64(date_time,3) = '2020-01-01 00:00:00.000000001';\n+      SELECT count() FROM dt64_monotonicity_test_string WHERE toDateTime64(date_time,9) = '2020-01-01 00:00:00';\n+\n+      drop table dt64_monotonicity_test;\n+      drop table dt64_monotonicity_test_string;\n+    \"\n     echo \"\"\n done\ndiff --git a/tests/queries/0_stateless/03147_datetime64_constant_index_analysis.reference b/tests/queries/0_stateless/03147_datetime64_constant_index_analysis.reference\nnew file mode 100644\nindex 000000000000..9abcce111362\n--- /dev/null\n+++ b/tests/queries/0_stateless/03147_datetime64_constant_index_analysis.reference\n@@ -0,0 +1,6 @@\n+7385\n+7385\n+7385\n+7385\n+86401\n+86401\ndiff --git a/tests/queries/0_stateless/03147_datetime64_constant_index_analysis.sql b/tests/queries/0_stateless/03147_datetime64_constant_index_analysis.sql\nnew file mode 100644\nindex 000000000000..144478eb7215\n--- /dev/null\n+++ b/tests/queries/0_stateless/03147_datetime64_constant_index_analysis.sql\n@@ -0,0 +1,12 @@\n+DROP TABLE IF EXISTS test;\n+CREATE TABLE test (d DateTime, PRIMARY KEY (d));\n+INSERT INTO test SELECT toDateTime('2024-01-01') + number FROM numbers(1e6);\n+SET max_rows_to_read = 10000;\n+SELECT count() FROM test WHERE d <= '2024-01-01 02:03:04';\n+SELECT count() FROM test WHERE d <= toDateTime('2024-01-01 02:03:04');\n+SELECT count() FROM test WHERE d <= toDateTime64('2024-01-01 02:03:04', 0);\n+SELECT count() FROM test WHERE d <= toDateTime64('2024-01-01 02:03:04', 3);\n+SET max_rows_to_read = 100_000;\n+SELECT count() FROM test WHERE d <= '2024-01-02';\n+SELECT count() FROM test WHERE d <= toDate('2024-01-02');\n+DROP TABLE test;\n",
  "problem_statement": "Index analysis does not work for comparison between `DateTime` and `DateTime64`.\nThis test does not pass:\r\n\r\n```\r\nDROP TABLE IF EXISTS test;\r\nCREATE TABLE test (d DateTime, PRIMARY KEY (d));\r\nINSERT INTO test SELECT toDateTime('2024-01-01') + number FROM numbers(1e6);\r\nSET max_rows_to_read = 10000;\r\nSELECT count() FROM test WHERE d <= '2024-01-01 02:03:04';\r\nSELECT count() FROM test WHERE d <= toDateTime('2024-01-01 02:03:04');\r\nSELECT count() FROM test WHERE d <= toDateTime64('2024-01-01 02:03:04', 0);\r\nSELECT count() FROM test WHERE d <= toDateTime64('2024-01-01 02:03:04', 3);\r\nDROP TABLE test;\r\n```\n",
  "hints_text": "",
  "created_at": "2024-05-07T04:17:55Z"
}