diff --git a/tests/integration/test_filesystem_layout/test.py b/tests/integration/test_filesystem_layout/test.py
index 02eb355e0326..e5775ba8a620 100644
--- a/tests/integration/test_filesystem_layout/test.py
+++ b/tests/integration/test_filesystem_layout/test.py
@@ -139,35 +139,22 @@ def test_data_directory_symlinks(started_cluster):
     s3_symlink = database_dir / "s3"
     jbod_symlink = database_dir / "jbod"
 
-    default_data = (
-        clickhouse_dir / "store" / "876" / "87654321-1000-4000-8000-000000000001"
-    )
-    s3_data = (
-        clickhouse_dir
-        / "disks"
-        / "s3"
-        / "store"
-        / "876"
-        / "87654321-1000-4000-8000-000000000002"
-    )
-    jbod_data = Path("jbod1") / "store" / "876" / "87654321-1000-4000-8000-000000000003"
-
     node.restart_clickhouse()
 
     assert (
         node.exec_in_container(["bash", "-c", f"ls -l {default_symlink}"])
         .strip()
-        .endswith(f"{default_symlink} -> {default_data}")
+        .endswith(f"{default_symlink} -> ../../store/876/87654321-1000-4000-8000-000000000001")
     )
     assert (
         node.exec_in_container(["bash", "-c", f"ls -l {s3_symlink}"])
         .strip()
-        .endswith(f"{s3_symlink} -> {s3_data}")
+        .endswith(f"{s3_symlink} -> ../../disks/s3/store/876/87654321-1000-4000-8000-000000000002")
     )
     assert (
         node.exec_in_container(["bash", "-c", f"ls -l {jbod_symlink}"])
         .strip()
-        .endswith(f"{jbod_symlink} -> /{jbod_data}")
+        .endswith(f"{jbod_symlink} -> ../../../../../jbod1/store/876/87654321-1000-4000-8000-000000000003")
     )
 
     node.query("DROP TABLE test_symlinks.default SYNC")
diff --git a/tests/queries/0_stateless/03271_clickhouse_local_persistency.reference b/tests/queries/0_stateless/03271_clickhouse_local_persistency.reference
new file mode 100644
index 000000000000..7abc1ea60b43
--- /dev/null
+++ b/tests/queries/0_stateless/03271_clickhouse_local_persistency.reference
@@ -0,0 +1,35 @@
+1
+0	Hello0
+1	Hello1
+2	Hello2
+3	Hello3
+4	Hello4
+5	Hello5
+6	Hello6
+7	Hello7
+8	Hello8
+9	Hello9
+default	Overlay
+World0
+World1
+World2
+World3
+World4
+World5
+World6
+World7
+World8
+World9
+
+World0
+World1
+World2
+World3
+World4
+World5
+World6
+World7
+World8
+World9
+Hello
+World
diff --git a/tests/queries/0_stateless/03271_clickhouse_local_persistency.sh b/tests/queries/0_stateless/03271_clickhouse_local_persistency.sh
new file mode 100755
index 000000000000..71be0a13af2e
--- /dev/null
+++ b/tests/queries/0_stateless/03271_clickhouse_local_persistency.sh
@@ -0,0 +1,37 @@
+#!/usr/bin/env bash
+
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CUR_DIR"/../shell_config.sh
+
+cd "${CLICKHOUSE_TMP}" || exit
+rm -rf "clickhouse.local"
+rm -f test
+
+# You can specify the path explicitly.
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "SELECT 1"
+
+# You can create tables.
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "CREATE TABLE test (x UInt64, s String) ENGINE = MergeTree ORDER BY x"
+
+# The data is persisted between restarts
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "INSERT INTO test SELECT number, 'Hello' || number FROM numbers(10)"
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "SELECT * FROM test ORDER BY x"
+
+# The default database is an Overlay on top of Atomic, which lets you exchange tables.
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "SELECT name, engine FROM system.databases WHERE name = 'default'"
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "CREATE OR REPLACE TABLE test (s String) ENGINE = MergeTree ORDER BY ()"
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "SELECT * FROM test"
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "INSERT INTO test SELECT 'World' || number FROM numbers(10)"
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "SELECT * FROM test"
+
+# It is an overlay database. If you don't have a table with the same name, it will look for a file with that name.
+# Files are searched relative to the current working directory.
+echo '"Hello"
+"World"' > "test"
+
+echo
+$CLICKHOUSE_LOCAL --path "clickhouse.local" --query "SELECT * FROM test; DROP TABLE test; SELECT * FROM test;"
+
+rm -rf "clickhouse.local"
+rm test
diff --git a/tests/queries/0_stateless/03381_clickhouse_local_empty_default_database.reference b/tests/queries/0_stateless/03381_clickhouse_local_empty_default_database.reference
index 7018cf3dfa01..fdc00bed1e10 100644
--- a/tests/queries/0_stateless/03381_clickhouse_local_empty_default_database.reference
+++ b/tests/queries/0_stateless/03381_clickhouse_local_empty_default_database.reference
@@ -1,2 +1,1 @@
 default_database cannot be empty. (BAD_ARGUMENTS)
-default_database cannot be empty. (BAD_ARGUMENTS)
diff --git a/tests/queries/0_stateless/03381_clickhouse_local_empty_default_database.sh b/tests/queries/0_stateless/03381_clickhouse_local_empty_default_database.sh
index ea4d17d63509..b45948ce2e3f 100755
--- a/tests/queries/0_stateless/03381_clickhouse_local_empty_default_database.sh
+++ b/tests/queries/0_stateless/03381_clickhouse_local_empty_default_database.sh
@@ -4,5 +4,4 @@ CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
 # shellcheck source=../shell_config.sh
 . "$CUR_DIR"/../shell_config.sh
 
-$CLICKHOUSE_LOCAL --database '' |& grep -o "default_database cannot be empty. (BAD_ARGUMENTS)"
 $CLICKHOUSE_LOCAL -- --default_database='' |& grep -o "default_database cannot be empty. (BAD_ARGUMENTS)"
