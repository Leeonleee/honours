{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 56619,
  "instance_id": "ClickHouse__ClickHouse-56619",
  "issue_numbers": [
    "56482"
  ],
  "base_commit": "5f45e4af9d4cd2e176ba7c83710b313812d2efed",
  "patch": "diff --git a/programs/server/embedded.xml b/programs/server/embedded.xml\nindex c2336e0d5826..9311749a1734 100644\n--- a/programs/server/embedded.xml\n+++ b/programs/server/embedded.xml\n@@ -23,7 +23,9 @@\n \n             <profile>default</profile>\n             <quota>default</quota>\n+\n             <access_management>1</access_management>\n+            <named_collection_control>1</named_collection_control>\n         </default>\n     </users>\n \ndiff --git a/programs/server/users.xml b/programs/server/users.xml\nindex fbb5a2c228f7..57bc6309a54c 100644\n--- a/programs/server/users.xml\n+++ b/programs/server/users.xml\n@@ -85,7 +85,10 @@\n             <quota>default</quota>\n \n             <!-- User can create other users and grant rights to them. -->\n-            <!-- <access_management>1</access_management> -->\n+            <access_management>1</access_management>\n+\n+            <!-- User can manipulate named collections. -->\n+            <named_collection_control>1</named_collection_control>\n \n             <!-- User permissions can be granted here -->\n             <!--\n",
  "test_patch": "diff --git a/docker/test/performance-comparison/config/users.d/perf-comparison-tweaks-users.xml b/docker/test/performance-comparison/config/users.d/perf-comparison-tweaks-users.xml\nindex cb591f1a184b..e780a99ecde7 100644\n--- a/docker/test/performance-comparison/config/users.d/perf-comparison-tweaks-users.xml\n+++ b/docker/test/performance-comparison/config/users.d/perf-comparison-tweaks-users.xml\n@@ -34,9 +34,4 @@\n             <memory_profiler_step>0</memory_profiler_step>\n         </default>\n     </profiles>\n-    <users>\n-        <default>\n-            <access_management>1</access_management>\n-        </default>\n-    </users>\n </clickhouse>\ndiff --git a/tests/integration/test_named_collections/configs/users.d/users_no_default_access.xml b/tests/integration/test_named_collections/configs/users.d/users_no_default_access.xml\nindex b8f38f04ca94..dcac83188dcb 100644\n--- a/tests/integration/test_named_collections/configs/users.d/users_no_default_access.xml\n+++ b/tests/integration/test_named_collections/configs/users.d/users_no_default_access.xml\n@@ -4,6 +4,7 @@\n             <password></password>\n             <profile>default</profile>\n             <quota>default</quota>\n+            <named_collection_control>0</named_collection_control>\n         </default>\n     </users>\n </clickhouse>\ndiff --git a/tests/integration/test_storage_s3/test.py b/tests/integration/test_storage_s3/test.py\nindex 01ade1acc4d5..3dd3c9e39d02 100644\n--- a/tests/integration/test_storage_s3/test.py\n+++ b/tests/integration/test_storage_s3/test.py\n@@ -944,13 +944,6 @@ def test_predefined_connection_configuration(started_cluster):\n     instance.query(\"GRANT SELECT ON *.* TO user\")\n \n     instance.query(f\"drop table if exists {name}\", user=\"user\")\n-    error = instance.query_and_get_error(\n-        f\"CREATE TABLE {name} (id UInt32) ENGINE = S3(s3_conf1, format='CSV')\"\n-    )\n-    assert (\n-        \"To execute this query, it's necessary to have the grant NAMED COLLECTION ON s3_conf1\"\n-        in error\n-    )\n     error = instance.query_and_get_error(\n         f\"CREATE TABLE {name} (id UInt32) ENGINE = S3(s3_conf1, format='CSV')\",\n         user=\"user\",\n@@ -975,11 +968,6 @@ def test_predefined_connection_configuration(started_cluster):\n     )\n     assert result == instance.query(\"SELECT number FROM numbers(10)\")\n \n-    error = instance.query_and_get_error(\"SELECT * FROM s3(no_collection)\")\n-    assert (\n-        \"To execute this query, it's necessary to have the grant NAMED COLLECTION ON no_collection\"\n-        in error\n-    )\n     error = instance.query_and_get_error(\"SELECT * FROM s3(no_collection)\", user=\"user\")\n     assert (\n         \"To execute this query, it's necessary to have the grant NAMED COLLECTION ON no_collection\"\n",
  "problem_statement": "A question about `access_management`\nDo you remember why we don't have `access_management` by default?\r\nWhat if we enable it in the next version as a backward incompatible change?\n",
  "hints_text": "",
  "created_at": "2023-11-11T07:48:23Z",
  "modified_files": [
    "programs/server/embedded.xml",
    "programs/server/users.xml"
  ],
  "modified_test_files": [
    "docker/test/performance-comparison/config/users.d/perf-comparison-tweaks-users.xml",
    "tests/integration/test_named_collections/configs/users.d/users_no_default_access.xml",
    "tests/integration/test_storage_s3/test.py"
  ]
}