{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 43547,
  "instance_id": "ClickHouse__ClickHouse-43547",
  "issue_numbers": [
    "43524"
  ],
  "base_commit": "0076109654469d06abd2f836d082b8400fc3ef6d",
  "patch": "diff --git a/src/Analyzer/Passes/UniqInjectiveFunctionsEliminationPass.cpp b/src/Analyzer/Passes/UniqInjectiveFunctionsEliminationPass.cpp\nindex 6520cb0717d3..1716c37228af 100644\n--- a/src/Analyzer/Passes/UniqInjectiveFunctionsEliminationPass.cpp\n+++ b/src/Analyzer/Passes/UniqInjectiveFunctionsEliminationPass.cpp\n@@ -2,9 +2,13 @@\n \n #include <Functions/IFunction.h>\n \n+#include <AggregateFunctions/AggregateFunctionFactory.h>\n+#include <AggregateFunctions/IAggregateFunction.h>\n+\n #include <Analyzer/InDepthQueryTreeVisitor.h>\n #include <Analyzer/FunctionNode.h>\n \n+\n namespace DB\n {\n \n@@ -30,7 +34,9 @@ class UniqInjectiveFunctionsEliminationVisitor : public InDepthQueryTreeVisitor<\n         if (!function_node || !function_node->isAggregateFunction() || !isUniqFunction(function_node->getFunctionName()))\n             return;\n \n+        bool replaced_argument = false;\n         auto & uniq_function_arguments_nodes = function_node->getArguments().getNodes();\n+\n         for (auto & uniq_function_argument_node : uniq_function_arguments_nodes)\n         {\n             auto * uniq_function_argument_node_typed = uniq_function_argument_node->as<FunctionNode>();\n@@ -49,7 +55,28 @@ class UniqInjectiveFunctionsEliminationVisitor : public InDepthQueryTreeVisitor<\n \n             /// Replace injective function with its single argument\n             uniq_function_argument_node = uniq_function_argument_node_argument_nodes[0];\n+            replaced_argument = true;\n         }\n+\n+        if (!replaced_argument)\n+            return;\n+\n+        const auto & function_node_argument_nodes = function_node->getArguments().getNodes();\n+\n+        DataTypes argument_types;\n+        argument_types.reserve(function_node_argument_nodes.size());\n+\n+        for (const auto & function_node_argument : function_node_argument_nodes)\n+            argument_types.emplace_back(function_node_argument->getResultType());\n+\n+        AggregateFunctionProperties properties;\n+        auto aggregate_function = AggregateFunctionFactory::instance().get(function_node->getFunctionName(),\n+            argument_types,\n+            function_node->getAggregateFunction()->getParameters(),\n+            properties);\n+\n+        auto function_result_type = function_node->getResultType();\n+        function_node->resolveAsAggregateFunction(std::move(aggregate_function), std::move(function_result_type));\n     }\n };\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02493_analyzer_uniq_injective_functions_elimination.reference b/tests/queries/0_stateless/02493_analyzer_uniq_injective_functions_elimination.reference\nnew file mode 100644\nindex 000000000000..ba7786789b48\n--- /dev/null\n+++ b/tests/queries/0_stateless/02493_analyzer_uniq_injective_functions_elimination.reference\n@@ -0,0 +1,15 @@\n+QUERY id: 0\n+  PROJECTION COLUMNS\n+    uniqCombined(tuple(\\'\\')) UInt64\n+  PROJECTION\n+    LIST id: 1, nodes: 1\n+      FUNCTION id: 2, function_name: uniqCombined, function_type: aggregate, result_type: UInt64\n+        ARGUMENTS\n+          LIST id: 3, nodes: 1\n+            CONSTANT id: 4, constant_value: \\'\\', constant_value_type: String\n+  JOIN TREE\n+    TABLE_FUNCTION id: 5, table_function_name: numbers\n+      ARGUMENTS\n+        LIST id: 6, nodes: 1\n+          CONSTANT id: 7, constant_value: UInt64_1, constant_value_type: UInt8\n+1\ndiff --git a/tests/queries/0_stateless/02493_analyzer_uniq_injective_functions_elimination.sql b/tests/queries/0_stateless/02493_analyzer_uniq_injective_functions_elimination.sql\nnew file mode 100644\nindex 000000000000..830db2746785\n--- /dev/null\n+++ b/tests/queries/0_stateless/02493_analyzer_uniq_injective_functions_elimination.sql\n@@ -0,0 +1,5 @@\n+SET allow_experimental_analyzer = 1;\n+\n+EXPLAIN QUERY TREE SELECT uniqCombined(tuple('')) FROM numbers(1);\n+\n+SELECT uniqCombined(tuple('')) FROM numbers(1);\n",
  "problem_statement": "Experimental Analyzer: wrong analysis of tuples.\n**Describe the bug**\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/43308/9ecda9f45c911047e04e8a089741a19ee49fe16a/fuzzer_astfuzzerubsan//report.html\r\n\r\n**How to reproduce**\r\n```\r\nmilovidov-desktop :) SET allow_experimental_analyzer = 1\r\n\r\nSET allow_experimental_analyzer = 1\r\n\r\nQuery id: 16b87806-ef86-4541-8632-b85496fe92fb\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.000 sec. \r\n\r\nmilovidov-desktop :) SELECT uniqCombined(tuple('')) FROM numbers(1.)\r\n\r\nSELECT uniqCombined(tuple(''))\r\nFROM numbers(1.)\r\n\r\nQuery id: f2027937-5fbc-4e47-b1b3-4b224e3a0495\r\n\r\nAborted (core dumped)\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2022-11-23T11:36:03Z",
  "modified_files": [
    "src/Analyzer/Passes/UniqInjectiveFunctionsEliminationPass.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02493_analyzer_uniq_injective_functions_elimination.reference",
    "b/tests/queries/0_stateless/02493_analyzer_uniq_injective_functions_elimination.sql"
  ]
}