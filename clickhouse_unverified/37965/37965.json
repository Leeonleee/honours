{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 37965,
  "instance_id": "ClickHouse__ClickHouse-37965",
  "issue_numbers": [
    "37815"
  ],
  "base_commit": "349f1b140a8d3a7c4c4b7c05fa8697f1ca73bd38",
  "patch": "diff --git a/src/Storages/WindowView/StorageWindowView.cpp b/src/Storages/WindowView/StorageWindowView.cpp\nindex c8454d30ebf7..305abe234346 100644\n--- a/src/Storages/WindowView/StorageWindowView.cpp\n+++ b/src/Storages/WindowView/StorageWindowView.cpp\n@@ -6,6 +6,7 @@\n #include <DataTypes/DataTypeTuple.h>\n #include <Functions/FunctionFactory.h>\n #include <Functions/FunctionsTimeWindow.h>\n+#include <Interpreters/addMissingDefaults.h>\n #include <Interpreters/AddDefaultDatabaseVisitor.h>\n #include <Interpreters/Context.h>\n #include <Interpreters/InDepthNodeVisitor.h>\n@@ -458,6 +459,9 @@ void StorageWindowView::alter(\n \n     auto inner_query = initInnerQuery(new_select_query->as<ASTSelectQuery &>(), local_context);\n \n+    input_header.clear();\n+    output_header.clear();\n+\n     InterpreterDropQuery::executeDropQuery(\n     ASTDropQuery::Kind::Drop, getContext(), local_context, inner_table_id, true);\n \n@@ -667,6 +671,19 @@ inline void StorageWindowView::fire(UInt32 watermark)\n         auto block_io = interpreter.execute();\n \n         auto pipe = Pipe(std::make_shared<BlocksSource>(blocks, header));\n+\n+        auto adding_missing_defaults_dag = addMissingDefaults(\n+            pipe.getHeader(),\n+            block_io.pipeline.getHeader().getNamesAndTypesList(),\n+            getTargetTable()->getInMemoryMetadataPtr()->getColumns(),\n+            getContext(),\n+            getContext()->getSettingsRef().insert_null_as_default);\n+        auto adding_missing_defaults_actions = std::make_shared<ExpressionActions>(adding_missing_defaults_dag);\n+        pipe.addSimpleTransform([&](const Block & stream_header)\n+        {\n+            return std::make_shared<ExpressionTransform>(stream_header, adding_missing_defaults_actions);\n+        });\n+\n         auto convert_actions_dag = ActionsDAG::makeConvertingActions(\n             pipe.getHeader().getColumnsWithTypeAndName(),\n             block_io.pipeline.getHeader().getColumnsWithTypeAndName(),\n@@ -1054,21 +1071,6 @@ void StorageWindowView::threadFuncFireEvent()\n     clean_cache_task->schedule();\n }\n \n-// Pipe StorageWindowView::read(\n-//     const Names & column_names,\n-//     const StorageSnapshotPtr & storage_snapshot,\n-//     SelectQueryInfo & query_info,\n-//     ContextPtr local_context,\n-//     QueryProcessingStage::Enum processed_stage,\n-//     const size_t max_block_size,\n-//     const unsigned num_streams)\n-// {\n-//     QueryPlan plan;\n-//     read(plan, column_names, storage_snapshot, query_info, local_context, processed_stage, max_block_size, num_streams);\n-//     return plan.convertToPipe(\n-//         QueryPlanOptimizationSettings::fromContext(local_context), BuildQueryPipelineSettings::fromContext(local_context));\n-// }\n-\n void StorageWindowView::read(\n     QueryPlan & query_plan,\n     const Names & column_names,\n@@ -1163,9 +1165,6 @@ StorageWindowView::StorageWindowView(\n     storage_metadata.setColumns(columns_);\n     setInMemoryMetadata(storage_metadata);\n \n-    if (!query.select)\n-        throw Exception(ErrorCodes::INCORRECT_QUERY, \"SELECT query is not specified for {}\", getName());\n-\n     /// If the target table is not set, use inner target table\n     has_inner_target_table = query.to_table_id.empty();\n     if (has_inner_target_table && !query.storage)\n@@ -1633,8 +1632,8 @@ const Block & StorageWindowView::getInputHeader() const\n     std::lock_guard lock(sample_block_lock);\n     if (!input_header)\n     {\n-        input_header = InterpreterSelectQuery(select_query->clone(), getContext(), SelectQueryOptions(QueryProcessingStage::FetchColumns))\n-                           .getSampleBlock();\n+        auto metadata = getSourceTable()->getInMemoryMetadataPtr();\n+        input_header = metadata->getSampleBlockNonMaterialized();\n     }\n     return input_header;\n }\ndiff --git a/src/Storages/WindowView/StorageWindowView.h b/src/Storages/WindowView/StorageWindowView.h\nindex 85dec481f7d6..c4a7b98a22fa 100644\n--- a/src/Storages/WindowView/StorageWindowView.h\n+++ b/src/Storages/WindowView/StorageWindowView.h\n@@ -142,15 +142,6 @@ class StorageWindowView final : public IStorage, WithContext\n     void startup() override;\n     void shutdown() override;\n \n-    // Pipe read(\n-    //     const Names & column_names,\n-    //     const StorageSnapshotPtr & storage_snapshot,\n-    //     SelectQueryInfo & query_info,\n-    //     ContextPtr context,\n-    //     QueryProcessingStage::Enum processed_stage,\n-    //     size_t max_block_size,\n-    //     unsigned num_streams) override;\n-\n     void read(\n         QueryPlan & query_plan,\n         const Names & column_names,\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01076_window_view_alter_query_to.sh b/tests/queries/0_stateless/01076_window_view_alter_query_to.sh\nindex 959a0b9e1e27..039b97917285 100755\n--- a/tests/queries/0_stateless/01076_window_view_alter_query_to.sh\n+++ b/tests/queries/0_stateless/01076_window_view_alter_query_to.sh\n@@ -30,7 +30,7 @@ $CLICKHOUSE_CLIENT --query=\"SELECT * FROM dst ORDER BY market, w_end;\"\n $CLICKHOUSE_CLIENT --query=\"SELECT '----ALTER TABLE...MODIFY QUERY----';\"\n \n $CLICKHOUSE_CLIENT --multiquery <<EOF\n-ALTER TABLE wv MODIFY QUERY SELECT count(a) AS count, market * 2, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid, market;\n+ALTER TABLE wv MODIFY QUERY SELECT count(a) AS count, mt.market * 2 as market, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid, mt.market;\n \n INSERT INTO mt VALUES (1, 6, '1990/01/01 12:00:10');\n INSERT INTO mt VALUES (1, 7, '1990/01/01 12:00:11');\ndiff --git a/tests/queries/0_stateless/01077_window_view_alter_query_to_modify_source.sh b/tests/queries/0_stateless/01077_window_view_alter_query_to_modify_source.sh\nindex 7d02f1479f95..420bfd5bb474 100755\n--- a/tests/queries/0_stateless/01077_window_view_alter_query_to_modify_source.sh\n+++ b/tests/queries/0_stateless/01077_window_view_alter_query_to_modify_source.sh\n@@ -32,7 +32,7 @@ $CLICKHOUSE_CLIENT --query=\"SELECT * FROM dst ORDER BY market, w_end;\"\n $CLICKHOUSE_CLIENT --query=\"SELECT '----ALTER TABLE...MODIFY QUERY----';\"\n \n $CLICKHOUSE_CLIENT --multiquery <<EOF\n-ALTER TABLE wv MODIFY QUERY SELECT count(a) AS count, market * 2, tumbleEnd(wid) AS w_end FROM mt2 GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid, market;\n+ALTER TABLE wv MODIFY QUERY SELECT count(a) AS count, mt2.market * 2 as market, tumbleEnd(wid) AS w_end FROM mt2 GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid, mt2.market;\n \n INSERT INTO mt2 VALUES (1, 6, '1990/01/01 12:00:10');\n INSERT INTO mt2 VALUES (1, 7, '1990/01/01 12:00:11');\ndiff --git a/tests/queries/0_stateless/01087_window_view_alter_query.sh b/tests/queries/0_stateless/01087_window_view_alter_query.sh\nindex 463787af2b4c..946f9c1cf126 100755\n--- a/tests/queries/0_stateless/01087_window_view_alter_query.sh\n+++ b/tests/queries/0_stateless/01087_window_view_alter_query.sh\n@@ -28,7 +28,7 @@ $CLICKHOUSE_CLIENT --query=\"SELECT * FROM wv ORDER BY market, w_end;\"\n $CLICKHOUSE_CLIENT --query=\"SELECT '----ALTER TABLE...MODIFY QUERY----';\"\n \n $CLICKHOUSE_CLIENT --multiquery <<EOF\n-ALTER TABLE wv MODIFY QUERY SELECT count(a) AS count, market * 2, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid, market;\n+ALTER TABLE wv MODIFY QUERY SELECT count(a) AS count, mt.market * 2 as market, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid, mt.market;\n \n INSERT INTO mt VALUES (1, 6, toDateTime('1990/01/01 12:00:10', 'US/Samoa'));\n INSERT INTO mt VALUES (1, 7, toDateTime('1990/01/01 12:00:11', 'US/Samoa'));\ndiff --git a/tests/queries/0_stateless/01088_window_view_default_column.reference b/tests/queries/0_stateless/01088_window_view_default_column.reference\nnew file mode 100644\nindex 000000000000..bc04884b69a6\n--- /dev/null\n+++ b/tests/queries/0_stateless/01088_window_view_default_column.reference\n@@ -0,0 +1,3 @@\n+3\t0\t1990-01-01 12:00:05\n+2\t0\t1990-01-01 12:00:10\n+2\t0\t1990-01-01 12:00:15\ndiff --git a/tests/queries/0_stateless/01088_window_view_default_column.sh b/tests/queries/0_stateless/01088_window_view_default_column.sh\nnew file mode 100755\nindex 000000000000..0f8213b18dc7\n--- /dev/null\n+++ b/tests/queries/0_stateless/01088_window_view_default_column.sh\n@@ -0,0 +1,35 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+$CLICKHOUSE_CLIENT --multiquery <<EOF\n+SET allow_experimental_window_view = 1;\n+DROP TABLE IF EXISTS mt;\n+DROP TABLE IF EXISTS wv;\n+DROP TABLE IF EXISTS dst;\n+\n+CREATE TABLE dst(count UInt64, market Int64 default 0, w_end DateTime('US/Samoa')) Engine=MergeTree ORDER BY tuple();\n+CREATE TABLE mt(a Int32, market Int64, timestamp DateTime('US/Samoa')) ENGINE=MergeTree ORDER BY tuple();\n+\n+CREATE WINDOW VIEW wv TO dst WATERMARK=ASCENDING AS SELECT count(a) AS count, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid;\n+\n+INSERT INTO mt VALUES (1, 1, toDateTime('1990/01/01 12:00:00', 'US/Samoa'));\n+INSERT INTO mt VALUES (1, 2, toDateTime('1990/01/01 12:00:01', 'US/Samoa'));\n+INSERT INTO mt VALUES (1, 3, toDateTime('1990/01/01 12:00:02', 'US/Samoa'));\n+INSERT INTO mt VALUES (1, 4, toDateTime('1990/01/01 12:00:05', 'US/Samoa'));\n+INSERT INTO mt VALUES (1, 5, toDateTime('1990/01/01 12:00:06', 'US/Samoa'));\n+INSERT INTO mt VALUES (1, 6, toDateTime('1990/01/01 12:00:10', 'US/Samoa'));\n+INSERT INTO mt VALUES (1, 7, toDateTime('1990/01/01 12:00:11', 'US/Samoa'));\n+INSERT INTO mt VALUES (1, 8, toDateTime('1990/01/01 12:00:30', 'US/Samoa'));\n+EOF\n+\n+while true; do\n+\t$CLICKHOUSE_CLIENT --query=\"SELECT count(*) FROM dst\" | grep -q \"3\" && break || sleep .5 ||:\n+done\n+\n+$CLICKHOUSE_CLIENT --query=\"SELECT count, market, w_end FROM dst ORDER BY w_end, market;\"\n+$CLICKHOUSE_CLIENT --query=\"DROP TABLE wv;\"\n+$CLICKHOUSE_CLIENT --query=\"DROP TABLE dst;\"\n+$CLICKHOUSE_CLIENT --query=\"DROP TABLE mt;\"\n",
  "problem_statement": "Block structure mismatch in  function connect between CopyingDataToViewsTransform and PushingToWindowViewSink\nhttps://s3.amazonaws.com/clickhouse-test-reports/0/58f8c8726595e54092cf8f30fed729a7ed1d3fd3/stress_test__undefined__actions_.html\r\n```\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:23:48.748947 [ 13574 ] {e0d43260-253d-4ae4-b286-46b0f883c55e} <Fatal> : Logical error: 'Block structure mismatch in  function connect between CopyingDataToViewsTransform and PushingToWindowViewSink stream: different names of columns:\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.154250 [ 50174 ] {} <Fatal> BaseDaemon: ########################################\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.155146 [ 50174 ] {} <Fatal> BaseDaemon: (version 22.6.1.1 (official build), build id: F6EB5249B406F1C9) (from thread 13574) (query_id: e0d43260-253d-4ae4-b286-46b0f883c55e) (query: insert into mt values ) Received signal Aborted (6)\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.170638 [ 50174 ] {} <Fatal> BaseDaemon: \r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.170981 [ 50174 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f41f8dbd03b 0x7f41f8d9c859 0xfc35d2b 0xfc35f85 0x227cc964 0x227c5106 0x227ca323 0x24d93826 0x251b43ce 0x238c45d8 0x238c6908 0x23d69e34 0x23d6690a 0x24d24d98 0x24d41cf6 0x26be2e0c 0x26be32e5 0x26d61547 0x26d5ee2c 0x7f41f8f74609 0x7f41f8e99163\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.173551 [ 50174 ] {} <Fatal> BaseDaemon: 3. raise @ 0x7f41f8dbd03b in ?\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.173869 [ 50174 ] {} <Fatal> BaseDaemon: 4. abort @ 0x7f41f8d9c859 in ?\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.200944 [ 50174 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Common/Exception.cpp:47: DB::abortOnFailedAssertion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xfc35d2b in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.229140 [ 50174 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Common/Exception.cpp:70: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xfc35f85 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.264224 [ 50174 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Core/Block.cpp:35: void DB::onError<void>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x227cc964 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.328316 [ 50174 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Core/Block.cpp:0: void DB::checkColumnStructure<void>(DB::ColumnWithTypeAndName const&, DB::ColumnWithTypeAndName const&, std::__1::basic_string_view<char, std::__1::char_traits<char> >, bool, int) @ 0x227c5106 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.386634 [ 50174 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/Core/Block.cpp:98: void DB::checkBlockStructure<void>(DB::Block const&, DB::Block const&, std::__1::basic_string_view<char, std::__1::char_traits<char> >, bool) @ 0x227ca323 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.495700 [ 50174 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../src/Processors/Port.cpp:0: DB::connect(DB::OutputPort&, DB::InputPort&) @ 0x24d93826 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.538192 [ 50174 ] {} <Fatal> BaseDaemon: 11. ./build_docker/../src/Processors/Transforms/buildPushingToViewsChain.cpp:375: DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x251b43ce in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.784897 [ 50174 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/Interpreters/InterpreterInsertQuery.cpp:253: DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x238c45d8 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.904851 [ 50174 ] {} <Fatal> BaseDaemon: 13. ./build_docker/../src/Interpreters/InterpreterInsertQuery.cpp:431: DB::InterpreterInsertQuery::execute() @ 0x238c6908 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:17.993259 [ 50174 ] {} <Fatal> BaseDaemon: 14. ./build_docker/../src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x23d69e34 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.167544 [ 50174 ] {} <Fatal> BaseDaemon: 15. ./build_docker/../src/Interpreters/executeQuery.cpp:1069: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x23d6690a in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.347373 [ 50174 ] {} <Fatal> BaseDaemon: 16. ./build_docker/../src/Server/TCPHandler.cpp:332: DB::TCPHandler::runImpl() @ 0x24d24d98 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.418500 [ 50174 ] {} <Fatal> BaseDaemon: 17. ./build_docker/../src/Server/TCPHandler.cpp:1775: DB::TCPHandler::run() @ 0x24d41cf6 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.434038 [ 50174 ] {} <Fatal> BaseDaemon: 18. ./build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x26be2e0c in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.453419 [ 50174 ] {} <Fatal> BaseDaemon: 19.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:54: std::__1::default_delete<Poco::Net::TCPServerConnection>::operator()(Poco::Net::TCPServerConnection*) const\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.454478 [ 50174 ] {} <Fatal> BaseDaemon: 19.2. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:315: std::__1::unique_ptr<Poco::Net::TCPServerConnection, std::__1::default_delete<Poco::Net::TCPServerConnection> >::reset(Poco::Net::TCPServerConnection*)\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.454782 [ 50174 ] {} <Fatal> BaseDaemon: 19.3. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.455114 [ 50174 ] {} <Fatal> BaseDaemon: 19. ../contrib/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() @ 0x26be32e5 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.473774 [ 50174 ] {} <Fatal> BaseDaemon: 20. ./build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x26d61547 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.485870 [ 50174 ] {} <Fatal> BaseDaemon: 21.1. inlined from ./build_docker/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >::assign(Poco::Runnable*)\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.487932 [ 50174 ] {} <Fatal> BaseDaemon: 21.2. inlined from ../contrib/poco/Foundation/include/Poco/SharedPtr.h:208: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >::operator=(Poco::Runnable*)\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.488981 [ 50174 ] {} <Fatal> BaseDaemon: 21. ../contrib/poco/Foundation/src/Thread_POSIX.cpp:360: Poco::ThreadImpl::runnableEntry(void*) @ 0x26d5ee2c in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.489519 [ 50174 ] {} <Fatal> BaseDaemon: 22. ? @ 0x7f41f8f74609 in ?\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:18.489898 [ 50174 ] {} <Fatal> BaseDaemon: 23. __clone @ 0x7f41f8e99163 in ?\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:19.695315 [ 50174 ] {} <Fatal> BaseDaemon: Checksum of the binary: 666A22026EC8DDF6B378E56897950842, integrity check passed.\r\n/var/log/clickhouse-server/clickhouse-server.err.log:2022.06.02 23:30:38.897334 [ 623 ] {} <Fatal> Application: Child process was terminated by signal 6.\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:23:48.748947 [ 13574 ] {e0d43260-253d-4ae4-b286-46b0f883c55e} <Fatal> : Logical error: 'Block structure mismatch in  function connect between CopyingDataToViewsTransform and PushingToWindowViewSink stream: different names of columns:\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.154250 [ 50174 ] {} <Fatal> BaseDaemon: ########################################\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.155146 [ 50174 ] {} <Fatal> BaseDaemon: (version 22.6.1.1 (official build), build id: F6EB5249B406F1C9) (from thread 13574) (query_id: e0d43260-253d-4ae4-b286-46b0f883c55e) (query: insert into mt values ) Received signal Aborted (6)\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.170638 [ 50174 ] {} <Fatal> BaseDaemon: \r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.170981 [ 50174 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f41f8dbd03b 0x7f41f8d9c859 0xfc35d2b 0xfc35f85 0x227cc964 0x227c5106 0x227ca323 0x24d93826 0x251b43ce 0x238c45d8 0x238c6908 0x23d69e34 0x23d6690a 0x24d24d98 0x24d41cf6 0x26be2e0c 0x26be32e5 0x26d61547 0x26d5ee2c 0x7f41f8f74609 0x7f41f8e99163\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.173551 [ 50174 ] {} <Fatal> BaseDaemon: 3. raise @ 0x7f41f8dbd03b in ?\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.173869 [ 50174 ] {} <Fatal> BaseDaemon: 4. abort @ 0x7f41f8d9c859 in ?\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.200944 [ 50174 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Common/Exception.cpp:47: DB::abortOnFailedAssertion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xfc35d2b in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.229140 [ 50174 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Common/Exception.cpp:70: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xfc35f85 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.264224 [ 50174 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Core/Block.cpp:35: void DB::onError<void>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x227cc964 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.328316 [ 50174 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Core/Block.cpp:0: void DB::checkColumnStructure<void>(DB::ColumnWithTypeAndName const&, DB::ColumnWithTypeAndName const&, std::__1::basic_string_view<char, std::__1::char_traits<char> >, bool, int) @ 0x227c5106 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.386634 [ 50174 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/Core/Block.cpp:98: void DB::checkBlockStructure<void>(DB::Block const&, DB::Block const&, std::__1::basic_string_view<char, std::__1::char_traits<char> >, bool) @ 0x227ca323 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.495700 [ 50174 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../src/Processors/Port.cpp:0: DB::connect(DB::OutputPort&, DB::InputPort&) @ 0x24d93826 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.538192 [ 50174 ] {} <Fatal> BaseDaemon: 11. ./build_docker/../src/Processors/Transforms/buildPushingToViewsChain.cpp:375: DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x251b43ce in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.784897 [ 50174 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/Interpreters/InterpreterInsertQuery.cpp:253: DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x238c45d8 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.904851 [ 50174 ] {} <Fatal> BaseDaemon: 13. ./build_docker/../src/Interpreters/InterpreterInsertQuery.cpp:431: DB::InterpreterInsertQuery::execute() @ 0x238c6908 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:17.993259 [ 50174 ] {} <Fatal> BaseDaemon: 14. ./build_docker/../src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x23d69e34 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.167544 [ 50174 ] {} <Fatal> BaseDaemon: 15. ./build_docker/../src/Interpreters/executeQuery.cpp:1069: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x23d6690a in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.347373 [ 50174 ] {} <Fatal> BaseDaemon: 16. ./build_docker/../src/Server/TCPHandler.cpp:332: DB::TCPHandler::runImpl() @ 0x24d24d98 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.418500 [ 50174 ] {} <Fatal> BaseDaemon: 17. ./build_docker/../src/Server/TCPHandler.cpp:1775: DB::TCPHandler::run() @ 0x24d41cf6 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.434038 [ 50174 ] {} <Fatal> BaseDaemon: 18. ./build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x26be2e0c in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.453419 [ 50174 ] {} <Fatal> BaseDaemon: 19.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:54: std::__1::default_delete<Poco::Net::TCPServerConnection>::operator()(Poco::Net::TCPServerConnection*) const\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.454478 [ 50174 ] {} <Fatal> BaseDaemon: 19.2. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:315: std::__1::unique_ptr<Poco::Net::TCPServerConnection, std::__1::default_delete<Poco::Net::TCPServerConnection> >::reset(Poco::Net::TCPServerConnection*)\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.454782 [ 50174 ] {} <Fatal> BaseDaemon: 19.3. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.455114 [ 50174 ] {} <Fatal> BaseDaemon: 19. ../contrib/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() @ 0x26be32e5 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.473774 [ 50174 ] {} <Fatal> BaseDaemon: 20. ./build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x26d61547 in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.485870 [ 50174 ] {} <Fatal> BaseDaemon: 21.1. inlined from ./build_docker/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >::assign(Poco::Runnable*)\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.487932 [ 50174 ] {} <Fatal> BaseDaemon: 21.2. inlined from ../contrib/poco/Foundation/include/Poco/SharedPtr.h:208: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >::operator=(Poco::Runnable*)\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.488981 [ 50174 ] {} <Fatal> BaseDaemon: 21. ../contrib/poco/Foundation/src/Thread_POSIX.cpp:360: Poco::ThreadImpl::runnableEntry(void*) @ 0x26d5ee2c in /usr/bin/clickhouse\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.489519 [ 50174 ] {} <Fatal> BaseDaemon: 22. ? @ 0x7f41f8f74609 in ?\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:18.489898 [ 50174 ] {} <Fatal> BaseDaemon: 23. __clone @ 0x7f41f8e99163 in ?\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:19.695315 [ 50174 ] {} <Fatal> BaseDaemon: Checksum of the binary: 666A22026EC8DDF6B378E56897950842, integrity check passed.\r\n/var/log/clickhouse-server/clickhouse-server.stress.log:2022.06.02 23:30:38.897334 [ 623 ] {} <Fatal> Application: Child process was terminated by signal 6.\r\n```\r\n\r\ncc: @Vxider, @kssenii \n",
  "hints_text": "",
  "created_at": "2022-06-10T07:34:22Z",
  "modified_files": [
    "src/Storages/WindowView/StorageWindowView.cpp",
    "src/Storages/WindowView/StorageWindowView.h"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01076_window_view_alter_query_to.sh",
    "tests/queries/0_stateless/01077_window_view_alter_query_to_modify_source.sh",
    "tests/queries/0_stateless/01087_window_view_alter_query.sh",
    "b/tests/queries/0_stateless/01088_window_view_default_column.reference",
    "b/tests/queries/0_stateless/01088_window_view_default_column.sh"
  ]
}