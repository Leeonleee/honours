You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
"Not found column in block" in distributed query with subquery
**How to reproduce**
* Which ClickHouse server version to use
latest master/arcadia
* Non-default settings, if any
```sql
SET prefer_localhost_replica=0
```
(With a local stream the query works fine)
* `CREATE TABLE` statements for all tables involved
```sql
create table "t0" (a Int64, b Int64) engine = MergeTree() partition by a order by a;
create table "dist_t0" (a Int64, b Int64) engine = Distributed(test_shard_localhost, default, t0);
```
* Sample data for all these tables
```sql
insert into t0 values (0, 0);
```
* Queries to run that lead to unexpected result
```sql
di.man.yp-c.yandex.net :) SELECT a / (SELECT sum(number) FROM numbers(10)) FROM dist_t0

SELECT a / 
    (
        SELECT sum(number)
        FROM numbers(10)
    )
FROM dist_t0

Query id: 27b16db2-ad76-403c-8ac1-c03bfb9b0daf


0 rows in set. Elapsed: 0.020 sec. 

Received exception from server (version 21.5.1):
Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column divide(a, _subquery4) in block. There are only columns: divide(a, CAST(45, 'UInt64')): While executing Remote.
```

Scalar subquery without alias doesn't work properly with distributed tables.
**How to reproduce**
```
CREATE TABLE t_local (a Int) ENGINE = Log;
INSERT INTO t_local SELECT number FROM numbers(10);
CREATE TABLE t_dist(a Int) ENGINE = Distributed(test_shard_localhost, default, t_local);
SET prefer_localhost_replica=0;
SELECT a < (SELECT 1) FROM t_dist;
Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column less(a, _subquery5) in block. There are only columns: less(a, CAST(1, 'UInt8')): While executing SourceFromInputStream.
```

stacktrace:
```
2020.04.21 15:26:00.582945 [ 5311 ] {21b10232-b59a-400e-aca1-5924d348602f} <Error> executeQuery: Code: 10, e.displayText() = DB::Exception: Not found column less(a, _subquery5) in block. There are only columns: less(a, CAST(1, 'UInt8')): While executing SourceFromInputStream (version 20.4.1.1) (from [::1]:44348) (in query: SELECT a < (SELECT 1 FROM t_dist LIMIT 1) FROM t_dist), Stack trace (when copying this message, always include the lines below):

0. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/exception:129: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xf363ab2 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
1. /home/ap11/ClickHouse/build_clang/../src/Common/Exception.cpp:33: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x8ea9e9e in /home/ap11/ClickHouse/build_clang/programs/clickhouse
2. /home/ap11/ClickHouse/build_clang/../src/Core/Block.cpp:0: DB::Block::getByName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xc93ce8e in /home/ap11/ClickHouse/build_clang/programs/clickhouse
3. /home/ap11/ClickHouse/build_clang/../src/DataStreams/RemoteBlockInputStream.cpp:219: DB::RemoteBlockInputStream::readImpl() @ 0xca56b47 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
4. /home/ap11/ClickHouse/build_clang/../src/DataStreams/IBlockInputStream.cpp:0: DB::IBlockInputStream::read() @ 0xca45176 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
5. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/vector:656: DB::SourceFromInputStream::generate() @ 0xd54a94b in /home/ap11/ClickHouse/build_clang/programs/clickhouse
6. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/vector:1003: DB::ISource::work() @ 0xd41e4af in /home/ap11/ClickHouse/build_clang/programs/clickhouse
7. /home/ap11/ClickHouse/build_clang/../src/Processors/Sources/SourceFromInputStream.cpp:97: DB::SourceFromInputStream::work() @ 0xd54a7e9 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
8. /home/ap11/ClickHouse/build_clang/../src/Processors/Executors/PipelineExecutor.cpp:175: std::__1::__function::__func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1, std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1>, void ()>::operator()() @ 0xd445621 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
9. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/exception:180: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0xd444aac in /home/ap11/ClickHouse/build_clang/programs/clickhouse
10. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/vector:461: DB::PipelineExecutor::executeImpl(unsigned long) @ 0xd443714 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
11. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/vector:1516: DB::PipelineExecutor::execute(unsigned long) @ 0xd442af5 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
12. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/atomic:1036: std::__1::__function::__func<DB::TCPHandler::processOrdinaryQueryWithProcessors()::$_5, std::__1::allocator<DB::TCPHandler::processOrdinaryQueryWithProcessors()::$_5>, void ()>::operator()() @ 0x8f6044d in /home/ap11/ClickHouse/build_clang/programs/clickhouse
13. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/atomic:1036: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8ec6534 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
14. /home/ap11/ClickHouse/build_clang/../src/Common/ThreadPool.cpp:0: ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() const @ 0x8ec863a in /home/ap11/ClickHouse/build_clang/programs/clickhouse
15. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/atomic:1036: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8ec43f4 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
16. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x8ec73b0 in /home/ap11/ClickHouse/build_clang/programs/clickhouse
17. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so
18. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
