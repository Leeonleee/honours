You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
JIT: Logical error: Input columns should not be constant
https://s3.amazonaws.com/clickhouse-test-reports/62266/b5ff1c0a6e258354feed60b3662eb3134627c0b8/ast_fuzzer__ubsan_.html

```
12000781:2024.04.12 15:25:14.035475 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Debug> executeQuery: (from [::ffff:127.0.0.1]:33404) (comment: /workspace/ch/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.sql) SELECT sum(number) IGNORE NULLS AS val FROM remote('127.0.0.{2,3}', numbers(10)) GROUP BY number, number % 2 WITH TOTALS ORDER BY toNullable(34) ASC, 'size0' ASC NULLS FIRST, multiIf(1, toNullable(3), count(multiIf(1, toUInt256(3), toUInt128(0))) IGNORE NULLS) DESC NULLS LAST, (number, number % 2, val) ASC SETTINGS group_by_use_nulls = 0 (stage: Complete)
12000782:2024.04.12 15:25:14.035783 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> ContextAccess (default): Access granted: CREATE TEMPORARY TABLE, REMOTE ON *.*
12000783:2024.04.12 15:25:14.036310 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Connection (127.0.0.2:9000): Connecting. Database: (not specified). User: default
12000789:2024.04.12 15:25:14.036600 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Connection (127.0.0.2:9000): Connected to ClickHouse server version 24.4.1.
12000791:2024.04.12 15:25:14.037308 [ 1251 ] {c98ac149-90f9-4b53-8afa-d1cc5b41dfff} <Debug> executeQuery: (from [::ffff:127.0.0.1]:57588, initial_query_id: c0e1a370-d23d-4326-b7d4-65f4130437d8) (comment: /workspace/ch/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.sql) DESC TABLE numbers(10) (stage: Complete)
12000794:2024.04.12 15:25:14.039213 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM _table_function.remote AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC SETTINGS group_by_use_nulls = 0 to stage Complete
12000795:2024.04.12 15:25:14.039374 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM _table_function.remote AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC SETTINGS group_by_use_nulls = 0 from stage FetchColumns to stage Complete
12000796:2024.04.12 15:25:14.039959 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM remote('127.0.0.{2,3}', numbers(10) AS __table2) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC SETTINGS group_by_use_nulls = 0 to stage Complete
12000797:2024.04.12 15:25:14.040229 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM numbers(10) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC to stage WithMergeableState only analyze
12000798:2024.04.12 15:25:14.040358 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM numbers(10) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC from stage FetchColumns to stage WithMergeableState only analyze
12000799:2024.04.12 15:25:14.040822 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM numbers(10) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC to stage WithMergeableState only analyze
12000800:2024.04.12 15:25:14.040948 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM numbers(10) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC from stage FetchColumns to stage WithMergeableState only analyze
12000801:2024.04.12 15:25:14.041370 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM numbers(10) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC to stage WithMergeableState only analyze
12000802:2024.04.12 15:25:14.041501 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM numbers(10) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC from stage FetchColumns to stage WithMergeableState only analyze
12000803:2024.04.12 15:25:14.041914 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM remote('127.0.0.{2,3}', numbers(10) AS __table2) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC SETTINGS group_by_use_nulls = 0 to stage WithMergeableState only analyze
12000804:2024.04.12 15:25:14.042060 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM remote('127.0.0.{2,3}', numbers(10) AS __table2) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC SETTINGS group_by_use_nulls = 0 from stage FetchColumns to stage WithMergeableState only analyze
12000805:2024.04.12 15:25:14.042383 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Planner: Query SELECT sum(__table1.number) IGNORE NULLS AS val FROM remote('127.0.0.{2,3}', numbers(10) AS __table2) AS __table1 GROUP BY __table1.number, __table1.number % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, __table1.number ASC, __table1.number % 2 ASC, sum(__table1.number) IGNORE NULLS ASC SETTINGS group_by_use_nulls = 0 from stage WithMergeableState to stage Complete
12000806:2024.04.12 15:25:14.043685 [ 164 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> SortDescription: Compile sort description Nullable(UInt64) -1 -1UInt64 1 1UInt8 1 1UInt64 1 1
12000807:2024.04.12 15:25:14.052478 [ 1230 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Connection (127.0.0.3:9000): Connecting. Database: (not specified). User: default
12000813:2024.04.12 15:25:14.052821 [ 1224 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Debug> Connection (127.0.0.2:9000): Sent data for 2 scalars, total 2 rows in 6.1289e-05 sec., 31875 rows/sec., 68.00 B (1.03 MiB/sec.), compressed 0.4594594594594595 times to 148.00 B (2.25 MiB/sec.)
12000814:2024.04.12 15:25:14.052899 [ 1230 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Connection (127.0.0.3:9000): Connected to ClickHouse server version 24.4.1.
12000816:2024.04.12 15:25:14.053128 [ 1230 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Debug> Connection (127.0.0.3:9000): Sent data for 2 scalars, total 2 rows in 4.8409e-05 sec., 40614 rows/sec., 68.00 B (1.32 MiB/sec.), compressed 0.4594594594594595 times to 148.00 B (2.86 MiB/sec.)
12000818:2024.04.12 15:25:14.053411 [ 1251 ] {378cc114-c68d-4624-9b66-4832060b1c81} <Debug> executeQuery: (from [::ffff:127.0.0.1]:57588, initial_query_id: c0e1a370-d23d-4326-b7d4-65f4130437d8) (comment: /workspace/ch/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.sql) SELECT sum(`__table1`.`number`) IGNORE NULLS AS `val` FROM numbers(10) AS `__table1` GROUP BY `__table1`.`number`, `__table1`.`number` % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, `__table1`.`number` ASC, `__table1`.`number` % 2 ASC, sum(`__table1`.`number`) IGNORE NULLS ASC (stage: WithMergeableState)
12000819:2024.04.12 15:25:14.053744 [ 1250 ] {1ae44249-7317-4617-ad7c-ed90a593c004} <Debug> executeQuery: (from [::ffff:127.0.0.1]:55874, initial_query_id: c0e1a370-d23d-4326-b7d4-65f4130437d8) (comment: /workspace/ch/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.sql) SELECT sum(`__table1`.`number`) IGNORE NULLS AS `val` FROM numbers(10) AS `__table1` GROUP BY `__table1`.`number`, `__table1`.`number` % 2 WITH TOTALS ORDER BY _CAST(34, 'Nullable(UInt8)') ASC, 'size0' ASC NULLS FIRST, multiIf(1, _CAST(3, 'Nullable(UInt8)'), count() IGNORE NULLS) DESC NULLS LAST, `__table1`.`number` ASC, `__table1`.`number` % 2 ASC, sum(`__table1`.`number`) IGNORE NULLS ASC (stage: WithMergeableState)
12000838:2024.04.12 15:25:14.056173 [ 1230 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Trace> Aggregator: Merging partially aggregated blocks (bucket = -1).
12000839:2024.04.12 15:25:14.056233 [ 1230 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Debug> Aggregator: Merged partially aggregated blocks for bucket #-1. Got 10 rows, 250.00 B from 20 source rows in 3.983e-05 sec. (251067.035 rows/sec., 5.99 MiB/sec.)
12000840:2024.04.12 15:25:14.056437 [ 1230 ] {c0e1a370-d23d-4326-b7d4-65f4130437d8} <Fatal> : Logical error: 'Input columns should not be constant'.
```

(for some reason, there's no stacktrace)
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
