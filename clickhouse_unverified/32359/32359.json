{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 32359,
  "instance_id": "ClickHouse__ClickHouse-32359",
  "issue_numbers": [
    "32292"
  ],
  "base_commit": "92b4f13303f3dab2d876499cf53eca83732d9539",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeIndices.h b/src/Storages/MergeTree/MergeTreeIndices.h\nindex 8f10b2c51bad..1e001d01adaf 100644\n--- a/src/Storages/MergeTree/MergeTreeIndices.h\n+++ b/src/Storages/MergeTree/MergeTreeIndices.h\n@@ -147,9 +147,11 @@ struct IMergeTreeIndex\n     /// Returns extension for deserialization.\n     ///\n     /// Return pair<extension, version>.\n-    virtual MergeTreeIndexFormat getDeserializedFormat(const DiskPtr, const std::string & /* relative_path_prefix */) const\n+    virtual MergeTreeIndexFormat getDeserializedFormat(const DiskPtr disk, const std::string & relative_path_prefix) const\n     {\n-        return {1, \".idx\"};\n+        if (disk->exists(relative_path_prefix + \".idx\"))\n+            return {1, \".idx\"};\n+        return {0 /*unknown*/, \"\"};\n     }\n \n     /// Checks whether the column is in data skipping index.\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02131_skip_index_not_materialized.reference b/tests/queries/0_stateless/02131_skip_index_not_materialized.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02131_skip_index_not_materialized.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/02131_skip_index_not_materialized.sql b/tests/queries/0_stateless/02131_skip_index_not_materialized.sql\nnew file mode 100644\nindex 000000000000..cae0b1d9fb39\n--- /dev/null\n+++ b/tests/queries/0_stateless/02131_skip_index_not_materialized.sql\n@@ -0,0 +1,12 @@\n+DROP TABLE IF EXISTS t_index_non_materialized;\n+\n+CREATE TABLE t_index_non_materialized (a UInt32) ENGINE = MergeTree ORDER BY tuple();\n+\n+INSERT INTO t_index_non_materialized VALUES (1);\n+\n+ALTER TABLE t_index_non_materialized ADD INDEX ind_set (a) TYPE set(1) GRANULARITY 1;\n+ALTER TABLE t_index_non_materialized ADD INDEX ind_minmax (a) TYPE minmax() GRANULARITY 1;\n+\n+SELECT count() FROM t_index_non_materialized WHERE a = 1;\n+\n+DROP TABLE t_index_non_materialized;\n",
  "problem_statement": "Query that uses skip index fails if index is not materialized\n```sql\r\nCREATE TABLE t ( a UInt32) ENGINE = MergeTree ORDER BY tuple();\r\n\r\nINSERT INTO t VALUES (1);\r\n\r\nALTER TABLE t ADD INDEX ind (a) TYPE set(1) GRANULARITY 1;\r\n\r\nSELECT count() FROM t WHERE a = 1;\r\n\r\nReceived exception from server (version 21.11.5):\r\nCode: 1001. DB::Exception: Received from localhost:9000. DB::Exception: std::__1::__fs::filesystem::filesystem_error: filesystem error: in file_size: No such file or directory [./store/402/402d2274-1310-43f7-802d-22741310f3f7/all_1_1_0_2/skp_idx_ind.mrk3]. (STD_EXCEPTION)\r\n```\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nReproduces on 21.11 and master.\r\n\r\n**Expected behavior**\r\n\r\nIndex should be skipped if it doesn't exist in part.\r\n\r\n\r\n> Add any other context about the problem here.\r\n\r\nMost likely introduced in #27250.\r\n\n",
  "hints_text": "",
  "created_at": "2021-12-07T17:23:59Z"
}