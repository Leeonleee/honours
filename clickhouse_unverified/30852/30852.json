{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 30852,
  "instance_id": "ClickHouse__ClickHouse-30852",
  "issue_numbers": [
    "30784"
  ],
  "base_commit": "8316e4d4201b28efafc663b9e32347b862f7dd0d",
  "patch": "diff --git a/src/Storages/StorageBuffer.cpp b/src/Storages/StorageBuffer.cpp\nindex 12eae0e82a2a..6417aa9f72c6 100644\n--- a/src/Storages/StorageBuffer.cpp\n+++ b/src/Storages/StorageBuffer.cpp\n@@ -1027,10 +1027,9 @@ void StorageBuffer::checkAlterIsPossible(const AlterCommands & commands, Context\n     auto name_deps = getDependentViewsByColumn(local_context);\n     for (const auto & command : commands)\n     {\n-        if (command.type != AlterCommand::Type::ADD_COLUMN\n-            && command.type != AlterCommand::Type::MODIFY_COLUMN\n-            && command.type != AlterCommand::Type::DROP_COLUMN\n-            && command.type != AlterCommand::Type::COMMENT_COLUMN)\n+        if (command.type != AlterCommand::Type::ADD_COLUMN && command.type != AlterCommand::Type::MODIFY_COLUMN\n+            && command.type != AlterCommand::Type::DROP_COLUMN && command.type != AlterCommand::Type::COMMENT_COLUMN\n+            && command.type != AlterCommand::Type::COMMENT_TABLE)\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"Alter of type '{}' is not supported by storage {}\",\n                 command.type, getName());\n \ndiff --git a/src/Storages/StorageDistributed.cpp b/src/Storages/StorageDistributed.cpp\nindex 2c528a4ebf54..91d54f0d24af 100644\n--- a/src/Storages/StorageDistributed.cpp\n+++ b/src/Storages/StorageDistributed.cpp\n@@ -762,11 +762,9 @@ void StorageDistributed::checkAlterIsPossible(const AlterCommands & commands, Co\n     auto name_deps = getDependentViewsByColumn(local_context);\n     for (const auto & command : commands)\n     {\n-        if (command.type != AlterCommand::Type::ADD_COLUMN\n-            && command.type != AlterCommand::Type::MODIFY_COLUMN\n-            && command.type != AlterCommand::Type::DROP_COLUMN\n-            && command.type != AlterCommand::Type::COMMENT_COLUMN\n-            && command.type != AlterCommand::Type::RENAME_COLUMN)\n+        if (command.type != AlterCommand::Type::ADD_COLUMN && command.type != AlterCommand::Type::MODIFY_COLUMN\n+            && command.type != AlterCommand::Type::DROP_COLUMN && command.type != AlterCommand::Type::COMMENT_COLUMN\n+            && command.type != AlterCommand::Type::RENAME_COLUMN && command.type != AlterCommand::Type::COMMENT_TABLE)\n \n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"Alter of type '{}' is not supported by storage {}\",\n                 command.type, getName());\ndiff --git a/src/Storages/StorageMerge.cpp b/src/Storages/StorageMerge.cpp\nindex 979e027d3389..06fbfafc9b6f 100644\n--- a/src/Storages/StorageMerge.cpp\n+++ b/src/Storages/StorageMerge.cpp\n@@ -629,10 +629,9 @@ void StorageMerge::checkAlterIsPossible(const AlterCommands & commands, ContextP\n     auto name_deps = getDependentViewsByColumn(local_context);\n     for (const auto & command : commands)\n     {\n-        if (command.type != AlterCommand::Type::ADD_COLUMN\n-            && command.type != AlterCommand::Type::MODIFY_COLUMN\n-            && command.type != AlterCommand::Type::DROP_COLUMN\n-            && command.type != AlterCommand::Type::COMMENT_COLUMN)\n+        if (command.type != AlterCommand::Type::ADD_COLUMN && command.type != AlterCommand::Type::MODIFY_COLUMN\n+            && command.type != AlterCommand::Type::DROP_COLUMN && command.type != AlterCommand::Type::COMMENT_COLUMN\n+            && command.type != AlterCommand::Type::COMMENT_TABLE)\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"Alter of type '{}' is not supported by storage {}\",\n                 command.type, getName());\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02111_modify_table_comment.reference b/tests/queries/0_stateless/02111_modify_table_comment.reference\nnew file mode 100644\nindex 000000000000..bc58e6576e33\n--- /dev/null\n+++ b/tests/queries/0_stateless/02111_modify_table_comment.reference\n@@ -0,0 +1,4 @@\n+CREATE TABLE `02111_modify_table_comment`.t\\n(\\n    `n` Int8\\n)\\nENGINE = MergeTree\\nORDER BY n\\nSETTINGS index_granularity = 8192\\nCOMMENT \\'this is a MergeTree table\\'\n+CREATE TABLE `02111_modify_table_comment`.t\\n(\\n    `n` Int8\\n)\\nENGINE = MergeTree\\nORDER BY n\\nSETTINGS index_granularity = 8192\\nCOMMENT \\'MergeTree Table\\'\n+CREATE TABLE `02111_modify_table_comment`.t_merge\\n(\\n    `n` Int8\\n)\\nENGINE = Merge(\\'02111_modify_table_comment\\', \\'t\\')\\nCOMMENT \\'this is a Merge table\\'\n+CREATE TABLE `02111_modify_table_comment`.t_merge\\n(\\n    `n` Int8\\n)\\nENGINE = Merge(\\'02111_modify_table_comment\\', \\'t\\')\\nCOMMENT \\'Merge Table\\'\ndiff --git a/tests/queries/0_stateless/02111_modify_table_comment.sql b/tests/queries/0_stateless/02111_modify_table_comment.sql\nnew file mode 100644\nindex 000000000000..f9f864c7f35b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02111_modify_table_comment.sql\n@@ -0,0 +1,34 @@\n+-- Tags: no-parallel\n+\n+DROP DATABASE IF EXISTS 02111_modify_table_comment;\n+CREATE DATABASE 02111_modify_table_comment;\n+\n+USE 02111_modify_table_comment;\n+\n+CREATE TABLE t\n+(\n+    `n` Int8\n+)\n+ENGINE = MergeTree\n+ORDER BY n\n+COMMENT 'this is a MergeTree table';\n+\n+SHOW CREATE t;\n+\n+ALTER TABLE t\n+    MODIFY COMMENT 'MergeTree Table';\n+\n+SHOW CREATE t;\n+\n+CREATE TABLE t_merge AS t\n+ENGINE = Merge('02111_modify_table_comment', 't')\n+COMMENT 'this is a Merge table';\n+\n+SHOW CREATE t_merge;\n+\n+ALTER TABLE t_merge\n+    MODIFY COMMENT 'Merge Table';\n+\n+SHOW CREATE t_merge;\n+\n+DROP DATABASE 02111_modify_table_comment;\n",
  "problem_statement": "change the table comment after created the table is not supported now?\nChange the table comment after created the table is not supported now?\r\nLike mysql : ALTER TABLE [tableName] COMMNET [comment]; \r\nThe sql \"ALTER TABLE `system`.tables UPDATE Comment='test' WHERE NAME='t1';\" also not supported!!!\r\nMy version is '21.9.4.35'\u3002\n",
  "hints_text": "Currently only support set table comment at create time.\n> Currently only support set table comment at create time.\r\n\r\nThank you for you reply. Are there plans to support this feature in the next few releases?\n> ALTER TABLE [tableName] COMMNET [comment];\r\n\r\nshould be easy to support, I will implement it on free time.\r\n\r\nbut \r\n\r\n>ALTER TABLE system.tables UPDATE Comment='test' WHERE NAME='t1';\r\n\r\nlooks like does not easy to implement in ClickHouse.\n> ALTER TABLE system.tables UPDATE Comment='test' WHERE NAME='t1';\r\n\r\nFrom my perspective,it is not necessary when ClickHouse support > ALTER TABLE [tableName] COMMNET [comment];\r\n\r\n> should be easy to support, I will implement it on free time.\r\n\r\nthanks for this.I will pay attention to the Clickhouse's change log.",
  "created_at": "2021-10-29T12:34:23Z"
}