diff --git a/tests/queries/0_stateless/01595_countMatches.reference b/tests/queries/0_stateless/01595_countMatches.reference
index c65279c0b8e3..394c85084301 100644
--- a/tests/queries/0_stateless/01595_countMatches.reference
+++ b/tests/queries/0_stateless/01595_countMatches.reference
@@ -12,6 +12,7 @@ case sensitive
 2
 4
 4
+2
 case insensitive
 2
 1
@@ -21,4 +22,8 @@ case insensitive
 2
 4
 4
+2
 errors
+FixedString
+2
+2
diff --git a/tests/queries/0_stateless/01595_countMatches.sql b/tests/queries/0_stateless/01595_countMatches.sql
index 0b170945d444..0c2982572cda 100644
--- a/tests/queries/0_stateless/01595_countMatches.sql
+++ b/tests/queries/0_stateless/01595_countMatches.sql
@@ -14,6 +14,7 @@ select countMatches(concat(toString(number), 'foofoo'), 'foo') from numbers(2);
 select countMatches('foobarbazfoobarbaz', 'foo(bar)(?:baz|)');
 select countMatches('foo.com bar.com baz.com bam.com', '([^. ]+)\.([^. ]+)');
 select countMatches('foo.com@foo.com bar.com@foo.com baz.com@foo.com bam.com@foo.com', '([^. ]+)\.([^. ]+)@([^. ]+)\.([^. ]+)');
+select countMatches(materialize('foobarfoo'), 'foo');
 
 select 'case insensitive';
 select countMatchesCaseInsensitive('foobarfoo', 'FOo');
@@ -23,7 +24,13 @@ select countMatchesCaseInsensitive(concat(toString(number), 'Foofoo'), 'foo') fr
 select countMatchesCaseInsensitive('foOBarBAZfoobarbaz', 'foo(bar)(?:baz|)');
 select countMatchesCaseInsensitive('foo.com BAR.COM baz.com bam.com', '([^. ]+)\.([^. ]+)');
 select countMatchesCaseInsensitive('foo.com@foo.com bar.com@foo.com BAZ.com@foo.com bam.com@foo.com', '([^. ]+)\.([^. ]+)@([^. ]+)\.([^. ]+)');
+select countMatchesCaseInsensitive(materialize('foobarfoo'), 'FOo');
 
 select 'errors';
-select countMatches(1, 'foo') from numbers(1); -- { serverError 43 }
-select countMatches('foobarfoo', toString(number)) from numbers(1); -- { serverError 44 }
+select countMatches(1, 'foo') from numbers(1); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+select countMatches('foobarfoo', toString(number)) from numbers(1); -- { serverError ILLEGAL_COLUMN }
+select countMatches('foo', materialize('foo')); -- { serverError ILLEGAL_COLUMN }
+
+select 'FixedString';
+select countMatches(toFixedString('foobarfoo', 9), 'foo');
+select countMatches(materialize(toFixedString('foobarfoo', 9)), 'foo');
