You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
ALTER TABLE UPDATE with transform and subquery produce 'Empty arrays are illegal in function transform'
Looks as produced in recent version ClickHouse,

```
ClickHouse client version 21.11.3.6 (official build).
Connected to ClickHouse server version 21.11.3 revision 54450.
```

Queries:
```
DROP TABLE IF EXISTS test_xy;
DROP TABLE IF EXISTS updates;
CREATE TABLE test_xy
(
    `x` Int32,
    `y` String
)
ENGINE = MergeTree
ORDER BY x;

CREATE TABLE updates
(
    `x` Int32,
    `y` String
)
ENGINE = MergeTree
ORDER BY x;

INSERT INTO test_xy(x, y) VALUES (1, 'a1'), (2, 'a2'), (3, 'a3');
INSERT INTO updates(x, y) VALUES  (2, 'b2'), (3, 'b3');

SELECT x, y,
    transform(x,
        (select groupArray(x) from (select x, y from updates order by x) t1),
        (select groupArray(y) from (select x, y from updates order by x) t2),
        y)
FROM test_xy
WHERE 1;

ALTER table test_xy
    UPDATE
    y =  transform(x,
        (select groupArray(x) from (select x, y from updates order by x) t1),
        (select groupArray(y) from (select x, y from updates order by x) t2),
        y)
    WHERE 1;
```

Result:

```
Received exception from server (version 21.11.3):
Code: 36. DB::Exception: Received from 127.1:9000. DB::Exception: Empty arrays are illegal in function transform. (BAD_ARGUMENTS)
(query: ALTER table test_xy
    UPDATE 
    y =  transform(x,
        (select groupArray(x) from (select x, y from updates order by x) t1),
        (select groupArray(y) from (select x, y from updates order by x) t2),
        y)
    WHERE 1;)
```

Unexpected to see here error message.

Context:
On older ClickHouse
(Connected to ClickHouse server version 21.10.2 revision 54449)

this query simply hangs, maybe because some errors in configuration at /etc/clickhouse-server/users.d/default-password.xml ...

```
---  ClickHouse server version 21.10.2 revision 54449
--- passed 10 minutes after query run
select is_done, table, count(), min(create_time), max(create_time), now() from system.mutations where 1 group by table, is_done;
```
```
┌─is_done─┬─table───┬─count()─┬────min(create_time)─┬────max(create_time)─┬───────────────now()─┐
│       0 │ test_xy │       1 │ 2021-11-12 13:37:32 │ 2021-11-12 13:37:32 │ 2021-11-12 13:47:44 │
└─────────┴─────────┴─────────┴─────────────────────┴─────────────────────┴─────────────────────┘
```
CASE expression with nullable type doesn't work
> You have to provide the following information whenever possible.

The following SQL fails:

```
:) select case 1::Nullable(Int32) when 1 then 1 else 0 end;
```

Error:

```
Received exception from server (version 23.5.1):
Code: 43. DB::Exception: Received from localhost:9000. DB::Exception: First argument and elements of array of second argument of function transform must have compatible types: both numeric or both strings.: While processing caseWithExpression(CAST('1', 'Nullable(Int32)'), 1, 1, 0). (ILLEGAL_TYPE_OF_ARGUMENT)
```

> A clear and concise description of what works not as it is supposed to.

I would expect this to return `1`

> A link to reproducer in [https://fiddle.clickhouse.com/](https://fiddle.clickhouse.com/).

https://fiddle.clickhouse.com/2091d88d-162a-41a6-9e7c-a67091a4b3a7

**Does it reproduce on recent release?**

It does. Here's the information from `clickhouse client` startup:

```
ClickHouse client version 23.3.2.1.
Connecting to database ibis_testing at localhost:9000 as user default.
Connected to ClickHouse server version 23.5.1 revision 54462.
```
transform does not work with DateTime64
```
select transform('a', ['a', 'b'], [toDateTime64(1,3), toDateTime64(2,3)], toDateTime64(0,3));

Received exception from server (version 21.11.5):
Code: 44. DB::Exception: Received from localhost:9000. DB::Exception: Illegal column String of elements of array of second argument of function transform: While processing transform('a', ['a', 'b'], [toDateTime64(1, 3), toDateTime64(2, 3)], toDateTime64(0, 3)). (ILLEGAL_COLUMN)
```

```
select transform('a', ['a', 'b'], [toDateTime(1), toDateTime(2)], toDateTime(0));

┌─transform('a', ['a', 'b'], array(toDateTime(1), toDateTime(2)), toDateTime(0))─┐
│                                                            1970-01-01 00:00:01 │
└────────────────────────────────────────────────────────────────────────────────┘
```

I expect it returns `toDateTime64(1,3)` like for DateTime but it fails.

Clickhouse version is 21.11.5.33.

Support NULL in function transform.
<!---
A technical comment, you are free to remove or leave it as it is when PR is created
The following categories are used in the next scripts, update them accordingly
utils/changelog/changelog.py
tests/ci/run_check.py
-->
### Changelog category (leave one):
- Improvement


### Changelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):
Support NULL in function transform. This fixes https://github.com/ClickHouse/ClickHouse/issues/2655 , https://github.com/ClickHouse/ClickHouse/issues/9596 ,  https://github.com/ClickHouse/ClickHouse/issues/38666 

This helps evaluate TPC-DS query 39 correctly.

This PR also removes most boilerplate code introduced in https://github.com/ClickHouse/ClickHouse/pull/31839 .

~Current implementation is not ideal w.r.t performance since nullable checks are added even in not null branches. It's to avoid code bloating.~

There is also a proposal to implement a general version of transform https://github.com/ClickHouse/ClickHouse/pull/37654 . However there isn't a clear evidence that it will outperform current implementation.

> Information about CI checks: https://clickhouse.com/docs/en/development/continuous-integration/

Function transform with decimal type not working or produce incorrect result
Current stable release and some recent release
ClickHouse client version 21.9.4.35
Connected to ClickHouse server version 21.9.4 revision 54449
Connected to ClickHouse server version 21.5.9 revision 54448

SQL:
```
SELECT  transform(1, [1], [toDecimal32(1, 2)]),    toDecimal32(1, 2)
```
Produces:
```
100 │                 1
```

Expected 1 == 1

```
select transform(1, [1], [toDecimal32(42, 2)]), toDecimal32(42, 2);
```
Produces:
```
 104 │                 42
```

Expected 42 == 42

Looks as garbage ...

Second case of transform function
```
SELECT transform(1, [1], [toDecimal32(42, 2)], 0)

-- OR --

SELECT transform(1, [1], [toDecimal32(42, 2)], toDecimal32(0, 2))
```
Produce error message
```
Received exception from server (version 21.9.4):
Code: 44. DB::Exception: Received from localhost:9000. DB::Exception: Illegal column UInt8 of elements of array of second argument of function transform: While processing transform(1, [1], [toDecimal32(42, 2)], 0). (ILLEGAL_COLUMN)
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
