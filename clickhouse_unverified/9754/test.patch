diff --git a/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.reference b/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.reference
new file mode 100644
index 000000000000..d00491fd7e5b
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.reference
@@ -0,0 +1,1 @@
+1
diff --git a/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.sql b/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.sql
new file mode 100644
index 000000000000..3c9d14b58cb1
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.sql
@@ -0,0 +1,25 @@
+DROP TABLE IF EXISTS table_with_pk;
+
+CREATE TABLE table_with_pk
+(
+  key UInt8,
+  value String
+)
+ENGINE = MergeTree
+ORDER BY key;
+
+INSERT INTO table_with_pk SELECT number, toString(number % 10) FROM numbers(10000000);
+
+ALTER TABLE table_with_pk DELETE WHERE key % 77 = 0 SETTINGS mutations_sync = 1;
+
+SYSTEM FLUSH LOGS;
+
+-- Memory usage for all mutations must be almost constant and less than
+-- read_bytes.
+SELECT
+  DISTINCT read_bytes >= peak_memory_usage
+FROM
+    system.part_log
+WHERE event_type = 'MutatePart' AND table = 'table_with_pk' AND database = currentDatabase();
+
+DROP TABLE IF EXISTS table_with_pk;
