{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 46071,
  "instance_id": "ClickHouse__ClickHouse-46071",
  "issue_numbers": [
    "31497"
  ],
  "base_commit": "65d671b7c72c7b1da23f831faa877565cf34f92c",
  "patch": "diff --git a/docs/en/sql-reference/statements/create/table.md b/docs/en/sql-reference/statements/create/table.md\nindex 50e74920e4b3..0f3d6a05d828 100644\n--- a/docs/en/sql-reference/statements/create/table.md\n+++ b/docs/en/sql-reference/statements/create/table.md\n@@ -474,7 +474,7 @@ ENGINE = MergeTree ORDER BY x;\n ClickHouse supports temporary tables which have the following characteristics:\n \n -   Temporary tables disappear when the session ends, including if the connection is lost.\n--   A temporary table uses the Memory engine only.\n+-   A temporary table uses the Memory table engine when engine is not specified and it may use any table engine except Replicated and `KeeperMap` engines.\n -   The DB can\u2019t be specified for a temporary table. It is created outside of databases.\n -   Impossible to create a temporary table with distributed DDL query on all cluster servers (by using `ON CLUSTER`): this table exists only in the current session.\n -   If a temporary table has the same name as another one and a query specifies the table name without specifying the DB, the temporary table will be used.\n@@ -488,7 +488,7 @@ CREATE TEMPORARY TABLE [IF NOT EXISTS] table_name\n     name1 [type1] [DEFAULT|MATERIALIZED|ALIAS expr1],\n     name2 [type2] [DEFAULT|MATERIALIZED|ALIAS expr2],\n     ...\n-)\n+) [ENGINE = engine]\n ```\n \n In most cases, temporary tables are not created manually, but when using external data for a query, or for distributed `(GLOBAL) IN`. For more information, see the appropriate sections\ndiff --git a/docs/en/sql-reference/statements/grant.md b/docs/en/sql-reference/statements/grant.md\nindex 3383ea70a2b2..1d9b2c9ea305 100644\n--- a/docs/en/sql-reference/statements/grant.md\n+++ b/docs/en/sql-reference/statements/grant.md\n@@ -105,7 +105,8 @@ Hierarchy of privileges:\n -   [CREATE](#grant-create)\n     -   `CREATE DATABASE`\n     -   `CREATE TABLE`\n-        -   `CREATE TEMPORARY TABLE`\n+        -   `CREATE ARBITRARY TEMPORARY TABLE`\n+            -   `CREATE TEMPORARY TABLE`\n     -   `CREATE VIEW`\n     -   `CREATE DICTIONARY`\n     -   `CREATE FUNCTION`\n@@ -313,7 +314,8 @@ Allows executing [CREATE](../../sql-reference/statements/create/index.md) and [A\n -   `CREATE`. Level: `GROUP`\n     -   `CREATE DATABASE`. Level: `DATABASE`\n     -   `CREATE TABLE`. Level: `TABLE`\n-        -   `CREATE TEMPORARY TABLE`. Level: `GLOBAL`\n+        -   `CREATE ARBITRARY TEMPORARY TABLE`. Level: `GLOBAL`\n+            -   `CREATE TEMPORARY TABLE`. Level: `GLOBAL`\n     -   `CREATE VIEW`. Level: `VIEW`\n     -   `CREATE DICTIONARY`. Level: `DICTIONARY`\n \ndiff --git a/docs/ru/sql-reference/statements/create/table.md b/docs/ru/sql-reference/statements/create/table.md\nindex 7a930b529ed2..64eae49be6c3 100644\n--- a/docs/ru/sql-reference/statements/create/table.md\n+++ b/docs/ru/sql-reference/statements/create/table.md\n@@ -260,8 +260,8 @@ ENGINE = MergeTree()\n \n \u041a\u043e\u0434\u0435\u043a\u0438 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f:\n \n--   `CODEC('AES-128-GCM-SIV')` \u2014 \u0417\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e AES-128 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 [RFC 8452](https://tools.ietf.org/html/rfc8452) GCM-SIV. \n--   `CODEC('AES-256-GCM-SIV')` \u2014 \u0417\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e AES-256 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 GCM-SIV. \n+-   `CODEC('AES-128-GCM-SIV')` \u2014 \u0417\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e AES-128 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 [RFC 8452](https://tools.ietf.org/html/rfc8452) GCM-SIV.\n+-   `CODEC('AES-256-GCM-SIV')` \u2014 \u0417\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e AES-256 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 GCM-SIV.\n \n \u042d\u0442\u0438 \u043a\u043e\u0434\u0435\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043e\u0434\u043d\u043e\u0440\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u044e\u0447 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u044d\u0442\u043e \u0434\u0435\u0442\u0435\u0440\u043c\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435. \u041e\u043d\u043e \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u043c\u0438 \u0434\u0435\u0434\u0443\u043f\u043b\u0438\u043a\u0430\u0446\u0438\u044e \u0434\u0432\u0438\u0436\u043a\u0430\u043c\u0438, \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u0441\u0442\u0438, [ReplicatedMergeTree](../../../engines/table-engines/mergetree-family/replication.md). \u041e\u0434\u043d\u0430\u043a\u043e \u0443 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u043a: \u0435\u0441\u043b\u0438 \u0434\u0432\u0430\u0436\u0434\u044b \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0431\u043b\u043e\u043a \u0434\u0430\u043d\u043d\u044b\u0445, \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c, \u0438 \u0437\u043b\u043e\u0443\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0435\u0441\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0434\u0438\u0441\u043a\u0443, \u0437\u0430\u043c\u0435\u0442\u0438\u0442 \u044d\u0442\u0443 \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e\u0441\u0442\u044c (\u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c\u0443 \u043e\u043d \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442).\n \n@@ -274,10 +274,10 @@ ENGINE = MergeTree()\n **\u041f\u0440\u0438\u043c\u0435\u0440**\n \n ```sql\n-CREATE TABLE mytable \n+CREATE TABLE mytable\n (\n     x String Codec(AES_128_GCM_SIV)\n-) \n+)\n ENGINE = MergeTree ORDER BY x;\n ```\n \n@@ -287,10 +287,10 @@ ENGINE = MergeTree ORDER BY x;\n **\u041f\u0440\u0438\u043c\u0435\u0440**\n \n ```sql\n-CREATE TABLE mytable \n+CREATE TABLE mytable\n (\n     x String Codec(Delta, LZ4, AES_128_GCM_SIV)\n-) \n+)\n ENGINE = MergeTree ORDER BY x;\n ```\n \n@@ -299,7 +299,7 @@ ENGINE = MergeTree ORDER BY x;\n ClickHouse \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\u0438:\n \n -   \u0412\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0438\u0441\u0447\u0435\u0437\u0430\u044e\u0442 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0441\u0435\u0441\u0441\u0438\u0438, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u043f\u0440\u0438 \u043e\u0431\u0440\u044b\u0432\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.\n--   \u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0443\u043b\u044c \u043f\u0430\u043c\u044f\u0442\u0438.\n+-   \u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0434\u0432\u0438\u0436\u043e\u043a \u0442\u0430\u0431\u043b\u0438\u0446 Memory \u043a\u043e\u0433\u0434\u0430 \u0434\u0432\u0438\u0436\u043e\u043a \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u0438 \u043e\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u0434\u0432\u0438\u0436\u043e\u043a \u0442\u0430\u0431\u043b\u0438\u0446 \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0434\u0432\u0438\u0436\u043a\u043e\u0432 Replicated \u0438 `KeeperMap`.\n -   \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u041e\u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0432\u043d\u0435 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445.\n -   \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u043c DDL \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u043d\u0430 \u0432\u0441\u0435\u0445 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u0445 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0430 (\u0441 \u043e\u043f\u0446\u0438\u0435\u0439 `ON CLUSTER`): \u0442\u0430\u043a\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0441\u0435\u0441\u0441\u0438\u0438.\n -   \u0415\u0441\u043b\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0438\u043c\u0435\u0435\u0442 \u0442\u043e \u0436\u0435 \u0438\u043c\u044f, \u0447\u0442\u043e \u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u0440\u0443\u0433\u0430\u044f, \u0442\u043e, \u043f\u0440\u0438 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0438 \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0411\u0414, \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430.\n@@ -313,7 +313,7 @@ CREATE TEMPORARY TABLE [IF NOT EXISTS] table_name\n     name1 [type1] [DEFAULT|MATERIALIZED|ALIAS expr1],\n     name2 [type2] [DEFAULT|MATERIALIZED|ALIAS expr2],\n     ...\n-)\n+) [ENGINE = engine]\n ```\n \n \u0412 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u043d\u0435 \u0432\u0440\u0443\u0447\u043d\u0443\u044e, \u0430 \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0438\u043b\u0438 \u043f\u0440\u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u043c `(GLOBAL) IN`. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u0441\u043c. \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u044b\ndiff --git a/docs/ru/sql-reference/statements/grant.md b/docs/ru/sql-reference/statements/grant.md\nindex 7c281634c98d..73c63850750c 100644\n--- a/docs/ru/sql-reference/statements/grant.md\n+++ b/docs/ru/sql-reference/statements/grant.md\n@@ -107,7 +107,8 @@ GRANT SELECT(x,y) ON db.table TO john WITH GRANT OPTION\n - [CREATE](#grant-create)\n     - `CREATE DATABASE`\n     - `CREATE TABLE`\n-        - `CREATE TEMPORARY TABLE`\n+        - `CREATE ARBITRARY TEMPORARY TABLE`\n+            -   `CREATE TEMPORARY TABLE`\n     - `CREATE VIEW`\n     - `CREATE DICTIONARY`\n     - `CREATE FUNCTION`\n@@ -314,7 +315,8 @@ GRANT INSERT(x,y) ON db.table TO john\n - `CREATE`. \u0423\u0440\u043e\u0432\u0435\u043d\u044c: `GROUP`\n     - `CREATE DATABASE`. \u0423\u0440\u043e\u0432\u0435\u043d\u044c: `DATABASE`\n     - `CREATE TABLE`. \u0423\u0440\u043e\u0432\u0435\u043d\u044c: `TABLE`\n-        - `CREATE TEMPORARY TABLE`. \u0423\u0440\u043e\u0432\u0435\u043d\u044c: `GLOBAL`\n+        - `CREATE ARBITRARY TEMPORARY TABLE`. \u0423\u0440\u043e\u0432\u0435\u043d\u044c: `GLOBAL`\n+            - `CREATE TEMPORARY TABLE`. \u0423\u0440\u043e\u0432\u0435\u043d\u044c: `GLOBAL`\n     - `CREATE VIEW`. \u0423\u0440\u043e\u0432\u0435\u043d\u044c: `VIEW`\n     - `CREATE DICTIONARY`. \u0423\u0440\u043e\u0432\u0435\u043d\u044c: `DICTIONARY`\n \ndiff --git a/src/Access/Common/AccessType.h b/src/Access/Common/AccessType.h\nindex f57cc2886e3c..c73c0499fbe3 100644\n--- a/src/Access/Common/AccessType.h\n+++ b/src/Access/Common/AccessType.h\n@@ -15,6 +15,7 @@ enum class AccessType\n /// node_type either specifies access type's level (GLOBAL/DATABASE/TABLE/DICTIONARY/VIEW/COLUMNS),\n /// or specifies that the access type is a GROUP of other access types;\n /// parent_group_name is the name of the group containing this access type (or NONE if there is no such group).\n+/// NOTE A parent group must be declared AFTER all its children.\n #define APPLY_FOR_ACCESS_TYPES(M) \\\n     M(SHOW_DATABASES, \"\", DATABASE, SHOW) /* allows to execute SHOW DATABASES, SHOW CREATE DATABASE, USE <database>;\n                                              implicitly enabled by any grant on the database */\\\n@@ -86,8 +87,10 @@ enum class AccessType\n     M(CREATE_VIEW, \"\", VIEW, CREATE) /* allows to execute {CREATE|ATTACH} VIEW;\n                                         implicitly enabled by the grant CREATE_TABLE */\\\n     M(CREATE_DICTIONARY, \"\", DICTIONARY, CREATE) /* allows to execute {CREATE|ATTACH} DICTIONARY */\\\n-    M(CREATE_TEMPORARY_TABLE, \"\", GLOBAL, CREATE) /* allows to create and manipulate temporary tables;\n+    M(CREATE_TEMPORARY_TABLE, \"\", GLOBAL, CREATE_ARBITRARY_TEMPORARY_TABLE) /* allows to create and manipulate temporary tables;\n                                                      implicitly enabled by the grant CREATE_TABLE on any table */ \\\n+    M(CREATE_ARBITRARY_TEMPORARY_TABLE, \"\", GLOBAL, CREATE)  /* allows to create  and manipulate temporary tables\n+                                                                with arbitrary table engine */\\\n     M(CREATE_FUNCTION, \"\", GLOBAL, CREATE) /* allows to execute CREATE FUNCTION */ \\\n     M(CREATE_NAMED_COLLECTION, \"\", GLOBAL, CREATE) /* allows to execute CREATE NAMED COLLECTION */ \\\n     M(CREATE, \"\", GROUP, ALL) /* allows to execute {CREATE|ATTACH} */ \\\ndiff --git a/src/Access/ContextAccess.cpp b/src/Access/ContextAccess.cpp\nindex fbaacb2263bc..cc51183c51f4 100644\n--- a/src/Access/ContextAccess.cpp\n+++ b/src/Access/ContextAccess.cpp\n@@ -81,6 +81,11 @@ namespace\n             if ((level == 0) && (max_flags_with_children & create_table))\n                 res |= create_temporary_table;\n \n+            /// CREATE TABLE (on any database/table) => CREATE_ARBITRARY_TEMPORARY_TABLE (global)\n+            static const AccessFlags create_arbitrary_temporary_table = AccessType::CREATE_ARBITRARY_TEMPORARY_TABLE;\n+            if ((level == 0) && (max_flags_with_children & create_table))\n+                res |= create_arbitrary_temporary_table;\n+\n             /// ALTER_TTL => ALTER_MATERIALIZE_TTL\n             static const AccessFlags alter_ttl = AccessType::ALTER_TTL;\n             static const AccessFlags alter_materialize_ttl = AccessType::ALTER_MATERIALIZE_TTL;\ndiff --git a/src/Databases/DatabaseMemory.cpp b/src/Databases/DatabaseMemory.cpp\nindex fda0bbe80320..3ede69d5362d 100644\n--- a/src/Databases/DatabaseMemory.cpp\n+++ b/src/Databases/DatabaseMemory.cpp\n@@ -26,7 +26,12 @@ namespace ErrorCodes\n DatabaseMemory::DatabaseMemory(const String & name_, ContextPtr context_)\n     : DatabaseWithOwnTablesBase(name_, \"DatabaseMemory(\" + name_ + \")\", context_)\n     , data_path(\"data/\" + escapeForFileName(database_name) + \"/\")\n-{}\n+{\n+    /// Temporary database should not have any data on the moment of its creation\n+    /// In case of sudden server shutdown remove database folder of temporary database\n+    if (name_ == DatabaseCatalog::TEMPORARY_DATABASE)\n+        removeDataPath(context_);\n+}\n \n void DatabaseMemory::createTable(\n     ContextPtr /*context*/,\n@@ -71,8 +76,7 @@ void DatabaseMemory::dropTable(\n \n         if (table->storesDataOnDisk())\n         {\n-            assert(getDatabaseName() != DatabaseCatalog::TEMPORARY_DATABASE);\n-            fs::path table_data_dir{getTableDataPath(table_name)};\n+            fs::path table_data_dir{fs::path{getContext()->getPath()} / getTableDataPath(table_name)};\n             if (fs::exists(table_data_dir))\n                 fs::remove_all(table_data_dir);\n         }\n@@ -80,7 +84,6 @@ void DatabaseMemory::dropTable(\n     catch (...)\n     {\n         std::lock_guard lock{mutex};\n-        assert(database_name != DatabaseCatalog::TEMPORARY_DATABASE);\n         attachTableUnlocked(table_name, table);\n         throw;\n     }\n@@ -129,10 +132,15 @@ UUID DatabaseMemory::tryGetTableUUID(const String & table_name) const\n     return UUIDHelpers::Nil;\n }\n \n+void DatabaseMemory::removeDataPath(ContextPtr local_context)\n+{\n+    std::filesystem::remove_all(local_context->getPath() + data_path);\n+}\n+\n void DatabaseMemory::drop(ContextPtr local_context)\n {\n     /// Remove data on explicit DROP DATABASE\n-    std::filesystem::remove_all(local_context->getPath() + data_path);\n+    removeDataPath(local_context);\n }\n \n void DatabaseMemory::alterTable(ContextPtr local_context, const StorageID & table_id, const StorageInMemoryMetadata & metadata)\ndiff --git a/src/Databases/DatabaseMemory.h b/src/Databases/DatabaseMemory.h\nindex 6262543b0c14..0f703a0b46e8 100644\n--- a/src/Databases/DatabaseMemory.h\n+++ b/src/Databases/DatabaseMemory.h\n@@ -53,6 +53,8 @@ class DatabaseMemory final : public DatabaseWithOwnTablesBase\n     std::vector<std::pair<ASTPtr, StoragePtr>> getTablesForBackup(const FilterByNameFunction & filter, const ContextPtr & local_context) const override;\n \n private:\n+    void removeDataPath(ContextPtr local_context);\n+\n     const String data_path;\n     using NameToASTCreate = std::unordered_map<String, ASTPtr>;\n     NameToASTCreate create_queries TSA_GUARDED_BY(mutex);\ndiff --git a/src/Interpreters/DatabaseCatalog.cpp b/src/Interpreters/DatabaseCatalog.cpp\nindex 975e0da66ce1..cd38289ffc17 100644\n--- a/src/Interpreters/DatabaseCatalog.cpp\n+++ b/src/Interpreters/DatabaseCatalog.cpp\n@@ -121,9 +121,16 @@ TemporaryTableHolder::~TemporaryTableHolder()\n {\n     if (id != UUIDHelpers::Nil)\n     {\n-        auto table = getTable();\n-        table->flushAndShutdown();\n-        temporary_tables->dropTable(getContext(), \"_tmp_\" + toString(id));\n+        try\n+        {\n+            auto table = getTable();\n+            table->flushAndShutdown();\n+            temporary_tables->dropTable(getContext(), \"_tmp_\" + toString(id));\n+        }\n+        catch (...)\n+        {\n+            tryLogCurrentException(\"TemporaryTableHolder\");\n+        }\n     }\n }\n \ndiff --git a/src/Interpreters/InterpreterCreateQuery.cpp b/src/Interpreters/InterpreterCreateQuery.cpp\nindex c352280b7ed9..7a4d65a4d57b 100644\n--- a/src/Interpreters/InterpreterCreateQuery.cpp\n+++ b/src/Interpreters/InterpreterCreateQuery.cpp\n@@ -940,23 +940,32 @@ void InterpreterCreateQuery::setEngine(ASTCreateQuery & create) const\n \n     if (create.temporary)\n     {\n-        if (create.storage && create.storage->engine && create.storage->engine->name != \"Memory\")\n-            throw Exception(ErrorCodes::INCORRECT_QUERY, \"Temporary tables can only be created with ENGINE = Memory, not {}\",\n-                create.storage->engine->name);\n-\n         /// It's possible if some part of storage definition (such as PARTITION BY) is specified, but ENGINE is not.\n         /// It makes sense when default_table_engine setting is used, but not for temporary tables.\n         /// For temporary tables we ignore this setting to allow CREATE TEMPORARY TABLE query without specifying ENGINE\n-        /// even if setting is set to MergeTree or something like that (otherwise MergeTree will be substituted and query will fail).\n-        if (create.storage && !create.storage->engine)\n-            throw Exception(ErrorCodes::INCORRECT_QUERY, \"Invalid storage definition for temporary table: must be either ENGINE = Memory or empty\");\n-\n-        auto engine_ast = std::make_shared<ASTFunction>();\n-        engine_ast->name = \"Memory\";\n-        engine_ast->no_empty_args = true;\n-        auto storage_ast = std::make_shared<ASTStorage>();\n-        storage_ast->set(storage_ast->engine, engine_ast);\n-        create.set(create.storage, storage_ast);\n+\n+        if (!create.cluster.empty())\n+            throw Exception(ErrorCodes::INCORRECT_QUERY, \"Temporary tables cannot be created with ON CLUSTER clause\");\n+\n+        if (create.storage)\n+        {\n+            if (create.storage->engine)\n+            {\n+                if (create.storage->engine->name.starts_with(\"Replicated\") || create.storage->engine->name == \"KeeperMap\")\n+                    throw Exception(ErrorCodes::INCORRECT_QUERY, \"Temporary tables cannot be created with Replicated or KeeperMap table engines\");\n+            }\n+            else\n+                throw Exception(ErrorCodes::INCORRECT_QUERY, \"Invalid storage definition for temporary table\");\n+        }\n+        else\n+        {\n+            auto engine_ast = std::make_shared<ASTFunction>();\n+            engine_ast->name = \"Memory\";\n+            engine_ast->no_empty_args = true;\n+            auto storage_ast = std::make_shared<ASTStorage>();\n+            storage_ast->set(storage_ast->engine, engine_ast);\n+            create.set(create.storage, storage_ast);\n+        }\n         return;\n     }\n \n@@ -1284,8 +1293,21 @@ bool InterpreterCreateQuery::doCreateTable(ASTCreateQuery & create,\n         if (create.if_not_exists && getContext()->tryResolveStorageID({\"\", create.getTable()}, Context::ResolveExternal))\n             return false;\n \n+        DatabasePtr database = DatabaseCatalog::instance().getDatabase(DatabaseCatalog::TEMPORARY_DATABASE);\n+\n         String temporary_table_name = create.getTable();\n-        auto temporary_table = TemporaryTableHolder(getContext(), properties.columns, properties.constraints, query_ptr);\n+        auto creator = [&](const StorageID & table_id)\n+        {\n+            return StorageFactory::instance().get(create,\n+                database->getTableDataPath(table_id.getTableName()),\n+                getContext(),\n+                getContext()->getGlobalContext(),\n+                properties.columns,\n+                properties.constraints,\n+                false);\n+        };\n+        auto temporary_table = TemporaryTableHolder(getContext(), creator, query_ptr);\n+\n         getContext()->getSessionContext()->addExternalTable(temporary_table_name, std::move(temporary_table));\n         return true;\n     }\n@@ -1712,7 +1734,13 @@ AccessRightsElements InterpreterCreateQuery::getRequiredAccess() const\n     else\n     {\n         if (create.temporary)\n-            required_access.emplace_back(AccessType::CREATE_TEMPORARY_TABLE);\n+        {\n+            /// Currently default table engine for temporary tables is Memory. default_table_engine does not affect temporary tables.\n+            if (create.storage && create.storage->engine && create.storage->engine->name != \"Memory\")\n+                required_access.emplace_back(AccessType::CREATE_ARBITRARY_TEMPORARY_TABLE);\n+            else\n+                required_access.emplace_back(AccessType::CREATE_TEMPORARY_TABLE);\n+        }\n         else\n         {\n             if (create.replace_table)\ndiff --git a/src/Interpreters/InterpreterDropQuery.cpp b/src/Interpreters/InterpreterDropQuery.cpp\nindex f4507de5ac7f..e16403bed67e 100644\n--- a/src/Interpreters/InterpreterDropQuery.cpp\n+++ b/src/Interpreters/InterpreterDropQuery.cpp\n@@ -282,11 +282,6 @@ BlockIO InterpreterDropQuery::executeToTemporaryTable(const String & table_name,\n             else if (kind == ASTDropQuery::Kind::Drop)\n             {\n                 context_handle->removeExternalTable(table_name);\n-                table->flushAndShutdown();\n-                auto table_lock = table->lockExclusively(getContext()->getCurrentQueryId(), getContext()->getSettingsRef().lock_acquire_timeout);\n-                /// Delete table data\n-                table->drop();\n-                table->is_dropped = true;\n             }\n             else if (kind == ASTDropQuery::Kind::Detach)\n             {\ndiff --git a/src/QueryPipeline/RemoteQueryExecutor.cpp b/src/QueryPipeline/RemoteQueryExecutor.cpp\nindex a10d70d22e9d..bf19de668f4f 100644\n--- a/src/QueryPipeline/RemoteQueryExecutor.cpp\n+++ b/src/QueryPipeline/RemoteQueryExecutor.cpp\n@@ -23,6 +23,7 @@\n #include <Client/MultiplexedConnections.h>\n #include <Client/HedgedConnections.h>\n #include <Storages/MergeTree/MergeTreeDataPartUUID.h>\n+#include <Storages/StorageMemory.h>\n \n \n namespace CurrentMetrics\n@@ -601,6 +602,9 @@ void RemoteQueryExecutor::sendExternalTables()\n             for (const auto & table : external_tables)\n             {\n                 StoragePtr cur = table.second;\n+                /// Send only temporary tables with StorageMemory\n+                if (!std::dynamic_pointer_cast<StorageMemory>(cur))\n+                    continue;\n \n                 auto data = std::make_unique<ExternalTableData>();\n                 data->table_name = table.first;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01271_show_privileges.reference b/tests/queries/0_stateless/01271_show_privileges.reference\nindex c061eb95a65a..abebc35d0728 100644\n--- a/tests/queries/0_stateless/01271_show_privileges.reference\n+++ b/tests/queries/0_stateless/01271_show_privileges.reference\n@@ -50,7 +50,8 @@ CREATE DATABASE\t[]\tDATABASE\tCREATE\n CREATE TABLE\t[]\tTABLE\tCREATE\n CREATE VIEW\t[]\tVIEW\tCREATE\n CREATE DICTIONARY\t[]\tDICTIONARY\tCREATE\n-CREATE TEMPORARY TABLE\t[]\tGLOBAL\tCREATE\n+CREATE TEMPORARY TABLE\t[]\tGLOBAL\tCREATE ARBITRARY TEMPORARY TABLE\n+CREATE ARBITRARY TEMPORARY TABLE\t[]\tGLOBAL\tCREATE\n CREATE FUNCTION\t[]\tGLOBAL\tCREATE\n CREATE NAMED COLLECTION\t[]\tGLOBAL\tCREATE\n CREATE\t[]\t\\N\tALL\ndiff --git a/tests/queries/0_stateless/02117_show_create_table_system.reference b/tests/queries/0_stateless/02117_show_create_table_system.reference\nindex f77076bcd5c5..c13de3faec32 100644\n--- a/tests/queries/0_stateless/02117_show_create_table_system.reference\n+++ b/tests/queries/0_stateless/02117_show_create_table_system.reference\n@@ -289,7 +289,7 @@ CREATE TABLE system.grants\n (\n     `user_name` Nullable(String),\n     `role_name` Nullable(String),\n-    `access_type` Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW FILESYSTEM CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER NAMED COLLECTION' = 41, 'ALTER TABLE' = 42, 'ALTER DATABASE' = 43, 'ALTER VIEW REFRESH' = 44, 'ALTER VIEW MODIFY QUERY' = 45, 'ALTER VIEW' = 46, 'ALTER' = 47, 'CREATE DATABASE' = 48, 'CREATE TABLE' = 49, 'CREATE VIEW' = 50, 'CREATE DICTIONARY' = 51, 'CREATE TEMPORARY TABLE' = 52, 'CREATE FUNCTION' = 53, 'CREATE NAMED COLLECTION' = 54, 'CREATE' = 55, 'DROP DATABASE' = 56, 'DROP TABLE' = 57, 'DROP VIEW' = 58, 'DROP DICTIONARY' = 59, 'DROP FUNCTION' = 60, 'DROP NAMED COLLECTION' = 61, 'DROP' = 62, 'TRUNCATE' = 63, 'OPTIMIZE' = 64, 'BACKUP' = 65, 'KILL QUERY' = 66, 'KILL TRANSACTION' = 67, 'MOVE PARTITION BETWEEN SHARDS' = 68, 'CREATE USER' = 69, 'ALTER USER' = 70, 'DROP USER' = 71, 'CREATE ROLE' = 72, 'ALTER ROLE' = 73, 'DROP ROLE' = 74, 'ROLE ADMIN' = 75, 'CREATE ROW POLICY' = 76, 'ALTER ROW POLICY' = 77, 'DROP ROW POLICY' = 78, 'CREATE QUOTA' = 79, 'ALTER QUOTA' = 80, 'DROP QUOTA' = 81, 'CREATE SETTINGS PROFILE' = 82, 'ALTER SETTINGS PROFILE' = 83, 'DROP SETTINGS PROFILE' = 84, 'SHOW USERS' = 85, 'SHOW ROLES' = 86, 'SHOW ROW POLICIES' = 87, 'SHOW QUOTAS' = 88, 'SHOW SETTINGS PROFILES' = 89, 'SHOW ACCESS' = 90, 'SHOW NAMED COLLECTIONS' = 91, 'SHOW NAMED COLLECTIONS SECRETS' = 92, 'ACCESS MANAGEMENT' = 93, 'SYSTEM SHUTDOWN' = 94, 'SYSTEM DROP DNS CACHE' = 95, 'SYSTEM DROP MARK CACHE' = 96, 'SYSTEM DROP UNCOMPRESSED CACHE' = 97, 'SYSTEM DROP MMAP CACHE' = 98, 'SYSTEM DROP QUERY CACHE' = 99, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 100, 'SYSTEM DROP FILESYSTEM CACHE' = 101, 'SYSTEM DROP SCHEMA CACHE' = 102, 'SYSTEM DROP S3 CLIENT CACHE' = 103, 'SYSTEM DROP CACHE' = 104, 'SYSTEM RELOAD CONFIG' = 105, 'SYSTEM RELOAD USERS' = 106, 'SYSTEM RELOAD SYMBOLS' = 107, 'SYSTEM RELOAD DICTIONARY' = 108, 'SYSTEM RELOAD MODEL' = 109, 'SYSTEM RELOAD FUNCTION' = 110, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 111, 'SYSTEM RELOAD' = 112, 'SYSTEM RESTART DISK' = 113, 'SYSTEM MERGES' = 114, 'SYSTEM TTL MERGES' = 115, 'SYSTEM FETCHES' = 116, 'SYSTEM MOVES' = 117, 'SYSTEM DISTRIBUTED SENDS' = 118, 'SYSTEM REPLICATED SENDS' = 119, 'SYSTEM SENDS' = 120, 'SYSTEM REPLICATION QUEUES' = 121, 'SYSTEM DROP REPLICA' = 122, 'SYSTEM SYNC REPLICA' = 123, 'SYSTEM RESTART REPLICA' = 124, 'SYSTEM RESTORE REPLICA' = 125, 'SYSTEM WAIT LOADING PARTS' = 126, 'SYSTEM SYNC DATABASE REPLICA' = 127, 'SYSTEM SYNC TRANSACTION LOG' = 128, 'SYSTEM SYNC FILE CACHE' = 129, 'SYSTEM FLUSH DISTRIBUTED' = 130, 'SYSTEM FLUSH LOGS' = 131, 'SYSTEM FLUSH' = 132, 'SYSTEM THREAD FUZZER' = 133, 'SYSTEM UNFREEZE' = 134, 'SYSTEM' = 135, 'dictGet' = 136, 'addressToLine' = 137, 'addressToLineWithInlines' = 138, 'addressToSymbol' = 139, 'demangle' = 140, 'INTROSPECTION' = 141, 'FILE' = 142, 'URL' = 143, 'REMOTE' = 144, 'MONGO' = 145, 'MEILISEARCH' = 146, 'MYSQL' = 147, 'POSTGRES' = 148, 'SQLITE' = 149, 'ODBC' = 150, 'JDBC' = 151, 'HDFS' = 152, 'S3' = 153, 'HIVE' = 154, 'SOURCES' = 155, 'CLUSTER' = 156, 'ALL' = 157, 'NONE' = 158),\n+    `access_type` Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW FILESYSTEM CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER NAMED COLLECTION' = 41, 'ALTER TABLE' = 42, 'ALTER DATABASE' = 43, 'ALTER VIEW REFRESH' = 44, 'ALTER VIEW MODIFY QUERY' = 45, 'ALTER VIEW' = 46, 'ALTER' = 47, 'CREATE DATABASE' = 48, 'CREATE TABLE' = 49, 'CREATE VIEW' = 50, 'CREATE DICTIONARY' = 51, 'CREATE TEMPORARY TABLE' = 52, 'CREATE ARBITRARY TEMPORARY TABLE' = 53, 'CREATE FUNCTION' = 54, 'CREATE NAMED COLLECTION' = 55, 'CREATE' = 56, 'DROP DATABASE' = 57, 'DROP TABLE' = 58, 'DROP VIEW' = 59, 'DROP DICTIONARY' = 60, 'DROP FUNCTION' = 61, 'DROP NAMED COLLECTION' = 62, 'DROP' = 63, 'TRUNCATE' = 64, 'OPTIMIZE' = 65, 'BACKUP' = 66, 'KILL QUERY' = 67, 'KILL TRANSACTION' = 68, 'MOVE PARTITION BETWEEN SHARDS' = 69, 'CREATE USER' = 70, 'ALTER USER' = 71, 'DROP USER' = 72, 'CREATE ROLE' = 73, 'ALTER ROLE' = 74, 'DROP ROLE' = 75, 'ROLE ADMIN' = 76, 'CREATE ROW POLICY' = 77, 'ALTER ROW POLICY' = 78, 'DROP ROW POLICY' = 79, 'CREATE QUOTA' = 80, 'ALTER QUOTA' = 81, 'DROP QUOTA' = 82, 'CREATE SETTINGS PROFILE' = 83, 'ALTER SETTINGS PROFILE' = 84, 'DROP SETTINGS PROFILE' = 85, 'SHOW USERS' = 86, 'SHOW ROLES' = 87, 'SHOW ROW POLICIES' = 88, 'SHOW QUOTAS' = 89, 'SHOW SETTINGS PROFILES' = 90, 'SHOW ACCESS' = 91, 'SHOW NAMED COLLECTIONS' = 92, 'SHOW NAMED COLLECTIONS SECRETS' = 93, 'ACCESS MANAGEMENT' = 94, 'SYSTEM SHUTDOWN' = 95, 'SYSTEM DROP DNS CACHE' = 96, 'SYSTEM DROP MARK CACHE' = 97, 'SYSTEM DROP UNCOMPRESSED CACHE' = 98, 'SYSTEM DROP MMAP CACHE' = 99, 'SYSTEM DROP QUERY CACHE' = 100, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 101, 'SYSTEM DROP FILESYSTEM CACHE' = 102, 'SYSTEM DROP SCHEMA CACHE' = 103, 'SYSTEM DROP S3 CLIENT CACHE' = 104, 'SYSTEM DROP CACHE' = 105, 'SYSTEM RELOAD CONFIG' = 106, 'SYSTEM RELOAD USERS' = 107, 'SYSTEM RELOAD SYMBOLS' = 108, 'SYSTEM RELOAD DICTIONARY' = 109, 'SYSTEM RELOAD MODEL' = 110, 'SYSTEM RELOAD FUNCTION' = 111, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 112, 'SYSTEM RELOAD' = 113, 'SYSTEM RESTART DISK' = 114, 'SYSTEM MERGES' = 115, 'SYSTEM TTL MERGES' = 116, 'SYSTEM FETCHES' = 117, 'SYSTEM MOVES' = 118, 'SYSTEM DISTRIBUTED SENDS' = 119, 'SYSTEM REPLICATED SENDS' = 120, 'SYSTEM SENDS' = 121, 'SYSTEM REPLICATION QUEUES' = 122, 'SYSTEM DROP REPLICA' = 123, 'SYSTEM SYNC REPLICA' = 124, 'SYSTEM RESTART REPLICA' = 125, 'SYSTEM RESTORE REPLICA' = 126, 'SYSTEM WAIT LOADING PARTS' = 127, 'SYSTEM SYNC DATABASE REPLICA' = 128, 'SYSTEM SYNC TRANSACTION LOG' = 129, 'SYSTEM SYNC FILE CACHE' = 130, 'SYSTEM FLUSH DISTRIBUTED' = 131, 'SYSTEM FLUSH LOGS' = 132, 'SYSTEM FLUSH' = 133, 'SYSTEM THREAD FUZZER' = 134, 'SYSTEM UNFREEZE' = 135, 'SYSTEM' = 136, 'dictGet' = 137, 'addressToLine' = 138, 'addressToLineWithInlines' = 139, 'addressToSymbol' = 140, 'demangle' = 141, 'INTROSPECTION' = 142, 'FILE' = 143, 'URL' = 144, 'REMOTE' = 145, 'MONGO' = 146, 'MEILISEARCH' = 147, 'MYSQL' = 148, 'POSTGRES' = 149, 'SQLITE' = 150, 'ODBC' = 151, 'JDBC' = 152, 'HDFS' = 153, 'S3' = 154, 'HIVE' = 155, 'SOURCES' = 156, 'CLUSTER' = 157, 'ALL' = 158, 'NONE' = 159),\n     `database` Nullable(String),\n     `table` Nullable(String),\n     `column` Nullable(String),\n@@ -570,10 +570,10 @@ ENGINE = SystemPartsColumns\n COMMENT 'SYSTEM TABLE is built on the fly.'\n CREATE TABLE system.privileges\n (\n-    `privilege` Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW FILESYSTEM CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER NAMED COLLECTION' = 41, 'ALTER TABLE' = 42, 'ALTER DATABASE' = 43, 'ALTER VIEW REFRESH' = 44, 'ALTER VIEW MODIFY QUERY' = 45, 'ALTER VIEW' = 46, 'ALTER' = 47, 'CREATE DATABASE' = 48, 'CREATE TABLE' = 49, 'CREATE VIEW' = 50, 'CREATE DICTIONARY' = 51, 'CREATE TEMPORARY TABLE' = 52, 'CREATE FUNCTION' = 53, 'CREATE NAMED COLLECTION' = 54, 'CREATE' = 55, 'DROP DATABASE' = 56, 'DROP TABLE' = 57, 'DROP VIEW' = 58, 'DROP DICTIONARY' = 59, 'DROP FUNCTION' = 60, 'DROP NAMED COLLECTION' = 61, 'DROP' = 62, 'TRUNCATE' = 63, 'OPTIMIZE' = 64, 'BACKUP' = 65, 'KILL QUERY' = 66, 'KILL TRANSACTION' = 67, 'MOVE PARTITION BETWEEN SHARDS' = 68, 'CREATE USER' = 69, 'ALTER USER' = 70, 'DROP USER' = 71, 'CREATE ROLE' = 72, 'ALTER ROLE' = 73, 'DROP ROLE' = 74, 'ROLE ADMIN' = 75, 'CREATE ROW POLICY' = 76, 'ALTER ROW POLICY' = 77, 'DROP ROW POLICY' = 78, 'CREATE QUOTA' = 79, 'ALTER QUOTA' = 80, 'DROP QUOTA' = 81, 'CREATE SETTINGS PROFILE' = 82, 'ALTER SETTINGS PROFILE' = 83, 'DROP SETTINGS PROFILE' = 84, 'SHOW USERS' = 85, 'SHOW ROLES' = 86, 'SHOW ROW POLICIES' = 87, 'SHOW QUOTAS' = 88, 'SHOW SETTINGS PROFILES' = 89, 'SHOW ACCESS' = 90, 'SHOW NAMED COLLECTIONS' = 91, 'SHOW NAMED COLLECTIONS SECRETS' = 92, 'ACCESS MANAGEMENT' = 93, 'SYSTEM SHUTDOWN' = 94, 'SYSTEM DROP DNS CACHE' = 95, 'SYSTEM DROP MARK CACHE' = 96, 'SYSTEM DROP UNCOMPRESSED CACHE' = 97, 'SYSTEM DROP MMAP CACHE' = 98, 'SYSTEM DROP QUERY CACHE' = 99, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 100, 'SYSTEM DROP FILESYSTEM CACHE' = 101, 'SYSTEM DROP SCHEMA CACHE' = 102, 'SYSTEM DROP S3 CLIENT CACHE' = 103, 'SYSTEM DROP CACHE' = 104, 'SYSTEM RELOAD CONFIG' = 105, 'SYSTEM RELOAD USERS' = 106, 'SYSTEM RELOAD SYMBOLS' = 107, 'SYSTEM RELOAD DICTIONARY' = 108, 'SYSTEM RELOAD MODEL' = 109, 'SYSTEM RELOAD FUNCTION' = 110, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 111, 'SYSTEM RELOAD' = 112, 'SYSTEM RESTART DISK' = 113, 'SYSTEM MERGES' = 114, 'SYSTEM TTL MERGES' = 115, 'SYSTEM FETCHES' = 116, 'SYSTEM MOVES' = 117, 'SYSTEM DISTRIBUTED SENDS' = 118, 'SYSTEM REPLICATED SENDS' = 119, 'SYSTEM SENDS' = 120, 'SYSTEM REPLICATION QUEUES' = 121, 'SYSTEM DROP REPLICA' = 122, 'SYSTEM SYNC REPLICA' = 123, 'SYSTEM RESTART REPLICA' = 124, 'SYSTEM RESTORE REPLICA' = 125, 'SYSTEM WAIT LOADING PARTS' = 126, 'SYSTEM SYNC DATABASE REPLICA' = 127, 'SYSTEM SYNC TRANSACTION LOG' = 128, 'SYSTEM SYNC FILE CACHE' = 129, 'SYSTEM FLUSH DISTRIBUTED' = 130, 'SYSTEM FLUSH LOGS' = 131, 'SYSTEM FLUSH' = 132, 'SYSTEM THREAD FUZZER' = 133, 'SYSTEM UNFREEZE' = 134, 'SYSTEM' = 135, 'dictGet' = 136, 'addressToLine' = 137, 'addressToLineWithInlines' = 138, 'addressToSymbol' = 139, 'demangle' = 140, 'INTROSPECTION' = 141, 'FILE' = 142, 'URL' = 143, 'REMOTE' = 144, 'MONGO' = 145, 'MEILISEARCH' = 146, 'MYSQL' = 147, 'POSTGRES' = 148, 'SQLITE' = 149, 'ODBC' = 150, 'JDBC' = 151, 'HDFS' = 152, 'S3' = 153, 'HIVE' = 154, 'SOURCES' = 155, 'CLUSTER' = 156, 'ALL' = 157, 'NONE' = 158),\n+    `privilege` Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW FILESYSTEM CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER NAMED COLLECTION' = 41, 'ALTER TABLE' = 42, 'ALTER DATABASE' = 43, 'ALTER VIEW REFRESH' = 44, 'ALTER VIEW MODIFY QUERY' = 45, 'ALTER VIEW' = 46, 'ALTER' = 47, 'CREATE DATABASE' = 48, 'CREATE TABLE' = 49, 'CREATE VIEW' = 50, 'CREATE DICTIONARY' = 51, 'CREATE TEMPORARY TABLE' = 52, 'CREATE ARBITRARY TEMPORARY TABLE' = 53, 'CREATE FUNCTION' = 54, 'CREATE NAMED COLLECTION' = 55, 'CREATE' = 56, 'DROP DATABASE' = 57, 'DROP TABLE' = 58, 'DROP VIEW' = 59, 'DROP DICTIONARY' = 60, 'DROP FUNCTION' = 61, 'DROP NAMED COLLECTION' = 62, 'DROP' = 63, 'TRUNCATE' = 64, 'OPTIMIZE' = 65, 'BACKUP' = 66, 'KILL QUERY' = 67, 'KILL TRANSACTION' = 68, 'MOVE PARTITION BETWEEN SHARDS' = 69, 'CREATE USER' = 70, 'ALTER USER' = 71, 'DROP USER' = 72, 'CREATE ROLE' = 73, 'ALTER ROLE' = 74, 'DROP ROLE' = 75, 'ROLE ADMIN' = 76, 'CREATE ROW POLICY' = 77, 'ALTER ROW POLICY' = 78, 'DROP ROW POLICY' = 79, 'CREATE QUOTA' = 80, 'ALTER QUOTA' = 81, 'DROP QUOTA' = 82, 'CREATE SETTINGS PROFILE' = 83, 'ALTER SETTINGS PROFILE' = 84, 'DROP SETTINGS PROFILE' = 85, 'SHOW USERS' = 86, 'SHOW ROLES' = 87, 'SHOW ROW POLICIES' = 88, 'SHOW QUOTAS' = 89, 'SHOW SETTINGS PROFILES' = 90, 'SHOW ACCESS' = 91, 'SHOW NAMED COLLECTIONS' = 92, 'SHOW NAMED COLLECTIONS SECRETS' = 93, 'ACCESS MANAGEMENT' = 94, 'SYSTEM SHUTDOWN' = 95, 'SYSTEM DROP DNS CACHE' = 96, 'SYSTEM DROP MARK CACHE' = 97, 'SYSTEM DROP UNCOMPRESSED CACHE' = 98, 'SYSTEM DROP MMAP CACHE' = 99, 'SYSTEM DROP QUERY CACHE' = 100, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 101, 'SYSTEM DROP FILESYSTEM CACHE' = 102, 'SYSTEM DROP SCHEMA CACHE' = 103, 'SYSTEM DROP S3 CLIENT CACHE' = 104, 'SYSTEM DROP CACHE' = 105, 'SYSTEM RELOAD CONFIG' = 106, 'SYSTEM RELOAD USERS' = 107, 'SYSTEM RELOAD SYMBOLS' = 108, 'SYSTEM RELOAD DICTIONARY' = 109, 'SYSTEM RELOAD MODEL' = 110, 'SYSTEM RELOAD FUNCTION' = 111, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 112, 'SYSTEM RELOAD' = 113, 'SYSTEM RESTART DISK' = 114, 'SYSTEM MERGES' = 115, 'SYSTEM TTL MERGES' = 116, 'SYSTEM FETCHES' = 117, 'SYSTEM MOVES' = 118, 'SYSTEM DISTRIBUTED SENDS' = 119, 'SYSTEM REPLICATED SENDS' = 120, 'SYSTEM SENDS' = 121, 'SYSTEM REPLICATION QUEUES' = 122, 'SYSTEM DROP REPLICA' = 123, 'SYSTEM SYNC REPLICA' = 124, 'SYSTEM RESTART REPLICA' = 125, 'SYSTEM RESTORE REPLICA' = 126, 'SYSTEM WAIT LOADING PARTS' = 127, 'SYSTEM SYNC DATABASE REPLICA' = 128, 'SYSTEM SYNC TRANSACTION LOG' = 129, 'SYSTEM SYNC FILE CACHE' = 130, 'SYSTEM FLUSH DISTRIBUTED' = 131, 'SYSTEM FLUSH LOGS' = 132, 'SYSTEM FLUSH' = 133, 'SYSTEM THREAD FUZZER' = 134, 'SYSTEM UNFREEZE' = 135, 'SYSTEM' = 136, 'dictGet' = 137, 'addressToLine' = 138, 'addressToLineWithInlines' = 139, 'addressToSymbol' = 140, 'demangle' = 141, 'INTROSPECTION' = 142, 'FILE' = 143, 'URL' = 144, 'REMOTE' = 145, 'MONGO' = 146, 'MEILISEARCH' = 147, 'MYSQL' = 148, 'POSTGRES' = 149, 'SQLITE' = 150, 'ODBC' = 151, 'JDBC' = 152, 'HDFS' = 153, 'S3' = 154, 'HIVE' = 155, 'SOURCES' = 156, 'CLUSTER' = 157, 'ALL' = 158, 'NONE' = 159),\n     `aliases` Array(String),\n     `level` Nullable(Enum8('GLOBAL' = 0, 'DATABASE' = 1, 'TABLE' = 2, 'DICTIONARY' = 3, 'VIEW' = 4, 'COLUMN' = 5)),\n-    `parent_group` Nullable(Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW FILESYSTEM CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER NAMED COLLECTION' = 41, 'ALTER TABLE' = 42, 'ALTER DATABASE' = 43, 'ALTER VIEW REFRESH' = 44, 'ALTER VIEW MODIFY QUERY' = 45, 'ALTER VIEW' = 46, 'ALTER' = 47, 'CREATE DATABASE' = 48, 'CREATE TABLE' = 49, 'CREATE VIEW' = 50, 'CREATE DICTIONARY' = 51, 'CREATE TEMPORARY TABLE' = 52, 'CREATE FUNCTION' = 53, 'CREATE NAMED COLLECTION' = 54, 'CREATE' = 55, 'DROP DATABASE' = 56, 'DROP TABLE' = 57, 'DROP VIEW' = 58, 'DROP DICTIONARY' = 59, 'DROP FUNCTION' = 60, 'DROP NAMED COLLECTION' = 61, 'DROP' = 62, 'TRUNCATE' = 63, 'OPTIMIZE' = 64, 'BACKUP' = 65, 'KILL QUERY' = 66, 'KILL TRANSACTION' = 67, 'MOVE PARTITION BETWEEN SHARDS' = 68, 'CREATE USER' = 69, 'ALTER USER' = 70, 'DROP USER' = 71, 'CREATE ROLE' = 72, 'ALTER ROLE' = 73, 'DROP ROLE' = 74, 'ROLE ADMIN' = 75, 'CREATE ROW POLICY' = 76, 'ALTER ROW POLICY' = 77, 'DROP ROW POLICY' = 78, 'CREATE QUOTA' = 79, 'ALTER QUOTA' = 80, 'DROP QUOTA' = 81, 'CREATE SETTINGS PROFILE' = 82, 'ALTER SETTINGS PROFILE' = 83, 'DROP SETTINGS PROFILE' = 84, 'SHOW USERS' = 85, 'SHOW ROLES' = 86, 'SHOW ROW POLICIES' = 87, 'SHOW QUOTAS' = 88, 'SHOW SETTINGS PROFILES' = 89, 'SHOW ACCESS' = 90, 'SHOW NAMED COLLECTIONS' = 91, 'SHOW NAMED COLLECTIONS SECRETS' = 92, 'ACCESS MANAGEMENT' = 93, 'SYSTEM SHUTDOWN' = 94, 'SYSTEM DROP DNS CACHE' = 95, 'SYSTEM DROP MARK CACHE' = 96, 'SYSTEM DROP UNCOMPRESSED CACHE' = 97, 'SYSTEM DROP MMAP CACHE' = 98, 'SYSTEM DROP QUERY CACHE' = 99, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 100, 'SYSTEM DROP FILESYSTEM CACHE' = 101, 'SYSTEM DROP SCHEMA CACHE' = 102, 'SYSTEM DROP S3 CLIENT CACHE' = 103, 'SYSTEM DROP CACHE' = 104, 'SYSTEM RELOAD CONFIG' = 105, 'SYSTEM RELOAD USERS' = 106, 'SYSTEM RELOAD SYMBOLS' = 107, 'SYSTEM RELOAD DICTIONARY' = 108, 'SYSTEM RELOAD MODEL' = 109, 'SYSTEM RELOAD FUNCTION' = 110, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 111, 'SYSTEM RELOAD' = 112, 'SYSTEM RESTART DISK' = 113, 'SYSTEM MERGES' = 114, 'SYSTEM TTL MERGES' = 115, 'SYSTEM FETCHES' = 116, 'SYSTEM MOVES' = 117, 'SYSTEM DISTRIBUTED SENDS' = 118, 'SYSTEM REPLICATED SENDS' = 119, 'SYSTEM SENDS' = 120, 'SYSTEM REPLICATION QUEUES' = 121, 'SYSTEM DROP REPLICA' = 122, 'SYSTEM SYNC REPLICA' = 123, 'SYSTEM RESTART REPLICA' = 124, 'SYSTEM RESTORE REPLICA' = 125, 'SYSTEM WAIT LOADING PARTS' = 126, 'SYSTEM SYNC DATABASE REPLICA' = 127, 'SYSTEM SYNC TRANSACTION LOG' = 128, 'SYSTEM SYNC FILE CACHE' = 129, 'SYSTEM FLUSH DISTRIBUTED' = 130, 'SYSTEM FLUSH LOGS' = 131, 'SYSTEM FLUSH' = 132, 'SYSTEM THREAD FUZZER' = 133, 'SYSTEM UNFREEZE' = 134, 'SYSTEM' = 135, 'dictGet' = 136, 'addressToLine' = 137, 'addressToLineWithInlines' = 138, 'addressToSymbol' = 139, 'demangle' = 140, 'INTROSPECTION' = 141, 'FILE' = 142, 'URL' = 143, 'REMOTE' = 144, 'MONGO' = 145, 'MEILISEARCH' = 146, 'MYSQL' = 147, 'POSTGRES' = 148, 'SQLITE' = 149, 'ODBC' = 150, 'JDBC' = 151, 'HDFS' = 152, 'S3' = 153, 'HIVE' = 154, 'SOURCES' = 155, 'CLUSTER' = 156, 'ALL' = 157, 'NONE' = 158))\n+    `parent_group` Nullable(Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW FILESYSTEM CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER NAMED COLLECTION' = 41, 'ALTER TABLE' = 42, 'ALTER DATABASE' = 43, 'ALTER VIEW REFRESH' = 44, 'ALTER VIEW MODIFY QUERY' = 45, 'ALTER VIEW' = 46, 'ALTER' = 47, 'CREATE DATABASE' = 48, 'CREATE TABLE' = 49, 'CREATE VIEW' = 50, 'CREATE DICTIONARY' = 51, 'CREATE TEMPORARY TABLE' = 52, 'CREATE ARBITRARY TEMPORARY TABLE' = 53, 'CREATE FUNCTION' = 54, 'CREATE NAMED COLLECTION' = 55, 'CREATE' = 56, 'DROP DATABASE' = 57, 'DROP TABLE' = 58, 'DROP VIEW' = 59, 'DROP DICTIONARY' = 60, 'DROP FUNCTION' = 61, 'DROP NAMED COLLECTION' = 62, 'DROP' = 63, 'TRUNCATE' = 64, 'OPTIMIZE' = 65, 'BACKUP' = 66, 'KILL QUERY' = 67, 'KILL TRANSACTION' = 68, 'MOVE PARTITION BETWEEN SHARDS' = 69, 'CREATE USER' = 70, 'ALTER USER' = 71, 'DROP USER' = 72, 'CREATE ROLE' = 73, 'ALTER ROLE' = 74, 'DROP ROLE' = 75, 'ROLE ADMIN' = 76, 'CREATE ROW POLICY' = 77, 'ALTER ROW POLICY' = 78, 'DROP ROW POLICY' = 79, 'CREATE QUOTA' = 80, 'ALTER QUOTA' = 81, 'DROP QUOTA' = 82, 'CREATE SETTINGS PROFILE' = 83, 'ALTER SETTINGS PROFILE' = 84, 'DROP SETTINGS PROFILE' = 85, 'SHOW USERS' = 86, 'SHOW ROLES' = 87, 'SHOW ROW POLICIES' = 88, 'SHOW QUOTAS' = 89, 'SHOW SETTINGS PROFILES' = 90, 'SHOW ACCESS' = 91, 'SHOW NAMED COLLECTIONS' = 92, 'SHOW NAMED COLLECTIONS SECRETS' = 93, 'ACCESS MANAGEMENT' = 94, 'SYSTEM SHUTDOWN' = 95, 'SYSTEM DROP DNS CACHE' = 96, 'SYSTEM DROP MARK CACHE' = 97, 'SYSTEM DROP UNCOMPRESSED CACHE' = 98, 'SYSTEM DROP MMAP CACHE' = 99, 'SYSTEM DROP QUERY CACHE' = 100, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 101, 'SYSTEM DROP FILESYSTEM CACHE' = 102, 'SYSTEM DROP SCHEMA CACHE' = 103, 'SYSTEM DROP S3 CLIENT CACHE' = 104, 'SYSTEM DROP CACHE' = 105, 'SYSTEM RELOAD CONFIG' = 106, 'SYSTEM RELOAD USERS' = 107, 'SYSTEM RELOAD SYMBOLS' = 108, 'SYSTEM RELOAD DICTIONARY' = 109, 'SYSTEM RELOAD MODEL' = 110, 'SYSTEM RELOAD FUNCTION' = 111, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 112, 'SYSTEM RELOAD' = 113, 'SYSTEM RESTART DISK' = 114, 'SYSTEM MERGES' = 115, 'SYSTEM TTL MERGES' = 116, 'SYSTEM FETCHES' = 117, 'SYSTEM MOVES' = 118, 'SYSTEM DISTRIBUTED SENDS' = 119, 'SYSTEM REPLICATED SENDS' = 120, 'SYSTEM SENDS' = 121, 'SYSTEM REPLICATION QUEUES' = 122, 'SYSTEM DROP REPLICA' = 123, 'SYSTEM SYNC REPLICA' = 124, 'SYSTEM RESTART REPLICA' = 125, 'SYSTEM RESTORE REPLICA' = 126, 'SYSTEM WAIT LOADING PARTS' = 127, 'SYSTEM SYNC DATABASE REPLICA' = 128, 'SYSTEM SYNC TRANSACTION LOG' = 129, 'SYSTEM SYNC FILE CACHE' = 130, 'SYSTEM FLUSH DISTRIBUTED' = 131, 'SYSTEM FLUSH LOGS' = 132, 'SYSTEM FLUSH' = 133, 'SYSTEM THREAD FUZZER' = 134, 'SYSTEM UNFREEZE' = 135, 'SYSTEM' = 136, 'dictGet' = 137, 'addressToLine' = 138, 'addressToLineWithInlines' = 139, 'addressToSymbol' = 140, 'demangle' = 141, 'INTROSPECTION' = 142, 'FILE' = 143, 'URL' = 144, 'REMOTE' = 145, 'MONGO' = 146, 'MEILISEARCH' = 147, 'MYSQL' = 148, 'POSTGRES' = 149, 'SQLITE' = 150, 'ODBC' = 151, 'JDBC' = 152, 'HDFS' = 153, 'S3' = 154, 'HIVE' = 155, 'SOURCES' = 156, 'CLUSTER' = 157, 'ALL' = 158, 'NONE' = 159))\n )\n ENGINE = SystemPrivileges\n COMMENT 'SYSTEM TABLE is built on the fly.'\ndiff --git a/tests/queries/0_stateless/02184_default_table_engine.sql b/tests/queries/0_stateless/02184_default_table_engine.sql\nindex 4b5ad6c008c9..109875d53a5b 100644\n--- a/tests/queries/0_stateless/02184_default_table_engine.sql\n+++ b/tests/queries/0_stateless/02184_default_table_engine.sql\n@@ -82,7 +82,7 @@ SET default_table_engine = 'Log';\n CREATE TEMPORARY TABLE tmp (n int);\n SHOW CREATE TEMPORARY TABLE tmp;\n CREATE TEMPORARY TABLE tmp1 (n int) ENGINE=Memory;\n-CREATE TEMPORARY TABLE tmp2 (n int) ENGINE=Log; -- {serverError 80}\n+CREATE TEMPORARY TABLE tmp2 (n int) ENGINE=Log;\n CREATE TEMPORARY TABLE tmp2 (n int) ORDER BY n; -- {serverError 80}\n CREATE TEMPORARY TABLE tmp2 (n int, PRIMARY KEY (n)); -- {serverError 80}\n \ndiff --git a/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.reference b/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.reference\nnew file mode 100644\nindex 000000000000..3d1916b29f61\n--- /dev/null\n+++ b/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.reference\n@@ -0,0 +1,14 @@\n+1\ta\n+2\tb\n+3\tc\n+0\n+0\n+1\ta\n+2\tb\n+3\tc\n+1\ta\n+2\tb\n+3\tc\n+1\ta\n+2\tb\n+3\tc\ndiff --git a/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.sql b/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.sql\nnew file mode 100644\nindex 000000000000..7ebc05dfece1\n--- /dev/null\n+++ b/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.sql\n@@ -0,0 +1,66 @@\n+DROP TEMPORARY TABLE IF EXISTS table_merge_tree_02525;\n+CREATE TEMPORARY TABLE table_merge_tree_02525\n+(\n+    id UInt64,\n+    info String\n+)\n+ENGINE = MergeTree\n+ORDER BY id\n+PRIMARY KEY id;\n+INSERT INTO table_merge_tree_02525 VALUES (1, 'a'), (2, 'b'), (3, 'c');\n+SELECT * FROM table_merge_tree_02525;\n+-- Check that temporary table with MergeTree is not sent to remote servers\n+-- The query with remote() should not fail\n+SELECT dummy FROM remote('127.0.0.{1,2}', system, one);\n+DROP TEMPORARY TABLE table_merge_tree_02525;\n+\n+DROP TEMPORARY TABLE IF EXISTS table_log_02525;\n+CREATE TEMPORARY TABLE table_log_02525\n+(\n+    id UInt64,\n+    info String\n+)\n+ENGINE = Log;\n+INSERT INTO table_log_02525 VALUES (1, 'a'), (2, 'b'), (3, 'c');\n+SELECT * FROM table_log_02525;\n+DROP TEMPORARY TABLE table_log_02525;\n+\n+DROP TEMPORARY TABLE IF EXISTS table_stripe_log_02525;\n+CREATE TEMPORARY TABLE table_stripe_log_02525\n+(\n+    id UInt64,\n+    info String\n+)\n+ENGINE = StripeLog;\n+INSERT INTO table_stripe_log_02525 VALUES (1, 'a'), (2, 'b'), (3, 'c');\n+SELECT * FROM table_stripe_log_02525;\n+DROP TEMPORARY TABLE table_stripe_log_02525;\n+\n+DROP TEMPORARY TABLE IF EXISTS table_tiny_log_02525;\n+CREATE TEMPORARY TABLE table_tiny_log_02525\n+(\n+    id UInt64,\n+    info String\n+)\n+ENGINE = TinyLog;\n+INSERT INTO table_tiny_log_02525 VALUES (1, 'a'), (2, 'b'), (3, 'c');\n+SELECT * FROM table_tiny_log_02525;\n+DROP TEMPORARY TABLE table_tiny_log_02525;\n+\n+DROP TEMPORARY TABLE IF EXISTS table_replicated_merge_tree_02525;\n+CREATE TEMPORARY TABLE table_replicated_merge_tree_02525\n+(\n+    id UInt64,\n+    info String\n+)\n+ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02525/table_replicated_merge_tree_02525', 'r1')\n+ORDER BY id\n+PRIMARY KEY id; -- { serverError INCORRECT_QUERY }\n+\n+DROP TEMPORARY TABLE IF EXISTS table_keeper_map_02525;\n+CREATE TEMPORARY TABLE table_keeper_map_02525\n+(\n+    key String,\n+    value UInt32\n+) Engine=KeeperMap('/' || currentDatabase() || '/test02525')\n+PRIMARY KEY(key); -- { serverError INCORRECT_QUERY }\ndiff --git a/tests/queries/0_stateless/02561_temporary_table_grants.reference b/tests/queries/0_stateless/02561_temporary_table_grants.reference\nnew file mode 100644\nindex 000000000000..b462a5a7baa4\n--- /dev/null\n+++ b/tests/queries/0_stateless/02561_temporary_table_grants.reference\n@@ -0,0 +1,4 @@\n+OK\n+OK\n+OK\n+OK\ndiff --git a/tests/queries/0_stateless/02561_temporary_table_grants.sh b/tests/queries/0_stateless/02561_temporary_table_grants.sh\nnew file mode 100755\nindex 000000000000..6e0c96786e8b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02561_temporary_table_grants.sh\n@@ -0,0 +1,36 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+set -e\n+\n+user=user_$CLICKHOUSE_TEST_UNIQUE_NAME\n+$CLICKHOUSE_CLIENT --query \"DROP USER IF EXISTS $user\"\n+$CLICKHOUSE_CLIENT --query \"CREATE USER $user IDENTIFIED WITH PLAINTEXT_PASSWORD BY 'hello'\"\n+\n+$CLICKHOUSE_CLIENT --user $user --password hello --query \"CREATE TEMPORARY TABLE table_memory_02561(name String)\" 2>&1 | grep -F \"Not enough privileges. To execute this query it's necessary to have grant CREATE TEMPORARY TABLE\" > /dev/null && echo \"OK\"\n+\n+$CLICKHOUSE_CLIENT --query \"GRANT CREATE TEMPORARY TABLE ON *.* TO $user\"\n+$CLICKHOUSE_CLIENT --user $user --password hello --query \"CREATE TEMPORARY TABLE table_memory_02561(name String)\"\n+\n+$CLICKHOUSE_CLIENT --user $user --password hello --query \"CREATE TEMPORARY TABLE table_merge_tree_02561(name String) ENGINE = MergeTree() ORDER BY name\" 2>&1 | grep -F \"Not enough privileges. To execute this query it's necessary to have grant CREATE ARBITRARY TEMPORARY TABLE\" > /dev/null && echo \"OK\"\n+\n+$CLICKHOUSE_CLIENT --query \"GRANT CREATE ARBITRARY TEMPORARY TABLE ON *.* TO $user\"\n+\n+$CLICKHOUSE_CLIENT --user $user --password hello --query \"CREATE TEMPORARY TABLE table_merge_tree_02561(name String) ENGINE = MergeTree() ORDER BY name\"\n+\n+$CLICKHOUSE_CLIENT --user $user --password hello --query \"CREATE TEMPORARY TABLE table_file_02561(name String) ENGINE = File(TabSeparated)\" 2>&1 | grep -F \"Not enough privileges. To execute this query it's necessary to have grant FILE\" > /dev/null && echo \"OK\"\n+\n+$CLICKHOUSE_CLIENT --query \"GRANT FILE ON *.* TO $user\"\n+\n+$CLICKHOUSE_CLIENT --user $user --password hello --query \"CREATE TEMPORARY TABLE table_file_02561(name String) ENGINE = File(TabSeparated)\"\n+\n+$CLICKHOUSE_CLIENT --user $user --password hello --query \"CREATE TEMPORARY TABLE table_url_02561(name String) ENGINE = URL('http://127.0.0.1:8123?query=select+12', 'RawBLOB')\" 2>&1 | grep -F \"Not enough privileges. To execute this query it's necessary to have grant URL\" > /dev/null && echo \"OK\"\n+\n+$CLICKHOUSE_CLIENT --query \"GRANT URL ON *.* TO $user\"\n+\n+$CLICKHOUSE_CLIENT --user $user --password hello --query \"CREATE TEMPORARY TABLE table_url_02561(name String) ENGINE = URL('http://127.0.0.1:8123?query=select+12', 'RawBLOB')\"\n+\n+$CLICKHOUSE_CLIENT --query \"DROP USER $user\"\ndiff --git a/tests/queries/0_stateless/02561_temporary_table_sessions.reference b/tests/queries/0_stateless/02561_temporary_table_sessions.reference\nnew file mode 100644\nindex 000000000000..b38908735233\n--- /dev/null\n+++ b/tests/queries/0_stateless/02561_temporary_table_sessions.reference\n@@ -0,0 +1,7 @@\n+OK\n+1\td\n+2\te\n+3\tf\n+1\ta\n+2\tb\n+3\tc\ndiff --git a/tests/queries/0_stateless/02561_temporary_table_sessions.sh b/tests/queries/0_stateless/02561_temporary_table_sessions.sh\nnew file mode 100755\nindex 000000000000..a810a48cdf30\n--- /dev/null\n+++ b/tests/queries/0_stateless/02561_temporary_table_sessions.sh\n@@ -0,0 +1,28 @@\n+#!/usr/bin/env bash\n+# Tags: no-parallel\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+SESSION_ID_A=\"$RANDOM$RANDOM$RANDOM\"\n+SESSION_ID_B=\"$RANDOM$RANDOM$RANDOM\"\n+\n+# Create temporary table and insert in SESSION_ID_A\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_A}\" -d 'CREATE TEMPORARY TABLE table_merge_tree_02561 (id UInt64, info String) ENGINE = MergeTree ORDER BY id'\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_A}\" -d \"INSERT INTO table_merge_tree_02561 VALUES (1, 'a'), (2, 'b'), (3, 'c')\"\n+\n+# Select from SESSION_ID_B\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_B}\" -d \"SELECT * FROM table_merge_tree_02561\" | tr -d '\\n' | grep -F 'UNKNOWN_TABLE' > /dev/null && echo \"OK\"\n+\n+# Create temporary table, insert and select in SESSION_ID_B\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_B}\" -d 'CREATE TEMPORARY TABLE table_merge_tree_02561 (id UInt64, info String) ENGINE = MergeTree ORDER BY id'\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_B}\" -d \"INSERT INTO table_merge_tree_02561 VALUES (1, 'd'), (2, 'e'), (3, 'f')\"\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_B}\" -d \"SELECT * FROM table_merge_tree_02561\"\n+\n+# Select from SESSION_ID_A\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_A}\" -d \"SELECT * FROM table_merge_tree_02561\"\n+\n+# Drop tables in both sessions\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_A}\" -d \"DROP TEMPORARY TABLE table_merge_tree_02561\"\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=${SESSION_ID_B}\" -d \"DROP TEMPORARY TABLE table_merge_tree_02561\"\n",
  "problem_statement": "Extended temporary tables (RFC).\n1. Allow to create TEMPORARY tables with arbitrary ENGINE.\r\nThese tables will be automatically removed on session close, similarly to how regular tables are removed in Atomic database after being dropped.\r\n\r\n2. Allow to create TEMPORARY databases. All tables created inside a temporary database are also temporary.\r\n\r\n3. Allow to create tables and databases with limited lifetime. They will be automatically removed after specified time interval after last usage. It can be defined with some syntax like `DROP AFTER ...`, not to be confused with temporary tables and tables' data TTL. These tables are visible to all clients.\r\n\r\n**Additional context**\r\n\r\nCan we make tables with limited lifetime available only for user who created them - with appropriate setting of RBAC rules?\r\n\r\nSee also #31496\n",
  "hints_text": "I'm also interested in p.3 (`DROP AFTER ...`) for Log family engines.\nI want to take this task\nWe (Arenadata) are interested in p. 1\r\n\r\nBTW, is not it possible to bind a number of queries to a session to be executed when the session is terminated to generalize  p. 1 and p. 2 ? \r\nLike defer in golang.\r\n_create temporary table aaa_ may be a syntax sugar for _create table aaa_ + _defer drop table aaa_ in this paradigm.\nHello @Lirikl , are you still interested in handling the task? \r\nDo we have estimations when it can be done?\r\nDon't want to be pushy, but if this feature is implemented, some things are simplified a lot.\r\n\r\nUpdate: found out https://github.com/ClickHouse/ClickHouse/pull/41393 , while questions mostly remain\n@ilejn This task is not in progress.\nWe (arenadata) are interested.\r\nI'll come back within a day. \nPlease, assign this issue to my colleague @rvasin \nGitHub does not allow to assign issues to external contributors unless they commented on the issue \nPlease assign me to this issue.",
  "created_at": "2023-02-06T10:11:22Z"
}