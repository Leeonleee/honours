You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
About new version query performance
I recently upgraded the clickhouse version to 23.5
Found some performance issues，Might be an execution plan selection issue
SELECT
    id,
    learnNumber AS learn_number,
    mobileEncrypt AS mobile_encrypt,
    wechatProvince AS wechat_province,
    wechatCity AS wechat_city,
    dataFrom AS data_from,
    appId AS app_id,
    wechatName AS wechat_name,
    wechatSex AS wechat_sex,
    createdTime AS created_time,
    channel1 AS channel,
    subChannel AS sub_channel,
    appMarket AS app_market
FROM
(
    SELECT
        id,
        max(gmt_modified) AS gmtModified,
        argMax(ifNull(learn_number, ''), gmt_modified) AS learnNumber,
        argMax(ifNull(mobile_encrypt, ''), gmt_modified) AS mobileEncrypt,
        argMax(ifNull(wechat_province, ''), gmt_modified) AS wechatProvince,
        argMax(ifNull(wechat_city, ''), gmt_modified) AS wechatCity,
        argMax(ifNull(data_from, 0), gmt_modified) AS dataFrom,
        argMax(ifNull(app_id, ''), gmt_modified) AS appId,
        argMax(ifNull(wechat_name, ''), gmt_modified) AS wechatName,
        argMax(wechat_sex, gmt_modified) AS wechatSex,
        argMax(created_time, gmt_modified) AS createdTime,
        argMax(channel, gmt_modified) AS channel1,
        argMax(sub_channel, gmt_modified) AS subChannel,
        argMax(app_market, gmt_modified) AS appMarket,
        argMax(is_deleted, gmt_modified) AS isDeleted
    FROM t_customer
    WHERE (1 = 1) AND (id IN (
        SELECT id
        FROM t_customer
        WHERE (1 = 1) AND (mobile_encrypt = '') AND ((created_time >= '2016-06-14 00:00:00') AND (created_time <= '2023-06-28 59:59:59'))
        GROUP BY id
    ))
    GROUP BY id
    HAVING 1 = 1
) AS a
WHERE isDeleted = 0
LIMIT 0, 20
FORMAT TabSeparatedWithNamesAndTypes

1 row in set. Elapsed: 1.820 sec. Processed 76.82 million rows, 11.97 GB (42.22 million rows/s., 6.58 GB/s.)


It looks like the subquery is not executed first??
Here is the subquery result with only 1 record
SELECT id
FROM t_customer
WHERE (1 = 1) AND (mobile_encrypt = '') AND ((created_time >= '2016-06-14 00:00:00') AND (created_time <= '2023-06-28 59:59:59'))
GROUP BY id

Query id: 84537679-b3f7-49e2-a0a1-82b4da0ae9c2

┌─────────────────id─┐
│ 570374905698 │
└────────────────────┘

1 row in set. Elapsed: 0.049 sec. Processed 1.76 million rows, 92.79 MB (36.30 million rows/s., 1.91 GB/s.)


When I changed where to prewhere, the performance improved：

SELECT
    id,
    learnNumber AS learn_number,
    mobileEncrypt AS mobile_encrypt,
    wechatProvince AS wechat_province,
    wechatCity AS wechat_city,
    dataFrom AS data_from,
    appId AS app_id,
    wechatName AS wechat_name,
    wechatSex AS wechat_sex,
    createdTime AS created_time,
    channel1 AS channel,
    subChannel AS sub_channel,
    appMarket AS app_market
FROM
(
    SELECT
        id,
        max(gmt_modified) AS gmtModified,
        argMax(ifNull(learn_number, ''), gmt_modified) AS learnNumber,
        argMax(ifNull(mobile_encrypt, ''), gmt_modified) AS mobileEncrypt,
        argMax(ifNull(wechat_province, ''), gmt_modified) AS wechatProvince,
        argMax(ifNull(wechat_city, ''), gmt_modified) AS wechatCity,
        argMax(ifNull(data_from, 0), gmt_modified) AS dataFrom,
        argMax(ifNull(app_id, ''), gmt_modified) AS appId,
        argMax(ifNull(wechat_name, ''), gmt_modified) AS wechatName,
        argMax(wechat_sex, gmt_modified) AS wechatSex,
        argMax(created_time, gmt_modified) AS createdTime,
        argMax(channel, gmt_modified) AS channel1,
        argMax(sub_channel, gmt_modified) AS subChannel,
        argMax(app_market, gmt_modified) AS appMarket,
        argMax(is_deleted, gmt_modified) AS isDeleted
    FROM t_customer
    **PREWHERE** (1 = 1) AND (id IN (
        SELECT id
        FROM t_customer
        WHERE (1 = 1) AND (mobile_encrypt = '') AND ((created_time >= '2016-06-14 00:00:00') AND (created_time <= '2023-06-28 59:59:59'))
        GROUP BY id
    ))
    GROUP BY id
    HAVING 1 = 1
) AS a
WHERE isDeleted = 0
LIMIT 0, 20
FORMAT TabSeparatedWithNamesAndTypes

Query id: 18955efa-fc56-47f4-8bcf-dbba0a6ca986

1 row in set. Elapsed: 0.079 sec. Processed 1.81 million rows, 97.42 MB (22.96 million rows/s., 1.23 GB/s.)

Query time reduced from 1.8 seconds to 80 milliseconds




I write the result of the subquery directly to the query, which is also very fast. Indicates that the original query did not execute the subquery first

like this (it only cost 35 milliseconds):

SELECT
    id,
    learnNumber AS learn_number,
    mobileEncrypt AS mobile_encrypt,
    wechatProvince AS wechat_province,
    wechatCity AS wechat_city,
    dataFrom AS data_from,
    appId AS app_id,
    wechatName AS wechat_name,
    wechatSex AS wechat_sex,
    createdTime AS created_time,
    channel1 AS channel,
    subChannel AS sub_channel,
    appMarket AS app_market
FROM
(
    SELECT
        id,
        max(gmt_modified) AS gmtModified,
        argMax(ifNull(learn_number, ''), gmt_modified) AS learnNumber,
        argMax(ifNull(mobile_encrypt, ''), gmt_modified) AS mobileEncrypt,
        argMax(ifNull(wechat_province, ''), gmt_modified) AS wechatProvince,
        argMax(ifNull(wechat_city, ''), gmt_modified) AS wechatCity,
        argMax(ifNull(data_from, 0), gmt_modified) AS dataFrom,
        argMax(ifNull(app_id, ''), gmt_modified) AS appId,
        argMax(ifNull(wechat_name, ''), gmt_modified) AS wechatName,
        argMax(wechat_sex, gmt_modified) AS wechatSex,
        argMax(created_time, gmt_modified) AS createdTime,
        argMax(channel, gmt_modified) AS channel1,
        argMax(sub_channel, gmt_modified) AS subChannel,
        argMax(app_market, gmt_modified) AS appMarket,
        argMax(is_deleted, gmt_modified) AS isDeleted
    FROM t_customer
    WHERE (1 = 1) AND (id IN (570374905698))
    GROUP BY id
    HAVING (1 = 1) AND (mobileEncrypt = 'BA7705BE0870504804D060A5BDCE3495')
) AS a
WHERE isDeleted = 0
LIMIT 0, 20
FORMAT TabSeparatedWithNamesAndTypes

Query id: 5201c954-310a-4d8b-99cf-d61f4a92061d
1 row in set. Elapsed: 0.035 sec. Processed 22.42 thousand rows, 1.41 MB (649.48 thousand rows/s., 40.91 MB/s.)
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
