{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 10795,
  "instance_id": "ClickHouse__ClickHouse-10795",
  "issue_numbers": [
    "2890"
  ],
  "base_commit": "1e73e02bc0d3b96074dfe186094dd2d7b8e5dd93",
  "patch": "diff --git a/src/Storages/System/CMakeLists.txt b/src/Storages/System/CMakeLists.txt\nindex 18c452caf7bf..f0965e4d2c56 100644\n--- a/src/Storages/System/CMakeLists.txt\n+++ b/src/Storages/System/CMakeLists.txt\n@@ -11,13 +11,30 @@ configure_file (StorageSystemBuildOptions.generated.cpp.in ${CONFIG_BUILD})\n include(${ClickHouse_SOURCE_DIR}/cmake/dbms_glob_sources.cmake)\n add_headers_and_sources(storages_system .)\n list (APPEND storages_system_sources ${CONFIG_BUILD})\n-add_library(clickhouse_storages_system ${storages_system_headers} ${storages_system_sources})\n-target_link_libraries(clickhouse_storages_system PRIVATE dbms common string_utils clickhouse_common_zookeeper clickhouse_parsers)\n \n-add_custom_target(generate-contributors ./StorageSystemContributors.sh SOURCES StorageSystemContributors.sh WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n+add_custom_target(generate-contributors\n+    ./StorageSystemContributors.sh\n+    SOURCES StorageSystemContributors.sh\n+    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n     # BYPRODUCTS StorageSystemContributors.generated.cpp\n )\n+\n if(NOT TARGET generate-source)\n     add_custom_target(generate-source)\n endif()\n+\n add_dependencies(generate-source generate-contributors)\n+\n+set(GENERATED_LICENSES_SRC ${CMAKE_CURRENT_BINARY_DIR}/StorageSystemLicenses.generated.cpp)\n+\n+add_custom_command(\n+    OUTPUT StorageSystemLicenses.generated.cpp\n+    COMMAND ./StorageSystemLicenses.sh > ${GENERATED_LICENSES_SRC}\n+    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+list (APPEND storages_system_sources ${GENERATED_LICENSES_SRC})\n+# Overlength strings\n+set_source_files_properties(${GENERATED_LICENSES_SRC} PROPERTIES COMPILE_FLAGS -w)\n+\n+add_library(clickhouse_storages_system ${storages_system_headers} ${storages_system_sources})\n+target_link_libraries(clickhouse_storages_system PRIVATE dbms common string_utils clickhouse_common_zookeeper clickhouse_parsers)\ndiff --git a/src/Storages/System/StorageSystemLicenses.cpp b/src/Storages/System/StorageSystemLicenses.cpp\nnew file mode 100644\nindex 000000000000..894c861de29a\n--- /dev/null\n+++ b/src/Storages/System/StorageSystemLicenses.cpp\n@@ -0,0 +1,31 @@\n+#include \"StorageSystemLicenses.h\"\n+\n+#include <algorithm>\n+#include <DataTypes/DataTypeString.h>\n+\n+\n+extern const char * library_licenses[];\n+\n+namespace DB\n+{\n+NamesAndTypesList StorageSystemLicenses::getNamesAndTypes()\n+{\n+    return {\n+        {\"library_name\", std::make_shared<DataTypeString>()},\n+        {\"license_type\", std::make_shared<DataTypeString>()},\n+        {\"license_path\", std::make_shared<DataTypeString>()},\n+        {\"license_text\", std::make_shared<DataTypeString>()},\n+    };\n+}\n+\n+void StorageSystemLicenses::fillData(MutableColumns & res_columns, const Context &, const SelectQueryInfo &) const\n+{\n+    for (const auto * it = library_licenses; *it; it += 4)\n+    {\n+        res_columns[0]->insert(String(it[0]));\n+        res_columns[1]->insert(String(it[1]));\n+        res_columns[2]->insert(String(it[2]));\n+        res_columns[3]->insert(String(it[3]));\n+    }\n+}\n+}\ndiff --git a/src/Storages/System/StorageSystemLicenses.h b/src/Storages/System/StorageSystemLicenses.h\nnew file mode 100644\nindex 000000000000..cee48abacab9\n--- /dev/null\n+++ b/src/Storages/System/StorageSystemLicenses.h\n@@ -0,0 +1,32 @@\n+#pragma once\n+\n+#include <Storages/System/IStorageSystemOneBlock.h>\n+#include <ext/shared_ptr_helper.h>\n+\n+\n+namespace DB\n+{\n+class Context;\n+\n+\n+/** System table \"licenses\" with list of licenses of 3rd party libraries\n+  */\n+class StorageSystemLicenses final :\n+    public ext::shared_ptr_helper<StorageSystemLicenses>,\n+    public IStorageSystemOneBlock<StorageSystemLicenses>\n+{\n+    friend struct ext::shared_ptr_helper<StorageSystemLicenses>;\n+protected:\n+    void fillData(MutableColumns & res_columns, const Context & context, const SelectQueryInfo & query_info) const override;\n+\n+    using IStorageSystemOneBlock::IStorageSystemOneBlock;\n+\n+public:\n+    std::string getName() const override\n+    {\n+        return \"SystemLicenses\";\n+    }\n+\n+    static NamesAndTypesList getNamesAndTypes();\n+};\n+}\ndiff --git a/src/Storages/System/StorageSystemLicenses.sh b/src/Storages/System/StorageSystemLicenses.sh\nnew file mode 100755\nindex 000000000000..fd5495cd460d\n--- /dev/null\n+++ b/src/Storages/System/StorageSystemLicenses.sh\n@@ -0,0 +1,15 @@\n+#!/bin/bash\n+\n+ROOT_PATH=\"$(git rev-parse --show-toplevel)\"\n+IFS=$'\\t'\n+\n+echo \"// autogenerated by $0\"\n+echo \"const char * library_licenses[] = {\"\n+${ROOT_PATH}/utils/list-licenses/list-licenses.sh | while read row; do\n+    arr=($row)\n+\n+    echo \"\\\"${arr[0]}\\\", \\\"${arr[1]}\\\", \\\"${arr[2]}\\\", R\\\"heredoc($(cat \"${ROOT_PATH}/${arr[2]}\"))heredoc\\\",\"\n+    echo\n+done\n+echo \"nullptr\"\n+echo \"};\"\ndiff --git a/src/Storages/System/attachSystemTables.cpp b/src/Storages/System/attachSystemTables.cpp\nindex 78783217f313..4c9f34b82e1e 100644\n--- a/src/Storages/System/attachSystemTables.cpp\n+++ b/src/Storages/System/attachSystemTables.cpp\n@@ -37,6 +37,9 @@\n #include <Storages/System/StorageSystemTables.h>\n #include <Storages/System/StorageSystemZooKeeper.h>\n #include <Storages/System/StorageSystemContributors.h>\n+#if !defined(ARCADIA_BUILD)\n+    #include <Storages/System/StorageSystemLicenses.h>\n+#endif\n #include <Storages/System/StorageSystemDisks.h>\n #include <Storages/System/StorageSystemStoragePolicies.h>\n #include <Storages/System/StorageSystemZeros.h>\n@@ -75,6 +78,9 @@ void attachSystemTablesLocal(IDatabase & system_database)\n     system_database.attachTable(\"collations\", StorageSystemCollations::create(\"collations\"));\n     system_database.attachTable(\"table_engines\", StorageSystemTableEngines::create(\"table_engines\"));\n     system_database.attachTable(\"contributors\", StorageSystemContributors::create(\"contributors\"));\n+#if !defined(ARCADIA_BUILD)\n+    system_database.attachTable(\"licenses\", StorageSystemLicenses::create(\"licenses\"));\n+#endif\n #ifdef OS_LINUX\n     system_database.attachTable(\"stack_trace\", StorageSystemStackTrace::create(\"stack_trace\"));\n #endif\ndiff --git a/utils/list-licenses/list-licenses.sh b/utils/list-licenses/list-licenses.sh\nnew file mode 100755\nindex 000000000000..987179e26a82\n--- /dev/null\n+++ b/utils/list-licenses/list-licenses.sh\n@@ -0,0 +1,55 @@\n+#!/bin/bash\n+\n+ROOT_PATH=\"$(git rev-parse --show-toplevel)\"\n+LIBS_PATH=\"${ROOT_PATH}/contrib\"\n+\n+ls -1 -d ${LIBS_PATH}/*/ | grep -F -v -- '-cmake' | while read LIB; do\n+    LIB_NAME=$(basename $LIB)\n+\n+    LIB_LICENSE=$(\n+        LC_ALL=C find \"$LIB\" -type f -and '(' -iname 'LICENSE*' -or -iname 'COPYING*' -or -iname 'COPYRIGHT*' ')' -and -not -iname '*.html' -printf \"%d\\t%p\\n\" |\n+            awk '\n+                BEGIN { IGNORECASE=1; min_depth = 0 }\n+                /LICENSE/ { if (!min_depth || $1 <= min_depth) { min_depth = $1; license = $2 } }\n+                /COPY/    { if (!min_depth || $1 <= min_depth) { min_depth = $1; copying = $2 } }\n+                END { if (license) { print license } else { print copying } }')\n+\n+    if [ -n \"$LIB_LICENSE\" ]; then\n+\n+        LICENSE_TYPE=$(\n+        (grep -q -F 'Apache' \"$LIB_LICENSE\" &&\n+         echo \"Apache\") ||\n+        (grep -q -F 'Boost' \"$LIB_LICENSE\" &&\n+         echo \"Boost\") ||\n+        (grep -q -i -P 'public\\s*domain' \"$LIB_LICENSE\" &&\n+         echo \"Public Domain\") ||\n+        (grep -q -F 'BSD' \"$LIB_LICENSE\" &&\n+         echo \"BSD\") ||\n+        (grep -q -F 'Lesser General Public License' \"$LIB_LICENSE\" &&\n+         echo \"LGPL\") ||\n+        (grep -q -i -F 'The origin of this software must not be misrepresented' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'Altered source versions must be plainly marked as such' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'This notice may not be removed or altered' \"$LIB_LICENSE\" &&\n+         echo \"zLib\") ||\n+        (grep -q -i -F 'Permission is hereby granted, free of charge, to any person' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'The above copyright notice and this permission notice shall be included' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND' \"$LIB_LICENSE\" &&\n+         echo \"MIT\") ||\n+        (grep -q -i -F 'Permission to use, copy, modify, and distribute this software for any purpose' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'the name of a copyright holder shall not' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND' \"$LIB_LICENSE\" &&\n+         echo \"MIT/curl\") ||\n+        (grep -q -i -F 'Redistributions of source code must retain the above copyright' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'Redistributions in binary form must reproduce' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'Neither the name' \"$LIB_LICENSE\" &&\n+         echo \"BSD 3-clause\") ||\n+        (grep -q -i -F 'Redistributions of source code must retain the above copyright' \"$LIB_LICENSE\" &&\n+         grep -q -i -F 'Redistributions in binary form must reproduce' \"$LIB_LICENSE\" &&\n+         echo \"BSD 2-clause\") ||\n+        echo \"Unknown\")\n+\n+        RELATIVE_PATH=$(echo \"$LIB_LICENSE\" | sed -r -e 's!^.+/contrib/!/contrib/!')\n+\n+        echo -e \"$LIB_NAME\\t$LICENSE_TYPE\\t$RELATIVE_PATH\"\n+    fi\n+done\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01276_system_licenses.reference b/tests/queries/0_stateless/01276_system_licenses.reference\nnew file mode 100644\nindex 000000000000..0c7e91c54e48\n--- /dev/null\n+++ b/tests/queries/0_stateless/01276_system_licenses.reference\n@@ -0,0 +1,2 @@\n+1\n+zstd\tBSD\t/contrib/zstd/LICENSE\ndiff --git a/tests/queries/0_stateless/01276_system_licenses.sql b/tests/queries/0_stateless/01276_system_licenses.sql\nnew file mode 100644\nindex 000000000000..a0daea274fcb\n--- /dev/null\n+++ b/tests/queries/0_stateless/01276_system_licenses.sql\n@@ -0,0 +1,2 @@\n+SELECT count() > 10 FROM system.licenses;\n+SELECT library_name, license_type, license_path FROM system.licenses WHERE library_name LIKE '%zstd%';\n",
  "problem_statement": "system.licenses table\nMost of open licenses require adding component license to final software distibution.\r\n\r\nThe common way to satisfy that requirement is to add \"Licenses for Third-Party Components\" section to LICENSE file (which is a part of ClickHouse distribution).  Look for samples\r\n* https://github.com/mysql/mysql-server/blob/8.0/LICENSE\r\n* https://github.com/apache/hadoop/blob/trunk/LICENSE.txt \r\n* https://github.com/aerospike/aerospike-client-c/blob/master/LICENSE.md\r\n\r\nAlso quite nice and popular is simple listing of used 3rd party components with their licences without full text, just as a small listing https://softwareengineering.stackexchange.com/questions/234511/what-is-the-best-practice-for-arranging-third-party-library-licenses-paperwork \r\n\n",
  "hints_text": "Please clarify the requirement according to specific licenses (and quote the definition of \"final software distibution\").\n|                             |                                                                                                                                                                                                           |              |\r\n|-----------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------|\r\n| Boost                       | https://github.com/ClickHouse-Extras/boost/blob/2d5cb2c86f61126f4e1efe9ab97332efd44e7dea/LICENSE_1_0.txt#L10                                                                                              | Boost        |\r\n| capnproto                   | https://github.com/capnproto/capnproto/blob/7173ab638fdf144032411dc69fb1082cd473e08f/LICENSE#L1-L5                                                                                                        | MIT          |\r\n| cctz                        | https://github.com/google/cctz/blob/4f9776a310f4952454636363def82c2bf6641d5f/LICENSE.txt                                                                                                                  | Apache       |\r\n| cityhash                    | https://github.com/yandex/ClickHouse/blob/master/contrib/cityhash102/COPYING                                                                                                                              | MIT          |\r\n| double-conversion           | https://github.com/google/double-conversion/blob/cf2f0f3d547dc73b4612028a155b80536902ba02/LICENSE                                                                                                         | BSD 3        |\r\n| googletest                  | https://github.com/google/googletest/blob/d175c8bf823e709d570772b038757fadf63bc632/googletest/LICENSE                                                                                                     |              |\r\n| jemalloc                    | https://github.com/jemalloc/jemalloc/blob/41b7372eadee941b9164751b8d4963f915d3ceae/COPYING                                                                                                                | MIT          |\r\n| libbtrie                    | https://github.com/yandex/ClickHouse/blob/master/contrib/libbtrie/LICENSE                                                                                                                                 | MIT          |\r\n| libcpuid                    | https://github.com/yandex/ClickHouse/blob/master/contrib/libcpuid/COPYING                                                                                                                                 | MIT          |\r\n| libdivide                   | https://github.com/yandex/ClickHouse/blob/master/contrib/libdivide/LICENSE.txt https://github.com/ridiculousfish/libdivide/blob/master/LICENSE.txt                                                        |              |\r\n| libfarmhash                 | https://github.com/yandex/ClickHouse/blob/master/contrib/libfarmhash/COPYING                                                                                                                              |              |\r\n| libmetrohash                | https://github.com/yandex/ClickHouse/blob/master/contrib/libmetrohash/LICENSE                                                                                                                             | MIT          |\r\n| libpcg-random               | https://github.com/yandex/ClickHouse/blob/master/contrib/libpcg-random/LICENSE-APACHE.txt                                                                                                                 | Apache       |\r\n| librdkafka                  | https://github.com/edenhill/librdkafka/blob/7478b5ef16aadd6543fe38bc6a2deb895c70da98/LICENSE +3rd party https://github.com/edenhill/librdkafka/blob/7478b5ef16aadd6543fe38bc6a2deb895c70da98/LICENSES.txt |              |\r\n| libsparsehash               | https://github.com/yandex/ClickHouse/blob/master/contrib/libsparsehash/COPYING                                                                                                                            | MIT          |\r\n| libtcmalloc                 | https://github.com/yandex/ClickHouse/blob/master/contrib/libtcmalloc/COPYING                                                                                                                              | MIT          |\r\n| libunwind                   | https://github.com/yandex/ClickHouse/blob/master/contrib/libunwind/COPYING                                                                                                                                |              |\r\n| llvm + cmake + ll           | https://github.com/ClickHouse-Extras/llvm/blob/163def217817c90fb982a6daf384744d8472b92b/llvm/LICENSE.TXT                                                                                                  |              |\r\n| lz4                         |  https://github.com/lz4/lz4/blob/c10863b98e1503af90616ae99725ecd120265dfb/LICENSE (!) AWARE - don't use anything from outside of lib subfolder - it's GPL.                                                | BSD 2 Clause |\r\n| mariadb-connector-c         | https://github.com/MariaDB/mariadb-connector-c/blob/a0fd36cc5a5313414a5a2ebe9322577a29b4782a/COPYING.LIB                                                                                                  | LGPL (!!)    |\r\n| murmurhash                  | https://github.com/yandex/ClickHouse/blob/master/contrib/murmurhash/LICENSE                                                                                                                               |              |\r\n| poco                        | https://github.com/ClickHouse-Extras/poco/blob/3df947389e6d9654919002797bdd86ed190b3963/LICENSE                                                                                                           | Boost        |\r\n| re2                         | https://github.com/google/re2/blob/7cf8b88e8f70f97fd4926b56aa87e7f53b2717e0/LICENSE                                                                                                                       | MIT          |\r\n| libressl                    | https://github.com/ClickHouse-Extras/ssl/blob/de02224a42c69e3d8c9112c82018816f821878d0/COPYING                                                                                                            |              |\r\n| UnixODBC                    | https://github.com/ClickHouse-Extras/UnixODBC/blob/b0ad30f7f6289c12b76f04bfb9d466374bb32168/COPYING                                                                                                       | LGPL         |\r\n| zlib-ng                     | https://github.com/ClickHouse-Extras/zlib-ng/blob/9173b89d46799582d20a30578e0aa9788bc7d6e1/LICENSE.md                                                                                                     |              |\r\n| zstd-cmake                  | https://github.com/yandex/ClickHouse/blob/8bc30c8b91d027093821dcdd0a2015dc4f93070f/contrib/zstd-cmake/CMakeLists.txt                                                                                      |              |\r\n| zstd                        | https://github.com/facebook/zstd/blob/255597502c3a4ef150abc964e376d4202a8c2929/LICENSE                                                                                                                    |              |\r\n| sumbur hash                 | https://github.com/yandex/ClickHouse/blob/924cc3451f97f4fbc15c83eb2b341cacb168806c/libs/libconsistent-hashing/mailru/sumbur.h                                                                             | MIT          |\r\n| libglibc-compatibility/musl | https://github.com/yandex/ClickHouse/blob/096fec65048aefd665651ba7f7ff5ddd4f684aea/libs/libglibc-compatibility/musl/COPYRIGHT                                                                             | MIT          |\r\n| memrchr                     | https://github.com/yandex/ClickHouse/blob/fbe7df73a24733f4ce0b133cb83b8acf962398a3/libs/libcommon/include/port/memrchr.h                                                                                  |              |\r\n| libmemcpy                   | https://github.com/yandex/ClickHouse/blob/096fec65048aefd665651ba7f7ff5ddd4f684aea/libs/libmemcpy/impl/LICENSE                                                                                            | MIT          |\r\n| libpocoext                  | https://github.com/yandex/ClickHouse/blob/137ad95929ee016cc6d3c03bccb5586941c163ff/libs/libpocoext/src/LevelFilterChannel.cpp                                                                             |              |\r\n| docker-multiarch            | https://github.com/yandex/ClickHouse/blob/589899ac25089132ffa78365d289675807416345/ci/docker-multiarch/LICENSE                                                                                            | MIT          |\n> Please clarify the requirement according to specific licenses (and quote the definition of \"final software distibution\").\r\n\r\nGenerally most of licenses just force you to add copyright notice to \"all copies or substantial portions of Software\". So if you distribute some software in binary form (separate from sources) you shall include it, otherwise you're distributing the copy (in compiled form) without copyright notice :\\\r\n\r\nMost often it's done either by putting it in LICENSE file, or in LICENSE-3RD-PARTY file (disributed with binary), or in About screen. In firefox for example it's in about:license, in chrome in chrome://credits/ etc.\r\nIn ClickHouse you can create a system.credits table :D\nWe can implement `system.licenses` table with the list of components that was actually linked into the server. This is like to `about:license` page in Firefox and `chrome://credits` in Chromium.\r\nAlso it will be nice to have `system.contributors` with the list of all contributors from the git log.\nList of third-party libraries:\r\n```\r\nmilovidov@milovidov-Latitude-E7470:~/work/ClickHouse/build$ cat licenses.sh \r\n#!/bin/bash\r\n\r\njq --raw-output '.[].file' compile_commands.json | xargs dirname | sort | uniq | while read file\r\ndo\r\n    echo -n '.' 1>&2\r\n\r\n    DIR=$file\r\n    while [[ \"$DIR\" != '/' ]]\r\n    do\r\n        license=$(ls -1 \"$DIR\" | grep -iE '^(LICENSE|COPYING)' | sort -rV | head -n1)\r\n        if [[ -n \"$license\" ]]\r\n        then\r\n            echo \"$DIR/$license\"\r\n            break;\r\n        fi\r\n\r\n        DIR=$(readlink -f \"$DIR/..\")\r\n    done\r\ndone | sort | uniq\r\n```\r\n(it cannot find header-only libraries)\r\n\r\nList of derived code in ClickHouse sources:\r\n```\r\nmilovidov@milovidov-Latitude-E7470:~/work/ClickHouse/build$ find ../dbms -name '*.h' -or -name '*.cpp' | xargs grep -iP '\\bCopyright\\b' | less\r\n\r\nmilovidov@milovidov-Latitude-E7470:~/work/ClickHouse/build$ find ../libs -name '*.h' -or -name '*.cpp' | xargs grep -iP '\\bCopyright\\b' | less\r\n```\r\n\r\n",
  "created_at": "2020-05-11T02:40:36Z",
  "modified_files": [
    "src/Storages/System/CMakeLists.txt",
    "b/src/Storages/System/StorageSystemLicenses.cpp",
    "b/src/Storages/System/StorageSystemLicenses.h",
    "b/src/Storages/System/StorageSystemLicenses.sh",
    "src/Storages/System/attachSystemTables.cpp",
    "b/utils/list-licenses/list-licenses.sh"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01276_system_licenses.reference",
    "b/tests/queries/0_stateless/01276_system_licenses.sql"
  ]
}