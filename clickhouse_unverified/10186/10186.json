{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 10186,
  "instance_id": "ClickHouse__ClickHouse-10186",
  "issue_numbers": [
    "10185"
  ],
  "base_commit": "2122eab14eda10dc3bb8f68192bad3da47ecf51e",
  "patch": "diff --git a/src/Core/Settings.h b/src/Core/Settings.h\nindex ec03dfa1a4e7..c32e963e051f 100644\n--- a/src/Core/Settings.h\n+++ b/src/Core/Settings.h\n@@ -406,6 +406,7 @@ struct Settings : public SettingsCollection<Settings>\n     M(SettingBool, validate_polygons, true, \"Throw exception if polygon is invalid in function pointInPolygon (e.g. self-tangent, self-intersecting). If the setting is false, the function will accept invalid polygons but may silently return wrong result.\", 0) \\\n     M(SettingUInt64, max_parser_depth, 1000, \"Maximum parser depth.\", 0) \\\n     M(SettingSeconds, temporary_live_view_timeout, DEFAULT_TEMPORARY_LIVE_VIEW_TIMEOUT_SEC, \"Timeout after which temporary live view is deleted.\", 0) \\\n+    M(SettingBool, allow_nondeterministic_mutations, false, \"Allow non-deterministic functions in ALTER UPDATE/ALTER DELETE statements\", 0) \\\n     M(SettingSeconds, lock_acquire_timeout, DBMS_DEFAULT_LOCK_ACQUIRE_TIMEOUT_SEC, \"How long locking request should wait before failing\", 0) \\\n     \\\n     /** Obsolete settings that do nothing but left for compatibility reasons. Remove each one after half a year of obsolescence. */ \\\n@@ -420,7 +421,6 @@ struct Settings : public SettingsCollection<Settings>\n     M(SettingUInt64, mark_cache_min_lifetime, 0, \"Obsolete setting, does nothing. Will be removed after 2020-05-31\", 0) \\\n     M(SettingBool, partial_merge_join, false, \"Obsolete. Use join_algorithm='prefer_partial_merge' instead.\", 0) \\\n \n-\n     DECLARE_SETTINGS_COLLECTION(LIST_OF_SETTINGS)\n \n     /** Set multiple settings from \"profile\" (in server configuration file (users.xml), profiles contain groups of multiple settings).\ndiff --git a/src/Interpreters/MutationsInterpreter.cpp b/src/Interpreters/MutationsInterpreter.cpp\nindex 669b72c63177..df0267b94507 100644\n--- a/src/Interpreters/MutationsInterpreter.cpp\n+++ b/src/Interpreters/MutationsInterpreter.cpp\n@@ -661,9 +661,11 @@ BlockInputStreamPtr MutationsInterpreter::addStreamsForLaterStages(const std::ve\n \n void MutationsInterpreter::validate(TableStructureReadLockHolder &)\n {\n+    const Settings & settings = context.getSettingsRef();\n+\n     /// For Replicated* storages mutations cannot employ non-deterministic functions\n     /// because that produces inconsistencies between replicas\n-    if (startsWith(storage->getName(), \"Replicated\"))\n+    if (startsWith(storage->getName(), \"Replicated\") && !settings.allow_nondeterministic_mutations)\n     {\n         for (const auto & command : commands)\n         {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.reference b/tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.reference\nindex b462a5a7baa4..f799e8ed8f03 100644\n--- a/tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.reference\n+++ b/tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.reference\n@@ -2,3 +2,6 @@ OK\n OK\n OK\n OK\n+OK\n+OK\n+OK\ndiff --git a/tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.sh b/tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.sh\nindex ac66dbc352a9..9b190855adf6 100755\n--- a/tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.sh\n+++ b/tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.sh\n@@ -11,6 +11,22 @@ T1=table_1017_merge\n ${CLICKHOUSE_CLIENT} -n -q \"\n     DROP TABLE IF EXISTS $R1;\n     DROP TABLE IF EXISTS $R2;\n+    DROP TABLE IF EXISTS $T1;\n+\n+    DROP TABLE IF EXISTS lookup_table;\n+    DROP TABLE IF EXISTS table_for_dict;\n+    DROP DICTIONARY IF EXISTS dict1;\n+\n+    CREATE TABLE table_for_dict (y UInt64, y_new UInt32) ENGINE = Log;\n+    INSERT INTO table_for_dict VALUES (3, 3003),(4,4004);\n+\n+    CREATE DICTIONARY dict1( y UInt64 DEFAULT 0, y_new UInt32 DEFAULT 0 ) PRIMARY KEY y\n+    SOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 USER 'default' TABLE 'table_for_dict' PASSWORD '' DB '${CLICKHOUSE_DATABASE}'))\n+    LIFETIME(MIN 1 MAX 10)\n+    LAYOUT(FLAT());\n+\n+    CREATE TABLE lookup_table (y UInt32, y_new UInt32) ENGINE = Join(ANY, LEFT, y);\n+    INSERT INTO lookup_table VALUES(1,1001),(2,1002);\n \n     CREATE TABLE $R1 (x UInt32, y UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/${CLICKHOUSE_DATABASE}.table_1017', 'r1') ORDER BY x;\n     CREATE TABLE $R2 (x UInt32, y UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/${CLICKHOUSE_DATABASE}.table_1017', 'r2') ORDER BY x;\n@@ -35,9 +51,21 @@ ${CLICKHOUSE_CLIENT} --query \"ALTER TABLE $T1 DELETE WHERE rand() = 0\" 2>&1 > /d\n ${CLICKHOUSE_CLIENT} --query \"ALTER TABLE $T1 UPDATE y = y + rand() % 1 WHERE not ignore()\" 2>&1 > /dev/null \\\n && echo 'OK' || echo 'FAIL'\n \n+# hm... it looks like joinGet condidered determenistic\n+${CLICKHOUSE_CLIENT} --query \"ALTER TABLE $R1 UPDATE y = joinGet('${CLICKHOUSE_DATABASE}.lookup_table', 'y_new', y) WHERE x=1\" 2>&1 \\\n+| echo 'OK' || echo 'FAIL'\n+\n+${CLICKHOUSE_CLIENT} --query \"ALTER TABLE $R1 DELETE WHERE dictHas('${CLICKHOUSE_DATABASE}.dict1', toUInt64(x))\" 2>&1 \\\n+| fgrep -q \"must use only deterministic functions\" && echo 'OK' || echo 'FAIL'\n+\n+${CLICKHOUSE_CLIENT} --query \"ALTER TABLE $R1 DELETE WHERE dictHas('${CLICKHOUSE_DATABASE}.dict1', toUInt64(x))\" --allow_nondeterministic_mutations=1 2>&1 \\\n+&& echo 'OK' || echo 'FAIL'\n \n ${CLICKHOUSE_CLIENT} -n -q \"\n     DROP TABLE IF EXISTS $R2;\n     DROP TABLE IF EXISTS $R1;\n     DROP TABLE IF EXISTS $T1;\n+    DROP TABLE IF EXISTS lookup_table;\n+    DROP TABLE IF EXISTS table_for_dict;\n+    DROP DICTIONARY IF EXISTS dict1;\n \"\n",
  "problem_statement": "ALTER UPDATE/ALTER DELETE statements must use only deterministic functions! Function 'dictHas' is non-deterministic\nAfter #7247 certain scenarios of mutations with dictionaries did stop working, and send error messages like \"Function 'dictHas' is non-deterministic\".\r\n\r\n\r\n\u0413\u043e\u0432\u043e\u0440\u044f\u0442 \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e \u043a\u0430\u043a \u0442\u0435\u043f\u0435\u0440\u044c \u0430\u043f\u0434\u0435\u0439\u0442\u044b \u0434\u0435\u043b\u0430\u0442\u044c.\r\n\r\n> \u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435! \u0412\u044b \u043c\u043d\u0435 \u043a\u0430\u043a\u0442\u043e \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438 \u043a\u0430\u043a \u0432 \u043a\u043b\u0438\u043a\u0445\u0430\u0443\u0441\u0435 \u0434\u0435\u043b\u0430\u0435\u0442\u0435 \u043c\u0443\u0442\u0430\u0446\u0438\u0438 \u0441 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u0438:\r\n> \r\n> Denny Crane [not a Yandex bot], [22.01.20 04:27]\r\n> \u0442\u0430\u043a\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0435\u043b\u044c\u0437\u044f \u0434\u0435\u043b\u0430\u0442\u044c, alter \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 xxx \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c where.\r\n> \r\n> \u042f \u0433\u043e\u0442\u043e\u0432\u043b\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 ReplicatedMergeTree c id-\u0448\u043a\u0430\u043c\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0434\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u043e\u043d\u0430 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0437\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u0432\u0441\u0435\u0445 \u0440\u0435\u043f\u043b\u0438\u043a\u0430\u0445, \u0447\u0442\u043e\u0431\u044b \u043c\u0443\u0442\u0430\u0446\u0438\u0438 \u043d\u0430 \u0440\u0435\u043f\u043b\u0438\u043a\u0430\u0445 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043c\u0443\u0442\u0430\u0446\u0438\u0438.\r\n> \r\n> \u0421\u043e\u0437\u0434\u0430\u044e \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043c\u043e\u0442\u0440\u0438\u0442 \u043d\u0430 ReplicatedMergeTree \u043d\u0430 \u0432\u0441\u0435\u0445 \u0440\u0435\u043f\u043b\u0438\u043a\u0430\u0445\r\n> \r\n> \u0412\u044b\u044f\u0441\u043d\u044f\u044e \u043a\u0430\u043a\u0438\u0435 \u043f\u0430\u0440\u0442\u044b \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0434\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c\r\n> \r\n> \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u044e alter table xxx delete where date between \u043f\u0430\u0440\u0442\u044b and dictHas(\u0441\u043b\u043e\u0432\u0430\u0440\u044c)\r\n> \r\n> \r\n> \u0443 \u043c\u0435\u043d\u044f \u044d\u0442\u043e \u043f\u0440\u0435\u043a\u0440\u0430\u0441\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u043e \u043a\u043e\u0433\u0434\u0430 \u043a\u0445 \u0431\u044b\u043b \u0441\u0438\u043d\u0433\u043b \u0438\u043d\u0441\u0442\u0430\u043d\u0441, \u0430 \u0441\u0435\u0439\u0447\u0430\u0441 \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u044f\u0432\u0438\u043b\u0430\u0441\u044c \u0440\u0435\u043f\u043b\u0438\u043a\u0430, \u0440\u0443\u0433\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e :\r\n> \r\n> DB::Exception: ALTER UPDATE/ALTER DELETE statements must use only deterministic functions! Function 'dictHas' is non-deterministic (version 19.17.6.36 (official build))\r\n> \r\n> \u0441\u043e\u0437\u0434\u0430\u043b \u0432\u0441\u0435 \u043a\u0430\u043a \u0432\u044b \u0441\u043e\u0432\u0435\u0442\u043e\u0432\u0430\u043b\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u0438 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043d\u0430 \u043e\u0431\u043e\u0438\u0445 \u0440\u0435\u043f\u043b\u0438\u043a\u0430\u0445 \u0438 \u0438\u043c\u0435\u044e\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0435 \u043a\u043e\u043b-\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439\r\n> \r\n> \u043d\u0435 \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u0432\u044b \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0432 \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430?\r\n\r\n\u042f \u0442\u043e\u0436\u0435 \u0434\u0435\u043b\u0430\u044e \u0432\u0441\u0435 \u043c\u0443\u0442\u0430\u0446\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u0438. \u041a \u0441\u0447\u0430\u0441\u0442\u044c\u044e \u0432 18.14.18 \u0442\u0430\u043a\u043e\u0439 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u043d\u0435\u0442.\r\n\r\n_Originally posted by @den-crane in https://github.com/ClickHouse/ClickHouse/pull/7247#issuecomment-606806745_\n",
  "hints_text": "",
  "created_at": "2020-04-10T20:13:15Z",
  "modified_files": [
    "src/Core/Settings.h",
    "src/Interpreters/MutationsInterpreter.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.reference",
    "tests/queries/0_stateless/01017_mutations_with_nondeterministic_functions_zookeeper.sh"
  ]
}