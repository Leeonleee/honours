diff --git a/tests/queries/0_stateless/00621_regression_for_in_operator.reference b/tests/queries/0_stateless/00621_regression_for_in_operator.reference
index ab8a1499f6d7..a98294620f8a 100644
--- a/tests/queries/0_stateless/00621_regression_for_in_operator.reference
+++ b/tests/queries/0_stateless/00621_regression_for_in_operator.reference
@@ -40,6 +40,6 @@ QUERY id: 0
           FUNCTION id: 10, function_name: equals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 11, nodes: 2
-                COLUMN id: 8, column_name: g, result_type: String, source_id: 3
-                CONSTANT id: 12, constant_value: \'6\', constant_value_type: String
+                COLUMN id: 12, column_name: g, result_type: String, source_id: 3
+                CONSTANT id: 13, constant_value: \'6\', constant_value_type: String
   SETTINGS enable_analyzer=1
diff --git a/tests/queries/0_stateless/00736_disjunction_optimisation.reference b/tests/queries/0_stateless/00736_disjunction_optimisation.reference
index 4e7f2e09dead..5a6a33d26ce9 100644
--- a/tests/queries/0_stateless/00736_disjunction_optimisation.reference
+++ b/tests/queries/0_stateless/00736_disjunction_optimisation.reference
@@ -132,24 +132,24 @@ QUERY id: 0
       FUNCTION id: 4, function_name: in, function_type: ordinary, result_type: UInt8
         ARGUMENTS
           LIST id: 5, nodes: 2
-            COLUMN id: 2, column_name: k, result_type: UInt64, source_id: 3
-            CONSTANT id: 6, constant_value: Tuple_(UInt64_1, UInt64_2, UInt64_3), constant_value_type: Tuple(UInt8, UInt8, UInt8)
-      COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-      FUNCTION id: 8, function_name: equals, function_type: ordinary, result_type: UInt8
+            COLUMN id: 6, column_name: k, result_type: UInt64, source_id: 3
+            CONSTANT id: 7, constant_value: Tuple_(UInt64_1, UInt64_2, UInt64_3), constant_value_type: Tuple(UInt8, UInt8, UInt8)
+      COLUMN id: 8, column_name: s, result_type: UInt64, source_id: 3
+      FUNCTION id: 9, function_name: equals, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 9, nodes: 2
-            COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-            CONSTANT id: 10, constant_value: UInt64_21, constant_value_type: UInt8
-      FUNCTION id: 11, function_name: in, function_type: ordinary, result_type: UInt8
+          LIST id: 10, nodes: 2
+            COLUMN id: 11, column_name: s, result_type: UInt64, source_id: 3
+            CONSTANT id: 12, constant_value: UInt64_21, constant_value_type: UInt8
+      FUNCTION id: 13, function_name: in, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 12, nodes: 2
-            COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-            CONSTANT id: 13, constant_value: Tuple_(UInt64_21, UInt64_22), constant_value_type: Tuple(UInt8, UInt8)
-      FUNCTION id: 14, function_name: in, function_type: ordinary, result_type: UInt8
+          LIST id: 14, nodes: 2
+            COLUMN id: 15, column_name: s, result_type: UInt64, source_id: 3
+            CONSTANT id: 16, constant_value: Tuple_(UInt64_21, UInt64_22), constant_value_type: Tuple(UInt8, UInt8)
+      FUNCTION id: 17, function_name: in, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 15, nodes: 2
-            COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-            CONSTANT id: 16, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
+          LIST id: 18, nodes: 2
+            COLUMN id: 19, column_name: s, result_type: UInt64, source_id: 3
+            CONSTANT id: 20, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
   JOIN TREE
     TABLE id: 3, alias: __table1, table_name: default.bug
   SETTINGS enable_analyzer=1
@@ -181,8 +181,8 @@ QUERY id: 0
       FUNCTION id: 4, function_name: in, function_type: ordinary, result_type: UInt8
         ARGUMENTS
           LIST id: 5, nodes: 2
-            COLUMN id: 2, column_name: s, result_type: UInt64, source_id: 3
-            CONSTANT id: 6, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
+            COLUMN id: 6, column_name: s, result_type: UInt64, source_id: 3
+            CONSTANT id: 7, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
   JOIN TREE
     TABLE id: 3, alias: __table1, table_name: default.bug
   SETTINGS enable_analyzer=1
@@ -320,32 +320,32 @@ QUERY id: 0
       FUNCTION id: 4, function_name: in, function_type: ordinary, result_type: UInt8
         ARGUMENTS
           LIST id: 5, nodes: 2
-            COLUMN id: 2, column_name: k, result_type: UInt64, source_id: 3
-            CONSTANT id: 6, constant_value: Tuple_(UInt64_1, UInt64_2, UInt64_3), constant_value_type: Tuple(UInt8, UInt8, UInt8)
-      COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-      FUNCTION id: 8, function_name: equals, function_type: ordinary, result_type: UInt8
+            COLUMN id: 6, column_name: k, result_type: UInt64, source_id: 3
+            CONSTANT id: 7, constant_value: Tuple_(UInt64_1, UInt64_2, UInt64_3), constant_value_type: Tuple(UInt8, UInt8, UInt8)
+      COLUMN id: 8, column_name: s, result_type: UInt64, source_id: 3
+      FUNCTION id: 9, function_name: equals, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 9, nodes: 2
-            COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-            CONSTANT id: 10, constant_value: UInt64_21, constant_value_type: UInt8
-      FUNCTION id: 11, function_name: or, function_type: ordinary, result_type: UInt8
+          LIST id: 10, nodes: 2
+            COLUMN id: 11, column_name: s, result_type: UInt64, source_id: 3
+            CONSTANT id: 12, constant_value: UInt64_21, constant_value_type: UInt8
+      FUNCTION id: 13, function_name: or, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 12, nodes: 2
-            FUNCTION id: 13, function_name: equals, function_type: ordinary, result_type: UInt8
+          LIST id: 14, nodes: 2
+            FUNCTION id: 15, function_name: equals, function_type: ordinary, result_type: UInt8
               ARGUMENTS
-                LIST id: 14, nodes: 2
-                  COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-                  CONSTANT id: 15, constant_value: UInt64_21, constant_value_type: UInt8
-            FUNCTION id: 16, function_name: equals, function_type: ordinary, result_type: UInt8
+                LIST id: 16, nodes: 2
+                  COLUMN id: 17, column_name: s, result_type: UInt64, source_id: 3
+                  CONSTANT id: 18, constant_value: UInt64_21, constant_value_type: UInt8
+            FUNCTION id: 19, function_name: equals, function_type: ordinary, result_type: UInt8
               ARGUMENTS
-                LIST id: 17, nodes: 2
-                  COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-                  CONSTANT id: 18, constant_value: UInt64_22, constant_value_type: UInt8
-      FUNCTION id: 19, function_name: in, function_type: ordinary, result_type: UInt8
+                LIST id: 20, nodes: 2
+                  COLUMN id: 21, column_name: s, result_type: UInt64, source_id: 3
+                  CONSTANT id: 22, constant_value: UInt64_22, constant_value_type: UInt8
+      FUNCTION id: 23, function_name: in, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 20, nodes: 2
-            COLUMN id: 7, column_name: s, result_type: UInt64, source_id: 3
-            CONSTANT id: 21, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
+          LIST id: 24, nodes: 2
+            COLUMN id: 25, column_name: s, result_type: UInt64, source_id: 3
+            CONSTANT id: 26, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
   JOIN TREE
     TABLE id: 3, alias: __table1, table_name: default.bug
   SETTINGS enable_analyzer=1
@@ -377,8 +377,8 @@ QUERY id: 0
       FUNCTION id: 4, function_name: in, function_type: ordinary, result_type: UInt8
         ARGUMENTS
           LIST id: 5, nodes: 2
-            COLUMN id: 2, column_name: s, result_type: UInt64, source_id: 3
-            CONSTANT id: 6, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
+            COLUMN id: 6, column_name: s, result_type: UInt64, source_id: 3
+            CONSTANT id: 7, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
   JOIN TREE
     TABLE id: 3, alias: __table1, table_name: default.bug
   SETTINGS enable_analyzer=1
@@ -410,8 +410,8 @@ QUERY id: 0
       FUNCTION id: 4, function_name: in, function_type: ordinary, result_type: UInt8
         ARGUMENTS
           LIST id: 5, nodes: 2
-            COLUMN id: 2, column_name: s, result_type: UInt64, source_id: 3
-            CONSTANT id: 6, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
+            COLUMN id: 6, column_name: s, result_type: UInt64, source_id: 3
+            CONSTANT id: 7, constant_value: Tuple_(UInt64_21, UInt64_22, UInt64_23), constant_value_type: Tuple(UInt8, UInt8, UInt8)
   JOIN TREE
     TABLE id: 3, alias: __table1, table_name: default.bug
   SETTINGS enable_analyzer=1
diff --git a/tests/queries/0_stateless/00818_alias_bug_4110.sql b/tests/queries/0_stateless/00818_alias_bug_4110.sql
index 1242a3b605d4..dc4ada180b29 100644
--- a/tests/queries/0_stateless/00818_alias_bug_4110.sql
+++ b/tests/queries/0_stateless/00818_alias_bug_4110.sql
@@ -12,7 +12,7 @@ select s.a + 2 as b, b - 1 as a from (select 10 as a) s;
 select s.a as a, s.a + 2 as b from (select 10 as a) s;
 select s.a + 1 as a, s.a + 2 as b from (select 10 as a) s;
 select a + 1 as a, a + 1 as b from (select 10 as a);
-select a + 1 as b, b + 1 as a from (select 10 as a); -- { serverError CYCLIC_ALIASES }
+select a + 1 as b, b + 1 as a from (select 10 as a); -- { serverError CYCLIC_ALIASES, UNKNOWN_IDENTIFIER }
 select 10 as a, a + 1 as a; -- { serverError UNKNOWN_IDENTIFIER }
 with 10 as a select a as a; -- { serverError UNKNOWN_IDENTIFIER }
 with 10 as a select a + 1 as a; -- { serverError UNKNOWN_IDENTIFIER }
diff --git a/tests/queries/0_stateless/01300_group_by_other_keys_having.reference b/tests/queries/0_stateless/01300_group_by_other_keys_having.reference
index 23028e3fb6e0..b5fbbf540ff1 100644
--- a/tests/queries/0_stateless/01300_group_by_other_keys_having.reference
+++ b/tests/queries/0_stateless/01300_group_by_other_keys_having.reference
@@ -63,43 +63,43 @@ QUERY id: 0
       FUNCTION id: 19, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
           LIST id: 20, nodes: 2
-            COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
-            CONSTANT id: 21, constant_value: UInt64_2, constant_value_type: UInt8
+            COLUMN id: 21, column_name: number, result_type: UInt64, source_id: 11
+            CONSTANT id: 22, constant_value: UInt64_2, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 22, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 23, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 23, nodes: 2
-          FUNCTION id: 24, function_name: multiply, function_type: ordinary, result_type: Float64
+        LIST id: 24, nodes: 2
+          FUNCTION id: 25, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 25, nodes: 2
-                CONSTANT id: 26, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 26, nodes: 2
+                CONSTANT id: 27, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 27, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 28, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 28, nodes: 1
-                          CONSTANT id: 29, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 30, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 29, nodes: 1
+                          CONSTANT id: 30, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 31, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 31, nodes: 1
-                      COLUMN id: 32, column_name: number, result_type: UInt64, source_id: 11
-          CONSTANT id: 33, constant_value: Float64_3465735.3, constant_value_type: Float64
+                    LIST id: 32, nodes: 1
+                      COLUMN id: 33, column_name: number, result_type: UInt64, source_id: 11
+          CONSTANT id: 34, constant_value: Float64_3465735.3, constant_value_type: Float64
   ORDER BY
-    LIST id: 34, nodes: 1
-      SORT id: 35, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 35, nodes: 1
+      SORT id: 36, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 36, function_name: multiply, function_type: ordinary, result_type: Float64
+          FUNCTION id: 37, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 37, nodes: 2
-                CONSTANT id: 38, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 38, nodes: 2
+                CONSTANT id: 39, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 40, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 6, nodes: 1
-                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 39, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 41, nodes: 1
+                          CONSTANT id: 42, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 43, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 40, nodes: 1
-                      COLUMN id: 41, column_name: number, result_type: UInt64, source_id: 11
+                    LIST id: 44, nodes: 1
+                      COLUMN id: 45, column_name: number, result_type: UInt64, source_id: 11
 SELECT avg(log(2) * number) AS k
 FROM numbers(10000000)
 WHERE ((number % 5) * (number % 5)) < 5
@@ -145,31 +145,31 @@ QUERY id: 0
                 FUNCTION id: 23, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 24, nodes: 2
-                      COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
-                      CONSTANT id: 25, constant_value: UInt64_5, constant_value_type: UInt8
-                FUNCTION id: 26, function_name: modulo, function_type: ordinary, result_type: UInt8
+                      COLUMN id: 25, column_name: number, result_type: UInt64, source_id: 11
+                      CONSTANT id: 26, constant_value: UInt64_5, constant_value_type: UInt8
+                FUNCTION id: 27, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 27, nodes: 2
-                      COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
-                      CONSTANT id: 28, constant_value: UInt64_5, constant_value_type: UInt8
-          CONSTANT id: 29, constant_value: UInt64_5, constant_value_type: UInt8
+                    LIST id: 28, nodes: 2
+                      COLUMN id: 29, column_name: number, result_type: UInt64, source_id: 11
+                      CONSTANT id: 30, constant_value: UInt64_5, constant_value_type: UInt8
+          CONSTANT id: 31, constant_value: UInt64_5, constant_value_type: UInt8
   ORDER BY
-    LIST id: 30, nodes: 1
-      SORT id: 31, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 32, nodes: 1
+      SORT id: 33, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 32, function_name: multiply, function_type: ordinary, result_type: Float64
+          FUNCTION id: 34, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 33, nodes: 2
-                CONSTANT id: 34, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 35, nodes: 2
+                CONSTANT id: 36, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 37, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 6, nodes: 1
-                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 35, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 38, nodes: 1
+                          CONSTANT id: 39, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 40, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 36, nodes: 1
-                      COLUMN id: 37, column_name: number, result_type: UInt64, source_id: 11
+                    LIST id: 41, nodes: 1
+                      COLUMN id: 42, column_name: number, result_type: UInt64, source_id: 11
 SELECT (number % 5) * (number % 5) AS k
 FROM numbers(10000000)
 WHERE ((number % 5) * (number % 5)) < 5
@@ -191,55 +191,55 @@ QUERY id: 0
             FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 10, nodes: 2
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 11, constant_value: UInt64_5, constant_value_type: UInt8
+                  COLUMN id: 11, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 12, constant_value: UInt64_5, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_10000000, constant_value_type: UInt32
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_10000000, constant_value_type: UInt32
   GROUP BY
-    LIST id: 14, nodes: 1
-      FUNCTION id: 15, function_name: modulo, function_type: ordinary, result_type: UInt8
+    LIST id: 15, nodes: 1
+      FUNCTION id: 16, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 16, nodes: 2
-            COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-            CONSTANT id: 17, constant_value: UInt64_5, constant_value_type: UInt8
+          LIST id: 17, nodes: 2
+            COLUMN id: 18, column_name: number, result_type: UInt64, source_id: 7
+            CONSTANT id: 19, constant_value: UInt64_5, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 18, function_name: less, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 20, function_name: less, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 19, nodes: 2
-          FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt16
+        LIST id: 21, nodes: 2
+          FUNCTION id: 22, function_name: multiply, function_type: ordinary, result_type: UInt16
             ARGUMENTS
-              LIST id: 21, nodes: 2
-                FUNCTION id: 22, function_name: modulo, function_type: ordinary, result_type: UInt8
-                  ARGUMENTS
-                    LIST id: 23, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 24, constant_value: UInt64_5, constant_value_type: UInt8
-                FUNCTION id: 25, function_name: modulo, function_type: ordinary, result_type: UInt8
+              LIST id: 23, nodes: 2
+                FUNCTION id: 24, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 26, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
+                    LIST id: 25, nodes: 2
+                      COLUMN id: 26, column_name: number, result_type: UInt64, source_id: 7
                       CONSTANT id: 27, constant_value: UInt64_5, constant_value_type: UInt8
-          CONSTANT id: 28, constant_value: UInt64_5, constant_value_type: UInt8
+                FUNCTION id: 28, function_name: modulo, function_type: ordinary, result_type: UInt8
+                  ARGUMENTS
+                    LIST id: 29, nodes: 2
+                      COLUMN id: 30, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 31, constant_value: UInt64_5, constant_value_type: UInt8
+          CONSTANT id: 32, constant_value: UInt64_5, constant_value_type: UInt8
   ORDER BY
-    LIST id: 29, nodes: 1
-      SORT id: 30, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 33, nodes: 1
+      SORT id: 34, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: multiply, function_type: ordinary, result_type: UInt16
+          FUNCTION id: 35, function_name: multiply, function_type: ordinary, result_type: UInt16
             ARGUMENTS
-              LIST id: 3, nodes: 2
-                FUNCTION id: 4, function_name: modulo, function_type: ordinary, result_type: UInt8
+              LIST id: 36, nodes: 2
+                FUNCTION id: 37, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 5, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 8, constant_value: UInt64_5, constant_value_type: UInt8
-                FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: UInt8
+                    LIST id: 38, nodes: 2
+                      COLUMN id: 39, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 40, constant_value: UInt64_5, constant_value_type: UInt8
+                FUNCTION id: 41, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 10, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 11, constant_value: UInt64_5, constant_value_type: UInt8
+                    LIST id: 42, nodes: 2
+                      COLUMN id: 43, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 44, constant_value: UInt64_5, constant_value_type: UInt8
 3465735.9028
 3465735.9028
 3465736.595947
@@ -293,53 +293,53 @@ QUERY id: 0
             FUNCTION id: 21, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 22, nodes: 2
-                  COLUMN id: 19, column_name: number, result_type: UInt64, source_id: 11
-                  CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
-      FUNCTION id: 24, function_name: modulo, function_type: ordinary, result_type: UInt8
+                  COLUMN id: 23, column_name: number, result_type: UInt64, source_id: 11
+                  CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
+      FUNCTION id: 25, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 25, nodes: 2
-            COLUMN id: 19, column_name: number, result_type: UInt64, source_id: 11
-            CONSTANT id: 26, constant_value: UInt64_3, constant_value_type: UInt8
-      FUNCTION id: 27, function_name: modulo, function_type: ordinary, result_type: UInt8
+          LIST id: 26, nodes: 2
+            COLUMN id: 27, column_name: number, result_type: UInt64, source_id: 11
+            CONSTANT id: 28, constant_value: UInt64_3, constant_value_type: UInt8
+      FUNCTION id: 29, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 28, nodes: 2
-            COLUMN id: 19, column_name: number, result_type: UInt64, source_id: 11
-            CONSTANT id: 29, constant_value: UInt64_2, constant_value_type: UInt8
+          LIST id: 30, nodes: 2
+            COLUMN id: 31, column_name: number, result_type: UInt64, source_id: 11
+            CONSTANT id: 32, constant_value: UInt64_2, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 30, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 33, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 31, nodes: 2
-          FUNCTION id: 32, function_name: multiply, function_type: ordinary, result_type: Float64
+        LIST id: 34, nodes: 2
+          FUNCTION id: 35, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 33, nodes: 2
-                CONSTANT id: 34, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 36, nodes: 2
+                CONSTANT id: 37, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 35, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 38, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 36, nodes: 1
-                          CONSTANT id: 37, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 38, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 39, nodes: 1
+                          CONSTANT id: 40, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 41, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 39, nodes: 1
-                      COLUMN id: 40, column_name: number, result_type: UInt64, source_id: 11
-          CONSTANT id: 41, constant_value: Float64_3465735.3, constant_value_type: Float64
+                    LIST id: 42, nodes: 1
+                      COLUMN id: 43, column_name: number, result_type: UInt64, source_id: 11
+          CONSTANT id: 44, constant_value: Float64_3465735.3, constant_value_type: Float64
   ORDER BY
-    LIST id: 42, nodes: 1
-      SORT id: 43, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 45, nodes: 1
+      SORT id: 46, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 44, function_name: multiply, function_type: ordinary, result_type: Float64
+          FUNCTION id: 47, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 45, nodes: 2
-                CONSTANT id: 46, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 48, nodes: 2
+                CONSTANT id: 49, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 50, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 6, nodes: 1
-                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 47, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 51, nodes: 1
+                          CONSTANT id: 52, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 53, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 48, nodes: 1
-                      COLUMN id: 49, column_name: number, result_type: UInt64, source_id: 11
+                    LIST id: 54, nodes: 1
+                      COLUMN id: 55, column_name: number, result_type: UInt64, source_id: 11
 SELECT avg(log(2) * number) AS k
 FROM numbers(10000000)
 WHERE ((number % 5) * (number % 5)) < 5
diff --git a/tests/queries/0_stateless/01323_redundant_functions_in_order_by.reference b/tests/queries/0_stateless/01323_redundant_functions_in_order_by.reference
index c2c37cc4de63..002cdeeae3a3 100644
--- a/tests/queries/0_stateless/01323_redundant_functions_in_order_by.reference
+++ b/tests/queries/0_stateless/01323_redundant_functions_in_order_by.reference
@@ -64,7 +64,7 @@ QUERY id: 0
         LIST id: 11, nodes: 1
           SORT id: 12, sort_direction: ASCENDING, with_fill: 0
             EXPRESSION
-              COLUMN id: 7, column_name: number, result_type: UInt64, source_id: 8
+              COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 8
   SETTINGS enable_analyzer=1
 SELECT groupArray(x)
 FROM
@@ -98,7 +98,7 @@ QUERY id: 0
         LIST id: 11, nodes: 1
           SORT id: 12, sort_direction: ASCENDING, with_fill: 0
             EXPRESSION
-              COLUMN id: 7, column_name: number, result_type: UInt64, source_id: 8
+              COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 8
   SETTINGS enable_analyzer=1
 SELECT groupArray(x)
 FROM
@@ -137,10 +137,10 @@ QUERY id: 0
               FUNCTION id: 13, function_name: exp, function_type: ordinary, result_type: Float64
                 ARGUMENTS
                   LIST id: 14, nodes: 1
-                    COLUMN id: 7, column_name: number, result_type: UInt64, source_id: 8
-          SORT id: 15, sort_direction: ASCENDING, with_fill: 0
+                    COLUMN id: 15, column_name: number, result_type: UInt64, source_id: 8
+          SORT id: 16, sort_direction: ASCENDING, with_fill: 0
             EXPRESSION
-              COLUMN id: 7, column_name: number, result_type: UInt64, source_id: 8
+              COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 8
   SETTINGS enable_analyzer=1
 SELECT
     key,
@@ -225,10 +225,10 @@ QUERY id: 0
     LIST id: 5, nodes: 2
       SORT id: 6, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3
-      SORT id: 7, sort_direction: ASCENDING, with_fill: 0
+          COLUMN id: 7, column_name: key, result_type: UInt64, source_id: 3
+      SORT id: 8, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          COLUMN id: 4, column_name: a, result_type: UInt8, source_id: 3
+          COLUMN id: 9, column_name: a, result_type: UInt8, source_id: 3
   SETTINGS enable_analyzer=1
 SELECT
     key,
@@ -251,17 +251,17 @@ QUERY id: 0
     LIST id: 5, nodes: 2
       SORT id: 6, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3
-      SORT id: 7, sort_direction: ASCENDING, with_fill: 0
+          COLUMN id: 7, column_name: key, result_type: UInt64, source_id: 3
+      SORT id: 8, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 8, function_name: exp, function_type: ordinary, result_type: Float64
+          FUNCTION id: 9, function_name: exp, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 9, nodes: 1
-                FUNCTION id: 10, function_name: plus, function_type: ordinary, result_type: UInt64
+              LIST id: 10, nodes: 1
+                FUNCTION id: 11, function_name: plus, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 11, nodes: 2
-                      COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3
-                      COLUMN id: 4, column_name: a, result_type: UInt8, source_id: 3
+                    LIST id: 12, nodes: 2
+                      COLUMN id: 13, column_name: key, result_type: UInt64, source_id: 3
+                      COLUMN id: 14, column_name: a, result_type: UInt8, source_id: 3
   SETTINGS enable_analyzer=1
 QUERY id: 0
   PROJECTION COLUMNS
@@ -273,18 +273,18 @@ QUERY id: 0
     TABLE id: 3, alias: __table1, table_name: default.test
   GROUP BY
     LIST id: 4, nodes: 1
-      COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3
+      COLUMN id: 5, column_name: key, result_type: UInt64, source_id: 3
   ORDER BY
-    LIST id: 5, nodes: 2
-      SORT id: 6, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 6, nodes: 2
+      SORT id: 7, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 7, function_name: avg, function_type: aggregate, result_type: Float64
+          FUNCTION id: 8, function_name: avg, function_type: aggregate, result_type: Float64
             ARGUMENTS
-              LIST id: 8, nodes: 1
-                COLUMN id: 9, column_name: a, result_type: UInt8, source_id: 3
-      SORT id: 10, sort_direction: ASCENDING, with_fill: 0
+              LIST id: 9, nodes: 1
+                COLUMN id: 10, column_name: a, result_type: UInt8, source_id: 3
+      SORT id: 11, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          COLUMN id: 2, column_name: key, result_type: UInt64, source_id: 3
+          COLUMN id: 12, column_name: key, result_type: UInt64, source_id: 3
   SETTINGS enable_analyzer=1
 QUERY id: 0
   PROJECTION COLUMNS
diff --git a/tests/queries/0_stateless/01376_GROUP_BY_injective_elimination_dictGet.reference b/tests/queries/0_stateless/01376_GROUP_BY_injective_elimination_dictGet.reference
index 2d16e71f099a..7f35bccea789 100644
--- a/tests/queries/0_stateless/01376_GROUP_BY_injective_elimination_dictGet.reference
+++ b/tests/queries/0_stateless/01376_GROUP_BY_injective_elimination_dictGet.reference
@@ -20,5 +20,5 @@ QUERY id: 0
           CONSTANT id: 9, constant_value: UInt64_2, constant_value_type: UInt8
   GROUP BY
     LIST id: 10, nodes: 1
-      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
+      COLUMN id: 11, column_name: number, result_type: UInt64, source_id: 7
   SETTINGS enable_analyzer=1
diff --git a/tests/queries/0_stateless/01651_bugs_from_15889.sql b/tests/queries/0_stateless/01651_bugs_from_15889.sql
index b98feaa1f65f..6e762c2208a9 100644
--- a/tests/queries/0_stateless/01651_bugs_from_15889.sql
+++ b/tests/queries/0_stateless/01651_bugs_from_15889.sql
@@ -75,6 +75,25 @@ DROP TABLE IF EXISTS trace_log;
 
 SYSTEM FLUSH LOGS;
 
+WITH
+    (
+        SELECT query_start_time_microseconds
+        FROM system.query_log
+        WHERE current_database = currentDatabase()
+        ORDER BY query_start_time DESC
+        LIMIT 1
+    ) AS time_with_microseconds,
+    (
+        SELECT
+            inf,
+            query_start_time
+        FROM system.query_log
+        WHERE current_database = currentDatabase()
+        ORDER BY query_start_time DESC
+        LIMIT 1
+    ) AS t
+SELECT if(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)) = -9223372036854775808, 'ok', ''); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+
 WITH (
     (
         SELECT query_start_time_microseconds
@@ -92,7 +111,8 @@ WITH (
         ORDER BY query_start_time DESC
         LIMIT 1
     ) AS t)
-SELECT if(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)) = -9223372036854775808, 'ok', ''); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+SELECT if(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)) = -9223372036854775808, 'ok', '')
+SETTINGS allow_experimental_analyzer = 1; -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
 
 WITH (
     (
diff --git a/tests/queries/0_stateless/02174_cte_scalar_cache_mv.reference b/tests/queries/0_stateless/02174_cte_scalar_cache_mv.reference
index dcfab092b5cf..91a7a3c6572c 100644
--- a/tests/queries/0_stateless/02174_cte_scalar_cache_mv.reference
+++ b/tests/queries/0_stateless/02174_cte_scalar_cache_mv.reference
@@ -39,7 +39,7 @@
 89	89	89	89	5
 94	94	94	94	5
 99	99	99	99	5
-02177_MV	0	0	22
+02177_MV	2	63	22
 10
 40
 70
diff --git a/tests/queries/0_stateless/02226_analyzer_or_like_combine.reference b/tests/queries/0_stateless/02226_analyzer_or_like_combine.reference
index 61dfd1c67793..3c3db3f04df1 100644
--- a/tests/queries/0_stateless/02226_analyzer_or_like_combine.reference
+++ b/tests/queries/0_stateless/02226_analyzer_or_like_combine.reference
@@ -19,27 +19,27 @@ QUERY id: 0
           FUNCTION id: 8, function_name: like, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 9, nodes: 2
-                FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+                FUNCTION id: 10, function_name: materialize, function_type: ordinary, result_type: String
                   ARGUMENTS
-                    LIST id: 3, nodes: 1
-                      CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
-                CONSTANT id: 10, constant_value: \'hell%\', constant_value_type: String
-          FUNCTION id: 11, function_name: ilike, function_type: ordinary, result_type: UInt8
-            ARGUMENTS
-              LIST id: 12, nodes: 2
-                FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
-                  ARGUMENTS
-                    LIST id: 3, nodes: 1
-                      CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
-                CONSTANT id: 13, constant_value: \'%привет%\', constant_value_type: String
+                    LIST id: 11, nodes: 1
+                      CONSTANT id: 12, constant_value: \'Привет, World\', constant_value_type: String
+                CONSTANT id: 13, constant_value: \'hell%\', constant_value_type: String
           FUNCTION id: 14, function_name: ilike, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 15, nodes: 2
-                FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+                FUNCTION id: 16, function_name: materialize, function_type: ordinary, result_type: String
+                  ARGUMENTS
+                    LIST id: 17, nodes: 1
+                      CONSTANT id: 18, constant_value: \'Привет, World\', constant_value_type: String
+                CONSTANT id: 19, constant_value: \'%привет%\', constant_value_type: String
+          FUNCTION id: 20, function_name: ilike, function_type: ordinary, result_type: UInt8
+            ARGUMENTS
+              LIST id: 21, nodes: 2
+                FUNCTION id: 22, function_name: materialize, function_type: ordinary, result_type: String
                   ARGUMENTS
-                    LIST id: 3, nodes: 1
-                      CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
-                CONSTANT id: 16, constant_value: \'world%\', constant_value_type: String
+                    LIST id: 23, nodes: 1
+                      CONSTANT id: 24, constant_value: \'Привет, World\', constant_value_type: String
+                CONSTANT id: 25, constant_value: \'world%\', constant_value_type: String
   SETTINGS optimize_or_like_chain=0 enable_analyzer=1
 SELECT materialize(\'Привет, World\') AS s
 WHERE multiMatchAny(s, [\'^hell\', \'(?i)привет\', \'(?i)^world\']) OR false
@@ -62,12 +62,12 @@ QUERY id: 0
           FUNCTION id: 8, function_name: multiMatchAny, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 9, nodes: 2
-                FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+                FUNCTION id: 10, function_name: materialize, function_type: ordinary, result_type: String
                   ARGUMENTS
-                    LIST id: 3, nodes: 1
-                      CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
-                CONSTANT id: 10, constant_value: Array_[\'^hell\', \'(?i)привет\', \'(?i)^world\'], constant_value_type: Array(String)
-          CONSTANT id: 11, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 11, nodes: 1
+                      CONSTANT id: 12, constant_value: \'Привет, World\', constant_value_type: String
+                CONSTANT id: 13, constant_value: Array_[\'^hell\', \'(?i)привет\', \'(?i)^world\'], constant_value_type: Array(String)
+          CONSTANT id: 14, constant_value: UInt64_0, constant_value_type: UInt8
   SETTINGS optimize_or_like_chain=1 enable_analyzer=1
 SELECT
     materialize(\'Привет, World\') AS s1,
diff --git a/tests/queries/0_stateless/02341_analyzer_aliases_basics.sql b/tests/queries/0_stateless/02341_analyzer_aliases_basics.sql
index 8bed0c8bc1ef..a6c41e5a9dbe 100644
--- a/tests/queries/0_stateless/02341_analyzer_aliases_basics.sql
+++ b/tests/queries/0_stateless/02341_analyzer_aliases_basics.sql
@@ -12,7 +12,7 @@ SELECT 1 AS x, x, x + 1;
 SELECT x, x + 1, 1 AS x;
 SELECT x, 1 + (2 + (3 AS x));
 
-SELECT a AS b, b AS a; -- { serverError CYCLIC_ALIASES }
+SELECT a AS b, b AS a; -- { serverError CYCLIC_ALIASES, UNKNOWN_IDENTIFIER }
 
 DROP TABLE IF EXISTS test_table;
 CREATE TABLE test_table
@@ -30,8 +30,8 @@ SELECT id_1, value_1, id as id_1, value as value_1 FROM test_table;
 
 WITH value_1 as value_2, id_1 as id_2, id AS id_1, value AS value_1 SELECT id_2, value_2 FROM test_table;
 
-SELECT (id + b) AS id, id as b FROM test_table; -- { serverError CYCLIC_ALIASES }
-SELECT (1 + b + 1 + id) AS id, b as c, id as b FROM test_table; -- { serverError CYCLIC_ALIASES }
+SELECT (id + b) AS id, id as b FROM test_table; -- { serverError CYCLIC_ALIASES, UNKNOWN_IDENTIFIER }
+SELECT (1 + b + 1 + id) AS id, b as c, id as b FROM test_table; -- { serverError CYCLIC_ALIASES, UNKNOWN_IDENTIFIER }
 
 SELECT 'Alias conflict with identifier inside expression';
 
diff --git a/tests/queries/0_stateless/02368_analyzer_table_functions.sql b/tests/queries/0_stateless/02368_analyzer_table_functions.sql
index cc65848a5d82..8c3ea96fb39c 100644
--- a/tests/queries/0_stateless/02368_analyzer_table_functions.sql
+++ b/tests/queries/0_stateless/02368_analyzer_table_functions.sql
@@ -4,7 +4,7 @@ SELECT c1, c2, c3, c4 FROM format('CSV', '1,2,"[1,2,3]","[[\'abc\'], [], [\'d\',
 SELECT f.c1, f.c2, f.c3, f.c4 FROM format('CSV', '1,2,"[1,2,3]","[[\'abc\'], [], [\'d\', \'e\']]"') AS f;
 SELECT f.* FROM format('CSV', '1,2,"[1,2,3]","[[\'abc\'], [], [\'d\', \'e\']]"') AS f;
 
-WITH 'CSV', '1,2,"[1,2,3]","[[\'abc\'], [], [\'d\', \'e\']]"' AS format_value SELECT c1, c2, c3, c4 FROM format('CSV', format_value);
+WITH 'CSV' as format_name, '1,2,"[1,2,3]","[[\'abc\'], [], [\'d\', \'e\']]"' AS format_value SELECT c1, c2, c3, c4 FROM format('CSV', format_value);
 WITH concat('1,2,"[1,2,3]",','"[[\'abc\'], [], [\'d\', \'e\']]"') AS format_value SELECT c1, c2, c3, c4 FROM format('CSV', format_value);
 
 SELECT format, format_value, c1, c2, c3, c4 FROM format('CSV' AS format, '1,2,"[1,2,3]","[[\'abc\'], [], [\'d\', \'e\']]"' AS format_value);
diff --git a/tests/queries/0_stateless/02374_analyzer_array_join.reference b/tests/queries/0_stateless/02374_analyzer_array_join.reference
index ad7750228d62..2e4239ab1e1d 100644
--- a/tests/queries/0_stateless/02374_analyzer_array_join.reference
+++ b/tests/queries/0_stateless/02374_analyzer_array_join.reference
@@ -82,12 +82,12 @@ SELECT id, value, value_array, value_array_element FROM test_table ARRAY JOIN va
 SELECT '--';
 --
 SELECT id, value, value_array AS value_array_array_alias FROM test_table ARRAY JOIN value_array_array_alias;
-0	Value	[1,2,3]
-0	Value	[1,2,3]
-0	Value	[1,2,3]
-0	Value	[4,5,6]
-0	Value	[4,5,6]
-0	Value	[4,5,6]
+0	Value	1
+0	Value	2
+0	Value	3
+0	Value	4
+0	Value	5
+0	Value	6
 SELECT '--';
 --
 SELECT id AS value FROM test_table ARRAY JOIN value_array AS value;
diff --git a/tests/queries/0_stateless/02378_analyzer_projection_names.reference b/tests/queries/0_stateless/02378_analyzer_projection_names.reference
index 532414f117c2..70cfd5409d3e 100644
--- a/tests/queries/0_stateless/02378_analyzer_projection_names.reference
+++ b/tests/queries/0_stateless/02378_analyzer_projection_names.reference
@@ -186,6 +186,10 @@ DESCRIBE (SELECT arrayMap(x -> test_table.* EXCEPT value, [1,2,3]) FROM test_tab
 arrayMap(lambda(tuple(x), id), [1, 2, 3])	Array(UInt64)					
 SELECT '--';
 --
+DESCRIBE (SELECT arrayMap(x -> tt.* EXCEPT value, [1,2,3]) FROM test_table as tt);
+arrayMap(lambda(tuple(x), id), [1, 2, 3])	Array(UInt64)					
+SELECT '--';
+--
 DESCRIBE (SELECT arrayMap(x -> test_table.* EXCEPT value APPLY x -> x, [1,2,3]) FROM test_table);
 arrayMap(lambda(tuple(x), id), [1, 2, 3])	Array(UInt64)					
 SELECT '--';
diff --git a/tests/queries/0_stateless/02378_analyzer_projection_names.sql b/tests/queries/0_stateless/02378_analyzer_projection_names.sql
index 7b3099c4f364..39670f1db2c0 100644
--- a/tests/queries/0_stateless/02378_analyzer_projection_names.sql
+++ b/tests/queries/0_stateless/02378_analyzer_projection_names.sql
@@ -191,6 +191,10 @@ DESCRIBE (SELECT arrayMap(x -> test_table.* EXCEPT value, [1,2,3]) FROM test_tab
 
 SELECT '--';
 
+DESCRIBE (SELECT arrayMap(x -> tt.* EXCEPT value, [1,2,3]) FROM test_table as tt);
+
+SELECT '--';
+
 DESCRIBE (SELECT arrayMap(x -> test_table.* EXCEPT value APPLY x -> x, [1,2,3]) FROM test_table);
 
 SELECT '--';
diff --git a/tests/queries/0_stateless/02385_analyzer_aliases_compound_expression.sql b/tests/queries/0_stateless/02385_analyzer_aliases_compound_expression.sql
index 025e064d23ca..6c42607cc565 100644
--- a/tests/queries/0_stateless/02385_analyzer_aliases_compound_expression.sql
+++ b/tests/queries/0_stateless/02385_analyzer_aliases_compound_expression.sql
@@ -6,7 +6,7 @@ SELECT '--';
 
 WITH (x -> x + 1) AS lambda SELECT lambda(1);
 
-WITH (x -> x + 1) AS lambda SELECT lambda.nested(1); -- { serverError BAD_ARGUMENTS }
+WITH (x -> x + 1) AS lambda SELECT lambda.nested(1); -- { serverError UNKNOWN_IDENTIFIER }
 
 SELECT '--';
 
@@ -16,6 +16,6 @@ SELECT '--';
 
 SELECT * FROM t1 AS t2, (SELECT 1) AS t1;
 
-SELECT * FROM (SELECT 1) AS t1, t1.nested AS t2; -- { serverError BAD_ARGUMENTS }
+SELECT * FROM (SELECT 1) AS t1, t1.nested AS t2; -- { serverError UNKNOWN_IDENTIFIER }
 
-SELECT * FROM t1.nested AS t2, (SELECT 1) AS t1; -- { serverError BAD_ARGUMENTS }
+SELECT * FROM t1.nested AS t2, (SELECT 1) AS t1; -- { serverError UNKNOWN_IDENTIFIER }
diff --git a/tests/queries/0_stateless/02476_analyzer_identifier_hints.sh b/tests/queries/0_stateless/02476_analyzer_identifier_hints.sh
index 92f519a9f8a0..2fd0c1089ca5 100755
--- a/tests/queries/0_stateless/02476_analyzer_identifier_hints.sh
+++ b/tests/queries/0_stateless/02476_analyzer_identifier_hints.sh
@@ -134,7 +134,7 @@ $CLICKHOUSE_CLIENT -q "SELECT cast(tuple(1), 'Tuple(value_1 String)') AS constan
     | grep "Maybe you meant: \['constant_value.value_1'\]" &>/dev/null;
 
 $CLICKHOUSE_CLIENT -q "SELECT cast(tuple(1), 'Tuple(value_1 String)') AS constant_value, constant_valu.value_ SETTINGS enable_analyzer = 1;" 2>&1 \
-    | grep "Maybe you meant: \['constant_value.value_1'\]" &>/dev/null;
+    | grep "Maybe you meant: \['constant_value'\]" &>/dev/null;
 
 $CLICKHOUSE_CLIENT -q "SELECT cast(tuple(1), 'Tuple(value_1 String)') AS constant_value, arrayMap(lambda_argument -> lambda_argument + constant_value.value_, [1, 2, 3]) SETTINGS enable_analyzer = 1;" 2>&1 \
     | grep "Maybe you meant: \['constant_value.value_1'\]" &>/dev/null;
diff --git a/tests/queries/0_stateless/02476_fuse_sum_count.reference b/tests/queries/0_stateless/02476_fuse_sum_count.reference
index 1eb156743b02..7dae9853b4e1 100644
--- a/tests/queries/0_stateless/02476_fuse_sum_count.reference
+++ b/tests/queries/0_stateless/02476_fuse_sum_count.reference
@@ -19,7 +19,7 @@ QUERY id: 0
       FUNCTION id: 6, function_name: avg, function_type: aggregate, result_type: Nullable(Float64)
         ARGUMENTS
           LIST id: 7, nodes: 1
-            COLUMN id: 4, column_name: a, result_type: Nullable(Int8), source_id: 5
+            COLUMN id: 8, column_name: a, result_type: Nullable(Int8), source_id: 5
   JOIN TREE
     TABLE id: 5, alias: __table1, table_name: default.fuse_tbl
 QUERY id: 0
@@ -123,20 +123,20 @@ QUERY id: 0
             FUNCTION id: 30, function_name: plus, function_type: ordinary, result_type: Nullable(Int16)
               ARGUMENTS
                 LIST id: 31, nodes: 2
-                  COLUMN id: 6, column_name: a, result_type: Nullable(Int8), source_id: 7
-                  CONSTANT id: 32, constant_value: UInt64_1, constant_value_type: UInt8
-      FUNCTION id: 33, function_name: sum, function_type: aggregate, result_type: Nullable(Int64)
+                  COLUMN id: 32, column_name: a, result_type: Nullable(Int8), source_id: 7
+                  CONSTANT id: 33, constant_value: UInt64_1, constant_value_type: UInt8
+      FUNCTION id: 34, function_name: sum, function_type: aggregate, result_type: Nullable(Int64)
         ARGUMENTS
-          LIST id: 34, nodes: 1
-            FUNCTION id: 35, function_name: plus, function_type: ordinary, result_type: Nullable(Int16)
+          LIST id: 35, nodes: 1
+            FUNCTION id: 36, function_name: plus, function_type: ordinary, result_type: Nullable(Int16)
               ARGUMENTS
-                LIST id: 36, nodes: 2
-                  COLUMN id: 6, column_name: a, result_type: Nullable(Int8), source_id: 7
-                  CONSTANT id: 37, constant_value: UInt64_2, constant_value_type: UInt8
-      FUNCTION id: 38, function_name: count, function_type: aggregate, result_type: UInt64
+                LIST id: 37, nodes: 2
+                  COLUMN id: 38, column_name: a, result_type: Nullable(Int8), source_id: 7
+                  CONSTANT id: 39, constant_value: UInt64_2, constant_value_type: UInt8
+      FUNCTION id: 40, function_name: count, function_type: aggregate, result_type: UInt64
         ARGUMENTS
-          LIST id: 39, nodes: 1
-            COLUMN id: 6, column_name: a, result_type: Nullable(Int8), source_id: 7
+          LIST id: 41, nodes: 1
+            COLUMN id: 42, column_name: a, result_type: Nullable(Int8), source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.fuse_tbl
 QUERY id: 0
diff --git a/tests/queries/0_stateless/02477_fuse_quantiles.reference b/tests/queries/0_stateless/02477_fuse_quantiles.reference
index 7603381416ca..1f304f69a139 100644
--- a/tests/queries/0_stateless/02477_fuse_quantiles.reference
+++ b/tests/queries/0_stateless/02477_fuse_quantiles.reference
@@ -79,4 +79,4 @@ QUERY id: 0
             TABLE id: 30, alias: __table3, table_name: default.fuse_tbl
       GROUP BY
         LIST id: 35, nodes: 1
-          COLUMN id: 18, column_name: x, result_type: Float64, source_id: 19
+          COLUMN id: 36, column_name: x, result_type: Float64, source_id: 19
diff --git a/tests/queries/0_stateless/02477_logical_expressions_optimizer_low_cardinality.reference b/tests/queries/0_stateless/02477_logical_expressions_optimizer_low_cardinality.reference
index 0ce90cde1085..a7a864652bb2 100644
--- a/tests/queries/0_stateless/02477_logical_expressions_optimizer_low_cardinality.reference
+++ b/tests/queries/0_stateless/02477_logical_expressions_optimizer_low_cardinality.reference
@@ -16,9 +16,9 @@ QUERY id: 0
           FUNCTION id: 6, function_name: in, function_type: ordinary, result_type: LowCardinality(UInt8)
             ARGUMENTS
               LIST id: 7, nodes: 2
-                COLUMN id: 2, column_name: a, result_type: LowCardinality(String), source_id: 3
-                CONSTANT id: 8, constant_value: Tuple_(\'x\', \'y\'), constant_value_type: Tuple(String, String)
-          CONSTANT id: 9, constant_value: UInt64_0, constant_value_type: UInt8
+                COLUMN id: 8, column_name: a, result_type: LowCardinality(String), source_id: 3
+                CONSTANT id: 9, constant_value: Tuple_(\'x\', \'y\'), constant_value_type: Tuple(String, String)
+          CONSTANT id: 10, constant_value: UInt64_0, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT a
 FROM t_logical_expressions_optimizer_low_cardinality
@@ -38,9 +38,9 @@ QUERY id: 0
           FUNCTION id: 6, function_name: in, function_type: ordinary, result_type: LowCardinality(UInt8)
             ARGUMENTS
               LIST id: 7, nodes: 2
-                COLUMN id: 2, column_name: a, result_type: LowCardinality(String), source_id: 3
-                CONSTANT id: 8, constant_value: Tuple_(\'x\', \'y\'), constant_value_type: Tuple(String, String)
-          CONSTANT id: 9, constant_value: UInt64_0, constant_value_type: UInt8
+                COLUMN id: 8, column_name: a, result_type: LowCardinality(String), source_id: 3
+                CONSTANT id: 9, constant_value: Tuple_(\'x\', \'y\'), constant_value_type: Tuple(String, String)
+          CONSTANT id: 10, constant_value: UInt64_0, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT a
 FROM t_logical_expressions_optimizer_low_cardinality
@@ -60,9 +60,9 @@ QUERY id: 0
           FUNCTION id: 6, function_name: notIn, function_type: ordinary, result_type: LowCardinality(UInt8)
             ARGUMENTS
               LIST id: 7, nodes: 2
-                COLUMN id: 2, column_name: a, result_type: LowCardinality(String), source_id: 3
-                CONSTANT id: 8, constant_value: Tuple_(\'x\', \'y\'), constant_value_type: Tuple(String, String)
-          CONSTANT id: 9, constant_value: \'UInt8\', constant_value_type: String
+                COLUMN id: 8, column_name: a, result_type: LowCardinality(String), source_id: 3
+                CONSTANT id: 9, constant_value: Tuple_(\'x\', \'y\'), constant_value_type: Tuple(String, String)
+          CONSTANT id: 10, constant_value: \'UInt8\', constant_value_type: String
   SETTINGS enable_analyzer=1
 SELECT a
 FROM t_logical_expressions_optimizer_low_cardinality
@@ -82,9 +82,9 @@ QUERY id: 0
           FUNCTION id: 6, function_name: notIn, function_type: ordinary, result_type: LowCardinality(UInt8)
             ARGUMENTS
               LIST id: 7, nodes: 2
-                COLUMN id: 2, column_name: a, result_type: LowCardinality(String), source_id: 3
-                CONSTANT id: 8, constant_value: Tuple_(\'x\', \'y\'), constant_value_type: Tuple(String, String)
-          CONSTANT id: 9, constant_value: \'UInt8\', constant_value_type: String
+                COLUMN id: 8, column_name: a, result_type: LowCardinality(String), source_id: 3
+                CONSTANT id: 9, constant_value: Tuple_(\'x\', \'y\'), constant_value_type: Tuple(String, String)
+          CONSTANT id: 10, constant_value: \'UInt8\', constant_value_type: String
   SETTINGS enable_analyzer=1
 SELECT a
 FROM t_logical_expressions_optimizer_low_cardinality
@@ -109,8 +109,8 @@ QUERY id: 0
           FUNCTION id: 10, function_name: equals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 11, nodes: 2
-                COLUMN id: 8, column_name: b, result_type: UInt32, source_id: 3
-                CONSTANT id: 12, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 12, column_name: b, result_type: UInt32, source_id: 3
+                CONSTANT id: 13, constant_value: UInt64_1, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT a
 FROM t_logical_expressions_optimizer_low_cardinality
@@ -135,6 +135,6 @@ QUERY id: 0
           FUNCTION id: 10, function_name: notEquals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 11, nodes: 2
-                COLUMN id: 8, column_name: b, result_type: UInt32, source_id: 3
-                CONSTANT id: 12, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 12, column_name: b, result_type: UInt32, source_id: 3
+                CONSTANT id: 13, constant_value: UInt64_1, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
diff --git a/tests/queries/0_stateless/02481_analyzer_optimize_grouping_sets_keys.reference b/tests/queries/0_stateless/02481_analyzer_optimize_grouping_sets_keys.reference
index 9f9c1da5e88d..db256fb74af6 100644
--- a/tests/queries/0_stateless/02481_analyzer_optimize_grouping_sets_keys.reference
+++ b/tests/queries/0_stateless/02481_analyzer_optimize_grouping_sets_keys.reference
@@ -35,55 +35,55 @@ QUERY id: 0, group_by_type: grouping_sets
               FUNCTION id: 22, function_name: modulo, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
                   LIST id: 23, nodes: 2
-                    COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 11
-                    CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
-      LIST id: 25, nodes: 1
-        FUNCTION id: 26, function_name: modulo, function_type: ordinary, result_type: UInt8
+                    COLUMN id: 24, column_name: number, result_type: UInt64, source_id: 11
+                    CONSTANT id: 25, constant_value: UInt64_3, constant_value_type: UInt8
+      LIST id: 26, nodes: 1
+        FUNCTION id: 27, function_name: modulo, function_type: ordinary, result_type: UInt8
           ARGUMENTS
-            LIST id: 27, nodes: 2
-              COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 11
-              CONSTANT id: 28, constant_value: UInt64_3, constant_value_type: UInt8
-      LIST id: 29, nodes: 1
-        FUNCTION id: 30, function_name: modulo, function_type: ordinary, result_type: UInt8
+            LIST id: 28, nodes: 2
+              COLUMN id: 29, column_name: number, result_type: UInt64, source_id: 11
+              CONSTANT id: 30, constant_value: UInt64_3, constant_value_type: UInt8
+      LIST id: 31, nodes: 1
+        FUNCTION id: 32, function_name: modulo, function_type: ordinary, result_type: UInt8
           ARGUMENTS
-            LIST id: 31, nodes: 2
-              COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 11
-              CONSTANT id: 32, constant_value: UInt64_2, constant_value_type: UInt8
+            LIST id: 33, nodes: 2
+              COLUMN id: 34, column_name: number, result_type: UInt64, source_id: 11
+              CONSTANT id: 35, constant_value: UInt64_2, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 33, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 36, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 34, nodes: 2
-          FUNCTION id: 35, function_name: multiply, function_type: ordinary, result_type: Float64
+        LIST id: 37, nodes: 2
+          FUNCTION id: 38, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 36, nodes: 2
-                CONSTANT id: 37, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 39, nodes: 2
+                CONSTANT id: 40, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 38, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 41, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 39, nodes: 1
-                          CONSTANT id: 40, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 41, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 42, nodes: 1
+                          CONSTANT id: 43, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 44, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 42, nodes: 1
-                      COLUMN id: 43, column_name: number, result_type: UInt64, source_id: 11
-          CONSTANT id: 44, constant_value: Float64_3465735.3, constant_value_type: Float64
+                    LIST id: 45, nodes: 1
+                      COLUMN id: 46, column_name: number, result_type: UInt64, source_id: 11
+          CONSTANT id: 47, constant_value: Float64_3465735.3, constant_value_type: Float64
   ORDER BY
-    LIST id: 45, nodes: 1
-      SORT id: 46, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 48, nodes: 1
+      SORT id: 49, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 47, function_name: multiply, function_type: ordinary, result_type: Float64
+          FUNCTION id: 50, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 48, nodes: 2
-                CONSTANT id: 49, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 51, nodes: 2
+                CONSTANT id: 52, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 53, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 6, nodes: 1
-                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 50, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 54, nodes: 1
+                          CONSTANT id: 55, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 56, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 51, nodes: 1
-                      COLUMN id: 52, column_name: number, result_type: UInt64, source_id: 11
+                    LIST id: 57, nodes: 1
+                      COLUMN id: 58, column_name: number, result_type: UInt64, source_id: 11
 QUERY id: 0, group_by_type: grouping_sets
   PROJECTION COLUMNS
     k Float64
@@ -118,49 +118,49 @@ QUERY id: 0, group_by_type: grouping_sets
         FUNCTION id: 20, function_name: modulo, function_type: ordinary, result_type: UInt8
           ARGUMENTS
             LIST id: 21, nodes: 2
-              COLUMN id: 18, column_name: number, result_type: UInt64, source_id: 11
-              CONSTANT id: 22, constant_value: UInt64_2, constant_value_type: UInt8
-      LIST id: 23, nodes: 1
-        FUNCTION id: 24, function_name: modulo, function_type: ordinary, result_type: UInt8
+              COLUMN id: 22, column_name: number, result_type: UInt64, source_id: 11
+              CONSTANT id: 23, constant_value: UInt64_2, constant_value_type: UInt8
+      LIST id: 24, nodes: 1
+        FUNCTION id: 25, function_name: modulo, function_type: ordinary, result_type: UInt8
           ARGUMENTS
-            LIST id: 25, nodes: 2
-              COLUMN id: 18, column_name: number, result_type: UInt64, source_id: 11
-              CONSTANT id: 26, constant_value: UInt64_4, constant_value_type: UInt8
+            LIST id: 26, nodes: 2
+              COLUMN id: 27, column_name: number, result_type: UInt64, source_id: 11
+              CONSTANT id: 28, constant_value: UInt64_4, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 27, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 29, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 28, nodes: 2
-          FUNCTION id: 29, function_name: multiply, function_type: ordinary, result_type: Float64
+        LIST id: 30, nodes: 2
+          FUNCTION id: 31, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 30, nodes: 2
-                CONSTANT id: 31, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 32, nodes: 2
+                CONSTANT id: 33, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 32, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 34, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 33, nodes: 1
-                          CONSTANT id: 34, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 35, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 35, nodes: 1
+                          CONSTANT id: 36, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 37, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 36, nodes: 1
-                      COLUMN id: 37, column_name: number, result_type: UInt64, source_id: 11
-          CONSTANT id: 38, constant_value: Float64_3465735.3, constant_value_type: Float64
+                    LIST id: 38, nodes: 1
+                      COLUMN id: 39, column_name: number, result_type: UInt64, source_id: 11
+          CONSTANT id: 40, constant_value: Float64_3465735.3, constant_value_type: Float64
   ORDER BY
-    LIST id: 39, nodes: 1
-      SORT id: 40, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 41, nodes: 1
+      SORT id: 42, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 41, function_name: multiply, function_type: ordinary, result_type: Float64
+          FUNCTION id: 43, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 42, nodes: 2
-                CONSTANT id: 43, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 44, nodes: 2
+                CONSTANT id: 45, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 46, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 6, nodes: 1
-                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 44, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 47, nodes: 1
+                          CONSTANT id: 48, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 49, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 45, nodes: 1
-                      COLUMN id: 46, column_name: number, result_type: UInt64, source_id: 11
+                    LIST id: 50, nodes: 1
+                      COLUMN id: 51, column_name: number, result_type: UInt64, source_id: 11
 QUERY id: 0, group_by_type: grouping_sets
   PROJECTION COLUMNS
     k Float64
@@ -198,54 +198,54 @@ QUERY id: 0, group_by_type: grouping_sets
               FUNCTION id: 22, function_name: modulo, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
                   LIST id: 23, nodes: 2
-                    COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 11
-                    CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
-        FUNCTION id: 25, function_name: modulo, function_type: ordinary, result_type: UInt8
+                    COLUMN id: 24, column_name: number, result_type: UInt64, source_id: 11
+                    CONSTANT id: 25, constant_value: UInt64_3, constant_value_type: UInt8
+        FUNCTION id: 26, function_name: modulo, function_type: ordinary, result_type: UInt8
           ARGUMENTS
-            LIST id: 26, nodes: 2
-              COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 11
-              CONSTANT id: 27, constant_value: UInt64_3, constant_value_type: UInt8
-      LIST id: 28, nodes: 1
-        FUNCTION id: 29, function_name: modulo, function_type: ordinary, result_type: UInt8
+            LIST id: 27, nodes: 2
+              COLUMN id: 28, column_name: number, result_type: UInt64, source_id: 11
+              CONSTANT id: 29, constant_value: UInt64_3, constant_value_type: UInt8
+      LIST id: 30, nodes: 1
+        FUNCTION id: 31, function_name: modulo, function_type: ordinary, result_type: UInt8
           ARGUMENTS
-            LIST id: 30, nodes: 2
-              COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 11
-              CONSTANT id: 31, constant_value: UInt64_2, constant_value_type: UInt8
+            LIST id: 32, nodes: 2
+              COLUMN id: 33, column_name: number, result_type: UInt64, source_id: 11
+              CONSTANT id: 34, constant_value: UInt64_2, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 32, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 35, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 33, nodes: 2
-          FUNCTION id: 34, function_name: multiply, function_type: ordinary, result_type: Float64
+        LIST id: 36, nodes: 2
+          FUNCTION id: 37, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 35, nodes: 2
-                CONSTANT id: 36, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 38, nodes: 2
+                CONSTANT id: 39, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 37, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 40, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 38, nodes: 1
-                          CONSTANT id: 39, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 40, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 41, nodes: 1
+                          CONSTANT id: 42, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 43, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 41, nodes: 1
-                      COLUMN id: 42, column_name: number, result_type: UInt64, source_id: 11
-          CONSTANT id: 43, constant_value: Float64_3465735.3, constant_value_type: Float64
+                    LIST id: 44, nodes: 1
+                      COLUMN id: 45, column_name: number, result_type: UInt64, source_id: 11
+          CONSTANT id: 46, constant_value: Float64_3465735.3, constant_value_type: Float64
   ORDER BY
-    LIST id: 44, nodes: 1
-      SORT id: 45, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 47, nodes: 1
+      SORT id: 48, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 46, function_name: multiply, function_type: ordinary, result_type: Float64
+          FUNCTION id: 49, function_name: multiply, function_type: ordinary, result_type: Float64
             ARGUMENTS
-              LIST id: 47, nodes: 2
-                CONSTANT id: 48, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
+              LIST id: 50, nodes: 2
+                CONSTANT id: 51, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                   EXPRESSION
-                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
+                    FUNCTION id: 52, function_name: log, function_type: ordinary, result_type: Float64
                       ARGUMENTS
-                        LIST id: 6, nodes: 1
-                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 49, function_name: avg, function_type: aggregate, result_type: Float64
+                        LIST id: 53, nodes: 1
+                          CONSTANT id: 54, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 55, function_name: avg, function_type: aggregate, result_type: Float64
                   ARGUMENTS
-                    LIST id: 50, nodes: 1
-                      COLUMN id: 51, column_name: number, result_type: UInt64, source_id: 11
+                    LIST id: 56, nodes: 1
+                      COLUMN id: 57, column_name: number, result_type: UInt64, source_id: 11
 QUERY id: 0, group_by_type: grouping_sets
   PROJECTION COLUMNS
     count() UInt64
@@ -265,21 +265,21 @@ QUERY id: 0, group_by_type: grouping_sets
         FUNCTION id: 10, function_name: modulo, function_type: ordinary, result_type: UInt8
           ARGUMENTS
             LIST id: 11, nodes: 2
-              COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 3
-              CONSTANT id: 12, constant_value: UInt64_2, constant_value_type: UInt8
-        FUNCTION id: 13, function_name: modulo, function_type: ordinary, result_type: UInt8
+              COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 3
+              CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
+        FUNCTION id: 14, function_name: modulo, function_type: ordinary, result_type: UInt8
           ARGUMENTS
-            LIST id: 14, nodes: 2
-              COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 3
-              CONSTANT id: 15, constant_value: UInt64_3, constant_value_type: UInt8
-      LIST id: 16, nodes: 2
-        FUNCTION id: 17, function_name: divide, function_type: ordinary, result_type: Float64
+            LIST id: 15, nodes: 2
+              COLUMN id: 16, column_name: number, result_type: UInt64, source_id: 3
+              CONSTANT id: 17, constant_value: UInt64_3, constant_value_type: UInt8
+      LIST id: 18, nodes: 2
+        FUNCTION id: 19, function_name: divide, function_type: ordinary, result_type: Float64
           ARGUMENTS
-            LIST id: 18, nodes: 2
-              COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 3
-              CONSTANT id: 19, constant_value: UInt64_2, constant_value_type: UInt8
-        FUNCTION id: 20, function_name: divide, function_type: ordinary, result_type: Float64
+            LIST id: 20, nodes: 2
+              COLUMN id: 21, column_name: number, result_type: UInt64, source_id: 3
+              CONSTANT id: 22, constant_value: UInt64_2, constant_value_type: UInt8
+        FUNCTION id: 23, function_name: divide, function_type: ordinary, result_type: Float64
           ARGUMENTS
-            LIST id: 21, nodes: 2
-              COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 3
-              CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+            LIST id: 24, nodes: 2
+              COLUMN id: 25, column_name: number, result_type: UInt64, source_id: 3
+              CONSTANT id: 26, constant_value: UInt64_3, constant_value_type: UInt8
diff --git a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
index d77fd1028f2c..8affeb003109 100644
--- a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
+++ b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
@@ -319,31 +319,31 @@ QUERY id: 0
                       LIST id: 16, nodes: 2
                         CONSTANT id: 17, constant_value: \'google\', constant_value_type: String
                         CONSTANT id: 18, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2)\', constant_value_type: String
-      FUNCTION id: 2, function_name: toString, function_type: ordinary, result_type: String
+      FUNCTION id: 19, function_name: toString, function_type: ordinary, result_type: String
         ARGUMENTS
-          LIST id: 3, nodes: 1
-            FUNCTION id: 4, function_name: if, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2)
+          LIST id: 20, nodes: 1
+            FUNCTION id: 21, function_name: if, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2)
               ARGUMENTS
-                LIST id: 5, nodes: 3
-                  FUNCTION id: 6, function_name: greater, function_type: ordinary, result_type: UInt8
+                LIST id: 22, nodes: 3
+                  FUNCTION id: 23, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 7, nodes: 2
-                        COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                        CONSTANT id: 10, constant_value: UInt64_5, constant_value_type: UInt8
-                  FUNCTION id: 11, function_name: _CAST, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2)
+                      LIST id: 24, nodes: 2
+                        COLUMN id: 25, column_name: number, result_type: UInt64, source_id: 9
+                        CONSTANT id: 26, constant_value: UInt64_5, constant_value_type: UInt8
+                  FUNCTION id: 27, function_name: _CAST, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2)
                     ARGUMENTS
-                      LIST id: 12, nodes: 2
-                        CONSTANT id: 13, constant_value: \'censor.net\', constant_value_type: String
-                        CONSTANT id: 14, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2)\', constant_value_type: String
-                  FUNCTION id: 15, function_name: _CAST, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2)
+                      LIST id: 28, nodes: 2
+                        CONSTANT id: 29, constant_value: \'censor.net\', constant_value_type: String
+                        CONSTANT id: 30, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2)\', constant_value_type: String
+                  FUNCTION id: 31, function_name: _CAST, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2)
                     ARGUMENTS
-                      LIST id: 16, nodes: 2
-                        CONSTANT id: 17, constant_value: \'google\', constant_value_type: String
-                        CONSTANT id: 18, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2)\', constant_value_type: String
+                      LIST id: 32, nodes: 2
+                        CONSTANT id: 33, constant_value: \'google\', constant_value_type: String
+                        CONSTANT id: 34, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2)\', constant_value_type: String
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: system.numbers
   LIMIT
-    CONSTANT id: 19, constant_value: UInt64_10, constant_value_type: UInt64
+    CONSTANT id: 35, constant_value: UInt64_10, constant_value_type: UInt64
 other	other
 other	other
 google	google
@@ -383,28 +383,28 @@ QUERY id: 0
                       LIST id: 14, nodes: 2
                         CONSTANT id: 15, constant_value: \'other\', constant_value_type: String
                         CONSTANT id: 16, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4)\', constant_value_type: String
-      FUNCTION id: 2, function_name: toString, function_type: ordinary, result_type: String
+      FUNCTION id: 17, function_name: toString, function_type: ordinary, result_type: String
         ARGUMENTS
-          LIST id: 3, nodes: 1
-            FUNCTION id: 4, function_name: transform, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4)
+          LIST id: 18, nodes: 1
+            FUNCTION id: 19, function_name: transform, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4)
               ARGUMENTS
-                LIST id: 5, nodes: 4
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 8, constant_value: Array_[UInt64_2, UInt64_4, UInt64_6], constant_value_type: Array(UInt8)
-                  FUNCTION id: 9, function_name: _CAST, function_type: ordinary, result_type: Array(Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4))
+                LIST id: 20, nodes: 4
+                  COLUMN id: 21, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 22, constant_value: Array_[UInt64_2, UInt64_4, UInt64_6], constant_value_type: Array(UInt8)
+                  FUNCTION id: 23, function_name: _CAST, function_type: ordinary, result_type: Array(Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4))
                     ARGUMENTS
-                      LIST id: 10, nodes: 2
-                        CONSTANT id: 11, constant_value: Array_[\'google\', \'censor.net\', \'yahoo\'], constant_value_type: Array(String)
-                        CONSTANT id: 12, constant_value: \'Array(Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4))\', constant_value_type: String
-                  FUNCTION id: 13, function_name: _CAST, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4)
+                      LIST id: 24, nodes: 2
+                        CONSTANT id: 25, constant_value: Array_[\'google\', \'censor.net\', \'yahoo\'], constant_value_type: Array(String)
+                        CONSTANT id: 26, constant_value: \'Array(Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4))\', constant_value_type: String
+                  FUNCTION id: 27, function_name: _CAST, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4)
                     ARGUMENTS
-                      LIST id: 14, nodes: 2
-                        CONSTANT id: 15, constant_value: \'other\', constant_value_type: String
-                        CONSTANT id: 16, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4)\', constant_value_type: String
+                      LIST id: 28, nodes: 2
+                        CONSTANT id: 29, constant_value: \'other\', constant_value_type: String
+                        CONSTANT id: 30, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4)\', constant_value_type: String
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: system.numbers
   LIMIT
-    CONSTANT id: 17, constant_value: UInt64_10, constant_value_type: UInt64
+    CONSTANT id: 31, constant_value: UInt64_10, constant_value_type: UInt64
 other
 other
 other
diff --git a/tests/queries/0_stateless/02518_rewrite_aggregate_function_with_if.reference b/tests/queries/0_stateless/02518_rewrite_aggregate_function_with_if.reference
index 42a9a0a2481f..5af1b2bcf494 100644
--- a/tests/queries/0_stateless/02518_rewrite_aggregate_function_with_if.reference
+++ b/tests/queries/0_stateless/02518_rewrite_aggregate_function_with_if.reference
@@ -18,13 +18,13 @@ QUERY id: 0
                       LIST id: 7, nodes: 2
                         COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
                         CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
-                  COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                  CONSTANT id: 11, constant_value: UInt64_0, constant_value_type: UInt8
+                  COLUMN id: 11, column_name: number, result_type: UInt64, source_id: 9
+                  CONSTANT id: 12, constant_value: UInt64_0, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 9, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select sum(if(number % 2, 0, number)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -43,12 +43,12 @@ QUERY id: 0
                         COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
                         CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
                   CONSTANT id: 11, constant_value: UInt64_0, constant_value_type: UInt8
-                  COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
+                  COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE_FUNCTION id: 9, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select sum(if(number % 2, number, null)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -66,13 +66,13 @@ QUERY id: 0
                       LIST id: 7, nodes: 2
                         COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
                         CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
-                  COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                  CONSTANT id: 11, constant_value: NULL, constant_value_type: Nullable(Nothing)
+                  COLUMN id: 11, column_name: number, result_type: UInt64, source_id: 9
+                  CONSTANT id: 12, constant_value: NULL, constant_value_type: Nullable(Nothing)
   JOIN TREE
     TABLE_FUNCTION id: 9, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select sum(if(number % 2, null, number)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -91,12 +91,12 @@ QUERY id: 0
                         COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
                         CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
                   CONSTANT id: 11, constant_value: NULL, constant_value_type: Nullable(Nothing)
-                  COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
+                  COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE_FUNCTION id: 9, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select avg(if(number % 2, number, null)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -114,13 +114,13 @@ QUERY id: 0
                       LIST id: 7, nodes: 2
                         COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
                         CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
-                  COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                  CONSTANT id: 11, constant_value: NULL, constant_value_type: Nullable(Nothing)
+                  COLUMN id: 11, column_name: number, result_type: UInt64, source_id: 9
+                  CONSTANT id: 12, constant_value: NULL, constant_value_type: Nullable(Nothing)
   JOIN TREE
     TABLE_FUNCTION id: 9, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select avg(if(number % 2, null, number)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -139,12 +139,12 @@ QUERY id: 0
                         COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
                         CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
                   CONSTANT id: 11, constant_value: NULL, constant_value_type: Nullable(Nothing)
-                  COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
+                  COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE_FUNCTION id: 9, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select quantiles(0.5, 0.9, 0.99)(if(number % 2, number, null)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -167,13 +167,13 @@ QUERY id: 0
                       LIST id: 11, nodes: 2
                         COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 13
                         CONSTANT id: 14, constant_value: UInt64_2, constant_value_type: UInt8
-                  COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 13
-                  CONSTANT id: 15, constant_value: NULL, constant_value_type: Nullable(Nothing)
+                  COLUMN id: 15, column_name: number, result_type: UInt64, source_id: 13
+                  CONSTANT id: 16, constant_value: NULL, constant_value_type: Nullable(Nothing)
   JOIN TREE
     TABLE_FUNCTION id: 13, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 16, nodes: 1
-          CONSTANT id: 17, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 17, nodes: 1
+          CONSTANT id: 18, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select quantiles(0.5, 0.9, 0.99)(if(number % 2, null, number)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -197,12 +197,12 @@ QUERY id: 0
                         COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 13
                         CONSTANT id: 14, constant_value: UInt64_2, constant_value_type: UInt8
                   CONSTANT id: 15, constant_value: NULL, constant_value_type: Nullable(Nothing)
-                  COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 13
+                  COLUMN id: 16, column_name: number, result_type: UInt64, source_id: 13
   JOIN TREE
     TABLE_FUNCTION id: 13, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 16, nodes: 1
-          CONSTANT id: 17, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 17, nodes: 1
+          CONSTANT id: 18, constant_value: UInt64_100, constant_value_type: UInt8
 set optimize_rewrite_aggregate_function_with_if = true;
 EXPLAIN QUERY TREE run_passes = 1 select sum(if(number % 2, number, 0)) from numbers(100);
 QUERY id: 0
@@ -217,13 +217,13 @@ QUERY id: 0
             FUNCTION id: 6, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 7, nodes: 2
-                  COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-                  CONSTANT id: 8, constant_value: UInt64_2, constant_value_type: UInt8
+                  COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 5
+                  CONSTANT id: 9, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 5, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 9, nodes: 1
-          CONSTANT id: 10, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 10, nodes: 1
+          CONSTANT id: 11, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select sum(if(number % 2, 0, number)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -240,13 +240,13 @@ QUERY id: 0
                   FUNCTION id: 8, function_name: modulo, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 9, nodes: 2
-                        COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-                        CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
+                        COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 5
+                        CONSTANT id: 11, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 5, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 11, nodes: 1
-          CONSTANT id: 12, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 12, nodes: 1
+          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select sum(if(number % 2, number, null)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -264,13 +264,13 @@ QUERY id: 0
             FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 10, nodes: 2
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 11, constant_value: UInt64_2, constant_value_type: UInt8
+                  COLUMN id: 11, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 12, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select sum(if(number % 2, null, number)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -291,13 +291,13 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 12, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
+                        COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 14, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 14, nodes: 1
-          CONSTANT id: 15, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 15, nodes: 1
+          CONSTANT id: 16, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select avg(if(number % 2, number, null)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -315,13 +315,13 @@ QUERY id: 0
             FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 10, nodes: 2
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 11, constant_value: UInt64_2, constant_value_type: UInt8
+                  COLUMN id: 11, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 12, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select avg(if(number % 2, null, number)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -342,13 +342,13 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 12, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
+                        COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 14, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 14, nodes: 1
-          CONSTANT id: 15, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 15, nodes: 1
+          CONSTANT id: 16, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select quantiles(0.5, 0.9, 0.99)(if(number % 2, number, null)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -371,13 +371,13 @@ QUERY id: 0
             FUNCTION id: 13, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 14, nodes: 2
-                  COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 11
-                  CONSTANT id: 15, constant_value: UInt64_2, constant_value_type: UInt8
+                  COLUMN id: 15, column_name: number, result_type: UInt64, source_id: 11
+                  CONSTANT id: 16, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 11, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 16, nodes: 1
-          CONSTANT id: 17, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 17, nodes: 1
+          CONSTANT id: 18, constant_value: UInt64_100, constant_value_type: UInt8
 EXPLAIN QUERY TREE run_passes = 1 select quantiles(0.5, 0.9, 0.99)(if(number % 2, null, number)) from numbers(100);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -403,10 +403,10 @@ QUERY id: 0
                   FUNCTION id: 15, function_name: modulo, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 16, nodes: 2
-                        COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 11
-                        CONSTANT id: 17, constant_value: UInt64_2, constant_value_type: UInt8
+                        COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
+                        CONSTANT id: 18, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 11, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 18, nodes: 1
-          CONSTANT id: 19, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 19, nodes: 1
+          CONSTANT id: 20, constant_value: UInt64_100, constant_value_type: UInt8
diff --git a/tests/queries/0_stateless/02534_analyzer_grouping_function.reference b/tests/queries/0_stateless/02534_analyzer_grouping_function.reference
index 1b4966445477..23018447f586 100644
--- a/tests/queries/0_stateless/02534_analyzer_grouping_function.reference
+++ b/tests/queries/0_stateless/02534_analyzer_grouping_function.reference
@@ -19,8 +19,8 @@ QUERY id: 0
     TABLE id: 5, alias: __table1, table_name: default.test_table
   GROUP BY
     LIST id: 9, nodes: 2
-      COLUMN id: 4, column_name: id, result_type: UInt64, source_id: 5
-      COLUMN id: 8, column_name: value, result_type: String, source_id: 5
+      COLUMN id: 10, column_name: id, result_type: UInt64, source_id: 5
+      COLUMN id: 11, column_name: value, result_type: String, source_id: 5
 SELECT grouping(id) AS grouping_id, grouping(value) AS grouping_value, id, value FROM test_table
 GROUP BY id, value ORDER BY grouping_id, grouping_value;
 0	0	0	Value
@@ -45,8 +45,8 @@ QUERY id: 0, group_by_type: rollup
     TABLE id: 6, alias: __table1, table_name: default.test_table
   GROUP BY
     LIST id: 11, nodes: 2
-      COLUMN id: 5, column_name: id, result_type: UInt64, source_id: 6
-      COLUMN id: 10, column_name: value, result_type: String, source_id: 6
+      COLUMN id: 12, column_name: id, result_type: UInt64, source_id: 6
+      COLUMN id: 13, column_name: value, result_type: String, source_id: 6
 SELECT grouping(id) AS grouping_id, grouping(value) AS grouping_value, id, value FROM test_table
 GROUP BY ROLLUP (id, value) ORDER BY grouping_id, grouping_value;
 0	0	0	Value
@@ -73,8 +73,8 @@ QUERY id: 0, group_by_type: cube
     TABLE id: 6, alias: __table1, table_name: default.test_table
   GROUP BY
     LIST id: 11, nodes: 2
-      COLUMN id: 5, column_name: id, result_type: UInt64, source_id: 6
-      COLUMN id: 10, column_name: value, result_type: String, source_id: 6
+      COLUMN id: 12, column_name: id, result_type: UInt64, source_id: 6
+      COLUMN id: 13, column_name: value, result_type: String, source_id: 6
 SELECT grouping(id) AS grouping_id, grouping(value) AS grouping_value, id, value FROM test_table
 GROUP BY CUBE (id, value) ORDER BY grouping_id, grouping_value;
 0	0	0	Value
@@ -103,9 +103,9 @@ QUERY id: 0, group_by_type: grouping_sets
   GROUP BY
     LIST id: 11, nodes: 2
       LIST id: 12, nodes: 1
-        COLUMN id: 5, column_name: id, result_type: UInt64, source_id: 6
-      LIST id: 13, nodes: 1
-        COLUMN id: 10, column_name: value, result_type: String, source_id: 6
+        COLUMN id: 13, column_name: id, result_type: UInt64, source_id: 6
+      LIST id: 14, nodes: 1
+        COLUMN id: 15, column_name: value, result_type: String, source_id: 6
 SELECT grouping(id) AS grouping_id, grouping(value) AS grouping_value, id, value FROM test_table
 GROUP BY GROUPING SETS (id, value) ORDER BY grouping_id, grouping_value;
 0	1	0	
@@ -132,9 +132,9 @@ QUERY id: 0, group_by_type: grouping_sets
   GROUP BY
     LIST id: 11, nodes: 2
       LIST id: 12, nodes: 1
-        COLUMN id: 5, column_name: id, result_type: UInt64, source_id: 6
-      LIST id: 13, nodes: 1
-        COLUMN id: 10, column_name: value, result_type: String, source_id: 6
+        COLUMN id: 13, column_name: id, result_type: UInt64, source_id: 6
+      LIST id: 14, nodes: 1
+        COLUMN id: 15, column_name: value, result_type: String, source_id: 6
 SELECT grouping(id) AS grouping_id, grouping(value) AS grouping_value, id, value FROM test_table
 GROUP BY GROUPING SETS ((id), (value)) ORDER BY grouping_id, grouping_value;
 0	1	0	
diff --git a/tests/queries/0_stateless/02564_analyzer_cross_to_inner.reference b/tests/queries/0_stateless/02564_analyzer_cross_to_inner.reference
index 6508b9f9205e..123ade0f4afa 100644
--- a/tests/queries/0_stateless/02564_analyzer_cross_to_inner.reference
+++ b/tests/queries/0_stateless/02564_analyzer_cross_to_inner.reference
@@ -63,17 +63,17 @@ QUERY id: 0
                   FUNCTION id: 28, function_name: plus, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
                       LIST id: 29, nodes: 2
-                        COLUMN id: 24, column_name: a, result_type: UInt64, source_id: 25
-                        CONSTANT id: 30, constant_value: UInt64_1, constant_value_type: UInt8
-                  COLUMN id: 31, column_name: b, result_type: UInt64, source_id: 25
+                        COLUMN id: 30, column_name: a, result_type: UInt64, source_id: 25
+                        CONSTANT id: 31, constant_value: UInt64_1, constant_value_type: UInt8
+                  COLUMN id: 32, column_name: b, result_type: UInt64, source_id: 25
       JOIN EXPRESSION
-        FUNCTION id: 32, function_name: equals, function_type: ordinary, result_type: UInt8
+        FUNCTION id: 33, function_name: equals, function_type: ordinary, result_type: UInt8
           ARGUMENTS
-            LIST id: 33, nodes: 2
-              COLUMN id: 21, column_name: a, result_type: UInt64, source_id: 6
-              COLUMN id: 34, column_name: x, result_type: UInt64, source_id: 9
+            LIST id: 34, nodes: 2
+              COLUMN id: 35, column_name: a, result_type: UInt64, source_id: 6
+              COLUMN id: 36, column_name: x, result_type: UInt64, source_id: 9
   WHERE
-    CONSTANT id: 35, constant_value: UInt64_1, constant_value_type: UInt8
+    CONSTANT id: 37, constant_value: UInt64_1, constant_value_type: UInt8
 EXPLAIN QUERY TREE
 SELECT * FROM t1, t2, (SELECT a as x from t3 where a + 1 = b ) as t3
 WHERE t1.a = if(t2.b > 0, t2.a, 0) AND t2.a = t3.x AND 1
@@ -114,33 +114,33 @@ QUERY id: 0
                   FUNCTION id: 16, function_name: plus, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
                       LIST id: 17, nodes: 2
-                        COLUMN id: 12, column_name: a, result_type: UInt64, source_id: 13
-                        CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
-                  COLUMN id: 19, column_name: b, result_type: UInt64, source_id: 13
+                        COLUMN id: 18, column_name: a, result_type: UInt64, source_id: 13
+                        CONSTANT id: 19, constant_value: UInt64_1, constant_value_type: UInt8
+                  COLUMN id: 20, column_name: b, result_type: UInt64, source_id: 13
   WHERE
-    FUNCTION id: 20, function_name: and, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 21, function_name: and, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 21, nodes: 3
-          FUNCTION id: 22, function_name: equals, function_type: ordinary, result_type: UInt8
+        LIST id: 22, nodes: 3
+          FUNCTION id: 23, function_name: equals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 23, nodes: 2
-                COLUMN id: 24, column_name: a, result_type: UInt64, source_id: 3
-                FUNCTION id: 25, function_name: if, function_type: ordinary, result_type: UInt64
+              LIST id: 24, nodes: 2
+                COLUMN id: 25, column_name: a, result_type: UInt64, source_id: 3
+                FUNCTION id: 26, function_name: if, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 26, nodes: 3
-                      FUNCTION id: 27, function_name: greater, function_type: ordinary, result_type: UInt8
+                    LIST id: 27, nodes: 3
+                      FUNCTION id: 28, function_name: greater, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
-                          LIST id: 28, nodes: 2
-                            COLUMN id: 29, column_name: b, result_type: UInt64, source_id: 6
-                            CONSTANT id: 30, constant_value: UInt64_0, constant_value_type: UInt8
-                      COLUMN id: 31, column_name: a, result_type: UInt64, source_id: 6
-                      CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 33, function_name: equals, function_type: ordinary, result_type: UInt8
+                          LIST id: 29, nodes: 2
+                            COLUMN id: 30, column_name: b, result_type: UInt64, source_id: 6
+                            CONSTANT id: 31, constant_value: UInt64_0, constant_value_type: UInt8
+                      COLUMN id: 32, column_name: a, result_type: UInt64, source_id: 6
+                      CONSTANT id: 33, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 34, function_name: equals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 34, nodes: 2
-                COLUMN id: 31, column_name: a, result_type: UInt64, source_id: 6
-                COLUMN id: 35, column_name: x, result_type: UInt64, source_id: 9
-          CONSTANT id: 36, constant_value: UInt64_1, constant_value_type: UInt8
+              LIST id: 35, nodes: 2
+                COLUMN id: 36, column_name: a, result_type: UInt64, source_id: 6
+                COLUMN id: 37, column_name: x, result_type: UInt64, source_id: 9
+          CONSTANT id: 38, constant_value: UInt64_1, constant_value_type: UInt8
   SETTINGS cross_to_inner_join_rewrite=0
 EXPLAIN QUERY TREE
 SELECT * FROM t1, t2, (SELECT a as x from t3 where a + 1 = b ) as t3
@@ -198,9 +198,9 @@ QUERY id: 0
                   FUNCTION id: 28, function_name: plus, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
                       LIST id: 29, nodes: 2
-                        COLUMN id: 24, column_name: a, result_type: UInt64, source_id: 25
-                        CONSTANT id: 30, constant_value: UInt64_1, constant_value_type: UInt8
-                  COLUMN id: 31, column_name: b, result_type: UInt64, source_id: 25
+                        COLUMN id: 30, column_name: a, result_type: UInt64, source_id: 25
+                        CONSTANT id: 31, constant_value: UInt64_1, constant_value_type: UInt8
+                  COLUMN id: 32, column_name: b, result_type: UInt64, source_id: 25
 EXPLAIN QUERY TREE dump_ast=1
 SELECT * FROM t1, t2, t3, t4, t5
 WHERE t2.a = t3.a AND t1.b = t5.b;
@@ -402,25 +402,25 @@ QUERY id: 0
                   FUNCTION id: 26, function_name: equals, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 27, nodes: 2
-                        COLUMN id: 22, column_name: a, result_type: UInt64, source_id: 3
-                        COLUMN id: 28, column_name: a, result_type: UInt64, source_id: 12
-                  FUNCTION id: 29, function_name: equals, function_type: ordinary, result_type: UInt8
+                        COLUMN id: 28, column_name: a, result_type: UInt64, source_id: 3
+                        COLUMN id: 29, column_name: a, result_type: UInt64, source_id: 12
+                  FUNCTION id: 30, function_name: equals, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 30, nodes: 2
-                        COLUMN id: 31, column_name: b, result_type: UInt64, source_id: 9
-                        COLUMN id: 32, column_name: b, result_type: UInt64, source_id: 12
+                      LIST id: 31, nodes: 2
+                        COLUMN id: 32, column_name: b, result_type: UInt64, source_id: 9
+                        COLUMN id: 33, column_name: b, result_type: UInt64, source_id: 12
       TABLE EXPRESSION
-        JOIN id: 33, strictness: ALL, kind: INNER
+        JOIN id: 34, strictness: ALL, kind: INNER
           LEFT TABLE EXPRESSION
             TABLE id: 6, alias: __table2, table_name: default.t2
           RIGHT TABLE EXPRESSION
             TABLE id: 15, alias: __table5, table_name: default.t5
           JOIN EXPRESSION
-            FUNCTION id: 34, function_name: equals, function_type: ordinary, result_type: UInt8
+            FUNCTION id: 35, function_name: equals, function_type: ordinary, result_type: UInt8
               ARGUMENTS
-                LIST id: 35, nodes: 2
-                  COLUMN id: 36, column_name: a, result_type: UInt64, source_id: 6
-                  COLUMN id: 37, column_name: a, result_type: UInt64, source_id: 15
+                LIST id: 36, nodes: 2
+                  COLUMN id: 37, column_name: a, result_type: UInt64, source_id: 6
+                  COLUMN id: 38, column_name: a, result_type: UInt64, source_id: 15
 
 SELECT
     __table1.a AS `t1.a`,
@@ -494,60 +494,60 @@ QUERY id: 0
                       FUNCTION id: 27, function_name: equals, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
                           LIST id: 28, nodes: 2
-                            COLUMN id: 23, column_name: a, result_type: UInt64, source_id: 3
-                            COLUMN id: 29, column_name: a, result_type: UInt64, source_id: 9
-                      FUNCTION id: 30, function_name: equals, function_type: ordinary, result_type: UInt8
+                            COLUMN id: 29, column_name: a, result_type: UInt64, source_id: 3
+                            COLUMN id: 30, column_name: a, result_type: UInt64, source_id: 9
+                      FUNCTION id: 31, function_name: equals, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
-                          LIST id: 31, nodes: 2
-                            COLUMN id: 24, column_name: a, result_type: UInt64, source_id: 6
-                            COLUMN id: 29, column_name: a, result_type: UInt64, source_id: 9
+                          LIST id: 32, nodes: 2
+                            COLUMN id: 33, column_name: a, result_type: UInt64, source_id: 6
+                            COLUMN id: 34, column_name: a, result_type: UInt64, source_id: 9
           RIGHT TABLE EXPRESSION
             TABLE id: 12, alias: __table4, table_name: default.t4
           JOIN EXPRESSION
-            FUNCTION id: 32, function_name: and, function_type: ordinary, result_type: UInt8
+            FUNCTION id: 35, function_name: and, function_type: ordinary, result_type: UInt8
               ARGUMENTS
-                LIST id: 33, nodes: 3
-                  FUNCTION id: 34, function_name: equals, function_type: ordinary, result_type: UInt8
-                    ARGUMENTS
-                      LIST id: 35, nodes: 2
-                        COLUMN id: 23, column_name: a, result_type: UInt64, source_id: 3
-                        COLUMN id: 36, column_name: a, result_type: UInt64, source_id: 12
+                LIST id: 36, nodes: 3
                   FUNCTION id: 37, function_name: equals, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 38, nodes: 2
-                        COLUMN id: 24, column_name: a, result_type: UInt64, source_id: 6
-                        COLUMN id: 36, column_name: a, result_type: UInt64, source_id: 12
-                  FUNCTION id: 39, function_name: equals, function_type: ordinary, result_type: UInt8
+                        COLUMN id: 39, column_name: a, result_type: UInt64, source_id: 3
+                        COLUMN id: 40, column_name: a, result_type: UInt64, source_id: 12
+                  FUNCTION id: 41, function_name: equals, function_type: ordinary, result_type: UInt8
+                    ARGUMENTS
+                      LIST id: 42, nodes: 2
+                        COLUMN id: 43, column_name: a, result_type: UInt64, source_id: 6
+                        COLUMN id: 44, column_name: a, result_type: UInt64, source_id: 12
+                  FUNCTION id: 45, function_name: equals, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 40, nodes: 2
-                        COLUMN id: 29, column_name: a, result_type: UInt64, source_id: 9
-                        COLUMN id: 36, column_name: a, result_type: UInt64, source_id: 12
+                      LIST id: 46, nodes: 2
+                        COLUMN id: 47, column_name: a, result_type: UInt64, source_id: 9
+                        COLUMN id: 48, column_name: a, result_type: UInt64, source_id: 12
       RIGHT TABLE EXPRESSION
         TABLE id: 15, alias: __table5, table_name: default.t5
       JOIN EXPRESSION
-        FUNCTION id: 41, function_name: and, function_type: ordinary, result_type: UInt8
+        FUNCTION id: 49, function_name: and, function_type: ordinary, result_type: UInt8
           ARGUMENTS
-            LIST id: 42, nodes: 4
-              FUNCTION id: 43, function_name: equals, function_type: ordinary, result_type: UInt8
+            LIST id: 50, nodes: 4
+              FUNCTION id: 51, function_name: equals, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
-                  LIST id: 44, nodes: 2
-                    COLUMN id: 23, column_name: a, result_type: UInt64, source_id: 3
-                    COLUMN id: 45, column_name: a, result_type: UInt64, source_id: 15
-              FUNCTION id: 46, function_name: equals, function_type: ordinary, result_type: UInt8
+                  LIST id: 52, nodes: 2
+                    COLUMN id: 53, column_name: a, result_type: UInt64, source_id: 3
+                    COLUMN id: 54, column_name: a, result_type: UInt64, source_id: 15
+              FUNCTION id: 55, function_name: equals, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
-                  LIST id: 47, nodes: 2
-                    COLUMN id: 24, column_name: a, result_type: UInt64, source_id: 6
-                    COLUMN id: 45, column_name: a, result_type: UInt64, source_id: 15
-              FUNCTION id: 48, function_name: equals, function_type: ordinary, result_type: UInt8
+                  LIST id: 56, nodes: 2
+                    COLUMN id: 57, column_name: a, result_type: UInt64, source_id: 6
+                    COLUMN id: 58, column_name: a, result_type: UInt64, source_id: 15
+              FUNCTION id: 59, function_name: equals, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
-                  LIST id: 49, nodes: 2
-                    COLUMN id: 29, column_name: a, result_type: UInt64, source_id: 9
-                    COLUMN id: 45, column_name: a, result_type: UInt64, source_id: 15
-              FUNCTION id: 50, function_name: equals, function_type: ordinary, result_type: UInt8
+                  LIST id: 60, nodes: 2
+                    COLUMN id: 61, column_name: a, result_type: UInt64, source_id: 9
+                    COLUMN id: 62, column_name: a, result_type: UInt64, source_id: 15
+              FUNCTION id: 63, function_name: equals, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
-                  LIST id: 51, nodes: 2
-                    COLUMN id: 36, column_name: a, result_type: UInt64, source_id: 12
-                    COLUMN id: 45, column_name: a, result_type: UInt64, source_id: 15
+                  LIST id: 64, nodes: 2
+                    COLUMN id: 65, column_name: a, result_type: UInt64, source_id: 12
+                    COLUMN id: 66, column_name: a, result_type: UInt64, source_id: 15
 
 SELECT
     __table1.a AS `t1.a`,
diff --git a/tests/queries/0_stateless/02564_analyzer_ssb_cross_to_inner.reference b/tests/queries/0_stateless/02564_analyzer_ssb_cross_to_inner.reference
index 0b5ad752f3a3..cf58d8bb5615 100644
--- a/tests/queries/0_stateless/02564_analyzer_ssb_cross_to_inner.reference
+++ b/tests/queries/0_stateless/02564_analyzer_ssb_cross_to_inner.reference
@@ -71,54 +71,54 @@ QUERY id: 0
           FUNCTION id: 42, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 43, nodes: 2
-                COLUMN id: 40, column_name: LO_QUANTITY, result_type: UInt8, source_id: 13
-                CONSTANT id: 44, constant_value: UInt64_44, constant_value_type: UInt8
-          FUNCTION id: 45, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
+                COLUMN id: 44, column_name: LO_QUANTITY, result_type: UInt8, source_id: 13
+                CONSTANT id: 45, constant_value: UInt64_44, constant_value_type: UInt8
+          FUNCTION id: 46, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 46, nodes: 2
-                COLUMN id: 21, column_name: LO_ORDERDATE, result_type: Date, source_id: 13
-                CONSTANT id: 47, constant_value: UInt64_9496, constant_value_type: Date
+              LIST id: 47, nodes: 2
+                COLUMN id: 48, column_name: LO_ORDERDATE, result_type: Date, source_id: 13
+                CONSTANT id: 49, constant_value: UInt64_9496, constant_value_type: Date
                   EXPRESSION
-                    FUNCTION id: 48, function_name: toDate, function_type: ordinary, result_type: Date
+                    FUNCTION id: 50, function_name: toDate, function_type: ordinary, result_type: Date
                       ARGUMENTS
-                        LIST id: 49, nodes: 1
-                          CONSTANT id: 50, constant_value: \'1996-01-01\', constant_value_type: String
-          FUNCTION id: 51, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
+                        LIST id: 51, nodes: 1
+                          CONSTANT id: 52, constant_value: \'1996-01-01\', constant_value_type: String
+          FUNCTION id: 53, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 52, nodes: 2
-                COLUMN id: 21, column_name: LO_ORDERDATE, result_type: Date, source_id: 13
-                CONSTANT id: 53, constant_value: UInt64_9861, constant_value_type: Date
+              LIST id: 54, nodes: 2
+                COLUMN id: 55, column_name: LO_ORDERDATE, result_type: Date, source_id: 13
+                CONSTANT id: 56, constant_value: UInt64_9861, constant_value_type: Date
                   EXPRESSION
-                    FUNCTION id: 54, function_name: toDate, function_type: ordinary, result_type: Date
+                    FUNCTION id: 57, function_name: toDate, function_type: ordinary, result_type: Date
                       ARGUMENTS
-                        LIST id: 55, nodes: 1
-                          CONSTANT id: 56, constant_value: \'1996-12-31\', constant_value_type: String
-          FUNCTION id: 57, function_name: equals, function_type: ordinary, result_type: LowCardinality(UInt8)
+                        LIST id: 58, nodes: 1
+                          CONSTANT id: 59, constant_value: \'1996-12-31\', constant_value_type: String
+          FUNCTION id: 60, function_name: equals, function_type: ordinary, result_type: LowCardinality(UInt8)
             ARGUMENTS
-              LIST id: 58, nodes: 2
-                COLUMN id: 59, column_name: S_NATION, result_type: LowCardinality(String), source_id: 5
-                CONSTANT id: 60, constant_value: \'UNITED KINGDOM\', constant_value_type: String
-          FUNCTION id: 61, function_name: equals, function_type: ordinary, result_type: LowCardinality(UInt8)
+              LIST id: 61, nodes: 2
+                COLUMN id: 62, column_name: S_NATION, result_type: LowCardinality(String), source_id: 5
+                CONSTANT id: 63, constant_value: \'UNITED KINGDOM\', constant_value_type: String
+          FUNCTION id: 64, function_name: equals, function_type: ordinary, result_type: LowCardinality(UInt8)
             ARGUMENTS
-              LIST id: 62, nodes: 2
-                COLUMN id: 63, column_name: P_CATEGORY, result_type: LowCardinality(String), source_id: 7
-                CONSTANT id: 64, constant_value: \'MFGR#21\', constant_value_type: String
+              LIST id: 65, nodes: 2
+                COLUMN id: 66, column_name: P_CATEGORY, result_type: LowCardinality(String), source_id: 7
+                CONSTANT id: 67, constant_value: \'MFGR#21\', constant_value_type: String
   GROUP BY
-    LIST id: 65, nodes: 3
-      COLUMN id: 2, column_name: D_YEARMONTHNUM, result_type: UInt32, source_id: 3
-      COLUMN id: 4, column_name: S_CITY, result_type: LowCardinality(String), source_id: 5
-      COLUMN id: 6, column_name: P_BRAND, result_type: LowCardinality(String), source_id: 7
+    LIST id: 68, nodes: 3
+      COLUMN id: 69, column_name: D_YEARMONTHNUM, result_type: UInt32, source_id: 3
+      COLUMN id: 70, column_name: S_CITY, result_type: LowCardinality(String), source_id: 5
+      COLUMN id: 71, column_name: P_BRAND, result_type: LowCardinality(String), source_id: 7
   ORDER BY
-    LIST id: 66, nodes: 3
-      SORT id: 67, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 72, nodes: 3
+      SORT id: 73, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          COLUMN id: 2, column_name: D_YEARMONTHNUM, result_type: UInt32, source_id: 3
-      SORT id: 68, sort_direction: ASCENDING, with_fill: 0
+          COLUMN id: 74, column_name: D_YEARMONTHNUM, result_type: UInt32, source_id: 3
+      SORT id: 75, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          COLUMN id: 4, column_name: S_CITY, result_type: LowCardinality(String), source_id: 5
-      SORT id: 69, sort_direction: ASCENDING, with_fill: 0
+          COLUMN id: 76, column_name: S_CITY, result_type: LowCardinality(String), source_id: 5
+      SORT id: 77, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          COLUMN id: 6, column_name: P_BRAND, result_type: LowCardinality(String), source_id: 7
+          COLUMN id: 78, column_name: P_BRAND, result_type: LowCardinality(String), source_id: 7
 
 SELECT
     __table1.D_YEARMONTHNUM AS D_YEARMONTHNUM,
diff --git a/tests/queries/0_stateless/02702_logical_optimizer_with_nulls.reference b/tests/queries/0_stateless/02702_logical_optimizer_with_nulls.reference
index c25b446dcdcc..de22e6f986e6 100644
--- a/tests/queries/0_stateless/02702_logical_optimizer_with_nulls.reference
+++ b/tests/queries/0_stateless/02702_logical_optimizer_with_nulls.reference
@@ -23,12 +23,12 @@ QUERY id: 0
             ARGUMENTS
               LIST id: 12, nodes: 2
                 CONSTANT id: 13, constant_value: UInt64_3, constant_value_type: UInt8
-                COLUMN id: 9, column_name: a, result_type: Int32, source_id: 3
-          FUNCTION id: 14, function_name: equals, function_type: ordinary, result_type: Nullable(Nothing)
+                COLUMN id: 14, column_name: a, result_type: Int32, source_id: 3
+          FUNCTION id: 15, function_name: equals, function_type: ordinary, result_type: Nullable(Nothing)
             ARGUMENTS
-              LIST id: 15, nodes: 2
-                CONSTANT id: 16, constant_value: NULL, constant_value_type: Nullable(Nothing)
-                COLUMN id: 9, column_name: a, result_type: Int32, source_id: 3
+              LIST id: 16, nodes: 2
+                CONSTANT id: 17, constant_value: NULL, constant_value_type: Nullable(Nothing)
+                COLUMN id: 18, column_name: a, result_type: Int32, source_id: 3
 1	test
 2	test2
 3	another
@@ -54,8 +54,8 @@ QUERY id: 0
           FUNCTION id: 11, function_name: in, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 12, nodes: 2
-                COLUMN id: 9, column_name: a, result_type: Int32, source_id: 3
-                CONSTANT id: 13, constant_value: Tuple_(UInt64_1, UInt64_3, UInt64_2), constant_value_type: Tuple(UInt8, UInt8, UInt8)
+                COLUMN id: 13, column_name: a, result_type: Int32, source_id: 3
+                CONSTANT id: 14, constant_value: Tuple_(UInt64_1, UInt64_3, UInt64_2), constant_value_type: Tuple(UInt8, UInt8, UInt8)
 1	test
 2	test2
 3	another
diff --git a/tests/queries/0_stateless/02785_date_predicate_optimizations_ast_query_tree_rewrite.reference b/tests/queries/0_stateless/02785_date_predicate_optimizations_ast_query_tree_rewrite.reference
index c2c77a4aa315..3c615bad1850 100644
--- a/tests/queries/0_stateless/02785_date_predicate_optimizations_ast_query_tree_rewrite.reference
+++ b/tests/queries/0_stateless/02785_date_predicate_optimizations_ast_query_tree_rewrite.reference
@@ -37,8 +37,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -79,8 +79,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -113,8 +113,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -147,8 +147,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -181,8 +181,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -215,8 +215,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -244,21 +244,21 @@ QUERY id: 0
                 FUNCTION id: 12, function_name: less, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 13, nodes: 2
-                      COLUMN id: 10, column_name: date1, result_type: Date, source_id: 3
-                      CONSTANT id: 14, constant_value: \'1998-01-01\', constant_value_type: String
-          FUNCTION id: 15, function_name: and, function_type: ordinary, result_type: UInt8
+                      COLUMN id: 14, column_name: date1, result_type: Date, source_id: 3
+                      CONSTANT id: 15, constant_value: \'1998-01-01\', constant_value_type: String
+          FUNCTION id: 16, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 16, nodes: 2
-                FUNCTION id: 17, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
+              LIST id: 17, nodes: 2
+                FUNCTION id: 18, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 18, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 20, constant_value: UInt64_1, constant_value_type: UInt8
-                FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
+                    LIST id: 19, nodes: 2
+                      COLUMN id: 20, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 21, constant_value: UInt64_1, constant_value_type: UInt8
+                FUNCTION id: 22, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                    LIST id: 23, nodes: 2
+                      COLUMN id: 24, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 25, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -297,26 +297,26 @@ QUERY id: 0
                       FUNCTION id: 19, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
                           LIST id: 20, nodes: 2
-                            COLUMN id: 12, column_name: date1, result_type: Date, source_id: 3
-                            CONSTANT id: 21, constant_value: \'1994-01-01\', constant_value_type: String
-                      FUNCTION id: 22, function_name: less, function_type: ordinary, result_type: UInt8
+                            COLUMN id: 21, column_name: date1, result_type: Date, source_id: 3
+                            CONSTANT id: 22, constant_value: \'1994-01-01\', constant_value_type: String
+                      FUNCTION id: 23, function_name: less, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
-                          LIST id: 23, nodes: 2
-                            COLUMN id: 12, column_name: date1, result_type: Date, source_id: 3
-                            CONSTANT id: 24, constant_value: \'1995-01-01\', constant_value_type: String
-          FUNCTION id: 25, function_name: and, function_type: ordinary, result_type: UInt8
+                          LIST id: 24, nodes: 2
+                            COLUMN id: 21, column_name: date1, result_type: Date, source_id: 3
+                            CONSTANT id: 25, constant_value: \'1995-01-01\', constant_value_type: String
+          FUNCTION id: 26, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 26, nodes: 2
-                FUNCTION id: 27, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
+              LIST id: 27, nodes: 2
+                FUNCTION id: 28, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 28, nodes: 2
-                      COLUMN id: 29, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 30, constant_value: UInt64_1, constant_value_type: UInt8
-                FUNCTION id: 31, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
+                    LIST id: 29, nodes: 2
+                      COLUMN id: 30, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 31, constant_value: UInt64_1, constant_value_type: UInt8
+                FUNCTION id: 32, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 32, nodes: 2
-                      COLUMN id: 29, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 33, constant_value: UInt64_3, constant_value_type: UInt8
+                    LIST id: 33, nodes: 2
+                      COLUMN id: 34, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 35, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT
     value1,
@@ -346,26 +346,26 @@ QUERY id: 0
                 FUNCTION id: 11, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 12, nodes: 2
-                      COLUMN id: 6, column_name: date1, result_type: Date, source_id: 3
-                      CONSTANT id: 13, constant_value: \'1993-01-01\', constant_value_type: String
-                FUNCTION id: 14, function_name: less, function_type: ordinary, result_type: UInt8
-                  ARGUMENTS
-                    LIST id: 15, nodes: 2
-                      COLUMN id: 6, column_name: date1, result_type: Date, source_id: 3
-                      CONSTANT id: 16, constant_value: \'1994-01-01\', constant_value_type: String
-          FUNCTION id: 17, function_name: and, function_type: ordinary, result_type: UInt8
+                      COLUMN id: 13, column_name: date1, result_type: Date, source_id: 3
+                      CONSTANT id: 14, constant_value: \'1993-01-01\', constant_value_type: String
+                FUNCTION id: 15, function_name: less, function_type: ordinary, result_type: UInt8
+                  ARGUMENTS
+                    LIST id: 16, nodes: 2
+                      COLUMN id: 13, column_name: date1, result_type: Date, source_id: 3
+                      CONSTANT id: 17, constant_value: \'1994-01-01\', constant_value_type: String
+          FUNCTION id: 18, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 18, nodes: 2
-                FUNCTION id: 19, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
+              LIST id: 19, nodes: 2
+                FUNCTION id: 20, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 20, nodes: 2
-                      COLUMN id: 21, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 22, constant_value: UInt64_1, constant_value_type: UInt8
-                FUNCTION id: 23, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
+                    LIST id: 21, nodes: 2
+                      COLUMN id: 22, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 23, constant_value: UInt64_1, constant_value_type: UInt8
+                FUNCTION id: 24, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 24, nodes: 2
-                      COLUMN id: 21, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 25, constant_value: UInt64_3, constant_value_type: UInt8
+                    LIST id: 25, nodes: 2
+                      COLUMN id: 26, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 27, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -398,8 +398,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -439,8 +439,8 @@ QUERY id: 0
           FUNCTION id: 19, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 20, nodes: 2
-                COLUMN id: 17, column_name: id, result_type: UInt32, source_id: 3
-                CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
+                COLUMN id: 21, column_name: id, result_type: UInt32, source_id: 3
+                CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -465,22 +465,22 @@ QUERY id: 0
           FUNCTION id: 10, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 11, nodes: 2
-                COLUMN id: 8, column_name: id, result_type: UInt32, source_id: 3
-                CONSTANT id: 12, constant_value: UInt64_3, constant_value_type: UInt8
+                COLUMN id: 12, column_name: id, result_type: UInt32, source_id: 3
+                CONSTANT id: 13, constant_value: UInt64_3, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 13, function_name: and, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 14, function_name: and, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 14, nodes: 2
-          FUNCTION id: 15, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
+        LIST id: 15, nodes: 2
+          FUNCTION id: 16, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 16, nodes: 2
-                COLUMN id: 17, column_name: date1, result_type: Date, source_id: 3
-                CONSTANT id: 18, constant_value: \'1993-01-01\', constant_value_type: String
-          FUNCTION id: 19, function_name: less, function_type: ordinary, result_type: UInt8
+              LIST id: 17, nodes: 2
+                COLUMN id: 18, column_name: date1, result_type: Date, source_id: 3
+                CONSTANT id: 19, constant_value: \'1993-01-01\', constant_value_type: String
+          FUNCTION id: 20, function_name: less, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 20, nodes: 2
-                COLUMN id: 17, column_name: date1, result_type: Date, source_id: 3
-                CONSTANT id: 21, constant_value: \'1994-01-01\', constant_value_type: String
+              LIST id: 21, nodes: 2
+                COLUMN id: 18, column_name: date1, result_type: Date, source_id: 3
+                CONSTANT id: 22, constant_value: \'1994-01-01\', constant_value_type: String
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -516,8 +516,8 @@ QUERY id: 0
                 FUNCTION id: 18, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 19, nodes: 2
-                      COLUMN id: 16, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 20, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 20, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -553,8 +553,8 @@ QUERY id: 0
                 FUNCTION id: 18, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 19, nodes: 2
-                      COLUMN id: 16, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 20, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 20, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -595,8 +595,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -637,8 +637,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -679,8 +679,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -713,8 +713,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -747,8 +747,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -781,8 +781,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -815,8 +815,8 @@ QUERY id: 0
                 FUNCTION id: 16, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 17, nodes: 2
-                      COLUMN id: 14, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 18, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date_t
@@ -847,26 +847,26 @@ QUERY id: 0
                       FUNCTION id: 14, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
                           LIST id: 15, nodes: 2
-                            COLUMN id: 10, column_name: date1, result_type: Date, source_id: 3
-                            CONSTANT id: 16, constant_value: \'1993-01-01\', constant_value_type: String
-                      FUNCTION id: 17, function_name: less, function_type: ordinary, result_type: UInt8
+                            COLUMN id: 16, column_name: date1, result_type: Date, source_id: 3
+                            CONSTANT id: 17, constant_value: \'1993-01-01\', constant_value_type: String
+                      FUNCTION id: 18, function_name: less, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
-                          LIST id: 18, nodes: 2
-                            COLUMN id: 10, column_name: date1, result_type: Date, source_id: 3
-                            CONSTANT id: 19, constant_value: \'1994-01-01\', constant_value_type: String
-          FUNCTION id: 20, function_name: and, function_type: ordinary, result_type: UInt8
+                          LIST id: 19, nodes: 2
+                            COLUMN id: 16, column_name: date1, result_type: Date, source_id: 3
+                            CONSTANT id: 20, constant_value: \'1994-01-01\', constant_value_type: String
+          FUNCTION id: 21, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 21, nodes: 2
-                FUNCTION id: 22, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
+              LIST id: 22, nodes: 2
+                FUNCTION id: 23, function_name: greaterOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 23, nodes: 2
-                      COLUMN id: 24, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 25, constant_value: UInt64_1, constant_value_type: UInt8
-                FUNCTION id: 26, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
+                    LIST id: 24, nodes: 2
+                      COLUMN id: 25, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 26, constant_value: UInt64_1, constant_value_type: UInt8
+                FUNCTION id: 27, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 27, nodes: 2
-                      COLUMN id: 24, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 28, constant_value: UInt64_3, constant_value_type: UInt8
+                    LIST id: 28, nodes: 2
+                      COLUMN id: 29, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 30, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM datetime_t
@@ -907,8 +907,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM datetime_t
@@ -949,8 +949,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date32_t
@@ -991,8 +991,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM date32_t
@@ -1033,8 +1033,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM datetime64_t
@@ -1075,8 +1075,8 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
 SELECT value1
 FROM datetime64_t
@@ -1117,6 +1117,6 @@ QUERY id: 0
                 FUNCTION id: 21, function_name: lessOrEquals, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 22, nodes: 2
-                      COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                      CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                      COLUMN id: 23, column_name: id, result_type: UInt32, source_id: 3
+                      CONSTANT id: 24, constant_value: UInt64_3, constant_value_type: UInt8
   SETTINGS enable_analyzer=1
diff --git a/tests/queries/0_stateless/02815_analyzer_aggregate_functions_of_group_by_keys.reference b/tests/queries/0_stateless/02815_analyzer_aggregate_functions_of_group_by_keys.reference
index 84119736fe99..716b352694c8 100644
--- a/tests/queries/0_stateless/02815_analyzer_aggregate_functions_of_group_by_keys.reference
+++ b/tests/queries/0_stateless/02815_analyzer_aggregate_functions_of_group_by_keys.reference
@@ -62,41 +62,41 @@ QUERY id: 0
       FUNCTION id: 7, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
           LIST id: 8, nodes: 2
-            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-            CONSTANT id: 9, constant_value: UInt64_3, constant_value_type: UInt8
+            COLUMN id: 9, column_name: number, result_type: UInt64, source_id: 5
+            CONSTANT id: 10, constant_value: UInt64_3, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 5, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 10, nodes: 1
-          CONSTANT id: 11, constant_value: UInt64_10000000, constant_value_type: UInt32
+        LIST id: 11, nodes: 1
+          CONSTANT id: 12, constant_value: UInt64_10000000, constant_value_type: UInt32
   GROUP BY
-    LIST id: 12, nodes: 2
-      FUNCTION id: 13, function_name: modulo, function_type: ordinary, result_type: UInt8
+    LIST id: 13, nodes: 2
+      FUNCTION id: 14, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 14, nodes: 2
-            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-            CONSTANT id: 15, constant_value: UInt64_2, constant_value_type: UInt8
-      FUNCTION id: 16, function_name: modulo, function_type: ordinary, result_type: UInt8
+          LIST id: 15, nodes: 2
+            COLUMN id: 16, column_name: number, result_type: UInt64, source_id: 5
+            CONSTANT id: 17, constant_value: UInt64_2, constant_value_type: UInt8
+      FUNCTION id: 18, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 17, nodes: 2
-            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-            CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+          LIST id: 19, nodes: 2
+            COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 5
+            CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
   ORDER BY
-    LIST id: 19, nodes: 2
-      SORT id: 20, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 22, nodes: 2
+      SORT id: 23, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: modulo, function_type: ordinary, result_type: UInt8
+          FUNCTION id: 24, function_name: modulo, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 3, nodes: 2
-                COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-                CONSTANT id: 6, constant_value: UInt64_2, constant_value_type: UInt8
-      SORT id: 21, sort_direction: ASCENDING, with_fill: 0
+              LIST id: 25, nodes: 2
+                COLUMN id: 26, column_name: number, result_type: UInt64, source_id: 5
+                CONSTANT id: 27, constant_value: UInt64_2, constant_value_type: UInt8
+      SORT id: 28, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 7, function_name: modulo, function_type: ordinary, result_type: UInt8
+          FUNCTION id: 29, function_name: modulo, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 8, nodes: 2
-                COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-                CONSTANT id: 9, constant_value: UInt64_3, constant_value_type: UInt8
+              LIST id: 30, nodes: 2
+                COLUMN id: 31, column_name: number, result_type: UInt64, source_id: 5
+                CONSTANT id: 32, constant_value: UInt64_3, constant_value_type: UInt8
 QUERY id: 0
   PROJECTION COLUMNS
     a UInt8
@@ -111,41 +111,41 @@ QUERY id: 0
       FUNCTION id: 7, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
           LIST id: 8, nodes: 2
-            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-            CONSTANT id: 9, constant_value: UInt64_3, constant_value_type: UInt8
+            COLUMN id: 9, column_name: number, result_type: UInt64, source_id: 5
+            CONSTANT id: 10, constant_value: UInt64_3, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 5, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 10, nodes: 1
-          CONSTANT id: 11, constant_value: UInt64_10000000, constant_value_type: UInt32
+        LIST id: 11, nodes: 1
+          CONSTANT id: 12, constant_value: UInt64_10000000, constant_value_type: UInt32
   GROUP BY
-    LIST id: 12, nodes: 2
-      FUNCTION id: 13, function_name: modulo, function_type: ordinary, result_type: UInt8
+    LIST id: 13, nodes: 2
+      FUNCTION id: 14, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 14, nodes: 2
-            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-            CONSTANT id: 15, constant_value: UInt64_2, constant_value_type: UInt8
-      FUNCTION id: 16, function_name: modulo, function_type: ordinary, result_type: UInt8
+          LIST id: 15, nodes: 2
+            COLUMN id: 16, column_name: number, result_type: UInt64, source_id: 5
+            CONSTANT id: 17, constant_value: UInt64_2, constant_value_type: UInt8
+      FUNCTION id: 18, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 17, nodes: 2
-            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-            CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
+          LIST id: 19, nodes: 2
+            COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 5
+            CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
   ORDER BY
-    LIST id: 19, nodes: 2
-      SORT id: 20, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 22, nodes: 2
+      SORT id: 23, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: modulo, function_type: ordinary, result_type: UInt8
+          FUNCTION id: 24, function_name: modulo, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 3, nodes: 2
-                COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-                CONSTANT id: 6, constant_value: UInt64_2, constant_value_type: UInt8
-      SORT id: 21, sort_direction: ASCENDING, with_fill: 0
+              LIST id: 25, nodes: 2
+                COLUMN id: 26, column_name: number, result_type: UInt64, source_id: 5
+                CONSTANT id: 27, constant_value: UInt64_2, constant_value_type: UInt8
+      SORT id: 28, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 7, function_name: modulo, function_type: ordinary, result_type: UInt8
+          FUNCTION id: 29, function_name: modulo, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 8, nodes: 2
-                COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-                CONSTANT id: 9, constant_value: UInt64_3, constant_value_type: UInt8
+              LIST id: 30, nodes: 2
+                COLUMN id: 31, column_name: number, result_type: UInt64, source_id: 5
+                CONSTANT id: 32, constant_value: UInt64_3, constant_value_type: UInt8
 QUERY id: 0
   PROJECTION COLUMNS
     a UInt16
@@ -162,42 +162,42 @@ QUERY id: 0
             FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 10, nodes: 2
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 11, constant_value: UInt64_7, constant_value_type: UInt8
+                  COLUMN id: 11, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 12, constant_value: UInt64_7, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 12, nodes: 1
-          CONSTANT id: 13, constant_value: UInt64_10000000, constant_value_type: UInt32
+        LIST id: 13, nodes: 1
+          CONSTANT id: 14, constant_value: UInt64_10000000, constant_value_type: UInt32
   GROUP BY
-    LIST id: 14, nodes: 2
-      FUNCTION id: 15, function_name: modulo, function_type: ordinary, result_type: UInt8
+    LIST id: 15, nodes: 2
+      FUNCTION id: 16, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 16, nodes: 2
-            COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-            CONSTANT id: 17, constant_value: UInt64_7, constant_value_type: UInt8
-      FUNCTION id: 18, function_name: modulo, function_type: ordinary, result_type: UInt8
+          LIST id: 17, nodes: 2
+            COLUMN id: 18, column_name: number, result_type: UInt64, source_id: 7
+            CONSTANT id: 19, constant_value: UInt64_7, constant_value_type: UInt8
+      FUNCTION id: 20, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 19, nodes: 2
-            COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-            CONSTANT id: 20, constant_value: UInt64_5, constant_value_type: UInt8
+          LIST id: 21, nodes: 2
+            COLUMN id: 22, column_name: number, result_type: UInt64, source_id: 7
+            CONSTANT id: 23, constant_value: UInt64_5, constant_value_type: UInt8
   ORDER BY
-    LIST id: 21, nodes: 1
-      SORT id: 22, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 24, nodes: 1
+      SORT id: 25, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: multiply, function_type: ordinary, result_type: UInt16
+          FUNCTION id: 26, function_name: multiply, function_type: ordinary, result_type: UInt16
             ARGUMENTS
-              LIST id: 3, nodes: 2
-                FUNCTION id: 4, function_name: modulo, function_type: ordinary, result_type: UInt8
+              LIST id: 27, nodes: 2
+                FUNCTION id: 28, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 5, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 8, constant_value: UInt64_5, constant_value_type: UInt8
-                FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: UInt8
+                    LIST id: 29, nodes: 2
+                      COLUMN id: 30, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 31, constant_value: UInt64_5, constant_value_type: UInt8
+                FUNCTION id: 32, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 10, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 11, constant_value: UInt64_7, constant_value_type: UInt8
+                    LIST id: 33, nodes: 2
+                      COLUMN id: 34, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 35, constant_value: UInt64_7, constant_value_type: UInt8
 QUERY id: 0
   PROJECTION COLUMNS
     foo UInt64
@@ -218,7 +218,7 @@ QUERY id: 0
               CONSTANT id: 8, constant_value: UInt64_1, constant_value_type: UInt8
       GROUP BY
         LIST id: 9, nodes: 1
-          COLUMN id: 5, column_name: number, result_type: UInt64, source_id: 6
+          COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 6
 QUERY id: 0
   PROJECTION COLUMNS
     min(number) OVER (PARTITION BY modulo(number, 2)) UInt64
@@ -235,16 +235,16 @@ QUERY id: 0
                 FUNCTION id: 8, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 9, nodes: 2
-                      COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-                      CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
+                      COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 5
+                      CONSTANT id: 11, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 5, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 11, nodes: 1
-          CONSTANT id: 12, constant_value: UInt64_3, constant_value_type: UInt8
+        LIST id: 12, nodes: 1
+          CONSTANT id: 13, constant_value: UInt64_3, constant_value_type: UInt8
   GROUP BY
-    LIST id: 13, nodes: 1
-      COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
+    LIST id: 14, nodes: 1
+      COLUMN id: 15, column_name: number, result_type: UInt64, source_id: 5
 set optimize_aggregators_of_group_by_keys = 0
 0	0
 0	1
@@ -314,47 +314,47 @@ QUERY id: 0
             FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 12, nodes: 2
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 13, constant_value: UInt64_3, constant_value_type: UInt8
+                  COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 14, constant_value: UInt64_3, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 14, nodes: 1
-          CONSTANT id: 15, constant_value: UInt64_10000000, constant_value_type: UInt32
+        LIST id: 15, nodes: 1
+          CONSTANT id: 16, constant_value: UInt64_10000000, constant_value_type: UInt32
   GROUP BY
-    LIST id: 16, nodes: 2
-      FUNCTION id: 17, function_name: modulo, function_type: ordinary, result_type: UInt8
+    LIST id: 17, nodes: 2
+      FUNCTION id: 18, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 18, nodes: 2
-            COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-            CONSTANT id: 19, constant_value: UInt64_2, constant_value_type: UInt8
-      FUNCTION id: 20, function_name: modulo, function_type: ordinary, result_type: UInt8
+          LIST id: 19, nodes: 2
+            COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 7
+            CONSTANT id: 21, constant_value: UInt64_2, constant_value_type: UInt8
+      FUNCTION id: 22, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 21, nodes: 2
-            COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-            CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+          LIST id: 23, nodes: 2
+            COLUMN id: 24, column_name: number, result_type: UInt64, source_id: 7
+            CONSTANT id: 25, constant_value: UInt64_3, constant_value_type: UInt8
   ORDER BY
-    LIST id: 23, nodes: 2
-      SORT id: 24, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 26, nodes: 2
+      SORT id: 27, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: min, function_type: aggregate, result_type: UInt8
+          FUNCTION id: 28, function_name: min, function_type: aggregate, result_type: UInt8
             ARGUMENTS
-              LIST id: 3, nodes: 1
-                FUNCTION id: 4, function_name: modulo, function_type: ordinary, result_type: UInt8
+              LIST id: 29, nodes: 1
+                FUNCTION id: 30, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 5, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 8, constant_value: UInt64_2, constant_value_type: UInt8
-      SORT id: 25, sort_direction: ASCENDING, with_fill: 0
+                    LIST id: 31, nodes: 2
+                      COLUMN id: 32, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 33, constant_value: UInt64_2, constant_value_type: UInt8
+      SORT id: 34, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 9, function_name: max, function_type: aggregate, result_type: UInt8
+          FUNCTION id: 35, function_name: max, function_type: aggregate, result_type: UInt8
             ARGUMENTS
-              LIST id: 10, nodes: 1
-                FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
+              LIST id: 36, nodes: 1
+                FUNCTION id: 37, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 12, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 13, constant_value: UInt64_3, constant_value_type: UInt8
+                    LIST id: 38, nodes: 2
+                      COLUMN id: 39, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 40, constant_value: UInt64_3, constant_value_type: UInt8
 QUERY id: 0
   PROJECTION COLUMNS
     a UInt8
@@ -375,47 +375,47 @@ QUERY id: 0
             FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
               ARGUMENTS
                 LIST id: 12, nodes: 2
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 13, constant_value: UInt64_3, constant_value_type: UInt8
+                  COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 14, constant_value: UInt64_3, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 14, nodes: 1
-          CONSTANT id: 15, constant_value: UInt64_10000000, constant_value_type: UInt32
+        LIST id: 15, nodes: 1
+          CONSTANT id: 16, constant_value: UInt64_10000000, constant_value_type: UInt32
   GROUP BY
-    LIST id: 16, nodes: 2
-      FUNCTION id: 17, function_name: modulo, function_type: ordinary, result_type: UInt8
+    LIST id: 17, nodes: 2
+      FUNCTION id: 18, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 18, nodes: 2
-            COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-            CONSTANT id: 19, constant_value: UInt64_2, constant_value_type: UInt8
-      FUNCTION id: 20, function_name: modulo, function_type: ordinary, result_type: UInt8
+          LIST id: 19, nodes: 2
+            COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 7
+            CONSTANT id: 21, constant_value: UInt64_2, constant_value_type: UInt8
+      FUNCTION id: 22, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 21, nodes: 2
-            COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-            CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+          LIST id: 23, nodes: 2
+            COLUMN id: 24, column_name: number, result_type: UInt64, source_id: 7
+            CONSTANT id: 25, constant_value: UInt64_3, constant_value_type: UInt8
   ORDER BY
-    LIST id: 23, nodes: 2
-      SORT id: 24, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 26, nodes: 2
+      SORT id: 27, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: any, function_type: aggregate, result_type: UInt8
+          FUNCTION id: 28, function_name: any, function_type: aggregate, result_type: UInt8
             ARGUMENTS
-              LIST id: 3, nodes: 1
-                FUNCTION id: 4, function_name: modulo, function_type: ordinary, result_type: UInt8
+              LIST id: 29, nodes: 1
+                FUNCTION id: 30, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 5, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 8, constant_value: UInt64_2, constant_value_type: UInt8
-      SORT id: 25, sort_direction: ASCENDING, with_fill: 0
+                    LIST id: 31, nodes: 2
+                      COLUMN id: 32, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 33, constant_value: UInt64_2, constant_value_type: UInt8
+      SORT id: 34, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 9, function_name: anyLast, function_type: aggregate, result_type: UInt8
+          FUNCTION id: 35, function_name: anyLast, function_type: aggregate, result_type: UInt8
             ARGUMENTS
-              LIST id: 10, nodes: 1
-                FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
+              LIST id: 36, nodes: 1
+                FUNCTION id: 37, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 12, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 13, constant_value: UInt64_3, constant_value_type: UInt8
+                    LIST id: 38, nodes: 2
+                      COLUMN id: 39, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 40, constant_value: UInt64_3, constant_value_type: UInt8
 QUERY id: 0
   PROJECTION COLUMNS
     a UInt16
@@ -435,45 +435,45 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 12, nodes: 2
-                        COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                        CONSTANT id: 13, constant_value: UInt64_7, constant_value_type: UInt8
+                        COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 9
+                        CONSTANT id: 14, constant_value: UInt64_7, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 9, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 14, nodes: 1
-          CONSTANT id: 15, constant_value: UInt64_10000000, constant_value_type: UInt32
+        LIST id: 15, nodes: 1
+          CONSTANT id: 16, constant_value: UInt64_10000000, constant_value_type: UInt32
   GROUP BY
-    LIST id: 16, nodes: 2
-      FUNCTION id: 17, function_name: modulo, function_type: ordinary, result_type: UInt8
+    LIST id: 17, nodes: 2
+      FUNCTION id: 18, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 18, nodes: 2
-            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-            CONSTANT id: 19, constant_value: UInt64_7, constant_value_type: UInt8
-      FUNCTION id: 20, function_name: modulo, function_type: ordinary, result_type: UInt8
+          LIST id: 19, nodes: 2
+            COLUMN id: 20, column_name: number, result_type: UInt64, source_id: 9
+            CONSTANT id: 21, constant_value: UInt64_7, constant_value_type: UInt8
+      FUNCTION id: 22, function_name: modulo, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 21, nodes: 2
-            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-            CONSTANT id: 22, constant_value: UInt64_5, constant_value_type: UInt8
+          LIST id: 23, nodes: 2
+            COLUMN id: 24, column_name: number, result_type: UInt64, source_id: 9
+            CONSTANT id: 25, constant_value: UInt64_5, constant_value_type: UInt8
   ORDER BY
-    LIST id: 23, nodes: 1
-      SORT id: 24, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 26, nodes: 1
+      SORT id: 27, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: max, function_type: aggregate, result_type: UInt16
+          FUNCTION id: 28, function_name: max, function_type: aggregate, result_type: UInt16
             ARGUMENTS
-              LIST id: 3, nodes: 1
-                FUNCTION id: 4, function_name: multiply, function_type: ordinary, result_type: UInt16
+              LIST id: 29, nodes: 1
+                FUNCTION id: 30, function_name: multiply, function_type: ordinary, result_type: UInt16
                   ARGUMENTS
-                    LIST id: 5, nodes: 2
-                      FUNCTION id: 6, function_name: modulo, function_type: ordinary, result_type: UInt8
+                    LIST id: 31, nodes: 2
+                      FUNCTION id: 32, function_name: modulo, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
-                          LIST id: 7, nodes: 2
-                            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                            CONSTANT id: 10, constant_value: UInt64_5, constant_value_type: UInt8
-                      FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
+                          LIST id: 33, nodes: 2
+                            COLUMN id: 34, column_name: number, result_type: UInt64, source_id: 9
+                            CONSTANT id: 35, constant_value: UInt64_5, constant_value_type: UInt8
+                      FUNCTION id: 36, function_name: modulo, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
-                          LIST id: 12, nodes: 2
-                            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                            CONSTANT id: 13, constant_value: UInt64_7, constant_value_type: UInt8
+                          LIST id: 37, nodes: 2
+                            COLUMN id: 38, column_name: number, result_type: UInt64, source_id: 9
+                            CONSTANT id: 39, constant_value: UInt64_7, constant_value_type: UInt8
 QUERY id: 0
   PROJECTION COLUMNS
     foo UInt64
@@ -497,7 +497,7 @@ QUERY id: 0
               CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
       GROUP BY
         LIST id: 11, nodes: 1
-          COLUMN id: 7, column_name: number, result_type: UInt64, source_id: 8
+          COLUMN id: 12, column_name: number, result_type: UInt64, source_id: 8
 QUERY id: 0
   PROJECTION COLUMNS
     min(number) OVER (PARTITION BY modulo(number, 2)) UInt64
@@ -514,13 +514,13 @@ QUERY id: 0
                 FUNCTION id: 8, function_name: modulo, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 9, nodes: 2
-                      COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-                      CONSTANT id: 10, constant_value: UInt64_2, constant_value_type: UInt8
+                      COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 5
+                      CONSTANT id: 11, constant_value: UInt64_2, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 5, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 11, nodes: 1
-          CONSTANT id: 12, constant_value: UInt64_3, constant_value_type: UInt8
+        LIST id: 12, nodes: 1
+          CONSTANT id: 13, constant_value: UInt64_3, constant_value_type: UInt8
   GROUP BY
-    LIST id: 13, nodes: 1
-      COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
+    LIST id: 14, nodes: 1
+      COLUMN id: 15, column_name: number, result_type: UInt64, source_id: 5
diff --git a/tests/queries/0_stateless/02868_distinct_to_count_optimization.reference b/tests/queries/0_stateless/02868_distinct_to_count_optimization.reference
index 3dedcedbceee..e160e7f33587 100644
--- a/tests/queries/0_stateless/02868_distinct_to_count_optimization.reference
+++ b/tests/queries/0_stateless/02868_distinct_to_count_optimization.reference
@@ -132,7 +132,7 @@ QUERY id: 0
         TABLE id: 6, alias: __table2, table_name: default.test_rewrite_uniq_to_count
       GROUP BY
         LIST id: 7, nodes: 1
-          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
+          COLUMN id: 8, column_name: a, result_type: UInt8, source_id: 6
   SETTINGS enable_analyzer=1
 6. test group by with subquery alias
 3
@@ -164,7 +164,7 @@ QUERY id: 0
         TABLE id: 6, alias: __table2, table_name: default.test_rewrite_uniq_to_count
       GROUP BY
         LIST id: 7, nodes: 1
-          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
+          COLUMN id: 8, column_name: a, result_type: UInt8, source_id: 6
   SETTINGS enable_analyzer=1
 7. test group by with compound column name
 3
@@ -196,7 +196,7 @@ QUERY id: 0
         TABLE id: 6, alias: __table2, table_name: default.test_rewrite_uniq_to_count
       GROUP BY
         LIST id: 7, nodes: 1
-          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
+          COLUMN id: 8, column_name: a, result_type: UInt8, source_id: 6
   SETTINGS enable_analyzer=1
 8. test group by with select expression alias
 3
@@ -228,5 +228,5 @@ QUERY id: 0
         TABLE id: 6, alias: __table2, table_name: default.test_rewrite_uniq_to_count
       GROUP BY
         LIST id: 7, nodes: 1
-          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
+          COLUMN id: 8, column_name: a, result_type: UInt8, source_id: 6
   SETTINGS enable_analyzer=1
diff --git a/tests/queries/0_stateless/02896_cyclic_aliases_crash.sql b/tests/queries/0_stateless/02896_cyclic_aliases_crash.sql
index 5440872e0524..04e2c254a319 100644
--- a/tests/queries/0_stateless/02896_cyclic_aliases_crash.sql
+++ b/tests/queries/0_stateless/02896_cyclic_aliases_crash.sql
@@ -6,7 +6,7 @@ SELECT
     val + 1 as prev,
     val + prev as val
 FROM ( SELECT 1 as val )
-; -- { serverError CYCLIC_ALIASES, TOO_DEEP_RECURSION }
+; -- { serverError CYCLIC_ALIASES, UNKNOWN_IDENTIFIER, TOO_DEEP_RECURSION }
 
 
 SELECT
diff --git a/tests/queries/0_stateless/02932_analyzer_rewrite_sum_column_and_constant.reference b/tests/queries/0_stateless/02932_analyzer_rewrite_sum_column_and_constant.reference
index b41635f014ea..3d19359eb2ee 100644
--- a/tests/queries/0_stateless/02932_analyzer_rewrite_sum_column_and_constant.reference
+++ b/tests/queries/0_stateless/02932_analyzer_rewrite_sum_column_and_constant.reference
@@ -130,7 +130,7 @@ QUERY id: 0
                   COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
                   CONSTANT id: 8, constant_value: UInt64_1, constant_value_type: Nullable(UInt64)
                     EXPRESSION
-                      FUNCTION id: 9, alias: my_literal, function_name: CAST, function_type: ordinary, result_type: Nullable(UInt64)
+                      FUNCTION id: 9, function_name: CAST, function_type: ordinary, result_type: Nullable(UInt64)
                         ARGUMENTS
                           LIST id: 10, nodes: 2
                             CONSTANT id: 11, constant_value: \'1\', constant_value_type: String
@@ -158,7 +158,7 @@ QUERY id: 0
                 LIST id: 9, nodes: 2
                   CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: Nullable(UInt64)
                     EXPRESSION
-                      FUNCTION id: 11, alias: my_literal, function_name: CAST, function_type: ordinary, result_type: Nullable(UInt64)
+                      FUNCTION id: 11, function_name: CAST, function_type: ordinary, result_type: Nullable(UInt64)
                         ARGUMENTS
                           LIST id: 12, nodes: 2
                             CONSTANT id: 13, constant_value: \'1\', constant_value_type: String
@@ -210,9 +210,9 @@ QUERY id: 0
           FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
               LIST id: 16, nodes: 2
-                COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-          CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
+                COLUMN id: 17, column_name: uint64, result_type: UInt64, source_id: 7
+                CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+          CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(uint64 + 1) AS j from test_table having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -246,16 +246,16 @@ QUERY id: 0
                 FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
                     LIST id: 18, nodes: 1
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 7
+                FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 20, nodes: 2
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 21, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 21, nodes: 2
+                      CONSTANT id: 22, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 22, nodes: 1
-                            COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-          CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
+                          LIST id: 24, nodes: 1
+                            COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 7
+          CONSTANT id: 25, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(uint64 + 1 AS i) j from test_table where i > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -286,29 +286,29 @@ QUERY id: 0
           FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
               LIST id: 16, nodes: 2
-                COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-          CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
+                COLUMN id: 17, column_name: uint64, result_type: UInt64, source_id: 7
+                CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+          CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 18, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 19, nodes: 2
-          FUNCTION id: 20, function_name: plus, function_type: ordinary, result_type: UInt64
+        LIST id: 21, nodes: 2
+          FUNCTION id: 22, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
-              LIST id: 21, nodes: 2
-                FUNCTION id: 22, function_name: sum, function_type: aggregate, result_type: UInt64
+              LIST id: 23, nodes: 2
+                FUNCTION id: 24, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 23, nodes: 1
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                FUNCTION id: 24, function_name: multiply, function_type: ordinary, result_type: UInt64
+                    LIST id: 25, nodes: 1
+                      COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 7
+                FUNCTION id: 27, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 25, nodes: 2
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 26, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 28, nodes: 2
+                      CONSTANT id: 29, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 30, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 27, nodes: 1
-                            COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-          CONSTANT id: 28, constant_value: UInt64_0, constant_value_type: UInt8
+                          LIST id: 31, nodes: 1
+                            COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 7
+          CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum((uint64 AS m) + (1 AS n)) j from test_table where m > 0 and n > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -339,35 +339,35 @@ QUERY id: 0
           FUNCTION id: 15, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 16, nodes: 2
-                COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
-          CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 17, column_name: uint64, result_type: UInt64, source_id: 7
+                CONSTANT id: 18, constant_value: UInt64_0, constant_value_type: UInt8
+          CONSTANT id: 19, constant_value: UInt64_1, constant_value_type: UInt8
             EXPRESSION
-              FUNCTION id: 19, function_name: greater, function_type: ordinary, result_type: UInt8
+              FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
-                  LIST id: 20, nodes: 2
-                    CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                    CONSTANT id: 21, constant_value: UInt64_0, constant_value_type: UInt8
+                  LIST id: 21, nodes: 2
+                    CONSTANT id: 22, constant_value: UInt64_1, constant_value_type: UInt8
+                    CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 22, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 24, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 23, nodes: 2
-          FUNCTION id: 24, function_name: plus, function_type: ordinary, result_type: UInt64
+        LIST id: 25, nodes: 2
+          FUNCTION id: 26, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
-              LIST id: 25, nodes: 2
-                FUNCTION id: 26, function_name: sum, function_type: aggregate, result_type: UInt64
+              LIST id: 27, nodes: 2
+                FUNCTION id: 28, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 27, nodes: 1
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                FUNCTION id: 28, function_name: multiply, function_type: ordinary, result_type: UInt64
+                    LIST id: 29, nodes: 1
+                      COLUMN id: 30, column_name: uint64, result_type: UInt64, source_id: 7
+                FUNCTION id: 31, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 29, nodes: 2
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 30, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 32, nodes: 2
+                      CONSTANT id: 33, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 34, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 31, nodes: 1
-                            COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-          CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
+                          LIST id: 35, nodes: 1
+                            COLUMN id: 30, column_name: uint64, result_type: UInt64, source_id: 7
+          CONSTANT id: 36, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(((uint64 AS m) + (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -398,44 +398,44 @@ QUERY id: 0
           FUNCTION id: 15, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 16, nodes: 2
-                COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
-          CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 17, column_name: uint64, result_type: UInt64, source_id: 7
+                CONSTANT id: 18, constant_value: UInt64_0, constant_value_type: UInt8
+          CONSTANT id: 19, constant_value: UInt64_1, constant_value_type: UInt8
             EXPRESSION
-              FUNCTION id: 19, function_name: greater, function_type: ordinary, result_type: UInt8
+              FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
-                  LIST id: 20, nodes: 2
-                    CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                    CONSTANT id: 21, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 22, function_name: greater, function_type: ordinary, result_type: UInt8
+                  LIST id: 21, nodes: 2
+                    CONSTANT id: 22, constant_value: UInt64_1, constant_value_type: UInt8
+                    CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 24, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 23, nodes: 2
-                FUNCTION id: 24, function_name: plus, function_type: ordinary, result_type: UInt64
+              LIST id: 25, nodes: 2
+                FUNCTION id: 26, function_name: plus, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 25, nodes: 2
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                CONSTANT id: 26, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 27, nodes: 2
+                      COLUMN id: 28, column_name: uint64, result_type: UInt64, source_id: 7
+                      CONSTANT id: 29, constant_value: UInt64_1, constant_value_type: UInt8
+                CONSTANT id: 30, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 27, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 31, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 28, nodes: 2
-          FUNCTION id: 29, function_name: plus, function_type: ordinary, result_type: UInt64
+        LIST id: 32, nodes: 2
+          FUNCTION id: 33, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
-              LIST id: 30, nodes: 2
-                FUNCTION id: 31, function_name: sum, function_type: aggregate, result_type: UInt64
+              LIST id: 34, nodes: 2
+                FUNCTION id: 35, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 32, nodes: 1
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                FUNCTION id: 33, function_name: multiply, function_type: ordinary, result_type: UInt64
+                    LIST id: 36, nodes: 1
+                      COLUMN id: 37, column_name: uint64, result_type: UInt64, source_id: 7
+                FUNCTION id: 38, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 34, nodes: 2
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 35, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 39, nodes: 2
+                      CONSTANT id: 40, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 41, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 36, nodes: 1
-                            COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-          CONSTANT id: 37, constant_value: UInt64_0, constant_value_type: UInt8
+                          LIST id: 42, nodes: 1
+                            COLUMN id: 37, column_name: uint64, result_type: UInt64, source_id: 7
+          CONSTANT id: 43, constant_value: UInt64_0, constant_value_type: UInt8
 SELECT sum(1 + uint64 AS i) from test_table where i > 0;
 20
 SELECT sum(1 + uint64) AS j from test_table having j > 0;
@@ -476,9 +476,9 @@ QUERY id: 0
           FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
               LIST id: 16, nodes: 2
-                CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
+                CONSTANT id: 17, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 18, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(1 + uint64) AS j from test_table having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -512,16 +512,16 @@ QUERY id: 0
                 FUNCTION id: 17, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
                     LIST id: 18, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 19, function_name: count, function_type: aggregate, result_type: UInt64
+                      CONSTANT id: 19, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 20, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 20, nodes: 1
-                            COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                FUNCTION id: 21, function_name: sum, function_type: aggregate, result_type: UInt64
+                          LIST id: 21, nodes: 1
+                            COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 10
+                FUNCTION id: 23, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 22, nodes: 1
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 24, nodes: 1
+                      COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 25, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(1 + uint64 AS i) j from test_table where i > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -552,29 +552,29 @@ QUERY id: 0
           FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
               LIST id: 16, nodes: 2
-                CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
+                CONSTANT id: 17, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 18, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 18, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 19, nodes: 2
-          FUNCTION id: 20, function_name: plus, function_type: ordinary, result_type: UInt64
+        LIST id: 21, nodes: 2
+          FUNCTION id: 22, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
-              LIST id: 21, nodes: 2
-                FUNCTION id: 22, function_name: multiply, function_type: ordinary, result_type: UInt64
+              LIST id: 23, nodes: 2
+                FUNCTION id: 24, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 23, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 25, nodes: 2
+                      CONSTANT id: 26, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 27, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 25, nodes: 1
-                            COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                FUNCTION id: 26, function_name: sum, function_type: aggregate, result_type: UInt64
+                          LIST id: 28, nodes: 1
+                            COLUMN id: 29, column_name: uint64, result_type: UInt64, source_id: 10
+                FUNCTION id: 30, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 27, nodes: 1
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 28, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 31, nodes: 1
+                      COLUMN id: 29, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum((1 AS m) + (uint64 AS n)) j from test_table where m > 0 and n > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -607,33 +607,33 @@ QUERY id: 0
               FUNCTION id: 16, function_name: greater, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
                   LIST id: 17, nodes: 2
-                    CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                    CONSTANT id: 18, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 19, function_name: greater, function_type: ordinary, result_type: UInt8
+                    CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+                    CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 20, nodes: 2
-                COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                CONSTANT id: 21, constant_value: UInt64_0, constant_value_type: UInt8
+              LIST id: 21, nodes: 2
+                COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 10
+                CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 22, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 24, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 23, nodes: 2
-          FUNCTION id: 24, function_name: plus, function_type: ordinary, result_type: UInt64
+        LIST id: 25, nodes: 2
+          FUNCTION id: 26, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
-              LIST id: 25, nodes: 2
-                FUNCTION id: 26, function_name: multiply, function_type: ordinary, result_type: UInt64
+              LIST id: 27, nodes: 2
+                FUNCTION id: 28, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 27, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 28, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 29, nodes: 2
+                      CONSTANT id: 30, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 31, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 29, nodes: 1
-                            COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                FUNCTION id: 30, function_name: sum, function_type: aggregate, result_type: UInt64
+                          LIST id: 32, nodes: 1
+                            COLUMN id: 33, column_name: uint64, result_type: UInt64, source_id: 10
+                FUNCTION id: 34, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 31, nodes: 1
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 35, nodes: 1
+                      COLUMN id: 33, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 36, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(((1 AS m) + (uint64 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -666,42 +666,42 @@ QUERY id: 0
               FUNCTION id: 16, function_name: greater, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
                   LIST id: 17, nodes: 2
-                    CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                    CONSTANT id: 18, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 19, function_name: greater, function_type: ordinary, result_type: UInt8
+                    CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+                    CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 20, nodes: 2
-                COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                CONSTANT id: 21, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 22, function_name: greater, function_type: ordinary, result_type: UInt8
+              LIST id: 21, nodes: 2
+                COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 10
+                CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 24, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 23, nodes: 2
-                FUNCTION id: 24, function_name: plus, function_type: ordinary, result_type: UInt64
+              LIST id: 25, nodes: 2
+                FUNCTION id: 26, function_name: plus, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 25, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                CONSTANT id: 26, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 27, nodes: 2
+                      CONSTANT id: 28, constant_value: UInt64_1, constant_value_type: UInt8
+                      COLUMN id: 29, column_name: uint64, result_type: UInt64, source_id: 10
+                CONSTANT id: 30, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 27, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 31, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 28, nodes: 2
-          FUNCTION id: 29, function_name: plus, function_type: ordinary, result_type: UInt64
+        LIST id: 32, nodes: 2
+          FUNCTION id: 33, function_name: plus, function_type: ordinary, result_type: UInt64
             ARGUMENTS
-              LIST id: 30, nodes: 2
-                FUNCTION id: 31, function_name: multiply, function_type: ordinary, result_type: UInt64
+              LIST id: 34, nodes: 2
+                FUNCTION id: 35, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 32, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 33, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 36, nodes: 2
+                      CONSTANT id: 37, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 38, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 34, nodes: 1
-                            COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                FUNCTION id: 35, function_name: sum, function_type: aggregate, result_type: UInt64
+                          LIST id: 39, nodes: 1
+                            COLUMN id: 40, column_name: uint64, result_type: UInt64, source_id: 10
+                FUNCTION id: 41, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 36, nodes: 1
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 37, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 42, nodes: 1
+                      COLUMN id: 40, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 43, constant_value: UInt64_0, constant_value_type: UInt8
 SELECT sum(uint64 - 1 AS i) from test_table where i > 0;
 10
 SELECT sum(uint64 - 1) AS j from test_table having j > 0;
@@ -742,9 +742,9 @@ QUERY id: 0
           FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
               LIST id: 16, nodes: 2
-                COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-          CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
+                COLUMN id: 17, column_name: uint64, result_type: UInt64, source_id: 7
+                CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+          CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(uint64 - 1) AS j from test_table having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -778,16 +778,16 @@ QUERY id: 0
                 FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
                     LIST id: 18, nodes: 1
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 7
+                FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 20, nodes: 2
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 21, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 21, nodes: 2
+                      CONSTANT id: 22, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 22, nodes: 1
-                            COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-          CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
+                          LIST id: 24, nodes: 1
+                            COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 7
+          CONSTANT id: 25, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(uint64 - 1 AS i) j from test_table where i > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -818,29 +818,29 @@ QUERY id: 0
           FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
               LIST id: 16, nodes: 2
-                COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-          CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
+                COLUMN id: 17, column_name: uint64, result_type: UInt64, source_id: 7
+                CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+          CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 18, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 19, nodes: 2
-          FUNCTION id: 20, function_name: minus, function_type: ordinary, result_type: Int64
+        LIST id: 21, nodes: 2
+          FUNCTION id: 22, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
-              LIST id: 21, nodes: 2
-                FUNCTION id: 22, function_name: sum, function_type: aggregate, result_type: UInt64
+              LIST id: 23, nodes: 2
+                FUNCTION id: 24, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 23, nodes: 1
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                FUNCTION id: 24, function_name: multiply, function_type: ordinary, result_type: UInt64
+                    LIST id: 25, nodes: 1
+                      COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 7
+                FUNCTION id: 27, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 25, nodes: 2
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 26, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 28, nodes: 2
+                      CONSTANT id: 29, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 30, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 27, nodes: 1
-                            COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-          CONSTANT id: 28, constant_value: UInt64_0, constant_value_type: UInt8
+                          LIST id: 31, nodes: 1
+                            COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 7
+          CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum((uint64 AS m) - (1 AS n)) j from test_table where m > 0 and n > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -871,35 +871,35 @@ QUERY id: 0
           FUNCTION id: 15, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 16, nodes: 2
-                COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
-          CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 17, column_name: uint64, result_type: UInt64, source_id: 7
+                CONSTANT id: 18, constant_value: UInt64_0, constant_value_type: UInt8
+          CONSTANT id: 19, constant_value: UInt64_1, constant_value_type: UInt8
             EXPRESSION
-              FUNCTION id: 19, function_name: greater, function_type: ordinary, result_type: UInt8
+              FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
-                  LIST id: 20, nodes: 2
-                    CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                    CONSTANT id: 21, constant_value: UInt64_0, constant_value_type: UInt8
+                  LIST id: 21, nodes: 2
+                    CONSTANT id: 22, constant_value: UInt64_1, constant_value_type: UInt8
+                    CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 22, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 24, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 23, nodes: 2
-          FUNCTION id: 24, function_name: minus, function_type: ordinary, result_type: Int64
+        LIST id: 25, nodes: 2
+          FUNCTION id: 26, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
-              LIST id: 25, nodes: 2
-                FUNCTION id: 26, function_name: sum, function_type: aggregate, result_type: UInt64
+              LIST id: 27, nodes: 2
+                FUNCTION id: 28, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 27, nodes: 1
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                FUNCTION id: 28, function_name: multiply, function_type: ordinary, result_type: UInt64
+                    LIST id: 29, nodes: 1
+                      COLUMN id: 30, column_name: uint64, result_type: UInt64, source_id: 7
+                FUNCTION id: 31, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 29, nodes: 2
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 30, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 32, nodes: 2
+                      CONSTANT id: 33, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 34, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 31, nodes: 1
-                            COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-          CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
+                          LIST id: 35, nodes: 1
+                            COLUMN id: 30, column_name: uint64, result_type: UInt64, source_id: 7
+          CONSTANT id: 36, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(((uint64 AS m) - (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -930,44 +930,44 @@ QUERY id: 0
           FUNCTION id: 15, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 16, nodes: 2
-                COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
-          CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 17, column_name: uint64, result_type: UInt64, source_id: 7
+                CONSTANT id: 18, constant_value: UInt64_0, constant_value_type: UInt8
+          CONSTANT id: 19, constant_value: UInt64_1, constant_value_type: UInt8
             EXPRESSION
-              FUNCTION id: 19, function_name: greater, function_type: ordinary, result_type: UInt8
+              FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
-                  LIST id: 20, nodes: 2
-                    CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                    CONSTANT id: 21, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 22, function_name: greater, function_type: ordinary, result_type: UInt8
+                  LIST id: 21, nodes: 2
+                    CONSTANT id: 22, constant_value: UInt64_1, constant_value_type: UInt8
+                    CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 24, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 23, nodes: 2
-                FUNCTION id: 24, function_name: minus, function_type: ordinary, result_type: Int64
+              LIST id: 25, nodes: 2
+                FUNCTION id: 26, function_name: minus, function_type: ordinary, result_type: Int64
                   ARGUMENTS
-                    LIST id: 25, nodes: 2
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                CONSTANT id: 26, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 27, nodes: 2
+                      COLUMN id: 28, column_name: uint64, result_type: UInt64, source_id: 7
+                      CONSTANT id: 29, constant_value: UInt64_1, constant_value_type: UInt8
+                CONSTANT id: 30, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 27, function_name: greater, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 31, function_name: greater, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 28, nodes: 2
-          FUNCTION id: 29, function_name: minus, function_type: ordinary, result_type: Int64
+        LIST id: 32, nodes: 2
+          FUNCTION id: 33, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
-              LIST id: 30, nodes: 2
-                FUNCTION id: 31, function_name: sum, function_type: aggregate, result_type: UInt64
+              LIST id: 34, nodes: 2
+                FUNCTION id: 35, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 32, nodes: 1
-                      COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-                FUNCTION id: 33, function_name: multiply, function_type: ordinary, result_type: UInt64
+                    LIST id: 36, nodes: 1
+                      COLUMN id: 37, column_name: uint64, result_type: UInt64, source_id: 7
+                FUNCTION id: 38, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 34, nodes: 2
-                      CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 35, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 39, nodes: 2
+                      CONSTANT id: 40, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 41, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 36, nodes: 1
-                            COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
-          CONSTANT id: 37, constant_value: UInt64_0, constant_value_type: UInt8
+                          LIST id: 42, nodes: 1
+                            COLUMN id: 37, column_name: uint64, result_type: UInt64, source_id: 7
+          CONSTANT id: 43, constant_value: UInt64_0, constant_value_type: UInt8
 SELECT sum(1 - uint64 AS i) from test_table;
 -10
 SELECT sum(1 - uint64) AS j from test_table;
@@ -1008,9 +1008,9 @@ QUERY id: 0
           FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
               LIST id: 16, nodes: 2
-                CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
+                CONSTANT id: 17, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 18, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(1 - uint64) AS j from test_table having j < 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -1044,16 +1044,16 @@ QUERY id: 0
                 FUNCTION id: 17, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
                     LIST id: 18, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 19, function_name: count, function_type: aggregate, result_type: UInt64
+                      CONSTANT id: 19, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 20, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 20, nodes: 1
-                            COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                FUNCTION id: 21, function_name: sum, function_type: aggregate, result_type: UInt64
+                          LIST id: 21, nodes: 1
+                            COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 10
+                FUNCTION id: 23, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 22, nodes: 1
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 24, nodes: 1
+                      COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 25, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(1 - uint64 AS i) j from test_table where i > 0 having j < 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -1084,29 +1084,29 @@ QUERY id: 0
           FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
               LIST id: 16, nodes: 2
-                CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 17, constant_value: UInt64_0, constant_value_type: UInt8
+                CONSTANT id: 17, constant_value: UInt64_1, constant_value_type: UInt8
+                COLUMN id: 18, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 18, function_name: less, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 20, function_name: less, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 19, nodes: 2
-          FUNCTION id: 20, function_name: minus, function_type: ordinary, result_type: Int64
+        LIST id: 21, nodes: 2
+          FUNCTION id: 22, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
-              LIST id: 21, nodes: 2
-                FUNCTION id: 22, function_name: multiply, function_type: ordinary, result_type: UInt64
+              LIST id: 23, nodes: 2
+                FUNCTION id: 24, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 23, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 25, nodes: 2
+                      CONSTANT id: 26, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 27, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 25, nodes: 1
-                            COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                FUNCTION id: 26, function_name: sum, function_type: aggregate, result_type: UInt64
+                          LIST id: 28, nodes: 1
+                            COLUMN id: 29, column_name: uint64, result_type: UInt64, source_id: 10
+                FUNCTION id: 30, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 27, nodes: 1
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 28, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 31, nodes: 1
+                      COLUMN id: 29, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum((1 AS m) - (uint64 AS n)) j from test_table where m > 0 and n > 0 having j < 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -1139,33 +1139,33 @@ QUERY id: 0
               FUNCTION id: 16, function_name: greater, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
                   LIST id: 17, nodes: 2
-                    CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                    CONSTANT id: 18, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 19, function_name: greater, function_type: ordinary, result_type: UInt8
+                    CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+                    CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 20, nodes: 2
-                COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                CONSTANT id: 21, constant_value: UInt64_0, constant_value_type: UInt8
+              LIST id: 21, nodes: 2
+                COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 10
+                CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 22, function_name: less, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 24, function_name: less, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 23, nodes: 2
-          FUNCTION id: 24, function_name: minus, function_type: ordinary, result_type: Int64
+        LIST id: 25, nodes: 2
+          FUNCTION id: 26, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
-              LIST id: 25, nodes: 2
-                FUNCTION id: 26, function_name: multiply, function_type: ordinary, result_type: UInt64
+              LIST id: 27, nodes: 2
+                FUNCTION id: 28, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 27, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 28, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 29, nodes: 2
+                      CONSTANT id: 30, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 31, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 29, nodes: 1
-                            COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                FUNCTION id: 30, function_name: sum, function_type: aggregate, result_type: UInt64
+                          LIST id: 32, nodes: 1
+                            COLUMN id: 33, column_name: uint64, result_type: UInt64, source_id: 10
+                FUNCTION id: 34, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 31, nodes: 1
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 32, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 35, nodes: 1
+                      COLUMN id: 33, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 36, constant_value: UInt64_0, constant_value_type: UInt8
 EXPLAIN QUERY TREE (SELECT sum(((1 AS m) - (uint64 AS n)) AS i) j from test_table where m > 0 and n > 0 and i < 0 having j < 0);
 QUERY id: 0
   PROJECTION COLUMNS
@@ -1198,42 +1198,42 @@ QUERY id: 0
               FUNCTION id: 16, function_name: greater, function_type: ordinary, result_type: UInt8
                 ARGUMENTS
                   LIST id: 17, nodes: 2
-                    CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                    CONSTANT id: 18, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 19, function_name: greater, function_type: ordinary, result_type: UInt8
+                    CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
+                    CONSTANT id: 19, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 20, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 20, nodes: 2
-                COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                CONSTANT id: 21, constant_value: UInt64_0, constant_value_type: UInt8
-          FUNCTION id: 22, function_name: less, function_type: ordinary, result_type: UInt8
+              LIST id: 21, nodes: 2
+                COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 10
+                CONSTANT id: 23, constant_value: UInt64_0, constant_value_type: UInt8
+          FUNCTION id: 24, function_name: less, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 23, nodes: 2
-                FUNCTION id: 24, function_name: minus, function_type: ordinary, result_type: Int64
+              LIST id: 25, nodes: 2
+                FUNCTION id: 26, function_name: minus, function_type: ordinary, result_type: Int64
                   ARGUMENTS
-                    LIST id: 25, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                CONSTANT id: 26, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 27, nodes: 2
+                      CONSTANT id: 28, constant_value: UInt64_1, constant_value_type: UInt8
+                      COLUMN id: 29, column_name: uint64, result_type: UInt64, source_id: 10
+                CONSTANT id: 30, constant_value: UInt64_0, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 27, function_name: less, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 31, function_name: less, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 28, nodes: 2
-          FUNCTION id: 29, function_name: minus, function_type: ordinary, result_type: Int64
+        LIST id: 32, nodes: 2
+          FUNCTION id: 33, function_name: minus, function_type: ordinary, result_type: Int64
             ARGUMENTS
-              LIST id: 30, nodes: 2
-                FUNCTION id: 31, function_name: multiply, function_type: ordinary, result_type: UInt64
+              LIST id: 34, nodes: 2
+                FUNCTION id: 35, function_name: multiply, function_type: ordinary, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 32, nodes: 2
-                      CONSTANT id: 6, constant_value: UInt64_1, constant_value_type: UInt8
-                      FUNCTION id: 33, function_name: count, function_type: aggregate, result_type: UInt64
+                    LIST id: 36, nodes: 2
+                      CONSTANT id: 37, constant_value: UInt64_1, constant_value_type: UInt8
+                      FUNCTION id: 38, function_name: count, function_type: aggregate, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 34, nodes: 1
-                            COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-                FUNCTION id: 35, function_name: sum, function_type: aggregate, result_type: UInt64
+                          LIST id: 39, nodes: 1
+                            COLUMN id: 40, column_name: uint64, result_type: UInt64, source_id: 10
+                FUNCTION id: 41, function_name: sum, function_type: aggregate, result_type: UInt64
                   ARGUMENTS
-                    LIST id: 36, nodes: 1
-                      COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
-          CONSTANT id: 37, constant_value: UInt64_0, constant_value_type: UInt8
+                    LIST id: 42, nodes: 1
+                      COLUMN id: 40, column_name: uint64, result_type: UInt64, source_id: 10
+          CONSTANT id: 43, constant_value: UInt64_0, constant_value_type: UInt8
 SELECT sum(uint64 + 2.11) From test_table;
 25.549999999999997
 SELECT sum(2.11 + uint64) From test_table;
@@ -1362,7 +1362,7 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: count, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 12, nodes: 1
-                        COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
+                        COLUMN id: 13, column_name: uint64, result_type: UInt64, source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT 2.11 * count(uint64) + sum(uint64) From test_table);
@@ -1385,7 +1385,7 @@ QUERY id: 0
             FUNCTION id: 11, function_name: sum, function_type: aggregate, result_type: UInt64
               ARGUMENTS
                 LIST id: 12, nodes: 1
-                  COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
+                  COLUMN id: 13, column_name: uint64, result_type: UInt64, source_id: 10
   JOIN TREE
     TABLE id: 10, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(uint64) - 2.11 * count(uint64) From test_table);
@@ -1408,7 +1408,7 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: count, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 12, nodes: 1
-                        COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
+                        COLUMN id: 13, column_name: uint64, result_type: UInt64, source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT 2.11 * count(uint64) - sum(uint64) From test_table);
@@ -1431,7 +1431,7 @@ QUERY id: 0
             FUNCTION id: 11, function_name: sum, function_type: aggregate, result_type: UInt64
               ARGUMENTS
                 LIST id: 12, nodes: 1
-                  COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
+                  COLUMN id: 13, column_name: uint64, result_type: UInt64, source_id: 10
   JOIN TREE
     TABLE id: 10, alias: __table1, table_name: default.test_table
 SELECT sum(uint64 + 2) From test_table;
@@ -1562,7 +1562,7 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: count, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 12, nodes: 1
-                        COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
+                        COLUMN id: 13, column_name: uint64, result_type: UInt64, source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT 2 * count(uint64) + sum(uint64) From test_table);
@@ -1585,7 +1585,7 @@ QUERY id: 0
             FUNCTION id: 11, function_name: sum, function_type: aggregate, result_type: UInt64
               ARGUMENTS
                 LIST id: 12, nodes: 1
-                  COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
+                  COLUMN id: 13, column_name: uint64, result_type: UInt64, source_id: 10
   JOIN TREE
     TABLE id: 10, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(uint64) - 2 * count(uint64) From test_table);
@@ -1608,7 +1608,7 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: count, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 12, nodes: 1
-                        COLUMN id: 6, column_name: uint64, result_type: UInt64, source_id: 7
+                        COLUMN id: 13, column_name: uint64, result_type: UInt64, source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT 2 * count(uint64) - sum(uint64) From test_table);
@@ -1631,7 +1631,7 @@ QUERY id: 0
             FUNCTION id: 11, function_name: sum, function_type: aggregate, result_type: UInt64
               ARGUMENTS
                 LIST id: 12, nodes: 1
-                  COLUMN id: 9, column_name: uint64, result_type: UInt64, source_id: 10
+                  COLUMN id: 13, column_name: uint64, result_type: UInt64, source_id: 10
   JOIN TREE
     TABLE id: 10, alias: __table1, table_name: default.test_table
 SELECT sum(float64 + 2) From test_table;
@@ -1762,7 +1762,7 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: count, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 12, nodes: 1
-                        COLUMN id: 6, column_name: float64, result_type: Float64, source_id: 7
+                        COLUMN id: 13, column_name: float64, result_type: Float64, source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT 2 * count(float64) + sum(float64) From test_table);
@@ -1785,7 +1785,7 @@ QUERY id: 0
             FUNCTION id: 11, function_name: sum, function_type: aggregate, result_type: Float64
               ARGUMENTS
                 LIST id: 12, nodes: 1
-                  COLUMN id: 9, column_name: float64, result_type: Float64, source_id: 10
+                  COLUMN id: 13, column_name: float64, result_type: Float64, source_id: 10
   JOIN TREE
     TABLE id: 10, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(float64) - 2 * count(float64) From test_table);
@@ -1808,7 +1808,7 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: count, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 12, nodes: 1
-                        COLUMN id: 6, column_name: float64, result_type: Float64, source_id: 7
+                        COLUMN id: 13, column_name: float64, result_type: Float64, source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT 2 * count(float64) - sum(float64) From test_table);
@@ -1831,7 +1831,7 @@ QUERY id: 0
             FUNCTION id: 11, function_name: sum, function_type: aggregate, result_type: Float64
               ARGUMENTS
                 LIST id: 12, nodes: 1
-                  COLUMN id: 9, column_name: float64, result_type: Float64, source_id: 10
+                  COLUMN id: 13, column_name: float64, result_type: Float64, source_id: 10
   JOIN TREE
     TABLE id: 10, alias: __table1, table_name: default.test_table
 SELECT sum(decimal32 + 2) From test_table;
@@ -1962,7 +1962,7 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: count, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 12, nodes: 1
-                        COLUMN id: 6, column_name: decimal32, result_type: Decimal(9, 5), source_id: 7
+                        COLUMN id: 13, column_name: decimal32, result_type: Decimal(9, 5), source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT 2 * count(decimal32) + sum(decimal32) From test_table);
@@ -1985,7 +1985,7 @@ QUERY id: 0
             FUNCTION id: 11, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
               ARGUMENTS
                 LIST id: 12, nodes: 1
-                  COLUMN id: 9, column_name: decimal32, result_type: Decimal(9, 5), source_id: 10
+                  COLUMN id: 13, column_name: decimal32, result_type: Decimal(9, 5), source_id: 10
   JOIN TREE
     TABLE id: 10, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(decimal32) - 2 * count(decimal32) From test_table);
@@ -2008,7 +2008,7 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: count, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 12, nodes: 1
-                        COLUMN id: 6, column_name: decimal32, result_type: Decimal(9, 5), source_id: 7
+                        COLUMN id: 13, column_name: decimal32, result_type: Decimal(9, 5), source_id: 7
   JOIN TREE
     TABLE id: 7, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT 2 * count(decimal32) - sum(decimal32) From test_table);
@@ -2031,7 +2031,7 @@ QUERY id: 0
             FUNCTION id: 11, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
               ARGUMENTS
                 LIST id: 12, nodes: 1
-                  COLUMN id: 9, column_name: decimal32, result_type: Decimal(9, 5), source_id: 10
+                  COLUMN id: 13, column_name: decimal32, result_type: Decimal(9, 5), source_id: 10
   JOIN TREE
     TABLE id: 10, alias: __table1, table_name: default.test_table
 SELECT sum(uint64 + 2) + sum(uint64 + 3) From test_table;
@@ -2082,15 +2082,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(uint64 + 2) - sum(uint64 + 3) From test_table);
@@ -2123,15 +2123,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(uint64 - 2) + sum(uint64 - 3) From test_table);
@@ -2164,15 +2164,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(uint64 - 2) - sum(uint64 - 3) From test_table);
@@ -2205,15 +2205,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: uint64, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(2 - uint64) - sum(3 - uint64) From test_table);
@@ -2250,11 +2250,11 @@ QUERY id: 0
                         FUNCTION id: 20, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 21, nodes: 1
-                              COLUMN id: 11, column_name: uint64, result_type: UInt64, source_id: 12
-                  FUNCTION id: 22, function_name: sum, function_type: aggregate, result_type: UInt64
+                              COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 12
+                  FUNCTION id: 23, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 23, nodes: 1
-                        COLUMN id: 11, column_name: uint64, result_type: UInt64, source_id: 12
+                      LIST id: 24, nodes: 1
+                        COLUMN id: 22, column_name: uint64, result_type: UInt64, source_id: 12
   JOIN TREE
     TABLE id: 12, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(uint64) + 2 * count(uint64)) + (sum(uint64) + 3 * count(uint64)) From test_table);
@@ -2280,22 +2280,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-            FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: UInt64
+                              COLUMN id: 15, column_name: uint64, result_type: UInt64, source_id: 9
+            FUNCTION id: 16, function_name: plus, function_type: ordinary, result_type: UInt64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: uint64, result_type: UInt64, source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(uint64) + 2 * count(uint64)) - (sum(uint64) + 3 * count(uint64)) From test_table);
@@ -2321,22 +2321,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-            FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: UInt64
+                              COLUMN id: 15, column_name: uint64, result_type: UInt64, source_id: 9
+            FUNCTION id: 16, function_name: plus, function_type: ordinary, result_type: UInt64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: uint64, result_type: UInt64, source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(uint64) - 2 * count(uint64)) + (sum(uint64) - 3 * count(uint64)) From test_table);
@@ -2362,22 +2362,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Int64
+                              COLUMN id: 15, column_name: uint64, result_type: UInt64, source_id: 9
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Int64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: uint64, result_type: UInt64, source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(uint64) - 2 * count(uint64)) - (sum(uint64) - 3 * count(uint64)) From test_table);
@@ -2403,22 +2403,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Int64
+                              COLUMN id: 15, column_name: uint64, result_type: UInt64, source_id: 9
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Int64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: UInt64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: uint64, result_type: UInt64, source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: uint64, result_type: UInt64, source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (2 * count(uint64) - sum(uint64)) + (3 * count(uint64) - sum(uint64)) From test_table);
@@ -2444,22 +2444,22 @@ QUERY id: 0
                   FUNCTION id: 13, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
                       LIST id: 14, nodes: 1
-                        COLUMN id: 11, column_name: uint64, result_type: UInt64, source_id: 12
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Int64
+                        COLUMN id: 15, column_name: uint64, result_type: UInt64, source_id: 12
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Int64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: multiply, function_type: ordinary, result_type: UInt64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 18, nodes: 2
-                        CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 20, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 19, nodes: 2
+                        CONSTANT id: 20, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 21, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 21, nodes: 1
-                              COLUMN id: 11, column_name: uint64, result_type: UInt64, source_id: 12
-                  FUNCTION id: 22, function_name: sum, function_type: aggregate, result_type: UInt64
+                            LIST id: 22, nodes: 1
+                              COLUMN id: 23, column_name: uint64, result_type: UInt64, source_id: 12
+                  FUNCTION id: 24, function_name: sum, function_type: aggregate, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 23, nodes: 1
-                        COLUMN id: 11, column_name: uint64, result_type: UInt64, source_id: 12
+                      LIST id: 25, nodes: 1
+                        COLUMN id: 26, column_name: uint64, result_type: UInt64, source_id: 12
   JOIN TREE
     TABLE id: 12, alias: __table1, table_name: default.test_table
 SELECT sum(float64 + 2) + sum(float64 + 3) From test_table;
@@ -2512,15 +2512,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: float64, result_type: Float64, source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: float64, result_type: Float64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(float64 + 2) - sum(float64 + 3) From test_table);
@@ -2553,15 +2553,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: float64, result_type: Float64, source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: float64, result_type: Float64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(float64 - 2) + sum(float64 - 3) From test_table);
@@ -2594,15 +2594,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: float64, result_type: Float64, source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: float64, result_type: Float64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(float64 - 2) - sum(float64 - 3) From test_table);
@@ -2635,15 +2635,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: float64, result_type: Float64, source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: float64, result_type: Float64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(2 - float64) - sum(3 - float64) From test_table);
@@ -2680,11 +2680,11 @@ QUERY id: 0
                         FUNCTION id: 20, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 21, nodes: 1
-                              COLUMN id: 11, column_name: float64, result_type: Float64, source_id: 12
-                  FUNCTION id: 22, function_name: sum, function_type: aggregate, result_type: Float64
+                              COLUMN id: 22, column_name: float64, result_type: Float64, source_id: 12
+                  FUNCTION id: 23, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
-                      LIST id: 23, nodes: 1
-                        COLUMN id: 11, column_name: float64, result_type: Float64, source_id: 12
+                      LIST id: 24, nodes: 1
+                        COLUMN id: 22, column_name: float64, result_type: Float64, source_id: 12
   JOIN TREE
     TABLE id: 12, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(float64) + 2 * count(float64)) + (sum(float64) + 3 * count(float64)) From test_table);
@@ -2710,22 +2710,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-            FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: Float64
+                              COLUMN id: 15, column_name: float64, result_type: Float64, source_id: 9
+            FUNCTION id: 16, function_name: plus, function_type: ordinary, result_type: Float64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Float64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: float64, result_type: Float64, source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: float64, result_type: Float64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(float64) + 2 * count(float64)) - (sum(float64) + 3 * count(float64)) From test_table);
@@ -2751,22 +2751,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-            FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: Float64
+                              COLUMN id: 15, column_name: float64, result_type: Float64, source_id: 9
+            FUNCTION id: 16, function_name: plus, function_type: ordinary, result_type: Float64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Float64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: float64, result_type: Float64, source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: float64, result_type: Float64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(float64) - 2 * count(float64)) + (sum(float64) - 3 * count(float64)) From test_table);
@@ -2792,22 +2792,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Float64
+                              COLUMN id: 15, column_name: float64, result_type: Float64, source_id: 9
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Float64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Float64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: float64, result_type: Float64, source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: float64, result_type: Float64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(float64) - 2 * count(float64)) - (sum(float64) - 3 * count(float64)) From test_table);
@@ -2833,22 +2833,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Float64
+                              COLUMN id: 15, column_name: float64, result_type: Float64, source_id: 9
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Float64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Float64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: float64, result_type: Float64, source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: float64, result_type: Float64, source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: float64, result_type: Float64, source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (2 * count(float64) - sum(float64)) + (3 * count(float64) - sum(float64)) From test_table);
@@ -2874,22 +2874,22 @@ QUERY id: 0
                   FUNCTION id: 13, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
                       LIST id: 14, nodes: 1
-                        COLUMN id: 11, column_name: float64, result_type: Float64, source_id: 12
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Float64
+                        COLUMN id: 15, column_name: float64, result_type: Float64, source_id: 12
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Float64
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: multiply, function_type: ordinary, result_type: UInt64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 18, nodes: 2
-                        CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 20, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 19, nodes: 2
+                        CONSTANT id: 20, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 21, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 21, nodes: 1
-                              COLUMN id: 11, column_name: float64, result_type: Float64, source_id: 12
-                  FUNCTION id: 22, function_name: sum, function_type: aggregate, result_type: Float64
+                            LIST id: 22, nodes: 1
+                              COLUMN id: 23, column_name: float64, result_type: Float64, source_id: 12
+                  FUNCTION id: 24, function_name: sum, function_type: aggregate, result_type: Float64
                     ARGUMENTS
-                      LIST id: 23, nodes: 1
-                        COLUMN id: 11, column_name: float64, result_type: Float64, source_id: 12
+                      LIST id: 25, nodes: 1
+                        COLUMN id: 26, column_name: float64, result_type: Float64, source_id: 12
   JOIN TREE
     TABLE id: 12, alias: __table1, table_name: default.test_table
 SELECT sum(decimal32 + 2) + sum(decimal32 + 3) From test_table;
@@ -2942,15 +2942,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(decimal32 + 2) - sum(decimal32 + 3) From test_table);
@@ -2983,15 +2983,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(decimal32 - 2) + sum(decimal32 - 3) From test_table);
@@ -3024,15 +3024,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(decimal32 - 2) - sum(decimal32 - 3) From test_table);
@@ -3065,15 +3065,15 @@ QUERY id: 0
                   FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
                       LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                        COLUMN id: 19, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                  FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 21, nodes: 2
+                        CONSTANT id: 22, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 23, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                            LIST id: 24, nodes: 1
+                              COLUMN id: 19, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT sum(2 - decimal32) - sum(3 - decimal32) From test_table);
@@ -3110,11 +3110,11 @@ QUERY id: 0
                         FUNCTION id: 20, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 21, nodes: 1
-                              COLUMN id: 11, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
-                  FUNCTION id: 22, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
+                              COLUMN id: 22, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
+                  FUNCTION id: 23, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
-                      LIST id: 23, nodes: 1
-                        COLUMN id: 11, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
+                      LIST id: 24, nodes: 1
+                        COLUMN id: 22, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
   JOIN TREE
     TABLE id: 12, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(decimal32) + 2 * count(decimal32)) + (sum(decimal32) + 3 * count(decimal32)) From test_table);
@@ -3140,22 +3140,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-            FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: Decimal(38, 5)
+                              COLUMN id: 15, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+            FUNCTION id: 16, function_name: plus, function_type: ordinary, result_type: Decimal(38, 5)
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(decimal32) + 2 * count(decimal32)) - (sum(decimal32) + 3 * count(decimal32)) From test_table);
@@ -3181,22 +3181,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-            FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: Decimal(38, 5)
+                              COLUMN id: 15, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+            FUNCTION id: 16, function_name: plus, function_type: ordinary, result_type: Decimal(38, 5)
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(decimal32) - 2 * count(decimal32)) + (sum(decimal32) - 3 * count(decimal32)) From test_table);
@@ -3222,22 +3222,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Decimal(38, 5)
+                              COLUMN id: 15, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Decimal(38, 5)
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (sum(decimal32) - 2 * count(decimal32)) - (sum(decimal32) - 3 * count(decimal32)) From test_table);
@@ -3263,22 +3263,22 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
                             LIST id: 14, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Decimal(38, 5)
+                              COLUMN id: 15, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Decimal(38, 5)
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
-                      LIST id: 18, nodes: 1
-                        COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
-                  FUNCTION id: 19, function_name: multiply, function_type: ordinary, result_type: UInt64
+                      LIST id: 19, nodes: 1
+                        COLUMN id: 20, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                  FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        CONSTANT id: 21, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 22, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 22, nodes: 2
+                        CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 24, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 23, nodes: 1
-                              COLUMN id: 8, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
+                            LIST id: 25, nodes: 1
+                              COLUMN id: 26, column_name: decimal32, result_type: Decimal(9, 5), source_id: 9
   JOIN TREE
     TABLE id: 9, alias: __table1, table_name: default.test_table
 EXPLAIN QUERY TREE (SELECT (2 * count(decimal32) - sum(decimal32)) + (3 * count(decimal32) - sum(decimal32)) From test_table);
@@ -3304,21 +3304,21 @@ QUERY id: 0
                   FUNCTION id: 13, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
                       LIST id: 14, nodes: 1
-                        COLUMN id: 11, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
-            FUNCTION id: 15, function_name: minus, function_type: ordinary, result_type: Decimal(38, 5)
+                        COLUMN id: 15, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
+            FUNCTION id: 16, function_name: minus, function_type: ordinary, result_type: Decimal(38, 5)
               ARGUMENTS
-                LIST id: 16, nodes: 2
-                  FUNCTION id: 17, function_name: multiply, function_type: ordinary, result_type: UInt64
+                LIST id: 17, nodes: 2
+                  FUNCTION id: 18, function_name: multiply, function_type: ordinary, result_type: UInt64
                     ARGUMENTS
-                      LIST id: 18, nodes: 2
-                        CONSTANT id: 19, constant_value: UInt64_3, constant_value_type: UInt8
-                        FUNCTION id: 20, function_name: count, function_type: aggregate, result_type: UInt64
+                      LIST id: 19, nodes: 2
+                        CONSTANT id: 20, constant_value: UInt64_3, constant_value_type: UInt8
+                        FUNCTION id: 21, function_name: count, function_type: aggregate, result_type: UInt64
                           ARGUMENTS
-                            LIST id: 21, nodes: 1
-                              COLUMN id: 11, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
-                  FUNCTION id: 22, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
+                            LIST id: 22, nodes: 1
+                              COLUMN id: 23, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
+                  FUNCTION id: 24, function_name: sum, function_type: aggregate, result_type: Decimal(38, 5)
                     ARGUMENTS
-                      LIST id: 23, nodes: 1
-                        COLUMN id: 11, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
+                      LIST id: 25, nodes: 1
+                        COLUMN id: 26, column_name: decimal32, result_type: Decimal(9, 5), source_id: 12
   JOIN TREE
     TABLE id: 12, alias: __table1, table_name: default.test_table
diff --git a/tests/queries/0_stateless/02969_analyzer_eliminate_injective_functions.reference b/tests/queries/0_stateless/02969_analyzer_eliminate_injective_functions.reference
index 72d83e5cf6a4..ebdc505f6381 100644
--- a/tests/queries/0_stateless/02969_analyzer_eliminate_injective_functions.reference
+++ b/tests/queries/0_stateless/02969_analyzer_eliminate_injective_functions.reference
@@ -23,26 +23,26 @@ QUERY id: 0
           CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
   GROUP BY
     LIST id: 14, nodes: 1
-      FUNCTION id: 6, function_name: plus, function_type: ordinary, result_type: UInt64
+      FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: UInt64
         ARGUMENTS
-          LIST id: 7, nodes: 2
-            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-            CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
+          LIST id: 16, nodes: 2
+            COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 9
+            CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
   ORDER BY
-    LIST id: 15, nodes: 1
-      SORT id: 16, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 19, nodes: 1
+      SORT id: 20, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: toString, function_type: ordinary, result_type: String
+          FUNCTION id: 21, function_name: toString, function_type: ordinary, result_type: String
             ARGUMENTS
-              LIST id: 3, nodes: 1
-                FUNCTION id: 4, function_name: toString, function_type: ordinary, result_type: String
+              LIST id: 22, nodes: 1
+                FUNCTION id: 23, function_name: toString, function_type: ordinary, result_type: String
                   ARGUMENTS
-                    LIST id: 5, nodes: 1
-                      FUNCTION id: 6, function_name: plus, function_type: ordinary, result_type: UInt64
+                    LIST id: 24, nodes: 1
+                      FUNCTION id: 25, function_name: plus, function_type: ordinary, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 7, nodes: 2
-                            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                            CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
+                          LIST id: 26, nodes: 2
+                            COLUMN id: 27, column_name: number, result_type: UInt64, source_id: 9
+                            CONSTANT id: 28, constant_value: UInt64_1, constant_value_type: UInt8
 1	1
 2	1
 QUERY id: 0
@@ -79,17 +79,17 @@ QUERY id: 0
     LIST id: 15, nodes: 1
       SORT id: 16, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: toString, function_type: ordinary, result_type: String
+          FUNCTION id: 17, function_name: toString, function_type: ordinary, result_type: String
             ARGUMENTS
-              LIST id: 3, nodes: 1
-                FUNCTION id: 4, function_name: toString, function_type: ordinary, result_type: String
+              LIST id: 18, nodes: 1
+                FUNCTION id: 19, function_name: toString, function_type: ordinary, result_type: String
                   ARGUMENTS
-                    LIST id: 5, nodes: 1
-                      FUNCTION id: 6, function_name: plus, function_type: ordinary, result_type: UInt64
+                    LIST id: 20, nodes: 1
+                      FUNCTION id: 21, function_name: plus, function_type: ordinary, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 7, nodes: 2
-                            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                            CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
+                          LIST id: 22, nodes: 2
+                            COLUMN id: 23, column_name: number, result_type: UInt64, source_id: 9
+                            CONSTANT id: 24, constant_value: UInt64_1, constant_value_type: UInt8
 CHECK WITH TOTALS
 QUERY id: 0, is_group_by_with_totals: 1
   PROJECTION COLUMNS
@@ -116,26 +116,26 @@ QUERY id: 0, is_group_by_with_totals: 1
           CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
   GROUP BY
     LIST id: 14, nodes: 1
-      FUNCTION id: 6, function_name: plus, function_type: ordinary, result_type: UInt64
+      FUNCTION id: 15, function_name: plus, function_type: ordinary, result_type: UInt64
         ARGUMENTS
-          LIST id: 7, nodes: 2
-            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-            CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
+          LIST id: 16, nodes: 2
+            COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 9
+            CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt8
   ORDER BY
-    LIST id: 15, nodes: 1
-      SORT id: 16, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 19, nodes: 1
+      SORT id: 20, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          FUNCTION id: 2, function_name: toString, function_type: ordinary, result_type: String
+          FUNCTION id: 21, function_name: toString, function_type: ordinary, result_type: String
             ARGUMENTS
-              LIST id: 3, nodes: 1
-                FUNCTION id: 4, function_name: toString, function_type: ordinary, result_type: String
+              LIST id: 22, nodes: 1
+                FUNCTION id: 23, function_name: toString, function_type: ordinary, result_type: String
                   ARGUMENTS
-                    LIST id: 5, nodes: 1
-                      FUNCTION id: 6, function_name: plus, function_type: ordinary, result_type: UInt64
+                    LIST id: 24, nodes: 1
+                      FUNCTION id: 25, function_name: plus, function_type: ordinary, result_type: UInt64
                         ARGUMENTS
-                          LIST id: 7, nodes: 2
-                            COLUMN id: 8, column_name: number, result_type: UInt64, source_id: 9
-                            CONSTANT id: 10, constant_value: UInt64_1, constant_value_type: UInt8
+                          LIST id: 26, nodes: 2
+                            COLUMN id: 27, column_name: number, result_type: UInt64, source_id: 9
+                            CONSTANT id: 28, constant_value: UInt64_1, constant_value_type: UInt8
 1	1
 2	1
 
diff --git a/tests/queries/0_stateless/02999_analyzer_preimage_null.reference b/tests/queries/0_stateless/02999_analyzer_preimage_null.reference
index c5eb6b23d0d2..5f21c8656daa 100644
--- a/tests/queries/0_stateless/02999_analyzer_preimage_null.reference
+++ b/tests/queries/0_stateless/02999_analyzer_preimage_null.reference
@@ -36,10 +36,10 @@ QUERY id: 0
             ARGUMENTS
               LIST id: 18, nodes: 2
                 COLUMN id: 19, column_name: id, result_type: UInt32, source_id: 3
-                FUNCTION id: 10, function_name: toYear, function_type: ordinary, result_type: UInt16
+                FUNCTION id: 20, function_name: toYear, function_type: ordinary, result_type: UInt16
                   ARGUMENTS
-                    LIST id: 11, nodes: 1
-                      COLUMN id: 12, column_name: date1, result_type: Date, source_id: 3
+                    LIST id: 21, nodes: 1
+                      COLUMN id: 22, column_name: date1, result_type: Date, source_id: 3
 EXPLAIN QUERY TREE run_passes = 1
 SELECT *
 FROM date_t__fuzz_0
@@ -72,10 +72,10 @@ QUERY id: 0
             ARGUMENTS
               LIST id: 15, nodes: 2
                 COLUMN id: 16, column_name: id, result_type: UInt32, source_id: 3
-                FUNCTION id: 10, function_name: toYear, function_type: ordinary, result_type: UInt16
+                FUNCTION id: 17, function_name: toYear, function_type: ordinary, result_type: UInt16
                   ARGUMENTS
-                    LIST id: 11, nodes: 1
-                      COLUMN id: 12, column_name: date1, result_type: Date, source_id: 3
+                    LIST id: 18, nodes: 1
+                      COLUMN id: 19, column_name: date1, result_type: Date, source_id: 3
   SETTINGS optimize_time_filter_with_preimage=0
 EXPLAIN QUERY TREE run_passes = 1
 SELECT *
@@ -117,5 +117,5 @@ QUERY id: 0
                 FUNCTION id: 20, function_name: toYear, function_type: ordinary, result_type: UInt16
                   ARGUMENTS
                     LIST id: 21, nodes: 1
-                      COLUMN id: 12, column_name: date1, result_type: Date, source_id: 3
+                      COLUMN id: 22, column_name: date1, result_type: Date, source_id: 3
   SETTINGS optimize_time_filter_with_preimage=1
diff --git a/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.reference b/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.reference
index f599e28b8ab0..18910989d03e 100644
--- a/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.reference
+++ b/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.reference
@@ -1,1 +1,11 @@
 10
+0	0
+0	1
+0	2
+0	3
+0	4
+5	5
+5	6
+5	7
+5	8
+5	9
diff --git a/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.sql b/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.sql
index 22f103c9bd5d..972d425a2d0b 100644
--- a/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.sql
+++ b/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.sql
@@ -25,3 +25,35 @@ SELECT v FROM (
 );
 
 WITH (SELECT v FROM vecs_Float32 limit 1) AS a SELECT count(dp) FROM (SELECT dotProduct(a, v) AS dp FROM vecs_Float32);
+
+WITH
+  t as (SELECT number + a as x FROM numbers(5))
+SELECT 0 as a, x FROM t
+UNION ALL
+SELECT 5 as a, x FROM t
+ORDER BY a, x
+FORMAT Null
+SETTINGS allow_experimental_analyzer = 1;
+
+WITH t AS
+    (
+        SELECT number + a AS x
+        FROM numbers(5)
+    )
+SELECT *
+FROM
+(
+    SELECT
+        0 AS a,
+        x
+    FROM t
+    UNION ALL
+    SELECT
+        5 AS a,
+        x
+    FROM t
+)
+ORDER BY
+    a ASC,
+    x ASC
+SETTINGS allow_experimental_analyzer = 1;
diff --git a/tests/queries/0_stateless/03132_rewrite_aggregate_function_with_if_implicit_cast.reference b/tests/queries/0_stateless/03132_rewrite_aggregate_function_with_if_implicit_cast.reference
index 8289ab68ae4c..0f7673e70a0b 100644
--- a/tests/queries/0_stateless/03132_rewrite_aggregate_function_with_if_implicit_cast.reference
+++ b/tests/queries/0_stateless/03132_rewrite_aggregate_function_with_if_implicit_cast.reference
@@ -24,34 +24,34 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 12, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 13, constant_value: UInt64_10, constant_value_type: UInt8
-                  CONSTANT id: 14, constant_value: UInt64_5, constant_value_type: UInt8
-      FUNCTION id: 15, function_name: toTypeName, function_type: ordinary, result_type: String
+                        COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 14, constant_value: UInt64_10, constant_value_type: UInt8
+                  CONSTANT id: 15, constant_value: UInt64_5, constant_value_type: UInt8
+      FUNCTION id: 16, function_name: toTypeName, function_type: ordinary, result_type: String
         ARGUMENTS
-          LIST id: 16, nodes: 1
-            FUNCTION id: 17, function_name: anyIf, function_type: aggregate, result_type: Nullable(Int128)
+          LIST id: 17, nodes: 1
+            FUNCTION id: 18, function_name: anyIf, function_type: aggregate, result_type: Nullable(Int128)
               ARGUMENTS
-                LIST id: 18, nodes: 2
-                  FUNCTION id: 19, function_name: _CAST, function_type: ordinary, result_type: Nullable(Int128)
+                LIST id: 19, nodes: 2
+                  FUNCTION id: 20, function_name: _CAST, function_type: ordinary, result_type: Nullable(Int128)
                     ARGUMENTS
-                      LIST id: 20, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 21, constant_value: \'Nullable(Int128)\', constant_value_type: String
-                  FUNCTION id: 9, function_name: equals, function_type: ordinary, result_type: UInt8
+                      LIST id: 21, nodes: 2
+                        COLUMN id: 22, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 23, constant_value: \'Nullable(Int128)\', constant_value_type: String
+                  FUNCTION id: 24, function_name: equals, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 10, nodes: 2
-                        FUNCTION id: 11, function_name: modulo, function_type: ordinary, result_type: UInt8
+                      LIST id: 25, nodes: 2
+                        FUNCTION id: 26, function_name: modulo, function_type: ordinary, result_type: UInt8
                           ARGUMENTS
-                            LIST id: 12, nodes: 2
-                              COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                              CONSTANT id: 13, constant_value: UInt64_10, constant_value_type: UInt8
-                        CONSTANT id: 14, constant_value: UInt64_5, constant_value_type: UInt8
+                            LIST id: 27, nodes: 2
+                              COLUMN id: 28, column_name: number, result_type: UInt64, source_id: 7
+                              CONSTANT id: 29, constant_value: UInt64_10, constant_value_type: UInt8
+                        CONSTANT id: 30, constant_value: UInt64_5, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 22, nodes: 1
-          CONSTANT id: 23, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 31, nodes: 1
+          CONSTANT id: 32, constant_value: UInt64_100, constant_value_type: UInt8
 SELECT any(if((number % 10) = 5, CAST(NULL, 'Nullable(Int128)'), number)) AS a, toTypeName(a) FROM numbers(100) AS a;
 0	Nullable(Int128)
 EXPLAIN QUERY TREE SELECT any(if((number % 10) = 5, CAST(NULL, 'Nullable(Int128)'), number)) AS a, toTypeName(a) FROM numbers(100);
@@ -78,34 +78,34 @@ QUERY id: 0
                         FUNCTION id: 13, function_name: modulo, function_type: ordinary, result_type: UInt8
                           ARGUMENTS
                             LIST id: 14, nodes: 2
-                              COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                              CONSTANT id: 15, constant_value: UInt64_10, constant_value_type: UInt8
-                        CONSTANT id: 16, constant_value: UInt64_5, constant_value_type: UInt8
-      FUNCTION id: 17, function_name: toTypeName, function_type: ordinary, result_type: String
+                              COLUMN id: 15, column_name: number, result_type: UInt64, source_id: 7
+                              CONSTANT id: 16, constant_value: UInt64_10, constant_value_type: UInt8
+                        CONSTANT id: 17, constant_value: UInt64_5, constant_value_type: UInt8
+      FUNCTION id: 18, function_name: toTypeName, function_type: ordinary, result_type: String
         ARGUMENTS
-          LIST id: 18, nodes: 1
-            FUNCTION id: 19, function_name: anyIf, function_type: aggregate, result_type: Nullable(Int128)
+          LIST id: 19, nodes: 1
+            FUNCTION id: 20, function_name: anyIf, function_type: aggregate, result_type: Nullable(Int128)
               ARGUMENTS
-                LIST id: 20, nodes: 2
-                  FUNCTION id: 21, function_name: _CAST, function_type: ordinary, result_type: Nullable(Int128)
+                LIST id: 21, nodes: 2
+                  FUNCTION id: 22, function_name: _CAST, function_type: ordinary, result_type: Nullable(Int128)
                     ARGUMENTS
-                      LIST id: 22, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 23, constant_value: \'Nullable(Int128)\', constant_value_type: String
-                  FUNCTION id: 24, function_name: not, function_type: ordinary, result_type: UInt8
+                      LIST id: 23, nodes: 2
+                        COLUMN id: 24, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 25, constant_value: \'Nullable(Int128)\', constant_value_type: String
+                  FUNCTION id: 26, function_name: not, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 25, nodes: 1
-                        FUNCTION id: 11, function_name: equals, function_type: ordinary, result_type: UInt8
+                      LIST id: 27, nodes: 1
+                        FUNCTION id: 28, function_name: equals, function_type: ordinary, result_type: UInt8
                           ARGUMENTS
-                            LIST id: 12, nodes: 2
-                              FUNCTION id: 13, function_name: modulo, function_type: ordinary, result_type: UInt8
+                            LIST id: 29, nodes: 2
+                              FUNCTION id: 30, function_name: modulo, function_type: ordinary, result_type: UInt8
                                 ARGUMENTS
-                                  LIST id: 14, nodes: 2
-                                    COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                                    CONSTANT id: 15, constant_value: UInt64_10, constant_value_type: UInt8
-                              CONSTANT id: 16, constant_value: UInt64_5, constant_value_type: UInt8
+                                  LIST id: 31, nodes: 2
+                                    COLUMN id: 32, column_name: number, result_type: UInt64, source_id: 7
+                                    CONSTANT id: 33, constant_value: UInt64_10, constant_value_type: UInt8
+                              CONSTANT id: 34, constant_value: UInt64_5, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 26, nodes: 1
-          CONSTANT id: 27, constant_value: UInt64_100, constant_value_type: UInt8
+        LIST id: 35, nodes: 1
+          CONSTANT id: 36, constant_value: UInt64_100, constant_value_type: UInt8
diff --git a/tests/queries/0_stateless/03165_order_by_duplicate.reference b/tests/queries/0_stateless/03165_order_by_duplicate.reference
index 93d312d5d020..4cc3bb11cdfe 100644
--- a/tests/queries/0_stateless/03165_order_by_duplicate.reference
+++ b/tests/queries/0_stateless/03165_order_by_duplicate.reference
@@ -10,30 +10,30 @@ QUERY id: 0
     FUNCTION id: 4, function_name: in, function_type: ordinary, result_type: UInt8
       ARGUMENTS
         LIST id: 5, nodes: 2
-          COLUMN id: 2, column_name: id, result_type: UInt64, source_id: 3
-          QUERY id: 6, is_subquery: 1, is_distinct: 1
+          COLUMN id: 6, column_name: id, result_type: UInt64, source_id: 3
+          QUERY id: 7, is_subquery: 1, is_distinct: 1
             PROJECTION COLUMNS
               id UInt64
             PROJECTION
-              LIST id: 7, nodes: 1
-                COLUMN id: 8, column_name: id, result_type: UInt64, source_id: 9
+              LIST id: 8, nodes: 1
+                COLUMN id: 9, column_name: id, result_type: UInt64, source_id: 10
             JOIN TREE
-              TABLE id: 9, alias: __table1, table_name: default.test, final: 1
+              TABLE id: 10, alias: __table1, table_name: default.test, final: 1
             ORDER BY
-              LIST id: 10, nodes: 1
-                SORT id: 11, sort_direction: ASCENDING, with_fill: 0
+              LIST id: 11, nodes: 1
+                SORT id: 12, sort_direction: ASCENDING, with_fill: 0
                   EXPRESSION
-                    COLUMN id: 8, column_name: id, result_type: UInt64, source_id: 9
+                    COLUMN id: 13, column_name: id, result_type: UInt64, source_id: 10
             LIMIT
-              CONSTANT id: 12, constant_value: UInt64_4, constant_value_type: UInt64
+              CONSTANT id: 14, constant_value: UInt64_4, constant_value_type: UInt64
   ORDER BY
-    LIST id: 13, nodes: 1
-      SORT id: 14, sort_direction: ASCENDING, with_fill: 0
+    LIST id: 15, nodes: 1
+      SORT id: 16, sort_direction: ASCENDING, with_fill: 0
         EXPRESSION
-          COLUMN id: 2, column_name: id, result_type: UInt64, source_id: 3
+          COLUMN id: 17, column_name: id, result_type: UInt64, source_id: 3
   LIMIT BY LIMIT
-    CONSTANT id: 15, constant_value: UInt64_1, constant_value_type: UInt64
+    CONSTANT id: 18, constant_value: UInt64_1, constant_value_type: UInt64
   LIMIT BY
-    LIST id: 16, nodes: 1
-      COLUMN id: 2, column_name: id, result_type: UInt64, source_id: 3
+    LIST id: 19, nodes: 1
+      COLUMN id: 20, column_name: id, result_type: UInt64, source_id: 3
   SETTINGS enable_analyzer=1
diff --git a/tests/queries/0_stateless/03201_analyzer_resolve_in_parent_scope.reference b/tests/queries/0_stateless/03201_analyzer_resolve_in_parent_scope.reference
new file mode 100644
index 000000000000..e2a39948eef7
--- /dev/null
+++ b/tests/queries/0_stateless/03201_analyzer_resolve_in_parent_scope.reference
@@ -0,0 +1,6 @@
+fake
+objectValue
+0abc
+1
+0
+1
diff --git a/tests/queries/0_stateless/03201_analyzer_resolve_in_parent_scope.sql b/tests/queries/0_stateless/03201_analyzer_resolve_in_parent_scope.sql
new file mode 100644
index 000000000000..f2f41130e878
--- /dev/null
+++ b/tests/queries/0_stateless/03201_analyzer_resolve_in_parent_scope.sql
@@ -0,0 +1,87 @@
+CREATE VIEW fake AS SELECT table, database, name FROM system.tables WHERE database = currentDatabase();
+
+WITH
+(`database` NOT LIKE 'system' and `name` = 'fake') AS `$condition`,
+`$main` AS (SELECT DISTINCT table FROM fake WHERE `$condition`)
+SELECT * FROM `$main`;
+
+with properties_value[indexOf(properties_key, 'objectId')] as objectId,
+data as (
+  select
+    ['objectId'] as properties_key,
+    ['objectValue'] as properties_value
+),
+nested_query as (
+  select
+    objectId
+  from
+    data
+)
+select
+  *
+from
+  nested_query;
+
+WITH leftPad('abc', 4, '0') as paddedval
+SELECT * FROM (SELECT paddedval);
+
+with ('408','420') as some_tuple
+select '408' in some_tuple as flag;
+
+CREATE VIEW another_fake AS SELECT bytes, table FROM system.parts;
+
+WITH
+    sum(bytes) as s,
+    data as (
+      SELECT
+        formatReadableSize(s),
+        table
+      FROM another_fake
+      GROUP BY table
+      ORDER BY s
+    )
+select * from data
+FORMAT Null;
+
+CREATE TABLE test
+  (
+    a UInt64,
+    b UInt64,
+    Block_Height UInt64,
+    Block_Date Date
+  ) ENGINE = Log;
+
+WITH Block_Height BETWEEN 1 AND 2 AS block_filter
+SELECT *
+FROM test
+WHERE block_filter
+AND (
+    Block_Date IN (
+      SELECT Block_Date FROM test WHERE block_filter
+    )
+);
+
+CREATE TABLE test_cte
+(
+    a UInt64,
+    b UInt64,
+)
+ENGINE = MergeTree
+ORDER BY tuple();
+
+WITH
+   (a > b) as cte,
+   query AS
+    (
+        SELECT count()
+        FROM test_cte
+        WHERE cte
+    )
+SELECT *
+FROM query;
+
+WITH arrayMap(x -> (x + 1), [0]) AS a
+SELECT 1
+WHERE 1 IN (
+    SELECT arrayJoin(a)
+);
diff --git a/tests/queries/0_stateless/03248_invalid_where.sql b/tests/queries/0_stateless/03248_invalid_where.sql
index 0b1183a382a6..65fcd2fe4e37 100644
--- a/tests/queries/0_stateless/03248_invalid_where.sql
+++ b/tests/queries/0_stateless/03248_invalid_where.sql
@@ -1,1 +1,2 @@
-WITH x -> toString(x) AS lambda_1 SELECT arrayMap(lambda_1 AS lambda_2, [1, 2, 3]), arrayMap(lambda_2, ['1', '2', '3']) WHERE lambda_2; -- { serverError UNEXPECTED_EXPRESSION }
\ No newline at end of file
+WITH x -> toString(x) AS lambda_1 SELECT arrayMap(lambda_1 AS lambda_2, [1, 2, 3]), arrayMap(lambda_2, ['1', '2', '3']) WHERE lambda_2 SETTINGS enable_analyzer = 0; -- { serverError UNEXPECTED_EXPRESSION }
+WITH x -> toString(x) AS lambda_1 SELECT arrayMap(lambda_1 AS lambda_2, [1, 2, 3]), arrayMap(lambda_2, ['1', '2', '3']) WHERE lambda_2 SETTINGS enable_analyzer = 1; -- { serverError UNKNOWN_IDENTIFIER }
diff --git a/tests/queries/0_stateless/03262_common_expression_optimization.reference b/tests/queries/0_stateless/03262_common_expression_optimization.reference
index 76e9ee12c305..2deab57fc88e 100644
--- a/tests/queries/0_stateless/03262_common_expression_optimization.reference
+++ b/tests/queries/0_stateless/03262_common_expression_optimization.reference
@@ -18,8 +18,8 @@ QUERY id: 0
           FUNCTION id: 10, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 11, nodes: 2
-                COLUMN id: 8, column_name: A, result_type: UInt8, source_id: 3
-                COLUMN id: 12, column_name: C, result_type: UInt8, source_id: 3
+                COLUMN id: 12, column_name: A, result_type: UInt8, source_id: 3
+                COLUMN id: 13, column_name: C, result_type: UInt8, source_id: 3
   SETTINGS optimize_extract_common_expressions=0
 
 SELECT count() AS `count()`
@@ -624,13 +624,13 @@ QUERY id: 0
                 FUNCTION id: 12, function_name: and, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
                     LIST id: 13, nodes: 2
-                      COLUMN id: 9, column_name: B, result_type: UInt8, source_id: 3
-                      COLUMN id: 14, column_name: D, result_type: UInt8, source_id: 3
-                FUNCTION id: 15, function_name: and, function_type: ordinary, result_type: UInt8
+                      COLUMN id: 14, column_name: B, result_type: UInt8, source_id: 3
+                      COLUMN id: 15, column_name: D, result_type: UInt8, source_id: 3
+                FUNCTION id: 16, function_name: and, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 16, nodes: 2
-                      COLUMN id: 17, column_name: E, result_type: UInt8, source_id: 3
-                      COLUMN id: 18, column_name: F, result_type: UInt8, source_id: 3
+                    LIST id: 17, nodes: 2
+                      COLUMN id: 18, column_name: E, result_type: UInt8, source_id: 3
+                      COLUMN id: 19, column_name: F, result_type: UInt8, source_id: 3
 
 SELECT count() AS `count()`
 FROM default.x AS __table1
@@ -677,12 +677,12 @@ QUERY id: 0
                   ARGUMENTS
                     LIST id: 12, nodes: 2
                       COLUMN id: 13, column_name: E, result_type: UInt8, source_id: 3
-                      COLUMN id: 13, column_name: E, result_type: UInt8, source_id: 3
-                FUNCTION id: 14, function_name: and, function_type: ordinary, result_type: UInt8
+                      COLUMN id: 14, column_name: E, result_type: UInt8, source_id: 3
+                FUNCTION id: 15, function_name: and, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 15, nodes: 2
-                      COLUMN id: 16, column_name: F, result_type: UInt8, source_id: 3
-                      COLUMN id: 16, column_name: F, result_type: UInt8, source_id: 3
+                    LIST id: 16, nodes: 2
+                      COLUMN id: 17, column_name: F, result_type: UInt8, source_id: 3
+                      COLUMN id: 18, column_name: F, result_type: UInt8, source_id: 3
 
 SELECT count() AS `count()`
 FROM default.x AS __table1
@@ -824,8 +824,8 @@ QUERY id: 0
                       FUNCTION id: 16, function_name: and, function_type: ordinary, result_type: UInt8
                         ARGUMENTS
                           LIST id: 17, nodes: 2
-                            COLUMN id: 14, column_name: C, result_type: UInt8, source_id: 3
-                            COLUMN id: 18, column_name: E, result_type: UInt8, source_id: 3
+                            COLUMN id: 18, column_name: C, result_type: UInt8, source_id: 3
+                            COLUMN id: 19, column_name: E, result_type: UInt8, source_id: 3
 
 SELECT count() AS `count()`
 FROM default.x AS __table1
@@ -1038,33 +1038,33 @@ QUERY id: 0
     TABLE id: 3, alias: __table1, table_name: default.x
   GROUP BY
     LIST id: 13, nodes: 1
-      COLUMN id: 2, column_name: x, result_type: Int64, source_id: 3
+      COLUMN id: 14, column_name: x, result_type: Int64, source_id: 3
   HAVING
-    FUNCTION id: 14, function_name: or, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 15, function_name: or, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 15, nodes: 2
-          FUNCTION id: 16, function_name: and, function_type: ordinary, result_type: UInt8
+        LIST id: 16, nodes: 2
+          FUNCTION id: 17, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 17, nodes: 2
-                FUNCTION id: 4, function_name: max, function_type: aggregate, result_type: UInt8
+              LIST id: 18, nodes: 2
+                FUNCTION id: 19, function_name: max, function_type: aggregate, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 5, nodes: 1
-                      COLUMN id: 6, column_name: A, result_type: UInt8, source_id: 3
-                FUNCTION id: 7, function_name: max, function_type: aggregate, result_type: UInt8
+                    LIST id: 20, nodes: 1
+                      COLUMN id: 21, column_name: A, result_type: UInt8, source_id: 3
+                FUNCTION id: 22, function_name: max, function_type: aggregate, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 8, nodes: 1
-                      COLUMN id: 9, column_name: B, result_type: UInt8, source_id: 3
-          FUNCTION id: 18, function_name: and, function_type: ordinary, result_type: UInt8
+                    LIST id: 23, nodes: 1
+                      COLUMN id: 24, column_name: B, result_type: UInt8, source_id: 3
+          FUNCTION id: 25, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 19, nodes: 2
-                FUNCTION id: 4, function_name: max, function_type: aggregate, result_type: UInt8
+              LIST id: 26, nodes: 2
+                FUNCTION id: 27, function_name: max, function_type: aggregate, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 5, nodes: 1
-                      COLUMN id: 6, column_name: A, result_type: UInt8, source_id: 3
-                FUNCTION id: 10, function_name: max, function_type: aggregate, result_type: UInt8
+                    LIST id: 28, nodes: 1
+                      COLUMN id: 29, column_name: A, result_type: UInt8, source_id: 3
+                FUNCTION id: 30, function_name: max, function_type: aggregate, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 11, nodes: 1
-                      COLUMN id: 12, column_name: C, result_type: UInt8, source_id: 3
+                    LIST id: 31, nodes: 1
+                      COLUMN id: 32, column_name: C, result_type: UInt8, source_id: 3
 
 SELECT
     __table1.x AS x,
@@ -1114,98 +1114,98 @@ QUERY id: 0
                 FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: Int32
                   ARGUMENTS
                     LIST id: 10, nodes: 2
-                      COLUMN id: 2, column_name: x, result_type: Int64, source_id: 3
-                      CONSTANT id: 11, constant_value: UInt64_1000, constant_value_type: UInt16
-      FUNCTION id: 12, function_name: max, function_type: window, result_type: UInt8
+                      COLUMN id: 11, column_name: x, result_type: Int64, source_id: 3
+                      CONSTANT id: 12, constant_value: UInt64_1000, constant_value_type: UInt16
+      FUNCTION id: 13, function_name: max, function_type: window, result_type: UInt8
         ARGUMENTS
-          LIST id: 13, nodes: 1
-            COLUMN id: 14, column_name: B, result_type: UInt8, source_id: 3
+          LIST id: 14, nodes: 1
+            COLUMN id: 15, column_name: B, result_type: UInt8, source_id: 3
         WINDOW
-          WINDOW id: 15, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
+          WINDOW id: 16, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
             PARTITION BY
-              LIST id: 16, nodes: 1
-                FUNCTION id: 17, function_name: modulo, function_type: ordinary, result_type: Int32
+              LIST id: 17, nodes: 1
+                FUNCTION id: 18, function_name: modulo, function_type: ordinary, result_type: Int32
                   ARGUMENTS
-                    LIST id: 18, nodes: 2
-                      COLUMN id: 2, column_name: x, result_type: Int64, source_id: 3
-                      CONSTANT id: 19, constant_value: UInt64_1000, constant_value_type: UInt16
-      FUNCTION id: 20, function_name: max, function_type: window, result_type: UInt8
+                    LIST id: 19, nodes: 2
+                      COLUMN id: 20, column_name: x, result_type: Int64, source_id: 3
+                      CONSTANT id: 21, constant_value: UInt64_1000, constant_value_type: UInt16
+      FUNCTION id: 22, function_name: max, function_type: window, result_type: UInt8
         ARGUMENTS
-          LIST id: 21, nodes: 1
-            COLUMN id: 22, column_name: C, result_type: UInt8, source_id: 3
+          LIST id: 23, nodes: 1
+            COLUMN id: 24, column_name: C, result_type: UInt8, source_id: 3
         WINDOW
-          WINDOW id: 23, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
+          WINDOW id: 25, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
             PARTITION BY
-              LIST id: 24, nodes: 1
-                FUNCTION id: 25, function_name: modulo, function_type: ordinary, result_type: Int32
+              LIST id: 26, nodes: 1
+                FUNCTION id: 27, function_name: modulo, function_type: ordinary, result_type: Int32
                   ARGUMENTS
-                    LIST id: 26, nodes: 2
-                      COLUMN id: 2, column_name: x, result_type: Int64, source_id: 3
-                      CONSTANT id: 27, constant_value: UInt64_1000, constant_value_type: UInt16
+                    LIST id: 28, nodes: 2
+                      COLUMN id: 29, column_name: x, result_type: Int64, source_id: 3
+                      CONSTANT id: 30, constant_value: UInt64_1000, constant_value_type: UInt16
   JOIN TREE
     TABLE id: 3, alias: __table1, table_name: default.x
   QUALIFY
-    FUNCTION id: 28, function_name: or, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 31, function_name: or, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 29, nodes: 2
-          FUNCTION id: 30, function_name: and, function_type: ordinary, result_type: UInt8
+        LIST id: 32, nodes: 2
+          FUNCTION id: 33, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 31, nodes: 2
-                FUNCTION id: 4, function_name: max, function_type: window, result_type: UInt8
+              LIST id: 34, nodes: 2
+                FUNCTION id: 35, function_name: max, function_type: window, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 5, nodes: 1
-                      COLUMN id: 6, column_name: A, result_type: UInt8, source_id: 3
+                    LIST id: 36, nodes: 1
+                      COLUMN id: 37, column_name: A, result_type: UInt8, source_id: 3
                   WINDOW
-                    WINDOW id: 7, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
+                    WINDOW id: 38, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
                       PARTITION BY
-                        LIST id: 8, nodes: 1
-                          FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: Int32
+                        LIST id: 39, nodes: 1
+                          FUNCTION id: 40, function_name: modulo, function_type: ordinary, result_type: Int32
                             ARGUMENTS
-                              LIST id: 10, nodes: 2
-                                COLUMN id: 2, column_name: x, result_type: Int64, source_id: 3
-                                CONSTANT id: 11, constant_value: UInt64_1000, constant_value_type: UInt16
-                FUNCTION id: 12, function_name: max, function_type: window, result_type: UInt8
+                              LIST id: 41, nodes: 2
+                                COLUMN id: 42, column_name: x, result_type: Int64, source_id: 3
+                                CONSTANT id: 43, constant_value: UInt64_1000, constant_value_type: UInt16
+                FUNCTION id: 44, function_name: max, function_type: window, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 13, nodes: 1
-                      COLUMN id: 14, column_name: B, result_type: UInt8, source_id: 3
+                    LIST id: 45, nodes: 1
+                      COLUMN id: 46, column_name: B, result_type: UInt8, source_id: 3
                   WINDOW
-                    WINDOW id: 15, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
+                    WINDOW id: 47, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
                       PARTITION BY
-                        LIST id: 16, nodes: 1
-                          FUNCTION id: 17, function_name: modulo, function_type: ordinary, result_type: Int32
+                        LIST id: 48, nodes: 1
+                          FUNCTION id: 49, function_name: modulo, function_type: ordinary, result_type: Int32
                             ARGUMENTS
-                              LIST id: 18, nodes: 2
-                                COLUMN id: 2, column_name: x, result_type: Int64, source_id: 3
-                                CONSTANT id: 19, constant_value: UInt64_1000, constant_value_type: UInt16
-          FUNCTION id: 32, function_name: and, function_type: ordinary, result_type: UInt8
+                              LIST id: 50, nodes: 2
+                                COLUMN id: 51, column_name: x, result_type: Int64, source_id: 3
+                                CONSTANT id: 52, constant_value: UInt64_1000, constant_value_type: UInt16
+          FUNCTION id: 53, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 33, nodes: 2
-                FUNCTION id: 4, function_name: max, function_type: window, result_type: UInt8
+              LIST id: 54, nodes: 2
+                FUNCTION id: 55, function_name: max, function_type: window, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 5, nodes: 1
-                      COLUMN id: 6, column_name: A, result_type: UInt8, source_id: 3
+                    LIST id: 56, nodes: 1
+                      COLUMN id: 57, column_name: A, result_type: UInt8, source_id: 3
                   WINDOW
-                    WINDOW id: 7, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
+                    WINDOW id: 58, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
                       PARTITION BY
-                        LIST id: 8, nodes: 1
-                          FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: Int32
+                        LIST id: 59, nodes: 1
+                          FUNCTION id: 60, function_name: modulo, function_type: ordinary, result_type: Int32
                             ARGUMENTS
-                              LIST id: 10, nodes: 2
-                                COLUMN id: 2, column_name: x, result_type: Int64, source_id: 3
-                                CONSTANT id: 11, constant_value: UInt64_1000, constant_value_type: UInt16
-                FUNCTION id: 20, function_name: max, function_type: window, result_type: UInt8
+                              LIST id: 61, nodes: 2
+                                COLUMN id: 62, column_name: x, result_type: Int64, source_id: 3
+                                CONSTANT id: 63, constant_value: UInt64_1000, constant_value_type: UInt16
+                FUNCTION id: 64, function_name: max, function_type: window, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 21, nodes: 1
-                      COLUMN id: 22, column_name: C, result_type: UInt8, source_id: 3
+                    LIST id: 65, nodes: 1
+                      COLUMN id: 66, column_name: C, result_type: UInt8, source_id: 3
                   WINDOW
-                    WINDOW id: 23, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
+                    WINDOW id: 67, frame_type: RANGE, frame_begin_type: unbounded preceding, frame_end_type: current
                       PARTITION BY
-                        LIST id: 24, nodes: 1
-                          FUNCTION id: 25, function_name: modulo, function_type: ordinary, result_type: Int32
+                        LIST id: 68, nodes: 1
+                          FUNCTION id: 69, function_name: modulo, function_type: ordinary, result_type: Int32
                             ARGUMENTS
-                              LIST id: 26, nodes: 2
-                                COLUMN id: 2, column_name: x, result_type: Int64, source_id: 3
-                                CONSTANT id: 27, constant_value: UInt64_1000, constant_value_type: UInt16
+                              LIST id: 70, nodes: 2
+                                COLUMN id: 71, column_name: x, result_type: Int64, source_id: 3
+                                CONSTANT id: 72, constant_value: UInt64_1000, constant_value_type: UInt16
 
 SELECT
     __table1.x AS x,
diff --git a/tests/queries/0_stateless/03285_analyzer_extract_common_expr_bug.reference b/tests/queries/0_stateless/03285_analyzer_extract_common_expr_bug.reference
index 5e3505a91b17..1c79e213721c 100644
--- a/tests/queries/0_stateless/03285_analyzer_extract_common_expr_bug.reference
+++ b/tests/queries/0_stateless/03285_analyzer_extract_common_expr_bug.reference
@@ -17,63 +17,63 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 12, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
-                  FUNCTION id: 14, function_name: greater, function_type: ordinary, result_type: UInt8
+                        COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 14, constant_value: UInt64_2, constant_value_type: UInt8
+                  FUNCTION id: 15, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 15, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 16, constant_value: UInt64_10, constant_value_type: UInt8
+                      LIST id: 16, nodes: 2
+                        COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 18, constant_value: UInt64_10, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 17, nodes: 1
-          CONSTANT id: 18, constant_value: UInt64_10, constant_value_type: UInt8
+        LIST id: 19, nodes: 1
+          CONSTANT id: 20, constant_value: UInt64_10, constant_value_type: UInt8
   GROUP BY
-    LIST id: 19, nodes: 1
-      FUNCTION id: 2, function_name: or, function_type: ordinary, result_type: UInt8
+    LIST id: 21, nodes: 1
+      FUNCTION id: 22, function_name: or, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 3, nodes: 2
-            FUNCTION id: 4, function_name: greater, function_type: ordinary, result_type: UInt8
+          LIST id: 23, nodes: 2
+            FUNCTION id: 24, function_name: greater, function_type: ordinary, result_type: UInt8
               ARGUMENTS
-                LIST id: 5, nodes: 2
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 8, constant_value: UInt64_10, constant_value_type: UInt8
-            FUNCTION id: 9, function_name: and, function_type: ordinary, result_type: UInt8
+                LIST id: 25, nodes: 2
+                  COLUMN id: 26, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 27, constant_value: UInt64_10, constant_value_type: UInt8
+            FUNCTION id: 28, function_name: and, function_type: ordinary, result_type: UInt8
               ARGUMENTS
-                LIST id: 10, nodes: 2
-                  FUNCTION id: 11, function_name: greater, function_type: ordinary, result_type: UInt8
+                LIST id: 29, nodes: 2
+                  FUNCTION id: 30, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 12, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
-                  FUNCTION id: 14, function_name: greater, function_type: ordinary, result_type: UInt8
+                      LIST id: 31, nodes: 2
+                        COLUMN id: 32, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 33, constant_value: UInt64_2, constant_value_type: UInt8
+                  FUNCTION id: 34, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 15, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 16, constant_value: UInt64_10, constant_value_type: UInt8
+                      LIST id: 35, nodes: 2
+                        COLUMN id: 36, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 37, constant_value: UInt64_10, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 2, function_name: or, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 38, function_name: or, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 3, nodes: 2
-          FUNCTION id: 4, function_name: greater, function_type: ordinary, result_type: UInt8
+        LIST id: 39, nodes: 2
+          FUNCTION id: 40, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 5, nodes: 2
-                COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                CONSTANT id: 8, constant_value: UInt64_10, constant_value_type: UInt8
-          FUNCTION id: 9, function_name: and, function_type: ordinary, result_type: UInt8
+              LIST id: 41, nodes: 2
+                COLUMN id: 42, column_name: number, result_type: UInt64, source_id: 7
+                CONSTANT id: 43, constant_value: UInt64_10, constant_value_type: UInt8
+          FUNCTION id: 44, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 10, nodes: 2
-                FUNCTION id: 11, function_name: greater, function_type: ordinary, result_type: UInt8
+              LIST id: 45, nodes: 2
+                FUNCTION id: 46, function_name: greater, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 12, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 14, function_name: greater, function_type: ordinary, result_type: UInt8
+                    LIST id: 47, nodes: 2
+                      COLUMN id: 48, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 49, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 50, function_name: greater, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 15, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 16, constant_value: UInt64_10, constant_value_type: UInt8
+                    LIST id: 51, nodes: 2
+                      COLUMN id: 52, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 53, constant_value: UInt64_10, constant_value_type: UInt8
   SETTINGS optimize_extract_common_expressions=0
 
 SELECT (__table1.number > 10) OR ((__table1.number > 2) AND (__table1.number > 10)) AS a
@@ -100,63 +100,63 @@ QUERY id: 0
                   FUNCTION id: 11, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
                       LIST id: 12, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
-                  FUNCTION id: 14, function_name: greater, function_type: ordinary, result_type: UInt8
+                        COLUMN id: 13, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 14, constant_value: UInt64_2, constant_value_type: UInt8
+                  FUNCTION id: 15, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 15, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 16, constant_value: UInt64_10, constant_value_type: UInt8
+                      LIST id: 16, nodes: 2
+                        COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 18, constant_value: UInt64_10, constant_value_type: UInt8
   JOIN TREE
     TABLE_FUNCTION id: 7, alias: __table1, table_function_name: numbers
       ARGUMENTS
-        LIST id: 17, nodes: 1
-          CONSTANT id: 18, constant_value: UInt64_10, constant_value_type: UInt8
+        LIST id: 19, nodes: 1
+          CONSTANT id: 20, constant_value: UInt64_10, constant_value_type: UInt8
   GROUP BY
-    LIST id: 19, nodes: 1
-      FUNCTION id: 2, function_name: or, function_type: ordinary, result_type: UInt8
+    LIST id: 21, nodes: 1
+      FUNCTION id: 22, function_name: or, function_type: ordinary, result_type: UInt8
         ARGUMENTS
-          LIST id: 3, nodes: 2
-            FUNCTION id: 4, function_name: greater, function_type: ordinary, result_type: UInt8
+          LIST id: 23, nodes: 2
+            FUNCTION id: 24, function_name: greater, function_type: ordinary, result_type: UInt8
               ARGUMENTS
-                LIST id: 5, nodes: 2
-                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                  CONSTANT id: 8, constant_value: UInt64_10, constant_value_type: UInt8
-            FUNCTION id: 9, function_name: and, function_type: ordinary, result_type: UInt8
+                LIST id: 25, nodes: 2
+                  COLUMN id: 26, column_name: number, result_type: UInt64, source_id: 7
+                  CONSTANT id: 27, constant_value: UInt64_10, constant_value_type: UInt8
+            FUNCTION id: 28, function_name: and, function_type: ordinary, result_type: UInt8
               ARGUMENTS
-                LIST id: 10, nodes: 2
-                  FUNCTION id: 11, function_name: greater, function_type: ordinary, result_type: UInt8
+                LIST id: 29, nodes: 2
+                  FUNCTION id: 30, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 12, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
-                  FUNCTION id: 14, function_name: greater, function_type: ordinary, result_type: UInt8
+                      LIST id: 31, nodes: 2
+                        COLUMN id: 32, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 33, constant_value: UInt64_2, constant_value_type: UInt8
+                  FUNCTION id: 34, function_name: greater, function_type: ordinary, result_type: UInt8
                     ARGUMENTS
-                      LIST id: 15, nodes: 2
-                        COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                        CONSTANT id: 16, constant_value: UInt64_10, constant_value_type: UInt8
+                      LIST id: 35, nodes: 2
+                        COLUMN id: 36, column_name: number, result_type: UInt64, source_id: 7
+                        CONSTANT id: 37, constant_value: UInt64_10, constant_value_type: UInt8
   HAVING
-    FUNCTION id: 2, function_name: or, function_type: ordinary, result_type: UInt8
+    FUNCTION id: 38, function_name: or, function_type: ordinary, result_type: UInt8
       ARGUMENTS
-        LIST id: 3, nodes: 2
-          FUNCTION id: 4, function_name: greater, function_type: ordinary, result_type: UInt8
+        LIST id: 39, nodes: 2
+          FUNCTION id: 40, function_name: greater, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 5, nodes: 2
-                COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                CONSTANT id: 8, constant_value: UInt64_10, constant_value_type: UInt8
-          FUNCTION id: 9, function_name: and, function_type: ordinary, result_type: UInt8
+              LIST id: 41, nodes: 2
+                COLUMN id: 42, column_name: number, result_type: UInt64, source_id: 7
+                CONSTANT id: 43, constant_value: UInt64_10, constant_value_type: UInt8
+          FUNCTION id: 44, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 10, nodes: 2
-                FUNCTION id: 11, function_name: greater, function_type: ordinary, result_type: UInt8
+              LIST id: 45, nodes: 2
+                FUNCTION id: 46, function_name: greater, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 12, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 13, constant_value: UInt64_2, constant_value_type: UInt8
-                FUNCTION id: 14, function_name: greater, function_type: ordinary, result_type: UInt8
+                    LIST id: 47, nodes: 2
+                      COLUMN id: 48, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 49, constant_value: UInt64_2, constant_value_type: UInt8
+                FUNCTION id: 50, function_name: greater, function_type: ordinary, result_type: UInt8
                   ARGUMENTS
-                    LIST id: 15, nodes: 2
-                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
-                      CONSTANT id: 16, constant_value: UInt64_10, constant_value_type: UInt8
+                    LIST id: 51, nodes: 2
+                      COLUMN id: 52, column_name: number, result_type: UInt64, source_id: 7
+                      CONSTANT id: 53, constant_value: UInt64_10, constant_value_type: UInt8
   SETTINGS optimize_extract_common_expressions=1
 
 SELECT (__table1.number > 10) OR ((__table1.number > 2) AND (__table1.number > 10)) AS a
diff --git a/tests/queries/0_stateless/03285_analyzer_optimize_disjunctions.reference b/tests/queries/0_stateless/03285_analyzer_optimize_disjunctions.reference
index e65b9b313e00..4909465dee82 100644
--- a/tests/queries/0_stateless/03285_analyzer_optimize_disjunctions.reference
+++ b/tests/queries/0_stateless/03285_analyzer_optimize_disjunctions.reference
@@ -15,8 +15,8 @@ QUERY id: 0
           FUNCTION id: 8, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 9, nodes: 2
-                COLUMN id: 7, column_name: B, result_type: UInt8, source_id: 3
-                COLUMN id: 10, column_name: C, result_type: UInt8, source_id: 3
+                COLUMN id: 10, column_name: B, result_type: UInt8, source_id: 3
+                COLUMN id: 11, column_name: C, result_type: UInt8, source_id: 3
   SETTINGS optimize_extract_common_expressions=0
 
 SELECT count() AS `count()`
@@ -90,14 +90,14 @@ QUERY id: 0
           FUNCTION id: 10, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 11, nodes: 2
-                COLUMN id: 9, column_name: B, result_type: UInt8, source_id: 3
-                COLUMN id: 12, column_name: C, result_type: UInt8, source_id: 3
-          FUNCTION id: 13, function_name: and, function_type: ordinary, result_type: UInt8
+                COLUMN id: 12, column_name: B, result_type: UInt8, source_id: 3
+                COLUMN id: 13, column_name: C, result_type: UInt8, source_id: 3
+          FUNCTION id: 14, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 14, nodes: 3
-                COLUMN id: 9, column_name: B, result_type: UInt8, source_id: 3
-                COLUMN id: 15, column_name: D, result_type: UInt8, source_id: 3
-                COLUMN id: 8, column_name: A, result_type: UInt8, source_id: 3
+              LIST id: 15, nodes: 3
+                COLUMN id: 16, column_name: B, result_type: UInt8, source_id: 3
+                COLUMN id: 17, column_name: D, result_type: UInt8, source_id: 3
+                COLUMN id: 18, column_name: A, result_type: UInt8, source_id: 3
   SETTINGS optimize_extract_common_expressions=0
 
 SELECT count() AS `count()`
@@ -154,14 +154,14 @@ QUERY id: 0
           FUNCTION id: 10, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 11, nodes: 3
-                COLUMN id: 8, column_name: A, result_type: UInt8, source_id: 3
-                COLUMN id: 9, column_name: B, result_type: UInt8, source_id: 3
-                COLUMN id: 12, column_name: C, result_type: UInt8, source_id: 3
-          FUNCTION id: 13, function_name: and, function_type: ordinary, result_type: UInt8
+                COLUMN id: 12, column_name: A, result_type: UInt8, source_id: 3
+                COLUMN id: 13, column_name: B, result_type: UInt8, source_id: 3
+                COLUMN id: 14, column_name: C, result_type: UInt8, source_id: 3
+          FUNCTION id: 15, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 14, nodes: 2
-                COLUMN id: 15, column_name: D, result_type: UInt8, source_id: 3
-                COLUMN id: 16, column_name: E, result_type: UInt8, source_id: 3
+              LIST id: 16, nodes: 2
+                COLUMN id: 17, column_name: D, result_type: UInt8, source_id: 3
+                COLUMN id: 18, column_name: E, result_type: UInt8, source_id: 3
   SETTINGS optimize_extract_common_expressions=0
 
 SELECT count() AS `count()`
@@ -214,14 +214,14 @@ QUERY id: 0
           FUNCTION id: 10, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
               LIST id: 11, nodes: 3
-                COLUMN id: 8, column_name: A, result_type: UInt8, source_id: 3
-                COLUMN id: 9, column_name: B, result_type: UInt8, source_id: 3
-                COLUMN id: 12, column_name: C, result_type: UInt8, source_id: 3
-          FUNCTION id: 13, function_name: and, function_type: ordinary, result_type: UInt8
+                COLUMN id: 12, column_name: A, result_type: UInt8, source_id: 3
+                COLUMN id: 13, column_name: B, result_type: UInt8, source_id: 3
+                COLUMN id: 14, column_name: C, result_type: UInt8, source_id: 3
+          FUNCTION id: 15, function_name: and, function_type: ordinary, result_type: UInt8
             ARGUMENTS
-              LIST id: 14, nodes: 2
-                COLUMN id: 9, column_name: B, result_type: UInt8, source_id: 3
-                COLUMN id: 12, column_name: C, result_type: UInt8, source_id: 3
+              LIST id: 16, nodes: 2
+                COLUMN id: 17, column_name: B, result_type: UInt8, source_id: 3
+                COLUMN id: 18, column_name: C, result_type: UInt8, source_id: 3
   SETTINGS optimize_extract_common_expressions=0
 
 SELECT count() AS `count()`
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope.reference b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope.reference
new file mode 100644
index 000000000000..d00491fd7e5b
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope.reference
@@ -0,0 +1,1 @@
+1
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope.sql b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope.sql
new file mode 100644
index 000000000000..4240d831d259
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope.sql
@@ -0,0 +1,27 @@
+WITH ws_wh AS
+    (
+        SELECT
+            ws1.ws_order_number
+        FROM
+        (
+            SELECT
+                1 AS ws_order_number,
+                1 AS ws_warehouse_sk
+        ) AS ws1,
+        (
+            SELECT
+                1 AS ws_order_number,
+                2 AS ws_warehouse_sk
+        ) AS ws2
+        WHERE (ws1.ws_order_number = ws2.ws_order_number) AND (ws1.ws_warehouse_sk != ws2.ws_warehouse_sk)
+    )
+SELECT COUNT()
+FROM
+(
+    SELECT 1 AS ws_order_number
+) AS ws1
+WHERE (ws1.ws_order_number IN (
+    SELECT ws_order_number
+    FROM ws_wh
+))
+SETTINGS join_use_nulls=1;
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_2.reference b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_2.reference
new file mode 100644
index 000000000000..dd1e9654c1ee
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_2.reference
@@ -0,0 +1,3 @@
+1	['type_2']
+2	['type_3','type_2']
+3	['type_2','type_3']
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_2.sql b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_2.sql
new file mode 100644
index 000000000000..7e958d07f836
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_2.sql
@@ -0,0 +1,27 @@
+create table test
+(
+    raw_id String,
+    columns_n Nested
+        (
+        col_1 Nullable(String),
+        col_2 Nullable(String)
+        )
+)
+Engine = MergeTree
+order by (raw_id);
+
+insert into test
+VALUES('1', ['type_1','type_2','type_1'],['0','0','1']),
+      ('2', ['type_3','type_2','type_1'],['0','1','1']),
+      ('3', ['type_1','type_2','type_3'],['1','0','1'])
+;
+
+with t like '%_1%' as issue
+select
+    raw_id,
+    arrayFilter((t, t2) -> (not issue),
+        columns_n.col_1,
+        columns_n.col_2
+    )
+from test
+order by raw_id;
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_3.reference b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_3.reference
new file mode 100644
index 000000000000..573541ac9702
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_3.reference
@@ -0,0 +1,1 @@
+0
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_3.sql b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_3.sql
new file mode 100644
index 000000000000..84d74d568a36
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_3.sql
@@ -0,0 +1,18 @@
+CREATE TABLE test
+(
+    a UInt64,
+    b UInt64,
+)
+ENGINE = MergeTree
+ORDER BY tuple();
+
+WITH
+   (a > b) as cte,
+   query AS
+    (
+        SELECT count()
+        FROM test
+        WHERE cte
+    )
+SELECT *
+FROM query;
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_4.reference b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_4.reference
new file mode 100644
index 000000000000..d00491fd7e5b
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_4.reference
@@ -0,0 +1,1 @@
+1
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_4.sql b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_4.sql
new file mode 100644
index 000000000000..ba167990b05e
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_4.sql
@@ -0,0 +1,21 @@
+SET allow_experimental_analyzer=1;
+
+with
+    arrayMap(x -> x + 1, [0]) as a
+select
+    1
+where
+    1 in (select arrayJoin(a));
+
+CREATE TABLE users (uid Int16, name String, age Int16) ENGINE=Memory;
+
+INSERT INTO users VALUES (1231, 'John', 10);
+INSERT INTO users VALUES (6666, 'Ksenia', 20);
+INSERT INTO users VALUES (8888, 'Alice', 30);
+
+CREATE OR REPLACE FUNCTION oldest_before AS (age_max) -> (
+  SELECT uid FROM users WHERE users.age < age_max ORDER BY users.age DESC LIMIT 1
+);
+
+SELECT *, oldest_before(users.age)
+FROM users; -- { serverError UNSUPPORTED_METHOD }
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_5.reference b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_5.reference
new file mode 100644
index 000000000000..d00491fd7e5b
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_5.reference
@@ -0,0 +1,1 @@
+1
diff --git a/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_5.sql b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_5.sql
new file mode 100644
index 000000000000..b7fd8e111518
--- /dev/null
+++ b/tests/queries/0_stateless/03314_analyzer_resolve_in_parent_scope_5.sql
@@ -0,0 +1,11 @@
+with query_1 as (
+    with shared_data as (
+        select 1 as value
+    ), shared_data_2 as (
+        select * from shared_data
+    )
+    select * from shared_data_2
+), shared_data as (
+    select * from query_1
+)
+select * from shared_data s;
diff --git a/tests/queries/0_stateless/03316_analyzer_unique_table_aliases_dist.reference b/tests/queries/0_stateless/03316_analyzer_unique_table_aliases_dist.reference
new file mode 100644
index 000000000000..7f6efad4038a
--- /dev/null
+++ b/tests/queries/0_stateless/03316_analyzer_unique_table_aliases_dist.reference
@@ -0,0 +1,1 @@
+3	3
diff --git a/tests/queries/0_stateless/03316_analyzer_unique_table_aliases_dist.sql b/tests/queries/0_stateless/03316_analyzer_unique_table_aliases_dist.sql
new file mode 100644
index 000000000000..6e2e99c583fe
--- /dev/null
+++ b/tests/queries/0_stateless/03316_analyzer_unique_table_aliases_dist.sql
@@ -0,0 +1,13 @@
+SET max_parallel_replicas = 3, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', enable_parallel_replicas = 1, parallel_replicas_for_non_replicated_merge_tree=1;
+
+SELECT
+    sum(number GLOBAL IN (
+        SELECT number AS n
+        FROM numbers(5)
+        WHERE number GLOBAL IN (
+            SELECT *
+            FROM numbers(3)
+        )
+    ) AS res),
+    sum(number * res)
+FROM remote('127.0.0.2', numbers(10));
