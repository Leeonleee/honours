{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 67326,
  "instance_id": "ClickHouse__ClickHouse-67326",
  "issue_numbers": [
    "67297"
  ],
  "base_commit": "199311fc6e300b691f89a6b4eb6420787d90ad82",
  "patch": "diff --git a/src/Functions/randDistribution.cpp b/src/Functions/randDistribution.cpp\nindex 6a3dac748c16..dc2ddf2ef24a 100644\n--- a/src/Functions/randDistribution.cpp\n+++ b/src/Functions/randDistribution.cpp\n@@ -93,6 +93,9 @@ struct ChiSquaredDistribution\n \n     static void generate(Float64 degree_of_freedom, ColumnFloat64::Container & container)\n     {\n+        if (degree_of_freedom <= 0)\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Argument (degrees of freedom) of function {} should be greater than zero\", getName());\n+\n         auto distribution = std::chi_squared_distribution<>(degree_of_freedom);\n         for (auto & elem : container)\n             elem = distribution(thread_local_rng);\n@@ -107,6 +110,9 @@ struct StudentTDistribution\n \n     static void generate(Float64 degree_of_freedom, ColumnFloat64::Container & container)\n     {\n+        if (degree_of_freedom <= 0)\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Argument (degrees of freedom) of function {} should be greater than zero\", getName());\n+\n         auto distribution = std::student_t_distribution<>(degree_of_freedom);\n         for (auto & elem : container)\n             elem = distribution(thread_local_rng);\n@@ -121,6 +127,9 @@ struct FisherFDistribution\n \n     static void generate(Float64 d1, Float64 d2, ColumnFloat64::Container & container)\n     {\n+        if (d1 <= 0 || d2 <= 0)\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Argument (degrees of freedom) of function {} should be greater than zero\", getName());\n+\n         auto distribution = std::fisher_f_distribution<>(d1, d2);\n         for (auto & elem : container)\n             elem = distribution(thread_local_rng);\n@@ -300,7 +309,7 @@ class FunctionRandomDistribution : public IFunction\n             }\n             else\n             {\n-                throw Exception(ErrorCodes::BAD_ARGUMENTS, \"More than two argument specified for function {}\", getName());\n+                throw Exception(ErrorCodes::BAD_ARGUMENTS, \"More than two arguments specified for function {}\", getName());\n             }\n \n             return res_column;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03213_rand_dos.reference b/tests/queries/0_stateless/03213_rand_dos.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/03213_rand_dos.sql b/tests/queries/0_stateless/03213_rand_dos.sql\nnew file mode 100644\nindex 000000000000..1250995bfe55\n--- /dev/null\n+++ b/tests/queries/0_stateless/03213_rand_dos.sql\n@@ -0,0 +1,5 @@\n+SELECT randChiSquared(-0.0000001); -- { serverError BAD_ARGUMENTS }\n+SELECT randChiSquared(-0.0); -- { serverError BAD_ARGUMENTS }\n+SELECT randStudentT(-0.); -- { serverError BAD_ARGUMENTS }\n+SELECT randFisherF(-0., 1); -- { serverError BAD_ARGUMENTS }\n+SELECT randFisherF(1, -0.); -- { serverError BAD_ARGUMENTS }\n",
  "problem_statement": "Several probability distribution random functions hang with the argument '-0.0'\n**Describe the bug**\r\nSeveral probability distribution random functions hang with the argument '-0.0'.\r\nIt was found by an in-development fuzzer of WINGFUZZ.\r\n\r\n**How to reproduce**\r\n```sql\r\nSELECT randChiSquared(-0.);\r\nSELECT randStudentT(-0.);\r\nSELECT randFisherF(-0., 1);\r\nSELECT randFisherF(1, -0.);\r\n```\r\nEach of the above SQL statements can lead to a hung query. On my machine, it keeps running for over 10,000 seconds.\r\n\r\nMoreover, the `KILL QUERY` statement cannot kill these queries, just turning their kill_status into 'waiting'. They will keep using the CPUs.\r\n\r\nIt can be reproduced on the official docker image. (clickhouse/clickhouse-server:head (version 24.8.1.473) and clickhouse/clickhouse-server:latest (version 24.6.2.17)).\r\n\r\n**Note**\r\nIf I use the `+0.0` or `0.0` instead of `-0.0`, everything seems OK:\r\n```\r\nSELECT randChiSquared(0.)\r\n\r\nQuery id: 6fcac144-9262-411c-a2d6-e92ec3a59d1c\r\n\r\n   \u250c\u2500randChiSquared(0.)\u2500\u2510\r\n1. \u2502                  0 \u2502\r\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.001 sec. \r\n```\r\n\n```[tasklist]\n### Tasks\n```\n\n",
  "hints_text": "",
  "created_at": "2024-07-29T00:08:57Z"
}