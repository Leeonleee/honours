diff --git a/tests/queries/0_stateless/03393_join_bug_77848.reference b/tests/queries/0_stateless/03393_join_bug_77848.reference
index e69de29bb2d1..6ed281c757a9 100644
--- a/tests/queries/0_stateless/03393_join_bug_77848.reference
+++ b/tests/queries/0_stateless/03393_join_bug_77848.reference
@@ -0,0 +1,2 @@
+1
+1
diff --git a/tests/queries/0_stateless/03393_join_bug_77848.sql b/tests/queries/0_stateless/03393_join_bug_77848.sql
index 762e32c3e06e..d085655e9760 100644
--- a/tests/queries/0_stateless/03393_join_bug_77848.sql
+++ b/tests/queries/0_stateless/03393_join_bug_77848.sql
@@ -13,6 +13,6 @@ SET enable_analyzer = 1;
 -- TODO(@vdimir): NOT_FOUND_COLUMN_IN_BLOCK is a bug, should be fixed
 -- This tests ensures that query does not crash at least
 
-SELECT 1 FROM BadTable i LEFT JOIN BadJoin c ON i.id_uint = toUInt128(c.id) WHERE equals(i.id_uint, 12); --  { serverError NOT_FOUND_COLUMN_IN_BLOCK}
+SELECT 1 FROM BadTable i LEFT JOIN BadJoin c ON i.id_uint = toUInt128(c.id) WHERE equals(i.id_uint, 12);
 
-SELECT equals(i.id_uint, 12) FROM BadTable i LEFT JOIN BadJoin c ON i.id_uint = toUInt128(c.id) WHERE equals(i.id_uint, 12); --  { serverError NOT_FOUND_COLUMN_IN_BLOCK}
+SELECT equals(i.id_uint, 12) FROM BadTable i LEFT JOIN BadJoin c ON i.id_uint = toUInt128(c.id) WHERE equals(i.id_uint, 12);
diff --git a/tests/queries/0_stateless/03517_logical_join_predicate_push_down_with_pre_expression_bug.reference b/tests/queries/0_stateless/03517_logical_join_predicate_push_down_with_pre_expression_bug.reference
new file mode 100644
index 000000000000..acb8bbdaffcf
--- /dev/null
+++ b/tests/queries/0_stateless/03517_logical_join_predicate_push_down_with_pre_expression_bug.reference
@@ -0,0 +1,5 @@
+2025-04-01
+2025-04-01
+2025-04-01
+2025-04-01
+2025-04-01
diff --git a/tests/queries/0_stateless/03517_logical_join_predicate_push_down_with_pre_expression_bug.sql b/tests/queries/0_stateless/03517_logical_join_predicate_push_down_with_pre_expression_bug.sql
new file mode 100644
index 000000000000..a098ede0760e
--- /dev/null
+++ b/tests/queries/0_stateless/03517_logical_join_predicate_push_down_with_pre_expression_bug.sql
@@ -0,0 +1,24 @@
+drop table if exists td;
+drop table if exists tdt;
+
+CREATE TABLE td (id Int16, d Date) ENGINE=MergeTree() order by id;
+CREATE TABLE tdt (id Int16, dt DateTime) ENGINE=MergeTree() order by id;
+
+insert into td values (1,'2025-03-01'),(2,'2025-04-01');
+insert into tdt values (1,'2025-03-01 01:01:01'),(2,'2025-03-01 02:01:01'),(3,'2025-04-01 03:01:01'),(4,'2025-04-01 04:01:01'),(5,'2025-04-01 05:01:01');
+
+SELECT td_d FROM (SELECT t.id td_id, t.d td_d, uniqExact(tdt.id) as cnt FROM td as t LEFT JOIN tdt ON toDate(tdt.dt) = t.d GROUP BY td_id, td_d) WHERE td_d = '2025-04-01';
+SELECT td_d FROM (SELECT t.id td_id, t.d td_d, uniqExact(tdt.id) as cnt FROM tdt RIGHT JOIN td as t ON toDate(tdt.dt) = t.d GROUP BY td_id, td_d) WHERE td_d = '2025-04-01';
+
+SELECT td_d FROM (SELECT t.id td_id, t.d td_d, uniqExact(tdt.id) as cnt FROM td as t INNER JOIN tdt ON toDate(tdt.dt) = t.d GROUP BY td_id, td_d) WHERE td_d = '2025-04-01';
+SELECT td_d FROM (SELECT t.id td_id, t.d td_d, uniqExact(tdt.id) as cnt FROM tdt INNER JOIN td as t ON toDate(tdt.dt) = t.d GROUP BY td_id, td_d) WHERE td_d = '2025-04-01';
+
+CREATE VIEW v AS
+SELECT
+  t.id td_id, t.d td_d, uniqExact(tdt.id) as cnt
+FROM
+  td as t
+  LEFT JOIN tdt ON toDate(tdt.dt) = t.d
+GROUP BY td_id, td_d;
+
+SELECT td_d FROM v WHERE td_d = '2025-04-01';
