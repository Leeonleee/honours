{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 18614,
  "instance_id": "ClickHouse__ClickHouse-18614",
  "issue_numbers": [
    "18582"
  ],
  "base_commit": "d4f25723cfa507a53a270759207cfaf0828043ea",
  "patch": "diff --git a/src/Storages/StorageReplicatedMergeTree.cpp b/src/Storages/StorageReplicatedMergeTree.cpp\nindex fe15d5dad292..75c405cfec6e 100644\n--- a/src/Storages/StorageReplicatedMergeTree.cpp\n+++ b/src/Storages/StorageReplicatedMergeTree.cpp\n@@ -6154,7 +6154,7 @@ bool StorageReplicatedMergeTree::dropPart(\n         /// DROP_RANGE with detach will move this part together with source parts to `detached/` dir.\n         entry.type = LogEntry::DROP_RANGE;\n         entry.source_replica = replica_name;\n-        entry.new_part_name = drop_part_info.getPartName();\n+        entry.new_part_name = getPartNamePossiblyFake(format_version, drop_part_info);\n         entry.detach = detach;\n         entry.create_time = time(nullptr);\n \n",
  "test_patch": "diff --git a/tests/integration/test_merge_tree_empty_parts/__init__.py b/tests/integration/test_merge_tree_empty_parts/__init__.py\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/integration/test_merge_tree_empty_parts/configs/cleanup_thread.xml b/tests/integration/test_merge_tree_empty_parts/configs/cleanup_thread.xml\nnew file mode 100644\nindex 000000000000..943662aad674\n--- /dev/null\n+++ b/tests/integration/test_merge_tree_empty_parts/configs/cleanup_thread.xml\n@@ -0,0 +1,6 @@\n+<yandex>\n+    <merge_tree>\n+        <cleanup_delay_period>0</cleanup_delay_period>\n+        <cleanup_delay_period_random_add>0</cleanup_delay_period_random_add>\n+    </merge_tree>\n+</yandex>\n\\ No newline at end of file\ndiff --git a/tests/integration/test_merge_tree_empty_parts/configs/remote_servers.xml b/tests/integration/test_merge_tree_empty_parts/configs/remote_servers.xml\nnew file mode 100644\nindex 000000000000..e7369160a812\n--- /dev/null\n+++ b/tests/integration/test_merge_tree_empty_parts/configs/remote_servers.xml\n@@ -0,0 +1,13 @@\n+<yandex>\n+    <remote_servers>\n+        <test_cluster>\n+            <shard>\n+                <internal_replication>true</internal_replication>\n+                <replica>\n+                    <host>node1</host>\n+                    <port>9000</port>\n+                </replica>\n+            </shard>\n+        </test_cluster>\n+    </remote_servers>\n+</yandex>\ndiff --git a/tests/integration/test_merge_tree_empty_parts/test.py b/tests/integration/test_merge_tree_empty_parts/test.py\nnew file mode 100644\nindex 000000000000..bc2679d4c92d\n--- /dev/null\n+++ b/tests/integration/test_merge_tree_empty_parts/test.py\n@@ -0,0 +1,38 @@\n+import pytest\n+import helpers.client\n+import helpers.cluster\n+from helpers.test_tools import assert_eq_with_retry\n+\n+\n+cluster = helpers.cluster.ClickHouseCluster(__file__)\n+node1 = cluster.add_instance('node1', main_configs=['configs/remote_servers.xml', 'configs/cleanup_thread.xml'], with_zookeeper=True)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def started_cluster():\n+    try:\n+        cluster.start()\n+        yield cluster\n+\n+    finally:\n+        cluster.shutdown()\n+\n+def test_empty_parts_alter_delete(started_cluster):\n+    node1.query(\"CREATE TABLE empty_parts_delete (d Date, key UInt64, value String) \\\n+        ENGINE = ReplicatedMergeTree('/clickhouse/tables/empty_parts_delete', 'r1', d, key, 8192)\")\n+\n+    node1.query(\"INSERT INTO empty_parts_delete VALUES (toDate('2020-10-10'), 1, 'a')\")\n+    node1.query(\"ALTER TABLE empty_parts_delete DELETE WHERE 1 SETTINGS mutations_sync = 2\")\n+\n+    print(node1.query(\"SELECT count() FROM empty_parts_delete\"))\n+    assert_eq_with_retry(node1, \"SELECT count() FROM system.parts WHERE table = 'empty_parts_delete' AND active\", \"0\")\n+\n+def test_empty_parts_summing(started_cluster):\n+    node1.query(\"CREATE TABLE empty_parts_summing (d Date, key UInt64, value Int64) \\\n+        ENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/empty_parts_summing', 'r1', d, key, 8192)\")\n+\n+    node1.query(\"INSERT INTO empty_parts_summing VALUES (toDate('2020-10-10'), 1, 1)\")\n+    node1.query(\"INSERT INTO empty_parts_summing VALUES (toDate('2020-10-10'), 1, -1)\")\n+    node1.query(\"OPTIMIZE TABLE empty_parts_summing FINAL\")\n+\n+    assert_eq_with_retry(node1, \"SELECT count() FROM system.parts WHERE table = 'empty_parts_summing' AND active\", \"0\")\n",
  "problem_statement": "20.12 CH crashes trying to delete empty parts from a table created with the old syntax\nI have a few SummingMergeTree tables created many years ago.\r\n20.12 crashes trying to delete empty parts with the message: `Unexpected part name: 201907_44_45_999999999`\r\n```\r\n2020.12.28 20:57:39.962301 [ 21808 ] {} <Trace> db.table (ReplicatedMergeTreeCleanupThread): Checking 100 blocks (100 are not cached) to clear old ones from ZooKeeper.\r\n2020.12.28 20:57:39.972444 [ 21808 ] {} <Trace> db.table: Will try to insert a log entry to DROP_RANGE for part: 20190730_20190731_44_45_1\r\n2020.12.28 20:57:39.984770 [ 21808 ] {} <Debug> db.table: Waiting for sde798 to pull log-0000514194 to queue\r\n2020.12.28 20:57:39.991527 [ 21812 ] {} <Debug> db.table (ReplicatedMergeTreeQueue): Pulling 1 entries to queue: log-0000514194 - log-0000514194\r\n2020.12.28 20:57:39.997144 [ 21812 ] {} <Error> db.table (ReplicatedMergeTreeQueue): Code: 233, e.displayText() = DB::Exception: Unexpected part name: 201907_44_45_999999999, Stack trace (when copying this message, always include the lines below):\r\n0. DB::MergeTreePartInfo::fromPartName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, StrongTypedef<unsigned int, DB::MergeTreeDataFormatVersionTag>) @ 0xe5ae893 in /usr/bin/clickhouse\r\n1. DB::ActiveDataPartSet::add(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basi\r\nc_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) @ 0xe462e59 in /usr/bin/clickhouse\r\n2. DB::ReplicatedMergeTreeQueue::insertUnlocked(std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> const&, std::__1::optional<long>&, std::__1::lock_guard<std::__1::mutex>&) @ 0xe640ccd in /usr/bin/clickhouse\r\n3. DB::ReplicatedMergeTreeQueue::pullLogsToQueue(std::__1::shared_ptr<zkutil::ZooKeeper>, std::__1::function<void (Coordination::WatchResponse const&)>) @ 0xe648d45 in /usr/bin/clickhouse\r\n4. DB::StorageReplicatedMergeTree::queueUpdatingTask() @ 0xe312111 in /usr/bin/clickhouse\r\n5. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0xda48492 in /usr/bin/clickhouse\r\n6. DB::BackgroundSchedulePool::threadFunction() @ 0xda4a8c2 in /usr/bin/clickhouse\r\n7. ? @ 0xda4bb41 in /usr/bin/clickhouse\r\n8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7dc5b3d in /usr/bin/clickhouse\r\n9. ? @ 0x7dc96f3 in /usr/bin/clickhouse\r\n10. start_thread @ 0x74a4 in /lib/x86_64-linux-gnu/libpthread-2.24.so\r\n11. clone @ 0xe8d0f in /lib/x86_64-linux-gnu/libc-2.24.so\r\n (version 20.12.5.14 (official build))\r\n\r\n2020.12.28 20:57:39.997247 [ 21786 ] {} <Trace> BaseDaemon: Received signal -1\r\n2020.12.28 20:57:39.997262 [ 21786 ] {} <Fatal> BaseDaemon: (version 20.12.5.14 (official build), build id: BEE6512D29AA78DB) (from thread 21812) Terminate called for uncaught exception:\r\nCode: 233, e.displayText() = DB::Exception: Unexpected part name: 201907_44_45_999999999, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::MergeTreePartInfo::fromPartName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, StrongTypedef<unsigned int, DB::MergeTreeDataFormatVersionTag>) @ 0xe5ae893 in /usr/bin/clickhouse\r\n1. DB::ActiveDataPartSet::add(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basi\r\nc_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) @ 0xe462e59 in /usr/bin/clickhouse\r\n2. DB::ReplicatedMergeTreeQueue::insertUnlocked(std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry> const&, std::__1::optional<long>&, std::__1::lock_guard<std::__1::mutex>&) @ 0xe640ccd in /usr\r\n\r\n2020.12.28 20:57:39.997283 [ 21786 ] {} <Trace> BaseDaemon: Received signal 6\r\n2020.12.28 20:57:39.997365 [ 22052 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.12.28 20:57:39.997383 [ 22052 ] {} <Fatal> BaseDaemon: (version 20.12.5.14 (official build), build id: BEE6512D29AA78DB) (from thread 21812) (no query) Received signal Aborted (6)\r\n2020.12.28 20:57:39.997391 [ 22052 ] {} <Fatal> BaseDaemon:\r\n2020.12.28 20:57:39.997403 [ 22052 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f77e1438fff 0x7f77e143a42a 0x7f18e56 0x124170d3 0x1241707c 0xe64a296 0xe312111 0xda48492 0xda4a8c2 0xda4bb41 0x7dc5b3d 0x7dc96f3 0x7f77e1bb84a4 0x7f77e14eed0f\r\n2020.12.28 20:57:39.997425 [ 22052 ] {} <Fatal> BaseDaemon: 2. raise @ 0x32fff in /lib/x86_64-linux-gnu/libc-2.24.so\r\n2020.12.28 20:57:39.997433 [ 22052 ] {} <Fatal> BaseDaemon: 3. abort @ 0x3442a in /lib/x86_64-linux-gnu/libc-2.24.so\r\n2020.12.28 20:57:39.997443 [ 22052 ] {} <Fatal> BaseDaemon: 4. ? @ 0x7f18e56 in /usr/bin/clickhouse\r\n2020.12.28 20:57:39.997449 [ 22052 ] {} <Fatal> BaseDaemon: 5. ? @ 0x124170d3 in ?\r\n2020.12.28 20:57:39.997463 [ 22052 ] {} <Fatal> BaseDaemon: 6. std::terminate() @ 0x1241707c in ?\r\n2020.12.28 20:57:39.997477 [ 22052 ] {} <Fatal> BaseDaemon: 7. DB::ReplicatedMergeTreeQueue::pullLogsToQueue(std::__1::shared_ptr<zkutil::ZooKeeper>, std::__1::function<void (Coordination::WatchResponse const&)>) @ 0xe64a296 in /usr/bin/clickhouse\r\n2020.12.28 20:57:39.997485 [ 22052 ] {} <Fatal> BaseDaemon: 8. DB::StorageReplicatedMergeTree::queueUpdatingTask() @ 0xe312111 in /usr/bin/clickhouse\r\n2020.12.28 20:57:39.997493 [ 22052 ] {} <Fatal> BaseDaemon: 9. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0xda48492 in /usr/bin/clickhouse\r\n2020.12.28 20:57:39.997500 [ 22052 ] {} <Fatal> BaseDaemon: 10. DB::BackgroundSchedulePool::threadFunction() @ 0xda4a8c2 in /usr/bin/clickhouse\r\n2020.12.28 20:57:39.997506 [ 22052 ] {} <Fatal> BaseDaemon: 11. ? @ 0xda4bb41 in /usr/bin/clickhouse\r\n2020.12.28 20:57:39.997515 [ 22052 ] {} <Fatal> BaseDaemon: 12. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7dc5b3d in /usr/bin/clickhouse\r\n2020.12.28 20:57:39.997521 [ 22052 ] {} <Fatal> BaseDaemon: 13. ? @ 0x7dc96f3 in /usr/bin/clickhouse\r\n2020.12.28 20:57:39.997531 [ 22052 ] {} <Fatal> BaseDaemon: 14. start_thread @ 0x74a4 in /lib/x86_64-linux-gnu/libpthread-2.24.so\r\n```\n",
  "hints_text": "",
  "created_at": "2020-12-29T17:19:14Z"
}