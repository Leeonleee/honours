You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Wrong query result with convert_query_to_cnf + optimize_using_constraints
Comes from 02725_cnf_large_check.sql:


Setup
```sql
CREATE TABLE 02725_cnf (c0 UInt8, c1 UInt8, c2 UInt8, c3 UInt8, c4 UInt8, c5 UInt8, c6 UInt8, c7 UInt8, c8 UInt8, c9 UInt8) ENGINE = Memory;

INSERT INTO 02725_cnf VALUES (0, 0, 0, 0, 0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 0, 0, 0, 0, 1), (0, 0, 0, 0, 0, 0, 0, 0, 1, 0), (0, 0, 0, 0, 0, 0, 0, 0, 1, 1), (0, 0, 0, 0, 0, 0, 0, 1, 0, 0), (0, 0, 0, 0, 0, 0, 0, 1, 0, 1), (0, 0, 0, 0, 0, 0, 0, 1, 1, 0), (0, 0, 0, 0, 0, 0, 0, 1, 1, 1);
```

Default settings:
```
SELECT count()
FROM `02725_cnf`
WHERE ((NOT c2) AND c2 AND (NOT c1)) OR ((NOT c2) AND c3 AND (NOT c5)) OR ((NOT c7) AND (NOT c8)) OR (c9 AND c6 AND c8 AND (NOT c8) AND (NOT c7))

Query id: b2f5bc62-1eec-40d4-bf48-720233d7c611

┌─count()─┐
│       2 │
└─────────┘
```

With convert_query_to_cnf and optimize_using_constraints:

```
SELECT count()
FROM `02725_cnf`
WHERE ((NOT c2) AND c2 AND (NOT c1)) OR ((NOT c2) AND c3 AND (NOT c5)) OR ((NOT c7) AND (NOT c8)) OR (c9 AND c6 AND c8 AND (NOT c8) AND (NOT c7))
SETTINGS convert_query_to_cnf = 1, optimize_using_constraints = 1

Query id: b1fc0d50-e581-4211-aa35-4ef0f3bf8903

┌─count()─┐
│       8 │
└─────────┘

1 row in set. Elapsed: 0.008 sec. 
```

Enabling only one of them does not trigger the problem. Fails both with and without the analyzer.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
