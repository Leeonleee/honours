diff --git a/tests/fuzz/all.dict b/tests/fuzz/all.dict
index 8ded66cbd0d7..b38e2c11a1c4 100644
--- a/tests/fuzz/all.dict
+++ b/tests/fuzz/all.dict
@@ -461,6 +461,9 @@
 "FREEZE"
 "FROM"
 "FROM_BASE64"
+"toDaysSinceYearZero"
+"fromDaysSinceYearZero"
+"fromDaysSinceYearZero32"
 "fromModifiedJulianDay"
 "fromModifiedJulianDayOrNull"
 "FROM_UNIXTIME"
diff --git a/tests/fuzz/dictionaries/functions.dict b/tests/fuzz/dictionaries/functions.dict
index dfadb645f3f7..3fe8dbfe5016 100644
--- a/tests/fuzz/dictionaries/functions.dict
+++ b/tests/fuzz/dictionaries/functions.dict
@@ -336,6 +336,9 @@
 "arraySort"
 "arrayPartialSort"
 "arrayPartialReverseSort"
+"toDaysSinceYearZero"
+"fromDaysSinceYearZero"
+"fromDaysSinceYearZero32"
 "dumpColumnStructure"
 "multiSearchFirstIndex"
 "arrayReverseSplit"
diff --git a/tests/queries/0_stateless/02907_fromDaysSinceYearZero.reference b/tests/queries/0_stateless/02907_fromDaysSinceYearZero.reference
new file mode 100644
index 000000000000..ac0f4662db27
--- /dev/null
+++ b/tests/queries/0_stateless/02907_fromDaysSinceYearZero.reference
@@ -0,0 +1,22 @@
+-- negative tests
+-- const and non-const arguments
+719527	2149-06-06	2149-06-06
+719528	1970-01-01	1970-01-01
+719529	1970-01-02	1970-01-02
+785062	2149-06-05	2149-06-05
+785063	2149-06-06	2149-06-06
+785064	1970-01-01	1970-01-01
+693960	2299-12-31	2299-12-31
+693961	1900-01-01	1900-01-01
+693962	1900-01-02	1900-01-02
+840056	2299-12-30	2299-12-30
+840057	2299-12-31	2299-12-31
+840058	2299-12-31	2299-12-31
+-- integer types != UInt32
+255	1974-06-12	2299-12-31
+65535	1973-09-29	2299-12-31
+719529	1970-01-02	1970-01-02
+-- NULL handling
+\N	\N
+-- Alias
+1973-10-01
diff --git a/tests/queries/0_stateless/02907_fromDaysSinceYearZero.sql b/tests/queries/0_stateless/02907_fromDaysSinceYearZero.sql
new file mode 100644
index 000000000000..83cfa01d5edc
--- /dev/null
+++ b/tests/queries/0_stateless/02907_fromDaysSinceYearZero.sql
@@ -0,0 +1,38 @@
+SET session_timezone = 'Europe/Amsterdam'; -- disable time zone randomization in CI
+
+SELECT '-- negative tests';
+SELECT fromDaysSinceYearZero(); -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }
+SELECT fromDaysSinceYearZero32(); -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }
+SELECT fromDaysSinceYearZero(1, 2); -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }
+SELECT fromDaysSinceYearZero32(1, 2); -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }
+SELECT fromDaysSinceYearZero('needs a number'); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+SELECT fromDaysSinceYearZero32('needs a number'); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+SELECT fromDaysSinceYearZero(-3); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+SELECT fromDaysSinceYearZero32(-3); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+
+SELECT '-- const and non-const arguments';
+
+SELECT 719527 AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero(materialize(x)); -- outside Date's range
+SELECT 719528 AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero(materialize(x));
+SELECT 719529 AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero(materialize(x));
+SELECT 785062 AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero(materialize(x));
+SELECT 785063 AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero(materialize(x));
+SELECT 785064 AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero(materialize(x)); -- outside Date's range
+
+SELECT 693960 AS x, fromDaysSinceYearZero32(x), fromDaysSinceYearZero32(materialize(x)); -- outside Date32's range
+SELECT 693961 AS x, fromDaysSinceYearZero32(x), fromDaysSinceYearZero32(materialize(x));
+SELECT 693962 AS x, fromDaysSinceYearZero32(x), fromDaysSinceYearZero32(materialize(x));
+SELECT 840056 AS x, fromDaysSinceYearZero32(x), fromDaysSinceYearZero32(materialize(x));
+SELECT 840057 AS x, fromDaysSinceYearZero32(x), fromDaysSinceYearZero32(materialize(x));
+SELECT 840058 AS x, fromDaysSinceYearZero32(x), fromDaysSinceYearZero32(materialize(x)); -- outside Date32's range
+
+SELECT '-- integer types != UInt32';
+SELECT toUInt8(255) AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero32(x); -- outside Date's range for all UInt8-s
+SELECT toUInt16(65535) AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero32(x); -- outside Date's range for all UInt16-s
+SELECT toUInt64(719529) AS x, fromDaysSinceYearZero(x), fromDaysSinceYearZero32(x); -- something useful
+
+SELECT '-- NULL handling';
+SELECT fromDaysSinceYearZero(NULL), fromDaysSinceYearZero32(NULL);
+
+SELECT '-- Alias';
+SELECT FROM_DAYS(1);
