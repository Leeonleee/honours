{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 58358,
  "instance_id": "ClickHouse__ClickHouse-58358",
  "issue_numbers": [
    "58355"
  ],
  "base_commit": "a7d773c7c136a46802cd3599759c9ad5e04f2ce4",
  "patch": "diff --git a/src/Functions/format.cpp b/src/Functions/format.cpp\nindex 41b6d65023b0..036ff9f0c57a 100644\n--- a/src/Functions/format.cpp\n+++ b/src/Functions/format.cpp\n@@ -39,6 +39,7 @@ class FormatFunction : public IFunction\n \n     size_t getNumberOfArguments() const override { return 0; }\n \n+    bool useDefaultImplementationForConstants() const override { return true; }\n     ColumnNumbers getArgumentsThatAreAlwaysConstant() const override { return {0}; }\n \n     DataTypePtr getReturnTypeImpl(const DataTypes & arguments) const override\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02956_format_constexpr.reference b/tests/queries/0_stateless/02956_format_constexpr.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02956_format_constexpr.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/02956_format_constexpr.sql b/tests/queries/0_stateless/02956_format_constexpr.sql\nnew file mode 100644\nindex 000000000000..32c614363069\n--- /dev/null\n+++ b/tests/queries/0_stateless/02956_format_constexpr.sql\n@@ -0,0 +1,1 @@\n+SELECT isConstant(format('{}, world', 'Hello'));\n",
  "problem_statement": "`format` is not a constant expression\n**Use case**\r\n\r\n```\r\nSELECT isConstant(format('{}, world', 'Hello'))\r\n```\r\n\r\nThis should return 1.\n",
  "hints_text": "",
  "created_at": "2023-12-29T20:10:46Z",
  "modified_files": [
    "src/Functions/format.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02956_format_constexpr.reference",
    "b/tests/queries/0_stateless/02956_format_constexpr.sql"
  ]
}