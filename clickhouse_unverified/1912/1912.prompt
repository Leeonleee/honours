You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
StorageView: Could not retrieve database name from select query.
So, we have two MergeTree tables:

```sql
CREATE TABLE default.test1
(
    date Date, 
    platform Enum8('a' = 0, 'b' = 1, 'c' = 2), 
    app Enum8('a' = 0, 'b' = 1)
) ENGINE = MergeTree(date, (platform, app), 8192)
```
and
```sql
CREATE TABLE default.test2
(
    date Date, 
    platform Enum8('a' = 0, 'b' = 1, 'c' = 2), 
    app Enum8('a' = 0, 'b' = 1)
) ENGINE = MergeTree(date, (platform, app), 8192)
```

And then
```sql
CREATE TABLE groups
(
    platform Enum8('a' = 0, 'b' = 1, 'c' = 2), 
    app Enum8('a' = 0, 'b' = 1), 
    group Enum8('AA' = 0, 'AB' = 1, 'BA' = 2, 'BB' = 3, 'CA' = 4, 'CB' = 5)
) ENGINE = Join(ALL, INNER, platform, app)
```

Now, joining works:
```sql
SELECT 
    date, 
    platform, 
    app, 
    group
FROM 
(
    SELECT *
    FROM test1 
    UNION ALL 
    SELECT *
    FROM test2 
) 
ALL INNER JOIN groups USING (platform, app)
```

But we can't create materialized view upon it:
```sql
CREATE MATERIALIZED VIEW bla ENGINE = MergeTree(date, (platform, app), 8192) POPULATE AS
SELECT 
    date, 
    platform, 
    app, 
    group
FROM 
(
    SELECT *
    FROM test1 
    UNION ALL 
    SELECT *
    FROM test2 
) 
ALL INNER JOIN groups USING (platform, app)
```
It says
```
Received exception from server:
Code: 49. DB::Exception: Received from localhost:9000, 127.0.0.1. DB::Exception: Logical error while creating StorageView. Could not retrieve database name from select query..
```
We can specify **default.** for either test1 or test2 (or, obviously, for both) and this solves the issue:
```sql
CREATE MATERIALIZED VIEW bla ENGINE = MergeTree(date, (platform, app), 8192) POPULATE AS
SELECT 
    date, 
    platform, 
    app, 
    group
FROM 
(
    SELECT *
    FROM default.test1 
    UNION ALL 
    SELECT *
    FROM test2 
) 
ALL INNER JOIN groups USING (platform, app)
```
I don't find this way nice though and It seems like a bug for me.
```
$ apt-cache policy clickhouse-server-common 
clickhouse-server-common:
  Installed: 1.1.54133
  Candidate: 1.1.54134
  Version table:
     1.1.54134 500
        500 http://repo.yandex.ru/clickhouse/xenial stable/main amd64 Packages
 *** 1.1.54133 100
        100 /var/lib/dpkg/status
```

It happens using both clickhouse-client and HTTP interface, so it rather looks like server-specific.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
