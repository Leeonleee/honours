{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 1687,
  "instance_id": "ClickHouse__ClickHouse-1687",
  "issue_numbers": [
    "1206"
  ],
  "base_commit": "6a101b75ade3445d6817c89b3aa93200d7db2477",
  "patch": "diff --git a/libs/libcommon/CMakeLists.txt b/libs/libcommon/CMakeLists.txt\nindex 6b7ff423d4a5..d35c70d05eed 100644\n--- a/libs/libcommon/CMakeLists.txt\n+++ b/libs/libcommon/CMakeLists.txt\n@@ -20,7 +20,7 @@ endif ()\n add_library (common\n     src/DateLUT.cpp\n     src/DateLUTImpl.cpp\n-    src/exp10.cpp\n+    src/exp10.c\n     src/mremap.cpp\n     src/JSON.cpp\n     src/getMemoryAmount.cpp\ndiff --git a/libs/libcommon/include/common/exp10.h b/libs/libcommon/include/common/exp10.h\nindex 5f053f71a205..5e5f47db3f0b 100644\n--- a/libs/libcommon/include/common/exp10.h\n+++ b/libs/libcommon/include/common/exp10.h\n@@ -1,13 +1,19 @@\n #pragma once\n \n-#include <cmath>\n+/** exp10 from GNU libm fails to give precise result for integer arguments.\n+  * For example, exp10(3) gives 1000.0000000000001\n+  *  despite the fact that 1000 is exactly representable in double and float.\n+  * Better to always use implementation from MUSL.\n+  */\n \n-double musl_exp10(double x);\n+#include <stdlib.h> /// for __THROW\n \n-#if defined(__FreeBSD__)\n-#define exp10 musl_exp10\n-#endif\n+extern \"C\"\n+{\n \n-#ifdef __APPLE__\n-#define exp10 __exp10\n-#endif\n+double exp10(double x) __THROW;\n+double pow10(double x) __THROW;\n+float exp10f(float x) __THROW;\n+float pow10f(float x) __THROW;\n+\n+}\ndiff --git a/libs/libcommon/src/exp10.cpp b/libs/libcommon/src/exp10.c\nsimilarity index 91%\nrename from libs/libcommon/src/exp10.cpp\nrename to libs/libcommon/src/exp10.c\nindex 3c58428034f3..887d543bddaa 100644\n--- a/libs/libcommon/src/exp10.cpp\n+++ b/libs/libcommon/src/exp10.c\n@@ -169,12 +169,10 @@ obstacle to adoption, that text has been removed.\n \n */\n \n-//#define _GNU_SOURCE\n #include <math.h>\n #include <stdint.h>\n-//#include \"libc.h\"\n \n-double musl_exp10(double x)\n+double exp10(double x)\n {\n     static const double p10[] = {\n         1e-15, 1e-14, 1e-13, 1e-12, 1e-11, 1e-10,\n@@ -193,5 +191,29 @@ double musl_exp10(double x)\n     return pow(10.0, x);\n }\n \n-//weak_alias(exp10, pow10);\n+float exp10f(float x)\n+{\n+    static const float p10[] = {\n+        1e-7f, 1e-6f, 1e-5f, 1e-4f, 1e-3f, 1e-2f, 1e-1f,\n+        1, 1e1, 1e2, 1e3, 1e4, 1e5, 1e6, 1e7\n+    };\n+    float n, y = modff(x, &n);\n+    union {float f; uint32_t i;} u = {n};\n+    /* fabsf(n) < 8 without raising invalid on nan */\n+    if ((u.i>>23 & 0xff) < 0x7f+3) {\n+        if (!y) return p10[(int)n+7];\n+        y = exp2f(3.32192809488736234787031942948939f * y);\n+        return y * p10[(int)n+7];\n+    }\n+    return exp2(3.32192809488736234787031942948939 * x);\n+}\n \n+double pow10(double x)\n+{\n+    return exp10(x);\n+}\n+\n+float pow10f(float x)\n+{\n+    return exp10f(x);\n+}\n",
  "test_patch": "diff --git a/dbms/tests/queries/0_stateless/00534_exp10.reference b/dbms/tests/queries/0_stateless/00534_exp10.reference\nnew file mode 100644\nindex 000000000000..bba2c07fb640\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/00534_exp10.reference\n@@ -0,0 +1,310 @@\n+0\t1\n+1\t10\n+2\t100\n+3\t1000\n+4\t10000\n+5\t100000\n+6\t1000000\n+7\t10000000\n+8\t100000000\n+9\t1000000000\n+10\t10000000000\n+11\t100000000000\n+12\t1000000000000\n+13\t10000000000000\n+14\t100000000000000\n+15\t1000000000000000\n+16\t10000000000000000\n+17\t100000000000000000\n+18\t1000000000000000000\n+19\t10000000000000000000\n+20\t100000000000000000000\n+21\t1e21\n+22\t1e22\n+23\t1e23\n+24\t1e24\n+25\t1e25\n+26\t1e26\n+27\t1e27\n+28\t1e28\n+29\t1e29\n+30\t1e30\n+31\t1e31\n+32\t1e32\n+33\t1e33\n+34\t1e34\n+35\t1e35\n+36\t1e36\n+37\t1e37\n+38\t1e38\n+39\t1e39\n+40\t1e40\n+41\t1e41\n+42\t1e42\n+43\t1e43\n+44\t1e44\n+45\t1e45\n+46\t1e46\n+47\t1e47\n+48\t1e48\n+49\t1e49\n+50\t1e50\n+51\t1e51\n+52\t1e52\n+53\t1e53\n+54\t1e54\n+55\t1e55\n+56\t1e56\n+57\t1e57\n+58\t1e58\n+59\t1e59\n+60\t1e60\n+61\t1e61\n+62\t1e62\n+63\t1e63\n+64\t1e64\n+65\t1e65\n+66\t1e66\n+67\t1e67\n+68\t1e68\n+69\t1e69\n+70\t1e70\n+71\t1e71\n+72\t1e72\n+73\t1e73\n+74\t1e74\n+75\t1e75\n+76\t1e76\n+77\t1e77\n+78\t1e78\n+79\t1e79\n+80\t1e80\n+81\t1e81\n+82\t1e82\n+83\t1e83\n+84\t1e84\n+85\t1e85\n+86\t1e86\n+87\t1e87\n+88\t1e88\n+89\t1e89\n+90\t1e90\n+91\t1e91\n+92\t1e92\n+93\t1e93\n+94\t1e94\n+95\t1e95\n+96\t1e96\n+97\t1e97\n+98\t1e98\n+99\t1e99\n+100\t1e100\n+101\t1e101\n+102\t1e102\n+103\t1e103\n+104\t1e104\n+105\t1e105\n+106\t1e106\n+107\t1e107\n+108\t1e108\n+109\t1e109\n+110\t1e110\n+111\t1e111\n+112\t1e112\n+113\t1e113\n+114\t1e114\n+115\t1e115\n+116\t1e116\n+117\t1e117\n+118\t1e118\n+119\t1e119\n+120\t1e120\n+121\t1e121\n+122\t1e122\n+123\t1e123\n+124\t1e124\n+125\t1e125\n+126\t1e126\n+127\t1e127\n+128\t1e128\n+129\t1e129\n+130\t1e130\n+131\t1e131\n+132\t1e132\n+133\t1e133\n+134\t1e134\n+135\t1e135\n+136\t1e136\n+137\t1e137\n+138\t1e138\n+139\t1e139\n+140\t1e140\n+141\t1e141\n+142\t1e142\n+143\t1e143\n+144\t1e144\n+145\t1e145\n+146\t1e146\n+147\t1e147\n+148\t1e148\n+149\t1e149\n+150\t1e150\n+151\t1e151\n+152\t1e152\n+153\t1e153\n+154\t1e154\n+155\t1e155\n+156\t1e156\n+157\t1e157\n+158\t1e158\n+159\t1e159\n+160\t1e160\n+161\t1e161\n+162\t1e162\n+163\t1e163\n+164\t1e164\n+165\t1e165\n+166\t1e166\n+167\t1e167\n+168\t1e168\n+169\t1e169\n+170\t1e170\n+171\t1e171\n+172\t1e172\n+173\t1e173\n+174\t1e174\n+175\t1e175\n+176\t1e176\n+177\t1e177\n+178\t1e178\n+179\t1e179\n+180\t1e180\n+181\t1e181\n+182\t1e182\n+183\t1e183\n+184\t1e184\n+185\t1e185\n+186\t1e186\n+187\t1e187\n+188\t1e188\n+189\t1e189\n+190\t1e190\n+191\t1e191\n+192\t1e192\n+193\t1e193\n+194\t1e194\n+195\t1e195\n+196\t1e196\n+197\t1e197\n+198\t1e198\n+199\t1e199\n+200\t1e200\n+201\t1e201\n+202\t1e202\n+203\t1e203\n+204\t1e204\n+205\t1e205\n+206\t1e206\n+207\t1e207\n+208\t1e208\n+209\t1e209\n+210\t1e210\n+211\t1e211\n+212\t1e212\n+213\t1e213\n+214\t1e214\n+215\t1e215\n+216\t1e216\n+217\t1e217\n+218\t1e218\n+219\t1e219\n+220\t1e220\n+221\t1e221\n+222\t1e222\n+223\t1e223\n+224\t1e224\n+225\t1e225\n+226\t1e226\n+227\t1e227\n+228\t1e228\n+229\t1e229\n+230\t1e230\n+231\t1e231\n+232\t1e232\n+233\t1e233\n+234\t1e234\n+235\t1e235\n+236\t1e236\n+237\t1e237\n+238\t1e238\n+239\t1e239\n+240\t1e240\n+241\t1e241\n+242\t1e242\n+243\t1e243\n+244\t1e244\n+245\t1e245\n+246\t1e246\n+247\t1e247\n+248\t1e248\n+249\t1e249\n+250\t1e250\n+251\t1e251\n+252\t1e252\n+253\t1e253\n+254\t1e254\n+255\t1e255\n+256\t1e256\n+257\t1e257\n+258\t1e258\n+259\t1e259\n+260\t1e260\n+261\t1e261\n+262\t1e262\n+263\t1e263\n+264\t1e264\n+265\t1e265\n+266\t1e266\n+267\t1e267\n+268\t1e268\n+269\t1e269\n+270\t1e270\n+271\t1e271\n+272\t1e272\n+273\t1e273\n+274\t1e274\n+275\t1e275\n+276\t1e276\n+277\t1e277\n+278\t1e278\n+279\t1e279\n+280\t1e280\n+281\t1e281\n+282\t1e282\n+283\t1e283\n+284\t1e284\n+285\t1e285\n+286\t1e286\n+287\t1e287\n+288\t1e288\n+289\t1e289\n+290\t1e290\n+291\t1e291\n+292\t1e292\n+293\t1e293\n+294\t1e294\n+295\t1e295\n+296\t1e296\n+297\t1e297\n+298\t1e298\n+299\t1e299\n+300\t1e300\n+301\t1e301\n+302\t1e302\n+303\t1e303\n+304\t1e304\n+305\t1e305\n+306\t1e306\n+307\t1e307\n+308\t1e308\n+309\tinf\ndiff --git a/dbms/tests/queries/0_stateless/00534_exp10.sql b/dbms/tests/queries/0_stateless/00534_exp10.sql\nnew file mode 100644\nindex 000000000000..a04fe8d46d9d\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/00534_exp10.sql\n@@ -0,0 +1,1 @@\n+SELECT number, exp10(number) FROM system.numbers LIMIT 310;\n\\ No newline at end of file\ndiff --git a/dbms/tests/queries/0_stateless/00535_parse_float_scientific.reference b/dbms/tests/queries/0_stateless/00535_parse_float_scientific.reference\nnew file mode 100644\nindex 000000000000..825319e1c5ba\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/00535_parse_float_scientific.reference\n@@ -0,0 +1,1 @@\n+10000000\ndiff --git a/dbms/tests/queries/0_stateless/00535_parse_float_scientific.sql b/dbms/tests/queries/0_stateless/00535_parse_float_scientific.sql\nnew file mode 100644\nindex 000000000000..810e6face22e\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/00535_parse_float_scientific.sql\n@@ -0,0 +1,7 @@\n+DROP TABLE IF EXISTS test.float;\n+CREATE TABLE test.float (x Float64) ENGINE = Log;\n+\n+INSERT INTO test.float VALUES (1e7);\n+SELECT * FROM test.float;\n+\n+DROP TABLE test.float;\n",
  "problem_statement": "Bad precision when insert double in scientific notation\n`CREATE TABLE test(x Float64) ENGINE = Log`\r\n\r\n`INSERT INTO test VALUES(10000000)`\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500x\u2500\u2510\r\n\u2502 10000000 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n`INSERT INTO test VALUES(1e7)`\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500x\u2500\u2510\r\n\u2502 9999999.999999998 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "",
  "created_at": "2017-12-21T23:00:21Z"
}