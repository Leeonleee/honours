diff --git a/tests/queries/0_stateless/02494_query_cache_nondeterministic_functions.reference b/tests/queries/0_stateless/02494_query_cache_nondeterministic_functions.reference
index e666f54d4c4a..74dcf748395d 100644
--- a/tests/queries/0_stateless/02494_query_cache_nondeterministic_functions.reference
+++ b/tests/queries/0_stateless/02494_query_cache_nondeterministic_functions.reference
@@ -1,4 +1,8 @@
+-- query_cache_nondeterministic_function_handling = throw
 0
----
+-- query_cache_nondeterministic_function_handling = save
 1
 1
+-- query_cache_nondeterministic_function_handling = ignore
+1
+0
diff --git a/tests/queries/0_stateless/02494_query_cache_nondeterministic_functions.sql b/tests/queries/0_stateless/02494_query_cache_nondeterministic_functions.sql
index 62e0b099d7a5..477655e474f5 100644
--- a/tests/queries/0_stateless/02494_query_cache_nondeterministic_functions.sql
+++ b/tests/queries/0_stateless/02494_query_cache_nondeterministic_functions.sql
@@ -3,14 +3,21 @@
 
 SYSTEM DROP QUERY CACHE;
 
--- rand() is non-deterministic, the query is rejected by default
-SELECT COUNT(rand(1)) SETTINGS use_query_cache = true; -- { serverError CANNOT_USE_QUERY_CACHE_WITH_NONDETERMINISTIC_FUNCTIONS }
-SELECT COUNT(*) FROM system.query_cache;
+SELECT '-- query_cache_nondeterministic_function_handling = throw';
+SELECT count(now()) SETTINGS use_query_cache = true; -- { serverError QUERY_CACHE_USED_WITH_NONDETERMINISTIC_FUNCTIONS }
+SELECT count(now()) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'throw'; -- { serverError QUERY_CACHE_USED_WITH_NONDETERMINISTIC_FUNCTIONS }
+SELECT count(*) FROM system.query_cache;
 
-SELECT '---';
+SYSTEM DROP QUERY CACHE;
+
+SELECT '-- query_cache_nondeterministic_function_handling = save';
+SELECT count(now()) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'save';
+SELECT count(*) FROM system.query_cache;
+
+SYSTEM DROP QUERY CACHE;
 
--- Force caching using a setting
-SELECT COUNT(RAND(1)) SETTINGS use_query_cache = true, query_cache_store_results_of_queries_with_nondeterministic_functions = true;
-SELECT COUNT(*) FROM system.query_cache;
+SELECT '-- query_cache_nondeterministic_function_handling = ignore';
+SELECT count(now()) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'ignore';
+SELECT count(*) FROM system.query_cache;
 
 SYSTEM DROP QUERY CACHE;
diff --git a/tests/queries/0_stateless/02888_obsolete_settings.reference b/tests/queries/0_stateless/02888_obsolete_settings.reference
index 6ee5216cd73c..63553092c0cb 100644
--- a/tests/queries/0_stateless/02888_obsolete_settings.reference
+++ b/tests/queries/0_stateless/02888_obsolete_settings.reference
@@ -42,6 +42,7 @@ optimize_duplicate_order_by_and_distinct
 optimize_fuse_sum_count_avg
 parallel_replicas_min_number_of_granules_to_enable
 partial_merge_join_optimizations
+query_cache_store_results_of_queries_with_nondeterministic_functions
 query_plan_optimize_projection
 replication_alter_columns_timeout
 restore_threads
