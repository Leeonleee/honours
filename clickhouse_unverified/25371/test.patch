diff --git a/tests/integration/test_distributed_backward_compatability/configs/legacy.xml b/tests/integration/test_distributed_backward_compatability/configs/legacy.xml
new file mode 100644
index 000000000000..01bd56de8454
--- /dev/null
+++ b/tests/integration/test_distributed_backward_compatability/configs/legacy.xml
@@ -0,0 +1,7 @@
+<yandex>
+    <profiles>
+        <default>
+            <legacy_column_name_of_tuple_literal>1</legacy_column_name_of_tuple_literal>
+        </default>
+    </profiles>
+</yandex>
diff --git a/tests/integration/test_distributed_backward_compatability/test.py b/tests/integration/test_distributed_backward_compatability/test.py
index eb18019c8dfd..0d36aaa23f41 100644
--- a/tests/integration/test_distributed_backward_compatability/test.py
+++ b/tests/integration/test_distributed_backward_compatability/test.py
@@ -5,8 +5,8 @@
 cluster = ClickHouseCluster(__file__)
 
 node_old = cluster.add_instance('node1', main_configs=['configs/remote_servers.xml'], image='yandex/clickhouse-server',
-                                tag='19.17.8.54', stay_alive=True, with_installed_binary=True)
-node_new = cluster.add_instance('node2', main_configs=['configs/remote_servers.xml'])
+                                tag='20.8.9.6', stay_alive=True, with_installed_binary=True)
+node_new = cluster.add_instance('node2', main_configs=['configs/remote_servers.xml'], user_configs=['configs/legacy.xml'])
 
 
 @pytest.fixture(scope="module")
diff --git a/tests/queries/0_stateless/01447_json_strings.reference b/tests/queries/0_stateless/01447_json_strings.reference
index ab88e2f36965..7892cb82922d 100644
--- a/tests/queries/0_stateless/01447_json_strings.reference
+++ b/tests/queries/0_stateless/01447_json_strings.reference
@@ -14,7 +14,7 @@
 			"type": "Array(UInt8)"
 		},
 		{
-			"name": "tuple(1, 'a')",
+			"name": "(1, 'a')",
 			"type": "Tuple(UInt8, String)"
 		},
 		{
@@ -33,7 +33,7 @@
 			"1": "1",
 			"'a'": "a",
 			"[1, 2, 3]": "[1,2,3]",
-			"tuple(1, 'a')": "(1,'a')",
+			"(1, 'a')": "(1,'a')",
 			"NULL": "ᴺᵁᴸᴸ",
 			"nan": "nan"
 		}
diff --git a/tests/queries/0_stateless/01449_json_compact_strings.reference b/tests/queries/0_stateless/01449_json_compact_strings.reference
index 1c6f073c0d07..53dba71d6ff1 100644
--- a/tests/queries/0_stateless/01449_json_compact_strings.reference
+++ b/tests/queries/0_stateless/01449_json_compact_strings.reference
@@ -14,7 +14,7 @@
 			"type": "Array(UInt8)"
 		},
 		{
-			"name": "tuple(1, 'a')",
+			"name": "(1, 'a')",
 			"type": "Tuple(UInt8, String)"
 		},
 		{
diff --git a/tests/queries/0_stateless/01913_names_of_tuple_literal.reference b/tests/queries/0_stateless/01913_names_of_tuple_literal.reference
new file mode 100644
index 000000000000..a4c05ad853a5
--- /dev/null
+++ b/tests/queries/0_stateless/01913_names_of_tuple_literal.reference
@@ -0,0 +1,4 @@
+((1, 2), (2, 3), (3, 4))
+((1,2),(2,3),(3,4))
+tuple(tuple(1, 2), tuple(2, 3), tuple(3, 4))
+((1,2),(2,3),(3,4))
diff --git a/tests/queries/0_stateless/01913_names_of_tuple_literal.sql b/tests/queries/0_stateless/01913_names_of_tuple_literal.sql
new file mode 100644
index 000000000000..09de9e8cf37e
--- /dev/null
+++ b/tests/queries/0_stateless/01913_names_of_tuple_literal.sql
@@ -0,0 +1,2 @@
+SELECT ((1, 2), (2, 3), (3, 4)) FORMAT TSVWithNames;
+SELECT ((1, 2), (2, 3), (3, 4)) FORMAT TSVWithNames SETTINGS legacy_column_name_of_tuple_literal = 1;
diff --git a/tests/testflows/extended_precision_data_types/snapshots/common.py.tests.snapshot b/tests/testflows/extended_precision_data_types/snapshots/common.py.tests.snapshot
index d0b7b3423d89..c8b57ffdd1c4 100644
--- a/tests/testflows/extended_precision_data_types/snapshots/common.py.tests.snapshot
+++ b/tests/testflows/extended_precision_data_types/snapshots/common.py.tests.snapshot
@@ -653,7 +653,7 @@ a
 """
 
 Inline___Int128___arrayReduceInRanges__sum_____1__5____ = r"""
-arrayReduceInRanges(\'sum\', array(tuple(1, 5)), array(toInt128(\'3\'), toInt128(\'2\'), toInt128(\'1\')))
+arrayReduceInRanges(\'sum\', array((1, 5)), array(toInt128(\'3\'), toInt128(\'2\'), toInt128(\'1\')))
 [6]
 """
 
@@ -1181,7 +1181,7 @@ a
 """
 
 Inline___Int256___arrayReduceInRanges__sum_____1__5____ = r"""
-arrayReduceInRanges(\'sum\', array(tuple(1, 5)), array(toInt256(\'3\'), toInt256(\'2\'), toInt256(\'1\')))
+arrayReduceInRanges(\'sum\', array((1, 5)), array(toInt256(\'3\'), toInt256(\'2\'), toInt256(\'1\')))
 [6]
 """
 
@@ -1709,7 +1709,7 @@ a
 """
 
 Inline___UInt128___arrayReduceInRanges__sum_____1__5____ = r"""
-arrayReduceInRanges(\'sum\', array(tuple(1, 5)), array(toUInt128(\'3\'), toUInt128(\'2\'), toUInt128(\'1\')))
+arrayReduceInRanges(\'sum\', array((1, 5)), array(toUInt128(\'3\'), toUInt128(\'2\'), toUInt128(\'1\')))
 [6]
 """
 
@@ -2237,7 +2237,7 @@ a
 """
 
 Inline___UInt256___arrayReduceInRanges__sum_____1__5____ = r"""
-arrayReduceInRanges(\'sum\', array(tuple(1, 5)), array(toUInt256(\'3\'), toUInt256(\'2\'), toUInt256(\'1\')))
+arrayReduceInRanges(\'sum\', array((1, 5)), array(toUInt256(\'3\'), toUInt256(\'2\'), toUInt256(\'1\')))
 [6]
 """
 
@@ -2765,7 +2765,7 @@ a
 """
 
 Inline___Decimal256_0____arrayReduceInRanges__sum_____1__5____ = r"""
-arrayReduceInRanges(\'sum\', array(tuple(1, 5)), array(toDecimal256(\'3\', 0), toDecimal256(\'2\', 0), toDecimal256(\'1\', 0)))
+arrayReduceInRanges(\'sum\', array((1, 5)), array(toDecimal256(\'3\', 0), toDecimal256(\'2\', 0), toDecimal256(\'1\', 0)))
 [6]
 """
 
