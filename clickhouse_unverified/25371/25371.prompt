You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
High server load after upgrade to 20.x
Hello,

I have tried to switch from Altinity 19.17.4.11 rpms to Clickhouse 20.1.6.30 rpms on RH7.
No changes in config. After a short time system load increases until the system is unresponsive.

perf top is showing this 3 lines at the top 
```
    50.26%  ParalInputsProc  clickhouse               [.] std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >
    18.73%  ParalInputsProc  clickhouse               [.] memcpy
    16.62%  ParalInputsProc  clickhouse               [.] std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned long> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >
```
Is there anything I haven't seen or read that makes it not possible ?

Ralph
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
