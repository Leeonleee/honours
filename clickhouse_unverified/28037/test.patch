diff --git a/docker/test/fasttest/run.sh b/docker/test/fasttest/run.sh
index 00af261f6c89..b59638813a61 100755
--- a/docker/test/fasttest/run.sh
+++ b/docker/test/fasttest/run.sh
@@ -377,6 +377,7 @@ function run_tests
 
         # Depends on AWS
         01801_s3_cluster
+        02012_settings_clause_for_s3
 
         # needs psql
         01889_postgresql_protocol_null_fields
diff --git a/docker/test/stateless/Dockerfile b/docker/test/stateless/Dockerfile
index 39c8a2e53580..b66fa055e7b3 100644
--- a/docker/test/stateless/Dockerfile
+++ b/docker/test/stateless/Dockerfile
@@ -49,6 +49,17 @@ RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 ENV NUM_TRIES=1
 ENV MAX_RUN_TIME=0
 
+
+# Download Minio-related binaries
+RUN wget 'https://dl.min.io/server/minio/release/linux-amd64/minio' \
+    && chmod +x ./minio \
+    && wget 'https://dl.min.io/client/mc/release/linux-amd64/mc' \
+    && chmod +x ./mc
+
+ENV MINIO_ROOT_USER="clickhouse"
+ENV MINIO_ROOT_PASSWORD="clickhouse"
+
 COPY run.sh /
 COPY process_functional_tests_result.py /
+COPY setup_minio.sh /
 CMD ["/bin/bash", "/run.sh"]
diff --git a/docker/test/stateless/run.sh b/docker/test/stateless/run.sh
index e5ef72e747ae..154126a38800 100755
--- a/docker/test/stateless/run.sh
+++ b/docker/test/stateless/run.sh
@@ -17,6 +17,8 @@ dpkg -i package_folder/clickhouse-test_*.deb
 # install test configs
 /usr/share/clickhouse-test/config/install.sh
 
+./setup_minio.sh
+
 # For flaky check we also enable thread fuzzer
 if [ "$NUM_TRIES" -gt "1" ]; then
     export THREAD_FUZZER_CPU_TIME_PERIOD_US=1000
diff --git a/docker/test/stateless/setup_minio.sh b/docker/test/stateless/setup_minio.sh
new file mode 100755
index 000000000000..7f8b90ee7414
--- /dev/null
+++ b/docker/test/stateless/setup_minio.sh
@@ -0,0 +1,57 @@
+#!/bin/bash
+
+# Usage for local run:
+#
+# ./docker/test/stateless/setup_minio.sh ./tests/
+#
+
+set -e -x -a -u
+
+ls -lha
+
+mkdir -p ./minio_data
+
+if [ ! -f ./minio ]; then
+  echo 'MinIO binary not found, downloading...'
+
+  BINARY_TYPE=$(uname -s | tr '[:upper:]' '[:lower:]')
+
+  wget "https://dl.min.io/server/minio/release/${BINARY_TYPE}-amd64/minio" \
+    && chmod +x ./minio \
+    && wget "https://dl.min.io/client/mc/release/${BINARY_TYPE}-amd64/mc" \
+    && chmod +x ./mc
+fi
+
+MINIO_ROOT_USER=${MINIO_ROOT_USER:-clickhouse}
+MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-clickhouse}
+
+./minio server --address ":11111" ./minio_data &
+
+while ! curl -v --silent http://localhost:11111 2>&1 | grep AccessDenied
+do
+  echo "Trying to connect to minio"
+  sleep 1
+done
+
+lsof -i :11111
+
+sleep 5
+
+./mc alias set clickminio http://localhost:11111 clickhouse clickhouse
+./mc admin user add clickminio test testtest
+./mc admin policy set clickminio readwrite user=test
+./mc mb clickminio/test
+
+
+# Upload data to Minio. By default after unpacking all tests will in
+# /usr/share/clickhouse-test/queries
+
+TEST_PATH=${1:-/usr/share/clickhouse-test}
+MINIO_DATA_PATH=${TEST_PATH}/queries/0_stateless/data_minio
+
+# Iterating over globs will cause redudant FILE variale to be a path to a file, not a filename
+# shellcheck disable=SC2045
+for FILE in $(ls "${MINIO_DATA_PATH}"); do
+    echo "$FILE";
+    ./mc cp "${MINIO_DATA_PATH}"/"$FILE" clickminio/test/"$FILE";
+done
diff --git a/tests/queries/0_stateless/01801_s3_cluster.reference b/tests/queries/0_stateless/01801_s3_cluster.reference
index e69de29bb2d1..5e36c5923ce9 100644
--- a/tests/queries/0_stateless/01801_s3_cluster.reference
+++ b/tests/queries/0_stateless/01801_s3_cluster.reference
@@ -0,0 +1,24 @@
+0	0	0
+0	0	0
+0	0	0
+1	2	3
+4	5	6
+7	8	9
+10	11	12
+13	14	15
+16	17	18
+20	21	22
+23	24	25
+26	27	28
+0	0	0
+0	0	0
+0	0	0
+1	2	3
+4	5	6
+7	8	9
+10	11	12
+13	14	15
+16	17	18
+20	21	22
+23	24	25
+26	27	28
diff --git a/tests/queries/0_stateless/01801_s3_cluster.sh b/tests/queries/0_stateless/01801_s3_cluster.sh
deleted file mode 100755
index 460f3856a2f8..000000000000
--- a/tests/queries/0_stateless/01801_s3_cluster.sh
+++ /dev/null
@@ -1,21 +0,0 @@
-#!/usr/bin/env bash
-
-# NOTE: this is a partial copy of the 01683_dist_INSERT_block_structure_mismatch,
-# but this test also checks the log messages
-
-CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
-# shellcheck source=../shell_config.sh
-. "$CUR_DIR"/../shell_config.sh
-
-if [[ -z $S3_ACCESS_KEY_ID ]]; then
-    echo "@@SKIP@@: Missing \$S3_ACCESS_KEY_ID"
-    exit 0
-fi
-
-if [[ -z $S3_SECRET_ACCESS ]]; then
-    echo "@@SKIP@@: Missing \$S3_SECRET_ACCESS"
-    exit 0
-fi
-
-${CLICKHOUSE_CLIENT_BINARY} --send_logs_level="none" -q "SELECT *  FROM s3('https://s3.mds.yandex.net/clickhouse-test-reports/*/*/functional_stateless_tests_(ubsan)/test_results.tsv',  '$S3_ACCESS_KEY_ID', '$S3_SECRET_ACCESS', 'LineAsString', 'line String') limit 100 FORMAT Null;"
-${CLICKHOUSE_CLIENT_BINARY} --send_logs_level="none" -q "SELECT *  FROM s3Cluster('test_cluster_two_shards', 'https://s3.mds.yandex.net/clickhouse-test-reports/*/*/functional_stateless_tests_(ubsan)/test_results.tsv',  '$S3_ACCESS_KEY_ID', '$S3_SECRET_ACCESS', 'LineAsString', 'line String') limit 100 FORMAT Null;"
diff --git a/tests/queries/0_stateless/01801_s3_cluster.sql b/tests/queries/0_stateless/01801_s3_cluster.sql
new file mode 100644
index 000000000000..9c13c2572498
--- /dev/null
+++ b/tests/queries/0_stateless/01801_s3_cluster.sql
@@ -0,0 +1,2 @@
+select * from s3('http://localhost:11111/test/{a,b,c}.tsv', 'test', 'testtest', 'TSV', 'a UInt64, b UInt64, c UInt64') ORDER BY a, b, c;
+select * from s3Cluster('test_cluster_two_shards', 'http://localhost:11111/test/{a,b,c}.tsv', 'test', 'testtest', 'TSV', 'a UInt64, b UInt64, c UInt64') ORDER BY a, b, c;
diff --git a/tests/queries/0_stateless/02012_settings_clause_for_s3.reference b/tests/queries/0_stateless/02012_settings_clause_for_s3.reference
new file mode 100644
index 000000000000..b8f46d348ca0
--- /dev/null
+++ b/tests/queries/0_stateless/02012_settings_clause_for_s3.reference
@@ -0,0 +1,3 @@
+ClickHouse	1
+Hello	2
+Hedhehog	3
diff --git a/tests/queries/0_stateless/02012_settings_clause_for_s3.sql b/tests/queries/0_stateless/02012_settings_clause_for_s3.sql
new file mode 100644
index 000000000000..4f750fb99c48
--- /dev/null
+++ b/tests/queries/0_stateless/02012_settings_clause_for_s3.sql
@@ -0,0 +1,7 @@
+DROP TABLE IF EXISTS table_with_range;
+
+CREATE TABLE table_with_range(`name` String,`number` UInt32)　ENGINE = S3('http://localhost:11111/test/tsv_with_header.tsv', 'test', 'testtest', 'TSVWithNames')　SETTINGS input_format_with_names_use_header = 1;
+
+select * from table_with_range;
+
+DROP TABLE IF EXISTS table_with_range;
diff --git a/tests/queries/0_stateless/data_minio/a.tsv b/tests/queries/0_stateless/data_minio/a.tsv
new file mode 100644
index 000000000000..acd7c60768bb
--- /dev/null
+++ b/tests/queries/0_stateless/data_minio/a.tsv
@@ -0,0 +1,4 @@
+1	2	3
+4	5	6
+7	8	9
+0	0	0
diff --git a/tests/queries/0_stateless/data_minio/b.tsv b/tests/queries/0_stateless/data_minio/b.tsv
new file mode 100644
index 000000000000..a32392250a75
--- /dev/null
+++ b/tests/queries/0_stateless/data_minio/b.tsv
@@ -0,0 +1,4 @@
+10	11	12
+13	14	15
+16	17	18
+0	0	0
diff --git a/tests/queries/0_stateless/data_minio/c.tsv b/tests/queries/0_stateless/data_minio/c.tsv
new file mode 100644
index 000000000000..c935e93430c9
--- /dev/null
+++ b/tests/queries/0_stateless/data_minio/c.tsv
@@ -0,0 +1,4 @@
+20	21	22
+23	24	25
+26	27	28
+0	0	0
diff --git a/tests/queries/0_stateless/data_minio/tsv_with_header.tsv b/tests/queries/0_stateless/data_minio/tsv_with_header.tsv
new file mode 100644
index 000000000000..d93a8c9ba0cb
--- /dev/null
+++ b/tests/queries/0_stateless/data_minio/tsv_with_header.tsv
@@ -0,0 +1,4 @@
+number	name
+1	ClickHouse
+2	Hello
+3	Hedhehog
