You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Keeper startup behaviour.
(tested on 22.9)

Apache Zookeeper service starts and waits for peers (quorum). It waits forever and does not serve clients requests until get the quorum.

Clickhouse-keeper has a different behavior. It creates a lot of hustle, you need to start all keeper nodes at about the same time, otherwise the first node will go down while you start the second node.

Another problem with embedded keeper. 

Imagine you have TWO nodes of Clickhouse with embedded keeper (both). It works great despite only having two nodes.
And if one node is missing, the other node becomes read-only, and that's expected, and that node continues to serve SELECT queries without issue indefinitely.
BUT if you try to restart this node, it is impossible, because Clickhouse does not start due to the embedded keeper and after the timeout, embedded keeper shuts down the instance.

If the keeper is not embedded,   then this single Clickhouse will start up and continue serving the select requests.

This is inconsistent behavior - Clickhouse serves select requests normally, but restarting breaks it.

It would be nice to implement the zookeeper behavior, the Clickhouse-keeper process starts and waits indefinitely for a RAFT quorum and does not process client requests if there is no quorum. This will allow the Clickhouse server with embedded keeper to start normally in read-only mode.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
