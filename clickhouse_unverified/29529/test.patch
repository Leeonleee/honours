diff --git a/tests/integration/test_dictionaries_config_reload/__init__.py b/tests/integration/test_dictionaries_config_reload/__init__.py
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/integration/test_dictionaries_config_reload/config/dictionaries_config.xml b/tests/integration/test_dictionaries_config_reload/config/dictionaries_config.xml
new file mode 100644
index 000000000000..7e62283a83c2
--- /dev/null
+++ b/tests/integration/test_dictionaries_config_reload/config/dictionaries_config.xml
@@ -0,0 +1,2 @@
+<yandex>
+</yandex>
diff --git a/tests/integration/test_dictionaries_config_reload/dictionaries/dictionary_config.xml b/tests/integration/test_dictionaries_config_reload/dictionaries/dictionary_config.xml
new file mode 100644
index 000000000000..5d6064c30ebb
--- /dev/null
+++ b/tests/integration/test_dictionaries_config_reload/dictionaries/dictionary_config.xml
@@ -0,0 +1,28 @@
+<dictionaries>
+    <dictionary>
+        <name>test_dictionary_1</name>
+
+        <structure>
+            <id>
+                <name>id</name>
+                <type>UInt64</type>
+            </id>
+            <attribute>
+                <name>value_1</name>
+                <type>String</type>
+                <null_value></null_value>
+            </attribute>
+        </structure>
+
+        <source>
+            <clickhouse>
+                <table>dictionary_values</table>
+            </clickhouse>
+        </source>
+
+        <layout>
+            <direct/>
+        </layout>
+
+    </dictionary>
+</dictionaries>
diff --git a/tests/integration/test_dictionaries_config_reload/dictionaries/dictionary_config2.xml b/tests/integration/test_dictionaries_config_reload/dictionaries/dictionary_config2.xml
new file mode 100644
index 000000000000..2f400cba0f72
--- /dev/null
+++ b/tests/integration/test_dictionaries_config_reload/dictionaries/dictionary_config2.xml
@@ -0,0 +1,28 @@
+<dictionaries>
+    <dictionary>
+        <name>test_dictionary_2</name>
+
+        <structure>
+            <id>
+                <name>id</name>
+                <type>UInt64</type>
+            </id>
+            <attribute>
+                <name>value_2</name>
+                <type>String</type>
+                <null_value></null_value>
+            </attribute>
+        </structure>
+
+        <source>
+            <clickhouse>
+                <table>dictionary_values</table>
+            </clickhouse>
+        </source>
+
+        <layout>
+            <direct/>
+        </layout>
+
+    </dictionary>
+</dictionaries>
diff --git a/tests/integration/test_dictionaries_config_reload/test.py b/tests/integration/test_dictionaries_config_reload/test.py
new file mode 100644
index 000000000000..6f6e2488abce
--- /dev/null
+++ b/tests/integration/test_dictionaries_config_reload/test.py
@@ -0,0 +1,65 @@
+import os
+import sys
+import time
+import logging
+import pytest
+
+sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
+
+from helpers.cluster import ClickHouseCluster
+
+cluster = ClickHouseCluster(__file__)
+node = cluster.add_instance('node', stay_alive=True, main_configs=['config/dictionaries_config.xml'])
+
+
+def copy_file_to_container(local_path, dist_path, container_id):
+    os.system("docker cp {local} {cont_id}:{dist}".format(local=local_path, cont_id=container_id, dist=dist_path))
+
+
+config = '''<yandex>
+    <dictionaries_config>/etc/clickhouse-server/dictionaries/{dictionaries_config}</dictionaries_config>
+</yandex>'''
+
+
+@pytest.fixture(scope="module")
+def started_cluster():
+    try:
+        cluster.start()
+
+        copy_file_to_container(os.path.join(SCRIPT_DIR, 'dictionaries/.'), '/etc/clickhouse-server/dictionaries', node.docker_id)
+
+        node.query("CREATE TABLE dictionary_values (id UInt64, value_1 String, value_2 String) ENGINE=TinyLog;")
+        node.query("INSERT INTO dictionary_values VALUES (0, 'Value_1', 'Value_2')")
+
+        node.restart_clickhouse()
+
+        yield cluster
+
+    finally:
+        cluster.shutdown()
+
+
+def change_config(dictionaries_config):
+    node.replace_config("/etc/clickhouse-server/config.d/dictionaries_config.xml", config.format(dictionaries_config=dictionaries_config))
+    node.query("SYSTEM RELOAD CONFIG;")
+
+
+def test(started_cluster):
+    # Set config with the path to the first dictionary.
+    change_config("dictionary_config.xml")
+
+    time.sleep(10)
+
+    assert node.query("SELECT dictGet('test_dictionary_1', 'value_1', toUInt64(0));") == 'Value_1
'
+
+    # Change path to the second dictionary in config.
+    change_config("dictionary_config2.xml")
+
+    time.sleep(10)
+
+    # Check that the new dictionary is loaded.
+    assert node.query("SELECT dictGet('test_dictionary_2', 'value_2', toUInt64(0));") == 'Value_2
'
+
+    # Check that the previous dictionary was unloaded.
+    node.query_and_get_error("SELECT dictGet('test_dictionary_1', 'value', toUInt64(0));")
diff --git a/tests/integration/test_executable_user_defined_functions_config_reload/__init__.py b/tests/integration/test_executable_user_defined_functions_config_reload/__init__.py
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/integration/test_executable_user_defined_functions_config_reload/config/executable_user_defined_functions_config.xml b/tests/integration/test_executable_user_defined_functions_config_reload/config/executable_user_defined_functions_config.xml
new file mode 100644
index 000000000000..7e62283a83c2
--- /dev/null
+++ b/tests/integration/test_executable_user_defined_functions_config_reload/config/executable_user_defined_functions_config.xml
@@ -0,0 +1,2 @@
+<yandex>
+</yandex>
diff --git a/tests/integration/test_executable_user_defined_functions_config_reload/functions/test_function_config.xml b/tests/integration/test_executable_user_defined_functions_config_reload/functions/test_function_config.xml
new file mode 100644
index 000000000000..f2a7d6e67b18
--- /dev/null
+++ b/tests/integration/test_executable_user_defined_functions_config_reload/functions/test_function_config.xml
@@ -0,0 +1,14 @@
+<functions>
+    <function>
+        <type>executable</type>
+        <name>test_function_1</name>
+        <return_type>String</return_type>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <format>TabSeparated</format>
+        <command>while read read_data; do printf "Key_1 $read_data
"; done</command>
+        <lifetime>0</lifetime>
+    </function>
+</functions>
+
diff --git a/tests/integration/test_executable_user_defined_functions_config_reload/functions/test_function_config2.xml b/tests/integration/test_executable_user_defined_functions_config_reload/functions/test_function_config2.xml
new file mode 100644
index 000000000000..fe02146a6b89
--- /dev/null
+++ b/tests/integration/test_executable_user_defined_functions_config_reload/functions/test_function_config2.xml
@@ -0,0 +1,14 @@
+<functions>
+    <function>
+        <type>executable</type>
+        <name>test_function_2</name>
+        <return_type>String</return_type>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <format>TabSeparated</format>
+        <command>while read read_data; do printf "Key_2 $read_data
"; done</command>
+        <lifetime>0</lifetime>
+    </function>
+</functions>
+
diff --git a/tests/integration/test_executable_user_defined_functions_config_reload/test.py b/tests/integration/test_executable_user_defined_functions_config_reload/test.py
new file mode 100644
index 000000000000..e5c4f4edb4e3
--- /dev/null
+++ b/tests/integration/test_executable_user_defined_functions_config_reload/test.py
@@ -0,0 +1,61 @@
+import os
+import sys
+import time
+import logging
+import pytest
+
+sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
+
+from helpers.cluster import ClickHouseCluster
+
+cluster = ClickHouseCluster(__file__)
+node = cluster.add_instance('node', stay_alive=True, main_configs=['config/executable_user_defined_functions_config.xml'])
+
+
+def copy_file_to_container(local_path, dist_path, container_id):
+    os.system("docker cp {local} {cont_id}:{dist}".format(local=local_path, cont_id=container_id, dist=dist_path))
+
+
+config = '''<yandex>
+    <user_defined_executable_functions_config>/etc/clickhouse-server/functions/{user_defined_executable_functions_config}</user_defined_executable_functions_config>
+</yandex>'''
+
+
+@pytest.fixture(scope="module")
+def started_cluster():
+    try:
+        cluster.start()
+
+        copy_file_to_container(os.path.join(SCRIPT_DIR, 'functions/.'), '/etc/clickhouse-server/functions', node.docker_id)
+        node.restart_clickhouse()
+
+        yield cluster
+
+    finally:
+        cluster.shutdown()
+
+
+def change_config(user_defined_executable_functions_config):
+    node.replace_config("/etc/clickhouse-server/config.d/executable_user_defined_functions_config.xml", config.format(user_defined_executable_functions_config=user_defined_executable_functions_config))
+    node.query("SYSTEM RELOAD CONFIG;")
+
+
+def test(started_cluster):
+    # Set config with the path to the first executable user defined function.
+    change_config("test_function_config.xml")
+
+    time.sleep(10)
+
+    assert node.query("SELECT test_function_1(toUInt64(1));") == 'Key_1 1
'
+
+    # Change path to the second executable user defined function in config.
+    change_config("test_function_config2.xml")
+
+    time.sleep(10)
+
+    # Check that the new executable user defined function is loaded.
+    assert node.query("SELECT test_function_2(toUInt64(1))") == 'Key_2 1
'
+
+    # Check that the previous executable user defined function was unloaded.
+    node.query_and_get_error("SELECT test_function_1(toUInt64(1));")
