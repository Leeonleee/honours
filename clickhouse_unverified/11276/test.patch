diff --git a/tests/performance/insert_select_default_small_block.xml b/tests/performance/insert_select_default_small_block.xml
new file mode 100644
index 000000000000..12e67b09d2f2
--- /dev/null
+++ b/tests/performance/insert_select_default_small_block.xml
@@ -0,0 +1,38 @@
+<test>
+    <settings><max_block_size>1</max_block_size></settings>
+
+    <create_query>
+CREATE TABLE insert_small_block_performance
+(
+    `x` String, 
+    `a` DEFAULT SHA256(x), 
+    `b` DEFAULT SHA256(toString(a)), 
+    `c` DEFAULT SHA256(toString(b)), 
+    `d` DEFAULT SHA256(toString(c)), 
+    `e` DEFAULT SHA256(toString(d)), 
+    `f` DEFAULT SHA256(toString(e)), 
+    `g` DEFAULT SHA256(toString(f)), 
+    `h` DEFAULT SHA256(toString(g)), 
+    `i` DEFAULT SHA256(toString(h)), 
+    `j` DEFAULT SHA256(toString(i)), 
+    `k` DEFAULT SHA256(toString(j)), 
+    `l` DEFAULT SHA256(toString(k)), 
+    `m` DEFAULT SHA256(toString(l)), 
+    `n` DEFAULT SHA256(toString(m)), 
+    `o` DEFAULT SHA256(toString(n)), 
+    `p` DEFAULT SHA256(toString(o)), 
+    `q` DEFAULT SHA256(toString(p)), 
+    `r` DEFAULT SHA256(toString(q)), 
+    `s` DEFAULT SHA256(toString(r)), 
+    `t` DEFAULT SHA256(toString(s)), 
+    `u` DEFAULT SHA256(toString(t)), 
+    `v` DEFAULT SHA256(toString(u)), 
+    `w` DEFAULT SHA256(toString(v))
+)
+ENGINE = Null;
+    </create_query>
+
+    <query>INSERT INTO insert_small_block_performance (x) SELECT toString(number) FROM numbers(10000);</query>
+
+    <drop_query>DROP TABLE IF EXISTS insert_small_block_performance</drop_query>
+</test>
diff --git a/tests/queries/0_stateless/01286_constraints_on_default.reference b/tests/queries/0_stateless/01286_constraints_on_default.reference
new file mode 100644
index 000000000000..aa47d0d46d47
--- /dev/null
+++ b/tests/queries/0_stateless/01286_constraints_on_default.reference
@@ -0,0 +1,2 @@
+0
+0
diff --git a/tests/queries/0_stateless/01286_constraints_on_default.sql b/tests/queries/0_stateless/01286_constraints_on_default.sql
new file mode 100644
index 000000000000..d150bac15b51
--- /dev/null
+++ b/tests/queries/0_stateless/01286_constraints_on_default.sql
@@ -0,0 +1,29 @@
+DROP TABLE IF EXISTS default_constraints;
+CREATE TABLE default_constraints
+(
+    x UInt8,
+    y UInt8 DEFAULT x + 1,
+    CONSTRAINT c CHECK y < 5
+) ENGINE = Memory;
+
+INSERT INTO default_constraints (x) SELECT number FROM system.numbers LIMIT 5; -- { serverError 469 }
+INSERT INTO default_constraints (x) VALUES (0),(1),(2),(3),(4); -- { serverError 469 }
+
+SELECT y, throwIf(NOT y < 5) FROM default_constraints;
+SELECT count() FROM default_constraints;
+
+DROP TABLE default_constraints;
+
+
+CREATE TEMPORARY TABLE default_constraints
+(
+    x UInt8,
+    y UInt8 DEFAULT x + 1,
+    CONSTRAINT c CHECK y < 5
+);
+
+INSERT INTO default_constraints (x) SELECT number FROM system.numbers LIMIT 5; -- { serverError 469 }
+INSERT INTO default_constraints (x) VALUES (0),(1),(2),(3),(4); -- { serverError 469 }
+
+SELECT y, throwIf(NOT y < 5) FROM default_constraints;
+SELECT count() FROM default_constraints;
