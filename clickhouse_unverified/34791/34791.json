{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 34791,
  "instance_id": "ClickHouse__ClickHouse-34791",
  "issue_numbers": [
    "34776",
    "34785"
  ],
  "base_commit": "57ef720f2ab491d16466aa64578815fab99b2693",
  "patch": "diff --git a/programs/client/Client.cpp b/programs/client/Client.cpp\nindex 2cbf39a61da5..c40f41cd8d15 100644\n--- a/programs/client/Client.cpp\n+++ b/programs/client/Client.cpp\n@@ -486,12 +486,19 @@ void Client::connect()\n     UInt64 server_version_minor = 0;\n     UInt64 server_version_patch = 0;\n \n+    if (hosts_and_ports.empty())\n+    {\n+        String host = config().getString(\"host\", \"localhost\");\n+        UInt16 port = static_cast<UInt16>(ConnectionParameters::getPortFromConfig(config()));\n+        hosts_and_ports.emplace_back(HostAndPort{host, port});\n+    }\n+\n     for (size_t attempted_address_index = 0; attempted_address_index < hosts_and_ports.size(); ++attempted_address_index)\n     {\n         try\n         {\n-            connection_parameters\n-                = ConnectionParameters(config(), hosts_and_ports[attempted_address_index].host, hosts_and_ports[attempted_address_index].port);\n+            connection_parameters = ConnectionParameters(\n+                config(), hosts_and_ports[attempted_address_index].host, hosts_and_ports[attempted_address_index].port);\n \n             if (is_interactive)\n                 std::cout << \"Connecting to \"\n@@ -1085,22 +1092,15 @@ void Client::processOptions(const OptionsDescription & options_description,\n         }\n     }\n \n-    if (hosts_and_ports_arguments.empty())\n+    for (const auto & hosts_and_ports_argument : hosts_and_ports_arguments)\n     {\n-        hosts_and_ports.emplace_back(HostAndPort{\"localhost\", DBMS_DEFAULT_PORT});\n-    }\n-    else\n-    {\n-        for (const auto & hosts_and_ports_argument : hosts_and_ports_arguments)\n-        {\n-            /// Parse commandline options related to external tables.\n-            po::parsed_options parsed_hosts_and_ports\n-                = po::command_line_parser(hosts_and_ports_argument).options(options_description.hosts_and_ports_description.value()).run();\n-            po::variables_map host_and_port_options;\n-            po::store(parsed_hosts_and_ports, host_and_port_options);\n-            hosts_and_ports.emplace_back(\n-                HostAndPort{host_and_port_options[\"host\"].as<std::string>(), host_and_port_options[\"port\"].as<UInt16>()});\n-        }\n+        /// Parse commandline options related to external tables.\n+        po::parsed_options parsed_hosts_and_ports\n+            = po::command_line_parser(hosts_and_ports_argument).options(options_description.hosts_and_ports_description.value()).run();\n+        po::variables_map host_and_port_options;\n+        po::store(parsed_hosts_and_ports, host_and_port_options);\n+        hosts_and_ports.emplace_back(\n+            HostAndPort{host_and_port_options[\"host\"].as<std::string>(), host_and_port_options[\"port\"].as<UInt16>()});\n     }\n \n     send_external_tables = true;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02100_multiple_hosts_command_line_set.reference b/tests/queries/0_stateless/02100_multiple_hosts_command_line_set.reference\nindex da7b788b1575..40d20c082794 100644\n--- a/tests/queries/0_stateless/02100_multiple_hosts_command_line_set.reference\n+++ b/tests/queries/0_stateless/02100_multiple_hosts_command_line_set.reference\n@@ -1,14 +1,29 @@\n 1\n+=== Backward compatibility test\n 1\n+=== Cannot resolve host\n 1\n 1\n+=== Bad arguments\n 1\n 1\n+=== Not alive host\n 1\n 1\n 1\n 1\n 1\n+=== Code 210 with ipv6\n+1\n+1\n+1\n+1\n+1\n+1\n+=== Values form config\n+1\n+1\n+===\n 1\n 1\n 1\ndiff --git a/tests/queries/0_stateless/02100_multiple_hosts_command_line_set.sh b/tests/queries/0_stateless/02100_multiple_hosts_command_line_set.sh\nindex 0e7a9f172256..168b9be00c65 100755\n--- a/tests/queries/0_stateless/02100_multiple_hosts_command_line_set.sh\n+++ b/tests/queries/0_stateless/02100_multiple_hosts_command_line_set.sh\n@@ -7,55 +7,75 @@ CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n # default values test\n ${CLICKHOUSE_CLIENT} --query \"SELECT 1\"\n \n-# backward compatibility test\n+echo '=== Backward compatibility test'\n ${CLICKHOUSE_CLIENT} --host \"${CLICKHOUSE_HOST}\" --port \"${CLICKHOUSE_PORT_TCP}\" --query \"SELECT 1\";\n \n+echo '=== Cannot resolve host'\n not_resolvable_host=\"notlocalhost\"\n-exception_msg=\"Cannot resolve host (${not_resolvable_host}), error 0: ${not_resolvable_host}.\n-Code: 198. DB::Exception: Not found address of host: ${not_resolvable_host}. (DNS_ERROR)\n-\"\n-error=\"$(${CLICKHOUSE_CLIENT} --host \"${CLICKHOUSE_HOST}\" --host \"${not_resolvable_host}\"  --query \"SELECT 1\" 2>&1 > /dev/null)\";\n-[ \"${error}\" == \"${exception_msg}\" ]; echo \"$?\"\n+error=\"$(${CLICKHOUSE_CLIENT} --host \"${not_resolvable_host}\" --query \"SELECT 1\" 2>&1 > /dev/null)\";\n+echo \"${error}\" | grep -Fc \"DNS_ERROR\"\n+echo \"${error}\" | grep -Fq \"${not_resolvable_host}\" && echo 1 || echo 0\n \n+echo '=== Bad arguments'\n not_number_port=\"abc\"\n-exception_msg=\"Bad arguments: the argument ('${CLICKHOUSE_HOST}:${not_number_port}') for option '--host' is invalid.\"\n-error=\"$(${CLICKHOUSE_CLIENT} --host \"${CLICKHOUSE_HOST}\" --port \"${not_number_port}\"  --query \"SELECT 1\" 2>&1 > /dev/null)\";\n-[ \"${error}\" == \"${exception_msg}\" ]; echo \"$?\"\n+error=\"$(${CLICKHOUSE_CLIENT} --host \"${CLICKHOUSE_HOST}\" --port \"${not_number_port}\" --query \"SELECT 1\" 2>&1 > /dev/null)\";\n+echo \"${error}\" | grep -Fc \"Bad arguments\"\n+echo \"${error}\" | grep -Fc \"${not_number_port}\"\n+\n+echo '=== Not alive host'\n \n not_alive_host=\"10.100.0.0\"\n ${CLICKHOUSE_CLIENT} --host \"${not_alive_host}\" --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\";\n \n not_alive_port=\"1\"\n-exception_msg=\"Code: 210. DB::NetException: Connection refused (${CLICKHOUSE_HOST}:${not_alive_port}). (NETWORK_ERROR)\n-\"\n error=\"$(${CLICKHOUSE_CLIENT} --host \"${CLICKHOUSE_HOST}\" --port \"${not_alive_port}\" --query \"SELECT 1\" 2>&1 > /dev/null)\"\n-[ \"${error}\" == \"${exception_msg}\" ]; echo \"$?\"\n+echo \"${error}\" | grep -Fc \"Code: 210\"\n+echo \"${error}\" | grep -Fc \"${CLICKHOUSE_HOST}:${not_alive_port}\"\n+\n ${CLICKHOUSE_CLIENT} --host \"${CLICKHOUSE_HOST}\" --port \"${not_alive_port}\" --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\";\n ${CLICKHOUSE_CLIENT} --host \"${CLICKHOUSE_HOST}\" --port \"${CLICKHOUSE_PORT_TCP}\" --port \"${not_alive_port}\" --query \"SELECT 1\";\n \n+echo '=== Code 210 with ipv6'\n+\n ipv6_host_without_brackets=\"2001:3984:3989::1:1000\"\n-exception_msg=\"Code: 210. DB::NetException: Connection refused (${ipv6_host_without_brackets}). (NETWORK_ERROR)\n-\"\n error=\"$(${CLICKHOUSE_CLIENT} --host \"${ipv6_host_without_brackets}\" --query \"SELECT 1\" 2>&1 > /dev/null)\"\n-[ \"${error}\" == \"${exception_msg}\" ]; echo \"$?\"\n+echo \"${error}\" | grep -Fc \"Code: 210\"\n+echo \"${error}\" | grep -Fc \"${ipv6_host_without_brackets}\"\n \n ipv6_host_with_brackets=\"[2001:3984:3989::1:1000]\"\n-exception_msg=\"Code: 210. DB::NetException: Connection refused (${ipv6_host_with_brackets}). (NETWORK_ERROR)\n-\"\n+\n error=\"$(${CLICKHOUSE_CLIENT} --host \"${ipv6_host_with_brackets}\" --query \"SELECT 1\" 2>&1 > /dev/null)\"\n-[ \"${error}\" == \"${exception_msg}\" ]; echo \"$?\"\n+echo \"${error}\" | grep -Fc \"Code: 210\"\n+echo \"${error}\" | grep -Fc \"${ipv6_host_with_brackets}\"\n \n-exception_msg=\"Code: 210. DB::NetException: Connection refused (${ipv6_host_with_brackets}:${not_alive_port}). (NETWORK_ERROR)\n-\"\n error=\"$(${CLICKHOUSE_CLIENT} --host \"${ipv6_host_with_brackets}\" --port \"${not_alive_port}\" --query \"SELECT 1\" 2>&1 > /dev/null)\"\n-[ \"${error}\" == \"${exception_msg}\" ]; echo \"$?\"\n+echo \"${error}\" | grep -Fc \"Code: 210\"\n+echo \"${error}\" | grep -Fc \"${ipv6_host_with_brackets}:${not_alive_port}\"\n+\n+echo '=== Values form config'\n+\n+CUSTOM_CONFIG=\"$CURDIR/02100_config.xml\"\n+rm -f ${CUSTOM_CONFIG}\n+\n+cat << EOF > ${CUSTOM_CONFIG}\n+<config>\n+  <host>${not_alive_host}</host>\n+  <port>${not_alive_port}</port>\n+</config>\n+EOF\n+\n+error=\"$(${CLICKHOUSE_CLIENT} --config ${CUSTOM_CONFIG} --query \"SELECT 1\" 2>&1 > /dev/null)\"\n+echo \"${error}\" | grep -Fc \"DB::NetException\"\n+echo \"${error}\" | grep -Fc \"${not_alive_host}:${not_alive_port}\"\n+rm -f ${CUSTOM_CONFIG}\n \n+echo '==='\n \n-${CLICKHOUSE_CLIENT}  --query \"SELECT 1\";\n-${CLICKHOUSE_CLIENT}  --port \"${CLICKHOUSE_PORT_TCP}\"  --query \"SELECT 1\";\n-${CLICKHOUSE_CLIENT}  --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\";\n-${CLICKHOUSE_CLIENT}  --port \"${CLICKHOUSE_PORT_TCP}\" --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\";\n-${CLICKHOUSE_CLIENT}  --port \"${CLICKHOUSE_PORT_TCP}\" --host \"${CLICKHOUSE_HOST}\" --host \"{$not_alive_host}\" --port  \"${CLICKHOUSE_PORT_TCP}\" --query \"SELECT 1\";\n-${CLICKHOUSE_CLIENT}  --port \"${CLICKHOUSE_PORT_TCP}\" --host \"{$not_alive_host}\" --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\" 2> /dev/null;\n-${CLICKHOUSE_CLIENT}  --port \"${CLICKHOUSE_PORT_TCP}\"  --port \"${CLICKHOUSE_PORT_TCP}\" --port \"${CLICKHOUSE_PORT_TCP}\" --host \"{$not_alive_host}\" --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\";\n+${CLICKHOUSE_CLIENT} --query \"SELECT 1\";\n+${CLICKHOUSE_CLIENT} --port \"${CLICKHOUSE_PORT_TCP}\" --query \"SELECT 1\";\n+${CLICKHOUSE_CLIENT} --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\";\n+${CLICKHOUSE_CLIENT} --port \"${CLICKHOUSE_PORT_TCP}\" --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\";\n+${CLICKHOUSE_CLIENT} --port \"${CLICKHOUSE_PORT_TCP}\" --host \"${CLICKHOUSE_HOST}\" --host \"{$not_alive_host}\" --port \"${CLICKHOUSE_PORT_TCP}\" --query \"SELECT 1\";\n+${CLICKHOUSE_CLIENT} --port \"${CLICKHOUSE_PORT_TCP}\" --host \"{$not_alive_host}\" --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\" 2> /dev/null;\n+${CLICKHOUSE_CLIENT} --port \"${CLICKHOUSE_PORT_TCP}\"  --port \"${CLICKHOUSE_PORT_TCP}\" --port \"${CLICKHOUSE_PORT_TCP}\" --host \"{$not_alive_host}\" --host \"${CLICKHOUSE_HOST}\" --query \"SELECT 1\";\n \n",
  "problem_statement": "clickhouse-client ignores port parameter from config file, ClickHouse 22.2.2\n**Describe the issue**\r\nIn the latest version (22.2.2.1) clickhouse-client ignores `port` parameter from config file.\r\n \r\n**How to reproduce**\r\nCreate `config.xml` with arbitrary value for `port` parameter. \r\n```\r\n<config>\r\n    <port>9001</port>\r\n</config>\r\n```\r\n\r\nRun `clickhouse-client` with custom config file\r\n```\r\n# clickhouse-client --log-level trace -c config.xml\r\nProcessing configuration file 'config.xml'.\r\nClickHouse client version 22.2.2.1.\r\nConnecting to localhost:9000 as user default.\r\nConnecting. Database: (not specified). User: default. Uncompressed\r\nCode: 210. DB::NetException: Connection refused (localhost:9000). (NETWORK_ERROR)\r\n\r\nUninitializing subsystem: Logging Subsystem\r\n```\r\n\r\nThe output indicates that it's used default port value (9000) instead of the value from config file (9001). \r\n\nclickhouse-client doesn't load the host/port config from disk anymore\n**Describe what's wrong**\r\n\r\nSince the upgrade to `v22.2.2.1` the host/port configuration for the `clickhouse-client` is not loaded from disk anymore.\r\n\r\n**Does it reproduce on recent release?**\r\nReproduces on v22.2.2.1.\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use\r\nv22.2.2.1\r\n\r\n* Which interface to use, if matters\r\n`clickhouse-client`\r\n\r\n* Non-default settings, if any\r\n```\r\ncat /etc/clickhouse-client/conf.d/clickhouse-local.xml\r\n<config>\r\n  <host>12.34.56.78</host>\r\n  <port>9876</port>\r\n</config>\r\n```\r\n\r\n**Expected behavior**\r\nrunning `clickhouse-client` uses the `host` / `port` from the config file.\r\n\r\n**Error message and/or stacktrace**\r\n```\r\n$ clickhouse-client\r\nClickHouse client version 22.2.2.1.\r\nConnecting to localhost:9000 as user default.\r\nCode: 210. DB::NetException: Connection refused (localhost:9000). (NETWORK_ERROR)\r\n```\r\n\r\n**Additional context**\r\nAfter some investigation, the reason is this functionality was removed in the commit e780c1292d837b03365f4e210d3a270e66257c4f (why?)\n",
  "hints_text": "\nDuplicate of #34776",
  "created_at": "2022-02-21T12:09:09Z",
  "modified_files": [
    "programs/client/Client.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02100_multiple_hosts_command_line_set.reference",
    "tests/queries/0_stateless/02100_multiple_hosts_command_line_set.sh"
  ]
}