diff --git a/tests/queries/0_stateless/00961_temporary_live_view_watch.reference b/tests/queries/0_stateless/00961_temporary_live_view_watch.reference
deleted file mode 100644
index 6fbbedf1b21f..000000000000
--- a/tests/queries/0_stateless/00961_temporary_live_view_watch.reference
+++ /dev/null
@@ -1,3 +0,0 @@
-0	1
-6	2
-21	3
diff --git a/tests/queries/0_stateless/00961_temporary_live_view_watch.sql b/tests/queries/0_stateless/00961_temporary_live_view_watch.sql
deleted file mode 100644
index 8bf6fa5e07bb..000000000000
--- a/tests/queries/0_stateless/00961_temporary_live_view_watch.sql
+++ /dev/null
@@ -1,22 +0,0 @@
--- Tags: no-replicated-database, no-parallel, no-fasttest
-
-SET allow_experimental_live_view = 1;
-
-DROP TABLE IF EXISTS lv;
-DROP TABLE IF EXISTS mt;
-
-CREATE TABLE mt (a Int32) Engine=MergeTree order by tuple();
-CREATE LIVE VIEW lv WITH TIMEOUT AS SELECT sum(a) FROM mt;
-
-WATCH lv LIMIT 0;
-
-INSERT INTO mt VALUES (1),(2),(3);
-
-WATCH lv LIMIT 0;
-
-INSERT INTO mt VALUES (4),(5),(6);
-
-WATCH lv LIMIT 0;
-
-DROP TABLE lv;
-DROP TABLE mt;
diff --git a/tests/queries/0_stateless/00962_live_view_periodic_refresh_and_timeout.py b/tests/queries/0_stateless/00962_live_view_periodic_refresh_and_timeout.py
index 3bc649e92dce..983b330e24ae 100755
--- a/tests/queries/0_stateless/00962_live_view_periodic_refresh_and_timeout.py
+++ b/tests/queries/0_stateless/00962_live_view_periodic_refresh_and_timeout.py
@@ -29,7 +29,7 @@
     client1.send("DROP TABLE IF EXISTS test.lv")
     client1.expect(prompt)
     client1.send(
-        "CREATE LIVE VIEW test.lv WITH TIMEOUT 60 AND REFRESH 1"
+        "CREATE LIVE VIEW test.lv WITH REFRESH 1"
         " AS SELECT value FROM system.events WHERE event = 'OSCPUVirtualTimeMicroseconds'"
     )
     client1.expect(prompt)
@@ -43,16 +43,3 @@
     if match.groups()[1]:
         client1.send(client1.command)
         client1.expect(prompt)
-    # poll until live view table is dropped
-    start_time = time.time()
-    while True:
-        client1.send("SELECT * FROM test.lv FORMAT JSONEachRow")
-        client1.expect(prompt)
-        if "Table test.lv doesn't exist" in client1.before:
-            break
-        if time.time() - start_time > 90:
-            break
-    # check table is dropped
-    client1.send("DROP TABLE test.lv")
-    client1.expect("Table test.lv doesn't exist")
-    client1.expect(prompt)
diff --git a/tests/queries/0_stateless/00962_temporary_live_view_watch_live.py b/tests/queries/0_stateless/00962_temporary_live_view_watch_live.py
deleted file mode 100755
index 0358c28bf917..000000000000
--- a/tests/queries/0_stateless/00962_temporary_live_view_watch_live.py
+++ /dev/null
@@ -1,52 +0,0 @@
-#!/usr/bin/env python3
-# Tags: no-replicated-database, no-parallel, no-fasttest
-
-import os
-import sys
-import signal
-
-CURDIR = os.path.dirname(os.path.realpath(__file__))
-sys.path.insert(0, os.path.join(CURDIR, "helpers"))
-
-from client import client, prompt, end_of_block
-
-log = None
-# uncomment the line below for debugging
-# log=sys.stdout
-
-with client(name="client1>", log=log) as client1, client(
-    name="client2>", log=log
-) as client2:
-    client1.expect(prompt)
-    client2.expect(prompt)
-
-    client1.send("SET allow_experimental_live_view = 1")
-    client1.expect(prompt)
-    client2.send("SET allow_experimental_live_view = 1")
-    client2.expect(prompt)
-
-    client1.send("DROP TABLE IF EXISTS test.lv")
-    client1.expect(prompt)
-    client1.send("DROP TABLE IF EXISTS test.mt")
-    client1.expect(prompt)
-    client1.send("CREATE TABLE test.mt (a Int32) Engine=MergeTree order by tuple()")
-    client1.expect(prompt)
-    client1.send("CREATE LIVE VIEW test.lv WITH TIMEOUT AS SELECT sum(a) FROM test.mt")
-    client1.expect(prompt)
-    client1.send("WATCH test.lv")
-    client1.expect("_version")
-    client1.expect(r"0.*1" + end_of_block)
-    client2.send("INSERT INTO test.mt VALUES (1),(2),(3)")
-    client1.expect(r"6.*2" + end_of_block)
-    client2.send("INSERT INTO test.mt VALUES (4),(5),(6)")
-    client1.expect(r"21.*3" + end_of_block)
-    # send Ctrl-C
-    client1.send("\x03", eol="")
-    match = client1.expect("(%s)|([#\$] )" % prompt)
-    if match.groups()[1]:
-        client1.send(client1.command)
-        client1.expect(prompt)
-    client1.send("DROP TABLE test.lv")
-    client1.expect(prompt)
-    client1.send("DROP TABLE test.mt")
-    client1.expect(prompt)
diff --git a/tests/queries/0_stateless/00962_temporary_live_view_watch_live.reference b/tests/queries/0_stateless/00962_temporary_live_view_watch_live.reference
deleted file mode 100644
index e69de29bb2d1..000000000000
diff --git a/tests/queries/0_stateless/00963_temporary_live_view_watch_live_timeout.reference b/tests/queries/0_stateless/00963_temporary_live_view_watch_live_timeout.reference
deleted file mode 100644
index e69de29bb2d1..000000000000
diff --git a/tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py b/tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py
index bafb283e487e..c8902203a3d7 100755
--- a/tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py
+++ b/tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py
@@ -33,7 +33,7 @@
     client1.expect(prompt)
     client1.send("CREATE TABLE test.mt (a Int32) Engine=MergeTree order by tuple()")
     client1.expect(prompt)
-    client1.send("CREATE LIVE VIEW test.lv WITH TIMEOUT AS SELECT sum(a) FROM test.mt")
+    client1.send("CREATE LIVE VIEW test.lv AS SELECT sum(a) FROM test.mt")
     client1.expect(prompt)
     client1.send("WATCH test.lv EVENTS FORMAT CSV")
     client1.expect("Progress: 1.00 rows.*\)")
diff --git a/tests/queries/0_stateless/00965_live_view_watch_heartbeat.py b/tests/queries/0_stateless/00965_live_view_watch_heartbeat.py
index 3cb1220bb49b..b499f673cc0e 100755
--- a/tests/queries/0_stateless/00965_live_view_watch_heartbeat.py
+++ b/tests/queries/0_stateless/00965_live_view_watch_heartbeat.py
@@ -33,7 +33,7 @@
     client1.expect(prompt)
     client1.send("CREATE TABLE test.mt (a Int32) Engine=MergeTree order by tuple()")
     client1.expect(prompt)
-    client1.send("CREATE LIVE VIEW test.lv WITH TIMEOUT AS SELECT sum(a) FROM test.mt")
+    client1.send("CREATE LIVE VIEW test.lv AS SELECT sum(a) FROM test.mt")
     client1.expect(prompt)
     client1.send("WATCH test.lv")
     client1.expect("_version")
diff --git a/tests/queries/0_stateless/00980_create_temporary_live_view.reference b/tests/queries/0_stateless/00980_create_temporary_live_view.reference
deleted file mode 100644
index 49d86fc2fbf3..000000000000
--- a/tests/queries/0_stateless/00980_create_temporary_live_view.reference
+++ /dev/null
@@ -1,4 +0,0 @@
-temporary_live_view_timeout	5
-live_view_heartbeat_interval	15
-lv
-0
diff --git a/tests/queries/0_stateless/00980_create_temporary_live_view.sql b/tests/queries/0_stateless/00980_create_temporary_live_view.sql
deleted file mode 100644
index e01a6d9643ee..000000000000
--- a/tests/queries/0_stateless/00980_create_temporary_live_view.sql
+++ /dev/null
@@ -1,18 +0,0 @@
--- Tags: no-replicated-database, no-parallel, no-fasttest
-
-SET allow_experimental_live_view = 1;
-
-DROP TABLE IF EXISTS lv;
-DROP TABLE IF EXISTS mt;
-
-SELECT name, value from system.settings WHERE name = 'temporary_live_view_timeout';
-SELECT name, value from system.settings WHERE name = 'live_view_heartbeat_interval';
-
-CREATE TABLE mt (a Int32) Engine=MergeTree order by tuple();
-CREATE LIVE VIEW lv WITH TIMEOUT 1 AS SELECT sum(a) FROM mt;
-
-SHOW TABLES WHERE database=currentDatabase() and name LIKE 'lv';
-SELECT sleep(2);
-SHOW TABLES WHERE database=currentDatabase() and name LIKE 'lv';
-
-DROP TABLE mt;
diff --git a/tests/queries/0_stateless/00991_temporary_live_view_watch_events_heartbeat.python b/tests/queries/0_stateless/00991_temporary_live_view_watch_events_heartbeat.python
deleted file mode 100644
index 8ddb1a1ea81a..000000000000
--- a/tests/queries/0_stateless/00991_temporary_live_view_watch_events_heartbeat.python
+++ /dev/null
@@ -1,83 +0,0 @@
-#!/usr/bin/env python3
-
-import subprocess
-import threading
-import queue as queue
-import os
-import sys
-import signal
-
-
-CLICKHOUSE_CLIENT = os.environ.get('CLICKHOUSE_CLIENT')
-CLICKHOUSE_CURL = os.environ.get('CLICKHOUSE_CURL')
-CLICKHOUSE_URL = os.environ.get('CLICKHOUSE_URL')
-
-
-def send_query(query):
-    cmd = list(CLICKHOUSE_CLIENT.split())
-    cmd += ['--query', query]
-    # print(cmd)
-    return subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).stdout
-
-
-def send_query_in_process_group(query):
-    cmd = list(CLICKHOUSE_CLIENT.split())
-    cmd += ['--query', query, '--live_view_heartbeat_interval=1', '--progress']
-    # print(cmd)
-    return subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, preexec_fn=os.setsid)
-
-
-def read_lines_and_push_to_queue(pipe, queue):
-    try:
-        for line in iter(pipe.readline, ''):
-            line = line.strip()
-            # print(line)
-            sys.stdout.flush()
-            queue.put(line)
-    except KeyboardInterrupt:
-        pass
-
-    queue.put(None)
-
-
-def test():
-    send_query('DROP TABLE IF EXISTS test.lv').read()
-    send_query('DROP TABLE IF EXISTS test.mt').read()
-    send_query('CREATE TABLE test.mt (a Int32) Engine=MergeTree order by tuple()').read()
-    send_query('CREATE LIVE VIEW test.lv WITH TIMEOUT AS SELECT sum(a) FROM test.mt').read()
-
-    q = queue.Queue()
-    p = send_query_in_process_group('WATCH test.lv')
-    thread = threading.Thread(target=read_lines_and_push_to_queue, args=(p.stdout, q))
-    thread.start()
-
-    line = q.get()
-    # print(line)
-    assert (line.endswith('0\t1'))
-    assert ('Progress: 0.00 rows' in line)
-
-    send_query('INSERT INTO test.mt VALUES (1),(2),(3)').read()
-    line = q.get()
-    assert (line.endswith('6\t2'))
-    assert ('Progress: 1.00 rows' in line)
-
-    # send_query('INSERT INTO test.mt VALUES (4),(5),(6)').read()
-    # line = q.get()
-    # print(line)
-    # assert (line.endswith('6\t2'))
-    # assert ('Progress: 1.00 rows' in line)
-
-    # Send Ctrl+C to client.
-    os.killpg(os.getpgid(p.pid), signal.SIGINT)
-    # This insert shouldn't affect lv.
-    send_query('INSERT INTO test.mt VALUES (7),(8),(9)').read()
-    line = q.get()
-    # print(line)
-    # assert (line is None)
-
-    send_query('DROP TABLE if exists test.lv').read()
-    send_query('DROP TABLE if exists test.lv').read()
-
-    thread.join()
-
-test()
diff --git a/tests/queries/0_stateless/00991_temporary_live_view_watch_events_heartbeat.reference b/tests/queries/0_stateless/00991_temporary_live_view_watch_events_heartbeat.reference
deleted file mode 100644
index e69de29bb2d1..000000000000
diff --git a/tests/queries/0_stateless/00991_temporary_live_view_watch_live.python b/tests/queries/0_stateless/00991_temporary_live_view_watch_live.python
deleted file mode 100644
index a417cdf29376..000000000000
--- a/tests/queries/0_stateless/00991_temporary_live_view_watch_live.python
+++ /dev/null
@@ -1,81 +0,0 @@
-#!/usr/bin/env python3
-
-import subprocess
-import threading
-import queue as queue
-import os
-import sys
-import signal
-
-
-CLICKHOUSE_CLIENT = os.environ.get('CLICKHOUSE_CLIENT')
-CLICKHOUSE_CURL = os.environ.get('CLICKHOUSE_CURL')
-CLICKHOUSE_URL = os.environ.get('CLICKHOUSE_URL')
-
-
-def send_query(query):
-    cmd = list(CLICKHOUSE_CLIENT.split())
-    cmd += ['--query', query]
-    # print(cmd)
-    return subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).stdout
-
-
-def send_query_in_process_group(query):
-    cmd = list(CLICKHOUSE_CLIENT.split())
-    cmd += ['--query', query]
-    # print(cmd)
-    return subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, preexec_fn=os.setsid)
-
-
-def read_lines_and_push_to_queue(pipe, queue):
-    try:
-        for line in iter(pipe.readline, ''):
-            line = line.strip()
-            print(line)
-            sys.stdout.flush()
-            queue.put(line)
-    except KeyboardInterrupt:
-        pass
-
-    queue.put(None)
-
-
-def test():
-    send_query('DROP TABLE IF EXISTS test.lv').read()
-    send_query('DROP TABLE IF EXISTS test.mt').read()
-    send_query('CREATE TABLE test.mt (a Int32) Engine=MergeTree order by tuple()').read()
-    send_query('CREATE LIVE VIEW test.lv WITH TIMEOUT AS SELECT sum(a) FROM test.mt').read()
-
-    q = queue.Queue()
-    p = send_query_in_process_group('WATCH test.lv')
-    thread = threading.Thread(target=read_lines_and_push_to_queue, args=(p.stdout, q))
-    thread.start()
-
-    line = q.get()
-    print(line)
-    assert (line == '0\t1')
-
-    send_query('INSERT INTO test.mt VALUES (1),(2),(3)').read()
-    line = q.get()
-    print(line)
-    assert (line == '6\t2')
-
-    send_query('INSERT INTO test.mt VALUES (4),(5),(6)').read()
-    line = q.get()
-    print(line)
-    assert (line == '21\t3')
-
-    # Send Ctrl+C to client.
-    os.killpg(os.getpgid(p.pid), signal.SIGINT)
-    # This insert shouldn't affect lv.
-    send_query('INSERT INTO test.mt VALUES (7),(8),(9)').read()
-    line = q.get()
-    print(line)
-    assert (line is None)
-
-    send_query('DROP TABLE if exists test.lv').read()
-    send_query('DROP TABLE if exists test.lv').read()
-
-    thread.join()
-
-test()
diff --git a/tests/queries/0_stateless/00991_temporary_live_view_watch_live.reference b/tests/queries/0_stateless/00991_temporary_live_view_watch_live.reference
deleted file mode 100644
index 1e94cdade415..000000000000
--- a/tests/queries/0_stateless/00991_temporary_live_view_watch_live.reference
+++ /dev/null
@@ -1,7 +0,0 @@
-0	1
-0	1
-6	2
-6	2
-21	3
-21	3
-None
