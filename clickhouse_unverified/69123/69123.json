{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 69123,
  "instance_id": "ClickHouse__ClickHouse-69123",
  "issue_numbers": [
    "68526"
  ],
  "base_commit": "e7f403a27ee027cb117cca24167cb6d3629bba5e",
  "patch": "diff --git a/src/Client/ClientBase.cpp b/src/Client/ClientBase.cpp\nindex 01d03006eec3..e34e263beb5e 100644\n--- a/src/Client/ClientBase.cpp\n+++ b/src/Client/ClientBase.cpp\n@@ -34,6 +34,7 @@\n #include <Parsers/Access/ASTCreateUserQuery.h>\n #include <Parsers/Access/ASTAuthenticationData.h>\n #include <Parsers/ASTDropQuery.h>\n+#include <Parsers/ASTExplainQuery.h>\n #include <Parsers/ASTSelectQuery.h>\n #include <Parsers/ASTSetQuery.h>\n #include <Parsers/ASTUseQuery.h>\n@@ -2111,6 +2112,15 @@ MultiQueryProcessingStage ClientBase::analyzeMultiQueryText(\n     // - Other formats (e.g. FORMAT CSV) are arbitrarily more complex and tricky to parse. For example, we may be unable to distinguish if the semicolon\n     //   is part of the data or ends the statement. In this case, we simply assume that the end of the INSERT statement is determined by \\n\\n (two newlines).\n     auto * insert_ast = parsed_query->as<ASTInsertQuery>();\n+    // We also consider the INSERT query in EXPLAIN queries (same as normal INSERT queries)\n+    if (!insert_ast)\n+    {\n+        auto * explain_ast = parsed_query->as<ASTExplainQuery>();\n+        if (explain_ast && explain_ast->getExplainedQuery())\n+        {\n+            insert_ast = explain_ast->getExplainedQuery()->as<ASTInsertQuery>();\n+        }\n+    }\n     const char * query_to_execute_end = this_query_end;\n     if (insert_ast && insert_ast->data)\n     {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02504_explain_ast_insert.sql b/tests/queries/0_stateless/02504_explain_ast_insert.sql\nindex fc50feebaa46..3b8a64e6ea21 100644\n--- a/tests/queries/0_stateless/02504_explain_ast_insert.sql\n+++ b/tests/queries/0_stateless/02504_explain_ast_insert.sql\n@@ -1,2 +1,2 @@\n-explain ast insert into test values balabala;\n+explain ast insert into test values (balabala);\n explain ast insert into test format TabSeparated balabala;\n\\ No newline at end of file\ndiff --git a/tests/queries/0_stateless/03156_default_multiquery_split.reference b/tests/queries/0_stateless/03156_default_multiquery_split.reference\nindex 0f3a1baff45e..02a3a522ecd1 100644\n--- a/tests/queries/0_stateless/03156_default_multiquery_split.reference\n+++ b/tests/queries/0_stateless/03156_default_multiquery_split.reference\n@@ -8,3 +8,7 @@ Syntax error\n 7\n 8\n 9\n+InsertQuery   (children 1)\n+ Identifier TEST2\n+InsertQuery   (children 1)\n+ Identifier TEST1\ndiff --git a/tests/queries/0_stateless/03156_default_multiquery_split.sh b/tests/queries/0_stateless/03156_default_multiquery_split.sh\nindex d849fb5a1625..08ee9bcad63b 100755\n--- a/tests/queries/0_stateless/03156_default_multiquery_split.sh\n+++ b/tests/queries/0_stateless/03156_default_multiquery_split.sh\n@@ -51,6 +51,13 @@ INSERT INTO TEST2 VALUES\n SELECT * FROM TEST1 ORDER BY value;\n SELECT * FROM TEST2 ORDER BY value;\n DROP TABLE TEST1; DROP TABLE TEST2;\n+\n+EXPLAIN AST INSERT INTO TEST2 FORMAT CSV\n+1\n+2\n+\n+EXPLAIN AST INSERT INTO TEST1 VALUES (101),(102);\n+\n EOF\n \n $CLICKHOUSE_CLIENT -m < \"$SQL_FILE_NAME\"\n",
  "problem_statement": "Explain AST on INSERT parser error\n**Company or project name**\r\n\r\nClickhouse employee :smile: \r\n\r\n**Describe what's wrong**\r\n\r\nDoing EXPLAIN AST on an INSERT INTO query gives a parser error when it shouldn't.\r\n\r\n**Does it reproduce on the most recent release?**\r\n\r\nYes\r\n\r\n**How to reproduce**\r\n\r\nUsing a debug build in the latest sources, run:\r\n\r\n```sql\r\nCREATE TABLE test (c0 Int,c1 Int,c2 Int) ENGINE = Memory; \r\nEXPLAIN AST INSERT INTO test(c0, c1, c2) VALUES (1, 1, 1);  --Syntax error: failed at position 8 (')'):\r\n```\r\n\r\n**Expected behavior**\r\n\r\nThe EXPLAIN should be successful.\r\n\n",
  "hints_text": "it is actually a client error\r\n\r\n```\r\n(gdb) bt\r\n#0  __cxa_throw (thrown_object=0x516000016300, tinfo=0x55558f681180 <typeinfo for DB::Exception>, dest=0x55555ff9cc40 <DB::Exception::~Exception()>) at ./build_docker/./contrib/llvm-project/libcxxabi/src/cxa_exception.cpp:258\r\n#1  0x0000555583f257b1 in DB::parseQueryAndMovePosition (parser=..., pos=@0x7ffff63e1a90: 0x5060000603b2 \", 1, 1);\", end=0x5060000603ba \"\", query_description=..., allow_multi_statements=true, max_query_size=0, max_parser_depth=<optimized out>, max_parser_backtracks=<optimized out>)\r\n    at ./build_docker/./src/Parsers/parseQuery.cpp:407\r\n#2  0x0000555582478049 in DB::ClientBase::parseQuery (this=<optimized out>, pos=<optimized out>, end=<optimized out>, settings=..., allow_multi_statements=true) at ./build_docker/./src/Client/ClientBase.cpp:325\r\n#3  0x000055558249b479 in DB::ClientBase::analyzeMultiQueryText (this=0x7ffff6708020, this_query_begin=<optimized out>, this_query_end=<optimized out>, all_queries_end=<optimized out>, query_to_execute=..., parsed_query=..., all_queries_text=..., current_exception=...)\r\n    at ./build_docker/./src/Client/ClientBase.cpp:2065\r\n#4  0x000055558249c9f1 in DB::ClientBase::executeMultiQuery (this=0x7ffff6708020, all_queries_text=...) at ./build_docker/./src/Client/ClientBase.cpp:2186\r\n#5  0x000055558249ebff in DB::ClientBase::processQueryText (this=<optimized out>, text=...) at ./build_docker/./src/Client/ClientBase.cpp:2406\r\n#6  0x00005555824a4e6b in DB::ClientBase::runNonInteractive (this=0x7ffff6708020) at ./build_docker/./src/Client/ClientBase.cpp:2717\r\n#7  0x00005555706f3107 in DB::Client::main (this=<optimized out>) at ./build_docker/./programs/client/Client.cpp:393\r\n#8  0x0000555589acbcf7 in Poco::Util::Application::run (this=0x7ffff670bfe0) at ./build_docker/./base/poco/Util/src/Application.cpp:315\r\n#9  0x0000555570710d22 in mainEntryClickHouseClient (argc=<optimized out>, argv=<optimized out>) at ./build_docker/./programs/client/Client.cpp:1385\r\n#10 0x000055555ff8b909 in main (argc_=<optimized out>, argv_=<optimized out>) at ./build_docker/./programs/main.cpp:248\r\n```\nSeems related to the `--multiquery` option that became default in 24.8.\r\n\r\n```\r\n/tmp $ /mnt/ch/official_binaries/clickhouse-common-static-24.7.2.13/usr/bin/clickhouse client\r\nClickHouse client version 24.7.2.13 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 24.9.1.\r\n\r\nClickHouse client version is older than ClickHouse server. It may lack support for new features.\r\n\r\nWarnings:\r\n * Effective user of the process (raul) does not match the owner of the data (root).\r\n * Linux transparent hugepages are set to \"always\". Check /sys/kernel/mm/transparent_hugepage/enabled\r\n * Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.\r\n\r\nMordor :) EXPLAIN AST INSERT INTO test(c0, c1, c2) VALUES (1, 1, 1);\r\n\r\nEXPLAIN AST\r\nINSERT INTO test (c0, c1, c2) FORMAT Values\r\n\r\nQuery id: 6efc24a0-988f-43c7-9083-f09f87b503b7\r\n\r\n   \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n1. \u2502 InsertQuery   (children 2)   \u2502\r\n2. \u2502  Identifier test             \u2502\r\n3. \u2502  ExpressionList (children 3) \u2502\r\n4. \u2502   Identifier c0              \u2502\r\n5. \u2502   Identifier c1              \u2502\r\n6. \u2502   Identifier c2              \u2502\r\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n6 rows in set. Elapsed: 0.001 sec. \r\n\r\nMordor :) Bye.\r\n/tmp $ /mnt/ch/official_binaries/clickhouse-common-static-24.7.2.13/usr/bin/clickhouse client -n\r\nClickHouse client version 24.7.2.13 (official build).\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 24.9.1.\r\n\r\nClickHouse client version is older than ClickHouse server. It may lack support for new features.\r\n\r\nWarnings:\r\n * Effective user of the process (raul) does not match the owner of the data (root).\r\n * Linux transparent hugepages are set to \"always\". Check /sys/kernel/mm/transparent_hugepage/enabled\r\n * Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.\r\n\r\nMordor :) EXPLAIN AST INSERT INTO test(c0, c1, c2) VALUES (1, 1, 1);\r\n\r\nEXPLAIN AST\r\nINSERT INTO test (c0, c1, c2) FORMAT Values\r\n\r\nQuery id: 2f5030a3-c8d5-4e79-a1eb-11406fcb617f\r\n\r\n   \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n1. \u2502 InsertQuery   (children 2)   \u2502\r\n2. \u2502  Identifier test             \u2502\r\n3. \u2502  ExpressionList (children 3) \u2502\r\n4. \u2502   Identifier c0              \u2502\r\n5. \u2502   Identifier c1              \u2502\r\n6. \u2502   Identifier c2              \u2502\r\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n6 rows in set. Elapsed: 0.001 sec. \r\n\r\n\r\nSyntax error: failed at position 8 (')'):\r\n\r\n1, 1, 1);\r\n\r\nUnmatched parentheses: )\r\n\r\nMordor :) \r\n```\r\n\r\ncc @wxybear @rschu1ze \nI will check it later :)\nThe old analyzeMultiQueryText implementation did not handle some issues correctly, so this problem was exposed when multiquery was used by default.. I will try to fix it.",
  "created_at": "2024-08-31T10:48:22Z"
}