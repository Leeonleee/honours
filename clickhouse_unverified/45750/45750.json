{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 45750,
  "instance_id": "ClickHouse__ClickHouse-45750",
  "issue_numbers": [
    "45669"
  ],
  "base_commit": "8d05b1ec4a1572f1c05329d64a13515d34342d01",
  "patch": "diff --git a/src/Processors/Formats/Impl/ArrowColumnToCHColumn.cpp b/src/Processors/Formats/Impl/ArrowColumnToCHColumn.cpp\nindex 8b9e309aa1fa..68c405270979 100644\n--- a/src/Processors/Formats/Impl/ArrowColumnToCHColumn.cpp\n+++ b/src/Processors/Formats/Impl/ArrowColumnToCHColumn.cpp\n@@ -44,6 +44,7 @@\n         M(arrow::Type::INT32, DB::Int32) \\\n         M(arrow::Type::UINT64, DB::UInt64) \\\n         M(arrow::Type::INT64, DB::Int64) \\\n+        M(arrow::Type::DURATION, DB::Int64) \\\n         M(arrow::Type::HALF_FLOAT, DB::Float32) \\\n         M(arrow::Type::FLOAT, DB::Float32) \\\n         M(arrow::Type::DOUBLE, DB::Float64)\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02541_arrow_duration_type.reference b/tests/queries/0_stateless/02541_arrow_duration_type.reference\nnew file mode 100644\nindex 000000000000..acd96eda1e77\n--- /dev/null\n+++ b/tests/queries/0_stateless/02541_arrow_duration_type.reference\n@@ -0,0 +1,2 @@\n+duration\tNullable(Int64)\t\t\t\t\t\n+10000\ndiff --git a/tests/queries/0_stateless/02541_arrow_duration_type.sh b/tests/queries/0_stateless/02541_arrow_duration_type.sh\nnew file mode 100755\nindex 000000000000..93f4f66bbf0a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02541_arrow_duration_type.sh\n@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+# Tags: no-parallel, no-fasttest\n+\n+set -e\n+\n+CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CUR_DIR\"/../shell_config.sh\n+\n+DATA_DIR=$CUR_DIR/data_arrow\n+\n+$CLICKHOUSE_LOCAL -q \"desc file('$DATA_DIR/duration.arrow')\"\n+$CLICKHOUSE_LOCAL -q \"select count() from file('$DATA_DIR/duration.arrow')\"\ndiff --git a/tests/queries/0_stateless/data_arrow/duration.arrow b/tests/queries/0_stateless/data_arrow/duration.arrow\nnew file mode 100644\nindex 000000000000..abbdae772eda\nBinary files /dev/null and b/tests/queries/0_stateless/data_arrow/duration.arrow differ\n",
  "problem_statement": "Add support for Arrow's duration type\nThere's no support for Arrow's duration type at the moment. It will be a nice feature to add it since internally it uses C `int64_t` type. \r\n\r\nGenerate some arrow sample file from python:\r\n\r\n```\r\nimport pandas as pd\r\nimport pyarrow as pa\r\n\r\nBATCH_SIZE = 100\r\n\r\nNUM_BATCHES = 100\r\n\r\nschema = pa.schema([pa.field('duration', pa.duration(\"ns\"))])\r\n\r\nwith pa.OSFile('bigfile.arrow', 'wb') as sink:\r\n   with pa.ipc.new_file(sink, schema) as writer:\r\n      for row in range(NUM_BATCHES):\r\n            batch = pa.record_batch([pa.array(range(BATCH_SIZE), type=pa.duration(\"ns\"))], schema)\r\n            writer.write(batch)\r\n```\r\n\r\nCreate sample Clickhouse table:\r\n\r\n```\r\nCREATE TABLE arrow_test\r\n(\r\n    `duration` UInt64\r\n)\r\nENGINE = MergeTree\r\nORDER BY tuple();\r\n```\r\n\r\nTry to consume the arrow file:\r\n\r\n```\r\n clickhouse-client --query=\"insert into arrow_test  from infile '/home/mbak/bigfile.arrow' format Arrow\"\r\n\r\nCode: 50. DB::Exception: Unsupported Arrow type 'duration' of an input column 'duration'. If it happens during schema inference and you want to skip columns with unsupported types, you can enable setting input_format_arrow_skip_columns_with_unsupported_types_in_schema_inference: While executing ArrowBlockInputFormat: While executing File: data for INSERT was parsed from file: (in query: insert into arrow_test  from infile '/home/mbak/bigfile.arrow' format Arrow). (UNKNOWN_TYPE)\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2023-01-29T10:56:49Z",
  "modified_files": [
    "src/Processors/Formats/Impl/ArrowColumnToCHColumn.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02541_arrow_duration_type.reference",
    "b/tests/queries/0_stateless/02541_arrow_duration_type.sh"
  ]
}