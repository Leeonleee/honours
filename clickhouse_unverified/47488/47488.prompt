You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
clickhouse crash when using parametrized syntax within CREATE TABLE
**Describe what's wrong**

Following use-case is definitely not supported, but problem is that single user shut down whole server.

```sql
SET param_o = 'a';
CREATE TABLE test.xxx (a Int64) ENGINE=MergeTree ORDER BY ({o:String});
```

> A clear and concise description of what works not as it is supposed to.

Clickhouse crash with following:

```
Query id: 30c06d2d-9026-48cc-98e2-5083389791da

[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245166 [ 2664001 ] <Fatal> BaseDaemon: ########################################
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245469 [ 2664001 ] <Fatal> BaseDaemon: (version 23.1.3.5 (official build), build id: B9F28B1E976685BCAD291257215FC33DE8767678) (from thread 2662520) (query_id: 30c06d2d-9026-48cc-98e2-5083389791da) (query: ) Received signal Aborted (6)
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245516 [ 2664001 ] <Fatal> BaseDaemon: 
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245561 [ 2664001 ] <Fatal> BaseDaemon: Stack trace: 0x7f9fd22b300b 0x7f9fd2292859 0x1a354444 0x1a3725ad 0x11e95caa 0x14ccca9a 0x14cd0ec7 0x14cf4265 0x14d89b7f 0x13809640 0x13808f2d 0x14676f79 0x1468b8d9 0x1753e2f4 0x1753fc9b 0x176cf0a7 0x176ccadd 0x7f9fd246a609 0x7f9fd238f133
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245654 [ 2664001 ] <Fatal> BaseDaemon: 2. raise in ?
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245695 [ 2664001 ] <Fatal> BaseDaemon: 3. abort in ?
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245758 [ 2664001 ] <Fatal> BaseDaemon: 4. ? in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245802 [ 2664001 ] <Fatal> BaseDaemon: 5. ? in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245835 [ 2664001 ] <Fatal> BaseDaemon: 6. ? in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245899 [ 2664001 ] <Fatal> BaseDaemon: 7. DB::ASTStorage::formatImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.245985 [ 2664001 ] <Fatal> BaseDaemon: 8. DB::ASTCreateQuery::formatQueryImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246037 [ 2664001 ] <Fatal> BaseDaemon: 9. DB::ASTQueryWithOutput::formatImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246097 [ 2664001 ] <Fatal> BaseDaemon: 10. DB::serializeAST(DB::IAST const&, bool) in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246145 [ 2664001 ] <Fatal> BaseDaemon: 11. ? in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246205 [ 2664001 ] <Fatal> BaseDaemon: 12. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246316 [ 2664001 ] <Fatal> BaseDaemon: 13. DB::TCPHandler::runImpl() in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246355 [ 2664001 ] <Fatal> BaseDaemon: 14. DB::TCPHandler::run() in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246395 [ 2664001 ] <Fatal> BaseDaemon: 15. Poco::Net::TCPServerConnection::start() in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246438 [ 2664001 ] <Fatal> BaseDaemon: 16. Poco::Net::TCPServerDispatcher::run() in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246486 [ 2664001 ] <Fatal> BaseDaemon: 17. Poco::PooledThread::run() in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246534 [ 2664001 ] <Fatal> BaseDaemon: 18. Poco::ThreadImpl::runnableEntry(void*) in /usr/bin/clickhouse
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246562 [ 2664001 ] <Fatal> BaseDaemon: 19. ? in ?
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.246596 [ 2664001 ] <Fatal> BaseDaemon: 20. __clone in ?
[clickhouse.sre-dataops.oa1.os.scif.cz] 2023.02.17 10:54:35.508734 [ 2664001 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 2FDCD92A466BC738A5B7760B94AC828F)
```


**Does it reproduce on recent release?**

Yes, version 23.1.3.5 (official build), build id: B9F28B1E976685BCAD291257215FC33DE8767678)

**Enable crash reporting**

> If possible, change "enabled" to true in "send_crash_reports" section in `config.xml`:

```
<send_crash_reports>
        <!-- Changing <enabled> to true allows sending crash reports to -->
        <!-- the ClickHouse core developers team via Sentry https://sentry.io -->
        <enabled>false</enabled>
```

**How to reproduce**

* Which ClickHouse server version to use
* Which interface to use, if matters
* Non-default settings, if any
* `CREATE TABLE` statements for all tables involved
* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary
* Queries to run that lead to unexpected result

**Expected behavior**

> A clear and concise description of what you expected to happen.

Server do not crash (and return error(?)).

**Error message and/or stacktrace**

```
2023.02.17 10:54:35.245166 [ 2664001 ] {} <Fatal> BaseDaemon: ########################################
2023.02.17 10:54:35.245469 [ 2664001 ] {} <Fatal> BaseDaemon: (version 23.1.3.5 (official build), build id: B9F28B1E976685BCAD291257215FC33DE8767678) (from thread 2662520) (query_id: 30c06d2d-9026-48cc-98e2-5083389791da) (query: ) Received signal Aborted (6)
2023.02.17 10:54:35.245516 [ 2664001 ] {} <Fatal> BaseDaemon: 
2023.02.17 10:54:35.245561 [ 2664001 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f9fd22b300b 0x7f9fd2292859 0x1a354444 0x1a3725ad 0x11e95caa 0x14ccca9a 0x14cd0ec7 0x14cf4265 0x14d89b7f 0x13809640 0x13808f2d 0x14676f79 0x1468b8d9 0x1753e2f4 0x1753fc9b 0x176cf0a7 0x176ccadd 0x7f9fd246a609 0x7f9fd238f133
2023.02.17 10:54:35.245654 [ 2664001 ] {} <Fatal> BaseDaemon: 2. raise in ?
2023.02.17 10:54:35.245695 [ 2664001 ] {} <Fatal> BaseDaemon: 3. abort in ?
2023.02.17 10:54:35.245758 [ 2664001 ] {} <Fatal> BaseDaemon: 4. ? in /usr/bin/clickhouse
2023.02.17 10:54:35.245802 [ 2664001 ] {} <Fatal> BaseDaemon: 5. ? in /usr/bin/clickhouse
2023.02.17 10:54:35.245835 [ 2664001 ] {} <Fatal> BaseDaemon: 6. ? in /usr/bin/clickhouse
2023.02.17 10:54:35.245899 [ 2664001 ] {} <Fatal> BaseDaemon: 7. DB::ASTStorage::formatImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const in /usr/bin/clickhouse
2023.02.17 10:54:35.245985 [ 2664001 ] {} <Fatal> BaseDaemon: 8. DB::ASTCreateQuery::formatQueryImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const in /usr/bin/clickhouse
2023.02.17 10:54:35.246037 [ 2664001 ] {} <Fatal> BaseDaemon: 9. DB::ASTQueryWithOutput::formatImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const in /usr/bin/clickhouse
2023.02.17 10:54:35.246097 [ 2664001 ] {} <Fatal> BaseDaemon: 10. DB::serializeAST(DB::IAST const&, bool) in /usr/bin/clickhouse
2023.02.17 10:54:35.246145 [ 2664001 ] {} <Fatal> BaseDaemon: 11. ? in /usr/bin/clickhouse
2023.02.17 10:54:35.246205 [ 2664001 ] {} <Fatal> BaseDaemon: 12. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) in /usr/bin/clickhouse
2023.02.17 10:54:35.246316 [ 2664001 ] {} <Fatal> BaseDaemon: 13. DB::TCPHandler::runImpl() in /usr/bin/clickhouse
2023.02.17 10:54:35.246355 [ 2664001 ] {} <Fatal> BaseDaemon: 14. DB::TCPHandler::run() in /usr/bin/clickhouse
2023.02.17 10:54:35.246395 [ 2664001 ] {} <Fatal> BaseDaemon: 15. Poco::Net::TCPServerConnection::start() in /usr/bin/clickhouse
2023.02.17 10:54:35.246438 [ 2664001 ] {} <Fatal> BaseDaemon: 16. Poco::Net::TCPServerDispatcher::run() in /usr/bin/clickhouse
2023.02.17 10:54:35.246486 [ 2664001 ] {} <Fatal> BaseDaemon: 17. Poco::PooledThread::run() in /usr/bin/clickhouse
2023.02.17 10:54:35.246534 [ 2664001 ] {} <Fatal> BaseDaemon: 18. Poco::ThreadImpl::runnableEntry(void*) in /usr/bin/clickhouse
2023.02.17 10:54:35.246562 [ 2664001 ] {} <Fatal> BaseDaemon: 19. ? in ?
2023.02.17 10:54:35.246596 [ 2664001 ] {} <Fatal> BaseDaemon: 20. __clone in ?
2023.02.17 10:54:35.508734 [ 2664001 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 2FDCD92A466BC738A5B7760B94AC828F)
2023.02.17 10:54:59.988102 [ 2662387 ] {} <Fatal> Application: Child process was terminated by signal 6.
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
