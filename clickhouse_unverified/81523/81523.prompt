You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Kusto output format overflow
**Describe the bug**
Setting Kusto interval output format has overflow issues.

**How to reproduce**
Run Fiddle:
https://fiddle.clickhouse.com/a1c752c2-3364-4ce6-bd35-233dc767eb04

The number shows negative in Fiddle, but with UBSAN locally:
```
src/DataTypes/Serializations/SerializationInterval.cpp:25:48: runtime error: signed integer overflow: 2629746000000000 * 3508 cannot be represented in type 'long'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior src/DataTypes/Serializations/SerializationInterval.cpp:25:48 
########## Short fault info ############
(version 24.11.1.1, build id: , git hash: 1896f8df9324bd513701b07e1fbd3ff592525a47, architecture: x86_64) (from thread 2217955) Received signal -3
Signal description: sanitizer trap
Sanitizer trap.
Stack trace: 0x000055557bd570d7 0x000055557c59814e 0x000055557092fec4 0x000055557093ab5b 0x000055558610fbb9 0x00005555861109ab 0x000055558a4eba04 0x000055558a4f986f 0x000055558a4f34b1 0x000055558a1917ce 0x0000555589deb758 0x0000555589dfe25b 0x0000555589dfd29f 0x0000555589dfb180 0x0000555589df6fe5 0x000055557c043e3f 0x000055557c047c7b 0x000055557c048647 0x000055557c03dc33 0x000055558e4a56dd 0x000055557c054cb1 0x0000555570940b98 0x00007ffff7c2a3b8 0x00007ffff7c2a47b 0x000055557092602e
########################################
(version 24.11.1.1, build id: , git hash: 1896f8df9324bd513701b07e1fbd3ff592525a47) (from thread 2217955) (no query) Received signal sanitizer trap (-3)
Sanitizer trap.
Stack trace: 0x000055557bd570d7 0x000055557c59814e 0x000055557092fec4 0x000055557093ab5b 0x000055558610fbb9 0x00005555861109ab 0x000055558a4eba04 0x000055558a4f986f 0x000055558a4f34b1 0x000055558a1917ce 0x0000555589deb758 0x0000555589dfe25b 0x0000555589dfd29f 0x0000555589dfb180 0x0000555589df6fe5 0x000055557c043e3f 0x000055557c047c7b 0x000055557c048647 0x000055557c03dc33 0x000055558e4a56dd 0x000055557c054cb1 0x0000555570940b98 0x00007ffff7c2a3b8 0x00007ffff7c2a47b 0x000055557092602e
0. src/Common/StackTrace.cpp:380: StackTrace::tryCapture() @ 0x00000000268030d7
1.0. inlined from src/Common/StackTrace.h:48: StackTrace
1. src/Common/SignalHandlers.cpp:186: sanitizerDeathCallback() @ 0x000000002704414e
2. __sanitizer::Die() @ 0x000000001b3dbec4
3. ? @ 0x000000001b3e6b5b
4. src/DataTypes/Serializations/SerializationInterval.cpp:25: DB::SerializationKustoInterval::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x0000000030bbbbb9
5. src/DataTypes/Serializations/SerializationInterval.cpp:180: DB::SerializationInterval::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x0000000030bbc9ab
6. src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp:68: DB::PrettyBlockOutputFormat::calculateWidths(DB::Block const&, DB::Chunk const&, std::vector<DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 0ul, 0ul>, std::allocator<DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 0ul, 0ul>>>&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 0ul, 0ul>&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 0ul, 0ul>&) @ 0x0000000034f97a04
7. src/Processors/Formats/Impl/PrettyCompactBlockOutputFormat.cpp:208: DB::PrettyCompactBlockOutputFormat::writeChunk(DB::Chunk const&, DB::IOutputFormat::PortKind) @ 0x0000000034fa586f
8. src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp:453: DB::PrettyBlockOutputFormat::consume(DB::Chunk) @ 0x0000000034f9f4b1
9. src/Processors/Formats/IOutputFormat.cpp:117: DB::IOutputFormat::write(DB::Block const&) @ 0x0000000034c3d7ce
10. src/Client/ClientBase.cpp:450: DB::ClientBase::onData(DB::Block&, std::shared_ptr<DB::IAST>) @ 0x0000000034897758
11. src/Client/ClientBase.cpp:1261: DB::ClientBase::receiveAndProcessPacket(std::shared_ptr<DB::IAST>, bool) @ 0x00000000348aa25b
12. src/Client/ClientBase.cpp:1227: DB::ClientBase::receiveResult(std::shared_ptr<DB::IAST>, int, bool) @ 0x00000000348a929f
13. src/Client/ClientBase.cpp:1116: DB::ClientBase::processOrdinaryQuery(String const&, std::shared_ptr<DB::IAST>) @ 0x00000000348a7180
14. src/Client/ClientBase.cpp:2074: DB::ClientBase::processParsedSingleQuery(String const&, String const&, std::shared_ptr<DB::IAST>, std::optional<bool>, bool) @ 0x00000000348a2fe5
15. programs/client/Client.cpp:661: DB::Client::processFuzzingStep(String const&, std::shared_ptr<DB::IAST> const&, bool) @ 0x0000000026aefe3f
16. programs/client/Client.cpp:975: DB::Client::ProcessBuzzHouseQuery(String const&) @ 0x0000000026af3c7b
17. programs/client/Client.cpp:1019: DB::Client::buzzHouse() @ 0x0000000026af4647
18. programs/client/Client.cpp:412: DB::Client::main(std::vector<String, std::allocator<String>> const&) @ 0x0000000026ae9c33
19. base/poco/Util/src/Application.cpp:315: Poco::Util::Application::run() @ 0x0000000038f516dd
20. programs/client/Client.cpp:1657: mainEntryClickHouseClient(int, char**) @ 0x0000000026b00cb1
21. programs/main.cpp:246: main @ 0x000000001b3ecb98
22. ? @ 0x00007ffff7c2a3b8
23. ? @ 0x00007ffff7c2a47b
24. _start @ 0x000000001b3d202e
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
