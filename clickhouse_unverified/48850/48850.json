{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 48850,
  "instance_id": "ClickHouse__ClickHouse-48850",
  "issue_numbers": [
    "48718"
  ],
  "base_commit": "8bc0a3a899f69133497cf2db5cbd876d93bbde08",
  "patch": "diff --git a/src/Interpreters/PartLog.cpp b/src/Interpreters/PartLog.cpp\nindex cf231cbd7c9a..881fcae4de66 100644\n--- a/src/Interpreters/PartLog.cpp\n+++ b/src/Interpreters/PartLog.cpp\n@@ -135,6 +135,7 @@ NamesAndAliases PartLogElement::getNamesAndAliases()\n     {\n         {\"ProfileEvents.Names\", {std::make_shared<DataTypeArray>(std::make_shared<DataTypeString>())}, \"mapKeys(ProfileEvents)\"},\n         {\"ProfileEvents.Values\", {std::make_shared<DataTypeArray>(std::make_shared<DataTypeUInt64>())}, \"mapValues(ProfileEvents)\"},\n+        {\"name\", {std::make_shared<DataTypeString>()}, \"part_name\"},\n     };\n }\n \ndiff --git a/src/Storages/System/StorageSystemPartsBase.cpp b/src/Storages/System/StorageSystemPartsBase.cpp\nindex fb7f4f9066ab..0979b9d9371f 100644\n--- a/src/Storages/System/StorageSystemPartsBase.cpp\n+++ b/src/Storages/System/StorageSystemPartsBase.cpp\n@@ -304,6 +304,7 @@ StorageSystemPartsBase::StorageSystemPartsBase(const StorageID & table_id_, Name\n     /// Add aliases for old column names for backwards compatibility.\n     add_alias(\"bytes\", \"bytes_on_disk\");\n     add_alias(\"marks_size\", \"marks_bytes\");\n+    add_alias(\"part_name\", \"name\");\n \n     StorageInMemoryMetadata storage_metadata;\n     storage_metadata.setColumns(tmp_columns);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02117_show_create_table_system.reference b/tests/queries/0_stateless/02117_show_create_table_system.reference\nindex e3a2ac07c669..f2524cac1151 100644\n--- a/tests/queries/0_stateless/02117_show_create_table_system.reference\n+++ b/tests/queries/0_stateless/02117_show_create_table_system.reference\n@@ -510,7 +510,8 @@ CREATE TABLE system.parts\n     `last_removal_attemp_time` DateTime,\n     `removal_state` String,\n     `bytes` UInt64,\n-    `marks_size` UInt64\n+    `marks_size` UInt64,\n+    `part_name` String\n )\n ENGINE = SystemParts\n COMMENT 'SYSTEM TABLE is built on the fly.'\n@@ -564,7 +565,8 @@ CREATE TABLE system.parts_columns\n     `subcolumns.data_uncompressed_bytes` Array(UInt64),\n     `subcolumns.marks_bytes` Array(UInt64),\n     `bytes` UInt64,\n-    `marks_size` UInt64\n+    `marks_size` UInt64,\n+    `part_name` String\n )\n ENGINE = SystemPartsColumns\n COMMENT 'SYSTEM TABLE is built on the fly.'\n@@ -685,7 +687,8 @@ CREATE TABLE system.projection_parts\n     `rows_where_ttl_info.min` Array(DateTime),\n     `rows_where_ttl_info.max` Array(DateTime),\n     `bytes` UInt64,\n-    `marks_size` UInt64\n+    `marks_size` UInt64,\n+    `part_name` String\n )\n ENGINE = SystemProjectionParts\n COMMENT 'SYSTEM TABLE is built on the fly.'\n@@ -739,7 +742,8 @@ CREATE TABLE system.projection_parts_columns\n     `column_data_uncompressed_bytes` UInt64,\n     `column_marks_bytes` UInt64,\n     `bytes` UInt64,\n-    `marks_size` UInt64\n+    `marks_size` UInt64,\n+    `part_name` String\n )\n ENGINE = SystemProjectionPartsColumns\n COMMENT 'SYSTEM TABLE is built on the fly.'\n",
  "problem_statement": "Alias `part` and `part_name` for system.part_log and system.parts\n```\r\nDESCRIBE TABLE system.parts\r\n...\r\nname                                  \u2502 String\r\n```\r\n\r\n```\r\nDESCRIBE TABLE system.part_log\r\n...\r\npart_name               \u2502 String\r\n```\r\n\r\n^\r\nThis columns have the same meaning. Let's add an alias `part_name -> name` for `system.parts` and `name -> part_name` for `system.part_log`.\n",
  "hints_text": "",
  "created_at": "2023-04-17T13:05:23Z",
  "modified_files": [
    "src/Interpreters/PartLog.cpp",
    "src/Storages/System/StorageSystemPartsBase.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02117_show_create_table_system.reference"
  ]
}