You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
LimitTransform::makeChunkWithPreviousRow(): Assertion `row < chunk.getNumRows()' failed.
```
SELECT number FROM numbers(100) ORDER BY number ASC LIMIT 2, 9223372036854775807  WITH TIES
```

@KochetovNicolai The query is similar to https://github.com/ClickHouse/ClickHouse/issues/11359, but the error is different. 
LIMIT n OFFSET m doesn't return rows if n is too large
**Describe the bug**
When we use the clause LIMIT n OFFSET m with a large value using 

**How to reproduce**
I was able to reproduce the bug on `20.3.5` clickhouse server version. (I was able to reproduce on `20.3.7` too)

```
CREATE TABLE a (a UInt32) Engine = Memory;

INSERT INTO TABLE a SELECT number FROM system.numbers LIMIT 100000000;

SELECT a
FROM a
GROUP BY a
ORDER BY a ASC
LIMIT 5, 18446744073709551615;

Ok.

0 rows in set. Elapsed: 11.183 sec. Processed 100.00 million rows, 400.00 MB (8.94 million rows/s., 35.77 MB/s.) 
```

While if we use a smallest value for CH, it will return records.

```
SELECT a
FROM a
GROUP BY a
ORDER BY a ASC
LIMIT 5, 184467468;

[a really long list of rows]

```

**Expected behavior**
It should return the requested rows, or an error if the value is too large

**Additional context**

It seems the query works perfectly without an offset clause.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
