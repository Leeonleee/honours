{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12529,
  "instance_id": "ClickHouse__ClickHouse-12529",
  "issue_numbers": [
    "12521"
  ],
  "base_commit": "54255c10e119c45c2434497674681d7f162bed46",
  "patch": "diff --git a/src/Interpreters/ActionsVisitor.cpp b/src/Interpreters/ActionsVisitor.cpp\nindex 512319375d50..f7abfe8950c4 100644\n--- a/src/Interpreters/ActionsVisitor.cpp\n+++ b/src/Interpreters/ActionsVisitor.cpp\n@@ -368,7 +368,7 @@ void ActionsMatcher::visit(const ASTFunction & node, const ASTPtr & ast, Data &\n     }\n \n     SetPtr prepared_set;\n-    if (functionIsInOrGlobalInOperator(node.name))\n+    if (checkFunctionIsInOrGlobalInOperator(node))\n     {\n         /// Let's find the type of the first argument (then getActionsImpl will be called again and will not affect anything).\n         visit(node.arguments->children.at(0), data);\n@@ -445,7 +445,7 @@ void ActionsMatcher::visit(const ASTFunction & node, const ASTPtr & ast, Data &\n             /// Select the name in the next cycle.\n             argument_names.emplace_back();\n         }\n-        else if (functionIsInOrGlobalInOperator(node.name) && arg == 1 && prepared_set)\n+        else if (checkFunctionIsInOrGlobalInOperator(node) && arg == 1 && prepared_set)\n         {\n             ColumnWithTypeAndName column;\n             column.type = std::make_shared<DataTypeSet>();\ndiff --git a/src/Interpreters/ExecuteScalarSubqueriesVisitor.cpp b/src/Interpreters/ExecuteScalarSubqueriesVisitor.cpp\nindex e2884d995160..ee29d301c6b0 100644\n--- a/src/Interpreters/ExecuteScalarSubqueriesVisitor.cpp\n+++ b/src/Interpreters/ExecuteScalarSubqueriesVisitor.cpp\n@@ -180,7 +180,7 @@ void ExecuteScalarSubqueriesMatcher::visit(const ASTFunction & func, ASTPtr & as\n     /// But if an argument is not subquery, than deeper may be scalar subqueries and we need to descend in them.\n \n     std::vector<ASTPtr *> out;\n-    if (functionIsInOrGlobalInOperator(func.name))\n+    if (checkFunctionIsInOrGlobalInOperator(func))\n     {\n         for (auto & child : ast->children)\n         {\ndiff --git a/src/Interpreters/MarkTableIdentifiersVisitor.cpp b/src/Interpreters/MarkTableIdentifiersVisitor.cpp\nindex c7b8701c4a08..7ebe12754dc7 100644\n--- a/src/Interpreters/MarkTableIdentifiersVisitor.cpp\n+++ b/src/Interpreters/MarkTableIdentifiersVisitor.cpp\n@@ -35,7 +35,7 @@ void MarkTableIdentifiersMatcher::visit(ASTTableExpression & table, ASTPtr &, Da\n void MarkTableIdentifiersMatcher::visit(const ASTFunction & func, ASTPtr &, Data & data)\n {\n     /// `IN t` can be specified, where t is a table, which is equivalent to `IN (SELECT * FROM t)`.\n-    if (functionIsInOrGlobalInOperator(func.name))\n+    if (checkFunctionIsInOrGlobalInOperator(func))\n     {\n         auto & ast = func.arguments->children.at(1);\n         auto opt_name = tryGetIdentifierName(ast);\ndiff --git a/src/Interpreters/misc.h b/src/Interpreters/misc.h\nindex 303795673661..094dfbbbb81e 100644\n--- a/src/Interpreters/misc.h\n+++ b/src/Interpreters/misc.h\n@@ -1,10 +1,16 @@\n #pragma once\n \n #include <Common/StringUtils/StringUtils.h>\n+#include <Parsers/ASTFunction.h>\n \n namespace DB\n {\n \n+namespace ErrorCodes\n+{\n+    extern const int NUMBER_OF_ARGUMENTS_DOESNT_MATCH;\n+}\n+\n inline bool functionIsInOperator(const std::string & name)\n {\n     return name == \"in\" || name == \"notIn\" || name == \"nullIn\" || name == \"notNullIn\";\n@@ -30,4 +36,19 @@ inline bool functionIsDictGet(const std::string & name)\n     return startsWith(name, \"dictGet\") || (name == \"dictHas\") || (name == \"dictIsIn\");\n }\n \n+inline bool checkFunctionIsInOrGlobalInOperator(const ASTFunction & func)\n+{\n+    if (functionIsInOrGlobalInOperator(func.name))\n+    {\n+        size_t num_arguments = func.arguments->children.size();\n+        if (num_arguments != 2)\n+            throw Exception(\"Wrong number of arguments passed to function in. Expected: 2, passed: \" + std::to_string(num_arguments),\n+                ErrorCodes::NUMBER_OF_ARGUMENTS_DOESNT_MATCH);\n+\n+        return true;\n+    }\n+\n+    return false;\n+}\n+\n }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01397_in_bad_arguments.reference b/tests/queries/0_stateless/01397_in_bad_arguments.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/01397_in_bad_arguments.sql b/tests/queries/0_stateless/01397_in_bad_arguments.sql\nnew file mode 100644\nindex 000000000000..4854abad091e\n--- /dev/null\n+++ b/tests/queries/0_stateless/01397_in_bad_arguments.sql\n@@ -0,0 +1,4 @@\n+select in((1, 1, 1, 1)); -- { serverError 42 }\n+select in(1); -- { serverError 42 }\n+select in(); -- { serverError 42 }\n+select in(1, 2, 3); -- { serverError 42 }\n",
  "problem_statement": "select in((1)): MarkTableIdentifiersMatcher::visit(): std::out_of_range\n```\r\nselect in((1, 1, 1, 1))\r\n\r\n\r\n\r\n2020.07.15 15:05:10.197400 [ 329628 ] {2a5245f6-5d2a-4662-a05d-4eae5797efdb} <Error> executeQuery: std::exception. Code: 1001, type: std::out_of_range, e.what() = vector (version 20.7.1.1) (from [::1]:57258) (in query: select in((1, 1, 1, 1))), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/akuzm/ch4/ch/contrib/libcxx/include/exception:129: std::exception::capture() @ 0x1c8708 in /home/akuzm/ch4/build-clang10/programs/server/libclickhouse-server-libd.so\r\n1. /home/akuzm/ch4/ch/contrib/libcxx/include/exception:109: std::exception::exception() @ 0x105302 in /home/akuzm/ch4/build-clang10/contrib/libcxx-cmake/libcxxd.so\r\n2. /home/akuzm/ch4/ch/contrib/libcxx/src/support/runtime/stdexcept_default.ipp:24: std::logic_error::logic_error(char const*) @ 0x104f30 in /home/akuzm/ch4/build-clang10/contrib/libcxx-cmake/libcxxd.so\r\n3. /home/akuzm/ch4/ch/contrib/libcxx/include/stdexcept:164: std::out_of_range::out_of_range(char const*) @ 0x64337 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/JSON/lib_poco_jsond.so\r\n4. /home/akuzm/ch4/ch/contrib/libcxx/include/stdexcept:262: std::__1::__throw_out_of_range(char const*) @ 0x642c9 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/JSON/lib_poco_jsond.so\r\n5. ? @ 0x64298 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/JSON/lib_poco_jsond.so\r\n6. /home/akuzm/ch4/ch/contrib/libcxx/include/vector:0: std::__1::vector<std::__1::shared_ptr<DB::IAST>, std::__1::allocator<std::__1::shared_ptr<DB::IAST> > >::at(unsigned long) @ 0x1a5081 in /home/akuzm/ch4/build-clang10/src/TableFunctions/libclickhouse_table_functionsd.so\r\n7. /home/akuzm/ch4/ch/src/Interpreters/MarkTableIdentifiersVisitor.cpp:40: DB::MarkTableIdentifiersMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST>&, DB::MarkTableIdentifiersMatcher::Data&) @ 0x16eda1b in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n8. /home/akuzm/ch4/ch/src/Interpreters/MarkTableIdentifiersVisitor.cpp:24: DB::MarkTableIdentifiersMatcher::visit(std::__1::shared_ptr<DB::IAST>&, DB::MarkTableIdentifiersMatcher::Data&) @ 0x16ed971 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n9. /home/akuzm/ch4/ch/src/Interpreters/InDepthNodeVisitor.h:32: DB::InDepthNodeVisitor<DB::MarkTableIdentifiersMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x18097ed in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n10. /home/akuzm/ch4/ch/src/Interpreters/InDepthNodeVisitor.h:45: DB::InDepthNodeVisitor<DB::MarkTableIdentifiersMatcher, true, std::__1::shared_ptr<DB::IAST> >::visitChildren(std::__1::shared_ptr<DB::IAST>&) @ 0x1817656 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n11. /home/akuzm/ch4/ch/src/Interpreters/InDepthNodeVisitor.h:35: DB::InDepthNodeVisitor<DB::MarkTableIdentifiersMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x18097ff in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n12. /home/akuzm/ch4/ch/src/Interpreters/InDepthNodeVisitor.h:45: DB::InDepthNodeVisitor<DB::MarkTableIdentifiersMatcher, true, std::__1::shared_ptr<DB::IAST> >::visitChildren(std::__1::shared_ptr<DB::IAST>&) @ 0x1817656 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n13. /home/akuzm/ch4/ch/src/Interpreters/InDepthNodeVisitor.h:35: DB::InDepthNodeVisitor<DB::MarkTableIdentifiersMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x18097ff in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n14. /home/akuzm/ch4/ch/src/Interpreters/SyntaxAnalyzer.cpp:1211: DB::SyntaxAnalyzer::normalize(std::__1::shared_ptr<DB::IAST>&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<DB::IAST>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<DB::IAST> > > >&, DB::Settings const&) @ 0x180138c in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n15. /home/akuzm/ch4/ch/src/Interpreters/SyntaxAnalyzer.cpp:1065: DB::SyntaxAnalyzer::analyzeSelect(std::__1::shared_ptr<DB::IAST>&, DB::SyntaxAnalyzerResult&&, DB::SelectQueryOptions const&, std::__1::vector<DB::TableWithColumnNamesAndTypes, std::__1::allocator<DB::TableWithColumnNamesAndTypes> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::TableJoin>) const @ 0x17fff12 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n16. /home/akuzm/ch4/ch/src/Interpreters/InterpreterSelectQuery.cpp:314: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const @ 0x1605194 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n17. /home/akuzm/ch4/ch/src/Interpreters/InterpreterSelectQuery.cpp:405: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0x160371f in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n18. /home/akuzm/ch4/ch/src/Interpreters/InterpreterSelectQuery.cpp:146: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x160262c in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n19. /home/akuzm/ch4/ch/contrib/libcxx/include/memory:3028: std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x1674bf1 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n20. /home/akuzm/ch4/ch/src/Interpreters/InterpreterSelectWithUnionQuery.cpp:84: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x167375a in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n21. /home/akuzm/ch4/ch/contrib/libcxx/include/memory:3028: std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&&) @ 0x15befc5 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n22. /home/akuzm/ch4/ch/src/Interpreters/InterpreterFactory.cpp:103: DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::QueryProcessingStage::Enum) @ 0x15bdfa3 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n23. /home/akuzm/ch4/ch/src/Interpreters/executeQuery.cpp:365: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x19a1651 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n24. /home/akuzm/ch4/ch/src/Interpreters/executeQuery.cpp:653: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x19a087a in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n25. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:253: DB::TCPHandler::runImpl() @ 0x36a874 in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n26. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:1210: DB::TCPHandler::run() @ 0x371dc8 in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n27. /home/akuzm/ch4/ch/contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x1b9d7c in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Net/lib_poco_netd.so\r\n28. /home/akuzm/ch4/ch/contrib/poco/Net/src/TCPServerDispatcher.cpp:114: Poco::Net::TCPServerDispatcher::run() @ 0x1ba58a in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Net/lib_poco_netd.so\r\n29. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x276173 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n30. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x27303d in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n31. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x271eba in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n```\n",
  "hints_text": "",
  "created_at": "2020-07-15T14:24:22Z"
}