{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 20970,
  "instance_id": "ClickHouse__ClickHouse-20970",
  "issue_numbers": [
    "19382"
  ],
  "base_commit": "3509fe88d89a767cbc9f2abe0adfecadb5051a12",
  "patch": "diff --git a/src/AggregateFunctions/AggregateFunctionSumMap.h b/src/AggregateFunctions/AggregateFunctionSumMap.h\nindex 3079da36cda7..f6a473546f99 100644\n--- a/src/AggregateFunctions/AggregateFunctionSumMap.h\n+++ b/src/AggregateFunctions/AggregateFunctionSumMap.h\n@@ -115,7 +115,14 @@ class AggregateFunctionMapBase : public IAggregateFunctionDataHelper<\n                         \"Values for {} are expected to be Numeric, Float or Decimal, passed type {}\",\n                         getName(), value_type->getName()};\n \n-                result_type = value_type_without_nullable->promoteNumericType();\n+                WhichDataType value_type_to_check(value_type);\n+\n+                /// Do not promote decimal because of implementation issues of this function design\n+                /// If we decide to make this function more efficient we should promote decimal type during summ\n+                if (value_type_to_check.isDecimal())\n+                    result_type = value_type_without_nullable;\n+                else\n+                    result_type = value_type_without_nullable->promoteNumericType();\n             }\n \n             types.emplace_back(std::make_shared<DataTypeArray>(result_type));\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00502_sum_map.reference b/tests/queries/0_stateless/00502_sum_map.reference\nindex 0002c43945a1..c38fb2ec7d68 100644\n--- a/tests/queries/0_stateless/00502_sum_map.reference\n+++ b/tests/queries/0_stateless/00502_sum_map.reference\n@@ -22,3 +22,5 @@\n ([1.01],[1])\n (['a','b'],[1,2])\n (['a','ab','abc'],[3,2,1])\n+([1,2,3,4,5,6,7,8],[1.00000,2.00000,6.00000,8.00000,10.00000,12.00000,7.00000,8.00000])\n+([1,2,3,4,5,6,7,8],[1.00000,2.00000,6.00000,8.00000,10.00000,12.00000,7.00000,8.00000])\ndiff --git a/tests/queries/0_stateless/00502_sum_map.sql b/tests/queries/0_stateless/00502_sum_map.sql\nindex 021aaf3cd3b9..51007a9c78a4 100644\n--- a/tests/queries/0_stateless/00502_sum_map.sql\n+++ b/tests/queries/0_stateless/00502_sum_map.sql\n@@ -38,3 +38,19 @@ select sumMap(val, cnt) from ( SELECT [ CAST(1.01, 'Decimal(10,2)') ] as val, [1\n \n select sumMap(val, cnt) from ( SELECT [ CAST('a', 'FixedString(1)'), CAST('b', 'FixedString(1)' ) ] as val, [1, 2] as cnt );\n select sumMap(val, cnt) from ( SELECT [ CAST('abc', 'String'), CAST('ab', 'String'), CAST('a', 'String') ] as val, [1, 2, 3] as cnt );\n+\n+DROP TABLE IF EXISTS sum_map_decimal;\n+\n+CREATE TABLE sum_map_decimal(\n+    statusMap Nested(\n+        goal_id UInt16,\n+        revenue Decimal32(5)\n+    )\n+) ENGINE = Log;\n+\n+INSERT INTO sum_map_decimal VALUES ([1, 2, 3], [1.0, 2.0, 3.0]), ([3, 4, 5], [3.0, 4.0, 5.0]), ([4, 5, 6], [4.0, 5.0, 6.0]), ([6, 7, 8], [6.0, 7.0, 8.0]);\n+\n+SELECT sumMap(statusMap.goal_id, statusMap.revenue) FROM sum_map_decimal;\n+SELECT sumMapWithOverflow(statusMap.goal_id, statusMap.revenue) FROM sum_map_decimal;\n+\n+DROP TABLE sum_map_decimal;\n",
  "problem_statement": "sumMap does not work for decimal values\n**Describe the bug**\r\nPerforming `sumMap` function with decimal values does not sum properly. looks like an overflow.\r\n\r\n**Does it reproduce on recent release?**\r\n[The list of releases](https://github.com/ClickHouse/ClickHouse/blob/master/utils/list-versions/version_date.tsv)\r\nYes. tried on latest `21.1.2.15` as well as `20.12.4.5`\r\n\r\n**How to reproduce**\r\n```sql\r\nCREATE TABLE sum_map(\r\n    statusMap Nested(\r\n        goal_id UInt16,\r\n        revenue Decimal32(5)\r\n    )\r\n) ENGINE = Log;\r\n\r\nINSERT INTO sum_map VALUES\r\n    ([1, 2, 3], [10.5, 10.5, 10.5]),\r\n    ([3, 4, 5], [10.5, 10.5, 10.5]),\r\n    ([4, 5, 6], [10.5, 10.5, 10.5]),\r\n    ([6, 7, 8], [10.5, 10.5, 10.5]);\r\n\r\nSELECT\r\n    sumMap(statusMap.goal_id, statusMap.revenue)\r\nFROM sum_map;\r\n```\r\n\r\n**Expected behavior**\r\nThe decimal values in the nested revenue column should be summed properly. The select above leads to:\r\n```\r\n+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\r\n| sumMap(statusMap.goal_id, statusMap.revenue)                                                                                                                                                                                                                                                                                    |\r\n+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\r\n| ([1,2,3,4,5,6,7,8],[1521106780904990803940045903404371.81840,-305731560536066622954267316264999.30736,25802410697087604800041730231.52928,25802360332470575101123994625.01152,25802360332494186933538342851.08000,25802360332517798765952691077.14848,25802360332694887509060302762.16208,25802360332742111173888999214.29904]) |\r\n+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\r\n```\r\n\r\n**note** when writing this issue I accidentally [submitted pre-maturely](https://github.com/ClickHouse/ClickHouse/issues/19380) and closed that one.\n",
  "hints_text": "",
  "created_at": "2021-02-19T16:28:24Z"
}