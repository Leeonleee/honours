{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 31742,
  "instance_id": "ClickHouse__ClickHouse-31742",
  "issue_numbers": [
    "30546"
  ],
  "base_commit": "e822a3b43bd6a9793884a4d0f167ef968769105e",
  "patch": "diff --git a/src/Columns/ColumnMap.cpp b/src/Columns/ColumnMap.cpp\nindex 4374ca30c99a..99d965a4ec18 100644\n--- a/src/Columns/ColumnMap.cpp\n+++ b/src/Columns/ColumnMap.cpp\n@@ -263,7 +263,7 @@ void ColumnMap::getExtremes(Field & min, Field & max) const\n \n void ColumnMap::forEachSubcolumn(ColumnCallback callback)\n {\n-    nested->forEachSubcolumn(callback);\n+    callback(nested);\n }\n \n bool ColumnMap::structureEquals(const IColumn & rhs) const\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02124_buffer_with_type_map_long.reference b/tests/queries/0_stateless/02124_buffer_with_type_map_long.reference\nnew file mode 100644\nindex 000000000000..d86bac9de59a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02124_buffer_with_type_map_long.reference\n@@ -0,0 +1,1 @@\n+OK\ndiff --git a/tests/queries/0_stateless/02124_buffer_with_type_map_long.sh b/tests/queries/0_stateless/02124_buffer_with_type_map_long.sh\nnew file mode 100755\nindex 000000000000..1b2197ef9431\n--- /dev/null\n+++ b/tests/queries/0_stateless/02124_buffer_with_type_map_long.sh\n@@ -0,0 +1,35 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+$CLICKHOUSE_CLIENT -q \"DROP TABLE IF EXISTS t_buffer_map\"\n+$CLICKHOUSE_CLIENT -q \"CREATE TABLE t_buffer_map(m1 Map(String, UInt64), m2 Map(String, String)) ENGINE = Buffer('', '', 1, 1, 1, 1000000000000, 1000000000000, 1000000000000, 1000000000000)\"\n+\n+function insert1\n+{\n+    while true; do\n+        $CLICKHOUSE_CLIENT -q \"INSERT INTO t_buffer_map SELECT (range(10), range(10)), (range(10), range(10)) from numbers(100)\"\n+    done\n+}\n+\n+function select1\n+{\n+    while true; do\n+        $CLICKHOUSE_CLIENT -q \"SELECT * FROM t_buffer_map\" 2> /dev/null > /dev/null\n+    done\n+}\n+\n+TIMEOUT=10\n+\n+export -f insert1\n+export -f select1\n+\n+timeout $TIMEOUT bash -c insert1 &\n+timeout $TIMEOUT bash -c select1 &\n+\n+wait\n+\n+echo \"OK\"\n+$CLICKHOUSE_CLIENT -q \"DROP TABLE t_buffer_map\"\n",
  "problem_statement": "Server crash when selecting from system.query_log if it is using Buffer table as a backend\n**Describe what's wrong**\r\n\r\nServer crashes when selecting from system query.log\r\n\r\n**Does it reproduce on recent release?**\r\nYes\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use\r\nI used latest 21.10 version (518c2c1bfed1660ca610719e57dca5f49fba9011), probably it reproduces on master too.\r\n* Non-default settings, if any\r\nI used following config for query_log:\r\n```xml\r\n<query_log>\r\n    <database>system</database>\r\n    <table>query_log</table>\r\n    <engine>ENGINE = Buffer('', '', 1, 1, 1, 1000000000000, 1000000000000, 1000000000000, 1000000000000)</engine>\r\n    <flush_interval_milliseconds>100</flush_interval_milliseconds>\r\n</query_log>\r\n```\r\n* Queries to run that lead to unexpected result\r\n```bash\r\n#! /bin/bash\r\n\r\n# Drop system.query_log to make sure that it is up to date with config.\r\ncurl 'localhost:8123' -d 'drop table system.query_log'\r\n\r\n# It usually takes ~3000 iterations before crushing on my server.\r\nfor i in {1..10000}\r\ndo\r\n    curl 'localhost:8123' -d 'select * from system.query_log' 2> /dev/null > /dev/null\r\n    status=$?\r\n    echo \"Iteration: $i; Status: $status\"\r\n    if [[ \"$status\" != \"0\" ]]\r\n    then\r\n        break\r\n    fi\r\ndone\r\n```\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n2021.10.22 10:04:09.907246 [ 3794 ] {66884da9-bca0-4448-b326-2f7edec9a2ba} <Debug> executeQuery: (from [::1]:41068) select * from system.query_log\r\n2021.10.22 10:04:09.908571 [ 3794 ] {66884da9-bca0-4448-b326-2f7edec9a2ba} <Trace> ContextAccess (default): Access granted: SELECT(type, event_date, event_time, event_time_microseconds, query_start_time, query_start_time_microseconds, query_duration_ms, read_rows, read_bytes, written_rows, written_bytes, result_rows, result_bytes, memory_usage, current_database, query, formatted_query, normalized_query_hash, query_kind, databases, tables, columns, projections, views, exception_code, exception, stack_trace, is_initial_query, user, query_id, address, port, initial_user, initial_query_id, initial_address, initial_port, initial_query_start_time, initial_query_start_time_microseconds, interface, os_user, client_hostname, client_name, client_revision, client_version_major, client_version_minor, client_version_patch, http_method, http_user_agent, http_referer, forwarded_for, quota_key, revision, log_comment, thread_ids, ProfileEvents, Settings, used_aggregate_functions, used_aggregate_function_combinators, used_database_engines, used_data_type_families, used_dictionaries, used_formats, used_functions, used_storages, used_table_functions) ON system.query_log\r\n2021.10.22 10:04:09.908971 [ 3794 ] {66884da9-bca0-4448-b326-2f7edec9a2ba} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.10.22 10:04:09.910518 [ 3794 ] {66884da9-bca0-4448-b326-2f7edec9a2ba} <Trace> ParallelFormattingOutputFormat: Parallel formatting is being used\r\n2021.10.22 10:04:09.911209 [ 3955 ] {} <Trace> SystemLog (system.query_log): Flushing system log, 9 entries to flush up to offset 5403\r\n2021.10.22 10:04:09.913899 [ 3791 ] {} <Trace> BaseDaemon: Received signal 11\r\n2021.10.22 10:04:09.913985 [ 3955 ] {} <Trace> SystemLog (system.query_log): Flushed system log up to offset 5403\r\n2021.10.22 10:04:09.914224 [ 9608 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.10.22 10:04:09.914303 [ 9608 ] {} <Fatal> BaseDaemon: (version 21.10.3.1, build id: 645A68B9CBFECFFC) (from thread 3963) (query_id: 66884da9-bca0-4448-b326-2f7edec9a2ba) Received signal Segmentation fault (11)\r\n2021.10.22 10:04:09.914344 [ 9608 ] {} <Fatal> BaseDaemon: Address: 0x10 Access: read. Address not mapped to object.\r\n2021.10.22 10:04:09.914369 [ 9608 ] {} <Fatal> BaseDaemon: Stack trace: 0xfb6d7d9 0x10af3a71 0x10af34c2 0x10b317a7 0x93c186d 0x93c2ce8 0x93bfdf0 0x93c20b3 0x7f6d887db6db 0x7f6d880f871f\r\n2021.10.22 10:04:09.923138 [ 9608 ] {} <Fatal> BaseDaemon: 3.1. inlined from /home/dakovalkov/ClickHouse/build/../contrib/libcxx/include/vector:1559: std::__1::vector<COW<DB::IColumn>::chameleon_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::chameleon_ptr<DB::IColumn> > >::operator[](unsigned long) const\r\n2021.10.22 10:04:09.923180 [ 9608 ] {} <Fatal> BaseDaemon: 3.2. inlined from ../src/Columns/ColumnTuple.h:99: DB::ColumnTuple::getColumn(unsigned long) const\r\n2021.10.22 10:04:09.923237 [ 9608 ] {} <Fatal> BaseDaemon: 3.3. inlined from ../src/DataTypes/Serializations/SerializationMap.cpp:106: void DB::SerializationMap::serializeTextImpl<DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const::$_0&, DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const::$_0&>(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const::$_0&, DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const::$_0&) const\r\n2021.10.22 10:04:09.923272 [ 9608 ] {} <Fatal> BaseDaemon: 3. ../src/DataTypes/Serializations/SerializationMap.cpp:175: DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0xfb6d7d9 in /home/dakovalkov/ClickHouse/build/programs/clickhouse\r\n2021.10.22 10:04:09.933703 [ 9608 ] {} <Fatal> BaseDaemon: 4. /home/dakovalkov/ClickHouse/build/../src/Processors/Formats/IRowOutputFormat.cpp:90: DB::IRowOutputFormat::write(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, unsigned long) @ 0x10af3a71 in /home/dakovalkov/ClickHouse/build/programs/clickhouse\r\n2021.10.22 10:04:09.942135 [ 9608 ] {} <Fatal> BaseDaemon: 5.1. inlined from /home/dakovalkov/ClickHouse/build/../contrib/libcxx/include/functional:2236: std::__1::__function::__policy_func<void (std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, unsigned long)>::operator bool() const\r\n2021.10.22 10:04:09.942203 [ 9608 ] {} <Fatal> BaseDaemon: 5.2. inlined from ../contrib/libcxx/include/functional:2412: std::__1::function<void (std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, unsigned long)>::operator bool() const\r\n2021.10.22 10:04:09.942219 [ 9608 ] {} <Fatal> BaseDaemon: 5. ../src/Processors/Formats/IRowOutputFormat.cpp:37: DB::IRowOutputFormat::consume(DB::Chunk) @ 0x10af34c2 in /home/dakovalkov/ClickHouse/build/programs/clickhouse\r\n2021.10.22 10:04:09.953967 [ 9608 ] {} <Fatal> BaseDaemon: 6.1. inlined from /home/dakovalkov/ClickHouse/build/../contrib/libcxx/include/memory:3211: ~shared_ptr\r\n2021.10.22 10:04:09.954002 [ 9608 ] {} <Fatal> BaseDaemon: 6.2. inlined from ../src/Processors/Chunk.h:32: ~Chunk\r\n2021.10.22 10:04:09.954032 [ 9608 ] {} <Fatal> BaseDaemon: 6. ../src/Processors/Formats/Impl/ParallelFormattingOutputFormat.cpp:179: DB::ParallelFormattingOutputFormat::formatterThreadFunction(unsigned long, std::__1::shared_ptr<DB::ThreadGroupStatus> const&) @ 0x10b317a7 in /home/dakovalkov/ClickHouse/build/programs/clickhouse\r\n2021.10.22 10:04:09.963998 [ 9608 ] {} <Fatal> BaseDaemon: 7.1. inlined from /home/dakovalkov/ClickHouse/build/../contrib/libcxx/include/functional:2210: std::__1::__function::__policy_func<void ()>::operator=(std::nullptr_t)\r\n2021.10.22 10:04:09.964048 [ 9608 ] {} <Fatal> BaseDaemon: 7.2. inlined from ../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2021.10.22 10:04:09.964080 [ 9608 ] {} <Fatal> BaseDaemon: 7. ../src/Common/ThreadPool.cpp:273: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x93c186d in /home/dakovalkov/ClickHouse/build/programs/clickhouse\r\n2021.10.22 10:04:09.974907 [ 9608 ] {} <Fatal> BaseDaemon: 8. /home/dakovalkov/ClickHouse/build/../src/Common/ThreadPool.cpp:0: ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() @ 0x93c2ce8 in /home/dakovalkov/ClickHouse/build/programs/clickhouse\r\n2021.10.22 10:04:09.984050 [ 9608 ] {} <Fatal> BaseDaemon: 9.1. inlined from /home/dakovalkov/ClickHouse/build/../contrib/libcxx/include/functional:2210: std::__1::__function::__policy_func<void ()>::operator=(std::nullptr_t)\r\n2021.10.22 10:04:09.984085 [ 9608 ] {} <Fatal> BaseDaemon: 9.2. inlined from ../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2021.10.22 10:04:09.984109 [ 9608 ] {} <Fatal> BaseDaemon: 9. ../src/Common/ThreadPool.cpp:273: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x93bfdf0 in /home/dakovalkov/ClickHouse/build/programs/clickhouse\r\n2021.10.22 10:04:09.994285 [ 9608 ] {} <Fatal> BaseDaemon: 10.1. inlined from /home/dakovalkov/ClickHouse/build/../contrib/libcxx/include/memory:1655: std::__1::unique_ptr<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>, std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> > >::reset(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>*)\r\n2021.10.22 10:04:09.994323 [ 9608 ] {} <Fatal> BaseDaemon: 10.2. inlined from ../contrib/libcxx/include/memory:1612: ~unique_ptr\r\n2021.10.22 10:04:09.994344 [ 9608 ] {} <Fatal> BaseDaemon: 10. ../contrib/libcxx/include/thread:293: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0x93c20b3 in /home/dakovalkov/ClickHouse/build/programs/clickhouse\r\n2021.10.22 10:04:09.994396 [ 9608 ] {} <Fatal> BaseDaemon: 11. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n2021.10.22 10:04:09.994501 [ 9608 ] {} <Fatal> BaseDaemon: 12. /build/glibc-S9d2JN/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: clone @ 0x12171f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n```\r\n\n",
  "hints_text": "Does it reproduce with the official build?\n@alexey-milovidov yes, I have just installed the latest version using apt-get and checked it.\r\nHere is a stacktrace:\r\n```\r\n2021.10.22 08:16:15.442001 [ 11204 ] {53d58a46-5f74-46ad-b09f-dcdc84b443e7} <Debug> executeQuery: (from 127.0.0.1:57332) select * from system.query_log\r\n2021.10.22 08:16:15.442755 [ 11204 ] {53d58a46-5f74-46ad-b09f-dcdc84b443e7} <Trace> ContextAccess (default): Access granted: SELECT(type, event_date, event_time, event_time_microseconds, query_start_time, query_start_time_microseconds, query_duration_ms\r\n, read_rows, read_bytes, written_rows, written_bytes, result_rows, result_bytes, memory_usage, current_database, query, formatted_query, normalized_query_hash, query_kind, databases, tables, columns, projections, views, exception_code, exception, stack_\r\ntrace, is_initial_query, user, query_id, address, port, initial_user, initial_query_id, initial_address, initial_port, initial_query_start_time, initial_query_start_time_microseconds, interface, os_user, client_hostname, client_name, client_revision, cl\r\nient_version_major, client_version_minor, client_version_patch, http_method, http_user_agent, http_referer, forwarded_for, quota_key, revision, log_comment, thread_ids, ProfileEvents, Settings, used_aggregate_functions, used_aggregate_function_combinato\r\nrs, used_database_engines, used_data_type_families, used_dictionaries, used_formats, used_functions, used_storages, used_table_functions) ON system.query_log\r\n2021.10.22 08:16:15.442834 [ 11212 ] {} <Trace> SystemLog (system.query_log): Flushing system log, 15 entries to flush up to offset 472\r\n2021.10.22 08:16:15.442983 [ 11204 ] {53d58a46-5f74-46ad-b09f-dcdc84b443e7} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.10.22 08:16:15.443750 [ 11204 ] {53d58a46-5f74-46ad-b09f-dcdc84b443e7} <Trace> ParallelFormattingOutputFormat: Parallel formatting is being used\r\n2021.10.22 08:16:15.444939 [ 11202 ] {} <Trace> BaseDaemon: Received signal 11\r\n2021.10.22 08:16:15.445087 [ 11212 ] {} <Trace> SystemLog (system.query_log): Flushed system log up to offset 472\r\n2021.10.22 08:16:15.445097 [ 11869 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.10.22 08:16:15.445140 [ 11869 ] {} <Fatal> BaseDaemon: (version 21.10.2.15 (official build), build id: 6699B86599A2121E78E0D42DD67791ABD9AE5265) (from thread 11405) (query_id: 53d58a46-5f74-46ad-b09f-dcdc84b443e7) Received signal Segmentation fault\r\n (11)\r\n2021.10.22 08:16:15.445160 [ 11869 ] {} <Fatal> BaseDaemon: Address: 0x10 Access: read. Address not mapped to object.\r\n2021.10.22 08:16:15.445171 [ 11869 ] {} <Fatal> BaseDaemon: Stack trace: 0x106ea22b 0x11a28ba1 0x11a28622 0x11a77c14 0x948fb98 0x949173f 0x948ce7f 0x9490763 0x7fb53df77609 0x7fb53de8d293\r\n2021.10.22 08:16:15.445227 [ 11869 ] {} <Fatal> BaseDaemon: 1. DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x106ea22b in /usr/bin/clickhouse\r\n2021.10.22 08:16:15.445245 [ 11869 ] {} <Fatal> BaseDaemon: 2. DB::IRowOutputFormat::write(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, unsigned long) @ 0x11a\r\n28ba1 in /usr/bin/clickhouse\r\n2021.10.22 08:16:15.445256 [ 11869 ] {} <Fatal> BaseDaemon: 3. DB::IRowOutputFormat::consume(DB::Chunk) @ 0x11a28622 in /usr/bin/clickhouse\r\n2021.10.22 08:16:15.445268 [ 11869 ] {} <Fatal> BaseDaemon: 4. DB::ParallelFormattingOutputFormat::formatterThreadFunction(unsigned long, std::__1::shared_ptr<DB::ThreadGroupStatus> const&) @ 0x11a77c14 in /usr/bin/clickhouse\r\n2021.10.22 08:16:15.445285 [ 11869 ] {} <Fatal> BaseDaemon: 5. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x948fb98 in /usr/bin/clickhouse\r\n2021.10.22 08:16:15.445309 [ 11869 ] {} <Fatal> BaseDaemon: 6. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(vo\r\nid&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() @ 0x949173f in /usr/bin/clickhouse\r\n2021.10.22 08:16:15.445320 [ 11869 ] {} <Fatal> BaseDaemon: 7. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x948ce7f in /usr/bin/clickhouse\r\n2021.10.22 08:16:15.445326 [ 11869 ] {} <Fatal> BaseDaemon: 8. ? @ 0x9490763 in /usr/bin/clickhouse\r\n2021.10.22 08:16:15.445341 [ 11869 ] {} <Fatal> BaseDaemon: 9. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2021.10.22 08:16:15.445353 [ 11869 ] {} <Fatal> BaseDaemon: 10. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.10.22 08:16:15.545515 [ 11212 ] {} <Trace> SystemLog (system.query_log): Flushing system log, 1 entries to flush up to offset 473\r\n2021.10.22 08:16:15.547286 [ 11212 ] {} <Trace> SystemLog (system.query_log): Flushed system log up to offset 473\r\n```\n* Tested master's current HEAD with asserts on (built locally) and it detects a logical error somewhere:\r\n\r\n```\r\n2021.10.22 10:13:08.115089 [ 47258 ] {133d4d2b-ff2e-4444-a076-cb4806888d29} <Fatal> : Logical error: 'Invalid number of rows in Chunk column Map(String, UInt64) position 54: expected 41, got 46'.\r\n2021.10.22 10:13:08.115426 [ 47189 ] {} <Trace> BaseDaemon: Received signal 6\r\n2021.10.22 10:13:08.115888 [ 48332 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.10.22 10:13:08.116008 [ 48332 ] {} <Fatal> BaseDaemon: (version 21.11.1.1, build id: 855024CF7053718959EA42D17BD878E2E1BAA224) (from thread 47258) (query_id: 133d4d2b-ff2e-4444-a076-cb4806888d29) Received signal Aborted (6)\r\n2021.10.22 10:13:08.116097 [ 48332 ] {} <Fatal> BaseDaemon: \r\n2021.10.22 10:13:08.116241 [ 48332 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f2cf95bdd22 0x7f2cf95a7862 0x14f80f19 0x14f81052 0x23fc6dbf 0x23fc74e5 0x243b0862 0x1fa542a2 0x23fdb4ce 0x240021e6 0x2400212c 0x240020bd 0x2400207d 0x24002055 0x2400201d 0x14fd6fe6 0x14fd5f15 0x2400090d 0x24001372 0x23ffefa1 0x23ffe200 0x23ffa277 0x232551af 0x23ef9741 0x23efc3fd 0x23f98a3e 0x28981439 0x28981cd4 0x28ae6da1 0x28ae33da 0x28ae205a 0x7f2cf9782259 0x7f2cf967f5e3\r\n2021.10.22 10:13:08.116419 [ 48332 ] {} <Fatal> BaseDaemon: 4. __GI_raise @ 0x3cd22 in /usr/lib/libc-2.33.so\r\n2021.10.22 10:13:08.116507 [ 48332 ] {} <Fatal> BaseDaemon: 5. abort @ 0x26862 in /usr/lib/libc-2.33.so\r\n2021.10.22 10:13:08.118702 [ 47288 ] {} <Trace> SystemLog (system.query_log): Flushed system log up to offset 1095\r\n2021.10.22 10:13:08.172539 [ 48332 ] {} <Fatal> BaseDaemon: 6. /mnt/ch/ClickHouse/src/Common/Exception.cpp:53: DB::handle_error_code(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, std::__1::vector<void*, std::__1::allocator<void*> > const&) @ 0x14f80f19 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:08.218023 [ 48332 ] {} <Fatal> BaseDaemon: 7. /mnt/ch/ClickHouse/src/Common/Exception.cpp:60: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x14f81052 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:08.219907 [ 47288 ] {} <Trace> SystemLog (system.query_log): Flushing system log, 1 entries to flush up to offset 1096\r\n2021.10.22 10:13:08.251949 [ 47288 ] {} <Trace> SystemLog (system.query_log): Flushed system log up to offset 1096\r\n2021.10.22 10:13:08.284241 [ 48332 ] {} <Fatal> BaseDaemon: 8. /mnt/ch/ClickHouse/src/Processors/Chunk.cpp:72: DB::Chunk::checkNumRowsIsConsistent() @ 0x23fc6dbf in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:08.350022 [ 48332 ] {} <Fatal> BaseDaemon: 9. /mnt/ch/ClickHouse/src/Processors/Chunk.cpp:57: DB::Chunk::setColumns(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >, unsigned long) @ 0x23fc74e5 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:08.413812 [ 48332 ] {} <Fatal> BaseDaemon: 10. /mnt/ch/ClickHouse/src/Processors/Transforms/ExpressionTransform.cpp:25: DB::ExpressionTransform::transform(DB::Chunk&) @ 0x243b0862 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:08.509073 [ 48332 ] {} <Fatal> BaseDaemon: 11. /mnt/ch/ClickHouse/src/Processors/ISimpleTransform.h:38: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x1fa542a2 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:08.582131 [ 48332 ] {} <Fatal> BaseDaemon: 12. /mnt/ch/ClickHouse/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x23fdb4ce in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:08.728460 [ 48332 ] {} <Fatal> BaseDaemon: 13. /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:88: DB::executeJob(DB::IProcessor*) @ 0x240021e6 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:08.863407 [ 48332 ] {} <Fatal> BaseDaemon: 14. /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:105: DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0::operator()() const @ 0x2400212c in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.000180 [ 47262 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 827.17 MiB, peak 859.54 MiB, will set to 873.62 MiB (RSS), difference: 46.45 MiB\r\n2021.10.22 10:13:09.005846 [ 48332 ] {} <Fatal> BaseDaemon: 15. /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) @ 0x240020bd in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.139696 [ 48332 ] {} <Fatal> BaseDaemon: 16. /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:349: void std::__1::__invoke_void_return_wrapper<void>::__call<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) @ 0x2400207d in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.249593 [ 47299 ] {} <Debug> StorageBuffer (system.query_log): Flushing buffer with 47 rows (discarded), 61869 bytes, age 2 seconds (bg).\r\n2021.10.22 10:13:09.273819 [ 48332 ] {} <Fatal> BaseDaemon: 17. /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608: std::__1::__function::__default_alloc_func<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0, void ()>::operator()() @ 0x24002055 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.407895 [ 48332 ] {} <Fatal> BaseDaemon: 18. /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0, void ()> >(std::__1::__function::__policy_storage const*) @ 0x2400201d in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.441142 [ 48332 ] {} <Fatal> BaseDaemon: 19. /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221: std::__1::__function::__policy_func<void ()>::operator()() const @ 0x14fd6fe6 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.472267 [ 48332 ] {} <Fatal> BaseDaemon: 20. /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560: std::__1::function<void ()>::operator()() const @ 0x14fd5f15 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.597852 [ 48332 ] {} <Fatal> BaseDaemon: 21. /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:602: DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x2400090d in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.723328 [ 48332 ] {} <Fatal> BaseDaemon: 22. /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:487: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0x24001372 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.835050 [ 48332 ] {} <Fatal> BaseDaemon: 23. /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:826: DB::PipelineExecutor::executeImpl(unsigned long) @ 0x23ffefa1 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:09.959880 [ 48332 ] {} <Fatal> BaseDaemon: 24. /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:407: DB::PipelineExecutor::execute(unsigned long) @ 0x23ffe200 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.000175 [ 47262 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 873.62 MiB, peak 873.62 MiB, will set to 877.75 MiB (RSS), difference: 4.13 MiB\r\n2021.10.22 10:13:10.008295 [ 48332 ] {} <Fatal> BaseDaemon: 25. /mnt/ch/ClickHouse/src/Processors/Executors/CompletedPipelineExecutor.cpp:99: DB::CompletedPipelineExecutor::execute() @ 0x23ffa277 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.196791 [ 48332 ] {} <Fatal> BaseDaemon: 26. /mnt/ch/ClickHouse/src/Interpreters/executeQuery.cpp:1092: DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>, std::__1::optional<DB::FormatSettings> const&) @ 0x232551af in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.350532 [ 48332 ] {} <Fatal> BaseDaemon: 27. /mnt/ch/ClickHouse/src/Server/HTTPHandler.cpp:791: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::__1::optional<DB::CurrentThread::QueryScope>&) @ 0x23ef9741 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.443239 [ 47281 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 61 entries to flush up to offset 219\r\n2021.10.22 10:13:10.451157 [ 47281 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 357.69 GiB.\r\n2021.10.22 10:13:10.454227 [ 47281 ] {} <Trace> system.trace_log: Renaming temporary part tmp_insert_202110_5_5_0 to 202110_2907_2907_0.\r\n2021.10.22 10:13:10.454731 [ 47374 ] {} <Debug> system.trace_log (MergerMutator): Selected 2 parts from 202110_1839_2901_931 to 202110_2902_2902_0\r\n2021.10.22 10:13:10.454946 [ 47374 ] {} <Debug> DiskLocal: Reserving 2.00 MiB on disk `default`, having unreserved 357.69 GiB.\r\n2021.10.22 10:13:10.455311 [ 47281 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 219\r\n2021.10.22 10:13:10.455327 [ 47229 ] {system.trace_log::202110_1839_2902_932} <Debug> MergeTask::PrepareStage: Merging 2 parts: from 202110_1839_2901_931 to 202110_2902_2902_0 into Wide\r\n2021.10.22 10:13:10.455869 [ 47229 ] {system.trace_log::202110_1839_2902_932} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal\r\n2021.10.22 10:13:10.456279 [ 47229 ] {system.trace_log::202110_1839_2902_932} <Debug> MergeTreeSequentialSource: Reading 10 marks from part 202110_1839_2901_931, total 70947 rows starting from the beginning of the part\r\n2021.10.22 10:13:10.459600 [ 47229 ] {system.trace_log::202110_1839_2902_932} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202110_2902_2902_0, total 25 rows starting from the beginning of the part\r\n2021.10.22 10:13:10.528595 [ 48332 ] {} <Fatal> BaseDaemon: 28. /mnt/ch/ClickHouse/src/Server/HTTPHandler.cpp:929: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x23efc3fd in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.581845 [ 48332 ] {} <Fatal> BaseDaemon: 29. /mnt/ch/ClickHouse/src/Server/HTTP/HTTPServerConnection.cpp:58: DB::HTTPServerConnection::run() @ 0x23f98a3e in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.589436 [ 47229 ] {system.trace_log::202110_1839_2902_932} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 70972 rows, containing 10 columns (10 merged, 0 gathered) in 0.134272352 sec., 528567.4894560572 rows/sec., 165.81 MiB/sec.\r\n2021.10.22 10:13:10.607058 [ 47229 ] {system.trace_log::202110_1839_2902_932} <Trace> system.trace_log: Renaming temporary part tmp_merge_202110_1839_2902_932 to 202110_1839_2902_932.\r\n2021.10.22 10:13:10.607296 [ 47229 ] {system.trace_log::202110_1839_2902_932} <Trace> system.trace_log (MergerMutator): Merged 2 parts: from 202110_1839_2901_931 to 202110_2902_2902_0\r\n2021.10.22 10:13:10.607528 [ 47229 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 33.75 MiB.\r\n2021.10.22 10:13:10.622573 [ 48332 ] {} <Fatal> BaseDaemon: 30. /mnt/ch/ClickHouse/contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x28981439 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.674286 [ 48332 ] {} <Fatal> BaseDaemon: 31. /mnt/ch/ClickHouse/contrib/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x28981cd4 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.729232 [ 48332 ] {} <Fatal> BaseDaemon: 32. /mnt/ch/ClickHouse/contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x28ae6da1 in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.783658 [ 48332 ] {} <Fatal> BaseDaemon: 33. /mnt/ch/ClickHouse/contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x28ae33da in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.837235 [ 48332 ] {} <Fatal> BaseDaemon: 34. /mnt/ch/ClickHouse/contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x28ae205a in /mnt/ch/ClickHouse/build_asserts/programs/clickhouse\r\n2021.10.22 10:13:10.837346 [ 48332 ] {} <Fatal> BaseDaemon: 35. start_thread @ 0x9259 in /usr/lib/libpthread-2.33.so\r\n2021.10.22 10:13:10.837420 [ 48332 ] {} <Fatal> BaseDaemon: 36. __clone @ 0xfe5e3 in /usr/lib/libc-2.33.so\r\n2021.10.22 10:13:11.000183 [ 47262 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 880.91 MiB, peak 911.50 MiB, will set to 919.26 MiB (RSS), difference: 38.35 MiB\r\n2021.10.22 10:13:11.548855 [ 47285 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 39\r\n2021.10.22 10:13:11.718415 [ 47285 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 357.69 GiB.\r\n2021.10.22 10:13:11.760686 [ 48332 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: 36C345C2082FB6C40E74309859D6C9B6. There is no information about the reference checksum.\r\n```\r\n\r\n\nAlso can be related to #29321\r\nIt's interesting that there is new Map data type in all stacktraces \r\n\nLooked like a data race, so I've run it under TSAN and it seems like it:\r\n\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=127209)\r\n  Write of size 8 at 0x7b080028b9d8 by thread T95 (mutexes: write M1017219):\r\n    #0 boost::intrusive_ptr<DB::IColumn const>::intrusive_ptr(boost::intrusive_ptr<DB::IColumn const>&&) /mnt/ch/ClickHouse/contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:117:16 (clickhouse+0xa0d10f4)\r\n    #1 COW<DB::IColumn>::immutable_ptr<DB::IColumn>::immutable_ptr(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&&) /mnt/ch/ClickHouse/src/Common/COW.h:135:9 (clickhouse+0xa0d10f4)\r\n    #2 COW<DB::IColumn>::chameleon_ptr<DB::IColumn>::detach() && /mnt/ch/ClickHouse/src/Common/COW.h:221:47 (clickhouse+0xa0d10f4)\r\n    #3 DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>)::'lambda'(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)::operator()(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&) const /mnt/ch/ClickHouse/src/Columns/IColumn.h:398:109 (clickhouse+0xa0d10f4)\r\n    #4 decltype(std::__1::forward<DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>)::'lambda'(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)&>(fp)(std::__1::forward<COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&>(fp0))) std::__1::__invoke<DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>)::'lambda'(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)&, COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&>(DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>)::'lambda'(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)&, COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0xa0d10f4)\r\n    #5 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>)::'lambda'(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)&, COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&>(DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>)::'lambda'(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)&, COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0xa0d10f4)\r\n    #6 std::__1::__function::__default_alloc_func<DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>)::'lambda'(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&), void (COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)>::operator()(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0xa0d10a0)\r\n    #7 void std::__1::__function::__policy_invoker<void (COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)>::__call_impl<std::__1::__function::__default_alloc_func<DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>)::'lambda'(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&), void (COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)> >(std::__1::__function::__policy_storage const*, COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0xa0d10a0)\r\n    #8 std::__1::__function::__policy_func<void (COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)>::operator()(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&) const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x16c0ad72)\r\n    #9 std::__1::function<void (COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)>::operator()(COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&) const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x16c0ad72)\r\n    #10 DB::ColumnArray::forEachSubcolumn(std::__1::function<void (COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)>) /mnt/ch/ClickHouse/src/Columns/ColumnArray.h:135:9 (clickhouse+0x16c0ad72)\r\n    #11 DB::ColumnMap::forEachSubcolumn(std::__1::function<void (COW<DB::IColumn>::chameleon_ptr<DB::IColumn>&)>) /mnt/ch/ClickHouse/src/Columns/ColumnMap.cpp:266:13 (clickhouse+0x16ccb8c1)\r\n    #12 DB::IColumn::mutate(COW<DB::IColumn>::immutable_ptr<DB::IColumn>) /mnt/ch/ClickHouse/src/Columns/IColumn.h:398:14 (clickhouse+0xa0d0fa9)\r\n    #13 DB::appendBlock(DB::Block const&, DB::Block&) /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:470:24 (clickhouse+0x1717843f)\r\n    #14 DB::BufferSink::insertIntoBuffer(DB::Block const&, DB::StorageBuffer::Buffer&) /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:636:9 (clickhouse+0x1717843f)\r\n    #15 DB::BufferSink::consume(DB::Chunk) /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:597:9 (clickhouse+0x17177ebb)\r\n    #16 DB::SinkToStorage::transform(DB::Chunk&) /mnt/ch/ClickHouse/src/Processors/Sinks/SinkToStorage.cpp:18:5 (clickhouse+0x179b7827)\r\n    #17 DB::ExceptionKeepingTransform::work()::$_1::operator()() const /mnt/ch/ClickHouse/src/Processors/Transforms/ExceptionKeepingTransform.cpp:135:47 (clickhouse+0x1792ad38)\r\n    #18 decltype(std::__1::forward<DB::ExceptionKeepingTransform::work()::$_1&>(fp)()) std::__1::__invoke<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x1792ad38)\r\n    #19 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x1792ad38)\r\n    #20 std::__1::__function::__default_alloc_func<DB::ExceptionKeepingTransform::work()::$_1, void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x1792ad38)\r\n    #21 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::ExceptionKeepingTransform::work()::$_1, void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x1792ad38)\r\n    #22 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x1792aafd)\r\n    #23 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x1792aafd)\r\n    #24 DB::runStep(std::__1::function<void ()>, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) /mnt/ch/ClickHouse/src/Processors/Transforms/ExceptionKeepingTransform.cpp:102:9 (clickhouse+0x1792aafd)\r\n    #25 DB::ExceptionKeepingTransform::work() /mnt/ch/ClickHouse/src/Processors/Transforms/ExceptionKeepingTransform.cpp:135:30 (clickhouse+0x1792a5f4)\r\n    #26 DB::executeJob(DB::IProcessor*) /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:88:20 (clickhouse+0x1772fcce)\r\n    #27 DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0::operator()() const /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:105:13 (clickhouse+0x1772fcce)\r\n    #28 decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x1772fcce)\r\n    #29 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x1772fcce)\r\n    #30 std::__1::__function::__default_alloc_func<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0, void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x1772fcce)\r\n    #31 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0, void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x1772fcce)\r\n    #32 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x1772dbea)\r\n    #33 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x1772dbea)\r\n    #34 DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:599:17 (clickhouse+0x1772dbea)\r\n    #35 DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:440:5 (clickhouse+0x1772c4f8)\r\n    #36 DB::PushingPipelineExecutor::finish() /mnt/ch/ClickHouse/src/Processors/Executors/PushingPipelineExecutor.cpp:119:19 (clickhouse+0x17742d69)\r\n    #37 DB::SystemLog<DB::QueryLogElement>::flushImpl(std::__1::vector<DB::QueryLogElement, std::__1::allocator<DB::QueryLogElement> > const&, unsigned long) /mnt/ch/ClickHouse/src/Interpreters/SystemLog.h:496:18 (clickhouse+0x16a49ae1)\r\n    #38 DB::SystemLog<DB::QueryLogElement>::savingThreadFunction() /mnt/ch/ClickHouse/src/Interpreters/SystemLog.h:438:17 (clickhouse+0x16a4831a)\r\n    #39 DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()::operator()() const /mnt/ch/ClickHouse/src/Interpreters/SystemLog.h:242:51 (clickhouse+0x16a480a1)\r\n    #40 decltype(std::__1::forward<DB::QueryLogElement>(fp)(std::__1::forward<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&>(fp0)...)) std::__1::__invoke_constexpr<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x16a480a1)\r\n    #41 decltype(auto) std::__1::__apply_tuple_impl<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&, std::__1::tuple<>&>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&, std::__1::__tuple_indices<std::__1::tuple<>&...>) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1415:1 (clickhouse+0x16a480a1)\r\n    #42 decltype(auto) std::__1::apply<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&, std::__1::tuple<>&>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1424:1 (clickhouse+0x16a480a1)\r\n    #43 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'()::operator()() /mnt/ch/ClickHouse/src/Common/ThreadPool.h:188:13 (clickhouse+0x16a480a1)\r\n    #44 decltype(std::__1::forward<DB::QueryLogElement>(fp)(std::__1::forward<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(fp0)...)) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'()&>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x16a47f41)\r\n    #45 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'()&>(DB::QueryLogElement&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x16a47f41)\r\n    #46 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'(), void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x16a47f41)\r\n    #47 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x16a47f41)\r\n    #48 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f82c43)\r\n    #49 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f82c43)\r\n    #50 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f82c43)\r\n    #51 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f86508)\r\n    #52 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f86508)\r\n    #53 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:280:5 (clickhouse+0x9f86508)\r\n    #54 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:291:5 (clickhouse+0x9f86508)\r\n\r\n  Previous read of size 8 at 0x7b080028b9d8 by thread T232:\r\n    #0 boost::intrusive_ptr<DB::IColumn const>::operator*() const /mnt/ch/ClickHouse/contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:194:17 (clickhouse+0x15e599d1)\r\n    #1 COW<DB::IColumn>::chameleon_ptr<DB::IColumn>::operator*() const /mnt/ch/ClickHouse/src/Common/COW.h:214:46 (clickhouse+0x15e599d1)\r\n    #2 DB::ColumnArray::getOffsets() const /mnt/ch/ClickHouse/src/Columns/ColumnArray.h:115:51 (clickhouse+0x15e599d1)\r\n    #3 void DB::SerializationMap::serializeTextImpl<DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const::$_0&, DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const::$_0&>(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const::$_0&, DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const::$_0&) const /mnt/ch/ClickHouse/src/DataTypes/Serializations/SerializationMap.cpp:96:41 (clickhouse+0x15e599d1)\r\n    #4 DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const /mnt/ch/ClickHouse/src/DataTypes/Serializations/SerializationMap.cpp:176:5 (clickhouse+0x15e599d1)\r\n    #5 DB::SimpleTextSerialization::serializeTextEscaped(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const /mnt/ch/ClickHouse/src/DataTypes/Serializations/SimpleTextSerialization.h:16:9 (clickhouse+0xa12dd45)\r\n    #6 DB::TabSeparatedRowOutputFormat::writeField(DB::IColumn const&, DB::ISerialization const&, unsigned long) /mnt/ch/ClickHouse/src/Processors/Formats/Impl/TabSeparatedRowOutputFormat.cpp:48:19 (clickhouse+0x178cbc34)\r\n    #7 DB::IRowOutputFormat::write(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, unsigned long) /mnt/ch/ClickHouse/src/Processors/Formats/IRowOutputFormat.cpp:95:9 (clickhouse+0x1779f73f)\r\n    #8 DB::IRowOutputFormat::consume(DB::Chunk) /mnt/ch/ClickHouse/src/Processors/Formats/IRowOutputFormat.cpp:35:9 (clickhouse+0x1779ef03)\r\n    #9 DB::ParallelFormattingOutputFormat::formatterThreadFunction(unsigned long, std::__1::shared_ptr<DB::ThreadGroupStatus> const&) /mnt/ch/ClickHouse/src/Processors/Formats/Impl/ParallelFormattingOutputFormat.cpp:179:32 (clickhouse+0x1780efa2)\r\n    #10 DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long)::'lambda'()::operator()() const /mnt/ch/ClickHouse/src/Processors/Formats/Impl/ParallelFormattingOutputFormat.h:209:13 (clickhouse+0x178102e4)\r\n    #11 decltype(std::__1::forward<DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long)::'lambda'()&>(fp)()) std::__1::__invoke<DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long)::'lambda'()&>(DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long)::'lambda'()&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x178102e4)\r\n    #12 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long)::'lambda'()&>(DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long)::'lambda'()&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x178102e4)\r\n    #13 std::__1::__function::__default_alloc_func<DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long)::'lambda'(), void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x178102e4)\r\n    #14 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x178102e4)\r\n    #15 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f85474)\r\n    #16 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f85474)\r\n    #17 ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f85474)\r\n    #18 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f87e31)\r\n    #19 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(fp0)...)) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x9f87e31)\r\n    #20 decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::__tuple_indices<std::__1::tuple<>&...>) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1415:1 (clickhouse+0x9f87e31)\r\n    #21 decltype(auto) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1424:1 (clickhouse+0x9f87e31)\r\n    #22 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() /mnt/ch/ClickHouse/src/Common/ThreadPool.h:188:13 (clickhouse+0x9f87e31)\r\n    #23 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f87cc1)\r\n    #24 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()&>(void&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x9f87cc1)\r\n    #25 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'(), void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x9f87cc1)\r\n    #26 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x9f87cc1)\r\n    #27 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f82c43)\r\n    #28 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f82c43)\r\n    #29 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f82c43)\r\n    #30 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f86508)\r\n    #31 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f86508)\r\n    #32 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:280:5 (clickhouse+0x9f86508)\r\n    #33 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:291:5 (clickhouse+0x9f86508)\r\n\r\n  Location is heap block of size 32 at 0x7b080028b9c0 allocated by thread T95:\r\n    #0 operator new(unsigned long) <null> (clickhouse+0x9ef82ee)\r\n    #1 COW<DB::IColumn>::mutable_ptr<DB::ColumnArray> COWHelper<DB::IColumn, DB::ColumnArray>::create<COW<DB::IColumn>::mutable_ptr<DB::IColumn> >(COW<DB::IColumn>::mutable_ptr<DB::IColumn>&&) /mnt/ch/ClickHouse/src/Common/COW.h:285:67 (clickhouse+0x16bf4486)\r\n    #2 COW<DB::IColumn>::mutable_ptr<DB::ColumnArray> DB::ColumnArray::create<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, void>(COW<DB::IColumn>::mutable_ptr<DB::IColumn>&&) /mnt/ch/ClickHouse/src/Columns/ColumnArray.h:50:56 (clickhouse+0x16bf4486)\r\n    #3 DB::ColumnArray::cloneResized(unsigned long) const /mnt/ch/ClickHouse/src/Columns/ColumnArray.cpp:87:16 (clickhouse+0x16bf4486)\r\n    #4 DB::IColumn::cloneEmpty() const /mnt/ch/ClickHouse/src/Columns/IColumn.h:71:52 (clickhouse+0x15ded3ab)\r\n    #5 DB::ColumnMap::cloneEmpty() const /mnt/ch/ClickHouse/src/Columns/ColumnMap.cpp:57:38 (clickhouse+0x16cc976a)\r\n    #6 DB::ColumnWithTypeAndName::cloneEmpty() const /mnt/ch/ClickHouse/src/Core/ColumnWithTypeAndName.cpp:16:30 (clickhouse+0x15ac001b)\r\n    #7 DB::Block::cloneEmpty() const /mnt/ch/ClickHouse/src/Core/Block.cpp:396:25 (clickhouse+0x15ab36e7)\r\n    #8 DB::BufferSink::insertIntoBuffer(DB::Block const&, DB::StorageBuffer::Buffer&) /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:615:40 (clickhouse+0x17178603)\r\n    #9 DB::BufferSink::consume(DB::Chunk) /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:597:9 (clickhouse+0x17177ebb)\r\n    #10 DB::SinkToStorage::transform(DB::Chunk&) /mnt/ch/ClickHouse/src/Processors/Sinks/SinkToStorage.cpp:18:5 (clickhouse+0x179b7827)\r\n    #11 DB::ExceptionKeepingTransform::work()::$_1::operator()() const /mnt/ch/ClickHouse/src/Processors/Transforms/ExceptionKeepingTransform.cpp:135:47 (clickhouse+0x1792ad38)\r\n    #12 decltype(std::__1::forward<DB::ExceptionKeepingTransform::work()::$_1&>(fp)()) std::__1::__invoke<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x1792ad38)\r\n    #13 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x1792ad38)\r\n    #14 std::__1::__function::__default_alloc_func<DB::ExceptionKeepingTransform::work()::$_1, void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x1792ad38)\r\n    #15 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::ExceptionKeepingTransform::work()::$_1, void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x1792ad38)\r\n    #16 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x1792aafd)\r\n    #17 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x1792aafd)\r\n    #18 DB::runStep(std::__1::function<void ()>, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) /mnt/ch/ClickHouse/src/Processors/Transforms/ExceptionKeepingTransform.cpp:102:9 (clickhouse+0x1792aafd)\r\n    #19 DB::ExceptionKeepingTransform::work() /mnt/ch/ClickHouse/src/Processors/Transforms/ExceptionKeepingTransform.cpp:135:30 (clickhouse+0x1792a5f4)\r\n    #20 DB::executeJob(DB::IProcessor*) /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:88:20 (clickhouse+0x1772fcce)\r\n    #21 DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0::operator()() const /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:105:13 (clickhouse+0x1772fcce)\r\n    #22 decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x1772fcce)\r\n    #23 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x1772fcce)\r\n    #24 std::__1::__function::__default_alloc_func<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0, void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x1772fcce)\r\n    #25 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0, void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x1772fcce)\r\n    #26 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x1772dbea)\r\n    #27 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x1772dbea)\r\n    #28 DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:599:17 (clickhouse+0x1772dbea)\r\n    #29 DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) /mnt/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:440:5 (clickhouse+0x1772c4f8)\r\n    #30 DB::PushingPipelineExecutor::finish() /mnt/ch/ClickHouse/src/Processors/Executors/PushingPipelineExecutor.cpp:119:19 (clickhouse+0x17742d69)\r\n    #31 DB::SystemLog<DB::QueryLogElement>::flushImpl(std::__1::vector<DB::QueryLogElement, std::__1::allocator<DB::QueryLogElement> > const&, unsigned long) /mnt/ch/ClickHouse/src/Interpreters/SystemLog.h:496:18 (clickhouse+0x16a49ae1)\r\n    #32 DB::SystemLog<DB::QueryLogElement>::savingThreadFunction() /mnt/ch/ClickHouse/src/Interpreters/SystemLog.h:438:17 (clickhouse+0x16a4831a)\r\n    #33 DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()::operator()() const /mnt/ch/ClickHouse/src/Interpreters/SystemLog.h:242:51 (clickhouse+0x16a480a1)\r\n    #34 decltype(std::__1::forward<DB::QueryLogElement>(fp)(std::__1::forward<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&>(fp0)...)) std::__1::__invoke_constexpr<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x16a480a1)\r\n    #35 decltype(auto) std::__1::__apply_tuple_impl<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&, std::__1::tuple<>&>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&, std::__1::__tuple_indices<std::__1::tuple<>&...>) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1415:1 (clickhouse+0x16a480a1)\r\n    #36 decltype(auto) std::__1::apply<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&, std::__1::tuple<>&>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1424:1 (clickhouse+0x16a480a1)\r\n    #37 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'()::operator()() /mnt/ch/ClickHouse/src/Common/ThreadPool.h:188:13 (clickhouse+0x16a480a1)\r\n    #38 decltype(std::__1::forward<DB::QueryLogElement>(fp)(std::__1::forward<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(fp0)...)) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'()&>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x16a47f41)\r\n    #39 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'()&>(DB::QueryLogElement&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x16a47f41)\r\n    #40 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'(), void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x16a47f41)\r\n    #41 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()>(DB::QueryLogElement&&, DB::SystemLog<DB::QueryLogElement>::startup()::'lambda'()&&...)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x16a47f41)\r\n    #42 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f82c43)\r\n    #43 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f82c43)\r\n    #44 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f82c43)\r\n    #45 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f86508)\r\n    #46 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f86508)\r\n    #47 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:280:5 (clickhouse+0x9f86508)\r\n    #48 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:291:5 (clickhouse+0x9f86508)\r\n\r\n  Mutex M1017219 (0x7b2000080ad0) created at:\r\n    #0 pthread_mutex_lock <null> (clickhouse+0x9e9be28)\r\n    #1 std::__1::__libcpp_mutex_lock(pthread_mutex_t*) /mnt/ch/ClickHouse/contrib/libcxx/include/__threading_support:405:10 (clickhouse+0x1db495b9)\r\n    #2 std::__1::mutex::lock() /mnt/ch/ClickHouse/contrib/libcxx/src/mutex.cpp:33:14 (clickhouse+0x1db495b9)\r\n    #3 std::__1::unique_lock<std::__1::mutex>::lock() /mnt/ch/ClickHouse/contrib/libcxx/include/__mutex_base:207:11 (clickhouse+0x1716fae1)\r\n    #4 DB::StorageBuffer::Buffer::lockImpl(bool) const /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:92:10 (clickhouse+0x1716fae1)\r\n    #5 DB::StorageBuffer::Buffer::lockForReading() const /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:76:12 (clickhouse+0x1716fae1)\r\n    #6 DB::StorageBuffer::flushBuffer(DB::StorageBuffer::Buffer&, bool, bool, bool) /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:818:29 (clickhouse+0x1716fae1)\r\n    #7 DB::StorageBuffer::flushAllBuffers(bool, bool) /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:803:9 (clickhouse+0x17173125)\r\n    #8 DB::StorageBuffer::backgroundFlush() /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:971:9 (clickhouse+0x17173125)\r\n    #9 DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool)::$_1::operator()() const /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:134:68 (clickhouse+0x171742e1)\r\n    #10 decltype(std::__1::forward<DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool)::$_1&>(fp)()) std::__1::__invoke<DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool)::$_1&>(DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool)::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x171742e1)\r\n    #11 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool)::$_1&>(DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool)::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x171742e1)\r\n    #12 std::__1::__function::__default_alloc_func<DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool)::$_1, void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x171742e1)\r\n    #13 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool)::$_1, void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x171742e1)\r\n    #14 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x1605fcf8)\r\n    #15 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x1605fcf8)\r\n    #16 DB::BackgroundSchedulePoolTaskInfo::execute() /mnt/ch/ClickHouse/src/Core/BackgroundSchedulePool.cpp:106:5 (clickhouse+0x1605fcf8)\r\n    #17 DB::TaskNotification::execute() /mnt/ch/ClickHouse/src/Core/BackgroundSchedulePool.cpp:19:28 (clickhouse+0x16061feb)\r\n    #18 DB::BackgroundSchedulePool::threadFunction() /mnt/ch/ClickHouse/src/Core/BackgroundSchedulePool.cpp:265:31 (clickhouse+0x16061feb)\r\n    #19 DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1::operator()() const /mnt/ch/ClickHouse/src/Core/BackgroundSchedulePool.cpp:161:48 (clickhouse+0x160628e1)\r\n    #20 decltype(std::__1::forward<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&>(fp)()) std::__1::__invoke_constexpr<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x160628e1)\r\n    #21 decltype(auto) std::__1::__apply_tuple_impl<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&, std::__1::tuple<>&>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&, std::__1::tuple<>&, std::__1::__tuple_indices<>) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1415:1 (clickhouse+0x160628e1)\r\n    #22 decltype(auto) std::__1::apply<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&, std::__1::tuple<>&>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&, std::__1::tuple<>&) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1424:1 (clickhouse+0x160628e1)\r\n    #23 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&&)::'lambda'()::operator()() /mnt/ch/ClickHouse/src/Common/ThreadPool.h:188:13 (clickhouse+0x160628e1)\r\n    #24 decltype(std::__1::forward<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&&)::'lambda'()&>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x160628e1)\r\n    #25 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&&)::'lambda'()&>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x160628e1)\r\n    #26 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&&)::'lambda'(), void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x160628e1)\r\n    #27 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_1&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x160628e1)\r\n    #28 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f82c43)\r\n    #29 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f82c43)\r\n    #30 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f82c43)\r\n    #31 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f86508)\r\n    #32 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f86508)\r\n    #33 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:280:5 (clickhouse+0x9f86508)\r\n    #34 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:291:5 (clickhouse+0x9f86508)\r\n\r\n  Thread T95 'SystemLogFlush' (tid=127332, running) created by thread T63 at:\r\n    #0 pthread_create <null> (clickhouse+0x9eb064e)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) /mnt/ch/ClickHouse/contrib/libcxx/include/__threading_support:509:10 (clickhouse+0x9f85f13)\r\n    #2 std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'(), void>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:307:16 (clickhouse+0x9f85f13)\r\n    #3 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:35 (clickhouse+0x9f81192)\r\n    #4 ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:171:5 (clickhouse+0x9f81b54)\r\n    #5 ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_2>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*)::$_2&&) /mnt/ch/ClickHouse/src/Common/ThreadPool.h:169:38 (clickhouse+0x16060e0a)\r\n    #6 DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, unsigned long, char const*) /mnt/ch/ClickHouse/src/Core/BackgroundSchedulePool.cpp:163:22 (clickhouse+0x16060e0a)\r\n    #7 void std::__1::__optional_storage_base<DB::BackgroundSchedulePool, false>::__construct<DB::SettingFieldNumber<unsigned long> const&, unsigned long const&, char const (&) [13]>(DB::SettingFieldNumber<unsigned long> const&, unsigned long const&, char const (&) [13]) /mnt/ch/ClickHouse/contrib/libcxx/include/optional:324:55 (clickhouse+0x16012128)\r\n    #8 DB::BackgroundSchedulePool& std::__1::optional<DB::BackgroundSchedulePool>::emplace<DB::SettingFieldNumber<unsigned long> const&, unsigned long const&, char const (&) [13], void>(DB::SettingFieldNumber<unsigned long> const&, unsigned long const&, char const (&) [13]) /mnt/ch/ClickHouse/contrib/libcxx/include/optional:830:15 (clickhouse+0x16012128)\r\n    #9 DB::Context::getBufferFlushSchedulePool() const /mnt/ch/ClickHouse/src/Interpreters/Context.cpp:1678:44 (clickhouse+0x16012128)\r\n    #10 DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool) /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:126:29 (clickhouse+0x171697bb)\r\n    #11 std::__1::shared_ptr<DB::StorageBuffer> shared_ptr_helper<DB::StorageBuffer>::create<DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, unsigned long&, DB::StorageBuffer::Thresholds&, DB::StorageBuffer::Thresholds&, DB::StorageBuffer::Thresholds&, DB::StorageID&, bool>(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>&&, unsigned long&, DB::StorageBuffer::Thresholds&, DB::StorageBuffer::Thresholds&, DB::StorageBuffer::Thresholds&, DB::StorageID&, bool&&) /mnt/ch/ClickHouse/base/base/../base/shared_ptr_helper.h:17:39 (clickhouse+0x17175248)\r\n    #12 DB::registerStorageBuffer(DB::StorageFactory&)::$_5::operator()(DB::StorageFactory::Arguments const&) const /mnt/ch/ClickHouse/src/Storages/StorageBuffer.cpp:1146:16 (clickhouse+0x17175248)\r\n    #13 decltype(std::__1::forward<DB::registerStorageBuffer(DB::StorageFactory&)::$_5&>(fp)(std::__1::forward<DB::StorageFactory::Arguments const&>(fp0))) std::__1::__invoke<DB::registerStorageBuffer(DB::StorageFactory&)::$_5&, DB::StorageFactory::Arguments const&>(DB::registerStorageBuffer(DB::StorageFactory&)::$_5&, DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x17175248)\r\n    #14 std::__1::shared_ptr<DB::IStorage> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IStorage> >::__call<DB::registerStorageBuffer(DB::StorageFactory&)::$_5&, DB::StorageFactory::Arguments const&>(DB::registerStorageBuffer(DB::StorageFactory&)::$_5&, DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:317:16 (clickhouse+0x17175248)\r\n    #15 std::__1::__function::__default_alloc_func<DB::registerStorageBuffer(DB::StorageFactory&)::$_5, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x17175248)\r\n    #16 std::__1::shared_ptr<DB::IStorage> std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::__call_impl<std::__1::__function::__default_alloc_func<DB::registerStorageBuffer(DB::StorageFactory&)::$_5, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)> >(std::__1::__function::__policy_storage const*, DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x17175248)\r\n    #17 std::__1::__function::__policy_func<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x16ee96e8)\r\n    #18 std::__1::function<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x16ee96e8)\r\n    #19 DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const /mnt/ch/ClickHouse/src/Storages/StorageFactory.cpp:215:16 (clickhouse+0x16ee96e8)\r\n    #20 DB::createTableFromAST(DB::ASTCreateQuery, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool) /mnt/ch/ClickHouse/src/Databases/DatabaseOnDisk.cpp:86:36 (clickhouse+0x15e90a97)\r\n    #21 DB::(anonymous namespace)::tryAttachTable(std::__1::shared_ptr<DB::Context>, DB::ASTCreateQuery const&, DB::DatabaseOrdinary&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool) /mnt/ch/ClickHouse/src/Databases/DatabaseOrdinary.cpp:46:40 (clickhouse+0x15eb68b6)\r\n    #22 DB::DatabaseOrdinary::loadTableFromMetadata(std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::QualifiedTableName const&, std::__1::shared_ptr<DB::IAST> const&, bool) /mnt/ch/ClickHouse/src/Databases/DatabaseOrdinary.cpp:231:5 (clickhouse+0x15eb68b6)\r\n    #23 DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1::operator()() const /mnt/ch/ClickHouse/src/Databases/TablesLoader.cpp:206:45 (clickhouse+0x15ee29d2)\r\n    #24 decltype(std::__1::forward<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&>(fp)()) std::__1::__invoke<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&>(DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x15ee29d2)\r\n    #25 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&>(DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x15ee29d2)\r\n    #26 std::__1::__function::__default_alloc_func<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1, void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x15ee29d2)\r\n    #27 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1, void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x15ee29d2)\r\n    #28 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f85474)\r\n    #29 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f85474)\r\n    #30 ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f85474)\r\n    #31 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f87e31)\r\n    #32 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(fp0)...)) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x9f87e31)\r\n    #33 decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::__tuple_indices<std::__1::tuple<>&...>) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1415:1 (clickhouse+0x9f87e31)\r\n    #34 decltype(auto) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1424:1 (clickhouse+0x9f87e31)\r\n    #35 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() /mnt/ch/ClickHouse/src/Common/ThreadPool.h:188:13 (clickhouse+0x9f87e31)\r\n    #36 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f87cc1)\r\n    #37 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()&>(void&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x9f87cc1)\r\n    #38 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'(), void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x9f87cc1)\r\n    #39 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x9f87cc1)\r\n    #40 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f82c43)\r\n    #41 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f82c43)\r\n    #42 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f82c43)\r\n    #43 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f86508)\r\n    #44 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f86508)\r\n    #45 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:280:5 (clickhouse+0x9f86508)\r\n    #46 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:291:5 (clickhouse+0x9f86508)\r\n\r\n  Thread T232 'Formatter' (tid=127469, running) created by thread T58 at:\r\n    #0 pthread_create <null> (clickhouse+0x9eb064e)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) /mnt/ch/ClickHouse/contrib/libcxx/include/__threading_support:509:10 (clickhouse+0x9f85f13)\r\n    #2 std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'(), void>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:307:16 (clickhouse+0x9f85f13)\r\n    #3 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:35 (clickhouse+0x9f81192)\r\n    #4 ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:171:5 (clickhouse+0x9f87787)\r\n    #5 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/src/Common/ThreadPool.h:169:38 (clickhouse+0x9f87787)\r\n    #6 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:35 (clickhouse+0x9f83881)\r\n    #7 ThreadPoolImpl<ThreadFromGlobalPool>::scheduleOrThrowOnError(std::__1::function<void ()>, int) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:159:5 (clickhouse+0x9f8342c)\r\n    #8 DB::MergeTreeData::loadDataParts(bool) /mnt/ch/ClickHouse/src/Storages/MergeTree/MergeTreeData.cpp:1201:14 (clickhouse+0x172e9f93)\r\n    #9 DB::StorageMergeTree::StorageMergeTree(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata const&, bool, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >, bool) /mnt/ch/ClickHouse/src/Storages/StorageMergeTree.cpp:87:5 (clickhouse+0x1754e814)\r\n    #10 std::__1::shared_ptr<DB::StorageMergeTree> shared_ptr_helper<DB::StorageMergeTree>::create<DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata&, bool const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >, bool const&>(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata&, bool const&, std::__1::shared_ptr<DB::Context>&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >&&, bool const&) /mnt/ch/ClickHouse/base/base/../base/shared_ptr_helper.h:17:39 (clickhouse+0x17547aef)\r\n    #11 DB::create(DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/src/Storages/MergeTree/registerStorageMergeTree.cpp:810:16 (clickhouse+0x17547aef)\r\n    #12 decltype(std::__1::forward<std::__1::shared_ptr<DB::IStorage> (*&)(DB::StorageFactory::Arguments const&)>(fp)(std::__1::forward<DB::StorageFactory::Arguments const&>(fp0))) std::__1::__invoke<std::__1::shared_ptr<DB::IStorage> (*&)(DB::StorageFactory::Arguments const&), DB::StorageFactory::Arguments const&>(std::__1::shared_ptr<DB::IStorage> (*&)(DB::StorageFactory::Arguments const&), DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x158eb8e2)\r\n    #13 std::__1::shared_ptr<DB::IStorage> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IStorage> >::__call<std::__1::shared_ptr<DB::IStorage> (*&)(DB::StorageFactory::Arguments const&), DB::StorageFactory::Arguments const&>(std::__1::shared_ptr<DB::IStorage> (*&)(DB::StorageFactory::Arguments const&), DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:317:16 (clickhouse+0x158eb8e2)\r\n    #14 std::__1::__function::__default_alloc_func<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&), std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x158eb8e2)\r\n    #15 std::__1::shared_ptr<DB::IStorage> std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&), std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)> >(std::__1::__function::__policy_storage const*, DB::StorageFactory::Arguments const&) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x158eb8e2)\r\n    #16 std::__1::__function::__policy_func<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x16ee96e8)\r\n    #17 std::__1::function<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x16ee96e8)\r\n    #18 DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const /mnt/ch/ClickHouse/src/Storages/StorageFactory.cpp:215:16 (clickhouse+0x16ee96e8)\r\n    #19 DB::createTableFromAST(DB::ASTCreateQuery, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool) /mnt/ch/ClickHouse/src/Databases/DatabaseOnDisk.cpp:86:36 (clickhouse+0x15e90a97)\r\n    #20 DB::(anonymous namespace)::tryAttachTable(std::__1::shared_ptr<DB::Context>, DB::ASTCreateQuery const&, DB::DatabaseOrdinary&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool) /mnt/ch/ClickHouse/src/Databases/DatabaseOrdinary.cpp:46:40 (clickhouse+0x15eb68b6)\r\n    #21 DB::DatabaseOrdinary::loadTableFromMetadata(std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::QualifiedTableName const&, std::__1::shared_ptr<DB::IAST> const&, bool) /mnt/ch/ClickHouse/src/Databases/DatabaseOrdinary.cpp:231:5 (clickhouse+0x15eb68b6)\r\n    #22 DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1::operator()() const /mnt/ch/ClickHouse/src/Databases/TablesLoader.cpp:206:45 (clickhouse+0x15ee29d2)\r\n    #23 decltype(std::__1::forward<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&>(fp)()) std::__1::__invoke<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&>(DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x15ee29d2)\r\n    #24 void std::__1::__invoke_void_return_wrapper<void>::__call<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&>(DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1&) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x15ee29d2)\r\n    #25 std::__1::__function::__default_alloc_func<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1, void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x15ee29d2)\r\n    #26 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::TablesLoader::startLoadingIndependentTables(ThreadPoolImpl<ThreadFromGlobalPool>&, unsigned long)::$_1, void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x15ee29d2)\r\n    #27 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f85474)\r\n    #28 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f85474)\r\n    #29 ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f85474)\r\n    #30 void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f87e31)\r\n    #31 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(fp0)...)) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3682:1 (clickhouse+0x9f87e31)\r\n    #32 decltype(auto) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::__tuple_indices<std::__1::tuple<>&...>) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1415:1 (clickhouse+0x9f87e31)\r\n    #33 decltype(auto) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&, std::__1::tuple<>&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&) /mnt/ch/ClickHouse/contrib/libcxx/include/tuple:1424:1 (clickhouse+0x9f87e31)\r\n    #34 ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() /mnt/ch/ClickHouse/src/Common/ThreadPool.h:188:13 (clickhouse+0x9f87e31)\r\n    #35 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()&>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f87cc1)\r\n    #36 void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()&>(void&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/__functional_base:348:9 (clickhouse+0x9f87cc1)\r\n    #37 std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'(), void ()>::operator()() /mnt/ch/ClickHouse/contrib/libcxx/include/functional:1608:12 (clickhouse+0x9f87cc1)\r\n    #38 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2089:16 (clickhouse+0x9f87cc1)\r\n    #39 std::__1::__function::__policy_func<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2221:16 (clickhouse+0x9f82c43)\r\n    #40 std::__1::function<void ()>::operator()() const /mnt/ch/ClickHouse/contrib/libcxx/include/functional:2560:12 (clickhouse+0x9f82c43)\r\n    #41 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:274:17 (clickhouse+0x9f82c43)\r\n    #42 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const /mnt/ch/ClickHouse/src/Common/ThreadPool.cpp:139:73 (clickhouse+0x9f86508)\r\n    #43 decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) /mnt/ch/ClickHouse/contrib/libcxx/include/type_traits:3676:1 (clickhouse+0x9f86508)\r\n    #44 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:280:5 (clickhouse+0x9f86508)\r\n    #45 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) /mnt/ch/ClickHouse/contrib/libcxx/include/thread:291:5 (clickhouse+0x9f86508)\r\n\r\nSUMMARY: ThreadSanitizer: data race /mnt/ch/ClickHouse/contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:117:16 in boost::intrusive_ptr<DB::IColumn const>::intrusive_ptr(boost::intrusive_ptr<DB::IColumn const>&&)\r\n==================\r\n```",
  "created_at": "2021-11-24T21:03:25Z",
  "modified_files": [
    "src/Columns/ColumnMap.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02124_buffer_with_type_map_long.reference",
    "b/tests/queries/0_stateless/02124_buffer_with_type_map_long.sh"
  ]
}