{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 30871,
  "instance_id": "ClickHouse__ClickHouse-30871",
  "issue_numbers": [
    "30870"
  ],
  "base_commit": "77d461609c97b973350b8c23abd3d2b301d580cf",
  "patch": "diff --git a/src/IO/ReadHelpers.cpp b/src/IO/ReadHelpers.cpp\nindex 5fe0fda88cd5..41dcd9fde6cc 100644\n--- a/src/IO/ReadHelpers.cpp\n+++ b/src/IO/ReadHelpers.cpp\n@@ -768,17 +768,6 @@ ReturnType readDateTextFallback(LocalDate & date, ReadBuffer & buf)\n         return ReturnType(false);\n     };\n \n-    auto ignore_delimiter = [&]\n-    {\n-        if (!buf.eof() && !isNumericASCII(*buf.position()))\n-        {\n-            ++buf.position();\n-            return true;\n-        }\n-        else\n-            return false;\n-    };\n-\n     auto append_digit = [&](auto & x)\n     {\n         if (!buf.eof() && isNumericASCII(*buf.position()))\n@@ -792,27 +781,44 @@ ReturnType readDateTextFallback(LocalDate & date, ReadBuffer & buf)\n     };\n \n     UInt16 year = 0;\n+    UInt8 month = 0;\n+    UInt8 day = 0;\n+\n     if (!append_digit(year)\n         || !append_digit(year) // NOLINT\n         || !append_digit(year) // NOLINT\n         || !append_digit(year)) // NOLINT\n         return error();\n \n-    if (!ignore_delimiter())\n+    if (buf.eof())\n         return error();\n \n-    UInt8 month = 0;\n-    if (!append_digit(month))\n-        return error();\n-    append_digit(month);\n+    if (isNumericASCII(*buf.position()))\n+    {\n+        /// YYYYMMDD\n+        if (!append_digit(month)\n+            || !append_digit(month) // NOLINT\n+            || !append_digit(day)\n+            || !append_digit(day)) // NOLINT\n+            return error();\n+    }\n+    else\n+    {\n+        ++buf.position();\n \n-    if (!ignore_delimiter())\n-        return error();\n+        if (!append_digit(month))\n+            return error();\n+        append_digit(month);\n \n-    UInt8 day = 0;\n-    if (!append_digit(day))\n-        return error();\n-    append_digit(day);\n+        if (!buf.eof() && !isNumericASCII(*buf.position()))\n+            ++buf.position();\n+        else\n+            return error();\n+\n+        if (!append_digit(day))\n+            return error();\n+        append_digit(day);\n+    }\n \n     date = LocalDate(year, month, day);\n     return ReturnType(true);\ndiff --git a/src/IO/ReadHelpers.h b/src/IO/ReadHelpers.h\nindex fda8c213ebf6..81973bcd8a4d 100644\n--- a/src/IO/ReadHelpers.h\n+++ b/src/IO/ReadHelpers.h\n@@ -597,35 +597,45 @@ inline ReturnType readDateTextImpl(LocalDate & date, ReadBuffer & buf)\n         /// YYYY-MM-D\n         /// YYYY-M-DD\n         /// YYYY-M-D\n+        /// YYYYMMDD\n \n         /// The delimiters can be arbitrary characters, like YYYY/MM!DD, but obviously not digits.\n \n         UInt16 year = (pos[0] - '0') * 1000 + (pos[1] - '0') * 100 + (pos[2] - '0') * 10 + (pos[3] - '0');\n+        UInt8 month;\n+        UInt8 day;\n         pos += 5;\n \n         if (isNumericASCII(pos[-1]))\n-            return ReturnType(false);\n-\n-        UInt8 month = pos[0] - '0';\n-        if (isNumericASCII(pos[1]))\n         {\n-            month = month * 10 + pos[1] - '0';\n+            /// YYYYMMDD\n+            month = (pos[-1] - '0') * 10 + (pos[0] - '0');\n+            day = (pos[1] - '0') * 10 + (pos[2] - '0');\n             pos += 3;\n         }\n         else\n-            pos += 2;\n+        {\n+            month = pos[0] - '0';\n+            if (isNumericASCII(pos[1]))\n+            {\n+                month = month * 10 + pos[1] - '0';\n+                pos += 3;\n+            }\n+            else\n+                pos += 2;\n \n-        if (isNumericASCII(pos[-1]))\n-            return ReturnType(false);\n+            if (isNumericASCII(pos[-1]))\n+                return ReturnType(false);\n \n-        UInt8 day = pos[0] - '0';\n-        if (isNumericASCII(pos[1]))\n-        {\n-            day = day * 10 + pos[1] - '0';\n-            pos += 2;\n+            day = pos[0] - '0';\n+            if (isNumericASCII(pos[1]))\n+            {\n+                day = day * 10 + pos[1] - '0';\n+                pos += 2;\n+            }\n+            else\n+                pos += 1;\n         }\n-        else\n-            pos += 1;\n \n         buf.position() = pos;\n         date = LocalDate(year, month, day);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01073_bad_alter_partition.reference b/tests/queries/0_stateless/01073_bad_alter_partition.reference\nindex 9008cf749445..580df2ddf089 100644\n--- a/tests/queries/0_stateless/01073_bad_alter_partition.reference\n+++ b/tests/queries/0_stateless/01073_bad_alter_partition.reference\n@@ -1,3 +1,25 @@\n+1\t2020-01-01\n 1\t2020-01-02\n+1\t2020-01-03\n+1\t2020-01-04\n+1\t2020-01-05\n+1\t2020-01-06\n+3\t2020-01-01\n 3\t2020-01-02\n+3\t2020-01-03\n+3\t2020-01-04\n+3\t2020-01-05\n+3\t2020-01-06\n+4\t2020-01-01\n 4\t2020-01-02\n+4\t2020-01-03\n+4\t2020-01-05\n+4\t2020-01-06\n+5\t2020-01-01\n+5\t2020-01-02\n+5\t2020-01-03\n+5\t2020-01-06\n+6\t2020-01-01\n+6\t2020-01-02\n+6\t2020-01-03\n+6\t2020-01-06\ndiff --git a/tests/queries/0_stateless/01073_bad_alter_partition.sql b/tests/queries/0_stateless/01073_bad_alter_partition.sql\nindex 58fc39fd68b5..2e3cd47d6a01 100644\n--- a/tests/queries/0_stateless/01073_bad_alter_partition.sql\n+++ b/tests/queries/0_stateless/01073_bad_alter_partition.sql\n@@ -1,19 +1,22 @@\n DROP TABLE IF EXISTS merge_tree;\n CREATE TABLE merge_tree (d Date) ENGINE = MergeTree ORDER BY d PARTITION BY d;\n \n-INSERT INTO merge_tree VALUES ('2020-01-02');\n-SELECT 1, * FROM merge_tree;\n+INSERT INTO merge_tree VALUES ('2020-01-01'), ('2020-01-02'), ('2020-01-03'), ('2020-01-04'), ('2020-01-05'), ('2020-01-06');\n+SELECT 1, * FROM merge_tree ORDER BY d;\n \n -- ALTER TABLE merge_tree DROP PARTITION 2020-01-02; -- This does not even parse\n -- SELECT 2, * FROM merge_tree;\n \n-ALTER TABLE merge_tree DROP PARTITION 20200102;\n-SELECT 3, * FROM merge_tree;\n+ALTER TABLE merge_tree DROP PARTITION 20200103; -- unfortunately, this works, but not as user expected.\n+SELECT 3, * FROM merge_tree ORDER BY d;\n \n-ALTER TABLE merge_tree DROP PARTITION '20200102'; -- { serverError 38 }\n-SELECT 4, * FROM merge_tree;\n+ALTER TABLE merge_tree DROP PARTITION '20200104';\n+SELECT 4, * FROM merge_tree ORDER BY d;\n \n-ALTER TABLE merge_tree DROP PARTITION '2020-01-02';\n-SELECT 5, * FROM merge_tree;\n+ALTER TABLE merge_tree DROP PARTITION '2020-01-05';\n+SELECT 5, * FROM merge_tree ORDER BY d;\n+\n+ALTER TABLE merge_tree DROP PARTITION '202001-06'; -- { serverError 38 }\n+SELECT 6, * FROM merge_tree ORDER BY d;\n \n DROP TABLE merge_tree;\ndiff --git a/tests/queries/0_stateless/02112_parse_date_yyyymmdd.reference b/tests/queries/0_stateless/02112_parse_date_yyyymmdd.reference\nnew file mode 100644\nindex 000000000000..dc49af313b77\n--- /dev/null\n+++ b/tests/queries/0_stateless/02112_parse_date_yyyymmdd.reference\n@@ -0,0 +1,1 @@\n+2021-02-03\t2021-03-04\t2021-04-05\ndiff --git a/tests/queries/0_stateless/02112_parse_date_yyyymmdd.sh b/tests/queries/0_stateless/02112_parse_date_yyyymmdd.sh\nnew file mode 100755\nindex 000000000000..0c18697eb06a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02112_parse_date_yyyymmdd.sh\n@@ -0,0 +1,7 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+echo '20210203,2021-03-04,20210405' | $CLICKHOUSE_LOCAL --input-format CSV --structure 'a Date, b Date, c Date' --query 'SELECT * FROM table'\n",
  "problem_statement": "Cannot parse `Date` in form of YYYYMMDD from CSV.\n```\r\n$ echo '20210101,A' | clickhouse-local --input-format CSV --structure 'd Date, s String' --query \"SELECT * FROM table\"\r\nCode: 27. DB::Exception: Cannot parse input: expected ',' before: '20210101,A\\n': \r\nRow 1:\r\nColumn 0,   name: d, type: Date,   ERROR: text \"20210101,A\" is not like Date\r\n\r\n: While executing ParallelParsingBlockInputFormat: While executing File. (CANNOT_PARSE_INPUT_ASSERTION_FAILED)\r\n```\r\n\r\n**How to solve**\r\n\r\nDisambiguate while parsing by absense of separators between YYYY-MM-DD.\n",
  "hints_text": "",
  "created_at": "2021-10-29T21:30:54Z"
}