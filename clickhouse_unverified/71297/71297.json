{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 71297,
  "instance_id": "ClickHouse__ClickHouse-71297",
  "issue_numbers": [
    "71296"
  ],
  "base_commit": "ce8ca7c9f58bd065550ead2ae06c60959e0340e0",
  "patch": "diff --git a/src/Client/ConnectionEstablisher.cpp b/src/Client/ConnectionEstablisher.cpp\nindex 178e26b124cf..d1960e51e036 100644\n--- a/src/Client/ConnectionEstablisher.cpp\n+++ b/src/Client/ConnectionEstablisher.cpp\n@@ -151,7 +151,8 @@ void ConnectionEstablisherAsync::Task::run(AsyncCallback async_callback, Suspend\n {\n     connection_establisher_async.reset();\n     connection_establisher_async.connection_establisher.setAsyncCallback(async_callback);\n-    connection_establisher_async.connection_establisher.run(connection_establisher_async.result, connection_establisher_async.fail_message);\n+    connection_establisher_async.connection_establisher.run(connection_establisher_async.result,\n+        connection_establisher_async.fail_message, connection_establisher_async.force_connected);\n     connection_establisher_async.is_finished = true;\n }\n \ndiff --git a/src/Client/ConnectionEstablisher.h b/src/Client/ConnectionEstablisher.h\nindex ff071e59aea0..e78332376009 100644\n--- a/src/Client/ConnectionEstablisher.h\n+++ b/src/Client/ConnectionEstablisher.h\n@@ -76,6 +76,8 @@ class ConnectionEstablisherAsync : public AsyncTaskExecutor\n \n     const std::string & getFailMessage() const { return fail_message; }\n \n+    void resumeConnectionWithForceOption(bool force_connected_) {force_connected = force_connected_; resume();}\n+\n private:\n     bool checkBeforeTaskResume() override;\n \n@@ -125,6 +127,7 @@ class ConnectionEstablisherAsync : public AsyncTaskExecutor\n \n     bool is_finished = false;\n     bool restarted = false;\n+    bool force_connected = false;\n };\n \n #endif\ndiff --git a/src/Client/HedgedConnectionsFactory.cpp b/src/Client/HedgedConnectionsFactory.cpp\nindex df63a124539d..0900f1c02935 100644\n--- a/src/Client/HedgedConnectionsFactory.cpp\n+++ b/src/Client/HedgedConnectionsFactory.cpp\n@@ -281,7 +281,7 @@ int HedgedConnectionsFactory::getReadyFileDescriptor(bool blocking, AsyncCallbac\n \n HedgedConnectionsFactory::State HedgedConnectionsFactory::resumeConnectionEstablisher(int index, Connection *& connection_out)\n {\n-    replicas[index].connection_establisher->resume();\n+    replicas[index].connection_establisher->resumeConnectionWithForceOption(/*force_connected_*/ shuffled_pools[index].error_count != 0);\n \n     if (replicas[index].connection_establisher->isCancelled())\n         return State::CANNOT_CHOOSE;\n",
  "test_patch": "diff --git a/tests/integration/test_distributed_respect_user_timeouts/test.py b/tests/integration/test_distributed_respect_user_timeouts/test.py\nindex dd0953c47dd4..8ea4efde7019 100644\n--- a/tests/integration/test_distributed_respect_user_timeouts/test.py\n+++ b/tests/integration/test_distributed_respect_user_timeouts/test.py\n@@ -80,6 +80,7 @@ def _check_exception(exception, expected_tries=3):\n     for i, line in enumerate(lines[3 : 3 + expected_tries]):\n         expected_lines = (\n             \"Code: 209. \" + EXCEPTION_NETWORK + EXCEPTION_TIMEOUT,\n+            \"Code: 209. \" + EXCEPTION_NETWORK + \"Timeout: connect timed out\",\n             EXCEPTION_CONNECT_TIMEOUT,\n             EXCEPTION_TIMEOUT,\n         )\n",
  "problem_statement": "All Connection Tries Failed When Distributed Query Execution\n**Version**\r\n24.3.1.2672\r\n\r\n**Describe what's wrong**\r\nConnections in the pool do not expire proactively. In extreme cases, the connections retried might also be stale, resulting in query errors.\r\n\r\n**Error message and/or stacktrace**\r\n```\r\n Code: 279. DB::NetException: All connection tries failed. Log:\r\nCode: 210. DB::NetException: I/O error: Broken pipe, while writing to socket (xx.xx.xx.xx:34276 -> yy.yy.yy.yy:9600). (NETWORK_ERROR) (version 24.3.1.2672 (official build))\r\nCode: 210. DB::NetException: I/O error: Broken pipe, while writing to socket (xx.xx.xx.xx:65142 -> zz.zz.zz.zz:9600). (NETWORK_ERROR) (version 24.3.1.2672 (official build))\r\nCode: 210. DB::NetException: I/O error: Broken pipe, while writing to socket (xx.xx.xx.xx:36360 -> yy.yy.yy.yy:9600). (NETWORK_ERROR) (version 24.3.1.2672 (official build))\r\nCode: 210. DB::NetException: I/O error: Broken pipe, while writing to socket (xx.xx.xx.xx:65146 -> zz.zz.zz.zz:9600). (NETWORK_ERROR) (version 24.3.1.2672 (official build))\r\nCode: 210. DB::NetException: I/O error: Broken pipe, while writing to socket (xx.xx.xx.xx:42710 -> yy.yy.yy.yy:9600). (NETWORK_ERROR) (version 24.3.1.2672 (official build))\r\nCode: 210. DB::NetException: I/O error: Broken pipe, while writing to socket (xx.xx.xx.xx:36338 -> zz.zz.zz.zz:9600). (NETWORK_ERROR) (version 24.3.1.2672 (official build))\r\n: While executing Remote. (ALL_CONNECTION_TRIES_FAILED) (version 24.3.1.2672 (official build))\r\n```\r\n\r\n> If applicable, add screenshots to help explain your problem.\r\n\r\n![image](https://github.com/user-attachments/assets/2e26a971-ed1a-42bb-a3db-3fe53ee047fe)\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2024-10-31T10:10:04Z"
}