diff --git a/tests/integration/test_merge_tree_s3_failover/s3_endpoint/endpoint.py b/tests/integration/test_merge_tree_s3_failover/s3_endpoint/endpoint.py
index e7614dd9536f..1754b1f175ce 100644
--- a/tests/integration/test_merge_tree_s3_failover/s3_endpoint/endpoint.py
+++ b/tests/integration/test_merge_tree_s3_failover/s3_endpoint/endpoint.py
@@ -34,7 +34,8 @@ def server(_bucket, _path):
             cache['request_number'] = request_number
         else:
             response.status = 500
-            return 'Expected Error'
+            response.content_type = 'text/xml'
+            return '<?xml version="1.0" encoding="UTF-8"?><Error><Code>ExpectedError</Code><Message>Expected Error</Message><RequestId>txfbd566d03042474888193-00608d7537</RequestId></Error>'
 
     response.set_header("Location", "http://minio1:9001/" + _bucket + '/' + _path)
     response.status = 307
diff --git a/tests/integration/test_storage_s3/s3_mocks/mock_s3.py b/tests/integration/test_storage_s3/s3_mocks/mock_s3.py
index 3e876689175d..9009d345f490 100644
--- a/tests/integration/test_storage_s3/s3_mocks/mock_s3.py
+++ b/tests/integration/test_storage_s3/s3_mocks/mock_s3.py
@@ -15,7 +15,9 @@ def server(_bucket, _path):
     for name in request.headers:
         if name == 'Authorization' and request.headers[name] == 'Bearer TOKEN':
             return '1, 2, 3'
-    abort(403)
+    response.status = 403
+    response.content_type = 'text/xml'
+    return '<?xml version="1.0" encoding="UTF-8"?><Error><Code>ForbiddenError</Code><Message>Forbidden Error</Message><RequestId>txfbd566d03042474888193-00608d7537</RequestId></Error>'
 
 
 @route('/')
diff --git a/tests/integration/test_storage_s3/test.py b/tests/integration/test_storage_s3/test.py
index b1427c099814..667b8219b00e 100644
--- a/tests/integration/test_storage_s3/test.py
+++ b/tests/integration/test_storage_s3/test.py
@@ -504,7 +504,7 @@ def test_custom_auth_headers_exclusion(cluster):
         print(result)
 
     assert ei.value.returncode == 243
-    assert '403 Forbidden' in ei.value.stderr
+    assert 'Forbidden Error' in ei.value.stderr
 
 
 def test_infinite_redirect(cluster):
