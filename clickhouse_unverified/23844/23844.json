{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 23844,
  "instance_id": "ClickHouse__ClickHouse-23844",
  "issue_numbers": [
    "23775"
  ],
  "base_commit": "020cececc40cfde52b9aa83fafa0a1ec1be1a001",
  "patch": "diff --git a/src/IO/S3/PocoHTTPClient.cpp b/src/IO/S3/PocoHTTPClient.cpp\nindex f2b5c77a6c1f..618d9ab76612 100644\n--- a/src/IO/S3/PocoHTTPClient.cpp\n+++ b/src/IO/S3/PocoHTTPClient.cpp\n@@ -289,29 +289,16 @@ void PocoHTTPClient::makeRequestInternal(\n             }\n             LOG_DEBUG(log, \"Received headers: {}\", headers_ss.str());\n \n-            if (status_code >= 300)\n+            if (status_code == 429 || status_code == 503)\n+            { // API throttling\n+                ProfileEvents::increment(select_metric(S3MetricType::Throttling));\n+            }\n+            else if (status_code >= 300)\n             {\n-                String error_message;\n-                Poco::StreamCopier::copyToString(response_body_stream, error_message);\n-\n-                if (Aws::Http::IsRetryableHttpResponseCode(response->GetResponseCode()))\n-                    response->SetClientErrorType(Aws::Client::CoreErrors::NETWORK_CONNECTION);\n-                else\n-                    response->SetClientErrorType(Aws::Client::CoreErrors::USER_CANCELLED);\n-\n-                response->SetClientErrorMessage(error_message);\n-\n-                if (status_code == 429 || status_code == 503)\n-                { // API throttling\n-                    ProfileEvents::increment(select_metric(S3MetricType::Throttling));\n-                }\n-                else\n-                {\n-                    ProfileEvents::increment(select_metric(S3MetricType::Errors));\n-                }\n+                ProfileEvents::increment(select_metric(S3MetricType::Errors));\n             }\n-            else\n-                response->SetResponseBody(response_body_stream, session);\n+\n+            response->SetResponseBody(response_body_stream, session);\n \n             return;\n         }\n",
  "test_patch": "diff --git a/tests/integration/test_merge_tree_s3_failover/s3_endpoint/endpoint.py b/tests/integration/test_merge_tree_s3_failover/s3_endpoint/endpoint.py\nindex e7614dd9536f..1754b1f175ce 100644\n--- a/tests/integration/test_merge_tree_s3_failover/s3_endpoint/endpoint.py\n+++ b/tests/integration/test_merge_tree_s3_failover/s3_endpoint/endpoint.py\n@@ -34,7 +34,8 @@ def server(_bucket, _path):\n             cache['request_number'] = request_number\n         else:\n             response.status = 500\n-            return 'Expected Error'\n+            response.content_type = 'text/xml'\n+            return '<?xml version=\"1.0\" encoding=\"UTF-8\"?><Error><Code>ExpectedError</Code><Message>Expected Error</Message><RequestId>txfbd566d03042474888193-00608d7537</RequestId></Error>'\n \n     response.set_header(\"Location\", \"http://minio1:9001/\" + _bucket + '/' + _path)\n     response.status = 307\ndiff --git a/tests/integration/test_storage_s3/s3_mocks/mock_s3.py b/tests/integration/test_storage_s3/s3_mocks/mock_s3.py\nindex 3e876689175d..9009d345f490 100644\n--- a/tests/integration/test_storage_s3/s3_mocks/mock_s3.py\n+++ b/tests/integration/test_storage_s3/s3_mocks/mock_s3.py\n@@ -15,7 +15,9 @@ def server(_bucket, _path):\n     for name in request.headers:\n         if name == 'Authorization' and request.headers[name] == 'Bearer TOKEN':\n             return '1, 2, 3'\n-    abort(403)\n+    response.status = 403\n+    response.content_type = 'text/xml'\n+    return '<?xml version=\"1.0\" encoding=\"UTF-8\"?><Error><Code>ForbiddenError</Code><Message>Forbidden Error</Message><RequestId>txfbd566d03042474888193-00608d7537</RequestId></Error>'\n \n \n @route('/')\ndiff --git a/tests/integration/test_storage_s3/test.py b/tests/integration/test_storage_s3/test.py\nindex b1427c099814..667b8219b00e 100644\n--- a/tests/integration/test_storage_s3/test.py\n+++ b/tests/integration/test_storage_s3/test.py\n@@ -504,7 +504,7 @@ def test_custom_auth_headers_exclusion(cluster):\n         print(result)\n \n     assert ei.value.returncode == 243\n-    assert '403 Forbidden' in ei.value.stderr\n+    assert 'Forbidden Error' in ei.value.stderr\n \n \n def test_infinite_redirect(cluster):\n",
  "problem_statement": "S3 table endpoint region configuration constrained to the amazonaws domain\nHi, first of all thank you for a great piece of software.\r\n\r\n**Describe the bug**\r\n\r\nPR  #15646 fixes #10417 by matching the S3 endpoint region using the following regular expression: `s3.<region>.amazonaws`. Attempting to use an S3 compatible storage engine hosted outside of AWS an authentication error due to mismatch with the default region (`us-east-1`).\r\n\r\n**Does it reproduce on recent release?**\r\nReproduces on `ClickHouse server version 21.4.5.46 (official build)`\r\n\r\n**How to reproduce?**\r\n\r\nThe following query fails:\r\n\r\n`SELECT * from s3('https://s3.gra.cloud.ovh.net/..., 'key', 'secret', 'csv', '...') LIMIT 10`\r\n\r\n**Expected behavior**\r\n\r\nOne potential solution would be to allow the region to be specified in the S3 disk settings (adding vendor-specific regexp patterns in  `PocoHTTPClientConfiguration::updateSchemeAndRegion` seems unrealistic).\n",
  "hints_text": "@tritas Can you please attach error message and how Swift S3 responses look like (it can be seen at `trace` log level)?\nPlease find the error message below. Some exponentially backed-off retries are omitted and the bucket name is replaced with a ``<bucket>`` placeholder.\r\n\r\n```\r\n\r\n2021.05.01 12:03:07.093903 [ 2110027 ] {} <Warning> AWSClient: ClientConfiguration: Retry Strategy will use the default max attempts.\r\n2021.05.01 12:03:12.204958 [ 2110027 ] {} <Error> AWSClient: HTTP response code: 400\r\nResolved remote host IP address:\r\nRequest ID:\r\nException name:\r\nError message: <?xml version='1.0' encoding='UTF-8'?>\r\n<Error><Code>AuthorizationHeaderMalformed</Code><Message>The authorization header is malformed; the region 'us-east-1' is wrong; expecting 'GRA'</Message><RequestId>tx391a19808d484a1a8ab36-00608d4380</RequestId><Region>GRA</Region></Error>\r\n10 response headers:\r\nconnection : close\r\ncontent-type : application/xml\r\ndate : Sat, 01 May 2021 12:03:12 GMT\r\ntransfer-encoding : chunked\r\nx-amz-id-2 : tx391a19808d484a1a8ab36-00608d4380\r\nx-amz-request-id : tx391a19808d484a1a8ab36-00608d4380\r\nx-iplb-instance : 38342\r\nx-iplb-request-id : 33262B10:A802_3626E64B:01BB_608D4380_343B9A4:14F83\r\nx-openstack-request-id : tx391a19808d484a1a8ab36-00608d4380\r\nx-trans-id : tx391a19808d484a1a8ab36-00608d4380\r\n2021.05.01 12:03:12.205058 [ 2110027 ] {} <Warning> AWSClient: If the signature check failed. This could be because of a time skew. Attempting to adjust the signer.\r\n2021.05.01 12:03:12.205133 [ 2110027 ] {} <Warning> AWSClient: Request failed, now waiting 0 ms before attempting again.\r\n2021.05.01 12:03:17.251796 [ 2110027 ] {} <Error> AWSClient: HTTP response code: 400\r\nResolved remote host IP address:\r\nRequest ID:\r\nException name:\r\nError message: <?xml version='1.0' encoding='UTF-8'?>\r\n<Error><Code>AuthorizationHeaderMalformed</Code><Message>The authorization header is malformed; the region 'us-east-1' is wrong; expecting 'GRA'</Message><RequestId>tx1c6feedf4abc420fb768c-00608d4385</RequestId><Region>GRA</Region></Error>\r\n10 response headers:\r\nconnection : close\r\ncontent-type : application/xml\r\ndate : Sat, 01 May 2021 12:03:17 GMT\r\ntransfer-encoding : chunked\r\nx-amz-id-2 : tx1c6feedf4abc420fb768c-00608d4385\r\nx-amz-request-id : tx1c6feedf4abc420fb768c-00608d4385\r\nx-iplb-instance : 38427\r\nx-iplb-request-id : 33262B10:A81C_3626E64B:01BB_608D4385_419C8CC:1581C\r\nx-openstack-request-id : tx1c6feedf4abc420fb768c-00608d4385\r\nx-trans-id : tx1c6feedf4abc420fb768c-00608d4385\r\n2021.05.01 12:03:17.251888 [ 2110027 ] {} <Warning> AWSClient: If the signature check failed. This could be because of a time skew. Attempting to adjust the signer.\r\n2021.05.01 12:03:17.251962 [ 2110027 ] {} <Warning> AWSClient: Request failed, now waiting 50 ms before attempting again.\r\n2021.05.01 12:03:22.342163 [ 2110027 ] {} <Error> AWSClient: HTTP response code: 400\r\n\r\n...\r\n\r\n2021.05.01 12:04:28.467267 [ 2110027 ] {} <Warning> AWSClient: If the signature check failed. This could be because of a time skew. Attempting to adjust the signer.\r\n2021.05.01 12:04:28.467687 [ 2110027 ] {} <Error> virtual DB::WriteIndirectBufferFromS3::~WriteIndirectBufferFromS3(): Code: 499, e.displayText() = DB::Exception: <?xml version='1.0' encoding='UTF-8'?>\r\n<Error><Code>AuthorizationHeaderMalformed</Code><Message>The authorization header is malformed; the region 'us-east-1' is wrong; expecting 'GRA'</Message><RequestId>txf7ca4395ffa24e2ba7b34-00608d43cc</RequestId><Region>GRA</Region></Error>, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x87f4c4a in /usr/bin/clickhouse\r\n1. DB::WriteBufferFromS3::makeSinglepartUpload() @ 0xf034205 in /usr/bin/clickhouse\r\n2. DB::WriteBufferFromS3::finalizeImpl() @ 0xf03330b in /usr/bin/clickhouse\r\n3. DB::WriteIndirectBufferFromS3::~WriteIndirectBufferFromS3() @ 0xf02b52c in /usr/bin/clickhouse\r\n4. DB::WriteIndirectBufferFromS3::~WriteIndirectBufferFromS3() @ 0xf02bad9 in /usr/bin/clickhouse\r\n5. ? @ 0xf0002de in /usr/bin/clickhouse\r\n6. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) const @ 0xefe8447 in /usr/bin/clickhouse\r\n7. DB::DiskSelector::updateFromConfig(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) const @ 0xefe5154 in /usr/bin/clickhouse\r\n8. DB::Context::updateStorageConfiguration(Poco::Util::AbstractConfiguration const&) @ 0xf09d080 in /usr/bin/clickhouse\r\n9. ? @ 0x88801ca in /usr/bin/clickhouse\r\n10. DB::ConfigReloader::reloadIfNewer(bool, bool, bool, bool) @ 0x1022a05d in /usr/bin/clickhouse\r\n11. DB::ConfigReloader::run() @ 0x1022b92f in /usr/bin/clickhouse\r\n12. ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ConfigReloader::*)(), DB::ConfigReloader*>(void (DB::ConfigReloader::*&&)(), DB::ConfigReloader*&&)::'lambda'()::operator()() @ 0x1022c741 in /usr/bin/clickhouse\r\n13. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8834d2f in /usr/bin/clickhouse\r\n14. ? @ 0x88387c3 in /usr/bin/clickhouse\r\n15. start_thread @ 0x9590 in /usr/lib/x86_64-linux-gnu/libpthread-2.32.so\r\n16. clone @ 0x119223 in /usr/lib/x86_64-linux-gnu/libc-2.32.so\r\n(version 21.4.5.46 (official build))\r\n2021.05.01 12:04:28.467996 [ 2110027 ] {} <Error> WriteBufferFromS3: Code: 499, e.displayText() = DB::Exception: Failed to make single part upload. Buffer in invalid state, Stack trace (when copying this message, always include the lines below):\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x87f4c4a in /usr/bin/clickhouse\r\n1. DB::WriteBufferFromS3::makeSinglepartUpload() @ 0xf0341cb in /usr/bin/clickhouse\r\n2. DB::WriteBufferFromS3::~WriteBufferFromS3() @ 0xf03567d in /usr/bin/clickhouse\r\n3. DB::WriteIndirectBufferFromS3::~WriteIndirectBufferFromS3() @ 0xf02b6f1 in /usr/bin/clickhouse\r\n4. DB::WriteIndirectBufferFromS3::~WriteIndirectBufferFromS3() @ 0xf02bad9 in /usr/bin/clickhouse\r\n5. ? @ 0xf0002de in /usr/bin/clickhouse\r\n6. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) const @ 0xefe8447 in /usr/bin/clickhouse\r\n7. DB::DiskSelector::updateFromConfig(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) const @ 0xefe5154 in /usr/bin/clickhouse\r\n8. DB::Context::updateStorageConfiguration(Poco::Util::AbstractConfiguration const&) @ 0xf09d080 in /usr/bin/clickhouse\r\n9. ? @ 0x88801ca in /usr/bin/clickhouse\r\n10. DB::ConfigReloader::reloadIfNewer(bool, bool, bool, bool) @ 0x1022a05d in /usr/bin/clickhouse\r\n11. DB::ConfigReloader::run() @ 0x1022b92f in /usr/bin/clickhouse\r\n12. ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ConfigReloader::*)(), DB::ConfigReloader*>(void (DB::ConfigReloader::*&&)(), DB::ConfigReloader*&&)::'lambda'()::operator()() @ 0x1022c741 in /usr/bin/clickhouse\r\n13. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8834d2f in /usr/bin/clickhouse\r\n14. ? @ 0x88387c3 in /usr/bin/clickhouse\r\n15. start_thread @ 0x9590 in /usr/lib/x86_64-linux-gnu/libpthread-2.32.so\r\n16. clone @ 0x119223 in /usr/lib/x86_64-linux-gnu/libc-2.32.so\r\n(version 21.4.5.46 (official build))\r\n2021.05.01 12:04:28.467996 [ 2110027 ] {} <Error> WriteBufferFromS3: Code: 499, e.displayText() = DB::Exception: Failed to make single part upload. Buffer in invalid state, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x87f4c4a in /usr/bin/clickhouse\r\n1. DB::WriteBufferFromS3::makeSinglepartUpload() @ 0xf0341cb in /usr/bin/clickhouse\r\n2. DB::WriteBufferFromS3::~WriteBufferFromS3() @ 0xf03567d in /usr/bin/clickhouse                                                    \r\n3. DB::WriteIndirectBufferFromS3::~WriteIndirectBufferFromS3() @ 0xf02b6f1 in /usr/bin/clickhouse\r\n4. DB::WriteIndirectBufferFromS3::~WriteIndirectBufferFromS3() @ 0xf02bad9 in /usr/bin/clickhouse\r\n5. ? @ 0xf0002de in /usr/bin/clickhouse\r\n6. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) const @ 0xefe8447 in /usr/bin/clickhouse\r\n7. DB::DiskSelector::updateFromConfig(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) const @ 0xefe5154 in /usr/bin/clickhouse\r\n8. DB::Context::updateStorageConfiguration(Poco::Util::AbstractConfiguration const&) @ 0xf09d080 in /usr/bin/clickhouse\r\n9. ? @ 0x88801ca in /usr/bin/clickhouse\r\n10. DB::ConfigReloader::reloadIfNewer(bool, bool, bool, bool) @ 0x1022a05d in /usr/bin/clickhouse\r\n11. DB::ConfigReloader::run() @ 0x1022b92f in /usr/bin/clickhouse\r\n12. ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ConfigReloader::*)(), DB::ConfigReloader*>(void (DB::ConfigReloader::*&&)(), DB::ConfigReloader*&&)::'lambda'()::operator()() @ 0x1022c741 in /usr/bin/clickhouse\r\n13. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8834d2f in /usr/bin/clickhouse\r\n14. ? @ 0x88387c3 in /usr/bin/clickhouse\r\n15. start_thread @ 0x9590 in /usr/lib/x86_64-linux-gnu/libpthread-2.32.so\r\n16. clone @ 0x119223 in /usr/lib/x86_64-linux-gnu/libc-2.32.so\r\n(version 21.4.5.46 (official build))\r\n2021.05.01 12:04:28.468677 [ 2110027 ] {} <Error> ConfigReloader: Error updating configuration from '/etc/clickhouse-server/config.xml' config.: Code: 33, e.displayText() = DB::Exception: Cannot read all data. Bytes read: 0. Bytes expected: 4., Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x87f4c4a in /usr/bin/clickhouse\r\n1. DB::ReadBuffer::readStrict(char*, unsigned long) @ 0x882fa9d in /usr/bin/clickhouse\r\n2. ? @ 0xf00038c in /usr/bin/clickhouse\r\n3. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) const @ 0xefe8447 in /usr/bin/clickhouse\r\n4. DB::DiskSelector::updateFromConfig(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) const @ 0xefe5154 in /usr/bin/clickhouse\r\n5. DB::Context::updateStorageConfiguration(Poco::Util::AbstractConfiguration const&) @ 0xf09d080 in /usr/bin/clickhouse\r\n6. ? @ 0x88801ca in /usr/bin/clickhouse\r\n7. DB::ConfigReloader::reloadIfNewer(bool, bool, bool, bool) @ 0x1022a05d in /usr/bin/clickhouse\r\n8. DB::ConfigReloader::run() @ 0x1022b92f in /usr/bin/clickhouse\r\n9. ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ConfigReloader::*)(), DB::ConfigReloader*>(void (DB::ConfigReloader::*&&)(), DB::ConfigReloader*&&)::'lambda'()::operator()() @ 0x1022c741 in /usr/bin/clickhouse\r\n10. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8834d2f in /usr/bin/clickhouse\r\n11. ? @ 0x88387c3 in /usr/bin/clickhouse\r\n12. start_thread @ 0x9590 in /usr/lib/x86_64-linux-gnu/libpthread-2.32.so\r\n13. clone @ 0x119223 in /usr/lib/x86_64-linux-gnu/libc-2.32.so\r\n(version 21.4.5.46 (official build))\r\n\r\n```\r\n\r\nAfter reloading the configuration once more some minutes later, I caught the following sample of the trace-level log:\r\n\r\n```\r\n2021.05.01 12:16:43.998174 [ 2110027 ] {} <Debug> ConfigReloader: Loading config '/etc/clickhouse-server/config.xml'                                                                                                                                                                                                         \r\n2021.05.01 12:16:44.008665 [ 2110027 ] {} <Debug> ConfigReloader: Loaded config '/etc/clickhouse-server/config.xml', performing update on configuration                                                                                                                                                                      \r\n2021.05.01 12:16:44.011880 [ 2110027 ] {} <Information> Application: Setting max_server_memory_usage was set to 28.13 GiB (31.25 GiB available * 0.90 max_server_memory_usage_to_ram_ratio)                                                                                                                                  \r\n2021.05.01 12:16:44.022857 [ 2110027 ] {} <Trace> AWSClient: ClientConfiguration: ClientConfiguration will use SDK Auto Resolved profile: [default] if not specified by users.                                                                                                                                               \r\n2021.05.01 12:16:44.022917 [ 2110027 ] {} <Warning> AWSClient: ClientConfiguration: Retry Strategy will use the default max attempts.                                                                                                                                                                                        \r\n2021.05.01 12:16:44.023401 [ 2110027 ] {} <Debug> DiskS3: Remove file by path: `/var/lib/clickhouse/disks/swift/test_acl`                                                                                                                                                                                                    \r\n2021.05.01 12:16:44.023636 [ 2110027 ] {} <Debug> DiskS3: Write to file by path: `/var/lib/clickhouse/disks/swift/test_acl`. New S3 path: clickhouse/eruequzsqcxmsejgqyozukozmbihzjuh                                                                                                                                        \r\n2021.05.01 12:16:44.023700 [ 2110027 ] {} <Debug> WriteBufferFromS3: Making single part upload. Bucket: <bucket>, Key: clickhouse/eruequzsqcxmsejgqyozukozmbihzjuh, Size: 4                                                                                            \r\n2021.05.01 12:16:44.023810 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Note: Http payloads are not being signed. signPayloads=0 http scheme=https     \r\n2021.05.01 12:16:44.023867 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Canonical Header String: amz-sdk-invocation-id:778254B7-457E-40EA-BDFD-51E0BF6EBD23                                                                                                                                                           \r\namz-sdk-request:attempt=1                                                                                                                                     \r\ncontent-length:4                                                                                                                                                                                                                                                                                                             \r\ncontent-type:binary/octet-stream                                                                                                                              \r\nhost:s3.gra.cloud.ovh.net                                                                                                                                     \r\nx-amz-content-sha256:UNSIGNED-PAYLOAD                                                                                                                                                                                                                                                                                        \r\nx-amz-date:20210501T121644Z\r\n\r\n2021.05.01 12:16:44.023883 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Signed Headers value:amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date\r\n2021.05.01 12:16:44.023909 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Canonical Request String: PUT\r\n/<bucket>/clickhouse/eruequzsqcxmsejgqyozukozmbihzjuh\r\namz-sdk-invocation-id:778254B7-457E-40EA-BDFD-51E0BF6EBD23\r\namz-sdk-request:attempt=1\r\ncontent-length:4\r\ncontent-type:binary/octet-stream\r\nhost:s3.gra.cloud.ovh.net\r\nx-amz-content-sha256:UNSIGNED-PAYLOAD\r\nx-amz-date:20210501T121644Z\r\n\r\namz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date\r\nUNSIGNED-PAYLOAD\r\n2021.05.01 12:16:44.023963 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Final String to sign: AWS4-HMAC-SHA256\r\n20210501T121644Z\r\n20210501/us-east-1/s3/aws4_request\r\n2cd955d62468e5c2a0ed1ec295b7738d74207b63cd0f3bc7ddd2d1df58284775\r\n2021.05.01 12:16:44.023982 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Final computed signing hash: 1f9777660be5a814d1becd9caf6d03f5ae8c763434486500259bf32d29b856cb\r\n2021.05.01 12:16:44.023998 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Signing request with: AWS4-HMAC-SHA256 Credential=372e6144387541318769906cc2912fab/20210501/us-east-1/s3/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-length;content-type;host;x-amz-content-sha256;x-amz-date, S\r\nignature=1f9777660be5a814d1becd9caf6d03f5ae8c763434486500259bf32d29b856cb\r\n2021.05.01 12:16:44.024015 [ 2110027 ] {} <Trace> AWSClient: Request Successfully signed\r\n2021.05.01 12:16:44.024038 [ 2110027 ] {} <Debug> AWSClient: Make request to: https://s3.gra.cloud.ovh.net/<bucket>/clickhouse/eruequzsqcxmsejgqyozukozmbihzjuh\r\n2021.05.01 12:16:49.061413 [ 2110027 ] {} <Trace> AWSClient: Writing request body.\r\n2021.05.01 12:16:49.061489 [ 2110027 ] {} <Debug> AWSClient: Written 4 bytes to request body\r\n2021.05.01 12:16:49.061508 [ 2110027 ] {} <Trace> AWSClient: Receiving response...\r\n2021.05.01 12:16:49.177806 [ 2110027 ] {} <Debug> AWSClient: Response status: 400, Bad Request\r\n2021.05.01 12:16:49.177893 [ 2110027 ] {} <Debug> AWSClient: Received headers: x-amz-id-2: tx71287efed2ea4dd9bf7bf-00608d46b1; x-amz-request-id: tx71287efed2ea4dd9bf7bf-00608d46b1; Content-Type: application/xml; X-Trans-Id: tx71287efed2ea4dd9bf7bf-00608d46b1; X-Openstack-Request-Id: tx71287efed2ea4dd9bf7bf-00608d46b\r\n1; Date: Sat, 01 May 2021 12:16:49 GMT; Transfer-Encoding: chunked; Connection: close; X-IPLB-Request-ID: 33262B10:B384_3626E64B:01BB_608D46B1_33DA85C:223A2; X-IPLB-Instance: 38343; \r\n2021.05.01 12:16:49.178195 [ 2110027 ] {} <Trace> AWSClient: Request returned error. Attempting to generate appropriate error codes from response\r\n2021.05.01 12:16:49.178272 [ 2110027 ] {} <Error> AWSClient: HTTP response code: 400\r\nResolved remote host IP address: \r\nRequest ID: \r\nException name: \r\nError message: <?xml version='1.0' encoding='UTF-8'?>\r\n<Error><Code>AuthorizationHeaderMalformed</Code><Message>The authorization header is malformed; the region 'us-east-1' is wrong; expecting 'GRA'</Message><RequestId>tx71287efed2ea4dd9bf7bf-00608d46b1</RequestId><Region>GRA</Region></Error>\r\n10 response headers:\r\nconnection : close\r\ncontent-type : application/xml\r\ndate : Sat, 01 May 2021 12:16:49 GMT\r\ntransfer-encoding : chunked\r\nx-amz-id-2 : tx71287efed2ea4dd9bf7bf-00608d46b1\r\nx-amz-request-id : tx71287efed2ea4dd9bf7bf-00608d46b1\r\nx-iplb-instance : 38343\r\nx-iplb-request-id : 33262B10:B384_3626E64B:01BB_608D46B1_33DA85C:223A2\r\nx-openstack-request-id : tx71287efed2ea4dd9bf7bf-00608d46b1\r\nx-trans-id : tx71287efed2ea4dd9bf7bf-00608d46b1\r\n2021.05.01 12:16:49.178355 [ 2110027 ] {} <Warning> AWSClient: If the signature check failed. This could be because of a time skew. Attempting to adjust the signer.\r\n2021.05.01 12:16:49.178412 [ 2110027 ] {} <Trace> AWSClient: Server time is Sat, 01 May 2021 12:16:49 GMT, while client time is Sat, 01 May 2021 12:16:49 GMT\r\n2021.05.01 12:16:49.178434 [ 2110027 ] {} <Warning> AWSClient: Request failed, now waiting 0 ms before attempting again.\r\n2021.05.01 12:16:49.178512 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Note: Http payloads are not being signed. signPayloads=0 http scheme=https\r\n2021.05.01 12:16:49.178593 [ 2110027 ] {} <Trace> AWSClient (AWSAuthV4Signer): Canonical Header String: amz-sdk-invocation-id:778254B7-457E-40EA-BDFD-51E0BF6EBD23\r\namz-sdk-request:ttl=20210501T121654Z; attempt=2; max=11\r\ncontent-length:4\r\ncontent-type:binary/octet-stream\r\nhost:s3.gra.cloud.ovh.net\r\nx-amz-content-sha256:UNSIGNED-PAYLOAD\r\nx-amz-date:20210501T121649Z\r\n```\r\n\r\nFor sake of completeness, this is the related SWIFT storage configuration\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<yandex>\r\n  <storage_configuration>\r\n    <disks>\r\n      <swift>\r\n        <type>s3</type>\r\n        <endpoint>https://s3.gra.cloud.ovh.net/<bucket>/clickhouse/</endpoint>\r\n        <access_key_id><omitted></access_key_id>\r\n        <secret_access_key><omitted></secret_access_key>\r\n      </swift>\r\n    </disks>\r\n  </storage_configuration>\r\n</yandex>\r\n\r\n```\r\n\r\nHope these samples yet, please let me know if I can provide any more info. Thank you for the follow up and happy may 1st!\nI wonder does it expect gra to be written exactly in uppercase...\r\n\r\n> The authorization header is malformed; the region 'us-east-1' is wrong; expecting 'GRA'\nThis error can be easily reproduced by:\r\n```\r\nclickhouse local --logger.level=trace -q \"select count() from s3('https://storage.gra.cloud.ovh.net/AUTH_10e1a9235c63431c95e5b84a247830db/prod/artwork/511850_1_m.jpg', '123', '234', 'TSV', 's String')\"\r\n```\r\n\r\n```\r\n<Error><Code>AuthorizationHeaderMalformed</Code><Message>The authorization header is malformed; the region 'us-west-2' is wrong; expecting 'GRA'</Message><RequestId>txfbd566d03042474888193-00608d7537</RequestId><Region>GRA</Region></Error>: While executing S3 (version 21.6.1.1)\r\n```\r\n\r\nSomehow, GRA region is not being picked up from the response.",
  "created_at": "2021-05-01T17:28:16Z"
}