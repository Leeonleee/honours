{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 16011,
  "instance_id": "ClickHouse__ClickHouse-16011",
  "issue_numbers": [
    "15980"
  ],
  "base_commit": "963ce315b24ba02cea57485d1a94bf0537318b98",
  "patch": "diff --git a/src/Storages/StorageReplicatedMergeTree.cpp b/src/Storages/StorageReplicatedMergeTree.cpp\nindex 2ac8ddb7846c..be8aea05c897 100644\n--- a/src/Storages/StorageReplicatedMergeTree.cpp\n+++ b/src/Storages/StorageReplicatedMergeTree.cpp\n@@ -833,7 +833,7 @@ void StorageReplicatedMergeTree::checkTableStructure(const String & zookeeper_pr\n }\n \n void StorageReplicatedMergeTree::setTableStructure(\n-ColumnsDescription new_columns, const ReplicatedMergeTreeTableMetadata::Diff & metadata_diff)\n+    ColumnsDescription new_columns, const ReplicatedMergeTreeTableMetadata::Diff & metadata_diff)\n {\n     StorageInMemoryMetadata new_metadata = getInMemoryMetadata();\n     StorageInMemoryMetadata old_metadata = getInMemoryMetadata();\n@@ -856,7 +856,7 @@ ColumnsDescription new_columns, const ReplicatedMergeTreeTableMetadata::Diff & m\n \n     if (!metadata_diff.empty())\n     {\n-        auto parse_key_expr = [](const String & key_expr)\n+        auto parse_key_expr = [] (const String & key_expr)\n         {\n             ParserNotEmptyExpressionList parser(false);\n             auto new_sorting_key_expr_list = parseQuery(parser, key_expr, 0, DBMS_DEFAULT_MAX_PARSER_DEPTH);\n@@ -3936,13 +3936,19 @@ void StorageReplicatedMergeTree::alter(\n \n         ReplicatedMergeTreeTableMetadata future_metadata_in_zk(*this, current_metadata);\n         if (ast_to_str(future_metadata.sorting_key.definition_ast) != ast_to_str(current_metadata->sorting_key.definition_ast))\n-            future_metadata_in_zk.sorting_key = serializeAST(*future_metadata.sorting_key.expression_list_ast);\n+        {\n+            /// We serialize definition_ast as list, because code which apply ALTER (setTableStructure) expect serialized non empty expression\n+            /// list here and we cannot change this representation for compatibility. Also we have preparsed AST `sorting_key.expression_list_ast`\n+            /// in KeyDescription, but it contain version column for VersionedCollapsingMergeTree, which shouldn't be defined as a part of key definition AST.\n+            /// So the best compatible way is just to convert definition_ast to list and serialize it. In all other places key.expression_list_ast should be used.\n+            future_metadata_in_zk.sorting_key = serializeAST(*extractKeyExpressionList(future_metadata.sorting_key.definition_ast));\n+        }\n \n         if (ast_to_str(future_metadata.sampling_key.definition_ast) != ast_to_str(current_metadata->sampling_key.definition_ast))\n-            future_metadata_in_zk.sampling_expression = serializeAST(*future_metadata.sampling_key.expression_list_ast);\n+            future_metadata_in_zk.sampling_expression = serializeAST(*extractKeyExpressionList(future_metadata.sampling_key.definition_ast));\n \n         if (ast_to_str(future_metadata.partition_key.definition_ast) != ast_to_str(current_metadata->partition_key.definition_ast))\n-            future_metadata_in_zk.partition_key = serializeAST(*future_metadata.partition_key.expression_list_ast);\n+            future_metadata_in_zk.partition_key = serializeAST(*extractKeyExpressionList(future_metadata.partition_key.definition_ast));\n \n         if (ast_to_str(future_metadata.table_ttl.definition_ast) != ast_to_str(current_metadata->table_ttl.definition_ast))\n         {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.reference b/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.reference\nnew file mode 100644\nindex 000000000000..4063d93d542c\n--- /dev/null\n+++ b/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.reference\n@@ -0,0 +1,6 @@\n+2019-10-01\ta\t1\taa\t1\t1\t1\n+2019-10-01\ta\t1\taa\t1\t1\t1\t0\n+CREATE TABLE default.table_for_alter\\n(\\n    `d` Date,\\n    `a` String,\\n    `b` UInt8,\\n    `x` String,\\n    `y` Int8,\\n    `version` UInt64,\\n    `sign` Int8 DEFAULT 1,\\n    `order` UInt32\\n)\\nENGINE = ReplicatedVersionedCollapsingMergeTree(\\'/clickhouse/tables/01526_alter_add/t1\\', \\'1\\', sign, version)\\nPARTITION BY y\\nPRIMARY KEY d\\nORDER BY (d, order)\\nSETTINGS index_granularity = 8192\n+2019-10-01\ta\t1\taa\t1\t1\t1\t0\t0\n+2019-10-02\tb\t2\tbb\t2\t2\t2\t1\t2\n+CREATE TABLE default.table_for_alter\\n(\\n    `d` Date,\\n    `a` String,\\n    `b` UInt8,\\n    `x` String,\\n    `y` Int8,\\n    `version` UInt64,\\n    `sign` Int8 DEFAULT 1,\\n    `order` UInt32,\\n    `datum` UInt32\\n)\\nENGINE = ReplicatedVersionedCollapsingMergeTree(\\'/clickhouse/tables/01526_alter_add/t1\\', \\'1\\', sign, version)\\nPARTITION BY y\\nPRIMARY KEY d\\nORDER BY (d, order, datum)\\nSETTINGS index_granularity = 8192\ndiff --git a/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.sql b/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.sql\nnew file mode 100644\nindex 000000000000..b718ba199c17\n--- /dev/null\n+++ b/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.sql\n@@ -0,0 +1,38 @@\n+DROP TABLE IF EXISTS table_for_alter;\n+\n+SET replication_alter_partitions_sync = 2;\n+\n+CREATE TABLE table_for_alter\n+(\n+    `d` Date,\n+    `a` String,\n+    `b` UInt8,\n+    `x` String,\n+    `y` Int8,\n+    `version` UInt64,\n+    `sign` Int8 DEFAULT 1\n+)\n+ENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/tables/01526_alter_add/t1', '1', sign, version)\n+PARTITION BY y\n+ORDER BY d\n+SETTINGS index_granularity = 8192;\n+\n+INSERT INTO table_for_alter VALUES(toDate('2019-10-01'), 'a', 1, 'aa', 1, 1, 1);\n+\n+SELECT * FROM table_for_alter;\n+\n+ALTER TABLE table_for_alter ADD COLUMN order UInt32, MODIFY ORDER BY (d, order);\n+\n+SELECT * FROM table_for_alter;\n+\n+SHOW CREATE TABLE table_for_alter;\n+\n+ALTER TABLE table_for_alter ADD COLUMN datum UInt32, MODIFY ORDER BY (d, order, datum);\n+\n+INSERT INTO table_for_alter VALUES(toDate('2019-10-02'), 'b', 2, 'bb', 2, 2, 2, 1, 2);\n+\n+SELECT * FROM table_for_alter ORDER BY d;\n+\n+SHOW CREATE TABLE table_for_alter;\n+\n+DROP TABLE IF EXISTS table_for_alter;\n",
  "problem_statement": "ADD COLUMN MODIFY QUERY query on a ReplicatedVersionedCollapsingMergeTree table causes client to freeze.\n**Describe the bug**\r\nThe ClickHouse client freezes when executing `ALTER TABLE` with `ADD COLUMN` and `MODIFY ORDER` on a table built using Replicated Versioned Collapsing Merge Tree engine.\r\n\r\n**How to reproduce**\r\n* ClickHouse client version 20.10.1.1.\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 20.10.1 revision 54440.\r\n\r\n* `CREATE TABLE` statements\r\n```\r\nSHOW CREATE TABLE table0\r\n\r\n\u250c\u2500statement\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 CREATE TABLE default.table0\r\n(\r\n    `d` Date,\r\n    `a` String,\r\n    `b` UInt8,\r\n    `x` String,\r\n    `y` Int8,\r\n    `version` UInt64,\r\n    `sign` Int8 DEFAULT 1\r\n)\r\nENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/tables/{shard}/table0', '{replica}', sign, version)\r\nPARTITION BY y\r\nORDER BY d\r\nSETTINGS index_granularity = 8192 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 rows in set. Elapsed: 0.004 sec.\r\n```\r\n\r\n* Queries to run that lead to unexpected result\r\n```\r\nALTER TABLE table0 ADD COLUMN order UInt32, MODIFY ORDER BY (d, order)\r\n```\n",
  "hints_text": "",
  "created_at": "2020-10-15T13:04:36Z",
  "modified_files": [
    "src/Storages/StorageReplicatedMergeTree.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.reference",
    "b/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.sql"
  ]
}