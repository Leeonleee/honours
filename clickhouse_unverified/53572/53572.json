{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 53572,
  "instance_id": "ClickHouse__ClickHouse-53572",
  "issue_numbers": [
    "53508"
  ],
  "base_commit": "a1522e22ea600f70b7e7beddd2afee120b855f19",
  "patch": "diff --git a/src/Interpreters/InterpreterSelectQuery.cpp b/src/Interpreters/InterpreterSelectQuery.cpp\nindex fb04cc77955a..0241f5f105f0 100644\n--- a/src/Interpreters/InterpreterSelectQuery.cpp\n+++ b/src/Interpreters/InterpreterSelectQuery.cpp\n@@ -1193,12 +1193,12 @@ static InterpolateDescriptionPtr getInterpolateDescription(\n             }\n \n             col_set.clear();\n-            for (const auto & column : source_block)\n+            for (const auto & column : result_block)\n             {\n                 source_columns.emplace_back(column.name, column.type);\n                 col_set.insert(column.name);\n             }\n-            for (const auto & column : result_block)\n+            for (const auto & column : source_block)\n                 if (!col_set.contains(column.name))\n                     source_columns.emplace_back(column.name, column.type);\n         }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02861_interpolate_alias_precedence.reference b/tests/queries/0_stateless/02861_interpolate_alias_precedence.reference\nnew file mode 100644\nindex 000000000000..0e207969f7c7\n--- /dev/null\n+++ b/tests/queries/0_stateless/02861_interpolate_alias_precedence.reference\n@@ -0,0 +1,8 @@\n+2023-05-15\t1\n+2023-05-16\t1\n+2023-05-17\t1\n+2023-05-18\t1\n+2023-05-19\t1\n+2023-05-20\t1\n+2023-05-21\t1\n+2023-05-22\t15\ndiff --git a/tests/queries/0_stateless/02861_interpolate_alias_precedence.sql b/tests/queries/0_stateless/02861_interpolate_alias_precedence.sql\nnew file mode 100644\nindex 000000000000..dc96b9c57c71\n--- /dev/null\n+++ b/tests/queries/0_stateless/02861_interpolate_alias_precedence.sql\n@@ -0,0 +1,8 @@\n+DROP TABLE IF EXISTS 02861_interpolate;\n+\n+CREATE TABLE 02861_interpolate (date Date, id String, f Int16) ENGINE=MergeTree() ORDER BY (date);\n+INSERT INTO 02861_interpolate VALUES ('2023-05-15', '1', 1), ('2023-05-22', '1', 15);\n+\n+SELECT date AS d, toNullable(f) AS f FROM 02861_interpolate WHERE id = '1' ORDER BY d ASC WITH FILL STEP toIntervalDay(1) INTERPOLATE (f);\n+\n+DROP TABLE 02861_interpolate;\n",
  "problem_statement": "Crash when running query with INTERPOLATE clause\nThere is a crash under certain conditions when  executing a query with an  `ORDER BY... INTERPOLATE` clause. This issue happens in the most recent CH version.\r\n\r\nIn a table with the following schema and data:\r\n\r\n```\r\nCREATE TABLE test (date Date, id String, f Int16) \r\n  ENGINE=MergeTree() \r\n  ORDER BY (date);\r\n\r\nINSERT INTO test VALUES ('2023-05-15', '1', 1);\r\nINSERT INTO test VALUES ('2023-05-22', '1', 15);\r\n```\r\n\r\nCH crashes when running the following query:\r\n```\r\nSELECT\r\n    date AS d,\r\n    toNullable(f) AS f\r\nFROM test\r\nWHERE id = '1'\r\nORDER BY d ASC WITH FILL STEP toIntervalDay(1)\r\nINTERPOLATE ( f )\r\n```\r\n\r\nThe exception (triggered by an `assert_cast`) is the following: \r\n`Bad cast from type DB::ColumnNullable to DB::ColumnVector<short>`\r\n\r\nThe query runs fine if the derived column doesn't have the same name than the column in the original table, i.e, just replace `AS f` to a different alias, f2, and interpolate f2.\r\n\r\n**Bit of analysis**\r\nThe exception is triggered in the function `FillingTransform::interpolate`, when executing the instruction `column->insertFrom(*last_row[col_pos], 0);` \r\n\r\nThe cause of this seems to be that the member `input_positions`, instead of using the type of the aliased column, associates to this position the type of the column in the original table, which is not nullable. This vector is initialized in the constructor, from the content of `interpolate_description->required_columns_map`, which is in turn initialized in the constructor of `InterpolateDescription` from the contents of an object of type `ActionsDAGPtr`\r\n\n",
  "hints_text": "Cannot reproduce it with provided queries: https://fiddle.clickhouse.com/daafbcca-755c-4c7a-8293-53b2ef2a614d\r\n\r\n> This issue happens in the most recent CH version.\r\n\r\nWhat version exactly? Also, do you have any settings changed? Could you please share `<Fatal>` log messages printed on crash? \nHello. The version is `23.8.1.1`, despite I'm using actually the code in master branch. I don't have any settings changed.\r\n\r\nThe crash seems to occur only in the debug build (since assert_cast only throws exceptions in this kind of build) In release, the algorithm keeps on without any check.\r\n\r\nIn this fiddle https://fiddle.clickhouse.com/1b68b1e3-f30f-4d15-86cb-783f6f330616 (just a variation of the above) the error appears more clearly: just changing the alias name produces different results. Also, the results of the first query are incorrect, I would be expecting something like the second query (`1 1 1... 15`)  but instead it generates those negative numbers\n```\r\ndell9510 :) CREATE TABLE test (date Date, id String, f Int16) \r\n  ENGINE=MergeTree() \r\n  ORDER BY (date);\r\n\r\nCREATE TABLE test\r\n(\r\n    `date` Date,\r\n    `id` String,\r\n    `f` Int16\r\n)\r\nENGINE = MergeTree\r\nORDER BY date\r\n\r\nQuery id: d91e0d72-8f9c-4acf-9314-33078f93c16e\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.017 sec. \r\n\r\ndell9510 :) INSERT INTO test VALUES ('2023-05-15', '1', 1);\r\n\r\nINSERT INTO test FORMAT Values\r\n\r\nQuery id: ae1b9fc8-5f49-4a4d-a199-02b57a9461ea\r\n\r\nOk.\r\n\r\n1 row in set. Elapsed: 0.016 sec. \r\n\r\ndell9510 :) INSERT INTO test VALUES ('2023-05-22', '1', 15);\r\n\r\nINSERT INTO test FORMAT Values\r\n\r\nQuery id: 21d66ce7-f680-492f-962f-5f9c7edccd78\r\n\r\nOk.\r\n\r\n1 row in set. Elapsed: 0.017 sec. \r\n\r\ndell9510 :) SELECT\r\n    date AS d,\r\n    toNullable(f) AS f\r\nFROM test\r\nWHERE id = '1'\r\nORDER BY d ASC WITH FILL STEP toIntervalDay(1)\r\nINTERPOLATE ( f )\r\n\r\nSELECT\r\n    date AS d,\r\n    toNullable(f) AS f\r\nFROM test\r\nWHERE id = '1'\r\nORDER BY d ASC WITH FILL STEP toIntervalDay(1)\r\nINTERPOLATE ( f AS f )\r\n\r\nQuery id: 05e1ffa6-cff0-4adf-80cd-af55b1e63495\r\n\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500d\u2500\u252c\u2500f\u2500\u2510\r\n\u2502 2023-05-15 \u2502 1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\r\n[dell9510] 2023.08.18 13:06:47.871195 [ 590947 ] {05e1ffa6-cff0-4adf-80cd-af55b1e63495} <Fatal> : Logical error: 'Bad cast from type DB::ColumnNullable to DB::ColumnVector<short>'.\r\n[dell9510] 2023.08.18 13:06:47.873382 [ 601402 ] <Fatal> BaseDaemon: ########################################\r\n[dell9510] 2023.08.18 13:06:47.873609 [ 601402 ] <Fatal> BaseDaemon: (version 23.8.1.1, build id: 2E6D8B60379E0D1E704FB5156A9FC059D53E29FB, git hash: 72b52250ea63ed7fc01c72b0f18e06db57225181) (from thread 590947) (query_id: 05e1ffa6-cff0-4adf-80cd-af55b1e63495) (query: SELECT\r\n    date AS d,\r\n    toNullable(f) AS f\r\nFROM test\r\nWHERE id = '1'\r\nORDER BY d ASC WITH FILL STEP toIntervalDay(1)\r\nINTERPOLATE ( f )) Received signal Aborted (6)\r\n[dell9510] 2023.08.18 13:06:47.873889 [ 601402 ] <Fatal> BaseDaemon: \r\n[dell9510] 2023.08.18 13:06:47.874135 [ 601402 ] <Fatal> BaseDaemon: Stack trace: 0x00007fd460da126c 0x00007fd460d51a08 0x00007fd460d3a538 0x0000000014718eb8 0x0000000014718f35 0x00000000147193f4 0x000000000b192bd7 0x000000000b19812f 0x00000000131c391d 0x000000001e90b089 0x0000000020540d07 0x0000000020542dc5 0x00000000205437ae 0x0000000018dcb1a2 0x000000001fd552e9 0x000000001fd93bf0 0x000000001fd938e1 0x000000001fd76a5e 0x000000001fd76de4 0x000000001fd77be7 0x000000001fd77b35 0x000000001fd77b15 0x000000001fd77af5 0x000000001fd77ac0 0x0000000014792856 0x0000000014791bd5 0x00000000148ac881 0x00000000148b7ff1 0x00000000148b7fb5 0x00000000148b7f99 0x00000000148b7efd 0x00000000148b7dd8 0x00000000148b7d15 0x00000000148b7cf5 0x00000000148b7cd5 0x00000000148b7ca0 0x0000000014792856 0x0000000014791bd5 0x00000000148a8ba1 0x00000000148b1a31 0x00000000148b19d5\r\n[dell9510] 2023.08.18 13:06:47.874463 [ 601402 ] <Fatal> BaseDaemon: 4. ? @ 0x00007fd460da126c in ?\r\n[dell9510] 2023.08.18 13:06:47.874636 [ 601402 ] <Fatal> BaseDaemon: 5. ? @ 0x00007fd460d51a08 in ?\r\n[dell9510] 2023.08.18 13:06:47.874750 [ 601402 ] <Fatal> BaseDaemon: 6. ? @ 0x00007fd460d3a538 in ?\r\n[dell9510] 2023.08.18 13:06:48.016489 [ 601402 ] <Fatal> BaseDaemon: 7. /home/tavplubix/ch/ClickHouse/src/Common/Exception.cpp:43: DB::abortOnFailedAssertion(String const&) @ 0x0000000014718eb8 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:48.101327 [ 601402 ] <Fatal> BaseDaemon: 8. /home/tavplubix/ch/ClickHouse/src/Common/Exception.cpp:68: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&) @ 0x0000000014718f35 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:48.168614 [ 601402 ] <Fatal> BaseDaemon: 9. /home/tavplubix/ch/ClickHouse/src/Common/Exception.cpp:102: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000147193f4 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:48.248032 [ 601402 ] <Fatal> BaseDaemon: 10. /home/tavplubix/ch/ClickHouse/src/Common/Exception.h:73: DB::Exception::Exception(String&&, int, bool) @ 0x000000000b192bd7 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:48.329357 [ 601402 ] <Fatal> BaseDaemon: 11. /home/tavplubix/ch/ClickHouse/src/Common/Exception.h:101: DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x000000000b19812f in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:48.433897 [ 601402 ] <Fatal> BaseDaemon: 12. /home/tavplubix/ch/ClickHouse/src/Common/assert_cast.h:47: DB::ColumnVector<short> const& assert_cast<DB::ColumnVector<short> const&, DB::IColumn const&>(DB::IColumn const&) @ 0x00000000131c391d in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:48.787861 [ 601402 ] <Fatal> BaseDaemon: 13. /home/tavplubix/ch/ClickHouse/src/Columns/ColumnVector.h:154: DB::ColumnVector<short>::insertFrom(DB::IColumn const&, unsigned long) @ 0x000000001e90b089 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.055205 [ 601402 ] <Fatal> BaseDaemon: 14. /home/tavplubix/ch/ClickHouse/src/Processors/Transforms/FillingTransform.cpp:334: DB::FillingTransform::interpolate(std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>> const&, DB::Block&) @ 0x0000000020540d07 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.228166 [ 601402 ] <Fatal> BaseDaemon: 15. /home/tavplubix/ch/ClickHouse/src/Processors/Transforms/FillingTransform.cpp:639: DB::FillingTransform::transformRange(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>> const&, std::vector<DB::IColumn*, std::allocator<DB::IColumn*>> const&, std::vector<DB::IColumn*, std::allocator<DB::IColumn*>> const&, std::vector<DB::IColumn*, std::allocator<DB::IColumn*>> const&, std::vector<DB::IColumn*, std::allocator<DB::IColumn*>> const&, std::pair<unsigned long, unsigned long>, bool) @ 0x0000000020542dc5 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.409424 [ 601402 ] <Fatal> BaseDaemon: 16. /home/tavplubix/ch/ClickHouse/src/Processors/Transforms/FillingTransform.cpp:729: DB::FillingTransform::transform(DB::Chunk&) @ 0x00000000205437ae in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.519450 [ 601402 ] <Fatal> BaseDaemon: 17. /home/tavplubix/ch/ClickHouse/src/Processors/ISimpleTransform.h:33: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x0000000018dcb1a2 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.582547 [ 601402 ] <Fatal> BaseDaemon: 18. /home/tavplubix/ch/ClickHouse/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001fd552e9 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.620604 [ 601402 ] <Fatal> BaseDaemon: 19. /home/tavplubix/ch/ClickHouse/src/Processors/Executors/ExecutionThreadContext.cpp:47: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) @ 0x000000001fd93bf0 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.647250 [ 601402 ] <Fatal> BaseDaemon: 20. /home/tavplubix/ch/ClickHouse/src/Processors/Executors/ExecutionThreadContext.cpp:95: DB::ExecutionThreadContext::executeTask() @ 0x000000001fd938e1 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.738966 [ 601402 ] <Fatal> BaseDaemon: 21. /home/tavplubix/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:255: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x000000001fd76a5e in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.816227 [ 601402 ] <Fatal> BaseDaemon: 22. /home/tavplubix/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:221: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x000000001fd76de4 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.887726 [ 601402 ] <Fatal> BaseDaemon: 23. /home/tavplubix/ch/ClickHouse/src/Processors/Executors/PipelineExecutor.cpp:343: DB::PipelineExecutor::spawnThreads()::$_0::operator()() const @ 0x000000001fd77be7 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:49.977631 [ 601402 ] <Fatal> BaseDaemon: 24. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: decltype(std::declval<DB::PipelineExecutor::spawnThreads()::$_0&>()()) std::__invoke[abi:v15000]<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) @ 0x000000001fd77b35 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.066107 [ 601402 ] <Fatal> BaseDaemon: 25. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/invoke.h:480: void std::__invoke_void_return_wrapper<void, true>::__call<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) @ 0x000000001fd77b15 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.159501 [ 601402 ] <Fatal> BaseDaemon: 26. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:235: std::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>::operator()[abi:v15000]() @ 0x000000001fd77af5 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.251965 [ 601402 ] <Fatal> BaseDaemon: 27. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:716: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x000000001fd77ac0 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.298951 [ 601402 ] <Fatal> BaseDaemon: 28. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:848: std::__function::__policy_func<void ()>::operator()[abi:v15000]() const @ 0x0000000014792856 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.344387 [ 601402 ] <Fatal> BaseDaemon: 29. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:1187: std::function<void ()>::operator()() const @ 0x0000000014791bd5 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.409601 [ 601402 ] <Fatal> BaseDaemon: 30. /home/tavplubix/ch/ClickHouse/src/Common/ThreadPool.cpp:426: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x00000000148ac881 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.489082 [ 601402 ] <Fatal> BaseDaemon: 31. /home/tavplubix/ch/ClickHouse/src/Common/ThreadPool.cpp:179: void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()::operator()() const @ 0x00000000148b7ff1 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.571118 [ 601402 ] <Fatal> BaseDaemon: 32. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: decltype(std::declval<void>()()) std::__invoke[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()&>(void&&) @ 0x00000000148b7fb5 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.654025 [ 601402 ] <Fatal> BaseDaemon: 33. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/tuple:1789: decltype(auto) std::__apply_tuple_impl[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()&, std::tuple<>&>(void&&, std::tuple<>&, std::__tuple_indices<>) @ 0x00000000148b7f99 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.748244 [ 601402 ] <Fatal> BaseDaemon: 34. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/tuple:1798: decltype(auto) std::apply[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()&, std::tuple<>&>(void&&, std::tuple<>&) @ 0x00000000148b7efd in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.835805 [ 601402 ] <Fatal> BaseDaemon: 35. /home/tavplubix/ch/ClickHouse/src/Common/ThreadPool.h:242: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x00000000148b7dd8 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:50.919896 [ 601402 ] <Fatal> BaseDaemon: 36. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: decltype(std::declval<void>()()) std::__invoke[abi:v15000]<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()&>(void&&) @ 0x00000000148b7d15 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.001939 [ 601402 ] <Fatal> BaseDaemon: 37. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/invoke.h:480: void std::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()&) @ 0x00000000148b7cf5 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.080710 [ 601402 ] <Fatal> BaseDaemon: 38. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:235: std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>::operator()[abi:v15000]() @ 0x00000000148b7cd5 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.157054 [ 601402 ] <Fatal> BaseDaemon: 39. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:716: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000148b7ca0 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.201904 [ 601402 ] <Fatal> BaseDaemon: 40. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:848: std::__function::__policy_func<void ()>::operator()[abi:v15000]() const @ 0x0000000014792856 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.242521 [ 601402 ] <Fatal> BaseDaemon: 41. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:1187: std::function<void ()>::operator()() const @ 0x0000000014791bd5 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.299367 [ 601402 ] <Fatal> BaseDaemon: 42. /home/tavplubix/ch/ClickHouse/src/Common/ThreadPool.cpp:426: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x00000000148a8ba1 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.369167 [ 601402 ] <Fatal> BaseDaemon: 43. /home/tavplubix/ch/ClickHouse/src/Common/ThreadPool.cpp:179: void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()::operator()() const @ 0x00000000148b1a31 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.443527 [ 601402 ] <Fatal> BaseDaemon: 44. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: decltype(std::declval<void>()()) std::__invoke[abi:v15000]<void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&) @ 0x00000000148b19d5 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n[dell9510] 2023.08.18 13:06:51.443764 [ 601402 ] <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read.\r\n[dell9510] 2023.08.18 13:06:54.496392 [ 601402 ] <Fatal> BaseDaemon: This ClickHouse version is not official and should be upgraded to the official build.\r\n[dell9510] 2023.08.18 13:06:54.496766 [ 601402 ] <Fatal> BaseDaemon: Changed settings: stream_like_engine_allow_direct_select = true, log_queries = true, distributed_ddl_task_timeout = 30, query_profiler_real_time_period_ns = 1000000000, query_profiler_cpu_time_period_ns = 1000000000, allow_experimental_analyzer = false, show_table_uuid_in_table_create_query_if_not_nil = false, database_atomic_wait_for_drop_and_detach_synchronously = false, allow_experimental_database_replicated = true, database_replicated_initial_query_timeout_sec = 30, database_replicated_always_detach_permanently = true, distributed_ddl_output_mode = 'none', distributed_ddl_entry_format_version = 3, background_pool_size = 16, default_database_engine = 'Atomic'\r\n\u2193 Progress: 2.00 rows, 28.00 B (0.20 rows/s., 2.80 B/s.)                                                                                                                       (0.0 CPU, 9.68 KB RAM)Exception on client:\r\nCode: 32. DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000. (ATTEMPT_TO_READ_AFTER_EOF)\r\n\r\n```\ncc: @yakov-olkhovskiy ",
  "created_at": "2023-08-19T02:10:17Z"
}