diff --git a/tests/queries/0_stateless/03261_any_respect_camelCase_aliases.reference b/tests/queries/0_stateless/03261_any_respect_camelCase_aliases.reference
new file mode 100644
index 000000000000..39f78128b24a
--- /dev/null
+++ b/tests/queries/0_stateless/03261_any_respect_camelCase_aliases.reference
@@ -0,0 +1,30 @@
+anyRespectNulls
+0
+\N
+\N
+0
+6
+firstValueRespectNulls
+0
+\N
+\N
+0
+6
+anyValueRespectNulls
+0
+\N
+\N
+0
+6
+lastValueRespectNulls
+4
+\N
+\N
+0
+9
+anyLastRespectNulls
+4
+\N
+\N
+0
+9
diff --git a/tests/queries/0_stateless/03261_any_respect_camelCase_aliases.sql b/tests/queries/0_stateless/03261_any_respect_camelCase_aliases.sql
new file mode 100644
index 000000000000..c56f096242c8
--- /dev/null
+++ b/tests/queries/0_stateless/03261_any_respect_camelCase_aliases.sql
@@ -0,0 +1,40 @@
+-- Tests aliases of any and anyLast functions
+
+-- aliases of any
+
+SELECT 'anyRespectNulls';
+SELECT anyRespectNulls(number) FROM numbers(5);
+SELECT arrayReduce('anyRespectNulls', [NULL, 10]::Array(Nullable(UInt8)));
+SELECT anyRespectNullsMerge(t) FROM (SELECT anyRespectNullsState(NULL::Nullable(UInt8)) as t FROM numbers(5));
+SELECT finalizeAggregation(CAST(unhex('01'), 'AggregateFunction(anyRespectNulls, UInt64)'));
+SELECT anyRespectNullsIf (number, NOT isNull(number) AND (assumeNotNull(number) > 5)) FROM numbers(10);
+
+SELECT 'firstValueRespectNulls';
+SELECT firstValueRespectNulls(number) FROM numbers(5);
+SELECT arrayReduce('firstValueRespectNulls', [NULL, 10]::Array(Nullable(UInt8)));
+SELECT firstValueRespectNullsMerge(t) FROM (SELECT firstValueRespectNullsState(NULL::Nullable(UInt8)) as t FROM numbers(5));
+SELECT finalizeAggregation(CAST(unhex('01'), 'AggregateFunction(firstValueRespectNulls, UInt64)'));
+SELECT firstValueRespectNullsIf (number, NOT isNull(number) AND (assumeNotNull(number) > 5)) FROM numbers(10);
+
+SELECT 'anyValueRespectNulls';
+SELECT anyValueRespectNulls(number) FROM numbers(5);
+SELECT arrayReduce('anyValueRespectNulls', [NULL, 10]::Array(Nullable(UInt8)));
+SELECT anyValueRespectNullsMerge(t) FROM (SELECT anyValueRespectNullsState(NULL::Nullable(UInt8)) as t FROM numbers(5));
+SELECT finalizeAggregation(CAST(unhex('01'), 'AggregateFunction(anyValueRespectNulls, UInt64)'));
+SELECT anyValueRespectNullsIf (number, NOT isNull(number) AND (assumeNotNull(number) > 5)) FROM numbers(10);
+
+-- aliases of anyLast
+
+SELECT 'lastValueRespectNulls';
+SELECT lastValueRespectNulls(number) FROM numbers(5);
+SELECT arrayReduce('lastValueRespectNulls', [10, NULL]::Array(Nullable(UInt8)));
+SELECT lastValueRespectNullsMerge(t) FROM (SELECT lastValueRespectNullsState(NULL::Nullable(UInt8)) as t FROM numbers(5));
+SELECT finalizeAggregation(CAST(unhex('01'), 'AggregateFunction(lastValueRespectNulls, UInt64)'));
+SELECT lastValueRespectNullsIf (number, NOT isNull(number) AND (assumeNotNull(number) > 5)) FROM numbers(10);
+
+SELECT 'anyLastRespectNulls';
+SELECT anyLastRespectNulls(number) FROM numbers(5);
+SELECT arrayReduce('anyLastRespectNulls', [10, NULL]::Array(Nullable(UInt8)));
+SELECT anyLastRespectNullsMerge(t) FROM (SELECT anyLastRespectNullsState(NULL::Nullable(UInt8)) as t FROM numbers(5));
+SELECT finalizeAggregation(CAST(unhex('01'), 'AggregateFunction(anyLastRespectNulls, UInt64)'));
+SELECT anyLastRespectNullsIf (number, NOT isNull(number) AND (assumeNotNull(number) > 5)) FROM numbers(10);
