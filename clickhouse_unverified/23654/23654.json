{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 23654,
  "instance_id": "ClickHouse__ClickHouse-23654",
  "issue_numbers": [
    "23646"
  ],
  "base_commit": "1a5b18cf521fe4ed7597eb50a22372b7352b29bb",
  "patch": "diff --git a/src/AggregateFunctions/StatCommon.h b/src/AggregateFunctions/StatCommon.h\nindex ba887567ad80..dc94a6b6e77b 100644\n--- a/src/AggregateFunctions/StatCommon.h\n+++ b/src/AggregateFunctions/StatCommon.h\n@@ -11,6 +11,11 @@\n namespace DB\n {\n \n+namespace ErrorCodes\n+{\n+    extern const int BAD_ARGUMENTS;\n+}\n+\n template <typename F>\n static Float64 integrateSimpson(Float64 a, Float64 b, F && func)\n {\n@@ -48,6 +53,11 @@ std::pair<RanksArray, Float64> computeRanksAndTieCorrection(const Values & value\n             ++right;\n         auto adjusted = (left + right + 1.) / 2.;\n         auto count_equal = right - left;\n+\n+        /// Scipy implementation throws exception in this case too.\n+        if (count_equal == size)\n+            throw Exception(\"All numbers in both samples are identical\", ErrorCodes::BAD_ARGUMENTS);\n+\n         tie_numenator += std::pow(count_equal, 3) - count_equal;\n         for (size_t iter = left; iter < right; ++iter)\n             out[indexes[iter]] = adjusted;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01560_mann_whitney.sql b/tests/queries/0_stateless/01560_mann_whitney.sql\nindex 6e1ac55349d6..e3a9b4ecd035 100644\n--- a/tests/queries/0_stateless/01560_mann_whitney.sql\n+++ b/tests/queries/0_stateless/01560_mann_whitney.sql\n@@ -6,4 +6,5 @@ SELECT '223.0', '0.5426959774289482';\n WITH mannWhitneyUTest(left, right) AS pair SELECT roundBankers(pair.1, 16) as t_stat, roundBankers(pair.2, 16) as p_value from mann_whitney_test;\n WITH mannWhitneyUTest('two-sided', 1)(left, right) as pair SELECT roundBankers(pair.1, 16) as t_stat, roundBankers(pair.2, 16) as p_value from mann_whitney_test;\n WITH mannWhitneyUTest('two-sided')(left, right) as pair SELECT roundBankers(pair.1, 16) as t_stat, roundBankers(pair.2, 16) as p_value from mann_whitney_test;\n+WITH mannWhitneyUTest('two-sided')(1, right) AS pair SELECT roundBankers(pair.1, 16) AS t_stat, roundBankers(pair.2, 16) AS p_value FROM mann_whitney_test; --{serverError 36}\n DROP TABLE IF EXISTS mann_whitney_test;\ndiff --git a/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.reference b/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.reference\nindex 42acbe4fbaf2..e69de29bb2d1 100644\n--- a/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.reference\n+++ b/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.reference\n@@ -1,10 +0,0 @@\n-0.5060606060606061\n-0.5083333333333333\n-0.5119047619047619\n-0.5178571428571428\n-0.5285714285714286\n-0.525\n-0.55\n-0.625\n-0.5\n-nan\ndiff --git a/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.sql b/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.sql\nindex 3c1746a30f8a..24ee9282ac0d 100644\n--- a/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.sql\n+++ b/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.sql\n@@ -13,10 +13,10 @@ ENGINE = MergeTree\n ORDER BY enroll_date\n SETTINGS index_granularity = 8192;\n \n-INSERT INTO 01802_empsalary VALUES ('sales', 1, 5000, '2006-10-01'), ('develop', 8, 6000, '2006-10-01'), ('personnel', 2, 3900, '2006-12-23'), ('develop', 10, 5200, '2007-08-01'), ('sales', 3, 4800, '2007-08-01'), ('sales', 4, 4800, '2007-08-08'), ('develop', 11, 5200, '2007-08-15'), ('personnel', 5, 3500, '2007-12-10'), ('develop', 7, 4200, '2008-01-01'), ('develop', 9, 4500, '2008-01-01');\n+INSERT INTO 01802_empsalary VALUES ('sales', 1, 5000, '2006-10-01'), ('develop', 8, 6000, '2006-10-01'), ('personnel', 2, 3900, '2006-12-23'), ('develop', 10, 5200, '2007-08-01'), ('sales', 3, 4800, '2007-08-01'), ('sales', 4, 4801, '2007-08-08'), ('develop', 11, 5200, '2007-08-15'), ('personnel', 5, 3500, '2007-12-10'), ('develop', 7, 4200, '2008-01-01'), ('develop', 9, 4500, '2008-01-01');\n \n SELECT mannWhitneyUTest(salary, salary) OVER (ORDER BY salary ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS func FROM 01802_empsalary; -- {serverError 36}\n \n-SELECT rankCorr(salary, 0.5) OVER (ORDER BY salary ASC ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS func FROM 01802_empsalary;\n+SELECT rankCorr(salary, 0.5) OVER (ORDER BY salary ASC ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS func FROM 01802_empsalary; -- {serverError 36}\n \n DROP TABLE IF EXISTS 01802_empsalary;\n",
  "problem_statement": " ../src/AggregateFunctions/StatCommon.h:17:31: runtime error: inf is outside the range of representable values of type 'const unsigned long'\n```\r\nWITH mannWhitneyUTest('two-sided')(1, right) AS pair SELECT roundBankers(pair.1, 16) AS t_stat, roundBankers(pair.2, 16) AS p_value FROM mann_whitney_test\r\n\r\n\r\n\r\n../src/AggregateFunctions/StatCommon.h:17:31: runtime error: inf is outside the range of representable values of type 'const unsigned long'\r\n    #0 0x10fd0950 in double DB::integrateSimpson<DB::MannWhitneyData::getResult(DB::MannWhitneyData::Alternative, bool)::'lambda'(double)>(double, double, DB::MannWhitneyData::getResult(DB::MannWhitneyData::Alternative, bool)::'lambda'(double)&&) obj-x86_64-linux-gnu/../src/AggregateFunctions/StatCommon.h:17:31\r\n    #1 0x10fd5273 in DB::MannWhitneyData::getResult(DB::MannWhitneyData::Alternative, bool) obj-x86_64-linux-gnu/../src/AggregateFunctions/AggregateFunctionMannWhitney.h:89:29\r\n    #2 0x10fd24c5 in DB::AggregateFunctionMannWhitney::insertResultInto(char*, DB::IColumn&, DB::Arena*) const obj-x86_64-linux-gnu/../src/AggregateFunctions/AggregateFunctionMannWhitney.h:233:57\r\n    #3 0x1aac5694 in void DB::Aggregator::insertAggregatesIntoColumns<char*>(char*&, std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::Arena*) const obj-x86_64-linux-gnu/../src/Interpreters/Aggregator.cpp:1041:44\r\n    #4 0x1a98ee8b in DB::Aggregator::prepareBlockAndFillWithoutKey(DB::AggregatedDataVariants&, bool, bool) const::$_1::operator()(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, std::__1::vector<DB::PODArray<char*, 4096ul, Allocator<false, false>, 15ul, 16ul>*, std::__1::allocator<DB::PODArray<char*, 4096ul, Allocator<false, false>, 15ul, 16ul>*> >&, std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, bool) const obj-x86_64-linux-gnu/../src/Interpreters/Aggregator.cpp:1286:17\r\n    #5 0x1a98ee8b in DB::Block DB::Aggregator::prepareBlockAndFill<DB::Aggregator::prepareBlockAndFillWithoutKey(DB::AggregatedDataVariants&, bool, bool) const::$_1&>(DB::AggregatedDataVariants&, bool, unsigned long, DB::Aggregator::prepareBlockAndFillWithoutKey(DB::AggregatedDataVariants&, bool, bool) const::$_1&) const obj-x86_64-linux-gnu/../src/Interpreters/Aggregator.cpp:1198:5\r\n    #6 0x1a98ee8b in DB::Aggregator::prepareBlockAndFillWithoutKey(DB::AggregatedDataVariants&, bool, bool) const obj-x86_64-linux-gnu/../src/Interpreters/Aggregator.cpp:1295:19\r\n    #7 0x1bf9253f in DB::ConvertingAggregatedToChunksTransform::initialize() obj-x86_64-linux-gnu/../src/Processors/Transforms/AggregatingTransform.cpp:341:45\r\n    #8 0x1bc57c58 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:80:20\r\n    #9 0x1bc57b46 in DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:97:13\r\n    #10 0x1bc57b46 in decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #11 0x1bc56493 in std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16\r\n    #12 0x1bc56493 in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #13 0x1bc56493 in DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:586:17\r\n    #14 0x1bc54d49 in DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:474:5\r\n    #15 0x1bc54d49 in DB::PipelineExecutor::executeImpl(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:813:9\r\n    #16 0x1bc5480a in DB::PipelineExecutor::execute(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:396:9\r\n    #17 0x1bc67963 in DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:80:24\r\n    #18 0x1bc678a6 in DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:107:13\r\n    #19 0x1bc678a6 in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1\r\n    #20 0x1bc67751 in decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1\r\n    #21 0x1bc67751 in decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1\r\n    #22 0x1bc67751 in ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:178:13\r\n    #23 0x1bc67751 in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #24 0xeb52a7e in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #25 0xeb52a7e in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:247:17\r\n    #26 0xeb56a15 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:124:73\r\n    #27 0xeb56a15 in decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #28 0xeb56a15 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5\r\n    #29 0xeb56a15 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5\r\n    #30 0x7f73a45b9608 in start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477:8\r\n    #31 0x7f73a44e0292 in clone /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/AggregateFunctions/StatCommon.h:17:31 in \r\n2021.04.26 14:17:29.918752 [ 44 ] {} <Trace> BaseDaemon: Received signal -3\r\n2021.04.26 14:17:29.919201 [ 173 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.04.26 14:17:29.919318 [ 173 ] {} <Fatal> BaseDaemon: (version 21.6.1.6691, build id: 369FBCB0377DFC60ED63F3FA39BDBD1A985847E2) (from thread 168) (query_id: da44bc95-9095-4591-b569-6765626060fb) Received signal Unknown signal (-3)\r\n2021.04.26 14:17:29.919366 [ 173 ] {} <Fatal> BaseDaemon: Sanitizer trap.\r\n2021.04.26 14:17:29.919437 [ 173 ] {} <Fatal> BaseDaemon: Stack trace: 0xeb1e925 0xed60ad6 0xeadff16 0xeaed9af 0x10fd0951 0x10fd5274 0x10fd24c6 0x1aac5695 0x1a98ee8c 0x1bf92540 0x1bc57c59 0x1bc57b47 0x1bc56494 0x1bc54d4a 0x1bc5480b 0x1bc67964 0x1bc678a7 0x1bc67752 0xeb52a7f 0xeb56a16 0x7f73a45b9609 0x7f73a44e0293\r\n2021.04.26 14:17:29.940416 [ 173 ] {} <Fatal> BaseDaemon: 0.1. inlined from ./obj-x86_64-linux-gnu/../src/Common/StackTrace.cpp:304: StackTrace::tryCapture()\r\n2021.04.26 14:17:29.940467 [ 173 ] {} <Fatal> BaseDaemon: 0. ../src/Common/StackTrace.cpp:265: StackTrace::StackTrace() @ 0xeb1e925 in /workspace/clickhouse\r\n2021.04.26 14:17:30.000132 [ 117 ] {} <Debug> AsynchronousMetrics: MemoryTracking: was 852.89 MiB, peak 1.14 GiB, will set to 991.90 MiB (RSS), difference: 139.02 MiB\r\n2021.04.26 14:17:30.004673 [ 173 ] {} <Fatal> BaseDaemon: 1. ./obj-x86_64-linux-gnu/../base/daemon/BaseDaemon.cpp:381: sanitizerDeathCallback() @ 0xed60ad6 in /workspace/clickhouse\r\n2021.04.26 14:17:30.966895 [ 173 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0xeadff16 in /workspace/clickhouse\r\n2021.04.26 14:17:31.910802 [ 173 ] {} <Fatal> BaseDaemon: 3. ? @ 0xeaed9af in /workspace/clickhouse\r\n2021.04.26 14:17:32.864741 [ 173 ] {} <Fatal> BaseDaemon: 4. ? @ 0x10fd0951 in /workspace/clickhouse\r\n2021.04.26 14:17:32.884218 [ 173 ] {} <Fatal> BaseDaemon: 5. ./obj-x86_64-linux-gnu/../src/AggregateFunctions/AggregateFunctionMannWhitney.h:75: DB::MannWhitneyData::getResult(DB::MannWhitneyData::Alternative, bool) @ 0x10fd5274 in /workspace/clickhouse\r\n2021.04.26 14:17:32.902600 [ 173 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/AggregateFunctions/AggregateFunctionMannWhitney.h:233: DB::AggregateFunctionMannWhitney::insertResultInto(char*, DB::IColumn&, DB::Arena*) const @ 0x10fd24c6 in /workspace/clickhouse\r\n2021.04.26 14:17:33.142763 [ 173 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Interpreters/Aggregator.cpp:1040: void DB::Aggregator::insertAggregatesIntoColumns<char*>(char*&, std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::Arena*) const @ 0x1aac5695 in /workspace/clickhouse\r\n2021.04.26 14:17:33.242473 [ 173 ] {} <Fatal> BaseDaemon: 8.1. inlined from ./obj-x86_64-linux-gnu/../src/Interpreters/Aggregator.cpp:1286: operator()\r\n2021.04.26 14:17:33.242520 [ 173 ] {} <Fatal> BaseDaemon: 8.2. inlined from ../src/Interpreters/Aggregator.cpp:1198: DB::Block DB::Aggregator::prepareBlockAndFill<DB::Aggregator::prepareBlockAndFillWithoutKey(DB::AggregatedDataVariants&, bool, bool) const::$_1&>(DB::AggregatedDataVariants&, bool, unsigned long, DB::Aggregator::prepareBlockAndFillWithoutKey(DB::AggregatedDataVariants&, bool, bool) const::$_1&) const\r\n2021.04.26 14:17:33.242544 [ 173 ] {} <Fatal> BaseDaemon: 8. ../src/Interpreters/Aggregator.cpp:1295: DB::Aggregator::prepareBlockAndFillWithoutKey(DB::AggregatedDataVariants&, bool, bool) const @ 0x1a98ee8c in /workspace/clickhouse\r\n2021.04.26 14:17:33.323576 [ 173 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/AggregatingTransform.cpp:344: DB::ConvertingAggregatedToChunksTransform::initialize() @ 0x1bf92540 in /workspace/clickhouse\r\n2021.04.26 14:17:33.407696 [ 173 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:88: DB::executeJob(DB::IProcessor*) @ 0x1bc57c59 in /workspace/clickhouse\r\n2021.04.26 14:17:33.489355 [ 173 ] {} <Fatal> BaseDaemon: 11.1. inlined from ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:100: operator()\r\n2021.04.26 14:17:33.489387 [ 173 ] {} <Fatal> BaseDaemon: 11. ../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) @ 0x1bc57b47 in /workspace/clickhouse\r\n2021.04.26 14:17:33.566714 [ 173 ] {} <Fatal> BaseDaemon: 12.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:0: std::__1::__function::__policy_func<void ()>::operator()() const\r\n2021.04.26 14:17:33.566748 [ 173 ] {} <Fatal> BaseDaemon: 12.2. inlined from ../contrib/libcxx/include/functional:2560: std::__1::function<void ()>::operator()() const\r\n2021.04.26 14:17:33.566767 [ 173 ] {} <Fatal> BaseDaemon: 12. ../src/Processors/Executors/PipelineExecutor.cpp:586: DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x1bc56494 in /workspace/clickhouse\r\n2021.04.26 14:17:33.639219 [ 173 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:0: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long)\r\n2021.04.26 14:17:33.639251 [ 173 ] {} <Fatal> BaseDaemon: 13. ../src/Processors/Executors/PipelineExecutor.cpp:813: DB::PipelineExecutor::executeImpl(unsigned long) @ 0x1bc54d4a in /workspace/clickhouse\r\n2021.04.26 14:17:33.716788 [ 173 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:399: DB::PipelineExecutor::execute(unsigned long) @ 0x1bc5480b in /workspace/clickhouse\r\n2021.04.26 14:17:33.758149 [ 173 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:0: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0x1bc67964 in /workspace/clickhouse\r\n2021.04.26 14:17:33.798973 [ 173 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682: decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) @ 0x1bc678a7 in /workspace/clickhouse\r\n2021.04.26 14:17:33.839670 [ 173 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:0: operator()\r\n2021.04.26 14:17:33.839723 [ 173 ] {} <Fatal> BaseDaemon: 17. ../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) @ 0x1bc67752 in /workspace/clickhouse\r\n2021.04.26 14:17:33.854946 [ 173 ] {} <Fatal> BaseDaemon: 18.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2021.04.26 14:17:33.854975 [ 173 ] {} <Fatal> BaseDaemon: 18. ../src/Common/ThreadPool.cpp:250: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xeb52a7f in /workspace/clickhouse\r\n2021.04.26 14:17:33.871589 [ 173 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:0: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0xeb56a16 in /workspace/clickhouse\r\n2021.04.26 14:17:33.871643 [ 173 ] {} <Fatal> BaseDaemon: 20. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2021.04.26 14:17:33.871685 [ 173 ] {} <Fatal> BaseDaemon: 21. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.04.26 14:17:34.144984 [ 173 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: DC91F9F49D6B830373FE1E8D537C970D. There is no information about the reference checksum.\r\n```\r\n\r\n\r\nhttps://clickhouse-test-reports.s3.yandex.net/23554/5d101336ffa3a323d1de9ab2216c13ec3d2e0628/fuzzer_ubsan/report.html#fail1\n",
  "hints_text": "",
  "created_at": "2021-04-26T18:10:56Z"
}