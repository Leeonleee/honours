diff --git a/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.reference b/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.reference
index 645cec31b478..5e8c7fc243f8 100644
--- a/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.reference
+++ b/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.reference
@@ -5,4 +5,5 @@
 --   "Chunk should have AggregatedChunkInfo in GroupingAggregatedTransform"
 -- at first and after
 --   "Chunk should have AggregatedChunkInfo in GroupingAggregatedTransform"
-select count() from remote('127.{1,2}', currentDatabase(), data_02176) where key = 0 group by key settings optimize_aggregation_in_order=1;
+select count() from remote('127.{1,2}', currentDatabase(), data_02176) where key = 0 group by key;
+select count() from remote('127.{1,2}', currentDatabase(), data_02176) where key = 0 group by key settings distributed_aggregation_memory_efficient=0;
diff --git a/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.sql b/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.sql
index a86fd4357c8e..35731c63f0d3 100644
--- a/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.sql
+++ b/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.sql
@@ -1,6 +1,8 @@
 drop table if exists data_02176;
 create table data_02176 (key Int) Engine=MergeTree() order by key;
 
+set optimize_aggregation_in_order=1;
+
 -- { echoOn }
 
 -- regression for optimize_aggregation_in_order with empty result set
@@ -8,7 +10,8 @@ create table data_02176 (key Int) Engine=MergeTree() order by key;
 --   "Chunk should have AggregatedChunkInfo in GroupingAggregatedTransform"
 -- at first and after
 --   "Chunk should have AggregatedChunkInfo in GroupingAggregatedTransform"
-select count() from remote('127.{1,2}', currentDatabase(), data_02176) where key = 0 group by key settings optimize_aggregation_in_order=1;
+select count() from remote('127.{1,2}', currentDatabase(), data_02176) where key = 0 group by key;
+select count() from remote('127.{1,2}', currentDatabase(), data_02176) where key = 0 group by key settings distributed_aggregation_memory_efficient=0;
 
 -- { echoOff }
 drop table data_02176;
diff --git a/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.reference b/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.reference
index 00e893213c0f..0345e05303ce 100644
--- a/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.reference
+++ b/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.reference
@@ -2,5 +2,7 @@
 
 -- regression for optimize_aggregation_in_order
 -- that cause "Chunk should have AggregatedChunkInfo in GroupingAggregatedTransform" error
-select count() from remote('127.{1,2}', currentDatabase(), data_02177) group by key settings optimize_aggregation_in_order=1;
+select count() from remote('127.{1,2}', currentDatabase(), data_02177) group by key;
+2
+select count() from remote('127.{1,2}', currentDatabase(), data_02177) group by key settings distributed_aggregation_memory_efficient=0;
 2
diff --git a/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.sql b/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.sql
index 17c4a1dba29d..9dc3a24213e8 100644
--- a/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.sql
+++ b/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.sql
@@ -2,11 +2,14 @@ drop table if exists data_02177;
 create table data_02177 (key Int) Engine=MergeTree() order by key;
 insert into data_02177 values (1);
 
+set optimize_aggregation_in_order=1;
+
 -- { echoOn }
 
 -- regression for optimize_aggregation_in_order
 -- that cause "Chunk should have AggregatedChunkInfo in GroupingAggregatedTransform" error
-select count() from remote('127.{1,2}', currentDatabase(), data_02177) group by key settings optimize_aggregation_in_order=1;
+select count() from remote('127.{1,2}', currentDatabase(), data_02177) group by key;
+select count() from remote('127.{1,2}', currentDatabase(), data_02177) group by key settings distributed_aggregation_memory_efficient=0;
 
 -- { echoOff }
 drop table data_02177;
