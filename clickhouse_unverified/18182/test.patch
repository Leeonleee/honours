diff --git a/tests/queries/0_stateless/01355_CSV_input_format_allow_errors.reference b/tests/queries/0_stateless/01355_CSV_input_format_allow_errors.reference
index 5d20150fdc1a..f7c4f677e9aa 100644
--- a/tests/queries/0_stateless/01355_CSV_input_format_allow_errors.reference
+++ b/tests/queries/0_stateless/01355_CSV_input_format_allow_errors.reference
@@ -20,9 +20,7 @@ attempt to parse with input_format_allow_errors_ratio=0.3
 1	0
 2	0
 3	0
-4	0
 5	0
-6	0
 Return code: 0
 ******************
 attempt to parse with input_format_allow_errors_num=1
@@ -34,7 +32,5 @@ attempt to parse with input_format_allow_errors_num=2
 1	0
 2	0
 3	0
-4	0
 5	0
-6	0
 Return code: 0
diff --git a/tests/queries/0_stateless/01355_CSV_input_format_allow_errors.sh b/tests/queries/0_stateless/01355_CSV_input_format_allow_errors.sh
index 63207c7f4a8b..7ae77eb9f0cb 100755
--- a/tests/queries/0_stateless/01355_CSV_input_format_allow_errors.sh
+++ b/tests/queries/0_stateless/01355_CSV_input_format_allow_errors.sh
@@ -11,34 +11,34 @@ cat "$SAMPLE_FILE"
 
 echo '******************'
 echo 'attempt to parse w/o flags'
-cat "$SAMPLE_FILE" | clickhouse-local --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' 2>"$STD_ERROR_CAPTURED"
+cat "$SAMPLE_FILE" | ${CLICKHOUSE_LOCAL} --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' 2>"$STD_ERROR_CAPTURED"
 echo "Return code: $?"
 expected_error_message='is not like Int64'
 cat "$STD_ERROR_CAPTURED" | grep -q "$expected_error_message" && echo "OK: stderr contains a message '$expected_error_message'" || echo "FAILED: Error message is wrong"
 
 echo '******************'
 echo 'attempt to parse with input_format_allow_errors_ratio=0.1'
-cat "$SAMPLE_FILE" | clickhouse-local --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' --input_format_allow_errors_ratio=0.1 2>"$STD_ERROR_CAPTURED"
+cat "$SAMPLE_FILE" | ${CLICKHOUSE_LOCAL} --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' --input_format_allow_errors_ratio=0.1 2>"$STD_ERROR_CAPTURED"
 echo "Return code: $?"
 expected_error_message='Already have 1 errors out of 5 rows, which is 0.2'
 cat "$STD_ERROR_CAPTURED" | grep -q "$expected_error_message" && echo "OK: stderr contains a message '$expected_error_message'" || echo "FAILED: Error message is wrong"
 
 echo '******************'
 echo 'attempt to parse with input_format_allow_errors_ratio=0.3'
-cat "$SAMPLE_FILE" | clickhouse-local --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' --input_format_allow_errors_ratio=0.3 2>"$STD_ERROR_CAPTURED"
+cat "$SAMPLE_FILE" | ${CLICKHOUSE_LOCAL} --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' --input_format_allow_errors_ratio=0.3 2>"$STD_ERROR_CAPTURED"
 echo "Return code: $?"
 cat "$STD_ERROR_CAPTURED"
 
 echo '******************'
 echo 'attempt to parse with input_format_allow_errors_num=1'
-cat "$SAMPLE_FILE" | clickhouse-local --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' --input_format_allow_errors_num=1 2>"$STD_ERROR_CAPTURED"
+cat "$SAMPLE_FILE" | ${CLICKHOUSE_LOCAL} --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' --input_format_allow_errors_num=1 2>"$STD_ERROR_CAPTURED"
 echo "Return code: $?"
 expected_error_message='Already have 2 errors out of 7 rows'
 cat "$STD_ERROR_CAPTURED" | grep -q "$expected_error_message" && echo "OK: stderr contains a message '$expected_error_message'" || echo "FAILED: Error message is wrong"
 
 echo '******************'
 echo 'attempt to parse with input_format_allow_errors_num=2'
-cat "$SAMPLE_FILE" | clickhouse-local --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' --input_format_allow_errors_num=2 2>"$STD_ERROR_CAPTURED"
+cat "$SAMPLE_FILE" | ${CLICKHOUSE_LOCAL} --input-format=CSV --structure='num1 Int64, num2 Int64' --query='SELECT * from table' --input_format_allow_errors_num=2 2>"$STD_ERROR_CAPTURED"
 echo "Return code: $?"
 cat "$STD_ERROR_CAPTURED"
 
