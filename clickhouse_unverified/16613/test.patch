diff --git a/tests/queries/0_stateless/01472_many_rows_in_totals.reference b/tests/queries/0_stateless/01472_many_rows_in_totals.reference
index 6c91bf9f1047..28f78731283c 100644
--- a/tests/queries/0_stateless/01472_many_rows_in_totals.reference
+++ b/tests/queries/0_stateless/01472_many_rows_in_totals.reference
@@ -1,20 +1,3 @@
-┏━━━┳━━━━━━━━━━━━━┓
-┃ [1mg[0m ┃ [1msum(number)[0m ┃
-┡━━━╇━━━━━━━━━━━━━┩
-│ 0 │           2 │
-├───┼─────────────┤
-│ 0 │           2 │
-├───┼─────────────┤
-│ 1 │           4 │
-└───┴─────────────┘
-
-Totals:
-┏━━━┳━━━━━━━━━━━━━┓
-┃ [1mg[0m ┃ [1msum(number)[0m ┃
-┡━━━╇━━━━━━━━━━━━━┩
-│ 0 │           6 │
-└───┴─────────────┘
--
 ┏━━━┳━━━┓
 ┃ [1mg[0m ┃ [1ms[0m ┃
 ┡━━━╇━━━┩
@@ -37,56 +20,10 @@ Totals:
 0	2
 0	2
 1	4
-
-0	6
--
-0	2
-0	2
-1	4
 1	4
 
 0	6
 --
-{
-	"meta":
-	[
-		{
-			"name": "g",
-			"type": "UInt64"
-		},
-		{
-			"name": "sum(number)",
-			"type": "UInt64"
-		}
-	],
-
-	"data":
-	[
-		{
-			"g": "0",
-			"sum(number)": "2"
-		},
-		{
-			"g": "0",
-			"sum(number)": "2"
-		},
-		{
-			"g": "1",
-			"sum(number)": "4"
-		}
-	],
-
-	"totals":
-	{
-		"g": "0",
-		"sum(number)": "6"
-	},
-
-	"rows": 3,
-
-	"rows_before_limit_at_least": 4
-}
--
 {
 	"meta":
 	[
diff --git a/tests/queries/0_stateless/01472_many_rows_in_totals.sql b/tests/queries/0_stateless/01472_many_rows_in_totals.sql
index 0be4e2c5c37b..4869e264d76d 100644
--- a/tests/queries/0_stateless/01472_many_rows_in_totals.sql
+++ b/tests/queries/0_stateless/01472_many_rows_in_totals.sql
@@ -1,15 +1,9 @@
 set output_format_write_statistics = 0;
-select g, sum(number) from numbers(4) group by bitAnd(number, 1) as g with totals having sum(number) <= arrayJoin([2, 4]) format Pretty;
-select '-';
 select g, s from (select g, sum(number) as s from numbers(4) group by bitAnd(number, 1) as g with totals) array join [1, 2] as a format Pretty;
 select '--';
 
-select g, sum(number) from numbers(4) group by bitAnd(number, 1) as g with totals having sum(number) <= arrayJoin([2, 4]) format TSV;
-select '-';
 select g, s from (select g, sum(number) as s from numbers(4) group by bitAnd(number, 1) as g with totals) array join [1, 2] as a format TSV;
 select '--';
 
-select g, sum(number) from numbers(4) group by bitAnd(number, 1) as g with totals having sum(number) <= arrayJoin([2, 4]) format JSON;
-select '-';
 select g, s from (select g, sum(number) as s from numbers(4) group by bitAnd(number, 1) as g with totals) array join [1, 2] as a format JSON;
 select '--';
diff --git a/tests/queries/0_stateless/01548_with_totals_having.reference b/tests/queries/0_stateless/01548_with_totals_having.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/01548_with_totals_having.sql b/tests/queries/0_stateless/01548_with_totals_having.sql
new file mode 100644
index 000000000000..669d989aa5f0
--- /dev/null
+++ b/tests/queries/0_stateless/01548_with_totals_having.sql
@@ -0,0 +1,2 @@
+SELECT * FROM numbers(4) GROUP BY number WITH TOTALS HAVING sum(number) <= arrayJoin([]); -- { serverError 44 }
+SELECT * FROM numbers(4) GROUP BY number WITH TOTALS HAVING sum(number) <= arrayJoin([3, 2, 1, 0]) ORDER BY number; -- { serverError 44 }
