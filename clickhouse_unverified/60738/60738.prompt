You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Use of uninitialized value in DB::FunctionSQLJSONHelpers::Executor
Happened here: https://s3.amazonaws.com/clickhouse-test-reports/59563/ea89154f9f112411066eae617883c50cb741faa7/ast_fuzzer__msan_.html

```
==238==WARNING: MemorySanitizer: use-of-uninitialized-value

    #0 0x55a8ff54436b in DB::FunctionSQLJSONHelpers::Executor<DB::NameJSONValue, DB::JSONValueImpl<DB::SimdJSONParser, DB::JSONStringSerializer<DB::SimdJSONParser::Element, DB::SimdJSONElementFormatter>>, DB::SimdJSONParser>::run(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, unsigned int, std::__1::shared_ptr<DB::Context const> const&) (/workspace/
    > clickhouse+0x7fef36b) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #1 0x55a8ff541454 in DB::FunctionSQLJSON<DB::NameJSONValue, DB::JSONValueImpl>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7fec454) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #2 0x55a8ff4bbc21 in DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7f66c21) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #3 0x55a8ff4bb557 in DB::FunctionToExecutableFunctionAdaptor::executeDryRunImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7f66557) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #4 0x55a9290d7a59 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:246:15
    #5 0x55a9290dbede in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:281:24
    #6 0x55a9290e00e5 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:378:16
    #7 0x55a92ccb5c51 in DB::executeActionForPartialResult(DB::ActionsDAG::Node const*, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>, unsigned long) build_docker/./src/Interpreters/ActionsDAG.cpp:618:49
    #8 0x55a92ccb5c51 in DB::ActionsDAG::evaluatePartialResult(std::__1::unordered_map<DB::ActionsDAG::Node const*, DB::ColumnWithTypeAndName, std::__1::hash<DB::ActionsDAG::Node const*>, std::__1::equal_to<DB::ActionsDAG::Node const*>, std::__1::allocator<std::__1::pair<DB::ActionsDAG::Node const* const, DB::ColumnWithTypeAndName>>>&, std::__1::vector<DB::ActionsDAG::Node const*, std::__1::allocator<DB::ActionsDAG::Node const*>> const&, unsigned long, bool)
    > build_docker/./src/Interpreters/ActionsDAG.cpp:785:48
    #9 0x55a92ccb1109 in DB::ActionsDAG::updateHeader(DB::Block) const build_docker/./src/Interpreters/ActionsDAG.cpp:695:26
    #10 0x55a9344cf962 in DB::ExpressionTransform::transformHeader(DB::Block, DB::ActionsDAG const&) build_docker/./src/Processors/Transforms/ExpressionTransform.cpp:8:23
    #11 0x55a934a79def in DB::ExpressionStep::ExpressionStep(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) build_docker/./src/Processors/QueryPlan/ExpressionStep.cpp:31:9
    #12 0x55a92ee6b819 in std::__1::__unique_if<DB::ExpressionStep>::__unique_single std::__1::make_unique[abi:v15000]<DB::ExpressionStep, DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&>(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714:32
    #13 0x55a92ee6b819 in DB::InterpreterSelectQuery::executeExpression(DB::QueryPlan&, std::__1::shared_ptr<DB::ActionsDAG> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:2782:28
    #14 0x55a92ee492b5 in DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:1781:21
    #15 0x55a92ee424a8 in DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:927:5
    #16 0x55a92f0c1292 in DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:304:38
    #17 0x55a92f0c3c0b in DB::InterpreterSelectWithUnionQuery::execute() build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:378:5
    #18 0x55a92fce5f44 in DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) build_docker/./src/Interpreters/executeQuery.cpp:1102:40
    #19 0x55a92fcd87e2 in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) build_docker/./src/Interpreters/executeQuery.cpp:1281:26
    #20 0x55a933962b3e in DB::TCPHandler::runImpl() build_docker/./src/Server/TCPHandler.cpp:520:54
    #21 0x55a9339b705b in DB::TCPHandler::run() build_docker/./src/Server/TCPHandler.cpp:2314:9
    #22 0x55a937870dbf in Poco::Net::TCPServerConnection::start() build_docker/./base/poco/Net/src/TCPServerConnection.cpp:43:3
    #23 0x55a937871c41 in Poco::Net::TCPServerDispatcher::run() build_docker/./base/poco/Net/src/TCPServerDispatcher.cpp:115:20
    #24 0x55a937cf9065 in Poco::PooledThread::run() build_docker/./base/poco/Foundation/src/ThreadPool.cpp:188:14
    #25 0x55a937cf5e2d in Poco::(anonymous namespace)::RunnableHolder::run() build_docker/./base/poco/Foundation/src/Thread.cpp:45:11
    #26 0x55a937cf2d11 in Poco::ThreadImpl::runnableEntry(void*) build_docker/./base/poco/Foundation/src/Thread_POSIX.cpp:335:27
    #27 0x7f41e9ba1ac2 in start_thread nptl/pthread_create.c:442:8
    #28 0x7f41e9c3384f  misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81

  Uninitialized value was created by a heap allocation
    #0 0x55a8ff4496c2 in malloc (/workspace/clickhouse+0x7ef46c2) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #1 0x55a9175863ba in void* (anonymous namespace)::allocNoTrack<false, false>(unsigned long, unsigned long) build_docker/./src/Common/Allocator.cpp:68:19
    #2 0x55a9175863ba in Allocator<false, false>::alloc(unsigned long, unsigned long) build_docker/./src/Common/Allocator.cpp:115:18
    #3 0x55a8ff4f717e in void DB::PODArrayBase<8ul, 4096ul, Allocator<false, false>, 63ul, 64ul>::reserveForNextSize<>() (/workspace/clickhouse+0x7fa217e) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #4 0x55a93071b722 in void DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul>::push_back<unsigned long const&>(unsigned long const&) build_docker/./src/Common/PODArray.h:423:19
    #5 0x55a93071b722 in DB::ColumnString::insert(DB::Field const&) build_docker/./src/Columns/ColumnString.h:128:17
    #6 0x55a92c0c4067 in DB::IDataType::createColumnConst(unsigned long, DB::Field const&) const build_docker/./src/DataTypes/IDataType.cpp:60:13
    #7 0x55a92d4283c4 in DB::ActionsMatcher::visit(DB::ASTLiteral const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) build_docker/./src/Interpreters/ActionsVisitor.cpp:1367:27
    #8 0x55a92d4085ff in DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) build_docker/./src/Interpreters/ActionsVisitor.cpp:705:9
    #9 0x55a92d412b90 in DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) build_docker/./src/Interpreters/ActionsVisitor.cpp:1228:17
    #10 0x55a92d408634 in DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) build_docker/./src/Interpreters/ActionsVisitor.cpp:703:9
    #11 0x55a92d4295db in DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) build_docker/./src/Interpreters/ActionsVisitor.cpp
    #12 0x55a92d4087b4 in DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) build_docker/./src/Interpreters/ActionsVisitor.cpp:707:9
    #13 0x55a92d3e7054 in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::doVisit(std::__1::shared_ptr<DB::IAST> const&) build_docker/./src/Interpreters/InDepthNodeVisitor.h:71:13
    #14 0x55a92d362054 in void DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visitImplMain<false>(std::__1::shared_ptr<DB::IAST> const&) build_docker/./src/Interpreters/InDepthNodeVisitor.h:61:9
    #15 0x55a92d362054 in void DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visitImpl<false>(std::__1::shared_ptr<DB::IAST> const&) build_docker/./src/Interpreters/InDepthNodeVisitor.h:51:13
    #16 0x55a92d362054 in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) build_docker/./src/Interpreters/InDepthNodeVisitor.h:32:13
    #17 0x55a92d362054 in DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) build_docker/./src/Interpreters/ExpressionAnalyzer.cpp:484:48
    #18 0x55a92d38cf71 in DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) build_docker/./src/Interpreters/ExpressionAnalyzer.cpp:1511:5
    #19 0x55a92d3a0fbd in DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) build_docker/./src/Interpreters/ExpressionAnalyzer.cpp:2067:24
    #20 0x55a92ee4f78a in DB::InterpreterSelectQuery::getSampleBlockImpl() build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:1002:23
    #21 0x55a92ee2f6d9 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::
    > allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>)::$_0::operator()(bool) const build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:777:25
    #22 0x55a92ee1c111 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::
    > allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:780:5
    #23 0x55a92ee0f246 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:
    > 210:7
    #24 0x55a92f0bd1f8 in std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique[abi:v15000]<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>
    > const&>(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714:32
    #25 0x55a92f0bd1f8 in DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:255:16

SUMMARY: MemorySanitizer: use-of-uninitialized-value (/workspace/clickhouse+0x7fef36b) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee) in DB::FunctionSQLJSONHelpers::Executor<DB::NameJSONValue, DB::JSONValueImpl<DB::SimdJSONParser, DB::JSONStringSerializer<DB::SimdJSONParser::Element, DB::SimdJSONElementFormatter>>, DB::SimdJSONParser>::run(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::
       > shared_ptr<DB::IDataType const> const&, unsigned long, unsigned int, std::__1::shared_ptr<DB::Context const> const&)

 Uninitialized bytes in write at offset 0 inside [0x7f40f12ed380, 392)
 ==238==WARNING: MemorySanitizer: use-of-uninitialized-value
 2024.02.14 10:55:52.842564 [ 239 ] {} <Trace> BaseDaemon: Received signal -3

    #0 0x55a9177f6085 in DB::WriteBufferFromFileDescriptorDiscardOnFailure::nextImpl() build_docker/./src/IO/WriteBufferFromFileDescriptorDiscardOnFailure.cpp:16:23
    #1 0x55a917fdcfc9 in DB::WriteBuffer::next() build_docker/./src/IO/WriteBuffer.h:53:13
    #2 0x55a917fd5558 in sanitizerDeathCallback() build_docker/./src/Daemon/BaseDaemon.cpp:568:9
    #3 0x55a8ff428b55 in __sanitizer::Die() crtstuff.c
    #4 0x55a8ff43a0b2 in __msan_warning_with_origin_noreturn (/workspace/clickhouse+0x7ee50b2) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #5 0x55a8ff54436b in DB::FunctionSQLJSONHelpers::Executor<DB::NameJSONValue, DB::JSONValueImpl<DB::SimdJSONParser, DB::JSONStringSerializer<DB::SimdJSONParser::Element, DB::SimdJSONElementFormatter>>, DB::SimdJSONParser>::run(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, unsigned int, std::__1::shared_ptr<DB::Context const> const&) (/workspace/
    > clickhouse+0x7fef36b) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #6 0x55a8ff541454 in DB::FunctionSQLJSON<DB::NameJSONValue, DB::JSONValueImpl>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7fec454) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #7 0x55a8ff4bbc21 in DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7f66c21) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #8 0x55a8ff4bb557 in DB::FunctionToExecutableFunctionAdaptor::executeDryRunImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7f66557) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #9 0x55a9290d7a59 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:246:15
    #10 0x55a9290dbede in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:281:24
    #11 0x55a9290e00e5 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:378:16
    #12 0x55a92ccb5c51 in DB::executeActionForPartialResult(DB::ActionsDAG::Node const*, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>, unsigned long) build_docker/./src/Interpreters/ActionsDAG.cpp:618:49
    #13 0x55a92ccb5c51 in DB::ActionsDAG::evaluatePartialResult(std::__1::unordered_map<DB::ActionsDAG::Node const*, DB::ColumnWithTypeAndName, std::__1::hash<DB::ActionsDAG::Node const*>, std::__1::equal_to<DB::ActionsDAG::Node const*>, std::__1::allocator<std::__1::pair<DB::ActionsDAG::Node const* const, DB::ColumnWithTypeAndName>>>&, std::__1::vector<DB::ActionsDAG::Node const*, std::__1::allocator<DB::ActionsDAG::Node const*>> const&, unsigned long, bool)
    > build_docker/./src/Interpreters/ActionsDAG.cpp:785:48
    #14 0x55a92ccb1109 in DB::ActionsDAG::updateHeader(DB::Block) const build_docker/./src/Interpreters/ActionsDAG.cpp:695:26
    #15 0x55a9344cf962 in DB::ExpressionTransform::transformHeader(DB::Block, DB::ActionsDAG const&) build_docker/./src/Processors/Transforms/ExpressionTransform.cpp:8:23
    #16 0x55a934a79def in DB::ExpressionStep::ExpressionStep(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) build_docker/./src/Processors/QueryPlan/ExpressionStep.cpp:31:9
    #17 0x55a92ee6b819 in std::__1::__unique_if<DB::ExpressionStep>::__unique_single std::__1::make_unique[abi:v15000]<DB::ExpressionStep, DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&>(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714:32
    #18 0x55a92ee6b819 in DB::InterpreterSelectQuery::executeExpression(DB::QueryPlan&, std::__1::shared_ptr<DB::ActionsDAG> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:2782:28
    #19 0x55a92ee492b5 in DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:1781:21
    #20 0x55a92ee424a8 in DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:927:5
    #21 0x55a92f0c1292 in DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:304:38
    #22 0x55a92f0c3c0b in DB::InterpreterSelectWithUnionQuery::execute() build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:378:5
    #23 0x55a92fce5f44 in DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) build_docker/./src/Interpreters/executeQuery.cpp:1102:40
    #24 0x55a92fcd87e2 in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) build_docker/./src/Interpreters/executeQuery.cpp:1281:26
    #25 0x55a933962b3e in DB::TCPHandler::runImpl() build_docker/./src/Server/TCPHandler.cpp:520:54
    #26 0x55a9339b705b in DB::TCPHandler::run() build_docker/./src/Server/TCPHandler.cpp:2314:9
    #27 0x55a937870dbf in Poco::Net::TCPServerConnection::start() build_docker/./base/poco/Net/src/TCPServerConnection.cpp:43:3
    #28 0x55a937871c41 in Poco::Net::TCPServerDispatcher::run() build_docker/./base/poco/Net/src/TCPServerDispatcher.cpp:115:20
    #29 0x55a937cf9065 in Poco::PooledThread::run() build_docker/./base/poco/Foundation/src/ThreadPool.cpp:188:14
    #30 0x55a937cf5e2d in Poco::(anonymous namespace)::RunnableHolder::run() build_docker/./base/poco/Foundation/src/Thread.cpp:45:11
    #31 0x55a937cf2d11 in Poco::ThreadImpl::runnableEntry(void*) build_docker/./base/poco/Foundation/src/Thread_POSIX.cpp:335:27
    #32 0x7f41e9ba1ac2 in start_thread nptl/pthread_create.c:442:8
    #33 0x7f41e9c3384f  misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81

  Uninitialized value was stored to memory at
    #0 0x55a8ff44018a in __msan_memcpy (/workspace/clickhouse+0x7eeb18a) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #1 0x55a8ff4f4727 in DB::WriteBuffer::write(char const*, unsigned long) (/workspace/clickhouse+0x7f9f727) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #2 0x55a917fdcf16 in void DB::writePODBinary<int>(int const&, DB::WriteBuffer&) build_docker/./src/IO/WriteHelpers.h:88:9
    #3 0x55a917fdcf16 in void DB::writeBinary<int>(int const&, DB::WriteBuffer&) build_docker/./src/IO/WriteHelpers.h:1031:59
    #4 0x55a917fd5505 in sanitizerDeathCallback() build_docker/./src/Daemon/BaseDaemon.cpp:563:5
    #5 0x55a8ff428b55 in __sanitizer::Die() crtstuff.c
    #6 0x55a8ff54436b in DB::FunctionSQLJSONHelpers::Executor<DB::NameJSONValue, DB::JSONValueImpl<DB::SimdJSONParser, DB::JSONStringSerializer<DB::SimdJSONParser::Element, DB::SimdJSONElementFormatter>>, DB::SimdJSONParser>::run(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, unsigned int, std::__1::shared_ptr<DB::Context const> const&) (/workspace/
    > clickhouse+0x7fef36b) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #7 0x55a8ff541454 in DB::FunctionSQLJSON<DB::NameJSONValue, DB::JSONValueImpl>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7fec454) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #8 0x55a8ff4bbc21 in DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7f66c21) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #9 0x55a8ff4bb557 in DB::FunctionToExecutableFunctionAdaptor::executeDryRunImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7f66557) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #10 0x55a9290d7a59 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:246:15
    #11 0x55a9290dbede in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:281:24
    #12 0x55a9290e00e5 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:378:16
    #13 0x55a92ccb5c51 in DB::executeActionForPartialResult(DB::ActionsDAG::Node const*, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>, unsigned long) build_docker/./src/Interpreters/ActionsDAG.cpp:618:49
    #14 0x55a92ccb5c51 in DB::ActionsDAG::evaluatePartialResult(std::__1::unordered_map<DB::ActionsDAG::Node const*, DB::ColumnWithTypeAndName, std::__1::hash<DB::ActionsDAG::Node const*>, std::__1::equal_to<DB::ActionsDAG::Node const*>, std::__1::allocator<std::__1::pair<DB::ActionsDAG::Node const* const, DB::ColumnWithTypeAndName>>>&, std::__1::vector<DB::ActionsDAG::Node const*, std::__1::allocator<DB::ActionsDAG::Node const*>> const&, unsigned long, bool)
    > build_docker/./src/Interpreters/ActionsDAG.cpp:785:48
    #15 0x55a92ccb1109 in DB::ActionsDAG::updateHeader(DB::Block) const build_docker/./src/Interpreters/ActionsDAG.cpp:695:26
    #16 0x55a9344cf962 in DB::ExpressionTransform::transformHeader(DB::Block, DB::ActionsDAG const&) build_docker/./src/Processors/Transforms/ExpressionTransform.cpp:8:23
    #17 0x55a934a79def in DB::ExpressionStep::ExpressionStep(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) build_docker/./src/Processors/QueryPlan/ExpressionStep.cpp:31:9
    #18 0x55a92ee6b819 in std::__1::__unique_if<DB::ExpressionStep>::__unique_single std::__1::make_unique[abi:v15000]<DB::ExpressionStep, DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&>(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714:32
    #19 0x55a92ee6b819 in DB::InterpreterSelectQuery::executeExpression(DB::QueryPlan&, std::__1::shared_ptr<DB::ActionsDAG> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:2782:28
    #20 0x55a92ee492b5 in DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:1781:21
    #21 0x55a92ee424a8 in DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:927:5
    #22 0x55a92f0c1292 in DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:304:38

  Member fields were destroyed
    #0 0x55a8ff449add in __sanitizer_dtor_callback_fields (/workspace/clickhouse+0x7ef4add) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #1 0x55a93593b4a1 in std::__1::vector<DB::Token, std::__1::allocator<DB::Token>>::_ConstructTransaction::~_ConstructTransaction() build_docker/./contrib/llvm-project/libcxx/include/vector:795:13
    #2 0x55a93593b4a1 in std::__1::vector<DB::Token, std::__1::allocator<DB::Token>>::_ConstructTransaction::~_ConstructTransaction() build_docker/./contrib/llvm-project/libcxx/include/vector:793:5
    #3 0x55a93593b4a1 in void std::__1::vector<DB::Token, std::__1::allocator<DB::Token>>::__construct_one_at_end[abi:v15000]<DB::Token>(DB::Token&&) build_docker/./contrib/llvm-project/libcxx/include/vector:811:3
    #4 0x55a93593b4a1 in DB::Token& std::__1::vector<DB::Token, std::__1::allocator<DB::Token>>::emplace_back<DB::Token>(DB::Token&&) build_docker/./contrib/llvm-project/libcxx/include/vector:1597:9
    #5 0x55a93593b4a1 in DB::Tokens::Tokens(char const*, char const*, unsigned long, bool) build_docker/./src/Parsers/TokenIterator.cpp:17:18
    #6 0x55a8ff542f29 in DB::FunctionSQLJSONHelpers::Executor<DB::NameJSONValue, DB::JSONValueImpl<DB::SimdJSONParser, DB::JSONStringSerializer<DB::SimdJSONParser::Element, DB::SimdJSONElementFormatter>>, DB::SimdJSONParser>::run(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, unsigned int, std::__1::shared_ptr<DB::Context const> const&) (/workspace/
    > clickhouse+0x7fedf29) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #7 0x55a8ff541454 in DB::FunctionSQLJSON<DB::NameJSONValue, DB::JSONValueImpl>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7fec454) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #8 0x55a8ff4bbc21 in DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7f66c21) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #9 0x55a8ff4bb557 in DB::FunctionToExecutableFunctionAdaptor::executeDryRunImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x7f66557) (BuildId: 749b96b7a6f73e2be4b82d394b9a94915718fbee)
    #10 0x55a9290d7a59 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:246:15
    #11 0x55a9290dbede in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:281:24
    #12 0x55a9290e00e5 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/./src/Functions/IFunction.cpp:378:16
    #13 0x55a92ccb5c51 in DB::executeActionForPartialResult(DB::ActionsDAG::Node const*, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>, unsigned long) build_docker/./src/Interpreters/ActionsDAG.cpp:618:49
    #14 0x55a92ccb5c51 in DB::ActionsDAG::evaluatePartialResult(std::__1::unordered_map<DB::ActionsDAG::Node const*, DB::ColumnWithTypeAndName, std::__1::hash<DB::ActionsDAG::Node const*>, std::__1::equal_to<DB::ActionsDAG::Node const*>, std::__1::allocator<std::__1::pair<DB::ActionsDAG::Node const* const, DB::ColumnWithTypeAndName>>>&, std::__1::vector<DB::ActionsDAG::Node const*, std::__1::allocator<DB::ActionsDAG::Node const*>> const&, unsigned long, bool)
    > build_docker/./src/Interpreters/ActionsDAG.cpp:785:48
    #15 0x55a92ccb1109 in DB::ActionsDAG::updateHeader(DB::Block) const build_docker/./src/Interpreters/ActionsDAG.cpp:695:26
    #16 0x55a9344cf962 in DB::ExpressionTransform::transformHeader(DB::Block, DB::ActionsDAG const&) build_docker/./src/Processors/Transforms/ExpressionTransform.cpp:8:23
    #17 0x55a934a79def in DB::ExpressionStep::ExpressionStep(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) build_docker/./src/Processors/QueryPlan/ExpressionStep.cpp:31:9
    #18 0x55a92ee6b819 in std::__1::__unique_if<DB::ExpressionStep>::__unique_single std::__1::make_unique[abi:v15000]<DB::ExpressionStep, DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&>(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714:32
    #19 0x55a92ee6b819 in DB::InterpreterSelectQuery::executeExpression(DB::QueryPlan&, std::__1::shared_ptr<DB::ActionsDAG> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:2782:28
    #20 0x55a92ee492b5 in DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::optional<DB::Pipe>) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:1781:21
    #21 0x55a92ee424a8 in DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:927:5
    #22 0x55a92f0c1292 in DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:304:38
    #23 0x55a92f0c3c0b in DB::InterpreterSelectWithUnionQuery::execute() build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:378:5
    #24 0x55a92fce5f44 in DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) build_docker/./src/Interpreters/executeQuery.cpp:1102:40
    #25 0x55a92fcd87e2 in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) build_docker/./src/Interpreters/executeQuery.cpp:1281:26

SUMMARY: MemorySanitizer: use-of-uninitialized-value build_docker/./src/IO/WriteBufferFromFileDescriptorDiscardOnFailure.cpp:16:23 in DB::WriteBufferFromFileDescriptorDiscardOnFailure::nextImpl()
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
