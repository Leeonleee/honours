{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 38027,
  "instance_id": "ClickHouse__ClickHouse-38027",
  "issue_numbers": [
    "37531"
  ],
  "base_commit": "f203ef3536f0b7c188d1f8a934f8ff50b8f832fb",
  "patch": "diff --git a/src/Functions/FunctionsRound.h b/src/Functions/FunctionsRound.h\nindex 518b969d4411..9bf5ed2a6fd6 100644\n--- a/src/Functions/FunctionsRound.h\n+++ b/src/Functions/FunctionsRound.h\n@@ -168,7 +168,7 @@ struct IntegerRoundingComputation\n         __builtin_unreachable();\n     }\n \n-    static ALWAYS_INLINE void compute(const T * __restrict in, size_t scale, T * __restrict out)\n+    static ALWAYS_INLINE void compute(const T * __restrict in, size_t scale, T * __restrict out) requires std::integral<T>\n     {\n         if constexpr (sizeof(T) <= sizeof(scale) && scale_mode == ScaleMode::Negative)\n         {\n@@ -181,6 +181,10 @@ struct IntegerRoundingComputation\n         *out = compute(*in, scale);\n     }\n \n+    static ALWAYS_INLINE void compute(const T * __restrict in, T scale, T * __restrict out) requires(!std::integral<T>)\n+    {\n+        *out = compute(*in, scale);\n+    }\n };\n \n \n@@ -432,7 +436,7 @@ class DecimalRoundingImpl\n         scale_arg = in_scale - scale_arg;\n         if (scale_arg > 0)\n         {\n-            size_t scale = intExp10(scale_arg);\n+            auto scale = intExp10OfSize<T>(scale_arg);\n \n             const NativeType * __restrict p_in = reinterpret_cast<const NativeType *>(in.data());\n             const NativeType * end_in = reinterpret_cast<const NativeType *>(in.data()) + in.size();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00700_decimal_round.reference b/tests/queries/0_stateless/00700_decimal_round.reference\nindex d0f03c078495..4b4994106fe0 100644\n--- a/tests/queries/0_stateless/00700_decimal_round.reference\n+++ b/tests/queries/0_stateless/00700_decimal_round.reference\n@@ -73,3 +73,15 @@\n 12345678901234567890123456789.123456789\t-12345678901234567890123456789.123456789\t12345678901234567890123456790\t-12345678901234567890123456789\t12345678901234567890123457000\t-12345678901234567890123456000\n 12345678901234567890123456789.123456789\t-12345678901234567890123456789.123456789\t12345678901234567890123456789\t-12345678901234567890123456790\t12345678901234567890123456000\t-12345678901234567890123457000\n 12345678901234567890123456789.123456789\t-12345678901234567890123456789.123456789\t12345678901234567890123456789\t-12345678901234567890123456789\t12345678901234567890123456000\t-12345678901234567890123456000\n+-- Decimal128, Scale 20\n+round()        : \t1234567890.123456789\t-1234567890.123456789\t1234567890\t-1234567890\t1234568000\t-1234568000\n+roundBankers() : \t1234567890.123456789\t-1234567890.123456789\t1234567890\t-1234567890\t1234568000\t-1234568000\n+ceil()         : \t1234567890.123456789\t-1234567890.123456789\t1234567891\t-1234567890\t1234568000\t-1234567000\n+floor()        : \t1234567890.123456789\t-1234567890.123456789\t1234567890\t-1234567891\t1234567000\t-1234568000\n+trunc()        : \t1234567890.123456789\t-1234567890.123456789\t1234567890\t-1234567890\t1234567000\t-1234567000\n+-- Decimal256, Scale 40\n+round()        : \t1234567890.123456789\t-1234567890.123456789\t1234567890\t-1234567890\t1234568000\t-1234568000\n+roundBankers() : \t1234567890.123456789\t-1234567890.123456789\t1234567890\t-1234567890\t1234568000\t-1234568000\n+ceil()         : \t1234567890.123456789\t-1234567890.123456789\t1234567891\t-1234567890\t1234568000\t-1234567000\n+floor()        : \t1234567890.123456789\t-1234567890.123456789\t1234567890\t-1234567891\t1234567000\t-1234568000\n+trunc()        : \t1234567890.123456789\t-1234567890.123456789\t1234567890\t-1234567890\t1234567000\t-1234567000\ndiff --git a/tests/queries/0_stateless/00700_decimal_round.sql b/tests/queries/0_stateless/00700_decimal_round.sql\nindex c5b8dbb520bf..bf2749ac03f2 100644\n--- a/tests/queries/0_stateless/00700_decimal_round.sql\n+++ b/tests/queries/0_stateless/00700_decimal_round.sql\n@@ -78,3 +78,17 @@ SELECT toDecimal128('12345678901234567890123456789.123456789', 9) AS x, -x AS y,\n SELECT toDecimal128('12345678901234567890123456789.123456789', 9) AS x, -x AS y, ceil(x), ceil(y), ceil(x, -3), ceil(y, -3);\n SELECT toDecimal128('12345678901234567890123456789.123456789', 9) AS x, -x AS y, floor(x), floor(y), floor(x, -3), floor(y, -3);\n SELECT toDecimal128('12345678901234567890123456789.123456789', 9) AS x, -x AS y, trunc(x), trunc(y), trunc(x, -3), trunc(y, -3);\n+\n+select '-- Decimal128, Scale 20';\n+SELECT 'round()        : ', toDecimal128('1234567890.123456789', 20) AS x, -x AS y, round(x), round(y), round(x, -3), round(y, -3);\n+SELECT 'roundBankers() : ', toDecimal128('1234567890.123456789', 20) AS x, -x AS y, roundBankers(x), roundBankers(y), roundBankers(x, -3), roundBankers(y, -3);\n+SELECT 'ceil()         : ', toDecimal128('1234567890.123456789', 20) AS x, -x AS y, ceil(x), ceil(y), ceil(x, -3), ceil(y, -3);\n+SELECT 'floor()        : ', toDecimal128('1234567890.123456789', 20) AS x, -x AS y, floor(x), floor(y), floor(x, -3), floor(y, -3);\n+SELECT 'trunc()        : ', toDecimal128('1234567890.123456789', 20) AS x, -x AS y, trunc(x), trunc(y), trunc(x, -3), trunc(y, -3);\n+\n+select '-- Decimal256, Scale 40';\n+SELECT 'round()        : ', toDecimal256('1234567890.123456789', 40) AS x, -x AS y, round(x), round(y), round(x, -3), round(y, -3);\n+SELECT 'roundBankers() : ', toDecimal256('1234567890.123456789', 40) AS x, -x AS y, roundBankers(x), roundBankers(y), roundBankers(x, -3), roundBankers(y, -3);\n+SELECT 'ceil()         : ', toDecimal256('1234567890.123456789', 40) AS x, -x AS y, ceil(x), ceil(y), ceil(x, -3), ceil(y, -3);\n+SELECT 'floor()        : ', toDecimal256('1234567890.123456789', 40) AS x, -x AS y, floor(x), floor(y), floor(x, -3), floor(y, -3);\n+SELECT 'trunc()        : ', toDecimal256('1234567890.123456789', 40) AS x, -x AS y, trunc(x), trunc(y), trunc(x, -3), trunc(y, -3);\n",
  "problem_statement": "incorrect floor / ceiling / round with Decimal128/256\n```sql\r\nSELECT\r\n    floor(toDecimal64(1232.123132, 4) AS D64),\r\n    ceiling(D64),\r\n    round(D64),\r\n    roundBankers(D64),\r\n    floor(toDecimal128(1232.123132, 24) AS D128),\r\n    ceiling(D128),\r\n    round(D128),\r\n    roundBankers(D128),\r\n    floor(toDecimal256(1232.123132, 24) AS D256),\r\n    ceiling(D256),\r\n    round(D256),\r\n    roundBankers(D256)\r\nFORMAT Vertical\r\n\r\nQuery id: 04db8c13-4888-47b6-908b-ba1268138f26\r\n\r\nRow 1:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\r\nfloor(toDecimal64(1232.123132, 4)):          1232\r\nceil(toDecimal64(1232.123132, 4)):           1233\r\nround(toDecimal64(1232.123132, 4)):          1232\r\nroundBankers(toDecimal64(1232.123132, 4)):   1232\r\nfloor(toDecimal128(1232.123132, 24)):        1232.12311679615299966394772\r\nceil(toDecimal128(1232.123132, 24)):         1232.123135242897073373499335\r\nround(toDecimal128(1232.123132, 24)):        1232.123135242897073373499335\r\nroundBankers(toDecimal128(1232.123132, 24)): 1232.123135242897073373499335\r\nfloor(toDecimal256(1232.123132, 24)):        1232.12311679615299966394772\r\nceil(toDecimal256(1232.123132, 24)):         1232.123135242897073373499335\r\nround(toDecimal256(1232.123132, 24)):        1232.123135242897073373499335\r\nroundBankers(toDecimal256(1232.123132, 24)): 1232.123135242897073373499335\r\n```\r\n\n",
  "hints_text": "1232.123132 is a floating point number:\r\n\r\n```\r\nmilovidov-nix :) SELECT toDecimal128(1232.123132, 24)\r\n\r\nSELECT toDecimal128(1232.123132, 24)\r\n\r\nQuery id: d685b297-0e6d-477f-906c-466ced6a2963\r\n\r\n\u250c\u2500toDecimal128(1232.123132, 24)\u2500\u2510\r\n\u2502 1232.123131999999952379236296 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.007 sec. \r\n\r\nmilovidov-nix :) SELECT 1232.123132::Decimal128(24)\r\n\r\nSELECT CAST('1232.123132', 'Decimal128(24)')\r\n\r\nQuery id: 6830b2cc-17aa-44d3-860c-db06e2115edb\r\n\r\n\u250c\u2500CAST('1232.123132', 'Decimal128(24)')\u2500\u2510\r\n\u2502                           1232.123132 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.002 sec. \r\n\r\nmilovidov-nix :) SELECT floor(1232.123132::Decimal128(24), 24)\r\n\r\nSELECT floor(CAST('1232.123132', 'Decimal128(24)'), 24)\r\n\r\nQuery id: 9647b3bf-951b-462c-ae31-ecd32f0d9330\r\n\r\n\u250c\u2500floor(CAST('1232.123132', 'Decimal128(24)'), 24)\u2500\u2510\r\n\u2502                                      1232.123132 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.009 sec.\r\n```\n@alexey-milovidov \r\n\r\nI don't understand \r\n\r\n```sql\r\nSELECT round(CAST('1232.123132', 'Decimal128(12)'));\r\n\r\n\u250c\u2500round(CAST('1232.123132', 'Decimal128(12)'))\u2500\u2510\r\n\u2502                                         1232 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\nSELECT round(CAST('1232.123132', 'Decimal128(24)'));\r\n\r\n\u250c\u2500round(CAST('1232.123132', 'Decimal128(24)'))\u2500\u2510\r\n\u2502                1232.123135242897073373499335 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\nSELECT floor(toDecimal128('1232.123132', 24), -1)\r\n\r\n\u250c\u2500floor(toDecimal128('1232.123132', 24), -1)\u2500\u2510\r\n\u2502               1232.12311679615299966394772 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\nError border:\r\n```\r\n...\r\nSELECT round(CAST('1232.123132', 'Decimal128(19)')) -- 1232\r\nSELECT round(CAST('1232.123132', 'Decimal128(20)')) -- 1232.05803668306095236585\r\n...\r\n```\r\nAs far as I see, for `decimal` of any size, we are using :\r\nhttps://github.com/ClickHouse/ClickHouse/blob/cf47b1c96e2dfa3183f9d4ceca5cbb3f29c7be6e/src/Functions/FunctionsRound.h#L435\r\n\r\nAnd `uint64_t intExp10(int x)` can't return valid value for scale more than 19 digits:\r\nhttps://github.com/ClickHouse/ClickHouse/blob/cf47b1c96e2dfa3183f9d4ceca5cbb3f29c7be6e/src/Common/intExp.h#L24-L29\r\n\r\nWe need to use proper function to get scale for a decimal of particular size\r\n",
  "created_at": "2022-06-13T13:49:28Z"
}