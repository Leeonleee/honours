diff --git a/src/Functions/FunctionsRound.h b/src/Functions/FunctionsRound.h
index 518b969d4411..9bf5ed2a6fd6 100644
--- a/src/Functions/FunctionsRound.h
+++ b/src/Functions/FunctionsRound.h
@@ -168,7 +168,7 @@ struct IntegerRoundingComputation
         __builtin_unreachable();
     }
 
-    static ALWAYS_INLINE void compute(const T * __restrict in, size_t scale, T * __restrict out)
+    static ALWAYS_INLINE void compute(const T * __restrict in, size_t scale, T * __restrict out) requires std::integral<T>
     {
         if constexpr (sizeof(T) <= sizeof(scale) && scale_mode == ScaleMode::Negative)
         {
@@ -181,6 +181,10 @@ struct IntegerRoundingComputation
         *out = compute(*in, scale);
     }
 
+    static ALWAYS_INLINE void compute(const T * __restrict in, T scale, T * __restrict out) requires(!std::integral<T>)
+    {
+        *out = compute(*in, scale);
+    }
 };
 
 
@@ -432,7 +436,7 @@ class DecimalRoundingImpl
         scale_arg = in_scale - scale_arg;
         if (scale_arg > 0)
         {
-            size_t scale = intExp10(scale_arg);
+            auto scale = intExp10OfSize<T>(scale_arg);
 
             const NativeType * __restrict p_in = reinterpret_cast<const NativeType *>(in.data());
             const NativeType * end_in = reinterpret_cast<const NativeType *>(in.data()) + in.size();
