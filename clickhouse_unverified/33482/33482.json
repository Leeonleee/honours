{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 33482,
  "instance_id": "ClickHouse__ClickHouse-33482",
  "issue_numbers": [
    "11210"
  ],
  "base_commit": "c5140673775e29be9ee7ea9433248006704f8b97",
  "patch": "diff --git a/src/Storages/StorageMaterializedView.cpp b/src/Storages/StorageMaterializedView.cpp\nindex 56844192ee9d..49111e02b110 100644\n--- a/src/Storages/StorageMaterializedView.cpp\n+++ b/src/Storages/StorageMaterializedView.cpp\n@@ -412,6 +412,11 @@ StoragePtr StorageMaterializedView::tryGetTargetTable() const\n     return DatabaseCatalog::instance().tryGetTable(target_table_id, getContext());\n }\n \n+NamesAndTypesList StorageMaterializedView::getVirtuals() const\n+{\n+    return getTargetTable()->getVirtuals();\n+}\n+\n Strings StorageMaterializedView::getDataPaths() const\n {\n     if (auto table = tryGetTargetTable())\ndiff --git a/src/Storages/StorageMaterializedView.h b/src/Storages/StorageMaterializedView.h\nindex c110d0b211ca..395560c1ca73 100644\n--- a/src/Storages/StorageMaterializedView.h\n+++ b/src/Storages/StorageMaterializedView.h\n@@ -71,6 +71,9 @@ class StorageMaterializedView final : public shared_ptr_helper<StorageMaterializ\n     StoragePtr getTargetTable() const;\n     StoragePtr tryGetTargetTable() const;\n \n+    /// Get the virtual column of the target table;\n+    NamesAndTypesList getVirtuals() const override;\n+\n     ActionLock getActionLock(StorageActionBlockType type) override;\n \n     Pipe read(\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.reference b/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.reference\nnew file mode 100644\nindex 000000000000..00750edc07d6\n--- /dev/null\n+++ b/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.reference\n@@ -0,0 +1,1 @@\n+3\ndiff --git a/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.sql b/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.sql\nnew file mode 100644\nindex 000000000000..ad48a7507da9\n--- /dev/null\n+++ b/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.sql\n@@ -0,0 +1,9 @@\n+DROP TABLE IF EXISTS test_tb;\n+CREATE TABLE test_tb (a UInt64, s String) ENGINE = MergeTree() ORDER BY a;\n+\n+DROP VIEW IF EXISTS test_view_tb;\n+CREATE MATERIALIZED VIEW test_view_tb ENGINE = MergeTree() ORDER BY a AS SELECT * FROM test_tb;\n+\n+INSERT INTO test_tb VALUES (1, '1'), (2, '2'), (3, '3');\n+\n+SELECT count(_part) FROM test_view_tb;\n",
  "problem_statement": "Pass virtual column from inner table to materialized view\n```\r\ncreate table x engine=MergeTree ORDER BY tuple() as select * from numbers(100);\r\ncreate materialized view x_mv engine=MergeTree ORDER BY tuple() as select * from x;\r\ninsert into x select * from numbers(100);\r\n```\r\n\r\nThat works: \r\n```\r\nselect _part, count() from `.inner.x_mv` group by _part;\r\n\r\nSELECT \r\n    _part, \r\n    count()\r\nFROM `.inner.x_mv`\r\nGROUP BY _part\r\n\r\n\u250c\u2500_part\u2500\u2500\u2500\u2500\u2500\u252c\u2500count()\u2500\u2510\r\n\u2502 all_1_1_0 \u2502     100 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 rows in set. Elapsed: 0.004 sec.\r\n```\r\n\r\nThat - not:\r\n```\r\nselect _part, count() from x_mv group by _part;\r\nReceived exception from server (version 20.5.1):\r\nCode: 47. DB::Exception: Received from localhost:9000. DB::Exception: Missing columns: '_part' while processing query: 'SELECT _part, count() FROM x_mv GROUP BY _part', required columns: '_part', source columns: 'number'. \r\n\r\n```\n",
  "hints_text": "@alexey-milovidov I'm interested in this and I hope to work on this.",
  "created_at": "2022-01-09T06:10:36Z",
  "modified_files": [
    "src/Storages/StorageMaterializedView.cpp",
    "src/Storages/StorageMaterializedView.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.reference",
    "b/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.sql"
  ]
}