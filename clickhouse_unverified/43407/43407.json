{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 43407,
  "instance_id": "ClickHouse__ClickHouse-43407",
  "issue_numbers": [
    "3682"
  ],
  "base_commit": "882e5ffd0b30b3fab4c3844ba3ff1fb83a7adaae",
  "patch": "diff --git a/src/Client/ClientBase.cpp b/src/Client/ClientBase.cpp\nindex 16597748f1ea..3e1b3e29e0b9 100644\n--- a/src/Client/ClientBase.cpp\n+++ b/src/Client/ClientBase.cpp\n@@ -1671,6 +1671,11 @@ void ClientBase::processParsedSingleQuery(const String & full_query, const Strin\n         std::cerr << progress_indication.elapsedSeconds() << \"\\n\";\n     }\n \n+    if (!is_interactive && print_num_processed_rows)\n+    {\n+        std::cout << \"Processed rows: \" << processed_rows << \"\\n\";\n+    }\n+\n     if (have_error && report_error)\n         processError(full_query);\n }\n@@ -2368,6 +2373,7 @@ void ClientBase::init(int argc, char ** argv)\n         (\"hardware-utilization\", \"print hardware utilization information in progress bar\")\n         (\"print-profile-events\", po::value(&profile_events.print)->zero_tokens(), \"Printing ProfileEvents packets\")\n         (\"profile-events-delay-ms\", po::value<UInt64>()->default_value(profile_events.delay_ms), \"Delay between printing `ProfileEvents` packets (-1 - print only totals, 0 - print every single packet)\")\n+        (\"processed-rows\", \"print the number of locally processed rows\")\n \n         (\"interactive\", \"Process queries-file or --query query and start interactive mode\")\n         (\"pager\", po::value<std::string>(), \"Pipe all output into this command (less or similar)\")\n@@ -2446,6 +2452,8 @@ void ClientBase::init(int argc, char ** argv)\n         config().setBool(\"print-profile-events\", true);\n     if (options.count(\"profile-events-delay-ms\"))\n         config().setUInt64(\"profile-events-delay-ms\", options[\"profile-events-delay-ms\"].as<UInt64>());\n+    if (options.count(\"processed-rows\"))\n+        print_num_processed_rows = true;\n     if (options.count(\"progress\"))\n     {\n         switch (options[\"progress\"].as<ProgressOption>())\ndiff --git a/src/Client/ClientBase.h b/src/Client/ClientBase.h\nindex 2b15bfa7cacf..d31412e762cd 100644\n--- a/src/Client/ClientBase.h\n+++ b/src/Client/ClientBase.h\n@@ -253,6 +253,7 @@ class ClientBase : public Poco::Util::Application, public IHints<2, ClientBase>\n     bool need_render_profile_events = true;\n     bool written_first_block = false;\n     size_t processed_rows = 0; /// How many rows have been read or written.\n+    bool print_num_processed_rows = false; /// Whether to print the number of processed rows at\n \n     bool print_stack_trace = false;\n     /// The last exception that was received from the server. Is used for the\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02480_client_option_print_num_processed_rows.expect b/tests/queries/0_stateless/02480_client_option_print_num_processed_rows.expect\nnew file mode 100755\nindex 000000000000..77e219e804ec\n--- /dev/null\n+++ b/tests/queries/0_stateless/02480_client_option_print_num_processed_rows.expect\n@@ -0,0 +1,42 @@\n+#!/usr/bin/expect -f\n+\n+set basedir [file dirname $argv0]\n+set basename [file tail $argv0]\n+exp_internal -f $env(CLICKHOUSE_TMP)/$basename.debuglog 0\n+\n+log_user 0\n+set timeout 60\n+match_max 100000\n+set stty_init \"rows 25 cols 120\"\n+\n+expect_after {\n+    eof { exp_continue }\n+    timeout { exit 1 }\n+}\n+\n+spawn bash\n+send \"source $basedir/../shell_config.sh\\r\"\n+\n+send -- \"\\$CLICKHOUSE_CLIENT --query 'DROP TABLE IF EXISTS num_processed_rows_test_0' >/dev/null 2>&1\\r\"\n+\n+send -- \"\\$CLICKHOUSE_CLIENT --query 'CREATE TABLE num_processed_rows_test_0 (val String) ENGINE = Memory;' >/dev/null 2>&1\\r\"\n+\n+### When requested we should get the count on exit:\n+send -- \"\\$CLICKHOUSE_CLIENT --processed-rows --query \\\"INSERT INTO num_processed_rows_test_0 VALUES (\\'x\\');\\\" \\r\"\n+expect \"Processed rows: 1\"\n+\n+send \"yes | head -n7757 | \\$CLICKHOUSE_CLIENT --processed-rows --query 'INSERT INTO num_processed_rows_test_0 format TSV\\'\\r\"\n+expect \"Processed rows: 7757\"\n+\n+\n+\n+### By default it should not show up:\n+\n+send -- \"\\$CLICKHOUSE_CLIENT --query \\\"INSERT INTO num_processed_rows_test_0 VALUES (\\'x\\');\\\" && echo OK\\r\"\n+expect -exact \"OK\\r\"\n+\n+send \"yes | head -n7757 | \\$CLICKHOUSE_CLIENT --query 'INSERT INTO num_processed_rows_test_0 format TSV\\' && echo OK\\r\"\n+expect -exact \"OK\\r\"\n+\n+send \"exit\\r\"\n+expect eof\ndiff --git a/tests/queries/0_stateless/02480_client_option_print_num_processed_rows.reference b/tests/queries/0_stateless/02480_client_option_print_num_processed_rows.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\n",
  "problem_statement": "Client --query run mode write number of rows inserted to stdout on exit\nWe insert by running `clickhouse client --query INSERT INTO <table> FORMAT CSV` and writing the next batch of rows to stdin.  Unfortunately, when the client exits, we do not know how many rows were actually inserted.\r\n\r\nJust a number printed to stdout on exit would be fine.  Compare ClickHouse to Postgres:\r\n```\r\n$ clickhouse-client --query \"INSERT INTO test VALUES (1)\"\r\n$\r\n```\r\n```\r\n$ psql -U postgres -d config -c \"INSERT INTO test VALUES (1)\"\r\nINSERT 0 1\r\n$\r\n```\n",
  "hints_text": "We can do it under `--progress` option. This will not break backward compatibility.",
  "created_at": "2022-11-20T18:17:16Z",
  "modified_files": [
    "src/Client/ClientBase.cpp",
    "src/Client/ClientBase.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02480_client_option_print_num_processed_rows.expect"
  ]
}