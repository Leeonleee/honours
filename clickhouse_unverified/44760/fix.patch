diff --git a/src/QueryPipeline/RemoteQueryExecutor.cpp b/src/QueryPipeline/RemoteQueryExecutor.cpp
index e42b0141a277..49bc6a6326da 100644
--- a/src/QueryPipeline/RemoteQueryExecutor.cpp
+++ b/src/QueryPipeline/RemoteQueryExecutor.cpp
@@ -375,7 +375,9 @@ std::optional<Block> RemoteQueryExecutor::processPacket(Packet packet)
                 got_duplicated_part_uuids = true;
             break;
         case Protocol::Server::Data:
-            /// If the block is not empty and is not a header block
+            /// Note: `packet.block.rows() > 0` means it's a header block.
+            /// We can actually return it, and the first call to RemoteQueryExecutor::read
+            /// will return earlier. We should consider doing it.
             if (packet.block && (packet.block.rows() > 0))
                 return adaptBlockStructure(packet.block, header);
             break;  /// If the block is empty - we will receive other packets before EndOfStream.
@@ -412,10 +414,14 @@ std::optional<Block> RemoteQueryExecutor::processPacket(Packet packet)
 
         case Protocol::Server::Totals:
             totals = packet.block;
+            if (totals)
+                totals = adaptBlockStructure(totals, header);
             break;
 
         case Protocol::Server::Extremes:
             extremes = packet.block;
+            if (extremes)
+                extremes = adaptBlockStructure(packet.block, header);
             break;
 
         case Protocol::Server::Log:
