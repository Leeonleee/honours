diff --git a/tests/integration/test_multiple_disks/configs/logs_config.xml b/tests/integration/test_multiple_disks/configs/logs_config.xml
index b0643c8bdad4..2ee8bb55f38c 100644
--- a/tests/integration/test_multiple_disks/configs/logs_config.xml
+++ b/tests/integration/test_multiple_disks/configs/logs_config.xml
@@ -14,8 +14,4 @@
         <table>part_log</table>
         <flush_interval_milliseconds>500</flush_interval_milliseconds>
     </part_log>
-    <merge_tree_metadata_cache>
-        <lru_cache_size>268435456</lru_cache_size>
-        <continue_if_corrupted>true</continue_if_corrupted>
-    </merge_tree_metadata_cache>
 </clickhouse>
diff --git a/tests/integration/test_multiple_disks/test.py b/tests/integration/test_multiple_disks/test.py
index bc7ac6683aff..9a5a315ebedb 100644
--- a/tests/integration/test_multiple_disks/test.py
+++ b/tests/integration/test_multiple_disks/test.py
@@ -889,15 +889,12 @@ def get_paths_for_partition_from_part_log(node, table, partition_id):
 
 
 @pytest.mark.parametrize(
-    "name,engine,use_metadata_cache",
+    "name,engine",
     [
-        pytest.param("altering_mt", "MergeTree()", "false", id="mt"),
-        pytest.param("altering_mt", "MergeTree()", "true", id="mt_use_metadata_cache"),
-        # ("altering_replicated_mt","ReplicatedMergeTree('/clickhouse/altering_replicated_mt', '1')",),
-        # SYSTEM STOP MERGES doesn't disable merges assignments
+        pytest.param("altering_mt", "MergeTree()", id="mt"),
     ],
 )
-def test_alter_move(start_cluster, name, engine, use_metadata_cache):
+def test_alter_move(start_cluster, name, engine):
     try:
         node1.query(
             """
@@ -907,9 +904,9 @@ def test_alter_move(start_cluster, name, engine, use_metadata_cache):
             ) ENGINE = {engine}
             ORDER BY tuple()
             PARTITION BY toYYYYMM(EventDate)
-            SETTINGS storage_policy='jbods_with_external', use_metadata_cache={use_metadata_cache}
+            SETTINGS storage_policy='jbods_with_external'
         """.format(
-                name=name, engine=engine, use_metadata_cache=use_metadata_cache
+                name=name, engine=engine
             )
         )
 
diff --git a/tests/queries/0_stateless/01161_all_system_tables.sh b/tests/queries/0_stateless/01161_all_system_tables.sh
index 6a72027478ed..47316a6a805b 100755
--- a/tests/queries/0_stateless/01161_all_system_tables.sh
+++ b/tests/queries/0_stateless/01161_all_system_tables.sh
@@ -18,7 +18,7 @@ function run_selects()
 {
     thread_num=$1
     readarray -t tables_arr < <(${CLICKHOUSE_CLIENT} -q "SELECT database || '.' || name FROM system.tables
-    WHERE database in ('system', 'information_schema', 'INFORMATION_SCHEMA') and name!='zookeeper' and name!='merge_tree_metadata_cache' and name!='models'
+    WHERE database in ('system', 'information_schema', 'INFORMATION_SCHEMA') and name != 'zookeeper' and name != 'models'
     AND sipHash64(name || toString($RAND)) % $THREADS = $thread_num")
 
     for t in "${tables_arr[@]}"
diff --git a/tests/queries/0_stateless/01233_check_table_with_metadata_cache.reference b/tests/queries/0_stateless/01233_check_table_with_metadata_cache.reference
deleted file mode 100644
index b773fc49ec33..000000000000
--- a/tests/queries/0_stateless/01233_check_table_with_metadata_cache.reference
+++ /dev/null
@@ -1,672 +0,0 @@
-database engine:Ordinary; table engine:ReplicatedMergeTree; use metadata cache:false; use projection:false; use_compact_data_part:false
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Ordinary; table engine:ReplicatedMergeTree; use metadata cache:false; use projection:false; use_compact_data_part:true
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Ordinary; table engine:ReplicatedMergeTree; use metadata cache:false; use projection:true; use_compact_data_part:false
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Ordinary; table engine:ReplicatedMergeTree; use metadata cache:false; use projection:true; use_compact_data_part:true
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Ordinary; table engine:ReplicatedMergeTree; use metadata cache:true; use projection:false; use_compact_data_part:false
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Ordinary; table engine:ReplicatedMergeTree; use metadata cache:true; use projection:false; use_compact_data_part:true
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Ordinary; table engine:ReplicatedMergeTree; use metadata cache:true; use projection:true; use_compact_data_part:false
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Ordinary; table engine:ReplicatedMergeTree; use metadata cache:true; use projection:true; use_compact_data_part:true
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Atomic; table engine:ReplicatedMergeTree; use metadata cache:false; use projection:false; use_compact_data_part:false
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Atomic; table engine:ReplicatedMergeTree; use metadata cache:false; use projection:false; use_compact_data_part:true
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Atomic; table engine:ReplicatedMergeTree; use metadata cache:false; use projection:true; use_compact_data_part:false
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Atomic; table engine:ReplicatedMergeTree; use metadata cache:false; use projection:true; use_compact_data_part:true
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Atomic; table engine:ReplicatedMergeTree; use metadata cache:true; use projection:false; use_compact_data_part:false
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Atomic; table engine:ReplicatedMergeTree; use metadata cache:true; use projection:false; use_compact_data_part:true
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Atomic; table engine:ReplicatedMergeTree; use metadata cache:true; use projection:true; use_compact_data_part:false
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-database engine:Atomic; table engine:ReplicatedMergeTree; use metadata cache:true; use projection:true; use_compact_data_part:true
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
-TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;
-CHECK TABLE test_metadata_cache.check_part_metadata_cache;
-1
diff --git a/tests/queries/0_stateless/01233_check_table_with_metadata_cache.sh b/tests/queries/0_stateless/01233_check_table_with_metadata_cache.sh
deleted file mode 100755
index 67f11e58a684..000000000000
--- a/tests/queries/0_stateless/01233_check_table_with_metadata_cache.sh
+++ /dev/null
@@ -1,104 +0,0 @@
-#!/usr/bin/env bash
-# Tags: no-fasttest, long, no-s3-storage, no-random-settings, no-parallel
-# Tag no-fasttest: setting use_metadata_cache=true is not supported in fasttest, because clickhouse binary in fasttest is build without RocksDB.
-# Tag no-random-settings: random settings significantly slow down test with debug build (alternative: add no-debug tag)
-# To suppress Warning messages from CHECK TABLE
-CLICKHOUSE_CLIENT_SERVER_LOGS_LEVEL=error
-CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
-# shellcheck source=../shell_config.sh
-. "$CURDIR"/../shell_config.sh
-
-set -e
-
-table_engines=(ReplicatedMergeTree)
-database_engines=(Ordinary Atomic)
-use_metadata_caches=(false true)
-use_projections=(false true)
-use_compact_data_parts=(false true)
-
-for table_engine in "${table_engines[@]}"; do
-    for database_engine in "${database_engines[@]}"; do
-        for use_metadata_cache in "${use_metadata_caches[@]}"; do
-            for use_projection in "${use_projections[@]}"; do
-                for use_compact_data_part in "${use_compact_data_parts[@]}"; do
-                    echo "database engine:${database_engine}; table engine:${table_engine}; use metadata cache:${use_metadata_cache}; use projection:${use_projection}; use_compact_data_part:${use_compact_data_part}"
-
-                    ${CLICKHOUSE_CLIENT} --query "DROP TABLE IF EXISTS test_metadata_cache.check_part_metadata_cache SYNC;"
-                    ${CLICKHOUSE_CLIENT} --query "DROP DATABASE IF EXISTS test_metadata_cache;"
-                    ${CLICKHOUSE_CLIENT} --allow_deprecated_database_ordinary=1 --query "CREATE DATABASE test_metadata_cache ENGINE = ${database_engine};"
-
-                    table_engine_clause=""
-                    if [[ "$table_engine" == "ReplicatedMergeTree" ]]; then
-                        table_engine_clause="ENGINE ReplicatedMergeTree('/clickhouse/tables/$CLICKHOUSE_TEST_ZOOKEEPER_PREFIX/test_metadata_cache/check_part_metadata_cache', 'r1')"
-                    elif [[ "$table_engine" == "MergeTree" ]]; then
-                        table_engine_clause="ENGINE MergeTree()"
-                    fi
-
-                    projection_clause=""
-                    if [[ "$use_projection" == "true" ]]; then
-                        projection_clause=", projection p1 (select p, sum(k), sum(v1), sum(v2) group by p)"
-                    fi
-
-                    compact_data_part_clause=", min_bytes_for_wide_part = 10485760"
-                    if [[ $use_compact_data_part == "true" ]]; then
-                        compact_data_part_clause=", min_bytes_for_wide_part = 0"
-                    fi
-                    ${CLICKHOUSE_CLIENT} --query "CREATE TABLE test_metadata_cache.check_part_metadata_cache (p Date, k UInt64, v1 UInt64, v2 Int64${projection_clause}) $table_engine_clause PARTITION BY toYYYYMM(p) ORDER BY k settings use_metadata_cache = ${use_metadata_cache} ${compact_data_part_clause}"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Insert first batch of data.
-                    ${CLICKHOUSE_CLIENT} --echo --query "INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 1, 1000, 2000), ('2018-05-16', 2, 3000, 4000), ('2018-05-17', 3, 5000, 6000), ('2018-05-18', 4, 7000, 8000);"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Insert second batch of data.
-                    ${CLICKHOUSE_CLIENT} --echo --query "INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-05-15', 5, 1000, 2000), ('2018-05-16', 6, 3000, 4000), ('2018-05-17', 7, 5000, 6000), ('2018-05-18', 8, 7000, 8000);"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # First update.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v1 = 2001  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Second update.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache update  v2 = 4002  where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # First delete.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 1 settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Second delete.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache delete where k = 8 settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Insert third batch of data.
-                    ${CLICKHOUSE_CLIENT} --echo --query "INSERT INTO test_metadata_cache.check_part_metadata_cache (p, k, v1, v2) VALUES ('2018-06-15', 5, 1000, 2000), ('2018-06-16', 6, 3000, 4000), ('2018-06-17', 7, 5000, 6000), ('2018-06-18', 8, 7000, 8000);"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Drop one partition.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache drop partition 201805 settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Add column.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache add column v3 UInt64 settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Delete column.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache drop column v3 settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Add TTL.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 10 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Modify TTL.
-                    ${CLICKHOUSE_CLIENT} --echo --query "ALTER TABLE test_metadata_cache.check_part_metadata_cache modify TTL p + INTERVAL 15 YEAR settings mutations_sync = 1, replication_alter_partitions_sync = 1;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-
-                    # Truncate table.
-                    ${CLICKHOUSE_CLIENT} --echo --query "TRUNCATE TABLE test_metadata_cache.check_part_metadata_cache;"
-                    ${CLICKHOUSE_CLIENT} --echo --query "CHECK TABLE test_metadata_cache.check_part_metadata_cache;"
-                done
-            done
-        done
-    done
-done
