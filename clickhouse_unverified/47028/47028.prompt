You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Incorrect HAVING filtering
Strange situation. HAVING is always true in this 3 queries.
When we use `cond1 AND cond2` it returns no rows. 

So here we this conditions computed separately: 
```
SELECT (-sign(-233841197)) IS NOT NULL

┌─isNotNull(negate(sign(-233841197)))─┐
│                                   1 │
└─────────────────────────────────────┘

SELECT sin(lcm(10, 10) >= ('372497213' IS NOT NULL))

┌─sin(greaterOrEquals(lcm(10, 10), isNotNull('372497213')))─┐
│                                        0.8414709848078965 │
└───────────────────────────────────────────────────────────┘

SELECT ((-sign(-233841197)) IS NOT NULL) AND sin(lcm(10, 10) >= ('372497213' IS NOT NULL))

┌─and(isNotNull(negate(sign(-233841197))), sin(greaterOrEquals(lcm(10, 10), isNotNull('372497213'))))─┐
│                                                                                                   1 │
└─────────────────────────────────────────────────────────────────────────────────────────────────────┘
```

This is a query with issue. Nothing is returned.
```
SELECT SUM(number)
FROM
(
    SELECT 10 AS number
)
GROUP BY cos(min2(number, number) % number) - number
HAVING ((-sign(-233841197)) IS NOT NULL) AND sin(lcm(SUM(number), SUM(number)) >= ('372497213' IS NOT NULL))
SETTINGS aggregate_functions_null_for_empty = 1, enable_optimize_predicate_expression = 0


Ok.

0 rows in set. Elapsed: 0.002 sec.

```

If I remove second half of condition it returns answer 
```
SELECT SUM(number)
FROM
(
    SELECT 10 AS number
)
GROUP BY cos(min2(number, number) % number) - number
HAVING (-sign(-233841197)) IS NOT NULL
SETTINGS aggregate_functions_null_for_empty = 1, enable_optimize_predicate_expression = 0

┌─SUM(number)─┐
│          10 │
└─────────────┘

1 row in set. Elapsed: 0.001 sec.
```

If I replace `((-sign(-233841197)) IS NOT NULL)` to `true` it also works 
```
SELECT SUM(number)
FROM
(
    SELECT 10 AS number
)
GROUP BY cos(min2(number, number) % number) - number
HAVING true AND sin(lcm(SUM(number), SUM(number)) >= ('372497213' IS NOT NULL))
SETTINGS aggregate_functions_null_for_empty = 1, enable_optimize_predicate_expression = 0

Query id: 44e373a8-9987-4202-840a-cc025bfa27d3

┌─SUM(number)─┐
│          10 │
└─────────────┘

1 row in set. Elapsed: 0.002 sec.
```

PS
And we do not allow to use Float as WHERE contition, but allow to boolean logic with Float. 
So we may force ClickHouse to use Float in condition using `true AND ...`. Maybe it is time to just allow other types in WHERE as workaround is just `true and`.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
