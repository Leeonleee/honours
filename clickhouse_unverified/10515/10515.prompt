You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
DateTime TimeZone Behavior Inconsistent
**Describe the bug**
ClickHouse uses Timezone-local times when inserting values, but Server-local times when querying. This is inconsistent.

**How to reproduce**
* Which ClickHouse server version to use: 19.5.2.6
* Which interface to use, if matters: Native clickhouse-client
* Non-default settings, if any: Server timezone = UTC
* `CREATE TABLE` statements for all tables involved:
```
CREATE TABLE tztest
(
    timeBerlin DateTime('Europe/Berlin'), 
    timeLA DateTime('America/Los_Angeles')
)
ENGINE = Memory
```
* Queries to run that lead to unexpected result:
```
INSERT INTO tztest (timeBerlin, timeLA) VALUES ('2019-05-06 12:00:00', '2019-05-06 12:00:00');
```
```
SELECT 
    toUnixTimestamp(timeBerlin), 
    toUnixTimestamp(timeLA)
FROM tztest 

┌─toUnixTimestamp(timeBerlin)─┬─toUnixTimestamp(timeLA)─┐
│                  1557136800 │              1557169200 │
└─────────────────────────────┴─────────────────────────┘
```
```
SELECT 1
FROM tztest 
WHERE timeBerlin = '2019-05-06 12:00:00'

Ok.

0 rows in set. Elapsed: 0.003 sec. 
```
```
SELECT 1
FROM tztest 
WHERE timeLA = '2019-05-06 12:00:00'

Ok.

0 rows in set. Elapsed: 0.003 sec.
```

**Expected behavior**
The queries should have returned the row, or ClickHouse should have used the server timezone when inserting the values. Either way, ClickHouse should behave consistent.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
