diff --git a/tests/queries/0_stateless/01301_aggregate_state_exception_memory_leak.reference b/tests/queries/0_stateless/01301_aggregate_state_exception_memory_leak.reference
new file mode 100644
index 000000000000..b20e7415f52d
--- /dev/null
+++ b/tests/queries/0_stateless/01301_aggregate_state_exception_memory_leak.reference
@@ -0,0 +1,2 @@
+Memory limit (for query) exceeded
+Ok
diff --git a/tests/queries/0_stateless/01301_aggregate_state_exception_memory_leak.sh b/tests/queries/0_stateless/01301_aggregate_state_exception_memory_leak.sh
new file mode 100755
index 000000000000..633fa5ce315a
--- /dev/null
+++ b/tests/queries/0_stateless/01301_aggregate_state_exception_memory_leak.sh
@@ -0,0 +1,17 @@
+#!/usr/bin/env bash
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+. $CURDIR/../shell_config.sh
+
+function test()
+{
+    for i in {1..1000}; do
+        $CLICKHOUSE_CLIENT --max_memory_usage 1G <<< "SELECT uniqExactState(number) FROM system.numbers_mt GROUP BY number % 10";
+    done
+}
+
+export -f test;
+
+# If the memory leak exists, it will lead to OOM fairly quickly.
+timeout 30 bash -c test 2>&1 | grep -o -F 'Memory limit (for query) exceeded' | uniq
+echo 'Ok'
diff --git a/tests/queries/0_stateless/01302_aggregate_state_exception_memory_leak.reference b/tests/queries/0_stateless/01302_aggregate_state_exception_memory_leak.reference
new file mode 100644
index 000000000000..7326d9603970
--- /dev/null
+++ b/tests/queries/0_stateless/01302_aggregate_state_exception_memory_leak.reference
@@ -0,0 +1,1 @@
+Ok
diff --git a/tests/queries/0_stateless/01302_aggregate_state_exception_memory_leak.sh b/tests/queries/0_stateless/01302_aggregate_state_exception_memory_leak.sh
new file mode 100755
index 000000000000..cd2fec408abf
--- /dev/null
+++ b/tests/queries/0_stateless/01302_aggregate_state_exception_memory_leak.sh
@@ -0,0 +1,16 @@
+#!/usr/bin/env bash
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+. $CURDIR/../shell_config.sh
+
+function test()
+{
+    for i in {1..250}; do
+        $CLICKHOUSE_CLIENT --query "SELECT groupArrayIfState(('Hello, world' AS s) || s || s || s || s || s || s || s || s || s, NOT throwIf(number > 10000000, 'Ok')) FROM system.numbers_mt GROUP BY number % 10";
+    done
+}
+
+export -f test;
+
+# If the memory leak exists, it will lead to OOM fairly quickly.
+timeout 30 bash -c test 2>&1 | grep -o -F 'Ok' | uniq
