{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 74033,
  "instance_id": "ClickHouse__ClickHouse-74033",
  "issue_numbers": [
    "72093"
  ],
  "base_commit": "6ae1b1557df4dde2185d00a6590f828508dad331",
  "patch": "diff --git a/src/Planner/CollectTableExpressionData.cpp b/src/Planner/CollectTableExpressionData.cpp\nindex 3e21550c9475..cef0222bffba 100644\n--- a/src/Planner/CollectTableExpressionData.cpp\n+++ b/src/Planner/CollectTableExpressionData.cpp\n@@ -99,6 +99,8 @@ class CollectSourceColumnsVisitor : public InDepthQueryTreeVisitor<CollectSource\n                 alias_column_actions_dag.addOrReplaceInOutputs(alias_node);\n                 table_expression_data.addAliasColumn(column_node->getColumn(), column_identifier, std::move(alias_column_actions_dag), select_added_columns);\n             }\n+            else\n+                table_expression_data.markSelectedColumn(column_node->getColumn().name);\n \n             return;\n         }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03303_alias_inverse_order.reference b/tests/queries/0_stateless/03303_alias_inverse_order.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/03303_alias_inverse_order.sql b/tests/queries/0_stateless/03303_alias_inverse_order.sql\nnew file mode 100644\nindex 000000000000..c0ce92a25e33\n--- /dev/null\n+++ b/tests/queries/0_stateless/03303_alias_inverse_order.sql\n@@ -0,0 +1,15 @@\n+DROP TABLE IF EXISTS test_alias_inverse_order;\n+\n+CREATE TABLE test_alias_inverse_order\n+(\n+  x int,\n+  y int ALIAS x + 1,\n+  z int ALIAS y + 1\n+)\n+ENGINE = MergeTree\n+ORDER BY ();\n+\n+SELECT x, y, z FROM test_alias_inverse_order SETTINGS allow_experimental_analyzer = 1;\n+SELECT x, z, y FROM test_alias_inverse_order SETTINGS allow_experimental_analyzer = 1;\n+\n+DROP TABLE IF EXISTS test_alias_inverse_order;\n",
  "problem_statement": "The analyzer: Error when selecting columns out of order from empty table\nWith the analyzer, selecting alias columns out of order does not work anymore:\r\n\r\n```sql\r\nCREATE TABLE t (\r\n  x int,\r\n  y int ALIAS x + 1,\r\n  z int ALIAS y + 1\r\n)\r\nENGINE = MergeTree\r\nORDER BY ();\r\n\r\nSELECT x, y, z FROM t; -- works\r\n\r\nSELECT x, z, y FROM t SETTINGS allow_experimental_analyzer = 0; -- works\r\n\r\nSELECT x, z, y FROM t SETTINGS allow_experimental_analyzer = 1;\r\n-- Received exception from server (version 24.10.2):\r\n-- Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column __table1.y in block __table1.x Int32 -Int32(size = 0), __table1.z Int32 Int32(size = 0). (NOT_FOUND_COLUMN_IN_BLOCK)\r\n-- (query: SELECT x, z, y FROM t SETTINGS allow_experimental_analyzer = 1; -- NOT_FOUND_COLUMN_IN_BLOCK)\r\n\r\nINSERT INTO t VALUES (1);\r\n\r\nSELECT x, z, y FROM t SETTINGS allow_experimental_analyzer = 1; -- works after insert\r\n\r\n   \u250c\u2500x\u2500\u252c\u2500z\u2500\u252c\u2500y\u2500\u2510\r\n1. \u2502 1 \u2502 3 \u2502 2 \u2502\r\n   \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "",
  "created_at": "2024-12-31T17:58:35Z"
}