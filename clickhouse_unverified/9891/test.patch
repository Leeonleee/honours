diff --git a/dbms/src/Interpreters/tests/in_join_subqueries_preprocessor.cpp b/dbms/src/Interpreters/tests/in_join_subqueries_preprocessor.cpp
index 9a6d7ca41627..9a17f03f32a7 100644
--- a/dbms/src/Interpreters/tests/in_join_subqueries_preprocessor.cpp
+++ b/dbms/src/Interpreters/tests/in_join_subqueries_preprocessor.cpp
@@ -1181,7 +1181,8 @@ TestResult check(const TestEntry & entry)
 
         try
         {
-            DB::InJoinSubqueriesPreprocessor(context, std::make_unique<CheckShardsAndTablesMock>()).visit(ast_input);
+            DB::InJoinSubqueriesPreprocessor::SubqueryTables renamed;
+            DB::InJoinSubqueriesPreprocessor(context, renamed, std::make_unique<CheckShardsAndTablesMock>()).visit(ast_input);
         }
         catch (const DB::Exception & ex)
         {
diff --git a/dbms/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.reference b/dbms/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.reference
new file mode 100644
index 000000000000..53f7332cffbf
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.reference
@@ -0,0 +1,12 @@
+42
+42
+42
+42
+42
+42
+42
+42
+42
+42
+42
+42
diff --git a/dbms/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.sql b/dbms/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.sql
new file mode 100644
index 000000000000..32655420a279
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.sql
@@ -0,0 +1,87 @@
+CREATE DATABASE IF NOT EXISTS test_01103;
+USE test_01103;
+
+DROP TABLE IF EXISTS t1_shard;
+DROP TABLE IF EXISTS t2_shard;
+DROP TABLE IF EXISTS t1_distr;
+DROP TABLE IF EXISTS t2_distr;
+
+create table t1_shard (id Int32) engine MergeTree order by id;
+create table t2_shard (id Int32) engine MergeTree order by id;
+
+create table t1_distr as t1_shard engine Distributed(test_cluster_two_shards_localhost, test_01103, t1_shard, id);
+create table t2_distr as t2_shard engine Distributed(test_cluster_two_shards_localhost, test_01103, t2_shard, id);
+
+insert into t1_shard values (42);
+insert into t2_shard values (42);
+
+SET distributed_product_mode = 'local';
+
+select d0.id
+from t1_distr d0
+where d0.id in
+(
+    select d1.id
+    from t1_distr as d1
+    inner join t2_distr as d2 on d1.id = d2.id
+    where d1.id  > 0
+    order by d1.id
+);
+
+select t1_distr.id
+from t1_distr
+where t1_distr.id in
+(
+    select t1_distr.id
+    from t1_distr as d1
+    inner join t2_distr as d2 on t1_distr.id = t2_distr.id
+    where t1_distr.id  > 0
+    order by t1_distr.id
+);
+
+select test_01103.t1_distr.id
+from test_01103.t1_distr
+where test_01103.t1_distr.id in
+(
+    select test_01103.t1_distr.id
+    from test_01103.t1_distr as d1
+    inner join test_01103.t2_distr as d2 on test_01103.t1_distr.id = test_01103.t2_distr.id
+    where test_01103.t1_distr.id  > 0
+    order by test_01103.t1_distr.id
+);
+
+select d0.id
+from t1_distr d0
+join (
+    select d1.id
+    from t1_distr as d1
+    inner join t2_distr as d2 on d1.id = d2.id
+    where d1.id  > 0
+    order by d1.id
+) s0 using id;
+
+select t1_distr.id
+from t1_distr
+join (
+    select t1_distr.id
+    from t1_distr as d1
+    inner join t2_distr as d2 on t1_distr.id = t2_distr.id
+    where t1_distr.id  > 0
+    order by t1_distr.id
+) s0 using id;
+
+select test_01103.t1_distr.id
+from test_01103.t1_distr
+join (
+    select test_01103.t1_distr.id
+    from test_01103.t1_distr as d1
+    inner join test_01103.t2_distr as d2 on test_01103.t1_distr.id = test_01103.t2_distr.id
+    where test_01103.t1_distr.id  > 0
+    order by test_01103.t1_distr.id
+) s0 using id;
+
+DROP TABLE t1_shard;
+DROP TABLE t2_shard;
+DROP TABLE t1_distr;
+DROP TABLE t2_distr;
+DROP DATABASE test_01103;
diff --git a/dbms/tests/queries/0_stateless/01104_distributed_numbers_test.reference b/dbms/tests/queries/0_stateless/01104_distributed_numbers_test.reference
new file mode 100644
index 000000000000..c5079fa2cfd0
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01104_distributed_numbers_test.reference
@@ -0,0 +1,4 @@
+100
+100
+100
+100
diff --git a/dbms/tests/queries/0_stateless/01104_distributed_numbers_test.sql b/dbms/tests/queries/0_stateless/01104_distributed_numbers_test.sql
new file mode 100644
index 000000000000..b301c0ac00f6
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01104_distributed_numbers_test.sql
@@ -0,0 +1,12 @@
+DROP TABLE IF EXISTS d_numbers;
+CREATE TABLE d_numbers (number UInt32) ENGINE = Distributed(test_cluster_two_shards_localhost, system, numbers, rand());
+
+SET experimental_use_processors = 1;
+
+SELECT '100' AS number FROM d_numbers AS n WHERE n.number = 100 LIMIT 2;
+
+SET distributed_product_mode = 'local';
+
+SELECT '100' AS number FROM d_numbers AS n WHERE n.number = 100 LIMIT 2;
+
+DROP TABLE d_numbers;
diff --git a/dbms/tests/queries/0_stateless/01104_distributed_one_test.reference b/dbms/tests/queries/0_stateless/01104_distributed_one_test.reference
new file mode 100644
index 000000000000..929dd64ae90f
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01104_distributed_one_test.reference
@@ -0,0 +1,6 @@
+local_0	1
+distributed_0	1	1
+distributed_0	2	1
+local_0	1
+distributed_0	1	1
+distributed_0	2	1
diff --git a/dbms/tests/queries/0_stateless/01104_distributed_one_test.sql b/dbms/tests/queries/0_stateless/01104_distributed_one_test.sql
new file mode 100644
index 000000000000..92b4a83ebf36
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01104_distributed_one_test.sql
@@ -0,0 +1,18 @@
+DROP TABLE IF EXISTS d_one;
+CREATE TABLE d_one (dummy UInt8) ENGINE = Distributed(test_cluster_two_shards_localhost, system, one, rand());
+
+SELECT 'local_0', toUInt8(1) AS dummy FROM system.one AS o WHERE o.dummy = 0;
+SELECT 'local_1', toUInt8(1) AS dummy FROM system.one AS o WHERE o.dummy = 1;
+
+SELECT 'distributed_0', _shard_num, toUInt8(1) AS dummy FROM d_one AS o WHERE o.dummy = 0 ORDER BY _shard_num;
+SELECT 'distributed_1', _shard_num, toUInt8(1) AS dummy FROM d_one AS o WHERE o.dummy = 1 ORDER BY _shard_num;
+
+SET distributed_product_mode = 'local';
+
+SELECT 'local_0', toUInt8(1) AS dummy FROM system.one AS o WHERE o.dummy = 0;
+SELECT 'local_1', toUInt8(1) AS dummy FROM system.one AS o WHERE o.dummy = 1;
+
+SELECT 'distributed_0', _shard_num, toUInt8(1) AS dummy FROM d_one AS o WHERE o.dummy = 0 ORDER BY _shard_num;
+SELECT 'distributed_1', _shard_num, toUInt8(1) AS dummy FROM d_one AS o WHERE o.dummy = 1 ORDER BY _shard_num;
+
+DROP TABLE d_one;
