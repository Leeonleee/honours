diff --git a/tests/queries/0_stateless/02374_analyzer_array_join.reference b/tests/queries/0_stateless/02374_analyzer_array_join.reference
index 6dd384c7d9cc..ad7750228d62 100644
--- a/tests/queries/0_stateless/02374_analyzer_array_join.reference
+++ b/tests/queries/0_stateless/02374_analyzer_array_join.reference
@@ -45,7 +45,13 @@ SELECT id, value, value_1, value_2 FROM test_table ARRAY JOIN [[1, 2, 3]] AS val
 0	Value	[1,2,3]	1
 0	Value	[1,2,3]	2
 0	Value	[1,2,3]	3
-SELECT 1 AS value FROM test_table ARRAY JOIN [1,2,3] AS value; -- { serverError 179 }
+SELECT 1 AS value FROM test_table ARRAY JOIN [1,2,3] AS value;
+1
+1
+1
+1
+1
+1
 SELECT 'ARRAY JOIN with column';
 ARRAY JOIN with column
 SELECT id, value, test_table.value_array FROM test_table ARRAY JOIN value_array;
@@ -84,7 +90,13 @@ SELECT id, value, value_array AS value_array_array_alias FROM test_table ARRAY J
 0	Value	[4,5,6]
 SELECT '--';
 --
-SELECT id AS value FROM test_table ARRAY JOIN value_array AS value; -- { serverError 179 }
+SELECT id AS value FROM test_table ARRAY JOIN value_array AS value;
+0
+0
+0
+0
+0
+0
 SELECT '--';
 --
 SELECT id, value, value_array AS value_array_array_alias, value_array_array_alias_element FROM test_table ARRAY JOIN value_array_array_alias AS value_array_array_alias_element;
@@ -120,3 +132,7 @@ WHERE NOT ignore(elem)
 GROUP BY
     sum(ignore(ignore(ignore(1., 1, 36, 8, 8), ignore(52, 37, 37, '03147_parquet_memory_tracking.parquet', 37, 37, toUInt256(37), 37, 37, toNullable(37), 37, 37), 1., 1, 36, 8, 8), emptyArrayToSingle(arrayMap(x -> toString(x), arrayMap(x -> nullIf(x, 2), arrayJoin([[1]])))))) IGNORE NULLS,
     modulo(toLowCardinality('03147_parquet_memory_tracking.parquet'), number, toLowCardinality(3)); -- { serverError UNKNOWN_IDENTIFIER }
+[1,2]	1
+[1,2]	2
+1
+2
diff --git a/tests/queries/0_stateless/02374_analyzer_array_join.sql b/tests/queries/0_stateless/02374_analyzer_array_join.sql
index bc4bb6616c16..8c26df1806ed 100644
--- a/tests/queries/0_stateless/02374_analyzer_array_join.sql
+++ b/tests/queries/0_stateless/02374_analyzer_array_join.sql
@@ -33,7 +33,7 @@ SELECT '--';
 
 SELECT id, value, value_1, value_2 FROM test_table ARRAY JOIN [[1, 2, 3]] AS value_1 ARRAY JOIN value_1 AS value_2;
 
-SELECT 1 AS value FROM test_table ARRAY JOIN [1,2,3] AS value; -- { serverError 179 }
+SELECT 1 AS value FROM test_table ARRAY JOIN [1,2,3] AS value;
 
 SELECT 'ARRAY JOIN with column';
 
@@ -53,7 +53,7 @@ SELECT id, value, value_array AS value_array_array_alias FROM test_table ARRAY J
 
 SELECT '--';
 
-SELECT id AS value FROM test_table ARRAY JOIN value_array AS value; -- { serverError 179 }
+SELECT id AS value FROM test_table ARRAY JOIN value_array AS value;
 
 SELECT '--';
 
@@ -80,3 +80,6 @@ GROUP BY
 -- { echoOff }
 
 DROP TABLE test_table;
+
+select [1, 2] as arr, x from system.one array join arr as x;
+select x + 1 as x from (select [number] as arr from numbers(2)) as s array join arr as x;
diff --git a/tests/queries/0_stateless/02521_analyzer_array_join_crash.reference b/tests/queries/0_stateless/02521_analyzer_array_join_crash.reference
index 5e7728e05908..426cfe35e73f 100644
--- a/tests/queries/0_stateless/02521_analyzer_array_join_crash.reference
+++ b/tests/queries/0_stateless/02521_analyzer_array_join_crash.reference
@@ -1,11 +1,10 @@
 -- { echoOn }
 
-SELECT id, value_element, value FROM test_table ARRAY JOIN [[1,2,3]] AS value_element, value_element AS value;
-0	[1,2,3]	[1,2,3]
+SELECT id, value_element, value FROM test_table ARRAY JOIN [[1,2,3]] AS value_element, value_element AS value; -- { serverError UNKNOWN_IDENTIFIER }
 SELECT id, value_element, value FROM test_table ARRAY JOIN [[1,2,3]] AS value_element ARRAY JOIN value_element AS value;
 0	[1,2,3]	1
 0	[1,2,3]	2
 0	[1,2,3]	3
-SELECT value_element, value FROM test_table ARRAY JOIN [1048577] AS value_element, arrayMap(x -> value_element, ['']) AS value;
-1048577	[1048577]
-SELECT arrayFilter(x -> notEmpty(concat(x)), [NULL, NULL]) FROM system.one ARRAY JOIN [1048577] AS elem, arrayMap(x -> splitByChar(x, elem), ['']) AS unused; -- { serverError 44 }
+SELECT value_element, value FROM test_table ARRAY JOIN [1048577] AS value_element ARRAY JOIN arrayMap(x -> value_element, ['']) AS value;
+1048577	1048577
+SELECT arrayFilter(x -> notEmpty(concat(x)), [NULL, NULL]) FROM system.one ARRAY JOIN [1048577] AS elem ARRAY JOIN arrayMap(x -> splitByChar(x, elem), ['']) AS unused; -- { serverError ILLEGAL_COLUMN }
diff --git a/tests/queries/0_stateless/02521_analyzer_array_join_crash.sql b/tests/queries/0_stateless/02521_analyzer_array_join_crash.sql
index 53606e01ab7b..7842d47d757d 100644
--- a/tests/queries/0_stateless/02521_analyzer_array_join_crash.sql
+++ b/tests/queries/0_stateless/02521_analyzer_array_join_crash.sql
@@ -11,13 +11,13 @@ INSERT INTO test_table VALUES (0, 'Value');
 
 -- { echoOn }
 
-SELECT id, value_element, value FROM test_table ARRAY JOIN [[1,2,3]] AS value_element, value_element AS value;
+SELECT id, value_element, value FROM test_table ARRAY JOIN [[1,2,3]] AS value_element, value_element AS value; -- { serverError UNKNOWN_IDENTIFIER }
 
 SELECT id, value_element, value FROM test_table ARRAY JOIN [[1,2,3]] AS value_element ARRAY JOIN value_element AS value;
 
-SELECT value_element, value FROM test_table ARRAY JOIN [1048577] AS value_element, arrayMap(x -> value_element, ['']) AS value;
+SELECT value_element, value FROM test_table ARRAY JOIN [1048577] AS value_element ARRAY JOIN arrayMap(x -> value_element, ['']) AS value;
 
-SELECT arrayFilter(x -> notEmpty(concat(x)), [NULL, NULL]) FROM system.one ARRAY JOIN [1048577] AS elem, arrayMap(x -> splitByChar(x, elem), ['']) AS unused; -- { serverError 44 }
+SELECT arrayFilter(x -> notEmpty(concat(x)), [NULL, NULL]) FROM system.one ARRAY JOIN [1048577] AS elem ARRAY JOIN arrayMap(x -> splitByChar(x, elem), ['']) AS unused; -- { serverError ILLEGAL_COLUMN }
 
 -- { echoOff }
 
diff --git a/tests/queries/0_stateless/03156_analyzer_array_join_distributed.reference b/tests/queries/0_stateless/03156_analyzer_array_join_distributed.reference
new file mode 100644
index 000000000000..b5b2aec9c125
--- /dev/null
+++ b/tests/queries/0_stateless/03156_analyzer_array_join_distributed.reference
@@ -0,0 +1,12 @@
+Hello	[1,2]	1
+Hello	[1,2]	2
+Hello	[1,2]	1
+Hello	[1,2]	1
+Hello	[1,2]	2
+Hello	[1,2]	2
+Hello	1
+Hello	2
+Hello	1
+Hello	1
+Hello	2
+Hello	2
diff --git a/tests/queries/0_stateless/03156_analyzer_array_join_distributed.sql b/tests/queries/0_stateless/03156_analyzer_array_join_distributed.sql
new file mode 100644
index 000000000000..f605a3698221
--- /dev/null
+++ b/tests/queries/0_stateless/03156_analyzer_array_join_distributed.sql
@@ -0,0 +1,10 @@
+CREATE TABLE arrays_test (s String, arr Array(UInt8)) ENGINE = MergeTree() ORDER BY (s);
+
+INSERT INTO arrays_test VALUES ('Hello', [1,2]), ('World', [3,4,5]), ('Goodbye', []);
+
+SELECT s, arr, a FROM remote('127.0.0.2', currentDatabase(), arrays_test) ARRAY JOIN arr AS a WHERE a < 3 ORDER BY a;
+SELECT s, arr, a FROM remote('127.0.0.{1,2}', currentDatabase(), arrays_test) ARRAY JOIN arr AS a WHERE a < 3 ORDER BY a;
+
+
+SELECT s, arr FROM remote('127.0.0.2', currentDatabase(), arrays_test) ARRAY JOIN arr WHERE arr < 3 ORDER BY arr;
+SELECT s, arr FROM remote('127.0.0.{1,2}', currentDatabase(), arrays_test) ARRAY JOIN arr WHERE arr < 3 ORDER BY arr;
