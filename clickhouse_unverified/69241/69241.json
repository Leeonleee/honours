{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 69241,
  "instance_id": "ClickHouse__ClickHouse-69241",
  "issue_numbers": [
    "69085"
  ],
  "base_commit": "a3e5a3cd10a110a5c7d3cb6917501a9761be6958",
  "patch": "diff --git a/docs/en/engines/table-engines/mergetree-family/annindexes.md b/docs/en/engines/table-engines/mergetree-family/annindexes.md\nindex 4cf558fc8726..3c75b8dbef0f 100644\n--- a/docs/en/engines/table-engines/mergetree-family/annindexes.md\n+++ b/docs/en/engines/table-engines/mergetree-family/annindexes.md\n@@ -111,15 +111,16 @@ ANN indexes are built during column insertion and merge. As a result, `INSERT` a\n tables. ANNIndexes are ideally used only with immutable or rarely changed data, respectively when are far more read requests than write\n requests.\n \n-ANN indexes support these queries:\n-\n-  ``` sql\n-  SELECT *\n-  FROM table\n-  [WHERE ...]\n-  ORDER BY Distance(vectors, Point)\n-  LIMIT N\n-  ```\n+ANN indexes support this type of query:\n+\n+``` sql\n+WITH [...] AS reference_vector\n+SELECT *\n+FROM table\n+WHERE ...                       -- WHERE clause is optional\n+ORDER BY Distance(vectors, reference_vector)\n+LIMIT N\n+```\n \n :::tip\n To avoid writing out large vectors, you can use [query\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02354_vector_search_bugs.reference b/tests/queries/0_stateless/02354_vector_search_bugs.reference\nindex 8da05c8a7c0d..ce006359f5c2 100644\n--- a/tests/queries/0_stateless/02354_vector_search_bugs.reference\n+++ b/tests/queries/0_stateless/02354_vector_search_bugs.reference\n@@ -4,3 +4,39 @@ It is possible to create parts with different Array vector sizes but there will\n Correctness of index with > 1 mark\n 1\t[1,0]\t0\n 9000\t[9000,0]\t0\n+Issue #69085: Reference vector computed by a subquery\n+Expression (Projection)\n+  Limit (preliminary LIMIT (without OFFSET))\n+    Sorting (Sorting for ORDER BY)\n+      Expression (Before ORDER BY)\n+        ReadFromMergeTree (default.tab)\n+        Indexes:\n+          PrimaryKey\n+            Condition: true\n+            Parts: 1/1\n+            Granules: 4/4\n+          Skip\n+            Name: idx\n+            Description: vector_similarity GRANULARITY 2\n+            Parts: 1/1\n+            Granules: 2/4\n+Expression (Projection)\n+  Limit (preliminary LIMIT (without OFFSET))\n+    Sorting (Sorting for ORDER BY)\n+      Expression (Before ORDER BY)\n+        ReadFromMergeTree (default.tab)\n+        Indexes:\n+          PrimaryKey\n+            Condition: true\n+            Parts: 1/1\n+            Granules: 4/4\n+Expression (Projection)\n+  Limit (preliminary LIMIT (without OFFSET))\n+    Sorting (Sorting for ORDER BY)\n+      Expression (Before ORDER BY)\n+        ReadFromMergeTree (default.tab)\n+        Indexes:\n+          PrimaryKey\n+            Condition: true\n+            Parts: 1/1\n+            Granules: 4/4\ndiff --git a/tests/queries/0_stateless/02354_vector_search_bugs.sql b/tests/queries/0_stateless/02354_vector_search_bugs.sql\nindex 51e2e6ce2b79..e0015d04b7e4 100644\n--- a/tests/queries/0_stateless/02354_vector_search_bugs.sql\n+++ b/tests/queries/0_stateless/02354_vector_search_bugs.sql\n@@ -53,3 +53,50 @@ ORDER BY L2Distance(vec, reference_vec)\n LIMIT 1;\n \n DROP TABLE tab;\n+\n+SELECT 'Issue #69085: Reference vector computed by a subquery';\n+\n+CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'cosineDistance', 'f16', 0, 0, 0) GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;\n+INSERT INTO tab VALUES (0, [4.6, 2.3]), (1, [2.0, 3.2]), (2, [4.2, 3.4]), (3, [5.3, 2.9]), (4, [2.4, 5.2]), (5, [5.3, 2.3]), (6, [1.0, 9.3]), (7, [5.5, 4.7]), (8, [6.4, 3.5]), (9, [5.3, 2.5]), (10, [6.4, 3.4]), (11, [6.4, 3.2]);\n+\n+-- works\n+EXPLAIN indexes = 1\n+WITH [0., 2.] AS reference_vec\n+SELECT\n+    id,\n+    vec,\n+    cosineDistance(vec, reference_vec) AS distance\n+FROM tab\n+ORDER BY distance\n+LIMIT 1\n+SETTINGS enable_analyzer = 0;\n+\n+-- does not work\n+EXPLAIN indexes = 1\n+WITH (\n+    SELECT vec\n+    FROM tab\n+    LIMIT 1\n+) AS reference_vec\n+SELECT\n+    id,\n+    vec,\n+    cosineDistance(vec, reference_vec) AS distance\n+FROM tab\n+ORDER BY distance\n+LIMIT 1\n+SETTINGS enable_analyzer = 0;\n+\n+-- does not work as well\n+EXPLAIN indexes = 1\n+WITH (\n+    SELECT [0., 2.]\n+) AS reference_vec\n+SELECT\n+    id,\n+    vec,\n+    cosineDistance(vec, reference_vec) AS distance\n+FROM tab\n+ORDER BY distance\n+LIMIT 1\n+SETTINGS enable_analyzer = 0;\n",
  "problem_statement": "Vector similarity index does not work as expected.\nFirst, the test case in #68678.\r\n```sql\r\nCREATE TABLE tab_f32\r\n(\r\n    `id` Int32,\r\n    `vec` Array(Float32),\r\n    INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'f32', 0, 0, 0) GRANULARITY 2\r\n)\r\nENGINE = MergeTree\r\nORDER BY id\r\nSETTINGS index_granularity = 3\r\n\r\nQuery id: c7e3f76b-be3e-4413-8428-c4bceb55a7c9\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.002 sec. \r\n\r\nINSERT INTO tab_f32 VALUES (0, [4.6, 2.3]), (1, [2.0, 3.2]), (2, [4.2, 3.4]), (3, [5.3, 2.9]), (4, [2.4, 5.2]), (5, [5.3, 2.3]), (6, [1.0, 9.3]), (7, [5.5, 4.7]), (8, [6.4, 3.5]), (9, [5.3, 2.5]), (10, [6.4, 3.4]), (11, [6.4, 3.2]);\r\n\r\nINSERT INTO tab_f32 FORMAT Values\r\n\r\nQuery id: e54f42d1-c0eb-4cfc-b1c8-e1a6c8ab0f45\r\n\r\nOk.\r\n\r\n12 rows in set. Elapsed: 0.002 sec.\r\n\r\nWITH [0., 2.] AS reference_vec\r\nSELECT\r\n    id,\r\n    vec,\r\n    L2Distance(vec, reference_vec)\r\nFROM tab_f32\r\nORDER BY L2Distance(vec, reference_vec) ASC\r\nLIMIT 3\r\n\r\nQuery id: 4df52400-817d-4aff-a100-cc3b9d43a5d6\r\n\r\n   \u250c\u2500id\u2500\u252c\u2500vec\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500L2Distance(vec, reference_vec)\u2500\u2510\r\n1. \u2502  1 \u2502 [2,3.2]   \u2502             2.3323807824711897 \u2502\r\n2. \u2502  4 \u2502 [2.4,5.2] \u2502             3.9999999046325727 \u2502\r\n3. \u2502  2 \u2502 [4.2,3.4] \u2502              4.427188573446585 \u2502\r\n   \u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n3 rows in set. Elapsed: 0.002 sec.\r\n\r\nEXPLAIN indexes = 1\r\nWITH [0., 2.] AS reference_vec\r\nSELECT\r\n    id,\r\n    vec,\r\n    L2Distance(vec, reference_vec)\r\nFROM tab_f32\r\nORDER BY L2Distance(vec, reference_vec) ASC\r\nLIMIT 3\r\n\r\nQuery id: 44cfdc13-25f6-46ed-8c05-93dc0fe968ca\r\n\r\n    \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n 1. \u2502 Expression (Project names)                                                                      \u2502\r\n 2. \u2502   Limit (preliminary LIMIT (without OFFSET))                                                    \u2502\r\n 3. \u2502     Sorting (Sorting for ORDER BY)                                                              \u2502\r\n 4. \u2502       Expression ((Before ORDER BY + (Projection + Change column names to column identifiers))) \u2502\r\n 5. \u2502         ReadFromMergeTree (ch_wxg_weolap.tab_f32)                                               \u2502\r\n 6. \u2502         Indexes:                                                                                \u2502\r\n 7. \u2502           PrimaryKey                                                                            \u2502\r\n 8. \u2502             Condition: true                                                                     \u2502\r\n 9. \u2502             Parts: 1/1                                                                          \u2502\r\n10. \u2502             Granules: 4/4                                                                       \u2502\r\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n10 rows in set. Elapsed: 0.001 sec.\r\n```\r\nThe results is not same as the reference in #68678.\r\n\r\nSecond, another case use our real dataset( ~ 25 millions X 768 dim\uff09:\r\n```sql\r\nCREATE TABLE dwd_me5_embedding\r\n(\r\n    `day_` Date COMMENT '\u5206\u533a\u5b57\u6bb5',\r\n    `xxx` String,\r\n    `xxx` String,\r\n    `xxx` String,\r\n    `xxx` String,\r\n    `me5_embedding` Array(Float32),\r\n)\r\nENGINE = MergeTree\r\nPARTITION BY day_\r\nPRIMARY KEY tuple()\r\nORDER BY tuple()\r\nSETTINGS index_granularity = 8192;\r\n\r\nalter table dwd_me5_embedding add INDEX idx me5_embedding TYPE vector_similarity('hnsw', 'cosineDistance', 'f16', 16, 128, 64);\r\n```\r\nWhen I use such a SQL to query it, got results:\r\n```sql\r\nWITH (\r\n        SELECT me5_embedding\r\n        FROM dwd_me5_embedding\r\n        LIMIT 1\r\n    ) AS query_vector\r\nSELECT cosineDistance(me5_embedding, query_vector) AS distance\r\nFROM dwd_me5_embedding\r\nORDER BY distance ASC\r\nLIMIT 5\r\n\r\nQuery id: a3a2ff4a-043a-4fef-bdf2-3e5206a9eab4\r\n\r\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500distance\u2500\u2510\r\n1. \u2502 -1.1920929e-7 \u2502\r\n2. \u2502 -1.1920929e-7 \u2502\r\n3. \u2502 -1.1920929e-7 \u2502\r\n4. \u2502 -1.1920929e-7 \u2502\r\n5. \u2502 -1.1920929e-7 \u2502\r\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n5 rows in set. Elapsed: 6.373 sec. Processed 24.11 million rows, 74.26 GB (3.78 million rows/s., 11.65 GB/s.)\r\nPeak memory usage: 1.02 GiB.\r\n\r\nEXPLAIN indexes = 1\r\nWITH (\r\n        SELECT me5_embedding\r\n        FROM dwd_me5_embedding\r\n        LIMIT 1\r\n    ) AS query_vector\r\nSELECT cosineDistance(me5_embedding, query_vector) AS distance\r\nFROM dwd_me5_embedding\r\nORDER BY distance ASC\r\nLIMIT 5\r\n\r\nQuery id: 17cafccd-d359-4958-b246-e0bea9a1e233\r\n\r\n    \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n 1. \u2502 Expression (Project names)                                                                      \u2502\r\n 2. \u2502   Limit (preliminary LIMIT (without OFFSET))                                                    \u2502\r\n 3. \u2502     Sorting (Sorting for ORDER BY)                                                              \u2502\r\n 4. \u2502       Expression ((Before ORDER BY + (Projection + Change column names to column identifiers))) \u2502\r\n 5. \u2502         ReadFromMergeTree (ch_wxg_weolap.dwd_me5_embedding)                            \u2502\r\n 6. \u2502         Indexes:                                                                                \u2502\r\n 7. \u2502           MinMax                                                                                \u2502\r\n 8. \u2502             Condition: true                                                                     \u2502\r\n 9. \u2502             Parts: 16/16                                                                        \u2502\r\n10. \u2502             Granules: 7141/7141                                                                 \u2502\r\n11. \u2502           Partition                                                                             \u2502\r\n12. \u2502             Condition: true                                                                     \u2502\r\n13. \u2502             Parts: 16/16                                                                        \u2502\r\n14. \u2502             Granules: 7141/7141                                                                 \u2502\r\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n14 rows in set. Elapsed: 0.005 sec. \r\n```\r\nLooks like it does not use the vector-similarity index and why the distance is negtive? Is anything wrong of my usage?\r\ncc @rschu1ze \r\n\n",
  "hints_text": "I did not check in detail (I am on a business trip) but did you try to disable analyzer before querying the vector similarity index? Otherwise, the system will not be able to use the index (at least as of now).\n> I did not check in detail (I am on a business trip) but did you try to disable analyzer before querying the vector similarity index? Otherwise, the system will not be able to use the index (at least as of now).\r\n\r\n```sql\r\nEXPLAIN indexes = 1\r\nWITH [0., 2.] AS reference_vec\r\nSELECT\r\n    id,\r\n    vec,\r\n    L2Distance(vec, reference_vec)\r\nFROM tab_f32\r\nORDER BY L2Distance(vec, reference_vec) ASC\r\nLIMIT 3\r\nSETTINGS allow_experimental_analyzer = 0\r\n\r\nQuery id: 1ea9bb62-4dad-468f-9a73-24fb6135ca58\r\n\r\n    \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n 1. \u2502 Expression (Projection)                                  \u2502\r\n 2. \u2502   Limit (preliminary LIMIT (without OFFSET))             \u2502\r\n 3. \u2502     Sorting (Sorting for ORDER BY)                       \u2502\r\n 4. \u2502       Expression (Before ORDER BY)                       \u2502\r\n 5. \u2502         ReadFromMergeTree (ch_wxg_weolap.tab_f32)        \u2502\r\n 6. \u2502         Indexes:                                         \u2502\r\n 7. \u2502           PrimaryKey                                     \u2502\r\n 8. \u2502             Condition: true                              \u2502\r\n 9. \u2502             Parts: 1/1                                   \u2502\r\n10. \u2502             Granules: 4/4                                \u2502\r\n11. \u2502           Skip                                           \u2502\r\n12. \u2502             Name: idx                                    \u2502\r\n13. \u2502             Description: vector_similarity GRANULARITY 2 \u2502\r\n14. \u2502             Parts: 1/1                                   \u2502\r\n15. \u2502             Granules: 2/4                                \u2502\r\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n15 rows in set. Elapsed: 0.002 sec. \r\n```\r\nThe test case worked as expected.\r\n\r\nBut the last case still does not work:\r\n```sql\r\nEXPLAIN indexes = 1\r\nWITH (\r\n        SELECT me5_embedding\r\n        FROM dwd_me5_embedding\r\n        LIMIT 1\r\n    ) AS query_vector\r\nSELECT cosineDistance(me5_embedding, query_vector) AS distance\r\nFROM dwd_me5_embedding\r\nORDER BY distance ASC\r\nLIMIT 5\r\nSETTINGS allow_experimental_analyzer = 0\r\n\r\nQuery id: fca2c1e4-8ec3-40a0-a051-334a85096a97\r\n\r\n    \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n 1. \u2502 Expression (Projection)                                              \u2502\r\n 2. \u2502   Limit (preliminary LIMIT (without OFFSET))                         \u2502\r\n 3. \u2502     Sorting (Sorting for ORDER BY)                                   \u2502\r\n 4. \u2502       Expression (Before ORDER BY)                                   \u2502\r\n 5. \u2502         ReadFromMergeTree (dwd_me5_embedding) \u2502\r\n 6. \u2502         Indexes:                                                     \u2502\r\n 7. \u2502           MinMax                                                     \u2502\r\n 8. \u2502             Condition: true                                          \u2502\r\n 9. \u2502             Parts: 16/16                                             \u2502\r\n10. \u2502             Granules: 7141/7141                                      \u2502\r\n11. \u2502           Partition                                                  \u2502\r\n12. \u2502             Condition: true                                          \u2502\r\n13. \u2502             Parts: 16/16                                             \u2502\r\n14. \u2502             Granules: 7141/7141                                      \u2502\r\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n14 rows in set. Elapsed: 0.017 sec. \r\n```\nThe distance measure (e.g. cosineDistance, L2Distance) specified during index creation must be the same as the one used during querying. Is that the case in the second example?\n> The distance measure (e.g. cosineDistance, L2Distance) specified during index creation must be the same as the one used during querying. Is that the case in the second example?\r\n\r\nYes, `cosineDistance` used in both index creation and querying.\nCreate table and insert data:\r\n```sql\r\nCREATE TABLE ch_wxg_weolap.tab_f16\r\n(\r\n    `id` Int32,\r\n    `vec` Array(Float32),\r\n    INDEX idx vec TYPE vector_similarity('hnsw', 'cosineDistance', 'f16', 0, 0, 0) GRANULARITY 2\r\n)\r\nENGINE = MergeTree\r\nORDER BY id\r\nSETTINGS index_granularity = 3\r\n```\r\n\r\nWorks:\r\n```sql\r\nEXPLAIN indexes = 1\r\nWITH [0., 2.] AS reference_vec\r\nSELECT\r\n    id,\r\n    vec,\r\n    cosineDistance(vec, reference_vec) AS distance\r\nFROM tab_f16\r\nORDER BY distance ASC\r\nLIMIT 3\r\nSETTINGS allow_experimental_analyzer = 0\r\n\r\nQuery id: e768bf2b-b5f5-4d6c-9df7-2403cd393cae\r\n\r\n    \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n 1. \u2502 Expression (Projection)                                  \u2502\r\n 2. \u2502   Limit (preliminary LIMIT (without OFFSET))             \u2502\r\n 3. \u2502     Sorting (Sorting for ORDER BY)                       \u2502\r\n 4. \u2502       Expression (Before ORDER BY)                       \u2502\r\n 5. \u2502         ReadFromMergeTree (ch_wxg_weolap.tab_f16)        \u2502\r\n 6. \u2502         Indexes:                                         \u2502\r\n 7. \u2502           PrimaryKey                                     \u2502\r\n 8. \u2502             Condition: true                              \u2502\r\n 9. \u2502             Parts: 1/1                                   \u2502\r\n10. \u2502             Granules: 4/4                                \u2502\r\n11. \u2502           Skip                                           \u2502\r\n12. \u2502             Name: idx                                    \u2502\r\n13. \u2502             Description: vector_similarity GRANULARITY 2 \u2502\r\n14. \u2502             Parts: 1/1                                   \u2502\r\n15. \u2502             Granules: 2/4                                \u2502\r\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n15 rows in set. Elapsed: 0.002 sec.\r\n```\r\n\r\nDoes not work:\r\n```sql\r\nEXPLAIN indexes = 1\r\nWITH (\r\n        SELECT vec\r\n        FROM tab_f16\r\n        LIMIT 1\r\n    ) AS reference_vec\r\nSELECT\r\n    id,\r\n    vec,\r\n    cosineDistance(vec, reference_vec) AS distance\r\nFROM tab_f16\r\nORDER BY distance ASC\r\nLIMIT 3\r\nSETTINGS allow_experimental_analyzer = 0\r\n\r\nQuery id: 2413bded-86bd-4ed4-ac71-6432b8cb93d5\r\n\r\n    \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n 1. \u2502 Expression (Projection)                           \u2502\r\n 2. \u2502   Limit (preliminary LIMIT (without OFFSET))      \u2502\r\n 3. \u2502     Sorting (Sorting for ORDER BY)                \u2502\r\n 4. \u2502       Expression (Before ORDER BY)                \u2502\r\n 5. \u2502         ReadFromMergeTree (ch_wxg_weolap.tab_f16) \u2502\r\n 6. \u2502         Indexes:                                  \u2502\r\n 7. \u2502           PrimaryKey                              \u2502\r\n 8. \u2502             Condition: true                       \u2502\r\n 9. \u2502             Parts: 1/1                            \u2502\r\n10. \u2502             Granules: 4/4                         \u2502\r\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n10 rows in set. Elapsed: 0.002 sec.\r\n```\r\n\r\nStill does not work:\r\n```sql\r\nEXPLAIN indexes = 1\r\nWITH (\r\n        SELECT [0., 2.]\r\n    ) AS reference_vec\r\nSELECT\r\n    id,\r\n    vec,\r\n    cosineDistance(vec, reference_vec) AS distance\r\nFROM tab_f16\r\nORDER BY distance ASC\r\nLIMIT 3\r\nSETTINGS allow_experimental_analyzer = 0\r\n\r\nQuery id: 912801a9-c898-473f-ac5e-0ef5bc9d11b2\r\n\r\n    \u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n 1. \u2502 Expression (Projection)                           \u2502\r\n 2. \u2502   Limit (preliminary LIMIT (without OFFSET))      \u2502\r\n 3. \u2502     Sorting (Sorting for ORDER BY)                \u2502\r\n 4. \u2502       Expression (Before ORDER BY)                \u2502\r\n 5. \u2502         ReadFromMergeTree (ch_wxg_weolap.tab_f16) \u2502\r\n 6. \u2502         Indexes:                                  \u2502\r\n 7. \u2502           PrimaryKey                              \u2502\r\n 8. \u2502             Condition: true                       \u2502\r\n 9. \u2502             Parts: 1/1                            \u2502\r\n10. \u2502             Granules: 4/4                         \u2502\r\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n10 rows in set. Elapsed: 0.002 sec. \r\n```\r\n\r\n@rschu1ze ",
  "created_at": "2024-09-04T10:24:19Z",
  "modified_files": [
    "docs/en/engines/table-engines/mergetree-family/annindexes.md"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02354_vector_search_bugs.reference",
    "tests/queries/0_stateless/02354_vector_search_bugs.sql"
  ]
}