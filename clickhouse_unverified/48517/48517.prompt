You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
segmentation fault in Memory engine with compression
see https://fiddle.clickhouse.com/865783e7-90a1-4bee-afa2-244ccd363ae4

```sql
CREATE TABLE users (uid Int16, name String, age Int16) ENGINE=Memory SETTINGS compress=1;

INSERT INTO users VALUES (1231, 'John', 33);
INSERT INTO users VALUES (6666, 'Ksenia', 48);
INSERT INTO users VALUES (8888, 'Alice', 50);

SELECT * FROM users;


Received exception from server (version 23.3.1):
Code: 49. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::ColumnCompressed to DB::ColumnVector<short>. (LOGICAL_ERROR)
(query: SELECT * FROM users;)

```


also segment fault (custom build):
```sql
CREATE TABLE default.hits_memory AS datasets.hits_v1 Engine=Memory SETTINGS compress=1;
INSERT INTO default.hits_memory SELECT * FROM datasets.hits_v1 LIMIT 100000; -- dataset hits_v1 is populate before hand

SELECT * FROM default.hits_memory LIMIT 10

SELECT *
FROM default.hits_memory
LIMIT 10

Query id: b8db6b14-78bd-44aa-8a60-915900959c70

2023.04.07 01:24:42.947757 [ 341 ] <Fatal> BaseDaemon: ########################################
2023.04.07 01:24:42.947960 [ 341 ] <Fatal> BaseDaemon: (version 23.2.4.7, build id: 8EC24C8B6DF9DDD4DFEBCF86CA67A3E429748E2B) (from thread 337) (query_id: b8db6b14-78bd-44aa-8a60-915900959c70) (query: SELECT * FROM default.hits_memory LIMIT 10) Received signal Segmentation fault (11)
2023.04.07 01:24:42.948067 [ 341 ] <Fatal> BaseDaemon: Address: 0x44b85 Access: write. Address not mapped to object.
2023.04.07 01:24:42.948175 [ 341 ] <Fatal> BaseDaemon: Stack trace: 0x124dcbaf 0x124d6441 0x1351d725 0x139bb161 0x142f3ad5 0x142f3646 0x1430cf6c 0x1430217b 0x143012d9 0x14301020 0x14310c9f 0xdcd3b4a 0xdcd9201 0x7f4aa859b609 0x7f4aa84c0133
2023.04.07 01:24:42.948295 [ 341 ] <Fatal> BaseDaemon: 2. DB::SerializationArray::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::__1::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x124dcbaf in /usr/bin/clickhouse
2023.04.07 01:24:42.948406 [ 341 ] <Fatal> BaseDaemon: 3. DB::ISerialization::enumerateStreams(std::__1::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::__1::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x124d6441 in /usr/bin/clickhouse
2023.04.07 01:24:42.948474 [ 341 ] <Fatal> BaseDaemon: 4. DB::fillMissingColumns(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&, unsigned long, DB::NamesAndTypesList const&, DB::NamesAndTypesList const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>) @ 0x1351d725 in /usr/bin/clickhouse
2023.04.07 01:24:42.948568 [ 341 ] <Fatal> BaseDaemon: 5. ? @ 0x139bb161 in /usr/bin/clickhouse
2023.04.07 01:24:42.948615 [ 341 ] <Fatal> BaseDaemon: 6. DB::ISource::tryGenerate() @ 0x142f3ad5 in /usr/bin/clickhouse
2023.04.07 01:24:42.948651 [ 341 ] <Fatal> BaseDaemon: 7. DB::ISource::work() @ 0x142f3646 in /usr/bin/clickhouse
2023.04.07 01:24:42.948689 [ 341 ] <Fatal> BaseDaemon: 8. DB::ExecutionThreadContext::executeTask() @ 0x1430cf6c in /usr/bin/clickhouse
2023.04.07 01:24:42.948741 [ 341 ] <Fatal> BaseDaemon: 9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x1430217b in /usr/bin/clickhouse
2023.04.07 01:24:42.948809 [ 341 ] <Fatal> BaseDaemon: 10. DB::PipelineExecutor::executeImpl(unsigned long) @ 0x143012d9 in /usr/bin/clickhouse
2023.04.07 01:24:42.948870 [ 341 ] <Fatal> BaseDaemon: 11. DB::PipelineExecutor::execute(unsigned long) @ 0x14301020 in /usr/bin/clickhouse
2023.04.07 01:24:42.948908 [ 341 ] <Fatal> BaseDaemon: 12. ? @ 0x14310c9f in /usr/bin/clickhouse
2023.04.07 01:24:42.948952 [ 341 ] <Fatal> BaseDaemon: 13. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xdcd3b4a in /usr/bin/clickhouse
2023.04.07 01:24:42.948990 [ 341 ] <Fatal> BaseDaemon: 14. ? @ 0xdcd9201 in /usr/bin/clickhouse
2023.04.07 01:24:42.949022 [ 341 ] <Fatal> BaseDaemon: 15. ? @ 0x7f4aa859b609 in ?
2023.04.07 01:24:42.949050 [ 341 ] <Fatal> BaseDaemon: 16. __clone @ 0x7f4aa84c0133 in ?
2023.04.07 01:24:42.949088 [ 341 ] <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read.

-- server host name stripped from log
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
