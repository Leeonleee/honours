diff --git a/tests/queries/0_stateless/01162_strange_mutations.sh b/tests/queries/0_stateless/01162_strange_mutations.sh
index eea9ea5f7e5d..f6b31847c1e3 100755
--- a/tests/queries/0_stateless/01162_strange_mutations.sh
+++ b/tests/queries/0_stateless/01162_strange_mutations.sh
@@ -28,7 +28,7 @@ do
     $CLICKHOUSE_CLIENT -q "CREATE TABLE test ENGINE=$engine AS SELECT number + 100 AS n, 0 AS test FROM numbers(50)" 2>&1| grep -Ev "Removing leftovers from table|removed by another replica"
     $CLICKHOUSE_CLIENT -q "select count(), sum(n), sum(test) from test"
     if [[ $engine == *"ReplicatedMergeTree"* ]]; then
-        $CLICKHOUSE_CLIENT -q "ALTER TABLE test
+        $CLICKHOUSE_CLIENT --enable_positional_arguments=0 -q "ALTER TABLE test
             UPDATE test = (SELECT groupArray(id) FROM t1 GROUP BY 'dummy')[n - 99] WHERE 1" 2>&1| grep -Fa "DB::Exception: " | grep -Fv "statement with subquery may be nondeterministic"
         $CLICKHOUSE_CLIENT --allow_nondeterministic_mutations=1 --mutations_sync=1 -q "ALTER TABLE test
                     UPDATE test = (SELECT groupArray(id) FROM t1)[n - 99] WHERE 1"
diff --git a/tests/queries/0_stateless/01798_having_push_down.sql b/tests/queries/0_stateless/01798_having_push_down.sql
index b3a77c8f5b57..c0c3447f5ab0 100644
--- a/tests/queries/0_stateless/01798_having_push_down.sql
+++ b/tests/queries/0_stateless/01798_having_push_down.sql
@@ -8,11 +8,12 @@ SELECT sum(c0 = 0), min(c0 + 1), sum(c0 + 2) FROM t_having
 GROUP BY c0 HAVING c0 = 0
 SETTINGS enable_optimize_predicate_expression=0;
 
+SET enable_positional_arguments=0;
+
 SELECT c0 + -1, sum(intDivOrZero(intDivOrZero(NULL, NULL), '2'), intDivOrZero(10000000000., intDivOrZero(intDivOrZero(intDivOrZero(NULL, NULL), 10), NULL))) FROM t_having GROUP BY c0 = 2, c0 = 10, intDivOrZero(intDivOrZero(intDivOrZero(NULL, NULL), NULL), NULL), c0 HAVING c0 = 2 SETTINGS enable_optimize_predicate_expression = 0;
 
 SELECT sum(c0 + 257) FROM t_having GROUP BY c0 = -9223372036854775808, NULL, -2147483649, c0 HAVING c0 = -9223372036854775808 SETTINGS enable_optimize_predicate_expression = 0;
 
-SET enable_positional_arguments=0;
 SELECT c0 + -2, c0 + -9223372036854775807, c0 = NULL FROM t_having GROUP BY c0 = 0.9998999834060669, 1023, c0 HAVING c0 = 0.9998999834060669 SETTINGS enable_optimize_predicate_expression = 0;
 
 DROP TABLE t_having;
diff --git a/tests/queries/0_stateless/02006_test_positional_arguments.reference b/tests/queries/0_stateless/02006_test_positional_arguments.reference
index 40100e8d5be2..079bd0711038 100644
--- a/tests/queries/0_stateless/02006_test_positional_arguments.reference
+++ b/tests/queries/0_stateless/02006_test_positional_arguments.reference
@@ -3,18 +3,50 @@ select x3, x2, x1 from test order by 1;
 1	100	100
 10	1	10
 100	10	1
+select x3, x2, x1 from test order by -3;
+1	100	100
+10	1	10
+100	10	1
 select x3, x2, x1 from test order by x3;
 1	100	100
 10	1	10
 100	10	1
+select x3, x2, x1 from test order by 3;
+100	10	1
+10	1	10
+1	100	100
+select x3, x2, x1 from test order by -1;
+100	10	1
+10	1	10
+1	100	100
+select x3, x2, x1 from test order by x1;
+100	10	1
+10	1	10
+1	100	100
 select x3, x2, x1 from test order by 1 desc;
 100	10	1
 10	1	10
 1	100	100
+select x3, x2, x1 from test order by -3 desc;
+100	10	1
+10	1	10
+1	100	100
 select x3, x2, x1 from test order by x3 desc;
 100	10	1
 10	1	10
 1	100	100
+select x3, x2, x1 from test order by 3 desc;
+1	100	100
+10	1	10
+100	10	1
+select x3, x2, x1 from test order by -1 desc;
+1	100	100
+10	1	10
+100	10	1
+select x3, x2, x1 from test order by x1 desc;
+1	100	100
+10	1	10
+100	10	1
 insert into test values (1, 10, 100), (10, 1, 10), (100, 100, 1);
 select x3, x2 from test group by x3, x2 order by x3;
 1	100
@@ -54,6 +86,20 @@ SELECT
     x1
 FROM test
 ORDER BY x3 + 1 ASC
+explain syntax select x3, x2, x1 from test order by -1;
+SELECT
+    x3,
+    x2,
+    x1
+FROM test
+ORDER BY x1 ASC
+explain syntax select x3 + 1, x2, x1 from test order by -1;
+SELECT
+    x3 + 1,
+    x2,
+    x1
+FROM test
+ORDER BY x1 ASC
 explain syntax select x3, x3 - x2, x2, x1 from test order by 2;
 SELECT
     x3,
@@ -62,6 +108,14 @@ SELECT
     x1
 FROM test
 ORDER BY x3 - x2 ASC
+explain syntax select x3, x3 - x2, x2, x1 from test order by -2;
+SELECT
+    x3,
+    x3 - x2,
+    x2,
+    x1
+FROM test
+ORDER BY x2 ASC
 explain syntax select x3, if(x3 > 10, x3, plus(x1, x2)), x1 + x2 from test order by 2;
 SELECT
     x3,
@@ -69,12 +123,28 @@ SELECT
     x1 + x2
 FROM test
 ORDER BY if(x3 > 10, x3, x1 + x2) ASC
+explain syntax select x3, if(x3 > 10, x3, plus(x1, x2)), x1 + x2 from test order by -2;
+SELECT
+    x3,
+    if(x3 > 10, x3, x1 + x2),
+    x1 + x2
+FROM test
+ORDER BY if(x3 > 10, x3, x1 + x2) ASC
 explain syntax select max(x1), x2 from test group by 2 order by 1, 2;
 SELECT
     max(x1),
     x2
 FROM test
 GROUP BY x2
+ORDER BY
+    max(x1) ASC,
+    x2 ASC
+explain syntax select max(x1), x2 from test group by -1 order by -2, -1;
+SELECT
+    max(x1),
+    x2
+FROM test
+GROUP BY x2
 ORDER BY
     max(x1) ASC,
     x2 ASC
@@ -83,16 +153,34 @@ SELECT
     1 + greatest(x1, 1),
     x2
 FROM test
+GROUP BY
+    1 + greatest(x1, 1),
+    x2
+explain syntax select 1 + greatest(x1, 1), x2 from test group by -2, -1;
+SELECT
+    1 + greatest(x1, 1),
+    x2
+FROM test
 GROUP BY
     1 + greatest(x1, 1),
     x2
 select max(x1), x2 from test group by 1, 2; -- { serverError 43, 184 }
 select 1 + max(x1), x2 from test group by 1, 2; -- { serverError 43, 184 }
+select max(x1), x2 from test group by -2, -1; -- { serverError 43, 184 }
+select 1 + max(x1), x2 from test group by -2, -1; -- { serverError 43, 184 }
 explain syntax select x1 + x3, x3 from test group by 1, 2;
 SELECT
     x1 + x3,
     x3
 FROM test
+GROUP BY
+    x1 + x3,
+    x3
+explain syntax select x1 + x3, x3 from test group by -2, -1;
+SELECT
+    x1 + x3,
+    x3
+FROM test
 GROUP BY
     x1 + x3,
     x3
@@ -102,8 +190,14 @@ select x1, x1 * 2, max(x2), max(x3) from test2 group by 2, 1, x1 order by 1, 2,
 1	2	10	100
 10	20	1	10
 100	200	100	1
+select x1, x1 * 2, max(x2), max(x3) from test2 group by 2, 1, x1 order by 1, 2, -1 desc, -2 asc;
+1	2	10	100
+10	20	1	10
+100	200	100	1
 select a, b, c, d, e, f  from (select 44 a, 88 b, 13 c, 14 d, 15 e, 16 f) t group by 1,2,3,4,5,6 order by a;
 44	88	13	14	15	16
+select a, b, c, d, e, f  from (select 44 a, 88 b, 13 c, 14 d, 15 e, 16 f) t group by 1,2,3,-3,-2,-1 order by a;
+44	88	13	14	15	16
 explain syntax select plus(1, 1) as a group by a;
 SELECT 1 + 1 AS a
 GROUP BY a
diff --git a/tests/queries/0_stateless/02006_test_positional_arguments.sql b/tests/queries/0_stateless/02006_test_positional_arguments.sql
index 159ad6bd4272..6f427e0298d9 100644
--- a/tests/queries/0_stateless/02006_test_positional_arguments.sql
+++ b/tests/queries/0_stateless/02006_test_positional_arguments.sql
@@ -9,11 +9,21 @@ insert into test values (1, 10, 100), (10, 1, 10), (100, 100, 1);
 
 -- { echo }
 select x3, x2, x1 from test order by 1;
+select x3, x2, x1 from test order by -3;
 select x3, x2, x1 from test order by x3;
 
+select x3, x2, x1 from test order by 3;
+select x3, x2, x1 from test order by -1;
+select x3, x2, x1 from test order by x1;
+
 select x3, x2, x1 from test order by 1 desc;
+select x3, x2, x1 from test order by -3 desc;
 select x3, x2, x1 from test order by x3 desc;
 
+select x3, x2, x1 from test order by 3 desc;
+select x3, x2, x1 from test order by -1 desc;
+select x3, x2, x1 from test order by x1 desc;
+
 insert into test values (1, 10, 100), (10, 1, 10), (100, 100, 1);
 select x3, x2 from test group by x3, x2 order by x3;
 select x3, x2 from test group by 1, 2 order by x3;
@@ -25,21 +35,32 @@ select x1, x2, x3 from test order by 3 limit 1 by 1;
 
 explain syntax select x3, x2, x1 from test order by 1;
 explain syntax select x3 + 1, x2, x1 from test order by 1;
+explain syntax select x3, x2, x1 from test order by -1;
+explain syntax select x3 + 1, x2, x1 from test order by -1;
 explain syntax select x3, x3 - x2, x2, x1 from test order by 2;
+explain syntax select x3, x3 - x2, x2, x1 from test order by -2;
 explain syntax select x3, if(x3 > 10, x3, plus(x1, x2)), x1 + x2 from test order by 2;
+explain syntax select x3, if(x3 > 10, x3, plus(x1, x2)), x1 + x2 from test order by -2;
 explain syntax select max(x1), x2 from test group by 2 order by 1, 2;
+explain syntax select max(x1), x2 from test group by -1 order by -2, -1;
 explain syntax select 1 + greatest(x1, 1), x2 from test group by 1, 2;
+explain syntax select 1 + greatest(x1, 1), x2 from test group by -2, -1;
 
 select max(x1), x2 from test group by 1, 2; -- { serverError 43, 184 }
 select 1 + max(x1), x2 from test group by 1, 2; -- { serverError 43, 184 }
+select max(x1), x2 from test group by -2, -1; -- { serverError 43, 184 }
+select 1 + max(x1), x2 from test group by -2, -1; -- { serverError 43, 184 }
 
 explain syntax select x1 + x3, x3 from test group by 1, 2;
+explain syntax select x1 + x3, x3 from test group by -2, -1;
 
 create table test2(x1 Int, x2 Int, x3 Int) engine=Memory;
 insert into test2 values (1, 10, 100), (10, 1, 10), (100, 100, 1);
 select x1, x1 * 2, max(x2), max(x3) from test2 group by 2, 1, x1 order by 1, 2, 4 desc, 3 asc;
+select x1, x1 * 2, max(x2), max(x3) from test2 group by 2, 1, x1 order by 1, 2, -1 desc, -2 asc;
 
 select a, b, c, d, e, f  from (select 44 a, 88 b, 13 c, 14 d, 15 e, 16 f) t group by 1,2,3,4,5,6 order by a;
+select a, b, c, d, e, f  from (select 44 a, 88 b, 13 c, 14 d, 15 e, 16 f) t group by 1,2,3,-3,-2,-1 order by a;
 
 explain syntax select plus(1, 1) as a group by a;
 select substr('aaaaaaaaaaaaaa', 8) as a  group by a order by a;
diff --git a/tests/queries/0_stateless/02932_group_by_null_fuzzer.sql b/tests/queries/0_stateless/02932_group_by_null_fuzzer.sql
index 0c28c120d400..603c7783ef87 100644
--- a/tests/queries/0_stateless/02932_group_by_null_fuzzer.sql
+++ b/tests/queries/0_stateless/02932_group_by_null_fuzzer.sql
@@ -1,5 +1,6 @@
 -- https://github.com/ClickHouse/ClickHouse/issues/43202
 -- Queries are generated by the fuzzer, so don't expect them to make sense
+SET enable_positional_arguments=0;
 SELECT NULL, '' FROM (SELECT toNullable(''), NULL AS key GROUP BY GROUPING SETS ((NULL))) AS s1 ALL LEFT JOIN (SELECT '' AS key, NULL AS value GROUP BY GROUPING SETS (('')) WITH TOTALS UNION ALL SELECT NULL AS key, toNullable(NULL) AS value GROUP BY '', NULL, '' WITH TOTALS) AS s2 USING (key);
 SELECT NULL GROUP BY NULL WITH TOTALS;
 SELECT 1048575, NULL, b FROM (SELECT '25.5' AS a, NULL, NULL AS b GROUP BY GROUPING SETS ((0.0001)) WITH TOTALS) AS js1 ANY RIGHT JOIN (SELECT NULL AS a, NULL AS b WHERE NULL GROUP BY NULL, -9223372036854775807 WITH CUBE WITH TOTALS UNION ALL SELECT NULL AS a, NULL AS b GROUP BY 1, '21474836.46' WITH TOTALS) AS js2 USING (a, b) ORDER BY nan DESC NULLS LAST, '9223372036854775807' DESC NULLS LAST, a ASC NULLS LAST;
