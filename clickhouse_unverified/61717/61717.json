{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 61717,
  "instance_id": "ClickHouse__ClickHouse-61717",
  "issue_numbers": [
    "61697"
  ],
  "base_commit": "0e4d5faa8883d1938df04361c54b3caad90eb525",
  "patch": "diff --git a/src/Planner/PlannerExpressionAnalysis.cpp b/src/Planner/PlannerExpressionAnalysis.cpp\nindex c664317b250c..dd3769ee10b4 100644\n--- a/src/Planner/PlannerExpressionAnalysis.cpp\n+++ b/src/Planner/PlannerExpressionAnalysis.cpp\n@@ -1,5 +1,7 @@\n #include <Planner/PlannerExpressionAnalysis.h>\n \n+#include <Columns/ColumnNullable.h>\n+\n #include <DataTypes/DataTypesNumber.h>\n #include <DataTypes/DataTypeNullable.h>\n \n@@ -111,7 +113,8 @@ std::optional<AggregationAnalysisResult> analyzeAggregation(const QueryTreeNodeP\n                             continue;\n \n                         auto expression_type_after_aggregation = group_by_use_nulls ? makeNullableSafe(expression_dag_node->result_type) : expression_dag_node->result_type;\n-                        available_columns_after_aggregation.emplace_back(expression_dag_node->column, expression_type_after_aggregation, expression_dag_node->result_name);\n+                        auto column_after_aggregation = group_by_use_nulls && expression_dag_node->column != nullptr ? makeNullableSafe(expression_dag_node->column) : expression_dag_node->column;\n+                        available_columns_after_aggregation.emplace_back(std::move(column_after_aggregation), expression_type_after_aggregation, expression_dag_node->result_name);\n                         aggregation_keys.push_back(expression_dag_node->result_name);\n                         before_aggregation_actions->getOutputs().push_back(expression_dag_node);\n                         before_aggregation_actions_output_node_names.insert(expression_dag_node->result_name);\n@@ -161,7 +164,8 @@ std::optional<AggregationAnalysisResult> analyzeAggregation(const QueryTreeNodeP\n                         continue;\n \n                     auto expression_type_after_aggregation = group_by_use_nulls ? makeNullableSafe(expression_dag_node->result_type) : expression_dag_node->result_type;\n-                    available_columns_after_aggregation.emplace_back(expression_dag_node->column, expression_type_after_aggregation, expression_dag_node->result_name);\n+                    auto column_after_aggregation = group_by_use_nulls && expression_dag_node->column != nullptr ? makeNullableSafe(expression_dag_node->column) : expression_dag_node->column;\n+                    available_columns_after_aggregation.emplace_back(std::move(column_after_aggregation), expression_type_after_aggregation, expression_dag_node->result_name);\n                     aggregation_keys.push_back(expression_dag_node->result_name);\n                     before_aggregation_actions->getOutputs().push_back(expression_dag_node);\n                     before_aggregation_actions_output_node_names.insert(expression_dag_node->result_name);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03014_analyzer_group_by_use_nulls.reference b/tests/queries/0_stateless/03014_analyzer_group_by_use_nulls.reference\nnew file mode 100644\nindex 000000000000..b50fdcee2090\n--- /dev/null\n+++ b/tests/queries/0_stateless/03014_analyzer_group_by_use_nulls.reference\n@@ -0,0 +1,2 @@\n+a\tb\n+a\tb\ndiff --git a/tests/queries/0_stateless/03014_analyzer_group_by_use_nulls.sql b/tests/queries/0_stateless/03014_analyzer_group_by_use_nulls.sql\nnew file mode 100644\nindex 000000000000..a1c302465dee\n--- /dev/null\n+++ b/tests/queries/0_stateless/03014_analyzer_group_by_use_nulls.sql\n@@ -0,0 +1,1 @@\n+SELECT 'a' AS key, 'b' as value GROUP BY key WITH CUBE SETTINGS group_by_use_nulls = 1;\n",
  "problem_statement": "(Analyzer: this feature is not ready, hold tight) `WITH CUBE` crashes with `group_by_use_nulls`\nExample:\r\n```sql\r\nSELECT 'a' AS key, 'b' as value GROUP BY key WITH CUBE SETTINGS group_by_use_nulls = 1, allow_experimental_analyzer = 1;\r\n```\r\n\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/0/293f2fda4e67fc50a60ac644aaa78aade288f49f/stress_test__asan_.html\r\n\r\nReverting this PR helps https://github.com/ClickHouse/ClickHouse/pull/59986\r\n\r\nThe problem seems the type for CUBE which remains nonnullable even though the header is nullable.\r\n\r\ncc @novikd @azat \n",
  "hints_text": "I suspect the fix would be quite simple. I think we need to convert the column to nullable if needed.\nAnother repro\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/61545/34e3eb223e7eb830ed44469700ad35f0b794f978/stress_test__tsan_.html\r\nUPD. I'm not sure about `group_by_use_nulls`",
  "created_at": "2024-03-21T15:04:42Z",
  "modified_files": [
    "src/Planner/PlannerExpressionAnalysis.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03014_analyzer_group_by_use_nulls.reference",
    "b/tests/queries/0_stateless/03014_analyzer_group_by_use_nulls.sql"
  ]
}