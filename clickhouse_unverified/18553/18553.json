{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 18553,
  "instance_id": "ClickHouse__ClickHouse-18553",
  "issue_numbers": [
    "6556"
  ],
  "base_commit": "1e8b180e505a39d9c047764145a5f4bf3440ce79",
  "patch": "diff --git a/src/Core/ExternalResultDescription.cpp b/src/Core/ExternalResultDescription.cpp\nindex 7165d73b7d0f..4be80a352c76 100644\n--- a/src/Core/ExternalResultDescription.cpp\n+++ b/src/Core/ExternalResultDescription.cpp\n@@ -4,6 +4,7 @@\n #include <DataTypes/DataTypeDateTime64.h>\n #include <DataTypes/DataTypeNullable.h>\n #include <DataTypes/DataTypeString.h>\n+#include <DataTypes/DataTypeFixedString.h>\n #include <DataTypes/DataTypeUUID.h>\n #include <DataTypes/DataTypesDecimal.h>\n #include <DataTypes/DataTypesNumber.h>\n@@ -76,6 +77,8 @@ void ExternalResultDescription::init(const Block & sample_block_)\n             types.emplace_back(ValueType::vtDecimal128, is_nullable);\n         else if (typeid_cast<const DataTypeDecimal<Decimal256> *>(type))\n             types.emplace_back(ValueType::vtDecimal256, is_nullable);\n+        else if (typeid_cast<const DataTypeFixedString *>(type))\n+            types.emplace_back(ValueType::vtFixedString, is_nullable);\n         else\n             throw Exception{\"Unsupported type \" + type->getName(), ErrorCodes::UNKNOWN_TYPE};\n     }\ndiff --git a/src/Core/ExternalResultDescription.h b/src/Core/ExternalResultDescription.h\nindex f8ba2a6bba26..cc3b26ad8419 100644\n--- a/src/Core/ExternalResultDescription.h\n+++ b/src/Core/ExternalResultDescription.h\n@@ -30,7 +30,8 @@ struct ExternalResultDescription\n         vtDecimal32,\n         vtDecimal64,\n         vtDecimal128,\n-        vtDecimal256\n+        vtDecimal256,\n+        vtFixedString\n     };\n \n     Block sample_block;\ndiff --git a/src/Formats/MySQLBlockInputStream.cpp b/src/Formats/MySQLBlockInputStream.cpp\nindex 2ff8e8e5fb23..026f688a67fe 100644\n--- a/src/Formats/MySQLBlockInputStream.cpp\n+++ b/src/Formats/MySQLBlockInputStream.cpp\n@@ -8,6 +8,7 @@\n #    include <Columns/ColumnString.h>\n #    include <Columns/ColumnsNumber.h>\n #    include <Columns/ColumnDecimal.h>\n+#    include <Columns/ColumnFixedString.h>\n #    include <DataTypes/IDataType.h>\n #    include <DataTypes/DataTypeNullable.h>\n #    include <IO/ReadHelpers.h>\n@@ -110,6 +111,9 @@ namespace\n                 data_type.deserializeAsWholeText(column, buffer, FormatSettings{});\n                 break;\n             }\n+            case ValueType::vtFixedString:\n+                assert_cast<ColumnFixedString &>(column).insertData(value.data(), value.size());\n+                break;\n         }\n     }\n \n",
  "test_patch": "diff --git a/tests/integration/test_materialize_mysql_database/materialize_with_ddl.py b/tests/integration/test_materialize_mysql_database/materialize_with_ddl.py\nindex 47e325d0e96a..c04194c8ebb8 100644\n--- a/tests/integration/test_materialize_mysql_database/materialize_with_ddl.py\n+++ b/tests/integration/test_materialize_mysql_database/materialize_with_ddl.py\n@@ -48,16 +48,15 @@ def dml_with_materialize_mysql_database(clickhouse_node, mysql_node, service_nam\n                      \"/* Need ClickHouse support read mysql decimal unsigned_decimal DECIMAL(19, 10) UNSIGNED, _decimal DECIMAL(19, 10), */\"\n                      \"unsigned_float FLOAT UNSIGNED, _float FLOAT, \"\n                      \"unsigned_double DOUBLE UNSIGNED, _double DOUBLE, \"\n-                     \"_varchar VARCHAR(10), _char CHAR(10), \"\n+                     \"_varchar VARCHAR(10), _char CHAR(10), binary_col BINARY(8), \"\n                      \"/* Need ClickHouse support Enum('a', 'b', 'v') _enum ENUM('a', 'b', 'c'), */\"\n                      \"_date Date, _datetime DateTime, _timestamp TIMESTAMP, _bool BOOLEAN) ENGINE = InnoDB;\")\n \n     # it already has some data\n     mysql_node.query(\"\"\"\n-        INSERT INTO test_database.test_table_1 VALUES(1, 1, -1, 2, -2, 3, -3, 4, -4, 5, -5, 6, -6, 3.2, -3.2, 3.4, -3.4, 'varchar', 'char', \n+        INSERT INTO test_database.test_table_1 VALUES(1, 1, -1, 2, -2, 3, -3, 4, -4, 5, -5, 6, -6, 3.2, -3.2, 3.4, -3.4, 'varchar', 'char', 'binary',\n         '2020-01-01', '2020-01-01 00:00:00', '2020-01-01 00:00:00', true);\n         \"\"\")\n-\n     clickhouse_node.query(\n         \"CREATE DATABASE test_database ENGINE = MaterializeMySQL('{}:3306', 'test_database', 'root', 'clickhouse')\".format(\n             service_name))\n@@ -65,51 +64,51 @@ def dml_with_materialize_mysql_database(clickhouse_node, mysql_node, service_nam\n     assert \"test_database\" in clickhouse_node.query(\"SHOW DATABASES\")\n \n     check_query(clickhouse_node, \"SELECT * FROM test_database.test_table_1 ORDER BY key FORMAT TSV\",\n-                \"1\\t1\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\t2020-01-01\\t\"\n+                \"1\\t1\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\tbinary\\\\0\\\\0\\t2020-01-01\\t\"\n                 \"2020-01-01 00:00:00\\t2020-01-01 00:00:00\\t1\\n\")\n \n     mysql_node.query(\"\"\"\n-        INSERT INTO test_database.test_table_1 VALUES(2, 1, -1, 2, -2, 3, -3, 4, -4, 5, -5, 6, -6, 3.2, -3.2, 3.4, -3.4, 'varchar', 'char', \n+        INSERT INTO test_database.test_table_1 VALUES(2, 1, -1, 2, -2, 3, -3, 4, -4, 5, -5, 6, -6, 3.2, -3.2, 3.4, -3.4, 'varchar', 'char', 'binary',\n         '2020-01-01', '2020-01-01 00:00:00', '2020-01-01 00:00:00', false);\n         \"\"\")\n \n     check_query(clickhouse_node, \"SELECT * FROM test_database.test_table_1 ORDER BY key FORMAT TSV\",\n-                \"1\\t1\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\t2020-01-01\\t\"\n+                \"1\\t1\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\tbinary\\\\0\\\\0\\t2020-01-01\\t\"\n                 \"2020-01-01 00:00:00\\t2020-01-01 00:00:00\\t1\\n2\\t1\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\t\"\n-                \"varchar\\tchar\\t2020-01-01\\t2020-01-01 00:00:00\\t2020-01-01 00:00:00\\t0\\n\")\n+                \"varchar\\tchar\\tbinary\\\\0\\\\0\\t2020-01-01\\t2020-01-01 00:00:00\\t2020-01-01 00:00:00\\t0\\n\")\n \n     mysql_node.query(\"UPDATE test_database.test_table_1 SET unsigned_tiny_int = 2 WHERE `key` = 1\")\n \n     check_query(clickhouse_node, \"\"\"\n         SELECT key, unsigned_tiny_int, tiny_int, unsigned_small_int,\n          small_int, unsigned_medium_int, medium_int, unsigned_int, _int, unsigned_integer, _integer, \n-         unsigned_bigint, _bigint, unsigned_float, _float, unsigned_double, _double, _varchar, _char, \n+         unsigned_bigint, _bigint, unsigned_float, _float, unsigned_double, _double, _varchar, _char, binary_col,\n          _date, _datetime, /* exclude it, because ON UPDATE CURRENT_TIMESTAMP _timestamp, */ \n          _bool FROM test_database.test_table_1 ORDER BY key FORMAT TSV\n         \"\"\",\n-        \"1\\t2\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\t2020-01-01\\t\"\n+        \"1\\t2\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\tbinary\\\\0\\\\0\\t2020-01-01\\t\"\n         \"2020-01-01 00:00:00\\t1\\n2\\t1\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\t\"\n-        \"varchar\\tchar\\t2020-01-01\\t2020-01-01 00:00:00\\t0\\n\")\n+        \"varchar\\tchar\\tbinary\\\\0\\\\0\\t2020-01-01\\t2020-01-01 00:00:00\\t0\\n\")\n \n     # update primary key\n     mysql_node.query(\"UPDATE test_database.test_table_1 SET `key` = 3 WHERE `unsigned_tiny_int` = 2\")\n \n     check_query(clickhouse_node, \"SELECT key, unsigned_tiny_int, tiny_int, unsigned_small_int,\"\n                                  \" small_int, unsigned_medium_int, medium_int, unsigned_int, _int, unsigned_integer, _integer, \"\n-                                 \" unsigned_bigint, _bigint, unsigned_float, _float, unsigned_double, _double, _varchar, _char, \"\n+                                 \" unsigned_bigint, _bigint, unsigned_float, _float, unsigned_double, _double, _varchar, _char, binary_col, \"\n                                  \" _date, _datetime, /* exclude it, because ON UPDATE CURRENT_TIMESTAMP _timestamp, */ \"\n                                  \" _bool FROM test_database.test_table_1 ORDER BY key FORMAT TSV\",\n                 \"2\\t1\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\t\"\n-                \"varchar\\tchar\\t2020-01-01\\t2020-01-01 00:00:00\\t0\\n3\\t2\\t-1\\t2\\t-2\\t3\\t-3\\t\"\n-                \"4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\t2020-01-01\\t2020-01-01 00:00:00\\t1\\n\")\n+                \"varchar\\tchar\\tbinary\\\\0\\\\0\\t2020-01-01\\t2020-01-01 00:00:00\\t0\\n3\\t2\\t-1\\t2\\t-2\\t3\\t-3\\t\"\n+                \"4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\tbinary\\\\0\\\\0\\t2020-01-01\\t2020-01-01 00:00:00\\t1\\n\")\n \n     mysql_node.query('DELETE FROM test_database.test_table_1 WHERE `key` = 2')\n     check_query(clickhouse_node, \"SELECT key, unsigned_tiny_int, tiny_int, unsigned_small_int,\"\n                                  \" small_int, unsigned_medium_int, medium_int, unsigned_int, _int, unsigned_integer, _integer, \"\n-                                 \" unsigned_bigint, _bigint, unsigned_float, _float, unsigned_double, _double, _varchar, _char, \"\n+                                 \" unsigned_bigint, _bigint, unsigned_float, _float, unsigned_double, _double, _varchar, _char, binary_col, \"\n                                  \" _date, _datetime, /* exclude it, because ON UPDATE CURRENT_TIMESTAMP _timestamp, */ \"\n                                  \" _bool FROM test_database.test_table_1 ORDER BY key FORMAT TSV\",\n-                \"3\\t2\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\t2020-01-01\\t\"\n+                \"3\\t2\\t-1\\t2\\t-2\\t3\\t-3\\t4\\t-4\\t5\\t-5\\t6\\t-6\\t3.2\\t-3.2\\t3.4\\t-3.4\\tvarchar\\tchar\\tbinary\\\\0\\\\0\\t2020-01-01\\t\"\n                 \"2020-01-01 00:00:00\\t1\\n\")\n \n     mysql_node.query('DELETE FROM test_database.test_table_1 WHERE `unsigned_tiny_int` = 2')\ndiff --git a/tests/integration/test_storage_mysql/test.py b/tests/integration/test_storage_mysql/test.py\nindex 87033381e2cb..7b23e20e2004 100644\n--- a/tests/integration/test_storage_mysql/test.py\n+++ b/tests/integration/test_storage_mysql/test.py\n@@ -148,6 +148,13 @@ def test_table_function(started_cluster):\n     assert node1.query(\"SELECT sum(`money`) FROM {}\".format(table_function)).rstrip() == '60000'\n     conn.close()\n \n+def test_binary_type(started_cluster):\n+    conn = get_mysql_conn()\n+    with conn.cursor() as cursor:\n+        cursor.execute(\"CREATE TABLE clickhouse.binary_type (id INT PRIMARY KEY, data BINARY(16) NOT NULL)\")\n+    table_function = \"mysql('mysql1:3306', 'clickhouse', '{}', 'root', 'clickhouse')\".format('binary_type')\n+    node1.query(\"INSERT INTO {} VALUES (42, 'clickhouse')\".format('TABLE FUNCTION ' + table_function))\n+    assert node1.query(\"SELECT * FROM {}\".format(table_function)) == '42\\tclickhouse\\\\0\\\\0\\\\0\\\\0\\\\0\\\\0\\n'\n \n def test_enum_type(started_cluster):\n     table_name = 'test_enum_type'\n",
  "problem_statement": "Error reading BINARY(16) from mysql\nI have a table in MariaDB having a column where UUIDs are stored as BINARY(16).\r\n\r\nWhen trying to read this in Clickhouse (select transaction_id from mysql('host:3306'...) I get error \"Received exception from server (version 19.13.2):\r\nCode: 50. DB::Exception: Received from localhost:9000. DB::Exception: Unsupported type FixedString(16).\"\r\n\r\nHowever creating tables with FixedString(16) works fine. Reading all other columns from mysql works too.\r\n\r\nClickHouse client version 19.13.2.19, CentOS 7.\r\n\n",
  "hints_text": "still reproduced on Clickhouse 19.17.4 \nWorkaround: create table with Engine=MySQL where that field will be listed as String instead of FixedString. \n> Workaround: create table with Engine=MySQL where that field will be listed as String instead of FixedString.\r\n\r\nThis works for me.\r\n\r\nMySQL:\r\n\r\n```sql\r\ncreate table t (\r\n`uuid` binary(16),\r\n...\r\n)\r\n```\r\nClickhouse:\r\n\r\n```sql\r\ncreate table t (\r\n`uuid` String, \r\n...\r\n) ENGINE=MYSQL(...);\r\n```\r\n\r\n\r\n\r\n",
  "created_at": "2020-12-27T16:01:31Z",
  "modified_files": [
    "src/Core/ExternalResultDescription.cpp",
    "src/Core/ExternalResultDescription.h",
    "src/Formats/MySQLBlockInputStream.cpp"
  ],
  "modified_test_files": [
    "tests/integration/test_materialize_mysql_database/materialize_with_ddl.py",
    "tests/integration/test_storage_mysql/test.py"
  ]
}