You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Support named collections for jdbc table function
Named collections are implemented for MySQL, PostgreSQL, MongoDB, URL, S3 and Kafka connections, but not for generic JDBC. 
Support Named Collections for ODBC/JDBC Connections in ClickHouse
### Company or project name

_No response_

### Use case

Implement support for **named collections** for ODBC/JDBC connections in ClickHouse. This feature is currently missing for ODBC/JDBC, making it inconsistent with existing named collection support for MySQL, PostgreSQL, MongoDB, URL, S3, and Kafka.

### **Current Behavior**
I have a working dictionary using an MSSQL ODBC connection in XML format:
```xml
<dictionary>
    <name>test_dict</name>
    <layout>
        <complex_key_hashed/>
    </layout>
    <lifetime>
        <min>500</min>
        <max>600</max>
    </lifetime>
    <source>
        <odbc>
            <connection_string>DSN=MSSQL;Server=X;Database=Y;Uid=ch;Pwd=Z;</connection_string>
            <table>test_table</table>
        </odbc>
    </source>
    <structure>
        <key>
            <attribute>
                <name>table_id</name>
                <type>String</type>
            </attribute>
        </key>
    </structure>
</dictionary>
```

By following the existing named collection structure, I created:
```xml
<clickhouse>
    <named_collections>
        <nc_mssql>
            <connection_string>DSN=MSSQL;Server=X;Database=Y;Uid=ch;Pwd=Z;</connection_string>
            <table> test_table </table>
        </nc_mssql>
    </named_collections>
</clickhouse>
```

However, when trying to query from this named collection, the following errors occur:

#### **Attempt 1**
```sql
SELECT * FROM odbc(nc_mssql);
```
**Error:**
```
Code: 42. DB::Exception: Table function 'odbc' requires 2 or 3 arguments: odbc('DSN', table) or odbc('DSN', schema, table). (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)
```

#### **Attempt 2**
```sql
SELECT * FROM odbc('nc_mssql', test_table);
```
**Error:**
```
Code: 86. DB::Exception: Received from localhost:9000. DB::HTTPException. DB::HTTPException: Received error from remote server http://127.0.0.1:9018/columns_info?use_connection_pooling=1&version=1&connection_string=nc_mssql&table=test_table&external_table_functions_use_nulls=1. HTTP status code: 500 Internal Server Error, body: Error getting columns from ODBC 'Code: 404. DB::Exception: ODBC connection string parameter doesn't have value. (BAD_ODBC_CONNECTION_STRING) '
. (RECEIVED_ERROR_FROM_REMOTE_IO_SERVER)
```


### Describe the solution you'd like

### **Proposed Solution**
- Extend named collection support to ODBC/JDBC connections.
- Ensure the implementation is consistent with the approach used for MySQL, PostgreSQL, and other existing named collection implementations.

### **Benefit**
- Improves consistency across ClickHouse connection mechanisms.
- Simplifies configuration by allowing reuse of named collections for ODBC/JDBC connections.
- Reduces potential errors caused by manually handling connection strings.

### **References**
- Named collections are already implemented for MySQL, PostgreSQL, MongoDB, URL, S3, and Kafka.
- This feature would enhance ODBC/JDBC usability in ClickHouse environments.

**Would appreciate consideration for adding this feature!** 


### Describe alternatives you've considered

_No response_

### Additional context

_No response_
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
