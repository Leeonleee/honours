{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 36489,
  "instance_id": "ClickHouse__ClickHouse-36489",
  "issue_numbers": [
    "33906"
  ],
  "base_commit": "edc78247f0903d7ae840c7b4fea43a40ba8258ca",
  "patch": "diff --git a/src/Interpreters/convertFieldToType.cpp b/src/Interpreters/convertFieldToType.cpp\nindex 79f41d775261..dd23ad69ae2e 100644\n--- a/src/Interpreters/convertFieldToType.cpp\n+++ b/src/Interpreters/convertFieldToType.cpp\n@@ -193,6 +193,7 @@ Field convertFieldToTypeImpl(const Field & src, const IDataType & type, const ID\n         if (const auto * ptype = typeid_cast<const DataTypeDecimal<Decimal32> *>(&type)) return convertDecimalType(src, *ptype);\n         if (const auto * ptype = typeid_cast<const DataTypeDecimal<Decimal64> *>(&type)) return convertDecimalType(src, *ptype);\n         if (const auto * ptype = typeid_cast<const DataTypeDecimal<Decimal128> *>(&type)) return convertDecimalType(src, *ptype);\n+        if (const auto * ptype = typeid_cast<const DataTypeDecimal<Decimal256> *>(&type)) return convertDecimalType(src, *ptype);\n \n         if (which_type.isEnum() && (src.getType() == Field::Types::UInt64 || src.getType() == Field::Types::Int64))\n         {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02286_convert_decimal_type.reference b/tests/queries/0_stateless/02286_convert_decimal_type.reference\nnew file mode 100644\nindex 000000000000..94ebaf900161\n--- /dev/null\n+++ b/tests/queries/0_stateless/02286_convert_decimal_type.reference\n@@ -0,0 +1,4 @@\n+1\n+2\n+3\n+4\ndiff --git a/tests/queries/0_stateless/02286_convert_decimal_type.sql b/tests/queries/0_stateless/02286_convert_decimal_type.sql\nnew file mode 100644\nindex 000000000000..ffc4c1769396\n--- /dev/null\n+++ b/tests/queries/0_stateless/02286_convert_decimal_type.sql\n@@ -0,0 +1,4 @@\n+SELECT * FROM VALUES('x Decimal32(0)', (1));\n+SELECT * FROM VALUES('x Decimal64(0)', (2));\n+SELECT * FROM VALUES('x Decimal128(0)', (3));\n+SELECT * FROM VALUES('x Decimal256(0)', (4));\n",
  "problem_statement": "Integer from VALUES cannot be parsed as Decimal256\n`SELECT * FROM values('x Decimal256(0)', (1))`\r\n\r\n```\r\nCode: 53. DB::Exception: Type mismatch in IN or VALUES section. Expected: Decimal(76, 0). Got: UInt64. (TYPE_MISMATCH)\r\n```\n",
  "hints_text": "",
  "created_at": "2022-04-21T12:36:19Z"
}