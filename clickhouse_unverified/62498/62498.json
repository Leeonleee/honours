{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 62498,
  "instance_id": "ClickHouse__ClickHouse-62498",
  "issue_numbers": [
    "62463"
  ],
  "base_commit": "bd64bc01570c4e3880ea818526ed9ad3c428c33c",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeData.cpp b/src/Storages/MergeTree/MergeTreeData.cpp\nindex 5cc61d5362db..5a3e0e2b3a89 100644\n--- a/src/Storages/MergeTree/MergeTreeData.cpp\n+++ b/src/Storages/MergeTree/MergeTreeData.cpp\n@@ -860,6 +860,42 @@ void MergeTreeData::checkTTLExpressions(const StorageInMemoryMetadata & new_meta\n     }\n }\n \n+namespace\n+{\n+template <typename TMustHaveDataType>\n+void checkSpecialColumn(const std::string_view column_meta_name, const AlterCommand & command)\n+{\n+    if (command.type == AlterCommand::MODIFY_COLUMN)\n+    {\n+        if (!typeid_cast<const TMustHaveDataType *>(command.data_type.get()))\n+        {\n+            throw Exception(\n+                ErrorCodes::ALTER_OF_COLUMN_IS_FORBIDDEN,\n+                \"Cannot alter {} column ({}) to type {}, because it must have type {}\",\n+                column_meta_name,\n+                command.column_name,\n+                command.data_type->getName(),\n+                TypeName<TMustHaveDataType>);\n+        }\n+    }\n+    else if (command.type == AlterCommand::DROP_COLUMN)\n+    {\n+        throw Exception(\n+            ErrorCodes::ALTER_OF_COLUMN_IS_FORBIDDEN,\n+            \"Trying to ALTER DROP {} ({}) column\",\n+            column_meta_name,\n+            backQuoteIfNeed(command.column_name));\n+    }\n+    else if (command.type == AlterCommand::RENAME_COLUMN)\n+    {\n+        throw Exception(\n+            ErrorCodes::ALTER_OF_COLUMN_IS_FORBIDDEN,\n+            \"Trying to ALTER RENAME {} ({}) column\",\n+            column_meta_name,\n+            backQuoteIfNeed(command.column_name));\n+    }\n+};\n+}\n \n void MergeTreeData::checkStoragePolicy(const StoragePolicyPtr & new_storage_policy) const\n {\n@@ -985,6 +1021,11 @@ void MergeTreeData::MergingParams::check(const StorageInMemoryMetadata & metadat\n \n     if (mode == MergingParams::Summing)\n     {\n+        auto columns_to_sum_copy = columns_to_sum;\n+        std::sort(columns_to_sum_copy.begin(), columns_to_sum_copy.end());\n+        if (const auto it = std::adjacent_find(columns_to_sum_copy.begin(), columns_to_sum_copy.end()); it != columns_to_sum_copy.end())\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Column {} is listed multiple times in the list of columns to sum\", *it);\n+\n         /// If columns_to_sum are set, then check that such columns exist.\n         for (const auto & column_to_sum : columns_to_sum)\n         {\n@@ -993,9 +1034,10 @@ void MergeTreeData::MergingParams::check(const StorageInMemoryMetadata & metadat\n                 return column_to_sum == Nested::extractTableName(name_and_type.name);\n             };\n             if (columns.end() == std::find_if(columns.begin(), columns.end(), check_column_to_sum_exists))\n-                throw Exception(ErrorCodes::NO_SUCH_COLUMN_IN_TABLE,\n-                                \"Column {} listed in columns to sum does not exist in table declaration.\",\n-                                column_to_sum);\n+                throw Exception(\n+                    ErrorCodes::NO_SUCH_COLUMN_IN_TABLE,\n+                    \"Column {} listed in columns to sum does not exist in table declaration.\",\n+                    column_to_sum);\n         }\n \n         /// Check that summing columns are not in partition key.\n@@ -1016,12 +1058,18 @@ void MergeTreeData::MergingParams::check(const StorageInMemoryMetadata & metadat\n \n     if (mode == MergingParams::Replacing)\n     {\n+        if (!version_column.empty() && version_column == is_deleted_column)\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"The version and is_deleted column cannot be the same column ({})\", version_column);\n+\n         check_is_deleted_column(true, \"ReplacingMergeTree\");\n         check_version_column(true, \"ReplacingMergeTree\");\n     }\n \n     if (mode == MergingParams::VersionedCollapsing)\n     {\n+        if (!version_column.empty() && version_column == sign_column)\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"The version and sign column cannot be the same column ({})\", version_column);\n+\n         check_sign_column(false, \"VersionedCollapsingMergeTree\");\n         check_version_column(false, \"VersionedCollapsingMergeTree\");\n     }\n@@ -3070,6 +3118,14 @@ void MergeTreeData::checkAlterIsPossible(const AlterCommands & commands, Context\n                     \"Trying to ALTER RENAME version {} column\", backQuoteIfNeed(command.column_name));\n             }\n         }\n+        else if (command.column_name == merging_params.is_deleted_column)\n+        {\n+            checkSpecialColumn<DataTypeUInt8>(\"is_deleted\", command);\n+        }\n+        else if (command.column_name == merging_params.sign_column)\n+        {\n+            checkSpecialColumn<DataTypeUInt8>(\"sign\", command);\n+        }\n \n         if (command.type == AlterCommand::MODIFY_QUERY)\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED,\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03093_special_column_errors.reference b/tests/queries/0_stateless/03093_special_column_errors.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/03093_special_column_errors.sql b/tests/queries/0_stateless/03093_special_column_errors.sql\nnew file mode 100644\nindex 000000000000..1464927db7e0\n--- /dev/null\n+++ b/tests/queries/0_stateless/03093_special_column_errors.sql\n@@ -0,0 +1,27 @@\n+CREATE TABLE replacing_wrong (key Int64, ver Int64, is_deleted UInt16) ENGINE = ReplacingMergeTree(ver, is_deleted) ORDER BY key; -- { serverError BAD_TYPE_OF_FIELD }\n+CREATE TABLE replacing_wrong (key Int64, ver String, is_deleted UInt8) ENGINE = ReplacingMergeTree(ver, is_deleted) ORDER BY key; -- { serverError BAD_TYPE_OF_FIELD }\n+CREATE TABLE replacing_wrong (key Int64, ver Int64, is_deleted UInt8) ENGINE = ReplacingMergeTree(is_deleted, is_deleted) ORDER BY key; -- { serverError BAD_ARGUMENTS }\n+\n+CREATE TABLE replacing (key Int64, ver Int64, is_deleted UInt8) ENGINE = ReplacingMergeTree(ver, is_deleted) ORDER BY key;\n+ALTER TABLE replacing MODIFY COLUMN ver String; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE replacing MODIFY COLUMN ver Int128;\n+ALTER TABLE replacing MODIFY COLUMN is_deleted String; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE replacing MODIFY COLUMN is_deleted UInt16; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE replacing MODIFY COLUMN is_deleted Int8; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE replacing DROP COLUMN ver; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE replacing DROP COLUMN is_deleted; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE replacing RENAME COLUMN ver TO ver2; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE replacing RENAME COLUMN is_deleted TO is_deleted2; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+\n+CREATE TABLE collapsing_wrong (key Int64, sign Int16) ENGINE = CollapsingMergeTree(sign) ORDER BY key; -- { serverError BAD_TYPE_OF_FIELD }\n+CREATE TABLE collapsing_wrong (key Int64, sign UInt8) ENGINE = CollapsingMergeTree(sign) ORDER BY key; -- { serverError BAD_TYPE_OF_FIELD }\n+CREATE TABLE collapsing_wrong (key Int64, sign UInt8) ENGINE = CollapsingMergeTree(not_existing) ORDER BY key; -- { serverError NO_SUCH_COLUMN_IN_TABLE }\n+\n+CREATE TABLE collapsing (key Int64, sign Int8) ENGINE = CollapsingMergeTree(sign) ORDER BY key;\n+ALTER TABLE collapsing MODIFY COLUMN sign String; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE collapsing DROP COLUMN sign; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+ALTER TABLE collapsing RENAME COLUMN sign TO sign2; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }\n+\n+CREATE TABLE versioned_collapsing_wrong (key Int64, version UInt8, sign Int8) ENGINE = VersionedCollapsingMergeTree(sign, sign) ORDER BY key; -- { serverError BAD_ARGUMENTS }\n+\n+CREATE TABLE versioned_collapsing (key Int64, version UInt8, sign Int8) ENGINE = VersionedCollapsingMergeTree(sign, version) ORDER BY key;\n",
  "problem_statement": "Prevent alter of `is_deleted` column of ReplacingMergeTree\n**Describe what's wrong**\r\n\r\nWhen renaming a column that is specified in the `columns` parameter of `SummingMergreTree`, or in the `is_delete` parameter of `ReplacingMergeTree` I don't get any error.\r\n\r\n**Does it reproduce on the most recent release?**\r\n\r\nYes, even on master.\r\n\r\n**Enable crash reporting**\r\n\r\n**How to reproduce**\r\n\r\n```\r\nCREATE TABLE test\r\n(\r\n    `date` UInt32,\r\n    `x` Int64,\r\n    `y` Int64\r\n)\r\nENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/test', 'r1', (x, y))\r\nPRIMARY KEY date\r\nORDER BY date\r\n\r\nQuery id: 386a8517-55d3-40fd-b3df-5a85c3cce74a\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.026 sec. \r\n\r\nip-10-2-3-206.eu-west-1.compute.internal :) ALTER TABLE test RENAME COLUMN x to asd\r\n\r\nALTER TABLE test\r\n    RENAME COLUMN x TO asd\r\n\r\nQuery id: 38e6fdc2-c953-4f48-b382-4378bb35db19\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.009 sec. \r\n\r\nip-10-2-3-206.eu-west-1.compute.internal :) SHOW CREATE TABLE test\r\n\r\nSHOW CREATE TABLE test\r\n\r\nQuery id: ca72dc3c-9ece-4eb0-b6c0-42d5cc04a21e\r\n\r\n\u250c\u2500statement\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 CREATE TABLE default.test\r\n(\r\n    `date` UInt32,\r\n    `asd` Int64,\r\n    `y` Int64\r\n)\r\nENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/test', 'r1', (x, y))\r\nPRIMARY KEY date\r\nORDER BY date\r\nSETTINGS index_granularity = 8192 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.001 sec. \r\n\r\nip-10-2-3-206.eu-west-1.compute.internal :)\r\n```\r\n\r\nThe same for `ReplacingMergeTree` and `is_deleted.\r\n\r\n**Expected behavior**\r\n\r\nGet a same error as for `version` column in ReplacingMergeTree:\r\n\r\n```\r\nip-10-2-3-206.eu-west-1.compute.internal :) ALTER TABLE myThirdReplacingMT RENAME COLUMN eventTime TO asd2\r\n\r\nALTER TABLE myThirdReplacingMT\r\n    RENAME COLUMN eventTime TO asd2\r\n\r\nQuery id: 0dcad26d-6273-4f0a-b676-5f397c2f494e\r\n\r\n\r\nElapsed: 0.001 sec. \r\n\r\nReceived exception from server (version 24.2.1):\r\nCode: 524. DB::Exception: Received from localhost:9000. DB::Exception: Trying to ALTER RENAME version eventTime column. (ALTER_OF_COLUMN_IS_FORBIDDEN)\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2024-04-10T15:42:13Z"
}