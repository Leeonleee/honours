diff --git a/tests/integration/test_distributed_insert_backward_compatibility/__init__.py b/tests/integration/test_distributed_insert_backward_compatibility/__init__.py
new file mode 100644
index 000000000000..8b137891791f
--- /dev/null
+++ b/tests/integration/test_distributed_insert_backward_compatibility/__init__.py
@@ -0,0 +1,1 @@
+
diff --git a/tests/integration/test_distributed_insert_backward_compatibility/configs/remote_servers.xml b/tests/integration/test_distributed_insert_backward_compatibility/configs/remote_servers.xml
new file mode 100644
index 000000000000..9c7f02c190fb
--- /dev/null
+++ b/tests/integration/test_distributed_insert_backward_compatibility/configs/remote_servers.xml
@@ -0,0 +1,12 @@
+<clickhouse>
+    <remote_servers>
+        <test_cluster>
+            <shard>
+                <replica>
+                    <host>node1</host>
+                    <port>9000</port>
+                </replica>
+            </shard>
+        </test_cluster>
+    </remote_servers>
+</clickhouse>
diff --git a/tests/integration/test_distributed_insert_backward_compatibility/test.py b/tests/integration/test_distributed_insert_backward_compatibility/test.py
new file mode 100644
index 000000000000..ba7d8e0a25d9
--- /dev/null
+++ b/tests/integration/test_distributed_insert_backward_compatibility/test.py
@@ -0,0 +1,39 @@
+import pytest
+
+from helpers.cluster import ClickHouseCluster
+from helpers.client import QueryRuntimeException
+
+cluster = ClickHouseCluster(__file__)
+
+node_shard = cluster.add_instance('node1', main_configs=['configs/remote_servers.xml'])
+
+node_dist = cluster.add_instance('node2', main_configs=['configs/remote_servers.xml'], image='yandex/clickhouse-server',
+                                tag='21.11.9.1', stay_alive=True, with_installed_binary=True)
+
+@pytest.fixture(scope="module")
+def started_cluster():
+    try:
+        cluster.start()
+
+        node_shard.query("CREATE TABLE local_table(id UInt32, val String) ENGINE = MergeTree ORDER BY id")
+        node_dist.query("CREATE TABLE local_table(id UInt32, val String) ENGINE = MergeTree ORDER BY id")
+        node_dist.query("CREATE TABLE dist_table(id UInt32, val String) ENGINE = Distributed(test_cluster, default, local_table, rand())")
+
+        yield cluster
+
+    finally:
+        cluster.shutdown()
+
+
+def test_distributed_in_tuple(started_cluster):
+    node_dist.query("SYSTEM STOP DISTRIBUTED SENDS dist_table")
+
+    node_dist.query("INSERT INTO dist_table VALUES (1, 'foo')")
+    assert node_dist.query("SELECT count() FROM dist_table") == "0
"
+    assert node_shard.query("SELECT count() FROM local_table") == "0
"
+
+    node_dist.restart_with_latest_version(signal=9)
+    node_dist.query("SYSTEM FLUSH DISTRIBUTED dist_table")
+
+    assert node_dist.query("SELECT count() FROM dist_table") == "1
"
+    assert node_shard.query("SELECT count() FROM local_table") == "1
"
