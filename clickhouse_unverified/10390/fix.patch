diff --git a/src/DataTypes/NestedUtils.cpp b/src/DataTypes/NestedUtils.cpp
index e988490a487a..5f8b9f877bf9 100644
--- a/src/DataTypes/NestedUtils.cpp
+++ b/src/DataTypes/NestedUtils.cpp
@@ -86,7 +86,8 @@ Block flatten(const Block & block)
     {
         if (const DataTypeArray * type_arr = typeid_cast<const DataTypeArray *>(elem.type.get()))
         {
-            if (const DataTypeTuple * type_tuple = typeid_cast<const DataTypeTuple *>(type_arr->getNestedType().get()))
+            const DataTypeTuple * type_tuple = typeid_cast<const DataTypeTuple *>(type_arr->getNestedType().get());
+            if (type_tuple && type_tuple->haveExplicitNames())
             {
                 const DataTypes & element_types = type_tuple->getElements();
                 const Strings & names = type_tuple->getElementNames();
diff --git a/src/DataTypes/NestedUtils.h b/src/DataTypes/NestedUtils.h
index 098d98699e44..3039fd7f118a 100644
--- a/src/DataTypes/NestedUtils.h
+++ b/src/DataTypes/NestedUtils.h
@@ -17,6 +17,7 @@ namespace Nested
     std::string extractTableName(const std::string & nested_name);
 
     /// Replace Array(Tuple(...)) columns to a multiple of Array columns in a form of `column_name.element_name`.
+    /// only for named tuples that actually represent Nested structures.
     Block flatten(const Block & block);
 
     /// Collect Array columns in a form of `column_name.element_name` to single Array(Tuple(...)) column.
diff --git a/src/Storages/ColumnsDescription.h b/src/Storages/ColumnsDescription.h
index 72399a701283..4fbb041d1242 100644
--- a/src/Storages/ColumnsDescription.h
+++ b/src/Storages/ColumnsDescription.h
@@ -61,6 +61,7 @@ class ColumnsDescription
     /// TODO add ability to rename nested columns
     void rename(const String & column_from, const String & column_to);
 
+    /// NOTE Must correspond with Nested::flatten function.
     void flattenNested(); /// TODO: remove, insert already flattened Nested columns.
 
     bool operator==(const ColumnsDescription & other) const { return columns == other.columns; }
