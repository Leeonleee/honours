You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Not found column in block, optimize_skip_unused_shards = 1, analyzer
```
SELECT * FROM remote('127.0.0.{1,2}', numbers(40), number) ORDER BY 'a' LIMIT 1 BY number SETTINGS optimize_skip_unused_shards = 1

SELECT *
FROM remote('127.0.0.{1,2}', numbers(40), number)
ORDER BY 'a' ASC
LIMIT 1 BY number
SETTINGS optimize_skip_unused_shards = 1

Query id: e06483c3-f07c-425f-b6bb-a7db6663cb63


Elapsed: 0.016 sec. 

Received exception from server (version 24.5.1):
Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column 'a'_String in block. There are only columns: __table1.number. (NOT_FOUND_COLUMN_IN_BLOCK)

```

```
<Error> TCPHandler: Code: 10. DB::Exception: Not found column 'a'_String in block. There are only columns: __table1.number. (NOT_FOUND_COLUMN_IN_BLOCK), Stack trace (when copying this message, always include the lines below):

0. ./contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x000000001191fc92
1. ./build/./src/Common/Exception.cpp:101: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000a6e86f9
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000005c2cdec
3. DB::Exception::Exception<String const&, String>(int, FormatStringHelperImpl<std::type_identity<String const&>::type, std::type_identity<String>::type>, String const&, String&&) @ 0x000000000643364b
4. ./build/./src/Core/Block.cpp:0: DB::Block::getByName(String const&, bool) const @ 0x000000000e48804c
5. ./build/./src/Processors/Merges/Algorithms/MergingSortedAlgorithm.cpp:36: DB::MergingSortedAlgorithm::MergingSortedAlgorithm(DB::Block, unsigned long, DB::SortDescription const&, unsigned long, unsigned long, DB::SortingQueueStrategy, unsigned long, DB::WriteBuffer*, bool) @ 0x0000000010b47e54
6. ./src/Processors/Merges/IMergingTransform.h:92: DB::IMergingTransform<DB::MergingSortedAlgorithm>::IMergingTransform<DB::Block const&, unsigned long&, DB::SortDescription const&, unsigned long&, unsigned long&, DB::SortingQueueStrategy&, unsigned long&, DB::WriteBuffer*&, bool&>(unsigned long, DB::Block const&, DB::Block const&, bool, unsigned long, bool, DB::Block const&, unsigned long&, DB::SortDescription const&, unsigned long&, unsigned long&, DB::SortingQueueStrategy&, unsigned long&, DB::WriteBuffer*&, bool&) @ 0x0000000010b31977
7. ./build/./src/Processors/Merges/MergingSortedTransform.cpp:24: DB::MergingSortedTransform::MergingSortedTransform(DB::Block const&, unsigned long, DB::SortDescription const&, unsigned long, unsigned long, DB::SortingQueueStrategy, unsigned long, bool, DB::WriteBuffer*, bool, bool, bool) @ 0x0000000010b30c72
8. ./contrib/llvm-project/libcxx/include/__memory/construct_at.h:35: DB::SortingStep::mergingSorted(DB::QueryPipelineBuilder&, DB::SortDescription const&, unsigned long) @ 0x0000000010c816de
9. ./build/./src/Processors/QueryPlan/ITransformingStep.cpp:0: DB::ITransformingStep::updatePipeline(std::vector<std::unique_ptr<DB::QueryPipelineBuilder, std::default_delete<DB::QueryPipelineBuilder>>, std::allocator<std::unique_ptr<DB::QueryPipelineBuilder, std::default_delete<DB::QueryPipelineBuilder>>>>, DB::BuildQueryPipelineSettings const&) @ 0x0000000010bebe0b
10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x0000000010c04046
11. ./build/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:223: DB::InterpreterSelectQueryAnalyzer::buildQueryPipeline() @ 0x000000000f433d6b
12. ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:436: DB::InterpreterSelectQueryAnalyzer::execute() @ 0x000000000f433b1e
13. ./build/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x000000000f7d99ab
14. ./build/./src/Interpreters/executeQuery.cpp:1392: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x000000000f7d5ff5
15. ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x00000000107ad404
16. ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x00000000107c4a39
17. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x000000001190e227
18. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x000000001190e6fa
19. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x00000000119751a7
20. ./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000011972cc3
21. ? @ 0x00007fda7a65b609
22. ? @ 0x00007fda7a576353


```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
