diff --git a/src/Storages/MergeTree/RPNBuilder.cpp b/src/Storages/MergeTree/RPNBuilder.cpp
index 3ffef1de718f..dc8c6b0c2300 100644
--- a/src/Storages/MergeTree/RPNBuilder.cpp
+++ b/src/Storages/MergeTree/RPNBuilder.cpp
@@ -14,7 +14,9 @@
 #include <Columns/ColumnConst.h>
 #include <Columns/ColumnSet.h>
 
+#include <Functions/indexHint.h>
 #include <Functions/IFunction.h>
+#include <Functions/IFunctionAdaptors.h>
 
 #include <Storages/KeyDescription.h>
 
@@ -390,6 +392,15 @@ size_t RPNBuilderFunctionTreeNode::getArgumentsSize() const
     }
     else
     {
+        // indexHint arguments are stored inside of `FunctionIndexHint` class,
+        // because they are used only for index analysis.
+        if (dag_node->function_base->getName() == "indexHint")
+        {
+            const auto * adaptor = typeid_cast<const FunctionToFunctionBaseAdaptor *>(dag_node->function_base.get());
+            const auto * index_hint = typeid_cast<const FunctionIndexHint *>(adaptor->getFunction().get());
+            return index_hint->getActions()->getOutputs().size();
+        }
+
         return dag_node->children.size();
     }
 }
@@ -409,6 +420,15 @@ RPNBuilderTreeNode RPNBuilderFunctionTreeNode::getArgumentAt(size_t index) const
     }
     else
     {
+        // indexHint arguments are stored inside of `FunctionIndexHint` class,
+        // because they are used only for index analysis.
+        if (dag_node->function_base->getName() == "indexHint")
+        {
+            const auto * adaptor = typeid_cast<const FunctionToFunctionBaseAdaptor *>(dag_node->function_base.get());
+            const auto * index_hint = typeid_cast<const FunctionIndexHint *>(adaptor->getFunction().get());
+            return RPNBuilderTreeNode(index_hint->getActions()->getOutputs()[index], tree_context);
+        }
+
         return RPNBuilderTreeNode(dag_node->children[index], tree_context);
     }
 }
