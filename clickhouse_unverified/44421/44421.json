{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 44421,
  "instance_id": "ClickHouse__ClickHouse-44421",
  "issue_numbers": [
    "41115"
  ],
  "base_commit": "34029d47f34977e4cd0deed46c67ec2ed6b3759e",
  "patch": "diff --git a/docs/en/sql-reference/functions/date-time-functions.md b/docs/en/sql-reference/functions/date-time-functions.md\nindex 6156a823d583..6cecc3f01dac 100644\n--- a/docs/en/sql-reference/functions/date-time-functions.md\n+++ b/docs/en/sql-reference/functions/date-time-functions.md\n@@ -410,35 +410,35 @@ Converts a date with time to a certain fixed date, while preserving the time.\n \n ## toRelativeYearNum\n \n-Converts a date with time or date to the number of the year, starting from a certain fixed point in the past.\n+Converts a date or date with time to the number of the year, starting from a certain fixed point in the past.\n \n ## toRelativeQuarterNum\n \n-Converts a date with time or date to the number of the quarter, starting from a certain fixed point in the past.\n+Converts a date or date with time to the number of the quarter, starting from a certain fixed point in the past.\n \n ## toRelativeMonthNum\n \n-Converts a date with time or date to the number of the month, starting from a certain fixed point in the past.\n+Converts a date or date with time to the number of the month, starting from a certain fixed point in the past.\n \n ## toRelativeWeekNum\n \n-Converts a date with time or date to the number of the week, starting from a certain fixed point in the past.\n+Converts a date or date with time to the number of the week, starting from a certain fixed point in the past.\n \n ## toRelativeDayNum\n \n-Converts a date with time or date to the number of the day, starting from a certain fixed point in the past.\n+Converts a date or date with time to the number of the day, starting from a certain fixed point in the past.\n \n ## toRelativeHourNum\n \n-Converts a date with time or date to the number of the hour, starting from a certain fixed point in the past.\n+Converts a date or date with time to the number of the hour, starting from a certain fixed point in the past.\n \n ## toRelativeMinuteNum\n \n-Converts a date with time or date to the number of the minute, starting from a certain fixed point in the past.\n+Converts a date or date with time to the number of the minute, starting from a certain fixed point in the past.\n \n ## toRelativeSecondNum\n \n-Converts a date with time or date to the number of the second, starting from a certain fixed point in the past.\n+Converts a date or date with time to the number of the second, starting from a certain fixed point in the past.\n \n ## toISOYear\n \n@@ -517,6 +517,154 @@ SELECT toDate('2016-12-27') AS date, toYearWeek(date) AS yearWeek0, toYearWeek(d\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n ```\n \n+## age\n+\n+Returns the `unit` component of the difference between `startdate` and `enddate`. The difference is calculated using a precision of 1 second.\n+E.g. the difference between `2021-12-29` and `2022-01-01` is 3 days for `day` unit, 0 months for `month` unit, 0 years for `year` unit.\n+\n+\n+**Syntax**\n+\n+``` sql\n+age('unit', startdate, enddate, [timezone])\n+```\n+\n+**Arguments**\n+\n+-   `unit` \u2014 The type of interval for result. [String](../../sql-reference/data-types/string.md).\n+    Possible values:\n+\n+    - `second` (possible abbreviations: `ss`, `s`)\n+    - `minute` (possible abbreviations: `mi`, `n`)\n+    - `hour` (possible abbreviations: `hh`, `h`)\n+    - `day` (possible abbreviations: `dd`, `d`)\n+    - `week` (possible abbreviations: `wk`, `ww`)\n+    - `month` (possible abbreviations: `mm`, `m`)\n+    - `quarter` (possible abbreviations: `qq`, `q`)\n+    - `year` (possible abbreviations: `yyyy`, `yy`)\n+\n+-   `startdate` \u2014 The first time value to subtract (the subtrahend). [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) or [DateTime64](../../sql-reference/data-types/datetime64.md).\n+\n+-   `enddate` \u2014 The second time value to subtract from (the minuend). [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) or [DateTime64](../../sql-reference/data-types/datetime64.md).\n+\n+-   `timezone` \u2014 [Timezone name](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone) (optional). If specified, it is applied to both `startdate` and `enddate`. If not specified, timezones of `startdate` and `enddate` are used. If they are not the same, the result is unspecified. [String](../../sql-reference/data-types/string.md).\n+\n+**Returned value**\n+\n+Difference between `enddate` and `startdate` expressed in `unit`.\n+\n+Type: [Int](../../sql-reference/data-types/int-uint.md).\n+\n+**Example**\n+\n+Query:\n+\n+``` sql\n+SELECT age('hour', toDateTime('2018-01-01 22:30:00'), toDateTime('2018-01-02 23:00:00'));\n+```\n+\n+Result:\n+\n+``` text\n+\u250c\u2500age('hour', toDateTime('2018-01-01 22:30:00'), toDateTime('2018-01-02 23:00:00'))\u2500\u2510\n+\u2502                                                                                24 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+```\n+\n+Query:\n+\n+``` sql\n+SELECT\n+    toDate('2022-01-01') AS e,\n+    toDate('2021-12-29') AS s,\n+    age('day', s, e) AS day_age,\n+    age('month', s, e) AS month__age,\n+    age('year', s, e) AS year_age;\n+```\n+\n+Result:\n+\n+``` text\n+\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500e\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500s\u2500\u252c\u2500day_age\u2500\u252c\u2500month__age\u2500\u252c\u2500year_age\u2500\u2510\n+\u2502 2022-01-01 \u2502 2021-12-29 \u2502       3 \u2502          0 \u2502        0 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+```\n+\n+\n+## date\\_diff\n+\n+Returns the count of the specified `unit` boundaries crossed between the `startdate` and `enddate`.\n+The difference is calculated using relative units, e.g. the difference between `2021-12-29` and `2022-01-01` is 3 days for day unit (see [toRelativeDayNum](#torelativedaynum)), 1 month for month unit (see [toRelativeMonthNum](#torelativemonthnum)), 1 year for year unit (see [toRelativeYearNum](#torelativeyearnum)).\n+\n+**Syntax**\n+\n+``` sql\n+date_diff('unit', startdate, enddate, [timezone])\n+```\n+\n+Aliases: `dateDiff`, `DATE_DIFF`.\n+\n+**Arguments**\n+\n+-   `unit` \u2014 The type of interval for result. [String](../../sql-reference/data-types/string.md).\n+    Possible values:\n+\n+    - `second` (possible abbreviations: `ss`, `s`)\n+    - `minute` (possible abbreviations: `mi`, `n`)\n+    - `hour` (possible abbreviations: `hh`, `h`)\n+    - `day` (possible abbreviations: `dd`, `d`)\n+    - `week` (possible abbreviations: `wk`, `ww`)\n+    - `month` (possible abbreviations: `mm`, `m`)\n+    - `quarter` (possible abbreviations: `qq`, `q`)\n+    - `year` (possible abbreviations: `yyyy`, `yy`)\n+\n+-   `startdate` \u2014 The first time value to subtract (the subtrahend). [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) or [DateTime64](../../sql-reference/data-types/datetime64.md).\n+\n+-   `enddate` \u2014 The second time value to subtract from (the minuend). [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) or [DateTime64](../../sql-reference/data-types/datetime64.md).\n+\n+-   `timezone` \u2014 [Timezone name](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone) (optional). If specified, it is applied to both `startdate` and `enddate`. If not specified, timezones of `startdate` and `enddate` are used. If they are not the same, the result is unspecified. [String](../../sql-reference/data-types/string.md).\n+\n+**Returned value**\n+\n+Difference between `enddate` and `startdate` expressed in `unit`.\n+\n+Type: [Int](../../sql-reference/data-types/int-uint.md).\n+\n+**Example**\n+\n+Query:\n+\n+``` sql\n+SELECT dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'));\n+```\n+\n+Result:\n+\n+``` text\n+\u250c\u2500dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'))\u2500\u2510\n+\u2502                                                                                     25 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+```\n+\n+Query:\n+\n+``` sql\n+SELECT\n+    toDate('2022-01-01') AS e,\n+    toDate('2021-12-29') AS s,\n+    dateDiff('day', s, e) AS day_diff,\n+    dateDiff('month', s, e) AS month__diff,\n+    dateDiff('year', s, e) AS year_diff;\n+```\n+\n+Result:\n+\n+``` text\n+\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500e\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500s\u2500\u252c\u2500day_diff\u2500\u252c\u2500month__diff\u2500\u252c\u2500year_diff\u2500\u2510\n+\u2502 2022-01-01 \u2502 2021-12-29 \u2502        3 \u2502           1 \u2502         1 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+```\n+\n ## date\\_trunc\n \n Truncates date and time data to the specified part of date.\n@@ -637,80 +785,6 @@ Result:\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n ```\n \n-## date\\_diff\n-\n-Returns the difference between two dates or dates with time values.\n-The difference is calculated using relative units, e.g. the difference between `2022-01-01` and `2021-12-29` is 3 days for day unit (see [toRelativeDayNum](#torelativedaynum)), 1 month for month unit (see [toRelativeMonthNum](#torelativemonthnum)), 1 year for year unit (see [toRelativeYearNum](#torelativeyearnum)).\n-\n-**Syntax**\n-\n-``` sql\n-date_diff('unit', startdate, enddate, [timezone])\n-```\n-\n-Aliases: `dateDiff`, `DATE_DIFF`.\n-\n-**Arguments**\n-\n--   `unit` \u2014 The type of interval for result. [String](../../sql-reference/data-types/string.md).\n-    Possible values:\n-\n-    - `second`\n-    - `minute`\n-    - `hour`\n-    - `day`\n-    - `week`\n-    - `month`\n-    - `quarter`\n-    - `year`\n-\n--   `startdate` \u2014 The first time value to subtract (the subtrahend). [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) or [DateTime64](../../sql-reference/data-types/datetime64.md).\n-\n--   `enddate` \u2014 The second time value to subtract from (the minuend). [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) or [DateTime64](../../sql-reference/data-types/datetime64.md).\n-\n--   `timezone` \u2014 [Timezone name](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone) (optional). If specified, it is applied to both `startdate` and `enddate`. If not specified, timezones of `startdate` and `enddate` are used. If they are not the same, the result is unspecified. [String](../../sql-reference/data-types/string.md).\n-\n-**Returned value**\n-\n-Difference between `enddate` and `startdate` expressed in `unit`.\n-\n-Type: [Int](../../sql-reference/data-types/int-uint.md).\n-\n-**Example**\n-\n-Query:\n-\n-``` sql\n-SELECT dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'));\n-```\n-\n-Result:\n-\n-``` text\n-\u250c\u2500dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'))\u2500\u2510\n-\u2502                                                                                     25 \u2502\n-\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-```\n-\n-Query:\n-\n-``` sql\n-SELECT\n-    toDate('2022-01-01') AS e,\n-    toDate('2021-12-29') AS s,\n-    dateDiff('day', s, e) AS day_diff,\n-    dateDiff('month', s, e) AS month__diff,\n-    dateDiff('year', s, e) AS year_diff;\n-```\n-\n-Result:\n-\n-``` text\n-\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500e\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500s\u2500\u252c\u2500day_diff\u2500\u252c\u2500month__diff\u2500\u252c\u2500year_diff\u2500\u2510\n-\u2502 2022-01-01 \u2502 2021-12-29 \u2502        3 \u2502           1 \u2502         1 \u2502\n-\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-```\n-\n ## date\\_sub\n \n Subtracts the time interval or date interval from the provided date or date with time.\ndiff --git a/docs/ru/sql-reference/functions/date-time-functions.md b/docs/ru/sql-reference/functions/date-time-functions.md\nindex f430f5cae513..8fbcaf9568bf 100644\n--- a/docs/ru/sql-reference/functions/date-time-functions.md\n+++ b/docs/ru/sql-reference/functions/date-time-functions.md\n@@ -424,23 +424,23 @@ WITH toDateTime64('2020-01-01 10:20:30.999', 3) AS dt64 SELECT toStartOfSecond(d\n \n ## toRelativeYearNum {#torelativeyearnum}\n \n-\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438\u043b\u0438 \u0434\u0430\u0442\u0443 \u0432 \u043d\u043e\u043c\u0435\u0440 \u0433\u043e\u0434\u0430, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n+\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u0438\u043b\u0438 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432 \u043d\u043e\u043c\u0435\u0440 \u0433\u043e\u0434\u0430, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n \n ## toRelativeQuarterNum {#torelativequarternum}\n \n-\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438\u043b\u0438 \u0434\u0430\u0442\u0443 \u0432 \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n+\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u0438\u043b\u0438 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432 \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n \n ## toRelativeMonthNum {#torelativemonthnum}\n \n-\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438\u043b\u0438 \u0434\u0430\u0442\u0443 \u0432 \u043d\u043e\u043c\u0435\u0440 \u043c\u0435\u0441\u044f\u0446\u0430, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n+\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u0438\u043b\u0438 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432 \u043d\u043e\u043c\u0435\u0440 \u043c\u0435\u0441\u044f\u0446\u0430, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n \n ## toRelativeWeekNum {#torelativeweeknum}\n \n-\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438\u043b\u0438 \u0434\u0430\u0442\u0443 \u0432 \u043d\u043e\u043c\u0435\u0440 \u043d\u0435\u0434\u0435\u043b\u0438, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n+\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u0438\u043b\u0438 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432 \u043d\u043e\u043c\u0435\u0440 \u043d\u0435\u0434\u0435\u043b\u0438, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n \n ## toRelativeDayNum {#torelativedaynum}\n \n-\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438\u043b\u0438 \u0434\u0430\u0442\u0443 \u0432 \u043d\u043e\u043c\u0435\u0440 \u0434\u043d\u044f, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n+\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u0438\u043b\u0438 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432 \u043d\u043e\u043c\u0435\u0440 \u0434\u043d\u044f, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.\n \n ## toRelativeHourNum {#torelativehournum}\n \n@@ -456,7 +456,7 @@ WITH toDateTime64('2020-01-01 10:20:30.999', 3) AS dt64 SELECT toStartOfSecond(d\n \n ## toISOYear {#toisoyear}\n \n-\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438\u043b\u0438 \u0434\u0430\u0442\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e \u0442\u0438\u043f\u0430 UInt16, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u043d\u043e\u043c\u0435\u0440 ISO \u0433\u043e\u0434\u0430. ISO \u0433\u043e\u0434 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0433\u043e\u0434\u0430, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 [ISO 8601:1988](https://en.wikipedia.org/wiki/ISO_8601) ISO \u0433\u043e\u0434 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u044f\u043d\u0432\u0430\u0440\u044f.\n+\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u0438\u043b\u0438 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432 \u0447\u0438\u0441\u043b\u043e \u0442\u0438\u043f\u0430 UInt16, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u043d\u043e\u043c\u0435\u0440 ISO \u0433\u043e\u0434\u0430. ISO \u0433\u043e\u0434 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0433\u043e\u0434\u0430, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 [ISO 8601:1988](https://en.wikipedia.org/wiki/ISO_8601) ISO \u0433\u043e\u0434 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u044f\u043d\u0432\u0430\u0440\u044f.\n \n **\u041f\u0440\u0438\u043c\u0435\u0440**\n \n@@ -479,7 +479,7 @@ SELECT\n \n ## toISOWeek {#toisoweek}\n \n-\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438\u043b\u0438 \u0434\u0430\u0442\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e \u0442\u0438\u043f\u0430 UInt8, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u043d\u043e\u043c\u0435\u0440 ISO \u043d\u0435\u0434\u0435\u043b\u0438.\n+\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u0438\u043b\u0438 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432 \u0447\u0438\u0441\u043b\u043e \u0442\u0438\u043f\u0430 UInt8, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u043d\u043e\u043c\u0435\u0440 ISO \u043d\u0435\u0434\u0435\u043b\u0438.\n \u041d\u0430\u0447\u0430\u043b\u043e ISO \u0433\u043e\u0434\u0430 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0433\u043e\u0434\u0430, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 [ISO 8601:1988](https://en.wikipedia.org/wiki/ISO_8601) \u043f\u0435\u0440\u0432\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f \u0433\u043e\u0434\u0430 - \u044d\u0442\u043e \u043d\u0435\u0434\u0435\u043b\u044f \u0441 \u0447\u0435\u0442\u044b\u0440\u044c\u043c\u044f \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0434\u043d\u044f\u043c\u0438 \u0432 \u044d\u0442\u043e\u043c \u0433\u043e\u0434\u0443.\n \n 1 \u042f\u043d\u0432\u0430\u0440\u044f 2017 \u0433. - \u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u0438\u0435, \u0442.\u0435. \u043f\u0435\u0440\u0432\u0430\u044f ISO \u043d\u0435\u0434\u0435\u043b\u044f 2017 \u0433\u043e\u0434\u0430 \u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c \u0432 \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a 2 \u044f\u043d\u0432\u0430\u0440\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 1 \u044f\u043d\u0432\u0430\u0440\u044f 2017 \u044d\u0442\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u043d\u0435\u0434\u0435\u043b\u044f 2016 \u0433\u043e\u0434\u0430.\n@@ -503,7 +503,7 @@ SELECT\n ```\n \n ## toWeek(date\\[, mode\\]\\[, timezone\\]) {#toweek}\n-\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0438\u043b\u0438 \u0434\u0430\u0442\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e UInt8, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u043d\u043e\u043c\u0435\u0440 \u043d\u0435\u0434\u0435\u043b\u0438. \u0412\u0442\u043e\u0440\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c mode \u0437\u0430\u0434\u0430\u0435\u0442 \u0440\u0435\u0436\u0438\u043c, \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u043b\u0438 \u043d\u0435\u0434\u0435\u043b\u044f \u0441 \u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u044f \u0438\u043b\u0438 \u0441 \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\u0430 \u0438 \u0434\u043e\u043b\u0436\u043d\u043e \u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 0 \u0434\u043e 53 \u0438\u043b\u0438 \u043e\u0442 1 \u0434\u043e 53. \u0415\u0441\u043b\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 mode \u043e\u043f\u0443\u0449\u0435\u043d, \u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0440\u0435\u0436\u0438\u043c 0.\n+\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442 \u0434\u0430\u0442\u0443 \u0438\u043b\u0438 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432 \u0447\u0438\u0441\u043b\u043e UInt8, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u043d\u043e\u043c\u0435\u0440 \u043d\u0435\u0434\u0435\u043b\u0438. \u0412\u0442\u043e\u0440\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c mode \u0437\u0430\u0434\u0430\u0435\u0442 \u0440\u0435\u0436\u0438\u043c, \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u043b\u0438 \u043d\u0435\u0434\u0435\u043b\u044f \u0441 \u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u044f \u0438\u043b\u0438 \u0441 \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\u0430 \u0438 \u0434\u043e\u043b\u0436\u043d\u043e \u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 0 \u0434\u043e 53 \u0438\u043b\u0438 \u043e\u0442 1 \u0434\u043e 53. \u0415\u0441\u043b\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 mode \u043e\u043f\u0443\u0449\u0435\u043d, \u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0440\u0435\u0436\u0438\u043c 0.\n \n `toISOWeek() ` \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e `toWeek(date,3)`.\n \n@@ -569,6 +569,132 @@ SELECT toDate('2016-12-27') AS date, toYearWeek(date) AS yearWeek0, toYearWeek(d\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n ```\n \n+## age\n+\n+\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 `unit` \u0440\u0430\u0437\u043d\u0438\u0446\u044b \u043c\u0435\u0436\u0434\u0443 `startdate` \u0438 `enddate`. \u0420\u0430\u0437\u043d\u0438\u0446\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e \u0432 1 \u0441\u0435\u043a\u0443\u043d\u0434\u0443.\n+\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 `2021-12-29` \u0438 `2022-01-01` 3 \u0434\u043d\u044f \u0434\u043b\u044f \u0435\u0434\u0438\u043d\u0438\u0446\u044b `day`, 0 \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u0434\u043b\u044f \u0435\u0434\u0438\u043d\u0438\u0446\u044b `month`, 0 \u043b\u0435\u0442 \u0434\u043b\u044f \u0435\u0434\u0438\u043d\u0438\u0446\u044b `year`.\n+\n+**\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441**\n+\n+``` sql\n+age('unit', startdate, enddate, [timezone])\n+```\n+\n+**\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b**\n+\n+-   `unit` \u2014 \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438. [String](../../sql-reference/data-types/string.md).\n+    \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f:\n+\n+    - `second` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `ss`, `s`)\n+    - `minute` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `mi`, `n`)\n+    - `hour` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `hh`, `h`)\n+    - `day` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `dd`, `d`)\n+    - `week` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `wk`, `ww`)\n+    - `month` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `mm`, `m`)\n+    - `quarter` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `qq`, `q`)\n+    - `year` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `yyyy`, `yy`)\n+\n+-   `startdate` \u2014 \u043f\u0435\u0440\u0432\u0430\u044f \u0434\u0430\u0442\u0430 \u0438\u043b\u0438 \u0434\u0430\u0442\u0430 \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0438\u0437 `enddate`. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) \u0438\u043b\u0438 [DateTime64](../../sql-reference/data-types/datetime64.md).\n+\n+-   `enddate` \u2014 \u0432\u0442\u043e\u0440\u0430\u044f \u0434\u0430\u0442\u0430 \u0438\u043b\u0438 \u0434\u0430\u0442\u0430 \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f `startdate`. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) \u0438\u043b\u0438 [DateTime64](../../sql-reference/data-types/datetime64.md).\n+\n+-   `timezone` \u2014 [\u0447\u0430\u0441\u043e\u0432\u043e\u0439 \u043f\u043e\u044f\u0441](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone) (\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e). \u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u043e\u043d \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0434\u043b\u044f `startdate`, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f `enddate`. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u043e\u0432\u044b\u0435 \u043f\u043e\u044f\u0441\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 `startdate` \u0438 `enddate`. \u0415\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432\u044b\u0435 \u043f\u043e\u044f\u0441\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 `startdate` \u0438 `enddate` \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442, \u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d. [String](../../sql-reference/data-types/string.md).\n+\n+**\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435**\n+\n+\u0420\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 `enddate` \u0438 `startdate`, \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u043d\u0430\u044f \u0432 `unit`.\n+\n+\u0422\u0438\u043f: [Int](../../sql-reference/data-types/int-uint.md).\n+\n+**\u041f\u0440\u0438\u043c\u0435\u0440**\n+\n+\u0417\u0430\u043f\u0440\u043e\u0441:\n+\n+``` sql\n+SELECT age('hour', toDateTime('2018-01-01 22:30:00'), toDateTime('2018-01-02 23:00:00'));\n+```\n+\n+\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n+\n+``` text\n+\u250c\u2500age('hour', toDateTime('2018-01-01 22:30:00'), toDateTime('2018-01-02 23:00:00'))\u2500\u2510\n+\u2502                                                                                24 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+```\n+\n+\u0417\u0430\u043f\u0440\u043e\u0441:\n+\n+``` sql\n+SELECT\n+    toDate('2022-01-01') AS e,\n+    toDate('2021-12-29') AS s,\n+    age('day', s, e) AS day_age,\n+    age('month', s, e) AS month__age,\n+    age('year', s, e) AS year_age;\n+```\n+\n+\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n+\n+``` text\n+\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500e\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500s\u2500\u252c\u2500day_age\u2500\u252c\u2500month__age\u2500\u252c\u2500year_age\u2500\u2510\n+\u2502 2022-01-01 \u2502 2021-12-29 \u2502       3 \u2502          0 \u2502        0 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+```\n+\n+## date\\_diff {#date_diff}\n+\n+\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0433\u0440\u0430\u043d\u0438\u0446 `unit` \u043f\u0435\u0440\u0435\u0441\u0435\u043a\u0430\u0435\u043c\u044b\u0445 \u043c\u0435\u0436\u0434\u0443 `startdate` \u0438 `enddate`.\n+\n+**\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441**\n+\n+``` sql\n+date_diff('unit', startdate, enddate, [timezone])\n+```\n+\n+\u0421\u0438\u043d\u043e\u043d\u0438\u043c\u044b: `dateDiff`, `DATE_DIFF`.\n+\n+**\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b**\n+\n+-   `unit` \u2014 \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438. [String](../../sql-reference/data-types/string.md).\n+    \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f:\n+\n+    - `second` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `ss`, `s`)\n+    - `minute` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `mi`, `n`)\n+    - `hour` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `hh`, `h`)\n+    - `day` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `dd`, `d`)\n+    - `week` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `wk`, `ww`)\n+    - `month` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `mm`, `m`)\n+    - `quarter` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `qq`, `q`)\n+    - `year` (\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u044f: `yyyy`, `yy`)\n+\n+-   `startdate` \u2014 \u043f\u0435\u0440\u0432\u0430\u044f \u0434\u0430\u0442\u0430 \u0438\u043b\u0438 \u0434\u0430\u0442\u0430 \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0438\u0437 `enddate`. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) \u0438\u043b\u0438 [DateTime64](../../sql-reference/data-types/datetime64.md).\n+\n+-   `enddate` \u2014 \u0432\u0442\u043e\u0440\u0430\u044f \u0434\u0430\u0442\u0430 \u0438\u043b\u0438 \u0434\u0430\u0442\u0430 \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f `startdate`. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) \u0438\u043b\u0438 [DateTime64](../../sql-reference/data-types/datetime64.md).\n+\n+-   `timezone` \u2014 [\u0447\u0430\u0441\u043e\u0432\u043e\u0439 \u043f\u043e\u044f\u0441](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone) (\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e). \u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u043e\u043d \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0434\u043b\u044f `startdate`, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f `enddate`. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u043e\u0432\u044b\u0435 \u043f\u043e\u044f\u0441\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 `startdate` \u0438 `enddate`. \u0415\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432\u044b\u0435 \u043f\u043e\u044f\u0441\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 `startdate` \u0438 `enddate` \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442, \u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d. [String](../../sql-reference/data-types/string.md).\n+\n+**\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435**\n+\n+\u0420\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 `enddate` \u0438 `startdate`, \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u043d\u0430\u044f \u0432 `unit`.\n+\n+\u0422\u0438\u043f: [Int](../../sql-reference/data-types/int-uint.md).\n+\n+**\u041f\u0440\u0438\u043c\u0435\u0440**\n+\n+\u0417\u0430\u043f\u0440\u043e\u0441:\n+\n+``` sql\n+SELECT dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'));\n+```\n+\n+\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n+\n+``` text\n+\u250c\u2500dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'))\u2500\u2510\n+\u2502                                                                                     25 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+```\n+\n ## date_trunc {#date_trunc}\n \n \u041e\u0442\u0441\u0435\u043a\u0430\u0435\u0442 \u043e\u0442 \u0434\u0430\u0442\u044b \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0447\u0430\u0441\u0442\u0438, \u043c\u0435\u043d\u044c\u0448\u0438\u0435 \u0447\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c.\n@@ -689,60 +815,6 @@ SELECT date_add(YEAR, 3, toDate('2018-01-01'));\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n ```\n \n-## date\\_diff {#date_diff}\n-\n-\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u043d\u0438\u0446\u0443 \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0434\u0430\u0442 \u0438\u043b\u0438 \u0434\u0430\u0442 \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c.\n-\n-**\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441**\n-\n-``` sql\n-date_diff('unit', startdate, enddate, [timezone])\n-```\n-\n-\u0421\u0438\u043d\u043e\u043d\u0438\u043c\u044b: `dateDiff`, `DATE_DIFF`.\n-\n-**\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b**\n-\n--   `unit` \u2014 \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438. [String](../../sql-reference/data-types/string.md).\n-    \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f:\n-\n-    - `second`\n-    - `minute`\n-    - `hour`\n-    - `day`\n-    - `week`\n-    - `month`\n-    - `quarter`\n-    - `year`\n-\n--   `startdate` \u2014 \u043f\u0435\u0440\u0432\u0430\u044f \u0434\u0430\u0442\u0430 \u0438\u043b\u0438 \u0434\u0430\u0442\u0430 \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0438\u0437 `enddate`. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) \u0438\u043b\u0438 [DateTime64](../../sql-reference/data-types/datetime64.md).\n-\n--   `enddate` \u2014 \u0432\u0442\u043e\u0440\u0430\u044f \u0434\u0430\u0442\u0430 \u0438\u043b\u0438 \u0434\u0430\u0442\u0430 \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f `startdate`. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) \u0438\u043b\u0438 [DateTime64](../../sql-reference/data-types/datetime64.md).\n-\n--   `timezone` \u2014 [\u0447\u0430\u0441\u043e\u0432\u043e\u0439 \u043f\u043e\u044f\u0441](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone) (\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e). \u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u043e\u043d \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0434\u043b\u044f `startdate`, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f `enddate`. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u043e\u0432\u044b\u0435 \u043f\u043e\u044f\u0441\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 `startdate` \u0438 `enddate`. \u0415\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432\u044b\u0435 \u043f\u043e\u044f\u0441\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 `startdate` \u0438 `enddate` \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442, \u0442\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d. [String](../../sql-reference/data-types/string.md).\n-\n-**\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435**\n-\n-\u0420\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 `enddate` \u0438 `startdate`, \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u043d\u0430\u044f \u0432 `unit`.\n-\n-\u0422\u0438\u043f: [Int](../../sql-reference/data-types/int-uint.md).\n-\n-**\u041f\u0440\u0438\u043c\u0435\u0440**\n-\n-\u0417\u0430\u043f\u0440\u043e\u0441:\n-\n-``` sql\n-SELECT dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'));\n-```\n-\n-\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n-\n-``` text\n-\u250c\u2500dateDiff('hour', toDateTime('2018-01-01 22:00:00'), toDateTime('2018-01-02 23:00:00'))\u2500\u2510\n-\u2502                                                                                     25 \u2502\n-\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-```\n-\n ## date\\_sub {#date_sub}\n \n \u0412\u044b\u0447\u0438\u0442\u0430\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438\u043b\u0438 \u0434\u0430\u0442\u044b \u0438\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0434\u0430\u0442\u044b \u0438\u043b\u0438 \u0434\u0430\u0442\u044b \u0441\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c.\ndiff --git a/src/Common/DateLUTImpl.h b/src/Common/DateLUTImpl.h\nindex 2f8aa487621c..84f063f95558 100644\n--- a/src/Common/DateLUTImpl.h\n+++ b/src/Common/DateLUTImpl.h\n@@ -1204,6 +1204,11 @@ class DateLUTImpl\n         return res;\n     }\n \n+    template <typename DateOrTime>\n+    inline DateTimeComponents toDateTimeComponents(DateOrTime v) const\n+    {\n+        return toDateTimeComponents(lut[toLUTIndex(v)].date);\n+    }\n \n     inline UInt64 toNumYYYYMMDDhhmmss(Time t) const\n     {\ndiff --git a/src/Common/LocalDateTime.h b/src/Common/LocalDateTime.h\nindex a002be17787f..1aa4f421ea1c 100644\n--- a/src/Common/LocalDateTime.h\n+++ b/src/Common/LocalDateTime.h\n@@ -31,7 +31,7 @@ class LocalDateTime\n \n     void init(time_t time, const DateLUTImpl & time_zone)\n     {\n-        DateLUTImpl::DateTimeComponents components = time_zone.toDateTimeComponents(time);\n+        DateLUTImpl::DateTimeComponents components = time_zone.toDateTimeComponents(static_cast<DateLUTImpl::Time>(time));\n \n         m_year = components.date.year;\n         m_month = components.date.month;\ndiff --git a/src/Functions/DateTimeTransforms.h b/src/Functions/DateTimeTransforms.h\nindex e9a4e357b7eb..f4163a336eff 100644\n--- a/src/Functions/DateTimeTransforms.h\n+++ b/src/Functions/DateTimeTransforms.h\n@@ -1343,6 +1343,30 @@ struct ToYYYYMMDDhhmmssImpl\n     using FactorTransform = ZeroTransform;\n };\n \n+struct ToDateTimeComponentsImpl\n+{\n+    static constexpr auto name = \"toDateTimeComponents\";\n+\n+    static inline DateLUTImpl::DateTimeComponents execute(Int64 t, const DateLUTImpl & time_zone)\n+    {\n+        return time_zone.toDateTimeComponents(t);\n+    }\n+    static inline DateLUTImpl::DateTimeComponents execute(UInt32 t, const DateLUTImpl & time_zone)\n+    {\n+        return time_zone.toDateTimeComponents(static_cast<DateLUTImpl::Time>(t));\n+    }\n+    static inline DateLUTImpl::DateTimeComponents execute(Int32 d, const DateLUTImpl & time_zone)\n+    {\n+        return time_zone.toDateTimeComponents(ExtendedDayNum(d));\n+    }\n+    static inline DateLUTImpl::DateTimeComponents execute(UInt16 d, const DateLUTImpl & time_zone)\n+    {\n+        return time_zone.toDateTimeComponents(DayNum(d));\n+    }\n+\n+    using FactorTransform = ZeroTransform;\n+};\n+\n \n template <typename FromType, typename ToType, typename Transform, bool is_extended_result = false>\n struct Transformer\ndiff --git a/src/Functions/TransformDateTime64.h b/src/Functions/TransformDateTime64.h\nindex cb4b3fbb71de..3dab9efeb6bb 100644\n--- a/src/Functions/TransformDateTime64.h\n+++ b/src/Functions/TransformDateTime64.h\n@@ -48,6 +48,10 @@ class TransformDateTime64\n         : scale_multiplier(DecimalUtils::scaleMultiplier<DateTime64::NativeType>(scale_))\n     {}\n \n+    TransformDateTime64(DateTime64::NativeType scale_multiplier_ = 1) /// NOLINT(google-explicit-constructor)\n+        : scale_multiplier(scale_multiplier_)\n+    {}\n+\n     template <typename ... Args>\n     inline auto NO_SANITIZE_UNDEFINED execute(const DateTime64 & t, Args && ... args) const\n     {\n@@ -127,6 +131,8 @@ class TransformDateTime64\n         return wrapped_transform.executeExtendedResult(t, std::forward<Args>(args)...);\n     }\n \n+    DateTime64::NativeType getScaleMultiplier() const { return scale_multiplier; }\n+\n private:\n     DateTime64::NativeType scale_multiplier = 1;\n     Transform wrapped_transform = {};\ndiff --git a/src/Functions/dateDiff.cpp b/src/Functions/dateDiff.cpp\nindex ec9c9df8e496..60668f81edf1 100644\n--- a/src/Functions/dateDiff.cpp\n+++ b/src/Functions/dateDiff.cpp\n@@ -1,6 +1,7 @@\n #include <DataTypes/DataTypeDateTime.h>\n #include <DataTypes/DataTypeDateTime64.h>\n #include <DataTypes/DataTypesNumber.h>\n+#include <Common/IntervalKind.h>\n #include <Columns/ColumnString.h>\n #include <Columns/ColumnsDateTime.h>\n #include <Columns/ColumnsNumber.h>\n@@ -34,6 +35,7 @@ namespace ErrorCodes\n namespace\n {\n \n+template <bool is_diff>\n class DateDiffImpl\n {\n public:\n@@ -165,8 +167,92 @@ class DateDiffImpl\n     template <typename TransformX, typename TransformY, typename T1, typename T2>\n     Int64 calculate(const TransformX & transform_x, const TransformY & transform_y, T1 x, T2 y, const DateLUTImpl & timezone_x, const DateLUTImpl & timezone_y) const\n     {\n-        return static_cast<Int64>(transform_y.execute(y, timezone_y))\n+        if constexpr (is_diff)\n+            return static_cast<Int64>(transform_y.execute(y, timezone_y))\n                 - static_cast<Int64>(transform_x.execute(x, timezone_x));\n+        else\n+        {\n+            auto res = static_cast<Int64>(transform_y.execute(y, timezone_y))\n+                - static_cast<Int64>(transform_x.execute(x, timezone_x));\n+            DateLUTImpl::DateTimeComponents a_comp;\n+            DateLUTImpl::DateTimeComponents b_comp;\n+            Int64 adjust_value;\n+            auto x_seconds = TransformDateTime64<ToRelativeSecondNumImpl<ResultPrecision::Extended>>(transform_x.getScaleMultiplier()).execute(x, timezone_x);\n+            auto y_seconds = TransformDateTime64<ToRelativeSecondNumImpl<ResultPrecision::Extended>>(transform_y.getScaleMultiplier()).execute(y, timezone_y);\n+            if (x_seconds <= y_seconds)\n+            {\n+                a_comp = TransformDateTime64<ToDateTimeComponentsImpl>(transform_x.getScaleMultiplier()).execute(x, timezone_x);\n+                b_comp = TransformDateTime64<ToDateTimeComponentsImpl>(transform_y.getScaleMultiplier()).execute(y, timezone_y);\n+                adjust_value = -1;\n+            }\n+            else\n+            {\n+                a_comp = TransformDateTime64<ToDateTimeComponentsImpl>(transform_y.getScaleMultiplier()).execute(y, timezone_y);\n+                b_comp = TransformDateTime64<ToDateTimeComponentsImpl>(transform_x.getScaleMultiplier()).execute(x, timezone_x);\n+                adjust_value = 1;\n+            }\n+\n+            if constexpr (std::is_same_v<TransformX, TransformDateTime64<ToRelativeYearNumImpl<ResultPrecision::Extended>>>)\n+            {\n+                if ((a_comp.date.month > b_comp.date.month)\n+                    || ((a_comp.date.month == b_comp.date.month) && ((a_comp.date.day > b_comp.date.day)\n+                    || ((a_comp.date.day == b_comp.date.day) && ((a_comp.time.hour > b_comp.time.hour)\n+                    || ((a_comp.time.hour == b_comp.time.hour) && ((a_comp.time.minute > b_comp.time.minute)\n+                    || ((a_comp.time.minute == b_comp.time.minute) && (a_comp.time.second > b_comp.time.second))))\n+                    )))))\n+                    res += adjust_value;\n+            }\n+            else if constexpr (std::is_same_v<TransformX, TransformDateTime64<ToRelativeQuarterNumImpl<ResultPrecision::Extended>>>)\n+            {\n+                auto x_month_in_quarter = (a_comp.date.month - 1) % 3;\n+                auto y_month_in_quarter = (b_comp.date.month - 1) % 3;\n+                if ((x_month_in_quarter > y_month_in_quarter)\n+                    || ((x_month_in_quarter == y_month_in_quarter) && ((a_comp.date.day > b_comp.date.day)\n+                    || ((a_comp.date.day == b_comp.date.day) && ((a_comp.time.hour > b_comp.time.hour)\n+                    || ((a_comp.time.hour == b_comp.time.hour) && ((a_comp.time.minute > b_comp.time.minute)\n+                    || ((a_comp.time.minute == b_comp.time.minute) && (a_comp.time.second > b_comp.time.second))))\n+                    )))))\n+                    res += adjust_value;\n+            }\n+            else if constexpr (std::is_same_v<TransformX, TransformDateTime64<ToRelativeMonthNumImpl<ResultPrecision::Extended>>>)\n+            {\n+                if ((a_comp.date.day > b_comp.date.day)\n+                    || ((a_comp.date.day == b_comp.date.day) && ((a_comp.time.hour > b_comp.time.hour)\n+                    || ((a_comp.time.hour == b_comp.time.hour) && ((a_comp.time.minute > b_comp.time.minute)\n+                    || ((a_comp.time.minute == b_comp.time.minute) && (a_comp.time.second > b_comp.time.second))))\n+                    )))\n+                    res += adjust_value;\n+            }\n+            else if constexpr (std::is_same_v<TransformX, TransformDateTime64<ToRelativeWeekNumImpl<ResultPrecision::Extended>>>)\n+            {\n+                auto x_day_of_week = TransformDateTime64<ToDayOfWeekImpl>(transform_x.getScaleMultiplier()).execute(x, timezone_x);\n+                auto y_day_of_week = TransformDateTime64<ToDayOfWeekImpl>(transform_y.getScaleMultiplier()).execute(y, timezone_y);\n+                if ((x_day_of_week > y_day_of_week)\n+                    || ((x_day_of_week == y_day_of_week) && (a_comp.time.hour > b_comp.time.hour))\n+                    || ((a_comp.time.hour == b_comp.time.hour) && ((a_comp.time.minute > b_comp.time.minute)\n+                    || ((a_comp.time.minute == b_comp.time.minute) && (a_comp.time.second > b_comp.time.second)))))\n+                    res += adjust_value;\n+            }\n+            else if constexpr (std::is_same_v<TransformX, TransformDateTime64<ToRelativeDayNumImpl<ResultPrecision::Extended>>>)\n+            {\n+                if ((a_comp.time.hour > b_comp.time.hour)\n+                    || ((a_comp.time.hour == b_comp.time.hour) && ((a_comp.time.minute > b_comp.time.minute)\n+                    || ((a_comp.time.minute == b_comp.time.minute) && (a_comp.time.second > b_comp.time.second)))))\n+                    res += adjust_value;\n+            }\n+            else if constexpr (std::is_same_v<TransformX, TransformDateTime64<ToRelativeHourNumImpl<ResultPrecision::Extended>>>)\n+            {\n+                if ((a_comp.time.minute > b_comp.time.minute)\n+                    || ((a_comp.time.minute == b_comp.time.minute) && (a_comp.time.second > b_comp.time.second)))\n+                    res += adjust_value;\n+            }\n+            else if constexpr (std::is_same_v<TransformX, TransformDateTime64<ToRelativeMinuteNumImpl<ResultPrecision::Extended>>>)\n+            {\n+                if (a_comp.time.second > b_comp.time.second)\n+                    res += adjust_value;\n+            }\n+            return res;\n+        }\n     }\n \n     template <typename T>\n@@ -193,7 +279,8 @@ class DateDiffImpl\n \n \n /** dateDiff('unit', t1, t2, [timezone])\n-  * t1 and t2 can be Date or DateTime\n+  * age('unit', t1, t2, [timezone])\n+  * t1 and t2 can be Date, Date32, DateTime or DateTime64\n   *\n   * If timezone is specified, it applied to both arguments.\n   * If not, timezones from datatypes t1 and t2 are used.\n@@ -201,10 +288,11 @@ class DateDiffImpl\n   *\n   * Timezone matters because days can have different length.\n   */\n+template <bool is_relative>\n class FunctionDateDiff : public IFunction\n {\n public:\n-    static constexpr auto name = \"dateDiff\";\n+    static constexpr auto name = is_relative ? \"dateDiff\" : \"age\";\n     static FunctionPtr create(ContextPtr) { return std::make_shared<FunctionDateDiff>(); }\n \n     String getName() const override\n@@ -270,21 +358,21 @@ class FunctionDateDiff : public IFunction\n         const auto & timezone_y = extractTimeZoneFromFunctionArguments(arguments, 3, 2);\n \n         if (unit == \"year\" || unit == \"yy\" || unit == \"yyyy\")\n-            impl.dispatchForColumns<ToRelativeYearNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n+            impl.template dispatchForColumns<ToRelativeYearNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n         else if (unit == \"quarter\" || unit == \"qq\" || unit == \"q\")\n-            impl.dispatchForColumns<ToRelativeQuarterNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n+            impl.template dispatchForColumns<ToRelativeQuarterNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n         else if (unit == \"month\" || unit == \"mm\" || unit == \"m\")\n-            impl.dispatchForColumns<ToRelativeMonthNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n+            impl.template dispatchForColumns<ToRelativeMonthNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n         else if (unit == \"week\" || unit == \"wk\" || unit == \"ww\")\n-            impl.dispatchForColumns<ToRelativeWeekNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n+            impl.template dispatchForColumns<ToRelativeWeekNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n         else if (unit == \"day\" || unit == \"dd\" || unit == \"d\")\n-            impl.dispatchForColumns<ToRelativeDayNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n+            impl.template dispatchForColumns<ToRelativeDayNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n         else if (unit == \"hour\" || unit == \"hh\" || unit == \"h\")\n-            impl.dispatchForColumns<ToRelativeHourNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n+            impl.template dispatchForColumns<ToRelativeHourNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n         else if (unit == \"minute\" || unit == \"mi\" || unit == \"n\")\n-            impl.dispatchForColumns<ToRelativeMinuteNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n+            impl.template dispatchForColumns<ToRelativeMinuteNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n         else if (unit == \"second\" || unit == \"ss\" || unit == \"s\")\n-            impl.dispatchForColumns<ToRelativeSecondNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n+            impl.template dispatchForColumns<ToRelativeSecondNumImpl<ResultPrecision::Extended>>(x, y, timezone_x, timezone_y, res->getData());\n         else\n             throw Exception(ErrorCodes::BAD_ARGUMENTS,\n                 \"Function {} does not support '{}' unit\", getName(), unit);\n@@ -292,7 +380,7 @@ class FunctionDateDiff : public IFunction\n         return res;\n     }\n private:\n-    DateDiffImpl impl{name};\n+    DateDiffImpl<is_relative> impl{name};\n };\n \n \n@@ -352,14 +440,14 @@ class FunctionTimeDiff : public IFunction\n         return res;\n     }\n private:\n-    DateDiffImpl impl{name};\n+    DateDiffImpl<true> impl{name};\n };\n \n }\n \n REGISTER_FUNCTION(DateDiff)\n {\n-    factory.registerFunction<FunctionDateDiff>({}, FunctionFactory::CaseInsensitive);\n+    factory.registerFunction<FunctionDateDiff<true>>({}, FunctionFactory::CaseInsensitive);\n }\n \n REGISTER_FUNCTION(TimeDiff)\n@@ -376,4 +464,9 @@ It is same as `dateDiff` and was added only for MySQL support. `dateDiff` is pre\n     Documentation::Categories{\"Dates and Times\"}}, FunctionFactory::CaseInsensitive);\n }\n \n+REGISTER_FUNCTION(Age)\n+{\n+    factory.registerFunction<FunctionDateDiff<false>>({}, FunctionFactory::CaseInsensitive);\n+}\n+\n }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference b/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference\nindex 341800206804..978f19d83811 100644\n--- a/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference\n+++ b/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference\n@@ -82,6 +82,7 @@ addYears\n addressToLine\n addressToLineWithInlines\n addressToSymbol\n+age\n alphaTokens\n and\n appendTrailingCharIfAbsent\ndiff --git a/tests/queries/0_stateless/02477_age.reference b/tests/queries/0_stateless/02477_age.reference\nnew file mode 100644\nindex 000000000000..249c413d9236\n--- /dev/null\n+++ b/tests/queries/0_stateless/02477_age.reference\n@@ -0,0 +1,76 @@\n+Various intervals\n+-1\n+0\n+0\n+-7\n+-3\n+0\n+-23\n+-11\n+0\n+-103\n+-52\n+0\n+-730\n+-364\n+1\n+-17520\n+-8736\n+24\n+-1051200\n+-524160\n+1440\n+-63072000\n+-31449600\n+86400\n+DateTime arguments\n+0\n+23\n+1439\n+86399\n+Date and DateTime arguments\n+-63072000\n+-31449600\n+86400\n+Constant and non-constant arguments\n+-1051200\n+-524160\n+1440\n+Case insensitive\n+-10\n+Dependance of timezones\n+0\n+0\n+1\n+25\n+1500\n+90000\n+0\n+0\n+1\n+24\n+1440\n+86400\n+0\n+0\n+1\n+25\n+1500\n+90000\n+0\n+0\n+1\n+24\n+1440\n+86400\n+Additional test\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\ndiff --git a/tests/queries/0_stateless/02477_age.sql b/tests/queries/0_stateless/02477_age.sql\nnew file mode 100644\nindex 000000000000..9b612276b013\n--- /dev/null\n+++ b/tests/queries/0_stateless/02477_age.sql\n@@ -0,0 +1,82 @@\n+SELECT 'Various intervals';\n+\n+SELECT age('year', toDate('2017-12-31'), toDate('2016-01-01'));\n+SELECT age('year', toDate('2017-12-31'), toDate('2017-01-01'));\n+SELECT age('year', toDate('2017-12-31'), toDate('2018-01-01'));\n+SELECT age('quarter', toDate('2017-12-31'), toDate('2016-01-01'));\n+SELECT age('quarter', toDate('2017-12-31'), toDate('2017-01-01'));\n+SELECT age('quarter', toDate('2017-12-31'), toDate('2018-01-01'));\n+SELECT age('month', toDate('2017-12-31'), toDate('2016-01-01'));\n+SELECT age('month', toDate('2017-12-31'), toDate('2017-01-01'));\n+SELECT age('month', toDate('2017-12-31'), toDate('2018-01-01'));\n+SELECT age('week', toDate('2017-12-31'), toDate('2016-01-01'));\n+SELECT age('week', toDate('2017-12-31'), toDate('2017-01-01'));\n+SELECT age('week', toDate('2017-12-31'), toDate('2018-01-01'));\n+SELECT age('day', toDate('2017-12-31'), toDate('2016-01-01'));\n+SELECT age('day', toDate('2017-12-31'), toDate('2017-01-01'));\n+SELECT age('day', toDate('2017-12-31'), toDate('2018-01-01'));\n+SELECT age('hour', toDate('2017-12-31'), toDate('2016-01-01'), 'UTC');\n+SELECT age('hour', toDate('2017-12-31'), toDate('2017-01-01'), 'UTC');\n+SELECT age('hour', toDate('2017-12-31'), toDate('2018-01-01'), 'UTC');\n+SELECT age('minute', toDate('2017-12-31'), toDate('2016-01-01'), 'UTC');\n+SELECT age('minute', toDate('2017-12-31'), toDate('2017-01-01'), 'UTC');\n+SELECT age('minute', toDate('2017-12-31'), toDate('2018-01-01'), 'UTC');\n+SELECT age('second', toDate('2017-12-31'), toDate('2016-01-01'), 'UTC');\n+SELECT age('second', toDate('2017-12-31'), toDate('2017-01-01'), 'UTC');\n+SELECT age('second', toDate('2017-12-31'), toDate('2018-01-01'), 'UTC');\n+\n+SELECT 'DateTime arguments';\n+SELECT age('day', toDateTime('2016-01-01 00:00:01', 'UTC'), toDateTime('2016-01-02 00:00:00', 'UTC'), 'UTC');\n+SELECT age('hour', toDateTime('2016-01-01 00:00:01', 'UTC'), toDateTime('2016-01-02 00:00:00', 'UTC'), 'UTC');\n+SELECT age('minute', toDateTime('2016-01-01 00:00:01', 'UTC'), toDateTime('2016-01-02 00:00:00', 'UTC'), 'UTC');\n+SELECT age('second', toDateTime('2016-01-01 00:00:01', 'UTC'), toDateTime('2016-01-02 00:00:00', 'UTC'), 'UTC');\n+\n+SELECT 'Date and DateTime arguments';\n+\n+SELECT age('second', toDate('2017-12-31'), toDateTime('2016-01-01 00:00:00', 'UTC'), 'UTC');\n+SELECT age('second', toDateTime('2017-12-31 00:00:00', 'UTC'), toDate('2017-01-01'), 'UTC');\n+SELECT age('second', toDateTime('2017-12-31 00:00:00', 'UTC'), toDateTime('2018-01-01 00:00:00', 'UTC'));\n+\n+SELECT 'Constant and non-constant arguments';\n+\n+SELECT age('minute', materialize(toDate('2017-12-31')), toDate('2016-01-01'), 'UTC');\n+SELECT age('minute', toDate('2017-12-31'), materialize(toDate('2017-01-01')), 'UTC');\n+SELECT age('minute', materialize(toDate('2017-12-31')), materialize(toDate('2018-01-01')), 'UTC');\n+\n+SELECT 'Case insensitive';\n+\n+SELECT age('year', today(), today() - INTERVAL 10 YEAR);\n+\n+SELECT 'Dependance of timezones';\n+\n+SELECT age('month', toDate('2014-10-26'), toDate('2014-10-27'), 'Asia/Istanbul');\n+SELECT age('week', toDate('2014-10-26'), toDate('2014-10-27'), 'Asia/Istanbul');\n+SELECT age('day', toDate('2014-10-26'), toDate('2014-10-27'), 'Asia/Istanbul');\n+SELECT age('hour', toDate('2014-10-26'), toDate('2014-10-27'), 'Asia/Istanbul');\n+SELECT age('minute', toDate('2014-10-26'), toDate('2014-10-27'), 'Asia/Istanbul');\n+SELECT age('second', toDate('2014-10-26'), toDate('2014-10-27'), 'Asia/Istanbul');\n+\n+SELECT age('month', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');\n+SELECT age('week', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');\n+SELECT age('day', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');\n+SELECT age('hour', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');\n+SELECT age('minute', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');\n+SELECT age('second', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');\n+\n+SELECT age('month', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));\n+SELECT age('week', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));\n+SELECT age('day', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));\n+SELECT age('hour', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));\n+SELECT age('minute', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));\n+SELECT age('second', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));\n+\n+SELECT age('month', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));\n+SELECT age('week', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));\n+SELECT age('day', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));\n+SELECT age('hour', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));\n+SELECT age('minute', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));\n+SELECT age('second', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));\n+\n+SELECT 'Additional test';\n+\n+SELECT number = age('month', now() - INTERVAL number MONTH, now()) FROM system.numbers LIMIT 10;\ndiff --git a/tests/queries/0_stateless/02477_age_date32.reference b/tests/queries/0_stateless/02477_age_date32.reference\nnew file mode 100644\nindex 000000000000..69f27a10acc4\n--- /dev/null\n+++ b/tests/queries/0_stateless/02477_age_date32.reference\n@@ -0,0 +1,169 @@\n+-- { echo }\n+\n+-- Date32 vs Date32\n+SELECT age('second', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+86400\n+SELECT age('minute', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+1440\n+SELECT age('hour', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+24\n+SELECT age('day', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+1\n+SELECT age('week', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-08', 'UTC'), 'UTC');\n+1\n+SELECT age('month', toDate32('1927-01-01', 'UTC'), toDate32('1927-02-01', 'UTC'), 'UTC');\n+1\n+SELECT age('quarter', toDate32('1927-01-01', 'UTC'), toDate32('1927-04-01', 'UTC'), 'UTC');\n+1\n+SELECT age('year', toDate32('1927-01-01', 'UTC'), toDate32('1928-01-01', 'UTC'), 'UTC');\n+1\n+-- With DateTime64\n+-- Date32 vs DateTime64\n+SELECT age('second', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+86400\n+SELECT age('minute', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+1440\n+SELECT age('hour', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+24\n+SELECT age('day', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+1\n+SELECT age('week', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-08 00:00:00', 3, 'UTC'), 'UTC');\n+1\n+SELECT age('month', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-02-01 00:00:00', 3, 'UTC'), 'UTC');\n+1\n+SELECT age('quarter', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-04-01 00:00:00', 3, 'UTC'), 'UTC');\n+1\n+SELECT age('year', toDate32('1927-01-01', 'UTC'), toDateTime64('1928-01-01 00:00:00', 3, 'UTC'), 'UTC');\n+1\n+-- DateTime64 vs Date32\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+86400\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+1440\n+SELECT age('hour', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+24\n+SELECT age('day', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+1\n+SELECT age('week', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-08', 'UTC'), 'UTC');\n+1\n+SELECT age('month', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-02-01', 'UTC'), 'UTC');\n+1\n+SELECT age('quarter', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-04-01', 'UTC'), 'UTC');\n+1\n+SELECT age('year', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1928-01-01', 'UTC'), 'UTC');\n+1\n+-- With DateTime\n+-- Date32 vs DateTime\n+SELECT age('second', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+86400\n+SELECT age('minute', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+1440\n+SELECT age('hour', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+24\n+SELECT age('day', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+1\n+SELECT age('week', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-25 00:00:00', 'UTC'), 'UTC');\n+1\n+SELECT age('month', toDate32('2015-08-18', 'UTC'), toDateTime('2015-09-18 00:00:00', 'UTC'), 'UTC');\n+1\n+SELECT age('quarter', toDate32('2015-08-18', 'UTC'), toDateTime('2015-11-18 00:00:00', 'UTC'), 'UTC');\n+1\n+SELECT age('year', toDate32('2015-08-18', 'UTC'), toDateTime('2016-08-18 00:00:00', 'UTC'), 'UTC');\n+1\n+-- DateTime vs Date32\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+86400\n+SELECT age('minute', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+1440\n+SELECT age('hour', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+24\n+SELECT age('day', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+1\n+SELECT age('week', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-25', 'UTC'), 'UTC');\n+1\n+SELECT age('month', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-09-18', 'UTC'), 'UTC');\n+1\n+SELECT age('quarter', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-11-18', 'UTC'), 'UTC');\n+1\n+SELECT age('year', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2016-08-18', 'UTC'), 'UTC');\n+1\n+-- With Date\n+-- Date32 vs Date\n+SELECT age('second', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');\n+86400\n+SELECT age('minute', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');\n+1440\n+SELECT age('hour', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');\n+24\n+SELECT age('day', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');\n+1\n+SELECT age('week', toDate32('2015-08-18', 'UTC'), toDate('2015-08-25', 'UTC'), 'UTC');\n+1\n+SELECT age('month', toDate32('2015-08-18', 'UTC'), toDate('2015-09-18', 'UTC'), 'UTC');\n+1\n+SELECT age('quarter', toDate32('2015-08-18', 'UTC'), toDate('2015-11-18', 'UTC'), 'UTC');\n+1\n+SELECT age('year', toDate32('2015-08-18', 'UTC'), toDate('2016-08-18', 'UTC'), 'UTC');\n+1\n+-- Date vs Date32\n+SELECT age('second', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+86400\n+SELECT age('minute', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+1440\n+SELECT age('hour', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+24\n+SELECT age('day', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+1\n+SELECT age('week', toDate('2015-08-18', 'UTC'), toDate32('2015-08-25', 'UTC'), 'UTC');\n+1\n+SELECT age('month', toDate('2015-08-18', 'UTC'), toDate32('2015-09-18', 'UTC'), 'UTC');\n+1\n+SELECT age('quarter', toDate('2015-08-18', 'UTC'), toDate32('2015-11-18', 'UTC'), 'UTC');\n+1\n+SELECT age('year', toDate('2015-08-18', 'UTC'), toDate32('2016-08-18', 'UTC'), 'UTC');\n+1\n+-- Const vs non-const columns\n+SELECT age('day', toDate32('1927-01-01', 'UTC'), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');\n+1\n+SELECT age('day', toDate32('1927-01-01', 'UTC'), materialize(toDateTime64('1927-01-02 00:00:00', 3, 'UTC')), 'UTC');\n+1\n+SELECT age('day', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');\n+1\n+SELECT age('day', toDate32('2015-08-18', 'UTC'), materialize(toDateTime('2015-08-19 00:00:00', 'UTC')), 'UTC');\n+1\n+SELECT age('day', toDateTime('2015-08-18 00:00:00', 'UTC'), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');\n+1\n+SELECT age('day', toDate32('2015-08-18', 'UTC'), materialize(toDate('2015-08-19', 'UTC')), 'UTC');\n+1\n+SELECT age('day', toDate('2015-08-18', 'UTC'), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');\n+1\n+-- Non-const vs const columns\n+SELECT age('day', materialize(toDate32('1927-01-01', 'UTC')), toDate32('1927-01-02', 'UTC'), 'UTC');\n+1\n+SELECT age('day', materialize(toDate32('1927-01-01', 'UTC')), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+1\n+SELECT age('day', materialize(toDateTime64('1927-01-01 00:00:00', 3, 'UTC')), toDate32('1927-01-02', 'UTC'), 'UTC');\n+1\n+SELECT age('day', materialize(toDate32('2015-08-18', 'UTC')), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+1\n+SELECT age('day', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), toDate32('2015-08-19', 'UTC'), 'UTC');\n+1\n+SELECT age('day', materialize(toDate32('2015-08-18', 'UTC')), toDate('2015-08-19', 'UTC'), 'UTC');\n+1\n+SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), toDate32('2015-08-19', 'UTC'), 'UTC');\n+1\n+-- Non-const vs non-const columns\n+SELECT age('day', materialize(toDate32('1927-01-01', 'UTC')), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');\n+1\n+SELECT age('day', materialize(toDate32('1927-01-01', 'UTC')), materialize(toDateTime64('1927-01-02 00:00:00', 3, 'UTC')), 'UTC');\n+1\n+SELECT age('day', materialize(toDateTime64('1927-01-01 00:00:00', 3, 'UTC')), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');\n+1\n+SELECT age('day', materialize(toDate32('2015-08-18', 'UTC')), materialize(toDateTime('2015-08-19 00:00:00', 'UTC')), 'UTC');\n+1\n+SELECT age('day', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');\n+1\n+SELECT age('day', materialize(toDate32('2015-08-18', 'UTC')), materialize(toDate('2015-08-19', 'UTC')), 'UTC');\n+1\n+SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');\n+1\ndiff --git a/tests/queries/0_stateless/02477_age_date32.sql b/tests/queries/0_stateless/02477_age_date32.sql\nnew file mode 100644\nindex 000000000000..43ff458c2d10\n--- /dev/null\n+++ b/tests/queries/0_stateless/02477_age_date32.sql\n@@ -0,0 +1,101 @@\n+-- { echo }\n+\n+-- Date32 vs Date32\n+SELECT age('second', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('minute', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('hour', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('day', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('week', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-08', 'UTC'), 'UTC');\n+SELECT age('month', toDate32('1927-01-01', 'UTC'), toDate32('1927-02-01', 'UTC'), 'UTC');\n+SELECT age('quarter', toDate32('1927-01-01', 'UTC'), toDate32('1927-04-01', 'UTC'), 'UTC');\n+SELECT age('year', toDate32('1927-01-01', 'UTC'), toDate32('1928-01-01', 'UTC'), 'UTC');\n+\n+-- With DateTime64\n+-- Date32 vs DateTime64\n+SELECT age('second', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+SELECT age('minute', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+SELECT age('hour', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+SELECT age('day', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+SELECT age('week', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-08 00:00:00', 3, 'UTC'), 'UTC');\n+SELECT age('month', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-02-01 00:00:00', 3, 'UTC'), 'UTC');\n+SELECT age('quarter', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-04-01 00:00:00', 3, 'UTC'), 'UTC');\n+SELECT age('year', toDate32('1927-01-01', 'UTC'), toDateTime64('1928-01-01 00:00:00', 3, 'UTC'), 'UTC');\n+\n+-- DateTime64 vs Date32\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('hour', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('day', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('week', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-08', 'UTC'), 'UTC');\n+SELECT age('month', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-02-01', 'UTC'), 'UTC');\n+SELECT age('quarter', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-04-01', 'UTC'), 'UTC');\n+SELECT age('year', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1928-01-01', 'UTC'), 'UTC');\n+\n+-- With DateTime\n+-- Date32 vs DateTime\n+SELECT age('second', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+SELECT age('minute', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+SELECT age('hour', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+SELECT age('day', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+SELECT age('week', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-25 00:00:00', 'UTC'), 'UTC');\n+SELECT age('month', toDate32('2015-08-18', 'UTC'), toDateTime('2015-09-18 00:00:00', 'UTC'), 'UTC');\n+SELECT age('quarter', toDate32('2015-08-18', 'UTC'), toDateTime('2015-11-18 00:00:00', 'UTC'), 'UTC');\n+SELECT age('year', toDate32('2015-08-18', 'UTC'), toDateTime('2016-08-18 00:00:00', 'UTC'), 'UTC');\n+\n+-- DateTime vs Date32\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('minute', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('hour', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('day', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('week', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-25', 'UTC'), 'UTC');\n+SELECT age('month', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-09-18', 'UTC'), 'UTC');\n+SELECT age('quarter', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-11-18', 'UTC'), 'UTC');\n+SELECT age('year', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2016-08-18', 'UTC'), 'UTC');\n+\n+-- With Date\n+-- Date32 vs Date\n+SELECT age('second', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('minute', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('hour', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('day', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('week', toDate32('2015-08-18', 'UTC'), toDate('2015-08-25', 'UTC'), 'UTC');\n+SELECT age('month', toDate32('2015-08-18', 'UTC'), toDate('2015-09-18', 'UTC'), 'UTC');\n+SELECT age('quarter', toDate32('2015-08-18', 'UTC'), toDate('2015-11-18', 'UTC'), 'UTC');\n+SELECT age('year', toDate32('2015-08-18', 'UTC'), toDate('2016-08-18', 'UTC'), 'UTC');\n+\n+-- Date vs Date32\n+SELECT age('second', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('minute', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('hour', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('day', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('week', toDate('2015-08-18', 'UTC'), toDate32('2015-08-25', 'UTC'), 'UTC');\n+SELECT age('month', toDate('2015-08-18', 'UTC'), toDate32('2015-09-18', 'UTC'), 'UTC');\n+SELECT age('quarter', toDate('2015-08-18', 'UTC'), toDate32('2015-11-18', 'UTC'), 'UTC');\n+SELECT age('year', toDate('2015-08-18', 'UTC'), toDate32('2016-08-18', 'UTC'), 'UTC');\n+\n+-- Const vs non-const columns\n+SELECT age('day', toDate32('1927-01-01', 'UTC'), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');\n+SELECT age('day', toDate32('1927-01-01', 'UTC'), materialize(toDateTime64('1927-01-02 00:00:00', 3, 'UTC')), 'UTC');\n+SELECT age('day', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');\n+SELECT age('day', toDate32('2015-08-18', 'UTC'), materialize(toDateTime('2015-08-19 00:00:00', 'UTC')), 'UTC');\n+SELECT age('day', toDateTime('2015-08-18 00:00:00', 'UTC'), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');\n+SELECT age('day', toDate32('2015-08-18', 'UTC'), materialize(toDate('2015-08-19', 'UTC')), 'UTC');\n+SELECT age('day', toDate('2015-08-18', 'UTC'), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');\n+\n+-- Non-const vs const columns\n+SELECT age('day', materialize(toDate32('1927-01-01', 'UTC')), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('day', materialize(toDate32('1927-01-01', 'UTC')), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');\n+SELECT age('day', materialize(toDateTime64('1927-01-01 00:00:00', 3, 'UTC')), toDate32('1927-01-02', 'UTC'), 'UTC');\n+SELECT age('day', materialize(toDate32('2015-08-18', 'UTC')), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');\n+SELECT age('day', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), toDate32('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('day', materialize(toDate32('2015-08-18', 'UTC')), toDate('2015-08-19', 'UTC'), 'UTC');\n+SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), toDate32('2015-08-19', 'UTC'), 'UTC');\n+\n+-- Non-const vs non-const columns\n+SELECT age('day', materialize(toDate32('1927-01-01', 'UTC')), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');\n+SELECT age('day', materialize(toDate32('1927-01-01', 'UTC')), materialize(toDateTime64('1927-01-02 00:00:00', 3, 'UTC')), 'UTC');\n+SELECT age('day', materialize(toDateTime64('1927-01-01 00:00:00', 3, 'UTC')), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');\n+SELECT age('day', materialize(toDate32('2015-08-18', 'UTC')), materialize(toDateTime('2015-08-19 00:00:00', 'UTC')), 'UTC');\n+SELECT age('day', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');\n+SELECT age('day', materialize(toDate32('2015-08-18', 'UTC')), materialize(toDate('2015-08-19', 'UTC')), 'UTC');\n+SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');\ndiff --git a/tests/queries/0_stateless/02477_age_datetime64.reference b/tests/queries/0_stateless/02477_age_datetime64.reference\nnew file mode 100644\nindex 000000000000..3b4459dd26d8\n--- /dev/null\n+++ b/tests/queries/0_stateless/02477_age_datetime64.reference\n@@ -0,0 +1,113 @@\n+-- { echo }\n+\n+-- DateTime64 vs DateTime64 same scale\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 00:00:10', 0, 'UTC'));\n+10\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 00:10:00', 0, 'UTC'));\n+600\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 01:00:00', 0, 'UTC'));\n+3600\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 01:10:10', 0, 'UTC'));\n+4210\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 00:10:00', 0, 'UTC'));\n+10\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 10:00:00', 0, 'UTC'));\n+600\n+SELECT age('hour', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 10:00:00', 0, 'UTC'));\n+10\n+SELECT age('day', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-02 00:00:00', 0, 'UTC'));\n+1\n+SELECT age('month', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-02-01 00:00:00', 0, 'UTC'));\n+1\n+SELECT age('year', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1928-01-01 00:00:00', 0, 'UTC'));\n+1\n+-- DateTime64 vs DateTime64 different scale\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 00:00:10', 3, 'UTC'));\n+10\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 00:10:00', 3, 'UTC'));\n+600\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 01:00:00', 3, 'UTC'));\n+3600\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 01:10:10', 3, 'UTC'));\n+4210\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 00:10:00', 3, 'UTC'));\n+10\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 10:00:00', 3, 'UTC'));\n+600\n+SELECT age('hour', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 10:00:00', 3, 'UTC'));\n+10\n+SELECT age('day', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'));\n+1\n+SELECT age('month', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-02-01 00:00:00', 3, 'UTC'));\n+1\n+SELECT age('year', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1928-01-01 00:00:00', 3, 'UTC'));\n+1\n+-- With DateTime\n+-- DateTime64 vs DateTime\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 00:00:00', 'UTC'));\n+0\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 00:00:10', 'UTC'));\n+10\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 00:10:00', 'UTC'));\n+600\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 01:00:00', 'UTC'));\n+3600\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 01:10:10', 'UTC'));\n+4210\n+-- DateTime vs DateTime64\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 00:00:00', 3, 'UTC'));\n+0\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 00:00:10', 3, 'UTC'));\n+10\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 00:10:00', 3, 'UTC'));\n+600\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 01:00:00', 3, 'UTC'));\n+3600\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 01:10:10', 3, 'UTC'));\n+4210\n+-- With Date\n+-- DateTime64 vs Date\n+SELECT age('day', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDate('2015-08-19', 'UTC'));\n+1\n+-- Date vs DateTime64\n+SELECT age('day', toDate('2015-08-18', 'UTC'), toDateTime64('2015-08-19 00:00:00', 3, 'UTC'));\n+1\n+-- Same thing but const vs non-const columns\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), materialize(toDateTime64('1927-01-01 00:00:10', 0, 'UTC')));\n+10\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), materialize(toDateTime64('1927-01-01 00:00:10', 3, 'UTC')));\n+10\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), materialize(toDateTime('2015-08-18 00:00:10', 'UTC')));\n+10\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), materialize(toDateTime64('2015-08-18 00:00:10', 3, 'UTC')));\n+10\n+SELECT age('day', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), materialize(toDate('2015-08-19', 'UTC')));\n+1\n+SELECT age('day', toDate('2015-08-18', 'UTC'), materialize(toDateTime64('2015-08-19 00:00:00', 3, 'UTC')));\n+1\n+-- Same thing but non-const vs const columns\n+SELECT age('second', materialize(toDateTime64('1927-01-01 00:00:00', 0, 'UTC')), toDateTime64('1927-01-01 00:00:10', 0, 'UTC'));\n+10\n+SELECT age('second', materialize(toDateTime64('1927-01-01 00:00:00', 6, 'UTC')), toDateTime64('1927-01-01 00:00:10', 3, 'UTC'));\n+10\n+SELECT age('second', materialize(toDateTime64('2015-08-18 00:00:00', 0, 'UTC')), toDateTime('2015-08-18 00:00:10', 'UTC'));\n+10\n+SELECT age('second', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), toDateTime64('2015-08-18 00:00:10', 3, 'UTC'));\n+10\n+SELECT age('day', materialize(toDateTime64('2015-08-18 00:00:00', 0, 'UTC')), toDate('2015-08-19', 'UTC'));\n+1\n+SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), toDateTime64('2015-08-19 00:00:00', 3, 'UTC'));\n+1\n+-- Same thing but non-const vs non-const columns\n+SELECT age('second', materialize(toDateTime64('1927-01-01 00:00:00', 0, 'UTC')), materialize(toDateTime64('1927-01-01 00:00:10', 0, 'UTC')));\n+10\n+SELECT age('second', materialize(toDateTime64('1927-01-01 00:00:00', 6, 'UTC')), materialize(toDateTime64('1927-01-01 00:00:10', 3, 'UTC')));\n+10\n+SELECT age('second', materialize(toDateTime64('2015-08-18 00:00:00', 0, 'UTC')), materialize(toDateTime('2015-08-18 00:00:10', 'UTC')));\n+10\n+SELECT age('second', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), materialize(toDateTime64('2015-08-18 00:00:10', 3, 'UTC')));\n+10\n+SELECT age('day', materialize(toDateTime64('2015-08-18 00:00:00', 0, 'UTC')), materialize(toDate('2015-08-19', 'UTC')));\n+1\n+SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), materialize(toDateTime64('2015-08-19 00:00:00', 3, 'UTC')));\n+1\ndiff --git a/tests/queries/0_stateless/02477_age_datetime64.sql b/tests/queries/0_stateless/02477_age_datetime64.sql\nnew file mode 100644\nindex 000000000000..1bed93991ca7\n--- /dev/null\n+++ b/tests/queries/0_stateless/02477_age_datetime64.sql\n@@ -0,0 +1,77 @@\n+-- { echo }\n+\n+-- DateTime64 vs DateTime64 same scale\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 00:00:10', 0, 'UTC'));\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 00:10:00', 0, 'UTC'));\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 01:00:00', 0, 'UTC'));\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 01:10:10', 0, 'UTC'));\n+\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 00:10:00', 0, 'UTC'));\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 10:00:00', 0, 'UTC'));\n+\n+SELECT age('hour', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 10:00:00', 0, 'UTC'));\n+\n+SELECT age('day', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-02 00:00:00', 0, 'UTC'));\n+SELECT age('month', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-02-01 00:00:00', 0, 'UTC'));\n+SELECT age('year', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1928-01-01 00:00:00', 0, 'UTC'));\n+\n+-- DateTime64 vs DateTime64 different scale\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 00:00:10', 3, 'UTC'));\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 00:10:00', 3, 'UTC'));\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 01:00:00', 3, 'UTC'));\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 01:10:10', 3, 'UTC'));\n+\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 00:10:00', 3, 'UTC'));\n+SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 10:00:00', 3, 'UTC'));\n+\n+SELECT age('hour', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 10:00:00', 3, 'UTC'));\n+\n+SELECT age('day', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'));\n+SELECT age('month', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-02-01 00:00:00', 3, 'UTC'));\n+SELECT age('year', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1928-01-01 00:00:00', 3, 'UTC'));\n+\n+-- With DateTime\n+-- DateTime64 vs DateTime\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 00:00:00', 'UTC'));\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 00:00:10', 'UTC'));\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 00:10:00', 'UTC'));\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 01:00:00', 'UTC'));\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 01:10:10', 'UTC'));\n+\n+-- DateTime vs DateTime64\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 00:00:00', 3, 'UTC'));\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 00:00:10', 3, 'UTC'));\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 00:10:00', 3, 'UTC'));\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 01:00:00', 3, 'UTC'));\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 01:10:10', 3, 'UTC'));\n+\n+-- With Date\n+-- DateTime64 vs Date\n+SELECT age('day', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDate('2015-08-19', 'UTC'));\n+\n+-- Date vs DateTime64\n+SELECT age('day', toDate('2015-08-18', 'UTC'), toDateTime64('2015-08-19 00:00:00', 3, 'UTC'));\n+\n+-- Same thing but const vs non-const columns\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), materialize(toDateTime64('1927-01-01 00:00:10', 0, 'UTC')));\n+SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), materialize(toDateTime64('1927-01-01 00:00:10', 3, 'UTC')));\n+SELECT age('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), materialize(toDateTime('2015-08-18 00:00:10', 'UTC')));\n+SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), materialize(toDateTime64('2015-08-18 00:00:10', 3, 'UTC')));\n+SELECT age('day', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), materialize(toDate('2015-08-19', 'UTC')));\n+SELECT age('day', toDate('2015-08-18', 'UTC'), materialize(toDateTime64('2015-08-19 00:00:00', 3, 'UTC')));\n+\n+-- Same thing but non-const vs const columns\n+SELECT age('second', materialize(toDateTime64('1927-01-01 00:00:00', 0, 'UTC')), toDateTime64('1927-01-01 00:00:10', 0, 'UTC'));\n+SELECT age('second', materialize(toDateTime64('1927-01-01 00:00:00', 6, 'UTC')), toDateTime64('1927-01-01 00:00:10', 3, 'UTC'));\n+SELECT age('second', materialize(toDateTime64('2015-08-18 00:00:00', 0, 'UTC')), toDateTime('2015-08-18 00:00:10', 'UTC'));\n+SELECT age('second', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), toDateTime64('2015-08-18 00:00:10', 3, 'UTC'));\n+SELECT age('day', materialize(toDateTime64('2015-08-18 00:00:00', 0, 'UTC')), toDate('2015-08-19', 'UTC'));\n+SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), toDateTime64('2015-08-19 00:00:00', 3, 'UTC'));\n+\n+-- Same thing but non-const vs non-const columns\n+SELECT age('second', materialize(toDateTime64('1927-01-01 00:00:00', 0, 'UTC')), materialize(toDateTime64('1927-01-01 00:00:10', 0, 'UTC')));\n+SELECT age('second', materialize(toDateTime64('1927-01-01 00:00:00', 6, 'UTC')), materialize(toDateTime64('1927-01-01 00:00:10', 3, 'UTC')));\n+SELECT age('second', materialize(toDateTime64('2015-08-18 00:00:00', 0, 'UTC')), materialize(toDateTime('2015-08-18 00:00:10', 'UTC')));\n+SELECT age('second', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), materialize(toDateTime64('2015-08-18 00:00:10', 3, 'UTC')));\n+SELECT age('day', materialize(toDateTime64('2015-08-18 00:00:00', 0, 'UTC')), materialize(toDate('2015-08-19', 'UTC')));\n+SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), materialize(toDateTime64('2015-08-19 00:00:00', 3, 'UTC')));\ndiff --git a/tests/queries/0_stateless/02513_broken_datetime64_init_on_mac.reference b/tests/queries/0_stateless/02513_broken_datetime64_init_on_mac.reference\nnew file mode 100644\nindex 000000000000..aff5a0d01c67\n--- /dev/null\n+++ b/tests/queries/0_stateless/02513_broken_datetime64_init_on_mac.reference\n@@ -0,0 +1,1 @@\n+2022-12-12 14:06:09.000\ndiff --git a/tests/queries/0_stateless/02513_broken_datetime64_init_on_mac.sql b/tests/queries/0_stateless/02513_broken_datetime64_init_on_mac.sql\nnew file mode 100644\nindex 000000000000..f8d3b2847e99\n--- /dev/null\n+++ b/tests/queries/0_stateless/02513_broken_datetime64_init_on_mac.sql\n@@ -0,0 +1,1 @@\n+select 1670853969::DateTime64(3, 'UTC');\n",
  "problem_statement": "age function (unit: week /  month  / quarter / year  )\na function should return the number of the full units ( age in years, ...)\r\n\r\n```sql\r\nSELECT\r\n    toDate('2022-01-01') AS e,\r\n    toDate('2021-12-29') AS s,\r\n    dateDiff('month', s, e) AS month__diff,\r\n    dateDiff('year', s, e) AS year_diff\r\n\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500e\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500s\u2500\u252c\u2500month__diff\u2500\u252c\u2500year_diff\u2500\u2510\r\n\u2502 2022-01-01 \u2502 2021-12-29 \u2502           1 \u2502         1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n```sql\r\nSELECT\r\n    toDate('2022-01-01') AS e,\r\n    toDate('2021-12-29') AS s,\r\n    age('month', s, e) AS month__diff,\r\n    age('year', s, e) AS year_diff\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500e\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500s\u2500\u252c\u2500month__diff\u2500\u252c\u2500year_diff\u2500\u2510\r\n\u2502 2022-01-01 \u2502 2021-12-29 \u2502           0 \u2502         0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n```sql\r\nCREATE FUNCTION age AS (e, s) -> (dateDiff('year', s, e) - ((month(s), day(s)) > (month(e), day(e))))\r\n\r\nSELECT age(toDate('2022-01-01'), toDate('2021-12-29')) AS age\r\n\r\n\u250c\u2500age\u2500\u2510\r\n\u2502   0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "PR was reverted.",
  "created_at": "2022-12-20T10:20:54Z",
  "modified_files": [
    "docs/en/sql-reference/functions/date-time-functions.md",
    "docs/ru/sql-reference/functions/date-time-functions.md",
    "src/Common/DateLUTImpl.h",
    "src/Common/LocalDateTime.h",
    "src/Functions/DateTimeTransforms.h",
    "src/Functions/TransformDateTime64.h",
    "src/Functions/dateDiff.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference",
    "b/tests/queries/0_stateless/02477_age.reference",
    "b/tests/queries/0_stateless/02477_age.sql",
    "b/tests/queries/0_stateless/02477_age_date32.reference",
    "b/tests/queries/0_stateless/02477_age_date32.sql",
    "b/tests/queries/0_stateless/02477_age_datetime64.reference",
    "b/tests/queries/0_stateless/02477_age_datetime64.sql",
    "b/tests/queries/0_stateless/02513_broken_datetime64_init_on_mac.reference",
    "b/tests/queries/0_stateless/02513_broken_datetime64_init_on_mac.sql"
  ]
}