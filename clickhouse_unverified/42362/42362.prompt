You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
ThreadSanitizer: data race between query finish and cancel
```
WARNING: ThreadSanitizer: data race (pid=661)
  Write of size 8 at 0x7b6800590188 by thread T350:
    #0 memset <null> (clickhouse+0xb89f44d) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #1 std::__1::vector<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor>>>::vector(std::__1::vector<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor>>>&&) build_docker/../contrib/libcxx/include/vector:1194:31 (clickhouse+0x1ac8fb6f) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #2 DB::QueryPipeline::QueryPipeline(DB::QueryPipeline&&) build_docker/../src/QueryPipeline/QueryPipeline.cpp:33:16 (clickhouse+0x1ac8fb6f)
    #3 DB::QueryPipeline::reset() build_docker/../src/QueryPipeline/QueryPipeline.cpp:537:31 (clickhouse+0x1ac8fb6f)
    #4 DB::BlockIO::onFinish() build_docker/../src/QueryPipeline/BlockIO.h:40:18 (clickhouse+0x1d22f087) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #5 DB::TCPHandler::runImpl() build_docker/../src/Server/TCPHandler.cpp:403:26 (clickhouse+0x1d22f087)
    #6 DB::TCPHandler::run() build_docker/../src/Server/TCPHandler.cpp:1884:9 (clickhouse+0x1d2420c7) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #7 Poco::Net::TCPServerConnection::start() build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3 (clickhouse+0x20a8fd62) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #8 Poco::Net::TCPServerDispatcher::run() build_docker/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115:20 (clickhouse+0x20a905d2) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #9 Poco::PooledThread::run() build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14 (clickhouse+0x20ce8239) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #10 Poco::(anonymous namespace)::RunnableHolder::run() build_docker/../contrib/poco/Foundation/src/Thread.cpp:55:11 (clickhouse+0x20ce664f) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #11 Poco::ThreadImpl::runnableEntry(void*) build_docker/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27 (clickhouse+0x20ce4c87) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)

  Previous read of size 8 at 0x7b6800590188 by thread T359 (mutexes: write M0, write M1):
    #0 std::__1::vector<std::__1::shared_ptr<DB::IProcessor>, std::__1::allocator<std::__1::shared_ptr<DB::IProcessor>>>::begin() build_docker/../contrib/libcxx/include/vector:1408:30 (clickhouse+0x1d2af3d7) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #1 DB::ExecutingGraph::cancel() build_docker/../src/Processors/Executors/ExecutingGraph.cpp:389:27 (clickhouse+0x1d2af3d7)
    #2 DB::PipelineExecutor::cancel() build_docker/../src/Processors/Executors/PipelineExecutor.cpp:73:12 (clickhouse+0x1d2a6aa0) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #3 DB::QueryStatus::cancelQuery(bool) build_docker/../src/Interpreters/ProcessList.cpp:382:12 (clickhouse+0x1bed782f) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #4 DB::ProcessList::sendCancelToQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, bool) build_docker/../src/Interpreters/ProcessList.cpp:486:18 (clickhouse+0x1bed782f)
    #5 DB::SyncKillQuerySource::generate() build_docker/../src/Interpreters/InterpreterKillQueryQuery.cpp:164:42 (clickhouse+0x1bdc15d4) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #6 DB::ISource::tryGenerate() build_docker/../src/Processors/ISource.cpp:124:18 (clickhouse+0x1d290d54) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #7 DB::ISource::work() build_docker/../src/Processors/ISource.cpp:94:26 (clickhouse+0x1d290789) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #8 DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:47:26 (clickhouse+0x1d2b65e8) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #9 DB::ExecutionThreadContext::executeTask() build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:92:9 (clickhouse+0x1d2b65e8)
    #10 DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:228:26 (clickhouse+0x1d2a7aa0) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #11 DB::PipelineExecutor::executeSingleThread(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:194:5 (clickhouse+0x1d2a6dc2) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #12 DB::PipelineExecutor::executeImpl(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:367:9 (clickhouse+0x1d2a6dc2)
    #13 DB::PipelineExecutor::execute(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:89:9 (clickhouse+0x1d2a6b99) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #14 DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) build_docker/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:79:24 (clickhouse+0x1d2babd4) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #15 DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const build_docker/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:107:13 (clickhouse+0x1d2babd4)
    #16 decltype(static_cast<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) build_docker/../contrib/libcxx/include/type_traits:3648:23 (clickhouse+0x1d2babd4)
    #17 decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/tuple:1595:1 (clickhouse+0x1d2babd4)
    #18 decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&) build_docker/../contrib/libcxx/include/tuple:1604:1 (clickhouse+0x1d2babd4)
    #19 ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()::operator()() build_docker/../src/Common/ThreadPool.h:193:13 (clickhouse+0x1d2babd4)
    #20 decltype(static_cast<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) build_docker/../contrib/libcxx/include/type_traits:3640:23 (clickhouse+0x1d2babd4)
    #21 void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&) build_docker/../contrib/libcxx/include/__functional/invoke.h:61:9 (clickhouse+0x1d2babd4)
    #22 std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>::operator()() build_docker/../contrib/libcxx/include/__functional/function.h:230:12 (clickhouse+0x1d2babd4)
    #23 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) build_docker/../contrib/libcxx/include/__functional/function.h:711:16 (clickhouse+0x1d2babd4)
    #24 std::__1::__function::__policy_func<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:843:16 (clickhouse+0x1326d54e) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #25 std::__1::function<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:1184:12 (clickhouse+0x1326d54e)
    #26 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) build_docker/../src/Common/ThreadPool.cpp:294:17 (clickhouse+0x1326d54e)
    #27 void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/../src/Common/ThreadPool.cpp:144:73 (clickhouse+0x13271b51) (BuildId: 34dcdceaa0c18fb90c4378c415f7da4e0b1622f0)
    #28 decltype(static_cast<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_docker/../contrib/libcxx/include/type_traits:3640:23 (clickhouse+0x13271b51)
    #29 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/thread:282:5 (clickhouse+0x13271b51)
    #30 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>>(void*) build_docker/../contrib/libcxx/include/thread:293:5 (clickhouse+0x13271b51)
```

https://s3.amazonaws.com/clickhouse-test-reports/42190/352f57d1058def63fd35e3e7f9aa7c318d9d711d/stateless_tests__tsan__[1/3].html
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
