{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 15731,
  "instance_id": "ClickHouse__ClickHouse-15731",
  "issue_numbers": [
    "15237"
  ],
  "base_commit": "403a5320f5d01e4f44a997b29a81fe8f83994e0a",
  "patch": "diff --git a/src/Interpreters/ActionsVisitor.cpp b/src/Interpreters/ActionsVisitor.cpp\nindex 8905eef45286..344107366054 100644\n--- a/src/Interpreters/ActionsVisitor.cpp\n+++ b/src/Interpreters/ActionsVisitor.cpp\n@@ -74,7 +74,7 @@ static size_t getTypeDepth(const DataTypePtr & type)\n }\n \n template<typename Collection>\n-static Block createBlockFromCollection(const Collection & collection, const DataTypes & types, const Context & context)\n+static Block createBlockFromCollection(const Collection & collection, const DataTypes & types, bool transform_null_in)\n {\n     size_t columns_num = types.size();\n     MutableColumns columns(columns_num);\n@@ -87,7 +87,8 @@ static Block createBlockFromCollection(const Collection & collection, const Data\n         if (columns_num == 1)\n         {\n             auto field = convertFieldToType(value, *types[0]);\n-            if (!field.isNull() || context.getSettingsRef().transform_null_in)\n+            bool need_insert_null = transform_null_in && types[0]->isNullable();\n+            if (!field.isNull() || need_insert_null)\n                 columns[0]->insert(std::move(field));\n         }\n         else\n@@ -110,7 +111,8 @@ static Block createBlockFromCollection(const Collection & collection, const Data\n             for (; i < tuple_size; ++i)\n             {\n                 tuple_values[i] = convertFieldToType(tuple[i], *types[i]);\n-                if (tuple_values[i].isNull() && !context.getSettingsRef().transform_null_in)\n+                bool need_insert_null = transform_null_in && types[i]->isNullable();\n+                if (tuple_values[i].isNull() && !need_insert_null)\n                     break;\n             }\n \n@@ -155,6 +157,7 @@ static Block createBlockFromAST(const ASTPtr & node, const DataTypes & types, co\n     DataTypePtr tuple_type;\n     Row tuple_values;\n     const auto & list = node->as<ASTExpressionList &>();\n+    bool transform_null_in = context.getSettingsRef().transform_null_in;\n     for (const auto & elem : list.children)\n     {\n         if (num_columns == 1)\n@@ -162,8 +165,9 @@ static Block createBlockFromAST(const ASTPtr & node, const DataTypes & types, co\n             /// One column at the left of IN.\n \n             Field value = extractValueFromNode(elem, *types[0], context);\n+            bool need_insert_null = transform_null_in && types[0]->isNullable();\n \n-            if (!value.isNull() || context.getSettingsRef().transform_null_in)\n+            if (!value.isNull() || need_insert_null)\n                 columns[0]->insert(value);\n         }\n         else if (elem->as<ASTFunction>() || elem->as<ASTLiteral>())\n@@ -217,9 +221,11 @@ static Block createBlockFromAST(const ASTPtr & node, const DataTypes & types, co\n                 Field value = tuple ? convertFieldToType((*tuple)[i], *types[i])\n                                     : extractValueFromNode(func->arguments->children[i], *types[i], context);\n \n+                bool need_insert_null = transform_null_in && types[i]->isNullable();\n+\n                 /// If at least one of the elements of the tuple has an impossible (outside the range of the type) value,\n                 ///  then the entire tuple too.\n-                if (value.isNull() && !context.getSettings().transform_null_in)\n+                if (value.isNull() && !need_insert_null)\n                     break;\n \n                 tuple_values[i] = value;\n@@ -254,20 +260,22 @@ Block createBlockForSet(\n     };\n \n     Block block;\n+    bool tranform_null_in = context.getSettingsRef().transform_null_in;\n+\n     /// 1 in 1; (1, 2) in (1, 2); identity(tuple(tuple(tuple(1)))) in tuple(tuple(tuple(1))); etc.\n     if (left_type_depth == right_type_depth)\n     {\n         Array array{right_arg_value};\n-        block = createBlockFromCollection(array, set_element_types, context);\n+        block = createBlockFromCollection(array, set_element_types, tranform_null_in);\n     }\n     /// 1 in (1, 2); (1, 2) in ((1, 2), (3, 4)); etc.\n     else if (left_type_depth + 1 == right_type_depth)\n     {\n         auto type_index = right_arg_type->getTypeId();\n         if (type_index == TypeIndex::Tuple)\n-            block = createBlockFromCollection(DB::get<const Tuple &>(right_arg_value), set_element_types, context);\n+            block = createBlockFromCollection(DB::get<const Tuple &>(right_arg_value), set_element_types, tranform_null_in);\n         else if (type_index == TypeIndex::Array)\n-            block = createBlockFromCollection(DB::get<const Array &>(right_arg_value), set_element_types, context);\n+            block = createBlockFromCollection(DB::get<const Array &>(right_arg_value), set_element_types, tranform_null_in);\n         else\n             throw_unsupported_type(right_arg_type);\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01507_transform_null_in.reference b/tests/queries/0_stateless/01507_transform_null_in.reference\nnew file mode 100644\nindex 000000000000..d7cc69cea122\n--- /dev/null\n+++ b/tests/queries/0_stateless/01507_transform_null_in.reference\n@@ -0,0 +1,8 @@\n+1\n+0\n+1\n+1\n+0\n+0\n+1\n+1\ndiff --git a/tests/queries/0_stateless/01507_transform_null_in.sql b/tests/queries/0_stateless/01507_transform_null_in.sql\nnew file mode 100644\nindex 000000000000..2377ccf43eb5\n--- /dev/null\n+++ b/tests/queries/0_stateless/01507_transform_null_in.sql\n@@ -0,0 +1,10 @@\n+SET transform_null_in = 1;\n+\n+SELECT NULL IN NULL;\n+SELECT 1 IN NULL;\n+SELECT 1 IN (1, NULL);\n+SELECT 1 IN tuple(1, NULL);\n+SELECT (1, 2) IN (1, NULL);\n+SELECT (1, 2) IN tuple(1, NULL);\n+SELECT (1, 2) IN ((1, NULL), (1, 2));\n+SELECT (1, NULL) IN (1, NULL);\n",
  "problem_statement": "src/Core/Field.h:772: Assertion `target == which || (isInt64FieldType(target) && isInt64FieldType(which)) || target == Field::Types::Decimal64' failed.\nhttps://clickhouse-test-reports.s3.yandex.net/0/813a876e9314e582dd2d3938cdc1f76042687ab0/fuzzer/server.log\r\n\r\n```\r\n2020.09.24 17:13:56.484241 [ 86 ] {8663ce68-e9a1-43c0-b6f0-c4feffe881b7} <Debug> executeQuery: (from [::1]:40714) SELECT range(NULL, -2) FROM null_in WHERE (i IN range(range(range('-92233720368547758.0(', '257', NULL), 255), 1025, NULL)) NOT IN (NULL)\r\nclickhouse-server: ../src/Core/Field.h:772: T &DB::Field::get() [T = unsigned long]: Assertion `target == which || (isInt64FieldType(target) && isInt64FieldType(which)) || target == Field::Types::Decimal64' failed.\r\n2020.09.24 17:13:56.484241 [ 86 ] {8663ce68-e9a1-43c0-b6f0-c4feffe881b7} <Debug> executeQuery: (from [::1]:40714) SELECT range(NULL, -2) FROM null_in WHERE (i IN range(range(range('-92233720368547758.0(', '257', NULL), 255), 1025, NULL)) NOT IN (NULL)\r\nclickhouse-server: ../src/Core/Field.h:772: T &DB::Field::get() [T = unsigned long]: Assertion `target == which || (isInt64FieldType(target) && isInt64FieldType(which)) || target == Field::Types::Decimal64' failed.\r\n2020.09.24 17:13:56.490687 [ 53 ] {} <Trace> BaseDaemon: Received signal 6\r\n2020.09.24 17:13:56.491053 [ 251 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.09.24 17:13:56.491674 [ 251 ] {} <Fatal> BaseDaemon: (version 20.10.1.4746 (official build), build id: F32360D3866E261C) (from thread 86) (query_id: 8663ce68-e9a1-43c0-b6f0-c4feffe881b7) Received signal Aborted (6)\r\n2020.09.24 17:13:56.491863 [ 251 ] {} <Fatal> BaseDaemon: \r\n2020.09.24 17:13:56.492059 [ 251 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f9596e8ef47 0x7f9596e908b1 0x7f9596e8042a 0x7f9596e804a2 0xf9ad59e 0xf9ace6d 0xfb82ab5 0x11764077 0x18888484 0x18881503 0x18880b41 0x188862f4 0x18883118 0x188824f7 0x188697ab 0x1886087d 0x18863090 0x18866184 0x185aff8b 0x185aced4 0x185a9b1b 0x185a89ec 0x188a8ff1 0x188a7b3d 0x184d2f25 0x184d1e4f 0x18ab1d6e 0x18ab0f3a\r\n2020.09.24 17:13:56.492424 [ 251 ] {} <Fatal> BaseDaemon: 4. /build/glibc-2ORdQG/glibc-2.27/signal/../sysdeps/unix/sysv/linux/raise.c:51: __GI_raise @ 0x3ef47 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n2020.09.24 17:13:56.492693 [ 251 ] {} <Fatal> BaseDaemon: 5. /build/glibc-2ORdQG/glibc-2.27/stdlib/abort.c:81: abort @ 0x408b1 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n2020.09.24 17:13:56.492942 [ 251 ] {} <Fatal> BaseDaemon: 6. /build/glibc-2ORdQG/glibc-2.27/assert/assert.c:89: __assert_fail_base @ 0x3042a in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n2020.09.24 17:13:56.493343 [ 251 ] {} <Fatal> BaseDaemon: 7. ? @ 0x304a2 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n2020.09.24 17:13:56.493988 [ 251 ] {} <Fatal> BaseDaemon: 8. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:0: unsigned long& DB::Field::get<unsigned long>() @ 0xf9ad59e in /workspace/clickhouse\r\n2020.09.24 17:13:56.494626 [ 251 ] {} <Fatal> BaseDaemon: 9. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:400: unsigned long const& DB::Field::get<unsigned long>() const @ 0xf9ace6d in /workspace/clickhouse\r\n2020.09.24 17:13:56.497509 [ 251 ] {} <Fatal> BaseDaemon: 10. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:790: unsigned long DB::get<unsigned long>(DB::Field const&) @ 0xfb82ab5 in /workspace/clickhouse\r\n2020.09.24 17:13:56.504551 [ 251 ] {} <Fatal> BaseDaemon: 11. /build/obj-x86_64-linux-gnu/../src/Columns/ColumnVector.h:269: DB::ColumnVector<char8_t>::insert(DB::Field const&) @ 0x11764077 in /workspace/clickhouse\r\n2020.09.24 17:13:56.542958 [ 251 ] {} <Fatal> BaseDaemon: 12. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:90: DB::Block DB::createBlockFromCollection<DB::Array>(DB::Array const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::Context const&) @ 0x18888484 in /workspace/clickhouse\r\n2020.09.24 17:13:56.581148 [ 251 ] {} <Fatal> BaseDaemon: 13. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:264: DB::createBlockForSet(std::__1::shared_ptr<DB::IDataType const> const&, std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::Context const&) @ 0x18881503 in /workspace/clickhouse\r\n2020.09.24 17:13:56.619364 [ 251 ] {} <Fatal> BaseDaemon: 14. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:373: DB::makeExplicitSet(DB::ASTFunction const*, DB::Block const&, bool, DB::Context const&, DB::SizeLimits const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >&) @ 0x18880b41 in /workspace/clickhouse\r\n2020.09.24 17:13:56.657650 [ 251 ] {} <Fatal> BaseDaemon: 15. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:918: DB::ActionsMatcher::makeSet(DB::ASTFunction const&, DB::ActionsMatcher::Data&, bool) @ 0x188862f4 in /workspace/clickhouse\r\n2020.09.24 17:13:56.695346 [ 251 ] {} <Fatal> BaseDaemon: 16. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:578: DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x18883118 in /workspace/clickhouse\r\n2020.09.24 17:13:56.731187 [ 251 ] {} <Fatal> BaseDaemon: 17. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:508: DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x188824f7 in /workspace/clickhouse\r\n2020.09.24 17:13:56.767313 [ 251 ] {} <Fatal> BaseDaemon: 18. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:32: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x188697ab in /workspace/clickhouse\r\n2020.09.24 17:13:56.803584 [ 251 ] {} <Fatal> BaseDaemon: 19. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:384: DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ExpressionActions>&, bool) @ 0x1886087d in /workspace/clickhouse\r\n2020.09.24 17:13:56.839023 [ 251 ] {} <Fatal> BaseDaemon: 20. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:722: DB::SelectQueryExpressionAnalyzer::appendWhere(DB::ExpressionActionsChain&, bool) @ 0x18863090 in /workspace/clickhouse\r\n2020.09.24 17:13:56.875227 [ 251 ] {} <Fatal> BaseDaemon: 21. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:1098: DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&) @ 0x18866184 in /workspace/clickhouse\r\n2020.09.24 17:13:56.911693 [ 251 ] {} <Fatal> BaseDaemon: 22. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:507: DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x185aff8b in /workspace/clickhouse\r\n2020.09.24 17:13:56.947188 [ 251 ] {} <Fatal> BaseDaemon: 23. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:404: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const @ 0x185aced4 in /workspace/clickhouse\r\n2020.09.24 17:13:56.983118 [ 251 ] {} <Fatal> BaseDaemon: 24. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:407: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0x185a9b1b in /workspace/clickhouse\r\n2020.09.24 17:13:57.019267 [ 251 ] {} <Fatal> BaseDaemon: 25. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:146: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x185a89ec in /workspace/clickhouse\r\n2020.09.24 17:13:57.055052 [ 251 ] {} <Fatal> BaseDaemon: 26. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3028: std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x188a8ff1 in /workspace/clickhouse\r\n2020.09.24 17:13:57.092312 [ 251 ] {} <Fatal> BaseDaemon: 27. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:84: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x188a7b3d in /workspace/clickhouse\r\n2020.09.24 17:13:57.103866 [ 56 ] {} <Trace> SystemLog (system.query_thread_log): Flushing system log, 1590 entries to flush\r\n2020.09.24 17:13:57.127220 [ 251 ] {} <Fatal> BaseDaemon: 28. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3028: std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&&) @ 0x184d2f25 in /workspace/clickhouse\r\n2020.09.24 17:13:57.159642 [ 56 ] {} <Debug> DiskLocal: Reserving 1.55 MiB on disk `default`, having unreserved 1.16 TiB.\r\n2020.09.24 17:13:57.161931 [ 251 ] {} <Fatal> BaseDaemon: 29. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterFactory.cpp:107: DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::QueryProcessingStage::Enum) @ 0x184d1e4f in /workspace/clickhouse\r\n2020.09.24 17:13:57.175961 [ 56 ] {} <Trace> system.query_thread_log (aa0a7011-6f49-4d83-a0ae-7e91e566994b): Renaming temporary part tmp_insert_202009_72_72_0 to 202009_72_72_0.\r\n2020.09.24 17:13:57.180195 [ 56 ] {} <Trace> SystemLog (system.query_thread_log): Flushed system log\r\n2020.09.24 17:13:57.201434 [ 251 ] {} <Fatal> BaseDaemon: 30. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:389: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x18ab1d6e in /workspace/clickhouse\r\n2020.09.24 17:13:57.239028 [ 251 ] {} <Fatal> BaseDaemon: 31. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:696: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x18ab0f3a in /workspace/clickhouse\r\n```\n",
  "hints_text": "looks similar, but does not reproduces easily : https://clickhouse-test-reports.s3.yandex.net/15717/cbf43a870de1733b15edf43178af9e38532f49f1/fuzzer/report.html#fail1\r\n```\r\n2020.10.07 16:21:12.480994 [ 98 ] {952ca530-fa8b-413e-9548-6d5b74b02475} <Debug> executeQuery: (from [::1]:33264) SELECT '922337203685477580.7' IN (NULL), count() = 1024 FROM null_in WHERE i IN (NULL)\r\nclickhouse-server: ../src/Core/Field.h:772: T &DB::Field::get() [T = const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> &]: Assertion `target == which || (isInt64FieldType(target) && isInt64FieldType(which)) || target == Field::Types::Decimal64' failed.\r\n2020.10.07 16:21:12.483469 [ 64 ] {} <Trace> BaseDaemon: Received signal 6\r\n2020.10.07 16:21:12.483849 [ 556 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.10.07 16:21:12.484326 [ 556 ] {} <Fatal> BaseDaemon: (version 20.10.1.4853, build id: AC403C0B7E813EB1) (from thread 98) (query_id: 952ca530-fa8b-413e-9548-6d5b74b02475) Received signal Aborted (6)\r\n2020.10.07 16:21:12.484516 [ 556 ] {} <Fatal> BaseDaemon: \r\n2020.10.07 16:21:12.484740 [ 556 ] {} <Fatal> BaseDaemon: Stack trace: 0x7fe593f30f47 0x7fe593f328b1 0x7fe593f2242a 0x7fe593f224a2 0x11a8e375 0x1559b0fd 0x15e92075 0x15e91791 0x189adf44 0x189ad8e3 0x189b14c2 0x189b66b0 0x189b3382 0x189b2ac7 0x1899652b 0x189a8236 0x1899653d 0x189a8236 0x1899653d 0x1898d476 0x18992164 0x191a0572 0x193c95a2 0x186d7e8d 0x186d5f67 0x186d4e3c 0x189d7311 0x189d5e5d\r\n2020.10.07 16:21:12.485151 [ 556 ] {} <Fatal> BaseDaemon: 4. /build/glibc-2ORdQG/glibc-2.27/signal/../sysdeps/unix/sysv/linux/raise.c:51: raise @ 0x3ef47 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n2020.10.07 16:21:12.485426 [ 556 ] {} <Fatal> BaseDaemon: 5. /build/glibc-2ORdQG/glibc-2.27/stdlib/abort.c:81: abort @ 0x408b1 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n2020.10.07 16:21:12.485679 [ 556 ] {} <Fatal> BaseDaemon: 6. /build/glibc-2ORdQG/glibc-2.27/assert/assert.c:89: __assert_fail_base @ 0x3042a in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n2020.10.07 16:21:12.486121 [ 556 ] {} <Fatal> BaseDaemon: 7. ? @ 0x304a2 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n2020.10.07 16:21:12.494501 [ 556 ] {} <Fatal> BaseDaemon: 8. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:0: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const& DB::Field::get<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>() @ 0x11a8e375 in /workspace/clickhouse\r\n2020.10.07 16:21:12.532628 [ 556 ] {} <Fatal> BaseDaemon: 9. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:400: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const& const& DB::Field::get<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>() const @ 0x1559b0fd in /workspace/clickhouse\r\n2020.10.07 16:21:12.561517 [ 556 ] {} <Fatal> BaseDaemon: 10. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:790: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const& DB::get<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(DB::Field const&) @ 0x15e92075 in /workspace/clickhouse\r\n2020.10.07 16:21:12.588754 [ 556 ] {} <Fatal> BaseDaemon: 11. /build/obj-x86_64-linux-gnu/../src/Columns/ColumnString.h:109: DB::ColumnString::insert(DB::Field const&) @ 0x15e91791 in /workspace/clickhouse\r\n2020.10.07 16:21:12.629986 [ 556 ] {} <Fatal> BaseDaemon: 12. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:91: DB::Block DB::createBlockFromCollection<DB::Array>(DB::Array const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::Context const&) @ 0x189adf44 in /workspace/clickhouse\r\n2020.10.07 16:21:12.671313 [ 556 ] {} <Fatal> BaseDaemon: 13. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:261: DB::createBlockForSet(std::__1::shared_ptr<DB::IDataType const> const&, std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::Context const&) @ 0x189ad8e3 in /workspace/clickhouse\r\n2020.10.07 16:21:12.713025 [ 556 ] {} <Fatal> BaseDaemon: 14. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:367: DB::makeExplicitSet(DB::ASTFunction const*, DB::ActionsDAG const&, bool, DB::Context const&, DB::SizeLimits const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >&) @ 0x189b14c2 in /workspace/clickhouse\r\n2020.10.07 16:21:12.754474 [ 556 ] {} <Fatal> BaseDaemon: 15. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:963: DB::ActionsMatcher::makeSet(DB::ASTFunction const&, DB::ActionsMatcher::Data&, bool) @ 0x189b66b0 in /workspace/clickhouse\r\n2020.10.07 16:21:12.795490 [ 556 ] {} <Fatal> BaseDaemon: 16. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:615: DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x189b3382 in /workspace/clickhouse\r\n2020.10.07 16:21:12.836583 [ 556 ] {} <Fatal> BaseDaemon: 17. /build/obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:552: DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x189b2ac7 in /workspace/clickhouse\r\n2020.10.07 16:21:12.877911 [ 556 ] {} <Fatal> BaseDaemon: 18. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:32: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x1899652b in /workspace/clickhouse\r\n2020.10.07 16:21:12.922701 [ 556 ] {} <Fatal> BaseDaemon: 19. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:45: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visitChildren(std::__1::shared_ptr<DB::IAST> const&) @ 0x189a8236 in /workspace/clickhouse\r\n2020.10.07 16:21:12.964075 [ 556 ] {} <Fatal> BaseDaemon: 20. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:35: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x1899653d in /workspace/clickhouse\r\n2020.10.07 16:21:13.009545 [ 556 ] {} <Fatal> BaseDaemon: 21. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:45: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visitChildren(std::__1::shared_ptr<DB::IAST> const&) @ 0x189a8236 in /workspace/clickhouse\r\n2020.10.07 16:21:13.050883 [ 556 ] {} <Fatal> BaseDaemon: 22. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:35: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x1899653d in /workspace/clickhouse\r\n2020.10.07 16:21:13.091957 [ 556 ] {} <Fatal> BaseDaemon: 23. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:397: DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x1898d476 in /workspace/clickhouse\r\n2020.10.07 16:21:13.132979 [ 556 ] {} <Fatal> BaseDaemon: 24. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:1010: DB::ExpressionAnalyzer::getConstActions() @ 0x18992164 in /workspace/clickhouse\r\n2020.10.07 16:21:13.157266 [ 92 ] {} <Debug> DNSResolver: Updating DNS cache\r\n2020.10.07 16:21:13.181177 [ 556 ] {} <Fatal> BaseDaemon: 25. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.cpp:359: DB::KeyCondition::getBlockWithConstants(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::TreeRewriterResult const> const&, DB::Context const&) @ 0x191a0572 in /workspace/clickhouse\r\n2020.10.07 16:21:13.231142 [ 556 ] {} <Fatal> BaseDaemon: 26. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeWhereOptimizer.cpp:40: DB::MergeTreeWhereOptimizer::MergeTreeWhereOptimizer(DB::SelectQueryInfo&, DB::Context const&, DB::MergeTreeData const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, Poco::Logger*) @ 0x193c95a2 in /workspace/clickhouse\r\n2020.10.07 16:21:13.272665 [ 556 ] {} <Fatal> BaseDaemon: 27. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:337: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const @ 0x186d7e8d in /workspace/clickhouse\r\n2020.10.07 16:21:13.314212 [ 556 ] {} <Fatal> BaseDaemon: 28. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:402: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0x186d5f67 in /workspace/clickhouse\r\n2020.10.07 16:21:13.355556 [ 556 ] {} <Fatal> BaseDaemon: 29. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:145: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x186d4e3c in /workspace/clickhouse\r\n2020.10.07 16:21:13.397346 [ 556 ] {} <Fatal> BaseDaemon: 30. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3028: std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x189d7311 in /workspace/clickhouse\r\n2020.10.07 16:21:13.438697 [ 556 ] {} <Fatal> BaseDaemon: 31. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:84: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x189d5e5d in /workspace/clickhouse\r\n```\r\n\r\nshould be something like (it doesn't crash):\r\n```\r\nCREATE TABLE null_in (dt DateTime, idx int, i Nullable(int), s Nullable(String)) ENGINE = MergeTree() PARTITION BY dt ORDER BY idx;\r\nINSERT INTO null_in VALUES (1, 1, 1, '1') (2, 2, NULL, NULL) (3, 3, 3, '3') (4, 4, NULL, NULL) (5, 5, 5, '5');\r\nSELECT '922337203685477580.7' IN (NULL), count() = 1024 FROM null_in WHERE i IN (NULL);\r\n```",
  "created_at": "2020-10-07T15:40:17Z",
  "modified_files": [
    "src/Interpreters/ActionsVisitor.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01507_transform_null_in.reference",
    "b/tests/queries/0_stateless/01507_transform_null_in.sql"
  ]
}