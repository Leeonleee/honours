{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 9652,
  "instance_id": "ClickHouse__ClickHouse-9652",
  "issue_numbers": [
    "9645"
  ],
  "base_commit": "23c617cfeaeba00bdb30a134ff87516e47ba5d31",
  "patch": "diff --git a/dbms/src/Storages/MergeTree/ReplicatedMergeTreeLogEntry.cpp b/dbms/src/Storages/MergeTree/ReplicatedMergeTreeLogEntry.cpp\nindex 83532a8276db..7aac3128930c 100644\n--- a/dbms/src/Storages/MergeTree/ReplicatedMergeTreeLogEntry.cpp\n+++ b/dbms/src/Storages/MergeTree/ReplicatedMergeTreeLogEntry.cpp\n@@ -70,8 +70,9 @@ void ReplicatedMergeTreeLogEntryData::writeText(WriteBuffer & out) const\n                 << source_parts.at(0) << \"\\n\"\n                 << \"to\\n\"\n                 << new_part_name;\n-            out << \"\\nalter_version\\n\";\n-            out << alter_version;\n+\n+            if (isAlterMutation())\n+                out << \"\\nalter_version\\n\" << alter_version;\n             break;\n \n         case ALTER_METADATA: /// Just make local /metadata and /columns consistent with global\n@@ -127,6 +128,7 @@ void ReplicatedMergeTreeLogEntryData::readText(ReadBuffer & in)\n \n     in >> type_str >> \"\\n\";\n \n+    bool trailing_newline_found = false;\n     if (type_str == \"get\")\n     {\n         type = GET_PART;\n@@ -177,7 +179,13 @@ void ReplicatedMergeTreeLogEntryData::readText(ReadBuffer & in)\n            >> \"to\\n\"\n            >> new_part_name;\n         source_parts.push_back(source_part);\n-        in >> \"\\nalter_version\\n\" >> alter_version;\n+\n+        in >> \"\\n\";\n+\n+        if (in.eof())\n+            trailing_newline_found = true;\n+        else if (checkString(\"alter_version\\n\", in))\n+            in >> alter_version;\n     }\n     else if (type_str == \"alter\")\n     {\n@@ -198,7 +206,9 @@ void ReplicatedMergeTreeLogEntryData::readText(ReadBuffer & in)\n         in.readStrict(&metadata_str[0], metadata_size);\n     }\n \n-    in >> \"\\n\";\n+    if (!trailing_newline_found)\n+        in >> \"\\n\";\n+\n     if (checkString(\"part_type: \", in))\n     {\n         String part_type_str;\ndiff --git a/dbms/src/Storages/MergeTree/ReplicatedMergeTreeMutationEntry.cpp b/dbms/src/Storages/MergeTree/ReplicatedMergeTreeMutationEntry.cpp\nindex ea744b8f91e5..b2299b2cbbdc 100644\n--- a/dbms/src/Storages/MergeTree/ReplicatedMergeTreeMutationEntry.cpp\n+++ b/dbms/src/Storages/MergeTree/ReplicatedMergeTreeMutationEntry.cpp\n@@ -2,6 +2,7 @@\n #include <IO/Operators.h>\n #include <IO/ReadBufferFromString.h>\n #include <IO/WriteBufferFromString.h>\n+#include <IO/ReadHelpers.h>\n \n \n namespace DB\n@@ -52,7 +53,8 @@ void ReplicatedMergeTreeMutationEntry::readText(ReadBuffer & in)\n \n     in >> \"commands: \";\n     commands.readText(in);\n-    in >> \"\\nalter version: \" >> alter_version;\n+    if (checkString(\"\\nalter version: \", in))\n+        in >> alter_version;\n }\n \n String ReplicatedMergeTreeMutationEntry::toString() const\n",
  "test_patch": "diff --git a/dbms/tests/integration/test_version_update_after_mutation/__init__.py b/dbms/tests/integration/test_version_update_after_mutation/__init__.py\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/dbms/tests/integration/test_version_update_after_mutation/test.py b/dbms/tests/integration/test_version_update_after_mutation/test.py\nnew file mode 100644\nindex 000000000000..3f2063bdddb0\n--- /dev/null\n+++ b/dbms/tests/integration/test_version_update_after_mutation/test.py\n@@ -0,0 +1,74 @@\n+import pytest\n+import time\n+\n+from helpers.cluster import ClickHouseCluster\n+from helpers.test_tools import assert_eq_with_retry\n+\n+cluster = ClickHouseCluster(__file__)\n+\n+node1 = cluster.add_instance('node1', with_zookeeper=True, image='yandex/clickhouse-server:20.1.6.3', with_installed_binary=True, stay_alive=True)\n+node2 = cluster.add_instance('node2', with_zookeeper=True, image='yandex/clickhouse-server:20.1.6.3', with_installed_binary=True, stay_alive=True)\n+node3 = cluster.add_instance('node3', with_zookeeper=True, image='yandex/clickhouse-server:20.1.6.3', with_installed_binary=True, stay_alive=True)\n+\n+@pytest.fixture(scope=\"module\")\n+def start_cluster():\n+    try:\n+        cluster.start()\n+\n+        yield cluster\n+    finally:\n+        cluster.shutdown()\n+\n+\n+def test_mutate_and_upgrade(start_cluster):\n+    for node in [node1, node2]:\n+        node.query(\"CREATE TABLE mt (EventDate Date, id UInt64) ENGINE ReplicatedMergeTree('/clickhouse/tables/t', '{}') ORDER BY tuple()\".format(node.name))\n+\n+    node1.query(\"INSERT INTO mt VALUES ('2020-02-13', 1), ('2020-02-13', 2);\")\n+\n+    node1.query(\"ALTER TABLE mt DELETE WHERE id = 2\", settings={\"mutations_sync\": \"2\"})\n+    node2.query(\"SYSTEM SYNC REPLICA mt\", timeout=5)\n+\n+    node1.restart_with_latest_version()\n+    node2.restart_with_latest_version()\n+\n+    node2.query(\"INSERT INTO mt VALUES ('2020-02-13', 3);\")\n+\n+    node1.query(\"SYSTEM SYNC REPLICA mt\", timeout=5)\n+\n+    assert node1.query(\"SELECT COUNT() FROM mt\") == \"2\\n\"\n+    assert node2.query(\"SELECT COUNT() FROM mt\") == \"2\\n\"\n+\n+    node1.query(\"INSERT INTO mt VALUES ('2020-02-13', 4);\")\n+\n+    node2.query(\"SYSTEM SYNC REPLICA mt\", timeout=5)\n+\n+    assert node1.query(\"SELECT COUNT() FROM mt\") == \"3\\n\"\n+    assert node2.query(\"SELECT COUNT() FROM mt\") == \"3\\n\"\n+\n+    node2.query(\"ALTER TABLE mt DELETE WHERE id = 3\", settings={\"mutations_sync\": \"2\"})\n+\n+    node1.query(\"SYSTEM SYNC REPLICA mt\", timeout=5)\n+\n+    assert node1.query(\"SELECT COUNT() FROM mt\") == \"2\\n\"\n+    assert node2.query(\"SELECT COUNT() FROM mt\") == \"2\\n\"\n+\n+    node1.query(\"ALTER TABLE mt MODIFY COLUMN id String DEFAULT '0'\", settings={\"replication_alter_partitions_sync\": \"2\"})\n+\n+    node2.query(\"OPTIMIZE TABLE mt FINAL\")\n+\n+    assert node1.query(\"SELECT id FROM mt\") == \"1\\n4\\n\"\n+    assert node2.query(\"SELECT id FROM mt\") == \"1\\n4\\n\"\n+\n+\n+def test_upgrade_while_mutation(start_cluster):\n+    node3.query(\"CREATE TABLE mt1 (EventDate Date, id UInt64) ENGINE ReplicatedMergeTree('/clickhouse/tables/t1', 'node3') ORDER BY tuple()\")\n+\n+    node3.query(\"INSERT INTO mt1 select '2020-02-13', number from numbers(100000)\")\n+\n+    node3.query(\"SYSTEM STOP MERGES\")\n+    node3.query(\"ALTER TABLE mt1 DELETE WHERE id % 2 == 0\")\n+\n+    node3.restart_with_latest_version()\n+\n+    assert_eq_with_retry(node3, \"SELECT COUNT() from mt1\", \"50000\\n\")\n",
  "problem_statement": "Broken replication after upgrading to  20.3.2.1\n**Describe the bug or unexpected behaviour**\r\nBroken replication after upgrading to  20.3.2.1\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n`20.1.6.30` -> `20.3.2.1`\r\n\r\n* `CREATE TABLE` statements for all tables involved\r\nin version `20.1.6.30` (or before)\r\n``` sql\r\ncreate table tbl1 on cluster cluster (`eventDate` Date, id String )\r\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{shard}/tbl1', '{replica}') PARTITION BY  tuple() ORDER BY (eventDate)\r\ninsert into tbl1 values ('2020-02-13', '1'), ('2020-02-13', '2');\r\nalter table tbl1 delete where id ='2'\r\n```\r\nupgrade version to `20.3.2.1`. Look at err.logs. \r\n\r\n**Error message and/or stacktrace**\r\nIf applicable, add screenshots to help explain your problem.\r\n```\r\n2020.03.13 14:47:28.183757 [ 4584 ] {} <Information> default.tbl1 (ReplicatedMergeTreeQueue): Loading 1 mutation entries: 0000000000 - 0000000000\r\n2020.03.13 14:47:28.250097 [ 4584 ] {} <Error> default.tbl1 (ReplicatedMergeTreeRestartingThread): void DB::ReplicatedMergeTreeRestartingThread::run(): Code: 27, e.displayText() = DB::Exception: Cannot parse input: expected \\nalter version:  at end of stream., Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x10278d1c in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x8f02989 in /usr/bin/clickhouse\r\n2. ? @ 0x8f3970b in /usr/bin/clickhouse\r\n3. DB::assertString(char const*, DB::ReadBuffer&) @ 0x8f376fa in /usr/bin/clickhouse\r\n4. DB::ReplicatedMergeTreeMutationEntry::parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) @ 0xd8a3678 in /usr/bin/clickhouse\r\n5. DB::ReplicatedMergeTreeQueue::updateMutations(std::__1::shared_ptr<zkutil::ZooKeeper>, std::__1::function<void (Coordination::WatchResponse const&)>) @ 0xd8cb131 in /usr/bin/clickhouse\r\n6. DB::ReplicatedMergeTreeQueue::pullLogsToQueue(std::__1::shared_ptr<zkutil::ZooKeeper>, std::__1::function<void (Coordination::WatchResponse const&)>) @ 0xd8ccc5c in /usr/bin/clickhouse\r\n7. DB::ReplicatedMergeTreeRestartingThread::tryStartup() @ 0xd8e90d8 in /usr/bin/clickhouse\r\n8. DB::ReplicatedMergeTreeRestartingThread::run() @ 0xd8e99d8 in /usr/bin/clickhouse\r\n9. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0xce277c1 in /usr/bin/clickhouse\r\n10. DB::BackgroundSchedulePool::threadFunction() @ 0xce27d9a in /usr/bin/clickhouse\r\n11. ? @ 0xce27ed0 in /usr/bin/clickhouse\r\n12. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8f25b07 in /usr/bin/clickhouse\r\n13. ? @ 0x8f2400f in /usr/bin/clickhouse\r\n14. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n15. clone @ 0x12188f in /lib/x86_64-linux-gnu/libc-2.27.so\r\n (version 20.3.2.1 (official build))\r\n```\r\n\r\n* Replication broken:\r\n\r\n```sql\r\ninsert into tbl1 values ('2020-02-13', '3');\r\nselect count() from tbl1; \r\n-- 2\r\n-- on replica:\r\nselect count() from tbl1\r\n-- 1\r\n```\r\n\r\n\r\n\n",
  "hints_text": "look like related to #8701 \nYes, it's a compatibility bug. I will try to fix it in the next patch. Seems like you have old mutations in log and they are not parsed correctly.",
  "created_at": "2020-03-13T17:25:38Z",
  "modified_files": [
    "dbms/src/Storages/MergeTree/ReplicatedMergeTreeLogEntry.cpp",
    "dbms/src/Storages/MergeTree/ReplicatedMergeTreeMutationEntry.cpp"
  ],
  "modified_test_files": [
    "b/dbms/tests/integration/test_version_update_after_mutation/test.py"
  ]
}