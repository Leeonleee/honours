{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 39125,
  "instance_id": "ClickHouse__ClickHouse-39125",
  "issue_numbers": [
    "29759"
  ],
  "base_commit": "69de9ee0e83ecfad68465b2cfbab7e03aaf73c21",
  "patch": "diff --git a/src/Processors/Transforms/buildPushingToViewsChain.cpp b/src/Processors/Transforms/buildPushingToViewsChain.cpp\nindex b68ec5472801..a8890f5bccb4 100644\n--- a/src/Processors/Transforms/buildPushingToViewsChain.cpp\n+++ b/src/Processors/Transforms/buildPushingToViewsChain.cpp\n@@ -430,6 +430,7 @@ static QueryPipeline process(Block block, ViewRuntimeData & view, const ViewsDat\n     InterpreterSelectQuery select(view.query, local_context, SelectQueryOptions());\n     auto pipeline = select.buildQueryPipeline();\n     pipeline.resize(1);\n+    pipeline.dropTotalsAndExtremes();\n \n     /// Squashing is needed here because the materialized view query can generate a lot of blocks\n     /// even when only one block is inserted into the parent table (e.g. if the query is a GROUP BY\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01549_low_cardinality_mv_fuzz.reference b/tests/queries/0_stateless/01549_low_cardinality_mv_fuzz.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/01549_low_cardinality_mv_fuzz.sql b/tests/queries/0_stateless/01549_low_cardinality_mv_fuzz.sql\nnew file mode 100644\nindex 000000000000..32a6fccc8251\n--- /dev/null\n+++ b/tests/queries/0_stateless/01549_low_cardinality_mv_fuzz.sql\n@@ -0,0 +1,7 @@\n+set extremes = '1';\n+DROP TABLE IF EXISTS HASH_TEST_INSERT;\n+DROP TABLE IF EXISTS HASH_MV;\n+CREATE TABLE HASH_TEST_INSERT (`STR_VAL` String) ENGINE = Null;\n+CREATE MATERIALIZED VIEW HASH_MV (`HASH_VAL` UInt64, `STR_VAL` LowCardinality(String)) ENGINE = ReplacingMergeTree ORDER BY HASH_VAL AS SELECT xxHash64(STR_VAL) AS HASH_VAL, toLowCardinality(STR_VAL) AS STR_VAL FROM HASH_TEST_INSERT;\n+INSERT INTO HASH_TEST_INSERT VALUES ('a');\n+\n",
  "problem_statement": "Logical error: 'Block structure mismatch in Pipes stream: different types: Received signal 6 Received signal Aborted (6)\n<https://clickhouse-test-reports.s3.yandex.net/25969/86d31445fd0dd9bc086432f559d1089c3d4a7700/fuzzer_debug/report.html#fail1>\n",
  "hints_text": "https://s3.amazonaws.com/clickhouse-test-reports/0/da5fb43060a7d924b8474060c7aab4a4f93fc580/fuzzer_astfuzzertsan,actions//report.html\r\n\r\n```\r\n2022.05.12 13:34:10.080352 [ 166 ] {7ef9f7ba-3f9c-40ab-94b8-1d7c67407e16} <Debug> executeQuery: (from [::ffff:127.0.0.1]:56686) (comment: log_comment test) DROP TABLE IF EXISTS HASH_TEST_INSERT\r\n2022.05.12 13:34:10.084351 [ 166 ] {f2f222c7-0e07-40bb-a69c-186747c0228b} <Debug> executeQuery: (from [::ffff:127.0.0.1]:56686) (comment: log_comment test) CREATE TABLE HASH_TEST_INSERT (`STR_VAL` String) ENGINE = Null\r\n2022.05.12 13:34:10.084603 [ 166 ] {f2f222c7-0e07-40bb-a69c-186747c0228b} <Trace> ContextAccess (default): Access granted: CREATE TABLE ON default.HASH_TEST_INSERT\r\n2022.05.12 13:34:10.098560 [ 166 ] {05c35364-2fb3-4da4-8c01-47490f48855b} <Debug> executeQuery: (from [::ffff:127.0.0.1]:56686) (comment: log_comment test) CREATE MATERIALIZED VIEW HASH_MV (`HASH_VAL` UInt64, `STR_VAL` LowCardinality(String)) ENGINE = ReplacingMergeTree ORDER BY HASH_VAL AS SELECT xxHash64(STR_VAL) AS HASH_VAL, toLowCardinality(STR_VAL) AS STR_VAL FROM HASH_TEST_INSERT\r\n2022.05.12 13:34:10.124195 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Debug> executeQuery: (from [::ffff:127.0.0.1]:56686) (comment: log_comment test) INSERT INTO HASH_TEST_INSERT FORMAT Values\r\n2022.05.12 13:34:10.124584 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Trace> ContextAccess (default): Access granted: INSERT(STR_VAL) ON default.HASH_TEST_INSERT\r\n2022.05.12 13:34:10.126725 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Trace> ContextAccess (default): Access granted: SELECT(STR_VAL) ON default.HASH_TEST_INSERT\r\n2022.05.12 13:34:10.132959 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Trace> ContextAccess (default): Access granted: SELECT(STR_VAL) ON default.HASH_TEST_INSERT\r\n\r\n\r\n2022.05.12 13:34:10.124195 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Debug> executeQuery: (from [::ffff:127.0.0.1]:56686) (comment: log_comment test) INSERT INTO HASH_TEST_INSERT FORMAT Values\r\n2022.05.12 13:34:10.124584 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Trace> ContextAccess (default): Access granted: INSERT(STR_VAL) ON default.HASH_TEST_INSERT\r\n2022.05.12 13:34:10.126725 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Trace> ContextAccess (default): Access granted: SELECT(STR_VAL) ON default.HASH_TEST_INSERT\r\n2022.05.12 13:34:10.132959 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Trace> ContextAccess (default): Access granted: SELECT(STR_VAL) ON default.HASH_TEST_INSERT\r\n2022.05.12 13:34:10.133340 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n\r\n\r\n2022.05.12 13:34:10.135697 [ 166 ] {7da8a314-3a07-4cc3-a35c-555a05454e7d} <Fatal> : Logical error: 'Block structure mismatch in Pipes stream: different types:\r\nHASH_VAL UInt64 UInt64(size = 0)\r\nHASH_VAL LowCardinality(UInt64) ColumnLowCardinality(size = 0, UInt8(size = 0), ColumnUnique(size = 2, UInt64(size = 2)))'.\r\n```\r\n\r\ncc: @KochetovNicolai \nhttps://s3.amazonaws.com/clickhouse-test-reports/37969/1a0b5f33b3410a197822dfe90957db6f45c8f8b8/fuzzer_astfuzzerubsan,actions//report.html\r\n```\r\n2022.06.10 14:20:30.725052 [ 185 ] {88ba54bf-8a8b-40d5-91aa-808b70edcc6f} <Debug> executeQuery: (from [::ffff:127.0.0.1]:40916) INSERT INTO HASH_TEST_INSERT FORMAT Values (stage: Complete)\r\n2022.06.10 14:20:30.725112 [ 185 ] {88ba54bf-8a8b-40d5-91aa-808b70edcc6f} <Trace> ContextAccess (default): Access granted: INSERT(STR_VAL) ON default.HASH_TEST_INSERT\r\n2022.06.10 14:20:30.725524 [ 185 ] {88ba54bf-8a8b-40d5-91aa-808b70edcc6f} <Trace> ContextAccess (default): Access granted: SELECT(STR_VAL) ON default.HASH_TEST_INSERT\r\n2022.06.10 14:20:30.726659 [ 185 ] {88ba54bf-8a8b-40d5-91aa-808b70edcc6f} <Trace> ContextAccess (default): Access granted: SELECT(STR_VAL) ON default.HASH_TEST_INSERT\r\n2022.06.10 14:20:30.726726 [ 185 ] {88ba54bf-8a8b-40d5-91aa-808b70edcc6f} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2022.06.10 14:20:30.727090 [ 185 ] {88ba54bf-8a8b-40d5-91aa-808b70edcc6f} <Fatal> : Logical error: 'Block structure mismatch in Pipes stream: different types:\r\nHASH_VAL UInt64 UInt64(size = 0)\r\nHASH_VAL LowCardinality(UInt64) ColumnLowCardinality(size = 0, UInt8(size = 0), ColumnUnique(size = 2, UInt64(size = 2)))'.\r\n\r\n2022.06.10 14:20:30.727090 [ 185 ] {88ba54bf-8a8b-40d5-91aa-808b70edcc6f} <Fatal> : Logical error: 'Block structure mismatch in Pipes stream: different types:\r\n2022.06.10 14:23:15.159783 [ 514 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.06.10 14:23:15.159824 [ 514 ] {} <Fatal> BaseDaemon: (version 22.6.1.1, build id: E13B683E572030A6) (from thread 185) (query_id: 88ba54bf-8a8b-40d5-91aa-808b70edcc6f) (query: INSERT INTO HASH_TEST_INSERT FORMAT Values) Received signal Aborted (6)\r\n2022.06.10 14:23:15.159853 [ 514 ] {} <Fatal> BaseDaemon:\r\n2022.06.10 14:23:15.159913 [ 514 ] {} <Fatal> BaseDaemon: Stack trace: 0x7fb00bfc200b 0x7fb00bfa1859 0xfcf5b6b 0xfcf5dc5 0x22970b04 0x22969318 0x2296e4e3 0x22ace43f 0x22acdf5a 0x22af121c 0x2534d95e 0x2534d45a 0x252bcd70 0x252bc95c 0x252bba45 0x24f48c20 0x24f48697 0x24f3ac73 0x24f3a958 0x24ec9c1e 0x24ebdb22 0x24edaaf6 0x25bd866c 0x25bd8b45 0x25d48987 0x25d4648c 0x7fb00c179609 0x7fb00c09e133\r\n2022.06.10 14:23:15.159951 [ 514 ] {} <Fatal> BaseDaemon: 3. raise @ 0x7fb00bfc200b in ?\r\n2022.06.10 14:23:15.159977 [ 514 ] {} <Fatal> BaseDaemon: 4. abort @ 0x7fb00bfa1859 in ?\r\n2022.06.10 14:23:15.188215 [ 514 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Common/Exception.cpp:47: DB::abortOnFailedAssertion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xfcf5b6b in /workspace/clickhouse\r\n2022.06.10 14:23:15.216542 [ 514 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Common/Exception.cpp:70: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xfcf5dc5 in /workspace/clickhouse\r\n2022.06.10 14:23:15.260521 [ 514 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Core/Block.cpp:35: void DB::onError<void>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x22970b04 in /workspace/clickhouse\r\n2022.06.10 14:23:15.287969 [ 514 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Core/Block.cpp:0: void DB::checkColumnStructure<void>(DB::ColumnWithTypeAndName const&, DB::ColumnWithTypeAndName const&, std::__1::basic_string_view<char, std::__1::char_traits<char> >, bool, int) @ 0x22969318 in /workspace/clickhouse\r\n2022.06.10 14:23:15.310427 [ 514 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/Core/Block.cpp:98: void DB::checkBlockStructure<void>(DB::Block const&, DB::Block const&, std::__1::basic_string_view<char, std::__1::char_traits<char> >, bool) @ 0x2296e4e3 in /workspace/clickhouse\r\n2022.06.10 14:23:15.332730 [ 514 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../src/QueryPipeline/Pipe.cpp:504: DB::Pipe::addTransform(std::__1::shared_ptr<DB::IProcessor>, DB::OutputPort*, DB::OutputPort*) @ 0x22ace43f in /workspace/clickhouse\r\n2022.06.10 14:23:15.355721 [ 514 ] {} <Fatal> BaseDaemon: 11. ./build_docker/../src/QueryPipeline/Pipe.cpp:0: DB::Pipe::addTransform(std::__1::shared_ptr<DB::IProcessor>) @ 0x22acdf5a in /workspace/clickhouse\r\n2022.06.10 14:23:15.371568 [ 514 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/QueryPipeline/QueryPipelineBuilder.cpp:0: DB::QueryPipelineBuilder::addTransform(std::__1::shared_ptr<DB::IProcessor>) @ 0x22af121c in /workspace/clickhouse\r\n2022.06.10 14:23:15.405236 [ 514 ] {} <Fatal> BaseDaemon: 13. ./build_docker/../src/Processors/Transforms/buildPushingToViewsChain.cpp:0: DB::process(DB::Block, DB::ViewRuntimeData&, DB::ViewsData const&) @ 0x2534d95e in /workspace/clickhouse\r\n2022.06.10 14:23:15.434258 [ 514 ] {} <Fatal> BaseDaemon: 14. ./build_docker/../src/Processors/Transforms/buildPushingToViewsChain.cpp:0: DB::ExecutingInnerQueryFromViewTransform::onConsume(DB::Chunk) @ 0x2534d45a in /workspace/clickhouse\r\n2022.06.10 14:23:15.448241 [ 514 ] {} <Fatal> BaseDaemon: 15.1. inlined from ./build_docker/../src/Processors/Chunk.h:32: ~Chunk\r\n2022.06.10 14:23:15.448289 [ 514 ] {} <Fatal> BaseDaemon: 15.2. inlined from ../src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: operator()\r\n2022.06.10 14:23:15.448307 [ 514 ] {} <Fatal> BaseDaemon: 15. ../contrib/libcxx/include/type_traits:3640: decltype(static_cast<DB::ExceptionKeepingTransform::work()::$_1&>(fp)()) std::__1::__invoke<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&) @ 0x252bcd70 in /workspace/clickhouse\r\n2022.06.10 14:23:15.462296 [ 514 ] {} <Fatal> BaseDaemon: 16. ./build_docker/../src/Processors/Transforms/ExceptionKeepingTransform.cpp:103: DB::runStep(std::__1::function<void ()>, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x252bc95c in /workspace/clickhouse\r\n2022.06.10 14:23:15.472920 [ 514 ] {} <Fatal> BaseDaemon: 17. ./build_docker/../src/Processors/Transforms/ExceptionKeepingTransform.cpp:0: DB::ExceptionKeepingTransform::work() @ 0x252bba45 in /workspace/clickhouse\r\n2022.06.10 14:23:15.480282 [ 514 ] {} <Fatal> BaseDaemon: 18. ./build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:50: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) @ 0x24f48c20 in /workspace/clickhouse\r\n2022.06.10 14:23:15.487111 [ 514 ] {} <Fatal> BaseDaemon: 19. ./build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:87: DB::ExecutionThreadContext::executeTask() @ 0x24f48697 in /workspace/clickhouse\r\n2022.06.10 14:23:15.501814 [ 514 ] {} <Fatal> BaseDaemon: 20. ./build_docker/../src/Processors/Executors/PipelineExecutor.cpp:222: DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x24f3ac73 in /workspace/clickhouse\r\n2022.06.10 14:23:15.516840 [ 514 ] {} <Fatal> BaseDaemon: 21.1. inlined from ./build_docker/../contrib/libcxx/include/atomic:952: bool std::__1::__cxx_atomic_load<bool>(std::__1::__cxx_atomic_base_impl<bool> const*, std::__1::memory_order)\r\n2022.06.10 14:23:15.516904 [ 514 ] {} <Fatal> BaseDaemon: 21.2. inlined from ../contrib/libcxx/include/atomic:1582: std::__1::__atomic_base<bool, false>::load(std::__1::memory_order) const\r\n2022.06.10 14:23:15.516922 [ 514 ] {} <Fatal> BaseDaemon: 21.3. inlined from ../contrib/libcxx/include/atomic:1586: std::__1::__atomic_base<bool, false>::operator bool() const\r\n2022.06.10 14:23:15.516939 [ 514 ] {} <Fatal> BaseDaemon: 21.4. inlined from ../src/Processors/Executors/ExecutorTasks.h:49: DB::ExecutorTasks::isFinished() const\r\n2022.06.10 14:23:15.516954 [ 514 ] {} <Fatal> BaseDaemon: 21. ../src/Processors/Executors/PipelineExecutor.cpp:121: DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) @ 0x24f3a958 in /workspace/clickhouse\r\n2022.06.10 14:23:15.558230 [ 514 ] {} <Fatal> BaseDaemon: 22. ./build_docker/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::processInsertQuery() @ 0x24ec9c1e in /workspace/clickhouse\r\n2022.06.10 14:23:15.594820 [ 514 ] {} <Fatal> BaseDaemon: 23. ./build_docker/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::runImpl() @ 0x24ebdb22 in /workspace/clickhouse\r\n2022.06.10 14:23:15.640467 [ 514 ] {} <Fatal> BaseDaemon: 24. ./build_docker/../src/Server/TCPHandler.cpp:1780: DB::TCPHandler::run() @ 0x24edaaf6 in /workspace/clickhouse\r\n2022.06.10 14:23:15.645157 [ 514 ] {} <Fatal> BaseDaemon: 25. ./build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x25bd866c in /workspace/clickhouse\r\n2022.06.10 14:23:15.651939 [ 514 ] {} <Fatal> BaseDaemon: 26.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:54: std::__1::default_delete<Poco::Net::TCPServerConnection>::operator()(Poco::Net::TCPServerConnection*) const\r\n2022.06.10 14:23:15.651986 [ 514 ] {} <Fatal> BaseDaemon: 26.2. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:315: std::__1::unique_ptr<Poco::Net::TCPServerConnection, std::__1::default_delete<Poco::Net::TCPServerConnection> >::reset(Poco::Net::TCPServerConnection*)\r\n2022.06.10 14:23:15.652004 [ 514 ] {} <Fatal> BaseDaemon: 26.3. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n2022.06.10 14:23:15.652020 [ 514 ] {} <Fatal> BaseDaemon: 26. ../contrib/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() @ 0x25bd8b45 in /workspace/clickhouse\r\n2022.06.10 14:23:15.658945 [ 514 ] {} <Fatal> BaseDaemon: 27. ./build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x25d48987 in /workspace/clickhouse\r\n2022.06.10 14:23:15.665790 [ 514 ] {} <Fatal> BaseDaemon: 28.1. inlined from ./build_docker/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >::assign(Poco::Runnable*)\r\n2022.06.10 14:23:15.665832 [ 514 ] {} <Fatal> BaseDaemon: 28.2. inlined from ../contrib/poco/Foundation/include/Poco/SharedPtr.h:208: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >::operator=(Poco::Runnable*)\r\n2022.06.10 14:23:15.665848 [ 514 ] {} <Fatal> BaseDaemon: 28. ../contrib/poco/Foundation/src/Thread_POSIX.cpp:360: Poco::ThreadImpl::runnableEntry(void*) @ 0x25d4648c in /workspace/clickhouse\r\n2022.06.10 14:23:15.665867 [ 514 ] {} <Fatal> BaseDaemon: 29. ? @ 0x7fb00c179609 in ?\r\n2022.06.10 14:23:15.665886 [ 514 ] {} <Fatal> BaseDaemon: 30. __clone @ 0x7fb00c09e133 in ?\r\n2022.06.10 14:23:15.952657 [ 514 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: BEABA4BAA9EC4502D2FC1B44D814A13F. There is no information about the reference checksum.\r\n```",
  "created_at": "2022-07-12T14:00:24Z"
}