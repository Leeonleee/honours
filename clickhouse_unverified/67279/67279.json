{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 67279,
  "instance_id": "ClickHouse__ClickHouse-67279",
  "issue_numbers": [
    "67278"
  ],
  "base_commit": "6c0cf76fad28eac0792232f9c52b705c44325780",
  "patch": "diff --git a/programs/server/config.d/backups.xml b/programs/server/config.d/backups.xml\nnew file mode 100644\nindex 000000000000..382794e11234\n--- /dev/null\n+++ b/programs/server/config.d/backups.xml\n@@ -0,0 +1,13 @@\n+<clickhouse>\n+    <storage_configuration>\n+        <disks>\n+            <backups>\n+                <type>local</type>\n+                <path>/tmp/backups/</path>\n+            </backups>\n+        </disks>\n+    </storage_configuration>\n+    <backups>\n+        <allowed_disk>backups</allowed_disk>\n+    </backups>\n+</clickhouse>\ndiff --git a/programs/server/config.d/enable_keeper_map.xml b/programs/server/config.d/enable_keeper_map.xml\nnew file mode 120000\nindex 000000000000..47c361598826\n--- /dev/null\n+++ b/programs/server/config.d/enable_keeper_map.xml\n@@ -0,0 +1,1 @@\n+../../../tests/config/config.d/enable_keeper_map.xml\n\\ No newline at end of file\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference\ndeleted file mode 100644\nindex 5cc8909b6c87..000000000000\n--- a/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-10000000\n-10000000\t1274991808\n-30000000\n-30000000\t3824991808\n-10000000\n-10000000\t1274991808\n-30000000\n-30000000\t3824991808\n-10000000\n-10000000\t1274991808\n-30000000\n-30000000\t3824991808\ndiff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql\ndeleted file mode 100644\nindex d11c9120c61c..000000000000\n--- a/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql\n+++ /dev/null\n@@ -1,48 +0,0 @@\n-set allow_suspicious_low_cardinality_types=1;\n-drop table if exists perf_lc_num;\n-\n-CREATE TABLE perf_lc_num(\u3000        num UInt8,\u3000        arr Array(LowCardinality(Int64)) default [num]\u3000        ) ENGINE = TinyLog;\n-\n-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n-\n-select sum(length(arr)) from perf_lc_num;\n-select sum(length(arr)), sum(num) from perf_lc_num;\n-\n-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);\n-\n-select sum(length(arr)) from perf_lc_num;\n-select sum(length(arr)), sum(num) from perf_lc_num;\n-\n-drop table if exists perf_lc_num;\n-\n-\n-CREATE TABLE perf_lc_num(\u3000        num UInt8,\u3000        arr Array(LowCardinality(Int64)) default [num]\u3000        ) ENGINE = Log;\n-\n-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n-\n-select sum(length(arr)) from perf_lc_num;\n-select sum(length(arr)), sum(num) from perf_lc_num;\n-\n-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);\n-\n-select sum(length(arr)) from perf_lc_num;\n-select sum(length(arr)), sum(num) from perf_lc_num;\n-\n-drop table if exists perf_lc_num;\n-\n-\n-CREATE TABLE perf_lc_num(\u3000        num UInt8,\u3000        arr Array(LowCardinality(Int64)) default [num]\u3000        ) ENGINE = StripeLog;\n-\n-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n-\n-select sum(length(arr)) from perf_lc_num;\n-select sum(length(arr)), sum(num) from perf_lc_num;\n-\n-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);\n-\n-select sum(length(arr)) from perf_lc_num;\n-select sum(length(arr)), sum(num) from perf_lc_num;\n-\n-drop table if exists perf_lc_num;\n-\n-\ndiff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.reference\nnew file mode 100644\nindex 000000000000..0715a4212edb\n--- /dev/null\n+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.reference\n@@ -0,0 +1,4 @@\n+10000000\n+10000000\t1274991808\n+30000000\n+30000000\t3824991808\ndiff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.sql\nnew file mode 100644\nindex 000000000000..142d3b21b473\n--- /dev/null\n+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.sql\n@@ -0,0 +1,16 @@\n+set allow_suspicious_low_cardinality_types = 1, max_rows_to_read = '31M';\n+drop table if exists perf_lc_num;\n+\n+CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = TinyLog;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+drop table if exists perf_lc_num;\ndiff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.reference\nnew file mode 100644\nindex 000000000000..0715a4212edb\n--- /dev/null\n+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.reference\n@@ -0,0 +1,4 @@\n+10000000\n+10000000\t1274991808\n+30000000\n+30000000\t3824991808\ndiff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.sql\nnew file mode 100644\nindex 000000000000..e6b68e1d6827\n--- /dev/null\n+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.sql\n@@ -0,0 +1,16 @@\n+set allow_suspicious_low_cardinality_types = 1, max_rows_to_read = '31M';\n+drop table if exists perf_lc_num;\n+\n+CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = Log;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+drop table if exists perf_lc_num;\ndiff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.reference\nnew file mode 100644\nindex 000000000000..0715a4212edb\n--- /dev/null\n+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.reference\n@@ -0,0 +1,4 @@\n+10000000\n+10000000\t1274991808\n+30000000\n+30000000\t3824991808\ndiff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.sql\nnew file mode 100644\nindex 000000000000..85a42163897a\n--- /dev/null\n+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.sql\n@@ -0,0 +1,16 @@\n+set allow_suspicious_low_cardinality_types = 1, max_rows_to_read = '31M';\n+drop table if exists perf_lc_num;\n+\n+CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = StripeLog;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+drop table if exists perf_lc_num;\ndiff --git a/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql b/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql\nindex 3d6b69fe1612..5e6b4393a790 100644\n--- a/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql\n+++ b/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql\n@@ -1,4 +1,4 @@\n--- Tags: long\n+-- Tags: long, no-tsan\n \n drop table if exists buffer_02231;\n drop table if exists out_02231;\n@@ -11,8 +11,8 @@ create table buffer_02231\n (\n     key Int,\n     v1 AggregateFunction(groupArray, String)\n-) engine=Buffer(currentDatabase(), 'out_02231',\n-    /* layers= */1,\n+) engine = Buffer(currentDatabase(), 'out_02231',\n+    /* layers= */       1,\n     /* min/max time  */ 86400, 86400,\n     /* min/max rows  */ 1e9, 1e9,\n     /* min/max bytes */ 1e12, 1e12,\n@@ -29,7 +29,7 @@ from in_02231\n group by key;\n \n set optimize_trivial_insert_select = 1;\n-insert into in_02231 select * from numbers(10e6) settings max_memory_usage='400Mi', max_threads=1;\n+insert into in_02231 select * from numbers(5e6) settings max_memory_usage='40Mi', max_threads=1, min_insert_block_size_rows = 10000, min_insert_block_size_bytes = '10Mi';\n \n drop table buffer_02231;\n drop table out_02231;\ndiff --git a/tests/queries/0_stateless/02911_backup_restore_keeper_map.sh b/tests/queries/0_stateless/02911_backup_restore_keeper_map.sh\nindex ccdf52a6e23e..385583acbbe6 100755\n--- a/tests/queries/0_stateless/02911_backup_restore_keeper_map.sh\n+++ b/tests/queries/0_stateless/02911_backup_restore_keeper_map.sh\n@@ -11,11 +11,23 @@ $CLICKHOUSE_CLIENT -nm -q \"\n     CREATE TABLE $database_name.02911_backup_restore_keeper_map1 (key UInt64, value String) Engine=KeeperMap('/' || currentDatabase() || '/test02911') PRIMARY KEY key;\n     CREATE TABLE $database_name.02911_backup_restore_keeper_map2 (key UInt64, value String) Engine=KeeperMap('/' || currentDatabase() || '/test02911') PRIMARY KEY key; -- table using same Keeper path as 02911_backup_restore_keeper_map1\n     CREATE TABLE $database_name.02911_backup_restore_keeper_map3 (key UInt64, value String) Engine=KeeperMap('/' || currentDatabase() || '/test02911_different') PRIMARY KEY key;\n-\n-    INSERT INTO $database_name.02911_backup_restore_keeper_map2 SELECT number, 'test' || toString(number) FROM system.numbers LIMIT 5000;\n-    INSERT INTO $database_name.02911_backup_restore_keeper_map3 SELECT number, 'test' || toString(number) FROM system.numbers LIMIT 3000;\n \"\n \n+# KeeperMap table engine doesn't have internal retries for interaction with Keeper. Do it on our own, otherwise tests with overloaded server can be flaky.\n+while true\n+do\n+    $CLICKHOUSE_CLIENT -nm -q \"INSERT INTO $database_name.02911_backup_restore_keeper_map2 SELECT number, 'test' || toString(number) FROM system.numbers LIMIT 5000;\n+    \" | grep -q \"KEEPER_EXCEPTION\" && sleep 1 && continue\n+    break\n+done\n+\n+while true\n+do\n+    $CLICKHOUSE_CLIENT -nm -q \"INSERT INTO $database_name.02911_backup_restore_keeper_map3 SELECT number, 'test' || toString(number) FROM system.numbers LIMIT 3000;\n+    \" | grep -q \"KEEPER_EXCEPTION\" && sleep 1 && continue\n+    break\n+done\n+\n backup_path=\"$database_name\"\n for i in $(seq 1 3); do\n     $CLICKHOUSE_CLIENT -q \"SELECT count() FROM $database_name.02911_backup_restore_keeper_map$i;\"\n@@ -45,4 +57,4 @@ for i in $(seq 1 3); do\n     $CLICKHOUSE_CLIENT -q \"SELECT count() FROM $database_name.02911_backup_restore_keeper_map$i;\"\n done\n \n-$CLICKHOUSE_CLIENT -q \"DROP DATABASE $database_name SYNC;\"\n\\ No newline at end of file\n+$CLICKHOUSE_CLIENT -q \"DROP DATABASE $database_name SYNC;\"\n",
  "problem_statement": "After Jul 22, the test `01651_lc_insert_tiny_log` became longer\nFor obvious reasons, 378502a331c60cc023e0c965611237cb5a3cfb47, #66901\r\nBut we didn't revert in five days, so let's split it instead.\n",
  "hints_text": "",
  "created_at": "2024-07-27T14:04:57Z"
}