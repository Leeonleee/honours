diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference
deleted file mode 100644
index 5cc8909b6c87..000000000000
--- a/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference
+++ /dev/null
@@ -1,12 +0,0 @@
-10000000
-10000000	1274991808
-30000000
-30000000	3824991808
-10000000
-10000000	1274991808
-30000000
-30000000	3824991808
-10000000
-10000000	1274991808
-30000000
-30000000	3824991808
diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql
deleted file mode 100644
index d11c9120c61c..000000000000
--- a/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql
+++ /dev/null
@@ -1,48 +0,0 @@
-set allow_suspicious_low_cardinality_types=1;
-drop table if exists perf_lc_num;
-
-CREATE TABLE perf_lc_num(　        num UInt8,　        arr Array(LowCardinality(Int64)) default [num]　        ) ENGINE = TinyLog;
-
-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);
-
-select sum(length(arr)) from perf_lc_num;
-select sum(length(arr)), sum(num) from perf_lc_num;
-
-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);
-
-select sum(length(arr)) from perf_lc_num;
-select sum(length(arr)), sum(num) from perf_lc_num;
-
-drop table if exists perf_lc_num;
-
-
-CREATE TABLE perf_lc_num(　        num UInt8,　        arr Array(LowCardinality(Int64)) default [num]　        ) ENGINE = Log;
-
-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);
-
-select sum(length(arr)) from perf_lc_num;
-select sum(length(arr)), sum(num) from perf_lc_num;
-
-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);
-
-select sum(length(arr)) from perf_lc_num;
-select sum(length(arr)), sum(num) from perf_lc_num;
-
-drop table if exists perf_lc_num;
-
-
-CREATE TABLE perf_lc_num(　        num UInt8,　        arr Array(LowCardinality(Int64)) default [num]　        ) ENGINE = StripeLog;
-
-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);
-
-select sum(length(arr)) from perf_lc_num;
-select sum(length(arr)), sum(num) from perf_lc_num;
-
-INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);
-
-select sum(length(arr)) from perf_lc_num;
-select sum(length(arr)), sum(num) from perf_lc_num;
-
-drop table if exists perf_lc_num;
-
-
diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.reference
new file mode 100644
index 000000000000..0715a4212edb
--- /dev/null
+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.reference
@@ -0,0 +1,4 @@
+10000000
+10000000	1274991808
+30000000
+30000000	3824991808
diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.sql
new file mode 100644
index 000000000000..142d3b21b473
--- /dev/null
+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.sql
@@ -0,0 +1,16 @@
+set allow_suspicious_low_cardinality_types = 1, max_rows_to_read = '31M';
+drop table if exists perf_lc_num;
+
+CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = TinyLog;
+
+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);
+
+select sum(length(arr)) from perf_lc_num;
+select sum(length(arr)), sum(num) from perf_lc_num;
+
+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);
+
+select sum(length(arr)) from perf_lc_num;
+select sum(length(arr)), sum(num) from perf_lc_num;
+
+drop table if exists perf_lc_num;
diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.reference
new file mode 100644
index 000000000000..0715a4212edb
--- /dev/null
+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.reference
@@ -0,0 +1,4 @@
+10000000
+10000000	1274991808
+30000000
+30000000	3824991808
diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.sql
new file mode 100644
index 000000000000..e6b68e1d6827
--- /dev/null
+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.sql
@@ -0,0 +1,16 @@
+set allow_suspicious_low_cardinality_types = 1, max_rows_to_read = '31M';
+drop table if exists perf_lc_num;
+
+CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = Log;
+
+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);
+
+select sum(length(arr)) from perf_lc_num;
+select sum(length(arr)), sum(num) from perf_lc_num;
+
+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);
+
+select sum(length(arr)) from perf_lc_num;
+select sum(length(arr)), sum(num) from perf_lc_num;
+
+drop table if exists perf_lc_num;
diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.reference
new file mode 100644
index 000000000000..0715a4212edb
--- /dev/null
+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.reference
@@ -0,0 +1,4 @@
+10000000
+10000000	1274991808
+30000000
+30000000	3824991808
diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.sql
new file mode 100644
index 000000000000..85a42163897a
--- /dev/null
+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.sql
@@ -0,0 +1,16 @@
+set allow_suspicious_low_cardinality_types = 1, max_rows_to_read = '31M';
+drop table if exists perf_lc_num;
+
+CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = StripeLog;
+
+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);
+
+select sum(length(arr)) from perf_lc_num;
+select sum(length(arr)), sum(num) from perf_lc_num;
+
+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000, 20000000);
+
+select sum(length(arr)) from perf_lc_num;
+select sum(length(arr)), sum(num) from perf_lc_num;
+
+drop table if exists perf_lc_num;
diff --git a/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql b/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql
index 3d6b69fe1612..5e6b4393a790 100644
--- a/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql
+++ b/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql
@@ -1,4 +1,4 @@
--- Tags: long
+-- Tags: long, no-tsan
 
 drop table if exists buffer_02231;
 drop table if exists out_02231;
@@ -11,8 +11,8 @@ create table buffer_02231
 (
     key Int,
     v1 AggregateFunction(groupArray, String)
-) engine=Buffer(currentDatabase(), 'out_02231',
-    /* layers= */1,
+) engine = Buffer(currentDatabase(), 'out_02231',
+    /* layers= */       1,
     /* min/max time  */ 86400, 86400,
     /* min/max rows  */ 1e9, 1e9,
     /* min/max bytes */ 1e12, 1e12,
@@ -29,7 +29,7 @@ from in_02231
 group by key;
 
 set optimize_trivial_insert_select = 1;
-insert into in_02231 select * from numbers(10e6) settings max_memory_usage='400Mi', max_threads=1;
+insert into in_02231 select * from numbers(5e6) settings max_memory_usage='40Mi', max_threads=1, min_insert_block_size_rows = 10000, min_insert_block_size_bytes = '10Mi';
 
 drop table buffer_02231;
 drop table out_02231;
diff --git a/tests/queries/0_stateless/02911_backup_restore_keeper_map.sh b/tests/queries/0_stateless/02911_backup_restore_keeper_map.sh
index ccdf52a6e23e..385583acbbe6 100755
--- a/tests/queries/0_stateless/02911_backup_restore_keeper_map.sh
+++ b/tests/queries/0_stateless/02911_backup_restore_keeper_map.sh
@@ -11,11 +11,23 @@ $CLICKHOUSE_CLIENT -nm -q "
     CREATE TABLE $database_name.02911_backup_restore_keeper_map1 (key UInt64, value String) Engine=KeeperMap('/' || currentDatabase() || '/test02911') PRIMARY KEY key;
     CREATE TABLE $database_name.02911_backup_restore_keeper_map2 (key UInt64, value String) Engine=KeeperMap('/' || currentDatabase() || '/test02911') PRIMARY KEY key; -- table using same Keeper path as 02911_backup_restore_keeper_map1
     CREATE TABLE $database_name.02911_backup_restore_keeper_map3 (key UInt64, value String) Engine=KeeperMap('/' || currentDatabase() || '/test02911_different') PRIMARY KEY key;
-
-    INSERT INTO $database_name.02911_backup_restore_keeper_map2 SELECT number, 'test' || toString(number) FROM system.numbers LIMIT 5000;
-    INSERT INTO $database_name.02911_backup_restore_keeper_map3 SELECT number, 'test' || toString(number) FROM system.numbers LIMIT 3000;
 "
 
+# KeeperMap table engine doesn't have internal retries for interaction with Keeper. Do it on our own, otherwise tests with overloaded server can be flaky.
+while true
+do
+    $CLICKHOUSE_CLIENT -nm -q "INSERT INTO $database_name.02911_backup_restore_keeper_map2 SELECT number, 'test' || toString(number) FROM system.numbers LIMIT 5000;
+    " | grep -q "KEEPER_EXCEPTION" && sleep 1 && continue
+    break
+done
+
+while true
+do
+    $CLICKHOUSE_CLIENT -nm -q "INSERT INTO $database_name.02911_backup_restore_keeper_map3 SELECT number, 'test' || toString(number) FROM system.numbers LIMIT 3000;
+    " | grep -q "KEEPER_EXCEPTION" && sleep 1 && continue
+    break
+done
+
 backup_path="$database_name"
 for i in $(seq 1 3); do
     $CLICKHOUSE_CLIENT -q "SELECT count() FROM $database_name.02911_backup_restore_keeper_map$i;"
@@ -45,4 +57,4 @@ for i in $(seq 1 3); do
     $CLICKHOUSE_CLIENT -q "SELECT count() FROM $database_name.02911_backup_restore_keeper_map$i;"
 done
 
-$CLICKHOUSE_CLIENT -q "DROP DATABASE $database_name SYNC;"
\ No newline at end of file
+$CLICKHOUSE_CLIENT -q "DROP DATABASE $database_name SYNC;"
