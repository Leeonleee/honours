You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
[FEATURE REQUEST] implements rfc1866 part 8.2.1 compatible parsing for decodeURLComponent
**Use case**
Javascript `decodeURIComponent('1%202+3')`
and ClickHouse `decodeURLComponent('1%202+3')`
return same result
```
"1 2+3"
```
which compatible with http://www.faqs.org/rfcs/rfc3986.html

but other popular languages also follow http://www.faqs.org/rfcs/rfc1866.html 
```
8.2.1. The form-urlencoded Media Type

   The default encoding for all forms is `application/x-www-form-
   urlencoded'. A form data set is represented in this media type as
   follows:

        1. The form field names and values are escaped: space
        characters are replaced by `+'
``` 
PHP
`<? echo urldecode('1+2%203');?>`
Python
```
import urllib.parse
print(urllib.parse.unquote_plus('1+1%201'))
```
Golang
```
package main

import (
	"fmt"
	"net/url"
)
func main() {
	fmt.Println(url.QueryUnescape("1+2%203"))
}
```

return same
"1 2 3"
A clear and concise description of what is the intended usage scenario is.

Solution which I can propose, add second boolean parameter to `decodeURLComponent()`
or implements separately function `decodeXWWWFormURLEncoded`

current workaround replaceAll(decodeURLComponent("1+2%203"),'+',' ') corrupt data when data already contains "+" encoded as "%xx"
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
