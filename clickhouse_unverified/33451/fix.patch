diff --git a/docs/en/sql-reference/functions/url-functions.md b/docs/en/sql-reference/functions/url-functions.md
index ae2113a2b64b..98c3135f2b43 100644
--- a/docs/en/sql-reference/functions/url-functions.md
+++ b/docs/en/sql-reference/functions/url-functions.md
@@ -360,6 +360,21 @@ SELECT decodeURLComponent('http://127.0.0.1:8123/?query=SELECT%201%3B') AS Decod
 └────────────────────────────────────────┘
 ```
 
+### decodeURLFormComponent(URL) {#decodeurlformcomponenturl}
+
+Returns the decoded URL. Follows rfc-1866, plain plus(`+`) is decoded as space(` `).
+Example:
+
+``` sql
+SELECT decodeURLFormComponent('http://127.0.0.1:8123/?query=SELECT%201+2%2B3') AS DecodedURL;
+```
+
+``` text
+┌─DecodedURL────────────────────────────────┐
+│ http://127.0.0.1:8123/?query=SELECT 1 2+3 │
+└───────────────────────────────────────────┘
+```
+
 ### netloc {#netloc}
 
 Extracts network locality (`username:password@host:port`) from a URL.
diff --git a/src/Functions/URL/decodeURLComponent.cpp b/src/Functions/URL/decodeURLComponent.cpp
index b6abaab515e0..9ed290b1832e 100644
--- a/src/Functions/URL/decodeURLComponent.cpp
+++ b/src/Functions/URL/decodeURLComponent.cpp
@@ -12,7 +12,7 @@ namespace ErrorCodes
 }
 
 /// We assume that size of the dst buf isn't less than src_size.
-static size_t decodeURL(const char * src, size_t src_size, char * dst)
+static size_t decodeURL(const char * src, size_t src_size, char * dst, bool plus_as_space)
 {
     const char * src_prev_pos = src;
     const char * src_curr_pos = src;
@@ -21,12 +21,28 @@ static size_t decodeURL(const char * src, size_t src_size, char * dst)
 
     while (true)
     {
-        src_curr_pos = find_first_symbols<'%'>(src_curr_pos, src_end);
+        src_curr_pos = find_first_symbols<'%', '+'>(src_curr_pos, src_end);
 
         if (src_curr_pos == src_end)
         {
             break;
         }
+        else if (*src_curr_pos == '+')
+        {
+            if (!plus_as_space)
+            {
+                ++src_curr_pos;
+                continue;
+            }
+            size_t bytes_to_copy = src_curr_pos - src_prev_pos;
+            memcpySmallAllowReadWriteOverflow15(dst_pos, src_prev_pos, bytes_to_copy);
+            dst_pos += bytes_to_copy;
+
+            ++src_curr_pos;
+            src_prev_pos = src_curr_pos;
+            *dst_pos = ' ';
+            ++dst_pos;
+        }
         else if (src_end - src_curr_pos < 3)
         {
             src_curr_pos = src_end;
@@ -67,6 +83,7 @@ static size_t decodeURL(const char * src, size_t src_size, char * dst)
 
 
 /// Percent decode of URL data.
+template <bool plus_as_space>
 struct DecodeURLComponentImpl
 {
     static void vector(const ColumnString::Chars & data, const ColumnString::Offsets & offsets,
@@ -83,7 +100,7 @@ struct DecodeURLComponentImpl
         {
             const char * src_data = reinterpret_cast<const char *>(&data[prev_offset]);
             size_t src_size = offsets[i] - prev_offset;
-            size_t dst_size = decodeURL(src_data, src_size, reinterpret_cast<char *>(res_data.data() + res_offset));
+            size_t dst_size = decodeURL(src_data, src_size, reinterpret_cast<char *>(res_data.data() + res_offset), plus_as_space);
 
             res_offset += dst_size;
             res_offsets[i] = res_offset;
@@ -101,11 +118,14 @@ struct DecodeURLComponentImpl
 
 
 struct NameDecodeURLComponent { static constexpr auto name = "decodeURLComponent"; };
-using FunctionDecodeURLComponent = FunctionStringToString<DecodeURLComponentImpl, NameDecodeURLComponent>;
+struct NameDecodeURLFormComponent { static constexpr auto name = "decodeURLFormComponent"; };
+using FunctionDecodeURLComponent = FunctionStringToString<DecodeURLComponentImpl<false>, NameDecodeURLComponent>;
+using FunctionDecodeURLFormComponent = FunctionStringToString<DecodeURLComponentImpl<true>, NameDecodeURLFormComponent>;
 
 void registerFunctionDecodeURLComponent(FunctionFactory & factory)
 {
     factory.registerFunction<FunctionDecodeURLComponent>();
+    factory.registerFunction<FunctionDecodeURLFormComponent>();
 }
 
 }
