diff --git a/src/Processors/Sources/RecursiveCTESource.cpp b/src/Processors/Sources/RecursiveCTESource.cpp
index 4a160465626e..5b41bad6b57d 100644
--- a/src/Processors/Sources/RecursiveCTESource.cpp
+++ b/src/Processors/Sources/RecursiveCTESource.cpp
@@ -26,6 +26,7 @@ namespace DB
 namespace Setting
 {
     extern const SettingsUInt64 max_recursive_cte_evaluation_depth;
+    extern const SettingsBool use_query_condition_cache;
 }
 
 namespace ErrorCodes
@@ -176,6 +177,10 @@ class RecursiveCTEChunkGenerator
                 recursive_subquery_settings[Setting::max_recursive_cte_evaluation_depth].value,
                 recursive_cte_union_node->formatASTForErrorMessage());
 
+        /// Workaround for issue 84026: Usage of the query condition cache with recursive CTEs caused wrong results
+        if (recursive_step > 0 && recursive_subquery_settings[Setting::use_query_condition_cache])
+            recursive_query_context->setSetting("use_query_condition_cache", false);
+
         auto & query_to_execute = recursive_step > 0 ? recursive_query : non_recursive_query;
         ++recursive_step;
 
diff --git a/src/Storages/MergeTree/MergeTreeSelectProcessor.cpp b/src/Storages/MergeTree/MergeTreeSelectProcessor.cpp
index 642a0f4ad4e2..c254d369140f 100644
--- a/src/Storages/MergeTree/MergeTreeSelectProcessor.cpp
+++ b/src/Storages/MergeTree/MergeTreeSelectProcessor.cpp
@@ -198,7 +198,7 @@ ChunkAndProgress MergeTreeSelectProcessor::read()
                                 part_name,
                                 output->getHash(),
                                 reader_settings.query_condition_cache_store_conditions_as_plaintext
-                                    ? prewhere_info->prewhere_actions.getNames()[0]
+                                    ? output->result_name
                                     : "",
                                 task->getPrewhereUnmatchedMarks(),
                                 data_part->index_granularity->getMarksCount(),
