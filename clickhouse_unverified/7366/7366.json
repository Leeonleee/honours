{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 7366,
  "instance_id": "ClickHouse__ClickHouse-7366",
  "issue_numbers": [
    "7364"
  ],
  "base_commit": "6191c10abe246236cbc805cf8b1ea42dde3703db",
  "patch": "diff --git a/dbms/src/Interpreters/Set.cpp b/dbms/src/Interpreters/Set.cpp\nindex 68c219c3a91f..330f0dc02873 100644\n--- a/dbms/src/Interpreters/Set.cpp\n+++ b/dbms/src/Interpreters/Set.cpp\n@@ -424,7 +424,8 @@ void Set::checkColumnsNumber(size_t num_key_columns) const\n \n void Set::checkTypesEqual(size_t set_type_idx, const DataTypePtr & other_type) const\n {\n-    if (!removeNullable(data_types[set_type_idx])->equals(*removeNullable(other_type)))\n+\n+    if (!removeNullable(recursiveRemoveLowCardinality(data_types[set_type_idx]))->equals(*removeNullable(recursiveRemoveLowCardinality(other_type))))\n         throw Exception(\"Types of column \" + toString(set_type_idx + 1) + \" in section IN don't match: \"\n                         + data_types[set_type_idx]->getName() + \" on the right, \" + other_type->getName() +\n                         \" on the left.\", ErrorCodes::TYPE_MISMATCH);\n",
  "test_patch": "diff --git a/dbms/tests/queries/0_stateless/00688_low_cardinality_in.reference b/dbms/tests/queries/0_stateless/00688_low_cardinality_in.reference\nindex 74266c7f888b..8edea4d363a5 100644\n--- a/dbms/tests/queries/0_stateless/00688_low_cardinality_in.reference\n+++ b/dbms/tests/queries/0_stateless/00688_low_cardinality_in.reference\n@@ -10,3 +10,4 @@ a\t1\n b\t1\n 1\t1\n 2\t1\n+['1']\ndiff --git a/dbms/tests/queries/0_stateless/00688_low_cardinality_in.sql b/dbms/tests/queries/0_stateless/00688_low_cardinality_in.sql\nindex 09a96743847f..cb57fad51a41 100644\n--- a/dbms/tests/queries/0_stateless/00688_low_cardinality_in.sql\n+++ b/dbms/tests/queries/0_stateless/00688_low_cardinality_in.sql\n@@ -9,3 +9,9 @@ select val, val in (select arrayJoin([1, 3])) from lc_00688;\n select str, str in (select str from lc_00688) from lc_00688;\n select val, val in (select val from lc_00688) from lc_00688;\n drop table if exists lc_00688;\n+\n+drop table if exists ary_lc_null;\n+CREATE TABLE ary_lc_null (i int, v Array(LowCardinality(Nullable(String)))) ENGINE = MergeTree() ORDER BY i ;\n+INSERT INTO ary_lc_null VALUES (1, ['1']);\n+SELECT v FROM ary_lc_null WHERE v IN (SELECT v FROM ary_lc_null);\n+drop table if exists ary_lc_null;\n",
  "problem_statement": "IN operator doesn't support Array(LowCardinality(Nullable(String)))\nI am using ClickHouse all my daytime. It's a very excellent database. :)\r\n\r\nBut, I ran into a problem with `IN Operator`.\r\n\r\nI created an `Array(LowCardinality(Nullable(String)))` type of column.\r\n\r\nExecuted a query with `IN Operator`, ClickHouse returned an exception.\r\n\r\nTo reproduce this error, you can try queries below.\r\n\r\n**Queries**\r\n```SQL\r\nCREATE TABLE ary_lc_null          \r\n(\r\n    `i` int,                                   \r\n    `v` Array(LowCardinality(Nullable(String)))\r\n)       \r\nENGINE = MergeTree()\r\nORDER BY i \r\n\r\nINSERT INTO ary_lc_null VALUES (1, ['1']) (2, ['2']) (3, ['3']) (4, ['4']) (5, ['5']);\r\n\r\nSELECT v FROM ary_lc_null WHERE v IN (SELECT v FROM ary_lc_null);\r\n```\r\n\r\n**Exception**\r\nCode: 53. DB::Exception: Received from localhost:9000. DB::Exception: Types of column 1 in section IN don't match: Array(LowCardinality(Nullable(String))) on the right, Array(Nullable(String)) on the left..\r\n\r\n**Version Info**\r\n```\r\nClickHouse client version 19.16.1.1.\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 19.16.1 revision 54427.\r\n```\r\n\r\nThank you.\n",
  "hints_text": "",
  "created_at": "2019-10-17T10:13:42Z"
}