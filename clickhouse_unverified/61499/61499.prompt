You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Some of the fuzzing tests failed with errors
**Describe the bug**
The following fuzzing tests failed with errors:
#### data_type_deserialization_fuzzer
```bash
$ ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer -rss_limit_mb=5560 -timeout=25 -seed=1337 -runs=4 -error_exitcode=78
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1337
INFO: Loaded 1 modules   (2125499 inline 8-bit counters): 2125499 [0x563baf9e41e0, 0x563bafbeb09b),
INFO: Loaded 1 PC tables (2125499 PCs): 2125499 [0x563bafbeb0a0,0x563bb1c59c50),
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
Attempting to create multiple ContextShared instances. Stack trace:
0. ./build/./src/Common/StackTrace.cpp:349: StackTrace::tryCapture() @ 0x0000000019ec2f7c in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
1. ./src/Common/StackTrace.h:0: DB::ContextSharedPart::ContextSharedPart() @ 0x000000000a77b97c in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
2. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: DB::Context::createShared() @ 0x000000000a6b27a9 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
3. ./build/./src/DataTypes/fuzzers/data_type_deserialization_fuzzer.cpp:27: LLVMFuzzerTestOneInput::$_0::operator()() @ 0x0000000009f78bf7 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
4. ./build/./src/DataTypes/fuzzers/data_type_deserialization_fuzzer.cpp:38: LLVMFuzzerTestOneInput @ 0x0000000009f78780 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
5. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:0: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) @ 0x000000001954f0dd in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
6. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514: fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) @ 0x000000001954d393 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
7. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:810: fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) @ 0x0000000019553753 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
8. ./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDataFlowTrace.h:121: fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) @ 0x0000000019554831 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
9. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:914: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) @ 0x0000000019530b8e in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
10. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20: main @ 0x0000000019523a88 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
11. ? @ 0x00007fa361661d90
12. ? @ 0x00007fa361661e40
13. _start @ 0x0000000009ea7b2e in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer
libc++abi: terminating
==31499== ERROR: libFuzzer: deadly signal
    #0 0x563b9b03e321 in __sanitizer_print_stack_trace (/home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer+0x9f4a321) (BuildId: 2f04e3bfd24d6f9cc848461e41dc031af7c7b589)
    #1 0x563baa662077 in fuzzer::PrintStackTrace() build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x563baa63e48a in fuzzer::Fuzzer::CrashCallback() build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7fa36167a51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #4 0x7fa3616ce9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #5 0x7fa36167a475 in gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x42475) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #6 0x7fa3616607f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #7 0x563bac1ad560 in abort_message build/./contrib/llvm-project/libcxxabi/src/abort_message.cpp:78:5
    #8 0x563bac1ad996 in demangling_terminate_handler() build/./contrib/llvm-project/libcxxabi/src/cxa_default_handlers.cpp
    #9 0x563bac1ad790 in std::__terminate(void (*)()) build/./contrib/llvm-project/libcxxabi/src/cxa_handlers.cpp:59:9
    #10 0x563bac1ad68f in std::terminate() build/./contrib/llvm-project/libcxxabi/src/cxa_handlers.cpp
    #11 0x563b9b86fa0c in DB::ContextSharedPart::ContextSharedPart() build/./src/Interpreters/Context.cpp:429:13
    #12 0x563b9b7a67a8 in std::__1::__unique_if<DB::ContextSharedPart>::__unique_single std::__1::make_unique[abi:v15000]<DB::ContextSharedPart>() build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714:32
    #13 0x563b9b7a67a8 in DB::Context::createShared() build/./src/Interpreters/Context.cpp:810:32
    #14 0x563b9b06cbf6 in LLVMFuzzerTestOneInput::$_0::operator()() build/./src/DataTypes/fuzzers/data_type_deserialization_fuzzer.cpp:27:30
    #15 0x563b9b06c77f in LLVMFuzzerTestOneInput build/./src/DataTypes/fuzzers/data_type_deserialization_fuzzer.cpp:38:35
    #16 0x563baa6430dc in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:612:13
    #17 0x563baa641392 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:7
    #18 0x563baa647752 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:810:5
    #19 0x563baa648830 in fuzzer::Fuzzer::Loop(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:865:3
    #20 0x563baa624b8d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #21 0x563baa617a87 in main build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #22 0x7fa361661d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #23 0x7fa361661e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #24 0x563b9af9bb2d in _start (/home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/data_type_deserialization_fuzzer+0x9ea7b2d) (BuildId: 2f04e3bfd24d6f9cc848461e41dc031af7c7b589)

NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0xa,
\012
artifact_prefix='./'; Test unit written to ./crash-adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
Base64: Cg==
```

#### format_fuzzer
```bash
$ ch-fuzz/build/fuzzers/format_fuzzer -rss_limit_mb=5560 -timeout=25 -seed=1337 -runs=4 -error_exitcode=78
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1337
INFO: Loaded 1 modules   (2203877 inline 8-bit counters): 2203877 [0x555f7ba51448, 0x555f7bc6b52d),
INFO: Loaded 1 PC tables (2203877 PCs): 2203877 [0x555f7bc6b530,0x555f7de0c380),
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
Attempting to create multiple ContextShared instances. Stack trace:
0. ./build/./src/Common/StackTrace.cpp:349: StackTrace::tryCapture() @ 0x000000001acb8a9c in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
1. ./src/Common/StackTrace.h:0: DB::ContextSharedPart::ContextSharedPart() @ 0x000000000d6824fc in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
2. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: DB::Context::createShared() @ 0x000000000d5c2f29 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
3. ./build/./src/Formats/fuzzers/format_fuzzer.cpp:35: LLVMFuzzerTestOneInput::$_0::operator()() @ 0x000000000a8d59f7 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
4. ./build/./src/Formats/fuzzers/format_fuzzer.cpp:48: LLVMFuzzerTestOneInput @ 0x000000000a8d526e in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
5. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:0: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) @ 0x000000001a2dee5d in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
6. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514: fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) @ 0x000000001a2dd113 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
7. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:810: fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) @ 0x000000001a2e34d3 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
8. ./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDataFlowTrace.h:121: fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) @ 0x000000001a2e45b1 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
9. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:914: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) @ 0x000000001a2c090e in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
10. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20: main @ 0x000000001a2b3808 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
11. ? @ 0x00007f059aaaed90
12. ? @ 0x00007f059aaaee40
13. _start @ 0x000000000a8035ae in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer
libc++abi: terminating
==31503== ERROR: libFuzzer: deadly signal
    #0 0x555f661aada1 in __sanitizer_print_stack_trace (/home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer+0xa8a5da1) (BuildId: 8d28cbd4dda4188ae7579956a91869b2f53fb741)
    #1 0x555f75c02df7 in fuzzer::PrintStackTrace() build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x555f75bdf20a in fuzzer::Fuzzer::CrashCallback() build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7f059aac751f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #4 0x7f059ab1b9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #5 0x7f059aac7475 in gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x42475) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #6 0x7f059aaad7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #7 0x555f77e0e040 in abort_message build/./contrib/llvm-project/libcxxabi/src/abort_message.cpp:78:5
    #8 0x555f77e0e476 in demangling_terminate_handler() build/./contrib/llvm-project/libcxxabi/src/cxa_default_handlers.cpp
    #9 0x555f77e0e270 in std::__terminate(void (*)()) build/./contrib/llvm-project/libcxxabi/src/cxa_handlers.cpp:59:9
    #10 0x555f77e0e16f in std::terminate() build/./contrib/llvm-project/libcxxabi/src/cxa_handlers.cpp
    #11 0x555f68f8758c in DB::ContextSharedPart::ContextSharedPart() build/./src/Interpreters/Context.cpp:429:13
    #12 0x555f68ec7f28 in std::__1::__unique_if<DB::ContextSharedPart>::__unique_single std::__1::make_unique[abi:v15000]<DB::ContextSharedPart>() build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714:32
    #13 0x555f68ec7f28 in DB::Context::createShared() build/./src/Interpreters/Context.cpp:810:32
    #14 0x555f661da9f6 in LLVMFuzzerTestOneInput::$_0::operator()() build/./src/Formats/fuzzers/format_fuzzer.cpp:35:30
    #15 0x555f661da26d in LLVMFuzzerTestOneInput build/./src/Formats/fuzzers/format_fuzzer.cpp:48:35
    #16 0x555f75be3e5c in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:612:13
    #17 0x555f75be2112 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:7
    #18 0x555f75be84d2 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:810:5
    #19 0x555f75be95b0 in fuzzer::Fuzzer::Loop(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:865:3
    #20 0x555f75bc590d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #21 0x555f75bb8807 in main build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #22 0x7f059aaaed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #23 0x7f059aaaee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #24 0x555f661085ad in _start (/home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/format_fuzzer+0xa8035ad) (BuildId: 8d28cbd4dda4188ae7579956a91869b2f53fb741)

NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0xa,
\012
artifact_prefix='./'; Test unit written to ./crash-adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
Base64: Cg==
```

#### aggregate_function_state_deserialization_fuzzer
```bash
$ ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer -rss_limit_mb=5560 -timeout=25 -seed=1337 -runs=4 -error_exitcode=78
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1337
INFO: Loaded 1 modules   (2125501 inline 8-bit counters): 2125501 [0x556f5cb10cf8, 0x556f5cd17bb5),
INFO: Loaded 1 PC tables (2125501 PCs): 2125501 [0x556f5cd17bb8,0x556f5ed86788),
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
Attempting to create multiple ContextShared instances. Stack trace:
0. ./build/./src/Common/StackTrace.cpp:349: StackTrace::tryCapture() @ 0x0000000019ec161c in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
1. ./src/Common/StackTrace.h:0: DB::ContextSharedPart::ContextSharedPart() @ 0x000000000a74891c in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
2. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: DB::Context::createShared() @ 0x000000000a67e4e9 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
3. ./build/./src/AggregateFunctions/fuzzers/aggregate_function_state_deserialization_fuzzer.cpp:30: LLVMFuzzerTestOneInput::$_0::operator()() @ 0x0000000009f78317 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
4. ./build/./src/AggregateFunctions/fuzzers/aggregate_function_state_deserialization_fuzzer.cpp:41: LLVMFuzzerTestOneInput @ 0x0000000009f77dc3 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
5. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:0: fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) @ 0x000000001954d77d in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
6. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514: fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) @ 0x000000001954ba33 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
7. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:810: fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) @ 0x0000000019551df3 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
8. ./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDataFlowTrace.h:121: fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) @ 0x0000000019552ed1 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
9. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:914: fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) @ 0x000000001952f22e in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
10. ./build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20: main @ 0x0000000019522128 in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
11. ? @ 0x00007fad8de78d90
12. ? @ 0x00007fad8de78e40
13. _start @ 0x0000000009ea6dee in /home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer
libc++abi: terminating
==31506== ERROR: libFuzzer: deadly signal
    #0 0x556f4816c5e1 in __sanitizer_print_stack_trace (/home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer+0x9f495e1) (BuildId: 63e32b695e40af5a26ae2bfd156cdfec0c11e302)
    #1 0x556f5778f717 in fuzzer::PrintStackTrace() build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5
    #2 0x556f5776bb2a in fuzzer::Fuzzer::CrashCallback() build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3
    #3 0x7fad8de9151f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #4 0x7fad8dee59fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #5 0x7fad8de91475 in gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x42475) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #6 0x7fad8de777f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #7 0x556f592dabe0 in abort_message build/./contrib/llvm-project/libcxxabi/src/abort_message.cpp:78:5
    #8 0x556f592db016 in demangling_terminate_handler() build/./contrib/llvm-project/libcxxabi/src/cxa_default_handlers.cpp
    #9 0x556f592dae10 in std::__terminate(void (*)()) build/./contrib/llvm-project/libcxxabi/src/cxa_handlers.cpp:59:9
    #10 0x556f592dad0f in std::terminate() build/./contrib/llvm-project/libcxxabi/src/cxa_handlers.cpp
    #11 0x556f4896b9ac in DB::ContextSharedPart::ContextSharedPart() build/./src/Interpreters/Context.cpp:429:13
    #12 0x556f488a14e8 in std::__1::__unique_if<DB::ContextSharedPart>::__unique_single std::__1::make_unique[abi:v15000]<DB::ContextSharedPart>() build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714:32
    #13 0x556f488a14e8 in DB::Context::createShared() build/./src/Interpreters/Context.cpp:810:32
    #14 0x556f4819b316 in LLVMFuzzerTestOneInput::$_0::operator()() build/./src/AggregateFunctions/fuzzers/aggregate_function_state_deserialization_fuzzer.cpp:30:30
    #15 0x556f4819adc2 in LLVMFuzzerTestOneInput build/./src/AggregateFunctions/fuzzers/aggregate_function_state_deserialization_fuzzer.cpp:41:35
    #16 0x556f5777077c in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:612:13
    #17 0x556f5776ea32 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:7
    #18 0x556f57774df2 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:810:5
    #19 0x556f57775ed0 in fuzzer::Fuzzer::Loop(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:865:3
    #20 0x556f5775222d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #21 0x556f57745127 in main build/./contrib/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #22 0x7fad8de78d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #23 0x7fad8de78e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f) (BuildId: c289da5071a3399de893d2af81d6a30c62646e1e)
    #24 0x556f480c9ded in _start (/home/szhemzhitskiy/projects/ch-fuzz/build/fuzzers/aggregate_function_state_deserialization_fuzzer+0x9ea6ded) (BuildId: 63e32b695e40af5a26ae2bfd156cdfec0c11e302)

NOTE: libFuzzer has rudimentary signal handlers.
      Combine libFuzzer with AddressSanitizer or similar for better crash reports.
SUMMARY: libFuzzer: deadly signal
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0xa,
\012
artifact_prefix='./'; Test unit written to ./crash-adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
Base64: Cg==
```
#### At the same time other fuzzers run as as expected, e.g. lexer_fuzzer
```bash
$ ch-fuzz/build/fuzzers/lexer_fuzzer -rss_limit_mb=5560 -timeout=25 -seed=1337 -runs=4 -error_exitcode=78
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1337
INFO: Loaded 1 modules   (33087 inline 8-bit counters): 33087 [0x563a2b896358, 0x563a2b89e497),
INFO: Loaded 1 PC tables (33087 PCs): 33087 [0x563a2b89e498,0x563a2b91f888),
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 54 ft: 50 corp: 1/1b exec/s: 0 rss: 37Mb
#3	NEW    cov: 55 ft: 52 corp: 2/2b lim: 4 exec/s: 0 rss: 37Mb L: 1/1 MS: 1 ChangeBit-
	NEW_FUNC[1/2]: 0x563a2b216560 in isWordCharASCII(char) build/./src/Common/StringUtils/StringUtils.h:108
	NEW_FUNC[2/2]: 0x563a2b217ac0 in skipWhitespacesUTF8(char const*, char const*) build/./src/Common/StringUtils/StringUtils.h:191
#4	NEW    cov: 68 ft: 68 corp: 3/4b lim: 4 exec/s: 0 rss: 38Mb L: 2/2 MS: 1 InsertByte-
#4	DONE   cov: 68 ft: 68 corp: 3/4b lim: 4 exec/s: 0 rss: 38Mb
Done 4 runs in 8 second(s)
```

**How to reproduce**

- clang 16
- build options
```
cmake  \
  -G Ninja \
  .. \
  -DCMAKE_CXX_COMPILER_LAUNCHER=/usr/bin/ccache \
  -DCMAKE_C_COMPILER=/usr/lib/llvm-16/bin/clang \
  -DCMAKE_CXX_COMPILER=/usr/lib/llvm-16/bin/clang++ \
  -DCMAKE_BUILD_TYPE=RelWithDebInfo \
  -DLIB_FUZZING_ENGINE:STRING=-fsanitize=fuzzer,address \
  -DENABLE_FUZZING=1 \
  -DWITH_COVERAGE=1 \
  -DENABLE_PROTOBUF=1 \
  -DPARALLEL_COMPILE_JOBS=4 \
  -DWERROR=0 \
  -DSANITIZE=address
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
