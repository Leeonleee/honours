{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 17499,
  "instance_id": "ClickHouse__ClickHouse-17499",
  "issue_numbers": [
    "16953"
  ],
  "base_commit": "2619cde996a1aeebec4764a4077a66cd7d9ee856",
  "patch": "diff --git a/src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp b/src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp\nindex 837819f21f2c..4184c012aca3 100644\n--- a/src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp\n+++ b/src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp\n@@ -655,6 +655,11 @@ void ReplicatedMergeTreeQueue::updateMutations(zkutil::ZooKeeperPtr zookeeper, C\n                 {\n                     LOG_DEBUG(log, \"Removing killed mutation {} from local state.\", entry.znode_name);\n                     some_active_mutations_were_killed = true;\n+                    if (entry.isAlterMutation())\n+                    {\n+                        LOG_DEBUG(log, \"Removed alter {} because mutation {} were killed.\", entry.alter_version, entry.znode_name);\n+                        alter_sequence.finishDataAlter(entry.alter_version, state_lock);\n+                    }\n                 }\n                 else\n                     LOG_DEBUG(log, \"Removing obsolete mutation {} from local state.\", entry.znode_name);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill.reference b/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill.reference\nnew file mode 100644\nindex 000000000000..94e15c09768c\n--- /dev/null\n+++ b/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill.reference\n@@ -0,0 +1,2 @@\n+CREATE TABLE default.concurrent_mutate_kill\\n(\\n    `key` UInt64,\\n    `value` Int64\\n)\\nENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/test_01593/concurrent_mutate_kill\\', \\'1\\')\\nPARTITION BY key % 100\\nORDER BY key\\nSETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 8192\n+499999500000\ndiff --git a/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill.sh b/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill.sh\nnew file mode 100755\nindex 000000000000..dd8eb9d731e2\n--- /dev/null\n+++ b/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill.sh\n@@ -0,0 +1,52 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+. \"$CURDIR\"/../shell_config.sh\n+\n+$CLICKHOUSE_CLIENT --query \"DROP TABLE IF EXISTS concurrent_mutate_kill\"\n+\n+$CLICKHOUSE_CLIENT --query \"CREATE TABLE concurrent_mutate_kill (key UInt64, value String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_01593/concurrent_mutate_kill', '1') ORDER BY key PARTITION BY key % 100 SETTINGS max_replicated_mutations_in_queue=1000, number_of_free_entries_in_pool_to_execute_mutation=0,max_replicated_merges_in_queue=1000\"\n+\n+$CLICKHOUSE_CLIENT --query \"INSERT INTO concurrent_mutate_kill SELECT number, toString(number) FROM numbers(1000000)\"\n+\n+function alter_thread\n+{\n+    while true; do\n+        TYPE=$($CLICKHOUSE_CLIENT --query \"SELECT type FROM system.columns WHERE table='concurrent_mutate_kill' and database='${CLICKHOUSE_DATABASE}' and name='value'\")\n+        if [ \"$TYPE\" == \"String\" ]; then\n+            $CLICKHOUSE_CLIENT --query \"ALTER TABLE concurrent_mutate_kill MODIFY COLUMN value UInt64 SETTINGS replication_alter_partitions_sync=2\"\n+        else\n+            $CLICKHOUSE_CLIENT --query \"ALTER TABLE concurrent_mutate_kill MODIFY COLUMN value String SETTINGS replication_alter_partitions_sync=2\"\n+        fi\n+    done\n+}\n+\n+function kill_mutation_thread\n+{\n+    while true; do\n+        mutation_id=$($CLICKHOUSE_CLIENT --query \"SELECT mutation_id FROM system.mutations WHERE is_done=0 and database='${CLICKHOUSE_DATABASE}' and table='concurrent_mutate_kill' LIMIT 1\")\n+        if [ ! -z \"$mutation_id\" ]; then\n+            $CLICKHOUSE_CLIENT --query \"KILL MUTATION WHERE mutation_id='$mutation_id'\" 1> /dev/null\n+            sleep 1\n+        fi\n+    done\n+}\n+\n+\n+export -f alter_thread;\n+export -f kill_mutation_thread;\n+\n+TIMEOUT=30\n+\n+timeout $TIMEOUT bash -c alter_thread 2> /dev/null &\n+timeout $TIMEOUT bash -c kill_mutation_thread 2> /dev/null &\n+\n+wait\n+\n+$CLICKHOUSE_CLIENT --query \"SYSTEM SYNC REPLICA concurrent_mutate_kill\"\n+$CLICKHOUSE_CLIENT --query \"ALTER TABLE concurrent_mutate_kill MODIFY COLUMN value Int64 SETTINGS replication_alter_partitions_sync=2\"\n+$CLICKHOUSE_CLIENT --query \"SHOW CREATE TABLE concurrent_mutate_kill\"\n+$CLICKHOUSE_CLIENT --query \"OPTIMIZE TABLE concurrent_mutate_kill FINAL\"\n+$CLICKHOUSE_CLIENT --query \"SELECT sum(value) FROM concurrent_mutate_kill\"\n+\n+$CLICKHOUSE_CLIENT --query \"DROP TABLE IF EXISTS concurrent_mutate_kill\"\ndiff --git a/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill_many_replicas.reference b/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill_many_replicas.reference\nnew file mode 100644\nindex 000000000000..cb1eace24a26\n--- /dev/null\n+++ b/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill_many_replicas.reference\n@@ -0,0 +1,16 @@\n+499999500000\n+499999500000\n+499999500000\n+499999500000\n+499999500000\n+Metadata version on replica 1 equal with first replica, OK\n+CREATE TABLE default.concurrent_kill_1\\n(\\n    `key` UInt64,\\n    `value` Int64\\n)\\nENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/test_01593_concurrent_kill\\', \\'1\\')\\nORDER BY key\\nSETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 8192\n+Metadata version on replica 2 equal with first replica, OK\n+CREATE TABLE default.concurrent_kill_2\\n(\\n    `key` UInt64,\\n    `value` Int64\\n)\\nENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/test_01593_concurrent_kill\\', \\'2\\')\\nORDER BY key\\nSETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 8192\n+Metadata version on replica 3 equal with first replica, OK\n+CREATE TABLE default.concurrent_kill_3\\n(\\n    `key` UInt64,\\n    `value` Int64\\n)\\nENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/test_01593_concurrent_kill\\', \\'3\\')\\nORDER BY key\\nSETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 8192\n+Metadata version on replica 4 equal with first replica, OK\n+CREATE TABLE default.concurrent_kill_4\\n(\\n    `key` UInt64,\\n    `value` Int64\\n)\\nENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/test_01593_concurrent_kill\\', \\'4\\')\\nORDER BY key\\nSETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 8192\n+Metadata version on replica 5 equal with first replica, OK\n+CREATE TABLE default.concurrent_kill_5\\n(\\n    `key` UInt64,\\n    `value` Int64\\n)\\nENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/test_01593_concurrent_kill\\', \\'5\\')\\nORDER BY key\\nSETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 8192\n+499999500000\ndiff --git a/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill_many_replicas.sh b/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill_many_replicas.sh\nnew file mode 100755\nindex 000000000000..cfbb183263d0\n--- /dev/null\n+++ b/tests/queries/0_stateless/01593_concurrent_alter_mutations_kill_many_replicas.sh\n@@ -0,0 +1,79 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+. \"$CURDIR\"/../shell_config.sh\n+\n+REPLICAS=5\n+\n+for i in $(seq $REPLICAS); do\n+    $CLICKHOUSE_CLIENT --query \"DROP TABLE IF EXISTS concurrent_kill_$i\"\n+done\n+\n+for i in $(seq $REPLICAS); do\n+    $CLICKHOUSE_CLIENT --query \"CREATE TABLE concurrent_kill_$i (key UInt64, value String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_01593_concurrent_kill', '$i') ORDER BY key SETTINGS max_replicated_mutations_in_queue=1000, number_of_free_entries_in_pool_to_execute_mutation=0,max_replicated_merges_in_queue=1000\"\n+done\n+\n+$CLICKHOUSE_CLIENT --query \"INSERT INTO concurrent_kill_1 SELECT number, toString(number) FROM numbers(1000000)\"\n+\n+for i in $(seq $REPLICAS); do\n+    $CLICKHOUSE_CLIENT --query \"SYSTEM SYNC REPLICA concurrent_kill_$i\"\n+    $CLICKHOUSE_CLIENT --query \"SELECT sum(toUInt64(value)) FROM concurrent_kill_$i\"\n+done\n+\n+function alter_thread\n+{\n+    while true; do\n+        REPLICA=$(($RANDOM % 5 + 1))\n+        TYPE=$($CLICKHOUSE_CLIENT --query \"SELECT type FROM system.columns WHERE table='concurrent_kill_$REPLICA' and database='${CLICKHOUSE_DATABASE}' and name='value'\")\n+        if [ \"$TYPE\" == \"String\" ]; then\n+            $CLICKHOUSE_CLIENT --query \"ALTER TABLE concurrent_kill_$REPLICA MODIFY COLUMN value UInt64 SETTINGS replication_alter_partitions_sync=2\"\n+        else\n+            $CLICKHOUSE_CLIENT --query \"ALTER TABLE concurrent_kill_$REPLICA MODIFY COLUMN value String SETTINGS replication_alter_partitions_sync=2\"\n+        fi\n+    done\n+}\n+\n+function kill_mutation_thread\n+{\n+    while true; do\n+        mutation_id=$($CLICKHOUSE_CLIENT --query \"SELECT mutation_id FROM system.mutations WHERE is_done = 0 and table like 'concurrent_kill_%' and database='${CLICKHOUSE_DATABASE}' LIMIT 1\")\n+        if [ ! -z \"$mutation_id\" ]; then\n+            $CLICKHOUSE_CLIENT --query \"KILL MUTATION WHERE mutation_id='$mutation_id'\" 1> /dev/null\n+            sleep 1\n+        fi\n+    done\n+}\n+\n+export -f alter_thread;\n+export -f kill_mutation_thread;\n+\n+TIMEOUT=30\n+\n+timeout $TIMEOUT bash -c alter_thread 2> /dev/null &\n+timeout $TIMEOUT bash -c kill_mutation_thread 2> /dev/null &\n+\n+wait\n+\n+for i in $(seq $REPLICAS); do\n+    $CLICKHOUSE_CLIENT --query \"SYSTEM SYNC REPLICA concurrent_kill_$i\"\n+done\n+\n+$CLICKHOUSE_CLIENT --query \"ALTER TABLE concurrent_kill_$i MODIFY COLUMN value Int64 SETTINGS replication_alter_partitions_sync=2\"\n+\n+metadata_version=$($CLICKHOUSE_CLIENT --query \"SELECT value FROM system.zookeeper WHERE path = '/clickhouse/tables/test_01593_concurrent_kill/replicas/$i/' and name = 'metadata_version'\")\n+for i in $(seq $REPLICAS); do\n+    replica_metadata_version=$($CLICKHOUSE_CLIENT --query \"SELECT value FROM system.zookeeper WHERE path = '/clickhouse/tables/test_01593_concurrent_kill/replicas/$i/' and name = 'metadata_version'\")\n+    if [ \"$metadata_version\" != \"$replica_metadata_version\" ]; then\n+        echo \"Metadata version on replica $i differs from the first replica, FAIL\"\n+    else\n+        echo \"Metadata version on replica $i equal with first replica, OK\"\n+    fi\n+\n+    $CLICKHOUSE_CLIENT --query \"SHOW CREATE TABLE concurrent_kill_$i\"\n+done\n+\n+$CLICKHOUSE_CLIENT --query \"SELECT sum(value) FROM concurrent_kill_1\"\n+\n+for i in $(seq $REPLICAS); do\n+    $CLICKHOUSE_CLIENT --query \"DROP TABLE IF EXISTS concurrent_kill_$i\"\n+done\n",
  "problem_statement": "In some cases killed mutation lead to unfinished alter\nOne of our users just killed mutations produced by `ALTER MODIFY` queries on 21 servers. After that new alters on three servers stuck with:\r\n```\r\nCannot execute alter metadata with version: 8 because another alter 7 must be executed before\r\n```\r\n\r\nHowever, there is no corresponding alter \u21167 in the replication queue and no undone mutations:\r\n```\r\nselect * from system.mutations where is_done = 0\r\n```\r\n\r\nHowever, in the ZooKeeper, we have the correct state of metadata_version:\r\n```\r\nRow 13:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\nname:           metadata_version\r\nvalue:          7\r\nczxid:          23078663291\r\nmzxid:          29401964979\r\nctime:          2020-09-02 17:52:08\r\nmtime:          2020-11-13 00:43:18\r\nversion:        7\r\ncversion:       0\r\naversion:       0\r\nephemeralOwner: 0\r\ndataLength:     1\r\nnumChildren:    0\r\npzxid:          23078663291\r\n```\r\n`SYSTEM RESTART REPLICA dbname.table_name` solves the issue, but it seems like` KILL MUTATION` in some cases can lead to unfinished alter.\n",
  "hints_text": "",
  "created_at": "2020-11-27T15:49:36Z"
}