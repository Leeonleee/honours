diff --git a/tests/queries/0_stateless/02708_query_cache_sparse_columns.reference b/tests/queries/0_stateless/02708_query_cache_sparse_columns.reference
new file mode 100644
index 000000000000..d00491fd7e5b
--- /dev/null
+++ b/tests/queries/0_stateless/02708_query_cache_sparse_columns.reference
@@ -0,0 +1,1 @@
+1
diff --git a/tests/queries/0_stateless/02708_query_cache_sparse_columns.sql b/tests/queries/0_stateless/02708_query_cache_sparse_columns.sql
new file mode 100644
index 000000000000..952c32278526
--- /dev/null
+++ b/tests/queries/0_stateless/02708_query_cache_sparse_columns.sql
@@ -0,0 +1,23 @@
+-- Tags: no-parallel
+
+DROP TABLE IF EXISTS t_cache_sparse;
+SYSTEM DROP QUERY CACHE;
+
+CREATE TABLE t_cache_sparse (id UInt64, v UInt64)
+ENGINE = MergeTree ORDER BY id
+SETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;
+
+SYSTEM STOP MERGES t_cache_sparse;
+
+INSERT INTO t_cache_sparse SELECT number, number FROM numbers(10000);
+INSERT INTO t_cache_sparse SELECT number, 0 FROM numbers(10000);
+
+SET allow_experimental_query_cache = 1;
+SET use_query_cache = 1;
+SET max_threads = 1;
+
+SELECT v FROM t_cache_sparse FORMAT Null;
+SELECT v FROM t_cache_sparse FORMAT Null;
+SELECT count() FROM system.query_cache WHERE query LIKE 'SELECT v FROM t_cache_sparse%';
+
+DROP TABLE t_cache_sparse;
