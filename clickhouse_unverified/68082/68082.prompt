You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Creating view on S3 glob pattern takes unexpectedly long time
**Describe the unexpected behaviour**

When creating a view, I am observing 4 seconds from my laptop in us east to data in us west, when I'd expect it to be instant.

**How to reproduce**
* Which ClickHouse server version to use

`ClickHouse server version 23.7.1 revision 54464`

* Queries to run that lead to unexpected result

```
CREATE VIEW s3_parquet AS
SELECT *
FROM s3('https://s3.us-west-2.amazonaws.com/ookla-open-data/parquet/performance/type=*/year=*/quarter=*/*.parquet', 'Parquet', 'quadkey Nullable(String), tile Nullable(String), avg_d_kbps Nullable(Int64), avg_u_kbps Nullable(Int64), avg_lat_ms Nullable(Int64), tests Nullable(Int64), devices Nullable(Int64)')

Query id: 7eaf74c7-25ba-4748-8dff-6f4accdcdabb

Ok.

0 rows in set. Elapsed: 4.021 sec.

d2e52eb1a093 :) select count() from s3_parquet

SELECT count()
FROM s3_parquet

Query id: a703f818-ac38-40ea-a1fa-8736c28f5bd3

┌───count()─┐
│ 185832935 │
└───────────┘

1 row in set. Elapsed: 40.022 sec. Processed 185.83 million rows, 7.17 GB (4.64 million rows/s., 179.10 MB/s.)
```

Without View (killed to reset cache):
```
SELECT count()
FROM s3('https://s3.us-west-2.amazonaws.com/ookla-open-data/parquet/performance/type=*/year=*/quarter=*/*.parquet', 'Parquet', 'quadkey Nullable(String), tile Nullable(String), avg_d_kbps Nullable(Int64), avg_u_kbps Nullable(Int64), avg_lat_ms Nullable(Int64), tests Nullable(Int64), devices Nullable(Int64)')

Query id: 2f8b2625-9e89-418e-8d58-e5cff0d2e7e2

┌───count()─┐
│ 185832935 │
└───────────┘

1 row in set. Elapsed: 40.336 sec. Processed 185.83 million rows, 7.17 GB (4.61 million rows/s., 177.71 MB/s.)
```

I've specified the schema to remove the possibility that it needs to scan files to determine schema. As you can see creating the view takes 4 seconds, but the count of both queries takes nearly identical time. I am not sure what it is doing when creating the view but from at least this query it does not seem to be helpful.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
