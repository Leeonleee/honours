{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 33146,
  "instance_id": "ClickHouse__ClickHouse-33146",
  "issue_numbers": [
    "32937"
  ],
  "base_commit": "75b0aef03aad3db76a0e0bec681740e38db60622",
  "patch": "diff --git a/src/Functions/IFunction.cpp b/src/Functions/IFunction.cpp\nindex 222e91aac630..cfb4e12a0250 100644\n--- a/src/Functions/IFunction.cpp\n+++ b/src/Functions/IFunction.cpp\n@@ -321,7 +321,7 @@ ColumnPtr IExecutableFunction::execute(const ColumnsWithTypeAndName & arguments,\n                 return res->cloneResized(input_rows_count);\n \n             /// If default of sparse column is changed after execution of function, convert to full column.\n-            if (!res->isDefaultAt(0))\n+            if (!result_type->supportsSparseSerialization() || !res->isDefaultAt(0))\n             {\n                 const auto & offsets_data = assert_cast<const ColumnVector<UInt64> &>(*sparse_offsets).getData();\n                 return res->createWithOffsets(offsets_data, (*res)[0], input_rows_count, /*shift=*/ 1);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01780_column_sparse_pk.reference b/tests/queries/0_stateless/01780_column_sparse_pk.reference\nindex 56131dcfaed2..11bb0471689c 100644\n--- a/tests/queries/0_stateless/01780_column_sparse_pk.reference\n+++ b/tests/queries/0_stateless/01780_column_sparse_pk.reference\n@@ -7,3 +7,9 @@\n 200\t84\n 800\t167\n 800\t167\n+\\N\n+\\N\n+\\N\n+[]\n+[]\n+[]\ndiff --git a/tests/queries/0_stateless/01780_column_sparse_pk.sql b/tests/queries/0_stateless/01780_column_sparse_pk.sql\nindex a162f7bdfcef..63ed9e99a87e 100644\n--- a/tests/queries/0_stateless/01780_column_sparse_pk.sql\n+++ b/tests/queries/0_stateless/01780_column_sparse_pk.sql\n@@ -32,4 +32,12 @@ SELECT count(v), sum(v) FROM t_sparse_pk WHERE k = 0;\n SELECT count(v), sum(v) FROM t_full_pk WHERE k = 0;\n \n SELECT count(v), sum(v) FROM t_sparse_pk WHERE k = 0 OR k = 3 OR k = 7 OR k = 8;\n-SELECT count(v), sum(v) FROM t_full_pk WHERE k = 0 OR k = 3 OR k = 7 OR k = 8;\n\\ No newline at end of file\n+SELECT count(v), sum(v) FROM t_full_pk WHERE k = 0 OR k = 3 OR k = 7 OR k = 8;\n+\n+SET force_primary_key = 0;\n+\n+SELECT (k = NULL) OR (k = 1000) FROM t_sparse_pk LIMIT 3;\n+SELECT range(k) FROM t_sparse_pk LIMIT 3;\n+\n+DROP TABLE IF EXISTS t_sparse_pk;\n+DROP TABLE IF EXISTS t_full_pk;\n",
  "problem_statement": "./src/Common/assert_cast.h:50:12: runtime error: downcast of address 0x7f8af4055270 which does not point to an object of type 'const DB::ColumnNullable' \nhttps://s3.amazonaws.com/clickhouse-test-reports/0/6bd7e425c641417b9235ebf6d3ac876118f06fbe/fuzzer_astfuzzerubsan,actions//report.html\r\n\r\nIt's related to `ColumnSparse`.\n",
  "hints_text": "",
  "created_at": "2021-12-24T16:41:04Z"
}