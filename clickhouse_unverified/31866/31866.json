{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 31866,
  "instance_id": "ClickHouse__ClickHouse-31866",
  "issue_numbers": [
    "31687"
  ],
  "base_commit": "af998af7104ff3008c6c0c40eca7cdb66eea5606",
  "patch": "diff --git a/src/Interpreters/OptimizeIfWithConstantConditionVisitor.cpp b/src/Interpreters/OptimizeIfWithConstantConditionVisitor.cpp\nindex 993c9945039d..0440c52797c4 100644\n--- a/src/Interpreters/OptimizeIfWithConstantConditionVisitor.cpp\n+++ b/src/Interpreters/OptimizeIfWithConstantConditionVisitor.cpp\n@@ -28,6 +28,8 @@ static bool tryExtractConstValueFromCondition(const ASTPtr & condition, bool & v\n     }\n \n     /// cast of numeric constant in condition to UInt8\n+    /// Note: this solution is ad-hoc and only implemented for yandex.metrica use case.\n+    /// We should allow any constant condition (or maybe remove this optimization completely) later.\n     if (const auto * function = condition->as<ASTFunction>())\n     {\n         if (isFunctionCast(function))\n@@ -49,6 +51,16 @@ static bool tryExtractConstValueFromCondition(const ASTPtr & condition, bool & v\n                 }\n             }\n         }\n+        else if (function->name == \"toUInt8\" || function->name == \"toInt8\")\n+        {\n+            if (const auto * expr_list = function->arguments->as<ASTExpressionList>())\n+            {\n+                if (expr_list->children.size() != 1)\n+                    throw Exception(ErrorCodes::NUMBER_OF_ARGUMENTS_DOESNT_MATCH, \"Function {} must have exactly two arguments\", function->name);\n+\n+                return tryExtractConstValueFromCondition(expr_list->children.at(0), value);\n+            }\n+        }\n     }\n \n     return false;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02125_constant_if_condition_and_not_existing_column.reference b/tests/queries/0_stateless/02125_constant_if_condition_and_not_existing_column.reference\nnew file mode 100644\nindex 000000000000..67f2590a0c6b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02125_constant_if_condition_and_not_existing_column.reference\n@@ -0,0 +1,8 @@\n+42\n+42\n+42\n+42\n+42\n+42\n+42\n+42\ndiff --git a/tests/queries/0_stateless/02125_constant_if_condition_and_not_existing_column.sql b/tests/queries/0_stateless/02125_constant_if_condition_and_not_existing_column.sql\nnew file mode 100644\nindex 000000000000..ad3d417bc26c\n--- /dev/null\n+++ b/tests/queries/0_stateless/02125_constant_if_condition_and_not_existing_column.sql\n@@ -0,0 +1,14 @@\n+drop table if exists test;\n+-- this queries does not have to pass, but they works historically\n+-- let's support this while can, see #31687\n+create table test (x String) Engine=StripeLog;\n+insert into test values (0);\n+select if(0, y, 42) from test;\n+select if(1, 42, y) from test;\n+select if(toUInt8(0), y, 42) from test;\n+select if(toInt8(0), y, 42) from test;\n+select if(toUInt8(1), 42, y) from test;\n+select if(toInt8(1), 42, y) from test;\n+select if(toUInt8(toUInt8(0)), y, 42) from test;\n+select if(cast(cast(0, 'UInt8'), 'UInt8'), y, 42) from test;\n+drop table if exists t;\n",
  "problem_statement": "Missing unused column in \"if\" expression when upgrading to 21.11.4.14\n21.11.4.14\r\n```\r\ncreate table test (x String) Engine=StripeLog\r\nselect if(toUInt8(0), y, 42) from test\r\n```\r\n\r\nThrows exception `DB::Exception: Missing columns: 'y'`\r\nExcpecting 42\r\nbtw `select if(0, y, 42) from test` works fine\r\n\n",
  "hints_text": "",
  "created_at": "2021-11-26T12:39:14Z"
}