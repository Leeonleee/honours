{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 33504,
  "instance_id": "ClickHouse__ClickHouse-33504",
  "issue_numbers": [
    "33028"
  ],
  "base_commit": "c5140673775e29be9ee7ea9433248006704f8b97",
  "patch": "diff --git a/src/Functions/replicate.h b/src/Functions/replicate.h\nindex 2455fda39c96..6012207980e5 100644\n--- a/src/Functions/replicate.h\n+++ b/src/Functions/replicate.h\n@@ -34,6 +34,8 @@ class FunctionReplicate : public IFunction\n \n     bool useDefaultImplementationForNulls() const override { return false; }\n \n+    bool useDefaultImplementationForLowCardinalityColumns() const override { return false; }\n+\n     DataTypePtr getReturnTypeImpl(const DataTypes & arguments) const override;\n \n     ColumnPtr executeImpl(const ColumnsWithTypeAndName & arguments, const DataTypePtr &, size_t) const override;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02155_nested_lc_defalut_bug.reference b/tests/queries/0_stateless/02155_nested_lc_defalut_bug.reference\nnew file mode 100644\nindex 000000000000..fe99b0a65850\n--- /dev/null\n+++ b/tests/queries/0_stateless/02155_nested_lc_defalut_bug.reference\n@@ -0,0 +1,1 @@\n+1\t['a','b']\t[3,4]\t['','']\ndiff --git a/tests/queries/0_stateless/02155_nested_lc_defalut_bug.sql b/tests/queries/0_stateless/02155_nested_lc_defalut_bug.sql\nnew file mode 100644\nindex 000000000000..45cb9f96b95b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02155_nested_lc_defalut_bug.sql\n@@ -0,0 +1,8 @@\n+DROP TABLE IF EXISTS nested_test;\n+CREATE TABLE nested_test (x UInt32, `nest.col1` Array(String), `nest.col2` Array(Int8)) ENGINE = MergeTree ORDER BY x;\n+\n+ALTER TABLE nested_test ADD COLUMN `nest.col3` Array(LowCardinality(String));\n+INSERT INTO nested_test (x, `nest.col1`, `nest.col2`) values (1, ['a', 'b'], [3, 4]);\n+SELECT * FROM nested_test;\n+\n+DROP TABLE IF EXISTS nested_test;\n",
  "problem_statement": "Type mismatch for nested Column that has type Array(LowCardinality(String))\nwhen I added a new column of the nested table using the type: Array(LowCardinality(String)), then insert data without this new column, it will throw an exception, the steps as follow:\r\n\r\n- 1. Initial table\r\n```\r\n  CREATE TABLE nested_test\r\n  (\r\n      `c1` UInt32,\r\n      `c2` DateTime,\r\n      `nest.col1` Array(String),\r\n      `nest.col2` Array(Int8)\r\n  )\r\n  ENGINE = MergeTree\r\n  ORDER BY (c1, c2);\r\n```\r\n\r\n- 2. populate some data before adding new element into the nested column structure\r\n```\r\nINSERT INTO nested_test (c1, c2, `nest.col1`, `nest.col2`)\r\nSELECT * FROM generateRandom('c1 UInt32, c2 DateTime, `nest.col1` Array(String), `nest.col2` Array(Int8)') LIMIT 1000000;\r\n```\r\n- 3. adding new element \r\n```\r\nALTER TABLE nested_test \r\n    ADD COLUMN `nest.col3` Array(LowCardinality(String));\r\n```\r\n- 4. try to add the same data:\r\n```\r\nINSERT INTO nested_test (c1, c2, `nest.col1`, `nest.col2`)\r\nSELECT * FROM generateRandom('c1 UInt32, c2 DateTime, `nest.col1` Array(String), `nest.col2` Array(Int8)') LIMIT 1000000;\r\n```\r\n**DB::Exception:**\r\n- CH version 21.8.12 (the same exception in version 21.12.2.17): \r\nReceived exception from server (version 21.8.12):\r\nCode: 53. DB::Exception: Received from localhost:9000. DB::Exception: Type mismatch for column nest.col3. Column has type Array(LowCardinality(String)), got type Array(String). \r\n\r\n- CH version 21.11.6:\r\nReceived exception from server (version 21.11.6):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Block structure mismatch in  function connect between ConvertingTransform and MergeTreeSink stream: different types:\r\nnest.col3 Array(String) Array(size = 0, UInt64(size = 0), String(size = 0))\r\nnest.col3 Array(LowCardinality(String)) Array(size = 0, UInt64(size = 0), ColumnLowCardinality(size = 0, UInt8(size = 0), ColumnUnique(size = 1, String(size = 1)))). (LOGICAL_ERROR)\r\n\r\n\r\n> when I use Array(String) instead of Array(LowCardinality(String)), insert successfully, or I added the new column with default value:\r\n```\r\nALTER TABLE nested_test ADD COLUMN `nest.col3` Array(LowCardinality(String)) default arrayResize(CAST([], 'Array(LowCardinality(String))'), length(`nest.col1`));\r\n```\n",
  "hints_text": "Works with Strings but not with LowCardinality(String)\r\n\r\n>ALTER TABLE nested_test  ADD COLUMN `nest.col3` Array(String);\r\n\r\nAll Ok\r\n\r\n\r\n>ALTER TABLE nested_test    ADD COLUMN `nest.col3` Array(LowCardinality(String));\r\n\r\nNot Ok\r\n\nClickhouse Version: 21.3.17.2\r\nClickhouse Version: 21.3.18.4\r\nClickhouse Version: 21.3.19.1\r\nClickhouse Version: 21.7.10.4\r\nClickhouse Version: 21.7.11.3\r\nClickhouse Version: 21.8.6.15\r\nClickhouse Version: 21.8.7.22\r\nClickhouse Version: 21.8.8.29\r\nClickhouse Version: 21.8.9.13\r\nClickhouse Version: 21.8.10.19\r\nClickhouse Version: 21.8.11.4\r\nClickhouse Version: 21.8.12.29\r\nClickhouse Version: 21.9.2.17\r\nClickhouse Version: 21.9.4.35\r\nClickhouse Version: 21.9.5.16\r\nClickhouse Version: 21.9.6.24\r\nClickhouse Version: 21.10.2.15\r\nClickhouse Version: 21.10.3.9\r\nClickhouse Version: 21.10.4.26\r\nClickhouse Version: 21.10.5.3\r\nClickhouse Version: 21.11.2.2\r\nClickhouse Version: 21.11.3.6\r\nClickhouse Version: 21.11.4.14\r\nClickhouse Version: 21.11.5.33\r\nClickhouse Version: 21.11.6.7\r\nClickhouse Version: 21.11.7.9\r\nClickhouse Version: 21.12.2.17\r\n\r\n**these CK versions also throw the same exception:**\r\nCode: 49. DB::Exception: Block structure mismatch in  function connect between ConvertingTransform and MergeTreeSink stream: different types:\r\n\r\nadded default value on the Array(LowCardinality(String)) column, works well, no exception:\r\n```\r\nALTER TABLE nested_test \r\n        MODIFY COLUMN `nest.col3` Array(LowCardinality(String)) DEFAULT arrayResize(CAST([], 'Array(LowCardinality(String))'), length(`nest.col1`));\r\n```",
  "created_at": "2022-01-10T18:31:05Z"
}