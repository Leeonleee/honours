{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 82831,
  "instance_id": "ClickHouse__ClickHouse-82831",
  "issue_numbers": [
    "82828"
  ],
  "base_commit": "53edaed76ea4674d6c2b9b152a537dcb673ef4e5",
  "patch": "diff --git a/src/Parsers/ExpressionElementParsers.cpp b/src/Parsers/ExpressionElementParsers.cpp\nindex 29ca7ff1e4f2..007f76ee37a1 100644\n--- a/src/Parsers/ExpressionElementParsers.cpp\n+++ b/src/Parsers/ExpressionElementParsers.cpp\n@@ -2388,9 +2388,6 @@ bool ParserTTLElement::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n     ParserKeyword s_set(Keyword::SET);\n     ParserKeyword s_recompress(Keyword::RECOMPRESS);\n     ParserKeyword s_codec(Keyword::CODEC);\n-    ParserKeyword s_materialize(Keyword::MATERIALIZE);\n-    ParserKeyword s_remove(Keyword::REMOVE);\n-    ParserKeyword s_modify(Keyword::MODIFY);\n \n     ParserIdentifier parser_identifier;\n     ParserStringLiteral parser_string_literal;\n@@ -2398,12 +2395,6 @@ bool ParserTTLElement::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n     ParserExpressionList parser_keys_list(false);\n     ParserCodec parser_codec;\n \n-    if (s_materialize.checkWithoutMoving(pos, expected) ||\n-        s_remove.checkWithoutMoving(pos, expected) ||\n-        s_modify.checkWithoutMoving(pos, expected))\n-\n-        return false;\n-\n     ASTPtr ttl_expr;\n     if (!parser_exp.parse(pos, ttl_expr, expected))\n         return false;\ndiff --git a/src/Parsers/ParserAlterQuery.cpp b/src/Parsers/ParserAlterQuery.cpp\nindex 2c127e6ff1e1..6f6910186198 100644\n--- a/src/Parsers/ParserAlterQuery.cpp\n+++ b/src/Parsers/ParserAlterQuery.cpp\n@@ -40,6 +40,7 @@ bool ParserAlterCommand::parseImpl(Pos & pos, ASTPtr & node, Expected & expected\n \n     ParserKeyword s_modify_order_by(Keyword::MODIFY_ORDER_BY);\n     ParserKeyword s_modify_sample_by(Keyword::MODIFY_SAMPLE_BY);\n+    ParserKeyword s_materialize(Keyword::MATERIALIZE);\n     ParserKeyword s_modify_ttl(Keyword::MODIFY_TTL);\n     ParserKeyword s_materialize_ttl(Keyword::MATERIALIZE_TTL);\n     ParserKeyword s_modify_setting(Keyword::MODIFY_SETTING);\n@@ -886,6 +887,13 @@ bool ParserAlterCommand::parseImpl(Pos & pos, ASTPtr & node, Expected & expected\n             }\n             else if (s_modify_ttl.ignore(pos, expected))\n             {\n+                /// MODIFY TTL MATERIALIZE|REMOVE|MODIFY is illegal\n+                /// because MATERIALIZE|REMOVE|MODIFY TTL is used instead.\n+                if (s_materialize.checkWithoutMoving(pos, expected) ||\n+                    s_remove.checkWithoutMoving(pos, expected) ||\n+                    s_modify.checkWithoutMoving(pos, expected))\n+                    return false;\n+\n                 if (!parser_ttl_list.parse(pos, command_ttl, expected))\n                     return false;\n                 command->type = ASTAlterCommand::MODIFY_TTL;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03555_inconsistent_formatting_ttl.reference b/tests/queries/0_stateless/03555_inconsistent_formatting_ttl.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/03555_inconsistent_formatting_ttl.sql b/tests/queries/0_stateless/03555_inconsistent_formatting_ttl.sql\nnew file mode 100644\nindex 000000000000..45a54932102f\n--- /dev/null\n+++ b/tests/queries/0_stateless/03555_inconsistent_formatting_ttl.sql\n@@ -0,0 +1,3 @@\n+DROP TABLE IF EXISTS t0;\n+CREATE TABLE t0 (c0 Date) ENGINE = MergeTree() ORDER BY () TTL (materialize(c0));\n+DROP TABLE t0;\n",
  "problem_statement": "Inconsistent formatting of TTL\n> An example with TTL:\n> \n> ```sql\n> CREATE TABLE t0 (c0 Int) ENGINE = MergeTree() TTL (materialize(c0));\n> ```\n> New case? \n\n _Originally posted by @PedroTadim in [#82105](https://github.com/ClickHouse/ClickHouse/issues/82105#issuecomment-2991839888)_\n",
  "hints_text": "",
  "created_at": "2025-06-29T07:01:33Z"
}