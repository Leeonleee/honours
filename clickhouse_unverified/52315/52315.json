{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 52315,
  "instance_id": "ClickHouse__ClickHouse-52315",
  "issue_numbers": [
    "51257"
  ],
  "base_commit": "a4a8c731088b339b08fc10cf68e2f0e2685e2a34",
  "patch": "diff --git a/docs/en/operations/system-tables/events.md b/docs/en/operations/system-tables/events.md\nindex ba5602ee292f..26f5cb2031bd 100644\n--- a/docs/en/operations/system-tables/events.md\n+++ b/docs/en/operations/system-tables/events.md\n@@ -10,6 +10,7 @@ Columns:\n - `event` ([String](../../sql-reference/data-types/string.md)) \u2014 Event name.\n - `value` ([UInt64](../../sql-reference/data-types/int-uint.md)) \u2014 Number of events occurred.\n - `description` ([String](../../sql-reference/data-types/string.md)) \u2014 Event description.\n+- `name` ([String](../../sql-reference/data-types/string.md)) \u2014 Alias for `event`.\n \n **Example**\n \ndiff --git a/docs/en/operations/system-tables/metrics.md b/docs/en/operations/system-tables/metrics.md\nindex 5a7dfd03eb49..6771e8d7aad5 100644\n--- a/docs/en/operations/system-tables/metrics.md\n+++ b/docs/en/operations/system-tables/metrics.md\n@@ -10,6 +10,7 @@ Columns:\n - `metric` ([String](../../sql-reference/data-types/string.md)) \u2014 Metric name.\n - `value` ([Int64](../../sql-reference/data-types/int-uint.md)) \u2014 Metric value.\n - `description` ([String](../../sql-reference/data-types/string.md)) \u2014 Metric description.\n+- `name` ([String](../../sql-reference/data-types/string.md)) \u2014 Alias for `metric`.\n \n The list of supported metrics you can find in the [src/Common/CurrentMetrics.cpp](https://github.com/ClickHouse/ClickHouse/blob/master/src/Common/CurrentMetrics.cpp) source file of ClickHouse.\n \ndiff --git a/src/Storages/System/StorageSystemEvents.cpp b/src/Storages/System/StorageSystemEvents.cpp\nindex b9b07cfe0ac5..a914c60abf4b 100644\n--- a/src/Storages/System/StorageSystemEvents.cpp\n+++ b/src/Storages/System/StorageSystemEvents.cpp\n@@ -16,6 +16,13 @@ NamesAndTypesList StorageSystemEvents::getNamesAndTypes()\n     };\n }\n \n+NamesAndAliases StorageSystemEvents::getNamesAndAliases()\n+{\n+    return {\n+        {\"name\", std::make_shared<DataTypeString>(), \"event\"}\n+    };\n+}\n+\n void StorageSystemEvents::fillData(MutableColumns & res_columns, ContextPtr context, const SelectQueryInfo &) const\n {\n     for (ProfileEvents::Event i = ProfileEvents::Event(0), end = ProfileEvents::end(); i < end; ++i)\ndiff --git a/src/Storages/System/StorageSystemEvents.h b/src/Storages/System/StorageSystemEvents.h\nindex ea0322c13b8e..b2e4bac072ab 100644\n--- a/src/Storages/System/StorageSystemEvents.h\n+++ b/src/Storages/System/StorageSystemEvents.h\n@@ -17,6 +17,8 @@ class StorageSystemEvents final : public IStorageSystemOneBlock<StorageSystemEve\n \n     static NamesAndTypesList getNamesAndTypes();\n \n+    static NamesAndAliases getNamesAndAliases();\n+\n protected:\n     using IStorageSystemOneBlock::IStorageSystemOneBlock;\n \ndiff --git a/src/Storages/System/StorageSystemMetrics.cpp b/src/Storages/System/StorageSystemMetrics.cpp\nindex 6007c8a7c71f..ced363fed174 100644\n--- a/src/Storages/System/StorageSystemMetrics.cpp\n+++ b/src/Storages/System/StorageSystemMetrics.cpp\n@@ -17,6 +17,13 @@ NamesAndTypesList StorageSystemMetrics::getNamesAndTypes()\n     };\n }\n \n+NamesAndAliases StorageSystemMetrics::getNamesAndAliases()\n+{\n+    return {\n+        {\"name\", std::make_shared<DataTypeString>(), \"metric\"}\n+    };\n+}\n+\n void StorageSystemMetrics::fillData(MutableColumns & res_columns, ContextPtr, const SelectQueryInfo &) const\n {\n     for (size_t i = 0, end = CurrentMetrics::end(); i < end; ++i)\ndiff --git a/src/Storages/System/StorageSystemMetrics.h b/src/Storages/System/StorageSystemMetrics.h\nindex def95e0a9340..e3e2c07014f2 100644\n--- a/src/Storages/System/StorageSystemMetrics.h\n+++ b/src/Storages/System/StorageSystemMetrics.h\n@@ -18,6 +18,8 @@ class StorageSystemMetrics final : public IStorageSystemOneBlock<StorageSystemMe\n \n     static NamesAndTypesList getNamesAndTypes();\n \n+    static NamesAndAliases getNamesAndAliases();\n+\n protected:\n     using IStorageSystemOneBlock::IStorageSystemOneBlock;\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02117_show_create_table_system.reference b/tests/queries/0_stateless/02117_show_create_table_system.reference\nindex d58c76260c59..435554555084 100644\n--- a/tests/queries/0_stateless/02117_show_create_table_system.reference\n+++ b/tests/queries/0_stateless/02117_show_create_table_system.reference\n@@ -262,7 +262,8 @@ CREATE TABLE system.events\n (\n     `event` String,\n     `value` UInt64,\n-    `description` String\n+    `description` String,\n+    `name` String\n )\n ENGINE = SystemEvents\n COMMENT 'SYSTEM TABLE is built on the fly.'\n@@ -383,7 +384,8 @@ CREATE TABLE system.metrics\n (\n     `metric` String,\n     `value` Int64,\n-    `description` String\n+    `description` String,\n+    `name` String\n )\n ENGINE = SystemMetrics\n COMMENT 'SYSTEM TABLE is built on the fly.'\n",
  "problem_statement": "system.events and system.metrics tables should have column `name` as an alias to `event` and `metric`\n\n",
  "hints_text": "",
  "created_at": "2023-07-19T09:40:37Z"
}