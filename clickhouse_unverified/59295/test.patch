diff --git a/docker/test/stateless/stress_tests.lib b/docker/test/stateless/stress_tests.lib
index 6f0dabb52071..6e1834d6cded 100644
--- a/docker/test/stateless/stress_tests.lib
+++ b/docker/test/stateless/stress_tests.lib
@@ -78,6 +78,8 @@ function configure()
         randomize_config_boolean_value use_compression zookeeper
     fi
 
+    randomize_config_boolean_value allow_experimental_block_number_column block_number
+
     # for clickhouse-server (via service)
     echo "ASAN_OPTIONS='malloc_context_size=10 verbosity=1 allocator_release_to_os_interval_ms=10000'" >> /etc/environment
     # for clickhouse-client
diff --git a/docker/test/upgrade/run.sh b/docker/test/upgrade/run.sh
index 9c0082093160..aaba5cc6a8c7 100644
--- a/docker/test/upgrade/run.sh
+++ b/docker/test/upgrade/run.sh
@@ -122,6 +122,7 @@ rm /etc/clickhouse-server/config.d/merge_tree.xml
 rm /etc/clickhouse-server/config.d/enable_wait_for_shutdown_replicated_tables.xml
 rm /etc/clickhouse-server/config.d/zero_copy_destructive_operations.xml
 rm /etc/clickhouse-server/config.d/storage_conf_02963.xml
+rm /etc/clickhouse-server/config.d/block_number.xml
 rm /etc/clickhouse-server/users.d/nonconst_timezone.xml
 rm /etc/clickhouse-server/users.d/s3_cache_new.xml
 rm /etc/clickhouse-server/users.d/replicated_ddl_entry.xml
diff --git a/tests/config/config.d/block_number.xml b/tests/config/config.d/block_number.xml
new file mode 100644
index 000000000000..b56f1f1afc25
--- /dev/null
+++ b/tests/config/config.d/block_number.xml
@@ -0,0 +1,6 @@
+<clickhouse>
+    <merge_tree>
+        <!-- Setting randomized for stress test, it is disabled here and this line is used to randomize it in the script -->
+        <allow_experimental_block_number_column>0</allow_experimental_block_number_column>
+    </merge_tree>
+</clickhouse>
diff --git a/tests/config/install.sh b/tests/config/install.sh
index a68a4c195019..cfe810cda843 100755
--- a/tests/config/install.sh
+++ b/tests/config/install.sh
@@ -64,6 +64,7 @@ ln -sf $SRC_PATH/config.d/backups.xml $DEST_SERVER_PATH/config.d/
 ln -sf $SRC_PATH/config.d/filesystem_caches_path.xml $DEST_SERVER_PATH/config.d/
 ln -sf $SRC_PATH/config.d/validate_tcp_client_information.xml $DEST_SERVER_PATH/config.d/
 ln -sf $SRC_PATH/config.d/zero_copy_destructive_operations.xml $DEST_SERVER_PATH/config.d/
+ln -sf $SRC_PATH/config.d/block_number.xml $DEST_SERVER_PATH/config.d/
 
 # Not supported with fasttest.
 if [ "${DEST_SERVER_PATH}" = "/etc/clickhouse-server" ]
diff --git a/tests/queries/0_stateless/02973_block_number_sparse_serialization_and_mutation.reference b/tests/queries/0_stateless/02973_block_number_sparse_serialization_and_mutation.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/02973_block_number_sparse_serialization_and_mutation.sql b/tests/queries/0_stateless/02973_block_number_sparse_serialization_and_mutation.sql
new file mode 100644
index 000000000000..7a1de2897fbf
--- /dev/null
+++ b/tests/queries/0_stateless/02973_block_number_sparse_serialization_and_mutation.sql
@@ -0,0 +1,39 @@
+-- Tags: zookeeper
+
+-- we need exact block-numbers
+SET insert_keeper_fault_injection_probability=0;
+
+DROP TABLE IF EXISTS table_with_some_columns;
+
+CREATE TABLE table_with_some_columns(
+    key UInt64,
+    value0 UInt8
+)
+ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/table_with_some_columns', '1')
+ORDER BY key
+SETTINGS allow_experimental_block_number_column=1,
+ratio_of_defaults_for_sparse_serialization=0.0001,
+min_bytes_for_wide_part = 0,
+replace_long_file_name_to_hash=0; -- simpler to debug
+
+INSERT INTO table_with_some_columns SELECT rand(), number + 10 from numbers(100000);
+
+INSERT INTO table_with_some_columns SELECT rand(), number + 10 from numbers(1);
+
+OPTIMIZE TABLE table_with_some_columns FINAL;
+
+INSERT INTO table_with_some_columns SELECT rand(), number+222222222 from numbers(1);
+
+OPTIMIZE TABLE table_with_some_columns FINAL;
+
+set alter_sync = 2;
+
+ALTER TABLE table_with_some_columns DROP COLUMN value0;
+
+INSERT INTO table_with_some_columns SELECT rand() from numbers(1);
+
+OPTIMIZE TABLE table_with_some_columns FINAL;
+
+SELECT *, _block_number FROM table_with_some_columns where not ignore(*) Format Null;
+
+DROP TABLE IF EXISTS table_with_some_columns;
