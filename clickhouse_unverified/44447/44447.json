{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 44447,
  "instance_id": "ClickHouse__ClickHouse-44447",
  "issue_numbers": [
    "42637"
  ],
  "base_commit": "643a35bed1950cb62460e026d07066a4a643ece1",
  "patch": "diff --git a/src/Interpreters/MutationsInterpreter.cpp b/src/Interpreters/MutationsInterpreter.cpp\nindex 26b8bce1f4a7..0552c41fce7e 100644\n--- a/src/Interpreters/MutationsInterpreter.cpp\n+++ b/src/Interpreters/MutationsInterpreter.cpp\n@@ -43,6 +43,7 @@ namespace ErrorCodes\n     extern const int UNKNOWN_MUTATION_COMMAND;\n     extern const int NO_SUCH_COLUMN_IN_TABLE;\n     extern const int CANNOT_UPDATE_COLUMN;\n+    extern const int UNEXPECTED_EXPRESSION;\n }\n \n namespace\n@@ -941,6 +942,8 @@ QueryPipelineBuilder MutationsInterpreter::addStreamsForLaterStages(const std::v\n         for (size_t i = 0; i < stage.expressions_chain.steps.size(); ++i)\n         {\n             const auto & step = stage.expressions_chain.steps[i];\n+            if (step->actions()->hasArrayJoin())\n+                throw Exception(\"arrayJoin is not allowed in mutations\", ErrorCodes::UNEXPECTED_EXPRESSION);\n             if (i < stage.filter_column_names.size())\n             {\n                 /// Execute DELETEs.\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.reference b/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.reference\nnew file mode 100644\nindex 000000000000..0cfb83aa2f26\n--- /dev/null\n+++ b/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.reference\n@@ -0,0 +1,3 @@\n+1\t1\n+2\t2\n+3\t3\ndiff --git a/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.sql b/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.sql\nnew file mode 100644\nindex 000000000000..d261a71d912c\n--- /dev/null\n+++ b/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.sql\n@@ -0,0 +1,9 @@\n+DROP TABLE IF EXISTS test_02504;\n+\n+CREATE TABLE test_02504 (`a` UInt32,`b` UInt32) ENGINE = MergeTree ORDER BY a;\n+INSERT INTO test_02504 values (1, 1) (2, 2), (3, 3);\n+SELECT * FROM test_02504;\n+\n+ALTER TABLE test_02504 UPDATE b = 33 WHERE arrayJoin([1, 2]) = a; -- { serverError UNEXPECTED_EXPRESSION}\n+\n+DROP TABLE test_02504;\n\\ No newline at end of file\n",
  "problem_statement": "`arrayJoin` in mutation can lead to logical error `Trying to get non existing mark 2, while size is 2`\n**Describe the bug**\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/42463/4645d465b12013d99d88956020034cbfa47d9455/fuzzer_astfuzzerubsan//server.log\r\n\r\n**How to reproduce**\r\n```\r\nCREATE TABLE test_wide_nested (`id` Int, `info.id` Array(Int), `info.name` Array(String), `info.age` Array(Int)) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0\r\n\r\nINSERT INTO test_wide_nested SELECT number, [number, number + 1], ['aa', 'bb'], [number, number * 2] FROM numbers(5)\r\n\r\nALTER TABLE test_wide_nested UPDATE `info.id` = [100, 200, 300], `info.age` = [10, 20, 30], `info.name` = ['a', 'b', 'c'] WHERE arrayJoin([100, -2147483647, NULL]) = id\r\n```\r\n\r\n(note: it is not instantly reproducible, needs more investigation)\n",
  "hints_text": "Using of `arrayJoin` in mutations produces weird result and multiplies number of rows in table. I think, it should be just disallowed.\r\n\r\n```sql\r\nCREATE TABLE test\r\n(\r\n    `a` UInt32,\r\n    `b` UInt32\r\n)\r\nENGINE = MergeTree\r\nORDER BY a;\r\n\r\nINSERT INTO test values (1, 1) (2, 2), (3, 3);\r\n\r\nSELECT * FROM test;\r\n\r\n\u250c\u2500a\u2500\u252c\u2500b\u2500\u2510\r\n\u2502 1 \u2502 1 \u2502\r\n\u2502 2 \u2502 2 \u2502\r\n\u2502 3 \u2502 3 \u2502\r\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\r\n\r\n\r\nALTER TABLE test UPDATE b = 33 WHERE arrayJoin([1, 2]) = a;\r\n\r\nSELECT * FROM test;\r\n\r\n\u250c\u2500a\u2500\u252c\u2500\u2500b\u2500\u2510\r\n\u2502 1 \u2502 33 \u2502\r\n\u2502 1 \u2502  1 \u2502\r\n\u2502 2 \u2502  2 \u2502\r\n\u2502 2 \u2502 33 \u2502\r\n\u2502 3 \u2502  3 \u2502\r\n\u2502 3 \u2502  3 \u2502\r\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518\r\n```\n+1, let's disallow it, similarly to non-deterministic mutations.",
  "created_at": "2022-12-20T17:56:04Z",
  "modified_files": [
    "src/Interpreters/MutationsInterpreter.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.reference",
    "b/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.sql"
  ]
}