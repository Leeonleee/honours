diff --git a/base/common/tests/CMakeLists.txt b/base/common/tests/CMakeLists.txt
index 6775d443fb6a..2a07a94055fb 100644
--- a/base/common/tests/CMakeLists.txt
+++ b/base/common/tests/CMakeLists.txt
@@ -1,25 +1,2 @@
-include (${ClickHouse_SOURCE_DIR}/cmake/add_check.cmake)
-
-add_executable (date_lut2 date_lut2.cpp)
-add_executable (date_lut3 date_lut3.cpp)
-add_executable (date_lut_default_timezone date_lut_default_timezone.cpp)
-add_executable (local_date_time_comparison local_date_time_comparison.cpp)
-add_executable (realloc-perf allocator.cpp)
-
-set(PLATFORM_LIBS ${CMAKE_DL_LIBS})
-
-target_link_libraries (date_lut2 PRIVATE common ${PLATFORM_LIBS})
-target_link_libraries (date_lut3 PRIVATE common ${PLATFORM_LIBS})
-target_link_libraries (date_lut_default_timezone PRIVATE common ${PLATFORM_LIBS})
-target_link_libraries (local_date_time_comparison PRIVATE common ${PLATFORM_LIBS})
-target_link_libraries (realloc-perf PRIVATE common)
-add_check(local_date_time_comparison)
-
-if(USE_GTEST)
-    add_executable(unit_tests_libcommon gtest_json_test.cpp gtest_strong_typedef.cpp gtest_find_symbols.cpp)
-    target_link_libraries(unit_tests_libcommon PRIVATE common ${GTEST_MAIN_LIBRARIES} ${GTEST_LIBRARIES})
-    add_check(unit_tests_libcommon)
-endif()
-
 add_executable (dump_variable dump_variable.cpp)
 target_link_libraries (dump_variable PRIVATE clickhouse_common_io)
diff --git a/base/common/tests/allocator.cpp b/base/common/tests/allocator.cpp
deleted file mode 100644
index 03f6228e0f55..000000000000
--- a/base/common/tests/allocator.cpp
+++ /dev/null
@@ -1,47 +0,0 @@
-#include <cstdlib>
-#include <cstring>
-#include <vector>
-#include <thread>
-
-
-void thread_func()
-{
-    for (size_t i = 0; i < 100; ++i)
-    {
-        size_t size = 4096;
-
-        void * buf = malloc(size);
-        if (!buf)
-            abort();
-        memset(buf, 0, size);
-
-        while (size < 1048576)
-        {
-            size_t next_size = size * 4;
-
-            void * new_buf = realloc(buf, next_size);
-            if (!new_buf)
-                abort();
-            buf = new_buf;
-
-            memset(reinterpret_cast<char*>(buf) + size, 0, next_size - size);
-            size = next_size;
-        }
-
-        free(buf);
-    }
-}
-
-
-int main(int, char **)
-{
-    std::vector<std::thread> threads(16);
-    for (size_t i = 0; i < 1000; ++i)
-    {
-        for (auto & thread : threads)
-            thread = std::thread(thread_func);
-        for (auto & thread : threads)
-            thread.join();
-    }
-    return 0;
-}
diff --git a/base/common/tests/date_lut2.cpp b/base/common/tests/date_lut2.cpp
deleted file mode 100644
index 6dcf5e8adf2e..000000000000
--- a/base/common/tests/date_lut2.cpp
+++ /dev/null
@@ -1,53 +0,0 @@
-#include <iostream>
-#include <cstring>
-
-#include <common/DateLUT.h>
-
-
-static std::string toString(time_t Value)
-{
-    struct tm tm;
-    char buf[96];
-
-    localtime_r(&Value, &tm);
-    snprintf(buf, sizeof(buf), "%04d-%02d-%02d %02d:%02d:%02d",
-             tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec);
-
-    return buf;
-}
-
-static time_t orderedIdentifierToDate(unsigned value)
-{
-    struct tm tm;
-
-    memset(&tm, 0, sizeof(tm));
-
-    tm.tm_year = value / 10000 - 1900;
-    tm.tm_mon = (value % 10000) / 100 - 1;
-    tm.tm_mday = value % 100;
-    tm.tm_isdst = -1;
-
-    return mktime(&tm);
-}
-
-
-void loop(time_t begin, time_t end, int step)
-{
-    const auto & date_lut = DateLUT::instance();
-
-    for (time_t t = begin; t < end; t += step)
-        std::cout << toString(t)
-            << ", " << toString(date_lut.toTime(t))
-            << ", " << date_lut.toHour(t)
-            << std::endl;
-}
-
-
-int main(int, char **)
-{
-    loop(orderedIdentifierToDate(20101031), orderedIdentifierToDate(20101101), 15 * 60);
-    loop(orderedIdentifierToDate(20100328), orderedIdentifierToDate(20100330), 15 * 60);
-    loop(orderedIdentifierToDate(20141020), orderedIdentifierToDate(20141106), 15 * 60);
-
-    return 0;
-}
diff --git a/base/common/tests/date_lut3.cpp b/base/common/tests/date_lut3.cpp
deleted file mode 100644
index 411765d2b2a4..000000000000
--- a/base/common/tests/date_lut3.cpp
+++ /dev/null
@@ -1,62 +0,0 @@
-#include <iostream>
-#include <cstring>
-
-#include <Poco/Exception.h>
-
-#include <common/DateLUT.h>
-
-
-static std::string toString(time_t Value)
-{
-    struct tm tm;
-    char buf[96];
-
-    localtime_r(&Value, &tm);
-    snprintf(buf, sizeof(buf), "%04d-%02d-%02d %02d:%02d:%02d",
-             tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec);
-
-    return buf;
-}
-
-static time_t orderedIdentifierToDate(unsigned value)
-{
-    struct tm tm;
-
-    memset(&tm, 0, sizeof(tm));
-
-    tm.tm_year = value / 10000 - 1900;
-    tm.tm_mon = (value % 10000) / 100 - 1;
-    tm.tm_mday = value % 100;
-    tm.tm_isdst = -1;
-
-    return mktime(&tm);
-}
-
-
-void loop(time_t begin, time_t end, int step)
-{
-    const auto & date_lut = DateLUT::instance();
-
-    for (time_t t = begin; t < end; t += step)
-    {
-        time_t t2 = date_lut.makeDateTime(date_lut.toYear(t), date_lut.toMonth(t), date_lut.toDayOfMonth(t),
-            date_lut.toHour(t), date_lut.toMinute(t), date_lut.toSecond(t));
-
-        std::string s1 = toString(t);
-        std::string s2 = toString(t2);
-
-        std::cerr << s1 << ", " << s2 << std::endl;
-
-        if (s1 != s2)
-            throw Poco::Exception("Test failed.");
-    }
-}
-
-
-int main(int, char **)
-{
-    loop(orderedIdentifierToDate(20101031), orderedIdentifierToDate(20101101), 15 * 60);
-    loop(orderedIdentifierToDate(20100328), orderedIdentifierToDate(20100330), 15 * 60);
-
-    return 0;
-}
diff --git a/base/common/tests/date_lut_default_timezone.cpp b/base/common/tests/date_lut_default_timezone.cpp
deleted file mode 100644
index b8e5aa089310..000000000000
--- a/base/common/tests/date_lut_default_timezone.cpp
+++ /dev/null
@@ -1,31 +0,0 @@
-#include <iostream>
-#include <common/DateLUT.h>
-#include <Poco/Exception.h>
-
-int main(int, char **)
-{
-    try
-    {
-        const auto & date_lut = DateLUT::instance();
-        std::cout << "Detected default timezone: `" << date_lut.getTimeZone() << "'" << std::endl;
-        time_t now = time(nullptr);
-        std::cout << "Current time: " << date_lut.timeToString(now)
-                  << ", UTC: " << DateLUT::instance("UTC").timeToString(now) << std::endl;
-    }
-    catch (const Poco::Exception & e)
-    {
-        std::cerr << e.displayText() << std::endl;
-        return 1;
-    }
-    catch (std::exception & e)
-    {
-        std::cerr << "std::exception: " << e.what() << std::endl;
-        return 2;
-    }
-    catch (...)
-    {
-        std::cerr << "Some exception" << std::endl;
-        return 3;
-    }
-    return 0;
-}
diff --git a/base/common/tests/gtest_json_test.cpp b/base/common/tests/gtest_json_test.cpp
deleted file mode 100644
index 189a1a03d99b..000000000000
--- a/base/common/tests/gtest_json_test.cpp
+++ /dev/null
@@ -1,656 +0,0 @@
-#include <vector>
-#include <string>
-#include <exception>
-#include <common/JSON.h>
-
-#include <boost/range/irange.hpp>
-
-using namespace std::literals::string_literals;
-
-#include <gtest/gtest.h>
-
-enum class ResultType
-{
-    Return,
-    Throw
-};
-
-struct GetStringTestRecord
-{
-    const char * input;
-    ResultType result_type;
-    const char * result;
-};
-
-TEST(JSONSuite, SimpleTest)
-{
-    std::vector<GetStringTestRecord> test_data =
-    {
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Вафельница Vitek WX-1102 FL")", ResultType::Return, "Вафельница Vitek WX-1102 FL" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("184509")", ResultType::Return, "184509" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("Все для детей/Детская техника/Vitek")", ResultType::Return, "Все для детей/Детская техника/Vitek" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("В наличии")", ResultType::Return, "В наличии" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("2390.00")", ResultType::Return, "2390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("Карточка")", ResultType::Return, "Карточка" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("detail")", ResultType::Return, "detail" },
-        { R"("actionField")", ResultType::Return, "actionField" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("http://www.techport.ru/q/?t=вафельница&sort=price&sdim=asc")", ResultType::Return, "http://www.techport.ru/q/?t=вафельница&sort=price&sdim=asc" },
-        { R"("action")", ResultType::Return, "action" },
-        { R"("detail")", ResultType::Return, "detail" },
-        { R"("products")", ResultType::Return, "products" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Вафельница Vitek WX-1102 FL")", ResultType::Return, "Вафельница Vitek WX-1102 FL" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("184509")", ResultType::Return, "184509" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("2390.00")", ResultType::Return, "2390.00" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("Vitek")", ResultType::Return, "Vitek" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("Все для детей/Детская техника/Vitek")", ResultType::Return, "Все для детей/Детская техника/Vitek" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("В наличии")", ResultType::Return, "В наличии" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("isAuthorized")", ResultType::Return, "isAuthorized" },
-        { R"("isSubscriber")", ResultType::Return, "isSubscriber" },
-        { R"("postType")", ResultType::Return, "postType" },
-        { R"("Новости")", ResultType::Return, "Новости" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("Электроплита GEFEST Брест ЭПНД 5140-01 0001")", ResultType::Return, "Электроплита GEFEST Брест ЭПНД 5140-01 0001" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("currencyCode")", ResultType::Return, "currencyCode" },
-        { R"("RUB")", ResultType::Return, "RUB" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("trash_login")", ResultType::Return, "trash_login" },
-        { R"("novikoff")", ResultType::Return, "novikoff" },
-        { R"("trash_cat_link")", ResultType::Return, "trash_cat_link" },
-        { R"("progs")", ResultType::Return, "progs" },
-        { R"("trash_parent_link")", ResultType::Return, "trash_parent_link" },
-        { R"("content")", ResultType::Return, "content" },
-        { R"("trash_posted_parent")", ResultType::Return, "trash_posted_parent" },
-        { R"("content.01.2016")", ResultType::Return, "content.01.2016" },
-        { R"("trash_posted_cat")", ResultType::Return, "trash_posted_cat" },
-        { R"("progs.01.2016")", ResultType::Return, "progs.01.2016" },
-        { R"("trash_virus_count")", ResultType::Return, "trash_virus_count" },
-        { R"("trash_is_android")", ResultType::Return, "trash_is_android" },
-        { R"("trash_is_wp8")", ResultType::Return, "trash_is_wp8" },
-        { R"("trash_is_ios")", ResultType::Return, "trash_is_ios" },
-        { R"("trash_posted")", ResultType::Return, "trash_posted" },
-        { R"("01.2016")", ResultType::Return, "01.2016" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("merchantId")", ResultType::Return, "merchantId" },
-        { R"("13694_49246")", ResultType::Return, "13694_49246" },
-        { R"("cps-source")", ResultType::Return, "cps-source" },
-        { R"("wargaming")", ResultType::Return, "wargaming" },
-        { R"("cps_provider")", ResultType::Return, "cps_provider" },
-        { R"("default")", ResultType::Return, "default" },
-        { R"("errorReason")", ResultType::Return, "errorReason" },
-        { R"("no errors")", ResultType::Return, "no errors" },
-        { R"("scid")", ResultType::Return, "scid" },
-        { R"("isAuthPayment")", ResultType::Return, "isAuthPayment" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("rubric")", ResultType::Return, "rubric" },
-        { R"("")", ResultType::Return, "" },
-        { R"("rubric")", ResultType::Return, "rubric" },
-        { R"("Мир")", ResultType::Return, "Мир" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("__ym")", ResultType::Return, "__ym" },
-        { R"("ecommerce")", ResultType::Return, "ecommerce" },
-        { R"("impressions")", ResultType::Return, "impressions" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("863813")", ResultType::Return, "863813" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Happy, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Happy, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("863839")", ResultType::Return, "863839" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Pretty kitten, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Pretty kitten, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("863847")", ResultType::Return, "863847" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Little tiger, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Little tiger, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911480")", ResultType::Return, "911480" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Puppy, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Puppy, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911484")", ResultType::Return, "911484" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Little bears, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Little bears, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911489")", ResultType::Return, "911489" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Dolphin, возраст 2-4 года, трикотаж")", ResultType::Return, "Футболка детская 3D Dolphin, возраст 2-4 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911496")", ResultType::Return, "911496" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Pretty, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Pretty, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911504")", ResultType::Return, "911504" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Fairytale, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Fairytale, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911508")", ResultType::Return, "911508" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Kittens, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Kittens, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911512")", ResultType::Return, "911512" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Sunshine, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Sunshine, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911516")", ResultType::Return, "911516" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Dog in bag, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Dog in bag, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911520")", ResultType::Return, "911520" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Cute puppy, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Cute puppy, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911524")", ResultType::Return, "911524" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Rabbit, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Rabbit, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("911528")", ResultType::Return, "911528" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Футболка детская 3D Turtle, возраст 1-2 года, трикотаж")", ResultType::Return, "Футболка детская 3D Turtle, возраст 1-2 года, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("390.00")", ResultType::Return, "390.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("888616")", ResultType::Return, "888616" },
-        { R"("name")", ResultType::Return, "name" },
-        { "\"3Д Футболка мужская \\\"Collorista\\\" Светлое завтра р-р XL(52-54), 100% хлопок, трикотаж\"", ResultType::Return, "3Д Футболка мужская \"Collorista\" Светлое завтра р-р XL(52-54), 100% хлопок, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Одежда и обувь/Мужская одежда/Футболки/")", ResultType::Return, "/Одежда и обувь/Мужская одежда/Футболки/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("406.60")", ResultType::Return, "406.60" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("913361")", ResultType::Return, "913361" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("3Д Футболка детская World р-р 8-10, 100% хлопок, трикотаж")", ResultType::Return, "3Д Футболка детская World р-р 8-10, 100% хлопок, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("470.00")", ResultType::Return, "470.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("913364")", ResultType::Return, "913364" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("3Д Футболка детская Force р-р 8-10, 100% хлопок, трикотаж")", ResultType::Return, "3Д Футболка детская Force р-р 8-10, 100% хлопок, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("470.00")", ResultType::Return, "470.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("913367")", ResultType::Return, "913367" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("3Д Футболка детская Winter tale р-р 8-10, 100% хлопок, трикотаж")", ResultType::Return, "3Д Футболка детская Winter tale р-р 8-10, 100% хлопок, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("470.00")", ResultType::Return, "470.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("913385")", ResultType::Return, "913385" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("3Д Футболка детская Moonshine р-р 8-10, 100% хлопок, трикотаж")", ResultType::Return, "3Д Футболка детская Moonshine р-р 8-10, 100% хлопок, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("470.00")", ResultType::Return, "470.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("913391")", ResultType::Return, "913391" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("3Д Футболка детская Shaman р-р 8-10, 100% хлопок, трикотаж")", ResultType::Return, "3Д Футболка детская Shaman р-р 8-10, 100% хлопок, трикотаж" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("/Летние товары/Летний текстиль/")", ResultType::Return, "/Летние товары/Летний текстиль/" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("")", ResultType::Return, "" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("470.00")", ResultType::Return, "470.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("/retailrocket/")", ResultType::Return, "/retailrocket/" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")", ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/" },
-        { R"("usertype")", ResultType::Return, "usertype" },
-        { R"("visitor")", ResultType::Return, "visitor" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("__ym")", ResultType::Return, "__ym" },
-        { R"("ecommerce")", ResultType::Return, "ecommerce" },
-        { R"("impressions")", ResultType::Return, "impressions" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("experiments")", ResultType::Return, "experiments" },
-        { R"("lang")", ResultType::Return, "lang" },
-        { R"("ru")", ResultType::Return, "ru" },
-        { R"("los_portal")", ResultType::Return, "los_portal" },
-        { R"("los_level")", ResultType::Return, "los_level" },
-        { R"("none")", ResultType::Return, "none" },
-        { R"("__ym")", ResultType::Return, "__ym" },
-        { R"("ecommerce")", ResultType::Return, "ecommerce" },
-        { R"("currencyCode")", ResultType::Return, "currencyCode" },
-        { R"("RUR")", ResultType::Return, "RUR" },
-        { R"("impressions")", ResultType::Return, "impressions" },
-        { R"("name")", ResultType::Return, "name" },
-        { R"("Чайник электрический Mystery MEK-1627, белый")", ResultType::Return, "Чайник электрический Mystery MEK-1627, белый" },
-        { R"("brand")", ResultType::Return, "brand" },
-        { R"("Mystery")", ResultType::Return, "Mystery" },
-        { R"("id")", ResultType::Return, "id" },
-        { R"("187180")", ResultType::Return, "187180" },
-        { R"("category")", ResultType::Return, "category" },
-        { R"("Мелкая бытовая техника/Мелкие кухонные приборы/Чайники электрические/Mystery")", ResultType::Return, "Мелкая бытовая техника/Мелкие кухонные приборы/Чайники электрические/Mystery" },
-        { R"("variant")", ResultType::Return, "variant" },
-        { R"("В наличии")", ResultType::Return, "В наличии" },
-        { R"("price")", ResultType::Return, "price" },
-        { R"("1630.00")", ResultType::Return, "1630.00" },
-        { R"("list")", ResultType::Return, "list" },
-        { R"("Карточка")", ResultType::Return, "Карточка" },
-        { R"("position")", ResultType::Return, "position" },
-        { R"("detail")", ResultType::Return, "detail" },
-        { R"("actionField")", ResultType::Return, "actionField" },
-        { R"("list")", ResultType::Return, "list" },
-        { "\0\"", ResultType::Throw, "JSON: expected \", got \0" },
-        { "\"/igrushki/konstruktory\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/1290414/komplekt-zhenskiy-dzhemper-plusbryuki-m-254-09-malina-plustemno-siniy-\0a", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Творчество/Рисование/Инструменты и кра\0a", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Строительство и ремонт/Силовая техника/Зарядные устройства для автомобильных аккумуляторов/Пуско-зарядные устр\xD0\0a", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Строительство и ремонт/Силовая техника/Зарядные устройств\xD0\0t", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Строительство и ремонт/Силовая техника/Зарядные устройства для автомобиль\0k", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\0t", ResultType::Throw, "JSON: expected \", got \0" },
-        { "\"/Хозтовары/Хранение вещей и организа\xD1\0t", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Хозтовары/Товары для стир\0a", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"li\0a", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/734859/samolet-radioupravlyaemyy-istrebitel-rabotaet-o\0k", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/kosmetika-i-parfyum/parfyumeriya/mu\0t", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/ko\0\x04", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "", ResultType::Throw, "JSON: begin >= end." },
-        { "\"/stroitelstvo-i-remont/stroit\0t", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/stroitelstvo-i-remont/stroitelnyy-instrument/av\0k", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/s\0a", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Строительство и ремонт/Строительный инструмент/Изм\0e", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/avto/soputstvuy\0l", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/str\0\xD0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Отвертка 2 в 1 \\\"TUNDRA basic\\\" 5х75 мм (+,-) \0\xFF", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/stroitelstvo-i-remont/stroitelnyy-instrument/avtoinstrumen\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Мелкая бытовая техника/Мелки\xD0\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Пряжа \\\"Бамбук стрейч\\0\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Карандаш чёрнографитны\xD0\0\xD0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Творчество/Рукоделие, аппликации/Пряжа и шерсть для \xD0\0l", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/1071547/karandash-chernografitnyy-volshebstvo-nv-kruglyy-d-7-2mm-dl-176mm-plast-tuba/\0e", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"ca\0e", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"ca\0e", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/1165424/chipbord-vyrubnoy-dlya-skrapbukinga-malyshi-mikki-maus-disney-bebi\0t", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/posuda/kuhonnye-prinadlezhnosti-i-i\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Канцтовары/Ежедневники и блокн\xD0\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/kanctovary/ezhednevniki-i-blok\0a", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Стакан \xD0\0a", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Набор бумаги для скрапбукинга \\\"Мои первый годик\\\": Микки Маус, Дисней бэби, 12 листов 29.5 х 29.5 см, 160\0\x80", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"c\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Органайзер для хранения аксессуаров, \0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"quantity\00", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Сменный блок для тетрадей на кольцах А5, 160 листов клетка, офсет \xE2\x84\0=", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Сувениры/Ф\xD0\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"\0\"", ResultType::Return, "\0" },
-        { "\"\0\x04", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"va\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"ca\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"В \0\x04", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/letnie-tovary/z\0\x04", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Посудомоечная машина Ha\0=", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Крупная бытов\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Полочная акустическая система Magnat Needl\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"brand\00", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"pos\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"c\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"var\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Телевизоры и видеотехника/Всё для домашних кинотеатр\0=", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Флеш-диск Transcend JetFlash 620 8GB (TS8GJF62\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Табурет Мег\0\xD0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"variant\0\x04", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Катал\xD0\0\"", ResultType::Return, "Катал\xD0\0" },
-        { "\"К\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Полочная акустическая система Magnat Needl\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"brand\00", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"pos\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"c\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"17\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/igrushki/razvivayusc\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Ключница \\\"\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Игр\xD1\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Игрушки/Игрушки для девочек/Игровые модули дл\xD1\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Крупная бытовая техника/Стиральные машины/С фронт\xD0\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\0 ", ResultType::Throw, "JSON: expected \", got \0" },
-        { "\"Светодиодная лента SMD3528, 5 м. IP33, 60LED, зеленый, 4,8W/мет\xD1\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Сантехника/Мебель для ванных комнат/Стол\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\0o", ResultType::Throw, "JSON: expected \", got \0" },
-        { "\"/igrushki/konstruktory\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/posuda/kuhonnye-prinadlezhnosti-i-instrumenty/kuhonnye-pr\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/1290414/komplekt-zhenskiy-dzhemper-plusbryuki-m-254-09-malina-plustemno-siniy-\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Творчество/Рисование/Инструменты и кра\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Строительство и ремонт/Силовая техника/Зарядные устройства для автомобильных аккумуляторов/Пуско-зарядные устр\xD0\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Строительство и ремонт/Силовая техника/Зарядные устройств\xD0\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Строительство и ремонт/Силовая техника/Зарядные устройства для автомобиль\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\0 ", ResultType::Throw, "JSON: expected \", got \0" },
-        { "\"/Хозтовары/Хранение вещей и организа\xD1\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Хозтовары/Товары для стир\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"li\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/igrushki/igrus\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/734859/samolet-radioupravlyaemyy-istrebitel-rabotaet-o\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/kosmetika-i-parfyum/parfyumeriya/mu\00", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/ko\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/avto/avtomobilnyy\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/stroitelstvo-i-remont/stroit\00", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/stroitelstvo-i-remont/stroitelnyy-instrument/av\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/s\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Строительство и ремонт/Строительный инструмент/Изм\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/avto/soputstvuy\0\"", ResultType::Return, "/avto/soputstvuy\0" },
-        { "\"/str\0k", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Отвертка 2 в 1 \\\"TUNDRA basic\\\" 5х75 мм (+,-) \0\xD0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/stroitelstvo-i-remont/stroitelnyy-instrument/avtoinstrumen\0=", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Чайник электрический Vitesse\0=", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Мелкая бытовая техника/Мелки\xD0\0\xD0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Пряжа \\\"Бамбук стрейч\\0о", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Карандаш чёрнографитны\xD0\0k", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Творчество/Рукоделие, аппликации/Пряжа и шерсть для \xD0\0\"", ResultType::Return, "/Творчество/Рукоделие, аппликации/Пряжа и шерсть для \xD0\0" },
-        { "\"/1071547/karandash-chernografitnyy-volshebstvo-nv-kruglyy-d-7-2mm-dl-176mm-plast-tuba/\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"ca\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Подаро\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Средство для прочис\xD1\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"i\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/p\0\"", ResultType::Return, "/p\0" },
-        { "\"/Сувениры/Магниты, н\xD0\0k", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Дерев\xD0\0=", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/prazdniki/svadba/svadebnaya-c\0\xD0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Канцт\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Праздники/То\xD0\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"v\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Косметика \xD0\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Спорт и отдых/Настольные игры/Покер, руле\xD1\0\xD0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"categ\0=", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/retailr\0k", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/retailrocket\0k", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Ежедневник недат А5 140л кл,ляссе,обл пв\0=", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/432809/ezhednevnik-organayzer-sredniy-s-remeshkom-na-knopke-v-oblozhke-kalkulyator-kalendar-do-\0\xD0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/1165424/chipbord-vyrubnoy-dlya-skrapbukinga-malyshi-mikki-maus-disney-bebi\0d", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/posuda/kuhonnye-prinadlezhnosti-i-i\0 ", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/Канцтовары/Ежедневники и блокн\xD0\0o", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"/kanctovary/ezhednevniki-i-blok\00", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Стакан \xD0\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"Набор бумаги для скрапбукинга \\\"Мои первый годик\\\": Микки Маус, Дисней бэби, 12 листов 29.5 х 29.5 см, 160\0\0", ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)." },
-        { "\"c\0\"", ResultType::Return, "c\0" },
-    };
-
-    for (auto i : boost::irange(0, 1/*00000*/))
-    {
-        static_cast<void>(i);
-
-        for (auto & r : test_data)
-        {
-            try
-            {
-                JSON j(r.input, r.input + strlen(r.input));
-
-                ASSERT_EQ(j.getString(), r.result);
-                ASSERT_TRUE(r.result_type == ResultType::Return);
-            }
-            catch (JSONException & e)
-            {
-                ASSERT_TRUE(r.result_type == ResultType::Throw);
-                ASSERT_EQ(e.message(), r.result);
-            }
-        }
-    }
-}
diff --git a/base/mysqlxx/tests/CMakeLists.txt b/base/mysqlxx/tests/CMakeLists.txt
index 2cf19d784183..6473a9273089 100644
--- a/base/mysqlxx/tests/CMakeLists.txt
+++ b/base/mysqlxx/tests/CMakeLists.txt
@@ -1,5 +1,2 @@
-add_executable (mysqlxx_test mysqlxx_test.cpp)
-target_link_libraries (mysqlxx_test PRIVATE mysqlxx)
-
 add_executable (mysqlxx_pool_test mysqlxx_pool_test.cpp)
 target_link_libraries (mysqlxx_pool_test PRIVATE mysqlxx)
diff --git a/base/mysqlxx/tests/failover.xml b/base/mysqlxx/tests/failover.xml
deleted file mode 100644
index 73702eabb29e..000000000000
--- a/base/mysqlxx/tests/failover.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version = '1.0' encoding = 'utf-8'?>
-<yandex>
-    <mysql_goals>
-        <port>3306</port>
-        <user>root</user>
-        <db>Metrica</db>
-        <password>qwerty</password>
-        <replica>
-            <host>example02t</host>
-            <priority>0</priority>
-        </replica>
-        <replica>
-            <host>example02t</host>
-            <port>3306</port>
-            <user>root</user>
-            <password>qwerty</password>
-            <db>Metrica</db>
-            <priority>1</priority>
-        </replica>
-    </mysql_goals>
-</yandex>
diff --git a/base/mysqlxx/tests/mysqlxx_test.cpp b/base/mysqlxx/tests/mysqlxx_test.cpp
deleted file mode 100644
index c505d34a58d8..000000000000
--- a/base/mysqlxx/tests/mysqlxx_test.cpp
+++ /dev/null
@@ -1,77 +0,0 @@
-#include <iostream>
-#include <mysqlxx/mysqlxx.h>
-
-
-int main(int, char **)
-{
-    try
-    {
-        mysqlxx::Connection connection("test", "127.0.0.1", "root", "qwerty", 3306);
-        std::cerr << "Connected." << std::endl;
-
-        {
-            mysqlxx::Query query = connection.query();
-            query << "SELECT 1 x, '2010-01-01 01:01:01' d";
-            mysqlxx::UseQueryResult result = query.use();
-            std::cerr << "use() called." << std::endl;
-
-            while (mysqlxx::Row row = result.fetch())
-            {
-                std::cerr << "Fetched row." << std::endl;
-                std::cerr << row[0] << ", " << row["x"] << std::endl;
-                std::cerr << row[1] << ", " << row["d"]
-                    << ", " << row[1].getDate()
-                    << ", " << row[1].getDateTime()
-                    << ", " << row[1].getDate()
-                    << ", " << row[1].getDateTime()
-                    << std::endl
-                    << row[1].getDate() << ", " << row[1].getDateTime() << std::endl
-                    << row[1].getDate() << ", " << row[1].getDateTime() << std::endl
-                    << row[1].getDate() << ", " << row[1].getDateTime() << std::endl
-                    << row[1].getDate() << ", " << row[1].getDateTime() << std::endl
-                    ;
-
-                time_t t1 = row[0];
-                time_t t2 = row[1];
-                std::cerr << t1 << ", " << LocalDateTime(t1) << std::endl;
-                std::cerr << t2 << ", " << LocalDateTime(t2) << std::endl;
-            }
-        }
-
-        {
-            mysqlxx::UseQueryResult result = connection.query("SELECT 'abc\\\\def' x").use();
-            mysqlxx::Row row = result.fetch();
-            std::cerr << row << std::endl;
-            std::cerr << row << std::endl;
-        }
-
-        {
-            /// Копирование Query
-            mysqlxx::Query query1 = connection.query("SELECT");
-            mysqlxx::Query query2 = query1;
-            query2 << " 1";
-
-            std::cerr << query1.str() << ", " << query2.str() << std::endl;
-        }
-
-        {
-            /// NULL
-            mysqlxx::Null<int> x = mysqlxx::null;
-            std::cerr << (x == mysqlxx::null ? "Ok" : "Fail") << std::endl;
-            std::cerr << (x == 0 ? "Fail" : "Ok") << std::endl;
-            std::cerr << (x.isNull() ? "Ok" : "Fail") << std::endl;
-            x = 1;
-            std::cerr << (x == mysqlxx::null ? "Fail" : "Ok") << std::endl;
-            std::cerr << (x == 0 ? "Fail" : "Ok") << std::endl;
-            std::cerr << (x == 1 ? "Ok" : "Fail") << std::endl;
-            std::cerr << (x.isNull() ? "Fail" : "Ok") << std::endl;
-        }
-    }
-    catch (const mysqlxx::Exception & e)
-    {
-        std::cerr << e.code() << ", " << e.message() << std::endl;
-        throw;
-    }
-
-    return 0;
-}
diff --git a/src/Common/tests/gtest_DateLUTImpl.cpp b/src/Common/tests/gtest_DateLUTImpl.cpp
new file mode 100644
index 000000000000..e18bd16e7313
--- /dev/null
+++ b/src/Common/tests/gtest_DateLUTImpl.cpp
@@ -0,0 +1,534 @@
+#include <common/DateLUT.h>
+#include <common/DateLUTImpl.h>
+
+#include <gtest/gtest.h>
+
+#include <string>
+#include <string_view>
+
+#include <cctz/time_zone.h>
+
+
+/// For the expansion of gtest macros.
+#if defined(__clang__)
+    #pragma clang diagnostic ignored "-Wused-but-marked-unused"
+#endif
+
+// All timezones present at build time and embedded into ClickHouse binary.
+extern const char * auto_time_zones[];
+
+namespace
+{
+
+cctz::civil_day YYYYMMDDToDay(unsigned value)
+{
+    return cctz::civil_day(
+        value / 10000,         // year
+        (value % 10000) / 100, // month
+        value % 100);          // day
+}
+
+std::vector<const char*> allTimezones(bool with_weird_offsets = true)
+{
+    std::vector<const char*> result;
+
+    const auto * timezone_name = auto_time_zones;
+    while (*timezone_name)
+    {
+        bool weird_offsets = (std::string_view(*timezone_name) == "Africa/Monrovia");
+
+        if (!weird_offsets || with_weird_offsets)
+            result.push_back(*timezone_name);
+        ++timezone_name;
+    }
+
+    return result;
+}
+
+struct FailuresCount
+{
+    size_t non_fatal = 0;
+    size_t fatal = 0;
+    size_t total = 0;
+};
+
+FailuresCount countFailures(const ::testing::TestResult & test_result)
+{
+    FailuresCount failures{0, 0, 0};
+    const size_t count = test_result.total_part_count();
+    for (size_t i = 0; i < count; ++i)
+    {
+        const auto & part = test_result.GetTestPartResult(i);
+        if (part.nonfatally_failed())
+        {
+            ++failures.non_fatal;
+            ++failures.total;
+        }
+        if (part.fatally_failed())
+        {
+            ++failures.fatal;
+            ++failures.total;
+        }
+    }
+
+    return failures;
+}
+
+}
+
+TEST(DateLUTTest, makeDayNumTest)
+{
+    const DateLUTImpl & lut = DateLUT::instance("UTC");
+    EXPECT_EQ(0, lut.makeDayNum(2500, 12, 25));
+    EXPECT_EQ(0, lut.makeDayNum(1924, 12, 31));
+}
+
+
+TEST(DateLUTTest, TimeValuesInMiddleOfRange)
+{
+    const DateLUTImpl & lut = DateLUT::instance("Europe/Minsk");
+    const time_t time = 1568650811; // 2019-09-16 19:20:11 (Monday)
+
+    EXPECT_EQ(lut.getTimeZone(), "Europe/Minsk");
+    EXPECT_EQ(lut.getOffsetAtStartOfEpoch(), 3600*3); // UTC-3
+
+    EXPECT_EQ(lut.toDate(time), 1568581200);
+    EXPECT_EQ(lut.toMonth(time), 9);
+    EXPECT_EQ(lut.toQuarter(time), 3);
+    EXPECT_EQ(lut.toYear(time), 2019);
+    EXPECT_EQ(lut.toDayOfMonth(time), 16);
+
+    EXPECT_EQ(lut.toFirstDayOfWeek(time), 1568581200 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayNumOfWeek(time), DayNum(18155) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfMonth(time), 1567285200 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayNumOfMonth(time), DayNum(18140) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayNumOfQuarter(time), DayNum(18078) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfQuarter(time), 1561928400 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayOfYear(time), 1546290000 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayNumOfYear(time), DayNum(17897) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfNextMonth(time), 1569877200 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayOfPrevMonth(time), 1564606800 /*time_t*/);
+    EXPECT_EQ(lut.daysInMonth(time), 30 /*UInt8*/);
+    EXPECT_EQ(lut.toDateAndShift(time, 10), 1569445200 /*time_t*/);
+    EXPECT_EQ(lut.toTime(time), 58811 /*time_t*/);
+    EXPECT_EQ(lut.toHour(time), 19 /*unsigned*/);
+    EXPECT_EQ(lut.toSecond(time), 11 /*unsigned*/);
+    EXPECT_EQ(lut.toMinute(time), 20 /*unsigned*/);
+    EXPECT_EQ(lut.toStartOfMinute(time), 1568650800 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFiveMinute(time), 1568650800 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 1568650500 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfTenMinutes(time), 1568650800 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfHour(time), 1568649600 /*time_t*/);
+    EXPECT_EQ(lut.toDayNum(time), DayNum(18155) /*DayNum*/);
+    EXPECT_EQ(lut.toDayOfYear(time), 259 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeWeekNum(time), 2594 /*unsigned*/);
+    EXPECT_EQ(lut.toISOYear(time), 2019 /*unsigned*/);
+    EXPECT_EQ(lut.toFirstDayNumOfISOYear(time), DayNum(17896) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfISOYear(time), 1546203600 /*time_t*/);
+    EXPECT_EQ(lut.toISOWeek(time), 38 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeMonthNum(time), 24237 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeQuarterNum(time), 8078 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeHourNum(time), 435736 /*time_t*/);
+    EXPECT_EQ(lut.toRelativeMinuteNum(time), 26144180 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfHourInterval(time, 5), 1568646000 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfMinuteInterval(time, 6), 1568650680 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfSecondInterval(time, 7), 1568650811 /*time_t*/);
+    EXPECT_EQ(lut.toNumYYYYMM(time), 201909 /*UInt32*/);
+    EXPECT_EQ(lut.toNumYYYYMMDD(time), 20190916 /*UInt32*/);
+    EXPECT_EQ(lut.toNumYYYYMMDDhhmmss(time), 20190916192011 /*UInt64*/);
+    EXPECT_EQ(lut.addDays(time, 100), 1577290811 /*time_t*/);
+    EXPECT_EQ(lut.addWeeks(time, 100), 1629130811 /*time_t*/);
+    EXPECT_EQ(lut.addMonths(time, 100), 1831652411 /*time_t*/);
+    EXPECT_EQ(lut.addQuarters(time, 100), 2357655611 /*time_t*/);
+    EXPECT_EQ(lut.addYears(time, 10), 1884270011 /*time_t*/);
+    EXPECT_EQ(lut.timeToString(time), "2019-09-16 19:20:11" /*std::string*/);
+    EXPECT_EQ(lut.dateToString(time), "2019-09-16" /*std::string*/);
+}
+
+
+TEST(DateLUTTest, TimeValuesAtLeftBoderOfRange)
+{
+    const DateLUTImpl & lut = DateLUT::instance("UTC");
+    const time_t time = 0; // 1970-01-01 00:00:00 (Thursday)
+
+    EXPECT_EQ(lut.getTimeZone(), "UTC");
+
+    EXPECT_EQ(lut.toDate(time), 0);
+    EXPECT_EQ(lut.toMonth(time), 1);
+    EXPECT_EQ(lut.toQuarter(time), 1);
+    EXPECT_EQ(lut.toYear(time), 1970);
+    EXPECT_EQ(lut.toDayOfMonth(time), 1);
+
+    EXPECT_EQ(lut.toFirstDayOfWeek(time), -259200 /*time_t*/); // 1969-12-29 00:00:00
+    EXPECT_EQ(lut.toFirstDayNumOfWeek(time), ExtendedDayNum(-3) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfMonth(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayNumOfMonth(time), DayNum(0) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayNumOfQuarter(time), DayNum(0) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfQuarter(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayOfYear(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayNumOfYear(time), DayNum(0) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfNextMonth(time), 2678400 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayOfPrevMonth(time), -2678400 /*time_t*/); // 1969-12-01 00:00:00
+    EXPECT_EQ(lut.daysInMonth(time), 31 /*UInt8*/);
+    EXPECT_EQ(lut.toDateAndShift(time, 10), 864000 /*time_t*/);
+    EXPECT_EQ(lut.toTime(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toHour(time), 0 /*unsigned*/);
+    EXPECT_EQ(lut.toSecond(time), 0 /*unsigned*/);
+    EXPECT_EQ(lut.toMinute(time), 0 /*unsigned*/);
+    EXPECT_EQ(lut.toStartOfMinute(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFiveMinute(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfTenMinutes(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfHour(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toDayNum(time), DayNum(0) /*DayNum*/);
+    EXPECT_EQ(lut.toDayOfYear(time), 1 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeWeekNum(time), 0 /*unsigned*/);
+    EXPECT_EQ(lut.toISOYear(time), 1970 /*unsigned*/);
+    EXPECT_EQ(lut.toFirstDayNumOfISOYear(time), ExtendedDayNum(-3) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfISOYear(time), -259200 /*time_t*/); // 1969-12-29 00:00:00
+    EXPECT_EQ(lut.toISOWeek(time), 1 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeMonthNum(time), 23641 /*unsigned*/); // ?
+    EXPECT_EQ(lut.toRelativeQuarterNum(time), 7880 /*unsigned*/); // ?
+    EXPECT_EQ(lut.toRelativeHourNum(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toRelativeMinuteNum(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfHourInterval(time, 5), 0 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfMinuteInterval(time, 6), 0 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfSecondInterval(time, 7), 0 /*time_t*/);
+    EXPECT_EQ(lut.toNumYYYYMM(time), 197001 /*UInt32*/);
+    EXPECT_EQ(lut.toNumYYYYMMDD(time), 19700101 /*UInt32*/);
+    EXPECT_EQ(lut.toNumYYYYMMDDhhmmss(time), 19700101000000 /*UInt64*/);
+    EXPECT_EQ(lut.addDays(time, 100), 8640000 /*time_t*/);
+    EXPECT_EQ(lut.addWeeks(time, 100), 60480000 /*time_t*/);
+    EXPECT_EQ(lut.addMonths(time, 100), 262828800 /*time_t*/);
+    EXPECT_EQ(lut.addQuarters(time, 100), 788918400 /*time_t*/);
+    EXPECT_EQ(lut.addYears(time, 10), 315532800 /*time_t*/);
+    EXPECT_EQ(lut.timeToString(time), "1970-01-01 00:00:00" /*std::string*/);
+    EXPECT_EQ(lut.dateToString(time), "1970-01-01" /*std::string*/);
+}
+
+TEST(DateLUTTest, TimeValuesAtRightBoderOfRangeOfOldLUT)
+{
+    // Value is at the right border of the old (small) LUT, and provides meaningful values where old LUT would provide garbage.
+    const DateLUTImpl & lut = DateLUT::instance("UTC");
+
+    const time_t time = 4294343873; // 2106-01-31T01:17:53 (Sunday)
+
+    EXPECT_EQ(lut.getTimeZone(), "UTC");
+
+    EXPECT_EQ(lut.toDate(time), 4294339200);
+    EXPECT_EQ(lut.toMonth(time), 1);
+    EXPECT_EQ(lut.toQuarter(time), 1);
+    EXPECT_EQ(lut.toYear(time), 2106);
+    EXPECT_EQ(lut.toDayOfMonth(time), 31);
+
+    EXPECT_EQ(lut.toFirstDayOfWeek(time), 4293820800 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayNumOfWeek(time), DayNum(49697));
+    EXPECT_EQ(lut.toFirstDayOfMonth(time), 4291747200 /*time_t*/); // 2016-01-01
+    EXPECT_EQ(lut.toFirstDayNumOfMonth(time), DayNum(49673));
+    EXPECT_EQ(lut.toFirstDayNumOfQuarter(time), DayNum(49673) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfQuarter(time), 4291747200 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayOfYear(time), 4291747200 /*time_t*/);
+    EXPECT_EQ(lut.toFirstDayNumOfYear(time), DayNum(49673) /*DayNum*/);
+    EXPECT_EQ(lut.toFirstDayOfNextMonth(time), 4294425600 /*time_t*/); // 2106-02-01
+    EXPECT_EQ(lut.toFirstDayOfPrevMonth(time), 4289068800 /*time_t*/); // 2105-12-01
+    EXPECT_EQ(lut.daysInMonth(time), 31 /*UInt8*/);
+    EXPECT_EQ(lut.toDateAndShift(time, 10), 4295203200 /*time_t*/); // 2106-02-10
+    EXPECT_EQ(lut.toTime(time), 4673 /*time_t*/);
+    EXPECT_EQ(lut.toHour(time), 1 /*unsigned*/);
+    EXPECT_EQ(lut.toMinute(time), 17 /*unsigned*/);
+    EXPECT_EQ(lut.toSecond(time), 53 /*unsigned*/);
+    EXPECT_EQ(lut.toStartOfMinute(time), 4294343820 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFiveMinute(time), 4294343700 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 4294343700 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfTenMinutes(time), 4294343400 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfHour(time), 4294342800 /*time_t*/);
+    EXPECT_EQ(lut.toDayNum(time), DayNum(49703) /*DayNum*/);
+    EXPECT_EQ(lut.toDayOfYear(time), 31 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeWeekNum(time), 7100 /*unsigned*/);
+    EXPECT_EQ(lut.toISOYear(time), 2106 /*unsigned*/);
+    EXPECT_EQ(lut.toFirstDayNumOfISOYear(time), DayNum(49676) /*DayNum*/); // 2106-01-04
+    EXPECT_EQ(lut.toFirstDayOfISOYear(time), 4292006400 /*time_t*/);
+    EXPECT_EQ(lut.toISOWeek(time), 4 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeMonthNum(time), 25273 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeQuarterNum(time), 8424 /*unsigned*/);
+    EXPECT_EQ(lut.toRelativeHourNum(time), 1192873 /*time_t*/);
+    EXPECT_EQ(lut.toRelativeMinuteNum(time), 71572397 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfHourInterval(time, 5), 4294332000 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfMinuteInterval(time, 6), 4294343520 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfSecondInterval(time, 7), 4294343872 /*time_t*/);
+    EXPECT_EQ(lut.toNumYYYYMM(time), 210601 /*UInt32*/);
+    EXPECT_EQ(lut.toNumYYYYMMDD(time), 21060131 /*UInt32*/);
+    EXPECT_EQ(lut.toNumYYYYMMDDhhmmss(time), 21060131011753 /*UInt64*/);
+    EXPECT_EQ(lut.addDays(time, 100), 4302983873 /*time_t*/);
+    EXPECT_EQ(lut.addWeeks(time, 10), 4300391873 /*time_t*/);
+    EXPECT_EQ(lut.addMonths(time, 10), 4320523073 /*time_t*/);                 // 2106-11-30 01:17:53
+    EXPECT_EQ(lut.addQuarters(time, 10), 4373140673 /*time_t*/);               // 2108-07-31 01:17:53
+    EXPECT_EQ(lut.addYears(time, 10), 4609876673 /*time_t*/);                  // 2116-01-31 01:17:53
+
+    EXPECT_EQ(lut.timeToString(time), "2106-01-31 01:17:53" /*std::string*/);
+    EXPECT_EQ(lut.dateToString(time), "2106-01-31" /*std::string*/);
+}
+
+
+class DateLUTWithTimeZone : public ::testing::TestWithParam<const char * /* timezone name */>
+{};
+
+TEST_P(DateLUTWithTimeZone, LoadLUT)
+{
+    // There are some assumptions and assertions about TZ data made in DateLUTImpl which are verified upon loading,
+    // to make sure that those assertions are true for all timezones we are going to load all of them one by one.
+    DateLUT::instance(GetParam());
+}
+
+// Another long running test, shouldn't be run to often
+TEST_P(DateLUTWithTimeZone, VaidateTimeComponentsAroundEpoch)
+{
+    // Converting time around 1970-01-01 to hour-minute-seconds time components
+    // could be problematic.
+    const size_t max_failures_per_tz = 3;
+    const auto * timezone_name = GetParam();
+
+    const auto * test_info = ::testing::UnitTest::GetInstance()->current_test_info();
+    const DateLUTImpl & lut = DateLUT::instance(timezone_name);
+
+    for (time_t i = -856147870; i < 86400 * 10000; i += 11 * 13 * 17 * 19)
+    {
+        SCOPED_TRACE(::testing::Message()
+                << "
\tTimezone: " << timezone_name
+                << "
\ttimestamp: " << i
+                << "
\t offset at start of epoch                  : " << lut.getOffsetAtStartOfEpoch()
+                << "
\t offset_at_start_of_lut                    : " << lut.getTimeOffsetAtStartOfLUT());
+
+        EXPECT_GE(24, lut.toHour(i));
+        EXPECT_GT(60, lut.toMinute(i));
+        EXPECT_GT(60, lut.toSecond(i));
+
+        const auto current_failures = countFailures(*test_info->result());
+        if (current_failures.total > 0)
+        {
+            if (i < 0)
+                i = -1;
+        }
+
+        if (current_failures.total >= max_failures_per_tz)
+            break;
+    }
+}
+
+TEST_P(DateLUTWithTimeZone, getTimeZone)
+{
+    const auto & lut = DateLUT::instance(GetParam());
+
+    EXPECT_EQ(GetParam(), lut.getTimeZone());
+}
+
+
+// Group of tests for timezones that have or had some time ago an offset which is not multiple of 15 minutes.
+INSTANTIATE_TEST_SUITE_P(ExoticTimezones,
+    DateLUTWithTimeZone,
+    ::testing::ValuesIn(std::initializer_list<const char*>{
+            "Africa/El_Aaiun",
+            "Pacific/Apia",
+            "Pacific/Enderbury",
+            "Pacific/Fakaofo",
+            "Pacific/Kiritimati",
+    })
+);
+
+INSTANTIATE_TEST_SUITE_P(AllTimeZones,
+    DateLUTWithTimeZone,
+    ::testing::ValuesIn(allTimezones())
+);
+
+std::ostream & operator<<(std::ostream & ostr, const DateLUTImpl::Values & v)
+{
+    return ostr << "DateLUTImpl::Values{"
+            << "
\t date              : " << v.date
+            << "
\t year              : " << static_cast<unsigned int>(v.year)
+            << "
\t month             : " << static_cast<unsigned int>(v.month)
+            << "
\t day               : " << static_cast<unsigned int>(v.day_of_month)
+            << "
\t weekday           : " << static_cast<unsigned int>(v.day_of_week)
+            << "
\t days in month     : " << static_cast<unsigned int>(v.days_in_month)
+            << "
\t offset change     : " << v.amount_of_offset_change()
+            << "
\t offset change at : " << v.time_at_offset_change()
+            << "
}";
+}
+
+struct TimeRangeParam
+{
+    const cctz::civil_second begin;
+    const cctz::civil_second end;
+    const int step_in_seconds;
+};
+
+std::ostream & operator<<(std::ostream & ostr, const TimeRangeParam & param)
+{
+    return ostr << param.begin << " : " << param.end << " step: " << param.step_in_seconds << "s";
+}
+
+class DateLUTWithTimeZoneAndTimeRange : public ::testing::TestWithParam<std::tuple<const char* /*timezone_name*/, TimeRangeParam>>
+{};
+
+// refactored test from tests/date_lut3.cpp
+TEST_P(DateLUTWithTimeZoneAndTimeRange, InRange)
+{
+    // for a time_t values in range [begin, end) to match with reference obtained from cctz:
+    // compare date and time components: year, month, day, hours, minutes, seconds, formatted time string.
+    const auto & [timezone_name, range_data] = GetParam();
+    const auto & [begin, end, step] = range_data;
+
+    const auto * test_info = ::testing::UnitTest::GetInstance()->current_test_info();
+    static const size_t max_failures_per_case = 3;
+    cctz::time_zone tz;
+    ASSERT_TRUE(cctz::load_time_zone(timezone_name, &tz));
+
+    const auto & lut = DateLUT::instance(timezone_name);
+    const auto start = cctz::convert(begin, tz).time_since_epoch().count();
+    const auto stop = cctz::convert(end, tz).time_since_epoch().count();
+
+    for (time_t expected_time_t = start; expected_time_t < stop; expected_time_t += step)
+    {
+        SCOPED_TRACE(expected_time_t);
+
+        const cctz::civil_second tz_time = cctz::convert(std::chrono::system_clock::from_time_t(expected_time_t), tz);
+
+        /// Weird offset, not supported.
+        /// Example: Africa/Monrovia has offset UTC-0:44:30 in year 1970.
+
+        auto timestamp_current_day_pre = std::chrono::system_clock::to_time_t(tz.lookup(cctz::civil_day(tz_time)).pre);
+        auto timestamp_current_day_post = std::chrono::system_clock::to_time_t(tz.lookup(cctz::civil_day(tz_time) + 1).post);
+
+        if (timestamp_current_day_pre % 900 || timestamp_current_day_post % 900)
+            continue;
+
+        /// Unsupported timezone transitions - not in 15-minute time point or to different day.
+        /// Example: America/Goose_Bay decided to go back one hour at 00:01:
+        /// $ seq 1289097900 30 1289103600 | TZ=America/Goose_Bay LC_ALL=C xargs -I{} date -d @{}
+        /// Sat Nov  6 23:59:00 ADT 2010
+        /// Sat Nov  6 23:59:30 ADT 2010
+        /// Sun Nov  7 00:00:00 ADT 2010
+        /// Sun Nov  7 00:00:30 ADT 2010
+        /// Sat Nov  6 23:01:00 AST 2010
+        /// Sat Nov  6 23:01:30 AST 2010
+
+        bool has_transition = false;
+        cctz::time_zone::civil_transition transition{};
+        if (tz.next_transition(std::chrono::system_clock::from_time_t(expected_time_t - 1), &transition)
+            && (transition.from.day() == tz_time.day() || transition.to.day() == tz_time.day()))
+        {
+            has_transition = true;
+        }
+
+        if (has_transition && (transition.from.second() != 0 || transition.from.minute() % 15 != 0))
+        {
+            /*std::cerr << "Skipping " << timezone_name << " " << tz_time
+                << " because of unsupported timezone transition from " << transition.from << " to " << transition.to
+                << " (not divisible by 15 minutes)
";*/
+            continue;
+        }
+
+        /// Transition to previous day, but not from midnight.
+        if (has_transition && cctz::civil_day(transition.from) == cctz::civil_day(transition.to) + 1
+            && transition.from != cctz::civil_day(transition.from))
+        {
+            /*std::cerr << "Skipping " << timezone_name << " " << tz_time
+                << " because of unsupported timezone transition from " << transition.from << " to " << transition.to
+                << " (to previous day but not at midnight)
";*/
+            continue;
+        }
+
+        /// To large transition.
+        if (has_transition
+            && std::abs(transition.from - transition.to) > 3600 * 3)
+        {
+            /*std::cerr << "Skipping " << timezone_name << " " << tz_time
+                << " because of unsupported timezone transition from " << transition.from << " to " << transition.to
+                << " (it is too large)
";*/
+            continue;
+        }
+
+        EXPECT_EQ(tz_time.year(), lut.toYear(expected_time_t));
+        EXPECT_EQ(tz_time.month(), lut.toMonth(expected_time_t));
+        EXPECT_EQ(tz_time.day(), lut.toDayOfMonth(expected_time_t));
+        /// tm.tm_wday Sunday is 0, while for DateLUTImpl it is 7
+        EXPECT_EQ(static_cast<int>(cctz::get_weekday(tz_time)) + 1, lut.toDayOfWeek(expected_time_t));
+        EXPECT_EQ(cctz::get_yearday(tz_time), lut.toDayOfYear(expected_time_t));
+        EXPECT_EQ(tz_time.hour(), lut.toHour(expected_time_t));
+        EXPECT_EQ(tz_time.minute(), lut.toMinute(expected_time_t));
+        EXPECT_EQ(tz_time.second(), lut.toSecond(expected_time_t));
+
+        const auto time_string = cctz::format("%E4Y-%m-%d %H:%M:%S", std::chrono::system_clock::from_time_t(expected_time_t), tz);
+        EXPECT_EQ(time_string, lut.timeToString(expected_time_t));
+
+        /// It makes sense to let test execute all checks above to simplify debugging,
+        /// but once we've found a bad apple, no need to dig deeper.
+        if (countFailures(*test_info->result()).total >= max_failures_per_case)
+            break;
+    }
+}
+
+INSTANTIATE_TEST_SUITE_P(AllTimezones_Year2010,
+    DateLUTWithTimeZoneAndTimeRange,
+    ::testing::Combine(
+        ::testing::ValuesIn(allTimezones()),
+        ::testing::ValuesIn(std::initializer_list<TimeRangeParam>{
+            // Values from tests/date_lut3.cpp
+            {YYYYMMDDToDay(20101031), YYYYMMDDToDay(20101101), 15 * 60},
+            {YYYYMMDDToDay(20100328), YYYYMMDDToDay(20100330), 15 * 60}
+        }))
+);
+
+INSTANTIATE_TEST_SUITE_P(AllTimezones_Year1970_WHOLE,
+    DateLUTWithTimeZoneAndTimeRange,
+    ::testing::Combine(
+        ::testing::ValuesIn(allTimezones(false)),
+        ::testing::ValuesIn(std::initializer_list<TimeRangeParam>{
+            // Values from tests/date_lut3.cpp
+            {YYYYMMDDToDay(19700101), YYYYMMDDToDay(19701231), 3191 /*53m 11s*/},
+        }))
+);
+
+INSTANTIATE_TEST_SUITE_P(AllTimezones_Year2010_WHOLE,
+    DateLUTWithTimeZoneAndTimeRange,
+    ::testing::Combine(
+        ::testing::ValuesIn(allTimezones(false)),
+        ::testing::ValuesIn(std::initializer_list<TimeRangeParam>{
+            // Values from tests/date_lut3.cpp
+            {YYYYMMDDToDay(20100101), YYYYMMDDToDay(20101231), 3191 /*53m 11s*/},
+        }))
+);
+
+INSTANTIATE_TEST_SUITE_P(AllTimezones_Year2020_WHOLE,
+    DateLUTWithTimeZoneAndTimeRange,
+    ::testing::Combine(
+        ::testing::ValuesIn(allTimezones()),
+        ::testing::ValuesIn(std::initializer_list<TimeRangeParam>{
+            // Values from tests/date_lut3.cpp
+            {YYYYMMDDToDay(20200101), YYYYMMDDToDay(20201231), 3191 /*53m 11s*/},
+        }))
+);
+
+INSTANTIATE_TEST_SUITE_P(AllTimezones_PreEpoch,
+    DateLUTWithTimeZoneAndTimeRange,
+    ::testing::Combine(
+        ::testing::ValuesIn(allTimezones(false)),
+        ::testing::ValuesIn(std::initializer_list<TimeRangeParam>{
+            {YYYYMMDDToDay(19500101), YYYYMMDDToDay(19600101), 15 * 60},
+            {YYYYMMDDToDay(19300101), YYYYMMDDToDay(19350101), 11 * 15 * 60}
+        }))
+);
+
+INSTANTIATE_TEST_SUITE_P(AllTimezones_Year1970,
+    DateLUTWithTimeZoneAndTimeRange,
+    ::testing::Combine(
+        ::testing::ValuesIn(allTimezones(false)),
+        ::testing::ValuesIn(std::initializer_list<TimeRangeParam>{
+            {YYYYMMDDToDay(19700101), YYYYMMDDToDay(19700201), 15 * 60},
+            {YYYYMMDDToDay(19700101), YYYYMMDDToDay(19701231), 11 * 13 * 17}
+//            // 11 was chosen as a number which can't divide product of 2-combinarions of (7, 24, 60),
+//            // to reduce likelehood of hitting same hour/minute/second values for different days.
+//            // + 12 is just to make sure that last day is covered fully.
+//            {0, 0 + 11 * 3600 * 24 + 12, 11},
+        }))
+);
+
diff --git a/base/common/tests/gtest_find_symbols.cpp b/src/Common/tests/gtest_find_symbols.cpp
similarity index 100%
rename from base/common/tests/gtest_find_symbols.cpp
rename to src/Common/tests/gtest_find_symbols.cpp
diff --git a/src/Common/tests/gtest_json_test.cpp b/src/Common/tests/gtest_json_test.cpp
new file mode 100644
index 000000000000..726fb8360302
--- /dev/null
+++ b/src/Common/tests/gtest_json_test.cpp
@@ -0,0 +1,656 @@
+#include <vector>
+#include <string>
+#include <exception>
+#include <string_view>
+#include <common/JSON.h>
+
+#include <boost/range/irange.hpp>
+#include <gtest/gtest.h>
+
+
+enum class ResultType
+{
+    Return,
+    Throw
+};
+
+struct GetStringTestRecord
+{
+    std::string_view input;
+    ResultType result_type;
+    std::string_view result;
+};
+
+TEST(JSONSuite, SimpleTest)
+{
+    using namespace std::literals;
+
+    std::vector<GetStringTestRecord> test_data =
+    {
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Вафельница Vitek WX-1102 FL")"sv, ResultType::Return, "Вафельница Vitek WX-1102 FL"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("184509")"sv, ResultType::Return, "184509"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("Все для детей/Детская техника/Vitek")"sv, ResultType::Return, "Все для детей/Детская техника/Vitek"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("В наличии")"sv, ResultType::Return, "В наличии"sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("2390.00")"sv, ResultType::Return, "2390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("Карточка")"sv, ResultType::Return, "Карточка"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("detail")"sv, ResultType::Return, "detail"sv },
+        { R"("actionField")"sv, ResultType::Return, "actionField"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("http://www.techport.ru/q/?t=вафельница&sort=price&sdim=asc")"sv, ResultType::Return, "http://www.techport.ru/q/?t=вафельница&sort=price&sdim=asc"sv },
+        { R"("action")"sv, ResultType::Return, "action"sv },
+        { R"("detail")"sv, ResultType::Return, "detail"sv },
+        { R"("products")"sv, ResultType::Return, "products"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Вафельница Vitek WX-1102 FL")"sv, ResultType::Return, "Вафельница Vitek WX-1102 FL"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("184509")"sv, ResultType::Return, "184509"sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("2390.00")"sv, ResultType::Return, "2390.00"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("Vitek")"sv, ResultType::Return, "Vitek"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("Все для детей/Детская техника/Vitek")"sv, ResultType::Return, "Все для детей/Детская техника/Vitek"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("В наличии")"sv, ResultType::Return, "В наличии"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("isAuthorized")"sv, ResultType::Return, "isAuthorized"sv },
+        { R"("isSubscriber")"sv, ResultType::Return, "isSubscriber"sv },
+        { R"("postType")"sv, ResultType::Return, "postType"sv },
+        { R"("Новости")"sv, ResultType::Return, "Новости"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("Электроплита GEFEST Брест ЭПНД 5140-01 0001")"sv, ResultType::Return, "Электроплита GEFEST Брест ЭПНД 5140-01 0001"sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("currencyCode")"sv, ResultType::Return, "currencyCode"sv },
+        { R"("RUB")"sv, ResultType::Return, "RUB"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("trash_login")"sv, ResultType::Return, "trash_login"sv },
+        { R"("novikoff")"sv, ResultType::Return, "novikoff"sv },
+        { R"("trash_cat_link")"sv, ResultType::Return, "trash_cat_link"sv },
+        { R"("progs")"sv, ResultType::Return, "progs"sv },
+        { R"("trash_parent_link")"sv, ResultType::Return, "trash_parent_link"sv },
+        { R"("content")"sv, ResultType::Return, "content"sv },
+        { R"("trash_posted_parent")"sv, ResultType::Return, "trash_posted_parent"sv },
+        { R"("content.01.2016")"sv, ResultType::Return, "content.01.2016"sv },
+        { R"("trash_posted_cat")"sv, ResultType::Return, "trash_posted_cat"sv },
+        { R"("progs.01.2016")"sv, ResultType::Return, "progs.01.2016"sv },
+        { R"("trash_virus_count")"sv, ResultType::Return, "trash_virus_count"sv },
+        { R"("trash_is_android")"sv, ResultType::Return, "trash_is_android"sv },
+        { R"("trash_is_wp8")"sv, ResultType::Return, "trash_is_wp8"sv },
+        { R"("trash_is_ios")"sv, ResultType::Return, "trash_is_ios"sv },
+        { R"("trash_posted")"sv, ResultType::Return, "trash_posted"sv },
+        { R"("01.2016")"sv, ResultType::Return, "01.2016"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("merchantId")"sv, ResultType::Return, "merchantId"sv },
+        { R"("13694_49246")"sv, ResultType::Return, "13694_49246"sv },
+        { R"("cps-source")"sv, ResultType::Return, "cps-source"sv },
+        { R"("wargaming")"sv, ResultType::Return, "wargaming"sv },
+        { R"("cps_provider")"sv, ResultType::Return, "cps_provider"sv },
+        { R"("default")"sv, ResultType::Return, "default"sv },
+        { R"("errorReason")"sv, ResultType::Return, "errorReason"sv },
+        { R"("no errors")"sv, ResultType::Return, "no errors"sv },
+        { R"("scid")"sv, ResultType::Return, "scid"sv },
+        { R"("isAuthPayment")"sv, ResultType::Return, "isAuthPayment"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("rubric")"sv, ResultType::Return, "rubric"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("rubric")"sv, ResultType::Return, "rubric"sv },
+        { R"("Мир")"sv, ResultType::Return, "Мир"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("__ym")"sv, ResultType::Return, "__ym"sv },
+        { R"("ecommerce")"sv, ResultType::Return, "ecommerce"sv },
+        { R"("impressions")"sv, ResultType::Return, "impressions"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("863813")"sv, ResultType::Return, "863813"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Happy, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Happy, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("863839")"sv, ResultType::Return, "863839"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Pretty kitten, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Pretty kitten, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("863847")"sv, ResultType::Return, "863847"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Little tiger, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Little tiger, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911480")"sv, ResultType::Return, "911480"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Puppy, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Puppy, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911484")"sv, ResultType::Return, "911484"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Little bears, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Little bears, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911489")"sv, ResultType::Return, "911489"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Dolphin, возраст 2-4 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Dolphin, возраст 2-4 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911496")"sv, ResultType::Return, "911496"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Pretty, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Pretty, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911504")"sv, ResultType::Return, "911504"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Fairytale, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Fairytale, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911508")"sv, ResultType::Return, "911508"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Kittens, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Kittens, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911512")"sv, ResultType::Return, "911512"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Sunshine, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Sunshine, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911516")"sv, ResultType::Return, "911516"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Dog in bag, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Dog in bag, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911520")"sv, ResultType::Return, "911520"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Cute puppy, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Cute puppy, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911524")"sv, ResultType::Return, "911524"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Rabbit, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Rabbit, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("911528")"sv, ResultType::Return, "911528"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Футболка детская 3D Turtle, возраст 1-2 года, трикотаж")"sv, ResultType::Return, "Футболка детская 3D Turtle, возраст 1-2 года, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("390.00")"sv, ResultType::Return, "390.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("888616")"sv, ResultType::Return, "888616"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { "\"3Д Футболка мужская \\\"Collorista\\\" Светлое завтра р-р XL(52-54), 100% хлопок, трикотаж\""sv, ResultType::Return, "3Д Футболка мужская \"Collorista\" Светлое завтра р-р XL(52-54), 100% хлопок, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Одежда и обувь/Мужская одежда/Футболки/")"sv, ResultType::Return, "/Одежда и обувь/Мужская одежда/Футболки/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("406.60")"sv, ResultType::Return, "406.60"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("913361")"sv, ResultType::Return, "913361"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("3Д Футболка детская World р-р 8-10, 100% хлопок, трикотаж")"sv, ResultType::Return, "3Д Футболка детская World р-р 8-10, 100% хлопок, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("470.00")"sv, ResultType::Return, "470.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("913364")"sv, ResultType::Return, "913364"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("3Д Футболка детская Force р-р 8-10, 100% хлопок, трикотаж")"sv, ResultType::Return, "3Д Футболка детская Force р-р 8-10, 100% хлопок, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("470.00")"sv, ResultType::Return, "470.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("913367")"sv, ResultType::Return, "913367"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("3Д Футболка детская Winter tale р-р 8-10, 100% хлопок, трикотаж")"sv, ResultType::Return, "3Д Футболка детская Winter tale р-р 8-10, 100% хлопок, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("470.00")"sv, ResultType::Return, "470.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("913385")"sv, ResultType::Return, "913385"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("3Д Футболка детская Moonshine р-р 8-10, 100% хлопок, трикотаж")"sv, ResultType::Return, "3Д Футболка детская Moonshine р-р 8-10, 100% хлопок, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("470.00")"sv, ResultType::Return, "470.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("913391")"sv, ResultType::Return, "913391"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("3Д Футболка детская Shaman р-р 8-10, 100% хлопок, трикотаж")"sv, ResultType::Return, "3Д Футболка детская Shaman р-р 8-10, 100% хлопок, трикотаж"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("/Летние товары/Летний текстиль/")"sv, ResultType::Return, "/Летние товары/Летний текстиль/"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("")"sv, ResultType::Return, ""sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("470.00")"sv, ResultType::Return, "470.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("/retailrocket/")"sv, ResultType::Return, "/retailrocket/"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/")"sv, ResultType::Return, "/911488/futbolka-detskaya-3d-dolphin-vozrast-1-2-goda-trikotazh/"sv },
+        { R"("usertype")"sv, ResultType::Return, "usertype"sv },
+        { R"("visitor")"sv, ResultType::Return, "visitor"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("__ym")"sv, ResultType::Return, "__ym"sv },
+        { R"("ecommerce")"sv, ResultType::Return, "ecommerce"sv },
+        { R"("impressions")"sv, ResultType::Return, "impressions"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("experiments")"sv, ResultType::Return, "experiments"sv },
+        { R"("lang")"sv, ResultType::Return, "lang"sv },
+        { R"("ru")"sv, ResultType::Return, "ru"sv },
+        { R"("los_portal")"sv, ResultType::Return, "los_portal"sv },
+        { R"("los_level")"sv, ResultType::Return, "los_level"sv },
+        { R"("none")"sv, ResultType::Return, "none"sv },
+        { R"("__ym")"sv, ResultType::Return, "__ym"sv },
+        { R"("ecommerce")"sv, ResultType::Return, "ecommerce"sv },
+        { R"("currencyCode")"sv, ResultType::Return, "currencyCode"sv },
+        { R"("RUR")"sv, ResultType::Return, "RUR"sv },
+        { R"("impressions")"sv, ResultType::Return, "impressions"sv },
+        { R"("name")"sv, ResultType::Return, "name"sv },
+        { R"("Чайник электрический Mystery MEK-1627, белый")"sv, ResultType::Return, "Чайник электрический Mystery MEK-1627, белый"sv },
+        { R"("brand")"sv, ResultType::Return, "brand"sv },
+        { R"("Mystery")"sv, ResultType::Return, "Mystery"sv },
+        { R"("id")"sv, ResultType::Return, "id"sv },
+        { R"("187180")"sv, ResultType::Return, "187180"sv },
+        { R"("category")"sv, ResultType::Return, "category"sv },
+        { R"("Мелкая бытовая техника/Мелкие кухонные приборы/Чайники электрические/Mystery")"sv, ResultType::Return, "Мелкая бытовая техника/Мелкие кухонные приборы/Чайники электрические/Mystery"sv },
+        { R"("variant")"sv, ResultType::Return, "variant"sv },
+        { R"("В наличии")"sv, ResultType::Return, "В наличии"sv },
+        { R"("price")"sv, ResultType::Return, "price"sv },
+        { R"("1630.00")"sv, ResultType::Return, "1630.00"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { R"("Карточка")"sv, ResultType::Return, "Карточка"sv },
+        { R"("position")"sv, ResultType::Return, "position"sv },
+        { R"("detail")"sv, ResultType::Return, "detail"sv },
+        { R"("actionField")"sv, ResultType::Return, "actionField"sv },
+        { R"("list")"sv, ResultType::Return, "list"sv },
+        { "\0\""sv, ResultType::Throw, "JSON: expected \", got \0"sv },
+        { "\"/igrushki/konstruktory\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/1290414/komplekt-zhenskiy-dzhemper-plusbryuki-m-254-09-malina-plustemno-siniy-\0a"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Творчество/Рисование/Инструменты и кра\0a"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Строительство и ремонт/Силовая техника/Зарядные устройства для автомобильных аккумуляторов/Пуско-зарядные устр\xD0\0a"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Строительство и ремонт/Силовая техника/Зарядные устройств\xD0\0t"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Строительство и ремонт/Силовая техника/Зарядные устройства для автомобиль\0k"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\0t"sv, ResultType::Throw, "JSON: expected \", got \0"sv },
+        { "\"/Хозтовары/Хранение вещей и организа\xD1\0t"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Хозтовары/Товары для стир\0a"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"li\0a"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/734859/samolet-radioupravlyaemyy-istrebitel-rabotaet-o\0k"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/kosmetika-i-parfyum/parfyumeriya/mu\0t"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/ko\0\x04"sv, ResultType::Throw, "JSON: begin >= end."sv },
+        { ""sv, ResultType::Throw, "JSON: expected \", got \0"sv },
+        { "\"/stroitelstvo-i-remont/stroit\0t"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/stroitelstvo-i-remont/stroitelnyy-instrument/av\0k"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/s\0a"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Строительство и ремонт/Строительный инструмент/Изм\0e"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/avto/soputstvuy\0l"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/str\0\xD0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Отвертка 2 в 1 \\\"TUNDRA basic\\\" 5х75 мм (+,-) \0\xFF"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/stroitelstvo-i-remont/stroitelnyy-instrument/avtoinstrumen\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Мелкая бытовая техника/Мелки\xD0\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Пряжа \\\"Бамбук стрейч\\0\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Карандаш чёрнографитны\xD0\0\xD0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Творчество/Рукоделие, аппликации/Пряжа и шерсть для \xD0\0l"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/1071547/karandash-chernografitnyy-volshebstvo-nv-kruglyy-d-7-2mm-dl-176mm-plast-tuba/\0e"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"ca\0e"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"ca\0e"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/1165424/chipbord-vyrubnoy-dlya-skrapbukinga-malyshi-mikki-maus-disney-bebi\0t"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/posuda/kuhonnye-prinadlezhnosti-i-i\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Канцтовары/Ежедневники и блокн\xD0\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/kanctovary/ezhednevniki-i-blok\0a"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Стакан \xD0\0a"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Набор бумаги для скрапбукинга \\\"Мои первый годик\\\": Микки Маус, Дисней бэби, 12 листов 29.5 х 29.5 см, 160\0\x80"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"c\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Органайзер для хранения аксессуаров, \0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"quantity\00"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Сменный блок для тетрадей на кольцах А5, 160 листов клетка, офсет \xE2\x84\0="sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Сувениры/Ф\xD0\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"\0\""sv, ResultType::Return, "\0"sv },
+        { "\"\0\x04"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"va\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"ca\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"В \0\x04"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/letnie-tovary/z\0\x04"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Посудомоечная машина Ha\0="sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Крупная бытов\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Полочная акустическая система Magnat Needl\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"brand\00"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"pos\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"c\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"var\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Телевизоры и видеотехника/Всё для домашних кинотеатр\0="sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Флеш-диск Transcend JetFlash 620 8GB (TS8GJF62\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Табурет Мег\0\xD0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"variant\0\x04"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Катал\xD0\0\""sv, ResultType::Return, "Катал\xD0\0"sv },
+        { "\"К\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Полочная акустическая система Magnat Needl\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"brand\00"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"pos\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"c\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"17\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/igrushki/razvivayusc\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Ключница \\\"\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Игр\xD1\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Игрушки/Игрушки для девочек/Игровые модули дл\xD1\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Крупная бытовая техника/Стиральные машины/С фронт\xD0\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\0 "sv, ResultType::Throw, "JSON: expected \", got \0"sv },
+        { "\"Светодиодная лента SMD3528, 5 м. IP33, 60LED, зеленый, 4,8W/мет\xD1\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Сантехника/Мебель для ванных комнат/Стол\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\0o"sv, ResultType::Throw, "JSON: expected \", got \0"sv },
+        { "\"/igrushki/konstruktory\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/posuda/kuhonnye-prinadlezhnosti-i-instrumenty/kuhonnye-pr\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/1290414/komplekt-zhenskiy-dzhemper-plusbryuki-m-254-09-malina-plustemno-siniy-\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Творчество/Рисование/Инструменты и кра\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Строительство и ремонт/Силовая техника/Зарядные устройства для автомобильных аккумуляторов/Пуско-зарядные устр\xD0\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Строительство и ремонт/Силовая техника/Зарядные устройств\xD0\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Строительство и ремонт/Силовая техника/Зарядные устройства для автомобиль\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\0 "sv, ResultType::Throw, "JSON: expected \", got \0"sv },
+        { "\"/Хозтовары/Хранение вещей и организа\xD1\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Хозтовары/Товары для стир\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"li\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/igrushki/igrus\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/734859/samolet-radioupravlyaemyy-istrebitel-rabotaet-o\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/kosmetika-i-parfyum/parfyumeriya/mu\00"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/ko\0\0"sv, ResultType::Throw, "JSON: begin >= end."sv },
+        { "\"/avto/avtomobilnyy\0\0"sv, ResultType::Throw, "JSON: begin >= end."sv },
+        { "\"/stroitelstvo-i-remont/stroit\00"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/stroitelstvo-i-remont/stroitelnyy-instrument/av\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/s\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Строительство и ремонт/Строительный инструмент/Изм\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/avto/soputstvuy\0\""sv, ResultType::Return, "/avto/soputstvuy\0"sv },
+        { "\"/str\0k"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Отвертка 2 в 1 \\\"TUNDRA basic\\\" 5х75 мм (+,-) \0\xD0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/stroitelstvo-i-remont/stroitelnyy-instrument/avtoinstrumen\0="sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Чайник электрический Vitesse\0="sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Мелкая бытовая техника/Мелки\xD0\0\xD0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Пряжа \\\"Бамбук стрейч\\0о"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Карандаш чёрнографитны\xD0\0k"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Творчество/Рукоделие, аппликации/Пряжа и шерсть для \xD0\0\""sv, ResultType::Return, "/Творчество/Рукоделие, аппликации/Пряжа и шерсть для \xD0\0"sv },
+        { "\"/1071547/karandash-chernografitnyy-volshebstvo-nv-kruglyy-d-7-2mm-dl-176mm-plast-tuba/\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"ca\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Подаро\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Средство для прочис\xD1\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"i\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/p\0\""sv, ResultType::Return, "/p\0"sv },
+        { "\"/Сувениры/Магниты, н\xD0\0k"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Дерев\xD0\0="sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/prazdniki/svadba/svadebnaya-c\0\xD0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Канцт\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Праздники/То\xD0\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"v\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Косметика \xD0\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Спорт и отдых/Настольные игры/Покер, руле\xD1\0\xD0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"categ\0="sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/retailr\0k"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/retailrocket\0k"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Ежедневник недат А5 140л кл,ляссе,обл пв\0="sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/432809/ezhednevnik-organayzer-sredniy-s-remeshkom-na-knopke-v-oblozhke-kalkulyator-kalendar-do-\0\xD0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/1165424/chipbord-vyrubnoy-dlya-skrapbukinga-malyshi-mikki-maus-disney-bebi\0d"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/posuda/kuhonnye-prinadlezhnosti-i-i\0 "sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/Канцтовары/Ежедневники и блокн\xD0\0o"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"/kanctovary/ezhednevniki-i-blok\00"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Стакан \xD0\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"Набор бумаги для скрапбукинга \\\"Мои первый годик\\\": Микки Маус, Дисней бэби, 12 листов 29.5 х 29.5 см, 160\0\0"sv, ResultType::Throw, "JSON: incorrect syntax (expected end of string, found end of JSON)."sv },
+        { "\"c\0\""sv, ResultType::Return, "c\0"sv },
+    };
+
+    for (auto i : boost::irange(0, 1/*00000*/))
+    {
+        static_cast<void>(i);
+
+        for (auto & r : test_data)
+        {
+            try
+            {
+                JSON j(r.input.data(), r.input.data() + r.input.size());
+
+                ASSERT_EQ(j.getString(), r.result);
+                ASSERT_EQ(r.result_type, ResultType::Return);
+            }
+            catch (const JSONException &)
+            {
+                ASSERT_EQ(r.result_type, ResultType::Throw);
+            }
+        }
+    }
+}
diff --git a/base/common/tests/local_date_time_comparison.cpp b/src/Common/tests/gtest_local_date_time_comparison.cpp
similarity index 79%
rename from base/common/tests/local_date_time_comparison.cpp
rename to src/Common/tests/gtest_local_date_time_comparison.cpp
index 5492ec310042..f75c26471005 100644
--- a/base/common/tests/local_date_time_comparison.cpp
+++ b/src/Common/tests/gtest_local_date_time_comparison.cpp
@@ -1,5 +1,6 @@
 #include <iostream>
 #include <stdexcept>
+#include <gtest/gtest.h>
 
 #include <common/LocalDateTime.h>
 
@@ -16,14 +17,13 @@ void checkComparison()
     LocalDateTime a("2018-07-18 01:02:03");
     LocalDateTime b("2018-07-18 01:02:03");
 
-    if (a != b)
-        throw std::runtime_error("Test failed");
+    EXPECT_EQ(a, b);
+    EXPECT_FALSE(a != b);
 }
 
 
-int main(int, char **)
+TEST(LocalDateTime, Comparison)
 {
     fillStackWithGarbage();
     checkComparison();
-    return 0;
 }
diff --git a/base/common/tests/gtest_strong_typedef.cpp b/src/Common/tests/gtest_strong_typedef.cpp
similarity index 100%
rename from base/common/tests/gtest_strong_typedef.cpp
rename to src/Common/tests/gtest_strong_typedef.cpp
diff --git a/src/Core/tests/gtest_DecimalFunctions.cpp b/src/Core/tests/gtest_DecimalFunctions.cpp
index be64661176bd..1069a810d64f 100644
--- a/src/Core/tests/gtest_DecimalFunctions.cpp
+++ b/src/Core/tests/gtest_DecimalFunctions.cpp
@@ -14,7 +14,7 @@ struct DecimalUtilsSplitAndCombineTestParam
     Decimal64 decimal_value;
     uint8_t scale;
 
-    DecimalUtils::DecimalComponents<typename Decimal64::NativeType> components;
+    DecimalUtils::DecimalComponents<Decimal64> components;
 };
 
 std::ostream & operator << (std::ostream & ostr, const DecimalUtilsSplitAndCombineTestParam & param)
diff --git a/src/IO/tests/CMakeLists.txt b/src/IO/tests/CMakeLists.txt
index 79800d8339c5..bcd0a8bba241 100644
--- a/src/IO/tests/CMakeLists.txt
+++ b/src/IO/tests/CMakeLists.txt
@@ -39,11 +39,9 @@ target_link_libraries (o_direct_and_dirty_pages PRIVATE clickhouse_common_io)
 
 add_executable (hashing_write_buffer hashing_write_buffer.cpp)
 target_link_libraries (hashing_write_buffer PRIVATE clickhouse_common_io)
-add_check(hashing_write_buffer)
 
 add_executable (hashing_read_buffer hashing_read_buffer.cpp)
 target_link_libraries (hashing_read_buffer PRIVATE clickhouse_common_io)
-add_check (hashing_read_buffer)
 
 add_executable (io_operators io_operators.cpp)
 target_link_libraries (io_operators PRIVATE clickhouse_common_io)
diff --git a/src/Interpreters/tests/CMakeLists.txt b/src/Interpreters/tests/CMakeLists.txt
index 1bc9d7fbacbd..8905d2fe6e62 100644
--- a/src/Interpreters/tests/CMakeLists.txt
+++ b/src/Interpreters/tests/CMakeLists.txt
@@ -38,7 +38,6 @@ target_link_libraries (two_level_hash_map PRIVATE dbms)
 
 add_executable (in_join_subqueries_preprocessor in_join_subqueries_preprocessor.cpp)
 target_link_libraries (in_join_subqueries_preprocessor PRIVATE clickhouse_aggregate_functions dbms clickhouse_parsers)
-add_check(in_join_subqueries_preprocessor)
 
 if (OS_LINUX)
     add_executable (internal_iotop internal_iotop.cpp)
diff --git a/src/Storages/tests/CMakeLists.txt b/src/Storages/tests/CMakeLists.txt
index b58fed9edf5d..59d448293634 100644
--- a/src/Storages/tests/CMakeLists.txt
+++ b/src/Storages/tests/CMakeLists.txt
@@ -1,6 +1,3 @@
-add_executable (part_name part_name.cpp)
-target_link_libraries (part_name PRIVATE dbms)
-
 add_executable (remove_symlink_directory remove_symlink_directory.cpp)
 target_link_libraries (remove_symlink_directory PRIVATE dbms)
 
diff --git a/src/Storages/tests/part_name.cpp b/src/Storages/tests/part_name.cpp
deleted file mode 100644
index 79c5578a8ca8..000000000000
--- a/src/Storages/tests/part_name.cpp
+++ /dev/null
@@ -1,21 +0,0 @@
-#include <IO/ReadHelpers.h>
-#include <Storages/MergeTree/MergeTreePartInfo.h>
-#include <common/LocalDateTime.h>
-
-
-int main(int, char **)
-{
-    DayNum today = DateLUT::instance().toDayNum(time(nullptr));
-
-    for (DayNum date = today; DayNum(date + 10) > today; --date)
-    {
-        DB::MergeTreePartInfo part_info("partition", 0, 0, 0);
-        std::string name = part_info.getPartNameV0(date, date);
-        std::cerr << name << '
';
-
-        time_t time = DateLUT::instance().YYYYMMDDToDate(DB::parse<UInt32>(name));
-        std::cerr << LocalDateTime(time) << '
';
-    }
-
-    return 0;
-}
diff --git a/tests/performance/date_time_long.xml b/tests/performance/date_time_long.xml
index 1229631a4340..ae41602e825e 100644
--- a/tests/performance/date_time_long.xml
+++ b/tests/performance/date_time_long.xml
@@ -1,5 +1,4 @@
 <test>
-    <tags><tag>long</tag></tags>
     <substitutions>
        <substitution>
            <name>datetime_transform</name>
@@ -78,7 +77,6 @@
                <value>toYYYYMMDDhhmmss</value>
 
                <value>toRelativeQuarterNum</value>
-               <value>toUnixTimestamp</value>
            </values>
         </substitution>
         <substitution>
diff --git a/tests/queries/0_stateless/00189_time_zones.reference b/tests/queries/0_stateless/00189_time_zones.reference
index 664c30056dea..e7e5a71782aa 100644
--- a/tests/queries/0_stateless/00189_time_zones.reference
+++ b/tests/queries/0_stateless/00189_time_zones.reference
@@ -179,13 +179,13 @@ toRelativeYearNum
 44
 44
 44
-44
+45
 toRelativeMonthNum
 536
 536
 536
 537
-536
+537
 toRelativeWeekNum
 2335
 2335
@@ -197,12 +197,13 @@ toRelativeDayNum
 16343
 16343
 16344
-16343
+16344
 toRelativeHourNum
 392251
 392251
 392251
 392251
+392252
 toRelativeMinuteNum
 23535110
 23535110
diff --git a/tests/queries/0_stateless/00189_time_zones.sql b/tests/queries/0_stateless/00189_time_zones.sql
index a0ef5b595170..36c7dfb402a1 100644
--- a/tests/queries/0_stateless/00189_time_zones.sql
+++ b/tests/queries/0_stateless/00189_time_zones.sql
@@ -277,7 +277,8 @@ SELECT toRelativeDayNum(toDateTime(1412106600), 'Europe/Moscow') - toRelativeDay
 SELECT toRelativeDayNum(toDateTime(1412106600), 'Europe/Paris') - toRelativeDayNum(toDateTime(0), 'Europe/Paris');
 SELECT toRelativeDayNum(toDateTime(1412106600), 'Europe/London') - toRelativeDayNum(toDateTime(0), 'Europe/London');
 SELECT toRelativeDayNum(toDateTime(1412106600), 'Asia/Tokyo') - toRelativeDayNum(toDateTime(0), 'Asia/Tokyo');
-SELECT toRelativeDayNum(toDateTime(1412106600), 'Pacific/Pitcairn') - toRelativeDayNum(toDateTime(0), 'Pacific/Pitcairn');
+-- NOTE: toRelativeDayNum(toDateTime(0), 'Pacific/Pitcairn') overflows from -1 to 65535
+SELECT toUInt16(toRelativeDayNum(toDateTime(1412106600), 'Pacific/Pitcairn') - toRelativeDayNum(toDateTime(0), 'Pacific/Pitcairn'));
 
 /* toRelativeHourNum */
 
@@ -286,7 +287,7 @@ SELECT toRelativeHourNum(toDateTime(1412106600), 'Europe/Moscow') - toRelativeHo
 SELECT toRelativeHourNum(toDateTime(1412106600), 'Europe/Paris') - toRelativeHourNum(toDateTime(0), 'Europe/Paris');
 SELECT toRelativeHourNum(toDateTime(1412106600), 'Europe/London') - toRelativeHourNum(toDateTime(0), 'Europe/London');
 SELECT toRelativeHourNum(toDateTime(1412106600), 'Asia/Tokyo') - toRelativeHourNum(toDateTime(0), 'Asia/Tokyo');
--- known wrong result: SELECT toRelativeHourNum(toDateTime(1412106600), 'Pacific/Pitcairn') - toRelativeHourNum(toDateTime(0), 'Pacific/Pitcairn');
+SELECT toRelativeHourNum(toDateTime(1412106600), 'Pacific/Pitcairn') - toRelativeHourNum(toDateTime(0), 'Pacific/Pitcairn');
 
 /* toRelativeMinuteNum */
 
diff --git a/tests/queries/0_stateless/00921_datetime64_compatibility.python b/tests/queries/0_stateless/00921_datetime64_compatibility_long.python
similarity index 95%
rename from tests/queries/0_stateless/00921_datetime64_compatibility.python
rename to tests/queries/0_stateless/00921_datetime64_compatibility_long.python
index bf0ae8a72ac6..c8b9620629dd 100644
--- a/tests/queries/0_stateless/00921_datetime64_compatibility.python
+++ b/tests/queries/0_stateless/00921_datetime64_compatibility_long.python
@@ -86,8 +86,7 @@ CAST(N as DateTime64(9, 'Europe/Minsk'))
 formatDateTime(N, '%C %d %D %e %F %H %I %j %m %M %p %R %S %T %u %V %w %y %Y %%')
 """.splitlines()
 
-# Expanded later to cartesian product of all arguments.
-# NOTE: {N} to be turned into N after str.format() for keys (format string), but not for list of values!
+# Expanded later to cartesian product of all arguments, using format string.
 extra_ops = [
     # With same type:
     (
@@ -179,7 +178,7 @@ def escape_string(s):
 
 
 def execute_functions_for_types(functions, types):
-    # TODO: use string.Template here to allow lines that do not contain type, like: SELECT CAST(toDateTime64(1234567890), 'DateTime64')
+    # NOTE: use string.Template here to allow lines with missing keys, like type, e.g. SELECT CAST(toDateTime64(1234567890), 'DateTime64')
     for func in functions:
         print(("""SELECT 'SELECT {func}';""".format(func=escape_string(func))))
         for dt in types:
diff --git a/tests/queries/0_stateless/00921_datetime64_compatibility.reference b/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference
similarity index 99%
rename from tests/queries/0_stateless/00921_datetime64_compatibility.reference
rename to tests/queries/0_stateless/00921_datetime64_compatibility_long.reference
index 004f4f5e824f..67413512e062 100644
--- a/tests/queries/0_stateless/00921_datetime64_compatibility.reference
+++ b/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference
@@ -1,5 +1,4 @@
 SELECT toTimeZone(N, \'UTC\')
-
 Code: 43
 "DateTime('UTC')","2019-09-16 16:20:11"
 "DateTime64(3, 'UTC')","2019-09-16 16:20:11.234"
@@ -35,25 +34,21 @@ SELECT toDayOfWeek(N)
 "UInt8",1
 ------------------------------------------
 SELECT toHour(N)
-
 Code: 43
 "UInt8",19
 "UInt8",19
 ------------------------------------------
 SELECT toMinute(N)
-
 Code: 43
 "UInt8",20
 "UInt8",20
 ------------------------------------------
 SELECT toSecond(N)
-
 Code: 43
 "UInt8",11
 "UInt8",11
 ------------------------------------------
 SELECT toUnixTimestamp(N)
-
 Code: 44
 "UInt32",1568650811
 "UInt32",1568650811
@@ -94,31 +89,26 @@ SELECT toStartOfDay(N)
 "DateTime('Europe/Minsk')","2019-09-16 00:00:00"
 ------------------------------------------
 SELECT toStartOfHour(N)
-
 Code: 43
 "DateTime('Europe/Minsk')","2019-09-16 19:00:00"
 "DateTime('Europe/Minsk')","2019-09-16 19:00:00"
 ------------------------------------------
 SELECT toStartOfMinute(N)
-
 Code: 43
 "DateTime('Europe/Minsk')","2019-09-16 19:20:00"
 "DateTime('Europe/Minsk')","2019-09-16 19:20:00"
 ------------------------------------------
 SELECT toStartOfFiveMinute(N)
-
 Code: 43
 "DateTime('Europe/Minsk')","2019-09-16 19:20:00"
 "DateTime('Europe/Minsk')","2019-09-16 19:20:00"
 ------------------------------------------
 SELECT toStartOfTenMinutes(N)
-
 Code: 43
 "DateTime('Europe/Minsk')","2019-09-16 19:20:00"
 "DateTime('Europe/Minsk')","2019-09-16 19:20:00"
 ------------------------------------------
 SELECT toStartOfFifteenMinutes(N)
-
 Code: 43
 "DateTime('Europe/Minsk')","2019-09-16 19:15:00"
 "DateTime('Europe/Minsk')","2019-09-16 19:15:00"
@@ -139,7 +129,6 @@ SELECT toStartOfInterval(N, INTERVAL 1 day)
 "DateTime('Europe/Minsk')","2019-09-16 00:00:00"
 ------------------------------------------
 SELECT toStartOfInterval(N, INTERVAL 15 minute)
-
 Code: 43
 "DateTime('Europe/Minsk')","2019-09-16 19:15:00"
 "DateTime('Europe/Minsk')","2019-09-16 19:15:00"
@@ -160,13 +149,11 @@ SELECT date_trunc(\'day\', N)
 "DateTime('Europe/Minsk')","2019-09-16 00:00:00"
 ------------------------------------------
 SELECT date_trunc(\'minute\', N)
-
 Code: 43
 "DateTime('Europe/Minsk')","2019-09-16 19:20:00"
 "DateTime('Europe/Minsk')","2019-09-16 19:20:00"
 ------------------------------------------
 SELECT toTime(N)
-
 Code: 43
 "DateTime('Europe/Minsk')","1970-01-02 19:20:11"
 "DateTime('Europe/Minsk')","1970-01-02 19:20:11"
@@ -232,7 +219,6 @@ SELECT toYearWeek(N)
 "UInt32",201937
 ------------------------------------------
 SELECT timeSlot(N)
-
 Code: 43
 "DateTime('Europe/Minsk')","2019-09-16 19:00:00"
 "DateTime('Europe/Minsk')","2019-09-16 19:00:00"
@@ -375,15 +361,11 @@ SELECT formatDateTime(N, \'%C %d %D %e %F %H %I %j %m %M %p %R %S %T %u %V %w %y
 SELECT N -  N
 "Int32",0
 "Int32",0
-
 Code: 43
 ------------------------------------------
 SELECT N +  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N != N
@@ -417,47 +399,33 @@ SELECT N >= N
 "UInt8",1
 ------------------------------------------
 SELECT N - DT
-
 Code: 43
 "Int32",0
-
 Code: 43
 ------------------------------------------
 SELECT DT - N
-
 Code: 43
 "Int32",0
-
 Code: 43
 ------------------------------------------
 SELECT N - D
 "Int32",0
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT D - N
 "Int32",0
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N - DT64
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT DT64 - N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N != DT
@@ -726,11 +694,8 @@ SELECT N -  toUInt8(1)
 "DateTime64(3, 'Europe/Minsk')","2019-09-16 19:20:10.234"
 ------------------------------------------
 SELECT toUInt8(1) -  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N -  toInt8(-1)
@@ -739,11 +704,8 @@ SELECT N -  toInt8(-1)
 "DateTime64(3, 'Europe/Minsk')","2019-09-16 19:20:12.234"
 ------------------------------------------
 SELECT toInt8(-1) -  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N -  toUInt16(1)
@@ -752,11 +714,8 @@ SELECT N -  toUInt16(1)
 "DateTime64(3, 'Europe/Minsk')","2019-09-16 19:20:10.234"
 ------------------------------------------
 SELECT toUInt16(1) -  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N -  toInt16(-1)
@@ -765,11 +724,8 @@ SELECT N -  toInt16(-1)
 "DateTime64(3, 'Europe/Minsk')","2019-09-16 19:20:12.234"
 ------------------------------------------
 SELECT toInt16(-1) -  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N -  toUInt32(1)
@@ -778,11 +734,8 @@ SELECT N -  toUInt32(1)
 "DateTime64(3, 'Europe/Minsk')","2019-09-16 19:20:10.234"
 ------------------------------------------
 SELECT toUInt32(1) -  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N -  toInt32(-1)
@@ -791,11 +744,8 @@ SELECT N -  toInt32(-1)
 "DateTime64(3, 'Europe/Minsk')","2019-09-16 19:20:12.234"
 ------------------------------------------
 SELECT toInt32(-1) -  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N -  toUInt64(1)
@@ -804,11 +754,8 @@ SELECT N -  toUInt64(1)
 "DateTime64(3, 'Europe/Minsk')","2019-09-16 19:20:10.234"
 ------------------------------------------
 SELECT toUInt64(1) -  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N -  toInt64(-1)
@@ -817,585 +764,486 @@ SELECT N -  toInt64(-1)
 "DateTime64(3, 'Europe/Minsk')","2019-09-16 19:20:12.234"
 ------------------------------------------
 SELECT toInt64(-1) -  N
-
 Code: 43
-
 Code: 43
-
 Code: 43
 ------------------------------------------
 SELECT N == toUInt8(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt8(1) == N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N == toInt8(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt8(-1) == N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N == toUInt16(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt16(1) == N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N == toInt16(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt16(-1) == N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N == toUInt32(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt32(1) == N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N == toInt32(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt32(-1) == N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N == toUInt64(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt64(1) == N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N == toInt64(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt64(-1) == N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N != toUInt8(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt8(1) != N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N != toInt8(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt8(-1) != N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N != toUInt16(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt16(1) != N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N != toInt16(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt16(-1) != N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N != toUInt32(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt32(1) != N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N != toInt32(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt32(-1) != N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N != toUInt64(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt64(1) != N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N != toInt64(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt64(-1) != N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <  toUInt8(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt8(1) <  N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <  toInt8(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt8(-1) <  N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <  toUInt16(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt16(1) <  N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <  toInt16(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt16(-1) <  N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <  toUInt32(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt32(1) <  N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <  toInt32(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt32(-1) <  N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <  toUInt64(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt64(1) <  N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <  toInt64(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt64(-1) <  N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <= toUInt8(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt8(1) <= N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <= toInt8(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt8(-1) <= N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <= toUInt16(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt16(1) <= N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <= toInt16(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt16(-1) <= N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <= toUInt32(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt32(1) <= N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <= toInt32(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt32(-1) <= N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <= toUInt64(1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toUInt64(1) <= N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N <= toInt64(-1)
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT toInt64(-1) <= N
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT N >  toUInt8(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt8(1) >  N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >  toInt8(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt8(-1) >  N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >  toUInt16(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt16(1) >  N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >  toInt16(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt16(-1) >  N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >  toUInt32(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt32(1) >  N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >  toInt32(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt32(-1) >  N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >  toUInt64(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt64(1) >  N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >  toInt64(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt64(-1) >  N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >= toUInt8(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt8(1) >= N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >= toInt8(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt8(-1) >= N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >= toUInt16(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt16(1) >= N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >= toInt16(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt16(-1) >= N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >= toUInt32(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt32(1) >= N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >= toInt32(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt32(-1) >= N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >= toUInt64(1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toUInt64(1) >= N
-
 Code: 43
 "UInt8",0
 "UInt8",0
 ------------------------------------------
 SELECT N >= toInt64(-1)
-
 Code: 43
 "UInt8",1
 "UInt8",1
 ------------------------------------------
 SELECT toInt64(-1) >= N
-
 Code: 43
 "UInt8",0
 "UInt8",0
diff --git a/tests/queries/0_stateless/00921_datetime64_compatibility.sh b/tests/queries/0_stateless/00921_datetime64_compatibility_long.sh
similarity index 82%
rename from tests/queries/0_stateless/00921_datetime64_compatibility.sh
rename to tests/queries/0_stateless/00921_datetime64_compatibility_long.sh
index 1617e5b1f77f..52a29c19be1e 100755
--- a/tests/queries/0_stateless/00921_datetime64_compatibility.sh
+++ b/tests/queries/0_stateless/00921_datetime64_compatibility_long.sh
@@ -11,6 +11,6 @@ CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
 
 # ${CURDIR}/00921_datetime64_compatibility.python
 
-python3 "${CURDIR}"/00921_datetime64_compatibility.python \
+python3 "${CURDIR}"/00921_datetime64_compatibility_long.python \
     | ${CLICKHOUSE_CLIENT} --ignore-error -T -nm --calculate_text_stack_trace 0 --log-level 'error' 2>&1 \
-    | sed 's/Received exception .*//g; s/^\(Code: [0-9]\+\).*$/\1/g'
+    | grep -v 'Received exception .*$' | sed 's/^\(Code: [0-9]\+\).*$/\1/g'
diff --git a/tests/queries/0_stateless/01087_table_function_generate.reference b/tests/queries/0_stateless/01087_table_function_generate.reference
index d7cc6b0a9335..d8886945caa3 100644
--- a/tests/queries/0_stateless/01087_table_function_generate.reference
+++ b/tests/queries/0_stateless/01087_table_function_generate.reference
@@ -1,14 +1,14 @@
 UInt64	Int64	UInt32	Int32	UInt16	Int16	UInt8	Int8
-2804162938822577320	-2776833771540858	3467776823	1163715250	31161	-2916	220	-117
-7885388429666205427	-1363628932535403038	484159052	-308788249	43346	13638	143	-105
-4357435422797280898	1355609803008819271	4126129912	-852056475	34184	9166	49	33
-5935810273536892891	-804738887697332962	3109335413	-80126721	47877	-31421	186	-77
-368066018677693974	-4927165984347126295	1015254922	2026080544	46037	-29626	240	108
-8124171311239967992	-1179703908046100129	1720727300	-138469036	33028	-12819	138	16
-15657812979985370729	-5733276247123822513	3254757884	-500590428	3829	30527	3	-81
-18371568619324220532	-6793779541583578394	1686821450	-455892108	43475	2284	252	-90
-821735343441964030	3148260644406230976	256251035	-885069056	11643	11455	176	90
-9558594037060121162	-2907172753635797124	4276198376	1947296644	45922	26632	97	43
+2804162938822577320	-2776833771540858	3467776823	1163715250	23903	-2916	220	-117
+7885388429666205427	-1363628932535403038	484159052	-308788249	44305	13638	143	-105
+4357435422797280898	1355609803008819271	4126129912	-852056475	58858	9166	49	33
+5935810273536892891	-804738887697332962	3109335413	-80126721	13655	-31421	186	-77
+368066018677693974	-4927165984347126295	1015254922	2026080544	21973	-29626	240	108
+8124171311239967992	-1179703908046100129	1720727300	-138469036	36175	-12819	138	16
+15657812979985370729	-5733276247123822513	3254757884	-500590428	13193	30527	3	-81
+18371568619324220532	-6793779541583578394	1686821450	-455892108	52282	2284	252	-90
+821735343441964030	3148260644406230976	256251035	-885069056	55255	11455	176	90
+9558594037060121162	-2907172753635797124	4276198376	1947296644	48701	26632	97	43
 -
 Enum8(\'hello\' = 1, \'world\' = 5)
 hello
@@ -47,16 +47,16 @@ h
 o
 -
 Date	DateTime	DateTime(\'Europe/Moscow\')
-2077-09-17	1970-10-09 02:30:14	2074-08-12 11:31:27
-2005-11-19	2106-01-30 21:52:44	2097-05-25 07:54:35
-2007-02-24	2096-12-12 00:40:50	1988-08-10 11:16:31
-2019-06-30	2096-01-15 16:31:33	2063-10-20 08:48:17
-2039-01-16	2103-02-11 16:44:39	2036-10-09 04:29:10
-1994-11-03	1980-01-02 05:18:22	2055-12-23 12:33:52
-2083-08-20	2079-06-11 16:29:02	2000-12-05 17:46:24
-2030-06-25	2100-03-01 18:50:22	1993-03-25 01:19:12
-2087-03-16	2034-08-25 19:46:33	2045-12-10 16:47:40
-2006-04-30	2069-09-30 16:07:48	2084-08-26 03:33:12
+2113-06-12	1970-10-09 02:30:14	2074-08-12 11:31:27
+2103-11-03	2106-01-30 21:52:44	2097-05-25 07:54:35
+2008-03-16	2096-12-12 00:40:50	1988-08-10 11:16:31
+2126-11-26	2096-01-15 16:31:33	2063-10-20 08:48:17
+1991-02-02	2103-02-11 16:44:39	2036-10-09 04:29:10
+2096-11-03	1980-01-02 05:18:22	2055-12-23 12:33:52
+2024-12-16	2079-06-11 16:29:02	2000-12-05 17:46:24
+2085-04-07	2100-03-01 18:50:22	1993-03-25 01:19:12
+2135-05-30	2034-08-25 19:46:33	2045-12-10 16:47:40
+2094-12-18	2069-09-30 16:07:48	2084-08-26 03:33:12
 -
 DateTime64(3)	DateTime64(6)	DateTime64(6, \'Europe/Moscow\')
 1978-06-07 23:50:57.320	2013-08-28 10:21:54.010758	1991-08-25 16:23:26.140215
@@ -225,14 +225,14 @@ RL,{Xs\\tw
 [114]	-84125.1554	('2023-06-06 06:55:06.492','bf9ab359-ef9f-ad11-7e6c-160368b1e5ea')
 [124]	-114719.5228	('2010-11-11 22:57:23.722','c1046ffb-3415-cc3a-509a-e0005856d7d7')
 -
-[]	1900051923	{	-189530.5846	h	-5.6279699579452485e47	('1980-08-29','2090-10-31 19:35:45','2038-07-15 05:22:51.805','63d9a12d-d1cf-1f3a-57c6-9bc6dddd0975')	8502
-[-102,-118]	392272782	Eb	-14818.0200	o	-2.664492247169164e59	('2059-02-10','1994-07-16 00:40:02','2034-02-02 05:30:44.960','4fa09948-d32e-8903-63df-43ad759e43f7')	DA61
-[-71]	775049089	\N	-158115.1178	w	4.1323844687113747e-305	('1997-02-15','2062-08-12 23:41:53','2074-02-13 10:29:40.749','c4a44dd7-d009-6f65-1494-9daedfa8a124')	83A7
-[-28,100]	3675466147	{	-146685.1749	h	3.6676044396877755e142	('1997-10-26','2002-06-26 03:33:41','2002-12-02 05:46:03.455','98714b2c-65e7-b5cb-a040-421e260c6d8d')	4B94
-[-23]	2514120753	(`u,	-119659.6174	w	1.3231258347475906e34	('2055-11-20','2080-03-28 08:11:25','2073-07-10 12:19:58.146','003b3b6b-088f-f941-aeb9-c26e0ee72b8e')	6B1F
-[11,-36]	3308237300	\N	171205.1896	\N	5.634708707075817e195	('2009-03-18','2041-11-11 13:19:44','2044-03-18 17:34:17.814','9e60f4cb-6e55-1deb-5ac4-d66a86a8886d')	1964
-[39]	1614362420	`4A8P	157144.0630	o	-1.1843143253872814e-255	('1991-04-27','2066-03-02 11:07:49','1997-10-22 20:14:13.755','97685503-2609-d2b9-981c-02fd75d106cb')	A35B
-[48,-120]	3848918261	1<Lu3	91487.2852	h	-1.9300793134783347e263	('1983-09-27','2031-08-07 11:29:42','2085-03-11 15:17:17.374','af838873-48b2-f609-6483-f5c08733364c')	8E7C
-[55]	3047524030	li&lF	93462.3661	h	2.8979254388809897e54	('2011-08-01','2058-07-14 01:47:30','2055-10-14 06:36:20.056','e932a7b5-173a-1304-e522-b794b8fa3f11')	35D9
-[100,-42]	3999367674		-112975.9852	h	2.658098863752086e-160	('2025-12-13','2029-04-21 12:27:59','2068-08-27 07:49:41.825','802b2a96-319b-8e60-63d9-99b88ccae237')	074E
+[]	1900051923	{	-189530.5846	h	-5.6279699579452485e47	('1984-12-06','2090-10-31 19:35:45','2038-07-15 05:22:51.805','63d9a12d-d1cf-1f3a-57c6-9bc6dddd0975')	8502
+[-102,-118]	392272782	Eb	-14818.0200	o	-2.664492247169164e59	('2024-01-16','1994-07-16 00:40:02','2034-02-02 05:30:44.960','4fa09948-d32e-8903-63df-43ad759e43f7')	DA61
+[-71]	775049089	\N	-158115.1178	w	4.1323844687113747e-305	('2103-08-04','2062-08-12 23:41:53','2074-02-13 10:29:40.749','c4a44dd7-d009-6f65-1494-9daedfa8a124')	83A7
+[-28,100]	3675466147	{	-146685.1749	h	3.6676044396877755e142	('2119-02-01','2002-06-26 03:33:41','2002-12-02 05:46:03.455','98714b2c-65e7-b5cb-a040-421e260c6d8d')	4B94
+[-23]	2514120753	(`u,	-119659.6174	w	1.3231258347475906e34	('2017-10-25','2080-03-28 08:11:25','2073-07-10 12:19:58.146','003b3b6b-088f-f941-aeb9-c26e0ee72b8e')	6B1F
+[11,-36]	3308237300	\N	171205.1896	\N	5.634708707075817e195	('2084-01-01','2041-11-11 13:19:44','2044-03-18 17:34:17.814','9e60f4cb-6e55-1deb-5ac4-d66a86a8886d')	1964
+[39]	1614362420	`4A8P	157144.0630	o	-1.1843143253872814e-255	('2061-03-10','2066-03-02 11:07:49','1997-10-22 20:14:13.755','97685503-2609-d2b9-981c-02fd75d106cb')	A35B
+[48,-120]	3848918261	1<Lu3	91487.2852	h	-1.9300793134783347e263	('2081-06-01','2031-08-07 11:29:42','2085-03-11 15:17:17.374','af838873-48b2-f609-6483-f5c08733364c')	8E7C
+[55]	3047524030	li&lF	93462.3661	h	2.8979254388809897e54	('2108-04-19','2058-07-14 01:47:30','2055-10-14 06:36:20.056','e932a7b5-173a-1304-e522-b794b8fa3f11')	35D9
+[100,-42]	3999367674		-112975.9852	h	2.658098863752086e-160	('2005-08-26','2029-04-21 12:27:59','2068-08-27 07:49:41.825','802b2a96-319b-8e60-63d9-99b88ccae237')	074E
 -
diff --git a/tests/queries/0_stateless/01125_generate_random_qoega.reference b/tests/queries/0_stateless/01125_generate_random_qoega.reference
index 1cb416a722bc..af3f8c998962 100644
--- a/tests/queries/0_stateless/01125_generate_random_qoega.reference
+++ b/tests/queries/0_stateless/01125_generate_random_qoega.reference
@@ -1,1 +1,1 @@
-100	4456446406473339606
+100	663736399314727673
diff --git a/tests/queries/0_stateless/01128_generate_random_nested.reference b/tests/queries/0_stateless/01128_generate_random_nested.reference
index d9d2b2517024..6d2e90d81935 100644
--- a/tests/queries/0_stateless/01128_generate_random_nested.reference
+++ b/tests/queries/0_stateless/01128_generate_random_nested.reference
@@ -1,2 +1,2 @@
-100	12366141706519416319
-109	2990700419202507835
+100	12122376849981951205
+109	6180823897498688294
diff --git a/tests/queries/0_stateless/01252_weird_time_zone.reference b/tests/queries/0_stateless/01252_weird_time_zone.reference
index f2968d4efa60..90f5bf0e30dd 100644
--- a/tests/queries/0_stateless/01252_weird_time_zone.reference
+++ b/tests/queries/0_stateless/01252_weird_time_zone.reference
@@ -1,7 +1,7 @@
-2020-01-02 03:04:05	2020-01-02 00:00:00	3
-2020-01-02 03:04:05	2020-01-02 00:00:00	3
-2020-01-02 03:04:05	2020-01-02 00:00:00	3
-2020-01-02 03:04:05	2020-01-02 00:00:00	3
-2020-01-02 03:04:05	2020-01-02 00:00:00	3
-2020-01-02 03:04:05	2020-01-02 00:00:00	3
-2020-01-02 03:04:05	2020-01-02 00:00:00	3
+Pacific/Kiritimati	2020-01-02 03:04:05	2020-01-02 00:00:00	3
+Africa/El_Aaiun	2020-01-02 03:04:05	2020-01-02 00:00:00	3
+Asia/Pyongyang	2020-01-02 03:04:05	2020-01-02 00:00:00	3
+Pacific/Kwajalein	2020-01-02 03:04:05	2020-01-02 00:00:00	3
+Pacific/Apia	2020-01-02 03:04:05	2020-01-02 00:00:00	3
+Pacific/Enderbury	2020-01-02 03:04:05	2020-01-02 00:00:00	3
+Pacific/Fakaofo	2020-01-02 03:04:05	2020-01-02 00:00:00	3
diff --git a/tests/queries/0_stateless/01252_weird_time_zone.sql b/tests/queries/0_stateless/01252_weird_time_zone.sql
index 68ea903a7975..c4919ca4fe01 100644
--- a/tests/queries/0_stateless/01252_weird_time_zone.sql
+++ b/tests/queries/0_stateless/01252_weird_time_zone.sql
@@ -1,15 +1,15 @@
-SELECT toDateTime('2020-01-02 03:04:05', 'Pacific/Kiritimati') AS x, toStartOfDay(x), toHour(x);
-SELECT toDateTime('2020-01-02 03:04:05', 'Africa/El_Aaiun') AS x, toStartOfDay(x), toHour(x);
-SELECT toDateTime('2020-01-02 03:04:05', 'Asia/Pyongyang') AS x, toStartOfDay(x), toHour(x);
-SELECT toDateTime('2020-01-02 03:04:05', 'Pacific/Kwajalein') AS x, toStartOfDay(x), toHour(x);
-SELECT toDateTime('2020-01-02 03:04:05', 'Pacific/Apia') AS x, toStartOfDay(x), toHour(x);
-SELECT toDateTime('2020-01-02 03:04:05', 'Pacific/Enderbury') AS x, toStartOfDay(x), toHour(x);
-SELECT toDateTime('2020-01-02 03:04:05', 'Pacific/Fakaofo') AS x, toStartOfDay(x), toHour(x);
+SELECT 'Pacific/Kiritimati', toDateTime('2020-01-02 03:04:05', 'Pacific/Kiritimati') AS x, toStartOfDay(x), toHour(x);
+SELECT 'Africa/El_Aaiun', toDateTime('2020-01-02 03:04:05', 'Africa/El_Aaiun') AS x, toStartOfDay(x), toHour(x);
+SELECT 'Asia/Pyongyang', toDateTime('2020-01-02 03:04:05', 'Asia/Pyongyang') AS x, toStartOfDay(x), toHour(x);
+SELECT 'Pacific/Kwajalein', toDateTime('2020-01-02 03:04:05', 'Pacific/Kwajalein') AS x, toStartOfDay(x), toHour(x);
+SELECT 'Pacific/Apia', toDateTime('2020-01-02 03:04:05', 'Pacific/Apia') AS x, toStartOfDay(x), toHour(x);
+SELECT 'Pacific/Enderbury', toDateTime('2020-01-02 03:04:05', 'Pacific/Enderbury') AS x, toStartOfDay(x), toHour(x);
+SELECT 'Pacific/Fakaofo', toDateTime('2020-01-02 03:04:05', 'Pacific/Fakaofo') AS x, toStartOfDay(x), toHour(x);
 
-SELECT toHour(toDateTime(rand(), 'Pacific/Kiritimati') AS t) AS h, t FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
-SELECT toHour(toDateTime(rand(), 'Africa/El_Aaiun') AS t) AS h, t FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
-SELECT toHour(toDateTime(rand(), 'Asia/Pyongyang') AS t) AS h, t FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
-SELECT toHour(toDateTime(rand(), 'Pacific/Kwajalein') AS t) AS h, t FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
-SELECT toHour(toDateTime(rand(), 'Pacific/Apia') AS t) AS h, t FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
-SELECT toHour(toDateTime(rand(), 'Pacific/Enderbury') AS t) AS h, t FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
-SELECT toHour(toDateTime(rand(), 'Pacific/Fakaofo') AS t) AS h, t FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
+SELECT 'Pacific/Kiritimati', rand() as r, toHour(toDateTime(r, 'Pacific/Kiritimati') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
+SELECT 'Africa/El_Aaiun', rand() as r, toHour(toDateTime(r, 'Africa/El_Aaiun') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
+SELECT 'Asia/Pyongyang', rand() as r, toHour(toDateTime(r, 'Asia/Pyongyang') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
+SELECT 'Pacific/Kwajalein', rand() as r, toHour(toDateTime(r, 'Pacific/Kwajalein') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
+SELECT 'Pacific/Apia', rand() as r, toHour(toDateTime(r, 'Pacific/Apia') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
+SELECT 'Pacific/Enderbury', rand() as r, toHour(toDateTime(r, 'Pacific/Enderbury') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
+SELECT 'Pacific/Fakaofo', rand() as r, toHour(toDateTime(r, 'Pacific/Fakaofo') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
diff --git a/tests/queries/0_stateless/01440_to_date_monotonicity.reference b/tests/queries/0_stateless/01440_to_date_monotonicity.reference
index 96732e5996c5..74716fe6223c 100644
--- a/tests/queries/0_stateless/01440_to_date_monotonicity.reference
+++ b/tests/queries/0_stateless/01440_to_date_monotonicity.reference
@@ -1,4 +1,4 @@
 0
-1970-01-01	2106-02-07	1970-04-11	1970-01-01	2106-02-07
+1970-01-01	2106-02-07	1970-04-11	1970-01-01	2149-06-06
 1970-01-01 03:00:00	2106-02-07 09:28:15	1970-01-01 03:16:40
 2000-01-01 13:12:12
diff --git a/tests/queries/0_stateless/01561_Date_and_DateTime64_comparision.sql b/tests/queries/0_stateless/01561_Date_and_DateTime64_comparision.sql
index 7e75d871e077..a61bcff4db7c 100644
--- a/tests/queries/0_stateless/01561_Date_and_DateTime64_comparision.sql
+++ b/tests/queries/0_stateless/01561_Date_and_DateTime64_comparision.sql
@@ -6,7 +6,7 @@ SELECT
     dt64 < d,
     toDate(dt64) < d,
     dt64 < toDateTime64(d, 1, 'UTC'),
-    
+
     '<=',
     dt64 <= d,
     toDate(dt64) <= d,
@@ -16,7 +16,7 @@ SELECT
     dt64 = d,
     toDate(dt64) = d,
     dt64 = toDateTime64(d, 1, 'UTC'),
-    
+
     '>=',
     dt64 >= d,
     toDate(dt64) >= d,
@@ -31,7 +31,7 @@ SELECT
     dt64 != d,
     toDate(dt64) != d,
     dt64 != toDateTime64(d, 1, 'UTC')
-FROM 
+FROM
 (
     WITH toDateTime('2019-09-16 19:20:11') as val
     SELECT
diff --git a/tests/queries/0_stateless/01631_date_overflow_as_partition_key.reference b/tests/queries/0_stateless/01631_date_overflow_as_partition_key.reference
index dbcd92da11c7..62f620f3ba97 100644
--- a/tests/queries/0_stateless/01631_date_overflow_as_partition_key.reference
+++ b/tests/queries/0_stateless/01631_date_overflow_as_partition_key.reference
@@ -1,2 +1,2 @@
-1970-01-01	1
-1970-01-01	1
+2106-11-11	1
+2106-11-12	1
diff --git a/tests/queries/0_stateless/01631_date_overflow_as_partition_key.sql b/tests/queries/0_stateless/01631_date_overflow_as_partition_key.sql
index f252e10806a0..9a8d37084fbd 100644
--- a/tests/queries/0_stateless/01631_date_overflow_as_partition_key.sql
+++ b/tests/queries/0_stateless/01631_date_overflow_as_partition_key.sql
@@ -6,6 +6,6 @@ insert into dt_overflow values('2106-11-11', 1);
 
 insert into dt_overflow values('2106-11-12', 1);
 
-select * from dt_overflow;
+select * from dt_overflow ORDER BY d;
 
 drop table if exists dt_overflow;
diff --git a/tests/queries/0_stateless/01691_DateTime64_clamp.reference b/tests/queries/0_stateless/01691_DateTime64_clamp.reference
index 3adc9a17e5cf..881ab4feff8a 100644
--- a/tests/queries/0_stateless/01691_DateTime64_clamp.reference
+++ b/tests/queries/0_stateless/01691_DateTime64_clamp.reference
@@ -1,10 +1,11 @@
 -- { echo }
+-- These values are within the extended range of DateTime64 [1925-01-01, 2284-01-01)
 SELECT toTimeZone(toDateTime(-2, 2), 'Europe/Moscow');
-1970-01-01 03:00:00.00
+1970-01-01 02:59:58.00
 SELECT toDateTime64(-2, 2, 'Europe/Moscow');
-1970-01-01 03:00:00.00
+1970-01-01 02:59:58.00
 SELECT CAST(-1 AS DateTime64(0, 'Europe/Moscow'));
-1970-01-01 03:00:00
+1970-01-01 02:59:59
 SELECT CAST('2020-01-01 00:00:00.3' AS DateTime64(0, 'Europe/Moscow'));
 2020-01-01 00:00:00
 SELECT toDateTime64(bitShiftLeft(toUInt64(1), 33), 2, 'Europe/Moscow') FORMAT Null;
@@ -13,5 +14,14 @@ SELECT toTimeZone(toDateTime(-2., 2), 'Europe/Moscow');
 SELECT toDateTime64(-2., 2, 'Europe/Moscow');
 1970-01-01 03:00:00.00
 SELECT toDateTime64(toFloat32(bitShiftLeft(toUInt64(1),33)), 2, 'Europe/Moscow');
-2106-02-07 09:00:00.00
+2106-02-07 09:28:16.00
 SELECT toDateTime64(toFloat64(bitShiftLeft(toUInt64(1),33)), 2, 'Europe/Moscow') FORMAT Null;
+-- These are outsize of extended range and hence clamped
+SELECT toDateTime64(-1 * bitShiftLeft(toUInt64(1), 35), 2);
+1925-01-01 02:00:00.00
+SELECT CAST(-1 * bitShiftLeft(toUInt64(1), 35) AS DateTime64);
+1925-01-01 02:00:00.000
+SELECT CAST(bitShiftLeft(toUInt64(1), 35) AS DateTime64);
+2282-12-31 03:00:00.000
+SELECT toDateTime64(bitShiftLeft(toUInt64(1), 35), 2);
+2282-12-31 03:00:00.00
diff --git a/tests/queries/0_stateless/01691_DateTime64_clamp.sql b/tests/queries/0_stateless/01691_DateTime64_clamp.sql
index 92d5a33328f0..c77a66febb3e 100644
--- a/tests/queries/0_stateless/01691_DateTime64_clamp.sql
+++ b/tests/queries/0_stateless/01691_DateTime64_clamp.sql
@@ -1,4 +1,5 @@
 -- { echo }
+-- These values are within the extended range of DateTime64 [1925-01-01, 2284-01-01)
 SELECT toTimeZone(toDateTime(-2, 2), 'Europe/Moscow');
 SELECT toDateTime64(-2, 2, 'Europe/Moscow');
 SELECT CAST(-1 AS DateTime64(0, 'Europe/Moscow'));
@@ -8,3 +9,9 @@ SELECT toTimeZone(toDateTime(-2., 2), 'Europe/Moscow');
 SELECT toDateTime64(-2., 2, 'Europe/Moscow');
 SELECT toDateTime64(toFloat32(bitShiftLeft(toUInt64(1),33)), 2, 'Europe/Moscow');
 SELECT toDateTime64(toFloat64(bitShiftLeft(toUInt64(1),33)), 2, 'Europe/Moscow') FORMAT Null;
+
+-- These are outsize of extended range and hence clamped
+SELECT toDateTime64(-1 * bitShiftLeft(toUInt64(1), 35), 2);
+SELECT CAST(-1 * bitShiftLeft(toUInt64(1), 35) AS DateTime64);
+SELECT CAST(bitShiftLeft(toUInt64(1), 35) AS DateTime64);
+SELECT toDateTime64(bitShiftLeft(toUInt64(1), 35), 2);
diff --git a/tests/queries/0_stateless/01699_timezoneOffset.reference b/tests/queries/0_stateless/01699_timezoneOffset.reference
index 45f30314f5a7..a1cc6391e6fd 100644
--- a/tests/queries/0_stateless/01699_timezoneOffset.reference
+++ b/tests/queries/0_stateless/01699_timezoneOffset.reference
@@ -1,8 +1,8 @@
 DST boundary test for Europe/Moscow:
-0	1981-04-01 22:40:00	10800	355002000
-1	1981-04-01 22:50:00	10800	355002600
-2	1981-04-02 00:00:00	14400	355003200
-3	1981-04-02 00:10:00	14400	355003800
+0	1981-04-01 22:40:00	14400	354998400
+1	1981-04-01 22:50:00	14400	354999000
+2	1981-04-01 23:00:00	14400	354999600
+3	1981-04-01 23:10:00	14400	355000200
 0	1981-09-30 23:00:00	14400	370724400
 1	1981-09-30 23:10:00	14400	370725000
 2	1981-09-30 23:20:00	14400	370725600
@@ -22,10 +22,10 @@ DST boundary test for Europe/Moscow:
 16	1981-10-01 00:40:00	10800	370734000
 17	1981-10-01 00:50:00	10800	370734600
 DST boundary test for Asia/Tehran:
-0	2020-03-21 22:40:00	12600	1584817800
-1	2020-03-21 22:50:00	12600	1584818400
-2	2020-03-22 00:00:00	16200	1584819000
-3	2020-03-22 00:10:00	16200	1584819600
+0	2020-03-21 22:40:00	16200	1584814200
+1	2020-03-21 22:50:00	16200	1584814800
+2	2020-03-21 23:00:00	16200	1584815400
+3	2020-03-21 23:10:00	16200	1584816000
 0	2020-09-20 23:00:00	16200	1600626600
 1	2020-09-20 23:10:00	16200	1600627200
 2	2020-09-20 23:20:00	16200	1600627800
diff --git a/tests/queries/0_stateless/01702_toDateTime_from_string_clamping.reference b/tests/queries/0_stateless/01702_toDateTime_from_string_clamping.reference
index 228086615da9..7e8307d66a69 100644
--- a/tests/queries/0_stateless/01702_toDateTime_from_string_clamping.reference
+++ b/tests/queries/0_stateless/01702_toDateTime_from_string_clamping.reference
@@ -1,9 +1,9 @@
 -- { echo }
 SELECT toString(toDateTime('-922337203.6854775808', 1));
-2106-02-07 15:41:33.6
+1940-10-09 22:13:17.6
 SELECT toString(toDateTime('9922337203.6854775808', 1));
-2104-12-30 00:50:11.6
+2283-11-11 23:46:43.6
 SELECT toDateTime64(CAST('10000000000.1' AS Decimal64(1)), 1);
-2106-02-07 20:50:08.1
+2283-11-11 23:46:40.1
 SELECT toDateTime64(CAST('-10000000000.1' AS Decimal64(1)), 1);
-2011-12-23 00:38:08.1
+1925-01-01 00:00:00.1
diff --git a/tests/queries/0_stateless/01761_round_year_bounds.reference b/tests/queries/0_stateless/01761_round_year_bounds.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/01761_round_year_bounds.sql b/tests/queries/0_stateless/01761_round_year_bounds.sql
new file mode 100644
index 000000000000..fed12c555682
--- /dev/null
+++ b/tests/queries/0_stateless/01761_round_year_bounds.sql
@@ -0,0 +1,1 @@
+SELECT toStartOfInterval(toDateTime(-9223372036854775808), toIntervalYear(100), 'Europe/Moscow') FORMAT Null;
diff --git a/tests/queries/0_stateless/01762_datetime64_extended_parsing.reference b/tests/queries/0_stateless/01762_datetime64_extended_parsing.reference
new file mode 100644
index 000000000000..531b6f8bf133
--- /dev/null
+++ b/tests/queries/0_stateless/01762_datetime64_extended_parsing.reference
@@ -0,0 +1,1 @@
+1925-01-02 03:04:05.678901
diff --git a/tests/queries/0_stateless/01762_datetime64_extended_parsing.sql b/tests/queries/0_stateless/01762_datetime64_extended_parsing.sql
new file mode 100644
index 000000000000..a7ad447b2153
--- /dev/null
+++ b/tests/queries/0_stateless/01762_datetime64_extended_parsing.sql
@@ -0,0 +1,1 @@
+SELECT toDateTime64('1925-01-02 03:04:05.678901', 6);
