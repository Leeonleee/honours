diff --git a/tests/queries/0_stateless/02494_query_cache_bugs.reference b/tests/queries/0_stateless/02494_query_cache_bugs.reference
new file mode 100644
index 000000000000..448e1366ea7a
--- /dev/null
+++ b/tests/queries/0_stateless/02494_query_cache_bugs.reference
@@ -0,0 +1,24 @@
+-- Bug 56258: Check literals (ASTLiteral)
+Row 1:
+──────
+10: 10
+Row 1:
+──────
+x: 10
+2
+-- Bug 56258: Check functions (ASTFunction)
+Row 1:
+──────
+toUInt64(42): 42
+Row 1:
+──────
+x: 42
+2
+-- Bug 56258: Check identifiers (ASTIdentifier)
+Row 1:
+──────
+c: 1
+Row 1:
+──────
+x: 1
+2
diff --git a/tests/queries/0_stateless/02494_query_cache_bugs.sql b/tests/queries/0_stateless/02494_query_cache_bugs.sql
new file mode 100644
index 000000000000..74496e0f77a1
--- /dev/null
+++ b/tests/queries/0_stateless/02494_query_cache_bugs.sql
@@ -0,0 +1,39 @@
+-- Tags: no-parallel
+-- Tag no-parallel: Messes with internal cache
+
+-- Test for Bug 56258
+
+SYSTEM DROP QUERY CACHE;
+
+SELECT '-- Bug 56258: Check literals (ASTLiteral)';
+
+SELECT 10 FORMAT Vertical SETTINGS use_query_cache = 1;
+SELECT 10 AS x FORMAT Vertical SETTINGS use_query_cache = 1;
+
+SELECT count(*) FROM system.query_cache;
+
+SYSTEM DROP QUERY CACHE;
+
+SELECT '-- Bug 56258: Check functions (ASTFunction)';
+
+SELECT toUInt64(42) FORMAT Vertical SETTINGS use_query_cache = 1;
+SELECT toUInt64(42) AS x FORMAT Vertical SETTINGS use_query_cache = 1;
+
+SELECT count(*) FROM system.query_cache;
+
+SYSTEM DROP QUERY CACHE;
+
+SELECT '-- Bug 56258: Check identifiers (ASTIdentifier)';
+
+DROP TABLE IF EXISTS tab;
+
+CREATE TABLE tab(c UInt64) ENGINE = Memory AS SELECT 1;
+
+SELECT c FROM tab FORMAT Vertical SETTINGS use_query_cache = 1;
+SELECT c AS x FROM tab FORMAT Vertical SETTINGS use_query_cache = 1;
+
+SELECT count(*) FROM system.query_cache;
+
+DROP TABLE tab;
+
+SYSTEM DROP QUERY CACHE;
