You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Buffer table missing validation
**Describe the bug**
The Buffer engine parameters are not well validated.

**How to reproduce**
Run:
```sql
CREATE TABLE t0 ENGINE = Buffer(x, x, -1,1,1,1,1,1,1);
/*
Logical error: 'std::exception. Code: 1001, type: std::length_error, e.what() = vector (version 24.10.1.2558 (official build)), Stack trace:

0. /build/contrib/llvm-project/libcxx/include/exception:141: std::logic_error::logic_error(char const*) @ 0x000000001891ad54
1. /build/contrib/llvm-project/libcxx/include/stdexcept:154: std::length_error::length_error[abi:v15007](char const*) @ 0x00000000070fc029
2. /build/contrib/llvm-project/libcxx/include/stdexcept:257: std::__throw_length_error[abi:v15007](char const*) @ 0x00000000070fbfdf
3. /build/contrib/llvm-project/libcxx/include/vector:862: ? @ 0x0000000012890dcd
4. /build/contrib/llvm-project/libcxx/include/vector:691: DB::StorageBuffer::StorageBuffer(DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, String const&, std::shared_ptr<DB::Context const>, unsigned long, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageBuffer::Thresholds const&, DB::StorageID const&, bool) @ 0x00000000128859cf
5. /build/contrib/llvm-project/libcxx/include/__memory/construct_at.h:35: std::shared_ptr<DB::StorageBuffer> std::allocate_shared[abi:v15007]<DB::StorageBuffer, std::allocator<DB::StorageBuffer>, DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, String const&, std::shared_ptr<DB::Context>, unsigned long&, DB::StorageBuffer::Thresholds&, DB::StorageBuffer::Thresholds&, DB::StorageBuffer::Thresholds&, DB::StorageID&, bool, void>(std::allocator<DB::StorageBuffer> const&, DB::StorageID const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, String const&, std::shared_ptr<DB::Context>&&, unsigned long&, DB::StorageBuffer::Thresholds&, DB::StorageBuffer::Thresholds&, DB::StorageBuffer::Thresholds&, DB::StorageID&, bool&&) @ 0x0000000012893f8c
6. /build/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:962: std::shared_ptr<DB::IStorage> std::__function::__policy_invoker<std::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::__call_impl<std::__function::__default_alloc_func<DB::registerStorageBuffer(DB::StorageFactory&)::$_0, std::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>>(std::__function::__policy_storage const*, DB::StorageFactory::Arguments const&) @ 0x000000001289021d
7. /build/contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x00000000125b6e67
8. /build/src/Interpreters/InterpreterCreateQuery.cpp:1864: DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::unique_ptr<DB::DDLGuard, std::default_delete<DB::DDLGuard>>&, DB::LoadingStrictnessLevel) @ 0x00000000116f782b
9. /build/src/Interpreters/InterpreterCreateQuery.cpp:1680: DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x00000000116f24fe
10. /build/src/Interpreters/InterpreterCreateQuery.cpp:2224: DB::InterpreterCreateQuery::execute() @ 0x00000000116fcbb6
11. /build/src/Interpreters/executeQuery.cpp:1346: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x0000000011c67896
12. /build/src/Interpreters/executeQuery.cpp:1513: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000011c6367d
13. /build/src/Server/TCPHandler.cpp:592: DB::TCPHandler::runImpl() @ 0x000000001307bc89
14. /build/src/Server/TCPHandler.cpp:2524: DB::TCPHandler::run() @ 0x0000000013091479
15. /build/base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x0000000016987d87
16. /build/base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000001698825e
17. /build/base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x00000000169347d2
18. /build/base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x00000000169324e3
19. ? @ 0x000072b1ed4a1e2e
20. ? @ 0x000072b1ed533a4c
*/
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
