You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error found by fuzzer `Inconsistent AST formatting: the query: ALTER TABLE enum_alter_issue MODIFY COLUMN` (related to Enum)
```
2024.07.30 03:00:45.294456 [ 188 ] {3e92d4fd-fb5f-4e7f-8d07-7ba7e95cec0e} <Fatal> : Logical error: 'Inconsistent AST formatting: the query:
ALTER TABLE enum_alter_issue MODIFY COLUMN `a` Enum8(equals(arrayExists(toNullable(18), range(arrayExists(range(toUInt256 % 10)), 51)), 'one', 1), 'two' = 2, 'three' = 3)
cannot parse.'.
2024.07.30 03:00:45.304329 [ 188 ] {3e92d4fd-fb5f-4e7f-8d07-7ba7e95cec0e} <Fatal> : Stack trace (when copying this message, always include the lines below):

0. /build/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000016005212
1. /build/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c3fa4b9
2. /build/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006e0014c
3. /build/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000006e2916b
4. /build/src/Interpreters/executeQuery.cpp:800: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x0000000011606c7a
5. /build/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x000000001160097d
6. /build/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x00000000128792db
7. /build/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x000000001288e7f9
8. /build/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x00000000160aa6e7
9. /build/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x00000000160aabbe
10. /build/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x00000000160574d2
11. /build/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x00000000160551e3
12. ? @ 0x00007f08b25efac3
13. ? @ 0x00007f08b2681850
```
Link: https://s3.amazonaws.com/clickhouse-test-reports/67392/c2a40940dbc6a2bac3623bef2ac56bc842d837fd/ast_fuzzer__debug_.html
Inconsistent AST formatting in ALTER ADD COLUMN
```
set allow_suspicious_low_cardinality_types=1;
CREATE TABLE t_update_empty_nested__fuzz_48
(
    `id` LowCardinality(DateTime),
    `nested.arr\n1` Nullable(UInt32)
)
ENGINE = MergeTree
ORDER BY id
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi'

:) ALTER TABLE t_update_empty_nested ADD COLUMN `nested.arr2` Array(tuple('- ON NULL -', toLowCardinality(11), 11, 11, toLowCardinality(11), 11), UInt64)

ALTER TABLE t_update_empty_nested
    (ADD COLUMN `nested.arr2` Array(('- ON NULL -', toLowCardinality(11), 11, 11, toLowCardinality(11), 11), UInt64))

Query id: f7a05155-9fb8-4b96-9c04-7fb31e6da948

[ip-172-31-26-174] 2024.03.19 17:48:52.502892 [ 3442780 ] {f7a05155-9fb8-4b96-9c04-7fb31e6da948} <Fatal> : Logical error: 'Inconsistent AST formatting: the query:
ALTER TABLE t_update_empty_nested ADD COLUMN `nested.arr2` Array(('- ON NULL -', toLowCardinality(11), 11, 11, toLowCardinality(11), 11), UInt64)
cannot parse.'.
[ip-172-31-26-174] 2024.03.19 17:48:52.505249 [ 3444530 ] <Fatal> BaseDaemon: ########################################
[ip-172-31-26-174] 2024.03.19 17:48:52.505520 [ 3444530 ] <Fatal> BaseDaemon: (version 24.3.1.1 (official build), build id: E6503786404A306C322D73174D84F3796AB9C150, git hash: 240242da229fa93a45eb3581e0a8763259b42b72) (from thread 3442780) (query_id: f7a05155-9fb8-4b96-9c04-7fb31e6da948) (query: ) Received signal Aborted (6)
[ip-172-31-26-174] 2024.03.19 17:48:52.505764 [ 3444530 ] <Fatal> BaseDaemon: 
[ip-172-31-26-174] 2024.03.19 17:48:52.505961 [ 3444530 ] <Fatal> BaseDaemon: Stack trace: 0x00007ff580cbb00b 0x00007ff580c9a859 0x00000000138773df 0x0000000013877455 0x0000000013877991 0x000000000a97f36a 0x000000000a9d1413 0x000000001c0a64b7 0x000000001c0a4d8a 0x000000001d8d2372 0x000000001d8e72a5 0x0000000022caa739 0x0000000022caaf88 0x0000000022e82414 0x0000000022e7f1ba 0x0000000022e7defe 0x00007ff580e72609 0x00007ff580d97353
[ip-172-31-26-174] 2024.03.19 17:48:52.506206 [ 3444530 ] <Fatal> BaseDaemon: 4. ? @ 0x00007ff580cbb00b
[ip-172-31-26-174] 2024.03.19 17:48:52.506379 [ 3444530 ] <Fatal> BaseDaemon: 5. ? @ 0x00007ff580c9a859
[ip-172-31-26-174] 2024.03.19 17:48:52.605578 [ 3444530 ] <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:0: DB::abortOnFailedAssertion(String const&) @ 0x00000000138773df
[ip-172-31-26-174] 2024.03.19 17:48:52.703194 [ 3444530 ] <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:63: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&) @ 0x0000000013877455
[ip-172-31-26-174] 2024.03.19 17:48:52.783727 [ 3444530 ] <Fatal> BaseDaemon: 8. /build/src/Common/Exception.cpp:100: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x0000000013877991
[ip-172-31-26-174] 2024.03.19 17:48:52.857562 [ 3444530 ] <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:90: DB::Exception::Exception(String&&, int, bool) @ 0x000000000a97f36a
[ip-172-31-26-174] 2024.03.19 17:48:52.975837 [ 3444530 ] <Fatal> BaseDaemon: 10. /build/src/Common/Exception.h:109: DB::Exception::Exception<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x000000000a9d1413
[ip-172-31-26-174] 2024.03.19 17:48:53.283622 [ 3444530 ] <Fatal> BaseDaemon: 11. /build/src/Interpreters/executeQuery.cpp:782: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x000000001c0a64b7
[ip-172-31-26-174] 2024.03.19 17:48:53.590988 [ 3444530 ] <Fatal> BaseDaemon: 12. /build/src/Interpreters/executeQuery.cpp:1374: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x000000001c0a4d8a
[ip-172-31-26-174] 2024.03.19 17:48:53.886809 [ 3444530 ] <Fatal> BaseDaemon: 13. /build/src/Server/TCPHandler.cpp:518: DB::TCPHandler::runImpl() @ 0x000000001d8d2372
[ip-172-31-26-174] 2024.03.19 17:48:54.216028 [ 3444530 ] <Fatal> BaseDaemon: 14. /build/src/Server/TCPHandler.cpp:2329: DB::TCPHandler::run() @ 0x000000001d8e72a5
[ip-172-31-26-174] 2024.03.19 17:48:54.233338 [ 3444530 ] <Fatal> BaseDaemon: 15. /build/base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x0000000022caa739
[ip-172-31-26-174] 2024.03.19 17:48:54.258407 [ 3444530 ] <Fatal> BaseDaemon: 16. /build/base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x0000000022caaf88
[ip-172-31-26-174] 2024.03.19 17:48:54.285033 [ 3444530 ] <Fatal> BaseDaemon: 17. /build/base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000022e82414
[ip-172-31-26-174] 2024.03.19 17:48:54.310898 [ 3444530 ] <Fatal> BaseDaemon: 18. /build/base/poco/Foundation/src/Thread.cpp:46: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x0000000022e7f1ba
[ip-172-31-26-174] 2024.03.19 17:48:54.335155 [ 3444530 ] <Fatal> BaseDaemon: 19. /build/base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000022e7defe
[ip-172-31-26-174] 2024.03.19 17:48:54.335412 [ 3444530 ] <Fatal> BaseDaemon: 20. ? @ 0x00007ff580e72609
[ip-172-31-26-174] 2024.03.19 17:48:54.335623 [ 3444530 ] <Fatal> BaseDaemon: 21. ? @ 0x00007ff580d97353
[ip-172-31-26-174] 2024.03.19 17:48:57.125336 [ 3444530 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 501D917F05D565E1D31926ECB0CC920B)
[ip-172-31-26-174] 2024.03.19 17:48:57.125741 [ 3444530 ] <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
[ip-172-31-26-174] 2024.03.19 17:48:57.126136 [ 3444530 ] <Fatal> BaseDaemon: Changed settings: use_uncompressed_cache = false, load_balancing = 'random', allow_suspicious_low_cardinality_types = true, max_memory_usage = 10000000000, async_insert_max_data_size = 5
Exception on client:
Code: 32. DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000. (ATTEMPT_TO_READ_AFTER_EOF)
```

```
 :) ALTER TABLE t_update_empty_nested (ADD COLUMN `nested.arr2` Array((((((255, 1), '- ON NULL -', 3, ('- ON NULL -'), 11, 11, (11))), ((255, (1), 11, 1), 11)), (255, (1), 11, (1)), 11), UInt64))

ALTER TABLE t_update_empty_nested
    (ADD COLUMN `nested.arr2` Array(((tuple(((255, 1), '- ON NULL -', 3, tuple('- ON NULL -'), 11, 11, tuple(11))), ((255, tuple(1), 11, 1), 11)), (255, tuple(1), 11, tuple(1)), 11), UInt64))
```

```
ALTER TABLE t ADD COLUMN x Array((1), UInt8)
```

https://s3.amazonaws.com/clickhouse-test-reports/0/ebaee8e5f62551b7c11d76ccdd7abac0bf4c23a0/ast_fuzzer__debug_.html
Fix column declaration formatting
### Changelog category (leave one):
- Not for changelog (changelog entry is not required)


### Changelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):
Closes https://github.com/ClickHouse/ClickHouse/issues/61611.
Inconsistent formatting: `ALTER TABLE columns_with_multiple_streams MODIFY COLUMN field1 Nullable(tupleElement(x, 2), UInt8)`
If this query is formatted, it cannot be parsed back:

```
ALTER TABLE columns_with_multiple_streams MODIFY COLUMN `field1` Nullable(tupleElement(x, 2), UInt8);
ALTER TABLE columns_with_multiple_streams (MODIFY COLUMN `field1` Nullable(x.2, UInt8));
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
