You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Stateless test `03203_system_query_metric_log` is flaky
It's failed in several places 
https://play.clickhouse.com/play?user=play#V0lUSAogICAgMzAgQVMgbGFzdF9kYXlzX3RvX2NoZWNrLAogICAgMTAwIEFTIG1heF90ZXN0c190b19zaG93LAogICAgNSBhcyBtYXhfcHJzX3RvX3Nob3csCiAgICA3MCBBUyB0ZXN0X25hbWVfbWF4X2xlbmd0aApTRUxFQ1QKICAgIGNoZWNrX3N0YXJ0X3RpbWUsCiAgICBwdWxsX3JlcXVlc3RfbnVtYmVyLAogICAgdGVzdF9zdGF0dXMsCiAgICByZXBvcnRfdXJsLAogICAgcHVsbF9yZXF1ZXN0X3VybApGUk9NIGNoZWNrcwpXSEVSRQogICAgY2hlY2tfc3RhcnRfdGltZSA+PSBub3coKSAtIGludGVydmFsIGxhc3RfZGF5c190b19jaGVjayBkYXkKICAgIEFORCAodGVzdF9zdGF0dXMgIT0gJ09LJyBBTkQgdGVzdF9zdGF0dXMgIT0gJ1NLSVBQRUQnKQogICAgQU5EIHRlc3RfbmFtZSBJTElLRSAnJTAzMjAzX3N5c3RlbV9xdWVyeV9tZXRyaWNfbG9nJScKT1JERVIgQlkgY2hlY2tfc3RhcnRfdGltZSBERVNDCkxJTUlUIG1heF90ZXN0c190b19zaG93

This comes from a test that failed on the CI: https://s3.amazonaws.com/clickhouse-test-reports/71036/3ebbb0c2ce0e1cc56d461e0ec96b0cc3a5ed4830/stateless_tests__debug__s3_storage_.html

```bash
zstdgrep -ina "QueryMetricLog" clickhouse-server.log.zst | grep -i test_de08ooxs
1936280:2024.10.26 05:05:10.492623 [ 1152 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1937102:2024.10.26 05:05:10.614481 [ 1044 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1937116:2024.10.26 05:05:10.737650 [ 829 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1937951:2024.10.26 05:05:10.860092 [ 1098 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1937992:2024.10.26 05:05:10.983508 [ 958 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1938708:2024.10.26 05:05:11.106529 [ 1074 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1939972:2024.10.26 05:05:11.229248 [ 947 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1940036:2024.10.26 05:05:11.352791 [ 1045 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1940205:2024.10.26 05:05:11.369476 [ 688 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_1000. Schedule next: true
1940419:2024.10.26 05:05:11.475718 [ 1085 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1941030:2024.10.26 05:05:11.564217 [ 1060 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_1234. Schedule next: true
1941491:2024.10.26 05:05:11.598769 [ 1101 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1942122:2024.10.26 05:05:11.721031 [ 1156 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1943297:2024.10.26 05:05:11.844160 [ 996 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1943577:2024.10.26 05:05:11.967281 [ 914 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1944080:2024.10.26 05:05:12.090420 [ 941 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1945236:2024.10.26 05:05:12.213558 [ 701 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1945998:2024.10.26 05:05:12.336705 [ 1097 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1946470:2024.10.26 05:05:12.368599 [ 781 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_1000. Schedule next: true
1946984:2024.10.26 05:05:12.459824 [ 951 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1947565:2024.10.26 05:05:12.581974 [ 866 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1947894:2024.10.26 05:05:12.705131 [ 974 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1948419:2024.10.26 05:05:12.895327 [ 5246 ] {test_de08ooxs_1234} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_1234. Schedule next: false
1948426:2024.10.26 05:05:12.895632 [ 5249 ] {test_de08ooxs_1000} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_1000. Schedule next: false
1948427:2024.10.26 05:05:12.895655 [ 4831 ] {test_de08ooxs_123} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: false
1948430:2024.10.26 05:05:12.828517 [ 728 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_123. Schedule next: true
1948432:2024.10.26 05:05:12.796953 [ 715 ] {} <Debug> QueryMetricLog: Collecting query_metric_log for query test_de08ooxs_1234. Schedule next: true
```

And

```sql
SELECT
    event_time_microseconds,
    ProfileEvent_SleepFunctionCalls,
    ProfileEvent_SleepFunctionMicroseconds,
    ProfileEvent_SleepFunctionElapsedMicroseconds
FROM file('query_metric_log.tsv.zst')
WHERE event_time = '2024-10-26 05:05:12'
ORDER BY event_time_microseconds ASC

Query id: 04e3b798-c2b1-4efa-a0f7-a476e451ac69

    ┌────event_time_microseconds─┬─ProfileEvent_SleepFunctionCalls─┬─ProfileEvent_SleepFunctionMicroseconds─┬─ProfileEvent_SleepFunctionElapsedMicroseconds─┐
 1. │ 2024-10-26 05:05:12.090395 │                               0 │                                      0 │                                             0 │
 2. │ 2024-10-26 05:05:12.213534 │                               0 │                                      0 │                                             0 │
 3. │ 2024-10-26 05:05:12.336684 │                               0 │                                      0 │                                             0 │
 4. │ 2024-10-26 05:05:12.368582 │                               0 │                                      0 │                                             0 │
 5. │ 2024-10-26 05:05:12.459804 │                               0 │                                      0 │                                             0 │
 6. │ 2024-10-26 05:05:12.581957 │                               0 │                                      0 │                                             0 │
 7. │ 2024-10-26 05:05:12.705089 │                               0 │                                      0 │                                             0 │
 8. │ 2024-10-26 05:05:12.745783 │                               0 │                                      0 │                                             0 │
 9. │ 2024-10-26 05:05:12.796929 │            18446744073709551615 │                   18446744073707051616 │                          18446744073707051616 │
10. │ 2024-10-26 05:05:12.828479 │            18446744073709551615 │                   18446744073707051616 │                          18446744073707051616 │
11. │ 2024-10-26 05:05:12.895315 │                               1 │                                2500000 │                                       2500000 │
12. │ 2024-10-26 05:05:12.895623 │                               1 │                                2500000 │                                       2500000 │
13. │ 2024-10-26 05:05:12.895647 │                               1 │                                2500000 │                                       2500000 │
    └────────────────────────────┴─────────────────────────────────┴────────────────────────────────────────┴───────────────────────────────────────────────┘

13 rows in set. Elapsed: 0.190 sec. 
```

The problem seems to be that some collecting tasks are collecting prior results, so the diff between the new and the old (which is actually more recent) is negative, which for an unsigned turns out to be a very large value. So, it's an actual issue on the source code, not on the test itself.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
