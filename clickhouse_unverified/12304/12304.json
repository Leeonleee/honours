{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12304,
  "instance_id": "ClickHouse__ClickHouse-12304",
  "issue_numbers": [
    "12299"
  ],
  "base_commit": "f021376874ba6ac3ae04b24d4731df41c8c696d5",
  "patch": "diff --git a/src/Storages/TTLDescription.cpp b/src/Storages/TTLDescription.cpp\nindex 6e0d323e8a05..2c29958250c6 100644\n--- a/src/Storages/TTLDescription.cpp\n+++ b/src/Storages/TTLDescription.cpp\n@@ -272,6 +272,29 @@ TTLDescription TTLDescription::getTTLFromAST(\n }\n \n \n+TTLTableDescription::TTLTableDescription(const TTLTableDescription & other)\n+ : definition_ast(other.definition_ast ? other.definition_ast->clone() : nullptr)\n+ , rows_ttl(other.rows_ttl)\n+ , move_ttl(other.move_ttl)\n+{\n+}\n+\n+TTLTableDescription & TTLTableDescription::operator=(const TTLTableDescription & other)\n+{\n+    if (&other == this)\n+        return *this;\n+\n+    if (other.definition_ast)\n+        definition_ast = other.definition_ast->clone();\n+    else\n+        definition_ast.reset();\n+\n+    rows_ttl = other.rows_ttl;\n+    move_ttl = other.move_ttl;\n+\n+    return *this;\n+}\n+\n TTLTableDescription TTLTableDescription::getTTLForTableFromAST(\n     const ASTPtr & definition_ast,\n     const ColumnsDescription & columns,\ndiff --git a/src/Storages/TTLDescription.h b/src/Storages/TTLDescription.h\nindex 906cfb0e6759..ab93967f1146 100644\n--- a/src/Storages/TTLDescription.h\n+++ b/src/Storages/TTLDescription.h\n@@ -102,6 +102,10 @@ struct TTLTableDescription\n     /// Moving data TTL (to other disks or volumes)\n     TTLDescriptions move_ttl;\n \n+    TTLTableDescription() = default;\n+    TTLTableDescription(const TTLTableDescription & other);\n+    TTLTableDescription & operator=(const TTLTableDescription & other);\n+\n     static TTLTableDescription getTTLForTableFromAST(\n         const ASTPtr & definition_ast, const ColumnsDescription & columns, const Context & context, const KeyDescription & primary_key);\n };\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01378_alter_rename_with_ttl.reference b/tests/queries/0_stateless/01378_alter_rename_with_ttl.reference\nnew file mode 100644\nindex 000000000000..bf8f7658af4a\n--- /dev/null\n+++ b/tests/queries/0_stateless/01378_alter_rename_with_ttl.reference\n@@ -0,0 +1,3 @@\n+9\n+9\n+0\ndiff --git a/tests/queries/0_stateless/01378_alter_rename_with_ttl.sql b/tests/queries/0_stateless/01378_alter_rename_with_ttl.sql\nnew file mode 100644\nindex 000000000000..98f295383800\n--- /dev/null\n+++ b/tests/queries/0_stateless/01378_alter_rename_with_ttl.sql\n@@ -0,0 +1,26 @@\n+DROP TABLE IF EXISTS table_rename_with_ttl;\n+\n+CREATE TABLE table_rename_with_ttl\n+(\n+  date1 Date,\n+  value1 String\n+)\n+ENGINE = ReplicatedMergeTree('/clickhouse/test/table_rename_with_ttl', '1')\n+ORDER BY tuple();\n+\n+INSERT INTO table_rename_with_ttl SELECT toDate('2018-10-01') + number % 3, toString(number) from numbers(9);\n+\n+SELECT count() FROM table_rename_with_ttl;\n+\n+SET materialize_ttl_after_modify = 0;\n+ALTER TABLE table_rename_with_ttl MODIFY TTL date1 + INTERVAL 1 MONTH;\n+\n+SELECT count() FROM table_rename_with_ttl;\n+\n+ALTER TABLE table_rename_with_ttl RENAME COLUMN date1 TO renamed_date1;\n+\n+ALTER TABLE table_rename_with_ttl materialize TTL settings mutations_sync=2;\n+\n+SELECT count() FROM table_rename_with_ttl;\n+\n+DROP TABLE IF EXISTS table_rename_with_ttl;\n",
  "problem_statement": "Failed 01213_alter_rename_with_default_zookeeper with compact parts.\nRenaming column, on which depends TTL expression is broken in ReplicatedMergeTree with compact parts.\r\nIt was missed, because CI check with enabled polymorphic parts haven't been working well for some period.\r\n\r\nStackTrace:\r\n```\r\n2020.07.08 18:45:27.054943 [ 10032 ] {} <Error> test_rnqtie.table_rename_with_ttl: auto DB::StorageReplicatedMergeTree::queueTask()::(anonymous class)::operator()(DB::StorageReplicatedMergeTree::LogEntryPtr &) const: Code: 10, e.displayText() = DB::Exception: Not found column date2 in block. There are only columns: value2, value1, renamed_date2, renamed_date1, toIntervalMonth(10000), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/exception:129: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1033002c in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n1. /home/ap11/ClickHouse/build_clang/../src/Common/Exception.cpp:38: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x9acb249 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n2. /home/ap11/ClickHouse/build_clang/../src/Core/Block.cpp:0: DB::Block::getPositionByName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xda713f1 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n3. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/vector:1549: DB::ExpressionAction::execute(DB::Block&, bool) const @ 0xde97c8e in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n4. /home/ap11/ClickHouse/build_clang/../src/Interpreters/ExpressionActions.cpp:684: DB::ExpressionActions::execute(DB::Block&, bool) const @ 0xde9bb5d in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n5. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/memory:3821: DB::TTLBlockInputStream::removeRowsWithExpiredTableTTL(DB::Block&) @ 0xe40d720 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n6. /home/ap11/ClickHouse/build_clang/../src/DataStreams/TTLBlockInputStream.cpp:0: DB::TTLBlockInputStream::readImpl() @ 0xe40d139 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n7. /home/ap11/ClickHouse/build_clang/../src/DataStreams/IBlockInputStream.cpp:0: DB::IBlockInputStream::read() @ 0xdb7f2c5 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n8. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/vector:1383: DB::MergeTreeDataMergerMutator::mutateAllPartColumns(std::__1::shared_ptr<DB::IMergeTreeDataPart>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeIndex const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeIndex const> > > const&, std::__1::shared_ptr<DB::IBlockInputStream>, long, std::__1::shared_ptr<DB::ICompressionCodec> const&, DB::MergeListEntry&, bool) const @ 0xe3fcc6c in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n9. /home/ap11/ClickHouse/build_clang/../src/Storages/MergeTree/MergeTreeDataMergerMutator.cpp:1096: DB::MergeTreeDataMergerMutator::mutatePartToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::MutationCommands const&, DB::MergeListEntry&, long, DB::Context const&, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xe3f8afd in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n10. /home/ap11/ClickHouse/build_clang/../src/Storages/StorageReplicatedMergeTree.cpp:1476: DB::StorageReplicatedMergeTree::tryExecutePartMutation(DB::ReplicatedMergeTreeLogEntry const&) @ 0xe2a9ac1 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n11. /home/ap11/ClickHouse/build_clang/../src/Storages/StorageReplicatedMergeTree.cpp:0: DB::StorageReplicatedMergeTree::executeLogEntry(DB::ReplicatedMergeTreeLogEntry&) @ 0xe29ea6b in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n12. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/functional:1714: std::__1::__function::__func<DB::StorageReplicatedMergeTree::queueTask()::$_14, std::__1::allocator<DB::StorageReplicatedMergeTree::queueTask()::$_14>, bool (std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>::operator()(std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&) @ 0xe2e5b3c in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n13. /home/ap11/ClickHouse/build_clang/../src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp:1239: DB::ReplicatedMergeTreeQueue::processEntry(std::__1::function<std::__1::shared_ptr<zkutil::ZooKeeper> ()>, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&, std::__1::function<bool (std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>) @ 0xe4d18d5 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n14. /home/ap11/ClickHouse/build_clang/../src/Storages/StorageReplicatedMergeTree.cpp:0: DB::StorageReplicatedMergeTree::queueTask() @ 0xe2bbe79 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n15. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/functional:0: DB::BackgroundProcessingPool::workLoopFunc() @ 0xe388d45 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n16. /home/ap11/ClickHouse/build_clang/../src/Storages/MergeTree/BackgroundProcessingPool.cpp:0: std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundProcessingPool::BackgroundProcessingPool(int, DB::BackgroundProcessingPool::PoolSettings const&, char const*, char const*)::$_0>(DB::BackgroundProcessingPool::BackgroundProcessingPool(int, DB::BackgroundProcessingPool::PoolSettings const&, char const*, char const*)::$_0&&)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundProcessingPool::BackgroundProcessingPool(int, DB::BackgroundProcessingPool::PoolSettings const&, char const*, char const*)::$_0>(DB::BackgroundProcessingPool::BackgroundProcessingPool(int, DB::BackgroundProcessingPool::PoolSettings const&, char const*, char const*)::$_0&&)::'lambda'()>, void ()>::operator()() @ 0xe38928e in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n17. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/atomic:1036: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9aeb896 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n18. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x9aed91b in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n19. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n20. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n (version 20.6.1.1)\r\n```\n",
  "hints_text": "TTL doesn't work at replicated tables at all after renaming a column.\r\n\r\n```\r\nDROP TABLE IF EXISTS table_rename_with_ttl;\r\n\r\nCREATE TABLE table_rename_with_ttl\r\n(\r\n  date1 Date,\r\n  value1 String\r\n)\r\nENGINE = ReplicatedMergeTree('/clickhouse/test/table_rename_with_ttl', '1')\r\nORDER BY tuple();\r\n\r\nINSERT INTO table_rename_with_ttl SELECT toDate('2018-10-01') + number % 3, toString(number) from numbers(9);\r\n\r\nSELECT count() FROM table_rename_with_ttl;\r\n\r\nSET materialize_ttl_after_modify = 0;\r\nalter table table_rename_with_ttl modify TTL date1 + INTERVAL 1 MONTH;\r\n\r\nSELECT count() FROM table_rename_with_ttl;\r\n\r\nALTER TABLE table_rename_with_ttl RENAME COLUMN date1 TO renamed_date1;\r\n\r\nalter table table_rename_with_ttl materialize ttl settings mutations_sync=2;\r\n\r\nSELECT count() FROM table_rename_with_ttl;\r\n\r\nDROP TABLE IF EXISTS table_rename_with_ttl;\r\n```\r\n\r\nOutput:\r\n```\r\n9\r\n9\r\n```\r\n\r\nAnd the query `ALTER TABLE table_rename_with_ttl materialize TTL settings mutations_sync=2;` hungs with Exception:\r\n```\r\n2020.07.09 00:33:25.105427 [ 17061 ] {} <Error> default.table_rename_with_ttl: auto DB::StorageReplicatedMergeTree::queueTask()::(anonymous class)::operator()(DB::StorageReplicatedMergeTree::LogEntryPtr &) const: Code: 10, e.displayText() = DB::Exception: Not found column date1 in block. There are only columns: value1, renamed_date1, toIntervalMonth(1), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/exception:129: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x103600cc in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n1. /home/ap11/ClickHouse/build_clang/../src/Common/Exception.cpp:38: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x9ada249 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n2. /home/ap11/ClickHouse/build_clang/../src/Core/Block.cpp:0: DB::Block::getPositionByName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xda88271 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n3. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/vector:1549: DB::ExpressionAction::execute(DB::Block&, bool) const @ 0xdeb275e in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n4. /home/ap11/ClickHouse/build_clang/../src/Interpreters/ExpressionActions.cpp:684: DB::ExpressionActions::execute(DB::Block&, bool) const @ 0xdeb662d in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n5. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/memory:3821: DB::TTLBlockInputStream::removeRowsWithExpiredTableTTL(DB::Block&) @ 0xe42dac0 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n6. /home/ap11/ClickHouse/build_clang/../src/DataStreams/TTLBlockInputStream.cpp:0: DB::TTLBlockInputStream::readImpl() @ 0xe42d4d9 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n7. /home/ap11/ClickHouse/build_clang/../src/DataStreams/IBlockInputStream.cpp:0: DB::IBlockInputStream::read() @ 0xdb96335 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n8. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/vector:1383: DB::MergeTreeDataMergerMutator::mutateAllPartColumns(std::__1::shared_ptr<DB::IMergeTreeDataPart>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeIndex const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeIndex const> > > const&, std::__1::shared_ptr<DB::IBlockInputStream>, long, std::__1::shared_ptr<DB::ICompressionCodec> const&, DB::MergeListEntry&, bool) const @ 0xe41d39c in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n9. /home/ap11/ClickHouse/build_clang/../src/Storages/MergeTree/MergeTreeDataMergerMutator.cpp:1098: DB::MergeTreeDataMergerMutator::mutatePartToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::MutationCommands const&, DB::MergeListEntry&, long, DB::Context const&, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xe419079 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n10. /home/ap11/ClickHouse/build_clang/../src/Storages/StorageReplicatedMergeTree.cpp:1479: DB::StorageReplicatedMergeTree::tryExecutePartMutation(DB::ReplicatedMergeTreeLogEntry const&) @ 0xe2c55d1 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n11. /home/ap11/ClickHouse/build_clang/../src/Storages/StorageReplicatedMergeTree.cpp:0: DB::StorageReplicatedMergeTree::executeLogEntry(DB::ReplicatedMergeTreeLogEntry&) @ 0xe2ba47b in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n12. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/functional:1714: std::__1::__function::__func<DB::StorageReplicatedMergeTree::queueTask()::$_14, std::__1::allocator<DB::StorageReplicatedMergeTree::queueTask()::$_14>, bool (std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>::operator()(std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&) @ 0xe30191c in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n13. /home/ap11/ClickHouse/build_clang/../src/Storages/MergeTree/ReplicatedMergeTreeQueue.cpp:1244: DB::ReplicatedMergeTreeQueue::processEntry(std::__1::function<std::__1::shared_ptr<zkutil::ZooKeeper> ()>, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&, std::__1::function<bool (std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>) @ 0xe4f6a65 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n14. /home/ap11/ClickHouse/build_clang/../src/Storages/StorageReplicatedMergeTree.cpp:0: DB::StorageReplicatedMergeTree::queueTask() @ 0xe2d7ad9 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n15. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/functional:0: DB::BackgroundProcessingPool::workLoopFunc() @ 0xe3a4e05 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n16. /home/ap11/ClickHouse/build_clang/../src/Storages/MergeTree/BackgroundProcessingPool.cpp:0: std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundProcessingPool::BackgroundProcessingPool(int, DB::BackgroundProcessingPool::PoolSettings const&, char const*, char const*)::$_0>(DB::BackgroundProcessingPool::BackgroundProcessingPool(int, DB::BackgroundProcessingPool::PoolSettings const&, char const*, char const*)::$_0&&)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::BackgroundProcessingPool::BackgroundProcessingPool(int, DB::BackgroundProcessingPool::PoolSettings const&, char const*, char const*)::$_0>(DB::BackgroundProcessingPool::BackgroundProcessingPool(int, DB::BackgroundProcessingPool::PoolSettings const&, char const*, char const*)::$_0&&)::'lambda'()>, void ()>::operator()() @ 0xe3a534e in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n17. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/atomic:1036: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9afa896 in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n18. /home/ap11/ClickHouse/build_clang/../contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x9afc91b in /home/ap11/ClickHouse/build_clang/programs/clickhouse\r\n19. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n20. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __GI___clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n```",
  "created_at": "2020-07-08T23:27:38Z"
}