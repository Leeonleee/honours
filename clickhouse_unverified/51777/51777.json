{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 51777,
  "instance_id": "ClickHouse__ClickHouse-51777",
  "issue_numbers": [
    "51337"
  ],
  "base_commit": "4d5a5c29d0ff56e9d60ff019c0cb0c095150e480",
  "patch": "diff --git a/src/Storages/MergeTree/checkDataPart.cpp b/src/Storages/MergeTree/checkDataPart.cpp\nindex 1967357a8401..71229f6656e3 100644\n--- a/src/Storages/MergeTree/checkDataPart.cpp\n+++ b/src/Storages/MergeTree/checkDataPart.cpp\n@@ -201,19 +201,19 @@ static IMergeTreeDataPart::Checksums checkDataPart(\n             continue;\n \n         auto checksum_it = checksums_data.files.find(file_name);\n-\n         /// Skip files that we already calculated. Also skip metadata files that are not checksummed.\n         if (checksum_it == checksums_data.files.end() && !files_without_checksums.contains(file_name))\n         {\n             auto txt_checksum_it = checksums_txt_files.find(file_name);\n-            if (txt_checksum_it == checksums_txt_files.end() || txt_checksum_it->second.uncompressed_size == 0)\n+            if ((txt_checksum_it != checksums_txt_files.end() && txt_checksum_it->second.is_compressed))\n             {\n-                /// The file is not compressed.\n-                checksum_file(file_name);\n+                /// If we have both compressed and uncompressed in txt or its .cmrk(2/3) or .cidx, then calculate them\n+                checksums_data.files[file_name] = checksum_compressed_file(data_part_storage, file_name);\n             }\n-            else /// If we have both compressed and uncompressed in txt, then calculate them\n+            else\n             {\n-                checksums_data.files[file_name] = checksum_compressed_file(data_part_storage, file_name);\n+                /// The file is not compressed.\n+                checksum_file(file_name);\n             }\n         }\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02253_empty_part_checksums.reference b/tests/queries/0_stateless/02253_empty_part_checksums.reference\nnew file mode 100644\nindex 000000000000..65a8c9ee65e7\n--- /dev/null\n+++ b/tests/queries/0_stateless/02253_empty_part_checksums.reference\n@@ -0,0 +1,8 @@\n+1\n+1000\n+0\n+0\n+0\n+1\n+0\n+0_0_0_0\tWide\t370db59d5dcaef5d762b11d319c368c7\t514a8be2dac94fd039dbd230065e58a4\tb324ada5cd6bb14402c1e59200bd003a\ndiff --git a/tests/queries/0_stateless/02253_empty_part_checksums.sh b/tests/queries/0_stateless/02253_empty_part_checksums.sh\nnew file mode 100755\nindex 000000000000..5d4e750f46de\n--- /dev/null\n+++ b/tests/queries/0_stateless/02253_empty_part_checksums.sh\n@@ -0,0 +1,37 @@\n+#!/usr/bin/env bash\n+# Tags: zookeeper, no-replicated-database\n+# no-replicated-database because it adds extra replicas\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+$CLICKHOUSE_CLIENT -q \"drop table if exists rmt sync;\"\n+$CLICKHOUSE_CLIENT -q \"CREATE TABLE rmt (a UInt8, b Int16, c Float32, d String, e Array(UInt8), f Nullable(UUID), g Tuple(UInt8, UInt16))\n+ENGINE = ReplicatedMergeTree('/test/02253/$CLICKHOUSE_TEST_ZOOKEEPER_PREFIX/rmt', '1') ORDER BY a PARTITION BY b % 10\n+SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0,\n+cleanup_thread_preferred_points_per_iteration=0, min_bytes_for_wide_part=0, remove_empty_parts=0\"\n+\n+$CLICKHOUSE_CLIENT --insert_keeper_fault_injection_probability=0 -q \"INSERT INTO rmt SELECT rand(1), 0, 1 / rand(3), toString(rand(4)), [rand(5), rand(6)], rand(7) % 2 ? NULL : generateUUIDv4(), (rand(8), rand(9)) FROM numbers(1000);\"\n+\n+$CLICKHOUSE_CLIENT -q \"check table rmt\"\n+$CLICKHOUSE_CLIENT -q \"select count() from rmt\"\n+\n+path=$($CLICKHOUSE_CLIENT -q \"select path from system.parts where database='$CLICKHOUSE_DATABASE' and table='rmt' and name='0_0_0_0'\")\n+# ensure that path is absolute before removing\n+$CLICKHOUSE_CLIENT -q \"select throwIf(substring('$path', 1, 1) != '/', 'Path is relative: $path')\" || exit\n+rm -rf \"$path\"\n+\n+# detach the broken part, replace it with empty one\n+$CLICKHOUSE_CLIENT -q \"check table rmt\" 2>/dev/null\n+$CLICKHOUSE_CLIENT -q \"select count() from rmt\"\n+\n+$CLICKHOUSE_CLIENT --receive_timeout=60 -q \"system sync replica rmt\"\n+\n+# the empty part should pass the check\n+$CLICKHOUSE_CLIENT -q \"check table rmt\"\n+$CLICKHOUSE_CLIENT -q \"select count() from rmt\"\n+\n+$CLICKHOUSE_CLIENT -q \"select name, part_type, hash_of_all_files, hash_of_uncompressed_files, uncompressed_hash_of_compressed_files from system.parts where database=currentDatabase()\"\n+\n+$CLICKHOUSE_CLIENT -q \"drop table rmt sync;\"\n",
  "problem_statement": "Incorrect checksums for compressed marks and primary key\nFound by the test 993 here: https://s3.amazonaws.com/clickhouse-test-reports/51261/0d2b9fd0e5bb5ba50317260e7c3bcc2fea6f420c/stateless_tests__release__wide_parts_enabled_.html\r\n\r\nI added a test https://github.com/ClickHouse/ClickHouse/pull/51335, looks like it fails with `compress_marks` and `compress_primary_key` settings randomization:\r\n\r\n```\r\n02253_empty_part_checksums:                                             [ FAIL ] - having stderror: \r\n[dell9510] 2023.06.23 17:45:02.020681 [ 616870 ] {477ca554-34a3-48ea-a869-8d2579d41cd5} <Error> test_rtach5hl.rmt (ReplicatedMergeTreePartCheckThread): DB::CheckResult DB::ReplicatedMergeTreePartCheckThread::checkPart(const DB::String &): Code: 40. DB::Exception: No uncompressed checksum for file a.cmrk2. (CHECKSUM_DOESNT_MATCH), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/exception:134: std::exception::capture() @ 0x000000001b750a62 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n1. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/exception:112: std::exception::exception[abi:v15000]() @ 0x000000001b750a2d in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n2. /home/tavplubix/ch/ClickHouse/base/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(String const&, int) @ 0x0000000036685100 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n3. /home/tavplubix/ch/ClickHouse/src/Common/Exception.cpp:90: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x0000000025b012fb in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n4. /home/tavplubix/ch/ClickHouse/src/Common/Exception.h:54: DB::Exception::Exception(String&&, int, bool) @ 0x000000001b743e17 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n5. /home/tavplubix/ch/ClickHouse/src/Common/Exception.h:81: DB::Exception::Exception<String const&>(int, FormatStringHelperImpl<std::type_identity<String const&>::type>, String const&) @ 0x000000001bf6f464 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n6. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/MergeTreeDataPartChecksum.cpp:34: DB::MergeTreeDataPartChecksum::checkEqual(DB::MergeTreeDataPartChecksum const&, bool, String const&) const @ 0x000000003086b0ea in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n7. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/MergeTreeDataPartChecksum.cpp:78: DB::MergeTreeDataPartChecksums::checkEqual(DB::MergeTreeDataPartChecksums const&, bool) const @ 0x000000003086bd19 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n8. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/checkDataPart.cpp:229: DB::checkDataPart(std::shared_ptr<DB::IMergeTreeDataPart const>, DB::IDataPartStorage const&, DB::NamesAndTypesList const&, DB::MergeTreeDataPartType const&, std::unordered_set<String, std::hash<String>, std::equal_to<String>, std::allocator<String>> const&, DB::ReadSettings const&, bool, std::function<bool ()>) @ 0x0000000030c7ef26 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n9. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/checkDataPart.cpp:293: DB::checkDataPart(std::shared_ptr<DB::IMergeTreeDataPart const>, bool, std::function<bool ()>) @ 0x0000000030c7d3a1 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n10. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/ReplicatedMergeTreePartCheckThread.cpp:407: DB::ReplicatedMergeTreePartCheckThread::checkPart(String const&) @ 0x0000000030bd6088 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n11. /home/tavplubix/ch/ClickHouse/src/Storages/StorageReplicatedMergeTree.cpp:8192: DB::StorageReplicatedMergeTree::checkData(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>) @ 0x00000000300964eb in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n12. /home/tavplubix/ch/ClickHouse/src/Interpreters/InterpreterCheckQuery.cpp:44: DB::InterpreterCheckQuery::execute() @ 0x000000002f1ea440 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n13. /home/tavplubix/ch/ClickHouse/src/Interpreters/executeQuery.cpp:723: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x000000002f86d377 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n14. /home/tavplubix/ch/ClickHouse/src/Interpreters/executeQuery.cpp:1182: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x000000002f8689db in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n15. /home/tavplubix/ch/ClickHouse/src/Server/TCPHandler.cpp:420: DB::TCPHandler::runImpl() @ 0x0000000030eff97f in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n16. /home/tavplubix/ch/ClickHouse/src/Server/TCPHandler.cpp:2043: DB::TCPHandler::run() @ 0x0000000030f120d2 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n17. /home/tavplubix/ch/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000003649ac59 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n18. /home/tavplubix/ch/ClickHouse/base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000003649b4a8 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n19. /home/tavplubix/ch/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x000000003670c8a1 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n20. /home/tavplubix/ch/ClickHouse/base/poco/Foundation/src/Thread.cpp:46: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x00000000367091ba in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n21. /home/tavplubix/ch/ClickHouse/base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000036707d55 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n22. ? @ 0x00007fc88e5e244b in ?\r\n23. ? @ 0x00007fc88e665e40 in ?\r\n (version 23.6.1.1)\r\n[dell9510] 2023.06.23 17:45:02.021358 [ 616870 ] {477ca554-34a3-48ea-a869-8d2579d41cd5} <Error> test_rtach5hl.rmt (ReplicatedMergeTreePartCheckThread): Part 0_0_0_0 looks broken. Removing it and will try to fetch.\r\n[dell9510] 2023.06.23 17:45:02.022267 [ 616870 ] {477ca554-34a3-48ea-a869-8d2579d41cd5} <Warning> test_rtach5hl.rmt (656764af-0a9c-4dad-8772-70c2a293ace7): Directory broken_0_0_0_0 (to detach to) already exists. Will detach to directory with '_tryN' suffix.\r\n[dell9510] 2023.06.23 17:45:02.031520 [ 616870 ] {477ca554-34a3-48ea-a869-8d2579d41cd5} <Error> test_rtach5hl.rmt (ReplicatedMergeTreePartCheckThread): No replica has part covering 0_0_0_0 and a merge is impossible: we didn't find smaller parts with either the same min block or the same max block.\r\n[dell9510] 2023.06.23 17:45:02.032019 [ 616870 ] {477ca554-34a3-48ea-a869-8d2579d41cd5} <Warning> test_rtach5hl.rmt (ReplicatedMergeTreePartCheckThread): Part 0_0_0_0 exists in ZooKeeper but not locally and not found on other replica. Removing it from ZooKeeper.\r\n[dell9510] 2023.06.23 17:45:02.060635 [ 616870 ] {477ca554-34a3-48ea-a869-8d2579d41cd5} <Warning> test_rtach5hl.rmt (656764af-0a9c-4dad-8772-70c2a293ace7): Cannot commit empty part 0_0_0_0 with error DB::Exception: Part 0_0_0_0 (state Outdated) already exists, but it will be deleted soon\r\n[dell9510] 2023.06.23 17:45:02.064849 [ 616870 ] {477ca554-34a3-48ea-a869-8d2579d41cd5} <Warning> test_rtach5hl.rmt (ReplicatedMergeTreePartCheckThread): Cannot create empty part 0_0_0_0 instead of lost. Will retry later\r\n\r\nstdout:\r\n1\r\n1000\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0_0_0_0\tWide\t762b11d319c368c7370db59d5dcaef5d\t39dbd230065e58a4514a8be2dac94fd0\t02c1e59200bd003ab324ada5cd6bb144\r\n\r\nSettings used in the test: --max_insert_threads=0 --group_by_two_level_threshold=849475 --group_by_two_level_threshold_bytes=1 --distributed_aggregation_memory_efficient=0 --fsync_metadata=1 --output_format_parallel_formatting=1 --input_format_parallel_parsing=1 --min_chunk_bytes_for_parallel_parsing=18144904 --max_read_buffer_size=722788 --prefer_localhost_replica=0 --max_block_size=25427 --max_threads=62 --optimize_or_like_chain=1 --optimize_read_in_order=1 --enable_multiple_prewhere_read_steps=0 --read_in_order_two_level_merge_threshold=78 --optimize_aggregation_in_order=1 --aggregation_in_order_max_block_bytes=11884322 --min_compress_block_size=1930911 --max_compress_block_size=2570525 --use_uncompressed_cache=1 --min_bytes_to_use_direct_io=10737418240 --min_bytes_to_use_mmap_io=10737418240 --local_filesystem_read_method=mmap --remote_filesystem_read_method=read --local_filesystem_read_prefetch=0 --remote_filesystem_read_prefetch=0 --allow_prefetched_read_pool_for_remote_filesystem=0 --filesystem_prefetch_max_memory_usage=32Mi --filesystem_prefetches_limit=10 --filesystem_prefetch_min_bytes_for_single_read_task=16Mi --filesystem_prefetch_step_marks=0 --filesystem_prefetch_step_bytes=100Mi --compile_expressions=1 --compile_aggregate_expressions=1 --compile_sort_description=1 --merge_tree_coarse_index_granularity=5 --optimize_distinct_in_order=1 --optimize_sorting_by_input_stream_properties=0 --http_response_buffer_size=5550515 --http_wait_end_of_query=True --enable_memory_bound_merging_of_aggregation_results=0\r\n\r\nMergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization=1.0 --prefer_fetch_merged_part_size_threshold=10737418240 --vertical_merge_algorithm_min_rows_to_activate=1000000 --vertical_merge_algorithm_min_columns_to_activate=1 --allow_vertical_merges_from_compact_to_wide_parts=0 --min_merge_bytes_to_use_direct_io=1 --index_granularity_bytes=24077322 --merge_max_block_size=16534 --index_granularity=28111 --compress_marks=1 --compress_primary_key=1 --marks_compress_block_size=63304 --primary_key_compress_block_size=22065\r\n\r\n\r\n```\r\n\r\n```\r\n02253_empty_part_checksums:                                             [ FAIL ] - having stderror: \r\n[dell9510] 2023.06.23 17:46:37.563212 [ 616870 ] {10ae2c1d-0faa-4d84-9c4e-8c543ea7c55e} <Error> test_n2vus5fc.rmt (ReplicatedMergeTreePartCheckThread): DB::CheckResult DB::ReplicatedMergeTreePartCheckThread::checkPart(const DB::String &): Code: 40. DB::Exception: No uncompressed checksum for file primary.cidx. (CHECKSUM_DOESNT_MATCH), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/exception:134: std::exception::capture() @ 0x000000001b750a62 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n1. /home/tavplubix/ch/ClickHouse/contrib/llvm-project/libcxx/include/exception:112: std::exception::exception[abi:v15000]() @ 0x000000001b750a2d in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n2. /home/tavplubix/ch/ClickHouse/base/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(String const&, int) @ 0x0000000036685100 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n3. /home/tavplubix/ch/ClickHouse/src/Common/Exception.cpp:90: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x0000000025b012fb in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n4. /home/tavplubix/ch/ClickHouse/src/Common/Exception.h:54: DB::Exception::Exception(String&&, int, bool) @ 0x000000001b743e17 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n5. /home/tavplubix/ch/ClickHouse/src/Common/Exception.h:81: DB::Exception::Exception<String const&>(int, FormatStringHelperImpl<std::type_identity<String const&>::type>, String const&) @ 0x000000001bf6f464 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n6. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/MergeTreeDataPartChecksum.cpp:34: DB::MergeTreeDataPartChecksum::checkEqual(DB::MergeTreeDataPartChecksum const&, bool, String const&) const @ 0x000000003086b0ea in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n7. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/MergeTreeDataPartChecksum.cpp:78: DB::MergeTreeDataPartChecksums::checkEqual(DB::MergeTreeDataPartChecksums const&, bool) const @ 0x000000003086bd19 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n8. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/checkDataPart.cpp:229: DB::checkDataPart(std::shared_ptr<DB::IMergeTreeDataPart const>, DB::IDataPartStorage const&, DB::NamesAndTypesList const&, DB::MergeTreeDataPartType const&, std::unordered_set<String, std::hash<String>, std::equal_to<String>, std::allocator<String>> const&, DB::ReadSettings const&, bool, std::function<bool ()>) @ 0x0000000030c7ef26 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n9. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/checkDataPart.cpp:293: DB::checkDataPart(std::shared_ptr<DB::IMergeTreeDataPart const>, bool, std::function<bool ()>) @ 0x0000000030c7d3a1 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n10. /home/tavplubix/ch/ClickHouse/src/Storages/MergeTree/ReplicatedMergeTreePartCheckThread.cpp:407: DB::ReplicatedMergeTreePartCheckThread::checkPart(String const&) @ 0x0000000030bd6088 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n11. /home/tavplubix/ch/ClickHouse/src/Storages/StorageReplicatedMergeTree.cpp:8192: DB::StorageReplicatedMergeTree::checkData(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>) @ 0x00000000300964eb in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n12. /home/tavplubix/ch/ClickHouse/src/Interpreters/InterpreterCheckQuery.cpp:44: DB::InterpreterCheckQuery::execute() @ 0x000000002f1ea440 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n13. /home/tavplubix/ch/ClickHouse/src/Interpreters/executeQuery.cpp:723: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x000000002f86d377 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n14. /home/tavplubix/ch/ClickHouse/src/Interpreters/executeQuery.cpp:1182: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x000000002f8689db in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n15. /home/tavplubix/ch/ClickHouse/src/Server/TCPHandler.cpp:420: DB::TCPHandler::runImpl() @ 0x0000000030eff97f in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n16. /home/tavplubix/ch/ClickHouse/src/Server/TCPHandler.cpp:2043: DB::TCPHandler::run() @ 0x0000000030f120d2 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n17. /home/tavplubix/ch/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000003649ac59 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n18. /home/tavplubix/ch/ClickHouse/base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000003649b4a8 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n19. /home/tavplubix/ch/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x000000003670c8a1 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n20. /home/tavplubix/ch/ClickHouse/base/poco/Foundation/src/Thread.cpp:46: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x00000000367091ba in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n21. /home/tavplubix/ch/ClickHouse/base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000036707d55 in /home/tavplubix/ch/ClickHouse/cmake-build-debug/programs/clickhouse\r\n22. ? @ 0x00007fc88e5e244b in ?\r\n23. ? @ 0x00007fc88e665e40 in ?\r\n (version 23.6.1.1)\r\n[dell9510] 2023.06.23 17:46:37.563559 [ 616870 ] {10ae2c1d-0faa-4d84-9c4e-8c543ea7c55e} <Error> test_n2vus5fc.rmt (ReplicatedMergeTreePartCheckThread): Part 0_0_0_0 looks broken. Removing it and will try to fetch.\r\n[dell9510] 2023.06.23 17:46:37.564068 [ 616870 ] {10ae2c1d-0faa-4d84-9c4e-8c543ea7c55e} <Warning> test_n2vus5fc.rmt (5c6d6c95-b02e-4fb2-b7cf-ab525f9eeb9c): Directory broken_0_0_0_0 (to detach to) already exists. Will detach to directory with '_tryN' suffix.\r\n[dell9510] 2023.06.23 17:46:37.568993 [ 616870 ] {10ae2c1d-0faa-4d84-9c4e-8c543ea7c55e} <Error> test_n2vus5fc.rmt (ReplicatedMergeTreePartCheckThread): No replica has part covering 0_0_0_0 and a merge is impossible: we didn't find smaller parts with either the same min block or the same max block.\r\n[dell9510] 2023.06.23 17:46:37.569213 [ 616870 ] {10ae2c1d-0faa-4d84-9c4e-8c543ea7c55e} <Warning> test_n2vus5fc.rmt (ReplicatedMergeTreePartCheckThread): Part 0_0_0_0 exists in ZooKeeper but not locally and not found on other replica. Removing it from ZooKeeper.\r\n[dell9510] 2023.06.23 17:46:37.586485 [ 616870 ] {10ae2c1d-0faa-4d84-9c4e-8c543ea7c55e} <Warning> test_n2vus5fc.rmt (5c6d6c95-b02e-4fb2-b7cf-ab525f9eeb9c): Cannot commit empty part 0_0_0_0 with error DB::Exception: Part 0_0_0_0 (state Outdated) already exists, but it will be deleted soon\r\n[dell9510] 2023.06.23 17:46:37.588635 [ 616870 ] {10ae2c1d-0faa-4d84-9c4e-8c543ea7c55e} <Warning> test_n2vus5fc.rmt (ReplicatedMergeTreePartCheckThread): Cannot create empty part 0_0_0_0 instead of lost. Will retry later\r\n\r\nstdout:\r\n1\r\n1000\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0_0_0_0\tWide\t713230f3fb6e4ca511b9767033950f72\t25aa00cab89b98f082fd1a8e71181231\tf12d8c4d7e6e00a34d67e89f5f0ac87e\r\n\r\nSettings used in the test: --max_insert_threads=0 --group_by_two_level_threshold=38232 --group_by_two_level_threshold_bytes=1 --distributed_aggregation_memory_efficient=0 --fsync_metadata=1 --output_format_parallel_formatting=0 --input_format_parallel_parsing=1 --min_chunk_bytes_for_parallel_parsing=2674138 --max_read_buffer_size=580825 --prefer_localhost_replica=1 --max_block_size=98332 --max_threads=58 --optimize_or_like_chain=1 --optimize_read_in_order=0 --enable_multiple_prewhere_read_steps=1 --read_in_order_two_level_merge_threshold=45 --optimize_aggregation_in_order=1 --aggregation_in_order_max_block_bytes=20098326 --min_compress_block_size=796320 --max_compress_block_size=3144554 --use_uncompressed_cache=0 --min_bytes_to_use_direct_io=9430569687 --min_bytes_to_use_mmap_io=10737418240 --local_filesystem_read_method=mmap --remote_filesystem_read_method=read --local_filesystem_read_prefetch=1 --remote_filesystem_read_prefetch=0 --allow_prefetched_read_pool_for_remote_filesystem=0 --filesystem_prefetch_max_memory_usage=128Mi --filesystem_prefetches_limit=0 --filesystem_prefetch_min_bytes_for_single_read_task=16Mi --filesystem_prefetch_step_marks=0 --filesystem_prefetch_step_bytes=0 --compile_expressions=1 --compile_aggregate_expressions=1 --compile_sort_description=1 --merge_tree_coarse_index_granularity=15 --optimize_distinct_in_order=1 --optimize_sorting_by_input_stream_properties=1 --http_response_buffer_size=5585927 --http_wait_end_of_query=True --enable_memory_bound_merging_of_aggregation_results=1\r\n\r\nMergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization=1.0 --prefer_fetch_merged_part_size_threshold=10737418240 --vertical_merge_algorithm_min_rows_to_activate=1 --vertical_merge_algorithm_min_columns_to_activate=1 --allow_vertical_merges_from_compact_to_wide_parts=0 --min_merge_bytes_to_use_direct_io=7784244034 --index_granularity_bytes=19740381 --merge_max_block_size=15475 --index_granularity=6167 --compress_marks=0 --compress_primary_key=1 --marks_compress_block_size=72377 --primary_key_compress_block_size=83499\r\n\r\n```\n",
  "hints_text": "",
  "created_at": "2023-07-04T12:16:30Z"
}