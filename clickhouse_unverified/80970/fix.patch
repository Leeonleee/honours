diff --git a/src/Processors/Transforms/ExtremesTransform.cpp b/src/Processors/Transforms/ExtremesTransform.cpp
index af6b4b5e11a4..6dbd6887cda0 100644
--- a/src/Processors/Transforms/ExtremesTransform.cpp
+++ b/src/Processors/Transforms/ExtremesTransform.cpp
@@ -1,6 +1,7 @@
 #include <Processors/Transforms/ExtremesTransform.h>
 #include <Columns/IColumn.h>
 #include <Core/Field.h>
+#include <Common/NaNUtils.h>
 
 namespace DB
 {
@@ -105,9 +106,17 @@ void ExtremesTransform::transform(DB::Chunk & chunk)
 
             columns[i]->getExtremes(cur_min_value, cur_max_value);
 
-            if (cur_min_value < min_value)
+            // getExtremes implementations for Nullable and floating point are ignoring Nulls, so do the same here
+            auto isNullORNaN = [] (const Field & value)
+            {
+                if (value.isNull())
+                    return true;
+                Float64 rawVal;
+                return value.tryGet<Float64>(rawVal) && isNaN(rawVal);
+            };
+            if (isNullORNaN(min_value) || (!isNullORNaN(cur_min_value) && cur_min_value < min_value))
                 min_value = cur_min_value;
-            if (cur_max_value > max_value)
+            if (isNullORNaN(max_value) || (!isNullORNaN(cur_max_value) && cur_max_value > max_value))
                 max_value = cur_max_value;
 
             MutableColumnPtr new_extremes = extremes_columns[i]->cloneEmpty();
