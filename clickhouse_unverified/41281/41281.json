{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 41281,
  "instance_id": "ClickHouse__ClickHouse-41281",
  "issue_numbers": [
    "40599"
  ],
  "base_commit": "62437870b92fb0b76294219fbcb7aa6c2b850960",
  "patch": "diff --git a/src/Storages/MergeTree/KeyCondition.cpp b/src/Storages/MergeTree/KeyCondition.cpp\nindex f5eeb4ed35c8..2eea7a2f3590 100644\n--- a/src/Storages/MergeTree/KeyCondition.cpp\n+++ b/src/Storages/MergeTree/KeyCondition.cpp\n@@ -116,10 +116,20 @@ static void appendColumnNameWithoutAlias(const ActionsDAG::Node & node, WriteBuf\n {\n     switch (node.type)\n     {\n-        case (ActionsDAG::ActionType::INPUT): [[fallthrough]];\n-        case (ActionsDAG::ActionType::COLUMN):\n+        case (ActionsDAG::ActionType::INPUT):\n             writeString(node.result_name, out);\n             break;\n+        case (ActionsDAG::ActionType::COLUMN):\n+        {\n+            /// If it was created from ASTLiteral, then result_name can be an alias.\n+            /// We need to convert value back to string here.\n+            if (const auto * column_const = typeid_cast<const ColumnConst *>(node.column.get()))\n+                writeString(applyVisitor(FieldVisitorToString(), column_const->getField()), out);\n+            /// It may be possible that column is ColumnSet\n+            else\n+                writeString(node.result_name, out);\n+            break;\n+        }\n         case (ActionsDAG::ActionType::ALIAS):\n             appendColumnNameWithoutAlias(*node.children.front(), out, legacy);\n             break;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02420_key_condition_actions_dag_bug_40599.reference b/tests/queries/0_stateless/02420_key_condition_actions_dag_bug_40599.reference\nnew file mode 100644\nindex 000000000000..8bd1af11bf28\n--- /dev/null\n+++ b/tests/queries/0_stateless/02420_key_condition_actions_dag_bug_40599.reference\n@@ -0,0 +1,1 @@\n+2000\ndiff --git a/tests/queries/0_stateless/02420_key_condition_actions_dag_bug_40599.sql b/tests/queries/0_stateless/02420_key_condition_actions_dag_bug_40599.sql\nnew file mode 100644\nindex 000000000000..4d2feacfde7a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02420_key_condition_actions_dag_bug_40599.sql\n@@ -0,0 +1,10 @@\n+create table tba (event_id Int64, event_dt Int64) Engine =MergeTree order by event_id ;\n+insert into tba select number%500, 20220822 from numbers(1e6);\n+\n+select count() from (\n+   SELECT event_dt FROM (\n+      select event_dt, 403 AS event_id from (\n+         select event_dt from tba as tba\n+         where event_id = 9 and ((tba.event_dt >= 20220822 and tba.event_dt <= 20220822))\n+      )\n+  ) tba WHERE tba.event_dt >= 20220822 and tba.event_dt <= 20220822 and event_id = 403 );\n",
  "problem_statement": "22.8.2.11 sql filter exception\n> Make sure to check documentation https://clickhouse.com/docs/en/ first. If the question is concise and probably has a short answer, asking it in Telegram chat https://telegram.me/clickhouse_en is probably the fastest way to find the answer. For more complicated questions, consider asking them on StackOverflow with \"clickhouse\" tag https://stackoverflow.com/questions/tagged/clickhouse \r\n\r\n> If you still prefer GitHub issues, remove all this text and ask your question here.\r\n\r\nsql\u30101\u3011:  \r\n`select count()\r\nfrom (\r\n         SELECT event_dt\r\n         FROM (select event_dt, 403 AS event_id\r\n               from (\r\n                        select event_dt\r\n                        from tba as tba\r\n                        where event_id = 9\r\n                          and ((tba.event_dt >= 20220822 and tba.event_dt <= 20220822))\r\n                        )) tba\r\n         WHERE tba.event_dt >= 20220822\r\n           and tba.event_dt <= 20220822\r\n         );`\r\n\r\nsql\u30102\u3011:\r\n`select count()\r\nfrom (\r\n         SELECT event_dt\r\n         FROM (select event_dt, 403 AS event_id\r\n               from (\r\n                        select event_dt\r\n                        from tba as tba\r\n                        where event_id = 9\r\n                          and ((tba.event_dt >= 20220822 and tba.event_dt <= 20220822))\r\n                        )) tba\r\n         WHERE tba.event_dt >= 20220822\r\n           and tba.event_dt <= 20220822\r\n           and event_id = 403\r\n         );`\r\n\r\nwhy sql\u30102\u3011result less data\n",
  "hints_text": "Clickhouse version?\r\n\r\nDo you get a right result If you execute this?\r\n\r\n```\r\nselect count() from ( SELECT event_dt FROM (select event_dt, 403 AS event_id from ( select event_dt from tba as tba where event_id = 9 and ((tba.event_dt >= 20220822 and tba.event_dt <= 20220822)) )) tba WHERE tba.event_dt >= 20220822 and tba.event_dt <= 20220822 and event_id = 403 )\r\nsettings enable_optimize_predicate_expression=0, allow_experimental_projection_optimization=0;\r\n```\r\n\n> Clickhouse version?\r\n> \r\n> Do you get a right result If you execute this?\r\n> \r\n> ```\r\n> select count() from ( SELECT event_dt FROM (select event_dt, 403 AS event_id from ( select event_dt from tba as tba where event_id = 9 and ((tba.event_dt >= 20220822 and tba.event_dt <= 20220822)) )) tba WHERE tba.event_dt >= 20220822 and tba.event_dt <= 20220822 and event_id = 403 )\r\n> settings enable_optimize_predicate_expression=0, allow_experimental_projection_optimization=0;\r\n> ```\r\nThe problem still exists. I think it is a bug, because there is no problem in 22.3 lts, but there is a problem in 22.8.2.11\r\n\nah, I missed a version in the title.\r\n\n\r\n22.7\r\n```sql\r\n\r\n  create table tba (event_id Int64, event_dt Int64) Engine =MergeTree order by event_id ;\r\n  insert into tba select number%500, 20220822 from numbers(1e6);\r\n\r\nselect count() from ( \r\n   SELECT event_dt FROM (\r\n      select event_dt, 403 AS event_id from ( \r\n         select event_dt from tba as tba \r\n         where event_id = 9 and ((tba.event_dt >= 20220822 and tba.event_dt <= 20220822)) \r\n      )\r\n  ) tba WHERE tba.event_dt >= 20220822 and tba.event_dt <= 20220822 and event_id = 403 );\r\n---\r\n2000\r\n```\r\nhttps://fiddle.clickhouse.com/a1bd2679-4644-44ad-8331-30d2344b0b63\r\n\r\n22.8\r\nhttps://fiddle.clickhouse.com/7ca33de7-2068-476a-81d3-0d496e2d55a2\r\n```sql\r\n--\r\n0\r\n```\n> \r\n\r\n\r\n\r\n> show create table tba\r\n\r\nI think you have found it. Do you still need  show create table tba .Looking forward to bug fixes\n/ClickHouse/ClickHouse/issues/40595  You can also have a look at this if you are free\n22.8.1.2097\r\n```sql\r\ncreate table tba (event_id Int64, event_dt Int64) Engine =MergeTree order by event_id \r\nas select number, 20220822 from numbers(10);\r\n\r\nSELECT count() FROM ( select event_dt, 403 AS event_id from tba ) tba \r\nWHERE tba.event_dt >= 20220822 and tba.event_dt <= 20220822 and event_id = 403 \r\nsettings query_plan_optimize_primary_key=0;\r\n\u250c\u2500count()\u2500\u2510\r\n\u2502      10 \u2502 -- correct result\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\nSELECT count() FROM ( select event_dt, 403 AS event_id from tba ) tba \r\nWHERE tba.event_dt >= 20220822 and tba.event_dt <= 20220822 and event_id = 403 \r\nsettings query_plan_optimize_primary_key=1;\r\n\u250c\u2500count()\u2500\u2510\r\n\u2502       0 \u2502 -- incorrect result\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n\n> ```\r\n> set query_plan_optimize_primary_key=0;\r\n> \r\n> SELECT count()\r\n> FROM\r\n> (\r\n>     SELECT\r\n>         event_dt,\r\n>         403 AS event_id\r\n>     FROM tba\r\n> ) AS tba\r\n> WHERE (tba.event_dt >= 20220822) AND (tba.event_dt <= 20220822) AND (event_id = 403)\r\n> \r\n> Query id: 2f1a0c96-3032-4fe7-a997-9eb39ddb5835\r\n> \r\n> \u250c\u2500count()\u2500\u2510\r\n> \u2502      10 \u2502\r\n> \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n> \r\n> set query_plan_optimize_primary_key=1;\r\n> \r\n> SELECT count()\r\n> FROM\r\n> (\r\n>     SELECT\r\n>         event_dt,\r\n>         403 AS event_id\r\n>     FROM tba\r\n> ) AS tba\r\n> WHERE (tba.event_dt >= 20220822) AND (tba.event_dt <= 20220822) AND (event_id = 403)\r\n> \r\n> Query id: c3671b38-0437-4fd5-b08b-af9be1e8d7e6\r\n> \r\n> Ok.\r\n> \r\n> 0 rows in set. Elapsed: 0.001 sec.\r\n> ```\r\n> \r\n> @xujinlong0314 you need to disable query_plan_optimize_primary_key\r\n\r\nCompared with 22.3, will this configuration\uff08disable query_plan_optimize_primary_key\uff09 affect the performance of other queries\uff1f\n>Compared with 22.3, will this configuration\uff08disable query_plan_optimize_primary_key\uff09 affect the performance of other queries\uff1f\r\n\r\nNo, it will not",
  "created_at": "2022-09-13T18:48:59Z"
}