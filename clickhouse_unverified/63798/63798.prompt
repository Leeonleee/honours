You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Add a setting to use Variant data type during schema inference when column/array has values with different types
Examples:
```
:) select arr, toTypeName(arr) from format('JSONEachRow', '{"arr" : [1, "Hello", {"a" : 32}]}')
   ┌─arr──────────────┬─toTypeName(arr)────────────────────────────────────────────────────┐
1. │ (1,'Hello',(32)) │ Tuple(Nullable(Int64), Nullable(String), Tuple(a Nullable(Int64))) │
   └──────────────────┴────────────────────────────────────────────────────────────────────┘
```

Instead, it can be `Array(Variant(Int64, String, Tuple(a Nullable(Int64))))`.

```
:) select x, toTypeName(x) from format('JSONEachRow', '{"x" : 42}, {"x" : "Hello"}')

   ┌─x─────┬─toTypeName(x)────┐
1. │ 42    │ Nullable(String) │
2. │ Hello │ Nullable(String) │
   └───────┴──────────────────┘
```

It can be `Variant(Int64, String)`.

```
:) select x, toTypeName(x) from format('JSONEachRow', '{"x" : [1, 2, 3]}, {"x" : {"a" : 42}}')

Received exception:
Code: 636. DB::Exception: The table structure cannot be extracted from a JSONEachRow format file. Error:
Code: 53. DB::Exception: Automatically defined type Tuple(a Int64) for column 'x' in row 1 differs from type defined by previous rows: Array(Int64). You can specify the type for this column using setting schema_inference_hints. (TYPE_MISMATCH) (version 24.4.1.1).
You can specify the structure manually. (CANNOT_EXTRACT_TABLE_STRUCTURE)

```

It can be `Variant(Array(Int64), Tuple(a Int64))`
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
