{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 11318,
  "instance_id": "ClickHouse__ClickHouse-11318",
  "issue_numbers": [
    "11254"
  ],
  "base_commit": "a4b2daae0d1b52a2ce52430ac797905516812842",
  "patch": "diff --git a/src/Functions/visitParamExtractRaw.cpp b/src/Functions/visitParamExtractRaw.cpp\nindex 7a02d29e4466..ef41e9bc9001 100644\n--- a/src/Functions/visitParamExtractRaw.cpp\n+++ b/src/Functions/visitParamExtractRaw.cpp\n@@ -22,6 +22,14 @@ struct ExtractRaw\n                 expects_end.pop_back();\n                 current_expect_end = expects_end.empty() ? 0 : expects_end.back();\n             }\n+            else if (current_expect_end == '\"')\n+            {\n+                /// skip backslash\n+                if (*pos == '\\\\' && pos + 1 < end && pos[1] == '\"')\n+                {\n+                    pos++;\n+                }\n+            }\n             else\n             {\n                 switch (*pos)\n@@ -38,11 +46,6 @@ struct ExtractRaw\n                         current_expect_end = '\"';\n                         expects_end.push_back(current_expect_end);\n                         break;\n-                    case '\\\\':\n-                        /// skip backslash\n-                        if (pos + 1 < end && pos[1] == '\"')\n-                            pos++;\n-                        break;\n                     default:\n                         if (!current_expect_end && (*pos == ',' || *pos == '}'))\n                         {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00539_functions_for_working_with_json.reference b/tests/queries/0_stateless/00539_functions_for_working_with_json.reference\nindex ee7fb68b7c27..c0399f8ab2e0 100644\n--- a/tests/queries/0_stateless/00539_functions_for_working_with_json.reference\n+++ b/tests/queries/0_stateless/00539_functions_for_working_with_json.reference\n@@ -9,5 +9,7 @@ test\"string\n  \"test_string\"\n  \"test\\\\\"string\"\n  \"test\\\\\"string\"\n+ \"{\"\n+ \"[\"\n  [\"]\", \"2\", \"3\"]\n  {\"nested\" : [1,2,3]}\ndiff --git a/tests/queries/0_stateless/00539_functions_for_working_with_json.sql b/tests/queries/0_stateless/00539_functions_for_working_with_json.sql\nindex 8a4d1794293a..514b5f2e5ead 100644\n--- a/tests/queries/0_stateless/00539_functions_for_working_with_json.sql\n+++ b/tests/queries/0_stateless/00539_functions_for_working_with_json.sql\n@@ -11,5 +11,7 @@ SELECT visitParamExtractRaw('{\"myparam\":\"test_string\"}', 'myparam');\n SELECT visitParamExtractRaw('{\"myparam\": \"test_string\"}', 'myparam');\n SELECT visitParamExtractRaw('{\"myparam\": \"test\\\\\"string\"}', 'myparam');\n SELECT visitParamExtractRaw('{\"myparam\": \"test\\\\\"string\", \"other\":123}', 'myparam');\n+SELECT visitParamExtractRaw('{\"myparam\": \"{\"}', 'myparam');\n+SELECT visitParamExtractRaw('{\"myparam\": \"[\"}', 'myparam');\n SELECT visitParamExtractRaw('{\"myparam\": [\"]\", \"2\", \"3\"], \"other\":123}', 'myparam');\n SELECT visitParamExtractRaw('{\"myparam\": {\"nested\" : [1,2,3]}, \"other\":123}', 'myparam');\n",
  "problem_statement": "visitParamExtractRaw does not work if the JSON contains a string with unmatched { or [\n### Query\r\n\r\n`select visitParamExtractRaw('{\"k\":\"{\"}', 'k')`\r\n\r\n### Expected result\r\n\r\n`'\"{\"'`\r\n\r\n### Actual result\r\n\r\n`''`\r\n\r\n### Clickhouse version\r\n\r\n20.4.4.18-stable\r\n\r\n### Additional information\r\n\r\nAlso applicable for `[` instead of `{`.\n",
  "hints_text": "20.3 has no problem.\r\nAlso not reproducing in 20.5/master\r\n```\r\n\u2502 VERSION_GITHASH           \u2502 91df18a906dcffdbee6816e5389df6c65f86e35f                                                                                                     \r\n```\r\n\r\n``` sql\r\nSELECT visitParamExtractRaw('{\"k\":\"{\"}', 'k')\r\n\r\n\u250c\u2500visitParamExtractRaw('{\"k\":\"{\"}', 'k')\u2500\u2510\r\n\u2502                                        \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\nNeed to check on exact same version.",
  "created_at": "2020-05-30T23:00:59Z"
}