{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 57407,
  "instance_id": "ClickHouse__ClickHouse-57407",
  "issue_numbers": [
    "57373"
  ],
  "base_commit": "46acd8736c29a020aa4711449ddcc00d2f7c6b8f",
  "patch": "diff --git a/src/Common/Arena.h b/src/Common/Arena.h\nindex aab5ee4a35aa..7604091442e7 100644\n--- a/src/Common/Arena.h\n+++ b/src/Common/Arena.h\n@@ -3,11 +3,11 @@\n #include <cstring>\n #include <memory>\n #include <vector>\n-#include <boost/noncopyable.hpp>\n #include <Core/Defines.h>\n-#include <Common/memcpySmall.h>\n-#include <Common/ProfileEvents.h>\n+#include <boost/noncopyable.hpp>\n #include <Common/Allocator.h>\n+#include <Common/ProfileEvents.h>\n+#include <Common/memcpySmall.h>\n \n #if __has_include(<sanitizer/asan_interface.h>) && defined(ADDRESS_SANITIZER)\n #   include <sanitizer/asan_interface.h>\n@@ -180,7 +180,7 @@ class Arena : private boost::noncopyable\n     char * alloc(size_t size)\n     {\n         used_bytes += size;\n-        if (unlikely(head.empty() || static_cast<std::ptrdiff_t>(size) > head.end - head.pos))\n+        if (unlikely(head.empty() || size > head.remaining()))\n             addMemoryChunk(size);\n \n         char * res = head.pos;\n@@ -193,6 +193,9 @@ class Arena : private boost::noncopyable\n     char * alignedAlloc(size_t size, size_t alignment)\n     {\n         used_bytes += size;\n+        if (unlikely(head.empty() || size > head.remaining()))\n+            addMemoryChunk(size + alignment);\n+\n         do\n         {\n             void * head_pos = head.pos;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02931_ubsan_error_arena_aligned_alloc.reference b/tests/queries/0_stateless/02931_ubsan_error_arena_aligned_alloc.reference\nnew file mode 100644\nindex 000000000000..fe51488c7066\n--- /dev/null\n+++ b/tests/queries/0_stateless/02931_ubsan_error_arena_aligned_alloc.reference\n@@ -0,0 +1,1 @@\n+[]\ndiff --git a/tests/queries/0_stateless/02931_ubsan_error_arena_aligned_alloc.sql b/tests/queries/0_stateless/02931_ubsan_error_arena_aligned_alloc.sql\nnew file mode 100644\nindex 000000000000..c140d7d42442\n--- /dev/null\n+++ b/tests/queries/0_stateless/02931_ubsan_error_arena_aligned_alloc.sql\n@@ -0,0 +1,2 @@\n+-- previously it caused `runtime error: applying non-zero offset 7 to null pointer`\n+SELECT sumResample(65535, 20, 1)(number, number % 20) FROM numbers(200);\n",
  "problem_statement": "ubsan error in `sumResample` runtime error: applying non-zero offset 7 to null pointer\n``` sql\r\nSELECT sumResample(65535, 20, 1)(number, number % 20) FROM numbers(200)\r\n```\r\n\r\n``` sh\r\n1467564-    #0 0x55edee203138 in std::__1::align(unsigned long, unsigned long, void*&, unsigned long&) build_docker/./contrib/llvm-project/libcxx/src/memory.cpp:197:72\r\n1467565-    #1 0x55edd0efcda0 in DB::Arena::alignedAlloc(unsigned long, unsigned long) (/workspace/clickhouse+0x18da1da0) (BuildId: 34961d56328cefb6a2988ccf823005f66f599fa0)\r\n1467566-    #2 0x55ede7dd0bd6 in DB::Aggregator::executeOnBlock(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>, unsigned long, unsigned long, DB::AggregatedDataVariants&, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*>>&, std::__1::vector<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*>>, std::__1::allocator<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*>>>>&, bool&) const build_docker/./src/Interpreters/Aggregator.cpp:1628:58\r\n1467567-    #3 0x55edeaf88a5f in DB::AggregatingTransform::consume(DB::Chunk) build_docker/./src/Processors/Transforms/AggregatingTransform.cpp:672:33\r\n1467568-    #4 0x55edeaf711f2 in DB::AggregatingTransform::work() build_docker/./src/Processors/Transforms/AggregatingTransform.cpp:631:9\r\n1467569-    #5 0x55edea9d94af in DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) build_docker/./src/Processors/Executors/ExecutionThreadContext.cpp:47:26\r\n1467570-    #6 0x55edea9d94af in DB::ExecutionThreadContext::executeTask() build_docker/./src/Processors/Executors/ExecutionThreadContext.cpp:95:9\r\n1467571-    #7 0x55edea9c955a in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) build_docker/./src/Processors/Executors/PipelineExecutor.cpp:273:26\r\n1467572-    #8 0x55edea9c955a in DB::PipelineExecutor::executeSingleThread(unsigned long) build_docker/./src/Processors/Executors/PipelineExecutor.cpp:239:5\r\n1467573-    #9 0x55edea9ca582 in DB::PipelineExecutor::spawnThreads()::$_0::operator()() const build_docker/./src/Processors/Executors/PipelineExecutor.cpp:373:17\r\n1467574-    #10 0x55edea9ca582 in decltype(std::declval<DB::PipelineExecutor::spawnThreads()::$_0&>()()) std::__1::__invoke[abi:v15000]<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394:23\r\n1467575-    #11 0x55edea9ca582 in void std::__1::__invoke_void_return_wrapper<void, true>::__call<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:479:9\r\n1467576-    #12 0x55edea9ca582 in std::__1::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>::operator()[abi:v15000]() build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:235:12\r\n1467577-    #13 0x55edea9ca582 in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>>(std::__1::__function::__policy_storage const*) build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:716:16\r\n1467578-    #14 0x55eddb92c35a in std::__1::__function::__policy_func<void ()>::operator()[abi:v15000]() const build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:848:16\r\n1467579-    #15 0x55eddb92c35a in std::__1::function<void ()>::operator()() const build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:1187:12\r\n1467580-    #16 0x55eddb92c35a in ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) build_docker/./src/Common/ThreadPool.cpp:421:13\r\n1467581-    #17 0x55eddb931393 in void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/./src/Common/ThreadPool.cpp:183:73\r\n1467582-    #18 0x55eddb931393 in decltype(std::declval<void>()()) std::__1::__invoke[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&>(void&&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394:23\r\n1467583-    #19 0x55eddb931393 in decltype(auto) std::__1::__apply_tuple_impl[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&, std::__1::__tuple_indices<>) build_docker/./contrib/llvm-project/libcxx/include/tuple:1789:1\r\n1467584-    #20 0x55eddb931393 in decltype(auto) std::__1::apply[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&) build_docker/./contrib/llvm-project/libcxx/include/tuple:1798:1\r\n1467585-    #21 0x55eddb931393 in ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() build_docker/./src/Common/ThreadPool.h:250:13\r\n1467586-    #22 0x55eddb92967a in std::__1::__function::__policy_func<void ()>::operator()[abi:v15000]() const build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:848:16\r\n1467587-    #23 0x55eddb92967a in std::__1::function<void ()>::operator()() const build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:1187:12\r\n1467588-    #24 0x55eddb92967a in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) build_docker/./src/Common/ThreadPool.cpp:421:13\r\n1467589-    #25 0x55eddb92efa9 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/./src/Common/ThreadPool.cpp:183:73\r\n1467590-    #26 0x55eddb92efa9 in decltype(std::declval<void>()()) std::__1::__invoke[abi:v15000]<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394:23\r\n1467591-    #27 0x55eddb92efa9 in void std::__1::__thread_execute[abi:v15000]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>) build_docker/./contrib/llvm-project/libcxx/include/thread:284:5\r\n1467592-    #28 0x55eddb92efa9 in void* std::__1::__thread_proxy[abi:v15000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>>(void*) build_docker/./contrib/llvm-project/libcxx/include/thread:295:5\r\n1467593-    #29 0x7f6e57af5ac2 in start_thread nptl/pthread_create.c:442:8\r\n1467594-    #30 0x7f6e57b87a3f  misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n1467595-\r\n1467596:SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /build/contrib/llvm-project/libcxx/src/memory.cpp:197:72 in\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2023-11-30T21:03:10Z",
  "modified_files": [
    "src/Common/Arena.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02931_ubsan_error_arena_aligned_alloc.reference",
    "b/tests/queries/0_stateless/02931_ubsan_error_arena_aligned_alloc.sql"
  ]
}