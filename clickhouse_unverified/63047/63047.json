{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 63047,
  "instance_id": "ClickHouse__ClickHouse-63047",
  "issue_numbers": [
    "62682"
  ],
  "base_commit": "ab29a5f428b4690cc1602766e00ea6ef1df1e6b6",
  "patch": "diff --git a/src/Planner/PlannerExpressionAnalysis.cpp b/src/Planner/PlannerExpressionAnalysis.cpp\nindex dd3769ee10b4..19ad33b5a3fb 100644\n--- a/src/Planner/PlannerExpressionAnalysis.cpp\n+++ b/src/Planner/PlannerExpressionAnalysis.cpp\n@@ -85,6 +85,8 @@ std::optional<AggregationAnalysisResult> analyzeAggregation(const QueryTreeNodeP\n     bool group_by_use_nulls = planner_context->getQueryContext()->getSettingsRef().group_by_use_nulls &&\n         (query_node.isGroupByWithGroupingSets() || query_node.isGroupByWithRollup() || query_node.isGroupByWithCube());\n \n+    bool is_secondary_query = planner_context->getQueryContext()->getClientInfo().query_kind == ClientInfo::QueryKind::SECONDARY_QUERY;\n+\n     if (query_node.hasGroupBy())\n     {\n         if (query_node.isGroupByWithGroupingSets())\n@@ -100,7 +102,7 @@ std::optional<AggregationAnalysisResult> analyzeAggregation(const QueryTreeNodeP\n                     auto is_constant_key = grouping_set_key_node->as<ConstantNode>() != nullptr;\n                     group_by_with_constant_keys |= is_constant_key;\n \n-                    if (is_constant_key && !aggregates_descriptions.empty())\n+                    if (!is_secondary_query && is_constant_key && !aggregates_descriptions.empty())\n                         continue;\n \n                     auto expression_dag_nodes = actions_visitor.visit(before_aggregation_actions, grouping_set_key_node);\n@@ -152,7 +154,7 @@ std::optional<AggregationAnalysisResult> analyzeAggregation(const QueryTreeNodeP\n                 auto is_constant_key = group_by_key_node->as<ConstantNode>() != nullptr;\n                 group_by_with_constant_keys |= is_constant_key;\n \n-                if (is_constant_key && !aggregates_descriptions.empty())\n+                if (!is_secondary_query && is_constant_key && !aggregates_descriptions.empty())\n                     continue;\n \n                 auto expression_dag_nodes = actions_visitor.visit(before_aggregation_actions, group_by_key_node);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03095_group_by_server_constants_bug.reference b/tests/queries/0_stateless/03095_group_by_server_constants_bug.reference\nnew file mode 100644\nindex 000000000000..80ab3c879bb0\n--- /dev/null\n+++ b/tests/queries/0_stateless/03095_group_by_server_constants_bug.reference\n@@ -0,0 +1,1 @@\n+r1\t2\ndiff --git a/tests/queries/0_stateless/03095_group_by_server_constants_bug.sql b/tests/queries/0_stateless/03095_group_by_server_constants_bug.sql\nnew file mode 100644\nindex 000000000000..9f9fda1ef620\n--- /dev/null\n+++ b/tests/queries/0_stateless/03095_group_by_server_constants_bug.sql\n@@ -0,0 +1,5 @@\n+SELECT serverUUID() AS s, count() FROM remote('127.0.0.{1,2}', system.one) GROUP BY s format Null;\n+\n+select getMacro('replica') as s, count() from remote('127.0.0.{1,2}', system.one) group by s;\n+\n+select uptime() as s, count() FROM remote('127.0.0.{1,2}', system.one) group by s format Null;\n",
  "problem_statement": "\"Not found column [..] in block\" with clusterAllReplicas\nThis doesn't work:\r\n```\r\n:) select serverUUID() as s, sum(dummy) from clusterAllReplicas(both, system.one) group by s\r\n\r\n[...]\r\nReceived exception from server (version 24.4.1):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column serverUUID() in block. There are only columns: sum(__table1.dummy): While executing Remote. (NOT_FOUND_COLUMN_IN_BLOCK)\r\n```\r\n\r\nBut this works:\r\n```\r\n:) select cityHash64(serverUUID()) + dummy as s, sum(dummy) from clusterAllReplicas(both, system.one) group by s\r\n\r\n[...]\r\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500s\u2500\u252c\u2500sum(dummy)\u2500\u2510\r\n1. \u2502 6220104575184213473 \u2502          0 \u2502\r\n2. \u2502 7064952209212228648 \u2502          0 \u2502\r\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n2 rows in set. Elapsed: 0.006 sec. \r\n```\r\n\r\nThe cluster is just 2 servers running on localhost:\r\n```\r\nremote_servers:                                                                                                                                                                                                                        \r\n  both:                                                                                                                                                                                                                                \r\n    shard:                                                                                                                                                                                                                             \r\n      replica:                                                                                                                                                                                                                         \r\n        host: 127.0.0.1                                                                                                                                                                                                                \r\n        port: 9000                                                                                                                                                                                                                     \r\n      replica:                                                                                                                                                                                                                         \r\n        host: 127.0.0.3                                                                                                                                                                                                                \r\n        port: 9010                                                                                                                                                                                                                     \r\n```\n",
  "hints_text": "Workaround: set allow_experimental_analyzer=0\nhttps://fiddle.clickhouse.com/d239fb78-2ceb-4474-8efc-0bd702d248fd\n```\r\nselect identity(serverUUID()) as s, count() \r\nfrom remote('127.0.0.{1,2}', system.one)\r\ngroup by s;\r\n\r\n```\r\nhttps://fiddle.clickhouse.com/d293f1db-cfb2-47a0-adcf-d803b88a347c\r\n\r\n\r\n```\r\nSELECT\r\n    identity(serverUUID()) AS s,\r\n    count()\r\nFROM clusterAllReplicas('replicated', system.one)\r\nGROUP BY s\r\n\r\nQuery id: a01e4225-f595-43c0-887a-a3ab50901aa1\r\n\r\n   \u250c\u2500s\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500count()\u2500\u2510\r\n1. \u2502 64551af3-6e7a-42d5-88fe-dff568a09455 \u2502       1 \u2502\r\n2. \u2502 a4eb955b-b2b4-4754-9d8c-d6ad667339eb \u2502       1 \u2502\r\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n```\r\nselect getMacro('replica') as s, count() from clusterAllReplicas('replicated', system.one) group by s;\r\n\r\nReceived exception from server (version 24.3.2):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: \r\nNot found column getMacro('replica'_String) in block.\r\n There are only columns: count(): While executing Remote. (NOT_FOUND_COLUMN_IN_BLOCK)\r\n```\n```\r\nselect uptime() as s, count() from clusterAllReplicas('replicated', system.one)  group by s;\r\n\r\nReceived exception from server (version 24.3.2):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception:\r\n Not found column uptime() in block. There are only columns: count(): \r\nWhile executing Remote. (NOT_FOUND_COLUMN_IN_BLOCK)\r\n```\r\n\r\nuptime: https://fiddle.clickhouse.com/cf68fb33-988d-453e-9659-2c8a41f34069\r\n\r\ntimezone: https://fiddle.clickhouse.com/e60a7fca-6fb4-4d14-8f0f-8d261f6415d0\r\n\r\nserverTimeZone: https://fiddle.clickhouse.com/1b03f4b1-0c52-477e-a85a-534b5423a1f8",
  "created_at": "2024-04-26T16:21:45Z",
  "modified_files": [
    "src/Planner/PlannerExpressionAnalysis.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03095_group_by_server_constants_bug.reference",
    "b/tests/queries/0_stateless/03095_group_by_server_constants_bug.sql"
  ]
}