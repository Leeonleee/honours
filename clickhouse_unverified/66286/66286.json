{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 66286,
  "instance_id": "ClickHouse__ClickHouse-66286",
  "issue_numbers": [
    "66108"
  ],
  "base_commit": "7e523de20a21fe7a5442212554c41639f942428d",
  "patch": "diff --git a/src/Functions/indexHint.h b/src/Functions/indexHint.h\nindex 3b71c7a55854..a71e1555c78c 100644\n--- a/src/Functions/indexHint.h\n+++ b/src/Functions/indexHint.h\n@@ -42,6 +42,10 @@ class FunctionIndexHint : public IFunction\n \n     bool useDefaultImplementationForNulls() const override { return false; }\n \n+    bool useDefaultImplementationForLowCardinalityColumns() const override { return false; }\n+\n+    bool useDefaultImplementationForSparseColumns() const override { return false; }\n+\n     bool isSuitableForConstantFolding() const override { return false; }\n \n     bool isSuitableForShortCircuitArgumentsExecution(const DataTypesWithConstInfo & /*arguments*/) const override { return false; }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03204_index_hint_fuzzer.reference b/tests/queries/0_stateless/03204_index_hint_fuzzer.reference\nnew file mode 100644\nindex 000000000000..f750ba351020\n--- /dev/null\n+++ b/tests/queries/0_stateless/03204_index_hint_fuzzer.reference\n@@ -0,0 +1,1 @@\n+(1,1)\ndiff --git a/tests/queries/0_stateless/03204_index_hint_fuzzer.sql b/tests/queries/0_stateless/03204_index_hint_fuzzer.sql\nnew file mode 100644\nindex 000000000000..5794f3eee53c\n--- /dev/null\n+++ b/tests/queries/0_stateless/03204_index_hint_fuzzer.sql\n@@ -0,0 +1,1 @@\n+SELECT tuple(indexHint(toLowCardinality('aaa')), 1);\n",
  "problem_statement": "Logical error: 'Bad cast from type DB::ColumnVector to DB::ColumnLowCardinality'\nhttps://s3.amazonaws.com/clickhouse-test-reports/65470/5fb0fa3c3d3e611944f83ac06aaac2d6e5c0d0db/ast_fuzzer__debug_.html\r\n\r\n```\r\nLogical error: \\'Bad cast from type DB::ColumnVector<char8_t> to DB::ColumnLowCardinality\\'.\r\n########## Short fault info ############\r\n(version 24.7.1.1, build id: 94C3532F37BD48441A6BC75EFA9FF0FCE2B23C98, git hash: c2ab78008480ae84f440e2dd401ee6e2376e6c30) (from thread 355851) Received signal 6\r\nSignal description: Aborted\r\n\r\nStack trace: 0x000055555d1b869e 0x000055555dadc9c9 0x000055555d102018 0x00007ffff7c42520 0x00007ffff7c969fd 0x00007ffff7c42476 0x00007ffff7c287f3 0x000055555d116294 0x000055555d117f59 0x000055555d18cd3f 0x000055555d32a58d 0x00005555647d0865 0x0000555586e5bb62 0x0000555586e7fe6c 0x0000555586f1a886 0x000055558eb5c921 0x000055558ea9c533 0x000055558ea943e4 0x000055558ea73b4e 0x000055558eac1131 0x00005555919e96e0 0x00005555919ea620 0x00005555918ca735 0x00005555918c710e 0x00005555918c3fd1 0x00007ffff7c94ac3 0x00007ffff7d26850\r\n########################################\r\n(version 24.7.1.1, build id: 94C3532F37BD48441A6BC75EFA9FF0FCE2B23C98, git hash: c2ab78008480ae84f440e2dd401ee6e2376e6c30) (from thread 355851) (query_id: aaa14aaa-1b8c-42ae-91b3-fab737fdac83) (query: SELECT ([toFixedString(\\'a\\', 1)], indexHint(toLowCardinality(9)), 1), tupleElement((\\'hello\\', \\'world\\'), 2, \\'default\\')) Received signal Aborted (6)\r\n\r\nStack trace: 0x000055555d1b869e 0x000055555dadc9c9 0x000055555d102018 0x00007ffff7c42520 0x00007ffff7c969fd 0x00007ffff7c42476 0x00007ffff7c287f3 0x000055555d116294 0x000055555d117f59 0x000055555d18cd3f 0x000055555d32a58d 0x00005555647d0865 0x0000555586e5bb62 0x0000555586e7fe6c 0x0000555586f1a886 0x000055558eb5c921 0x000055558ea9c533 0x000055558ea943e4 0x000055558ea73b4e 0x000055558eac1131 0x00005555919e96e0 0x00005555919ea620 0x00005555918ca735 0x00005555918c710e 0x00005555918c3fd1 0x00007ffff7c94ac3 0x00007ffff7d26850\r\n0.0. inlined from ./build/../src/Common/StackTrace.cpp:349: StackTrace::tryCapture()\r\n0. ./build/../src/Common/StackTrace.cpp:318: StackTrace::StackTrace(ucontext_t const&) @ 0x0000000007c6469e\r\n1. ./build/../src/Daemon/BaseDaemon.cpp:0: signalHandler(int, siginfo_t*, void*) @ 0x00000000085889c9\r\n2. SignalAction(int, void*, void*) @ 0x0000000007bae018\r\n3. ? @ 0x00007ffff7c42520\r\n4. ? @ 0x00007ffff7c969fd\r\n5. ? @ 0x00007ffff7c42476\r\n6. ? @ 0x00007ffff7c287f3\r\n7. ./build/../src/Common/Exception.cpp:0: DB::abortOnFailedAssertion(String const&) @ 0x0000000007bc2294\r\n8.0. inlined from ./build/../src/Common/Exception.cpp:198: DB::Exception::getStackFramePointers() const\r\n8. ./build/../src/Common/Exception.cpp:105: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x0000000007bc3f59\r\n9.0. inlined from ../src/Common/Exception.h:0: Exception\r\n9. ../src/Common/Exception.h:66: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000007c38d3f\r\n10. ../src/Common/Exception.h:0: DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000007dd658d\r\n11. _Z11typeid_castIRKN2DB20ColumnLowCardinalityEKNS0_7IColumnEQsr3stdE14is_reference_vIT_EES6_RT0_ @ 0x000000000f27c865\r\n12. ./build/../src/DataTypes/Serializations/SerializationLowCardinality.cpp:0: DB::SerializationLowCardinality::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::ISerialization::SerializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::SerializeBinaryBulkState>&) const @ 0x0000000031907b62\r\n13.0. inlined from ../contrib/llvm-project/libcxx/include/vector:1613: std::vector<DB::ISerialization::Substream, std::allocator<DB::ISerialization::Substream>>::pop_back()\r\n13. ./build/../src/DataTypes/Serializations/SerializationNamed.cpp:74: DB::SerializationNamed::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::ISerialization::SerializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::SerializeBinaryBulkState>&) const @ 0x000000003192be6c\r\n14.0. inlined from ../contrib/llvm-project/libcxx/include/vector:537: std::vector<std::shared_ptr<DB::SerializationNamed const>, std::allocator<std::shared_ptr<DB::SerializationNamed const>>>::size[abi:v15000]() const\r\n14. ./build/../src/DataTypes/Serializations/SerializationTuple.cpp:729: DB::SerializationTuple::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::ISerialization::SerializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::SerializeBinaryBulkState>&) const @ 0x00000000319c6886\r\n15.0. inlined from ./build/../src/Formats/NativeWriter.cpp:64: DB::writeData(DB::ISerialization const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, DB::WriteBuffer&, unsigned long, unsigned long)\r\n15. ./build/../src/Formats/NativeWriter.cpp:164: DB::NativeWriter::write(DB::Block const&) @ 0x0000000039608921\r\n16. ./build/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::sendData(DB::Block const&) @ 0x0000000039548533\r\n17.0. inlined from ../contrib/llvm-project/libcxx/include/__mutex_base:253: std::unique_lock<std::mutex>::unlock()\r\n17. ./build/../src/Server/TCPHandler.cpp:1078: DB::TCPHandler::processOrdinaryQuery() @ 0x00000000395403e4\r\n18. ./build/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::runImpl() @ 0x000000003951fb4e\r\n19. ./build/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::run() @ 0x000000003956d131\r\n20. ./build/../base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x000000003c4956e0\r\n21.0. inlined from ../contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: std::unique_ptr<Poco::Net::TCPServerConnection, std::default_delete<Poco::Net::TCPServerConnection>>::reset[abi:v15000](Poco::Net::TCPServerConnection*)\r\n21.1. inlined from ../contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:259: ~unique_ptr\r\n21. ./build/../base/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() @ 0x000000003c496620\r\n22. ./build/../base/poco/Foundation/src/ThreadPool.cpp:0: Poco::PooledThread::run() @ 0x000000003c376735\r\n23. ./build/../base/poco/Foundation/src/Thread.cpp:46: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x000000003c37310e\r\n24.0. inlined from ../base/poco/Foundation/include/Poco/AutoPtr.h:205: Poco::AutoPtr<Poco::ThreadImpl::ThreadData>::operator->()\r\n24. ../base/poco/Foundation/src/Thread_POSIX.cpp:350: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000003c36ffd1\r\n25. ? @ 0x00007ffff7c94ac3\r\n26. ? @ 0x00007ffff7d26850\r\nIntegrity check of the executable skipped because the reference checksum could not be read.\r\nThis ClickHouse version is not official and should be upgraded to the official build.\r\nChanged settings: log_queries = true, send_logs_level = \\'debug\\', send_logs_source_regexp = \\'\\', allow_introspection_functions = true\r\n```\n",
  "hints_text": "Minimal repro:\r\n```sql\r\nSELECT (indexHint(toLowCardinality('aaa')), 1)\r\n\r\nReceived exception from server (version 24.7.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::ColumnVector<char8_t> to DB::ColumnLowCardinality. (LOGICAL_ERROR)\r\n```",
  "created_at": "2024-07-09T17:09:43Z",
  "modified_files": [
    "src/Functions/indexHint.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03204_index_hint_fuzzer.reference",
    "b/tests/queries/0_stateless/03204_index_hint_fuzzer.sql"
  ]
}