You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error: 'Function 'searchAll': Different index parameters are set.'
### Describe the bug

From this run: https://s3.amazonaws.com/clickhouse-test-reports/json.html?REF=master&sha=f3fb09bdc74ff0cdd69482e890712679b22fa1fb&name_0=MasterCI&name_1=AST%20fuzzer%20%28amd_ubsan%29

### How to reproduce

I tried to reduce the script, but had no success.

### Error message and/or stacktrace

Stack trace:

```
10353681:[ip-172-31-16-219] 2025.06.23 03:39:40.658639 [ 690 ] {ca51a612-41e2-49c0-8ca2-109fac09e1af} <Fatal> : Logical error: 'Function 'searchAll': Different index parameters are set.'.
10353682:[ip-172-31-16-219] 2025.06.23 03:39:40.693899 [ 690 ] {ca51a612-41e2-49c0-8ca2-109fac09e1af} <Fatal> : Stack trace (when copying this message, always include the lines below):
10353717:[ip-172-31-16-219] 2025.06.23 03:43:41.229316 [ 2015 ] <Fatal> BaseDaemon: ########################################
10353718:[ip-172-31-16-219] 2025.06.23 03:43:41.229354 [ 2015 ] <Fatal> BaseDaemon: (version 25.7.1.961 (official build), build id: 82784692F639DC3E6DA91085669A31370DDADDD0, git hash: f3fb09bdc74ff0cdd69482e890712679b22fa1fb) (from thread 690) (query_id: ca51a612-41e2-49c0-8ca2-109fac09e1af) (query: SELECT groupArray(id) FROM tab__fuzz_1 INNER JOIN (SELECT DISTINCT * FROM `03165_token_ft` PREWHERE endsWith('eady', message) WHERE endsWith('eady', message)) AS alias7439 ON alias7439.message = message WHERE searchAll(message, ['a', 'bc'])) Received signal Aborted (6)
10353719:[ip-172-31-16-219] 2025.06.23 03:43:41.229390 [ 2015 ] <Fatal> BaseDaemon: 
10353720:[ip-172-31-16-219] 2025.06.23 03:43:41.229430 [ 2015 ] <Fatal> BaseDaemon: Stack trace: 0x00007ffa596129fd 0x00007ffa595be476 0x00007ffa595a47f3 0x000056419c1a5e57 0x000056419c1a687c 0x000056419c1a6d75 0x000056418e08a136 0x000056418e09e68f 0x000056419c14948e 0x00005641aa384064 0x00005641aa3815e0 0x00005641aa390092 0x00005641aa390359 0x00005641aa390359 0x00005641aa37e705 0x00005641aa39279f 0x00005641aa3925b4 0x00005641aa3869b4 0x00005641ab8af7b3 0x00005641ab8adc7d 0x00005641ab9bbc7c 0x00005641ab9bb312 0x00005641ab9b8041 0x00005641ab860e84 0x00005641ab860497 0x00005641a71af6d3 0x00005641a71af2a6 0x00005641a76797da 0x00005641a76732f4 0x00005641aac3b871 0x00005641aac6e00a 0x00005641aef34402 0x00005641aef350d2 0x00005641aee9a057 0x00005641aee95a4e 0x00007ffa59610ac3 0x00007ffa596a2850
10353721:[ip-172-31-16-219] 2025.06.23 03:43:41.229499 [ 2015 ] <Fatal> BaseDaemon: 3. __GI___pthread_kill @ 0x00000000000969fd
10353722:[ip-172-31-16-219] 2025.06.23 03:43:41.229534 [ 2015 ] <Fatal> BaseDaemon: 4. __GI_raise @ 0x0000000000042476
10353723:[ip-172-31-16-219] 2025.06.23 03:43:41.229582 [ 2015 ] <Fatal> BaseDaemon: 5. __lgamma_r_finite@GLIBC_2.15 @ 0x00000000000287f3
10353724:[ip-172-31-16-219] 2025.06.23 03:43:41.241621 [ 2015 ] <Fatal> BaseDaemon: 6. ci/tmp/build/./src/Common/Exception.cpp:50: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000002736de57
10353725:[ip-172-31-16-219] 2025.06.23 03:43:41.253202 [ 2015 ] <Fatal> BaseDaemon: 7. ci/tmp/build/./src/Common/Exception.cpp:73: DB::handle_error_code(String const&, std::basic_string_view<char, std::char_traits<char>>, int, bool, std::vector<void*, std::allocator<void*>> const&) @ 0x000000002736e87c
10353726:[ip-172-31-16-219] 2025.06.23 03:43:41.264973 [ 2015 ] <Fatal> BaseDaemon: 8. ci/tmp/build/./src/Common/Exception.cpp:121: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000002736ed75
10353727:[ip-172-31-16-219] 2025.06.23 03:43:41.310972 [ 2015 ] <Fatal> BaseDaemon: 9. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000019252136
10353728:[ip-172-31-16-219] 2025.06.23 03:43:41.341344 [ 2015 ] <Fatal> BaseDaemon: 10. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x000000001926668f
10353729:[ip-172-31-16-219] 2025.06.23 03:43:41.372620 [ 2015 ] <Fatal> BaseDaemon: 11. DB::FunctionSearchImpl<DB::traits::SearchAllTraits>::setGinFilterParameters(DB::GinFilterParameters const&) @ 0x000000002731148e
10353730:[ip-172-31-16-219] 2025.06.23 03:43:41.403292 [ 2015 ] <Fatal> BaseDaemon: 12. ci/tmp/build/./src/Storages/MergeTree/MergeTreeIndexGin.cpp:622: DB::MergeTreeIndexConditionGin::traverseASTEquals(DB::RPNBuilderFunctionTreeNode const&, DB::RPNBuilderTreeNode const&, std::shared_ptr<DB::IDataType const> const&, DB::Field const&, DB::MergeTreeIndexConditionGin::RPNElement&) @ 0x000000003554c064
10353731:[ip-172-31-16-219] 2025.06.23 03:43:41.431312 [ 2015 ] <Fatal> BaseDaemon: 13. ci/tmp/build/./src/Storages/MergeTree/MergeTreeIndexGin.cpp:464: DB::MergeTreeIndexConditionGin::traverseAtomAST(DB::RPNBuilderTreeNode const&, DB::MergeTreeIndexConditionGin::RPNElement&) @ 0x00000000355495e0
10353732:[ip-172-31-16-219] 2025.06.23 03:43:41.458099 [ 2015 ] <Fatal> BaseDaemon: 14.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:716: ?
10353733:[ip-172-31-16-219] 2025.06.23 03:43:41.458140 [ 2015 ] <Fatal> BaseDaemon: 14.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:989: ?
10353734:[ip-172-31-16-219] 2025.06.23 03:43:41.458190 [ 2015 ] <Fatal> BaseDaemon: 14. src/Storages/MergeTree/RPNBuilder.h:245: DB::RPNBuilder<DB::MergeTreeIndexConditionGin::RPNElement>::traverseTree(DB::RPNBuilderTreeNode const&) @ 0x0000000035558092
10353735:[ip-172-31-16-219] 2025.06.23 03:43:41.484603 [ 2015 ] <Fatal> BaseDaemon: 15. src/Storages/MergeTree/RPNBuilder.h:226: DB::RPNBuilder<DB::MergeTreeIndexConditionGin::RPNElement>::traverseTree(DB::RPNBuilderTreeNode const&) @ 0x0000000035558359
10353736:[ip-172-31-16-219] 2025.06.23 03:43:41.510968 [ 2015 ] <Fatal> BaseDaemon: 16. src/Storages/MergeTree/RPNBuilder.h:226: DB::RPNBuilder<DB::MergeTreeIndexConditionGin::RPNElement>::traverseTree(DB::RPNBuilderTreeNode const&) @ 0x0000000035558359
10353737:[ip-172-31-16-219] 2025.06.23 03:43:41.533519 [ 2015 ] <Fatal> BaseDaemon: 17.0. inlined from src/Storages/MergeTree/RPNBuilder.h:205: RPNBuilder
10353738:[ip-172-31-16-219] 2025.06.23 03:43:41.533578 [ 2015 ] <Fatal> BaseDaemon: 17. ci/tmp/build/./src/Storages/MergeTree/MergeTreeIndexGin.cpp:218: DB::MergeTreeIndexConditionGin::MergeTreeIndexConditionGin(DB::ActionsDAG::Node const*, std::shared_ptr<DB::Context const>, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor const*) @ 0x0000000035546705
10353739:[ip-172-31-16-219] 2025.06.23 03:43:41.567978 [ 2015 ] <Fatal> BaseDaemon: 18.0. inlined from contrib/llvm-project/libcxx/include/__memory/construct_at.h:41: DB::MergeTreeIndexConditionGin* std::construct_at[abi:ne190107]<DB::MergeTreeIndexConditionGin, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*, DB::MergeTreeIndexConditionGin*>(DB::MergeTreeIndexConditionGin*, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*&&)
10353740:[ip-172-31-16-219] 2025.06.23 03:43:41.568047 [ 2015 ] <Fatal> BaseDaemon: 18.1. inlined from contrib/llvm-project/libcxx/include/__memory/construct_at.h:49: DB::MergeTreeIndexConditionGin* std::__construct_at[abi:ne190107]<DB::MergeTreeIndexConditionGin, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*, DB::MergeTreeIndexConditionGin*>(DB::MergeTreeIndexConditionGin*, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*&&)
10353741:[ip-172-31-16-219] 2025.06.23 03:43:41.568104 [ 2015 ] <Fatal> BaseDaemon: 18.2. inlined from contrib/llvm-project/libcxx/include/__memory/allocator_traits.h:328: void std::allocator_traits<std::allocator<DB::MergeTreeIndexConditionGin>>::construct[abi:ne190107]<DB::MergeTreeIndexConditionGin, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*, void, 0>(std::allocator<DB::MergeTreeIndexConditionGin>&, DB::MergeTreeIndexConditionGin*, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*&&)
10353742:[ip-172-31-16-219] 2025.06.23 03:43:41.568135 [ 2015 ] <Fatal> BaseDaemon: 18. contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:264: std::__shared_ptr_emplace<DB::MergeTreeIndexConditionGin, std::allocator<DB::MergeTreeIndexConditionGin>>::__shared_ptr_emplace[abi:ne190107]<DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*, std::allocator<DB::MergeTreeIndexConditionGin>, 0>(std::allocator<DB::MergeTreeIndexConditionGin>, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*&&) @ 0x000000003555a79f
10353743:[ip-172-31-16-219] 2025.06.23 03:43:41.602279 [ 2015 ] <Fatal> BaseDaemon: 19. contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:843: std::shared_ptr<DB::MergeTreeIndexConditionGin> std::allocate_shared[abi:ne190107]<DB::MergeTreeIndexConditionGin, std::allocator<DB::MergeTreeIndexConditionGin>, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*, 0>(std::allocator<DB::MergeTreeIndexConditionGin> const&, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*&&) @ 0x000000003555a5b4
10353744:[ip-172-31-16-219] 2025.06.23 03:43:41.631726 [ 2015 ] <Fatal> BaseDaemon: 20.0. inlined from contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:851: std::shared_ptr<DB::MergeTreeIndexConditionGin> std::make_shared[abi:ne190107]<DB::MergeTreeIndexConditionGin, DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*, 0>(DB::ActionsDAG::Node const*&, std::shared_ptr<DB::Context const>&, DB::Block const&, DB::GinFilterParameters const&, DB::ITokenExtractor*&&)
10353745:[ip-172-31-16-219] 2025.06.23 03:43:41.631781 [ 2015 ] <Fatal> BaseDaemon: 20. ci/tmp/build/./src/Storages/MergeTree/MergeTreeIndexGin.cpp:841: DB::MergeTreeIndexGin::createIndexCondition(DB::ActionsDAG::Node const*, std::shared_ptr<DB::Context const>) const @ 0x000000003554e9b4
10353746:[ip-172-31-16-219] 2025.06.23 03:43:41.776384 [ 2015 ] <Fatal> BaseDaemon: 21. ci/tmp/build/./src/Processors/QueryPlan/ReadFromMergeTree.cpp:1839: DB::buildIndexes(std::optional<DB::ReadFromMergeTree::Indexes>&, DB::ActionsDAG const*, DB::MergeTreeData const&, DB::RangesInDataParts const&, std::shared_ptr<DB::MergeTreeData::IMutationsSnapshot const> const&, std::optional<DB::VectorSearchParameters> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryInfo const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<Poco::Logger> const&) @ 0x0000000036a777b3
10353747:[ip-172-31-16-219] 2025.06.23 03:43:41.884575 [ 2015 ] <Fatal> BaseDaemon: 22. ci/tmp/build/./src/Processors/QueryPlan/ReadFromMergeTree.cpp:1885: DB::ReadFromMergeTree::applyFilters(DB::ActionDAGNodes) @ 0x0000000036a75c7d
10353748:[ip-172-31-16-219] 2025.06.23 03:43:41.891345 [ 2015 ] <Fatal> BaseDaemon: 23. src/Processors/QueryPlan/SourceStepWithFilter.h:60: DB::SourceStepWithFilterBase::applyFilters() @ 0x0000000036b83c7c
10353749:[ip-172-31-16-219] 2025.06.23 03:43:41.898520 [ 2015 ] <Fatal> BaseDaemon: 24. ci/tmp/build/./src/Processors/QueryPlan/Optimizations/optimizePrimaryKeyConditionAndLimit.cpp:50: DB::QueryPlanOptimizations::optimizePrimaryKeyConditionAndLimit(std::vector<DB::QueryPlanOptimizations::Frame, std::allocator<DB::QueryPlanOptimizations::Frame>> const&) @ 0x0000000036b83312
10353750:[ip-172-31-16-219] 2025.06.23 03:43:41.908345 [ 2015 ] <Fatal> BaseDaemon: 25. ci/tmp/build/./src/Processors/QueryPlan/Optimizations/optimizeTree.cpp:134: DB::QueryPlanOptimizations::optimizeTreeSecondPass(DB::QueryPlanOptimizationSettings const&, DB::QueryPlan::Node&, std::list<DB::QueryPlan::Node, std::allocator<DB::QueryPlan::Node>>&, DB::QueryPlan&) @ 0x0000000036b80041
10353751:[ip-172-31-16-219] 2025.06.23 03:43:41.934867 [ 2015 ] <Fatal> BaseDaemon: 26. ci/tmp/build/./src/Processors/QueryPlan/QueryPlan.cpp:496: DB::QueryPlan::optimize(DB::QueryPlanOptimizationSettings const&) @ 0x0000000036a28e84
10353752:[ip-172-31-16-219] 2025.06.23 03:43:41.956824 [ 2015 ] <Fatal> BaseDaemon: 27. ci/tmp/build/./src/Processors/QueryPlan/QueryPlan.cpp:175: DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&, bool) @ 0x0000000036a28497
10353753:[ip-172-31-16-219] 2025.06.23 03:43:41.976168 [ 2015 ] <Fatal> BaseDaemon: 28. ci/tmp/build/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:289: DB::InterpreterSelectQueryAnalyzer::buildQueryPipeline() @ 0x00000000323776d3
10353754:[ip-172-31-16-219] 2025.06.23 03:43:41.995094 [ 2015 ] <Fatal> BaseDaemon: 29. ci/tmp/build/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:256: DB::InterpreterSelectQueryAnalyzer::execute() @ 0x00000000323772a6
10353755:[ip-172-31-16-219] 2025.06.23 03:43:42.032234 [ 2015 ] <Fatal> BaseDaemon: 30. ci/tmp/build/./src/Interpreters/executeQuery.cpp:1523: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x00000000328417da
10353756:[ip-172-31-16-219] 2025.06.23 03:43:42.075960 [ 2015 ] <Fatal> BaseDaemon: 31. ci/tmp/build/./src/Interpreters/executeQuery.cpp:1715: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x000000003283b2f4
10353757:[ip-172-31-16-219] 2025.06.23 03:43:42.111039 [ 2015 ] <Fatal> BaseDaemon: 32. ci/tmp/build/./src/Server/TCPHandler.cpp:721: DB::TCPHandler::runImpl() @ 0x0000000035e03871
10353758:[ip-172-31-16-219] 2025.06.23 03:43:42.166852 [ 2015 ] <Fatal> BaseDaemon: 33. ci/tmp/build/./src/Server/TCPHandler.cpp:2727: DB::TCPHandler::run() @ 0x0000000035e3600a
10353759:[ip-172-31-16-219] 2025.06.23 03:43:42.169220 [ 2015 ] <Fatal> BaseDaemon: 34. ci/tmp/build/./base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x000000003a0fc402
10353760:[ip-172-31-16-219] 2025.06.23 03:43:42.172598 [ 2015 ] <Fatal> BaseDaemon: 35. ci/tmp/build/./base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000003a0fd0d2
10353761:[ip-172-31-16-219] 2025.06.23 03:43:42.175990 [ 2015 ] <Fatal> BaseDaemon: 36. ci/tmp/build/./base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000003a062057
10353762:[ip-172-31-16-219] 2025.06.23 03:43:42.179212 [ 2015 ] <Fatal> BaseDaemon: 37. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000003a05da4e
10353763:[ip-172-31-16-219] 2025.06.23 03:43:42.179240 [ 2015 ] <Fatal> BaseDaemon: 38. start_thread @ 0x0000000000094ac3
10353764:[ip-172-31-16-219] 2025.06.23 03:43:42.179264 [ 2015 ] <Fatal> BaseDaemon: 39. __GI___clone3 @ 0x0000000000126850
10353765:[ip-172-31-16-219] 2025.06.23 03:43:42.455924 [ 2015 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 066DAD2A9B037806D102E8FA8E6213C3)
10353766:[ip-172-31-16-219] 2025.06.23 03:43:44.499368 [ 2015 ] <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
10353767:[ip-172-31-16-219] 2025.06.23 03:43:44.499619 [ 2015 ] <Fatal> BaseDaemon: Changed settings: receive_timeout = 10., receive_data_timeout_ms = 10000, allow_suspicious_low_cardinality_types = true, log_queries = true, table_function_remote_max_addresses = 200, max_execution_time = 10., max_memory_usage = 10000000000, send_logs_level = 'fatal', allow_introspection_functions = true, parallel_replicas_for_cluster_engines = false, allow_experimental_analyzer = true, allow_experimental_full_text_index = true
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
