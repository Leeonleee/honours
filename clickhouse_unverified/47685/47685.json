{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 47685,
  "instance_id": "ClickHouse__ClickHouse-47685",
  "issue_numbers": [
    "47533"
  ],
  "base_commit": "cb0065fba2366e30b1479857cc5566233635dfd8",
  "patch": "diff --git a/src/Interpreters/evaluateConstantExpression.cpp b/src/Interpreters/evaluateConstantExpression.cpp\nindex ebefa0d9ce7f..5a333172b14e 100644\n--- a/src/Interpreters/evaluateConstantExpression.cpp\n+++ b/src/Interpreters/evaluateConstantExpression.cpp\n@@ -70,7 +70,6 @@ std::pair<Field, std::shared_ptr<const IDataType>> evaluateConstantExpression(co\n     if (context->getClientInfo().query_kind != ClientInfo::QueryKind::SECONDARY_QUERY && context->getSettingsRef().normalize_function_names)\n         FunctionNameNormalizer().visit(ast.get());\n \n-    String result_name = ast->getColumnName();\n     auto syntax_result = TreeRewriter(context).analyze(ast, source_columns);\n \n     /// AST potentially could be transformed to literal during TreeRewriter analyze.\n@@ -82,6 +81,7 @@ std::pair<Field, std::shared_ptr<const IDataType>> evaluateConstantExpression(co\n \n     ColumnPtr result_column;\n     DataTypePtr result_type;\n+    String result_name = ast->getColumnName();\n     for (const auto & action_node : actions->getOutputs())\n     {\n         if ((action_node->result_name == result_name) && action_node->column)\ndiff --git a/src/Parsers/ASTFunction.cpp b/src/Parsers/ASTFunction.cpp\nindex 129d3d607447..fa4874d89b6a 100644\n--- a/src/Parsers/ASTFunction.cpp\n+++ b/src/Parsers/ASTFunction.cpp\n@@ -28,8 +28,8 @@ namespace DB\n \n namespace ErrorCodes\n {\n-    extern const int UNEXPECTED_EXPRESSION;\n     extern const int UNEXPECTED_AST_STRUCTURE;\n+    extern const int UNKNOWN_FUNCTION;\n }\n \n \n@@ -471,8 +471,9 @@ namespace\n \n void ASTFunction::appendColumnNameImpl(WriteBuffer & ostr) const\n {\n-    if (name == \"view\")\n-        throw Exception(ErrorCodes::UNEXPECTED_EXPRESSION, \"Table function view cannot be used as an expression\");\n+    /// These functions contain some unexpected ASTs in arguments (e.g. SETTINGS or even a SELECT query)\n+    if (name == \"view\" || name == \"viewIfPermitted\" || name == \"mysql\" || name == \"postgresql\" || name == \"mongodb\" || name == \"s3\")\n+        throw Exception(ErrorCodes::UNKNOWN_FUNCTION, \"Table function '{}' cannot be used as an expression\", name);\n \n     /// If function can be converted to literal it will be parsed as literal after formatting.\n     /// In distributed query it may lead to mismathed column names.\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01715_table_function_view_fix.sql b/tests/queries/0_stateless/01715_table_function_view_fix.sql\nindex b96609391b5b..5c24131b4381 100644\n--- a/tests/queries/0_stateless/01715_table_function_view_fix.sql\n+++ b/tests/queries/0_stateless/01715_table_function_view_fix.sql\n@@ -1,3 +1,3 @@\n SELECT view(SELECT 1); -- { clientError 62 }\n \n-SELECT sumIf(dummy, dummy) FROM remote('127.0.0.{1,2}', numbers(2, 100), view(SELECT CAST(NULL, 'Nullable(UInt8)') AS dummy FROM system.one)); -- { serverError 183 }\n+SELECT sumIf(dummy, dummy) FROM remote('127.0.0.{1,2}', numbers(2, 100), view(SELECT CAST(NULL, 'Nullable(UInt8)') AS dummy FROM system.one)); -- { serverError UNKNOWN_FUNCTION }\ndiff --git a/tests/queries/0_stateless/02680_mysql_ast_logical_err.reference b/tests/queries/0_stateless/02680_mysql_ast_logical_err.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02680_mysql_ast_logical_err.sql b/tests/queries/0_stateless/02680_mysql_ast_logical_err.sql\nnew file mode 100644\nindex 000000000000..5b0530e05ae7\n--- /dev/null\n+++ b/tests/queries/0_stateless/02680_mysql_ast_logical_err.sql\n@@ -0,0 +1,2 @@\n+SELECT count() FROM mysql(mysql('127.0.0.1:9004', currentDatabase(), 'foo', 'default', ''), '127.0.0.1:9004', currentDatabase(), 'foo', '', ''); -- { serverError UNKNOWN_FUNCTION }\n+-- SELECT count() FROM mysql(mysql('127.0.0.1:9004', currentDatabase(), 'foo', 'default', '', SETTINGS connection_pool_size = 1), '127.0.0.1:9004', currentDatabase(), 'foo', '', ''); -- { serverError UNKNOWN_FUNCTION }\n",
  "problem_statement": "trying to get name of not a column: Set for table function\n```sql\r\n\r\nSELECT count() FROM mysql(mysql('127.0.0.1:9004', currentDatabase(), foo, 'default', '', SETTINGS connection_pool_size = 1), '127.0.0.1:9004', currentDatabase(), foo, '', '')\r\n\r\n```\r\n\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/47316/027db789d6a40fa11a3dfbc93bbda1825a8371d6/fuzzer_astfuzzerasan/report.html\r\n\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/47316/027db789d6a40fa11a3dfbc93bbda1825a8371d6/fuzzer_astfuzzerubsan/report.html\r\n\n",
  "hints_text": "",
  "created_at": "2023-03-17T15:10:38Z"
}