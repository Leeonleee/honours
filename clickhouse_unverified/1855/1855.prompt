You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Initial column values are not used during DEFAULT expression evaluation.
I've created a table in the following way:

```
CREATE TABLE IF NOT EXISTS gusev.`vf_vg-desktop_8582E5B16CE53B87` (
  id UInt32,
  track UInt8,
  codec String,
  content String,
  rdate Date DEFAULT today(),
  track_id String DEFAULT concat(concat(concat(toString(track), '-'), codec), content)
) ENGINE=MergeTree(rdate, (id, track_id), 8192)
```

Then got an exception while trying to insert a row:

```
INSERT INTO gusev.`vf_vg-desktop_8582E5B16CE53B87` (id,track,codec) FORMAT TabSeparated
1       0       h264
```

Error in log:

```
2016.08.04 20:47:08.229 [ 5 ] <Error> HTTPHandler: Code: 10, e.displayText() = DB::Exception: Not found column: 'content', e.what() = DB::Exception, Stack trace:

0. clickhouse-server(StackTrace::StackTrace()+0xe) [0xfcad5e]
1. clickhouse-server(DB::Exception::Exception(std::string const&, int)+0x1e) [0xf65d4e]
2. clickhouse-server(DB::ExpressionAction::execute(DB::Block&) const+0x186f) [0x12848ff]
3. clickhouse-server(DB::ExpressionActions::execute(DB::Block&) const+0x32) [0x1284d42]
4. clickhouse-server(DB::evaluateMissingDefaults(DB::Block&, DB::NamesAndTypesList const&, std::unordered_map<std::string, DB::ColumnDefault, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, DB::ColumnDefault> > > const&, DB::Context const&)+0x63d) [0x136761d]
5. clickhouse-server(DB::AddingDefaultBlockOutputStream::write(DB::Block const&)+0x24) [0x293a564]
6. clickhouse-server(DB::ProhibitColumnsBlockOutputStream::write(DB::Block const&)+0x47) [0x2939b67]
7. clickhouse-server(DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::atomic<bool>*)+0x7d) [0x11d4f0d]
8. clickhouse-server(DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, DB::Context&, std::shared_ptr<DB::IBlockInputStream>&, std::function<void (std::string const&)>)+0x5a1) [0x13597d1]
9. clickhouse-server(DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&)+0x1024) [0xf6f294]
10. clickhouse-server(DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&)+0x8a) [0xf702ca]
11. clickhouse-server(Poco::Net::HTTPServerConnection::run()+0x26a) [0x2a7716a]
12. clickhouse-server(Poco::Net::TCPServerConnection::start()+0x7) [0x2a66d37]
13. clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x107) [0x2a71a37]
14. clickhouse-server(Poco::PooledThread::run()+0x7f) [0x305a80f]
15. clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x87) [0x3018287]
16. /lib/x86_64-linux-gnu/libpthread.so.0(+0x8184) [0x7f8c180a8184]
17. /lib/x86_64-linux-gnu/libc.so.6(clone+0x6d) [0x7f8c176ba37d]
```

But if I define content column as `content String DEFAULT ''` then it works as expected.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
