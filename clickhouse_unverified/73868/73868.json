{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 73868,
  "instance_id": "ClickHouse__ClickHouse-73868",
  "issue_numbers": [
    "70809"
  ],
  "base_commit": "c9cfa857879c93112b8962b5bd9805b60d7f03b9",
  "patch": "diff --git a/src/Common/CurrentMetrics.cpp b/src/Common/CurrentMetrics.cpp\nindex 363fb6f32c5e..31ad3e839409 100644\n--- a/src/Common/CurrentMetrics.cpp\n+++ b/src/Common/CurrentMetrics.cpp\n@@ -8,6 +8,7 @@\n #define APPLY_FOR_BUILTIN_METRICS(M) \\\n     M(Query, \"Number of executing queries\") \\\n     M(Merge, \"Number of executing background merges\") \\\n+    M(MergeParts, \"Number of source parts participating in current background merges\") \\\n     M(Move, \"Number of currently executing moves\") \\\n     M(PartMutation, \"Number of mutations (ALTER DELETE/UPDATE)\") \\\n     M(ReplicatedFetch, \"Number of data parts being fetched from replica\") \\\ndiff --git a/src/Storages/MergeTree/MergeList.cpp b/src/Storages/MergeTree/MergeList.cpp\nindex e88472b9ddac..b5512d90fa1b 100644\n--- a/src/Storages/MergeTree/MergeList.cpp\n+++ b/src/Storages/MergeTree/MergeList.cpp\n@@ -8,6 +8,11 @@\n \n #include <Common/logger_useful.h>\n \n+namespace CurrentMetrics\n+{\n+    extern const Metric MergeParts;\n+}\n+\n namespace DB\n {\n \n@@ -28,6 +33,7 @@ MergeListElement::MergeListElement(const StorageID & table_id_, FutureMergedMuta\n     , thread_id{getThreadId()}\n     , merge_type{future_part->merge_type}\n     , merge_algorithm{MergeAlgorithm::Undecided}\n+    , num_parts_metric_increment(CurrentMetrics::MergeParts, num_parts)\n {\n     auto format_version = MERGE_TREE_DATA_MIN_FORMAT_VERSION_WITH_CUSTOM_PARTITIONING;\n     if (result_part_name != result_part_info.getPartNameV1())\ndiff --git a/src/Storages/MergeTree/MergeList.h b/src/Storages/MergeTree/MergeList.h\nindex 66190de0ef4b..0a73c29944b3 100644\n--- a/src/Storages/MergeTree/MergeList.h\n+++ b/src/Storages/MergeTree/MergeList.h\n@@ -106,6 +106,7 @@ struct MergeListElement : boost::noncopyable\n     std::atomic<MergeAlgorithm> merge_algorithm;\n \n     ThreadGroupPtr thread_group;\n+    CurrentMetrics::Increment num_parts_metric_increment;\n \n     MergeListElement(\n         const StorageID & table_id_,\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03300_merge_parts_metric.reference b/tests/queries/0_stateless/03300_merge_parts_metric.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/03300_merge_parts_metric.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/03300_merge_parts_metric.sh b/tests/queries/0_stateless/03300_merge_parts_metric.sh\nnew file mode 100755\nindex 000000000000..502dfdf41b34\n--- /dev/null\n+++ b/tests/queries/0_stateless/03300_merge_parts_metric.sh\n@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+# Tags: long\n+\n+CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CUR_DIR\"/../shell_config.sh\n+\n+# Among 1000 invocations, the values are equal most of the time\n+# Note: they could be non-equal due to timing differences.\n+\n+$CLICKHOUSE_CLIENT --query \"DROP TABLE IF EXISTS test; CREATE TABLE test (x Bool) ENGINE = Memory;\"\n+yes \"INSERT INTO test SELECT sum(length(source_part_names)) = (SELECT value FROM system.metrics WHERE name = 'MergeParts') FROM system.merges;\" | head -n1000 | $CLICKHOUSE_CLIENT\n+$CLICKHOUSE_CLIENT --query \"SELECT sum(x) > 500 FROM test; DROP TABLE test;\"\n",
  "problem_statement": "CurrentMetric on the number of currently merging source parts.\n**Use case**\r\n\r\nCheck how many parts are held for current merges.\r\n\r\n**Describe the solution you'd like**\r\n\r\n`CurrentMetric::Increment` by the number of source parts.\n",
  "hints_text": "@alexey-milovidov Hi, are you still working on this issue? If not, would it be okay for me to take it on as my first issue?\n@R3gardless, yes this will be wonderful!",
  "created_at": "2024-12-26T22:15:26Z"
}