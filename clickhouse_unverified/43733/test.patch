diff --git a/tests/queries/0_stateless/01408_range_overflow.reference b/tests/queries/0_stateless/01408_range_overflow.reference
index e69de29bb2d1..4f31f0710eeb 100644
--- a/tests/queries/0_stateless/01408_range_overflow.reference
+++ b/tests/queries/0_stateless/01408_range_overflow.reference
@@ -0,0 +1,5 @@
+[1025,9223372036854776832]
+[1025,9223372036854776832]
+[1025,9223372036854776832]
+[1025,9223372036854776832]
+[1025,9223372036854776832]
diff --git a/tests/queries/0_stateless/01408_range_overflow.sql b/tests/queries/0_stateless/01408_range_overflow.sql
index 1640798999c0..2107e8c3f36d 100644
--- a/tests/queries/0_stateless/01408_range_overflow.sql
+++ b/tests/queries/0_stateless/01408_range_overflow.sql
@@ -1,12 +1,13 @@
 -- executeGeneric()
-SELECT range(1025, 1048576 + 9223372036854775807, 9223372036854775807); -- { serverError 69; }
-SELECT range(1025, 1048576 + (9223372036854775807 AS i), i); -- { serverError 69; }
+SELECT range(1025, 1048576 + 9223372036854775807, 9223372036854775807);
+SELECT range(1025, 1048576 + (9223372036854775807 AS i), i);
+SELECT range(1025, 18446744073709551615, 1); -- { serverError 69; }
 
 -- executeConstStep()
-SELECT range(number, 1048576 + 9223372036854775807, 9223372036854775807) FROM system.numbers LIMIT 1 OFFSET 1025; -- { serverError 69; }
+SELECT range(number, 1048576 + 9223372036854775807, 9223372036854775807) FROM system.numbers LIMIT 1 OFFSET 1025;
 
 -- executeConstStartStep()
-SELECT range(1025, number + 9223372036854775807, 9223372036854775807) FROM system.numbers LIMIT 1 OFFSET 1048576; -- { serverError 69; }
+SELECT range(1025, number + 9223372036854775807, 9223372036854775807) FROM system.numbers LIMIT 1 OFFSET 1048576;
 
 -- executeConstStart()
-SELECT range(1025, 1048576 + 9223372036854775807, number + 9223372036854775807) FROM system.numbers LIMIT 1; -- { serverError 69; }
+SELECT range(1025, 1048576 + 9223372036854775807, number + 9223372036854775807) FROM system.numbers LIMIT 1;
diff --git a/tests/queries/0_stateless/02494_array_function_range.reference b/tests/queries/0_stateless/02494_array_function_range.reference
new file mode 100644
index 000000000000..133d78d4a373
--- /dev/null
+++ b/tests/queries/0_stateless/02494_array_function_range.reference
@@ -0,0 +1,19 @@
+1
+1
+1
+[-1,0]
+[-1]
+[]
+[5,4,3,2,1]
+[5,4,3,2,1,0]
+[1]
+[-5,-4,-3,-2,-1,0,1,2,3,4]
+[-4,-3,-2,-1,0,1,2,3,4,5]
+[-3,-2,-1,0,1,2,3,4,5,6]
+[-2,-1,0,1,2,3,4,5,6,7]
+[-1,0,1,2,3,4,5,6,7,8]
+[0,1,2,3,4,5,6,7,8,9]
+[1,2,3,4,5,6,7,8,9,10]
+[2,3,4,5,6,7,8,9,10,11]
+[3,4,5,6,7,8,9,10,11,12]
+[4,5,6,7,8,9,10,11,12,13]
diff --git a/tests/queries/0_stateless/02494_array_function_range.sql b/tests/queries/0_stateless/02494_array_function_range.sql
new file mode 100644
index 000000000000..bd945d552548
--- /dev/null
+++ b/tests/queries/0_stateless/02494_array_function_range.sql
@@ -0,0 +1,10 @@
+SELECT range(100) == range(0, 100) and range(0, 100) == range(0, 100, 1);
+SELECT range(100) == range(cast('100', 'Int8')) and range(100) == range(cast('100', 'Int16')) and range(100) == range(cast('100', 'Int32')) and range(100) == range(cast('100', 'Int64'));
+SELECT range(cast('100', 'Int8')) == range(0, cast('100', 'Int8')) and  range(0, cast('100', 'Int8')) == range(0, cast('100', 'Int8'), 1) and range(0, cast('100', 'Int8')) == range(0, cast('100', 'Int8'), cast('1', 'Int8'));
+SELECT range(-1, 1);
+SELECT range(-1, 1, 2);
+SELECT range(1,1);
+SELECT range(5, 0, -1);
+SELECT range(5, -1, -1);
+SELECT range(1, 257, 65535);
+SELECT range(cast(number - 5, 'Int8'), cast(number + 5, 'Int8')) from system.numbers limit 10;
\ No newline at end of file
