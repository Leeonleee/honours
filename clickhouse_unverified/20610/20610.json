{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 20610,
  "instance_id": "ClickHouse__ClickHouse-20610",
  "issue_numbers": [
    "20597"
  ],
  "base_commit": "2c560d8e3bc1552e256e0efd4b5030171ff014b1",
  "patch": "diff --git a/src/Interpreters/InterpreterSelectQuery.cpp b/src/Interpreters/InterpreterSelectQuery.cpp\nindex 84de6fa4e6cf..9f97160f77f1 100644\n--- a/src/Interpreters/InterpreterSelectQuery.cpp\n+++ b/src/Interpreters/InterpreterSelectQuery.cpp\n@@ -784,9 +784,22 @@ static bool hasWithTotalsInAnySubqueryInFromClause(const ASTSelectQuery & query)\n     {\n         if (const auto * ast_union = query_table->as<ASTSelectWithUnionQuery>())\n         {\n+            /// NOTE: Child of subquery can be ASTSelectWithUnionQuery or ASTSelectQuery,\n+            /// and after normalization, the height of the AST tree is at most 2\n             for (const auto & elem : ast_union->list_of_selects->children)\n-                if (hasWithTotalsInAnySubqueryInFromClause(elem->as<ASTSelectQuery &>()))\n-                    return true;\n+            {\n+                if (const auto * child_union = elem->as<ASTSelectWithUnionQuery>())\n+                {\n+                    for (const auto & child_elem : child_union->list_of_selects->children)\n+                        if (hasWithTotalsInAnySubqueryInFromClause(child_elem->as<ASTSelectQuery &>()))\n+                            return true;\n+                }\n+                else\n+                {\n+                    if (hasWithTotalsInAnySubqueryInFromClause(elem->as<ASTSelectQuery &>()))\n+                        return true;\n+                }\n+            }\n         }\n     }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01720_union_distinct_with_limit.reference b/tests/queries/0_stateless/01720_union_distinct_with_limit.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/01720_union_distinct_with_limit.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/01720_union_distinct_with_limit.sql b/tests/queries/0_stateless/01720_union_distinct_with_limit.sql\nnew file mode 100644\nindex 000000000000..9fc5b3eafd25\n--- /dev/null\n+++ b/tests/queries/0_stateless/01720_union_distinct_with_limit.sql\n@@ -0,0 +1,8 @@\n+SELECT x\n+FROM\n+(\n+    SELECT 1 AS x\n+    UNION DISTINCT\n+    SELECT 1\n+)\n+LIMIT 1;\n",
  "problem_statement": "UNION DISTINCT + LIMIT  Bad cast from type DB::ASTSelectWithUnionQuery to DB::ASTSelectQuery.\n**How to reproduce**\r\nClickhouse version 21.2-21.3\r\n\r\n```\r\nSELECT x\r\nFROM\r\n(\r\n    SELECT 1 AS x\r\n    UNION DISTINCT\r\n    SELECT 1\r\n)\r\nLIMIT 1\r\n\r\nQuery id: b82bbb8d-dea9-4f1c-9a2f-5b0e9b6c2422\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nReceived exception from server (version 21.2.3):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::ASTSelectWithUnionQuery to DB::ASTSelectQuery.\r\n```\r\n\r\n\n",
  "hints_text": "@ucasFL Could you please take a look?",
  "created_at": "2021-02-17T08:32:17Z"
}