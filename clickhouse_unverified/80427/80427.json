{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 80427,
  "instance_id": "ClickHouse__ClickHouse-80427",
  "issue_numbers": [
    "80418"
  ],
  "base_commit": "b2971a5c292df4482318e452fa301b0cad58ba8f",
  "patch": "diff --git a/src/Interpreters/Cluster.cpp b/src/Interpreters/Cluster.cpp\nindex 4e3768a8fd59..a0e4e4999b72 100644\n--- a/src/Interpreters/Cluster.cpp\n+++ b/src/Interpreters/Cluster.cpp\n@@ -582,6 +582,9 @@ Cluster::Cluster(\n \n     for (const auto & shard : names)\n     {\n+        if (shard.empty())\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Shard contains zero number of replicas\");\n+\n         Addresses current;\n         for (const auto & replica : shard)\n             current.emplace_back(\ndiff --git a/src/TableFunctions/TableFunctionRemote.cpp b/src/TableFunctions/TableFunctionRemote.cpp\nindex 83525db6a6b1..dae0ee37571d 100644\n--- a/src/TableFunctions/TableFunctionRemote.cpp\n+++ b/src/TableFunctions/TableFunctionRemote.cpp\n@@ -256,10 +256,15 @@ void TableFunctionRemote::parseArguments(const ASTPtr & ast_function, ContextPtr\n         std::vector<std::vector<String>> names;\n         names.reserve(shards.size());\n         for (const auto & shard : shards)\n-            names.push_back(parseRemoteDescription(shard, 0, shard.size(), '|', max_addresses));\n+        {\n+            auto replicas = parseRemoteDescription(shard, 0, shard.size(), '|', max_addresses);\n+            if (replicas.empty())\n+                throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Shard contains zero number of replicas\");\n+            names.push_back(std::move(replicas));\n+        }\n \n         if (names.empty())\n-            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Shard list is empty after parsing first argument\");\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Shard list is empty after parsing the first argument\");\n \n         auto maybe_secure_port = context->getTCPPortSecure();\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03518_table_function_remote_no_replicas.reference b/tests/queries/0_stateless/03518_table_function_remote_no_replicas.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/03518_table_function_remote_no_replicas.sql b/tests/queries/0_stateless/03518_table_function_remote_no_replicas.sql\nnew file mode 100644\nindex 000000000000..51e7b9031525\n--- /dev/null\n+++ b/tests/queries/0_stateless/03518_table_function_remote_no_replicas.sql\n@@ -0,0 +1,1 @@\n+SELECT * FROM remote('|'); -- { serverError BAD_ARGUMENTS }\n",
  "problem_statement": "Logical error: std::exception. Code: 1001, type: std::out_of_range, e.what() = vector in executeQueryImpl\n### Describe the bug\nhttps://s3.amazonaws.com/clickhouse-test-reports/json.html?PR=80343&sha=latest&name_0=PR&name_1=Stateless+tests+%28ubsan%29\n\n### How to reproduce\nNo response\n\n### Error message and/or stacktrace\nNo response\n",
  "hints_text": "Btw, you forgot to copy the query:\n\n`SELECT ( SELECT * FROM remoteSecure('|') ) AS rwjcf, ( SELECT (CAST(([( SELECT * FROM deltaLakeAzure(( SELECT [], ( SELECT * FROM generateRandom() ) AS fystjxqf, [( SELECT * FROM zeros_mt((CAST((( SELECT [( SELECT [], NULL, ( SELECT * FROM oss() ) , ( SELECT JSONSharedDataPathsWithTypes((CAST(((CAST(((CAST((( SELECT '\\0', NULL, (CAST(((CAST((parseDateTime()) AS String))) AS DateTime)), [] ) , ( SELECT * FROM odbc(( SELECT -024.3, [NULL], [], validateNestedArraySizes(), -20285541.9 ) , '~;382') ) AS jzsxp) AS Date))) AS DateTime))) AS DateTime)), []) ) , -08273.74, generateSerialID() ) AS xpyanqj], '5' ) AS wegdozoa) AS DateTime))) ) , ( SELECT * FROM timeSeriesTags((CAST((positionCaseInsensitive(histogram())) AS Date))) ) AS tpqexoag], '\\0' ) AS qwusjhci) ) , ( SELECT IPv4StringToNum('', 'o/ztnS]<') ) ]) AS Date)), '', [] ) , ( SELECT '\\0', '', '', [''] ) AS jxjobq;`\n\nIt is immediately reproducible in the release build.\nBtw, you forgot to minimize the query:\n\n`SELECT * FROM remote('|')`",
  "created_at": "2025-05-18T22:04:22Z",
  "modified_files": [
    "src/Interpreters/Cluster.cpp",
    "src/TableFunctions/TableFunctionRemote.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03518_table_function_remote_no_replicas.sql"
  ]
}