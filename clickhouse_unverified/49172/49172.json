{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 49172,
  "instance_id": "ClickHouse__ClickHouse-49172",
  "issue_numbers": [
    "49171"
  ],
  "base_commit": "7b63c3ac699789bb216426a84ee028907e61b7ce",
  "patch": "diff --git a/src/Storages/MergeTree/KeyCondition.cpp b/src/Storages/MergeTree/KeyCondition.cpp\nindex 5d961425469a..ed686a0b38b8 100644\n--- a/src/Storages/MergeTree/KeyCondition.cpp\n+++ b/src/Storages/MergeTree/KeyCondition.cpp\n@@ -1999,9 +1999,9 @@ static BoolMask forAnyHyperrectangle(\n         if (left_bounded && right_bounded)\n             hyperrectangle[prefix_size] = Range(left_keys[prefix_size], true, right_keys[prefix_size], true);\n         else if (left_bounded)\n-            hyperrectangle[prefix_size] = Range::createLeftBounded(left_keys[prefix_size], true);\n+            hyperrectangle[prefix_size] = Range::createLeftBounded(left_keys[prefix_size], true, data_types[prefix_size]->isNullable());\n         else if (right_bounded)\n-            hyperrectangle[prefix_size] = Range::createRightBounded(right_keys[prefix_size], true);\n+            hyperrectangle[prefix_size] = Range::createRightBounded(right_keys[prefix_size], true, data_types[prefix_size]->isNullable());\n \n         return callback(hyperrectangle);\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.reference b/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.reference\nnew file mode 100644\nindex 000000000000..ed6ac232d9c5\n--- /dev/null\n+++ b/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.reference\n@@ -0,0 +1,2 @@\n+a\t\\N\n+1\t1\t\\N\ndiff --git a/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.sql b/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.sql\nnew file mode 100644\nindex 000000000000..2d56e315bd18\n--- /dev/null\n+++ b/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.sql\n@@ -0,0 +1,11 @@\n+drop table if exists test_table;\n+create table test_table (A Nullable(String), B Nullable(String)) engine MergeTree order by (A,B) settings index_granularity = 1, allow_nullable_key=1;\n+insert into test_table values ('a', 'b'), ('a', null), (null, 'b');\n+select * from test_table where B is null;\n+drop table test_table;\n+\n+DROP TABLE IF EXISTS dm_metric_small2;\n+CREATE TABLE dm_metric_small2 (`x` Nullable(Int64), `y` Nullable(Int64), `z` Nullable(Int64)) ENGINE = MergeTree() ORDER BY (x, y, z) SETTINGS index_granularity = 1, allow_nullable_key = 1;\n+INSERT INTO dm_metric_small2 VALUES (1,1,NULL) (1,1,1) (1,2,0) (1,2,1) (1,2,NULL) (1,2,NULL);\n+SELECT * FROM dm_metric_small2 WHERE (x = 1) AND (y = 1) AND z IS NULL;\n+DROP TABLE dm_metric_small2;\n\\ No newline at end of file\ndiff --git a/tests/queries/0_stateless/02479_nullable_primary_key_second_column.reference b/tests/queries/0_stateless/02479_nullable_primary_key_second_column.reference\ndeleted file mode 100644\nindex f0227e1a41ec..000000000000\n--- a/tests/queries/0_stateless/02479_nullable_primary_key_second_column.reference\n+++ /dev/null\n@@ -1,1 +0,0 @@\n-a\t\\N\ndiff --git a/tests/queries/0_stateless/02479_nullable_primary_key_second_column.sql b/tests/queries/0_stateless/02479_nullable_primary_key_second_column.sql\ndeleted file mode 100644\nindex ad0c09222c22..000000000000\n--- a/tests/queries/0_stateless/02479_nullable_primary_key_second_column.sql\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-drop table if exists test_table;\n-\n-create table test_table (A Nullable(String), B Nullable(String)) engine MergeTree order by (A,B) settings index_granularity = 1, allow_nullable_key=1;\n-\n-insert into test_table values ('a', 'b'), ('a', null), (null, 'b');\n-\n-select * from test_table where B is null;\n-\n-drop table test_table;\n",
  "problem_statement": "Unexpected query result with nullable primary key\n> You have to provide the following information whenever possible.\r\n\r\n**Describe what's wrong**\r\n\r\nWrong query result when table has nullable primary key.\r\n\r\n```sql\r\nCREATE TABLE dm_metric_small2 (`x` Nullable(Int64), `y` Nullable(Int64), `z` Nullable(Int64)) ENGINE = MergeTree() ORDER BY (x, y, z) SETTINGS index_granularity = 1, allow_nullable_key = 1;\r\nINSERT INTO dm_metric_small2 VALUES (1,1,NULL) (1,1,1) (1,2,0) (1,2,1) (1,2,NULL) (1,2,NULL);\r\nSELECT '--SELECT ALL--';\r\nSELECT * FROM dm_metric_small2;\r\nSELECT '--SELECT NULL--';\r\nSELECT * FROM dm_metric_small2 WHERE (x = 1) AND (y = 1) AND z IS NULL; -- return nothing\r\n```\r\n\r\nhttps://fiddle.clickhouse.com/03d2d249-e981-416c-973d-b6c4a7100f4e\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes\r\n\r\n[The list of releases](https://github.com/ClickHouse/ClickHouse/blob/master/utils/list-versions/version_date.tsv)\r\n\n",
  "hints_text": "Suspected problem in:\r\nhttps://github.com/ClickHouse/ClickHouse/blob/826c820e336a5efe7deef94582a875ca430f52bd/src/Storages/MergeTree/KeyCondition.cpp#L2002\r\nIt should be `hyperrectangle[prefix_size] = Range::createLeftBounded(left_keys[prefix_size], true, data_types[prefix_size]->isNullable());` ",
  "created_at": "2023-04-26T10:38:06Z",
  "modified_files": [
    "src/Storages/MergeTree/KeyCondition.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.reference",
    "b/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.sql",
    "tests/queries/0_stateless/02479_nullable_primary_key_second_column.reference",
    "tests/queries/0_stateless/02479_nullable_primary_key_second_column.sql"
  ]
}