{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 13226,
  "instance_id": "ClickHouse__ClickHouse-13226",
  "issue_numbers": [
    "12463"
  ],
  "base_commit": "9611b2c7f4df7a6cb82064a87cd35ad9c945863f",
  "patch": "diff --git a/src/Functions/if.cpp b/src/Functions/if.cpp\nindex f6505571382b..cc4667219b14 100644\n--- a/src/Functions/if.cpp\n+++ b/src/Functions/if.cpp\n@@ -701,19 +701,13 @@ class FunctionIf : public FunctionIfBase</*null_is_false=*/false>\n \n         if (cond_is_true)\n         {\n-            if (result_column.type->equals(*column1.type))\n-            {\n-                result_column.column = std::move(column1.column);\n-                return true;\n-            }\n+            result_column.column = castColumn(column1, result_column.type);\n+            return true;\n         }\n         else if (cond_is_false || cond_is_null)\n         {\n-            if (result_column.type->equals(*column2.type))\n-            {\n-                result_column.column = std::move(column2.column);\n-                return true;\n-            }\n+            result_column.column = castColumn(column2, result_column.type);\n+            return true;\n         }\n \n         if (const auto * nullable = checkAndGetColumn<ColumnNullable>(*not_const_condition))\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00735_conditional.reference b/tests/queries/0_stateless/00735_conditional.reference\nindex 2d5040a336db..b37fce430eca 100644\n--- a/tests/queries/0_stateless/00735_conditional.reference\n+++ b/tests/queries/0_stateless/00735_conditional.reference\n@@ -42,6 +42,7 @@ value vs value\n 0\t1\t1\tInt64\tUInt8\tInt64\n 0\t1\t1\tInt64\tUInt16\tInt64\n 0\t1\t1\tInt64\tUInt32\tInt64\n+0\t1\t1\tInt64\tDecimal(9, 0)\tDecimal(18, 0)\n 0\t1\t1\tInt64\tDecimal(18, 0)\tDecimal(18, 0)\n 0\t1\t1\tInt64\tDecimal(38, 0)\tDecimal(38, 0)\n 0\t1\t1\tUInt8\tInt8\tInt16\n@@ -80,12 +81,15 @@ value vs value\n 0\t1\t1\tUInt32\tUInt64\tUInt64\n 0\t1\t1\tUInt32\tFloat32\tFloat64\n 0\t1\t1\tUInt32\tFloat64\tFloat64\n+0\t1\t1\tUInt32\tDecimal(9, 0)\tDecimal(18, 0)\n 0\t1\t1\tUInt32\tDecimal(18, 0)\tDecimal(18, 0)\n 0\t1\t1\tUInt32\tDecimal(38, 0)\tDecimal(38, 0)\n 0\t1\t1\tUInt64\tUInt8\tUInt64\n 0\t1\t1\tUInt64\tUInt16\tUInt64\n 0\t1\t1\tUInt64\tUInt32\tUInt64\n 0\t1\t1\tUInt64\tUInt64\tUInt64\n+0\t1\t1\tUInt64\tDecimal(9, 0)\tDecimal(38, 0)\n+0\t1\t1\tUInt64\tDecimal(18, 0)\tDecimal(38, 0)\n 0\t1\t1\tUInt64\tDecimal(38, 0)\tDecimal(38, 0)\n 1970-01-01\t1970-01-02\t1970-01-02\tDate\tDate\tDate\n 2000-01-01\t2000-01-01 00:00:01\t2000-01-01 00:00:01\tDate\tDateTime(\\'Europe/Moscow\\')\tDateTime\ndiff --git a/tests/queries/0_stateless/00735_conditional.sql b/tests/queries/0_stateless/00735_conditional.sql\nindex dc9d916930e6..0c272ac69f83 100644\n--- a/tests/queries/0_stateless/00735_conditional.sql\n+++ b/tests/queries/0_stateless/00735_conditional.sql\n@@ -66,7 +66,7 @@ SELECT toInt64(0) AS x, toFloat64(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x)\n SELECT toInt64(0) AS x, toDate(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 43 }\n SELECT toInt64(0) AS x, toDateTime(1, 'Europe/Moscow') AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 386 }\n SELECT toInt64(0) AS x, toUUID(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 386 }\n-SELECT toInt64(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 43 }\n+SELECT toInt64(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n SELECT toInt64(0) AS x, toDecimal64(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n SELECT toInt64(0) AS x, toDecimal128(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n \n@@ -117,7 +117,7 @@ SELECT toUInt32(0) AS x, toFloat64(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x\n SELECT toUInt32(0) AS x, toDate(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 43 }\n SELECT toUInt32(0) AS x, toDateTime(1, 'Europe/Moscow') AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 386 }\n SELECT toUInt32(0) AS x, toUUID(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 386 }\n-SELECT toUInt32(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 43 }\n+SELECT toUInt32(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n SELECT toUInt32(0) AS x, toDecimal64(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n SELECT toUInt32(0) AS x, toDecimal128(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n \n@@ -134,8 +134,8 @@ SELECT toUInt64(0) AS x, toFloat64(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x\n SELECT toUInt64(0) AS x, toDate(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 43 }\n SELECT toUInt64(0) AS x, toDateTime(1, 'Europe/Moscow') AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 386 }\n SELECT toUInt64(0) AS x, toUUID(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 386 }\n-SELECT toUInt64(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 43 }\n-SELECT toUInt64(0) AS x, toDecimal64(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 43 }\n+SELECT toUInt64(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n+SELECT toUInt64(0) AS x, toDecimal64(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n SELECT toUInt64(0) AS x, toDecimal128(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);\n \n SELECT toDate(0) AS x, toInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z); -- { serverError 43 }\ndiff --git a/tests/queries/0_stateless/01423_if_nullable_cond.reference b/tests/queries/0_stateless/01423_if_nullable_cond.reference\nnew file mode 100644\nindex 000000000000..f48898c83a6a\n--- /dev/null\n+++ b/tests/queries/0_stateless/01423_if_nullable_cond.reference\n@@ -0,0 +1,1 @@\n+-1\tNullable(Int16)\tNullable(Int16), Const(size = 1, Nullable(size = 1, Int16(size = 1), UInt8(size = 1)))\ndiff --git a/tests/queries/0_stateless/01423_if_nullable_cond.sql b/tests/queries/0_stateless/01423_if_nullable_cond.sql\nnew file mode 100644\nindex 000000000000..9c56e9dbe26e\n--- /dev/null\n+++ b/tests/queries/0_stateless/01423_if_nullable_cond.sql\n@@ -0,0 +1,1 @@\n+SELECT CAST(null, 'Nullable(UInt8)') = 1 ? CAST(null, 'Nullable(UInt8)') : -1 AS x, toTypeName(x), dumpColumnStructure(x);\n",
  "problem_statement": "Bad cast from type DB::ColumnVector<signed char> to DB::ColumnVector<short>\n```\r\nSELECT if(x = 100, toUInt8(x), -1) FROM (SELECT CAST(null, 'Nullable(UInt8)') AS x)\r\n\r\n\r\n2020.07.13 16:27:41.854176 [ 49447 ] {ef40a485-4af0-455c-bdd5-71b14e35a7dd} <Error> : Logical error: 'Bad cast from type DB::ColumnVector<signed char> to DB::ColumnVector<short>'.\r\nclickhouse-server: /home/akuzm/ch4/ch/src/Common/Exception.cpp:45: DB::Exception::Exception(const std::string &, int): Assertion `false' failed.\r\n2020.07.13 16:27:41.854677 [ 49394 ] {} <Trace> BaseDaemon: Received signal 6\r\n2020.07.13 16:27:41.855023 [ 49466 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.07.13 16:27:41.855678 [ 49466 ] {} <Fatal> BaseDaemon: (version 20.6.1.1, build id: F176DE2A5C050ABF) (from thread 49447) (query_id: ef40a485-4af0-455c-bdd5-71b14e35a7dd) Received signal Aborted (6)\r\n2020.07.13 16:27:41.855821 [ 49466 ] {} <Fatal> BaseDaemon: \r\n2020.07.13 16:27:41.855951 [ 49466 ] {} <Fatal> BaseDaemon: Stack trace: 0x7fdee227f18b 0x7fdee225e859 0x7fdee225e729 0x7fdee226ff36 0x7fdee61838ab 0x7fdedd5c4f5b 0x7fded67fd0c5 0x7fdee0f4f7a4 0x7fded67ecbbb 0x7fded6b70194 0x7fded6b705d8 0x7fded2576029 0x7fded2574dbf 0x7fded2571eed 0x7fded2578b52 0x7fdee3444d7c 0x7fdee344558a 0x7fdee2f56173 0x7fdee2f5303d 0x7fdee2f51eba 0x7fdee20c5609 0x7fdee235b103\r\n2020.07.13 16:27:41.856398 [ 49466 ] {} <Fatal> BaseDaemon: 4. /build/glibc-YYA7BZ/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51: __GI_raise @ 0x4618b in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.13 16:27:41.856659 [ 49466 ] {} <Fatal> BaseDaemon: 5. /build/glibc-YYA7BZ/glibc-2.31/stdlib/abort.c:81: abort @ 0x25859 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.13 16:27:41.856933 [ 49466 ] {} <Fatal> BaseDaemon: 6. /build/glibc-YYA7BZ/glibc-2.31/intl/loadmsgcat.c:509: _nl_load_domain.cold @ 0x25729 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.13 16:27:41.857240 [ 49466 ] {} <Fatal> BaseDaemon: 7. ? @ 0x36f36 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.13 16:27:41.857626 [ 49466 ] {} <Fatal> BaseDaemon: 8. /home/akuzm/ch4/ch/src/Common/Exception.cpp:48: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x2798ab in /home/akuzm/ch4/build-clang10/src/libclickhouse_common_iod.so\r\n2020.07.13 16:27:41.864597 [ 49466 ] {} <Fatal> BaseDaemon: 9. /home/akuzm/ch4/ch/src/Common/typeid_cast.h:40: std::__1::enable_if<std::is_reference_v<DB::ColumnVector<short> const&>, DB::ColumnVector<short> const&>::type typeid_cast<DB::ColumnVector<short> const&, DB::IColumn const>(DB::IColumn const&) @ 0x3d86f5b in /home/akuzm/ch4/build-clang10/src/Functions/libclickhouse_functionsd.so\r\n2020.07.13 16:27:41.865558 [ 49466 ] {} <Fatal> BaseDaemon: 10. /home/akuzm/ch4/ch/src/DataTypes/DataTypeNumberBase.cpp:186: DB::DataTypeNumberBase<short>::serializeBinaryBulk(DB::IColumn const&, DB::WriteBuffer&, unsigned long, unsigned long) const @ 0x44b0c5 in /home/akuzm/ch4/build-clang10/src/libclickhouse_datatypesd.so\r\n2020.07.13 16:27:41.866058 [ 49466 ] {} <Fatal> BaseDaemon: 11. /home/akuzm/ch4/ch/src/DataTypes/IDataType.h:184: DB::IDataType::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const @ 0x24aa7a4 in /home/akuzm/ch4/build-clang10/src/AggregateFunctions/libclickhouse_aggregate_functionsd.so\r\n2020.07.13 16:27:41.866609 [ 49466 ] {} <Fatal> BaseDaemon: 12. /home/akuzm/ch4/ch/src/DataTypes/DataTypeNullable.cpp:102: DB::DataTypeNullable::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const @ 0x43abbb in /home/akuzm/ch4/build-clang10/src/libclickhouse_datatypesd.so\r\n2020.07.13 16:27:41.867191 [ 49466 ] {} <Fatal> BaseDaemon: 13. /home/akuzm/ch4/ch/src/DataStreams/NativeBlockOutputStream.cpp:58: DB::NativeBlockOutputStream::writeData(DB::IDataType const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, DB::WriteBuffer&, unsigned long, unsigned long) @ 0x2d9194 in /home/akuzm/ch4/build-clang10/src/libclickhouse_datastreamsd.so\r\n2020.07.13 16:27:41.867691 [ 49466 ] {} <Fatal> BaseDaemon: 14. /home/akuzm/ch4/ch/src/DataStreams/NativeBlockOutputStream.cpp:124: DB::NativeBlockOutputStream::write(DB::Block const&) @ 0x2d95d8 in /home/akuzm/ch4/build-clang10/src/libclickhouse_datastreamsd.so\r\n2020.07.13 16:27:41.868315 [ 49466 ] {} <Fatal> BaseDaemon: 15. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:1106: DB::TCPHandler::sendData(DB::Block const&) @ 0x348029 in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n2020.07.13 16:27:41.868840 [ 49466 ] {} <Fatal> BaseDaemon: 16. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:597: DB::TCPHandler::processOrdinaryQueryWithProcessors() @ 0x346dbf in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n2020.07.13 16:27:41.869307 [ 49466 ] {} <Fatal> BaseDaemon: 17. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:272: DB::TCPHandler::runImpl() @ 0x343eed in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n2020.07.13 16:27:41.869901 [ 49466 ] {} <Fatal> BaseDaemon: 18. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:1201: DB::TCPHandler::run() @ 0x34ab52 in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n2020.07.13 16:27:41.870393 [ 49466 ] {} <Fatal> BaseDaemon: 19. /home/akuzm/ch4/ch/contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x1b9d7c in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Net/lib_poco_netd.so\r\n2020.07.13 16:27:41.870889 [ 49466 ] {} <Fatal> BaseDaemon: 20. /home/akuzm/ch4/ch/contrib/poco/Net/src/TCPServerDispatcher.cpp:114: Poco::Net::TCPServerDispatcher::run() @ 0x1ba58a in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Net/lib_poco_netd.so\r\n2020.07.13 16:27:41.871396 [ 49466 ] {} <Fatal> BaseDaemon: 21. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x276173 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n2020.07.13 16:27:41.871925 [ 49466 ] {} <Fatal> BaseDaemon: 22. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x27303d in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n2020.07.13 16:27:41.872442 [ 49466 ] {} <Fatal> BaseDaemon: 23. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x271eba in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n2020.07.13 16:27:41.872707 [ 49466 ] {} <Fatal> BaseDaemon: 24. start_thread @ 0x9609 in /lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2020.07.13 16:27:41.873202 [ 49466 ] {} <Fatal> BaseDaemon: 25. /build/glibc-YYA7BZ/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x122103 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n```\n",
  "hints_text": "`SELECT CAST(null, 'Nullable(UInt8)') = 1 ? CAST(null, 'Nullable(UInt8)') : -1`",
  "created_at": "2020-08-02T01:56:51Z"
}