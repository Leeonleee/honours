{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 61354,
  "instance_id": "ClickHouse__ClickHouse-61354",
  "issue_numbers": [
    "60662"
  ],
  "base_commit": "740b7ec4b78c91517523aa7e64b5dc9e26813edf",
  "patch": "diff --git a/src/Common/AsynchronousMetrics.cpp b/src/Common/AsynchronousMetrics.cpp\nindex b24d9bcc301a..0b9be18c84ee 100644\n--- a/src/Common/AsynchronousMetrics.cpp\n+++ b/src/Common/AsynchronousMetrics.cpp\n@@ -9,6 +9,7 @@\n #include <IO/MMappedFileCache.h>\n #include <IO/ReadHelpers.h>\n #include <base/errnoToString.h>\n+#include <base/find_symbols.h>\n #include <base/getPageSize.h>\n #include <sys/resource.h>\n #include <chrono>\n@@ -90,6 +91,9 @@ AsynchronousMetrics::AsynchronousMetrics(\n         openFileIfExists(\"/sys/fs/cgroup/cpu/cpu.cfs_quota_us\", cgroupcpu_cfs_quota);\n     }\n \n+    openFileIfExists(\"/proc/sys/vm/max_map_count\", vm_max_map_count);\n+    openFileIfExists(\"/proc/self/maps\", vm_maps);\n+\n     openSensors();\n     openBlockDevices();\n     openEDAC();\n@@ -1423,6 +1427,55 @@ void AsynchronousMetrics::update(TimePoint update_time, bool force_update)\n         }\n     }\n \n+    if (vm_max_map_count)\n+    {\n+        try\n+        {\n+            vm_max_map_count->rewind();\n+\n+            uint64_t max_map_count = 0;\n+            readText(max_map_count, *vm_max_map_count);\n+            new_values[\"VMMaxMapCount\"] = { max_map_count, \"The maximum number of memory mappings a process may have (/proc/sys/vm/max_map_count).\"};\n+        }\n+        catch (...)\n+        {\n+            tryLogCurrentException(__PRETTY_FUNCTION__);\n+            openFileIfExists(\"/proc/sys/vm/max_map_count\", vm_max_map_count);\n+        }\n+    }\n+\n+    if (vm_maps)\n+    {\n+        try\n+        {\n+            vm_maps->rewind();\n+\n+            uint64_t num_maps = 0;\n+            while (!vm_maps->eof())\n+            {\n+                char * next_pos = find_first_symbols<'\\n'>(vm_maps->position(), vm_maps->buffer().end());\n+                vm_maps->position() = next_pos;\n+\n+                if (!vm_maps->hasPendingData())\n+                    continue;\n+\n+                if (*vm_maps->position() == '\\n')\n+                {\n+                    ++num_maps;\n+                    ++vm_maps->position();\n+                }\n+            }\n+            new_values[\"VMNumMaps\"] = { num_maps,\n+                \"The current number of memory mappings of the process (/proc/self/maps).\"\n+                \" If it is close to the maximum (VMMaxMapCount), you should increase the limit for vm.max_map_count in /etc/sysctl.conf\"};\n+        }\n+        catch (...)\n+        {\n+            tryLogCurrentException(__PRETTY_FUNCTION__);\n+            openFileIfExists(\"/proc/self/maps\", vm_maps);\n+        }\n+    }\n+\n     try\n     {\n         for (size_t i = 0, size = thermal.size(); i < size; ++i)\ndiff --git a/src/Common/AsynchronousMetrics.h b/src/Common/AsynchronousMetrics.h\nindex 305e8136b8ac..4b3d28e80c54 100644\n--- a/src/Common/AsynchronousMetrics.h\n+++ b/src/Common/AsynchronousMetrics.h\n@@ -123,6 +123,9 @@ class AsynchronousMetrics\n     std::optional<ReadBufferFromFilePRead> cgroupcpu_cfs_quota TSA_GUARDED_BY(data_mutex);\n     std::optional<ReadBufferFromFilePRead> cgroupcpu_max TSA_GUARDED_BY(data_mutex);\n \n+    std::optional<ReadBufferFromFilePRead> vm_max_map_count TSA_GUARDED_BY(data_mutex);\n+    std::optional<ReadBufferFromFilePRead> vm_maps TSA_GUARDED_BY(data_mutex);\n+\n     std::vector<std::unique_ptr<ReadBufferFromFilePRead>> thermal TSA_GUARDED_BY(data_mutex);\n \n     std::unordered_map<String /* device name */,\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03010_virtual_memory_mappings_asynchronous_metrics.reference b/tests/queries/0_stateless/03010_virtual_memory_mappings_asynchronous_metrics.reference\nnew file mode 100644\nindex 000000000000..aa47d0d46d47\n--- /dev/null\n+++ b/tests/queries/0_stateless/03010_virtual_memory_mappings_asynchronous_metrics.reference\n@@ -0,0 +1,2 @@\n+0\n+0\ndiff --git a/tests/queries/0_stateless/03010_virtual_memory_mappings_asynchronous_metrics.sql b/tests/queries/0_stateless/03010_virtual_memory_mappings_asynchronous_metrics.sql\nnew file mode 100644\nindex 000000000000..e9aced83dedf\n--- /dev/null\n+++ b/tests/queries/0_stateless/03010_virtual_memory_mappings_asynchronous_metrics.sql\n@@ -0,0 +1,4 @@\n+-- Tags: no-replicated-database\n+\n+SELECT least(value, 0) FROM system.asynchronous_metrics WHERE metric = 'VMMaxMapCount';\n+SELECT least(value, 0) FROM system.asynchronous_metrics WHERE metric = 'VMNumMaps';\n",
  "problem_statement": "New async metric VirtualMemoryMappings\n**Use case**\r\n\r\nI'm investigating quite strange case when ClickHouse 23.8 is kinda 'leaking' memory mappings when their number grows every day. \r\nAfter reaching the limit is start giving exceptions like \r\n```\r\nIt looks like that the process is near the limit on number of virtual memory mappings.\r\nCurrent number of mappings (/proc/self/maps): 524289.\r\nLimit on number of mappings (/proc/sys/vm/max_map_count): 524288.\r\nYou should increase the limit for vm.max_map_count in /etc/sysctl.conf\r\n```\r\nand \r\n```\r\n<jemalloc>: Error in munmap(): Cannot allocate memory\r\n```\r\nand become unresponsible (being unable to start threads or allocate ram). \r\n\r\nI still not sure why it's happening (still checking), but would be nice to have an async metric for that. \r\n\r\n**Describe the solution you'd like**\r\n\r\nsystem.asynchronous_metrics: \r\n\r\nVirtualMemoryMappings\r\n\r\nReflects the total number of memory mappings per process, aiding in monitoring resource utilization against the vm.max_map_count limit.\r\n\r\nwe have already the code to count the maps\r\nhttps://github.com/ClickHouse/ClickHouse/blob/9bc9ca3bd96fdbc6e17dfecaf55777b399bc4722/src/Common/Exception.cpp#L308-L325\r\n\r\n**Describe alternatives you've considered**\r\n\r\ncommand line query \r\n\r\n```\r\npmap $(pidof clickhouse-server) -x 2>&1 |  clickhouse-local --input-format=Regexp --format_regexp='^\\s*([0-9a-f]+)\\s+([0-9]+)\\s+([0-9]+)\\s+([0-9]+)\\s+(\\S+)\\s+(.*)' --format_regexp_skip_unmatched=1 --structure='Address String, Kbytes UInt64, RSS UInt64, Dirty UInt64, Mode String, Mapping String' --query='SELECT Mapping, Mode, count(), formatReadableSize(sum(Kbytes*1024)) as sum_virt, formatReadableSize(sum(RSS*1024)) as sum_rss, quantiles(0.01,0.25,0.5,0.75, 0.99)(Kbytes) as quantiles_kb from table GROUP BY Mapping, Mode ORDER BY count() FORMAT PrettyCompactMonoBlock'\r\n\r\n\u250c\u2500Mapping\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500Mode\u2500\u2500\u252c\u2500count()\u2500\u252c\u2500sum_virt\u2500\u2500\u2500\u252c\u2500sum_rss\u2500\u2500\u2500\u2500\u252c\u2500quantiles_kb\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 libdl-2.31.so        \u2502 rw--- \u2502       1 \u2502 4.00 KiB   \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 locale-archive       \u2502 r---- \u2502       1 \u2502 2.90 MiB   \u2502 400.00 KiB \u2502 [2968,2968,2968,2968,2968]             \u2502\r\n\u2502 libnss_files-2.31.so \u2502 r-x-- \u2502       1 \u2502 28.00 KiB  \u2502 28.00 KiB  \u2502 [28,28,28,28,28]                       \u2502\r\n\u2502 clickhouse           \u2502 rw--- \u2502       1 \u2502 160.00 KiB \u2502 128.00 KiB \u2502 [160,160,160,160,160]                  \u2502\r\n\u2502 librt-2.31.so        \u2502 r-x-- \u2502       1 \u2502 16.00 KiB  \u2502 16.00 KiB  \u2502 [16,16,16,16,16]                       \u2502\r\n\u2502 libnss_files-2.31.so \u2502 rw--- \u2502       1 \u2502 4.00 KiB   \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 libnss_dns-2.31.so   \u2502 rw--- \u2502       1 \u2502 4.00 KiB   \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 libresolv-2.31.so    \u2502 rw--- \u2502       1 \u2502 4.00 KiB   \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 libc-2.31.so         \u2502 r-x-- \u2502       1 \u2502 1.47 MiB   \u2502 1.19 MiB   \u2502 [1504,1504,1504,1504,1504]             \u2502\r\n\u2502 libpthread-2.31.so   \u2502 rw--- \u2502       1 \u2502 4.00 KiB   \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 libresolv-2.31.so    \u2502 r-x-- \u2502       1 \u2502 64.00 KiB  \u2502 36.00 KiB  \u2502 [64,64,64,64,64]                       \u2502\r\n\u2502 libpthread-2.31.so   \u2502 r-x-- \u2502       1 \u2502 68.00 KiB  \u2502 68.00 KiB  \u2502 [68,68,68,68,68]                       \u2502\r\n\u2502 libm-2.31.so         \u2502 rw--- \u2502       1 \u2502 4.00 KiB   \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 librt-2.31.so        \u2502 rw--- \u2502       1 \u2502 4.00 KiB   \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 libc-2.31.so         \u2502 rw--- \u2502       1 \u2502 8.00 KiB   \u2502 8.00 KiB   \u2502 [8,8,8,8,8]                            \u2502\r\n\u2502 libdl-2.31.so        \u2502 r-x-- \u2502       1 \u2502 8.00 KiB   \u2502 8.00 KiB   \u2502 [8,8,8,8,8]                            \u2502\r\n\u2502 libnss_dns-2.31.so   \u2502 r-x-- \u2502       1 \u2502 16.00 KiB  \u2502 8.00 KiB   \u2502 [16,16,16,16,16]                       \u2502\r\n\u2502 ld-2.31.so           \u2502 rw--- \u2502       1 \u2502 4.00 KiB   \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 ld-2.31.so           \u2502 r-x-- \u2502       1 \u2502 140.00 KiB \u2502 140.00 KiB \u2502 [140,140,140,140,140]                  \u2502\r\n\u2502 libm-2.31.so         \u2502 r-x-- \u2502       1 \u2502 668.00 KiB \u2502 320.00 KiB \u2502 [668,668,668,668,668]                  \u2502\r\n\u2502 [ stack ]            \u2502 rw--- \u2502       1 \u2502 136.00 KiB \u2502 44.00 KiB  \u2502 [136,136,136,136,136]                  \u2502\r\n\u2502 clickhouse           \u2502 r-x-- \u2502       1 \u2502 285.29 MiB \u2502 217.77 MiB \u2502 [292132,292132,292132,292132,292132]   \u2502\r\n\u2502 librt-2.31.so        \u2502 r---- \u2502       3 \u2502 20.00 KiB  \u2502 16.00 KiB  \u2502 [4.08,6,8,8,8]                         \u2502\r\n\u2502 libnss_files-2.31.so \u2502 r---- \u2502       3 \u2502 24.00 KiB  \u2502 24.00 KiB  \u2502 [4.08,6,8,10,11.92]                    \u2502\r\n\u2502 libm-2.31.so         \u2502 r---- \u2502       3 \u2502 668.00 KiB \u2502 120.00 KiB \u2502 [4.96,28,52,332,600.8]                 \u2502\r\n\u2502 clickhouse           \u2502 r---- \u2502       3 \u2502 593.16 MiB \u2502 37.83 MiB  \u2502 [2431.92,50046,99644,303472,499146.88] \u2502\r\n\u2502 ld-2.31.so           \u2502 r---- \u2502       3 \u2502 40.00 KiB  \u2502 40.00 KiB  \u2502 [4,4,4,18,31.439999999999998]          \u2502\r\n\u2502 libpthread-2.31.so   \u2502 r---- \u2502       3 \u2502 52.00 KiB  \u2502 52.00 KiB  \u2502 [4.4,14,24,24,24]                      \u2502\r\n\u2502 libresolv-2.31.so    \u2502 r---- \u2502       3 \u2502 36.00 KiB  \u2502 8.00 KiB   \u2502 [4.24,10,16,16,16]                     \u2502\r\n\u2502 libc-2.31.so         \u2502 r---- \u2502       3 \u2502 464.00 KiB \u2502 440.00 KiB \u2502 [18.4,76,136,224,308.48]               \u2502\r\n\u2502 libnss_dns-2.31.so   \u2502 r---- \u2502       3 \u2502 12.00 KiB  \u2502 4.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 libdl-2.31.so        \u2502 r---- \u2502       3 \u2502 12.00 KiB  \u2502 8.00 KiB   \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 [ anon ]             \u2502 r---- \u2502      10 \u2502 84.00 KiB  \u2502 72.00 KiB  \u2502 [8,8,8,8,11.64]                        \u2502\r\n\u2502 [ anon ]             \u2502 r-x-- \u2502      36 \u2502 284.00 KiB \u2502 276.00 KiB \u2502 [5.4,8,8,8,8]                          \u2502\r\n\u2502 [ anon ]             \u2502 ----- \u2502    1082 \u2502 4.23 MiB   \u2502 736.00 KiB \u2502 [4,4,4,4,4]                            \u2502\r\n\u2502 [ anon ]             \u2502 rw--- \u2502  124909 \u2502 6.94 GiB   \u2502 1.56 GiB   \u2502 [4,4,4,12,112]                         \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "",
  "created_at": "2024-03-14T07:09:17Z",
  "modified_files": [
    "src/Common/AsynchronousMetrics.cpp",
    "src/Common/AsynchronousMetrics.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03010_virtual_memory_mappings_asynchronous_metrics.reference",
    "b/tests/queries/0_stateless/03010_virtual_memory_mappings_asynchronous_metrics.sql"
  ]
}