You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Add setting to stop INSERTs when disk space is close to 100%
**Use Case**

When ClickHouse fills the disk to 100%, it creates several negative side effects: inability to perform certain SELECT queries (which require temporary data), potential file corruption, inability to write logs, and other cascading issues that complicate recovery. It's preferable to stop writes slightly earlier to avoid these problems.

The same logic as `parts_to_throw_insert` can be applied here. Eventually, writes will fail as the disk becomes full; it's better if they fail slightly earlier to prevent cascading problems.

**Describe the solution you'd like**

Introduce user-level settings: `min_free_diskspace_bytes_to_throw_insert ` (default 10GB) and `min_free_diskspace_ratio_to_throw_insert ` (default 0.02, i.e., 2%). When these settings are non-zero, during an INSERT operation, ClickHouse will ensure that the storage policy of the target table has at least `min_free_diskspace_bytes_to_throw_insert` bytes or `min_free_diskspace_ratio_to_throw_insert` free space available. If not, it will throw an exception.

**Describe alternatives you've considered**

Relying on user discipline, monitoring, and alerting has proven to be ineffective.

**Additional context**

Throttling / delaying / slowing down the inserts in that conditions is more controversial, so I don't think it's really needed.

May be we can also make the logic a bit more complex - by checking if the default drive have that amount of free disks space AND there is at least one disk in storage policy of the table with that amount of the free disk space.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
