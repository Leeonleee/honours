diff --git a/tests/queries/0_stateless/01556_accurate_cast_or_null.reference b/tests/queries/0_stateless/01556_accurate_cast_or_null.reference
index 31a9c37421e8..a2ccd5af8688 100644
--- a/tests/queries/0_stateless/01556_accurate_cast_or_null.reference
+++ b/tests/queries/0_stateless/01556_accurate_cast_or_null.reference
@@ -42,3 +42,21 @@
 2023-05-30
 2149-06-06
 1970-01-20
+\N
+\N
+\N
+true
+false
+true
+false
+true
+false
+\N
+\N
+\N
+192.0.2.1
+\N
+\N
+::ffff:192.0.2.1
+2001:db8::1
+\N
diff --git a/tests/queries/0_stateless/01556_accurate_cast_or_null.sql b/tests/queries/0_stateless/01556_accurate_cast_or_null.sql
index f00f6ef837ff..2fb7b1177e61 100644
--- a/tests/queries/0_stateless/01556_accurate_cast_or_null.sql
+++ b/tests/queries/0_stateless/01556_accurate_cast_or_null.sql
@@ -49,3 +49,24 @@ SELECT accurateCastOrNull('1xxx', 'Date');
 SELECT accurateCastOrNull('2023-05-30', 'Date');
 SELECT accurateCastOrNull('2180-01-01', 'Date');
 SELECT accurateCastOrNull(19, 'Date');
+
+select accurateCastOrNull('test', 'Bool');
+select accurateCastOrNull('truex', 'Bool');
+select accurateCastOrNull('xfalse', 'Bool');
+select accurateCastOrNull('true', 'Bool');
+select accurateCastOrNull('false', 'Bool');
+select accurateCastOrNull('1', 'Bool');
+select accurateCastOrNull('0', 'Bool');
+select accurateCastOrNull(1, 'Bool');
+select accurateCastOrNull(0, 'Bool');
+
+select accurateCastOrNull('test', 'IPv4');
+select accurateCastOrNull('2001:db8::1', 'IPv4');
+select accurateCastOrNull('::ffff:192.0.2.1', 'IPv4');
+select accurateCastOrNull('192.0.2.1', 'IPv4');
+select accurateCastOrNull('192.0.2.1x', 'IPv4');
+
+select accurateCastOrNull('test', 'IPv6');
+select accurateCastOrNull('192.0.2.1', 'IPv6');
+select accurateCastOrNull('2001:db8::1', 'IPv6');
+select accurateCastOrNull('2001:db8::1x', 'IPv6');
diff --git a/tests/queries/0_stateless/01601_accurate_cast.reference b/tests/queries/0_stateless/01601_accurate_cast.reference
index 3c6dceb1f168..dbf9666f4cd8 100644
--- a/tests/queries/0_stateless/01601_accurate_cast.reference
+++ b/tests/queries/0_stateless/01601_accurate_cast.reference
@@ -10,3 +10,15 @@
 1970-01-01 00:00:19
 2023-05-30
 1970-01-20
+\N
+true
+false
+true
+false
+true
+false
+\N
+192.0.2.1
+\N
+::ffff:192.0.2.1
+2001:db8::1
diff --git a/tests/queries/0_stateless/01601_accurate_cast.sql b/tests/queries/0_stateless/01601_accurate_cast.sql
index 2108e42df055..d2ecede24023 100644
--- a/tests/queries/0_stateless/01601_accurate_cast.sql
+++ b/tests/queries/0_stateless/01601_accurate_cast.sql
@@ -34,3 +34,27 @@ SELECT accurateCast(0xFFFFFFFF + 1, 'Date');   -- { serverError CANNOT_CONVERT_T
 SELECT accurateCast('1xxx', 'Date');   -- { serverError CANNOT_PARSE_DATE }
 SELECT accurateCast('2023-05-30', 'Date');
 SELECT accurateCast(19, 'Date');
+
+select accurateCast('test', 'Nullable(Bool)');
+select accurateCast('test', 'Bool');   -- { serverError CANNOT_PARSE_BOOL }
+select accurateCast('truex', 'Bool');   -- { serverError CANNOT_PARSE_BOOL }
+select accurateCast('xfalse', 'Bool');   -- { serverError CANNOT_PARSE_BOOL }
+select accurateCast('true', 'Bool');
+select accurateCast('false', 'Bool');
+select accurateCast('1', 'Bool');
+select accurateCast('0', 'Bool');
+select accurateCast(1, 'Bool');
+select accurateCast(0, 'Bool');
+
+select accurateCast('test', 'Nullable(IPv4)');
+select accurateCast('test', 'IPv4');   -- { serverError CANNOT_PARSE_IPV4 }
+select accurateCast('2001:db8::1', 'IPv4');   -- { serverError CANNOT_PARSE_IPV4 }
+select accurateCast('::ffff:192.0.2.1', 'IPv4');   -- { serverError CANNOT_PARSE_IPV4 }
+select accurateCast('192.0.2.1', 'IPv4');
+select accurateCast('192.0.2.1x', 'IPv4');   -- { serverError CANNOT_PARSE_IPV4 }
+
+select accurateCast('test', 'Nullable(IPv6)');
+select accurateCast('test', 'IPv6');   -- { serverError CANNOT_PARSE_IPV6 }
+select accurateCast('192.0.2.1', 'IPv6');
+select accurateCast('2001:db8::1', 'IPv6');
+select accurateCast('2001:db8::1x', 'IPv6');   -- { serverError CANNOT_PARSE_IPV6 }
diff --git a/tests/queries/0_stateless/02026_accurate_cast_or_default.reference b/tests/queries/0_stateless/02026_accurate_cast_or_default.reference
index 67be2da9975e..c31e00dd8f40 100644
--- a/tests/queries/0_stateless/02026_accurate_cast_or_default.reference
+++ b/tests/queries/0_stateless/02026_accurate_cast_or_default.reference
@@ -30,3 +30,24 @@
 0	5
 127	127
 0	5
+\N
+false
+false
+false
+true
+false
+true
+false
+true
+false
+\N
+0.0.0.0
+0.0.0.0
+0.0.0.0
+192.0.2.1
+0.0.0.0
+\N
+::
+::ffff:192.0.2.1
+2001:db8::1
+::
diff --git a/tests/queries/0_stateless/02026_accurate_cast_or_default.sql b/tests/queries/0_stateless/02026_accurate_cast_or_default.sql
index 1c35055749e8..d493914c9567 100644
--- a/tests/queries/0_stateless/02026_accurate_cast_or_default.sql
+++ b/tests/queries/0_stateless/02026_accurate_cast_or_default.sql
@@ -34,3 +34,27 @@ SELECT accurateCastOrDefault(nan, 'UInt64'), accurateCastOrDefault(nan, 'UInt64'
 SELECT accurateCastOrDefault(nan, 'UInt256'), accurateCastOrDefault(nan, 'UInt256', toUInt256(5));
 
 SELECT accurateCastOrDefault(number + 127, 'Int8') AS x, accurateCastOrDefault(number + 127, 'Int8', toInt8(5)) AS x_with_default FROM numbers (2) ORDER BY number;
+
+select accurateCastOrDefault('test', 'Nullable(Bool)');
+select accurateCastOrDefault('test', 'Bool');
+select accurateCastOrDefault('truex', 'Bool');
+select accurateCastOrDefault('xfalse', 'Bool');
+select accurateCastOrDefault('true', 'Bool');
+select accurateCastOrDefault('false', 'Bool');
+select accurateCastOrDefault('1', 'Bool');
+select accurateCastOrDefault('0', 'Bool');
+select accurateCastOrDefault(1, 'Bool');
+select accurateCastOrDefault(0, 'Bool');
+
+select accurateCastOrDefault('test', 'Nullable(IPv4)');
+select accurateCastOrDefault('test', 'IPv4');
+select accurateCastOrDefault('2001:db8::1', 'IPv4');
+select accurateCastOrDefault('::ffff:192.0.2.1', 'IPv4');
+select accurateCastOrDefault('192.0.2.1', 'IPv4');
+select accurateCastOrDefault('192.0.2.1x', 'IPv4');
+
+select accurateCastOrDefault('test', 'Nullable(IPv6)');
+select accurateCastOrDefault('test', 'IPv6');
+select accurateCastOrDefault('192.0.2.1', 'IPv6');
+select accurateCastOrDefault('2001:db8::1', 'IPv6');
+select accurateCastOrDefault('2001:db8::1x', 'IPv6');
diff --git a/tests/queries/0_stateless/02303_cast_nullable_to_custom_types.reference b/tests/queries/0_stateless/02303_cast_nullable_to_custom_types.reference
index 159ee805f265..717484d46704 100644
--- a/tests/queries/0_stateless/02303_cast_nullable_to_custom_types.reference
+++ b/tests/queries/0_stateless/02303_cast_nullable_to_custom_types.reference
@@ -17,7 +17,7 @@ true
 \N
 0.0.0.0
 \N
-0.0.0.0
+\N
 \N
 \N
 \N
@@ -25,8 +25,21 @@ true
 \N
 ::
 \N
-::
+\N
 \N
 \N
 \N
 \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0
+fuzzer issue
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
diff --git a/tests/queries/0_stateless/02303_cast_nullable_to_custom_types.sql b/tests/queries/0_stateless/02303_cast_nullable_to_custom_types.sql
index 1cc5140f3399..b56ebc2b09dc 100644
--- a/tests/queries/0_stateless/02303_cast_nullable_to_custom_types.sql
+++ b/tests/queries/0_stateless/02303_cast_nullable_to_custom_types.sql
@@ -22,3 +22,9 @@ select toIPv6(number % 2 ? '0000:0000:0000:0000:0000:0000:0000:0000' : NULL) fro
 select toIPv6OrDefault(number % 2 ? '' : NULL) from numbers(2);
 select toIPv6OrNull(number % 2 ? '' : NULL) from numbers(2);
 select IPv6StringToNum(number % 2 ? '0000:0000:0000:0000:0000:0000:0000:0000' : NULL) from numbers(2);
+
+select 'fuzzer issue';
+SELECT CAST(if(number % 2, 'truetrue', NULL), 'Nullable(Bool)') FROM numbers(2);
+SELECT CAST(if(number % 2, 'falsefalse', NULL), 'Nullable(Bool)') FROM numbers(2);
+SELECT accurateCastOrNull(if(number % 2, NULL, 'truex'), 'Bool') FROM numbers(4);
+SELECT accurateCastOrNull(if(number % 2, 'truex', NULL), 'Bool') FROM numbers(4);
