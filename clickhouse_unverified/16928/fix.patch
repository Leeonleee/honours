diff --git a/src/Interpreters/MonotonicityCheckVisitor.h b/src/Interpreters/MonotonicityCheckVisitor.h
index 405ec1cb479a..73c1e5497dd7 100644
--- a/src/Interpreters/MonotonicityCheckVisitor.h
+++ b/src/Interpreters/MonotonicityCheckVisitor.h
@@ -131,8 +131,13 @@ class MonotonicityCheckMatcher
             data.reject();
     }
 
-    static bool needChildVisit(const ASTPtr &, const ASTPtr &)
+    static bool needChildVisit(const ASTPtr & parent, const ASTPtr &)
     {
+        /// Currently we check monotonicity only for single-argument functions.
+        /// Although, multi-argument functions with all but one constant arguments can also be monotonic.
+        if (const auto * func = typeid_cast<const ASTFunction *>(parent.get()))
+            return func->arguments->children.size() < 2;
+
         return true;
     }
 };
