You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Perform algebraic optimizations of arithmetic expressions inside aggregate functions.
Some aggregate functions are commutative with some arithmetic expressions.

```
avg(x + const) = avg(x) + const
```

This is applicable for aggregate functions: `sum`, `avg`, `min`, `max` and operations: `+`, `-`, `*`, `/` (but not for `intDiv` and `modulo`).

In case of integer overflow it either works correctly (for `sum`) or we may assume that integer overflow is implementation specific behaviour and apply optimization under this assumption.

**Possible implementation**

AST rewrite with InDepthNodeVisitor.
Should not rewrite if expression has alias.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
