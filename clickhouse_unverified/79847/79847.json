{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 79847,
  "instance_id": "ClickHouse__ClickHouse-79847",
  "issue_numbers": [
    "73653"
  ],
  "base_commit": "68f91aaea8fccd0be24dd7206b2cc21ce3296b76",
  "patch": "diff --git a/src/Columns/ColumnVector.cpp b/src/Columns/ColumnVector.cpp\nindex 010292f3dd33..6eacad744c58 100644\n--- a/src/Columns/ColumnVector.cpp\n+++ b/src/Columns/ColumnVector.cpp\n@@ -173,6 +173,36 @@ struct ColumnVector<T>::equals\n     bool operator()(size_t lhs, size_t rhs) const { return CompareHelper<T>::equals(parent.data[lhs], parent.data[rhs], nan_direction_hint); }\n };\n \n+/// Radix sort treats all positive NaNs to be greater than all numbers.\n+/// And all negative NaNs to be lower that all numbers.\n+/// Standard is not specifying which sign NaN should have, so after sort NaNs can\n+/// be grouped on any side of the array or on both.\n+/// Move all NaNs to the requested part of result.\n+template <typename T>\n+void moveNanToRequestedSide(\n+    typename ColumnVector<T>::Permutation::iterator begin,\n+    typename ColumnVector<T>::Permutation::iterator end,\n+    const typename ColumnVector<T>::Container & data,\n+    size_t data_size,\n+    bool reverse,\n+    int nan_direction_hint\n+)\n+{\n+    const auto is_nulls_last = ((nan_direction_hint > 0) != reverse);\n+    size_t nans_to_move = 0;\n+\n+    for (size_t i = 0; i < data_size; ++i)\n+    {\n+        if (isNaN(data[begin[is_nulls_last ? i : data_size - 1 - i]]))\n+            ++nans_to_move;\n+        else\n+            break;\n+    }\n+\n+    if (nans_to_move)\n+        std::rotate(begin, begin + (is_nulls_last ? nans_to_move : data_size - nans_to_move), end);\n+}\n+\n #if USE_EMBEDDED_COMPILER\n \n template <typename T>\n@@ -282,26 +312,8 @@ void ColumnVector<T>::getPermutation(IColumn::PermutationSortDirection direction\n                     pairs[i] = {data[i], i};\n \n                 RadixSort<RadixSortTraits<T>>::executeLSD(pairs.data(), data_size, reverse, res.data());\n-\n-                /// Radix sort treats all positive NaNs to be greater than all numbers.\n-                /// If the user needs the opposite, we must move them accordingly.\n-                if (is_floating_point<T> && nan_direction_hint < 0)\n-                {\n-                    size_t nans_to_move = 0;\n-\n-                    for (size_t i = 0; i < data_size; ++i)\n-                    {\n-                        if (isNaN(data[res[reverse ? i : data_size - 1 - i]]))\n-                            ++nans_to_move;\n-                        else\n-                            break;\n-                    }\n-\n-                    if (nans_to_move)\n-                    {\n-                        std::rotate(std::begin(res), std::begin(res) + (reverse ? nans_to_move : data_size - nans_to_move), std::end(res));\n-                    }\n-                }\n+                if constexpr (is_floating_point<T>)\n+                    moveNanToRequestedSide<T>(res.begin(), res.end(), data, data_size, reverse, nan_direction_hint);\n \n                 return;\n             }\n@@ -333,16 +345,16 @@ void ColumnVector<T>::updatePermutation(IColumn::PermutationSortDirection direct\n         {\n             /// TODO: LSD RadixSort is currently not stable if direction is descending, or value is floating point\n             bool use_radix_sort = (sort_is_stable && ascending && !is_floating_point<T>) || !sort_is_stable;\n-            size_t size = end - begin;\n+            size_t range_size = end - begin;\n \n             /// Thresholds on size. Lower threshold is arbitrary. Upper threshold is chosen by the type for histogram counters.\n-            if (size >= 256 && size <= std::numeric_limits<UInt32>::max() && use_radix_sort)\n+            if (range_size >= 256 && range_size <= std::numeric_limits<UInt32>::max() && use_radix_sort)\n             {\n                 bool try_sort = trySort(begin, end, pred);\n                 if (try_sort)\n                     return;\n \n-                PaddedPODArray<ValueWithIndex<T>> pairs(size);\n+                PaddedPODArray<ValueWithIndex<T>> pairs(range_size);\n                 size_t index = 0;\n \n                 for (auto * it = begin; it != end; ++it)\n@@ -351,27 +363,9 @@ void ColumnVector<T>::updatePermutation(IColumn::PermutationSortDirection direct\n                     ++index;\n                 }\n \n-                RadixSort<RadixSortTraits<T>>::executeLSD(pairs.data(), size, reverse, begin);\n-\n-                /// Radix sort treats all NaNs to be greater than all numbers.\n-                /// If the user needs the opposite, we must move them accordingly.\n-                if (is_floating_point<T> && nan_direction_hint < 0)\n-                {\n-                    size_t nans_to_move = 0;\n-\n-                    for (size_t i = 0; i < size; ++i)\n-                    {\n-                        if (isNaN(data[begin[reverse ? i : size - 1 - i]]))\n-                            ++nans_to_move;\n-                        else\n-                            break;\n-                    }\n-\n-                    if (nans_to_move)\n-                    {\n-                        std::rotate(begin, begin + (reverse ? nans_to_move : size - nans_to_move), end);\n-                    }\n-                }\n+                RadixSort<RadixSortTraits<T>>::executeLSD(pairs.data(), range_size, reverse, begin);\n+                if constexpr (is_floating_point<T>)\n+                    moveNanToRequestedSide<T>(begin, end, data, range_size, reverse, nan_direction_hint);\n \n                 return;\n             }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03447_float_nan_order.reference b/tests/queries/0_stateless/03447_float_nan_order.reference\nnew file mode 100644\nindex 000000000000..c876db308c69\n--- /dev/null\n+++ b/tests/queries/0_stateless/03447_float_nan_order.reference\n@@ -0,0 +1,2088 @@\n+--- short array ASC NULLS FIRST\n+nan\n+2\n+3\n+--- short array ASC NULLS LAST\n+2\n+3\n+nan\n+--- short array DESC NULLS FIRST\n+nan\n+3\n+2\n+--- short array DESC NULLS LAST\n+3\n+2\n+nan\n+--- long array ASC NULLS FIRST\n+nan\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+10\n+11\n+12\n+13\n+14\n+15\n+16\n+17\n+18\n+19\n+20\n+21\n+22\n+23\n+24\n+25\n+26\n+27\n+28\n+29\n+30\n+31\n+32\n+33\n+34\n+35\n+36\n+37\n+38\n+39\n+40\n+41\n+42\n+43\n+44\n+45\n+46\n+47\n+48\n+49\n+50\n+51\n+52\n+53\n+54\n+55\n+56\n+57\n+58\n+59\n+60\n+61\n+62\n+63\n+64\n+65\n+66\n+67\n+68\n+69\n+70\n+71\n+72\n+73\n+74\n+75\n+76\n+77\n+78\n+79\n+80\n+81\n+82\n+83\n+84\n+85\n+86\n+87\n+88\n+89\n+90\n+91\n+92\n+93\n+94\n+95\n+96\n+97\n+98\n+99\n+100\n+101\n+102\n+103\n+104\n+105\n+106\n+107\n+108\n+109\n+110\n+111\n+112\n+113\n+114\n+115\n+116\n+117\n+118\n+119\n+120\n+121\n+122\n+123\n+124\n+125\n+126\n+127\n+128\n+129\n+130\n+131\n+132\n+133\n+134\n+135\n+136\n+137\n+138\n+139\n+140\n+141\n+142\n+143\n+144\n+145\n+146\n+147\n+148\n+149\n+150\n+151\n+152\n+153\n+154\n+155\n+156\n+157\n+158\n+159\n+160\n+161\n+162\n+163\n+164\n+165\n+166\n+167\n+168\n+169\n+170\n+171\n+172\n+173\n+174\n+175\n+176\n+177\n+178\n+179\n+180\n+181\n+182\n+183\n+184\n+185\n+186\n+187\n+188\n+189\n+190\n+191\n+192\n+193\n+194\n+195\n+196\n+197\n+198\n+199\n+200\n+201\n+202\n+203\n+204\n+205\n+206\n+207\n+208\n+209\n+210\n+211\n+212\n+213\n+214\n+215\n+216\n+217\n+218\n+219\n+220\n+221\n+222\n+223\n+224\n+225\n+226\n+227\n+228\n+229\n+230\n+231\n+232\n+233\n+234\n+235\n+236\n+237\n+238\n+239\n+240\n+241\n+242\n+243\n+244\n+245\n+246\n+247\n+248\n+249\n+250\n+251\n+252\n+253\n+254\n+255\n+256\n+--- long array ASC NULLS LAST\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+10\n+11\n+12\n+13\n+14\n+15\n+16\n+17\n+18\n+19\n+20\n+21\n+22\n+23\n+24\n+25\n+26\n+27\n+28\n+29\n+30\n+31\n+32\n+33\n+34\n+35\n+36\n+37\n+38\n+39\n+40\n+41\n+42\n+43\n+44\n+45\n+46\n+47\n+48\n+49\n+50\n+51\n+52\n+53\n+54\n+55\n+56\n+57\n+58\n+59\n+60\n+61\n+62\n+63\n+64\n+65\n+66\n+67\n+68\n+69\n+70\n+71\n+72\n+73\n+74\n+75\n+76\n+77\n+78\n+79\n+80\n+81\n+82\n+83\n+84\n+85\n+86\n+87\n+88\n+89\n+90\n+91\n+92\n+93\n+94\n+95\n+96\n+97\n+98\n+99\n+100\n+101\n+102\n+103\n+104\n+105\n+106\n+107\n+108\n+109\n+110\n+111\n+112\n+113\n+114\n+115\n+116\n+117\n+118\n+119\n+120\n+121\n+122\n+123\n+124\n+125\n+126\n+127\n+128\n+129\n+130\n+131\n+132\n+133\n+134\n+135\n+136\n+137\n+138\n+139\n+140\n+141\n+142\n+143\n+144\n+145\n+146\n+147\n+148\n+149\n+150\n+151\n+152\n+153\n+154\n+155\n+156\n+157\n+158\n+159\n+160\n+161\n+162\n+163\n+164\n+165\n+166\n+167\n+168\n+169\n+170\n+171\n+172\n+173\n+174\n+175\n+176\n+177\n+178\n+179\n+180\n+181\n+182\n+183\n+184\n+185\n+186\n+187\n+188\n+189\n+190\n+191\n+192\n+193\n+194\n+195\n+196\n+197\n+198\n+199\n+200\n+201\n+202\n+203\n+204\n+205\n+206\n+207\n+208\n+209\n+210\n+211\n+212\n+213\n+214\n+215\n+216\n+217\n+218\n+219\n+220\n+221\n+222\n+223\n+224\n+225\n+226\n+227\n+228\n+229\n+230\n+231\n+232\n+233\n+234\n+235\n+236\n+237\n+238\n+239\n+240\n+241\n+242\n+243\n+244\n+245\n+246\n+247\n+248\n+249\n+250\n+251\n+252\n+253\n+254\n+255\n+256\n+nan\n+--- long array DESC NULLS FIRST\n+nan\n+256\n+255\n+254\n+253\n+252\n+251\n+250\n+249\n+248\n+247\n+246\n+245\n+244\n+243\n+242\n+241\n+240\n+239\n+238\n+237\n+236\n+235\n+234\n+233\n+232\n+231\n+230\n+229\n+228\n+227\n+226\n+225\n+224\n+223\n+222\n+221\n+220\n+219\n+218\n+217\n+216\n+215\n+214\n+213\n+212\n+211\n+210\n+209\n+208\n+207\n+206\n+205\n+204\n+203\n+202\n+201\n+200\n+199\n+198\n+197\n+196\n+195\n+194\n+193\n+192\n+191\n+190\n+189\n+188\n+187\n+186\n+185\n+184\n+183\n+182\n+181\n+180\n+179\n+178\n+177\n+176\n+175\n+174\n+173\n+172\n+171\n+170\n+169\n+168\n+167\n+166\n+165\n+164\n+163\n+162\n+161\n+160\n+159\n+158\n+157\n+156\n+155\n+154\n+153\n+152\n+151\n+150\n+149\n+148\n+147\n+146\n+145\n+144\n+143\n+142\n+141\n+140\n+139\n+138\n+137\n+136\n+135\n+134\n+133\n+132\n+131\n+130\n+129\n+128\n+127\n+126\n+125\n+124\n+123\n+122\n+121\n+120\n+119\n+118\n+117\n+116\n+115\n+114\n+113\n+112\n+111\n+110\n+109\n+108\n+107\n+106\n+105\n+104\n+103\n+102\n+101\n+100\n+99\n+98\n+97\n+96\n+95\n+94\n+93\n+92\n+91\n+90\n+89\n+88\n+87\n+86\n+85\n+84\n+83\n+82\n+81\n+80\n+79\n+78\n+77\n+76\n+75\n+74\n+73\n+72\n+71\n+70\n+69\n+68\n+67\n+66\n+65\n+64\n+63\n+62\n+61\n+60\n+59\n+58\n+57\n+56\n+55\n+54\n+53\n+52\n+51\n+50\n+49\n+48\n+47\n+46\n+45\n+44\n+43\n+42\n+41\n+40\n+39\n+38\n+37\n+36\n+35\n+34\n+33\n+32\n+31\n+30\n+29\n+28\n+27\n+26\n+25\n+24\n+23\n+22\n+21\n+20\n+19\n+18\n+17\n+16\n+15\n+14\n+13\n+12\n+11\n+10\n+9\n+8\n+7\n+6\n+5\n+4\n+3\n+2\n+--- long array DESC NULLS LAST\n+256\n+255\n+254\n+253\n+252\n+251\n+250\n+249\n+248\n+247\n+246\n+245\n+244\n+243\n+242\n+241\n+240\n+239\n+238\n+237\n+236\n+235\n+234\n+233\n+232\n+231\n+230\n+229\n+228\n+227\n+226\n+225\n+224\n+223\n+222\n+221\n+220\n+219\n+218\n+217\n+216\n+215\n+214\n+213\n+212\n+211\n+210\n+209\n+208\n+207\n+206\n+205\n+204\n+203\n+202\n+201\n+200\n+199\n+198\n+197\n+196\n+195\n+194\n+193\n+192\n+191\n+190\n+189\n+188\n+187\n+186\n+185\n+184\n+183\n+182\n+181\n+180\n+179\n+178\n+177\n+176\n+175\n+174\n+173\n+172\n+171\n+170\n+169\n+168\n+167\n+166\n+165\n+164\n+163\n+162\n+161\n+160\n+159\n+158\n+157\n+156\n+155\n+154\n+153\n+152\n+151\n+150\n+149\n+148\n+147\n+146\n+145\n+144\n+143\n+142\n+141\n+140\n+139\n+138\n+137\n+136\n+135\n+134\n+133\n+132\n+131\n+130\n+129\n+128\n+127\n+126\n+125\n+124\n+123\n+122\n+121\n+120\n+119\n+118\n+117\n+116\n+115\n+114\n+113\n+112\n+111\n+110\n+109\n+108\n+107\n+106\n+105\n+104\n+103\n+102\n+101\n+100\n+99\n+98\n+97\n+96\n+95\n+94\n+93\n+92\n+91\n+90\n+89\n+88\n+87\n+86\n+85\n+84\n+83\n+82\n+81\n+80\n+79\n+78\n+77\n+76\n+75\n+74\n+73\n+72\n+71\n+70\n+69\n+68\n+67\n+66\n+65\n+64\n+63\n+62\n+61\n+60\n+59\n+58\n+57\n+56\n+55\n+54\n+53\n+52\n+51\n+50\n+49\n+48\n+47\n+46\n+45\n+44\n+43\n+42\n+41\n+40\n+39\n+38\n+37\n+36\n+35\n+34\n+33\n+32\n+31\n+30\n+29\n+28\n+27\n+26\n+25\n+24\n+23\n+22\n+21\n+20\n+19\n+18\n+17\n+16\n+15\n+14\n+13\n+12\n+11\n+10\n+9\n+8\n+7\n+6\n+5\n+4\n+3\n+2\n+nan\n+--- short array partial ASC NULLS FIRST\n+nan\n+2\n+3\n+--- short array partial ASC NULLS LAST\n+2\n+3\n+nan\n+--- short array partial DESC NULLS FIRST\n+nan\n+3\n+2\n+--- short array partial DESC NULLS LAST\n+3\n+2\n+nan\n+--- long array partial ASC NULLS FIRST\n+nan\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+10\n+11\n+12\n+13\n+14\n+15\n+16\n+17\n+18\n+19\n+20\n+21\n+22\n+23\n+24\n+25\n+26\n+27\n+28\n+29\n+30\n+31\n+32\n+33\n+34\n+35\n+36\n+37\n+38\n+39\n+40\n+41\n+42\n+43\n+44\n+45\n+46\n+47\n+48\n+49\n+50\n+51\n+52\n+53\n+54\n+55\n+56\n+57\n+58\n+59\n+60\n+61\n+62\n+63\n+64\n+65\n+66\n+67\n+68\n+69\n+70\n+71\n+72\n+73\n+74\n+75\n+76\n+77\n+78\n+79\n+80\n+81\n+82\n+83\n+84\n+85\n+86\n+87\n+88\n+89\n+90\n+91\n+92\n+93\n+94\n+95\n+96\n+97\n+98\n+99\n+100\n+101\n+102\n+103\n+104\n+105\n+106\n+107\n+108\n+109\n+110\n+111\n+112\n+113\n+114\n+115\n+116\n+117\n+118\n+119\n+120\n+121\n+122\n+123\n+124\n+125\n+126\n+127\n+128\n+129\n+130\n+131\n+132\n+133\n+134\n+135\n+136\n+137\n+138\n+139\n+140\n+141\n+142\n+143\n+144\n+145\n+146\n+147\n+148\n+149\n+150\n+151\n+152\n+153\n+154\n+155\n+156\n+157\n+158\n+159\n+160\n+161\n+162\n+163\n+164\n+165\n+166\n+167\n+168\n+169\n+170\n+171\n+172\n+173\n+174\n+175\n+176\n+177\n+178\n+179\n+180\n+181\n+182\n+183\n+184\n+185\n+186\n+187\n+188\n+189\n+190\n+191\n+192\n+193\n+194\n+195\n+196\n+197\n+198\n+199\n+200\n+201\n+202\n+203\n+204\n+205\n+206\n+207\n+208\n+209\n+210\n+211\n+212\n+213\n+214\n+215\n+216\n+217\n+218\n+219\n+220\n+221\n+222\n+223\n+224\n+225\n+226\n+227\n+228\n+229\n+230\n+231\n+232\n+233\n+234\n+235\n+236\n+237\n+238\n+239\n+240\n+241\n+242\n+243\n+244\n+245\n+246\n+247\n+248\n+249\n+250\n+251\n+252\n+253\n+254\n+255\n+256\n+--- long array partial ASC NULLS LAST\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+10\n+11\n+12\n+13\n+14\n+15\n+16\n+17\n+18\n+19\n+20\n+21\n+22\n+23\n+24\n+25\n+26\n+27\n+28\n+29\n+30\n+31\n+32\n+33\n+34\n+35\n+36\n+37\n+38\n+39\n+40\n+41\n+42\n+43\n+44\n+45\n+46\n+47\n+48\n+49\n+50\n+51\n+52\n+53\n+54\n+55\n+56\n+57\n+58\n+59\n+60\n+61\n+62\n+63\n+64\n+65\n+66\n+67\n+68\n+69\n+70\n+71\n+72\n+73\n+74\n+75\n+76\n+77\n+78\n+79\n+80\n+81\n+82\n+83\n+84\n+85\n+86\n+87\n+88\n+89\n+90\n+91\n+92\n+93\n+94\n+95\n+96\n+97\n+98\n+99\n+100\n+101\n+102\n+103\n+104\n+105\n+106\n+107\n+108\n+109\n+110\n+111\n+112\n+113\n+114\n+115\n+116\n+117\n+118\n+119\n+120\n+121\n+122\n+123\n+124\n+125\n+126\n+127\n+128\n+129\n+130\n+131\n+132\n+133\n+134\n+135\n+136\n+137\n+138\n+139\n+140\n+141\n+142\n+143\n+144\n+145\n+146\n+147\n+148\n+149\n+150\n+151\n+152\n+153\n+154\n+155\n+156\n+157\n+158\n+159\n+160\n+161\n+162\n+163\n+164\n+165\n+166\n+167\n+168\n+169\n+170\n+171\n+172\n+173\n+174\n+175\n+176\n+177\n+178\n+179\n+180\n+181\n+182\n+183\n+184\n+185\n+186\n+187\n+188\n+189\n+190\n+191\n+192\n+193\n+194\n+195\n+196\n+197\n+198\n+199\n+200\n+201\n+202\n+203\n+204\n+205\n+206\n+207\n+208\n+209\n+210\n+211\n+212\n+213\n+214\n+215\n+216\n+217\n+218\n+219\n+220\n+221\n+222\n+223\n+224\n+225\n+226\n+227\n+228\n+229\n+230\n+231\n+232\n+233\n+234\n+235\n+236\n+237\n+238\n+239\n+240\n+241\n+242\n+243\n+244\n+245\n+246\n+247\n+248\n+249\n+250\n+251\n+252\n+253\n+254\n+255\n+256\n+nan\n+--- long array partial DESC NULLS FIRST\n+nan\n+256\n+255\n+254\n+253\n+252\n+251\n+250\n+249\n+248\n+247\n+246\n+245\n+244\n+243\n+242\n+241\n+240\n+239\n+238\n+237\n+236\n+235\n+234\n+233\n+232\n+231\n+230\n+229\n+228\n+227\n+226\n+225\n+224\n+223\n+222\n+221\n+220\n+219\n+218\n+217\n+216\n+215\n+214\n+213\n+212\n+211\n+210\n+209\n+208\n+207\n+206\n+205\n+204\n+203\n+202\n+201\n+200\n+199\n+198\n+197\n+196\n+195\n+194\n+193\n+192\n+191\n+190\n+189\n+188\n+187\n+186\n+185\n+184\n+183\n+182\n+181\n+180\n+179\n+178\n+177\n+176\n+175\n+174\n+173\n+172\n+171\n+170\n+169\n+168\n+167\n+166\n+165\n+164\n+163\n+162\n+161\n+160\n+159\n+158\n+157\n+156\n+155\n+154\n+153\n+152\n+151\n+150\n+149\n+148\n+147\n+146\n+145\n+144\n+143\n+142\n+141\n+140\n+139\n+138\n+137\n+136\n+135\n+134\n+133\n+132\n+131\n+130\n+129\n+128\n+127\n+126\n+125\n+124\n+123\n+122\n+121\n+120\n+119\n+118\n+117\n+116\n+115\n+114\n+113\n+112\n+111\n+110\n+109\n+108\n+107\n+106\n+105\n+104\n+103\n+102\n+101\n+100\n+99\n+98\n+97\n+96\n+95\n+94\n+93\n+92\n+91\n+90\n+89\n+88\n+87\n+86\n+85\n+84\n+83\n+82\n+81\n+80\n+79\n+78\n+77\n+76\n+75\n+74\n+73\n+72\n+71\n+70\n+69\n+68\n+67\n+66\n+65\n+64\n+63\n+62\n+61\n+60\n+59\n+58\n+57\n+56\n+55\n+54\n+53\n+52\n+51\n+50\n+49\n+48\n+47\n+46\n+45\n+44\n+43\n+42\n+41\n+40\n+39\n+38\n+37\n+36\n+35\n+34\n+33\n+32\n+31\n+30\n+29\n+28\n+27\n+26\n+25\n+24\n+23\n+22\n+21\n+20\n+19\n+18\n+17\n+16\n+15\n+14\n+13\n+12\n+11\n+10\n+9\n+8\n+7\n+6\n+5\n+4\n+3\n+2\n+--- long array partial DESC NULLS LAST\n+256\n+255\n+254\n+253\n+252\n+251\n+250\n+249\n+248\n+247\n+246\n+245\n+244\n+243\n+242\n+241\n+240\n+239\n+238\n+237\n+236\n+235\n+234\n+233\n+232\n+231\n+230\n+229\n+228\n+227\n+226\n+225\n+224\n+223\n+222\n+221\n+220\n+219\n+218\n+217\n+216\n+215\n+214\n+213\n+212\n+211\n+210\n+209\n+208\n+207\n+206\n+205\n+204\n+203\n+202\n+201\n+200\n+199\n+198\n+197\n+196\n+195\n+194\n+193\n+192\n+191\n+190\n+189\n+188\n+187\n+186\n+185\n+184\n+183\n+182\n+181\n+180\n+179\n+178\n+177\n+176\n+175\n+174\n+173\n+172\n+171\n+170\n+169\n+168\n+167\n+166\n+165\n+164\n+163\n+162\n+161\n+160\n+159\n+158\n+157\n+156\n+155\n+154\n+153\n+152\n+151\n+150\n+149\n+148\n+147\n+146\n+145\n+144\n+143\n+142\n+141\n+140\n+139\n+138\n+137\n+136\n+135\n+134\n+133\n+132\n+131\n+130\n+129\n+128\n+127\n+126\n+125\n+124\n+123\n+122\n+121\n+120\n+119\n+118\n+117\n+116\n+115\n+114\n+113\n+112\n+111\n+110\n+109\n+108\n+107\n+106\n+105\n+104\n+103\n+102\n+101\n+100\n+99\n+98\n+97\n+96\n+95\n+94\n+93\n+92\n+91\n+90\n+89\n+88\n+87\n+86\n+85\n+84\n+83\n+82\n+81\n+80\n+79\n+78\n+77\n+76\n+75\n+74\n+73\n+72\n+71\n+70\n+69\n+68\n+67\n+66\n+65\n+64\n+63\n+62\n+61\n+60\n+59\n+58\n+57\n+56\n+55\n+54\n+53\n+52\n+51\n+50\n+49\n+48\n+47\n+46\n+45\n+44\n+43\n+42\n+41\n+40\n+39\n+38\n+37\n+36\n+35\n+34\n+33\n+32\n+31\n+30\n+29\n+28\n+27\n+26\n+25\n+24\n+23\n+22\n+21\n+20\n+19\n+18\n+17\n+16\n+15\n+14\n+13\n+12\n+11\n+10\n+9\n+8\n+7\n+6\n+5\n+4\n+3\n+2\n+nan\ndiff --git a/tests/queries/0_stateless/03447_float_nan_order.sql b/tests/queries/0_stateless/03447_float_nan_order.sql\nnew file mode 100644\nindex 000000000000..c82e2bdbd0eb\n--- /dev/null\n+++ b/tests/queries/0_stateless/03447_float_nan_order.sql\n@@ -0,0 +1,39 @@\n+SELECT '--- short array ASC NULLS FIRST';\n+SELECT number + number / number AS a FROM numbers(3) ORDER BY a ASC NULLS FIRST;\n+SELECT '--- short array ASC NULLS LAST';\n+SELECT number + number / number AS a FROM numbers(3) ORDER BY a ASC NULLS LAST;\n+SELECT '--- short array DESC NULLS FIRST';\n+SELECT number + number / number AS a FROM numbers(3) ORDER BY a DESC NULLS FIRST;\n+SELECT '--- short array DESC NULLS LAST';\n+SELECT number + number / number AS a FROM numbers(3) ORDER BY a DESC NULLS LAST;\n+\n+-- After 256 elements radix sort is used\n+SELECT '--- long array ASC NULLS FIRST';\n+SELECT number + number / number AS a FROM numbers(256) ORDER BY a ASC NULLS FIRST;\n+SELECT '--- long array ASC NULLS LAST';\n+SELECT number + number / number AS a FROM numbers(256) ORDER BY a ASC NULLS LAST;\n+SELECT '--- long array DESC NULLS FIRST';\n+SELECT number + number / number AS a FROM numbers(256) ORDER BY a DESC NULLS FIRST;\n+SELECT '--- long array DESC NULLS LAST';\n+SELECT number + number / number AS a FROM numbers(256) ORDER BY a DESC NULLS LAST;\n+\n+-- Same for sort of ranges\n+\n+SELECT '--- short array partial ASC NULLS FIRST';\n+SELECT number + number / number AS a FROM numbers(3) ORDER BY a ASC NULLS FIRST, 1 ASC;\n+SELECT '--- short array partial ASC NULLS LAST';\n+SELECT number + number / number AS a FROM numbers(3) ORDER BY a ASC NULLS LAST, 1 ASC;\n+SELECT '--- short array partial DESC NULLS FIRST';\n+SELECT number + number / number AS a FROM numbers(3) ORDER BY a DESC NULLS FIRST, 1 ASC;\n+SELECT '--- short array partial DESC NULLS LAST';\n+SELECT number + number / number AS a FROM numbers(3) ORDER BY a DESC NULLS LAST, 1 ASC;\n+\n+-- After 256 elements radix sort is used\n+SELECT '--- long array partial ASC NULLS FIRST';\n+SELECT number + number / number AS a FROM numbers(256) ORDER BY a ASC NULLS FIRST, 1 ASC;\n+SELECT '--- long array partial ASC NULLS LAST';\n+SELECT number + number / number AS a FROM numbers(256) ORDER BY a ASC NULLS LAST, 1 ASC;\n+SELECT '--- long array partial DESC NULLS FIRST';\n+SELECT number + number / number AS a FROM numbers(256) ORDER BY a DESC NULLS FIRST, 1 ASC;\n+SELECT '--- long array partial DESC NULLS LAST';\n+SELECT number + number / number AS a FROM numbers(256) ORDER BY a DESC NULLS LAST, 1 ASC;\n",
  "problem_statement": "Logical error: 'Rows are not sorted with permutation, position 1, previous_row index 0, current_row index 1'.\nhttps://s3.amazonaws.com/clickhouse-test-reports/73641/9a0993b6f70ba2f610a5bb6cca0a92f968c6bbbc/ast_fuzzer__debug_/fatal.log\r\n\r\n```\r\n2024.12.19 22:02:34.619170 [ 893 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Logical error: 'Rows are not sorted with permutation, position 1, previous_row index 0, current_row index 1'.\r\n2024.12.19 22:02:34.619197 [ 2543 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Logical error: 'Rows are not sorted with permutation, position 1, previous_row index 0, current_row index 1'.\r\n2024.12.19 22:02:34.619257 [ 911 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Logical error: 'Rows are not sorted with permutation, position 1, previous_row index 0, current_row index 1'.\r\n2024.12.19 22:02:34.619305 [ 2554 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Logical error: 'Rows are not sorted with permutation, position 1, previous_row index 0, current_row index 1'.\r\n2024.12.19 22:02:34.619349 [ 915 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Logical error: 'Rows are not sorted with permutation, position 1, previous_row index 0, current_row index 1'.\r\n2024.12.19 22:02:34.619357 [ 914 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Logical error: 'Rows are not sorted with permutation, position 1, previous_row index 0, current_row index 1'.\r\n2024.12.19 22:02:34.619359 [ 2550 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Logical error: 'Rows are not sorted with permutation, position 1, previous_row index 0, current_row index 1'.\r\n2024.12.19 22:02:34.642288 [ 893 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Stack trace (when copying this message, always include the lines below):\r\n\r\n2024.12.19 22:02:34.642309 [ 2543 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Stack trace (when copying this message, always include the lines below):\r\n\r\n2024.12.19 22:02:34.642351 [ 911 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Stack trace (when copying this message, always include the lines below):\r\n\r\n2024.12.19 22:02:34.642397 [ 2554 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Stack trace (when copying this message, always include the lines below):\r\n\r\n2024.12.19 22:02:34.642465 [ 914 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Stack trace (when copying this message, always include the lines below):\r\n\r\n2024.12.19 22:02:34.642488 [ 915 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Stack trace (when copying this message, always include the lines below):\r\n\r\n2024.12.19 22:02:34.642681 [ 2550 ] {b4927766-ef0e-48e0-8d20-75e4b41c2939} <Fatal> : Stack trace (when copying this message, always include the lines below):\r\n\r\n2024.12.19 22:08:20.593196 [ 2555 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.12.19 22:08:20.593232 [ 2556 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.12.19 22:08:20.593310 [ 2557 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.12.19 22:08:20.593372 [ 2558 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.12.19 22:08:20.593457 [ 2559 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.12.19 22:08:20.593525 [ 2560 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.12.19 22:08:20.593624 [ 2561 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.12.19 22:08:20.593758 [ 2555 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c, architecture: x86_64) (from thread 2554) Received signal 6\r\n2024.12.19 22:08:20.593774 [ 2555 ] {} <Fatal> BaseDaemon: Signal description: Aborted\r\n2024.12.19 22:08:20.593770 [ 2556 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c, architecture: x86_64) (from thread 911) Received signal 6\r\n2024.12.19 22:08:20.593779 [ 2555 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.593780 [ 2558 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c, architecture: x86_64) (from thread 893) Received signal 6\r\n2024.12.19 22:08:20.593778 [ 2557 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c, architecture: x86_64) (from thread 915) Received signal 6\r\n2024.12.19 22:08:20.593806 [ 2558 ] {} <Fatal> BaseDaemon: Signal description: Aborted\r\n2024.12.19 22:08:20.593791 [ 2556 ] {} <Fatal> BaseDaemon: Signal description: Aborted\r\n2024.12.19 22:08:20.593797 [ 2561 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c, architecture: x86_64) (from thread 914) Received signal 6\r\n2024.12.19 22:08:20.593841 [ 2561 ] {} <Fatal> BaseDaemon: Signal description: Aborted\r\n2024.12.19 22:08:20.593801 [ 2555 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.593904 [ 2555 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.12.19 22:08:20.593785 [ 2559 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c, architecture: x86_64) (from thread 2543) Received signal 6\r\n2024.12.19 22:08:20.593922 [ 2559 ] {} <Fatal> BaseDaemon: Signal description: Aborted\r\n2024.12.19 22:08:20.593812 [ 2558 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.593927 [ 2559 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.593814 [ 2557 ] {} <Fatal> BaseDaemon: Signal description: Aborted\r\n2024.12.19 22:08:20.593947 [ 2557 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.593952 [ 2558 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.593846 [ 2561 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.593965 [ 2557 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.593810 [ 2560 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c, architecture: x86_64) (from thread 2550) Received signal 6\r\n2024.12.19 22:08:20.593946 [ 2559 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.593991 [ 2561 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.593997 [ 2560 ] {} <Fatal> BaseDaemon: Signal description: Aborted\r\n2024.12.19 22:08:20.594002 [ 2561 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.12.19 22:08:20.594026 [ 2560 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.593985 [ 2557 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.12.19 22:08:20.593825 [ 2556 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.594041 [ 2560 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.594062 [ 2560 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.12.19 22:08:20.593999 [ 2559 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.12.19 22:08:20.594071 [ 2556 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.594100 [ 2556 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.12.19 22:08:20.593967 [ 2558 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.12.19 22:08:20.595444 [ 2555 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c) (from thread 2554) (query_id: b4927766-ef0e-48e0-8d20-75e4b41c2939) (query: SELECT json.d.a, json.d.a.:`Array(Nullable(Int64))`, json.d.a.:Date, json.b.b._26.:Int64, char(toLowCardinality(toNullable(4)), 13), json.b.b, json.b.b._26.:Date FROM test__fuzz_0 ORDER BY json DESC, id ASC FORMAT JSONColumns) Received signal Aborted (6)\r\n2024.12.19 22:08:20.595484 [ 2555 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.595579 [ 2555 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.597286 [ 2556 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c) (from thread 911) (query_id: b4927766-ef0e-48e0-8d20-75e4b41c2939) (query: SELECT json.d.a, json.d.a.:`Array(Nullable(Int64))`, json.d.a.:Date, json.b.b._26.:Int64, char(toLowCardinality(toNullable(4)), 13), json.b.b, json.b.b._26.:Date FROM test__fuzz_0 ORDER BY json DESC, id ASC FORMAT JSONColumns) Received signal Aborted (6)\r\n2024.12.19 22:08:20.597332 [ 2556 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.597339 [ 2559 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c) (from thread 2543) (query_id: b4927766-ef0e-48e0-8d20-75e4b41c2939) (query: SELECT json.d.a, json.d.a.:`Array(Nullable(Int64))`, json.d.a.:Date, json.b.b._26.:Int64, char(toLowCardinality(toNullable(4)), 13), json.b.b, json.b.b._26.:Date FROM test__fuzz_0 ORDER BY json DESC, id ASC FORMAT JSONColumns) Received signal Aborted (6)\r\n2024.12.19 22:08:20.597361 [ 2556 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.597381 [ 2560 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c) (from thread 2550) (query_id: b4927766-ef0e-48e0-8d20-75e4b41c2939) (query: SELECT json.d.a, json.d.a.:`Array(Nullable(Int64))`, json.d.a.:Date, json.b.b._26.:Int64, char(toLowCardinality(toNullable(4)), 13), json.b.b, json.b.b._26.:Date FROM test__fuzz_0 ORDER BY json DESC, id ASC FORMAT JSONColumns) Received signal Aborted (6)\r\n2024.12.19 22:08:20.597385 [ 2559 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.597411 [ 2560 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.597428 [ 2560 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.597430 [ 2559 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.597436 [ 2558 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c) (from thread 893) (query_id: b4927766-ef0e-48e0-8d20-75e4b41c2939) (query: SELECT json.d.a, json.d.a.:`Array(Nullable(Int64))`, json.d.a.:Date, json.b.b._26.:Int64, char(toLowCardinality(toNullable(4)), 13), json.b.b, json.b.b._26.:Date FROM test__fuzz_0 ORDER BY json DESC, id ASC FORMAT JSONColumns) Received signal Aborted (6)\r\n2024.12.19 22:08:20.597443 [ 2557 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c) (from thread 915) (query_id: b4927766-ef0e-48e0-8d20-75e4b41c2939) (query: SELECT json.d.a, json.d.a.:`Array(Nullable(Int64))`, json.d.a.:Date, json.b.b._26.:Int64, char(toLowCardinality(toNullable(4)), 13), json.b.b, json.b.b._26.:Date FROM test__fuzz_0 ORDER BY json DESC, id ASC FORMAT JSONColumns) Received signal Aborted (6)\r\n2024.12.19 22:08:20.597482 [ 2558 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.597507 [ 2558 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.597552 [ 2557 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.597588 [ 2557 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.597626 [ 2561 ] {} <Fatal> BaseDaemon: (version 25.1.1.712, build id: 5E6149354CF2970470201A674955D0DA15B46A74, git hash: 45cac70e1f8eb76eaa5d83129444dfcf0a09586c) (from thread 914) (query_id: b4927766-ef0e-48e0-8d20-75e4b41c2939) (query: SELECT json.d.a, json.d.a.:`Array(Nullable(Int64))`, json.d.a.:Date, json.b.b._26.:Int64, char(toLowCardinality(toNullable(4)), 13), json.b.b, json.b.b._26.:Date FROM test__fuzz_0 ORDER BY json DESC, id ASC FORMAT JSONColumns) Received signal Aborted (6)\r\n2024.12.19 22:08:20.597662 [ 2561 ] {} <Fatal> BaseDaemon: \r\n2024.12.19 22:08:20.597688 [ 2561 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000ce66ac8 0x000000000d0fad54 0x00007fdf92203520 0x00007fdf922579fd 0x00007fdf92203476 0x00007fdf921e97f3 0x000000000ce34dbb 0x000000000ce3561c 0x000000000759b4ec 0x0000000012cf97eb 0x0000000012cf8b96 0x0000000012cf7fb8 0x0000000014730a8d 0x000000000ecbd0d3 0x000000001449bbff 0x00000000144b78ae 0x00000000144ac8b0 0x00000000144acb7e 0x00000000144ad57f 0x000000000cef49d3 0x000000000cef9d82 0x000000000cef24e0 0x000000000cef7df2 0x00007fdf92255ac3 0x00007fdf922e7850\r\n2024.12.19 22:08:20.629924 [ 2561 ] {} <Fatal> BaseDaemon: 0.0. inlined from /build/src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\r\n2024.12.19 22:08:20.629963 [ 2556 ] {} <Fatal> BaseDaemon: 0.0. inlined from /build/src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\r\n2024.12.19 22:08:20.629924 [ 2555 ] {} <Fatal> BaseDaemon: 0.0. inlined from /build/src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\r\n2024.12.19 22:08:20.629941 [ 2559 ] {} <Fatal> BaseDaemon: 0.0. inlined from /build/src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\r\n2024.12.19 22:08:20.629925 [ 2558 ] {} <Fatal> BaseDaemon: 0.0. inlined from /build/src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\r\n2024.12.19 22:08:20.630823 [ 2556 ] {} <Fatal> BaseDaemon: 0. /build/src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ce66ac8\r\n2024.12.19 22:08:20.630828 [ 2555 ] {} <Fatal> BaseDaemon: 0. /build/src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ce66ac8\r\n2024.12.19 22:08:20.630836 [ 2561 ] {} <Fatal> BaseDaemon: 0. /build/src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ce66ac8\r\n2024.12.19 22:08:20.630990 [ 2560 ] {} <Fatal> BaseDaemon: 0.0. inlined from /build/src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\r\n2024.12.19 22:08:20.631022 [ 2560 ] {} <Fatal> BaseDaemon: 0. /build/src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ce66ac8\r\n2024.12.19 22:08:20.631044 [ 2559 ] {} <Fatal> BaseDaemon: 0. /build/src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ce66ac8\r\n2024.12.19 22:08:20.631941 [ 2558 ] {} <Fatal> BaseDaemon: 0. /build/src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ce66ac8\r\n2024.12.19 22:08:20.635387 [ 2557 ] {} <Fatal> BaseDaemon: 0.0. inlined from /build/src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\r\n2024.12.19 22:08:20.635432 [ 2557 ] {} <Fatal> BaseDaemon: 0. /build/src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ce66ac8\r\n2024.12.19 22:08:20.648683 [ 2561 ] {} <Fatal> BaseDaemon: 1. /build/src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x000000000d0fad54\r\n2024.12.19 22:08:20.648735 [ 2561 ] {} <Fatal> BaseDaemon: 2. ? @ 0x00007fdf92203520\r\n2024.12.19 22:08:20.648753 [ 2561 ] {} <Fatal> BaseDaemon: 3. ? @ 0x00007fdf922579fd\r\n2024.12.19 22:08:20.648785 [ 2561 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007fdf92203476\r\n2024.12.19 22:08:20.648806 [ 2561 ] {} <Fatal> BaseDaemon: 5. ? @ 0x00007fdf921e97f3\r\n2024.12.19 22:08:20.652854 [ 2555 ] {} <Fatal> BaseDaemon: 1. /build/src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x000000000d0fad54\r\n2024.12.19 22:08:20.652909 [ 2555 ] {} <Fatal> BaseDaemon: 2. ? @ 0x00007fdf92203520\r\n2024.12.19 22:08:20.652937 [ 2555 ] {} <Fatal> BaseDaemon: 3. ? @ 0x00007fdf922579fd\r\n2024.12.19 22:08:20.652968 [ 2555 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007fdf92203476\r\n2024.12.19 22:08:20.652987 [ 2555 ] {} <Fatal> BaseDaemon: 5. ? @ 0x00007fdf921e97f3\r\n2024.12.19 22:08:20.658501 [ 2557 ] {} <Fatal> BaseDaemon: 1. /build/src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x000000000d0fad54\r\n2024.12.19 22:08:20.658567 [ 2557 ] {} <Fatal> BaseDaemon: 2. ? @ 0x00007fdf92203520\r\n2024.12.19 22:08:20.658585 [ 2557 ] {} <Fatal> BaseDaemon: 3. ? @ 0x00007fdf922579fd\r\n2024.12.19 22:08:20.658605 [ 2557 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007fdf92203476\r\n2024.12.19 22:08:20.658617 [ 2557 ] {} <Fatal> BaseDaemon: 5. ? @ 0x00007fdf921e97f3\r\n2024.12.19 22:08:20.663304 [ 2556 ] {} <Fatal> BaseDaemon: 1. /build/src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x000000000d0fad54\r\n2024.12.19 22:08:20.663370 [ 2556 ] {} <Fatal> BaseDaemon: 2. ? @ 0x00007fdf92203520\r\n2024.12.19 22:08:20.663405 [ 2556 ] {} <Fatal> BaseDaemon: 3. ? @ 0x00007fdf922579fd\r\n2024.12.19 22:08:20.663431 [ 2556 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007fdf92203476\r\n2024.12.19 22:08:20.663454 [ 2556 ] {} <Fatal> BaseDaemon: 5. ? @ 0x00007fdf921e97f3\r\n2024.12.19 22:08:20.664484 [ 2558 ] {} <Fatal> BaseDaemon: 1. /build/src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x000000000d0fad54\r\n2024.12.19 22:08:20.664533 [ 2558 ] {} <Fatal> BaseDaemon: 2. ? @ 0x00007fdf92203520\r\n2024.12.19 22:08:20.664554 [ 2558 ] {} <Fatal> BaseDaemon: 3. ? @ 0x00007fdf922579fd\r\n2024.12.19 22:08:20.664584 [ 2558 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007fdf92203476\r\n2024.12.19 22:08:20.664605 [ 2558 ] {} <Fatal> BaseDaemon: 5. ? @ 0x00007fdf921e97f3\r\n2024.12.19 22:08:20.672069 [ 2560 ] {} <Fatal> BaseDaemon: 1. /build/src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x000000000d0fad54\r\n2024.12.19 22:08:20.672130 [ 2560 ] {} <Fatal> BaseDaemon: 2. ? @ 0x00007fdf92203520\r\n2024.12.19 22:08:20.672173 [ 2560 ] {} <Fatal> BaseDaemon: 3. ? @ 0x00007fdf922579fd\r\n2024.12.19 22:08:20.672201 [ 2560 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007fdf92203476\r\n2024.12.19 22:08:20.672222 [ 2560 ] {} <Fatal> BaseDaemon: 5. ? @ 0x00007fdf921e97f3\r\n2024.12.19 22:08:20.681548 [ 2559 ] {} <Fatal> BaseDaemon: 1. /build/src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x000000000d0fad54\r\n2024.12.19 22:08:20.681627 [ 2559 ] {} <Fatal> BaseDaemon: 2. ? @ 0x00007fdf92203520\r\n2024.12.19 22:08:20.681662 [ 2559 ] {} <Fatal> BaseDaemon: 3. ? @ 0x00007fdf922579fd\r\n2024.12.19 22:08:20.681692 [ 2559 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007fdf92203476\r\n2024.12.19 22:08:20.681712 [ 2559 ] {} <Fatal> BaseDaemon: 5. ? @ 0x00007fdf921e97f3\r\n\r\n2024.12.19 22:08:20.710387 [ 2559 ] {} <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000ce34dbb\r\n\r\n2024.12.19 22:08:20.714923 [ 2555 ] {} <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000ce34dbb\r\n2024.12.19 22:08:20.716634 [ 2558 ] {} <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000ce34dbb\r\n2024.12.19 22:08:20.722064 [ 2557 ] {} <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000ce34dbb\r\n2024.12.19 22:08:20.723572 [ 2556 ] {} <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000ce34dbb\r\n2024.12.19 22:08:20.726154 [ 2561 ] {} <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000ce34dbb\r\n2024.12.19 22:08:20.738179 [ 2559 ] {} <Fatal> BaseDaemon: 7.0. inlined from /build/src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)\r\n2024.12.19 22:08:20.738234 [ 2559 ] {} <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000ce3561c\r\n2024.12.19 22:08:20.743849 [ 2560 ] {} <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000ce34dbb\r\n2024.12.19 22:08:20.748939 [ 2557 ] {} <Fatal> BaseDaemon: 7.0. inlined from /build/src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)\r\n2024.12.19 22:08:20.748990 [ 2557 ] {} <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000ce3561c\r\n\r\n2024.12.19 22:08:20.759271 [ 2559 ] {} <Fatal> BaseDaemon: 8.0. inlined from /build/src/Common/Exception.h:105: Exception\r\n2024.12.19 22:08:20.759323 [ 2559 ] {} <Fatal> BaseDaemon: 8. /build/src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000759b4ec\r\n\r\n2024.12.19 22:08:20.762261 [ 2557 ] {} <Fatal> BaseDaemon: 8.0. inlined from /build/src/Common/Exception.h:105: Exception\r\n2024.12.19 22:08:20.762315 [ 2557 ] {} <Fatal> BaseDaemon: 8. /build/src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000759b4ec\r\n\r\n2024.12.19 22:08:20.764411 [ 2555 ] {} <Fatal> BaseDaemon: 7.0. inlined from /build/src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)\r\n2024.12.19 22:08:20.764453 [ 2555 ] {} <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000ce3561c\r\n2024.12.19 22:08:20.771721 [ 2559 ] {} <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:123: DB::Exception::Exception<unsigned long&, unsigned long const&, unsigned long const&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<unsigned long const&>::type, std::type_identity<unsigned long const&>::type>, unsigned long&, unsigned long const&, unsigned long const&) @ 0x0000000012cf97eb\r\n2024.12.19 22:08:20.771987 [ 2561 ] {} <Fatal> BaseDaemon: 7.0. inlined from /build/src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)\r\n2024.12.19 22:08:20.772025 [ 2561 ] {} <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000ce3561c\r\n2024.12.19 22:08:20.772126 [ 2560 ] {} <Fatal> BaseDaemon: 7.0. inlined from /build/src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)\r\n2024.12.19 22:08:20.772165 [ 2560 ] {} <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000ce3561c\r\n2024.12.19 22:08:20.772280 [ 2557 ] {} <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:123: DB::Exception::Exception<unsigned long&, unsigned long const&, unsigned long const&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<unsigned long const&>::type, std::type_identity<unsigned long const&>::type>, unsigned long&, unsigned long const&, unsigned long const&) @ 0x0000000012cf97eb\r\n2024.12.19 22:08:20.776952 [ 2555 ] {} <Fatal> BaseDaemon: 8.0. inlined from /build/src/Common/Exception.h:105: Exception\r\n2024.12.19 22:08:20.776991 [ 2555 ] {} <Fatal> BaseDaemon: 8. /build/src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000759b4ec\r\n2024.12.19 22:08:20.784879 [ 2560 ] {} <Fatal> BaseDaemon: 8.0. inlined from /build/src/Common/Exception.h:105: Exception\r\n2024.12.19 22:08:20.784912 [ 2560 ] {} <Fatal> BaseDaemon: 8. /build/src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000759b4ec\r\n2024.12.19 22:08:20.785033 [ 2561 ] {} <Fatal> BaseDaemon: 8.0. inlined from /build/src/Common/Exception.h:105: Exception\r\n2024.12.19 22:08:20.785074 [ 2561 ] {} <Fatal> BaseDaemon: 8. /build/src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000759b4ec\r\n2024.12.19 22:08:20.785211 [ 2558 ] {} <Fatal> BaseDaemon: 7.0. inlined from /build/src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)\r\n2024.12.19 22:08:20.785252 [ 2558 ] {} <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000ce3561c\r\n2024.12.19 22:08:20.785417 [ 2556 ] {} <Fatal> BaseDaemon: 7.0. inlined from /build/src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)\r\n2024.12.19 22:08:20.785460 [ 2556 ] {} <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000ce3561c\r\n2024.12.19 22:08:20.785909 [ 2559 ] {} <Fatal> BaseDaemon: 10.0. inlined from /build/src/Interpreters/sortBlock.cpp:293: void DB::(anonymous namespace)::checkSortedWithPermutationImpl<DB::(anonymous namespace)::PartialSortingLessImpl<false>>(unsigned long, DB::(anonymous namespace)::PartialSortingLessImpl<false>, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&)\r\n2024.12.19 22:08:20.785949 [ 2559 ] {} <Fatal> BaseDaemon: 10. /build/src/Interpreters/sortBlock.cpp:326: DB::(anonymous namespace)::checkSortedWithPermutation(DB::Block const&, DB::SortDescription const&, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&) @ 0x0000000012cf8b96\r\n2024.12.19 22:08:20.786808 [ 2555 ] {} <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:123: DB::Exception::Exception<unsigned long&, unsigned long const&, unsigned long const&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<unsigned long const&>::type, std::type_identity<unsigned long const&>::type>, unsigned long&, unsigned long const&, unsigned long const&) @ 0x0000000012cf97eb\r\n2024.12.19 22:08:20.795078 [ 2560 ] {} <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:123: DB::Exception::Exception<unsigned long&, unsigned long const&, unsigned long const&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<unsigned long const&>::type, std::type_identity<unsigned long const&>::type>, unsigned long&, unsigned long const&, unsigned long const&) @ 0x0000000012cf97eb\r\n2024.12.19 22:08:20.795282 [ 2561 ] {} <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:123: DB::Exception::Exception<unsigned long&, unsigned long const&, unsigned long const&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<unsigned long const&>::type, std::type_identity<unsigned long const&>::type>, unsigned long&, unsigned long const&, unsigned long const&) @ 0x0000000012cf97eb\r\n2024.12.19 22:08:20.795653 [ 2557 ] {} <Fatal> BaseDaemon: 10.0. inlined from /build/src/Interpreters/sortBlock.cpp:293: void DB::(anonymous namespace)::checkSortedWithPermutationImpl<DB::(anonymous namespace)::PartialSortingLessImpl<false>>(unsigned long, DB::(anonymous namespace)::PartialSortingLessImpl<false>, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&)\r\n2024.12.19 22:08:20.795693 [ 2557 ] {} <Fatal> BaseDaemon: 10. /build/src/Interpreters/sortBlock.cpp:326: DB::(anonymous namespace)::checkSortedWithPermutation(DB::Block const&, DB::SortDescription const&, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&) @ 0x0000000012cf8b96\r\n2024.12.19 22:08:20.797815 [ 2558 ] {} <Fatal> BaseDaemon: 8.0. inlined from /build/src/Common/Exception.h:105: Exception\r\n2024.12.19 22:08:20.797852 [ 2558 ] {} <Fatal> BaseDaemon: 8. /build/src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000759b4ec\r\n2024.12.19 22:08:20.798834 [ 2559 ] {} <Fatal> BaseDaemon: 11. /build/src/Interpreters/sortBlock.cpp:340: DB::sortBlock(DB::Block&, DB::SortDescription const&, unsigned long) @ 0x0000000012cf7fb8\r\n2024.12.19 22:08:20.799593 [ 2555 ] {} <Fatal> BaseDaemon: 10.0. inlined from /build/src/Interpreters/sortBlock.cpp:293: void DB::(anonymous namespace)::checkSortedWithPermutationImpl<DB::(anonymous namespace)::PartialSortingLessImpl<false>>(unsigned long, DB::(anonymous namespace)::PartialSortingLessImpl<false>, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&)\r\n2024.12.19 22:08:20.799628 [ 2555 ] {} <Fatal> BaseDaemon: 10. /build/src/Interpreters/sortBlock.cpp:326: DB::(anonymous namespace)::checkSortedWithPermutation(DB::Block const&, DB::SortDescription const&, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&) @ 0x0000000012cf8b96\r\n2024.12.19 22:08:20.807511 [ 2556 ] {} <Fatal> BaseDaemon: 8.0. inlined from /build/src/Common/Exception.h:105: Exception\r\n2024.12.19 22:08:20.807558 [ 2556 ] {} <Fatal> BaseDaemon: 8. /build/src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000759b4ec\r\n2024.12.19 22:08:20.808207 [ 2558 ] {} <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:123: DB::Exception::Exception<unsigned long&, unsigned long const&, unsigned long const&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<unsigned long const&>::type, std::type_identity<unsigned long const&>::type>, unsigned long&, unsigned long const&, unsigned long const&) @ 0x0000000012cf97eb\r\n2024.12.19 22:08:20.808570 [ 2560 ] {} <Fatal> BaseDaemon: 10.0. inlined from /build/src/Interpreters/sortBlock.cpp:293: void DB::(anonymous namespace)::checkSortedWithPermutationImpl<DB::(anonymous namespace)::PartialSortingLessImpl<false>>(unsigned long, DB::(anonymous namespace)::PartialSortingLessImpl<false>, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&)\r\n2024.12.19 22:08:20.808611 [ 2560 ] {} <Fatal> BaseDaemon: 10. /build/src/Interpreters/sortBlock.cpp:326: DB::(anonymous namespace)::checkSortedWithPermutation(DB::Block const&, DB::SortDescription const&, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&) @ 0x0000000012cf8b96\r\n2024.12.19 22:08:20.808994 [ 2561 ] {} <Fatal> BaseDaemon: 10.0. inlined from /build/src/Interpreters/sortBlock.cpp:293: void DB::(anonymous namespace)::checkSortedWithPermutationImpl<DB::(anonymous namespace)::PartialSortingLessImpl<false>>(unsigned long, DB::(anonymous namespace)::PartialSortingLessImpl<false>, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&)\r\n2024.12.19 22:08:20.809036 [ 2561 ] {} <Fatal> BaseDaemon: 10. /build/src/Interpreters/sortBlock.cpp:326: DB::(anonymous namespace)::checkSortedWithPermutation(DB::Block const&, DB::SortDescription const&, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&) @ 0x0000000012cf8b96\r\n2024.12.19 22:08:20.809088 [ 2557 ] {} <Fatal> BaseDaemon: 11. /build/src/Interpreters/sortBlock.cpp:340: DB::sortBlock(DB::Block&, DB::SortDescription const&, unsigned long) @ 0x0000000012cf7fb8\r\n2024.12.19 22:08:20.812893 [ 2555 ] {} <Fatal> BaseDaemon: 11. /build/src/Interpreters/sortBlock.cpp:340: DB::sortBlock(DB::Block&, DB::SortDescription const&, unsigned long) @ 0x0000000012cf7fb8\r\n2024.12.19 22:08:20.817823 [ 2556 ] {} <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:123: DB::Exception::Exception<unsigned long&, unsigned long const&, unsigned long const&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<unsigned long const&>::type, std::type_identity<unsigned long const&>::type>, unsigned long&, unsigned long const&, unsigned long const&) @ 0x0000000012cf97eb\r\n2024.12.19 22:08:20.821978 [ 2558 ] {} <Fatal> BaseDaemon: 10.0. inlined from /build/src/Interpreters/sortBlock.cpp:293: void DB::(anonymous namespace)::checkSortedWithPermutationImpl<DB::(anonymous namespace)::PartialSortingLessImpl<false>>(unsigned long, DB::(anonymous namespace)::PartialSortingLessImpl<false>, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&)\r\n2024.12.19 22:08:20.822023 [ 2558 ] {} <Fatal> BaseDaemon: 10. /build/src/Interpreters/sortBlock.cpp:326: DB::(anonymous namespace)::checkSortedWithPermutation(DB::Block const&, DB::SortDescription const&, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&) @ 0x0000000012cf8b96\r\n2024.12.19 22:08:20.822354 [ 2560 ] {} <Fatal> BaseDaemon: 11. /build/src/Interpreters/sortBlock.cpp:340: DB::sortBlock(DB::Block&, DB::SortDescription const&, unsigned long) @ 0x0000000012cf7fb8\r\n2024.12.19 22:08:20.823304 [ 2561 ] {} <Fatal> BaseDaemon: 11. /build/src/Interpreters/sortBlock.cpp:340: DB::sortBlock(DB::Block&, DB::SortDescription const&, unsigned long) @ 0x0000000012cf7fb8\r\n2024.12.19 22:08:20.828507 [ 2555 ] {} <Fatal> BaseDaemon: 12. /build/src/Processors/Transforms/PartialSortingTransform.cpp:137: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x0000000014730a8d\r\n\r\n2024.12.19 22:08:20.830429 [ 2556 ] {} <Fatal> BaseDaemon: 10.0. inlined from /build/src/Interpreters/sortBlock.cpp:293: void DB::(anonymous namespace)::checkSortedWithPermutationImpl<DB::(anonymous namespace)::PartialSortingLessImpl<false>>(unsigned long, DB::(anonymous namespace)::PartialSortingLessImpl<false>, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&)\r\n2024.12.19 22:08:20.830477 [ 2556 ] {} <Fatal> BaseDaemon: 10. /build/src/Interpreters/sortBlock.cpp:326: DB::(anonymous namespace)::checkSortedWithPermutation(DB::Block const&, DB::SortDescription const&, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&) @ 0x0000000012cf8b96\r\n2024.12.19 22:08:20.832284 [ 2557 ] {} <Fatal> BaseDaemon: 12. /build/src/Processors/Transforms/PartialSortingTransform.cpp:137: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x0000000014730a8d\r\n2024.12.19 22:08:20.835676 [ 2558 ] {} <Fatal> BaseDaemon: 11. /build/src/Interpreters/sortBlock.cpp:340: DB::sortBlock(DB::Block&, DB::SortDescription const&, unsigned long) @ 0x0000000012cf7fb8\r\n2024.12.19 22:08:20.837017 [ 2559 ] {} <Fatal> BaseDaemon: 12. /build/src/Processors/Transforms/PartialSortingTransform.cpp:137: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x0000000014730a8d\r\n2024.12.19 22:08:20.837998 [ 2560 ] {} <Fatal> BaseDaemon: 12. /build/src/Processors/Transforms/PartialSortingTransform.cpp:137: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x0000000014730a8d\r\n2024.12.19 22:08:20.838299 [ 2561 ] {} <Fatal> BaseDaemon: 12. /build/src/Processors/Transforms/PartialSortingTransform.cpp:137: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x0000000014730a8d\r\n2024.12.19 22:08:20.843219 [ 2556 ] {} <Fatal> BaseDaemon: 11. /build/src/Interpreters/sortBlock.cpp:340: DB::sortBlock(DB::Block&, DB::SortDescription const&, unsigned long) @ 0x0000000012cf7fb8\r\n2024.12.19 22:08:20.850936 [ 2558 ] {} <Fatal> BaseDaemon: 12. /build/src/Processors/Transforms/PartialSortingTransform.cpp:137: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x0000000014730a8d\r\n2024.12.19 22:08:20.854119 [ 2557 ] {} <Fatal> BaseDaemon: 13. /build/src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000ecbd0d3\r\n2024.12.19 22:08:20.854140 [ 2559 ] {} <Fatal> BaseDaemon: 13. /build/src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000ecbd0d3\r\n2024.12.19 22:08:20.855415 [ 2560 ] {} <Fatal> BaseDaemon: 13. /build/src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000ecbd0d3\r\n2024.12.19 22:08:20.855566 [ 2561 ] {} <Fatal> BaseDaemon: 13. /build/src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000ecbd0d3\r\n2024.12.19 22:08:20.858003 [ 2555 ] {} <Fatal> BaseDaemon: 13. /build/src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000ecbd0d3\r\n2024.12.19 22:08:20.858313 [ 2556 ] {} <Fatal> BaseDaemon: 12. /build/src/Processors/Transforms/PartialSortingTransform.cpp:137: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x0000000014730a8d\r\n2024.12.19 22:08:20.866508 [ 2559 ] {} <Fatal> BaseDaemon: 14. /build/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001449bbff\r\n2024.12.19 22:08:20.866581 [ 2557 ] {} <Fatal> BaseDaemon: 14. /build/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001449bbff\r\n2024.12.19 22:08:20.867342 [ 2560 ] {} <Fatal> BaseDaemon: 14. /build/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001449bbff\r\n2024.12.19 22:08:20.867554 [ 2561 ] {} <Fatal> BaseDaemon: 14. /build/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001449bbff\r\n2024.12.19 22:08:20.868185 [ 2558 ] {} <Fatal> BaseDaemon: 13. /build/src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000ecbd0d3\r\n2024.12.19 22:08:20.873463 [ 2557 ] {} <Fatal> BaseDaemon: 15.0. inlined from /build/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)\r\n2024.12.19 22:08:20.873487 [ 2557 ] {} <Fatal> BaseDaemon: 15. /build/src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x00000000144b78ae\r\n2024.12.19 22:08:20.873592 [ 2559 ] {} <Fatal> BaseDaemon: 15.0. inlined from /build/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)\r\n2024.12.19 22:08:20.873622 [ 2559 ] {} <Fatal> BaseDaemon: 15. /build/src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x00000000144b78ae\r\n2024.12.19 22:08:20.873867 [ 2560 ] {} <Fatal> BaseDaemon: 15.0. inlined from /build/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)\r\n2024.12.19 22:08:20.873891 [ 2560 ] {} <Fatal> BaseDaemon: 15. /build/src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x00000000144b78ae\r\n2024.12.19 22:08:20.873964 [ 2561 ] {} <Fatal> BaseDaemon: 15.0. inlined from /build/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)\r\n2024.12.19 22:08:20.873997 [ 2561 ] {} <Fatal> BaseDaemon: 15. /build/src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x00000000144b78ae\r\n2024.12.19 22:08:20.874807 [ 2556 ] {} <Fatal> BaseDaemon: 13. /build/src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000ecbd0d3\r\n2024.12.19 22:08:20.880247 [ 2558 ] {} <Fatal> BaseDaemon: 14. /build/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001449bbff\r\n2024.12.19 22:08:20.881709 [ 2555 ] {} <Fatal> BaseDaemon: 14. /build/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001449bbff\r\n2024.12.19 22:08:20.886649 [ 2556 ] {} <Fatal> BaseDaemon: 14. /build/src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001449bbff\r\n2024.12.19 22:08:20.886835 [ 2558 ] {} <Fatal> BaseDaemon: 15.0. inlined from /build/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)\r\n2024.12.19 22:08:20.886867 [ 2558 ] {} <Fatal> BaseDaemon: 15. /build/src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x00000000144b78ae\r\n2024.12.19 22:08:20.888325 [ 2555 ] {} <Fatal> BaseDaemon: 15.0. inlined from /build/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)\r\n2024.12.19 22:08:20.888350 [ 2555 ] {} <Fatal> BaseDaemon: 15. /build/src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x00000000144b78ae\r\n2024.12.19 22:08:20.893216 [ 2556 ] {} <Fatal> BaseDaemon: 15.0. inlined from /build/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)\r\n2024.12.19 22:08:20.893245 [ 2556 ] {} <Fatal> BaseDaemon: 15. /build/src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x00000000144b78ae\r\n2024.12.19 22:08:20.893449 [ 2559 ] {} <Fatal> BaseDaemon: 16. /build/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000144ac8b0\r\n2024.12.19 22:08:20.893477 [ 2561 ] {} <Fatal> BaseDaemon: 16. /build/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000144ac8b0\r\n2024.12.19 22:08:20.893486 [ 2557 ] {} <Fatal> BaseDaemon: 16. /build/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000144ac8b0\r\n2024.12.19 22:08:20.893539 [ 2560 ] {} <Fatal> BaseDaemon: 16. /build/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000144ac8b0\r\n2024.12.19 22:08:20.906476 [ 2558 ] {} <Fatal> BaseDaemon: 16. /build/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000144ac8b0\r\n2024.12.19 22:08:20.908176 [ 2555 ] {} <Fatal> BaseDaemon: 16. /build/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000144ac8b0\r\n2024.12.19 22:08:20.911916 [ 2559 ] {} <Fatal> BaseDaemon: 17. /build/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x00000000144acb7e\r\n2024.12.19 22:08:20.912098 [ 2560 ] {} <Fatal> BaseDaemon: 17. /build/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x00000000144acb7e\r\n2024.12.19 22:08:20.912444 [ 2557 ] {} <Fatal> BaseDaemon: 17. /build/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x00000000144acb7e\r\n2024.12.19 22:08:20.912459 [ 2561 ] {} <Fatal> BaseDaemon: 17. /build/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x00000000144acb7e\r\n2024.12.19 22:08:20.912873 [ 2556 ] {} <Fatal> BaseDaemon: 16. /build/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000144ac8b0\r\n2024.12.19 22:08:20.925402 [ 2558 ] {} <Fatal> BaseDaemon: 17. /build/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x00000000144acb7e\r\n2024.12.19 22:08:20.927191 [ 2555 ] {} <Fatal> BaseDaemon: 17. /build/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x00000000144acb7e\r\n2024.12.19 22:08:20.931400 [ 2556 ] {} <Fatal> BaseDaemon: 17. /build/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x00000000144acb7e\r\n2024.12.19 22:08:20.935460 [ 2560 ] {} <Fatal> BaseDaemon: 18.0. inlined from /build/src/Processors/Executors/PipelineExecutor.cpp:404: operator()\r\n2024.12.19 22:08:20.935461 [ 2559 ] {} <Fatal> BaseDaemon: 18.0. inlined from /build/src/Processors/Executors/PipelineExecutor.cpp:404: operator()\r\n2024.12.19 22:08:20.935514 [ 2560 ] {} <Fatal> BaseDaemon: 18.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?\r\n2024.12.19 22:08:20.935522 [ 2559 ] {} <Fatal> BaseDaemon: 18.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?\r\n2024.12.19 22:08:20.935547 [ 2560 ] {} <Fatal> BaseDaemon: 18.2. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?\r\n2024.12.19 22:08:20.935566 [ 2559 ] {} <Fatal> BaseDaemon: 18.2. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?\r\n2024.12.19 22:08:20.935587 [ 2560 ] {} <Fatal> BaseDaemon: 18.3. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:235: ?\r\n2024.12.19 22:08:20.935592 [ 2559 ] {} <Fatal> BaseDaemon: 18.3. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:235: ?\r\n2024.12.19 22:08:20.935608 [ 2559 ] {} <Fatal> BaseDaemon: 18. /build/contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000144ad57f\r\n2024.12.19 22:08:20.935618 [ 2560 ] {} <Fatal> BaseDaemon: 18. /build/contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000144ad57f\r\n2024.12.19 22:08:20.935640 [ 2557 ] {} <Fatal> BaseDaemon: 18.0. inlined from /build/src/Processors/Executors/PipelineExecutor.cpp:404: operator()\r\n2024.12.19 22:08:20.935640 [ 2561 ] {} <Fatal> BaseDaemon: 18.0. inlined from /build/src/Processors/Executors/PipelineExecutor.cpp:404: operator()\r\n2024.12.19 22:08:20.935688 [ 2557 ] {} <Fatal> BaseDaemon: 18.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?\r\n2024.12.19 22:08:20.935694 [ 2561 ] {} <Fatal> BaseDaemon: 18.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?\r\n2024.12.19 22:08:20.935701 [ 2557 ] {} <Fatal> BaseDaemon: 18.2. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?\r\n2024.12.19 22:08:20.935708 [ 2561 ] {} <Fatal> BaseDaemon: 18.2. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?\r\n2024.12.19 22:08:20.935715 [ 2557 ] {} <Fatal> BaseDaemon: 18.3. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:235: ?\r\n2024.12.19 22:08:20.935722 [ 2561 ] {} <Fatal> BaseDaemon: 18.3. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:235: ?\r\n2024.12.19 22:08:20.935727 [ 2557 ] {} <Fatal> BaseDaemon: 18. /build/contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000144ad57f\r\n2024.12.19 22:08:20.935735 [ 2561 ] {} <Fatal> BaseDaemon: 18. /build/contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000144ad57f\r\n2024.12.19 22:08:20.948327 [ 2558 ] {} <Fatal> BaseDaemon: 18.0. inlined from /build/src/Processors/Executors/PipelineExecutor.cpp:404: operator()\r\n2024.12.19 22:08:20.948396 [ 2558 ] {} <Fatal> BaseDaemon: 18.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?\r\n2024.12.19 22:08:20.948411 [ 2558 ] {} <Fatal> BaseDaemon: 18.2. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?\r\n2024.12.19 22:08:20.948428 [ 2558 ] {} <Fatal> BaseDaemon: 18.3. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:235: ?\r\n2024.12.19 22:08:20.948442 [ 2558 ] {} <Fatal> BaseDaemon: 18. /build/contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000144ad57f\r\n2024.12.19 22:08:20.950431 [ 2555 ] {} <Fatal> BaseDaemon: 18.0. inlined from /build/src/Processors/Executors/PipelineExecutor.cpp:404: operator()\r\n2024.12.19 22:08:20.950471 [ 2555 ] {} <Fatal> BaseDaemon: 18.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?\r\n2024.12.19 22:08:20.950482 [ 2555 ] {} <Fatal> BaseDaemon: 18.2. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?\r\n2024.12.19 22:08:20.950493 [ 2555 ] {} <Fatal> BaseDaemon: 18.3. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:235: ?\r\n2024.12.19 22:08:20.950505 [ 2555 ] {} <Fatal> BaseDaemon: 18. /build/contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000144ad57f\r\n2024.12.19 22:08:20.950753 [ 2560 ] {} <Fatal> BaseDaemon: 19.0. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:848: ?\r\n2024.12.19 22:08:20.950754 [ 2559 ] {} <Fatal> BaseDaemon: 19.0. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:848: ?\r\n2024.12.19 22:08:20.950806 [ 2560 ] {} <Fatal> BaseDaemon: 19.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?\r\n2024.12.19 22:08:20.950807 [ 2557 ] {} <Fatal> BaseDaemon: 19.0. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:848: ?\r\n2024.12.19 22:08:20.950833 [ 2560 ] {} <Fatal> BaseDaemon: 19. /build/src/Common/ThreadPool.cpp:775: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000000cef49d3\r\n2024.12.19 22:08:20.950806 [ 2561 ] {} <Fatal> BaseDaemon: 19.0. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:848: ?\r\n2024.12.19 22:08:20.950831 [ 2559 ] {} <Fatal> BaseDaemon: 19.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?\r\n2024.12.19 22:08:20.950864 [ 2557 ] {} <Fatal> BaseDaemon: 19.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?\r\n2024.12.19 22:08:20.950875 [ 2561 ] {} <Fatal> BaseDaemon: 19.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?\r\n2024.12.19 22:08:20.950883 [ 2557 ] {} <Fatal> BaseDaemon: 19. /build/src/Common/ThreadPool.cpp:775: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000000cef49d3\r\n2024.12.19 22:08:20.950883 [ 2559 ] {} <Fatal> BaseDaemon: 19. /build/src/Common/ThreadPool.cpp:775: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000000cef49d3\r\n2024.12.19 22:08:20.950893 [ 2561 ] {} <Fatal> BaseDaemon: 19. /build/src/Common/ThreadPool.cpp:775: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000000cef49d3\r\n2024.12.19 22:08:20.954588 [ 2556 ] {} <Fatal> BaseDaemon: 18.0. inlined from /build/src/Processors/Executors/PipelineExecutor.cpp:404: operator()\r\n2024.12.19 22:08:20.954628 [ 2556 ] {} <Fatal> BaseDaemon: 18.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?\r\n2024.12.19 22:08:20.954640 [ 2556 ] {} <Fatal> BaseDaemon: 18.2. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?\r\n2024.12.19 22:08:20.954654 [ 2556 ] {} <Fatal> BaseDaemon: 18.3. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:235: ?\r\n2024.12.19 22:08:20.954669 [ 2556 ] {} <Fatal> BaseDaemon: 18. /build/contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000144ad57f\r\n2024.12.19 22:08:20.962442 [ 2558 ] {} <Fatal> BaseDaemon: 19.0. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:848: ?\r\n2024.12.19 22:08:20.962482 [ 2558 ] {} <Fatal> BaseDaemon: 19.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?\r\n2024.12.19 22:08:20.962500 [ 2558 ] {} <Fatal> BaseDaemon: 19. /build/src/Common/ThreadPool.cpp:775: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000000cef49d3\r\n2024.12.19 22:08:20.964475 [ 2555 ] {} <Fatal> BaseDaemon: 19.0. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:848: ?\r\n2024.12.19 22:08:20.964509 [ 2555 ] {} <Fatal> BaseDaemon: 19.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?\r\n2024.12.19 22:08:20.964528 [ 2555 ] {} <Fatal> BaseDaemon: 19. /build/src/Common/ThreadPool.cpp:775: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000000cef49d3\r\n2024.12.19 22:08:20.965931 [ 2559 ] {} <Fatal> BaseDaemon: 20.0. inlined from /build/contrib/llvm-project/libcxx/include/__functional/invoke.h:359: ?\r\n2024.12.19 22:08:20.966000 [ 2559 ] {} <Fatal> BaseDaemon: 20.1. inlined from /build/contrib/llvm-project/libcxx/include/tuple:1789: decltype(auto) std::__apply_tuple_impl[abi:v15007]<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&, 0ul>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&, std::__tuple_indices<0ul>)\r\n2024.12.19 22:08:20.966016 [ 2559 ] {} <Fatal> BaseDaemon: 20.2. inlined from /build/contrib/llvm-project/libcxx/include/tuple:1798: decltype(auto) std::apply[abi:v15007]<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&)\r\n```\r\n\n",
  "hints_text": "Reproduced it again today on the AST fuzzer branch update. On a debug build run:\n\n```sql\nSELECT (number % 5) / (number % 5)\nFROM numbers(10000)\nGROUP BY number % 5, (5 * number) % (number / 5)\nORDER BY 1;\n```\nStack trace:\n```\n[ip-172-31-18-156] 2025.02.26 16:59:16.078994 [ 3215326 ] <Fatal> BaseDaemon: ########################################\n[ip-172-31-18-156] 2025.02.26 16:59:16.079037 [ 3215326 ] <Fatal> BaseDaemon: (version 25.3.1.508 (official build), build id: F2371056FFF3246B43E3D4EC615E8A50016A291C, git hash: da481acecaca620aa04221c8d92831f7faef253b) (from thread 3215278) (query_id: f288a8af-efc4-495b-8077-23e0780d4a7e) (query: SELECT (number % 5) / (number % 5)\nFROM numbers(10000)\nGROUP BY number % 5, (5 * number) % (number / 5)\nORDER BY 1;) Received signal Aborted (6)\n[ip-172-31-18-156] 2025.02.26 16:59:16.079074 [ 3215326 ] <Fatal> BaseDaemon: \n[ip-172-31-18-156] 2025.02.26 16:59:16.079099 [ 3215326 ] <Fatal> BaseDaemon: Stack trace: 0x00006017b9139e28 0x00006017b93fc705 0x00007caa28c45250 0x00007caa28ca3f1d 0x00007caa28c4519e 0x00007caa28c28902 0x00006017b9106d9c 0x00006017b910750a 0x00006017b3abc8ac 0x00006017be15162b 0x00006017be150933 0x00006017be14fd58 0x00006017c007ddf7 0x00006017baf65bd3 0x00006017bfddf020 0x00006017bfdfc10f 0x00006017bfdf1205 0x00006017bfdf14be 0x00006017bfdf1f3f 0x00006017b91c9af3 0x00006017b91cf8e3 0x00006017b91c7232 0x00006017b91cd4a0 0x00007caa28ca1e2e 0x00007caa28d33a4c\n[ip-172-31-18-156] 2025.02.26 16:59:16.090329 [ 3215326 ] <Fatal> BaseDaemon: 0.0. inlined from src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\n[ip-172-31-18-156] 2025.02.26 16:59:16.090372 [ 3215326 ] <Fatal> BaseDaemon: 0. src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000f4f7e28\n[ip-172-31-18-156] 2025.02.26 16:59:16.103120 [ 3215326 ] <Fatal> BaseDaemon: 1. src/Common/SignalHandlers.cpp:106: signalHandler(int, siginfo_t*, void*) @ 0x000000000f7ba705\n[ip-172-31-18-156] 2025.02.26 16:59:16.103158 [ 3215326 ] <Fatal> BaseDaemon: 2. ? @ 0x00007caa28c45250\n[ip-172-31-18-156] 2025.02.26 16:59:16.103190 [ 3215326 ] <Fatal> BaseDaemon: 3. ? @ 0x00007caa28ca3f1d\n[ip-172-31-18-156] 2025.02.26 16:59:16.103215 [ 3215326 ] <Fatal> BaseDaemon: 4. ? @ 0x00007caa28c4519e\n[ip-172-31-18-156] 2025.02.26 16:59:16.103251 [ 3215326 ] <Fatal> BaseDaemon: 5. ? @ 0x00007caa28c28902\n[ip-172-31-18-156] 2025.02.26 16:59:16.124388 [ 3215326 ] <Fatal> BaseDaemon: 6. src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000f4c4d9c\n[ip-172-31-18-156] 2025.02.26 16:59:16.146040 [ 3215326 ] <Fatal> BaseDaemon: 7.0. inlined from src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.146088 [ 3215326 ] <Fatal> BaseDaemon: 7. src/Common/Exception.cpp:114: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f4c550a\n[ip-172-31-18-156] 2025.02.26 16:59:16.155683 [ 3215326 ] <Fatal> BaseDaemon: 8.0. inlined from src/Common/Exception.h:114: Exception\n[ip-172-31-18-156] 2025.02.26 16:59:16.155715 [ 3215326 ] <Fatal> BaseDaemon: 8. src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009e7a8ac\n[ip-172-31-18-156] 2025.02.26 16:59:16.164306 [ 3215326 ] <Fatal> BaseDaemon: 9. src/Common/Exception.h:132: DB::Exception::Exception<unsigned long&, unsigned long const&, unsigned long const&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<unsigned long const&>::type, std::type_identity<unsigned long const&>::type>, unsigned long&, unsigned long const&, unsigned long const&) @ 0x000000001450f62b\n[ip-172-31-18-156] 2025.02.26 16:59:16.175133 [ 3215326 ] <Fatal> BaseDaemon: 10.0. inlined from src/Interpreters/sortBlock.cpp:295: void DB::(anonymous namespace)::checkSortedWithPermutationImpl<DB::(anonymous namespace)::PartialSortingLessImpl<false>>(unsigned long, DB::(anonymous namespace)::PartialSortingLessImpl<false>, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.175171 [ 3215326 ] <Fatal> BaseDaemon: 10. src/Interpreters/sortBlock.cpp:328: DB::(anonymous namespace)::checkSortedWithPermutation(DB::Block const&, DB::SortDescription const&, unsigned long, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const&) @ 0x000000001450e933\n[ip-172-31-18-156] 2025.02.26 16:59:16.185824 [ 3215326 ] <Fatal> BaseDaemon: 11. src/Interpreters/sortBlock.cpp:342: DB::sortBlock(DB::Block&, DB::SortDescription const&, unsigned long) @ 0x000000001450dd58\n[ip-172-31-18-156] 2025.02.26 16:59:16.196602 [ 3215326 ] <Fatal> BaseDaemon: 12. src/Processors/Transforms/PartialSortingTransform.cpp:137: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x000000001643bdf7\n[ip-172-31-18-156] 2025.02.26 16:59:16.209183 [ 3215326 ] <Fatal> BaseDaemon: 13. src/Processors/ISimpleTransform.h:33: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x0000000011323bd3\n[ip-172-31-18-156] 2025.02.26 16:59:16.218064 [ 3215326 ] <Fatal> BaseDaemon: 14. src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x000000001619d020\n[ip-172-31-18-156] 2025.02.26 16:59:16.223135 [ 3215326 ] <Fatal> BaseDaemon: 15.0. inlined from src/Processors/Executors/ExecutionThreadContext.cpp:53: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)\n[ip-172-31-18-156] 2025.02.26 16:59:16.223162 [ 3215326 ] <Fatal> BaseDaemon: 15. src/Processors/Executors/ExecutionThreadContext.cpp:102: DB::ExecutionThreadContext::executeTask() @ 0x00000000161ba10f\n[ip-172-31-18-156] 2025.02.26 16:59:16.237701 [ 3215326 ] <Fatal> BaseDaemon: 16. src/Processors/Executors/PipelineExecutor.cpp:291: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000161af205\n[ip-172-31-18-156] 2025.02.26 16:59:16.251439 [ 3215326 ] <Fatal> BaseDaemon: 17. src/Processors/Executors/PipelineExecutor.cpp:257: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x00000000161af4be\n[ip-172-31-18-156] 2025.02.26 16:59:16.268014 [ 3215326 ] <Fatal> BaseDaemon: 18.0. inlined from src/Processors/Executors/PipelineExecutor.cpp:411: operator()\n[ip-172-31-18-156] 2025.02.26 16:59:16.268052 [ 3215326 ] <Fatal> BaseDaemon: 18.1. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:149: decltype(std::declval<DB::PipelineExecutor::spawnThreadsImpl()::$_0&>()()) std::__invoke[abi:se190107]<DB::PipelineExecutor::spawnThreadsImpl()::$_0&>(DB::PipelineExecutor::spawnThreadsImpl()::$_0&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.268072 [ 3215326 ] <Fatal> BaseDaemon: 18.2. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:224: void std::__invoke_void_return_wrapper<void, true>::__call[abi:se190107]<DB::PipelineExecutor::spawnThreadsImpl()::$_0&>(DB::PipelineExecutor::spawnThreadsImpl()::$_0&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.268089 [ 3215326 ] <Fatal> BaseDaemon: 18.3. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:210: ?\n[ip-172-31-18-156] 2025.02.26 16:59:16.268103 [ 3215326 ] <Fatal> BaseDaemon: 18. contrib/llvm-project/libcxx/include/__functional/function.h:610: ? @ 0x00000000161aff3f\n[ip-172-31-18-156] 2025.02.26 16:59:16.278881 [ 3215326 ] <Fatal> BaseDaemon: 19.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:716: ?\n[ip-172-31-18-156] 2025.02.26 16:59:16.278908 [ 3215326 ] <Fatal> BaseDaemon: 19.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:989: ?\n[ip-172-31-18-156] 2025.02.26 16:59:16.278924 [ 3215326 ] <Fatal> BaseDaemon: 19. src/Common/ThreadPool.cpp:785: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000000f587af3\n[ip-172-31-18-156] 2025.02.26 16:59:16.291884 [ 3215326 ] <Fatal> BaseDaemon: 20.0. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:117: decltype(*std::declval<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&>().*std::declval<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)()>()()) std::__invoke[abi:se190107]<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&, void>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.291928 [ 3215326 ] <Fatal> BaseDaemon: 20.1. inlined from contrib/llvm-project/libcxx/include/tuple:1354: decltype(auto) std::__apply_tuple_impl[abi:se190107]<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&, 0ul>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&, std::__tuple_indices<0ul>)\n[ip-172-31-18-156] 2025.02.26 16:59:16.291949 [ 3215326 ] <Fatal> BaseDaemon: 20.2. inlined from contrib/llvm-project/libcxx/include/tuple:1358: decltype(auto) std::apply[abi:se190107]<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.291966 [ 3215326 ] <Fatal> BaseDaemon: 20. src/Common/ThreadPool.h:310: ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'()::operator()() @ 0x000000000f58d8e3\n[ip-172-31-18-156] 2025.02.26 16:59:16.301726 [ 3215326 ] <Fatal> BaseDaemon: 21.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:716: ?\n[ip-172-31-18-156] 2025.02.26 16:59:16.301754 [ 3215326 ] <Fatal> BaseDaemon: 21.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:989: ?\n[ip-172-31-18-156] 2025.02.26 16:59:16.301771 [ 3215326 ] <Fatal> BaseDaemon: 21. src/Common/ThreadPool.cpp:795: ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x000000000f585232\n[ip-172-31-18-156] 2025.02.26 16:59:16.321310 [ 3215326 ] <Fatal> BaseDaemon: 22.0. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:117: decltype(*std::declval<ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>().*std::declval<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)()>()()) std::__invoke[abi:se190107]<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, void>(void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*&&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.321355 [ 3215326 ] <Fatal> BaseDaemon: 22.1. inlined from contrib/llvm-project/libcxx/include/__thread/thread.h:192: void std::__thread_execute[abi:se190107]<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, 2ul>(std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>&, std::__tuple_indices<2ul>)\n[ip-172-31-18-156] 2025.02.26 16:59:16.321391 [ 3215326 ] <Fatal> BaseDaemon: 22. contrib/llvm-project/libcxx/include/__thread/thread.h:201: void* std::__thread_proxy[abi:se190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000000f58b4a0\n[ip-172-31-18-156] 2025.02.26 16:59:16.321428 [ 3215326 ] <Fatal> BaseDaemon: 23. ? @ 0x00007caa28ca1e2e\n[ip-172-31-18-156] 2025.02.26 16:59:16.321454 [ 3215326 ] <Fatal> BaseDaemon: 24. ? @ 0x00007caa28d33a4c\n[ip-172-31-18-156] 2025.02.26 16:59:16.321481 [ 3215326 ] <Fatal> BaseDaemon: ========================================\n[ip-172-31-18-156] 2025.02.26 16:59:16.321514 [ 3215326 ] <Fatal> BaseDaemon: Job's origin stack trace: 0x00006017b9139eb2 0x00006017b91c6359 0x00006017b91cb3bc 0x00006017b91caeae 0x00006017bfdf1d0c 0x00006017bfdefca7 0x00006017bfdef6cf 0x00006017bfdff0ab 0x00006017b91c7232 0x00006017b91cd4a0 0x00007caa28ca1e2e 0x00007caa28d33a4c\n[ip-172-31-18-156] 2025.02.26 16:59:16.331814 [ 3215326 ] <Fatal> BaseDaemon: 0. src/Common/StackTrace.cpp:381: StackTrace::tryCapture() @ 0x000000000f4f7eb2\n[ip-172-31-18-156] 2025.02.26 16:59:16.345312 [ 3215326 ] <Fatal> BaseDaemon: 1.0. inlined from src/Common/StackTrace.h:48: StackTrace\n[ip-172-31-18-156] 2025.02.26 16:59:16.345348 [ 3215326 ] <Fatal> BaseDaemon: 1.1. inlined from src/Common/ThreadPool.cpp:130: JobWithPriority\n[ip-172-31-18-156] 2025.02.26 16:59:16.345364 [ 3215326 ] <Fatal> BaseDaemon: 1.2. inlined from contrib/boost/boost/heap/detail/stable_heap.hpp:306: internal_type<std::function<void ()>, Priority &, StrongTypedef<unsigned long, CurrentMetrics::MetricTag> &, const DB::OpenTelemetry::TracingContextOnThread, bool &, (anonymous namespace)::ScopedDecrement>\n[ip-172-31-18-156] 2025.02.26 16:59:16.345400 [ 3215326 ] <Fatal> BaseDaemon: 1.3. inlined from contrib/boost/boost/heap/detail/stable_heap.hpp:400: boost::heap::detail::heap_base<JobWithPriority, std::less<JobWithPriority>, false, unsigned long, true>::internal_type boost::heap::detail::heap_base<JobWithPriority, std::less<JobWithPriority>, false, unsigned long, true>::make_node<std::function<void ()>, Priority&, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>&, DB::OpenTelemetry::TracingContextOnThread const, bool&, (anonymous namespace)::ScopedDecrement>(std::function<void ()>&&, Priority&, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>&, DB::OpenTelemetry::TracingContextOnThread const&&, bool&, (anonymous namespace)::ScopedDecrement&&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.345431 [ 3215326 ] <Fatal> BaseDaemon: 1. contrib/boost/boost/heap/priority_queue.hpp:260: void boost::heap::priority_queue<JobWithPriority, boost::heap::stable<true>, boost::parameter::void_, boost::parameter::void_, boost::parameter::void_>::emplace<std::function<void ()>, Priority&, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>&, DB::OpenTelemetry::TracingContextOnThread const, bool&, (anonymous namespace)::ScopedDecrement>(std::function<void ()>&&, Priority&, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>&, DB::OpenTelemetry::TracingContextOnThread const&&, bool&, (anonymous namespace)::ScopedDecrement&&) @ 0x000000000f584359\n[ip-172-31-18-156] 2025.02.26 16:59:16.360131 [ 3215326 ] <Fatal> BaseDaemon: 2. src/Common/ThreadPool.cpp:387: void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool) @ 0x000000000f5893bc\n[ip-172-31-18-156] 2025.02.26 16:59:16.374710 [ 3215326 ] <Fatal> BaseDaemon: 3. src/Common/ThreadPool.cpp:480: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::scheduleOrThrowOnError(std::function<void ()>, Priority) @ 0x000000000f588eae\n[ip-172-31-18-156] 2025.02.26 16:59:16.385840 [ 3215326 ] <Fatal> BaseDaemon: 4. src/Processors/Executors/PipelineExecutor.cpp:405: DB::PipelineExecutor::spawnThreadsImpl() @ 0x00000000161afd0c\n[ip-172-31-18-156] 2025.02.26 16:59:16.397649 [ 3215326 ] <Fatal> BaseDaemon: 5.0. inlined from src/Processors/Executors/PipelineExecutor.cpp:389: DB::PipelineExecutor::spawnThreads()\n[ip-172-31-18-156] 2025.02.26 16:59:16.397683 [ 3215326 ] <Fatal> BaseDaemon: 5. src/Processors/Executors/PipelineExecutor.cpp:442: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x00000000161adca7\n[ip-172-31-18-156] 2025.02.26 16:59:16.410486 [ 3215326 ] <Fatal> BaseDaemon: 6. src/Processors/Executors/PipelineExecutor.cpp:128: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000161ad6cf\n[ip-172-31-18-156] 2025.02.26 16:59:16.421415 [ 3215326 ] <Fatal> BaseDaemon: 7.0. inlined from src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:76: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::shared_ptr<DB::ThreadGroup>, unsigned long, bool)\n[ip-172-31-18-156] 2025.02.26 16:59:16.421445 [ 3215326 ] <Fatal> BaseDaemon: 7.1. inlined from src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:102: operator()\n[ip-172-31-18-156] 2025.02.26 16:59:16.421466 [ 3215326 ] <Fatal> BaseDaemon: 7.2. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:149: decltype(std::declval<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>()()) std::__invoke[abi:se190107]<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.421488 [ 3215326 ] <Fatal> BaseDaemon: 7.3. inlined from contrib/llvm-project/libcxx/include/tuple:1354: decltype(auto) std::__apply_tuple_impl[abi:se190107]<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&, std::__tuple_indices<...>)\n[ip-172-31-18-156] 2025.02.26 16:59:16.421504 [ 3215326 ] <Fatal> BaseDaemon: 7.4. inlined from contrib/llvm-project/libcxx/include/tuple:1358: decltype(auto) std::apply[abi:se190107]<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.421519 [ 3215326 ] <Fatal> BaseDaemon: 7.5. inlined from src/Common/ThreadPool.h:310: operator()\n[ip-172-31-18-156] 2025.02.26 16:59:16.421540 [ 3215326 ] <Fatal> BaseDaemon: 7.6. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:149: decltype(std::declval<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>()()) std::__invoke[abi:se190107]<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.421561 [ 3215326 ] <Fatal> BaseDaemon: 7.7. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:224: void std::__invoke_void_return_wrapper<void, true>::__call[abi:se190107]<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.421578 [ 3215326 ] <Fatal> BaseDaemon: 7.8. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:210: ?\n[ip-172-31-18-156] 2025.02.26 16:59:16.421590 [ 3215326 ] <Fatal> BaseDaemon: 7. contrib/llvm-project/libcxx/include/__functional/function.h:610: ? @ 0x00000000161bd0ab\n[ip-172-31-18-156] 2025.02.26 16:59:16.431560 [ 3215326 ] <Fatal> BaseDaemon: 8.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:716: ?\n[ip-172-31-18-156] 2025.02.26 16:59:16.431588 [ 3215326 ] <Fatal> BaseDaemon: 8.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:989: ?\n[ip-172-31-18-156] 2025.02.26 16:59:16.431609 [ 3215326 ] <Fatal> BaseDaemon: 8. src/Common/ThreadPool.cpp:795: ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x000000000f585232\n[ip-172-31-18-156] 2025.02.26 16:59:16.451469 [ 3215326 ] <Fatal> BaseDaemon: 9.0. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:117: decltype(*std::declval<ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>().*std::declval<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)()>()()) std::__invoke[abi:se190107]<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, void>(void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*&&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.451514 [ 3215326 ] <Fatal> BaseDaemon: 9.1. inlined from contrib/llvm-project/libcxx/include/__thread/thread.h:192: void std::__thread_execute[abi:se190107]<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, 2ul>(std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>&, std::__tuple_indices<2ul>)\n[ip-172-31-18-156] 2025.02.26 16:59:16.451531 [ 3215326 ] <Fatal> BaseDaemon: 9. contrib/llvm-project/libcxx/include/__thread/thread.h:201: void* std::__thread_proxy[abi:se190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000000f58b4a0\n[ip-172-31-18-156] 2025.02.26 16:59:16.451551 [ 3215326 ] <Fatal> BaseDaemon: 10. ? @ 0x00007caa28ca1e2e\n[ip-172-31-18-156] 2025.02.26 16:59:16.451564 [ 3215326 ] <Fatal> BaseDaemon: 11. ? @ 0x00007caa28d33a4c\n[ip-172-31-18-156] 2025.02.26 16:59:16.451576 [ 3215326 ] <Fatal> BaseDaemon: ========================================\n[ip-172-31-18-156] 2025.02.26 16:59:16.451591 [ 3215326 ] <Fatal> BaseDaemon: Job's origin stack trace: 0x00006017b9139eb2 0x00006017b91c6359 0x00006017b91c87fc 0x00006017b91c8ced 0x00006017bfdfe393 0x00006017bfdfe718 0x00006017bfd3f965 0x00006017bfd34d25 0x00006017bfd4cd59 0x00006017c403a627 0x00006017c403aafe 0x00006017c3fe8192 0x00006017c3fe5dcf 0x00007caa28ca1e2e 0x00007caa28d33a4c\n[ip-172-31-18-156] 2025.02.26 16:59:16.461829 [ 3215326 ] <Fatal> BaseDaemon: 0. src/Common/StackTrace.cpp:381: StackTrace::tryCapture() @ 0x000000000f4f7eb2\n[ip-172-31-18-156] 2025.02.26 16:59:16.475268 [ 3215326 ] <Fatal> BaseDaemon: 1.0. inlined from src/Common/StackTrace.h:48: StackTrace\n[ip-172-31-18-156] 2025.02.26 16:59:16.475300 [ 3215326 ] <Fatal> BaseDaemon: 1.1. inlined from src/Common/ThreadPool.cpp:130: JobWithPriority\n[ip-172-31-18-156] 2025.02.26 16:59:16.475316 [ 3215326 ] <Fatal> BaseDaemon: 1.2. inlined from contrib/boost/boost/heap/detail/stable_heap.hpp:306: internal_type<std::function<void ()>, Priority &, StrongTypedef<unsigned long, CurrentMetrics::MetricTag> &, const DB::OpenTelemetry::TracingContextOnThread, bool &, (anonymous namespace)::ScopedDecrement>\n[ip-172-31-18-156] 2025.02.26 16:59:16.475336 [ 3215326 ] <Fatal> BaseDaemon: 1.3. inlined from contrib/boost/boost/heap/detail/stable_heap.hpp:400: boost::heap::detail::heap_base<JobWithPriority, std::less<JobWithPriority>, false, unsigned long, true>::internal_type boost::heap::detail::heap_base<JobWithPriority, std::less<JobWithPriority>, false, unsigned long, true>::make_node<std::function<void ()>, Priority&, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>&, DB::OpenTelemetry::TracingContextOnThread const, bool&, (anonymous namespace)::ScopedDecrement>(std::function<void ()>&&, Priority&, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>&, DB::OpenTelemetry::TracingContextOnThread const&&, bool&, (anonymous namespace)::ScopedDecrement&&)\n[ip-172-31-18-156] 2025.02.26 16:59:16.475358 [ 3215326 ] <Fatal> BaseDaemon: 1. contrib/boost/boost/heap/priority_queue.hpp:260: void boost::heap::priority_queue<JobWithPriority, boost::heap::stable<true>, boost::parameter::void_, boost::parameter::void_, boost::parameter::void_>::emplace<std::function<void ()>, Priority&, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>&, DB::OpenTelemetry::TracingContextOnThread const, bool&, (anonymous namespace)::ScopedDecrement>(std::function<void ()>&&, Priority&, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>&, DB::OpenTelemetry::TracingContextOnThread const&&, bool&, (anonymous namespace)::ScopedDecrement&&) @ 0x000000000f584359\n[ip-172-31-18-156] 2025.02.26 16:59:16.488219 [ 3215326 ] <Fatal> BaseDaemon: 2. src/Common/ThreadPool.cpp:387: void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool) @ 0x000000000f5867fc\n[ip-172-31-18-156] 2025.02.26 16:59:16.502011 [ 3215326 ] <Fatal> BaseDaemon: 3. src/Common/ThreadPool.cpp:492: ThreadPoolImpl<std::thread>::scheduleOrThrow(std::function<void ()>, Priority, unsigned long, bool) @ 0x000000000f586ced\n[ip-172-31-18-156] 2025.02.26 16:59:16.509621 [ 3215326 ] <Fatal> BaseDaemon: 4.0. inlined from src/Common/ThreadPool.h:277: ThreadFromGlobalPoolImpl<(lambda at src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:100:21)>\n[ip-172-31-18-156] 2025.02.26 16:59:16.509651 [ 3215326 ] <Fatal> BaseDaemon: 4. src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:105: DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long) @ 0x00000000161bc393\n[ip-172-31-18-156] 2025.02.26 16:59:16.518834 [ 3215326 ] <Fatal> BaseDaemon: 5. src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:131: DB::PullingAsyncPipelineExecutor::pull(DB::Block&, unsigned long) @ 0x00000000161bc718\n[ip-172-31-18-156] 2025.02.26 16:59:16.564529 [ 3215326 ] <Fatal> BaseDaemon: 6. src/Server/TCPHandler.cpp:1237: DB::TCPHandler::processOrdinaryQuery(DB::QueryState&) @ 0x00000000160fd965\n[ip-172-31-18-156] 2025.02.26 16:59:16.595809 [ 3215326 ] <Fatal> BaseDaemon: 7. src/Server/TCPHandler.cpp:678: DB::TCPHandler::runImpl() @ 0x00000000160f2d25\n[ip-172-31-18-156] 2025.02.26 16:59:16.651906 [ 3215326 ] <Fatal> BaseDaemon: 8. src/Server/TCPHandler.cpp:2629: DB::TCPHandler::run() @ 0x000000001610ad59\n[ip-172-31-18-156] 2025.02.26 16:59:16.654411 [ 3215326 ] <Fatal> BaseDaemon: 9. base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x000000001a3f8627\n[ip-172-31-18-156] 2025.02.26 16:59:16.657972 [ 3215326 ] <Fatal> BaseDaemon: 10. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000001a3f8afe\n[ip-172-31-18-156] 2025.02.26 16:59:16.661574 [ 3215326 ] <Fatal> BaseDaemon: 11. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000001a3a6192\n[ip-172-31-18-156] 2025.02.26 16:59:16.665030 [ 3215326 ] <Fatal> BaseDaemon: 12. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001a3a3dcf\n[ip-172-31-18-156] 2025.02.26 16:59:16.665060 [ 3215326 ] <Fatal> BaseDaemon: 13. ? @ 0x00007caa28ca1e2e\n[ip-172-31-18-156] 2025.02.26 16:59:16.665077 [ 3215326 ] <Fatal> BaseDaemon: 14. ? @ 0x00007caa28d33a4c\n[ip-172-31-18-156] 2025.02.26 16:59:16.830034 [ 3215326 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 6BD9D768FFDD045D6BB3E8FA6252EEC3)\n[ip-172-31-18-156] 2025.02.26 16:59:17.073183 [ 3215326 ] <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues\n[ip-172-31-18-156] 2025.02.26 16:59:17.073338 [ 3215326 ] <Fatal> BaseDaemon: Changed settings: allow_changing_replica_until_first_data_packet = true, allow_reorder_prewhere_conditions = true, allow_suspicious_low_cardinality_types = true, allow_suspicious_fixed_string_types = true, allow_suspicious_indices = true, allow_suspicious_ttl_expressions = true, allow_suspicious_variant_types = true, allow_suspicious_primary_key = true, allow_suspicious_types_in_group_by = true, allow_suspicious_types_in_order_by = true, allow_not_comparable_types_in_order_by = true, allow_not_comparable_types_in_comparison_functions = true, allow_nonconst_timezone_arguments = true, allow_nondeterministic_optimize_skip_unused_shards = true, query_plan_join_swap_table = false, allow_distributed_ddl = true, allow_suspicious_codecs = true, enable_zstd_qat_codec = true, enable_deflate_qpl_codec = true, join_algorithm = 'hash', allow_push_predicate_when_subquery_contains_with = true, allow_custom_error_code_in_throwif = true, allow_ddl = true, allow_hyperscan = true, allow_simdjson = true, allow_introspection_functions = true, allow_execute_multiif_columnar = true, allow_drop_detached = true, allow_materialized_view_with_bad_select = true, allow_settings_after_format_in_insert = true, allow_nondeterministic_mutations = true, allow_non_metadata_alters = true, allow_experimental_kafka_offsets_storage_in_keeper = true, allow_aggregate_partitions_independently = true, allow_prefetched_read_pool_for_remote_filesystem = true, allow_prefetched_read_pool_for_local_filesystem = true, allow_unrestricted_reads_from_keeper = true, allow_deprecated_database_ordinary = true, allow_deprecated_syntax_for_merge_tree = true, allow_asynchronous_read_from_io_pool_for_merge_tree = true, allow_get_client_http_header = true, allow_create_index_without_type = true, allow_named_collection_override_by_default = true, allow_deprecated_error_prone_window_functions = true, allow_deprecated_snowflake_conversion_functions = true, allow_experimental_parallel_reading_from_replicas = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_two_replicas', allow_experimental_analyzer = true, allow_experimental_variant_type = true, allow_experimental_dynamic_type = true, allow_experimental_json_type = true, allow_experimental_materialized_postgresql_table = true, allow_experimental_funnel_functions = true, allow_experimental_nlp_functions = true, allow_experimental_hash_functions = true, allow_experimental_object_type = true, allow_experimental_time_series_table = true, allow_experimental_vector_similarity_index = true, allow_experimental_codecs = true, allow_experimental_shared_set_join = true, allow_experimental_join_right_table_sorting = true, allow_statistics_optimize = true, allow_experimental_statistics = true, allow_archive_path_syntax = true, allow_experimental_inverted_index = true, allow_experimental_full_text_index = true, allow_experimental_join_condition = true, allow_experimental_live_view = true, allow_experimental_window_view = true, allow_experimental_database_materialized_postgresql = true, allow_experimental_query_deduplication = true, allow_experimental_database_iceberg = true, type_json_skip_duplicated_paths = true\n```\nAlso reproduced with BuzzHouse!\nThe new improved fuzzer is having fun with this one:\nhttps://s3.amazonaws.com/clickhouse-test-reports/json.html?REF=master&sha=6d8608a26d1d7301a175c726565c542f43f77992&name_0=MasterCI&name_1=AST%20fuzzer%20%28debug%29\n\n```sql\nSELECT DISTINCT Y FROM (SELECT (((materialize(7) * X) - (X / (X * 3))) / 11) + 37 AS Y, 34, 34, isZeroOrNull(34), 34, toUInt256(34), ('test hostname in system log tables', 34, * IS NOT NULL), isZeroOrNull(34), *, *, *, assumeNotNull(34), * IS NOT NULL, number AS X FROM system.numbers LIMIT 1048576) GROUP BY Y WITH CUBE ORDER BY Y DESC NULLS FIRST\n```\n\nhttps://s3.amazonaws.com/clickhouse-test-reports/json.html?PR=77809&sha=3a7491869440e181594ac269e98882c82a87a5a3&name_0=PR&name_1=AST%20fuzzer%20%28debug%29\n\n```sql\nSELECT uniqCombinedDistinct(X) IGNORE NULLS FROM (SELECT toNullable(3), 'car', 3 IS NULL, (11 + ((X * *) - ((X % 3) / X))) % 37 AS Y, number AS X FROM system.numbers LIMIT 1024) GROUP BY GROUPING SETS ((Y)) ORDER BY NULL ASC, 1 ASC NULLS FIRST, Y ASC\n```\n\nhttps://s3.amazonaws.com/clickhouse-test-reports/json.html?PR=77646&sha=d39df03032e38f6f1ba632bad461f12f481ba9ee&name_0=PR&name_1=AST%20fuzzer%20%28debug%29\n\n```sql\nSELECT DISTINCT Y, uniqHLL12Distinct(X) IGNORE NULLS FROM (SELECT round(toFloat32(materialize(1) / (1 % ((((7 + X) + (X + (3 / X))) - 11) % 37)))) AS Y, number AS X FROM system.numbers LIMIT 65536) GROUP BY Y WITH ROLLUP ORDER BY 2 DESC NULLS LAST, 2 ASC, Y ASC NULLS LAST\n```\nhttps://s3.amazonaws.com/clickhouse-test-reports/json.html?PR=79372&sha=c2b0a047a54bbed2872996bb3d1f1fc9191e291a&name_0=PR&name_1=AST+fuzzer+%28amd_debug%29",
  "created_at": "2025-05-05T11:38:26Z",
  "modified_files": [
    "src/Columns/ColumnVector.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03447_float_nan_order.reference",
    "b/tests/queries/0_stateless/03447_float_nan_order.sql"
  ]
}