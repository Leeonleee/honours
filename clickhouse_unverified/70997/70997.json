{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 70997,
  "instance_id": "ClickHouse__ClickHouse-70997",
  "issue_numbers": [
    "43869"
  ],
  "base_commit": "22cf45a8c8983548a74d363296c5c3666223d66d",
  "patch": "diff --git a/programs/keeper/Keeper.cpp b/programs/keeper/Keeper.cpp\nindex 3007df607659..74af9950e13b 100644\n--- a/programs/keeper/Keeper.cpp\n+++ b/programs/keeper/Keeper.cpp\n@@ -590,6 +590,7 @@ try\n \n #if USE_SSL\n             CertificateReloader::instance().tryLoad(*config);\n+            CertificateReloader::instance().tryLoadClient(*config);\n #endif\n         });\n \ndiff --git a/programs/server/Server.cpp b/programs/server/Server.cpp\nindex 826100f68e26..1f481381b2bc 100644\n--- a/programs/server/Server.cpp\n+++ b/programs/server/Server.cpp\n@@ -2341,6 +2341,7 @@ try\n \n #if USE_SSL\n         CertificateReloader::instance().tryLoad(config());\n+        CertificateReloader::instance().tryLoadClient(config());\n #endif\n \n         /// Must be done after initialization of `servers`, because async_metrics will access `servers` variable from its thread.\ndiff --git a/src/Server/CertificateReloader.cpp b/src/Server/CertificateReloader.cpp\nindex 5b981fc7a875..aa84b26af69f 100644\n--- a/src/Server/CertificateReloader.cpp\n+++ b/src/Server/CertificateReloader.cpp\n@@ -91,6 +91,12 @@ void CertificateReloader::tryLoad(const Poco::Util::AbstractConfiguration & conf\n }\n \n \n+void CertificateReloader::tryLoadClient(const Poco::Util::AbstractConfiguration & config)\n+{\n+    tryLoad(config, nullptr, Poco::Net::SSLManager::CFG_CLIENT_PREFIX);\n+}\n+\n+\n void CertificateReloader::tryLoad(const Poco::Util::AbstractConfiguration & config, SSL_CTX * ctx, const std::string & prefix)\n {\n     std::lock_guard lock{data_mutex};\n@@ -107,7 +113,12 @@ std::list<CertificateReloader::MultiData>::iterator CertificateReloader::findOrI\n     else\n     {\n         if (!ctx)\n-            ctx = Poco::Net::SSLManager::instance().defaultServerContext()->sslContext();\n+        {\n+            if (prefix == Poco::Net::SSLManager::CFG_CLIENT_PREFIX)\n+                ctx = Poco::Net::SSLManager::instance().defaultClientContext()->sslContext();\n+            else\n+                ctx = Poco::Net::SSLManager::instance().defaultServerContext()->sslContext();\n+        }\n         data.push_back(MultiData(ctx));\n         --it;\n         data_index[prefix] = it;\ndiff --git a/src/Server/CertificateReloader.h b/src/Server/CertificateReloader.h\nindex 28737988fddc..0e4ea8b989ef 100644\n--- a/src/Server/CertificateReloader.h\n+++ b/src/Server/CertificateReloader.h\n@@ -77,6 +77,9 @@ class CertificateReloader\n     /// Handle configuration reload for default path\n     void tryLoad(const Poco::Util::AbstractConfiguration & config);\n \n+    /// Handle configuration reload client for default path\n+    void tryLoadClient(const Poco::Util::AbstractConfiguration & config);\n+\n     /// Handle configuration reload\n     void tryLoad(const Poco::Util::AbstractConfiguration & config, SSL_CTX * ctx, const std::string & prefix);\n \n",
  "test_patch": "diff --git a/tests/integration/test_reload_client_certificate/__init__.py b/tests/integration/test_reload_client_certificate/__init__.py\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/integration/test_reload_client_certificate/configs/remote_servers.xml b/tests/integration/test_reload_client_certificate/configs/remote_servers.xml\nnew file mode 100644\nindex 000000000000..63fdcea5dab5\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs/remote_servers.xml\n@@ -0,0 +1,23 @@\n+<clickhouse>\n+    <remote_servers>\n+        <test_cluster>\n+            <shard>\n+                <replica>\n+                    <host>node1</host>\n+                    <port>9000</port>\n+                </replica>\n+\n+                <replica>\n+                    <host>node2</host>\n+                    <port>9000</port>\n+                </replica>\n+\n+                <replica>\n+                    <host>node3</host>\n+                    <port>9000</port>\n+                </replica>\n+\n+            </shard>\n+        </test_cluster>\n+    </remote_servers>\n+</clickhouse>\ndiff --git a/tests/integration/test_reload_client_certificate/configs/zookeeper_config_with_ssl.xml b/tests/integration/test_reload_client_certificate/configs/zookeeper_config_with_ssl.xml\nnew file mode 100644\nindex 000000000000..dc0fe771426c\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs/zookeeper_config_with_ssl.xml\n@@ -0,0 +1,20 @@\n+<clickhouse>\n+    <zookeeper>\n+        <node index=\"1\">\n+            <host>zoo1</host>\n+            <port>2281</port>\n+            <secure>1</secure>\n+        </node>\n+        <node index=\"2\">\n+            <host>zoo2</host>\n+            <port>2281</port>\n+            <secure>1</secure>\n+        </node>\n+        <node index=\"3\">\n+            <host>zoo3</host>\n+            <port>2281</port>\n+            <secure>1</secure>\n+        </node>\n+        <session_timeout_ms>3000</session_timeout_ms>\n+    </zookeeper>\n+</clickhouse>\ndiff --git a/tests/integration/test_reload_client_certificate/configs_secure/conf.d/remote_servers.xml b/tests/integration/test_reload_client_certificate/configs_secure/conf.d/remote_servers.xml\nnew file mode 100644\nindex 000000000000..548819a8c974\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs_secure/conf.d/remote_servers.xml\n@@ -0,0 +1,17 @@\n+<clickhouse>\n+    <remote_servers>\n+        <test_cluster>\n+            <shard>\n+                <replica>\n+                    <host>node1</host>\n+                    <port>9000</port>\n+                </replica>\n+\n+                <replica>\n+                    <host>node2</host>\n+                    <port>9000</port>\n+                </replica>\n+            </shard>\n+        </test_cluster>\n+    </remote_servers>\n+</clickhouse>\ndiff --git a/tests/integration/test_reload_client_certificate/configs_secure/conf.d/ssl_conf.xml b/tests/integration/test_reload_client_certificate/configs_secure/conf.d/ssl_conf.xml\nnew file mode 100644\nindex 000000000000..d620bcee919e\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs_secure/conf.d/ssl_conf.xml\n@@ -0,0 +1,16 @@\n+<clickhouse>\n+    <openSSL>\n+        <client>\n+            <certificateFile>/etc/clickhouse-server/config.d/first_client.crt</certificateFile>\n+            <privateKeyFile>/etc/clickhouse-server/config.d/first_client.key</privateKeyFile>\n+            <loadDefaultCAFile>true</loadDefaultCAFile>\n+            <cacheSessions>true</cacheSessions>\n+            <disableProtocols>sslv2,sslv3</disableProtocols>\n+            <preferServerCiphers>true</preferServerCiphers>\n+            <verificationMode>none</verificationMode>\n+            <invalidCertificateHandler>\n+                <name>RejectCertificateHandler</name>\n+            </invalidCertificateHandler>\n+        </client>\n+    </openSSL>\n+</clickhouse>\ndiff --git a/tests/integration/test_reload_client_certificate/configs_secure/first_client.crt b/tests/integration/test_reload_client_certificate/configs_secure/first_client.crt\nnew file mode 100644\nindex 000000000000..7ade2d962733\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs_secure/first_client.crt\n@@ -0,0 +1,19 @@\n+-----BEGIN CERTIFICATE-----\n+MIIC/TCCAeWgAwIBAgIJANjx1QSR77HBMA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNV\n+BAMMCWxvY2FsaG9zdDAgFw0xODA3MzAxODE2MDhaGA8yMjkyMDUxNDE4MTYwOFow\n+FDESMBAGA1UEAwwJbG9jYWxob3N0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\n+CgKCAQEAs9uSo6lJG8o8pw0fbVGVu0tPOljSWcVSXH9uiJBwlZLQnhN4SFSFohfI\n+4K8U1tBDTnxPLUo/V1K9yzoLiRDGMkwVj6+4+hE2udS2ePTQv5oaMeJ9wrs+5c9T\n+4pOtlq3pLAdm04ZMB1nbrEysceVudHRkQbGHzHp6VG29Fw7Ga6YpqyHQihRmEkTU\n+7UCYNA+Vk7aDPdMS/khweyTpXYZimaK9f0ECU3/VOeG3fH6Sp2X6FN4tUj/aFXEj\n+sRmU5G2TlYiSIUMF2JPdhSihfk1hJVALrHPTU38SOL+GyyBRWdNcrIwVwbpvsvPg\n+pryMSNxnpr0AK0dFhjwnupIv5hJIOQIDAQABo1AwTjAdBgNVHQ4EFgQUjPLb3uYC\n+kcamyZHK4/EV8jAP0wQwHwYDVR0jBBgwFoAUjPLb3uYCkcamyZHK4/EV8jAP0wQw\n+DAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAM/ocuDvfPus/KpMVD51j\n+4IdlU8R0vmnYLQ+ygzOAo7+hUWP5j0yvq4ILWNmQX6HNvUggCgFv9bjwDFhb/5Vr\n+85ieWfTd9+LTjrOzTw4avdGwpX9G+6jJJSSq15tw5ElOIFb/qNA9O4dBiu8vn03C\n+L/zRSXrARhSqTW5w/tZkUcSTT+M5h28+Lgn9ysx4Ff5vi44LJ1NnrbJbEAIYsAAD\n++UA+4MBFKx1r6hHINULev8+lCfkpwIaeS8RL+op4fr6kQPxnULw8wT8gkuc8I4+L\n+P9gg/xDHB44T3ADGZ5Ib6O0DJaNiToO6rnoaaxs0KkotbvDWvRoxEytSbXKoYjYp\n+0g==\n+-----END CERTIFICATE-----\ndiff --git a/tests/integration/test_reload_client_certificate/configs_secure/first_client.key b/tests/integration/test_reload_client_certificate/configs_secure/first_client.key\nnew file mode 100644\nindex 000000000000..f0fb61ac443f\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs_secure/first_client.key\n@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----\n+MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCz25KjqUkbyjyn\n+DR9tUZW7S086WNJZxVJcf26IkHCVktCeE3hIVIWiF8jgrxTW0ENOfE8tSj9XUr3L\n+OguJEMYyTBWPr7j6ETa51LZ49NC/mhox4n3Cuz7lz1Pik62WreksB2bThkwHWdus\n+TKxx5W50dGRBsYfMenpUbb0XDsZrpimrIdCKFGYSRNTtQJg0D5WTtoM90xL+SHB7\n+JOldhmKZor1/QQJTf9U54bd8fpKnZfoU3i1SP9oVcSOxGZTkbZOViJIhQwXYk92F\n+KKF+TWElUAusc9NTfxI4v4bLIFFZ01ysjBXBum+y8+CmvIxI3GemvQArR0WGPCe6\n+ki/mEkg5AgMBAAECggEATrbIBIxwDJOD2/BoUqWkDCY3dGevF8697vFuZKIiQ7PP\n+TX9j4vPq0DfsmDjHvAPFkTHiTQXzlroFik3LAp+uvhCCVzImmHq0IrwvZ9xtB43f\n+7Pkc5P6h1l3Ybo8HJ6zRIY3TuLtLxuPSuiOMTQSGRL0zq3SQ5DKuGwkz+kVjHXUN\n+MR2TECFwMHKQ5VLrC+7PMpsJYyOMlDAWhRfUalxC55xOXTpaN8TxNnwQ8K2ISVY5\n+212Jz/a4hn4LdwxSz3Tiu95PN072K87HLWx3EdT6vW4Ge5P/A3y+smIuNAlanMnu\n+plHBRtpATLiTxZt/n6npyrfQVbYjSH7KWhB8hBHtaQKBgQDh9Cq1c/KtqDtE0Ccr\n+/r9tZNTUwBE6VP+3OJeKdEdtsfuxjOCkS1oAjgBJiSDOiWPh1DdoDeVZjPKq6pIu\n+Mq12OE3Doa8znfCXGbkSzEKOb2unKZMJxzrz99kXt40W5DtrqKPNb24CNqTiY8Aa\n+CjtcX+3weat82VRXvph6U8ltMwKBgQDLxjiQQzNoY7qvg7CwJCjf9qq8jmLK766g\n+1FHXopqS+dTxDLM8eJSRrpmxGWJvNeNc1uPhsKsKgotqAMdBUQTf7rSTbt4MyoH5\n+bUcRLtr+0QTK9hDWMOOvleqNXha68vATkohWYfCueNsC60qD44o8RZAS6UNy3ENq\n+cM1cxqe84wKBgQDKkHutWnooJtajlTxY27O/nZKT/HA1bDgniMuKaz4R4Gr1PIez\n+on3YW3V0d0P7BP6PWRIm7bY79vkiMtLEKdiKUGWeyZdo3eHvhDb/3DCawtau8L2K\n+GZsHVp2//mS1Lfz7Qh8/L/NedqCQ+L4iWiPnZ3THjjwn3CoZ05ucpvrAMwKBgB54\n+nay039MUVq44Owub3KDg+dcIU62U+cAC/9oG7qZbxYPmKkc4oL7IJSNecGHA5SbU\n+2268RFdl/gLz6tfRjbEOuOHzCjFPdvAdbysanpTMHLNc6FefJ+zxtgk9sJh0C4Jh\n+vxFrw9nTKKzfEl12gQ1SOaEaUIO0fEBGbe8ZpauRAoGAMAlGV+2/K4ebvAJKOVTa\n+dKAzQ+TD2SJmeR1HZmKDYddNqwtZlzg3v4ZhCk4eaUmGeC1Bdh8MDuB3QQvXz4Dr\n+vOIP4UVaOr+uM+7TgAgVnP4/K6IeJGzUDhX93pmpWhODfdu/oojEKVcpCojmEmS1\n+KCBtmIrQLqzMpnBpLNuSY+Q=\n+-----END PRIVATE KEY-----\ndiff --git a/tests/integration/test_reload_client_certificate/configs_secure/second_client.crt b/tests/integration/test_reload_client_certificate/configs_secure/second_client.crt\nnew file mode 100644\nindex 000000000000..ff62438af62c\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs_secure/second_client.crt\n@@ -0,0 +1,19 @@\n+-----BEGIN CERTIFICATE-----\n+MIIDEDCCAfigAwIBAgIUEAdT/eB4tswNzGZg1V0rVP8WzJwwDQYJKoZIhvcNAQEL\n+BQAwGDEWMBQGA1UEAwwNbG9jYWxob3N0X25ldzAgFw0yNDEwMjQyMzE5MjJaGA8y\n+Mjk4MDgwOTIzMTkyMlowGDEWMBQGA1UEAwwNbG9jYWxob3N0X25ldzCCASIwDQYJ\n+KoZIhvcNAQEBBQADggEPADCCAQoCggEBALPbkqOpSRvKPKcNH21RlbtLTzpY0lnF\n+Ulx/boiQcJWS0J4TeEhUhaIXyOCvFNbQQ058Ty1KP1dSvcs6C4kQxjJMFY+vuPoR\n+NrnUtnj00L+aGjHifcK7PuXPU+KTrZat6SwHZtOGTAdZ26xMrHHlbnR0ZEGxh8x6\n+elRtvRcOxmumKash0IoUZhJE1O1AmDQPlZO2gz3TEv5IcHsk6V2GYpmivX9BAlN/\n+1Tnht3x+kqdl+hTeLVI/2hVxI7EZlORtk5WIkiFDBdiT3YUooX5NYSVQC6xz01N/\n+Eji/hssgUVnTXKyMFcG6b7Lz4Ka8jEjcZ6a9ACtHRYY8J7qSL+YSSDkCAwEAAaNQ\n+ME4wHQYDVR0OBBYEFIzy297mApHGpsmRyuPxFfIwD9MEMB8GA1UdIwQYMBaAFIzy\n+297mApHGpsmRyuPxFfIwD9MEMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQAD\n+ggEBAD0z8mRBdk93+HxqJdW1qZBN2g+AUc/GUaTUa8oW9baHOOvdwUacfdVXpyDo\n+ffdeTKfdQNs7JYMP5tWupHCrvAGK3sIzPMt7Yr06tBD720IIyPTR3J7A5RmpQNKm\n+2RCqfO49Pg6U8kx+bDBKNjdCGWowt31cZTlJNXk7NPewtWaGYhuskbvH8gJDtbMd\n+d9fOepIbzl3u+us8JHFVglBRgjy9sYjUYUT9mnTzfbpebmkdtiicJZNP1j08VZFR\n+lXoHiESasyzlP8DLI/PQcpL6Lh8KnIifKGEkvXVaryPT2wlEo6Kti2cY8AIJKQgl\n+0U1jwiNcCwjYoKIXjunOO8T8mKg=\n+-----END CERTIFICATE-----\n\\ No newline at end of file\ndiff --git a/tests/integration/test_reload_client_certificate/configs_secure/second_client.key b/tests/integration/test_reload_client_certificate/configs_secure/second_client.key\nnew file mode 100644\nindex 000000000000..f0fb61ac443f\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs_secure/second_client.key\n@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----\n+MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCz25KjqUkbyjyn\n+DR9tUZW7S086WNJZxVJcf26IkHCVktCeE3hIVIWiF8jgrxTW0ENOfE8tSj9XUr3L\n+OguJEMYyTBWPr7j6ETa51LZ49NC/mhox4n3Cuz7lz1Pik62WreksB2bThkwHWdus\n+TKxx5W50dGRBsYfMenpUbb0XDsZrpimrIdCKFGYSRNTtQJg0D5WTtoM90xL+SHB7\n+JOldhmKZor1/QQJTf9U54bd8fpKnZfoU3i1SP9oVcSOxGZTkbZOViJIhQwXYk92F\n+KKF+TWElUAusc9NTfxI4v4bLIFFZ01ysjBXBum+y8+CmvIxI3GemvQArR0WGPCe6\n+ki/mEkg5AgMBAAECggEATrbIBIxwDJOD2/BoUqWkDCY3dGevF8697vFuZKIiQ7PP\n+TX9j4vPq0DfsmDjHvAPFkTHiTQXzlroFik3LAp+uvhCCVzImmHq0IrwvZ9xtB43f\n+7Pkc5P6h1l3Ybo8HJ6zRIY3TuLtLxuPSuiOMTQSGRL0zq3SQ5DKuGwkz+kVjHXUN\n+MR2TECFwMHKQ5VLrC+7PMpsJYyOMlDAWhRfUalxC55xOXTpaN8TxNnwQ8K2ISVY5\n+212Jz/a4hn4LdwxSz3Tiu95PN072K87HLWx3EdT6vW4Ge5P/A3y+smIuNAlanMnu\n+plHBRtpATLiTxZt/n6npyrfQVbYjSH7KWhB8hBHtaQKBgQDh9Cq1c/KtqDtE0Ccr\n+/r9tZNTUwBE6VP+3OJeKdEdtsfuxjOCkS1oAjgBJiSDOiWPh1DdoDeVZjPKq6pIu\n+Mq12OE3Doa8znfCXGbkSzEKOb2unKZMJxzrz99kXt40W5DtrqKPNb24CNqTiY8Aa\n+CjtcX+3weat82VRXvph6U8ltMwKBgQDLxjiQQzNoY7qvg7CwJCjf9qq8jmLK766g\n+1FHXopqS+dTxDLM8eJSRrpmxGWJvNeNc1uPhsKsKgotqAMdBUQTf7rSTbt4MyoH5\n+bUcRLtr+0QTK9hDWMOOvleqNXha68vATkohWYfCueNsC60qD44o8RZAS6UNy3ENq\n+cM1cxqe84wKBgQDKkHutWnooJtajlTxY27O/nZKT/HA1bDgniMuKaz4R4Gr1PIez\n+on3YW3V0d0P7BP6PWRIm7bY79vkiMtLEKdiKUGWeyZdo3eHvhDb/3DCawtau8L2K\n+GZsHVp2//mS1Lfz7Qh8/L/NedqCQ+L4iWiPnZ3THjjwn3CoZ05ucpvrAMwKBgB54\n+nay039MUVq44Owub3KDg+dcIU62U+cAC/9oG7qZbxYPmKkc4oL7IJSNecGHA5SbU\n+2268RFdl/gLz6tfRjbEOuOHzCjFPdvAdbysanpTMHLNc6FefJ+zxtgk9sJh0C4Jh\n+vxFrw9nTKKzfEl12gQ1SOaEaUIO0fEBGbe8ZpauRAoGAMAlGV+2/K4ebvAJKOVTa\n+dKAzQ+TD2SJmeR1HZmKDYddNqwtZlzg3v4ZhCk4eaUmGeC1Bdh8MDuB3QQvXz4Dr\n+vOIP4UVaOr+uM+7TgAgVnP4/K6IeJGzUDhX93pmpWhODfdu/oojEKVcpCojmEmS1\n+KCBtmIrQLqzMpnBpLNuSY+Q=\n+-----END PRIVATE KEY-----\ndiff --git a/tests/integration/test_reload_client_certificate/configs_secure/third_client.crt b/tests/integration/test_reload_client_certificate/configs_secure/third_client.crt\nnew file mode 100644\nindex 000000000000..4efb8f1b7b9f\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs_secure/third_client.crt\n@@ -0,0 +1,19 @@\n+-----BEGIN CERTIFICATE-----\n+MIIDCDCCAfCgAwIBAgIUC749qXQA+HcnMauXvrmGf+Yz7KswDQYJKoZIhvcNAQEL\n+BQAwFDESMBAGA1UEAwwJbG9jYWxob3N0MCAXDTI0MTAyNTA4NDg1N1oYDzIyOTgw\n+ODEwMDg0ODU3WjAUMRIwEAYDVQQDDAlsb2NhbGhvc3QwggEiMA0GCSqGSIb3DQEB\n+AQUAA4IBDwAwggEKAoIBAQCz25KjqUkbyjynDR9tUZW7S086WNJZxVJcf26IkHCV\n+ktCeE3hIVIWiF8jgrxTW0ENOfE8tSj9XUr3LOguJEMYyTBWPr7j6ETa51LZ49NC/\n+mhox4n3Cuz7lz1Pik62WreksB2bThkwHWdusTKxx5W50dGRBsYfMenpUbb0XDsZr\n+pimrIdCKFGYSRNTtQJg0D5WTtoM90xL+SHB7JOldhmKZor1/QQJTf9U54bd8fpKn\n+ZfoU3i1SP9oVcSOxGZTkbZOViJIhQwXYk92FKKF+TWElUAusc9NTfxI4v4bLIFFZ\n+01ysjBXBum+y8+CmvIxI3GemvQArR0WGPCe6ki/mEkg5AgMBAAGjUDBOMB0GA1Ud\n+DgQWBBSM8tve5gKRxqbJkcrj8RXyMA/TBDAfBgNVHSMEGDAWgBSM8tve5gKRxqbJ\n+kcrj8RXyMA/TBDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQB/QYNd\n+q8ub45u2tsCEr8xgON4CB2UGZD5RazY//W6kPWmLBf8fZjepF7yLjEWP6iQHWVWk\n+vIVmVsAnIyfOruUYQmxR4N770Tlit9PH7OqNtRzXHGV2el3Rp62mg8NneOx4SHX+\n+HITyPF3Wcg7YyWCuwwGXXS2hZ20csQXZima1jVyTNRN0GDvp0xjX+o7gyANGxbxa\n+EnjXTc4IWbLJ/+k4I38suavXg8RToHt+1Ndp0sHoT7Fxj+mbxOcc3QVtYU/Ct1W7\n+cirraodxjWkYX63zDeqteXU8JtNdJE43qFK4BVh3QTj7PhD3PFEAKcPbnJLbdTYC\n+ZU36rm75uOSdLXNB\n+-----END CERTIFICATE-----\ndiff --git a/tests/integration/test_reload_client_certificate/configs_secure/third_client.key b/tests/integration/test_reload_client_certificate/configs_secure/third_client.key\nnew file mode 100644\nindex 000000000000..f0fb61ac443f\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/configs_secure/third_client.key\n@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----\n+MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCz25KjqUkbyjyn\n+DR9tUZW7S086WNJZxVJcf26IkHCVktCeE3hIVIWiF8jgrxTW0ENOfE8tSj9XUr3L\n+OguJEMYyTBWPr7j6ETa51LZ49NC/mhox4n3Cuz7lz1Pik62WreksB2bThkwHWdus\n+TKxx5W50dGRBsYfMenpUbb0XDsZrpimrIdCKFGYSRNTtQJg0D5WTtoM90xL+SHB7\n+JOldhmKZor1/QQJTf9U54bd8fpKnZfoU3i1SP9oVcSOxGZTkbZOViJIhQwXYk92F\n+KKF+TWElUAusc9NTfxI4v4bLIFFZ01ysjBXBum+y8+CmvIxI3GemvQArR0WGPCe6\n+ki/mEkg5AgMBAAECggEATrbIBIxwDJOD2/BoUqWkDCY3dGevF8697vFuZKIiQ7PP\n+TX9j4vPq0DfsmDjHvAPFkTHiTQXzlroFik3LAp+uvhCCVzImmHq0IrwvZ9xtB43f\n+7Pkc5P6h1l3Ybo8HJ6zRIY3TuLtLxuPSuiOMTQSGRL0zq3SQ5DKuGwkz+kVjHXUN\n+MR2TECFwMHKQ5VLrC+7PMpsJYyOMlDAWhRfUalxC55xOXTpaN8TxNnwQ8K2ISVY5\n+212Jz/a4hn4LdwxSz3Tiu95PN072K87HLWx3EdT6vW4Ge5P/A3y+smIuNAlanMnu\n+plHBRtpATLiTxZt/n6npyrfQVbYjSH7KWhB8hBHtaQKBgQDh9Cq1c/KtqDtE0Ccr\n+/r9tZNTUwBE6VP+3OJeKdEdtsfuxjOCkS1oAjgBJiSDOiWPh1DdoDeVZjPKq6pIu\n+Mq12OE3Doa8znfCXGbkSzEKOb2unKZMJxzrz99kXt40W5DtrqKPNb24CNqTiY8Aa\n+CjtcX+3weat82VRXvph6U8ltMwKBgQDLxjiQQzNoY7qvg7CwJCjf9qq8jmLK766g\n+1FHXopqS+dTxDLM8eJSRrpmxGWJvNeNc1uPhsKsKgotqAMdBUQTf7rSTbt4MyoH5\n+bUcRLtr+0QTK9hDWMOOvleqNXha68vATkohWYfCueNsC60qD44o8RZAS6UNy3ENq\n+cM1cxqe84wKBgQDKkHutWnooJtajlTxY27O/nZKT/HA1bDgniMuKaz4R4Gr1PIez\n+on3YW3V0d0P7BP6PWRIm7bY79vkiMtLEKdiKUGWeyZdo3eHvhDb/3DCawtau8L2K\n+GZsHVp2//mS1Lfz7Qh8/L/NedqCQ+L4iWiPnZ3THjjwn3CoZ05ucpvrAMwKBgB54\n+nay039MUVq44Owub3KDg+dcIU62U+cAC/9oG7qZbxYPmKkc4oL7IJSNecGHA5SbU\n+2268RFdl/gLz6tfRjbEOuOHzCjFPdvAdbysanpTMHLNc6FefJ+zxtgk9sJh0C4Jh\n+vxFrw9nTKKzfEl12gQ1SOaEaUIO0fEBGbe8ZpauRAoGAMAlGV+2/K4ebvAJKOVTa\n+dKAzQ+TD2SJmeR1HZmKDYddNqwtZlzg3v4ZhCk4eaUmGeC1Bdh8MDuB3QQvXz4Dr\n+vOIP4UVaOr+uM+7TgAgVnP4/K6IeJGzUDhX93pmpWhODfdu/oojEKVcpCojmEmS1\n+KCBtmIrQLqzMpnBpLNuSY+Q=\n+-----END PRIVATE KEY-----\ndiff --git a/tests/integration/test_reload_client_certificate/test.py b/tests/integration/test_reload_client_certificate/test.py\nnew file mode 100644\nindex 000000000000..cb091d92ea61\n--- /dev/null\n+++ b/tests/integration/test_reload_client_certificate/test.py\n@@ -0,0 +1,197 @@\n+import os\n+import threading\n+import time\n+\n+import pytest\n+\n+from helpers.cluster import ClickHouseCluster\n+\n+TEST_DIR = os.path.dirname(__file__)\n+\n+cluster = ClickHouseCluster(\n+    __file__,\n+    zookeeper_certfile=os.path.join(TEST_DIR, \"configs_secure\", \"first_client.crt\"),\n+    zookeeper_keyfile=os.path.join(TEST_DIR, \"configs_secure\", \"first_client.key\"),\n+)\n+\n+node1 = cluster.add_instance(\n+    \"node1\",\n+    main_configs=[\n+        \"configs_secure/first_client.crt\",\n+        \"configs_secure/first_client.key\",\n+        \"configs_secure/second_client.crt\",\n+        \"configs_secure/second_client.key\",\n+        \"configs_secure/third_client.crt\",\n+        \"configs_secure/third_client.key\",\n+        \"configs_secure/conf.d/remote_servers.xml\",\n+        \"configs_secure/conf.d/ssl_conf.xml\",\n+        \"configs/zookeeper_config_with_ssl.xml\",\n+    ],\n+    with_zookeeper_secure=True,\n+)\n+\n+node2 = cluster.add_instance(\n+    \"node2\",\n+    main_configs=[\n+        \"configs_secure/first_client.crt\",\n+        \"configs_secure/first_client.key\",\n+        \"configs_secure/second_client.crt\",\n+        \"configs_secure/second_client.key\",\n+        \"configs_secure/third_client.crt\",\n+        \"configs_secure/third_client.key\",\n+        \"configs_secure/conf.d/remote_servers.xml\",\n+        \"configs_secure/conf.d/ssl_conf.xml\",\n+        \"configs/zookeeper_config_with_ssl.xml\",\n+    ],\n+    with_zookeeper_secure=True,\n+)\n+\n+nodes = [node1, node2]\n+\n+\n+@pytest.fixture(scope=\"module\", autouse=True)\n+def started_cluster():\n+    try:\n+        cluster.start()\n+        yield cluster\n+    finally:\n+        cluster.shutdown()\n+\n+\n+def secure_connection_test(started_cluster):\n+    # No asserts, connection works\n+\n+    node1.query(\"SELECT count() FROM system.zookeeper WHERE path = '/'\")\n+    node2.query(\"SELECT count() FROM system.zookeeper WHERE path = '/'\")\n+\n+    threads_number = 4\n+    iterations = 4\n+    threads = []\n+\n+    # Just checking for race conditions\n+\n+    for _ in range(threads_number):\n+        threads.append(\n+            threading.Thread(\n+                target=lambda: [\n+                    node1.query(\"SELECT count() FROM system.zookeeper WHERE path = '/'\")\n+                    for _ in range(iterations)\n+                ]\n+            )\n+        )\n+    for thread in threads:\n+        thread.start()\n+    for thread in threads:\n+        thread.join()\n+\n+\n+def change_config_to_key(name):\n+    \"\"\"\n+    Generate config with certificate/key name from args.\n+    Reload config.\n+    \"\"\"\n+    for node in nodes:\n+        node.exec_in_container(\n+            [\n+                \"bash\",\n+                \"-c\",\n+                \"\"\"cat > /etc/clickhouse-server/config.d/ssl_conf.xml << EOF\n+<clickhouse>\n+    <openSSL>\n+        <client>\n+            <certificateFile>/etc/clickhouse-server/config.d/{cur_name}_client.crt</certificateFile>\n+            <privateKeyFile>/etc/clickhouse-server/config.d/{cur_name}_client.key</privateKeyFile>\n+            <loadDefaultCAFile>true</loadDefaultCAFile>\n+            <cacheSessions>true</cacheSessions>\n+            <disableProtocols>sslv2,sslv3</disableProtocols>\n+            <preferServerCiphers>true</preferServerCiphers>\n+            <verificationMode>none</verificationMode>\n+            <invalidCertificateHandler>\n+                <name>RejectCertificateHandler</name>\n+            </invalidCertificateHandler>\n+        </client>\n+    </openSSL>\n+</clickhouse>\n+EOF\"\"\".format(\n+                    cur_name=name\n+                ),\n+            ]\n+        )\n+\n+        node.exec_in_container(\n+            [\"bash\", \"-c\", \"touch /etc/clickhouse-server/config.d/ssl_conf.xml\"],\n+        )\n+\n+\n+def check_reload_successful(node, cert_name):\n+    return node.grep_in_log(\n+        f\"Reloaded certificate (/etc/clickhouse-server/config.d/{cert_name}_client.crt)\"\n+    )\n+\n+\n+def check_error_handshake(node):\n+    return node.count_in_log(\"Code: 210.\")\n+\n+\n+def clean_logs():\n+    for node in nodes:\n+        node.exec_in_container(\n+            [\n+                \"bash\",\n+                \"-c\",\n+                \"echo -n > /var/log/clickhouse-server/clickhouse-server.log\",\n+            ]\n+        )\n+\n+\n+def check_certificate_switch(first, second):\n+    # Set first certificate\n+\n+    change_config_to_key(first)\n+\n+    # Restart zookeeper to reload the session\n+\n+    cluster.stop_zookeeper_nodes([\"zoo1\", \"zoo2\", \"zoo3\"])\n+    cluster.start_zookeeper_nodes([\"zoo1\", \"zoo2\", \"zoo3\"])\n+    cluster.wait_zookeeper_nodes_to_start([\"zoo1\", \"zoo2\", \"zoo3\"])\n+    clean_logs()\n+\n+    # Change certificate\n+\n+    change_config_to_key(second)\n+\n+    # Time to log\n+\n+    time.sleep(10)\n+\n+    # Check information about client certificates reloading in log Clickhouse\n+\n+    reload_successful = any(check_reload_successful(node, second) for node in nodes)\n+\n+    # Restart zookeeper to reload the session and clean logs for new check\n+\n+    cluster.stop_zookeeper_nodes([\"zoo1\", \"zoo2\", \"zoo3\"])\n+    cluster.start_zookeeper_nodes([\"zoo1\", \"zoo2\", \"zoo3\"])\n+    clean_logs()\n+    cluster.wait_zookeeper_nodes_to_start([\"zoo1\", \"zoo2\", \"zoo3\"])\n+\n+    if second == \"second\":\n+        try:\n+            secure_connection_test(started_cluster)\n+            assert False\n+        except:\n+            assert True\n+    else:\n+        secure_connection_test(started_cluster)\n+        error_handshake = any(check_error_handshake(node) == \"0\\n\" for node in nodes)\n+        assert reload_successful and error_handshake\n+\n+\n+def test_wrong_cn_cert():\n+    \"\"\"Checking the certificate reload with an incorrect CN, the expected behavior is Code: 210.\"\"\"\n+    check_certificate_switch(\"first\", \"second\")\n+\n+\n+def test_correct_cn_cert():\n+    \"\"\"Replacement with a valid certificate, the expected behavior is to restore the connection with Zookeeper.\"\"\"\n+    check_certificate_switch(\"second\", \"third\")\n",
  "problem_statement": "Support client certificate rotation\nSimilar to work done in #15765 which added support for reloading server certificates. Client certificates should also be dynamically reloaded when reloading the ClickHouse configuration. Our client certificates are short-lived and we'd prefer not having to restart `clickhouse-server` every time we rotate these client certificates. Thanks!\n",
  "hints_text": "",
  "created_at": "2024-10-23T22:16:57Z"
}