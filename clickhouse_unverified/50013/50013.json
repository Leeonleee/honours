{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 50013,
  "instance_id": "ClickHouse__ClickHouse-50013",
  "issue_numbers": [
    "49927"
  ],
  "base_commit": "e84f0895e72f25c7200993a1fd8ac8e11bd7f9b9",
  "patch": "diff --git a/programs/server/config.xml b/programs/server/config.xml\nindex 82dd697084cb..c6ae47b3050b 100644\n--- a/programs/server/config.xml\n+++ b/programs/server/config.xml\n@@ -719,8 +719,12 @@\n     <!-- Default profile of settings. -->\n     <default_profile>default</default_profile>\n \n-    <!-- Comma-separated list of prefixes for user-defined settings. -->\n-    <custom_settings_prefixes></custom_settings_prefixes>\n+    <!-- Comma-separated list of prefixes for user-defined settings.\n+         The server will allow to set these settings, and retrieve them with the getSetting function.\n+         They are also logged in the query_log, similarly to other settings, but have no special effect.\n+         The \"SQL_\" prefix is introduced for compatibility with MySQL - these settings are being set be Tableau.\n+    -->\n+    <custom_settings_prefixes>SQL_</custom_settings_prefixes>\n \n     <!-- System profile of settings. This settings are used by internal processes (Distributed DDL worker and so on). -->\n     <!-- <system_profile>default</system_profile> -->\ndiff --git a/src/IO/Resource/DynamicResourceManager.cpp b/src/IO/Resource/DynamicResourceManager.cpp\nindex 49e12984e33f..df0de6575f46 100644\n--- a/src/IO/Resource/DynamicResourceManager.cpp\n+++ b/src/IO/Resource/DynamicResourceManager.cpp\n@@ -98,9 +98,9 @@ DynamicResourceManager::State::Resource::~Resource()\n     if (attached_to != nullptr)\n     {\n         ISchedulerNode * root = nodes.find(\"/\")->second.ptr.get();\n-        attached_to->event_queue->enqueue([scheduler = attached_to, root]\n+        attached_to->event_queue->enqueue([my_scheduler = attached_to, root]\n         {\n-            scheduler->removeChild(root);\n+            my_scheduler->removeChild(root);\n         });\n     }\n }\n",
  "test_patch": "diff --git a/tests/config/config.d/custom_settings_prefixes.xml b/tests/config/config.d/custom_settings_prefixes.xml\nindex ec66c1a930ec..9baaa4e09f3c 100644\n--- a/tests/config/config.d/custom_settings_prefixes.xml\n+++ b/tests/config/config.d/custom_settings_prefixes.xml\n@@ -1,4 +1,4 @@\n <clickhouse>\n     <!-- Comma-separated list of prefixes for user-defined settings. -->\n-    <custom_settings_prefixes>custom_</custom_settings_prefixes>\n+    <custom_settings_prefixes>SQL_,custom_</custom_settings_prefixes>\n </clickhouse>\ndiff --git a/tests/queries/0_stateless/02737_sql_auto_is_null.reference b/tests/queries/0_stateless/02737_sql_auto_is_null.reference\nnew file mode 100644\nindex 000000000000..573541ac9702\n--- /dev/null\n+++ b/tests/queries/0_stateless/02737_sql_auto_is_null.reference\n@@ -0,0 +1,1 @@\n+0\ndiff --git a/tests/queries/0_stateless/02737_sql_auto_is_null.sql b/tests/queries/0_stateless/02737_sql_auto_is_null.sql\nnew file mode 100644\nindex 000000000000..22f1a9524ca8\n--- /dev/null\n+++ b/tests/queries/0_stateless/02737_sql_auto_is_null.sql\n@@ -0,0 +1,2 @@\n+SET SQL_AUTO_IS_NULL = 0;\n+SELECT getSetting('SQL_AUTO_IS_NULL');\n",
  "problem_statement": "MySQL compatibility: SQL_AUTO_IS_NULL setting\n**Use case**\r\n\r\nBI tools like Tableau send the following command to the server during the initial connection:\r\n\r\n```\r\nSET SQL_AUTO_IS_NULL = 0\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nAccording to the [docs](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_auto_is_null), the default value in MySQL should be already 0. One of the possible workarounds here is to just no-op since we don't want to do the transformation of the queries containing `IS NULL` statements. \r\n\r\n**Additional context**\r\n\r\nFull stack trace:\r\n\r\n```\r\n2023.05.16 15:55:52.164882 [ 358 ] {} <Trace> MySQLHandler: Sent handshake\r\n2023.05.16 15:55:52.207020 [ 358 ] {} <Trace> MySQLHandler: payload size: 91\r\n2023.05.16 15:55:52.207102 [ 358 ] {} <Trace> MySQLHandler: Capabilities: 431923853, max_packet_size: 1073741824, character_set: 255, user: default, auth_response length: 20, database: default, auth_plugin_name: mysql_native_password\r\n2023.05.16 15:55:52.207145 [ 358 ] {} <Debug> MYSQL-Session: f71fb593-329a-4fcb-96ab-f96fcfb77e30 Authenticating user 'default' from 34.246.62.141:36697\r\n2023.05.16 15:55:52.207237 [ 358 ] {} <Debug> MYSQL-Session: f71fb593-329a-4fcb-96ab-f96fcfb77e30 Authenticated with global context as user 94309d50-4f52-5250-31bd-74fecac179db\r\n2023.05.16 15:55:52.207345 [ 358 ] {} <Debug> MySQLHandler: Authentication for user default succeeded.\r\n2023.05.16 15:55:52.207363 [ 358 ] {} <Debug> MYSQL-Session: f71fb593-329a-4fcb-96ab-f96fcfb77e30 Creating session context with user_id: 94309d50-4f52-5250-31bd-74fecac179db\r\n2023.05.16 15:55:52.207488 [ 358 ] {} <Trace> ContextAccess (default): Settings: readonly=0, allow_ddl=true, allow_introspection_functions=false\r\n2023.05.16 15:55:52.207530 [ 358 ] {} <Trace> ContextAccess (default): List of all grants: GRANT SHOW, SELECT, INSERT, ALTER, CREATE, DROP, UNDROP TABLE, TRUNCATE, OPTIMIZE, BACKUP, KILL QUERY, KILL TRANSACTION, MOVE PARTITION BETWEEN SHARDS, ACCESS MANAGEMENT, SYSTEM, dictGet, INTROSPECTION, SOURCES, CLUSTER ON *.* WITH GRANT OPTION\r\n2023.05.16 15:55:52.207547 [ 358 ] {} <Trace> ContextAccess (default): List of all grants including implicit: GRANT SHOW, SELECT, INSERT, ALTER, CREATE, DROP, UNDROP TABLE, TRUNCATE, OPTIMIZE, BACKUP, KILL QUERY, KILL TRANSACTION, MOVE PARTITION BETWEEN SHARDS, ACCESS MANAGEMENT, SYSTEM, dictGet, INTROSPECTION, SOURCES, CLUSTER ON *.* WITH GRANT OPTION\r\n2023.05.16 15:55:52.207602 [ 358 ] {} <Trace> ContextAccess (default): Settings: readonly=0, allow_ddl=true, allow_introspection_functions=false\r\n2023.05.16 15:55:52.207629 [ 358 ] {} <Trace> ContextAccess (default): List of all grants: GRANT SHOW, SELECT, INSERT, ALTER, CREATE, DROP, UNDROP TABLE, TRUNCATE, OPTIMIZE, BACKUP, KILL QUERY, KILL TRANSACTION, MOVE PARTITION BETWEEN SHARDS, ACCESS MANAGEMENT, SYSTEM, dictGet, INTROSPECTION, SOURCES, CLUSTER ON *.* WITH GRANT OPTION\r\n2023.05.16 15:55:52.207646 [ 358 ] {} <Trace> ContextAccess (default): List of all grants including implicit: GRANT SHOW, SELECT, INSERT, ALTER, CREATE, DROP, UNDROP TABLE, TRUNCATE, OPTIMIZE, BACKUP, KILL QUERY, KILL TRANSACTION, MOVE PARTITION BETWEEN SHARDS, ACCESS MANAGEMENT, SYSTEM, dictGet, INTROSPECTION, SOURCES, CLUSTER ON *.* WITH GRANT OPTION\r\n2023.05.16 15:55:52.249759 [ 358 ] {} <Debug> MySQLHandler: Received command: 3. Connection id: 340.\r\n2023.05.16 15:55:52.291866 [ 358 ] {} <Debug> MySQLHandler: Received command: 3. Connection id: 340.\r\n2023.05.16 15:55:52.333917 [ 358 ] {} <Debug> MySQLHandler: Received command: 3. Connection id: 340.\r\n2023.05.16 15:55:52.334031 [ 358 ] {} <Debug> MYSQL-Session: f71fb593-329a-4fcb-96ab-f96fcfb77e30 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default\r\n2023.05.16 15:55:52.334253 [ 358 ] {mysql:340:cbc24c7d-19e7-4431-9a15-c4986b55bb39} <Debug> executeQuery: (from 34.246.62.141:36697) SET SQL_AUTO_IS_NULL = 0 (stage: Complete)\r\n2023.05.16 15:55:52.334940 [ 358 ] {mysql:340:cbc24c7d-19e7-4431-9a15-c4986b55bb39} <Error> executeQuery: Code: 115. DB::Exception: Unknown setting SQL_AUTO_IS_NULL. (UNKNOWN_SETTING) (version 23.4.1.1157 (official build)) (from 34.246.62.141:36697) (in query: SET SQL_AUTO_IS_NULL = 0), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xe31fa95 in /usr/bin/clickhouse\r\n1. ? @ 0x8acc5a4 in /usr/bin/clickhouse\r\n2. DB::BaseSettingsHelpers::throwSettingNotFound(std::basic_string_view<char, std::char_traits<char>>) @ 0x12973908 in /usr/bin/clickhouse\r\n3. ? @ 0x1270de80 in /usr/bin/clickhouse\r\n4. DB::SettingsConstraints::checkImpl(DB::Settings const&, DB::SettingChange&, DB::SettingsConstraints::ReactionOnViolation) const @ 0x12837c22 in /usr/bin/clickhouse\r\n5. DB::InterpreterSetQuery::execute() @ 0x13aa8350 in /usr/bin/clickhouse\r\n6. ? @ 0x13dc01e7 in /usr/bin/clickhouse\r\n7. ? @ 0x13dc612c in /usr/bin/clickhouse\r\n8. DB::MySQLHandler::comQuery(DB::ReadBuffer&) @ 0x14b68d45 in /usr/bin/clickhouse\r\n9. DB::MySQLHandler::run() @ 0x14b65754 in /usr/bin/clickhouse\r\n10. Poco::Net::TCPServerConnection::start() @ 0x17aeb0d4 in /usr/bin/clickhouse\r\n11. Poco::Net::TCPServerDispatcher::run() @ 0x17aec2fb in /usr/bin/clickhouse\r\n12. Poco::PooledThread::run() @ 0x17c6a7a7 in /usr/bin/clickhouse\r\n13. Poco::ThreadImpl::runnableEntry(void*) @ 0x17c681dd in /usr/bin/clickhouse\r\n14. ? @ 0x7f3f3b701609 in ?\r\n15. __clone @ 0x7f3f3b626133 in ?\r\n\r\n2023.05.16 15:55:52.335105 [ 358 ] {mysql:340:cbc24c7d-19e7-4431-9a15-c4986b55bb39} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.\r\n2023.05.16 15:55:52.335238 [ 358 ] {} <Error> MySQLHandler: MySQLHandler: Cannot read packet: : Code: 115. DB::Exception: Unknown setting SQL_AUTO_IS_NULL. (UNKNOWN_SETTING), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xe31fa95 in /usr/bin/clickhouse\r\n1. ? @ 0x8acc5a4 in /usr/bin/clickhouse\r\n2. DB::BaseSettingsHelpers::throwSettingNotFound(std::basic_string_view<char, std::char_traits<char>>) @ 0x12973908 in /usr/bin/clickhouse\r\n3. ? @ 0x1270de80 in /usr/bin/clickhouse\r\n4. DB::SettingsConstraints::checkImpl(DB::Settings const&, DB::SettingChange&, DB::SettingsConstraints::ReactionOnViolation) const @ 0x12837c22 in /usr/bin/clickhouse\r\n5. DB::InterpreterSetQuery::execute() @ 0x13aa8350 in /usr/bin/clickhouse\r\n6. ? @ 0x13dc01e7 in /usr/bin/clickhouse\r\n7. ? @ 0x13dc612c in /usr/bin/clickhouse\r\n8. DB::MySQLHandler::comQuery(DB::ReadBuffer&) @ 0x14b68d45 in /usr/bin/clickhouse\r\n9. DB::MySQLHandler::run() @ 0x14b65754 in /usr/bin/clickhouse\r\n10. Poco::Net::TCPServerConnection::start() @ 0x17aeb0d4 in /usr/bin/clickhouse\r\n11. Poco::Net::TCPServerDispatcher::run() @ 0x17aec2fb in /usr/bin/clickhouse\r\n12. Poco::PooledThread::run() @ 0x17c6a7a7 in /usr/bin/clickhouse\r\n13. Poco::ThreadImpl::runnableEntry(void*) @ 0x17c681dd in /usr/bin/clickhouse\r\n14. ? @ 0x7f3f3b701609 in ?\r\n15. __clone @ 0x7f3f3b626133 in ?\r\n (version 23.4.1.1157 (official build))\r\n2023.05.16 15:55:52.377362 [ 358 ] {} <Debug> MySQLHandler: Received command: 1. Connection id: 340.\r\n2023.05.16 15:55:53.000387 [ 287 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 1.58 GiB, peak 11.37 GiB, free memory in arenas 64.58 MiB, will set to 1.56 GiB (RSS), difference: -23.69 MiB\r\n2023.05.16 15:55:53.086353 [ 358 ] {} <Trace> MySQLHandlerFactory: MySQL connection. Id: 341. Address: 34.246.62.141:64644\r\n2023.05.16 15:55:53.086661 [ 358 ] {} <Trace> MySQLHandler: Sent handshake\r\n2023.05.16 15:55:53.128771 [ 358 ] {} <Trace> MySQLHandler: payload size: 91\r\n2023.05.16 15:55:53.128859 [ 358 ] {} <Trace> MySQLHandler: Capabilities: 431923853, max_packet_size: 1073741824, character_set: 255, user: default, auth_response length: 20, database: default, auth_plugin_name: mysql_native_password\r\n2023.05.16 15:55:53.128938 [ 358 ] {} <Debug> MYSQL-Session: b7fd9b69-bd60-4afb-99c5-e39368a1ab13 Authenticating user 'default' from 34.246.62.141:64644\r\n2023.05.16 15:55:53.129007 [ 358 ] {} <Debug> MYSQL-Session: b7fd9b69-bd60-4afb-99c5-e39368a1ab13 Authenticated with global context as user 94309d50-4f52-5250-31bd-74fecac179db\r\n2023.05.16 15:55:53.129026 [ 358 ] {} <Debug> MySQLHandler: Authentication for user default succeeded.\r\n2023.05.16 15:55:53.129038 [ 358 ] {} <Debug> MYSQL-Session: b7fd9b69-bd60-4afb-99c5-e39368a1ab13 Creating session context with user_id: 94309d50-4f52-5250-31bd-74fecac179db\r\n2023.05.16 15:55:53.171211 [ 358 ] {} <Debug> MySQLHandler: Received command: 3. Connection id: 341.\r\n2023.05.16 15:55:53.213336 [ 358 ] {} <Debug> MySQLHandler: Received command: 3. Connection id: 341.\r\n2023.05.16 15:55:53.255402 [ 358 ] {} <Debug> MySQLHandler: Received command: 3. Connection id: 341.\r\n2023.05.16 15:55:53.255510 [ 358 ] {} <Debug> MYSQL-Session: b7fd9b69-bd60-4afb-99c5-e39368a1ab13 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default\r\n2023.05.16 15:55:53.255728 [ 358 ] {mysql:341:a59fc5bc-fd1d-41be-9c1c-224b6f870fcd} <Debug> executeQuery: (from 34.246.62.141:64644) SET SQL_AUTO_IS_NULL = 0 (stage: Complete)\r\n2023.05.16 15:55:53.256409 [ 358 ] {mysql:341:a59fc5bc-fd1d-41be-9c1c-224b6f870fcd} <Error> executeQuery: Code: 115. DB::Exception: Unknown setting SQL_AUTO_IS_NULL. (UNKNOWN_SETTING) (version 23.4.1.1157 (official build)) (from 34.246.62.141:64644) (in query: SET SQL_AUTO_IS_NULL = 0), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xe31fa95 in /usr/bin/clickhouse\r\n1. ? @ 0x8acc5a4 in /usr/bin/clickhouse\r\n2. DB::BaseSettingsHelpers::throwSettingNotFound(std::basic_string_view<char, std::char_traits<char>>) @ 0x12973908 in /usr/bin/clickhouse\r\n3. ? @ 0x1270de80 in /usr/bin/clickhouse\r\n4. DB::SettingsConstraints::checkImpl(DB::Settings const&, DB::SettingChange&, DB::SettingsConstraints::ReactionOnViolation) const @ 0x12837c22 in /usr/bin/clickhouse\r\n5. DB::InterpreterSetQuery::execute() @ 0x13aa8350 in /usr/bin/clickhouse\r\n6. ? @ 0x13dc01e7 in /usr/bin/clickhouse\r\n7. ? @ 0x13dc612c in /usr/bin/clickhouse\r\n8. DB::MySQLHandler::comQuery(DB::ReadBuffer&) @ 0x14b68d45 in /usr/bin/clickhouse\r\n9. DB::MySQLHandler::run() @ 0x14b65754 in /usr/bin/clickhouse\r\n10. Poco::Net::TCPServerConnection::start() @ 0x17aeb0d4 in /usr/bin/clickhouse\r\n11. Poco::Net::TCPServerDispatcher::run() @ 0x17aec2fb in /usr/bin/clickhouse\r\n12. Poco::PooledThread::run() @ 0x17c6a7a7 in /usr/bin/clickhouse\r\n13. Poco::ThreadImpl::runnableEntry(void*) @ 0x17c681dd in /usr/bin/clickhouse\r\n14. ? @ 0x7f3f3b701609 in ?\r\n15. __clone @ 0x7f3f3b626133 in ?\r\n\r\n2023.05.16 15:55:53.256568 [ 358 ] {mysql:341:a59fc5bc-fd1d-41be-9c1c-224b6f870fcd} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.\r\n2023.05.16 15:55:53.256634 [ 358 ] {} <Error> MySQLHandler: MySQLHandler: Cannot read packet: : Code: 115. DB::Exception: Unknown setting SQL_AUTO_IS_NULL. (UNKNOWN_SETTING), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xe31fa95 in /usr/bin/clickhouse\r\n1. ? @ 0x8acc5a4 in /usr/bin/clickhouse\r\n2. DB::BaseSettingsHelpers::throwSettingNotFound(std::basic_string_view<char, std::char_traits<char>>) @ 0x12973908 in /usr/bin/clickhouse\r\n3. ? @ 0x1270de80 in /usr/bin/clickhouse\r\n4. DB::SettingsConstraints::checkImpl(DB::Settings const&, DB::SettingChange&, DB::SettingsConstraints::ReactionOnViolation) const @ 0x12837c22 in /usr/bin/clickhouse\r\n5. DB::InterpreterSetQuery::execute() @ 0x13aa8350 in /usr/bin/clickhouse\r\n6. ? @ 0x13dc01e7 in /usr/bin/clickhouse\r\n7. ? @ 0x13dc612c in /usr/bin/clickhouse\r\n8. DB::MySQLHandler::comQuery(DB::ReadBuffer&) @ 0x14b68d45 in /usr/bin/clickhouse\r\n9. DB::MySQLHandler::run() @ 0x14b65754 in /usr/bin/clickhouse\r\n10. Poco::Net::TCPServerConnection::start() @ 0x17aeb0d4 in /usr/bin/clickhouse\r\n11. Poco::Net::TCPServerDispatcher::run() @ 0x17aec2fb in /usr/bin/clickhouse\r\n12. Poco::PooledThread::run() @ 0x17c6a7a7 in /usr/bin/clickhouse\r\n13. Poco::ThreadImpl::runnableEntry(void*) @ 0x17c681dd in /usr/bin/clickhouse\r\n14. ? @ 0x7f3f3b701609 in ?\r\n15. __clone @ 0x7f3f3b626133 in ?\r\n (version 23.4.1.1157 (official build))\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2023-05-19T08:30:05Z"
}