{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 37681,
  "instance_id": "ClickHouse__ClickHouse-37681",
  "issue_numbers": [
    "36770"
  ],
  "base_commit": "abe21ab80dac8420d2c5f4c92e8f58fc269397e8",
  "patch": "diff --git a/src/Functions/serverConstants.cpp b/src/Functions/serverConstants.cpp\nindex ccefd74b85bb..96615d0a4c98 100644\n--- a/src/Functions/serverConstants.cpp\n+++ b/src/Functions/serverConstants.cpp\n@@ -1,4 +1,6 @@\n #include <Functions/FunctionConstantBase.h>\n+#include <base/getFQDNOrHostName.h>\n+#include <Poco/Util/AbstractConfiguration.h>\n #include <DataTypes/DataTypesNumber.h>\n #include <DataTypes/DataTypeString.h>\n #include <DataTypes/DataTypeUUID.h>\n@@ -115,6 +117,13 @@ namespace\n         static FunctionPtr create(ContextPtr context) { return std::make_shared<FunctionGetOSKernelVersion>(context); }\n     };\n \n+    class FunctionDisplayName : public FunctionConstantBase<FunctionDisplayName, String, DataTypeString>\n+    {\n+    public:\n+        static constexpr auto name = \"displayName\";\n+        explicit FunctionDisplayName(ContextPtr context) : FunctionConstantBase(context->getConfigRef().getString(\"display_name\", getFQDNOrHostName()), context->isDistributed()) {}\n+        static FunctionPtr create(ContextPtr context) {return std::make_shared<FunctionDisplayName>(context); }\n+    };\n }\n \n #if defined(__ELF__) && !defined(OS_FREEBSD)\n@@ -173,4 +182,20 @@ REGISTER_FUNCTION(GetOSKernelVersion)\n }\n \n \n+REGISTER_FUNCTION(DisplayName)\n+{\n+    factory.registerFunction<FunctionDisplayName>(\n+        {\n+            R\"(\n+Returns the value of `display_name` from config or server FQDN if not set.\n+\n+[example:displayName]\n+)\",\n+            Documentation::Examples{{\"displayName\", \"SELECT displayName();\"}},\n+            Documentation::Categories{\"Constant\", \"Miscellaneous\"}\n+        },\n+        FunctionFactory::CaseSensitive);\n+}\n+\n+\n }\n",
  "test_patch": "diff --git a/tests/config/config.d/display_name.xml b/tests/config/config.d/display_name.xml\nnew file mode 100644\nindex 000000000000..d386a8efaf25\n--- /dev/null\n+++ b/tests/config/config.d/display_name.xml\n@@ -0,0 +1,3 @@\n+<clickhouse>\n+    <display_name>functional-tests</display_name>\n+</clickhouse>\ndiff --git a/tests/config/install.sh b/tests/config/install.sh\nindex 9a172f0be157..876d05507fe4 100755\n--- a/tests/config/install.sh\n+++ b/tests/config/install.sh\n@@ -51,6 +51,7 @@ ln -sf $SRC_PATH/config.d/system_unfreeze.xml $DEST_SERVER_PATH/config.d/\n ln -sf $SRC_PATH/config.d/enable_zero_copy_replication.xml $DEST_SERVER_PATH/config.d/\n ln -sf $SRC_PATH/config.d/nlp.xml $DEST_SERVER_PATH/config.d/\n ln -sf $SRC_PATH/config.d/enable_keeper_map.xml $DEST_SERVER_PATH/config.d/\n+ln -sf $SRC_PATH/config.d/display_name.xml $DEST_SERVER_PATH/config.d/\n \n # Not supported with fasttest.\n if [ \"${DEST_SERVER_PATH}\" = \"/etc/clickhouse-server\" ]\ndiff --git a/tests/queries/0_stateless/02313_displayname.reference b/tests/queries/0_stateless/02313_displayname.reference\nnew file mode 100644\nindex 000000000000..604a4944b33b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02313_displayname.reference\n@@ -0,0 +1,1 @@\n+functional-tests\ndiff --git a/tests/queries/0_stateless/02313_displayname.sql b/tests/queries/0_stateless/02313_displayname.sql\nnew file mode 100644\nindex 000000000000..6b6411b798bf\n--- /dev/null\n+++ b/tests/queries/0_stateless/02313_displayname.sql\n@@ -0,0 +1,1 @@\n+select displayName();\n",
  "problem_statement": "Add miscellaneous function `displayName()`\n**Use case**\r\n\r\nIt is better than hostname in the following example:\r\n```\r\nSELECT hostname() AS host, event_time, round(value, 2) AS v, bar(v, 0, 10, 100) FROM system.asynchronous_metric_log WHERE event_date >= yesterday() AND event_time >= now() - 300 AND metric = 'LoadAverage1' ORDER BY host, event_time\r\n```\r\n\r\nBecause hostnames can be non-informative like `ip-172-31-5-46`.\r\n\n",
  "hints_text": "@alexey-milovidov , I am willing to take this up.\r\nHere, Are  we intend to change the existing function name \"hostname()\" to displayName() ?\nNo, these will be two separate functions.\r\nMaybe you will be interested in implementing access control for functions.\r\nSo, you will be able to give access to displayName and remove access for hostname and fqdn.\n> No, these will be two separate functions.\r\n> Maybe you will be interested in implementing access control for functions.\r\n> So, you will be able to give access to displayName and remove access for hostname and fqdn.\r\n\r\n@alexey-milovidov , What kind of output is expected from new function displayName(). I would like to understand the  difference in output  from this new function and hostname() and FQDN() which returns 'hostname -f' output. \nSee `server_display_name` inside the code and `display_name` in config.xml",
  "created_at": "2022-05-31T09:10:20Z"
}