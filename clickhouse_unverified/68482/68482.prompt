You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Parser assertion error
**Company or project name**

Clickhouse employee :smile: 

**Describe what's wrong**

Compile Clickhouse with Debug symbols, then start the shell and paste this SQL query:

```sql
SELECT '{"a": \'\x11\'}'::String;
```
Before hitting enter, move the cursor back and delete the second `1`. An assertion error will hit in Clickhouse:

```
src/Parsers/ExpressionElementParsers.cpp:946: virtual bool DB::ParserCastOperator::parseImpl(Pos &, ASTPtr &, Expected &): Assertion `buf.count() == data_size' failed.
```

**Does it reproduce on the most recent release?**

Yes

**How to reproduce**

Start Clickhouse binary and run the query above.

**Expected behavior**

The assertion error should not trigger.

**Error message and/or stacktrace**

The stack trace:
```
clickhouse: src/Parsers/ExpressionElementParsers.cpp:946: virtual bool DB::ParserCastOperator::parseImpl(Pos &, ASTPtr &, Expected &): Assertion `buf.count() == data_size' failed.
2024.08.14 09:37:41.225537 [ 381437 ] {} <Fatal> ClientBase: ########## Short fault info ############
2024.08.14 09:37:41.225624 [ 381437 ] {} <Fatal> ClientBase: (version 24.8.1.1, build id: , git hash: ) (from thread 374714) Received signal 6
2024.08.14 09:37:41.225654 [ 381437 ] {} <Fatal> ClientBase: Signal description: Aborted
2024.08.14 09:37:41.225682 [ 381437 ] {} <Fatal> ClientBase: 
2024.08.14 09:37:41.225740 [ 381437 ] {} <Fatal> ClientBase: Stack trace: 0x000057e3d822d06d 0x000057e3d87575b0 0x000072fcd5845320 0x000072fcd589eb1d 0x000072fcd584526e 0x000072fcd58288ff 0x000072fcd582881b 0x000072fcd583b507 0x000057e3e8ef8fbc 0x000057e3e8f718a9 0x000057e3e8f2e4b5 0x000057e3e8f33e8f 0x000057e3e8f30287 0x000057e3e8f2fa40 0x000057e3e8f718a9 0x000057e3e8f0c5d4 0x000057e3e8f718a9 0x000057e3e8f718a9 0x000057e3e8f3bd16 0x000057e3e8f240bb 0x000057e3e8f718a9 0x000057e3e8f27e90 0x000057e3e8f718a9 0x000057e3e8f283d2 0x000057e3e8f718a9 0x000057e3e9031ef3 0x000057e3e8f718a9 0x000057e3e902ff50 0x000057e3e8f718a9 0x000057e3e8f3c125 0x000057e3e8f2482b 0x000057e3e8f718a9 0x000057e3e8ffc006 0x000057e3e8f718a9 0x000057e3e8fd997d 0x000057e3e8f718a9 0x000057e3e8fcd3db 0x000057e3e8f718a9 0x000057e3e7ded5f1 0x000057e3e9ca982d 0x000057e3e9ca3c30 0x000057e3e9c96c7e 0x000057e3e9c95bd6 0x000057e3e9c93e3a 0x000057e3e9ca80d5
2024.08.14 09:37:41.225793 [ 381437 ] {} <Fatal> ClientBase: ########################################
2024.08.14 09:37:41.225830 [ 381437 ] {} <Fatal> ClientBase: (version 24.8.1.1, build id: , git hash: ) (from thread 374714) (no query) Received signal Aborted (6)
2024.08.14 09:37:41.225855 [ 381437 ] {} <Fatal> ClientBase: 
2024.08.14 09:37:41.225882 [ 381437 ] {} <Fatal> ClientBase: Stack trace: 0x000057e3d822d06d 0x000057e3d87575b0 0x000072fcd5845320 0x000072fcd589eb1d 0x000072fcd584526e 0x000072fcd58288ff 0x000072fcd582881b 0x000072fcd583b507 0x000057e3e8ef8fbc 0x000057e3e8f718a9 0x000057e3e8f2e4b5 0x000057e3e8f33e8f 0x000057e3e8f30287 0x000057e3e8f2fa40 0x000057e3e8f718a9 0x000057e3e8f0c5d4 0x000057e3e8f718a9 0x000057e3e8f718a9 0x000057e3e8f3bd16 0x000057e3e8f240bb 0x000057e3e8f718a9 0x000057e3e8f27e90 0x000057e3e8f718a9 0x000057e3e8f283d2 0x000057e3e8f718a9 0x000057e3e9031ef3 0x000057e3e8f718a9 0x000057e3e902ff50 0x000057e3e8f718a9 0x000057e3e8f3c125 0x000057e3e8f2482b 0x000057e3e8f718a9 0x000057e3e8ffc006 0x000057e3e8f718a9 0x000057e3e8fd997d 0x000057e3e8f718a9 0x000057e3e8fcd3db 0x000057e3e8f718a9 0x000057e3e7ded5f1 0x000057e3e9ca982d 0x000057e3e9ca3c30 0x000057e3e9c96c7e 0x000057e3e9c95bd6 0x000057e3e9c93e3a 0x000057e3e9ca80d5
2024.08.14 09:37:41.265876 [ 381437 ] {} <Fatal> ClientBase: 0.0. inlined from src/Common/StackTrace.cpp:349: StackTrace::tryCapture()
2024.08.14 09:37:41.265927 [ 381437 ] {} <Fatal> ClientBase: 0. src/Common/StackTrace.cpp:318: StackTrace::StackTrace(ucontext_t const&) @ 0x000000001613c06d
2024.08.14 09:37:41.319258 [ 381437 ] {} <Fatal> ClientBase: 1. src/Common/SignalHandlers.cpp:0: signalHandler(int, siginfo_t*, void*) @ 0x00000000166665b0
2024.08.14 09:37:41.319310 [ 381437 ] {} <Fatal> ClientBase: 2. ? @ 0x000072fcd5845320
2024.08.14 09:37:41.319332 [ 381437 ] {} <Fatal> ClientBase: 3. ? @ 0x000072fcd589eb1d
2024.08.14 09:37:41.319351 [ 381437 ] {} <Fatal> ClientBase: 4. ? @ 0x000072fcd584526e
2024.08.14 09:37:41.319370 [ 381437 ] {} <Fatal> ClientBase: 5. ? @ 0x000072fcd58288ff
2024.08.14 09:37:41.319387 [ 381437 ] {} <Fatal> ClientBase: 6. ? @ 0x000072fcd582881b
2024.08.14 09:37:41.319405 [ 381437 ] {} <Fatal> ClientBase: 7. ? @ 0x000072fcd583b507
2024.08.14 09:37:41.436809 [ 381437 ] {} <Fatal> ClientBase: 8.0. inlined from contrib/llvm-project/libcxx/include/string:1956: String::__init(char const*, unsigned long)
2024.08.14 09:37:41.436857 [ 381437 ] {} <Fatal> ClientBase: 8.1. inlined from contrib/llvm-project/libcxx/include/string:1993: basic_string
2024.08.14 09:37:41.436891 [ 381437 ] {} <Fatal> ClientBase: 8. src/Parsers/ExpressionElementParsers.cpp:949: DB::ParserCastOperator::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e07fbc
2024.08.14 09:37:41.451779 [ 381437 ] {} <Fatal> ClientBase: 9.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:41.451838 [ 381437 ] {} <Fatal> ClientBase: 9.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:41.451875 [ 381437 ] {} <Fatal> ClientBase: 9. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:41.577699 [ 381437 ] {} <Fatal> ClientBase: 10. src/Parsers/ExpressionListParsers.cpp:2302: DB::ParseCastExpression(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e3d4b5
2024.08.14 09:37:41.657629 [ 381437 ] {} <Fatal> ClientBase: 11. src/Parsers/ExpressionListParsers.cpp:2566: DB::ParserExpressionImpl::tryParseOperand(std::vector<std::unique_ptr<DB::Layer, std::default_delete<DB::Layer>>, std::allocator<std::unique_ptr<DB::Layer, std::default_delete<DB::Layer>>>>&, DB::IParser::Pos&, DB::Expected&) @ 0x0000000026e42e8f
2024.08.14 09:37:41.735760 [ 381437 ] {} <Fatal> ClientBase: 12. src/Parsers/ExpressionListParsers.cpp:0: DB::ParserExpressionImpl::parse(std::unique_ptr<DB::Layer, std::default_delete<DB::Layer>>, DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e3f287
2024.08.14 09:37:41.813157 [ 381437 ] {} <Fatal> ClientBase: 13. src/Parsers/ExpressionListParsers.cpp:0: DB::ParserExpression::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e3ea40
2024.08.14 09:37:41.827726 [ 381437 ] {} <Fatal> ClientBase: 14.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:41.827787 [ 381437 ] {} <Fatal> ClientBase: 14.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:41.827820 [ 381437 ] {} <Fatal> ClientBase: 14. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:41.957274 [ 381437 ] {} <Fatal> ClientBase: 15. src/Parsers/ExpressionElementParsers.cpp:2118: DB::ParserWithOptionalAlias::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e1b5d4
2024.08.14 09:37:41.971890 [ 381437 ] {} <Fatal> ClientBase: 16.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:41.971940 [ 381437 ] {} <Fatal> ClientBase: 16.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:41.971971 [ 381437 ] {} <Fatal> ClientBase: 16. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:41.986523 [ 381437 ] {} <Fatal> ClientBase: 17.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:41.986579 [ 381437 ] {} <Fatal> ClientBase: 17.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:41.986608 [ 381437 ] {} <Fatal> ClientBase: 17. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.058159 [ 381437 ] {} <Fatal> ClientBase: 18. src/Parsers/ExpressionListParsers.cpp:53: DB::ParserList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0::operator()() const @ 0x0000000026e4ad16
2024.08.14 09:37:42.128909 [ 381437 ] {} <Fatal> ClientBase: 19.0. inlined from src/Parsers/ExpressionListParsers.h:40: bool DB::ParserList::parseUtil<DB::ParserList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::Expected&, DB::ParserList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&, DB::IParser&, bool)
2024.08.14 09:37:42.128956 [ 381437 ] {} <Fatal> ClientBase: 19. src/Parsers/ExpressionListParsers.cpp:60: DB::ParserList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e330bb
2024.08.14 09:37:42.143525 [ 381437 ] {} <Fatal> ClientBase: 20.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.143584 [ 381437 ] {} <Fatal> ClientBase: 20.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.143615 [ 381437 ] {} <Fatal> ClientBase: 20. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.218093 [ 381437 ] {} <Fatal> ClientBase: 21.0. inlined from src/Parsers/ExpressionListParsers.h:25: ~ParserList
2024.08.14 09:37:42.218134 [ 381437 ] {} <Fatal> ClientBase: 21. src/Parsers/ExpressionListParsers.cpp:319: DB::ParserExpressionList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e36e90
2024.08.14 09:37:42.232673 [ 381437 ] {} <Fatal> ClientBase: 22.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.232724 [ 381437 ] {} <Fatal> ClientBase: 22.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.232753 [ 381437 ] {} <Fatal> ClientBase: 22. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.307210 [ 381437 ] {} <Fatal> ClientBase: 23. src/Parsers/ExpressionListParsers.cpp:327: DB::ParserNotEmptyExpressionList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e373d2
2024.08.14 09:37:42.321984 [ 381437 ] {} <Fatal> ClientBase: 24.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.322032 [ 381437 ] {} <Fatal> ClientBase: 24.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.322059 [ 381437 ] {} <Fatal> ClientBase: 24. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.349819 [ 381437 ] {} <Fatal> ClientBase: 25. src/Parsers/ParserSelectQuery.cpp:0: DB::ParserSelectQuery::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026f40ef3
2024.08.14 09:37:42.364304 [ 381437 ] {} <Fatal> ClientBase: 26.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.364362 [ 381437 ] {} <Fatal> ClientBase: 26.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.364392 [ 381437 ] {} <Fatal> ClientBase: 26. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.371601 [ 381437 ] {} <Fatal> ClientBase: 27. src/Parsers/ParserUnionQueryElement.cpp:13: DB::ParserUnionQueryElement::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026f3ef50
2024.08.14 09:37:42.386041 [ 381437 ] {} <Fatal> ClientBase: 28.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.386090 [ 381437 ] {} <Fatal> ClientBase: 28.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.386120 [ 381437 ] {} <Fatal> ClientBase: 28. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.458624 [ 381437 ] {} <Fatal> ClientBase: 29. src/Parsers/ExpressionListParsers.cpp:0: DB::ParserUnionList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0::operator()() const @ 0x0000000026e4b125
2024.08.14 09:37:42.530569 [ 381437 ] {} <Fatal> ClientBase: 30.0. inlined from src/Parsers/ExpressionListParsers.h:0: bool DB::ParserUnionList::parseUtil<DB::ParserUnionList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0, DB::ParserUnionList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_1>(DB::IParser::Pos&, DB::ParserUnionList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&, DB::ParserUnionList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_1 const&)
2024.08.14 09:37:42.530616 [ 381437 ] {} <Fatal> ClientBase: 30. src/Parsers/ExpressionListParsers.cpp:126: DB::ParserUnionList::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e3382b
2024.08.14 09:37:42.545094 [ 381437 ] {} <Fatal> ClientBase: 31.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.545148 [ 381437 ] {} <Fatal> ClientBase: 31.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.545179 [ 381437 ] {} <Fatal> ClientBase: 31. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.563667 [ 381437 ] {} <Fatal> ClientBase: 32. src/Parsers/ParserSelectWithUnionQuery.cpp:0: DB::ParserSelectWithUnionQuery::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026f0b006
2024.08.14 09:37:42.578119 [ 381437 ] {} <Fatal> ClientBase: 33.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.578168 [ 381437 ] {} <Fatal> ClientBase: 33.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.578199 [ 381437 ] {} <Fatal> ClientBase: 33. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.597639 [ 381437 ] {} <Fatal> ClientBase: 34. src/Parsers/ParserQueryWithOutput.cpp:75: DB::ParserQueryWithOutput::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026ee897d
2024.08.14 09:37:42.612092 [ 381437 ] {} <Fatal> ClientBase: 35.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.612142 [ 381437 ] {} <Fatal> ClientBase: 35.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.612175 [ 381437 ] {} <Fatal> ClientBase: 35. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.619311 [ 381437 ] {} <Fatal> ClientBase: 36. src/Parsers/ParserQuery.cpp:64: DB::ParserQuery::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026edc3db
2024.08.14 09:37:42.633756 [ 381437 ] {} <Fatal> ClientBase: 37.0. inlined from src/Parsers/IParserBase.cpp:14: operator()
2024.08.14 09:37:42.634035 [ 381437 ] {} <Fatal> ClientBase: 37.1. inlined from src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)
2024.08.14 09:37:42.634067 [ 381437 ] {} <Fatal> ClientBase: 37. src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000026e808a9
2024.08.14 09:37:42.652772 [ 381437 ] {} <Fatal> ClientBase: 38.0. inlined from contrib/llvm-project/libcxx/include/__tree:1122: std::__tree<DB::HighlightedRange, std::less<DB::HighlightedRange>, std::allocator<DB::HighlightedRange>>::begin[abi:v15007]()
2024.08.14 09:37:42.652820 [ 381437 ] {} <Fatal> ClientBase: 38.1. inlined from contrib/llvm-project/libcxx/include/set:679: std::set<DB::HighlightedRange, std::less<DB::HighlightedRange>, std::allocator<DB::HighlightedRange>>::begin[abi:v15007]()
2024.08.14 09:37:42.652851 [ 381437 ] {} <Fatal> ClientBase: 38. src/Client/ClientBaseHelpers.cpp:155: DB::highlight(String const&, std::vector<replxx::Replxx::Color, std::allocator<replxx::Replxx::Color>>&) @ 0x0000000025cfc5f1
2024.08.14 09:37:42.730685 [ 381437 ] {} <Fatal> ClientBase: 39.0. inlined from contrib/llvm-project/libcxx/include/string:1499: String::__is_long[abi:v15007]() const
2024.08.14 09:37:42.730725 [ 381437 ] {} <Fatal> ClientBase: 39.1. inlined from contrib/llvm-project/libcxx/include/string:2333: ~basic_string
2024.08.14 09:37:42.730753 [ 381437 ] {} <Fatal> ClientBase: 39. contrib/replxx/src/replxx_impl.cxx:801: replxx::Replxx::ReplxxImpl::render(replxx::Replxx::ReplxxImpl::HINT_ACTION) @ 0x0000000027bb882d
2024.08.14 09:37:42.800436 [ 381437 ] {} <Fatal> ClientBase: 40. contrib/replxx/src/replxx_impl.cxx:995: replxx::Replxx::ReplxxImpl::refresh_line(replxx::Replxx::ReplxxImpl::HINT_ACTION, bool) @ 0x0000000027bb2c30
2024.08.14 09:37:42.870683 [ 381437 ] {} <Fatal> ClientBase: 41. contrib/replxx/src/replxx_impl.cxx:1850: replxx::Replxx::ReplxxImpl::backspace_character(char32_t) @ 0x0000000027ba5c7e
2024.08.14 09:37:42.936002 [ 381437 ] {} <Fatal> ClientBase: 42. contrib/replxx/src/replxx_impl.cxx:1431: replxx::Replxx::ReplxxImpl::action(unsigned long long, replxx::Replxx::ACTION_RESULT (replxx::Replxx::ReplxxImpl::* const&)(char32_t), char32_t) @ 0x0000000027ba4bd6
2024.08.14 09:37:42.999827 [ 381437 ] {} <Fatal> ClientBase: 43. contrib/replxx/src/replxx_impl.cxx:0: replxx::Replxx::ReplxxImpl::invoke(replxx::Replxx::ACTION, char32_t) @ 0x0000000027ba2e3a
2024.08.14 09:37:43.081069 [ 381437 ] {} <Fatal> ClientBase: 44.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:848: ?
2024.08.14 09:37:43.081105 [ 381437 ] {} <Fatal> ClientBase: 44.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?
2024.08.14 09:37:43.081133 [ 381437 ] {} <Fatal> ClientBase: 44. contrib/replxx/src/replxx_impl.cxx:1417: replxx::Replxx::ReplxxImpl::get_input_line() @ 0x0000000027bb70d5
2024.08.14 09:37:43.081165 [ 381437 ] {} <Fatal> ClientBase: This ClickHouse version is not official and should be upgraded to the official build.
Aborted (core dumped)
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
