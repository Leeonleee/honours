{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 34404,
  "instance_id": "ClickHouse__ClickHouse-34404",
  "issue_numbers": [
    "34281"
  ],
  "base_commit": "3a0e71ca14751a0f43ef99b7a6faa7f4bb1974a7",
  "patch": "diff --git a/src/Access/Common/AccessType.h b/src/Access/Common/AccessType.h\nindex 55b8359d3853..16d3de40ec36 100644\n--- a/src/Access/Common/AccessType.h\n+++ b/src/Access/Common/AccessType.h\n@@ -86,7 +86,7 @@ enum class AccessType\n     M(CREATE_DICTIONARY, \"\", DICTIONARY, CREATE) /* allows to execute {CREATE|ATTACH} DICTIONARY */\\\n     M(CREATE_TEMPORARY_TABLE, \"\", GLOBAL, CREATE) /* allows to create and manipulate temporary tables;\n                                                      implicitly enabled by the grant CREATE_TABLE on any table */ \\\n-    M(CREATE_FUNCTION, \"\", DATABASE, CREATE) /* allows to execute CREATE FUNCTION */ \\\n+    M(CREATE_FUNCTION, \"\", GLOBAL, CREATE) /* allows to execute CREATE FUNCTION */ \\\n     M(CREATE, \"\", GROUP, ALL) /* allows to execute {CREATE|ATTACH} */ \\\n     \\\n     M(DROP_DATABASE, \"\", DATABASE, DROP) /* allows to execute {DROP|DETACH} DATABASE */\\\n@@ -94,7 +94,7 @@ enum class AccessType\n     M(DROP_VIEW, \"\", VIEW, DROP) /* allows to execute {DROP|DETACH} TABLE for views;\n                                     implicitly enabled by the grant DROP_TABLE */\\\n     M(DROP_DICTIONARY, \"\", DICTIONARY, DROP) /* allows to execute {DROP|DETACH} DICTIONARY */\\\n-    M(DROP_FUNCTION, \"\", DATABASE, DROP) /* allows to execute DROP FUNCTION */\\\n+    M(DROP_FUNCTION, \"\", GLOBAL, DROP) /* allows to execute DROP FUNCTION */\\\n     M(DROP, \"\", GROUP, ALL) /* allows to execute {DROP|DETACH} */\\\n     \\\n     M(TRUNCATE, \"TRUNCATE TABLE\", TABLE, ALL) \\\ndiff --git a/src/Access/ContextAccess.cpp b/src/Access/ContextAccess.cpp\nindex 400ee55a35df..744c3571175e 100644\n--- a/src/Access/ContextAccess.cpp\n+++ b/src/Access/ContextAccess.cpp\n@@ -425,6 +425,7 @@ bool ContextAccess::checkAccessImplHelper(const AccessFlags & flags, const Args\n             | AccessType::TRUNCATE;\n \n         const AccessFlags dictionary_ddl = AccessType::CREATE_DICTIONARY | AccessType::DROP_DICTIONARY;\n+        const AccessFlags function_ddl = AccessType::CREATE_FUNCTION | AccessType::DROP_FUNCTION;\n         const AccessFlags table_and_dictionary_ddl = table_ddl | dictionary_ddl;\n         const AccessFlags write_table_access = AccessType::INSERT | AccessType::OPTIMIZE;\n         const AccessFlags write_dcl_access = AccessType::ACCESS_MANAGEMENT - AccessType::SHOW_ACCESS;\n@@ -432,7 +433,7 @@ bool ContextAccess::checkAccessImplHelper(const AccessFlags & flags, const Args\n         const AccessFlags not_readonly_flags = write_table_access | table_and_dictionary_ddl | write_dcl_access | AccessType::SYSTEM | AccessType::KILL_QUERY;\n         const AccessFlags not_readonly_1_flags = AccessType::CREATE_TEMPORARY_TABLE;\n \n-        const AccessFlags ddl_flags = table_ddl | dictionary_ddl;\n+        const AccessFlags ddl_flags = table_ddl | dictionary_ddl | function_ddl;\n         const AccessFlags introspection_flags = AccessType::INTROSPECTION;\n     };\n     static const PrecalculatedFlags precalc;\n",
  "test_patch": "diff --git a/src/Access/tests/gtest_access_rights_ops.cpp b/src/Access/tests/gtest_access_rights_ops.cpp\nindex 2881825dd173..2b4fbf411fe0 100644\n--- a/src/Access/tests/gtest_access_rights_ops.cpp\n+++ b/src/Access/tests/gtest_access_rights_ops.cpp\n@@ -45,7 +45,7 @@ TEST(AccessRights, Union)\n     lhs.grant(AccessType::INSERT);\n     rhs.grant(AccessType::ALL, \"db1\");\n     lhs.makeUnion(rhs);\n-    ASSERT_EQ(lhs.toString(), \"GRANT INSERT ON *.*, GRANT SHOW, SELECT, ALTER, CREATE DATABASE, CREATE TABLE, CREATE VIEW, CREATE DICTIONARY, CREATE FUNCTION, DROP, TRUNCATE, OPTIMIZE, SYSTEM MERGES, SYSTEM TTL MERGES, SYSTEM FETCHES, SYSTEM MOVES, SYSTEM SENDS, SYSTEM REPLICATION QUEUES, SYSTEM DROP REPLICA, SYSTEM SYNC REPLICA, SYSTEM RESTART REPLICA, SYSTEM RESTORE REPLICA, SYSTEM FLUSH DISTRIBUTED, dictGet ON db1.*\");\n+    ASSERT_EQ(lhs.toString(), \"GRANT INSERT ON *.*, GRANT SHOW, SELECT, ALTER, CREATE DATABASE, CREATE TABLE, CREATE VIEW, CREATE DICTIONARY, DROP DATABASE, DROP TABLE, DROP VIEW, DROP DICTIONARY, TRUNCATE, OPTIMIZE, SYSTEM MERGES, SYSTEM TTL MERGES, SYSTEM FETCHES, SYSTEM MOVES, SYSTEM SENDS, SYSTEM REPLICATION QUEUES, SYSTEM DROP REPLICA, SYSTEM SYNC REPLICA, SYSTEM RESTART REPLICA, SYSTEM RESTORE REPLICA, SYSTEM FLUSH DISTRIBUTED, dictGet ON db1.*\");\n }\n \n \ndiff --git a/tests/queries/0_stateless/01271_show_privileges.reference b/tests/queries/0_stateless/01271_show_privileges.reference\nindex c18992583cd1..b2b02b24cb04 100644\n--- a/tests/queries/0_stateless/01271_show_privileges.reference\n+++ b/tests/queries/0_stateless/01271_show_privileges.reference\n@@ -49,13 +49,13 @@ CREATE TABLE\t[]\tTABLE\tCREATE\n CREATE VIEW\t[]\tVIEW\tCREATE\n CREATE DICTIONARY\t[]\tDICTIONARY\tCREATE\n CREATE TEMPORARY TABLE\t[]\tGLOBAL\tCREATE\n-CREATE FUNCTION\t[]\tDATABASE\tCREATE\n+CREATE FUNCTION\t[]\tGLOBAL\tCREATE\n CREATE\t[]\t\\N\tALL\n DROP DATABASE\t[]\tDATABASE\tDROP\n DROP TABLE\t[]\tTABLE\tDROP\n DROP VIEW\t[]\tVIEW\tDROP\n DROP DICTIONARY\t[]\tDICTIONARY\tDROP\n-DROP FUNCTION\t[]\tDATABASE\tDROP\n+DROP FUNCTION\t[]\tGLOBAL\tDROP\n DROP\t[]\t\\N\tALL\n TRUNCATE\t['TRUNCATE TABLE']\tTABLE\tALL\n OPTIMIZE\t['OPTIMIZE TABLE']\tTABLE\tALL\n",
  "problem_statement": "Wrong privelege level for CREATE / DROP FUNCTION in system.privileges\n**Describe what's wrong**\r\n\r\nUDF functions are global objects. Creating or dropping them requires global level privilege.\r\n\r\n- https://clickhouse.com/docs/en/sql-reference/statements/create/function/\r\n- https://github.com/ClickHouse/ClickHouse/blob/14811a357e2136ff2940d791f2dbe59c65e87601/tests/integration/test_access_for_functions/test.py#L22\r\n\r\nBut \"system.privileges\" table reports DATABASE level for these privileges.\r\n\r\n```\r\nSELECT\r\n    privilege,\r\n    level\r\nFROM system.privileges\r\nWHERE CAST(privilege, 'text') LIKE '%FUNCTION%'\r\n\r\n\u250c\u2500privilege\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500level\u2500\u2500\u2500\u2500\u2510\r\n\u2502 CREATE FUNCTION        \u2502 DATABASE \u2502\r\n\u2502 DROP FUNCTION          \u2502 DATABASE \u2502\r\n\u2502 SYSTEM RELOAD FUNCTION \u2502 GLOBAL   \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nActual for the latest versions and master. In particular, for 21.12.4.1.\r\n\n",
  "hints_text": "",
  "created_at": "2022-02-08T09:50:50Z",
  "modified_files": [
    "src/Access/Common/AccessType.h",
    "src/Access/ContextAccess.cpp"
  ],
  "modified_test_files": [
    "src/Access/tests/gtest_access_rights_ops.cpp",
    "tests/queries/0_stateless/01271_show_privileges.reference"
  ]
}