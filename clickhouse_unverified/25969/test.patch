diff --git a/tests/queries/0_stateless/01645_system_table_engines.sql b/tests/queries/0_stateless/01645_system_table_engines.sql
index 5e8eef5508b8..c2048427670b 100644
--- a/tests/queries/0_stateless/01645_system_table_engines.sql
+++ b/tests/queries/0_stateless/01645_system_table_engines.sql
@@ -1,1 +1,1 @@
-SELECT * FROM system.table_engines WHERE name in ('MergeTree', 'ReplicatedCollapsingMergeTree') FORMAT PrettyCompactNoEscapes;
+SELECT * FROM system.table_engines WHERE name in ('MergeTree', 'ReplicatedCollapsingMergeTree') ORDER BY name FORMAT PrettyCompactNoEscapes;
diff --git a/tests/queries/0_stateless/02022_storage_filelog_one_file.reference b/tests/queries/0_stateless/02022_storage_filelog_one_file.reference
new file mode 100644
index 000000000000..88332de037f2
--- /dev/null
+++ b/tests/queries/0_stateless/02022_storage_filelog_one_file.reference
@@ -0,0 +1,41 @@
+1	1
+2	2
+3	3
+4	4
+5	5
+6	6
+7	7
+8	8
+9	9
+10	10
+11	11
+12	12
+13	13
+14	14
+15	15
+16	16
+17	17
+18	18
+19	19
+20	20
+100	100
+101	101
+102	102
+103	103
+104	104
+105	105
+106	106
+107	107
+108	108
+109	109
+110	110
+111	111
+112	112
+113	113
+114	114
+115	115
+116	116
+117	117
+118	118
+119	119
+120	120
diff --git a/tests/queries/0_stateless/02022_storage_filelog_one_file.sh b/tests/queries/0_stateless/02022_storage_filelog_one_file.sh
new file mode 100755
index 000000000000..600e537a352d
--- /dev/null
+++ b/tests/queries/0_stateless/02022_storage_filelog_one_file.sh
@@ -0,0 +1,42 @@
+#!/usr/bin/env bash
+# Tags: no-parallel
+
+set -eu
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+# Data preparation.
+# Now we can get the user_files_path by use the table file function for trick. also we can get it by query as:
+#  "insert into function file('exist.txt', 'CSV', 'val1 char') values ('aaaa'); select _path from file('exist.txt', 'CSV', 'val1 char')"
+user_files_path=$(clickhouse-client --query "select _path,_file from file('nonexist.txt', 'CSV', 'val1 char')" 2>&1 | grep Exception | awk '{gsub("/nonexist.txt","",$9); print $9}')
+
+for i in {1..20}
+do
+	echo $i, $i >> ${user_files_path}/a.txt
+done
+
+${CLICKHOUSE_CLIENT} --query "drop table if exists file_log;"
+${CLICKHOUSE_CLIENT} --query "create table file_log(k UInt8, v UInt8) engine=FileLog('${user_files_path}/a.txt', 'CSV');"
+
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+for i in {100..120}
+do
+	echo $i, $i >> ${user_files_path}/a.txt
+done
+
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+# touch does not change file content, no event
+touch ${user_files_path}/a.txt
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+${CLICKHOUSE_CLIENT} --query "detach table file_log;"
+${CLICKHOUSE_CLIENT} --query "attach table file_log;"
+
+# should no records return
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+rm -rf ${user_files_path}/a.txt
diff --git a/tests/queries/0_stateless/02023_storage_filelog.reference b/tests/queries/0_stateless/02023_storage_filelog.reference
new file mode 100644
index 000000000000..c787d2047db1
--- /dev/null
+++ b/tests/queries/0_stateless/02023_storage_filelog.reference
@@ -0,0 +1,287 @@
+1	1
+2	2
+3	3
+4	4
+5	5
+6	6
+7	7
+8	8
+9	9
+10	10
+11	11
+12	12
+13	13
+14	14
+15	15
+16	16
+17	17
+18	18
+19	19
+20	20
+1	1
+2	2
+3	3
+4	4
+5	5
+6	6
+7	7
+8	8
+9	9
+10	10
+11	11
+12	12
+13	13
+14	14
+15	15
+16	16
+17	17
+18	18
+19	19
+20	20
+1	1
+1	1
+2	2
+2	2
+3	3
+3	3
+4	4
+4	4
+5	5
+5	5
+6	6
+6	6
+7	7
+7	7
+8	8
+8	8
+9	9
+9	9
+10	10
+10	10
+11	11
+11	11
+12	12
+12	12
+13	13
+13	13
+14	14
+14	14
+15	15
+15	15
+16	16
+16	16
+17	17
+17	17
+18	18
+18	18
+19	19
+19	19
+20	20
+20	20
+100	100
+100	100
+100	100
+101	101
+101	101
+101	101
+102	102
+102	102
+102	102
+103	103
+103	103
+103	103
+104	104
+104	104
+104	104
+105	105
+105	105
+105	105
+106	106
+106	106
+106	106
+107	107
+107	107
+107	107
+108	108
+108	108
+108	108
+109	109
+109	109
+109	109
+110	110
+110	110
+110	110
+111	111
+111	111
+111	111
+112	112
+112	112
+112	112
+113	113
+113	113
+113	113
+114	114
+114	114
+114	114
+115	115
+115	115
+115	115
+116	116
+116	116
+116	116
+117	117
+117	117
+117	117
+118	118
+118	118
+118	118
+119	119
+119	119
+119	119
+120	120
+120	120
+120	120
+1	1
+2	2
+3	3
+4	4
+5	5
+6	6
+7	7
+8	8
+9	9
+10	10
+11	11
+12	12
+13	13
+14	14
+15	15
+16	16
+17	17
+18	18
+19	19
+20	20
+100	100
+101	101
+102	102
+103	103
+104	104
+105	105
+106	106
+107	107
+108	108
+109	109
+110	110
+111	111
+112	112
+113	113
+114	114
+115	115
+116	116
+117	117
+118	118
+119	119
+120	120
+150	150
+151	151
+152	152
+153	153
+154	154
+155	155
+156	156
+157	157
+158	158
+159	159
+160	160
+161	161
+162	162
+163	163
+164	164
+165	165
+166	166
+167	167
+168	168
+169	169
+170	170
+171	171
+172	172
+173	173
+174	174
+175	175
+176	176
+177	177
+178	178
+179	179
+180	180
+181	181
+182	182
+183	183
+184	184
+185	185
+186	186
+187	187
+188	188
+189	189
+190	190
+191	191
+192	192
+193	193
+194	194
+195	195
+196	196
+197	197
+198	198
+199	199
+200	200
+200	200
+201	201
+202	202
+203	203
+204	204
+205	205
+206	206
+207	207
+208	208
+209	209
+210	210
+211	211
+212	212
+213	213
+214	214
+215	215
+216	216
+217	217
+218	218
+219	219
+220	220
+221	221
+222	222
+223	223
+224	224
+225	225
+226	226
+227	227
+228	228
+229	229
+230	230
+231	231
+232	232
+233	233
+234	234
+235	235
+236	236
+237	237
+238	238
+239	239
+240	240
+241	241
+242	242
+243	243
+244	244
+245	245
+246	246
+247	247
+248	248
+249	249
+250	250
+OK
diff --git a/tests/queries/0_stateless/02023_storage_filelog.sh b/tests/queries/0_stateless/02023_storage_filelog.sh
new file mode 100755
index 000000000000..8279e09ff65a
--- /dev/null
+++ b/tests/queries/0_stateless/02023_storage_filelog.sh
@@ -0,0 +1,79 @@
+#!/usr/bin/env bash
+# Tags: no-parallel
+
+set -eu
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+# Data preparation.
+# Now we can get the user_files_path by use the table file function for trick. also we can get it by query as:
+#  "insert into function file('exist.txt', 'CSV', 'val1 char') values ('aaaa'); select _path from file('exist.txt', 'CSV', 'val1 char')"
+user_files_path=$(clickhouse-client --query "select _path,_file from file('nonexist.txt', 'CSV', 'val1 char')" 2>&1 | grep Exception | awk '{gsub("/nonexist.txt","",$9); print $9}')
+
+mkdir -p ${user_files_path}/logs/
+
+rm -rf ${user_files_path}/logs/*
+
+for i in {1..20}
+do
+	echo $i, $i >> ${user_files_path}/logs/a.txt
+done
+
+${CLICKHOUSE_CLIENT} --query "drop table if exists file_log;"
+${CLICKHOUSE_CLIENT} --query "create table file_log(k UInt8, v UInt8) engine=FileLog('${user_files_path}/logs/', 'CSV');"
+
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/b.txt
+
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+for i in {100..120}
+do
+	echo $i, $i >> ${user_files_path}/logs/a.txt
+done
+
+# touch does not change file content, no event
+touch ${user_files_path}/logs/a.txt
+
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/c.txt
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/d.txt
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/e.txt
+mv ${user_files_path}/logs/b.txt ${user_files_path}/logs/j.txt
+
+rm ${user_files_path}/logs/d.txt
+
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+${CLICKHOUSE_CLIENT} --query "detach table file_log;"
+cp ${user_files_path}/logs/e.txt ${user_files_path}/logs/f.txt
+mv ${user_files_path}/logs/e.txt ${user_files_path}/logs/g.txt
+mv ${user_files_path}/logs/c.txt ${user_files_path}/logs/h.txt
+for i in {150..200}
+do
+	echo $i, $i >> ${user_files_path}/logs/h.txt
+done
+for i in {200..250}
+do
+	echo $i, $i >> ${user_files_path}/logs/i.txt
+done
+${CLICKHOUSE_CLIENT} --query "attach table file_log;"
+
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+${CLICKHOUSE_CLIENT} --query "detach table file_log;"
+${CLICKHOUSE_CLIENT} --query "attach table file_log;"
+
+# should no records return
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;"
+
+truncate ${user_files_path}/logs/a.txt --size 0
+
+# exception happend
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;" 2>&1 | grep -q "Code: 33" && echo 'OK' || echo 'FAIL'
+
+${CLICKHOUSE_CLIENT} --query "drop table file_log;"
+
+rm -rf ${user_files_path}/logs
diff --git a/tests/queries/0_stateless/02024_storage_filelog_mv.reference b/tests/queries/0_stateless/02024_storage_filelog_mv.reference
new file mode 100644
index 000000000000..2ebb200a43a1
--- /dev/null
+++ b/tests/queries/0_stateless/02024_storage_filelog_mv.reference
@@ -0,0 +1,121 @@
+1	1
+2	2
+3	3
+4	4
+5	5
+6	6
+7	7
+8	8
+9	9
+10	10
+11	11
+12	12
+13	13
+14	14
+15	15
+16	16
+17	17
+18	18
+19	19
+20	20
+1	1
+1	1
+1	1
+1	1
+2	2
+2	2
+2	2
+2	2
+3	3
+3	3
+3	3
+3	3
+4	4
+4	4
+4	4
+4	4
+5	5
+5	5
+5	5
+5	5
+6	6
+6	6
+6	6
+6	6
+7	7
+7	7
+7	7
+7	7
+8	8
+8	8
+8	8
+8	8
+9	9
+9	9
+9	9
+9	9
+10	10
+10	10
+10	10
+10	10
+11	11
+11	11
+11	11
+11	11
+12	12
+12	12
+12	12
+12	12
+13	13
+13	13
+13	13
+13	13
+14	14
+14	14
+14	14
+14	14
+15	15
+15	15
+15	15
+15	15
+16	16
+16	16
+16	16
+16	16
+17	17
+17	17
+17	17
+17	17
+18	18
+18	18
+18	18
+18	18
+19	19
+19	19
+19	19
+19	19
+20	20
+20	20
+20	20
+20	20
+100	100
+101	101
+102	102
+103	103
+104	104
+105	105
+106	106
+107	107
+108	108
+109	109
+110	110
+111	111
+112	112
+113	113
+114	114
+115	115
+116	116
+117	117
+118	118
+119	119
+120	120
diff --git a/tests/queries/0_stateless/02024_storage_filelog_mv.sh b/tests/queries/0_stateless/02024_storage_filelog_mv.sh
new file mode 100755
index 000000000000..9ac0c95eae09
--- /dev/null
+++ b/tests/queries/0_stateless/02024_storage_filelog_mv.sh
@@ -0,0 +1,65 @@
+#!/usr/bin/env bash
+# Tags: long, no-parallel
+
+set -eu
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+# Data preparation.
+# Now we can get the user_files_path by use the table file function for trick. also we can get it by query as:
+#  "insert into function file('exist.txt', 'CSV', 'val1 char') values ('aaaa'); select _path from file('exist.txt', 'CSV', 'val1 char')"
+user_files_path=$(clickhouse-client --query "select _path,_file from file('nonexist.txt', 'CSV', 'val1 char')" 2>&1 | grep Exception | awk '{gsub("/nonexist.txt","",$9); print $9}')
+
+mkdir -p ${user_files_path}/logs/
+rm -rf ${user_files_path}/logs/*
+
+for i in {1..20}
+do
+	echo $i, $i >> ${user_files_path}/logs/a.txt
+done
+
+${CLICKHOUSE_CLIENT} --query "drop table if exists file_log;"
+${CLICKHOUSE_CLIENT} --query "create table file_log(k UInt8, v UInt8) engine=FileLog('${user_files_path}/logs/', 'CSV');"
+
+${CLICKHOUSE_CLIENT} --query "drop table if exists mv;"
+${CLICKHOUSE_CLIENT} --query "create Materialized View mv engine=MergeTree order by k as select * from file_log;"
+
+function count()
+{
+	COUNT=$(${CLICKHOUSE_CLIENT} --query "select count() from mv;")
+	echo $COUNT
+}
+
+while true; do
+	[[ $(count) == 20 ]] && break
+	sleep 1
+done
+
+${CLICKHOUSE_CLIENT} --query "select * from mv order by k;"
+
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/b.txt
+
+# touch does not change file content, no event
+touch ${user_files_path}/logs/a.txt
+
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/c.txt
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/d.txt
+
+for i in {100..120}
+do
+	echo $i, $i >> ${user_files_path}/logs/d.txt
+done
+
+while true; do
+	[[ $(count) == 101 ]] && break
+	sleep 1
+done
+
+${CLICKHOUSE_CLIENT} --query "select * from mv order by k;"
+
+${CLICKHOUSE_CLIENT} --query "drop table mv;"
+${CLICKHOUSE_CLIENT} --query "drop table file_log;"
+
+rm -rf ${user_files_path}/logs
diff --git a/tests/queries/0_stateless/02025_storage_filelog_virtual_col.reference b/tests/queries/0_stateless/02025_storage_filelog_virtual_col.reference
new file mode 100644
index 000000000000..aaa25ebb4518
--- /dev/null
+++ b/tests/queries/0_stateless/02025_storage_filelog_virtual_col.reference
@@ -0,0 +1,144 @@
+1	1	a.txt	0
+2	2	a.txt	5
+3	3	a.txt	10
+4	4	a.txt	15
+5	5	a.txt	20
+6	6	a.txt	25
+7	7	a.txt	30
+8	8	a.txt	35
+9	9	a.txt	40
+10	10	a.txt	45
+11	11	a.txt	52
+12	12	a.txt	59
+13	13	a.txt	66
+14	14	a.txt	73
+15	15	a.txt	80
+16	16	a.txt	87
+17	17	a.txt	94
+18	18	a.txt	101
+19	19	a.txt	108
+20	20	a.txt	115
+1	1	b.txt	0
+2	2	b.txt	5
+3	3	b.txt	10
+4	4	b.txt	15
+5	5	b.txt	20
+6	6	b.txt	25
+7	7	b.txt	30
+8	8	b.txt	35
+9	9	b.txt	40
+10	10	b.txt	45
+11	11	b.txt	52
+12	12	b.txt	59
+13	13	b.txt	66
+14	14	b.txt	73
+15	15	b.txt	80
+16	16	b.txt	87
+17	17	b.txt	94
+18	18	b.txt	101
+19	19	b.txt	108
+20	20	b.txt	115
+100	100	a.txt	122
+101	101	a.txt	131
+102	102	a.txt	140
+103	103	a.txt	149
+104	104	a.txt	158
+105	105	a.txt	167
+106	106	a.txt	176
+107	107	a.txt	185
+108	108	a.txt	194
+109	109	a.txt	203
+110	110	a.txt	212
+111	111	a.txt	221
+112	112	a.txt	230
+113	113	a.txt	239
+114	114	a.txt	248
+115	115	a.txt	257
+116	116	a.txt	266
+117	117	a.txt	275
+118	118	a.txt	284
+119	119	a.txt	293
+120	120	a.txt	302
+1	1	c.txt	0
+2	2	c.txt	5
+3	3	c.txt	10
+4	4	c.txt	15
+5	5	c.txt	20
+6	6	c.txt	25
+7	7	c.txt	30
+8	8	c.txt	35
+9	9	c.txt	40
+10	10	c.txt	45
+11	11	c.txt	52
+12	12	c.txt	59
+13	13	c.txt	66
+14	14	c.txt	73
+15	15	c.txt	80
+16	16	c.txt	87
+17	17	c.txt	94
+18	18	c.txt	101
+19	19	c.txt	108
+20	20	c.txt	115
+100	100	c.txt	122
+101	101	c.txt	131
+102	102	c.txt	140
+103	103	c.txt	149
+104	104	c.txt	158
+105	105	c.txt	167
+106	106	c.txt	176
+107	107	c.txt	185
+108	108	c.txt	194
+109	109	c.txt	203
+110	110	c.txt	212
+111	111	c.txt	221
+112	112	c.txt	230
+113	113	c.txt	239
+114	114	c.txt	248
+115	115	c.txt	257
+116	116	c.txt	266
+117	117	c.txt	275
+118	118	c.txt	284
+119	119	c.txt	293
+120	120	c.txt	302
+1	1	e.txt	0
+2	2	e.txt	5
+3	3	e.txt	10
+4	4	e.txt	15
+5	5	e.txt	20
+6	6	e.txt	25
+7	7	e.txt	30
+8	8	e.txt	35
+9	9	e.txt	40
+10	10	e.txt	45
+11	11	e.txt	52
+12	12	e.txt	59
+13	13	e.txt	66
+14	14	e.txt	73
+15	15	e.txt	80
+16	16	e.txt	87
+17	17	e.txt	94
+18	18	e.txt	101
+19	19	e.txt	108
+20	20	e.txt	115
+100	100	e.txt	122
+101	101	e.txt	131
+102	102	e.txt	140
+103	103	e.txt	149
+104	104	e.txt	158
+105	105	e.txt	167
+106	106	e.txt	176
+107	107	e.txt	185
+108	108	e.txt	194
+109	109	e.txt	203
+110	110	e.txt	212
+111	111	e.txt	221
+112	112	e.txt	230
+113	113	e.txt	239
+114	114	e.txt	248
+115	115	e.txt	257
+116	116	e.txt	266
+117	117	e.txt	275
+118	118	e.txt	284
+119	119	e.txt	293
+120	120	e.txt	302
+OK
diff --git a/tests/queries/0_stateless/02025_storage_filelog_virtual_col.sh b/tests/queries/0_stateless/02025_storage_filelog_virtual_col.sh
new file mode 100755
index 000000000000..a92f93991efe
--- /dev/null
+++ b/tests/queries/0_stateless/02025_storage_filelog_virtual_col.sh
@@ -0,0 +1,62 @@
+#!/usr/bin/env bash
+# Tags: no-parallel
+
+set -eu
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+# Data preparation.
+# Now we can get the user_files_path by use the table file function for trick. also we can get it by query as:
+#  "insert into function file('exist.txt', 'CSV', 'val1 char') values ('aaaa'); select _path from file('exist.txt', 'CSV', 'val1 char')"
+user_files_path=$(clickhouse-client --query "select _path,_file from file('nonexist.txt', 'CSV', 'val1 char')" 2>&1 | grep Exception | awk '{gsub("/nonexist.txt","",$9); print $9}')
+
+mkdir -p ${user_files_path}/logs/
+
+rm -rf ${user_files_path}/logs/*
+
+for i in {1..20}
+do
+	echo $i, $i >> ${user_files_path}/logs/a.txt
+done
+
+${CLICKHOUSE_CLIENT} --query "drop table if exists file_log;"
+${CLICKHOUSE_CLIENT} --query "create table file_log(k UInt8, v UInt8) engine=FileLog('${user_files_path}/logs/', 'CSV');"
+
+${CLICKHOUSE_CLIENT} --query "select *, _filename, _offset from file_log order by  _filename, _offset;"
+
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/b.txt
+
+${CLICKHOUSE_CLIENT} --query "select *, _filename, _offset from file_log order by  _filename, _offset;"
+
+for i in {100..120}
+do
+	echo $i, $i >> ${user_files_path}/logs/a.txt
+done
+
+# touch does not change file content, no event
+touch ${user_files_path}/logs/a.txt
+
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/c.txt
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/d.txt
+cp ${user_files_path}/logs/a.txt ${user_files_path}/logs/e.txt
+
+rm ${user_files_path}/logs/d.txt
+
+${CLICKHOUSE_CLIENT} --query "select *, _filename, _offset from file_log order by  _filename, _offset;"
+
+${CLICKHOUSE_CLIENT} --query "detach table file_log;"
+${CLICKHOUSE_CLIENT} --query "attach table file_log;"
+
+# should no records return
+${CLICKHOUSE_CLIENT} --query "select *, _filename, _offset from file_log order by  _filename, _offset;"
+
+truncate ${user_files_path}/logs/a.txt --size 0
+
+# exception happend
+${CLICKHOUSE_CLIENT} --query "select * from file_log order by k;" 2>&1 | grep -q "Code: 33" && echo 'OK' || echo 'FAIL'
+
+${CLICKHOUSE_CLIENT} --query "drop table file_log;"
+
+rm -rf ${user_files_path}/logs
diff --git a/tests/queries/0_stateless/02026_storage_filelog_largefile.reference b/tests/queries/0_stateless/02026_storage_filelog_largefile.reference
new file mode 100644
index 000000000000..95240890a95b
--- /dev/null
+++ b/tests/queries/0_stateless/02026_storage_filelog_largefile.reference
@@ -0,0 +1,3 @@
+2000000
+2000000
+2000000
diff --git a/tests/queries/0_stateless/02026_storage_filelog_largefile.sh b/tests/queries/0_stateless/02026_storage_filelog_largefile.sh
new file mode 100755
index 000000000000..a6c5d19287e3
--- /dev/null
+++ b/tests/queries/0_stateless/02026_storage_filelog_largefile.sh
@@ -0,0 +1,47 @@
+#!/usr/bin/env bash
+# Tags: long, no-parallel
+
+set -eu
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+# Data preparation.
+# Now we can get the user_files_path by use the table file function for trick. also we can get it by query as:
+#  "insert into function file('exist.txt', 'CSV', 'val1 char') values ('aaaa'); select _path from file('exist.txt', 'CSV', 'val1 char')"
+user_files_path=$(clickhouse-client --query "select _path,_file from file('nonexist.txt', 'CSV', 'val1 char')" 2>&1 | grep Exception | awk '{gsub("/nonexist.txt","",$9); print $9}')
+
+mkdir -p ${user_files_path}/logs/
+
+rm -rf ${user_files_path}/logs/*
+
+chmod 777 ${user_files_path}/logs/
+
+for i in {1..200}
+do
+	${CLICKHOUSE_CLIENT} --query "insert into function file('${user_files_path}/logs/test$i.csv', 'CSV', 'k UInt32, v UInt32') select number, number from numbers(10000);"
+done
+
+${CLICKHOUSE_CLIENT} --query "drop table if exists file_log;"
+${CLICKHOUSE_CLIENT} --query "create table file_log(k UInt32, v UInt32) engine=FileLog('${user_files_path}/logs/', 'CSV');"
+
+${CLICKHOUSE_CLIENT} --query "select count() from file_log "
+
+for i in {201..400}
+do
+	${CLICKHOUSE_CLIENT} --query "insert into function file('${user_files_path}/logs/test$i.csv', 'CSV', 'k UInt32, v UInt32') select number, number from numbers(10000);"
+done
+
+${CLICKHOUSE_CLIENT} --query "select count() from file_log "
+
+for i in {401..600}
+do
+	${CLICKHOUSE_CLIENT} --query "insert into function file('${user_files_path}/logs/test$i.csv', 'CSV', 'k UInt32, v UInt32') select number, number from numbers(10000);"
+done
+
+${CLICKHOUSE_CLIENT} --query "select count() from file_log "
+
+${CLICKHOUSE_CLIENT} --query "drop table file_log;"
+
+rm -rf ${user_files_path}/logs
