You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Clickhouse incorrectly returning zero counts, when data does exist
**Describe the bug**
Clickhouse is returning zero results when data does exist for the query.
When we change the dates around slightly, data is returned, including data for the dates that previously said it had no rows for.

**How to reproduce**
Clickhouse server version 20.5.2.7
Clickhouse clients tried: dbeaver and clickhouse-go both gave the same results.

The first query successfully returns results:
```sql
select eventday, count(*) from mytable
where toYYYYMM(eventday) = 202007
  AND user_id = 742522
  AND eventday >= '2020-07-01'
  AND eventday <= '2020-07-25'
group by eventday
order by eventday;
```
Results:
```
2020-07-01	8180782
2020-07-02	8654577
2020-07-03	8165184
2020-07-04	7315179
2020-07-05	8423453
2020-07-06	6658727
...etc...
```

The second query says there are no results / no rows:
```sql
select eventday, count(*) from mytable
where toYYYYMM(eventday) = 202007
  AND user_id = 742522
  AND eventday >= '2020-07-03'
  AND eventday <= '2020-07-25'
group by eventday
order by eventday;
```

The only change was that `eventday >= '2020-07-03'`.
You can see from the results above, that we do have data on every day.
This results are the same every time I run the two queries. We have paused all data ingestion while for a bit while we investigate this, so the counts are not changing either.

Things that don't change the zero-row result:
* Changing the dates to anything from 2020-07-02 to 2020-07-25.
* Changing to a different user_id.
* Using `toYYYYMM(eventday) >= 202007 AND toYYYYMM(eventday) <= 202007` instead of `toYYYYMM(eventday) = 202007`

Things that do change the result, and give the correct results:
* Removing the `user_id = 742522` filter.
* Removing the `toYYYMM(eventday) = 202007` filter.
* Remove either or both of the eventday filters (`eventday >= '2020-07-03' AND eventday <= '2020-07-25'`).
* Change the dates on the eventday filters to be outside of July, or the include the 1st of July (such as `eventday <= '2020-08-25'`), even though the `toYYYYMM(eventday) = 202007` means the results would be the same.
* Change the order by of the table to have user_id in front: `(user_id, eventday, eventhour, eventminute, sipHash64(toaddress), integrationkey)`


Here is my create table statement:
```sql
CREATE TABLE IF NOT EXISTS mytable_local (
    created          DateTime
    eventday         Date
    eventhour        DateTime
    eventminute      DateTime
    user_id          UInt32
    toaddress        String
    integrationkey   String
    -- bunch of other fields
)
    ENGINE = ReplicatedMergeTree('/clickhouse/tables/{shard}/mydb.mytable', '{replica}')
    PARTITION BY toYYYYMM(eventday)
    ORDER BY (eventday, eventhour, eventminute, user_id, sipHash64(toaddress), integrationkey)
    TTL eventday TO VOLUME 'fast', eventday + toIntervalDay(93) TO VOLUME 'slow', eventday + toIntervalDay(732) DELETE
    SAMPLE BY sipHash64(toaddress);

CREATE TABLE IF NOT EXISTS mytable AS mytable_local ENGINE = Distributed(mycluster, mydb, mytable_local, rand());
```

**Expected behavior**
The first query clearly shows that data exists (and it does, as I put in data for every day), so I expect the second query to return those counts.

**Error message and/or stacktrace**
No error messages were returned by the dbeaver client or the golang driver.
I have a colleague confirm he was seeing the same thing from his computer, and he was using the clickhouse client docker container.

Strange results when using the same field 2 times in a where clause
**Describe the unexpected behaviour**

Not sure if it is a bug but we encounter a very strange issue when using the same field 2 times in a where clause.
Basically : field = <> and toYear(field)= <>

**How to reproduce**
* Clickhouse 20.5.2.7


Create table statement :
```
DROP TABLE IF EXISTS datasources.cal_pace_strange2;
CREATE TABLE datasources.cal_pace_strange2
(
    `htl_id` UInt32,
    `stay_date` Date,
    `snpdate` Date,
    `leadtime` String,
    `los` String,
    `mkt_id` String,
    `sob_id` String,
    `res_status_id` String,
    `rt_id` String,
    `cur` String,
    `rns` Decimal(9, 4),
    `arrivals` Decimal(9, 4),
    `departures` Decimal(9, 4),
    `adults` Decimal(9, 4),
    `children` Decimal(9, 4),
    `rm_rev` Decimal(18, 10),
    `fd_rev` Decimal(18, 10),
    `oth_rev` Decimal(18, 10),
    `tot_rev` Decimal(18, 10)

)
    ENGINE = MergeTree()
        PARTITION BY toYYYYMM(snpdate)
        ORDER BY (htl_id, stay_date, snpdate)
        SETTINGS index_granularity = 8192;
```

Load the data using the attached SQL inserts.

[data_bug_clickhouse.txt](https://github.com/ClickHouse/ClickHouse/files/4903808/data_bug_clickhouse.txt)


This query returns 0 results :

`select * from cal_pace_strange2 where snpdate='2020-06-09' and htl_id=66 and stay_date='2020-10-02' and toYear(stay_date) = 2020;`

This one return the correct results :

`select * from cal_pace_strange2 where snpdate='2020-06-09' and htl_id=66 and stay_date='2020-10-02'`

Same behavior occurs in 20.4.3 and 20.4.4

Expected behavior :

Both queries should return the same results.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
