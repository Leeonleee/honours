{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 60095,
  "instance_id": "ClickHouse__ClickHouse-60095",
  "issue_numbers": [
    "52349"
  ],
  "base_commit": "8dd08e98449b449205ac60d24954ec496fc8c228",
  "patch": "diff --git a/programs/server/config.d/filesystem_cache_log.xml b/programs/server/config.d/filesystem_cache_log.xml\nnew file mode 120000\nindex 000000000000..aa89e44c64f7\n--- /dev/null\n+++ b/programs/server/config.d/filesystem_cache_log.xml\n@@ -0,0 +1,1 @@\n+../../../tests/config/config.d/filesystem_cache_log.xml\n\\ No newline at end of file\ndiff --git a/programs/server/config.d/filesystem_caches_path.xml b/programs/server/config.d/filesystem_caches_path.xml\nnew file mode 100644\nindex 000000000000..87555d1f81cb\n--- /dev/null\n+++ b/programs/server/config.d/filesystem_caches_path.xml\n@@ -0,0 +1,4 @@\n+<clickhouse>\n+    <filesystem_caches_path>/tmp/filesystem_caches/</filesystem_caches_path>\n+    <custom_cached_disks_base_directory replace=\"replace\">/tmp/filesystem_caches/</custom_cached_disks_base_directory>\n+</clickhouse>\ndiff --git a/src/Access/Common/AccessFlags.cpp b/src/Access/Common/AccessFlags.cpp\nindex 904018b07056..d3b6d5a98188 100644\n--- a/src/Access/Common/AccessFlags.cpp\n+++ b/src/Access/Common/AccessFlags.cpp\n@@ -1,7 +1,6 @@\n #include <Access/Common/AccessFlags.h>\n #include <Access/Common/AccessType.h>\n #include <Common/Exception.h>\n-#include <base/types.h>\n #include <boost/algorithm/string/case_conv.hpp>\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/algorithm/string/split.hpp>\ndiff --git a/src/Client/ClientBase.cpp b/src/Client/ClientBase.cpp\nindex 6c39c3ebc95d..48962880b8f2 100644\n--- a/src/Client/ClientBase.cpp\n+++ b/src/Client/ClientBase.cpp\n@@ -1915,7 +1915,7 @@ void ClientBase::processParsedSingleQuery(const String & full_query, const Strin\n             for (const auto & [name, value] : set_query->query_parameters)\n                 query_parameters.insert_or_assign(name, value);\n \n-            global_context->addQueryParameters(set_query->query_parameters);\n+            global_context->addQueryParameters(NameToNameMap{set_query->query_parameters.begin(), set_query->query_parameters.end()});\n         }\n         if (const auto * use_query = parsed_query->as<ASTUseQuery>())\n         {\ndiff --git a/src/IO/WriteHelpers.cpp b/src/IO/WriteHelpers.cpp\nindex 9dddcd4b60f5..88c706a590f1 100644\n--- a/src/IO/WriteHelpers.cpp\n+++ b/src/IO/WriteHelpers.cpp\n@@ -91,7 +91,8 @@ static inline void writeProbablyQuotedStringImpl(StringRef s, WriteBuffer & buf,\n     if (isValidIdentifier(s.toView())\n         /// This are valid identifiers but are problematic if present unquoted in SQL query.\n         && !(s.size == strlen(\"distinct\") && 0 == strncasecmp(s.data, \"distinct\", strlen(\"distinct\")))\n-        && !(s.size == strlen(\"all\") && 0 == strncasecmp(s.data, \"all\", strlen(\"all\"))))\n+        && !(s.size == strlen(\"all\") && 0 == strncasecmp(s.data, \"all\", strlen(\"all\")))\n+        && !(s.size == strlen(\"table\") && 0 == strncasecmp(s.data, \"table\", strlen(\"table\"))))\n     {\n         writeString(s, buf);\n     }\ndiff --git a/src/Interpreters/InterpreterSetQuery.cpp b/src/Interpreters/InterpreterSetQuery.cpp\nindex 261c781e0baa..7e68fc5c4c15 100644\n--- a/src/Interpreters/InterpreterSetQuery.cpp\n+++ b/src/Interpreters/InterpreterSetQuery.cpp\n@@ -19,7 +19,7 @@ BlockIO InterpreterSetQuery::execute()\n     getContext()->checkSettingsConstraints(ast.changes, SettingSource::QUERY);\n     auto session_context = getContext()->getSessionContext();\n     session_context->applySettingsChanges(ast.changes);\n-    session_context->addQueryParameters(ast.query_parameters);\n+    session_context->addQueryParameters(NameToNameMap{ast.query_parameters.begin(), ast.query_parameters.end()});\n     session_context->resetSettingsToDefaultValue(ast.default_settings);\n     return {};\n }\ndiff --git a/src/Interpreters/InterpreterSystemQuery.cpp b/src/Interpreters/InterpreterSystemQuery.cpp\nindex 266b2ac9fc92..a078d99facfd 100644\n--- a/src/Interpreters/InterpreterSystemQuery.cpp\n+++ b/src/Interpreters/InterpreterSystemQuery.cpp\n@@ -20,7 +20,6 @@\n #include <Interpreters/ActionLocksManager.h>\n #include <Interpreters/InterpreterCreateQuery.h>\n #include <Interpreters/InterpreterRenameQuery.h>\n-#include <Interpreters/QueryLog.h>\n #include <Interpreters/executeDDLQueryOnCluster.h>\n #include <Interpreters/QueryThreadLog.h>\n #include <Interpreters/QueryViewsLog.h>\n@@ -36,7 +35,6 @@\n #include <Interpreters/ProcessorsProfileLog.h>\n #include <Interpreters/AsynchronousInsertLog.h>\n #include <Interpreters/BackupLog.h>\n-#include <IO/S3/BlobStorageLogWriter.h>\n #include <Interpreters/JIT/CompiledExpressionCache.h>\n #include <Interpreters/TransactionLog.h>\n #include <Interpreters/AsynchronousInsertQueue.h>\n@@ -44,7 +42,6 @@\n #include <Access/AccessControl.h>\n #include <Access/ContextAccess.h>\n #include <Access/Common/AllowedClientHosts.h>\n-#include <Databases/IDatabase.h>\n #include <Databases/DatabaseReplicated.h>\n #include <Disks/ObjectStorages/IMetadataStorage.h>\n #include <Storages/StorageDistributed.h>\n@@ -362,18 +359,22 @@ BlockIO InterpreterSystemQuery::execute()\n             getContext()->checkAccess(AccessType::SYSTEM_DROP_QUERY_CACHE);\n             getContext()->clearQueryCache();\n             break;\n-#if USE_EMBEDDED_COMPILER\n         case Type::DROP_COMPILED_EXPRESSION_CACHE:\n+#if USE_EMBEDDED_COMPILER\n             getContext()->checkAccess(AccessType::SYSTEM_DROP_COMPILED_EXPRESSION_CACHE);\n             if (auto * cache = CompiledExpressionCacheFactory::instance().tryGetCache())\n                 cache->clear();\n             break;\n+#else\n+            throw Exception(ErrorCodes::SUPPORT_IS_DISABLED, \"The server was compiled without the support for JIT compilation\");\n #endif\n-#if USE_AWS_S3\n         case Type::DROP_S3_CLIENT_CACHE:\n+#if USE_AWS_S3\n             getContext()->checkAccess(AccessType::SYSTEM_DROP_S3_CLIENT_CACHE);\n             S3::ClientCacheRegistry::instance().clearCacheForAll();\n             break;\n+#else\n+            throw Exception(ErrorCodes::SUPPORT_IS_DISABLED, \"The server was compiled without the support for AWS S3\");\n #endif\n \n         case Type::DROP_FILESYSTEM_CACHE:\n@@ -768,6 +769,12 @@ BlockIO InterpreterSystemQuery::execute()\n             flushJemallocProfile(\"/tmp/jemalloc_clickhouse\");\n             break;\n         }\n+#else\n+        case Type::JEMALLOC_PURGE:\n+        case Type::JEMALLOC_ENABLE_PROFILE:\n+        case Type::JEMALLOC_DISABLE_PROFILE:\n+        case Type::JEMALLOC_FLUSH_PROFILE:\n+            throw Exception(ErrorCodes::SUPPORT_IS_DISABLED, \"The server was compiled without JEMalloc\");\n #endif\n         default:\n             throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Unknown type of SYSTEM query\");\n@@ -1081,7 +1088,9 @@ void InterpreterSystemQuery::syncReplica(ASTSystemQuery & query)\n     {\n         LOG_TRACE(log, \"Synchronizing entries in replica's queue with table's log and waiting for current last entry to be processed\");\n         auto sync_timeout = getContext()->getSettingsRef().receive_timeout.totalMilliseconds();\n-        if (!storage_replicated->waitForProcessingQueue(sync_timeout, query.sync_replica_mode, query.src_replicas))\n+\n+        std::unordered_set<std::string> replicas(query.src_replicas.begin(), query.src_replicas.end());\n+        if (!storage_replicated->waitForProcessingQueue(sync_timeout, query.sync_replica_mode, replicas))\n         {\n             LOG_ERROR(log, \"SYNC REPLICA {}: Timed out.\", table_id.getNameForLogs());\n             throw Exception(ErrorCodes::TIMEOUT_EXCEEDED, \"SYNC REPLICA {}: command timed out. \" \\\n@@ -1186,9 +1195,7 @@ AccessRightsElements InterpreterSystemQuery::getRequiredAccessForDDLOnCluster()\n         case Type::DROP_MARK_CACHE:\n         case Type::DROP_MMAP_CACHE:\n         case Type::DROP_QUERY_CACHE:\n-#if USE_EMBEDDED_COMPILER\n         case Type::DROP_COMPILED_EXPRESSION_CACHE:\n-#endif\n         case Type::DROP_UNCOMPRESSED_CACHE:\n         case Type::DROP_INDEX_MARK_CACHE:\n         case Type::DROP_INDEX_UNCOMPRESSED_CACHE:\n@@ -1196,9 +1203,7 @@ AccessRightsElements InterpreterSystemQuery::getRequiredAccessForDDLOnCluster()\n         case Type::SYNC_FILESYSTEM_CACHE:\n         case Type::DROP_SCHEMA_CACHE:\n         case Type::DROP_FORMAT_SCHEMA_CACHE:\n-#if USE_AWS_S3\n         case Type::DROP_S3_CLIENT_CACHE:\n-#endif\n         {\n             required_access.emplace_back(AccessType::SYSTEM_DROP_CACHE);\n             break;\n@@ -1414,7 +1419,6 @@ AccessRightsElements InterpreterSystemQuery::getRequiredAccessForDDLOnCluster()\n             required_access.emplace_back(AccessType::SYSTEM_LISTEN);\n             break;\n         }\n-#if USE_JEMALLOC\n         case Type::JEMALLOC_PURGE:\n         case Type::JEMALLOC_ENABLE_PROFILE:\n         case Type::JEMALLOC_DISABLE_PROFILE:\n@@ -1423,7 +1427,6 @@ AccessRightsElements InterpreterSystemQuery::getRequiredAccessForDDLOnCluster()\n             required_access.emplace_back(AccessType::SYSTEM_JEMALLOC);\n             break;\n         }\n-#endif\n         case Type::STOP_THREAD_FUZZER:\n         case Type::START_THREAD_FUZZER:\n         case Type::ENABLE_FAILPOINT:\ndiff --git a/src/Interpreters/executeQuery.cpp b/src/Interpreters/executeQuery.cpp\nindex 49572342f4ea..46e3e3344cfb 100644\n--- a/src/Interpreters/executeQuery.cpp\n+++ b/src/Interpreters/executeQuery.cpp\n@@ -103,6 +103,7 @@ namespace ErrorCodes\n     extern const int NOT_IMPLEMENTED;\n     extern const int QUERY_WAS_CANCELLED;\n     extern const int INCORRECT_DATA;\n+    extern const int SYNTAX_ERROR;\n }\n \n namespace FailPoints\n@@ -726,16 +727,32 @@ static std::tuple<ASTPtr, BlockIO> executeQueryImpl(\n             /// TODO: parser should fail early when max_query_size limit is reached.\n             ast = parseQuery(parser, begin, end, \"\", max_query_size, settings.max_parser_depth);\n \n-#if 0\n+#ifndef NDEBUG\n             /// Verify that AST formatting is consistent:\n             /// If you format AST, parse it back, and format it again, you get the same string.\n \n             String formatted1 = ast->formatWithPossiblyHidingSensitiveData(0, true, true);\n \n-            ASTPtr ast2 = parseQuery(parser,\n-                formatted1.data(),\n-                formatted1.data() + formatted1.size(),\n-                \"\", max_query_size, settings.max_parser_depth);\n+            /// The query can become more verbose after formatting, so:\n+            size_t new_max_query_size = max_query_size > 0 ? (1000 + 2 * max_query_size) : 0;\n+\n+            ASTPtr ast2;\n+            try\n+            {\n+                ast2 = parseQuery(parser,\n+                    formatted1.data(),\n+                    formatted1.data() + formatted1.size(),\n+                    \"\", new_max_query_size, settings.max_parser_depth);\n+            }\n+            catch (const Exception & e)\n+            {\n+                if (e.code() == ErrorCodes::SYNTAX_ERROR)\n+                    throw Exception(ErrorCodes::LOGICAL_ERROR,\n+                        \"Inconsistent AST formatting: the query:\\n{}\\ncannot parse.\",\n+                        formatted1);\n+                else\n+                    throw;\n+            }\n \n             chassert(ast2);\n \ndiff --git a/src/Parsers/ASTAlterQuery.cpp b/src/Parsers/ASTAlterQuery.cpp\nindex d22314bbaaad..605cc4ade42e 100644\n--- a/src/Parsers/ASTAlterQuery.cpp\n+++ b/src/Parsers/ASTAlterQuery.cpp\n@@ -456,13 +456,13 @@ void ASTAlterCommand::formatImpl(const FormatSettings & settings, FormatState &\n     }\n     else if (type == ASTAlterCommand::MODIFY_QUERY)\n     {\n-        settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"MODIFY QUERY \" << settings.nl_or_ws\n+        settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"MODIFY QUERY\" << settings.nl_or_ws\n                       << (settings.hilite ? hilite_none : \"\");\n         select->formatImpl(settings, state, frame);\n     }\n     else if (type == ASTAlterCommand::MODIFY_REFRESH)\n     {\n-        settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"MODIFY REFRESH \" << settings.nl_or_ws\n+        settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"MODIFY\" << settings.nl_or_ws\n                       << (settings.hilite ? hilite_none : \"\");\n         refresh->formatImpl(settings, state, frame);\n     }\n@@ -630,16 +630,19 @@ void ASTAlterQuery::formatQueryImpl(const FormatSettings & settings, FormatState\n \n     if (table)\n     {\n+        settings.ostr << indent_str;\n         if (database)\n         {\n-            settings.ostr << indent_str << backQuoteIfNeed(getDatabase());\n-            settings.ostr << \".\";\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n         }\n-        settings.ostr << indent_str << backQuoteIfNeed(getTable());\n+\n+        table->formatImpl(settings, state, frame);\n     }\n     else if (alter_object == AlterObjectType::DATABASE && database)\n     {\n-        settings.ostr << indent_str << backQuoteIfNeed(getDatabase());\n+        settings.ostr << indent_str;\n+        database->formatImpl(settings, state, frame);\n     }\n \n     formatOnCluster(settings);\ndiff --git a/src/Parsers/ASTCheckQuery.h b/src/Parsers/ASTCheckQuery.h\nindex c9a17ca4a549..5e9032e77fb7 100644\n--- a/src/Parsers/ASTCheckQuery.h\n+++ b/src/Parsers/ASTCheckQuery.h\n@@ -49,10 +49,11 @@ struct ASTCheckTableQuery : public ASTQueryWithTableAndOutput\n         {\n             if (database)\n             {\n-                settings.ostr << (settings.hilite ? hilite_keyword : \"\") << indent_str << backQuoteIfNeed(getDatabase()) << (settings.hilite ? hilite_none : \"\");\n-                settings.ostr << \".\";\n+                database->formatImpl(settings, state, frame);\n+                settings.ostr << '.';\n             }\n-            settings.ostr << (settings.hilite ? hilite_keyword : \"\") << indent_str << backQuoteIfNeed(getTable()) << (settings.hilite ? hilite_none : \"\");\n+\n+            table->formatImpl(settings, state, frame);\n         }\n \n         if (partition)\ndiff --git a/src/Parsers/ASTCreateIndexQuery.cpp b/src/Parsers/ASTCreateIndexQuery.cpp\nindex 4e03dad5b5b7..84493ff22f15 100644\n--- a/src/Parsers/ASTCreateIndexQuery.cpp\n+++ b/src/Parsers/ASTCreateIndexQuery.cpp\n@@ -48,10 +48,11 @@ void ASTCreateIndexQuery::formatQueryImpl(const FormatSettings & settings, Forma\n     {\n         if (database)\n         {\n-            settings.ostr << indent_str << backQuoteIfNeed(getDatabase());\n-            settings.ostr << \".\";\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n         }\n-        settings.ostr << indent_str << backQuoteIfNeed(getTable());\n+\n+        table->formatImpl(settings, state, frame);\n     }\n \n     formatOnCluster(settings);\ndiff --git a/src/Parsers/ASTCreateIndexQuery.h b/src/Parsers/ASTCreateIndexQuery.h\nindex b7577f2634e8..f5e35e270e94 100644\n--- a/src/Parsers/ASTCreateIndexQuery.h\n+++ b/src/Parsers/ASTCreateIndexQuery.h\n@@ -16,7 +16,7 @@ class ASTCreateIndexQuery : public ASTQueryWithTableAndOutput, public ASTQueryWi\n public:\n     ASTPtr index_name;\n \n-    /// Stores the IndexDeclaration here.\n+    /// Stores the ASTIndexDeclaration here.\n     ASTPtr index_decl;\n \n     bool if_not_exists{false};\ndiff --git a/src/Parsers/ASTCreateQuery.cpp b/src/Parsers/ASTCreateQuery.cpp\nindex 129ce1b0ee34..e8ccb8e9377f 100644\n--- a/src/Parsers/ASTCreateQuery.cpp\n+++ b/src/Parsers/ASTCreateQuery.cpp\n@@ -272,8 +272,9 @@ void ASTCreateQuery::formatQueryImpl(const FormatSettings & settings, FormatStat\n         settings.ostr << (settings.hilite ? hilite_keyword : \"\")\n             << (attach ? \"ATTACH DATABASE \" : \"CREATE DATABASE \")\n             << (if_not_exists ? \"IF NOT EXISTS \" : \"\")\n-            << (settings.hilite ? hilite_none : \"\")\n-            << backQuoteIfNeed(getDatabase());\n+            << (settings.hilite ? hilite_none : \"\");\n+\n+        database->formatImpl(settings, state, frame);\n \n         if (uuid != UUIDHelpers::Nil)\n         {\n@@ -328,8 +329,15 @@ void ASTCreateQuery::formatQueryImpl(const FormatSettings & settings, FormatStat\n         settings.ostr << (settings.hilite ? hilite_keyword : \"\") << (temporary ? \"TEMPORARY \" : \"\")\n                 << what << \" \"\n                 << (if_not_exists ? \"IF NOT EXISTS \" : \"\")\n-            << (settings.hilite ? hilite_none : \"\")\n-            << (database ? backQuoteIfNeed(getDatabase()) + \".\" : \"\") << backQuoteIfNeed(getTable());\n+            << (settings.hilite ? hilite_none : \"\");\n+\n+        if (database)\n+        {\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n+        }\n+\n+        table->formatImpl(settings, state, frame);\n \n         if (uuid != UUIDHelpers::Nil)\n             settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \" UUID \" << (settings.hilite ? hilite_none : \"\")\n@@ -361,8 +369,16 @@ void ASTCreateQuery::formatQueryImpl(const FormatSettings & settings, FormatStat\n \n         /// Always DICTIONARY\n         settings.ostr << (settings.hilite ? hilite_keyword : \"\") << action << \" DICTIONARY \"\n-                      << (if_not_exists ? \"IF NOT EXISTS \" : \"\") << (settings.hilite ? hilite_none : \"\")\n-                      << (database ? backQuoteIfNeed(getDatabase()) + \".\" : \"\") << backQuoteIfNeed(getTable());\n+                      << (if_not_exists ? \"IF NOT EXISTS \" : \"\") << (settings.hilite ? hilite_none : \"\");\n+\n+        if (database)\n+        {\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n+        }\n+\n+        table->formatImpl(settings, state, frame);\n+\n         if (uuid != UUIDHelpers::Nil)\n             settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \" UUID \" << (settings.hilite ? hilite_none : \"\")\n                           << quoteString(toString(uuid));\ndiff --git a/src/Parsers/ASTDeleteQuery.cpp b/src/Parsers/ASTDeleteQuery.cpp\nindex 09dc4b936ae3..1e8303dac620 100644\n--- a/src/Parsers/ASTDeleteQuery.cpp\n+++ b/src/Parsers/ASTDeleteQuery.cpp\n@@ -36,10 +36,11 @@ void ASTDeleteQuery::formatQueryImpl(const FormatSettings & settings, FormatStat\n \n     if (database)\n     {\n-        settings.ostr << backQuoteIfNeed(getDatabase());\n-        settings.ostr << \".\";\n+        database->formatImpl(settings, state, frame);\n+        settings.ostr << '.';\n     }\n-    settings.ostr << backQuoteIfNeed(getTable());\n+\n+    table->formatImpl(settings, state, frame);\n \n     formatOnCluster(settings);\n \ndiff --git a/src/Parsers/ASTDescribeCacheQuery.cpp b/src/Parsers/ASTDescribeCacheQuery.cpp\nnew file mode 100644\nindex 000000000000..6daedfdb3a45\n--- /dev/null\n+++ b/src/Parsers/ASTDescribeCacheQuery.cpp\n@@ -0,0 +1,23 @@\n+#include <Parsers/ASTDescribeCacheQuery.h>\n+#include <Common/quoteString.h>\n+\n+\n+namespace DB\n+{\n+\n+String ASTDescribeCacheQuery::getID(char) const { return \"DescribeCacheQuery\"; }\n+\n+ASTPtr ASTDescribeCacheQuery::clone() const\n+{\n+    auto res = std::make_shared<ASTDescribeCacheQuery>(*this);\n+    cloneOutputOptions(*res);\n+    return res;\n+}\n+\n+void ASTDescribeCacheQuery::formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const\n+{\n+    settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"DESCRIBE FILESYSTEM CACHE\" << (settings.hilite ? hilite_none : \"\")\n+        << \" \" << quoteString(cache_name);\n+}\n+\n+}\ndiff --git a/src/Parsers/ASTDescribeCacheQuery.h b/src/Parsers/ASTDescribeCacheQuery.h\nindex 3d1cbaef070c..55b841e03f66 100644\n--- a/src/Parsers/ASTDescribeCacheQuery.h\n+++ b/src/Parsers/ASTDescribeCacheQuery.h\n@@ -1,6 +1,8 @@\n #pragma once\n+\n #include <Parsers/ASTQueryWithOutput.h>\n \n+\n namespace DB\n {\n \n@@ -9,20 +11,11 @@ class ASTDescribeCacheQuery : public ASTQueryWithOutput\n public:\n     String cache_name;\n \n-    String getID(char) const override { return \"DescribeCacheQuery\"; }\n-\n-    ASTPtr clone() const override\n-    {\n-        auto res = std::make_shared<ASTDescribeCacheQuery>(*this);\n-        cloneOutputOptions(*res);\n-        return res;\n-    }\n+    String getID(char) const override;\n+    ASTPtr clone() const override;\n \n protected:\n-    void formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const override\n-    {\n-        settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"DESCRIBE FILESYSTEM CACHE\" << (settings.hilite ? hilite_none : \"\") << \" \" << cache_name;\n-    }\n+    void formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const override;\n };\n \n }\ndiff --git a/src/Parsers/ASTDropIndexQuery.cpp b/src/Parsers/ASTDropIndexQuery.cpp\nindex 6866770d2ab3..1a1481ea27f4 100644\n--- a/src/Parsers/ASTDropIndexQuery.cpp\n+++ b/src/Parsers/ASTDropIndexQuery.cpp\n@@ -43,10 +43,11 @@ void ASTDropIndexQuery::formatQueryImpl(const FormatSettings & settings, FormatS\n     {\n         if (database)\n         {\n-            settings.ostr << indent_str << backQuoteIfNeed(getDatabase());\n-            settings.ostr << \".\";\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n         }\n-        settings.ostr << indent_str << backQuoteIfNeed(getTable());\n+\n+        table->formatImpl(settings, state, frame);\n     }\n \n     formatOnCluster(settings);\ndiff --git a/src/Parsers/ASTDropQuery.cpp b/src/Parsers/ASTDropQuery.cpp\nindex ad1294c6e717..f41f28f745d0 100644\n--- a/src/Parsers/ASTDropQuery.cpp\n+++ b/src/Parsers/ASTDropQuery.cpp\n@@ -32,7 +32,7 @@ ASTPtr ASTDropQuery::clone() const\n     return res;\n }\n \n-void ASTDropQuery::formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const\n+void ASTDropQuery::formatQueryImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const\n {\n     settings.ostr << (settings.hilite ? hilite_keyword : \"\");\n     if (kind == ASTDropQuery::Kind::Drop)\n@@ -47,7 +47,6 @@ void ASTDropQuery::formatQueryImpl(const FormatSettings & settings, FormatState\n     if (temporary)\n         settings.ostr << \"TEMPORARY \";\n \n-\n     if (!table && database)\n         settings.ostr << \"DATABASE \";\n     else if (is_dictionary)\n@@ -66,9 +65,19 @@ void ASTDropQuery::formatQueryImpl(const FormatSettings & settings, FormatState\n     settings.ostr << (settings.hilite ? hilite_none : \"\");\n \n     if (!table && database)\n-        settings.ostr << backQuoteIfNeed(getDatabase());\n+    {\n+        database->formatImpl(settings, state, frame);\n+    }\n     else\n-        settings.ostr << (database ? backQuoteIfNeed(getDatabase()) + \".\" : \"\") << backQuoteIfNeed(getTable());\n+    {\n+        if (database)\n+        {\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n+        }\n+\n+        table->formatImpl(settings, state, frame);\n+    }\n \n     formatOnCluster(settings);\n \ndiff --git a/src/Parsers/ASTExpressionList.cpp b/src/Parsers/ASTExpressionList.cpp\nindex 2590c6b29417..61ac482af827 100644\n--- a/src/Parsers/ASTExpressionList.cpp\n+++ b/src/Parsers/ASTExpressionList.cpp\n@@ -17,21 +17,23 @@ void ASTExpressionList::formatImpl(const FormatSettings & settings, FormatState\n     if (frame.expression_list_prepend_whitespace)\n         settings.ostr << ' ';\n \n-    for (ASTs::const_iterator it = children.begin(); it != children.end(); ++it)\n+    for (size_t i = 0, size = children.size(); i < size; ++i)\n     {\n-        if (it != children.begin())\n+        if (i)\n         {\n             if (separator)\n                 settings.ostr << separator;\n             settings.ostr << ' ';\n         }\n \n+        FormatStateStacked frame_nested = frame;\n+        frame_nested.surround_each_list_element_with_parens = false;\n+        frame_nested.list_element_index = i;\n+\n         if (frame.surround_each_list_element_with_parens)\n             settings.ostr << \"(\";\n \n-        FormatStateStacked frame_nested = frame;\n-        frame_nested.surround_each_list_element_with_parens = false;\n-        (*it)->formatImpl(settings, state, frame_nested);\n+        children[i]->formatImpl(settings, state, frame_nested);\n \n         if (frame.surround_each_list_element_with_parens)\n             settings.ostr << \")\";\n@@ -50,25 +52,23 @@ void ASTExpressionList::formatImplMultiline(const FormatSettings & settings, For\n \n     ++frame.indent;\n \n-    for (ASTs::const_iterator it = children.begin(); it != children.end(); ++it)\n+    for (size_t i = 0, size = children.size(); i < size; ++i)\n     {\n-        if (it != children.begin())\n-        {\n-            if (separator)\n-                settings.ostr << separator;\n-        }\n+        if (i && separator)\n+            settings.ostr << separator;\n \n-        if (children.size() > 1 || frame.expression_list_always_start_on_new_line)\n+        if (size > 1 || frame.expression_list_always_start_on_new_line)\n             settings.ostr << indent_str;\n \n         FormatStateStacked frame_nested = frame;\n         frame_nested.expression_list_always_start_on_new_line = false;\n         frame_nested.surround_each_list_element_with_parens = false;\n+        frame_nested.list_element_index = i;\n \n         if (frame.surround_each_list_element_with_parens)\n             settings.ostr << \"(\";\n \n-        (*it)->formatImpl(settings, state, frame_nested);\n+        children[i]->formatImpl(settings, state, frame_nested);\n \n         if (frame.surround_each_list_element_with_parens)\n             settings.ostr << \")\";\ndiff --git a/src/Parsers/ASTFunction.cpp b/src/Parsers/ASTFunction.cpp\nindex ba4c7db96e63..69a2e7c9ada8 100644\n--- a/src/Parsers/ASTFunction.cpp\n+++ b/src/Parsers/ASTFunction.cpp\n@@ -813,8 +813,7 @@ void ASTFunction::formatImplWithoutAlias(const FormatSettings & settings, Format\n \n     /// Should this function to be written as operator?\n     bool written = false;\n-\n-    if (arguments && !parameters)\n+    if (arguments && !parameters && nulls_action == NullsAction::EMPTY)\n     {\n         /// Unary prefix operators.\n         if (arguments->children.size() == 1)\n@@ -1049,8 +1048,10 @@ void ASTFunction::formatImplWithoutAlias(const FormatSettings & settings, Format\n             {\n                 /// Special case: zero elements tuple in lhs of lambda is printed as ().\n                 /// Special case: one-element tuple in lhs of lambda is printed as its element.\n+                /// If lambda function is not the first element in the list, it has to be put in parentheses.\n+                /// Example: f(x, (y -> z)) should not be printed as f((x, y) -> z).\n \n-                if (frame.need_parens)\n+                if (frame.need_parens || frame.list_element_index > 0)\n                     settings.ostr << '(';\n \n                 if (first_argument_is_tuple\n@@ -1067,7 +1068,7 @@ void ASTFunction::formatImplWithoutAlias(const FormatSettings & settings, Format\n \n                 settings.ostr << (settings.hilite ? hilite_operator : \"\") << \" -> \" << (settings.hilite ? hilite_none : \"\");\n                 arguments->children[1]->formatImpl(settings, state, nested_need_parens);\n-                if (frame.need_parens)\n+                if (frame.need_parens || frame.list_element_index > 0)\n                     settings.ostr << ')';\n                 written = true;\n             }\n@@ -1244,6 +1245,7 @@ void ASTFunction::formatImplWithoutAlias(const FormatSettings & settings, Format\n                 continue;\n             }\n \n+            nested_dont_need_parens.list_element_index = i;\n             argument->formatImpl(settings, state, nested_dont_need_parens);\n         }\n     }\ndiff --git a/src/Parsers/ASTIndexDeclaration.cpp b/src/Parsers/ASTIndexDeclaration.cpp\nindex 12d59681cc39..8dac5389c803 100644\n--- a/src/Parsers/ASTIndexDeclaration.cpp\n+++ b/src/Parsers/ASTIndexDeclaration.cpp\n@@ -36,7 +36,7 @@ void ASTIndexDeclaration::formatImpl(const FormatSettings & s, FormatState & sta\n                 s.ostr << \")\";\n             }\n             else\n-            expr->formatImpl(s, state, frame);\n+                expr->formatImpl(s, state, frame);\n         }\n         else\n         {\n@@ -59,4 +59,3 @@ void ASTIndexDeclaration::formatImpl(const FormatSettings & s, FormatState & sta\n }\n \n }\n-\ndiff --git a/src/Parsers/ASTInsertQuery.cpp b/src/Parsers/ASTInsertQuery.cpp\nindex 88e087dd4eeb..eb4bcce65785 100644\n--- a/src/Parsers/ASTInsertQuery.cpp\n+++ b/src/Parsers/ASTInsertQuery.cpp\n@@ -68,8 +68,13 @@ void ASTInsertQuery::formatImpl(const FormatSettings & settings, FormatState & s\n     }\n     else\n     {\n-        settings.ostr << (settings.hilite ? hilite_none : \"\")\n-                      << (database ? backQuoteIfNeed(getDatabase()) + \".\" : \"\") << backQuoteIfNeed(getTable());\n+        if (database)\n+        {\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n+        }\n+\n+        table->formatImpl(settings, state, frame);\n     }\n \n     if (columns)\ndiff --git a/src/Parsers/ASTOptimizeQuery.cpp b/src/Parsers/ASTOptimizeQuery.cpp\nindex 173310f79309..d9406a9eca07 100644\n--- a/src/Parsers/ASTOptimizeQuery.cpp\n+++ b/src/Parsers/ASTOptimizeQuery.cpp\n@@ -7,8 +7,15 @@ namespace DB\n \n void ASTOptimizeQuery::formatQueryImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const\n {\n-    settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"OPTIMIZE TABLE \" << (settings.hilite ? hilite_none : \"\")\n-                  << (database ? backQuoteIfNeed(getDatabase()) + \".\" : \"\") << backQuoteIfNeed(getTable());\n+    settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"OPTIMIZE TABLE \" << (settings.hilite ? hilite_none : \"\");\n+\n+    if (database)\n+    {\n+        database->formatImpl(settings, state, frame);\n+        settings.ostr << '.';\n+    }\n+\n+    table->formatImpl(settings, state, frame);\n \n     formatOnCluster(settings);\n \ndiff --git a/src/Parsers/ASTQueryWithTableAndOutput.cpp b/src/Parsers/ASTQueryWithTableAndOutput.cpp\nindex a216aeaa11f1..85bfe2ae80fc 100644\n--- a/src/Parsers/ASTQueryWithTableAndOutput.cpp\n+++ b/src/Parsers/ASTQueryWithTableAndOutput.cpp\n@@ -64,11 +64,5 @@ void ASTQueryWithTableAndOutput::cloneTableOptions(ASTQueryWithTableAndOutput &\n         cloned.children.push_back(cloned.table);\n     }\n }\n-void ASTQueryWithTableAndOutput::formatHelper(const FormatSettings & settings, const char * name) const\n-{\n-    settings.ostr << (settings.hilite ? hilite_keyword : \"\") << name << \" \" << (settings.hilite ? hilite_none : \"\");\n-    settings.ostr << (database ? backQuoteIfNeed(getDatabase()) + \".\" : \"\") << backQuoteIfNeed(getTable());\n-}\n \n }\n-\ndiff --git a/src/Parsers/ASTQueryWithTableAndOutput.h b/src/Parsers/ASTQueryWithTableAndOutput.h\nindex 10f0e76f29c0..1b8621fb63b6 100644\n--- a/src/Parsers/ASTQueryWithTableAndOutput.h\n+++ b/src/Parsers/ASTQueryWithTableAndOutput.h\n@@ -28,9 +28,6 @@ class ASTQueryWithTableAndOutput : public ASTQueryWithOutput\n     void setTable(const String & name);\n \n     void cloneTableOptions(ASTQueryWithTableAndOutput & cloned) const;\n-\n-protected:\n-    void formatHelper(const FormatSettings & settings, const char * name) const;\n };\n \n \n@@ -52,9 +49,19 @@ class ASTQueryWithTableAndOutputImpl : public ASTQueryWithTableAndOutput\n     QueryKind getQueryKind() const override { return QueryKind::Show; }\n \n protected:\n-    void formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const override\n+    void formatQueryImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const override\n     {\n-        formatHelper(settings, temporary ? AstIDAndQueryNames::QueryTemporary : AstIDAndQueryNames::Query);\n+        settings.ostr << (settings.hilite ? hilite_keyword : \"\")\n+            << (temporary ? AstIDAndQueryNames::QueryTemporary : AstIDAndQueryNames::Query)\n+            << \" \" << (settings.hilite ? hilite_none : \"\");\n+\n+        if (database)\n+        {\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n+        }\n+\n+        table->formatImpl(settings, state, frame);\n     }\n };\n \ndiff --git a/src/Parsers/ASTRenameQuery.h b/src/Parsers/ASTRenameQuery.h\nindex 5d07cb976af7..901f0121a281 100644\n--- a/src/Parsers/ASTRenameQuery.h\n+++ b/src/Parsers/ASTRenameQuery.h\n@@ -84,7 +84,7 @@ class ASTRenameQuery : public ASTQueryWithOutput, public ASTQueryWithOnCluster\n     QueryKind getQueryKind() const override { return QueryKind::Rename; }\n \n protected:\n-    void formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const override\n+    void formatQueryImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const override\n     {\n         if (database)\n         {\n@@ -93,9 +93,9 @@ class ASTRenameQuery : public ASTQueryWithOutput, public ASTQueryWithOnCluster\n             if (elements.at(0).if_exists)\n                 settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"IF EXISTS \" << (settings.hilite ? hilite_none : \"\");\n \n-            settings.ostr << backQuoteIfNeed(elements.at(0).from.getDatabase());\n+            elements.at(0).from.database->formatImpl(settings, state, frame);\n             settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \" TO \" << (settings.hilite ? hilite_none : \"\");\n-            settings.ostr << backQuoteIfNeed(elements.at(0).to.getDatabase());\n+            elements.at(0).to.database->formatImpl(settings, state, frame);\n             formatOnCluster(settings);\n             return;\n         }\n@@ -119,9 +119,26 @@ class ASTRenameQuery : public ASTQueryWithOutput, public ASTQueryWithOnCluster\n \n             if (it->if_exists)\n                 settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"IF EXISTS \" << (settings.hilite ? hilite_none : \"\");\n-            settings.ostr << (it->from.database ? backQuoteIfNeed(it->from.getDatabase()) + \".\" : \"\") << backQuoteIfNeed(it->from.getTable())\n-                << (settings.hilite ? hilite_keyword : \"\") << (exchange ? \" AND \" : \" TO \") << (settings.hilite ? hilite_none : \"\")\n-                << (it->to.database ? backQuoteIfNeed(it->to.getDatabase()) + \".\" : \"\") << backQuoteIfNeed(it->to.getTable());\n+\n+\n+            if (it->from.database)\n+            {\n+                it->from.database->formatImpl(settings, state, frame);\n+                settings.ostr << '.';\n+            }\n+\n+            it->from.table->formatImpl(settings, state, frame);\n+\n+            settings.ostr << (settings.hilite ? hilite_keyword : \"\") << (exchange ? \" AND \" : \" TO \") << (settings.hilite ? hilite_none : \"\");\n+\n+            if (it->to.database)\n+            {\n+                it->to.database->formatImpl(settings, state, frame);\n+                settings.ostr << '.';\n+            }\n+\n+            it->to.table->formatImpl(settings, state, frame);\n+\n         }\n \n         formatOnCluster(settings);\ndiff --git a/src/Parsers/ASTSelectQuery.cpp b/src/Parsers/ASTSelectQuery.cpp\nindex 2115de1c1246..586477e1cfdc 100644\n--- a/src/Parsers/ASTSelectQuery.cpp\n+++ b/src/Parsers/ASTSelectQuery.cpp\n@@ -108,12 +108,6 @@ void ASTSelectQuery::formatImpl(const FormatSettings & s, FormatState & state, F\n     if (group_by_all)\n         s.ostr << (s.hilite ? hilite_keyword : \"\") << s.nl_or_ws << indent_str << \"GROUP BY ALL\" << (s.hilite ? hilite_none : \"\");\n \n-    if (group_by_with_rollup)\n-        s.ostr << (s.hilite ? hilite_keyword : \"\") << s.nl_or_ws << indent_str << (s.one_line ? \"\" : \"    \") << \"WITH ROLLUP\" << (s.hilite ? hilite_none : \"\");\n-\n-    if (group_by_with_cube)\n-        s.ostr << (s.hilite ? hilite_keyword : \"\") << s.nl_or_ws << indent_str << (s.one_line ? \"\" : \"    \") << \"WITH CUBE\" << (s.hilite ? hilite_none : \"\");\n-\n     if (group_by_with_grouping_sets && groupBy())\n     {\n         auto nested_frame = frame;\n@@ -128,6 +122,12 @@ void ASTSelectQuery::formatImpl(const FormatSettings & s, FormatState & state, F\n         s.ostr << \")\";\n     }\n \n+    if (group_by_with_rollup)\n+        s.ostr << (s.hilite ? hilite_keyword : \"\") << s.nl_or_ws << indent_str << (s.one_line ? \"\" : \"    \") << \"WITH ROLLUP\" << (s.hilite ? hilite_none : \"\");\n+\n+    if (group_by_with_cube)\n+        s.ostr << (s.hilite ? hilite_keyword : \"\") << s.nl_or_ws << indent_str << (s.one_line ? \"\" : \"    \") << \"WITH CUBE\" << (s.hilite ? hilite_none : \"\");\n+\n     if (group_by_with_totals)\n         s.ostr << (s.hilite ? hilite_keyword : \"\") << s.nl_or_ws << indent_str << (s.one_line ? \"\" : \"    \") << \"WITH TOTALS\" << (s.hilite ? hilite_none : \"\");\n \ndiff --git a/src/Parsers/ASTSelectWithUnionQuery.cpp b/src/Parsers/ASTSelectWithUnionQuery.cpp\nindex c377e4bd66b6..cf72358dea71 100644\n--- a/src/Parsers/ASTSelectWithUnionQuery.cpp\n+++ b/src/Parsers/ASTSelectWithUnionQuery.cpp\n@@ -63,17 +63,12 @@ void ASTSelectWithUnionQuery::formatQueryImpl(const FormatSettings & settings, F\n \n         if (auto * node = (*it)->as<ASTSelectWithUnionQuery>())\n         {\n-            settings.ostr << settings.nl_or_ws << indent_str;\n+            if (it != list_of_selects->children.begin())\n+                settings.ostr << settings.nl_or_ws;\n \n-            if (node->list_of_selects->children.size() == 1)\n-            {\n-                (node->list_of_selects->children.at(0))->formatImpl(settings, state, frame);\n-            }\n-            else\n-            {\n-                auto sub_query = std::make_shared<ASTSubquery>(*it);\n-                sub_query->formatImpl(settings, state, frame);\n-            }\n+            settings.ostr << indent_str;\n+            auto sub_query = std::make_shared<ASTSubquery>(*it);\n+            sub_query->formatImpl(settings, state, frame);\n         }\n         else\n         {\ndiff --git a/src/Parsers/ASTSetQuery.cpp b/src/Parsers/ASTSetQuery.cpp\nindex d41e9aba4cc7..94b44ed2fa7e 100644\n--- a/src/Parsers/ASTSetQuery.cpp\n+++ b/src/Parsers/ASTSetQuery.cpp\n@@ -3,6 +3,7 @@\n #include <Common/SipHash.h>\n #include <Common/FieldVisitorHash.h>\n #include <Common/FieldVisitorToString.h>\n+#include <Common/quoteString.h>\n #include <IO/Operators.h>\n #include <IO/WriteBufferFromString.h>\n \n@@ -106,7 +107,7 @@ void ASTSetQuery::formatImpl(const FormatSettings & format, FormatState &, Forma\n             first = false;\n \n         formatSettingName(QUERY_PARAMETER_NAME_PREFIX + name, format.ostr);\n-        format.ostr << \" = \" << value;\n+        format.ostr << \" = \" << quoteString(value);\n     }\n }\n \ndiff --git a/src/Parsers/ASTSetQuery.h b/src/Parsers/ASTSetQuery.h\nindex 944f08dcbaa0..42d63944b4fe 100644\n--- a/src/Parsers/ASTSetQuery.h\n+++ b/src/Parsers/ASTSetQuery.h\n@@ -25,7 +25,7 @@ class ASTSetQuery : public IAST\n     SettingsChanges changes;\n     /// settings that will be reset to default value\n     std::vector<String> default_settings;\n-    NameToNameMap query_parameters;\n+    NameToNameVector query_parameters;\n \n     /** Get the text that identifies this element. */\n     String getID(char) const override { return \"Set\"; }\ndiff --git a/src/Parsers/ASTSystemQuery.cpp b/src/Parsers/ASTSystemQuery.cpp\nindex fc4ecf4763af..0713737af952 100644\n--- a/src/Parsers/ASTSystemQuery.cpp\n+++ b/src/Parsers/ASTSystemQuery.cpp\n@@ -7,9 +7,15 @@\n \n #include <magic_enum.hpp>\n \n+\n namespace DB\n {\n \n+namespace ErrorCodes\n+{\n+    extern const int LOGICAL_ERROR;\n+}\n+\n namespace\n {\n     std::vector<std::string> getTypeIndexToTypeName()\n@@ -85,7 +91,7 @@ void ASTSystemQuery::setTable(const String & name)\n     }\n }\n \n-void ASTSystemQuery::formatImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const\n+void ASTSystemQuery::formatImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const\n {\n     auto print_identifier = [&](const String & identifier) -> WriteBuffer &\n     {\n@@ -104,9 +110,11 @@ void ASTSystemQuery::formatImpl(const FormatSettings & settings, FormatState &,\n     {\n         if (database)\n         {\n-            print_identifier(getDatabase()) << \".\";\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n         }\n-        print_identifier(getTable());\n+\n+        table->formatImpl(settings, state, frame);\n         return settings.ostr;\n     };\n \n@@ -144,185 +152,273 @@ void ASTSystemQuery::formatImpl(const FormatSettings & settings, FormatState &,\n     if (!cluster.empty())\n         formatOnCluster(settings);\n \n-    if (   type == Type::STOP_MERGES\n-        || type == Type::START_MERGES\n-        || type == Type::STOP_TTL_MERGES\n-        || type == Type::START_TTL_MERGES\n-        || type == Type::STOP_MOVES\n-        || type == Type::START_MOVES\n-        || type == Type::STOP_FETCHES\n-        || type == Type::START_FETCHES\n-        || type == Type::STOP_REPLICATED_SENDS\n-        || type == Type::START_REPLICATED_SENDS\n-        || type == Type::STOP_REPLICATION_QUEUES\n-        || type == Type::START_REPLICATION_QUEUES\n-        || type == Type::STOP_DISTRIBUTED_SENDS\n-        || type == Type::START_DISTRIBUTED_SENDS\n-        || type == Type::STOP_PULLING_REPLICATION_LOG\n-        || type == Type::START_PULLING_REPLICATION_LOG\n-        || type == Type::STOP_CLEANUP\n-        || type == Type::START_CLEANUP)\n+    switch (type)\n     {\n-        if (table)\n+        case Type::STOP_MERGES:\n+        case Type::START_MERGES:\n+        case Type::STOP_TTL_MERGES:\n+        case Type::START_TTL_MERGES:\n+        case Type::STOP_MOVES:\n+        case Type::START_MOVES:\n+        case Type::STOP_FETCHES:\n+        case Type::START_FETCHES:\n+        case Type::STOP_REPLICATED_SENDS:\n+        case Type::START_REPLICATED_SENDS:\n+        case Type::STOP_REPLICATION_QUEUES:\n+        case Type::START_REPLICATION_QUEUES:\n+        case Type::STOP_DISTRIBUTED_SENDS:\n+        case Type::START_DISTRIBUTED_SENDS:\n+        case Type::STOP_PULLING_REPLICATION_LOG:\n+        case Type::START_PULLING_REPLICATION_LOG:\n+        case Type::STOP_CLEANUP:\n+        case Type::START_CLEANUP:\n         {\n-            settings.ostr << ' ';\n-            print_database_table();\n+            if (table)\n+            {\n+                settings.ostr << ' ';\n+                print_database_table();\n+            }\n+            else if (!volume.empty())\n+            {\n+                print_on_volume();\n+            }\n+            break;\n         }\n-        else if (!volume.empty())\n-            print_on_volume();\n-    }\n-    else if (  type == Type::RESTART_REPLICA\n-            || type == Type::RESTORE_REPLICA\n-            || type == Type::SYNC_REPLICA\n-            || type == Type::WAIT_LOADING_PARTS\n-            || type == Type::FLUSH_DISTRIBUTED\n-            || type == Type::RELOAD_DICTIONARY\n-            || type == Type::RELOAD_MODEL\n-            || type == Type::RELOAD_FUNCTION\n-            || type == Type::RESTART_DISK\n-            || type == Type::DROP_DISK_METADATA_CACHE)\n-    {\n-        if (table)\n+        case Type::RESTART_REPLICA:\n+        case Type::RESTORE_REPLICA:\n+        case Type::SYNC_REPLICA:\n+        case Type::WAIT_LOADING_PARTS:\n+        case Type::FLUSH_DISTRIBUTED:\n+        case Type::RELOAD_DICTIONARY:\n+        case Type::RELOAD_MODEL:\n+        case Type::RELOAD_FUNCTION:\n+        case Type::RESTART_DISK:\n+        case Type::DROP_DISK_METADATA_CACHE:\n         {\n-            settings.ostr << ' ';\n-            print_database_table();\n+            if (table)\n+            {\n+                settings.ostr << ' ';\n+                print_database_table();\n+            }\n+            else if (!target_model.empty())\n+            {\n+                settings.ostr << ' ';\n+                print_identifier(target_model);\n+            }\n+            else if (!target_function.empty())\n+            {\n+                settings.ostr << ' ';\n+                print_identifier(target_function);\n+            }\n+            else if (!disk.empty())\n+            {\n+                settings.ostr << ' ';\n+                print_identifier(disk);\n+            }\n+\n+            if (sync_replica_mode != SyncReplicaMode::DEFAULT)\n+            {\n+                settings.ostr << ' ';\n+                print_keyword(magic_enum::enum_name(sync_replica_mode));\n+\n+                // If the mode is LIGHTWEIGHT and specific source replicas are specified\n+                if (sync_replica_mode == SyncReplicaMode::LIGHTWEIGHT && !src_replicas.empty())\n+                {\n+                    settings.ostr << ' ';\n+                    print_keyword(\"FROM\");\n+                    settings.ostr << ' ';\n+\n+                    bool first = true;\n+                    for (const auto & src : src_replicas)\n+                    {\n+                        if (!first)\n+                            settings.ostr << \", \";\n+                        first = false;\n+                        settings.ostr << quoteString(src);\n+                    }\n+                }\n+            }\n+            break;\n         }\n-        else if (!target_model.empty())\n+        case Type::SYNC_DATABASE_REPLICA:\n         {\n             settings.ostr << ' ';\n-            print_identifier(target_model);\n+            print_identifier(database->as<ASTIdentifier>()->name());\n+            break;\n         }\n-        else if (!target_function.empty())\n+        case Type::DROP_REPLICA:\n+        case Type::DROP_DATABASE_REPLICA:\n         {\n-            settings.ostr << ' ';\n-            print_identifier(target_function);\n+            print_drop_replica();\n+            break;\n         }\n-        else if (!disk.empty())\n+        case Type::SUSPEND:\n         {\n-            settings.ostr << ' ';\n-            print_identifier(disk);\n+            print_keyword(\" FOR \") << seconds;\n+            print_keyword(\" SECOND\");\n+            break;\n         }\n-\n-        if (sync_replica_mode != SyncReplicaMode::DEFAULT)\n+        case Type::DROP_FORMAT_SCHEMA_CACHE:\n         {\n-            settings.ostr << ' ';\n-            print_keyword(magic_enum::enum_name(sync_replica_mode));\n-\n-            // If the mode is LIGHTWEIGHT and specific source replicas are specified\n-            if (sync_replica_mode == SyncReplicaMode::LIGHTWEIGHT && !src_replicas.empty())\n+            if (!schema_cache_format.empty())\n             {\n-                settings.ostr << ' ';\n-                print_keyword(\"FROM\");\n-                settings.ostr << ' ';\n-\n-                for (auto it = src_replicas.begin(); it != src_replicas.end(); ++it)\n-                {\n-                    print_identifier(*it);\n-\n-                    // Add a comma and space after each identifier, except the last one\n-                    if (std::next(it) != src_replicas.end())\n-                        settings.ostr << \", \";\n-                }\n+                print_keyword(\" FOR \");\n+                print_identifier(schema_cache_format);\n             }\n+            break;\n         }\n-    }\n-    else if (type == Type::SYNC_DATABASE_REPLICA)\n-    {\n-        settings.ostr << ' ';\n-        print_identifier(database->as<ASTIdentifier>()->name());\n-    }\n-    else if (type == Type::DROP_REPLICA || type == Type::DROP_DATABASE_REPLICA)\n-    {\n-        print_drop_replica();\n-    }\n-    else if (type == Type::SUSPEND)\n-    {\n-        print_keyword(\" FOR \") << seconds;\n-        print_keyword(\" SECOND\");\n-    }\n-    else if (type == Type::DROP_FORMAT_SCHEMA_CACHE)\n-    {\n-        if (!schema_cache_format.empty())\n-        {\n-            print_keyword(\" FOR \");\n-            print_identifier(schema_cache_format);\n-        }\n-    }\n-    else if (type == Type::DROP_FILESYSTEM_CACHE)\n-    {\n-        if (!filesystem_cache_name.empty())\n+        case Type::DROP_FILESYSTEM_CACHE:\n         {\n-            settings.ostr << ' ';\n-            print_identifier(filesystem_cache_name);\n-            if (!key_to_drop.empty())\n+            if (!filesystem_cache_name.empty())\n             {\n-                print_keyword(\" KEY \");\n-                print_identifier(key_to_drop);\n-                if (offset_to_drop.has_value())\n+                settings.ostr << ' ' << quoteString(filesystem_cache_name);\n+                if (!key_to_drop.empty())\n                 {\n-                    print_keyword(\" OFFSET \");\n-                    settings.ostr << offset_to_drop.value();\n+                    print_keyword(\" KEY \");\n+                    print_identifier(key_to_drop);\n+                    if (offset_to_drop.has_value())\n+                    {\n+                        print_keyword(\" OFFSET \");\n+                        settings.ostr << offset_to_drop.value();\n+                    }\n                 }\n             }\n+            break;\n         }\n-    }\n-    else if (type == Type::DROP_SCHEMA_CACHE)\n-    {\n-        if (!schema_cache_storage.empty())\n+        case Type::DROP_SCHEMA_CACHE:\n         {\n-            print_keyword(\" FOR \");\n-            print_identifier(schema_cache_storage);\n+            if (!schema_cache_storage.empty())\n+            {\n+                print_keyword(\" FOR \");\n+                print_identifier(schema_cache_storage);\n+            }\n+            break;\n         }\n-    }\n-    else if (type == Type::UNFREEZE)\n-    {\n-        print_keyword(\" WITH NAME \");\n-        settings.ostr << quoteString(backup_name);\n-    }\n-    else if (type == Type::START_LISTEN || type == Type::STOP_LISTEN)\n-    {\n-        settings.ostr << ' ';\n-        print_keyword(ServerType::serverTypeToString(server_type.type));\n-\n-        if (server_type.type == ServerType::Type::CUSTOM)\n-            settings.ostr << ' ' << quoteString(server_type.custom_name);\n-\n-        bool comma = false;\n-\n-        if (!server_type.exclude_types.empty())\n+        case Type::UNFREEZE:\n         {\n-            print_keyword(\" EXCEPT\");\n-\n-            for (auto cur_type : server_type.exclude_types)\n-            {\n-                if (cur_type == ServerType::Type::CUSTOM)\n-                    continue;\n+            print_keyword(\" WITH NAME \");\n+            settings.ostr << quoteString(backup_name);\n+            break;\n+        }\n+        case Type::START_LISTEN:\n+        case Type::STOP_LISTEN:\n+        {\n+            settings.ostr << ' ';\n+            print_keyword(ServerType::serverTypeToString(server_type.type));\n \n-                if (comma)\n-                    settings.ostr << ',';\n-                else\n-                    comma = true;\n+            if (server_type.type == ServerType::Type::CUSTOM)\n+                settings.ostr << ' ' << quoteString(server_type.custom_name);\n \n-                settings.ostr << ' ';\n-                print_keyword(ServerType::serverTypeToString(cur_type));\n-            }\n+            bool comma = false;\n \n-            if (server_type.exclude_types.contains(ServerType::Type::CUSTOM))\n+            if (!server_type.exclude_types.empty())\n             {\n-                for (const auto & cur_name : server_type.exclude_custom_names)\n+                print_keyword(\" EXCEPT\");\n+\n+                for (auto cur_type : server_type.exclude_types)\n                 {\n+                    if (cur_type == ServerType::Type::CUSTOM)\n+                        continue;\n+\n                     if (comma)\n                         settings.ostr << ',';\n                     else\n                         comma = true;\n \n                     settings.ostr << ' ';\n-                    print_keyword(ServerType::serverTypeToString(ServerType::Type::CUSTOM));\n-                    settings.ostr << \" \" << quoteString(cur_name);\n+                    print_keyword(ServerType::serverTypeToString(cur_type));\n+                }\n+\n+                if (server_type.exclude_types.contains(ServerType::Type::CUSTOM))\n+                {\n+                    for (const auto & cur_name : server_type.exclude_custom_names)\n+                    {\n+                        if (comma)\n+                            settings.ostr << ',';\n+                        else\n+                            comma = true;\n+\n+                        settings.ostr << ' ';\n+                        print_keyword(ServerType::serverTypeToString(ServerType::Type::CUSTOM));\n+                        settings.ostr << \" \" << quoteString(cur_name);\n+                    }\n                 }\n             }\n+            break;\n+        }\n+        case Type::ENABLE_FAILPOINT:\n+        case Type::DISABLE_FAILPOINT:\n+        {\n+            settings.ostr << ' ';\n+            print_identifier(fail_point_name);\n+            break;\n+        }\n+        case Type::REFRESH_VIEW:\n+        case Type::START_VIEW:\n+        case Type::STOP_VIEW:\n+        case Type::CANCEL_VIEW:\n+        {\n+            settings.ostr << ' ';\n+            print_database_table();\n+            break;\n         }\n+        case Type::TEST_VIEW:\n+        {\n+            settings.ostr << ' ';\n+            print_database_table();\n \n+            if (!fake_time_for_view)\n+            {\n+                settings.ostr << ' ';\n+                print_keyword(\"UNSET FAKE TIME\");\n+            }\n+            else\n+            {\n+                settings.ostr << ' ';\n+                print_keyword(\"SET FAKE TIME\");\n+                settings.ostr << \" '\" << LocalDateTime(*fake_time_for_view) << \"'\";\n+            }\n+            break;\n+        }\n+        case Type::KILL:\n+        case Type::SHUTDOWN:\n+        case Type::DROP_DNS_CACHE:\n+        case Type::DROP_MMAP_CACHE:\n+        case Type::DROP_QUERY_CACHE:\n+        case Type::DROP_MARK_CACHE:\n+        case Type::DROP_INDEX_MARK_CACHE:\n+        case Type::DROP_UNCOMPRESSED_CACHE:\n+        case Type::DROP_INDEX_UNCOMPRESSED_CACHE:\n+        case Type::DROP_COMPILED_EXPRESSION_CACHE:\n+        case Type::DROP_S3_CLIENT_CACHE:\n+        case Type::RESET_COVERAGE:\n+        case Type::RESTART_REPLICAS:\n+        case Type::JEMALLOC_PURGE:\n+        case Type::JEMALLOC_ENABLE_PROFILE:\n+        case Type::JEMALLOC_DISABLE_PROFILE:\n+        case Type::JEMALLOC_FLUSH_PROFILE:\n+        case Type::SYNC_TRANSACTION_LOG:\n+        case Type::SYNC_FILE_CACHE:\n+        case Type::SYNC_FILESYSTEM_CACHE:\n+        case Type::REPLICA_READY:   /// Obsolete\n+        case Type::REPLICA_UNREADY: /// Obsolete\n+        case Type::RELOAD_DICTIONARIES:\n+        case Type::RELOAD_EMBEDDED_DICTIONARIES:\n+        case Type::RELOAD_MODELS:\n+        case Type::RELOAD_FUNCTIONS:\n+        case Type::RELOAD_CONFIG:\n+        case Type::RELOAD_USERS:\n+        case Type::RELOAD_ASYNCHRONOUS_METRICS:\n+        case Type::FLUSH_LOGS:\n+        case Type::FLUSH_ASYNC_INSERT_QUEUE:\n+        case Type::START_THREAD_FUZZER:\n+        case Type::STOP_THREAD_FUZZER:\n+        case Type::START_VIEWS:\n+        case Type::STOP_VIEWS:\n+            break;\n+        case Type::UNKNOWN:\n+        case Type::END:\n+            throw Exception(ErrorCodes::LOGICAL_ERROR, \"Unknown SYSTEM command\");\n     }\n }\n \ndiff --git a/src/Parsers/ASTSystemQuery.h b/src/Parsers/ASTSystemQuery.h\nindex a74275f1638e..9aa90f499d05 100644\n--- a/src/Parsers/ASTSystemQuery.h\n+++ b/src/Parsers/ASTSystemQuery.h\n@@ -28,16 +28,12 @@ class ASTSystemQuery : public IAST, public ASTQueryWithOnCluster\n         DROP_INDEX_UNCOMPRESSED_CACHE,\n         DROP_MMAP_CACHE,\n         DROP_QUERY_CACHE,\n-#if USE_EMBEDDED_COMPILER\n         DROP_COMPILED_EXPRESSION_CACHE,\n-#endif\n         DROP_FILESYSTEM_CACHE,\n         DROP_DISK_METADATA_CACHE,\n         DROP_SCHEMA_CACHE,\n         DROP_FORMAT_SCHEMA_CACHE,\n-#if USE_AWS_S3\n         DROP_S3_CLIENT_CACHE,\n-#endif\n         STOP_LISTEN,\n         START_LISTEN,\n         RESTART_REPLICAS,\n@@ -46,12 +42,10 @@ class ASTSystemQuery : public IAST, public ASTQueryWithOnCluster\n         WAIT_LOADING_PARTS,\n         DROP_REPLICA,\n         DROP_DATABASE_REPLICA,\n-#if USE_JEMALLOC\n         JEMALLOC_PURGE,\n         JEMALLOC_ENABLE_PROFILE,\n         JEMALLOC_DISABLE_PROFILE,\n         JEMALLOC_FLUSH_PROFILE,\n-#endif\n         SYNC_REPLICA,\n         SYNC_DATABASE_REPLICA,\n         SYNC_TRANSACTION_LOG,\n@@ -145,7 +139,7 @@ class ASTSystemQuery : public IAST, public ASTQueryWithOnCluster\n \n     SyncReplicaMode sync_replica_mode = SyncReplicaMode::DEFAULT;\n \n-    std::unordered_set<String> src_replicas;\n+    std::vector<String> src_replicas;\n \n     ServerType server_type;\n \ndiff --git a/src/Parsers/ASTUndropQuery.cpp b/src/Parsers/ASTUndropQuery.cpp\nindex 0b8a18b12c95..ab96ca4711e1 100644\n--- a/src/Parsers/ASTUndropQuery.cpp\n+++ b/src/Parsers/ASTUndropQuery.cpp\n@@ -19,18 +19,25 @@ ASTPtr ASTUndropQuery::clone() const\n     return res;\n }\n \n-void ASTUndropQuery::formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const\n+void ASTUndropQuery::formatQueryImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const\n {\n-    settings.ostr << (settings.hilite ? hilite_keyword : \"\");\n-    settings.ostr << \"UNDROP \";\n-    settings.ostr << \"TABLE \";\n-    settings.ostr << (settings.hilite ? hilite_none : \"\");\n-\n-    assert (table);\n-    if (!database)\n-        settings.ostr << backQuoteIfNeed(getTable());\n-    else\n-        settings.ostr << backQuoteIfNeed(getDatabase()) + \".\" << backQuoteIfNeed(getTable());\n+    settings.ostr << (settings.hilite ? hilite_keyword : \"\")\n+        << \"UNDROP TABLE\"\n+        << (settings.hilite ? hilite_none : \"\")\n+        << \" \";\n+\n+    chassert(table);\n+\n+    if (table)\n+    {\n+        if (database)\n+        {\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n+        }\n+\n+        table->formatImpl(settings, state, frame);\n+    }\n \n     if (uuid != UUIDHelpers::Nil)\n         settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \" UUID \" << (settings.hilite ? hilite_none : \"\")\ndiff --git a/src/Parsers/ASTWatchQuery.h b/src/Parsers/ASTWatchQuery.h\nindex 156fe6828bc7..80b675f513f2 100644\n--- a/src/Parsers/ASTWatchQuery.h\n+++ b/src/Parsers/ASTWatchQuery.h\n@@ -40,22 +40,29 @@ class ASTWatchQuery : public ASTQueryWithTableAndOutput\n     QueryKind getQueryKind() const override { return QueryKind::Create; }\n \n protected:\n-    void formatQueryImpl(const FormatSettings & s, FormatState & state, FormatStateStacked frame) const override\n+    void formatQueryImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const override\n     {\n-        std::string indent_str = s.one_line ? \"\" : std::string(4 * frame.indent, ' ');\n+        std::string indent_str = settings.one_line ? \"\" : std::string(4 * frame.indent, ' ');\n \n-        s.ostr << (s.hilite ? hilite_keyword : \"\") << \"WATCH \" << (s.hilite ? hilite_none : \"\")\n-            << (database ? backQuoteIfNeed(getDatabase()) + \".\" : \"\") << backQuoteIfNeed(getTable());\n+        settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"WATCH \" << (settings.hilite ? hilite_none : \"\");\n+\n+        if (database)\n+        {\n+            database->formatImpl(settings, state, frame);\n+            settings.ostr << '.';\n+        }\n+\n+        table->formatImpl(settings, state, frame);\n \n         if (is_watch_events)\n         {\n-            s.ostr << \" \" << (s.hilite ? hilite_keyword : \"\") << \"EVENTS\" << (s.hilite ? hilite_none : \"\");\n+            settings.ostr << \" \" << (settings.hilite ? hilite_keyword : \"\") << \"EVENTS\" << (settings.hilite ? hilite_none : \"\");\n         }\n \n         if (limit_length)\n         {\n-            s.ostr << (s.hilite ? hilite_keyword : \"\") << s.nl_or_ws << indent_str << \"LIMIT \" << (s.hilite ? hilite_none : \"\");\n-            limit_length->formatImpl(s, state, frame);\n+            settings.ostr << (settings.hilite ? hilite_keyword : \"\") << settings.nl_or_ws << indent_str << \"LIMIT \" << (settings.hilite ? hilite_none : \"\");\n+            limit_length->formatImpl(settings, state, frame);\n         }\n     }\n };\ndiff --git a/src/Parsers/ASTWindowDefinition.cpp b/src/Parsers/ASTWindowDefinition.cpp\nindex 29e42de3ce04..21c44a166af8 100644\n--- a/src/Parsers/ASTWindowDefinition.cpp\n+++ b/src/Parsers/ASTWindowDefinition.cpp\n@@ -94,9 +94,9 @@ void ASTWindowDefinition::formatImpl(const FormatSettings & settings,\n     if (!frame_is_default)\n     {\n         if (need_space)\n-        {\n             settings.ostr << \" \";\n-        }\n+\n+        format_frame.need_parens = true;\n \n         settings.ostr << frame_type << \" BETWEEN \";\n         if (frame_begin_type == WindowFrame::BoundaryType::Current)\ndiff --git a/src/Parsers/ASTWindowDefinition.h b/src/Parsers/ASTWindowDefinition.h\nindex 507825f11d22..72ad8f6abdac 100644\n--- a/src/Parsers/ASTWindowDefinition.h\n+++ b/src/Parsers/ASTWindowDefinition.h\n@@ -41,7 +41,6 @@ struct ASTWindowListElement : public IAST\n     // ASTWindowDefinition\n     ASTPtr definition;\n \n-\n     ASTPtr clone() const override;\n \n     String getID(char delimiter) const override;\ndiff --git a/src/Parsers/Access/ASTCreateSettingsProfileQuery.cpp b/src/Parsers/Access/ASTCreateSettingsProfileQuery.cpp\nindex 3379486d789d..e1b42bfb33da 100644\n--- a/src/Parsers/Access/ASTCreateSettingsProfileQuery.cpp\n+++ b/src/Parsers/Access/ASTCreateSettingsProfileQuery.cpp\n@@ -17,7 +17,7 @@ namespace\n         {\n             if (std::exchange(need_comma, true))\n                 settings.ostr << \", \";\n-            settings.ostr << backQuoteIfNeed(name);\n+            settings.ostr << backQuote(name);\n         }\n     }\n \ndiff --git a/src/Parsers/Access/ASTCreateUserQuery.cpp b/src/Parsers/Access/ASTCreateUserQuery.cpp\nindex 96306fa0dd22..02735568a047 100644\n--- a/src/Parsers/Access/ASTCreateUserQuery.cpp\n+++ b/src/Parsers/Access/ASTCreateUserQuery.cpp\n@@ -18,7 +18,6 @@ namespace\n                       << quoteString(new_name);\n     }\n \n-\n     void formatAuthenticationData(const ASTAuthenticationData & auth_data, const IAST::FormatSettings & settings)\n     {\n         auth_data.format(settings);\ndiff --git a/src/Parsers/Access/ASTGrantQuery.cpp b/src/Parsers/Access/ASTGrantQuery.cpp\nindex 331f1798d77f..f60fa7e4a233 100644\n--- a/src/Parsers/Access/ASTGrantQuery.cpp\n+++ b/src/Parsers/Access/ASTGrantQuery.cpp\n@@ -93,6 +93,29 @@ namespace\n         if (no_output)\n             settings.ostr << (settings.hilite ? IAST::hilite_keyword : \"\") << \"USAGE ON \" << (settings.hilite ? IAST::hilite_none : \"\") << \"*.*\";\n     }\n+\n+\n+    void formatCurrentGrantsElements(const AccessRightsElements & elements, const IAST::FormatSettings & settings)\n+    {\n+        for (size_t i = 0; i != elements.size(); ++i)\n+        {\n+            const auto & element = elements[i];\n+\n+            bool next_element_on_same_db_and_table = false;\n+            if (i != elements.size() - 1)\n+            {\n+                const auto & next_element = elements[i + 1];\n+                if (element.sameDatabaseAndTableAndParameter(next_element))\n+                    next_element_on_same_db_and_table = true;\n+            }\n+\n+            if (!next_element_on_same_db_and_table)\n+            {\n+                settings.ostr << \" \";\n+                formatONClause(element, settings);\n+            }\n+        }\n+    }\n }\n \n \n@@ -148,9 +171,14 @@ void ASTGrantQuery::formatImpl(const FormatSettings & settings, FormatState &, F\n                             \"to grant or revoke, not both of them\");\n     }\n     else if (current_grants)\n-        settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \" CURRENT GRANTS\" << (settings.hilite ? hilite_none : \"\");\n+    {\n+        settings.ostr << (settings.hilite ? hilite_keyword : \"\") << \"CURRENT GRANTS\" << (settings.hilite ? hilite_none : \"\");\n+        formatCurrentGrantsElements(access_rights_elements, settings);\n+    }\n     else\n+    {\n         formatElementsWithoutOptions(access_rights_elements, settings);\n+    }\n \n     settings.ostr << (settings.hilite ? IAST::hilite_keyword : \"\") << (is_revoke ? \" FROM \" : \" TO \")\n                   << (settings.hilite ? IAST::hilite_none : \"\");\ndiff --git a/src/Parsers/Access/ASTSettingsProfileElement.cpp b/src/Parsers/Access/ASTSettingsProfileElement.cpp\nindex 7b29b15cb298..014b97132dea 100644\n--- a/src/Parsers/Access/ASTSettingsProfileElement.cpp\n+++ b/src/Parsers/Access/ASTSettingsProfileElement.cpp\n@@ -18,7 +18,7 @@ namespace\n         }\n         else\n         {\n-            settings.ostr << backQuoteIfNeed(str);\n+            settings.ostr << backQuote(str);\n         }\n     }\n }\ndiff --git a/src/Parsers/Access/ParserCreateUserQuery.cpp b/src/Parsers/Access/ParserCreateUserQuery.cpp\nindex bb90bc4c5a70..8e5a4d789c68 100644\n--- a/src/Parsers/Access/ParserCreateUserQuery.cpp\n+++ b/src/Parsers/Access/ParserCreateUserQuery.cpp\n@@ -69,7 +69,6 @@ namespace\n             bool expect_public_ssh_key = false;\n             bool expect_http_auth_server = false;\n \n-\n             if (ParserKeyword{\"WITH\"}.ignore(pos, expected))\n             {\n                 for (auto check_type : collections::range(AuthenticationType::MAX))\ndiff --git a/src/Parsers/Access/ParserGrantQuery.cpp b/src/Parsers/Access/ParserGrantQuery.cpp\nindex f495cb60786f..bdb338e9338c 100644\n--- a/src/Parsers/Access/ParserGrantQuery.cpp\n+++ b/src/Parsers/Access/ParserGrantQuery.cpp\n@@ -200,8 +200,10 @@ namespace\n             if (!ParserKeyword{\"ON\"}.ignore(pos, expected))\n                 return false;\n \n-            String database_name, table_name;\n-            bool any_database = false, any_table = false;\n+            String database_name;\n+            String table_name;\n+            bool any_database = false;\n+            bool any_table = false;\n             if (!parseDatabaseAndTableNameOrAsterisks(pos, expected, database_name, any_database, table_name, any_table))\n                 return false;\n \ndiff --git a/src/Parsers/Access/ParserUserNameWithHost.h b/src/Parsers/Access/ParserUserNameWithHost.h\nindex 453b816a98d9..8c85e733bef3 100644\n--- a/src/Parsers/Access/ParserUserNameWithHost.h\n+++ b/src/Parsers/Access/ParserUserNameWithHost.h\n@@ -5,6 +5,7 @@\n \n namespace DB\n {\n+\n /** Parses a user name.\n   * It can be a simple string or identifier or something like `name@host`.\n   */\ndiff --git a/src/Parsers/IAST.h b/src/Parsers/IAST.h\nindex fa2b3b0d1c0d..ee70fed0f072 100644\n--- a/src/Parsers/IAST.h\n+++ b/src/Parsers/IAST.h\n@@ -256,6 +256,7 @@ class IAST : public std::enable_shared_from_this<IAST>, public TypePromotion<IAS\n         bool expression_list_always_start_on_new_line = false;  /// Line feed and indent before expression list even if it's of single element.\n         bool expression_list_prepend_whitespace = false; /// Prepend whitespace (if it is required)\n         bool surround_each_list_element_with_parens = false;\n+        size_t list_element_index = 0;\n         const IAST * current_select = nullptr;\n     };\n \ndiff --git a/src/Parsers/ParserCreateIndexQuery.cpp b/src/Parsers/ParserCreateIndexQuery.cpp\nindex 81954e3c2471..e654656b68ad 100644\n--- a/src/Parsers/ParserCreateIndexQuery.cpp\n+++ b/src/Parsers/ParserCreateIndexQuery.cpp\n@@ -25,7 +25,6 @@ bool ParserCreateIndexDeclaration::parseImpl(Pos & pos, ASTPtr & node, Expected\n     ParserUnsignedInteger granularity_p;\n \n     ASTPtr expr;\n-    ASTPtr order;\n     ASTPtr type;\n     ASTPtr granularity;\n \n@@ -35,7 +34,7 @@ bool ParserCreateIndexDeclaration::parseImpl(Pos & pos, ASTPtr & node, Expected\n     }\n     else if (open.ignore(pos, expected))\n     {\n-        if (!order_list.parse(pos, order, expected))\n+        if (!order_list.parse(pos, expr, expected))\n             return false;\n \n         if (!close.ignore(pos, expected))\n@@ -72,7 +71,6 @@ bool ParserCreateIndexDeclaration::parseImpl(Pos & pos, ASTPtr & node, Expected\n             index->granularity = ASTIndexDeclaration::DEFAULT_INDEX_GRANULARITY;\n     }\n     node = index;\n-\n     return true;\n }\n \ndiff --git a/src/Parsers/ParserCreateQuery.h b/src/Parsers/ParserCreateQuery.h\nindex 37b06e15384e..cb51922ffcff 100644\n--- a/src/Parsers/ParserCreateQuery.h\n+++ b/src/Parsers/ParserCreateQuery.h\n@@ -228,11 +228,9 @@ bool IParserColumnDeclaration<NameParser>::parseImpl(Pos & pos, ASTPtr & node, E\n             return false;\n         if (!type_parser.parse(pos, type, expected))\n             return false;\n-        if (s_collate.ignore(pos, expected))\n-        {\n-            if (!collation_parser.parse(pos, collation_expression, expected))\n-                return false;\n-        }\n+        if (s_collate.ignore(pos, expected)\n+            && !collation_parser.parse(pos, collation_expression, expected))\n+            return false;\n     }\n \n     if (allow_null_modifiers)\n@@ -247,6 +245,11 @@ bool IParserColumnDeclaration<NameParser>::parseImpl(Pos & pos, ASTPtr & node, E\n             null_modifier.emplace(true);\n     }\n \n+    /// Collate is also allowed after NULL/NOT NULL\n+    if (!collation_expression && s_collate.ignore(pos, expected)\n+        && !collation_parser.parse(pos, collation_expression, expected))\n+        return false;\n+\n     Pos pos_before_specifier = pos;\n     if (s_default.ignore(pos, expected) || s_materialized.ignore(pos, expected) || s_alias.ignore(pos, expected))\n     {\ndiff --git a/src/Parsers/ParserSetQuery.cpp b/src/Parsers/ParserSetQuery.cpp\nindex 4df74c2dd822..4ad715ba499e 100644\n--- a/src/Parsers/ParserSetQuery.cpp\n+++ b/src/Parsers/ParserSetQuery.cpp\n@@ -314,7 +314,7 @@ bool ParserSetQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n     }\n \n     SettingsChanges changes;\n-    NameToNameMap query_parameters;\n+    NameToNameVector query_parameters;\n     std::vector<String> default_settings;\n \n     while (true)\n@@ -330,7 +330,7 @@ bool ParserSetQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n             return false;\n \n         if (!parameter.first.empty())\n-            query_parameters.emplace(std::move(parameter));\n+            query_parameters.emplace_back(std::move(parameter));\n         else if (!name_of_default_setting.empty())\n             default_settings.emplace_back(std::move(name_of_default_setting));\n         else\ndiff --git a/src/Parsers/ParserSystemQuery.cpp b/src/Parsers/ParserSystemQuery.cpp\nindex 24979af9d406..a50e65aa1345 100644\n--- a/src/Parsers/ParserSystemQuery.cpp\n+++ b/src/Parsers/ParserSystemQuery.cpp\n@@ -293,7 +293,7 @@ bool ParserSystemQuery::parseImpl(IParser::Pos & pos, ASTPtr & node, Expected &\n                             ASTPtr replica_ast;\n                             if (!ParserStringLiteral{}.parse(pos, replica_ast, expected))\n                                 return false;\n-                            res->src_replicas.insert(replica_ast->as<ASTLiteral &>().value.safeGet<String>());\n+                            res->src_replicas.emplace_back(replica_ast->as<ASTLiteral &>().value.safeGet<String>());\n                         } while (ParserToken{TokenType::Comma}.ignore(pos, expected));\n                     }\n                 }\ndiff --git a/src/Parsers/ParserUndropQuery.cpp b/src/Parsers/ParserUndropQuery.cpp\nindex 3784ab0f3539..e67fd7f5f01b 100644\n--- a/src/Parsers/ParserUndropQuery.cpp\n+++ b/src/Parsers/ParserUndropQuery.cpp\n@@ -58,7 +58,7 @@ bool parseUndropQuery(IParser::Pos & pos, ASTPtr & node, Expected & expected)\n     if (database)\n         query->children.push_back(database);\n \n-    assert (table);\n+    chassert(table);\n     query->children.push_back(table);\n \n     query->cluster = cluster_str;\ndiff --git a/src/Parsers/TablePropertiesQueriesASTs.h b/src/Parsers/TablePropertiesQueriesASTs.h\nindex 038936a0297e..e8e4bd8adb36 100644\n--- a/src/Parsers/TablePropertiesQueriesASTs.h\n+++ b/src/Parsers/TablePropertiesQueriesASTs.h\n@@ -86,10 +86,11 @@ using ASTShowCreateDictionaryQuery = ASTQueryWithTableAndOutputImpl<ASTShowCreat\n class ASTExistsDatabaseQuery : public ASTQueryWithTableAndOutputImpl<ASTExistsDatabaseQueryIDAndQueryNames>\n {\n protected:\n-    void formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const override\n+    void formatQueryImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const override\n     {\n         settings.ostr << (settings.hilite ? hilite_keyword : \"\") << ASTExistsDatabaseQueryIDAndQueryNames::Query\n-                    << \" \" << (settings.hilite ? hilite_none : \"\") << backQuoteIfNeed(getDatabase());\n+                    << \" \" << (settings.hilite ? hilite_none : \"\");\n+        database->formatImpl(settings, state, frame);\n     }\n \n     QueryKind getQueryKind() const override { return QueryKind::Exists; }\n@@ -98,10 +99,11 @@ class ASTExistsDatabaseQuery : public ASTQueryWithTableAndOutputImpl<ASTExistsDa\n class ASTShowCreateDatabaseQuery : public ASTQueryWithTableAndOutputImpl<ASTShowCreateDatabaseQueryIDAndQueryNames>\n {\n protected:\n-    void formatQueryImpl(const FormatSettings & settings, FormatState &, FormatStateStacked) const override\n+    void formatQueryImpl(const FormatSettings & settings, FormatState & state, FormatStateStacked frame) const override\n     {\n         settings.ostr << (settings.hilite ? hilite_keyword : \"\") << ASTShowCreateDatabaseQueryIDAndQueryNames::Query\n-                      << \" \" << (settings.hilite ? hilite_none : \"\") << backQuoteIfNeed(getDatabase());\n+                      << \" \" << (settings.hilite ? hilite_none : \"\");\n+        database->formatImpl(settings, state, frame);\n     }\n };\n \ndiff --git a/src/Parsers/parseIdentifierOrStringLiteral.cpp b/src/Parsers/parseIdentifierOrStringLiteral.cpp\nindex 3f2bd8ac8ad5..bb93145772a1 100644\n--- a/src/Parsers/parseIdentifierOrStringLiteral.cpp\n+++ b/src/Parsers/parseIdentifierOrStringLiteral.cpp\n@@ -7,8 +7,10 @@\n #include <Parsers/ExpressionListParsers.h>\n #include <Common/typeid_cast.h>\n \n+\n namespace DB\n {\n+\n bool parseIdentifierOrStringLiteral(IParser::Pos & pos, Expected & expected, String & result)\n {\n     return IParserBase::wrapParseImpl(pos, [&]\n@@ -23,7 +25,7 @@ bool parseIdentifierOrStringLiteral(IParser::Pos & pos, Expected & expected, Str\n         if (ParserStringLiteral().parse(pos, ast, expected))\n         {\n             result = ast->as<ASTLiteral &>().value.safeGet<String>();\n-            return true;\n+            return !result.empty();\n         }\n \n         return false;\ndiff --git a/src/Parsers/parseIdentifierOrStringLiteral.h b/src/Parsers/parseIdentifierOrStringLiteral.h\nindex d029c0c1371f..b450ce8f2f0f 100644\n--- a/src/Parsers/parseIdentifierOrStringLiteral.h\n+++ b/src/Parsers/parseIdentifierOrStringLiteral.h\n@@ -3,11 +3,14 @@\n #include <Core/Types.h>\n #include <Parsers/IParser.h>\n \n+\n namespace DB\n {\n \n-/** Parses a name of an object which could be written in 3 forms:\n-  * name, `name` or 'name' */\n+/** Parses a name of an object which could be written in the following forms:\n+  * name / `name` / \"name\" (identifier) or 'name'.\n+  * Note that empty strings are not allowed.\n+  */\n bool parseIdentifierOrStringLiteral(IParser::Pos & pos, Expected & expected, String & result);\n \n /** Parse a list of identifiers or string literals. */\ndiff --git a/src/Storages/MergeTree/registerStorageMergeTree.cpp b/src/Storages/MergeTree/registerStorageMergeTree.cpp\nindex da38b3ca07c3..2b24a56e9940 100644\n--- a/src/Storages/MergeTree/registerStorageMergeTree.cpp\n+++ b/src/Storages/MergeTree/registerStorageMergeTree.cpp\n@@ -1,6 +1,5 @@\n #include <Databases/DatabaseReplicatedHelpers.h>\n #include <Storages/MergeTree/MergeTreeIndexMinMax.h>\n-#include <Storages/MergeTree/MergeTreeIndexSet.h>\n #include <Storages/MergeTree/MergeTreeIndices.h>\n #include <Storages/StorageFactory.h>\n #include <Storages/StorageMergeTree.h>\n@@ -9,16 +8,12 @@\n #include <Common/Macros.h>\n #include <Common/OptimizedRegularExpression.h>\n #include <Common/typeid_cast.h>\n-#include <Common/thread_local_rng.h>\n \n-#include <Parsers/ASTCreateQuery.h>\n-#include <Parsers/ASTExpressionList.h>\n #include <Parsers/ASTFunction.h>\n #include <Parsers/ASTIdentifier.h>\n #include <Parsers/ASTSetQuery.h>\n \n #include <AggregateFunctions/AggregateFunctionFactory.h>\n-#include <AggregateFunctions/parseAggregateFunctionParameters.h>\n \n #include <Interpreters/Context.h>\n #include <Interpreters/FunctionNameNormalizer.h>\ndiff --git a/utils/clickhouse-diagnostics/README.md b/utils/clickhouse-diagnostics/README.md\nindex 9a86ad535fd1..01bb543c9a58 100644\n--- a/utils/clickhouse-diagnostics/README.md\n+++ b/utils/clickhouse-diagnostics/README.md\n@@ -318,7 +318,7 @@ SHOW ACCESS\n ```\n **result**\n ```\n-CREATE USER default IDENTIFIED WITH plaintext_password SETTINGS PROFILE default\n+CREATE USER default IDENTIFIED WITH plaintext_password SETTINGS PROFILE `default`\n CREATE SETTINGS PROFILE default SETTINGS max_memory_usage = 10000000000, load_balancing = 'random'\n CREATE SETTINGS PROFILE readonly SETTINGS readonly = 1\n CREATE QUOTA default KEYED BY user_name FOR INTERVAL 1 hour TRACKING ONLY TO default\n",
  "test_patch": "diff --git a/src/Parsers/tests/gtest_format_hiliting.cpp b/src/Parsers/tests/gtest_format_hiliting.cpp\nindex a4c3ed86182c..e87b093db9da 100644\n--- a/src/Parsers/tests/gtest_format_hiliting.cpp\n+++ b/src/Parsers/tests/gtest_format_hiliting.cpp\n@@ -5,9 +5,11 @@\n #include <Parsers/parseQuery.h>\n #include <Parsers/HiliteComparator/HiliteComparator.h>\n #include <gtest/gtest.h>\n-#include <Common/StackTrace.h>\n+#include <Common/quoteString.h>\n \n \n+using namespace DB;\n+\n String hilite(const String & s, const char * hilite_type)\n {\n     return hilite_type + s + DB::IAST::hilite_none;\n@@ -20,12 +22,12 @@ String keyword(const String & s)\n \n String identifier(const String & s)\n {\n-    return hilite(s, DB::IAST::hilite_identifier);\n+    return hilite(backQuoteIfNeed(s), DB::IAST::hilite_identifier);\n }\n \n String alias(const String & s)\n {\n-    return hilite(s, DB::IAST::hilite_alias);\n+    return hilite(backQuoteIfNeed(s), DB::IAST::hilite_alias);\n }\n \n String op(const String & s)\n@@ -61,65 +63,65 @@ void compare(const String & expected, const String & query)\n const std::vector<std::pair<std::string, std::string>> expected_and_query_pairs = {\n     // Simple select\n     {\n-        keyword(\"SELECT \") + \"* \" + keyword(\"FROM \") + identifier(\"table\"),\n-        \"select * from table\"\n+        keyword(\"SELECT\") + \" * \" + keyword(\"FROM\") + \" \" + identifier(\"table\"),\n+        \"select * from `table`\"\n     },\n \n     // ASTWithElement\n     {\n-        keyword(\"WITH \") + alias(\"alias \") + keyword(\"AS \")\n-            + \"(\" + keyword(\"SELECT \") + \"* \" + keyword(\"FROM \") + identifier(\"table\") + \") \"\n-            + keyword(\"SELECT \") + \"* \" + keyword(\"FROM \") + identifier(\"table\"),\n-        \"with alias as (select * from table) select * from table\"\n+        keyword(\"WITH \") + alias(\"alias \") + \" \" + keyword(\"AS\")\n+            + \" (\" + keyword(\"SELECT\") + \" * \" + keyword(\"FROM\") + \" \" + identifier(\"table\") + \") \"\n+            + keyword(\"SELECT\") + \" * \" + keyword(\"FROM\") + \" \" + identifier(\"table\"),\n+        \"with `alias ` as (select * from `table`) select * from `table`\"\n     },\n \n     // ASTWithAlias\n     {\n-        keyword(\"SELECT \") + identifier(\"a \") + op(\"+ \") + \"1 \" + keyword(\"AS \") + alias(\"b\") + \", \" + identifier(\"b\"),\n+        keyword(\"SELECT\") + \" \" + identifier(\"a\") + \" \" + op(\"+\") + \" 1 \" + keyword(\"AS\") + \" \" + alias(\"b\") + \", \" + identifier(\"b\"),\n         \"select a + 1 as b, b\"\n     },\n \n     // ASTFunction\n     {\n         keyword(\"SELECT \") + \"* \" + keyword(\"FROM \")\n-            + function(\"view(\") + keyword(\"SELECT \") + \"* \" + keyword(\"FROM \") + identifier(\"table\") + function(\")\"),\n-        \"select * from view(select * from table)\"\n+            + function(\"view(\") + keyword(\"SELECT\") + \" * \" + keyword(\"FROM \") + identifier(\"table\") + function(\")\"),\n+        \"select * from view(select * from `table`)\"\n     },\n \n     // ASTDictionaryAttributeDeclaration\n     {\n-        keyword(\"CREATE DICTIONARY \") + \"name \"\n-            + \"(`Name` \" + function(\"ClickHouseDataType \")\n-            + keyword(\"DEFAULT \") + \"'' \"\n-            + keyword(\"EXPRESSION \") + function(\"rand64() \")\n+        keyword(\"CREATE DICTIONARY \") + identifier(\"name\") + \" \"\n+            + \"(`Name` \" + function(\"ClickHouseDataType\")\n+            + keyword(\" DEFAULT\") + \" '' \"\n+            + keyword(\"EXPRESSION\") + \" \" + function(\"rand64()\") + \" \"\n             + keyword(\"IS_OBJECT_ID\") + \")\",\n         \"CREATE DICTIONARY name (`Name` ClickHouseDataType DEFAULT '' EXPRESSION rand64() IS_OBJECT_ID)\"\n     },\n \n     // ASTDictionary, SOURCE keyword\n     {\n-        keyword(\"CREATE DICTIONARY \") + \"name \"\n-            + \"(`Name` \" + function(\"ClickHouseDataType \")\n-            + keyword(\"DEFAULT \") + \"'' \"\n-            + keyword(\"EXPRESSION \") + function(\"rand64() \")\n+        keyword(\"CREATE DICTIONARY \") + identifier(\"name\") + \" \"\n+            + \"(`Name`\" + \" \" + function(\"ClickHouseDataType \")\n+            + keyword(\"DEFAULT\") + \" '' \"\n+            + keyword(\"EXPRESSION\") + \" \" + function(\"rand64()\") + \" \"\n             + keyword(\"IS_OBJECT_ID\") + \") \"\n-            + keyword(\"SOURCE\") + \"(\" + keyword(\"FILE\") + \"(\" + keyword(\"PATH \") + \"'path'))\",\n+            + keyword(\"SOURCE\") + \"(\" + keyword(\"FILE\") + \"(\" + keyword(\"PATH\") + \" 'path'))\",\n         \"CREATE DICTIONARY name (`Name` ClickHouseDataType DEFAULT '' EXPRESSION rand64() IS_OBJECT_ID) \"\n         \"SOURCE(FILE(PATH 'path'))\"\n     },\n \n     // ASTKillQueryQuery\n     {\n-        keyword(\"KILL QUERY ON CLUSTER \") + \"clustername \"\n-            + keyword(\"WHERE \") + identifier(\"user \") + op(\"= \") + \"'username' \"\n+        keyword(\"KILL QUERY ON CLUSTER\") + \" clustername \"\n+            + keyword(\"WHERE\") + \" \" + identifier(\"user\") + op(\" = \") + \"'username' \"\n             + keyword(\"SYNC\"),\n         \"KILL QUERY ON CLUSTER clustername WHERE user = 'username' SYNC\"\n     },\n \n     // ASTCreateQuery\n     {\n-        keyword(\"CREATE TABLE \") + \"name \" + keyword(\"AS (SELECT \") + \"*\" + keyword(\") \")\n-            + keyword(\"COMMENT \") + \"'hello'\",\n+        keyword(\"CREATE TABLE \") + identifier(\"name\") + \" \" + keyword(\"AS (SELECT\") + \" *\" + keyword(\")\") + \" \"\n+            + keyword(\"COMMENT\") + \" 'hello'\",\n         \"CREATE TABLE name AS (SELECT *) COMMENT 'hello'\"\n     },\n };\ndiff --git a/tests/integration/test_backup_restore_new/test.py b/tests/integration/test_backup_restore_new/test.py\nindex cac458f616d0..06560bda2b6f 100644\n--- a/tests/integration/test_backup_restore_new/test.py\n+++ b/tests/integration/test_backup_restore_new/test.py\n@@ -885,7 +885,7 @@ def test_required_privileges():\n     instance.query(\"CREATE USER u1\")\n \n     backup_name = new_backup_name()\n-    expected_error = \"necessary to have the grant BACKUP ON test.table\"\n+    expected_error = \"necessary to have the grant BACKUP ON test.`table`\"\n     assert expected_error in instance.query_and_get_error(\n         f\"BACKUP TABLE test.table TO {backup_name}\", user=\"u1\"\n     )\n@@ -893,7 +893,7 @@ def test_required_privileges():\n     instance.query(\"GRANT BACKUP ON test.table TO u1\")\n     instance.query(f\"BACKUP TABLE test.table TO {backup_name}\", user=\"u1\")\n \n-    expected_error = \"necessary to have the grant INSERT, CREATE TABLE ON test.table\"\n+    expected_error = \"necessary to have the grant INSERT, CREATE TABLE ON test.`table`\"\n     assert expected_error in instance.query_and_get_error(\n         f\"RESTORE TABLE test.table FROM {backup_name}\", user=\"u1\"\n     )\n@@ -910,7 +910,7 @@ def test_required_privileges():\n \n     instance.query(\"DROP TABLE test.table\")\n \n-    expected_error = \"necessary to have the grant INSERT, CREATE TABLE ON test.table\"\n+    expected_error = \"necessary to have the grant INSERT, CREATE TABLE ON test.`table`\"\n     assert expected_error in instance.query_and_get_error(\n         f\"RESTORE ALL FROM {backup_name}\", user=\"u1\"\n     )\n@@ -963,7 +963,7 @@ def test_system_users():\n     instance.query(\"GRANT r1 TO r2 WITH ADMIN OPTION\")\n     instance.query(\"GRANT r2 TO u1\")\n \n-    instance.query(\"CREATE SETTINGS PROFILE prof1 SETTINGS custom_b=2 TO u1\")\n+    instance.query(\"CREATE SETTINGS PROFILE `prof1` SETTINGS custom_b=2 TO u1\")\n     instance.query(\"CREATE ROW POLICY rowpol1 ON test.table USING x<50 TO u1\")\n     instance.query(\"CREATE QUOTA q1 TO r1\")\n \n@@ -984,7 +984,7 @@ def test_system_users():\n \n     assert (\n         instance.query(\"SHOW CREATE USER u1\")\n-        == \"CREATE USER u1 IDENTIFIED WITH sha256_password SETTINGS PROFILE default, custom_a = 1\\n\"\n+        == \"CREATE USER u1 IDENTIFIED WITH sha256_password SETTINGS PROFILE `default`, custom_a = 1\\n\"\n     )\n     assert instance.query(\"SHOW GRANTS FOR u1\") == TSV(\n         [\"GRANT SELECT ON test.* TO u1\", \"GRANT r2 TO u1\"]\n@@ -998,11 +998,11 @@ def test_system_users():\n \n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE prof1\")\n-        == \"CREATE SETTINGS PROFILE prof1 SETTINGS custom_b = 2 TO u1\\n\"\n+        == \"CREATE SETTINGS PROFILE `prof1` SETTINGS custom_b = 2 TO u1\\n\"\n     )\n     assert (\n         instance.query(\"SHOW CREATE ROW POLICY rowpol1\")\n-        == \"CREATE ROW POLICY rowpol1 ON test.table FOR SELECT USING x < 50 TO u1\\n\"\n+        == \"CREATE ROW POLICY rowpol1 ON test.`table` FOR SELECT USING x < 50 TO u1\\n\"\n     )\n     assert instance.query(\"SHOW CREATE QUOTA q1\") == \"CREATE QUOTA q1 TO r1\\n\"\n \ndiff --git a/tests/integration/test_disk_access_storage/test.py b/tests/integration/test_disk_access_storage/test.py\nindex bcfc9d718a7b..a710295505e2 100644\n--- a/tests/integration/test_disk_access_storage/test.py\n+++ b/tests/integration/test_disk_access_storage/test.py\n@@ -46,7 +46,7 @@ def test_create():\n     def check():\n         assert (\n             instance.query(\"SHOW CREATE USER u1\")\n-            == \"CREATE USER u1 SETTINGS PROFILE s1\\n\"\n+            == \"CREATE USER u1 SETTINGS PROFILE `s1`\\n\"\n         )\n         assert (\n             instance.query(\"SHOW CREATE USER u2\")\n@@ -64,16 +64,16 @@ def check():\n         assert instance.query(\"SHOW GRANTS FOR u2\") == \"GRANT rx TO u2\\n\"\n         assert (\n             instance.query(\"SHOW CREATE ROLE rx\")\n-            == \"CREATE ROLE rx SETTINGS PROFILE s1\\n\"\n+            == \"CREATE ROLE rx SETTINGS PROFILE `s1`\\n\"\n         )\n         assert instance.query(\"SHOW GRANTS FOR rx\") == \"\"\n         assert (\n             instance.query(\"SHOW CREATE SETTINGS PROFILE s1\")\n-            == \"CREATE SETTINGS PROFILE s1 SETTINGS max_memory_usage = 123456789 MIN 100000000 MAX 200000000\\n\"\n+            == \"CREATE SETTINGS PROFILE `s1` SETTINGS max_memory_usage = 123456789 MIN 100000000 MAX 200000000\\n\"\n         )\n         assert (\n             instance.query(\"SHOW CREATE SETTINGS PROFILE s2\")\n-            == \"CREATE SETTINGS PROFILE s2 SETTINGS INHERIT s1 TO u2\\n\"\n+            == \"CREATE SETTINGS PROFILE `s2` SETTINGS INHERIT `s1` TO u2\\n\"\n         )\n \n     check()\n@@ -99,7 +99,7 @@ def test_alter():\n     def check():\n         assert (\n             instance.query(\"SHOW CREATE USER u1\")\n-            == \"CREATE USER u1 SETTINGS PROFILE s1\\n\"\n+            == \"CREATE USER u1 SETTINGS PROFILE `s1`\\n\"\n         )\n         assert (\n             instance.query(\"SHOW CREATE USER u2\")\n@@ -112,7 +112,7 @@ def check():\n         assert instance.query(\"SHOW GRANTS FOR u2\") == \"GRANT rx, ry TO u2\\n\"\n         assert (\n             instance.query(\"SHOW CREATE ROLE rx\")\n-            == \"CREATE ROLE rx SETTINGS PROFILE s2\\n\"\n+            == \"CREATE ROLE rx SETTINGS PROFILE `s2`\\n\"\n         )\n         assert instance.query(\"SHOW CREATE ROLE ry\") == \"CREATE ROLE ry\\n\"\n         assert (\n@@ -124,11 +124,11 @@ def check():\n         )\n         assert (\n             instance.query(\"SHOW CREATE SETTINGS PROFILE s1\")\n-            == \"CREATE SETTINGS PROFILE s1 SETTINGS max_memory_usage = 987654321 CONST\\n\"\n+            == \"CREATE SETTINGS PROFILE `s1` SETTINGS max_memory_usage = 987654321 CONST\\n\"\n         )\n         assert (\n             instance.query(\"SHOW CREATE SETTINGS PROFILE s2\")\n-            == \"CREATE SETTINGS PROFILE s2 SETTINGS INHERIT s1 TO u2\\n\"\n+            == \"CREATE SETTINGS PROFILE `s2` SETTINGS INHERIT `s1` TO u2\\n\"\n         )\n \n     check()\n@@ -150,7 +150,7 @@ def check():\n         assert instance.query(\"SHOW CREATE USER u1\") == \"CREATE USER u1\\n\"\n         assert (\n             instance.query(\"SHOW CREATE SETTINGS PROFILE s2\")\n-            == \"CREATE SETTINGS PROFILE s2\\n\"\n+            == \"CREATE SETTINGS PROFILE `s2`\\n\"\n         )\n         assert \"There is no user `u2`\" in instance.query_and_get_error(\n             \"SHOW CREATE USER u2\"\ndiff --git a/tests/integration/test_external_http_authenticator/test.py b/tests/integration/test_external_http_authenticator/test.py\nindex ca5225142f88..286d3a334c17 100644\n--- a/tests/integration/test_external_http_authenticator/test.py\n+++ b/tests/integration/test_external_http_authenticator/test.py\n@@ -59,7 +59,7 @@ def started_cluster():\n def test_user_from_config_basic_auth_pass(started_cluster):\n     assert (\n         instance.query(\"SHOW CREATE USER good_user\")\n-        == \"CREATE USER good_user IDENTIFIED WITH http SERVER \\\\'basic_server\\\\' SCHEME \\\\'BASIC\\\\' SETTINGS PROFILE default\\n\"\n+        == \"CREATE USER good_user IDENTIFIED WITH http SERVER \\\\'basic_server\\\\' SCHEME \\\\'BASIC\\\\' SETTINGS PROFILE `default`\\n\"\n     )\n     assert (\n         instance.query(\ndiff --git a/tests/integration/test_grant_and_revoke/test.py b/tests/integration/test_grant_and_revoke/test.py\nindex a86a1208f490..75a59ceac394 100644\n--- a/tests/integration/test_grant_and_revoke/test.py\n+++ b/tests/integration/test_grant_and_revoke/test.py\n@@ -77,53 +77,53 @@ def test_revoke_requires_grant_option():\n     instance.query(\"CREATE USER B\")\n \n     instance.query(\"GRANT SELECT ON test.table TO B\")\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n \n     expected_error = \"Not enough privileges\"\n     assert expected_error in instance.query_and_get_error(\n         \"REVOKE SELECT ON test.table FROM B\", user=\"A\"\n     )\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n \n     instance.query(\"GRANT SELECT ON test.table TO A\")\n     expected_error = \"privileges have been granted, but without grant option\"\n     assert expected_error in instance.query_and_get_error(\n         \"REVOKE SELECT ON test.table FROM B\", user=\"A\"\n     )\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n \n     instance.query(\"GRANT SELECT ON test.table TO A WITH GRANT OPTION\")\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n     instance.query(\"REVOKE SELECT ON test.table FROM B\", user=\"A\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == \"\"\n \n     instance.query(\"GRANT SELECT ON test.table TO B\")\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n     instance.query(\"REVOKE SELECT ON test.* FROM B\", user=\"A\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == \"\"\n \n     instance.query(\"GRANT SELECT ON test.table TO B\")\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n     instance.query(\"REVOKE ALL ON test.* FROM B\", user=\"A\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == \"\"\n \n     instance.query(\"GRANT SELECT ON test.table TO B\")\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n     instance.query(\"REVOKE ALL ON *.* FROM B\", user=\"A\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == \"\"\n \n     instance.query(\"REVOKE GRANT OPTION FOR ALL ON *.* FROM A\")\n     instance.query(\"GRANT SELECT ON test.table TO B\")\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n     expected_error = \"privileges have been granted, but without grant option\"\n     assert expected_error in instance.query_and_get_error(\n         \"REVOKE SELECT ON test.table FROM B\", user=\"A\"\n     )\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n \n     instance.query(\"GRANT SELECT ON test.* TO A WITH GRANT OPTION\")\n     instance.query(\"GRANT SELECT ON test.table TO B\")\n-    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.table TO B\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR B\") == \"GRANT SELECT ON test.`table` TO B\\n\"\n     instance.query(\"REVOKE SELECT ON test.table FROM B\", user=\"A\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == \"\"\n \n@@ -189,7 +189,7 @@ def test_grant_all_on_table():\n         == \"GRANT SHOW TABLES, SHOW COLUMNS, SHOW DICTIONARIES, SELECT, INSERT, ALTER TABLE, ALTER VIEW, CREATE TABLE, CREATE VIEW, CREATE DICTIONARY, \"\n         \"DROP TABLE, DROP VIEW, DROP DICTIONARY, UNDROP TABLE, TRUNCATE, OPTIMIZE, BACKUP, CREATE ROW POLICY, ALTER ROW POLICY, DROP ROW POLICY, SHOW ROW POLICIES, \"\n         \"SYSTEM MERGES, SYSTEM TTL MERGES, SYSTEM FETCHES, SYSTEM MOVES, SYSTEM PULLING REPLICATION LOG, SYSTEM CLEANUP, SYSTEM VIEWS, SYSTEM SENDS, SYSTEM REPLICATION QUEUES, SYSTEM DROP REPLICA, SYSTEM SYNC REPLICA, \"\n-        \"SYSTEM RESTART REPLICA, SYSTEM RESTORE REPLICA, SYSTEM WAIT LOADING PARTS, SYSTEM FLUSH DISTRIBUTED, dictGet ON test.table TO B\\n\"\n+        \"SYSTEM RESTART REPLICA, SYSTEM RESTORE REPLICA, SYSTEM WAIT LOADING PARTS, SYSTEM FLUSH DISTRIBUTED, dictGet ON test.`table` TO B\\n\"\n     )\n     instance.query(\"REVOKE ALL ON test.table FROM B\", user=\"A\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == \"\"\n@@ -219,7 +219,9 @@ def test_implicit_show_grants():\n     )\n \n     instance.query(\"GRANT SELECT(x) ON test.table TO A\")\n-    assert instance.query(\"SHOW GRANTS FOR A\") == \"GRANT SELECT(x) ON test.table TO A\\n\"\n+    assert (\n+        instance.query(\"SHOW GRANTS FOR A\") == \"GRANT SELECT(x) ON test.`table` TO A\\n\"\n+    )\n     assert (\n         instance.query(\n             \"select count() FROM system.databases WHERE name='test'\", user=\"A\"\n@@ -242,7 +244,7 @@ def test_implicit_show_grants():\n     )\n \n     instance.query(\"GRANT SELECT ON test.table TO A\")\n-    assert instance.query(\"SHOW GRANTS FOR A\") == \"GRANT SELECT ON test.table TO A\\n\"\n+    assert instance.query(\"SHOW GRANTS FOR A\") == \"GRANT SELECT ON test.`table` TO A\\n\"\n     assert (\n         instance.query(\n             \"select count() FROM system.databases WHERE name='test'\", user=\"A\"\n@@ -395,12 +397,12 @@ def test_introspection():\n         [\n             \"CREATE USER A\",\n             \"CREATE USER B\",\n-            \"CREATE USER default IDENTIFIED WITH plaintext_password SETTINGS PROFILE default\",\n+            \"CREATE USER default IDENTIFIED WITH plaintext_password SETTINGS PROFILE `default`\",\n         ]\n     )\n \n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV(\n-        [\"GRANT SELECT ON test.table TO A\"]\n+        [\"GRANT SELECT ON test.`table` TO A\"]\n     )\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n         [\"GRANT CREATE ON *.* TO B WITH GRANT OPTION\"]\n@@ -410,40 +412,40 @@ def test_introspection():\n     )\n     assert instance.query(\"SHOW GRANTS FOR A,B\") == TSV(\n         [\n-            \"GRANT SELECT ON test.table TO A\",\n+            \"GRANT SELECT ON test.`table` TO A\",\n             \"GRANT CREATE ON *.* TO B WITH GRANT OPTION\",\n         ]\n     )\n     assert instance.query(\"SHOW GRANTS FOR B,A\") == TSV(\n         [\n-            \"GRANT SELECT ON test.table TO A\",\n+            \"GRANT SELECT ON test.`table` TO A\",\n             \"GRANT CREATE ON *.* TO B WITH GRANT OPTION\",\n         ]\n     )\n     assert instance.query(\"SHOW GRANTS FOR ALL\") == TSV(\n         [\n-            \"GRANT SELECT ON test.table TO A\",\n+            \"GRANT SELECT ON test.`table` TO A\",\n             \"GRANT CREATE ON *.* TO B WITH GRANT OPTION\",\n             \"GRANT ALL ON *.* TO default WITH GRANT OPTION\",\n         ]\n     )\n \n     assert instance.query(\"SHOW GRANTS\", user=\"A\") == TSV(\n-        [\"GRANT SELECT ON test.table TO A\"]\n+        [\"GRANT SELECT ON test.`table` TO A\"]\n     )\n     assert instance.query(\"SHOW GRANTS\", user=\"B\") == TSV(\n         [\"GRANT CREATE ON *.* TO B WITH GRANT OPTION\"]\n     )\n \n     assert instance.query(\"SHOW GRANTS FOR ALL\", user=\"A\") == TSV(\n-        [\"GRANT SELECT ON test.table TO A\"]\n+        [\"GRANT SELECT ON test.`table` TO A\"]\n     )\n     assert instance.query(\"SHOW GRANTS FOR ALL\", user=\"B\") == TSV(\n         [\"GRANT CREATE ON *.* TO B WITH GRANT OPTION\"]\n     )\n     assert instance.query(\"SHOW GRANTS FOR ALL\") == TSV(\n         [\n-            \"GRANT SELECT ON test.table TO A\",\n+            \"GRANT SELECT ON test.`table` TO A\",\n             \"GRANT CREATE ON *.* TO B WITH GRANT OPTION\",\n             \"GRANT ALL ON *.* TO default WITH GRANT OPTION\",\n         ]\n@@ -455,10 +457,10 @@ def test_introspection():\n     expected_access1 = (\n         \"CREATE USER A\\n\"\n         \"CREATE USER B\\n\"\n-        \"CREATE USER default IDENTIFIED WITH plaintext_password SETTINGS PROFILE default\"\n+        \"CREATE USER default IDENTIFIED WITH plaintext_password SETTINGS PROFILE `default`\"\n     )\n     expected_access2 = (\n-        \"GRANT SELECT ON test.table TO A\\n\"\n+        \"GRANT SELECT ON test.`table` TO A\\n\"\n         \"GRANT CREATE ON *.* TO B WITH GRANT OPTION\\n\"\n         \"GRANT ALL ON *.* TO default WITH GRANT OPTION\\n\"\n     )\n@@ -513,10 +515,10 @@ def test_current_database():\n     instance.query(\"GRANT SELECT ON table TO A\", database=\"test\")\n \n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV(\n-        [\"GRANT SELECT ON test.table TO A\"]\n+        [\"GRANT SELECT ON test.`table` TO A\"]\n     )\n     assert instance.query(\"SHOW GRANTS FOR A\", database=\"test\") == TSV(\n-        [\"GRANT SELECT ON test.table TO A\"]\n+        [\"GRANT SELECT ON test.`table` TO A\"]\n     )\n \n     assert instance.query(\"SELECT * FROM test.table\", user=\"A\") == \"1\\t5\\n2\\t10\\n\"\n@@ -537,12 +539,12 @@ def test_grant_with_replace_option():\n     instance.query(\"CREATE USER A\")\n     instance.query(\"GRANT SELECT ON test.table TO A\")\n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV(\n-        [\"GRANT SELECT ON test.table TO A\"]\n+        [\"GRANT SELECT ON test.`table` TO A\"]\n     )\n \n     instance.query(\"GRANT INSERT ON test.table TO A WITH REPLACE OPTION\")\n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV(\n-        [\"GRANT INSERT ON test.table TO A\"]\n+        [\"GRANT INSERT ON test.`table` TO A\"]\n     )\n \n     instance.query(\"GRANT NONE ON *.* TO A WITH REPLACE OPTION\")\n@@ -552,41 +554,41 @@ def test_grant_with_replace_option():\n     instance.query(\"GRANT SELECT ON test.table TO B\")\n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV([])\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n-        [\"GRANT SELECT ON test.table TO B\"]\n+        [\"GRANT SELECT ON test.`table` TO B\"]\n     )\n \n     expected_error = (\n-        \"it's necessary to have the grant INSERT ON test.table WITH GRANT OPTION\"\n+        \"it's necessary to have the grant INSERT ON test.`table` WITH GRANT OPTION\"\n     )\n     assert expected_error in instance.query_and_get_error(\n-        \"GRANT INSERT ON test.table TO B WITH REPLACE OPTION\", user=\"A\"\n+        \"GRANT INSERT ON test.`table` TO B WITH REPLACE OPTION\", user=\"A\"\n     )\n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV([])\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n-        [\"GRANT SELECT ON test.table TO B\"]\n+        [\"GRANT SELECT ON test.`table` TO B\"]\n     )\n \n     instance.query(\"GRANT INSERT ON test.table TO A WITH GRANT OPTION\")\n     expected_error = (\n-        \"it's necessary to have the grant SELECT ON test.table WITH GRANT OPTION\"\n+        \"it's necessary to have the grant SELECT ON test.`table` WITH GRANT OPTION\"\n     )\n     assert expected_error in instance.query_and_get_error(\n-        \"GRANT INSERT ON test.table TO B WITH REPLACE OPTION\", user=\"A\"\n+        \"GRANT INSERT ON test.`table` TO B WITH REPLACE OPTION\", user=\"A\"\n     )\n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV(\n-        [\"GRANT INSERT ON test.table TO A WITH GRANT OPTION\"]\n+        [\"GRANT INSERT ON test.`table` TO A WITH GRANT OPTION\"]\n     )\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n-        [\"GRANT SELECT ON test.table TO B\"]\n+        [\"GRANT SELECT ON test.`table` TO B\"]\n     )\n \n-    instance.query(\"GRANT SELECT ON test.table TO A WITH GRANT OPTION\")\n-    instance.query(\"GRANT INSERT ON test.table TO B WITH REPLACE OPTION\", user=\"A\")\n+    instance.query(\"GRANT SELECT ON test.`table` TO A WITH GRANT OPTION\")\n+    instance.query(\"GRANT INSERT ON test.`table` TO B WITH REPLACE OPTION\", user=\"A\")\n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV(\n-        [\"GRANT SELECT, INSERT ON test.table TO A WITH GRANT OPTION\"]\n+        [\"GRANT SELECT, INSERT ON test.`table` TO A WITH GRANT OPTION\"]\n     )\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n-        [\"GRANT INSERT ON test.table TO B\"]\n+        [\"GRANT INSERT ON test.`table` TO B\"]\n     )\n \n \n@@ -632,7 +634,7 @@ def test_grant_current_grants_with_partial_revoke():\n             \"GRANT CREATE TABLE ON *.* TO A\",\n             \"GRANT SELECT ON *.* TO A WITH GRANT OPTION\",\n             \"REVOKE SELECT, CREATE TABLE ON test.* FROM A\",\n-            \"GRANT SELECT, CREATE TABLE ON test.table TO A WITH GRANT OPTION\",\n+            \"GRANT SELECT, CREATE TABLE ON test.`table` TO A WITH GRANT OPTION\",\n             \"GRANT SELECT ON test.table2 TO A\",\n         ]\n     )\n@@ -643,7 +645,7 @@ def test_grant_current_grants_with_partial_revoke():\n         [\n             \"GRANT SELECT ON *.* TO B\",\n             \"REVOKE SELECT ON test.* FROM B\",\n-            \"GRANT SELECT, CREATE TABLE ON test.table TO B\",\n+            \"GRANT SELECT, CREATE TABLE ON test.`table` TO B\",\n         ]\n     )\n \n@@ -654,7 +656,7 @@ def test_grant_current_grants_with_partial_revoke():\n         [\n             \"GRANT SELECT ON *.* TO B WITH GRANT OPTION\",\n             \"REVOKE SELECT ON test.* FROM B\",\n-            \"GRANT SELECT, CREATE TABLE ON test.table TO B WITH GRANT OPTION\",\n+            \"GRANT SELECT, CREATE TABLE ON test.`table` TO B WITH GRANT OPTION\",\n         ]\n     )\n \n@@ -665,7 +667,7 @@ def test_grant_current_grants_with_partial_revoke():\n     assert instance.query(\"SHOW GRANTS FOR C\") == TSV(\n         [\n             \"GRANT SELECT ON *.* TO C\",\n-            \"GRANT CREATE TABLE ON test.table TO C\",\n+            \"GRANT CREATE TABLE ON test.`table` TO C\",\n         ]\n     )\n \n@@ -674,7 +676,7 @@ def test_grant_current_grants_with_partial_revoke():\n     instance.query(\"GRANT CURRENT GRANTS ON test.* TO B WITH GRANT OPTION\", user=\"A\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n         [\n-            \"GRANT SELECT, CREATE TABLE ON test.table TO B WITH GRANT OPTION\",\n+            \"GRANT SELECT, CREATE TABLE ON test.`table` TO B WITH GRANT OPTION\",\n         ]\n     )\n \n@@ -693,7 +695,7 @@ def test_current_grants_override():\n     instance.query(\"CREATE USER B\")\n     instance.query(\"GRANT SELECT ON test.table TO B\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n-        [\"GRANT SELECT ON test.table TO B\"]\n+        [\"GRANT SELECT ON test.`table` TO B\"]\n     )\n \n     instance.query(\"GRANT CURRENT GRANTS ON *.* TO B\", user=\"A\")\n@@ -701,7 +703,7 @@ def test_current_grants_override():\n         [\n             \"GRANT SELECT ON *.* TO B\",\n             \"REVOKE SELECT ON test.* FROM B\",\n-            \"GRANT SELECT ON test.table TO B\",\n+            \"GRANT SELECT ON test.`table` TO B\",\n         ]\n     )\n \n@@ -709,7 +711,7 @@ def test_current_grants_override():\n     instance.query(\"CREATE USER B\")\n     instance.query(\"GRANT SELECT ON test.table TO B\")\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n-        [\"GRANT SELECT ON test.table TO B\"]\n+        [\"GRANT SELECT ON test.`table` TO B\"]\n     )\n \n     instance.query(\"GRANT CURRENT GRANTS ON *.* TO B WITH REPLACE OPTION\", user=\"A\")\ndiff --git a/tests/integration/test_mask_sensitive_info/test.py b/tests/integration/test_mask_sensitive_info/test.py\nindex 80785c6c01f7..251da7e4e09c 100644\n--- a/tests/integration/test_mask_sensitive_info/test.py\n+++ b/tests/integration/test_mask_sensitive_info/test.py\n@@ -249,10 +249,10 @@ def make_test_case(i):\n             \"CREATE TABLE table5 (x int) ENGINE = S3('http://minio1:9001/root/data/test3.csv.gz', 'CSV', 'gzip')\",\n             \"CREATE TABLE table6 (`x` int) ENGINE = S3('http://minio1:9001/root/data/test4.csv', 'minio', '[HIDDEN]', 'CSV')\",\n             \"CREATE TABLE table7 (`x` int) ENGINE = S3('http://minio1:9001/root/data/test5.csv.gz', 'minio', '[HIDDEN]', 'CSV', 'gzip')\",\n-            \"CREATE TABLE table8 (`x` int) ENGINE = MySQL(named_collection_1, host = 'mysql80', port = 3306, database = 'mysql_db', table = 'mysql_table', user = 'mysql_user', password = '[HIDDEN]')\",\n-            \"CREATE TABLE table9 (`x` int) ENGINE = MySQL(named_collection_2, database = 'mysql_db', host = 'mysql80', port = 3306, password = '[HIDDEN]', table = 'mysql_table', user = 'mysql_user')\",\n+            \"CREATE TABLE table8 (`x` int) ENGINE = MySQL(named_collection_1, host = 'mysql80', port = 3306, database = 'mysql_db', `table` = 'mysql_table', user = 'mysql_user', password = '[HIDDEN]')\",\n+            \"CREATE TABLE table9 (`x` int) ENGINE = MySQL(named_collection_2, database = 'mysql_db', host = 'mysql80', port = 3306, password = '[HIDDEN]', `table` = 'mysql_table', user = 'mysql_user')\",\n             \"CREATE TABLE table10 (x int) ENGINE = MySQL(named_collection_3, database = 'mysql_db', host = 'mysql80', port = 3306, table = 'mysql_table')\",\n-            \"CREATE TABLE table11 (`x` int) ENGINE = PostgreSQL(named_collection_4, host = 'postgres1', port = 5432, database = 'postgres_db', table = 'postgres_table', user = 'postgres_user', password = '[HIDDEN]')\",\n+            \"CREATE TABLE table11 (`x` int) ENGINE = PostgreSQL(named_collection_4, host = 'postgres1', port = 5432, database = 'postgres_db', `table` = 'postgres_table', user = 'postgres_user', password = '[HIDDEN]')\",\n             \"CREATE TABLE table12 (`x` int) ENGINE = MongoDB(named_collection_5, host = 'mongo1', port = 5432, db = 'mongo_db', collection = 'mongo_col', user = 'mongo_user', password = '[HIDDEN]'\",\n             \"CREATE TABLE table13 (`x` int) ENGINE = S3(named_collection_6, url = 'http://minio1:9001/root/data/test8.csv', access_key_id = 'minio', secret_access_key = '[HIDDEN]', format = 'CSV')\",\n             \"CREATE TABLE table14 (x int) ENGINE = S3('http://minio1:9001/root/data/test9.csv.gz', 'NOSIGN', 'CSV', 'gzip')\",\n@@ -429,11 +429,11 @@ def make_test_case(i):\n             \"CREATE TABLE tablefunc22 (`x` int) AS remote('127.{2..11}', numbers(10), 'remote_user', '[HIDDEN]', rand())\",\n             \"CREATE TABLE tablefunc23 (`x` int) AS remoteSecure('127.{2..11}', 'default', 'remote_table', 'remote_user', '[HIDDEN]')\",\n             \"CREATE TABLE tablefunc24 (x int) AS remoteSecure('127.{2..11}', 'default', 'remote_table', 'remote_user', rand())\",\n-            \"CREATE TABLE tablefunc25 (`x` int) AS mysql(named_collection_1, host = 'mysql80', port = 3306, database = 'mysql_db', table = 'mysql_table', user = 'mysql_user', password = '[HIDDEN]')\",\n-            \"CREATE TABLE tablefunc26 (`x` int) AS postgresql(named_collection_2, password = '[HIDDEN]', host = 'postgres1', port = 5432, database = 'postgres_db', table = 'postgres_table', user = 'postgres_user')\",\n+            \"CREATE TABLE tablefunc25 (`x` int) AS mysql(named_collection_1, host = 'mysql80', port = 3306, database = 'mysql_db', `table` = 'mysql_table', user = 'mysql_user', password = '[HIDDEN]')\",\n+            \"CREATE TABLE tablefunc26 (`x` int) AS postgresql(named_collection_2, password = '[HIDDEN]', host = 'postgres1', port = 5432, database = 'postgres_db', `table` = 'postgres_table', user = 'postgres_user')\",\n             \"CREATE TABLE tablefunc27 (`x` int) AS s3(named_collection_2, url = 'http://minio1:9001/root/data/test4.csv', access_key_id = 'minio', secret_access_key = '[HIDDEN]')\",\n-            \"CREATE TABLE tablefunc28 (`x` int) AS remote(named_collection_6, addresses_expr = '127.{2..11}', database = 'default', table = 'remote_table', user = 'remote_user', password = '[HIDDEN]', sharding_key = rand())\",\n-            \"CREATE TABLE tablefunc29 (`x` int) AS remoteSecure(named_collection_6, addresses_expr = '127.{2..11}', database = 'default', table = 'remote_table', user = 'remote_user', password = '[HIDDEN]')\",\n+            \"CREATE TABLE tablefunc28 (`x` int) AS remote(named_collection_6, addresses_expr = '127.{2..11}', database = 'default', `table` = 'remote_table', user = 'remote_user', password = '[HIDDEN]', sharding_key = rand())\",\n+            \"CREATE TABLE tablefunc29 (`x` int) AS remoteSecure(named_collection_6, addresses_expr = '127.{2..11}', database = 'default', `table` = 'remote_table', user = 'remote_user', password = '[HIDDEN]')\",\n             \"CREATE TABLE tablefunc30 (x int) AS s3('http://minio1:9001/root/data/test9.csv.gz', 'NOSIGN', 'CSV')\",\n             \"CREATE TABLE tablefunc31 (`x` int) AS s3('http://minio1:9001/root/data/test10.csv.gz', 'minio', '[HIDDEN]')\",\n             \"CREATE TABLE tablefunc32 (`x` int) AS deltaLake('http://minio1:9001/root/data/test11.csv.gz', 'minio', '[HIDDEN]')\",\ndiff --git a/tests/integration/test_mysql57_database_engine/test.py b/tests/integration/test_mysql57_database_engine/test.py\nindex a5a13a88b1b9..26db6637bc66 100644\n--- a/tests/integration/test_mysql57_database_engine/test.py\n+++ b/tests/integration/test_mysql57_database_engine/test.py\n@@ -964,7 +964,7 @@ def test_predefined_connection_configuration(started_cluster):\n         result = clickhouse_node.query(\"show create table test_database.test_table\")\n         assert (\n             result.strip()\n-            == \"CREATE TABLE test_database.test_table\\\\n(\\\\n    `id` Int32\\\\n)\\\\nENGINE = MySQL(mysql1, table = \\\\'test_table\\\\')\"\n+            == \"CREATE TABLE test_database.test_table\\\\n(\\\\n    `id` Int32\\\\n)\\\\nENGINE = MySQL(mysql1, `table` = \\\\'test_table\\\\')\"\n         )\n \n         clickhouse_node.query(\"DROP DATABASE test_database\")\ndiff --git a/tests/integration/test_mysql_database_engine/test.py b/tests/integration/test_mysql_database_engine/test.py\nindex 64a386791213..44c23374b3ac 100644\n--- a/tests/integration/test_mysql_database_engine/test.py\n+++ b/tests/integration/test_mysql_database_engine/test.py\n@@ -943,7 +943,7 @@ def test_predefined_connection_configuration(started_cluster):\n         result = clickhouse_node.query(\"show create table test_database.test_table\")\n         assert (\n             result.strip()\n-            == \"CREATE TABLE test_database.test_table\\\\n(\\\\n    `id` Int32\\\\n)\\\\nENGINE = MySQL(mysql1, table = \\\\'test_table\\\\')\"\n+            == \"CREATE TABLE test_database.test_table\\\\n(\\\\n    `id` Int32\\\\n)\\\\nENGINE = MySQL(mysql1, `table` = \\\\'test_table\\\\')\"\n         )\n \n         clickhouse_node.query(\"DROP DATABASE test_database\")\ndiff --git a/tests/integration/test_postgresql_database_engine/test.py b/tests/integration/test_postgresql_database_engine/test.py\nindex ee6c19707f3c..c44fa176599f 100644\n--- a/tests/integration/test_postgresql_database_engine/test.py\n+++ b/tests/integration/test_postgresql_database_engine/test.py\n@@ -287,7 +287,7 @@ def test_predefined_connection_configuration(started_cluster):\n     )\n     print(f\"kssenii: {result}\")\n     assert result.strip().endswith(\n-        \"ENGINE = PostgreSQL(postgres1, table = \\\\'test_table\\\\')\"\n+        \"ENGINE = PostgreSQL(postgres1, `table` = \\\\'test_table\\\\')\"\n     )\n \n     node1.query(\ndiff --git a/tests/integration/test_role/test.py b/tests/integration/test_role/test.py\nindex 0e1bbea9cea0..b3b18dc82716 100644\n--- a/tests/integration/test_role/test.py\n+++ b/tests/integration/test_role/test.py\n@@ -246,7 +246,7 @@ def test_introspection():\n     )\n \n     assert instance.query(\"SHOW GRANTS FOR A\") == TSV(\n-        [\"GRANT SELECT ON test.table TO A\", \"GRANT R1 TO A\"]\n+        [\"GRANT SELECT ON test.`table` TO A\", \"GRANT R1 TO A\"]\n     )\n     assert instance.query(\"SHOW GRANTS FOR B\") == TSV(\n         [\n@@ -256,11 +256,14 @@ def test_introspection():\n     )\n     assert instance.query(\"SHOW GRANTS FOR R1\") == \"\"\n     assert instance.query(\"SHOW GRANTS FOR R2\") == TSV(\n-        [\"GRANT SELECT ON test.table TO R2\", \"REVOKE SELECT(x) ON test.table FROM R2\"]\n+        [\n+            \"GRANT SELECT ON test.`table` TO R2\",\n+            \"REVOKE SELECT(x) ON test.`table` FROM R2\",\n+        ]\n     )\n \n     assert instance.query(\"SHOW GRANTS\", user=\"A\") == TSV(\n-        [\"GRANT SELECT ON test.table TO A\", \"GRANT R1 TO A\"]\n+        [\"GRANT SELECT ON test.`table` TO A\", \"GRANT R1 TO A\"]\n     )\n \n     assert instance.query(\"SHOW GRANTS FOR R1\", user=\"A\") == TSV([])\ndiff --git a/tests/integration/test_row_policy/test.py b/tests/integration/test_row_policy/test.py\nindex d88a8f2a2437..98653bf6106a 100644\n--- a/tests/integration/test_row_policy/test.py\n+++ b/tests/integration/test_row_policy/test.py\n@@ -803,9 +803,9 @@ def test_tags_with_db_and_table_names():\n     assert node.query(\"SHOW CREATE POLICIES default\") == TSV(\n         [\n             \"CREATE ROW POLICY default ON mydb.`.filtered_table4` FOR SELECT USING c = 2 TO default\",\n+            \"CREATE ROW POLICY default ON mydb.`table` FOR SELECT USING a = 0 TO default\",\n             \"CREATE ROW POLICY default ON mydb.filtered_table2 FOR SELECT USING c > (d + 5) TO default\",\n             \"CREATE ROW POLICY default ON mydb.filtered_table3 FOR SELECT USING c = 0 TO default\",\n-            \"CREATE ROW POLICY default ON mydb.table FOR SELECT USING a = 0 TO default\",\n         ]\n     )\n \ndiff --git a/tests/integration/test_settings_profile/test.py b/tests/integration/test_settings_profile/test.py\nindex 70740104d631..61237af08c57 100644\n--- a/tests/integration/test_settings_profile/test.py\n+++ b/tests/integration/test_settings_profile/test.py\n@@ -68,7 +68,7 @@ def test_smoke():\n     )\n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE xyz\")\n-        == \"CREATE SETTINGS PROFILE xyz SETTINGS max_memory_usage = 100000001 MIN 90000000 MAX 110000000 TO robin\\n\"\n+        == \"CREATE SETTINGS PROFILE `xyz` SETTINGS max_memory_usage = 100000001 MIN 90000000 MAX 110000000 TO robin\\n\"\n     )\n     assert (\n         instance.query(\n@@ -108,7 +108,7 @@ def test_smoke():\n     instance.query(\"ALTER SETTINGS PROFILE xyz TO NONE\")\n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE xyz\")\n-        == \"CREATE SETTINGS PROFILE xyz SETTINGS max_memory_usage = 100000001 MIN 90000000 MAX 110000000\\n\"\n+        == \"CREATE SETTINGS PROFILE `xyz` SETTINGS max_memory_usage = 100000001 MIN 90000000 MAX 110000000\\n\"\n     )\n     assert (\n         instance.query(\n@@ -128,7 +128,7 @@ def test_smoke():\n     instance.query(\"ALTER USER robin SETTINGS PROFILE xyz\")\n     assert (\n         instance.query(\"SHOW CREATE USER robin\")\n-        == \"CREATE USER robin SETTINGS PROFILE xyz\\n\"\n+        == \"CREATE USER robin SETTINGS PROFILE `xyz`\\n\"\n     )\n     assert (\n         instance.query(\n@@ -174,11 +174,11 @@ def test_settings_from_granted_role():\n     instance.query(\"GRANT worker TO robin\")\n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE xyz\")\n-        == \"CREATE SETTINGS PROFILE xyz SETTINGS max_memory_usage = 100000001 MAX 110000000, max_ast_depth = 2000\\n\"\n+        == \"CREATE SETTINGS PROFILE `xyz` SETTINGS max_memory_usage = 100000001 MAX 110000000, max_ast_depth = 2000\\n\"\n     )\n     assert (\n         instance.query(\"SHOW CREATE ROLE worker\")\n-        == \"CREATE ROLE worker SETTINGS PROFILE xyz\\n\"\n+        == \"CREATE ROLE worker SETTINGS PROFILE `xyz`\\n\"\n     )\n     assert (\n         instance.query(\n@@ -260,7 +260,7 @@ def test_settings_from_granted_role():\n     instance.query(\"ALTER SETTINGS PROFILE xyz TO worker\")\n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE xyz\")\n-        == \"CREATE SETTINGS PROFILE xyz SETTINGS max_memory_usage = 100000001 MAX 110000000, max_ast_depth = 2000 TO worker\\n\"\n+        == \"CREATE SETTINGS PROFILE `xyz` SETTINGS max_memory_usage = 100000001 MAX 110000000, max_ast_depth = 2000 TO worker\\n\"\n     )\n     assert (\n         instance.query(\n@@ -282,7 +282,7 @@ def test_settings_from_granted_role():\n     instance.query(\"ALTER SETTINGS PROFILE xyz TO NONE\")\n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE xyz\")\n-        == \"CREATE SETTINGS PROFILE xyz SETTINGS max_memory_usage = 100000001 MAX 110000000, max_ast_depth = 2000\\n\"\n+        == \"CREATE SETTINGS PROFILE `xyz` SETTINGS max_memory_usage = 100000001 MAX 110000000, max_ast_depth = 2000\\n\"\n     )\n     assert (\n         instance.query(\n@@ -304,11 +304,11 @@ def test_inheritance():\n     instance.query(\"CREATE SETTINGS PROFILE alpha SETTINGS PROFILE xyz TO robin\")\n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE xyz\")\n-        == \"CREATE SETTINGS PROFILE xyz SETTINGS max_memory_usage = 100000002 CONST\\n\"\n+        == \"CREATE SETTINGS PROFILE `xyz` SETTINGS max_memory_usage = 100000002 CONST\\n\"\n     )\n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE alpha\")\n-        == \"CREATE SETTINGS PROFILE alpha SETTINGS INHERIT xyz TO robin\\n\"\n+        == \"CREATE SETTINGS PROFILE `alpha` SETTINGS INHERIT `xyz` TO robin\\n\"\n     )\n     assert (\n         instance.query(\n@@ -453,11 +453,13 @@ def test_show_profiles():\n     assert instance.query(\"SHOW SETTINGS PROFILES\") == \"default\\nreadonly\\nxyz\\n\"\n     assert instance.query(\"SHOW PROFILES\") == \"default\\nreadonly\\nxyz\\n\"\n \n-    assert instance.query(\"SHOW CREATE PROFILE xyz\") == \"CREATE SETTINGS PROFILE xyz\\n\"\n+    assert (\n+        instance.query(\"SHOW CREATE PROFILE xyz\") == \"CREATE SETTINGS PROFILE `xyz`\\n\"\n+    )\n \n     query_possible_response = [\n-        \"CREATE SETTINGS PROFILE default\\n\",\n-        \"CREATE SETTINGS PROFILE default SETTINGS allow_experimental_analyzer = true\\n\",\n+        \"CREATE SETTINGS PROFILE `default`\\n\",\n+        \"CREATE SETTINGS PROFILE `default` SETTINGS allow_experimental_analyzer = true\\n\",\n     ]\n     assert (\n         instance.query(\"SHOW CREATE SETTINGS PROFILE default\")\n@@ -465,24 +467,24 @@ def test_show_profiles():\n     )\n \n     query_possible_response = [\n-        \"CREATE SETTINGS PROFILE default\\n\"\n-        \"CREATE SETTINGS PROFILE readonly SETTINGS readonly = 1\\n\"\n-        \"CREATE SETTINGS PROFILE xyz\\n\",\n-        \"CREATE SETTINGS PROFILE default SETTINGS allow_experimental_analyzer = true\\n\"\n-        \"CREATE SETTINGS PROFILE readonly SETTINGS readonly = 1\\n\"\n-        \"CREATE SETTINGS PROFILE xyz\\n\",\n+        \"CREATE SETTINGS PROFILE `default`\\n\"\n+        \"CREATE SETTINGS PROFILE `readonly` SETTINGS readonly = 1\\n\"\n+        \"CREATE SETTINGS PROFILE `xyz`\\n\",\n+        \"CREATE SETTINGS PROFILE `default` SETTINGS allow_experimental_analyzer = true\\n\"\n+        \"CREATE SETTINGS PROFILE `readonly` SETTINGS readonly = 1\\n\"\n+        \"CREATE SETTINGS PROFILE `xyz`\\n\",\n     ]\n     assert instance.query(\"SHOW CREATE PROFILES\") in query_possible_response\n \n     expected_access = (\n-        \"CREATE SETTINGS PROFILE default\\n\"\n-        \"CREATE SETTINGS PROFILE readonly SETTINGS readonly = 1\\n\"\n-        \"CREATE SETTINGS PROFILE xyz\\n\"\n+        \"CREATE SETTINGS PROFILE `default`\\n\"\n+        \"CREATE SETTINGS PROFILE `readonly` SETTINGS readonly = 1\\n\"\n+        \"CREATE SETTINGS PROFILE `xyz`\\n\"\n     )\n     expected_access_analyzer = (\n-        \"CREATE SETTINGS PROFILE default SETTINGS allow_experimental_analyzer = true\\n\"\n-        \"CREATE SETTINGS PROFILE readonly SETTINGS readonly = 1\\n\"\n-        \"CREATE SETTINGS PROFILE xyz\\n\"\n+        \"CREATE SETTINGS PROFILE `default` SETTINGS allow_experimental_analyzer = true\\n\"\n+        \"CREATE SETTINGS PROFILE `readonly` SETTINGS readonly = 1\\n\"\n+        \"CREATE SETTINGS PROFILE `xyz`\\n\"\n     )\n \n     query_response = instance.query(\"SHOW ACCESS\")\ndiff --git a/tests/integration/test_storage_mysql/test.py b/tests/integration/test_storage_mysql/test.py\nindex 9818a8183d78..b131d8fe51c6 100644\n--- a/tests/integration/test_storage_mysql/test.py\n+++ b/tests/integration/test_storage_mysql/test.py\n@@ -655,7 +655,7 @@ def test_predefined_connection_configuration(started_cluster):\n     assert node1.query(f\"SELECT count() FROM test_table\").rstrip() == \"100\"\n \n     assert \"Connection pool cannot have zero size\" in node1.query_and_get_error(\n-        \"SELECT count() FROM mysql(mysql1, table='test_table', connection_pool_size=0)\"\n+        \"SELECT count() FROM mysql(mysql1, `table`='test_table', connection_pool_size=0)\"\n     )\n     assert \"Connection pool cannot have zero size\" in node1.query_and_get_error(\n         \"SELECT count() FROM mysql(mysql4)\"\ndiff --git a/tests/queries/0_stateless/01073_grant_and_revoke.reference b/tests/queries/0_stateless/01073_grant_and_revoke.reference\nindex 449f21e896a2..b91820914e6c 100644\n--- a/tests/queries/0_stateless/01073_grant_and_revoke.reference\n+++ b/tests/queries/0_stateless/01073_grant_and_revoke.reference\n@@ -4,12 +4,12 @@ B\n C\n GRANT INSERT, ALTER DELETE ON *.* TO test_user_01073\n GRANT SELECT ON db1.* TO test_user_01073\n-GRANT SELECT ON db2.table TO test_user_01073\n-GRANT SELECT(col1) ON db3.table TO test_user_01073\n-GRANT SELECT(col1, col2) ON db4.table TO test_user_01073\n+GRANT SELECT ON db2.`table` TO test_user_01073\n+GRANT SELECT(col1) ON db3.`table` TO test_user_01073\n+GRANT SELECT(col1, col2) ON db4.`table` TO test_user_01073\n D\n GRANT ALTER DELETE ON *.* TO test_user_01073\n-GRANT SELECT(col1) ON db4.table TO test_user_01073\n+GRANT SELECT(col1) ON db4.`table` TO test_user_01073\n E\n GRANT SELECT ON db1.* TO test_role_01073\n REVOKE SELECT(c1, c2, c3, c4, c5) ON db1.table1 FROM test_role_01073\ndiff --git a/tests/queries/0_stateless/01074_partial_revokes.reference b/tests/queries/0_stateless/01074_partial_revokes.reference\nindex 43e44f3c9410..9ffa2878ad4e 100644\n--- a/tests/queries/0_stateless/01074_partial_revokes.reference\n+++ b/tests/queries/0_stateless/01074_partial_revokes.reference\n@@ -4,21 +4,21 @@ REVOKE SELECT ON db.* FROM test_user_01074\n --cleanup\n --simple 2\n GRANT SELECT ON db.* TO test_user_01074\n-REVOKE SELECT ON db.table FROM test_user_01074\n+REVOKE SELECT ON db.`table` FROM test_user_01074\n --cleanup\n --simple 3\n-GRANT SELECT ON db.table TO test_user_01074\n-REVOKE SELECT(col1) ON db.table FROM test_user_01074\n+GRANT SELECT ON db.`table` TO test_user_01074\n+REVOKE SELECT(col1) ON db.`table` FROM test_user_01074\n --cleanup\n --complex 1\n GRANT SELECT ON *.* TO test_user_01074\n-REVOKE SELECT(col1, col2) ON db.table FROM test_user_01074\n+REVOKE SELECT(col1, col2) ON db.`table` FROM test_user_01074\n --cleanup\n --complex 2\n GRANT SELECT ON *.* TO test_user_01074\n REVOKE SELECT ON db.* FROM test_user_01074\n-GRANT SELECT ON db.table TO test_user_01074\n-REVOKE SELECT(col1) ON db.table FROM test_user_01074\n+GRANT SELECT ON db.`table` TO test_user_01074\n+REVOKE SELECT(col1) ON db.`table` FROM test_user_01074\n \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n \u2503 \u001b[1muser_name      \u001b[0m \u2503 \u001b[1mrole_name\u001b[0m \u2503 \u001b[1maccess_type\u001b[0m \u2503 \u001b[1mdatabase\u001b[0m \u2503 \u001b[1mtable\u001b[0m \u2503 \u001b[1mcolumn\u001b[0m \u2503 \u001b[1mis_partial_revoke\u001b[0m \u2503 \u001b[1mgrant_option\u001b[0m \u2503\n \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n@@ -40,7 +40,7 @@ GRANT SELECT ON *.* TO test_user_01074\n --cleanup\n --grant option 1\n GRANT SELECT ON *.* TO test_user_01074 WITH GRANT OPTION\n-REVOKE GRANT OPTION FOR SELECT(col1) ON db.table FROM test_user_01074\n+REVOKE GRANT OPTION FOR SELECT(col1) ON db.`table` FROM test_user_01074\n \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n \u2503 \u001b[1muser_name      \u001b[0m \u2503 \u001b[1mrole_name\u001b[0m \u2503 \u001b[1maccess_type\u001b[0m \u2503 \u001b[1mdatabase\u001b[0m \u2503 \u001b[1mtable\u001b[0m \u2503 \u001b[1mcolumn\u001b[0m \u2503 \u001b[1mis_partial_revoke\u001b[0m \u2503 \u001b[1mgrant_option\u001b[0m \u2503\n \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n@@ -51,7 +51,7 @@ REVOKE GRANT OPTION FOR SELECT(col1) ON db.table FROM test_user_01074\n --cleanup\n --grant option 2\n GRANT SELECT ON *.* TO test_user_01074 WITH GRANT OPTION\n-REVOKE SELECT(col1) ON db.table FROM test_user_01074\n+REVOKE SELECT(col1) ON db.`table` FROM test_user_01074\n --cleanup\n --grant option 3\n GRANT SELECT ON *.* TO test_user_01074\ndiff --git a/tests/queries/0_stateless/01119_wierd_user_names.reference b/tests/queries/0_stateless/01119_weird_user_names.reference\nsimilarity index 100%\nrename from tests/queries/0_stateless/01119_wierd_user_names.reference\nrename to tests/queries/0_stateless/01119_weird_user_names.reference\ndiff --git a/tests/queries/0_stateless/01119_wierd_user_names.sql b/tests/queries/0_stateless/01119_weird_user_names.sql\nsimilarity index 89%\nrename from tests/queries/0_stateless/01119_wierd_user_names.sql\nrename to tests/queries/0_stateless/01119_weird_user_names.sql\nindex 7a28016f4f3b..0d6f02786b0d 100644\n--- a/tests/queries/0_stateless/01119_wierd_user_names.sql\n+++ b/tests/queries/0_stateless/01119_weird_user_names.sql\n@@ -13,10 +13,10 @@ create user \"       \";\n create user '   spaces';\n create user 'spaces    ';\n create user ` INTERSERVER SECRET `;  -- { serverError BAD_ARGUMENTS }\n-create user '';  -- { serverError BAD_ARGUMENTS }\n+create user '';  -- { clientError SYNTAX_ERROR }\n create user 'test 01119';\n alter user `test 01119` rename to \" spaces \";\n-alter user \" spaces \" rename to '';  -- { serverError BAD_ARGUMENTS }\n+alter user \" spaces \" rename to '';  -- { clientError SYNTAX_ERROR }\n alter user \" spaces \" rename to \" INTERSERVER SECRET \";  -- { serverError BAD_ARGUMENTS }\n create user \"\u0412\u0430\u0441\u044f \u041f\u0443\u043f\u043a\u0438\u043d\";\n create user \"\u65e0\u540d\u6c0f \";\ndiff --git a/tests/queries/0_stateless/01278_format_multiple_queries.reference b/tests/queries/0_stateless/01278_format_multiple_queries.reference\nindex 001b10b09907..9e3ae2250b3d 100644\n--- a/tests/queries/0_stateless/01278_format_multiple_queries.reference\n+++ b/tests/queries/0_stateless/01278_format_multiple_queries.reference\n@@ -1,7 +1,7 @@\n SELECT\n     a,\n     b AS x\n-FROM table AS t\n+FROM `table` AS t\n INNER JOIN table2 AS t2 ON t.id = t2.t_id\n WHERE 1 = 1\n ;\ndiff --git a/tests/queries/0_stateless/01292_create_user.reference b/tests/queries/0_stateless/01292_create_user.reference\nindex b7c30b304bf9..d5841a74a2cb 100644\n--- a/tests/queries/0_stateless/01292_create_user.reference\n+++ b/tests/queries/0_stateless/01292_create_user.reference\n@@ -56,14 +56,14 @@ CREATE USER u1_01292 HOST LOCAL\n CREATE USER `u2_01292@%.myhost.com`\n -- settings\n CREATE USER u1_01292\n-CREATE USER u2_01292 SETTINGS PROFILE default\n+CREATE USER u2_01292 SETTINGS PROFILE `default`\n CREATE USER u3_01292 SETTINGS max_memory_usage = 5000000\n CREATE USER u4_01292 SETTINGS max_memory_usage MIN 5000000\n CREATE USER u5_01292 SETTINGS max_memory_usage MAX 5000000\n CREATE USER u6_01292 SETTINGS max_memory_usage CONST\n CREATE USER u7_01292 SETTINGS max_memory_usage WRITABLE\n CREATE USER u8_01292 SETTINGS max_memory_usage = 5000000 MIN 4000000 MAX 6000000 CONST\n-CREATE USER u9_01292 SETTINGS PROFILE default, max_memory_usage = 5000000 WRITABLE\n+CREATE USER u9_01292 SETTINGS PROFILE `default`, max_memory_usage = 5000000 WRITABLE\n CREATE USER u1_01292 SETTINGS readonly = 1\n CREATE USER u2_01292 SETTINGS readonly = 1\n CREATE USER u3_01292\n@@ -82,7 +82,7 @@ CREATE USER u5_01292 DEFAULT ROLE ALL EXCEPT r1_01292\n CREATE USER u6_01292 DEFAULT ROLE NONE\n -- complex\n CREATE USER u1_01292 IDENTIFIED WITH plaintext_password HOST LOCAL SETTINGS readonly = 1\n-CREATE USER u1_01292 HOST LIKE \\'%.%.myhost.com\\' DEFAULT ROLE NONE SETTINGS PROFILE default\n+CREATE USER u1_01292 HOST LIKE \\'%.%.myhost.com\\' DEFAULT ROLE NONE SETTINGS PROFILE `default`\n -- if not exists\n CREATE USER u1_01292\n GRANT r1_01292 TO u1_01292\ndiff --git a/tests/queries/0_stateless/01293_create_role.reference b/tests/queries/0_stateless/01293_create_role.reference\nindex 42f091bddd52..f1bd76322d4e 100644\n--- a/tests/queries/0_stateless/01293_create_role.reference\n+++ b/tests/queries/0_stateless/01293_create_role.reference\n@@ -11,14 +11,14 @@ CREATE ROLE `r2_01293@%.myhost.com`\n CREATE ROLE `r2_01293@%.myhost.com`\n -- settings\n CREATE ROLE r1_01293\n-CREATE ROLE r2_01293 SETTINGS PROFILE default\n+CREATE ROLE r2_01293 SETTINGS PROFILE `default`\n CREATE ROLE r3_01293 SETTINGS max_memory_usage = 5000000\n CREATE ROLE r4_01293 SETTINGS max_memory_usage MIN 5000000\n CREATE ROLE r5_01293 SETTINGS max_memory_usage MAX 5000000\n CREATE ROLE r6_01293 SETTINGS max_memory_usage CONST\n CREATE ROLE r7_01293 SETTINGS max_memory_usage WRITABLE\n CREATE ROLE r8_01293 SETTINGS max_memory_usage = 5000000 MIN 4000000 MAX 6000000 CONST\n-CREATE ROLE r9_01293 SETTINGS PROFILE default, max_memory_usage = 5000000 WRITABLE\n+CREATE ROLE r9_01293 SETTINGS PROFILE `default`, max_memory_usage = 5000000 WRITABLE\n CREATE ROLE r1_01293 SETTINGS readonly = 1\n CREATE ROLE r2_01293 SETTINGS readonly = 1\n CREATE ROLE r3_01293\ndiff --git a/tests/queries/0_stateless/01294_create_settings_profile.reference b/tests/queries/0_stateless/01294_create_settings_profile.reference\nindex a10d5758752f..7e1838c8daec 100644\n--- a/tests/queries/0_stateless/01294_create_settings_profile.reference\n+++ b/tests/queries/0_stateless/01294_create_settings_profile.reference\n@@ -1,57 +1,57 @@\n -- default\n-CREATE SETTINGS PROFILE s1_01294\n+CREATE SETTINGS PROFILE `s1_01294`\n -- same as default\n-CREATE SETTINGS PROFILE s2_01294\n-CREATE SETTINGS PROFILE s3_01294\n+CREATE SETTINGS PROFILE `s2_01294`\n+CREATE SETTINGS PROFILE `s3_01294`\n -- rename\n-CREATE SETTINGS PROFILE s2_01294_renamed\n+CREATE SETTINGS PROFILE `s2_01294_renamed`\n -- settings\n-CREATE SETTINGS PROFILE s1_01294\n-CREATE SETTINGS PROFILE s2_01294 SETTINGS INHERIT default\n-CREATE SETTINGS PROFILE s3_01294 SETTINGS max_memory_usage = 5000000\n-CREATE SETTINGS PROFILE s4_01294 SETTINGS max_memory_usage MIN 5000000\n-CREATE SETTINGS PROFILE s5_01294 SETTINGS max_memory_usage MAX 5000000\n-CREATE SETTINGS PROFILE s6_01294 SETTINGS max_memory_usage CONST\n-CREATE SETTINGS PROFILE s7_01294 SETTINGS max_memory_usage WRITABLE\n-CREATE SETTINGS PROFILE s8_01294 SETTINGS max_memory_usage = 5000000 MIN 4000000 MAX 6000000 CONST\n-CREATE SETTINGS PROFILE s9_01294 SETTINGS INHERIT default, max_memory_usage = 5000000 WRITABLE\n-CREATE SETTINGS PROFILE s10_01294 SETTINGS INHERIT s1_01294, INHERIT s3_01294, INHERIT default, readonly = 0, max_memory_usage MAX 6000000\n-CREATE SETTINGS PROFILE s1_01294 SETTINGS readonly = 0\n-CREATE SETTINGS PROFILE s2_01294 SETTINGS readonly = 1\n-CREATE SETTINGS PROFILE s3_01294\n+CREATE SETTINGS PROFILE `s1_01294`\n+CREATE SETTINGS PROFILE `s2_01294` SETTINGS INHERIT `default`\n+CREATE SETTINGS PROFILE `s3_01294` SETTINGS max_memory_usage = 5000000\n+CREATE SETTINGS PROFILE `s4_01294` SETTINGS max_memory_usage MIN 5000000\n+CREATE SETTINGS PROFILE `s5_01294` SETTINGS max_memory_usage MAX 5000000\n+CREATE SETTINGS PROFILE `s6_01294` SETTINGS max_memory_usage CONST\n+CREATE SETTINGS PROFILE `s7_01294` SETTINGS max_memory_usage WRITABLE\n+CREATE SETTINGS PROFILE `s8_01294` SETTINGS max_memory_usage = 5000000 MIN 4000000 MAX 6000000 CONST\n+CREATE SETTINGS PROFILE `s9_01294` SETTINGS INHERIT `default`, max_memory_usage = 5000000 WRITABLE\n+CREATE SETTINGS PROFILE `s10_01294` SETTINGS INHERIT `s1_01294`, INHERIT `s3_01294`, INHERIT `default`, readonly = 0, max_memory_usage MAX 6000000\n+CREATE SETTINGS PROFILE `s1_01294` SETTINGS readonly = 0\n+CREATE SETTINGS PROFILE `s2_01294` SETTINGS readonly = 1\n+CREATE SETTINGS PROFILE `s3_01294`\n -- to roles\n-CREATE SETTINGS PROFILE s1_01294\n-CREATE SETTINGS PROFILE s2_01294 TO ALL\n-CREATE SETTINGS PROFILE s3_01294 TO r1_01294\n-CREATE SETTINGS PROFILE s4_01294 TO u1_01294\n-CREATE SETTINGS PROFILE s5_01294 TO r1_01294, u1_01294\n-CREATE SETTINGS PROFILE s6_01294 TO ALL EXCEPT r1_01294\n-CREATE SETTINGS PROFILE s7_01294 TO ALL EXCEPT r1_01294, u1_01294\n-CREATE SETTINGS PROFILE s1_01294 TO u1_01294\n-CREATE SETTINGS PROFILE s2_01294\n+CREATE SETTINGS PROFILE `s1_01294`\n+CREATE SETTINGS PROFILE `s2_01294` TO ALL\n+CREATE SETTINGS PROFILE `s3_01294` TO r1_01294\n+CREATE SETTINGS PROFILE `s4_01294` TO u1_01294\n+CREATE SETTINGS PROFILE `s5_01294` TO r1_01294, u1_01294\n+CREATE SETTINGS PROFILE `s6_01294` TO ALL EXCEPT r1_01294\n+CREATE SETTINGS PROFILE `s7_01294` TO ALL EXCEPT r1_01294, u1_01294\n+CREATE SETTINGS PROFILE `s1_01294` TO u1_01294\n+CREATE SETTINGS PROFILE `s2_01294`\n -- complex\n-CREATE SETTINGS PROFILE s1_01294 SETTINGS readonly = 0 TO r1_01294\n-CREATE SETTINGS PROFILE s1_01294 SETTINGS INHERIT default\n+CREATE SETTINGS PROFILE `s1_01294` SETTINGS readonly = 0 TO r1_01294\n+CREATE SETTINGS PROFILE `s1_01294` SETTINGS INHERIT `default`\n -- multiple profiles in one command\n-CREATE SETTINGS PROFILE s1_01294 SETTINGS max_memory_usage = 5000000\n-CREATE SETTINGS PROFILE s2_01294 SETTINGS max_memory_usage = 5000000\n-CREATE SETTINGS PROFILE s3_01294 TO ALL\n-CREATE SETTINGS PROFILE s4_01294 TO ALL\n-CREATE SETTINGS PROFILE s1_01294 SETTINGS max_memory_usage = 6000000\n-CREATE SETTINGS PROFILE s2_01294 SETTINGS max_memory_usage = 6000000\n-CREATE SETTINGS PROFILE s3_01294 TO ALL\n-CREATE SETTINGS PROFILE s4_01294 TO ALL\n-CREATE SETTINGS PROFILE s1_01294 SETTINGS max_memory_usage = 6000000\n-CREATE SETTINGS PROFILE s2_01294 SETTINGS max_memory_usage = 6000000 TO r1_01294\n-CREATE SETTINGS PROFILE s3_01294 TO r1_01294\n-CREATE SETTINGS PROFILE s4_01294 TO r1_01294\n+CREATE SETTINGS PROFILE `s1_01294` SETTINGS max_memory_usage = 5000000\n+CREATE SETTINGS PROFILE `s2_01294` SETTINGS max_memory_usage = 5000000\n+CREATE SETTINGS PROFILE `s3_01294` TO ALL\n+CREATE SETTINGS PROFILE `s4_01294` TO ALL\n+CREATE SETTINGS PROFILE `s1_01294` SETTINGS max_memory_usage = 6000000\n+CREATE SETTINGS PROFILE `s2_01294` SETTINGS max_memory_usage = 6000000\n+CREATE SETTINGS PROFILE `s3_01294` TO ALL\n+CREATE SETTINGS PROFILE `s4_01294` TO ALL\n+CREATE SETTINGS PROFILE `s1_01294` SETTINGS max_memory_usage = 6000000\n+CREATE SETTINGS PROFILE `s2_01294` SETTINGS max_memory_usage = 6000000 TO r1_01294\n+CREATE SETTINGS PROFILE `s3_01294` TO r1_01294\n+CREATE SETTINGS PROFILE `s4_01294` TO r1_01294\n -- readonly ambiguity\n-CREATE SETTINGS PROFILE s1_01294 SETTINGS readonly = 1\n-CREATE SETTINGS PROFILE s2_01294 SETTINGS readonly CONST\n-CREATE SETTINGS PROFILE s3_01294 SETTINGS INHERIT readonly\n-CREATE SETTINGS PROFILE s4_01294 SETTINGS INHERIT readonly, INHERIT readonly\n-CREATE SETTINGS PROFILE s5_01294 SETTINGS INHERIT readonly, readonly = 1\n-CREATE SETTINGS PROFILE s6_01294 SETTINGS INHERIT readonly, readonly CONST\n+CREATE SETTINGS PROFILE `s1_01294` SETTINGS readonly = 1\n+CREATE SETTINGS PROFILE `s2_01294` SETTINGS readonly CONST\n+CREATE SETTINGS PROFILE `s3_01294` SETTINGS INHERIT `readonly`\n+CREATE SETTINGS PROFILE `s4_01294` SETTINGS INHERIT `readonly`, INHERIT `readonly`\n+CREATE SETTINGS PROFILE `s5_01294` SETTINGS INHERIT `readonly`, readonly = 1\n+CREATE SETTINGS PROFILE `s6_01294` SETTINGS INHERIT `readonly`, readonly CONST\n -- system.settings_profiles\n s1_01294\tlocal_directory\t0\t0\t[]\t[]\n s2_01294\tlocal_directory\t1\t0\t['r1_01294']\t[]\ndiff --git a/tests/queries/0_stateless/01295_create_row_policy.reference b/tests/queries/0_stateless/01295_create_row_policy.reference\nindex d73d9752bc10..2c300332a896 100644\n--- a/tests/queries/0_stateless/01295_create_row_policy.reference\n+++ b/tests/queries/0_stateless/01295_create_row_policy.reference\n@@ -1,35 +1,35 @@\n -- default\n-CREATE ROW POLICY p1_01295 ON db.table\n+CREATE ROW POLICY p1_01295 ON db.`table`\n -- same as default\n-CREATE ROW POLICY p2_01295 ON db.table\n-CREATE ROW POLICY p3_01295 ON db.table\n+CREATE ROW POLICY p2_01295 ON db.`table`\n+CREATE ROW POLICY p3_01295 ON db.`table`\n -- rename\n-CREATE ROW POLICY p2_01295_renamed ON db.table\n+CREATE ROW POLICY p2_01295_renamed ON db.`table`\n -- filter\n-CREATE ROW POLICY p1_01295 ON db.table FOR SELECT USING (a < b) AND (c > d)\n-CREATE ROW POLICY p2_01295 ON db.table AS restrictive FOR SELECT USING id = currentUser()\n-CREATE ROW POLICY p3_01295 ON db.table FOR SELECT USING 1\n-CREATE ROW POLICY p1_01295 ON db.table AS restrictive FOR SELECT USING 0\n+CREATE ROW POLICY p1_01295 ON db.`table` FOR SELECT USING (a < b) AND (c > d)\n+CREATE ROW POLICY p2_01295 ON db.`table` AS restrictive FOR SELECT USING id = currentUser()\n+CREATE ROW POLICY p3_01295 ON db.`table` FOR SELECT USING 1\n+CREATE ROW POLICY p1_01295 ON db.`table` AS restrictive FOR SELECT USING 0\n -- to roles\n-CREATE ROW POLICY p1_01295 ON db.table\n-CREATE ROW POLICY p2_01295 ON db.table TO ALL\n-CREATE ROW POLICY p3_01295 ON db.table TO r1_01295\n-CREATE ROW POLICY p4_01295 ON db.table TO u1_01295\n-CREATE ROW POLICY p5_01295 ON db.table TO r1_01295, u1_01295\n-CREATE ROW POLICY p6_01295 ON db.table TO ALL EXCEPT r1_01295\n-CREATE ROW POLICY p7_01295 ON db.table TO ALL EXCEPT r1_01295, u1_01295\n-CREATE ROW POLICY p1_01295 ON db.table TO u1_01295\n-CREATE ROW POLICY p2_01295 ON db.table\n+CREATE ROW POLICY p1_01295 ON db.`table`\n+CREATE ROW POLICY p2_01295 ON db.`table` TO ALL\n+CREATE ROW POLICY p3_01295 ON db.`table` TO r1_01295\n+CREATE ROW POLICY p4_01295 ON db.`table` TO u1_01295\n+CREATE ROW POLICY p5_01295 ON db.`table` TO r1_01295, u1_01295\n+CREATE ROW POLICY p6_01295 ON db.`table` TO ALL EXCEPT r1_01295\n+CREATE ROW POLICY p7_01295 ON db.`table` TO ALL EXCEPT r1_01295, u1_01295\n+CREATE ROW POLICY p1_01295 ON db.`table` TO u1_01295\n+CREATE ROW POLICY p2_01295 ON db.`table`\n -- multiple policies in one command\n-CREATE ROW POLICY p1_01295 ON db.table FOR SELECT USING 1\n-CREATE ROW POLICY p2_01295 ON db.table FOR SELECT USING 1\n-CREATE ROW POLICY p3_01295 ON db.table TO u1_01295\n+CREATE ROW POLICY p1_01295 ON db.`table` FOR SELECT USING 1\n+CREATE ROW POLICY p2_01295 ON db.`table` FOR SELECT USING 1\n+CREATE ROW POLICY p3_01295 ON db.`table` TO u1_01295\n CREATE ROW POLICY p3_01295 ON db2.table2 TO u1_01295\n-CREATE ROW POLICY p4_01295 ON db.table FOR SELECT USING a = b\n+CREATE ROW POLICY p4_01295 ON db.`table` FOR SELECT USING a = b\n CREATE ROW POLICY p5_01295 ON db2.table2 FOR SELECT USING a = b\n-CREATE ROW POLICY p1_01295 ON db.table FOR SELECT USING 1 TO ALL\n-CREATE ROW POLICY p2_01295 ON db.table FOR SELECT USING 1 TO ALL\n+CREATE ROW POLICY p1_01295 ON db.`table` FOR SELECT USING 1 TO ALL\n+CREATE ROW POLICY p2_01295 ON db.`table` FOR SELECT USING 1 TO ALL\n -- system.row_policies\n-p1_01295 ON db.table\tp1_01295\tdb\ttable\tlocal_directory\t(a < b) AND (c > d)\t0\t0\t[]\t[]\n-p2_01295 ON db.table\tp2_01295\tdb\ttable\tlocal_directory\tid = currentUser()\t1\t0\t['u1_01295']\t[]\n-p3_01295 ON db.table\tp3_01295\tdb\ttable\tlocal_directory\t1\t0\t1\t[]\t['r1_01295']\n+p1_01295 ON db.`table`\tp1_01295\tdb\ttable\tlocal_directory\t(a < b) AND (c > d)\t0\t0\t[]\t[]\n+p2_01295 ON db.`table`\tp2_01295\tdb\ttable\tlocal_directory\tid = currentUser()\t1\t0\t['u1_01295']\t[]\n+p3_01295 ON db.`table`\tp3_01295\tdb\ttable\tlocal_directory\t1\t0\t1\t[]\t['r1_01295']\ndiff --git a/tests/queries/0_stateless/01296_create_row_policy_in_current_database.reference b/tests/queries/0_stateless/01296_create_row_policy_in_current_database.reference\nindex fa9c2f730216..bfca341bd7b7 100644\n--- a/tests/queries/0_stateless/01296_create_row_policy_in_current_database.reference\n+++ b/tests/queries/0_stateless/01296_create_row_policy_in_current_database.reference\n@@ -1,20 +1,20 @@\n -- one policy\n-CREATE ROW POLICY p1_01296 ON db_01296.table\n-CREATE ROW POLICY p1_01296 ON db_01296.table\n-CREATE ROW POLICY p1_01296 ON db_01296.table FOR SELECT USING 1\n-CREATE ROW POLICY p1_01296 ON db_01296.table FOR SELECT USING 1\n+CREATE ROW POLICY p1_01296 ON db_01296.`table`\n+CREATE ROW POLICY p1_01296 ON db_01296.`table`\n+CREATE ROW POLICY p1_01296 ON db_01296.`table` FOR SELECT USING 1\n+CREATE ROW POLICY p1_01296 ON db_01296.`table` FOR SELECT USING 1\n -- multiple policies\n-CREATE ROW POLICY p1_01296 ON db_01296.table FOR SELECT USING 1\n-CREATE ROW POLICY p2_01296 ON db_01296.table FOR SELECT USING 1\n-CREATE ROW POLICY p3_01296 ON db_01296.table TO u1_01296\n+CREATE ROW POLICY p1_01296 ON db_01296.`table` FOR SELECT USING 1\n+CREATE ROW POLICY p2_01296 ON db_01296.`table` FOR SELECT USING 1\n+CREATE ROW POLICY p3_01296 ON db_01296.`table` TO u1_01296\n CREATE ROW POLICY p3_01296 ON db_01296.table2 TO u1_01296\n-CREATE ROW POLICY p4_01296 ON db_01296.table FOR SELECT USING a = b\n+CREATE ROW POLICY p4_01296 ON db_01296.`table` FOR SELECT USING a = b\n CREATE ROW POLICY p5_01296 ON db_01296.table2 FOR SELECT USING a = b\n-CREATE ROW POLICY p1_01296 ON db_01296.table FOR SELECT USING 1\n-CREATE ROW POLICY p2_01296 ON db_01296.table FOR SELECT USING 1\n-CREATE ROW POLICY p3_01296 ON db_01296.table TO u1_01296\n+CREATE ROW POLICY p1_01296 ON db_01296.`table` FOR SELECT USING 1\n+CREATE ROW POLICY p2_01296 ON db_01296.`table` FOR SELECT USING 1\n+CREATE ROW POLICY p3_01296 ON db_01296.`table` TO u1_01296\n CREATE ROW POLICY p3_01296 ON db_01296.table2 TO u1_01296\n-CREATE ROW POLICY p4_01296 ON db_01296.table FOR SELECT USING a = b\n+CREATE ROW POLICY p4_01296 ON db_01296.`table` FOR SELECT USING a = b\n CREATE ROW POLICY p5_01296 ON db_01296.table2 FOR SELECT USING a = b\n-CREATE ROW POLICY p1_01296 ON db_01296.table FOR SELECT USING 1 TO ALL\n-CREATE ROW POLICY p2_01296 ON db_01296.table FOR SELECT USING 1 TO ALL\n+CREATE ROW POLICY p1_01296 ON db_01296.`table` FOR SELECT USING 1 TO ALL\n+CREATE ROW POLICY p2_01296 ON db_01296.`table` FOR SELECT USING 1 TO ALL\ndiff --git a/tests/queries/0_stateless/01418_custom_settings.reference b/tests/queries/0_stateless/01418_custom_settings.reference\nindex 8484a5d0e6fa..923d43077d8d 100644\n--- a/tests/queries/0_stateless/01418_custom_settings.reference\n+++ b/tests/queries/0_stateless/01418_custom_settings.reference\n@@ -30,10 +30,10 @@ custom_f\t\\'word\\'\n --- compound identifier ---\n test\tString\n custom_compound.identifier.v1\t\\'test\\'\n-CREATE SETTINGS PROFILE s1_01418 SETTINGS custom_compound.identifier.v2 = 100\n+CREATE SETTINGS PROFILE `s1_01418` SETTINGS custom_compound.identifier.v2 = 100\n --- null type ---\n \\N\tNullable(Nothing)\n custom_null\tNULL\n \\N\tNullable(Nothing)\n custom_null\tNULL\n-CREATE SETTINGS PROFILE s2_01418 SETTINGS custom_null = NULL\n+CREATE SETTINGS PROFILE `s2_01418` SETTINGS custom_null = NULL\ndiff --git a/tests/queries/0_stateless/01602_show_create_view.reference b/tests/queries/0_stateless/01602_show_create_view.reference\nindex fac7f5035f64..b3a345f27421 100644\n--- a/tests/queries/0_stateless/01602_show_create_view.reference\n+++ b/tests/queries/0_stateless/01602_show_create_view.reference\n@@ -3,4 +3,4 @@ CREATE MATERIALIZED VIEW test_1602.vv\\n(\\n    `EventDate` DateTime,\\n    `Counte\n CREATE VIEW test_1602.VIEW\\n(\\n    `EventDate` DateTime,\\n    `CounterID` UInt32,\\n    `UserID` UInt32\\n)\\nAS SELECT *\\nFROM test_1602.tbl\n CREATE VIEW test_1602.DATABASE\\n(\\n    `EventDate` DateTime,\\n    `CounterID` UInt32,\\n    `UserID` UInt32\\n)\\nAS SELECT *\\nFROM test_1602.tbl\n CREATE VIEW test_1602.DICTIONARY\\n(\\n    `EventDate` DateTime,\\n    `CounterID` UInt32,\\n    `UserID` UInt32\\n)\\nAS SELECT *\\nFROM test_1602.tbl\n-CREATE VIEW test_1602.TABLE\\n(\\n    `EventDate` DateTime,\\n    `CounterID` UInt32,\\n    `UserID` UInt32\\n)\\nAS SELECT *\\nFROM test_1602.tbl\n+CREATE VIEW test_1602.`TABLE`\\n(\\n    `EventDate` DateTime,\\n    `CounterID` UInt32,\\n    `UserID` UInt32\\n)\\nAS SELECT *\\nFROM test_1602.tbl\ndiff --git a/tests/queries/0_stateless/01732_explain_syntax_union_query.reference b/tests/queries/0_stateless/01732_explain_syntax_union_query.reference\nindex ccafa916b9f5..5246cfec7aa6 100644\n--- a/tests/queries/0_stateless/01732_explain_syntax_union_query.reference\n+++ b/tests/queries/0_stateless/01732_explain_syntax_union_query.reference\n@@ -54,7 +54,6 @@ SELECT 1\n -\n SELECT 1\n -\n-\n (\n     SELECT 1\n     UNION DISTINCT\ndiff --git a/tests/queries/0_stateless/01874_select_from_trailing_whitespaces.reference b/tests/queries/0_stateless/01874_select_from_trailing_whitespaces.reference\nindex a52505659d19..4dc5ccac840d 100644\n--- a/tests/queries/0_stateless/01874_select_from_trailing_whitespaces.reference\n+++ b/tests/queries/0_stateless/01874_select_from_trailing_whitespaces.reference\n@@ -46,10 +46,12 @@ SELECT * FROM system.one UNION ALL SELECT * FROM system.one\n SELECT *\n FROM system.one\n UNION ALL\n-SELECT *\n-FROM system.one\n+(\n+    SELECT *\n+    FROM system.one\n+)\n # /* oneline */ select * from system.one union all (select * from system.one)\n-SELECT * FROM system.one UNION ALL SELECT * FROM system.one\n+SELECT * FROM system.one UNION ALL (SELECT * FROM system.one)\n # select 1 union all (select 1 union distinct select 1)\n SELECT 1\n UNION ALL\ndiff --git a/tests/queries/0_stateless/01999_grant_with_replace.reference b/tests/queries/0_stateless/01999_grant_with_replace.reference\nindex 740c55d53253..dc2047ab73c6 100644\n--- a/tests/queries/0_stateless/01999_grant_with_replace.reference\n+++ b/tests/queries/0_stateless/01999_grant_with_replace.reference\n@@ -4,12 +4,12 @@ B\n GRANT SELECT ON db1.* TO test_user_01999\n GRANT SHOW TABLES, SHOW COLUMNS, SHOW DICTIONARIES ON db2.tb2 TO test_user_01999\n C\n-GRANT SELECT(col1) ON db3.table TO test_user_01999\n+GRANT SELECT(col1) ON db3.`table` TO test_user_01999\n D\n GRANT SELECT(col3) ON db3.table3 TO test_user_01999\n GRANT SELECT(col1, col2) ON db4.table4 TO test_user_01999\n E\n-GRANT SELECT(cola) ON db5.table TO test_user_01999\n+GRANT SELECT(cola) ON db5.`table` TO test_user_01999\n GRANT INSERT(colb) ON db6.tb61 TO test_user_01999\n GRANT SHOW ON db7.* TO test_user_01999\n F\ndiff --git a/tests/queries/0_stateless/02141_clickhouse_local_interactive_table.reference b/tests/queries/0_stateless/02141_clickhouse_local_interactive_table.reference\nindex beda9e362238..0bb8966cbe46 100644\n--- a/tests/queries/0_stateless/02141_clickhouse_local_interactive_table.reference\n+++ b/tests/queries/0_stateless/02141_clickhouse_local_interactive_table.reference\n@@ -1,2 +1,2 @@\n-CREATE TABLE default.table\\n(\\n    `key` String\\n)\\nENGINE = File(\\'TSVWithNamesAndTypes\\', \\'/dev/null\\')\n-CREATE TABLE foo.table\\n(\\n    `key` String\\n)\\nENGINE = File(\\'TSVWithNamesAndTypes\\', \\'/dev/null\\')\n+CREATE TABLE default.`table`\\n(\\n    `key` String\\n)\\nENGINE = File(\\'TSVWithNamesAndTypes\\', \\'/dev/null\\')\n+CREATE TABLE foo.`table`\\n(\\n    `key` String\\n)\\nENGINE = File(\\'TSVWithNamesAndTypes\\', \\'/dev/null\\')\ndiff --git a/tests/queries/0_stateless/02181_format_describe_query.reference b/tests/queries/0_stateless/02181_format_describe_query.reference\nindex 328ea19bd375..238a83df50a1 100644\n--- a/tests/queries/0_stateless/02181_format_describe_query.reference\n+++ b/tests/queries/0_stateless/02181_format_describe_query.reference\n@@ -1,3 +1,3 @@\n DESCRIBE TABLE file('data.csv')\n-DESCRIBE TABLE table\n+DESCRIBE TABLE `table`\n DESCRIBE TABLE file('data.csv')\ndiff --git a/tests/queries/0_stateless/02206_information_schema_show_database.reference b/tests/queries/0_stateless/02206_information_schema_show_database.reference\nindex 8f5b425ad15f..2cc93c56e82a 100644\n--- a/tests/queries/0_stateless/02206_information_schema_show_database.reference\n+++ b/tests/queries/0_stateless/02206_information_schema_show_database.reference\n@@ -1,5 +1,5 @@\n CREATE DATABASE INFORMATION_SCHEMA\\nENGINE = Memory\n-CREATE VIEW INFORMATION_SCHEMA.COLUMNS\\n(\\n    `table_catalog` String,\\n    `table_schema` String,\\n    `table_name` String,\\n    `column_name` String,\\n    `ordinal_position` UInt64,\\n    `column_default` String,\\n    `is_nullable` String,\\n    `data_type` String,\\n    `character_maximum_length` Nullable(UInt64),\\n    `character_octet_length` Nullable(UInt64),\\n    `numeric_precision` Nullable(UInt64),\\n    `numeric_precision_radix` Nullable(UInt64),\\n    `numeric_scale` Nullable(UInt64),\\n    `datetime_precision` Nullable(UInt64),\\n    `character_set_catalog` Nullable(String),\\n    `character_set_schema` Nullable(String),\\n    `character_set_name` Nullable(String),\\n    `collation_catalog` Nullable(String),\\n    `collation_schema` Nullable(String),\\n    `collation_name` Nullable(String),\\n    `domain_catalog` Nullable(String),\\n    `domain_schema` Nullable(String),\\n    `domain_name` Nullable(String),\\n    `extra` Nullable(String),\\n    `column_comment` String,\\n    `column_type` String,\\n    `TABLE_CATALOG` String,\\n    `TABLE_SCHEMA` String,\\n    `TABLE_NAME` String,\\n    `COLUMN_NAME` String,\\n    `ORDINAL_POSITION` UInt64,\\n    `COLUMN_DEFAULT` String,\\n    `IS_NULLABLE` String,\\n    `DATA_TYPE` String,\\n    `CHARACTER_MAXIMUM_LENGTH` Nullable(UInt64),\\n    `CHARACTER_OCTET_LENGTH` Nullable(UInt64),\\n    `NUMERIC_PRECISION` Nullable(UInt64),\\n    `NUMERIC_PRECISION_RADIX` Nullable(UInt64),\\n    `NUMERIC_SCALE` Nullable(UInt64),\\n    `DATETIME_PRECISION` Nullable(UInt64),\\n    `CHARACTER_SET_CATALOG` Nullable(String),\\n    `CHARACTER_SET_SCHEMA` Nullable(String),\\n    `CHARACTER_SET_NAME` Nullable(String),\\n    `COLLATION_CATALOG` Nullable(String),\\n    `COLLATION_SCHEMA` Nullable(String),\\n    `COLLATION_NAME` Nullable(String),\\n    `DOMAIN_CATALOG` Nullable(String),\\n    `DOMAIN_SCHEMA` Nullable(String),\\n    `DOMAIN_NAME` Nullable(String),\\n    `EXTRA` Nullable(String),\\n    `COLUMN_COMMENT` String,\\n    `COLUMN_TYPE` String\\n)\\nSQL SECURITY INVOKER\\nAS SELECT\\n    database AS table_catalog,\\n    database AS table_schema,\\n    table AS table_name,\\n    name AS column_name,\\n    position AS ordinal_position,\\n    default_expression AS column_default,\\n    type LIKE \\'Nullable(%)\\' AS is_nullable,\\n    type AS data_type,\\n    character_octet_length AS character_maximum_length,\\n    character_octet_length,\\n    numeric_precision,\\n    numeric_precision_radix,\\n    numeric_scale,\\n    datetime_precision,\\n    NULL AS character_set_catalog,\\n    NULL AS character_set_schema,\\n    NULL AS character_set_name,\\n    NULL AS collation_catalog,\\n    NULL AS collation_schema,\\n    NULL AS collation_name,\\n    NULL AS domain_catalog,\\n    NULL AS domain_schema,\\n    NULL AS domain_name,\\n    multiIf(default_kind = \\'DEFAULT\\', \\'DEFAULT_GENERATED\\', default_kind = \\'MATERIALIZED\\', \\'STORED GENERATED\\', default_kind = \\'ALIAS\\', \\'VIRTUAL GENERATED\\', \\'\\') AS extra,\\n    comment AS column_comment,\\n    type AS column_type,\\n    table_catalog AS TABLE_CATALOG,\\n    table_schema AS TABLE_SCHEMA,\\n    table_name AS TABLE_NAME,\\n    column_name AS COLUMN_NAME,\\n    ordinal_position AS ORDINAL_POSITION,\\n    column_default AS COLUMN_DEFAULT,\\n    is_nullable AS IS_NULLABLE,\\n    data_type AS DATA_TYPE,\\n    character_maximum_length AS CHARACTER_MAXIMUM_LENGTH,\\n    character_octet_length AS CHARACTER_OCTET_LENGTH,\\n    numeric_precision AS NUMERIC_PRECISION,\\n    numeric_precision_radix AS NUMERIC_PRECISION_RADIX,\\n    numeric_scale AS NUMERIC_SCALE,\\n    datetime_precision AS DATETIME_PRECISION,\\n    character_set_catalog AS CHARACTER_SET_CATALOG,\\n    character_set_schema AS CHARACTER_SET_SCHEMA,\\n    character_set_name AS CHARACTER_SET_NAME,\\n    collation_catalog AS COLLATION_CATALOG,\\n    collation_schema AS COLLATION_SCHEMA,\\n    collation_name AS COLLATION_NAME,\\n    domain_catalog AS DOMAIN_CATALOG,\\n    domain_schema AS DOMAIN_SCHEMA,\\n    domain_name AS DOMAIN_NAME,\\n    extra AS EXTRA,\\n    column_comment AS COLUMN_COMMENT,\\n    column_type AS COLUMN_TYPE\\nFROM system.columns\n+CREATE VIEW INFORMATION_SCHEMA.COLUMNS\\n(\\n    `table_catalog` String,\\n    `table_schema` String,\\n    `table_name` String,\\n    `column_name` String,\\n    `ordinal_position` UInt64,\\n    `column_default` String,\\n    `is_nullable` String,\\n    `data_type` String,\\n    `character_maximum_length` Nullable(UInt64),\\n    `character_octet_length` Nullable(UInt64),\\n    `numeric_precision` Nullable(UInt64),\\n    `numeric_precision_radix` Nullable(UInt64),\\n    `numeric_scale` Nullable(UInt64),\\n    `datetime_precision` Nullable(UInt64),\\n    `character_set_catalog` Nullable(String),\\n    `character_set_schema` Nullable(String),\\n    `character_set_name` Nullable(String),\\n    `collation_catalog` Nullable(String),\\n    `collation_schema` Nullable(String),\\n    `collation_name` Nullable(String),\\n    `domain_catalog` Nullable(String),\\n    `domain_schema` Nullable(String),\\n    `domain_name` Nullable(String),\\n    `extra` Nullable(String),\\n    `column_comment` String,\\n    `column_type` String,\\n    `TABLE_CATALOG` String,\\n    `TABLE_SCHEMA` String,\\n    `TABLE_NAME` String,\\n    `COLUMN_NAME` String,\\n    `ORDINAL_POSITION` UInt64,\\n    `COLUMN_DEFAULT` String,\\n    `IS_NULLABLE` String,\\n    `DATA_TYPE` String,\\n    `CHARACTER_MAXIMUM_LENGTH` Nullable(UInt64),\\n    `CHARACTER_OCTET_LENGTH` Nullable(UInt64),\\n    `NUMERIC_PRECISION` Nullable(UInt64),\\n    `NUMERIC_PRECISION_RADIX` Nullable(UInt64),\\n    `NUMERIC_SCALE` Nullable(UInt64),\\n    `DATETIME_PRECISION` Nullable(UInt64),\\n    `CHARACTER_SET_CATALOG` Nullable(String),\\n    `CHARACTER_SET_SCHEMA` Nullable(String),\\n    `CHARACTER_SET_NAME` Nullable(String),\\n    `COLLATION_CATALOG` Nullable(String),\\n    `COLLATION_SCHEMA` Nullable(String),\\n    `COLLATION_NAME` Nullable(String),\\n    `DOMAIN_CATALOG` Nullable(String),\\n    `DOMAIN_SCHEMA` Nullable(String),\\n    `DOMAIN_NAME` Nullable(String),\\n    `EXTRA` Nullable(String),\\n    `COLUMN_COMMENT` String,\\n    `COLUMN_TYPE` String\\n)\\nSQL SECURITY INVOKER\\nAS SELECT\\n    database AS table_catalog,\\n    database AS table_schema,\\n    `table` AS table_name,\\n    name AS column_name,\\n    position AS ordinal_position,\\n    default_expression AS column_default,\\n    type LIKE \\'Nullable(%)\\' AS is_nullable,\\n    type AS data_type,\\n    character_octet_length AS character_maximum_length,\\n    character_octet_length,\\n    numeric_precision,\\n    numeric_precision_radix,\\n    numeric_scale,\\n    datetime_precision,\\n    NULL AS character_set_catalog,\\n    NULL AS character_set_schema,\\n    NULL AS character_set_name,\\n    NULL AS collation_catalog,\\n    NULL AS collation_schema,\\n    NULL AS collation_name,\\n    NULL AS domain_catalog,\\n    NULL AS domain_schema,\\n    NULL AS domain_name,\\n    multiIf(default_kind = \\'DEFAULT\\', \\'DEFAULT_GENERATED\\', default_kind = \\'MATERIALIZED\\', \\'STORED GENERATED\\', default_kind = \\'ALIAS\\', \\'VIRTUAL GENERATED\\', \\'\\') AS extra,\\n    comment AS column_comment,\\n    type AS column_type,\\n    table_catalog AS TABLE_CATALOG,\\n    table_schema AS TABLE_SCHEMA,\\n    table_name AS TABLE_NAME,\\n    column_name AS COLUMN_NAME,\\n    ordinal_position AS ORDINAL_POSITION,\\n    column_default AS COLUMN_DEFAULT,\\n    is_nullable AS IS_NULLABLE,\\n    data_type AS DATA_TYPE,\\n    character_maximum_length AS CHARACTER_MAXIMUM_LENGTH,\\n    character_octet_length AS CHARACTER_OCTET_LENGTH,\\n    numeric_precision AS NUMERIC_PRECISION,\\n    numeric_precision_radix AS NUMERIC_PRECISION_RADIX,\\n    numeric_scale AS NUMERIC_SCALE,\\n    datetime_precision AS DATETIME_PRECISION,\\n    character_set_catalog AS CHARACTER_SET_CATALOG,\\n    character_set_schema AS CHARACTER_SET_SCHEMA,\\n    character_set_name AS CHARACTER_SET_NAME,\\n    collation_catalog AS COLLATION_CATALOG,\\n    collation_schema AS COLLATION_SCHEMA,\\n    collation_name AS COLLATION_NAME,\\n    domain_catalog AS DOMAIN_CATALOG,\\n    domain_schema AS DOMAIN_SCHEMA,\\n    domain_name AS DOMAIN_NAME,\\n    extra AS EXTRA,\\n    column_comment AS COLUMN_COMMENT,\\n    column_type AS COLUMN_TYPE\\nFROM system.columns\n CREATE VIEW INFORMATION_SCHEMA.TABLES (`table_catalog` String, `table_schema` String, `table_name` String, `table_type` String, `table_rows` Nullable(UInt64), `data_length` Nullable(UInt64), `table_collation` Nullable(String), `table_comment` Nullable(String), `TABLE_CATALOG` String, `TABLE_SCHEMA` String, `TABLE_NAME` String, `TABLE_TYPE` String, `TABLE_ROWS` Nullable(UInt64), `DATA_LENGTH` Nullable(UInt64), `TABLE_COLLATION` Nullable(String), `TABLE_COMMENT` Nullable(String)) SQL SECURITY INVOKER AS SELECT database AS table_catalog, database AS table_schema, name AS table_name, multiIf(is_temporary, \\'LOCAL TEMPORARY\\', engine LIKE \\'%View\\', \\'VIEW\\', engine LIKE \\'System%\\', \\'SYSTEM VIEW\\', has_own_data = 0, \\'FOREIGN TABLE\\', \\'BASE TABLE\\') AS table_type, total_rows AS table_rows, total_bytes AS data_length, \\'utf8mb4_0900_ai_ci\\' AS table_collation, comment AS table_comment, table_catalog AS TABLE_CATALOG, table_schema AS TABLE_SCHEMA, table_name AS TABLE_NAME, table_type AS TABLE_TYPE, table_rows AS TABLE_ROWS, data_length AS DATA_LENGTH, table_collation AS TABLE_COLLATION, table_comment AS TABLE_COMMENT FROM system.tables\n CREATE VIEW INFORMATION_SCHEMA.tables (`table_catalog` String, `table_schema` String, `table_name` String, `table_type` String, `table_rows` Nullable(UInt64), `data_length` Nullable(UInt64), `table_collation` Nullable(String), `table_comment` Nullable(String), `TABLE_CATALOG` String, `TABLE_SCHEMA` String, `TABLE_NAME` String, `TABLE_TYPE` String, `TABLE_ROWS` Nullable(UInt64), `DATA_LENGTH` Nullable(UInt64), `TABLE_COLLATION` Nullable(String), `TABLE_COMMENT` Nullable(String)) SQL SECURITY INVOKER AS SELECT database AS table_catalog, database AS table_schema, name AS table_name, multiIf(is_temporary, \\'LOCAL TEMPORARY\\', engine LIKE \\'%View\\', \\'VIEW\\', engine LIKE \\'System%\\', \\'SYSTEM VIEW\\', has_own_data = 0, \\'FOREIGN TABLE\\', \\'BASE TABLE\\') AS table_type, total_rows AS table_rows, total_bytes AS data_length, \\'utf8mb4_0900_ai_ci\\' AS table_collation, comment AS table_comment, table_catalog AS TABLE_CATALOG, table_schema AS TABLE_SCHEMA, table_name AS TABLE_NAME, table_type AS TABLE_TYPE, table_rows AS TABLE_ROWS, data_length AS DATA_LENGTH, table_collation AS TABLE_COLLATION, table_comment AS TABLE_COMMENT FROM system.tables\n CREATE VIEW information_schema.TABLES (`table_catalog` String, `table_schema` String, `table_name` String, `table_type` String, `table_rows` Nullable(UInt64), `data_length` Nullable(UInt64), `table_collation` Nullable(String), `table_comment` Nullable(String), `TABLE_CATALOG` String, `TABLE_SCHEMA` String, `TABLE_NAME` String, `TABLE_TYPE` String, `TABLE_ROWS` Nullable(UInt64), `DATA_LENGTH` Nullable(UInt64), `TABLE_COLLATION` Nullable(String), `TABLE_COMMENT` Nullable(String)) SQL SECURITY INVOKER AS SELECT database AS table_catalog, database AS table_schema, name AS table_name, multiIf(is_temporary, \\'LOCAL TEMPORARY\\', engine LIKE \\'%View\\', \\'VIEW\\', engine LIKE \\'System%\\', \\'SYSTEM VIEW\\', has_own_data = 0, \\'FOREIGN TABLE\\', \\'BASE TABLE\\') AS table_type, total_rows AS table_rows, total_bytes AS data_length, \\'utf8mb4_0900_ai_ci\\' AS table_collation, comment AS table_comment, table_catalog AS TABLE_CATALOG, table_schema AS TABLE_SCHEMA, table_name AS TABLE_NAME, table_type AS TABLE_TYPE, table_rows AS TABLE_ROWS, data_length AS DATA_LENGTH, table_collation AS TABLE_COLLATION, table_comment AS TABLE_COMMENT FROM system.tables\ndiff --git a/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.reference b/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.reference\nindex 37cd3d93e393..317dbe1c61c2 100644\n--- a/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.reference\n+++ b/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.reference\n@@ -1,5 +1,5 @@\n CREATE DICTIONARY default.dict\\n(\\n    `id` UInt32,\\n    `value` String\\n)\\nPRIMARY KEY id\\nSOURCE(CLICKHOUSE(HOST \\'localhost\\' PORT 9000 USER \\'default\\' DB \\'default\\' TABLE \\'view\\'))\\nLIFETIME(MIN 600 MAX 600)\\nLAYOUT(HASHED())\n-CREATE TABLE default.table\\n(\\n    `col` String MATERIALIZED dictGet(\\'default.dict\\', \\'value\\', toUInt32(1))\\n)\\nENGINE = MergeTree\\nORDER BY tuple()\\nSETTINGS index_granularity = 8192\n+CREATE TABLE default.`table`\\n(\\n    `col` String MATERIALIZED dictGet(\\'default.dict\\', \\'value\\', toUInt32(1))\\n)\\nENGINE = MergeTree\\nORDER BY tuple()\\nSETTINGS index_granularity = 8192\n 1\tv\n 1\tv\n 1\tv\ndiff --git a/tests/queries/0_stateless/02454_set_parameters_formatting.reference b/tests/queries/0_stateless/02454_set_parameters_formatting.reference\nindex 1098a8159f3e..c438c068635b 100644\n--- a/tests/queries/0_stateless/02454_set_parameters_formatting.reference\n+++ b/tests/queries/0_stateless/02454_set_parameters_formatting.reference\n@@ -1,3 +1,3 @@\n-SET param_a = 1\n-SET max_threads = 1, param_a = 1\n-SET max_threads = 1, param_a = 1\n+SET param_a = '1'\n+SET max_threads = 1, param_a = '1'\n+SET max_threads = 1, param_a = '1'\ndiff --git a/tests/queries/0_stateless/02476_fix_lambda_parsing.reference b/tests/queries/0_stateless/02476_fix_lambda_parsing.reference\nindex de508c7a0d3e..04e64792b23b 100644\n--- a/tests/queries/0_stateless/02476_fix_lambda_parsing.reference\n+++ b/tests/queries/0_stateless/02476_fix_lambda_parsing.reference\n@@ -1,4 +1,4 @@\n-SELECT f(x, y -> z)\n+SELECT f(x, (y -> z))\n SELECT f((x, y) -> z)\n SELECT f((x, y) -> z)\n-SELECT f(x, (x, y) -> z)\n+SELECT f(x, ((x, y) -> z))\ndiff --git a/tests/queries/0_stateless/02703_row_policy_for_database.reference b/tests/queries/0_stateless/02703_row_policy_for_database.reference\nindex ec03e538d95e..b67ea69ae723 100644\n--- a/tests/queries/0_stateless/02703_row_policy_for_database.reference\n+++ b/tests/queries/0_stateless/02703_row_policy_for_database.reference\n@@ -3,7 +3,7 @@\n CREATE ROW POLICY db1_02703 ON db1_02703.* FOR SELECT USING 1 TO ALL\n   -- SHOW CREATE POLICY ON db1_02703.*\n CREATE ROW POLICY db1_02703 ON db1_02703.* FOR SELECT USING 1 TO ALL\n-CREATE ROW POLICY tbl1_02703 ON db1_02703.table FOR SELECT USING 1 TO ALL\n+CREATE ROW POLICY tbl1_02703 ON db1_02703.`table` FOR SELECT USING 1 TO ALL\n   -- SHOW CREATE POLICY ON db1_02703.`*`\n R1, R2: (x == 1) OR (x == 2)\n 1\ndiff --git a/tests/queries/0_stateless/02813_create_index_noop.sql b/tests/queries/0_stateless/02813_create_index_noop.sql\nindex 3d65f81af9d5..0f32dc6bdf32 100644\n--- a/tests/queries/0_stateless/02813_create_index_noop.sql\n+++ b/tests/queries/0_stateless/02813_create_index_noop.sql\n@@ -997,4 +997,4 @@ CREATE INDEX idx_tab4_5 ON tab4 (col4,col0 DESC);\n CREATE INDEX idx_tab4_5 ON tab4 (col4,col1 DESC);\n CREATE INDEX idx_tab4_5 ON tab4 (col4,col1 DESC,col3);\n CREATE INDEX idx_tab4_5 ON tab4 (col4,col3 DESC,col1 DESC);\n-CREATE INDEX idx_tab4_5 ON tab4 (col4,col3);\n\\ No newline at end of file\n+CREATE INDEX idx_tab4_5 ON tab4 (col4,col3);\ndiff --git a/tests/queries/0_stateless/02994_inconsistent_formatting.reference b/tests/queries/0_stateless/02994_inconsistent_formatting.reference\nnew file mode 100644\nindex 000000000000..b9db04e880c2\n--- /dev/null\n+++ b/tests/queries/0_stateless/02994_inconsistent_formatting.reference\n@@ -0,0 +1,4 @@\n+1\n+2\n+3\n+(1)\n\\ No newline at end of file\ndiff --git a/tests/queries/0_stateless/02994_inconsistent_formatting.sql b/tests/queries/0_stateless/02994_inconsistent_formatting.sql\nnew file mode 100644\nindex 000000000000..f22f81513f6a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02994_inconsistent_formatting.sql\n@@ -0,0 +1,10 @@\n+CREATE TEMPORARY TABLE table (x UInt8);\n+INSERT INTO `table` FORMAT Values (1);\n+INSERT INTO TABLE `table` FORMAT Values (2);\n+INSERT INTO TABLE table FORMAT Values (3);\n+SELECT * FROM table ORDER BY x;\n+DROP TABLE table;\n+\n+CREATE TEMPORARY TABLE FORMAT (x UInt8);\n+INSERT INTO table FORMAT Values (1);\n+SELECT * FROM FORMAT FORMAT Values;\ndiff --git a/tests/queries/0_stateless/02995_bad_formatting_union_intersect.reference b/tests/queries/0_stateless/02995_bad_formatting_union_intersect.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02995_bad_formatting_union_intersect.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/02995_bad_formatting_union_intersect.sql b/tests/queries/0_stateless/02995_bad_formatting_union_intersect.sql\nnew file mode 100644\nindex 000000000000..227f407fc5cd\n--- /dev/null\n+++ b/tests/queries/0_stateless/02995_bad_formatting_union_intersect.sql\n@@ -0,0 +1,2 @@\n+create temporary table t1 engine=MergeTree() order by c as ( select 1 as c intersect (select 1 as c union all  select 2 as c ) );\n+SELECT * FROM t1;\ndiff --git a/tests/queries/0_stateless/02998_operator_respect_nulls.reference b/tests/queries/0_stateless/02998_operator_respect_nulls.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02998_operator_respect_nulls.sql b/tests/queries/0_stateless/02998_operator_respect_nulls.sql\nnew file mode 100644\nindex 000000000000..240992e1ff88\n--- /dev/null\n+++ b/tests/queries/0_stateless/02998_operator_respect_nulls.sql\n@@ -0,0 +1,1 @@\n+SELECT plus(1, 1) RESPECT NULLS; -- { serverError SYNTAX_ERROR }\n",
  "problem_statement": "Broken AST formatting of select with intersect and union all \nWhen i try to create a table in all cluster using a query with [intersect] and [union all], the table is created but the result is not as i expected. It seems like bracket does not work or wrong priority with [intersect] and [union all] in [create table on cluster as]\r\n\r\nThe select sql :\r\n`select 1 as c\r\nintersect (select 1 as c\r\n            union all \r\n           select 2 as c\r\n);`\r\n![image](https://github.com/ClickHouse/ClickHouse/assets/3895260/65ef6f0a-19e1-467c-89ed-3ce72aa3bbe0)\r\n\r\n\r\nuse create table like this:\r\n`create table ltv.t1 on cluster cluster_ltv_replacingmergetree engine=MergeTree() order by c as (\r\nselect 1 as c\r\nintersect (select 1 as c\r\n            union all \r\n           select 2 as c\r\n          )\r\n);\r\n`\r\n`select * from ltv.t1;`\r\nresult is 1 and 2\r\n\r\n![image](https://github.com/ClickHouse/ClickHouse/assets/3895260/6301389a-ba0b-4a43-abe2-6d61e29f5aed)\r\n\r\nI have tried two versions:23.6.2.18 ,22.2.2.1\r\n\n",
  "hints_text": "Remove on cluster from the sql, the result is 1\r\n![image](https://github.com/ClickHouse/ClickHouse/assets/3895260/b7e19532-4ed2-4bc3-a209-36f5584b3658)\r\n\nIt's a bug in query formatting (parenthesis are omitted): https://pastila.nl/?0143ff41/2e2800674b05fa1500f6c42f1e87e7c3 ",
  "created_at": "2024-02-17T09:12:24Z"
}