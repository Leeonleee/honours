You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
'Missing columns' exception when using INTERPOLATE in subquery
**Describe what's wrong**
In scenarios where an interpolated value is dependent on a calculated column (also interpolated) on a subquery, every interpolated column must be referenced in the outer query, otherwise a `Missing columns` exception is thrown

[Reproduction in fiddle](https://fiddle.clickhouse.com/bcb35723-614e-4a8b-bb1a-9d35d9cfb3d5)

**Does it reproduce on recent release?**

Reproduces in lastest version

**How to reproduce**

```
--create test table
create table t1 (ts Date, num UInt32) engine=MergeTree() order by ts;

--insert some random data a few times (since we will aggregate over date field
insert into t1 select toDate(now() - INTERVAL number DAY), rand(number) from numbers(100);
insert into t1 select toDate(now() - INTERVAL number DAY), rand(number) from numbers(100);
insert into t1 select toDate(now() - INTERVAL number DAY), rand(number) from numbers(100);

--CTE with interpolated values (incl col2 - calculated based on col1)
with interpolated as (
    select
        ts as day,
        sum(num) as col1,
        exponentialMovingAverage(1)(col1, toUInt64(day)) over (
            Rows between 7 preceding
            and current row
        ) as col2
    from
        t1
    group by
        day
    order by
        day asc with fill to toLastDayOfMonth(now()) step interval 1 day interpolate(col1 as (col1 + col2) / 2, col2 as col2)
)

--This one runs fine:
select * from interpolated;

--This one returns an error 'Code: 47. DB::Exception: Missing columns: 'col2' while processing query'
select toStartOfMonth(day) as month, sum(col1) from interpolated group by month;

--This one runs fine:
select toStartOfMonth(day) as month, sum(col1), any(col2) from interpolated group by month;
```

**Expected behavior**

Outer query should execute without needing to select every interpolated field from subquery
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
