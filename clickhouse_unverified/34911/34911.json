{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 34911,
  "instance_id": "ClickHouse__ClickHouse-34911",
  "issue_numbers": [
    "21865"
  ],
  "base_commit": "c624a530cc089c1bcd1972cd4b3938940c2db9b0",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeIndexFullText.cpp b/src/Storages/MergeTree/MergeTreeIndexFullText.cpp\nindex f87584c9cd61..5ecb7b537e23 100644\n--- a/src/Storages/MergeTree/MergeTreeIndexFullText.cpp\n+++ b/src/Storages/MergeTree/MergeTreeIndexFullText.cpp\n@@ -710,9 +710,14 @@ void bloomFilterIndexValidator(const IndexDescription & index, bool /*attach*/)\n             const auto & array_type = assert_cast<const DataTypeArray &>(*index_data_type);\n             data_type = WhichDataType(array_type.getNestedType());\n         }\n+        else if (data_type.isLowCarnality())\n+        {\n+            const auto & low_cardinality = assert_cast<const DataTypeLowCardinality &>(*index_data_type);\n+            data_type = WhichDataType(low_cardinality.getDictionaryType());\n+        }\n \n         if (!data_type.isString() && !data_type.isFixedString())\n-            throw Exception(\"Bloom filter index can be used only with `String`, `FixedString` column or Array with `String` or `FixedString` values column.\", ErrorCodes::INCORRECT_QUERY);\n+            throw Exception(\"Bloom filter index can be used only with `String`, `FixedString`, `LowCardinality(String)`, `LowCardinality(FixedString)` column or Array with `String` or `FixedString` values column.\", ErrorCodes::INCORRECT_QUERY);\n     }\n \n     if (index.type == NgramTokenExtractor::getName())\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.reference b/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.reference\nnew file mode 100644\nindex 000000000000..a1533c4e44ad\n--- /dev/null\n+++ b/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.reference\n@@ -0,0 +1,24 @@\n+lc_bf_tokenbf\n+1\tK1\tK1ZZZZZZ\n+2\tK2\tK2ZZZZZZ\n+lc_fixed_bf_tokenbf\n+1\tK1\tK1ZZZZZZ\n+2\tK2\tK2ZZZZZZ\n+lc_ngram\n+1\tK1\tK1ZZZZZZ\n+2\tK2\tK2ZZZZZZ\n+lc_fixed_ngram\n+1\tK1\tK1ZZZZZZ\n+2\tK2\tK2ZZZZZZ\n+lc_bf_tokenbf\n+3\tabCD3ef\tabCD3ef\\0\n+4\tabCD4ef\tabCD4ef\\0\n+lc_fixed_bf_tokenbf\n+3\tabCD3ef\tabCD3ef\\0\n+4\tabCD4ef\tabCD4ef\\0\n+lc_ngram\n+3\tabCD3ef\tabCD3ef\\0\n+4\tabCD4ef\tabCD4ef\\0\n+lc_fixed_ngram\n+3\tabCD3ef\tabCD3ef\\0\n+4\tabCD4ef\tabCD4ef\\0\ndiff --git a/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.sql b/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.sql\nnew file mode 100644\nindex 000000000000..d2b30f5e8f42\n--- /dev/null\n+++ b/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.sql\n@@ -0,0 +1,69 @@\n+DROP TABLE IF EXISTS bf_tokenbf_lowcard_test;\n+DROP TABLE IF EXISTS bf_ngram_lowcard_test;\n+\n+CREATE TABLE bf_tokenbf_lowcard_test\n+(\n+    row_id UInt32,\n+    lc LowCardinality(String),\n+    lc_fixed LowCardinality(FixedString(8)),\n+    INDEX lc_bf_tokenbf lc TYPE tokenbf_v1(256,2,0) GRANULARITY 1,\n+    INDEX lc_fixed_bf_tokenbf lc_fixed TYPE tokenbf_v1(256,2,0) GRANULARITY 1\n+) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;\n+\n+CREATE TABLE bf_ngram_lowcard_test\n+(\n+    row_id UInt32,\n+    lc LowCardinality(String),\n+    lc_fixed LowCardinality(FixedString(8)),\n+    INDEX lc_ngram lc TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1,\n+    INDEX lc_fixed_ngram lc_fixed TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1\n+) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;\n+\n+INSERT INTO bf_tokenbf_lowcard_test VALUES (1, 'K1', 'K1ZZZZZZ'), (2, 'K2', 'K2ZZZZZZ');\n+INSERT INTO bf_ngram_lowcard_test VALUES (1, 'K1', 'K1ZZZZZZ'), (2, 'K2', 'K2ZZZZZZ');\n+INSERT INTO bf_tokenbf_lowcard_test VALUES (3, 'abCD3ef', 'abCD3ef'), (4, 'abCD4ef', 'abCD4ef');\n+INSERT INTO bf_ngram_lowcard_test   VALUES (3, 'abCD3ef', 'abCD3ef'), (4, 'abCD4ef', 'abCD4ef');\n+\n+SELECT 'lc_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc, 'K1') SETTINGS force_data_skipping_indices='lc_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc, 'K2') SETTINGS force_data_skipping_indices='lc_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc, 'K3') SETTINGS force_data_skipping_indices='lc_bf_tokenbf';\n+\n+SELECT 'lc_fixed_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc_fixed, 'K1ZZZZZZ') SETTINGS force_data_skipping_indices='lc_fixed_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc_fixed, 'K2ZZZZZZ') SETTINGS force_data_skipping_indices='lc_fixed_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc_fixed, 'K3ZZZZZZ') SETTINGS force_data_skipping_indices='lc_fixed_bf_tokenbf';\n+\n+SELECT 'lc_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc, 'K1') SETTINGS force_data_skipping_indices='lc_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc, 'K2') SETTINGS force_data_skipping_indices='lc_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc, 'K3') SETTINGS force_data_skipping_indices='lc_ngram';\n+\n+SELECT 'lc_fixed_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc_fixed, 'K1ZZZZZZ') SETTINGS force_data_skipping_indices='lc_fixed_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc_fixed, 'K2ZZZZZZ') SETTINGS force_data_skipping_indices='lc_fixed_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc_fixed, 'K3ZZZZZZ') SETTINGS force_data_skipping_indices='lc_fixed_ngram';\n+\n+\n+SELECT 'lc_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc, '%CD3%') SETTINGS force_data_skipping_indices='lc_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc, '%CD4%') SETTINGS force_data_skipping_indices='lc_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc, '%CD5%') SETTINGS force_data_skipping_indices='lc_bf_tokenbf';\n+\n+SELECT 'lc_fixed_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc_fixed, '%CD3%') SETTINGS force_data_skipping_indices='lc_fixed_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc_fixed, '%CD4%') SETTINGS force_data_skipping_indices='lc_fixed_bf_tokenbf';\n+SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc_fixed, '%CD5%') SETTINGS force_data_skipping_indices='lc_fixed_bf_tokenbf';\n+\n+SELECT 'lc_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc, '%CD3%') SETTINGS force_data_skipping_indices='lc_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc, '%CD4%') SETTINGS force_data_skipping_indices='lc_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc, '%CD5%') SETTINGS force_data_skipping_indices='lc_ngram';\n+\n+SELECT 'lc_fixed_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc_fixed, '%CD3%') SETTINGS force_data_skipping_indices='lc_fixed_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc_fixed, '%CD4%') SETTINGS force_data_skipping_indices='lc_fixed_ngram';\n+SELECT * FROM bf_ngram_lowcard_test WHERE like(lc_fixed, '%CD5%') SETTINGS force_data_skipping_indices='lc_fixed_ngram';\n+\n+DROP TABLE bf_tokenbf_lowcard_test;\n+DROP TABLE bf_ngram_lowcard_test;\n",
  "problem_statement": "Support LowCardinality strings in ngrambf_v1\nNow it support only `String` and `FixedString`\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/blob/33aefa832b3c544934a757cc9d0e284252a1dd3e/src/Storages/MergeTree/MergeTreeIndexFullText.cpp#L809\r\n\r\nSeems that `LowCardinality(String)` can be supported too, because we only use `column->getDataAt` to retrieve data and it will work on `LowCardinality(String)` in same way as for `String`\r\nhttps://github.com/ClickHouse/ClickHouse/blob/33aefa832b3c544934a757cc9d0e284252a1dd3e/src/Storages/MergeTree/MergeTreeIndexFullText.cpp#L543\r\nhttps://github.com/ClickHouse/ClickHouse/blob/33aefa832b3c544934a757cc9d0e284252a1dd3e/src/Storages/MergeTree/MergeTreeIndexFullText.cpp#L145\n",
  "hints_text": "",
  "created_at": "2022-02-25T15:18:24Z",
  "modified_files": [
    "src/Storages/MergeTree/MergeTreeIndexFullText.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.reference",
    "b/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.sql"
  ]
}