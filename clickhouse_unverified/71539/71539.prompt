You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Analyzer does not push down filter condition and use index in View with subquery
**Describe the unexpected behaviour**
When using a View with subquery, the Analyzer does not push down the filtering condition. 

**How to reproduce**
- Reproduced on 24.8 LTS and 24.10 latest release

- https://fiddle.clickhouse.com/2be02245-eb36-4fa0-8dfe-62b8236bbfd7
```
DROP TABLE IF EXISTS alpha;
DROP TABLE IF EXISTS alpha__day;

CREATE TABLE alpha
(
    `ts` DateTime64(6),
    `auid` Int64,
)
ENGINE = MergeTree
ORDER BY (auid, ts)
SETTINGS index_granularity = 1;

CREATE VIEW alpha__day
(
    `ts_date` Date,
    `auid` Int64,
)
AS SELECT
    ts_date,
    auid,
FROM
(
    SELECT
        toDate(ts) AS ts_date,
        auid
    FROM alpha
)
WHERE ts_date <= now() - INTERVAL 1 DAY;

INSERT INTO alpha VALUES (now64() - INTERVAL 3 DAY, 1);
INSERT INTO alpha VALUES (now64() - INTERVAL 3 DAY, 2);
INSERT INTO alpha VALUES (now64() - INTERVAL 3 DAY, 3);

EXPLAIN indexes = 1 SELECT auid FROM alpha__day WHERE auid = 1 settings allow_experimental_analyzer = 1;
EXPLAIN indexes = 1 SELECT auid FROM alpha__day WHERE auid = 1 settings allow_experimental_analyzer = 0;
```

Granules are not filtered when using analyzer (`Granules: 3/3`)
```
-- allow_experimental_analyzer = 1
Expression ((Project names + Projection))
  Filter ((WHERE + (Change column names to column identifiers + (Convert VIEW subquery result to VIEW table structure + (Materialize constants after VIEW subquery + (Project names + (Projection + (Change column names to column identifiers + (Project names + Projection)))))))))
    Expression
      ReadFromMergeTree (default.alpha)
      Indexes:
        PrimaryKey
          Keys: 
            ts
          Condition: (_CAST(toDate(ts)) in (-Inf, 1730600442])
          Parts: 3/3
          Granules: 3/3
-- allow_experimental_analyzer = 0
Expression ((Projection + Before ORDER BY))
  Filter ((WHERE + (Convert VIEW subquery result to VIEW table structure + (Materialize constants after VIEW subquery + (Projection + Before ORDER BY)))))
    Filter ((WHERE + (Projection + Before ORDER BY)))
      Expression
        ReadFromMergeTree (default.alpha)
        Indexes:
          PrimaryKey
            Keys: 
              auid
              ts
            Condition: and((materialize(auid) in [1, 1]), and((auid in [1, 1]), and((_CAST(toDate(ts)) in (-Inf, 1730600442]), (auid in [1, 1]))))
            Parts: 1/3
            Granules: 1/3
```

Working as expected when not using subquery in View.

- https://fiddle.clickhouse.com/37304f26-a736-4505-a3a4-04f3bf4a75e3
```
...
CREATE VIEW alpha__day
(
    `ts_date` Date,
    `auid` Int64,
)
AS SELECT
    toDate(ts) AS ts_date,
    auid
FROM alpha
WHERE ts_date <= now() - INTERVAL 1 DAY;
...
EXPLAIN indexes = 1 SELECT auid FROM alpha__day WHERE auid = 1 settings allow_experimental_analyzer = 1;
```

```
Expression ((Project names + Projection))
  Filter ((WHERE + (Change column names to column identifiers + (Convert VIEW subquery result to VIEW table structure + (Materialize constants after VIEW subquery + (Project names + (Projection + (Change column names to column identifiers + (Project names + Projection)))))))))
    Expression
      ReadFromMergeTree (default.alpha)
      Indexes:
        PrimaryKey
          Keys: 
            auid
            ts
          Condition: and((materialize(auid) in [1, 1]), (_CAST(toDate(ts)) in (-Inf, 1730597277]))
          Parts: 1/3
          Granules: 1/3
```

**Expected behavior**
Analyzer should pushdown condition for View with subquery.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
