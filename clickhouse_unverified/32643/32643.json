{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 32643,
  "instance_id": "ClickHouse__ClickHouse-32643",
  "issue_numbers": [
    "32452"
  ],
  "base_commit": "22e6fc1685307dd3da31643e17cfc1013e8dc145",
  "patch": "diff --git a/src/Storages/StorageGenerateRandom.cpp b/src/Storages/StorageGenerateRandom.cpp\nindex a4dfbfc3f96c..19e8f78d8775 100644\n--- a/src/Storages/StorageGenerateRandom.cpp\n+++ b/src/Storages/StorageGenerateRandom.cpp\n@@ -216,6 +216,13 @@ ColumnPtr fillColumnWithRandomData(\n             fillBufferWithRandomData(reinterpret_cast<char *>(column->getData().data()), limit * sizeof(UInt16), rng);\n             return column;\n         }\n+        case TypeIndex::Date32:\n+        {\n+            auto column = ColumnInt32::create();\n+            column->getData().resize(limit);\n+            fillBufferWithRandomData(reinterpret_cast<char *>(column->getData().data()), limit * sizeof(Int32), rng);\n+            return column;\n+        }\n         case TypeIndex::UInt32: [[fallthrough]];\n         case TypeIndex::DateTime:\n         {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01087_table_function_generate.reference b/tests/queries/0_stateless/01087_table_function_generate.reference\nindex ea4162e48404..ead4e97403bb 100644\n--- a/tests/queries/0_stateless/01087_table_function_generate.reference\n+++ b/tests/queries/0_stateless/01087_table_function_generate.reference\n@@ -69,6 +69,17 @@ DateTime64(3, \\'Europe/Moscow\\')\tDateTime64(6, \\'Europe/Moscow\\')\tDateTime64(6,\n 1989-12-13 02:01:16.532\t1992-10-05 07:07:57.973222\t2037-10-24 18:53:50.985504\n 1992-12-28 12:26:04.030\t1971-07-29 09:20:38.230976\t1980-03-26 18:49:55.428516\n 2051-12-11 10:09:13.162\t1982-01-12 03:25:45.754492\t2010-05-17 11:01:28.452864\n+Date32\n+1934-01-06\n+2039-08-16\n+2103-11-03\n+2064-08-14\n+2187-08-21\n+2099-04-08\n+1947-06-22\n+2012-01-19\n+2170-07-09\n+2263-01-17\n -\n Float32\tFloat64\n -1.3551149e32\t1.2262973812461839e235\ndiff --git a/tests/queries/0_stateless/01087_table_function_generate.sql b/tests/queries/0_stateless/01087_table_function_generate.sql\nindex 9a0f7db24ecb..ef4311649f79 100644\n--- a/tests/queries/0_stateless/01087_table_function_generate.sql\n+++ b/tests/queries/0_stateless/01087_table_function_generate.sql\n@@ -57,6 +57,14 @@ SELECT\n dt64, dts64, dtms64\n FROM generateRandom('dt64 DateTime64(3, \\'Europe/Moscow\\'), dts64 DateTime64(6, \\'Europe/Moscow\\'), dtms64 DateTime64(6 ,\\'Europe/Moscow\\')', 1, 10, 10)\n LIMIT 10;\n+SELECT\n+toTypeName(d32)\n+FROM generateRandom('d32 Date32')\n+LIMIT 1;\n+SELECT\n+d32\n+FROM generateRandom('d32 Date32', 1, 10, 10)\n+LIMIT 10;\n SELECT '-';\n SELECT\n   toTypeName(f32), toTypeName(f64)\n",
  "problem_statement": "genarateRandom() does not support Date32 type\ngenerateRandom() does not support generating random Date32 value:\r\n\r\n```\r\nSELECT *\r\nFROM generateRandom('Date32 Date32', NULL, 10, 2)\r\nLIMIT 10\r\n\r\nReceived exception from server (version 21.11.5):\r\nCode: 48. DB::Exception: Received from localhost:9000. DB::Exception: The 'GenerateRandom' is not implemented for type Date32: While executing GenerateRandom. (NOT_IMPLEMENTED)\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2021-12-13T07:58:11Z"
}