You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
A new function, `serial`
A new function, `serial`, which takes a constant string argument - a series identifier.
On every block, it goes to Keeper and atomically increments the counter with the corresponding name by the block size, then it generates and returns sequential numbers starting from the previous counter value.

The server can be configured with a keeper path - a prefix for these counter nodes, and with a limit on the total number of distinct counters (e.g., 100,000).

The usage of `serial` function will be controlled by a separate access right.

There should be a shortcut syntax for a table definition: if you specify `AUTO_INCREMENT`, it is equivalent to `DEFAULT serial('table_uuid')` or `serial('table_path_in_keeper')`. We can also support `SERIAL` for compatibility with Postgres.

As a result, it will provide a monotonic but not necessarily continuous counter. The discontinuity will appear for rejected or deduplicated INSERTs.

Alternatively, Replicated tables can store the counter inside their path in Keeper, and interpret `AUTO_INCREMENT` directly.

Caveats: special support is needed for BACKUP and RESTORE.

_Originally posted by @alexey-milovidov in https://github.com/ClickHouse/ClickHouse/issues/56228#issuecomment-1789933636_
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
