{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 40194,
  "instance_id": "ClickHouse__ClickHouse-40194",
  "issue_numbers": [
    "39987"
  ],
  "base_commit": "a0a5268368a53868b4e19704a539116f36c68a5a",
  "patch": "diff --git a/src/Functions/FunctionsAES.h b/src/Functions/FunctionsAES.h\nindex b12fcc00014f..0d8e5a5546a3 100644\n--- a/src/Functions/FunctionsAES.h\n+++ b/src/Functions/FunctionsAES.h\n@@ -167,8 +167,8 @@ class FunctionEncrypt : public IFunction\n         validateFunctionArgumentTypes(*this, arguments,\n             FunctionArgumentDescriptors{\n                 {\"mode\", &isStringOrFixedString<IDataType>, isColumnConst, \"encryption mode string\"},\n-                {\"input\", &isStringOrFixedString<IDataType>, nullptr, \"plaintext\"},\n-                {\"key\", &isStringOrFixedString<IDataType>, nullptr, \"encryption key binary string\"},\n+                {\"input\", &isStringOrFixedString<IDataType>, {}, \"plaintext\"},\n+                {\"key\", &isStringOrFixedString<IDataType>, {}, \"encryption key binary string\"},\n             },\n             optional_args\n         );\n@@ -439,8 +439,8 @@ class FunctionDecrypt : public IFunction\n         validateFunctionArgumentTypes(*this, arguments,\n             FunctionArgumentDescriptors{\n                 {\"mode\", &isStringOrFixedString<IDataType>, isColumnConst, \"decryption mode string\"},\n-                {\"input\", nullptr, nullptr, \"ciphertext\"},\n-                {\"key\", &isStringOrFixedString<IDataType>, nullptr, \"decryption key binary string\"},\n+                {\"input\", &isStringOrFixedString<IDataType>, {}, \"ciphertext\"},\n+                {\"key\", &isStringOrFixedString<IDataType>, {}, \"decryption key binary string\"},\n             },\n             optional_args\n         );\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02384_decrypt_bad_arguments.reference b/tests/queries/0_stateless/02384_decrypt_bad_arguments.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02384_decrypt_bad_arguments.sql b/tests/queries/0_stateless/02384_decrypt_bad_arguments.sql\nnew file mode 100644\nindex 000000000000..d29768558c4f\n--- /dev/null\n+++ b/tests/queries/0_stateless/02384_decrypt_bad_arguments.sql\n@@ -0,0 +1,2 @@\n+-- Tags: no-fasttest\n+SELECT decrypt('aes-128-gcm', [1024, 65535, NULL, NULL, 9223372036854775807, 1048576, NULL], 'text', 'key', 'IV'); -- { serverError 43 }\n",
  "problem_statement": "FunctionDecrypt: Too large size ... passed to allocator. It indicates an error\nhttps://s3.amazonaws.com/clickhouse-test-reports/0/73f4643afa8f135f7a7f0e39be41a09ccc3c8d96/fuzzer_astfuzzerubsan//report.html\r\n\r\n```\r\n2022.08.08 03:52:55.453638 [ 186 ] {cc0a6186-fc89-4e20-b705-9b884df4b79f} <Fatal> : Logical error: 'Too large size (18446603393237392928) passed to allocator. It indicates an error.'.\r\n2022.08.08 03:55:28.284145 [ 448 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.08.08 03:55:28.284189 [ 448 ] {} <Fatal> BaseDaemon: (version 22.8.1.1 (official build), build id: 696C34768D6D0C4D) (from thread 186) (query_id: cc0a6186-fc89-4e20-b705-9b884df4b79f) (query: SELECT 0., decrypt('aes-128-gcm', [1024, 65535, NULL, NULL, 9223372036854775807, 1048576, NULL], 'text', 'key', 'IV')) Received signal Aborted (6)\r\n2022.08.08 03:55:28.284212 [ 448 ] {} <Fatal> BaseDaemon: \r\n2022.08.08 03:55:28.284271 [ 448 ] {} <Fatal> BaseDaemon: Stack trace: 0x7ff43edf400b 0x7ff43edd3859 0x101a2c03 0x101a2eaf 0x102040a8 0x10203614 0x1021c397 0x10217090 0x17fe9a47 0x17fe96d9 0x17fe8cd4 0x15b19d3f 0x15b18b46 0x243ff5f9 0x243feccb 0x243ff4f8 0x244006ed 0x2440238b 0x24ca2236 0x251a39ec 0x251b7094 0x251a974b 0x251ae5bc 0x25180628 0x25168950 0x251749b9 0x2517a242 0x25955c98 0x25947eac 0x259407e9 0x2593c900 0x259c08e8 0x259bd20e 0x259bad11 0x258e37aa 0x258e1ee9 0x25df079d 0x25ded92d 0x26ef18b0 0x26f10c9a 0x27e3e5cc 0x27e3eaba\r\n2022.08.08 03:55:28.284315 [ 448 ] {} <Fatal> BaseDaemon: 3. gsignal in ?\r\n2022.08.08 03:55:28.284336 [ 448 ] {} <Fatal> BaseDaemon: 4. abort in ?\r\n2022.08.08 03:55:28.311088 [ 448 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Common/Exception.cpp:47: DB::abortOnFailedAssertion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in /workspace/clickhouse\r\n2022.08.08 03:55:28.336511 [ 448 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Common/Exception.cpp:70: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) in /workspace/clickhouse\r\n2022.08.08 03:55:28.349377 [ 448 ] {} <Fatal> BaseDaemon: 7.1. inlined from ./build_docker/../contrib/libcxx/include/string:1445: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const\r\n2022.08.08 03:55:28.349429 [ 448 ] {} <Fatal> BaseDaemon: 7.2. inlined from ../contrib/libcxx/include/string:2231: ~basic_string\r\n2022.08.08 03:55:28.349448 [ 448 ] {} <Fatal> BaseDaemon: 7. ../src/Common/Exception.h:37: DB::Exception::Exception<unsigned long&>(int, fmt::v8::basic_format_string<char, fmt::v8::type_identity<unsigned long&>::type>, unsigned long&) in /workspace/clickhouse\r\n2022.08.08 03:55:28.361790 [ 448 ] {} <Fatal> BaseDaemon: 8.1. inlined from ./build_docker/../src/Common/Allocator.h:265: Allocator<false, false>::checkSize(unsigned long)\r\n2022.08.08 03:55:28.361824 [ 448 ] {} <Fatal> BaseDaemon: 8. ../src/Common/Allocator.h:94: Allocator<false, false>::alloc(unsigned long, unsigned long) in /workspace/clickhouse\r\n2022.08.08 03:55:28.373590 [ 448 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/Common/PODArray.h:130: void DB::PODArrayBase<1ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::alloc<>(unsigned long) in /workspace/clickhouse\r\n2022.08.08 03:55:28.383622 [ 448 ] {} <Fatal> BaseDaemon: 10.1. inlined from ./build_docker/../src/Common/PODArray.h:260: DB::PODArrayBase<1ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::resize_assume_reserved(unsigned long)\r\n2022.08.08 03:55:28.383657 [ 448 ] {} <Fatal> BaseDaemon: 10. ../src/Common/PODArray.h:248: void DB::PODArrayBase<1ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::resize<>(unsigned long) in /workspace/clickhouse\r\n2022.08.08 03:55:29.341624 [ 448 ] {} <Fatal> BaseDaemon: 11. COW<DB::IColumn>::immutable_ptr<DB::IColumn> DB::FunctionDecrypt<(anonymous namespace)::DecryptImpl>::doDecryptImpl<(OpenSSLDetails::CipherMode)2>(evp_cipher_st const*, unsigned long, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) in /workspace/clickhouse\r\n2022.08.08 03:55:30.268248 [ 448 ] {} <Fatal> BaseDaemon: 12. DB::FunctionDecrypt<(anonymous namespace)::DecryptImpl>::doDecrypt(evp_cipher_st const*, unsigned long, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) in /workspace/clickhouse\r\n2022.08.08 03:55:31.194569 [ 448 ] {} <Fatal> BaseDaemon: 13. DB::FunctionDecrypt<(anonymous namespace)::DecryptImpl>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const in /workspace/clickhouse\r\n2022.08.08 03:55:32.120728 [ 448 ] {} <Fatal> BaseDaemon: 14. DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const in /workspace/clickhouse\r\n2022.08.08 03:55:33.047053 [ 448 ] {} <Fatal> BaseDaemon: 15. DB::FunctionToExecutableFunctionAdaptor::executeDryRunImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const in /workspace/clickhouse\r\n2022.08.08 03:55:33.058381 [ 448 ] {} <Fatal> BaseDaemon: 16. ./build_docker/../src/Functions/IFunction.cpp:0: DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const in /workspace/clickhouse\r\n2022.08.08 03:55:33.069354 [ 448 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:200: boost::intrusive_ptr<DB::IColumn const>::operator->() const\r\n2022.08.08 03:55:33.069382 [ 448 ] {} <Fatal> BaseDaemon: 17. ../src/Functions/IFunction.cpp:165: DB::IExecutableFunction::defaultImplementationForConstantArguments(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const in /workspace/clickhouse\r\n2022.08.08 03:55:33.080443 [ 448 ] {} <Fatal> BaseDaemon: 18.1. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/detail/operator_bool.hpp:14: boost::intrusive_ptr<DB::IColumn const>::operator bool() const\r\n2022.08.08 03:55:33.080470 [ 448 ] {} <Fatal> BaseDaemon: 18. ../src/Functions/IFunction.cpp:239: DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const in /workspace/clickhouse\r\n2022.08.08 03:55:33.092187 [ 448 ] {} <Fatal> BaseDaemon: 19.1. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:115: intrusive_ptr\r\n2022.08.08 03:55:33.092216 [ 448 ] {} <Fatal> BaseDaemon: 19.2. inlined from ../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:122: boost::intrusive_ptr<DB::IColumn const>::operator=(boost::intrusive_ptr<DB::IColumn const>&&)\r\n2022.08.08 03:55:33.092235 [ 448 ] {} <Fatal> BaseDaemon: 19.3. inlined from ../src/Common/COW.h:136: COW<DB::IColumn>::immutable_ptr<DB::IColumn>::operator=(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&&)\r\n2022.08.08 03:55:33.092250 [ 448 ] {} <Fatal> BaseDaemon: 19. ../src/Functions/IFunction.cpp:303: DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const in /workspace/clickhouse\r\n2022.08.08 03:55:33.104346 [ 448 ] {} <Fatal> BaseDaemon: 20. ./build_docker/../src/Functions/IFunction.cpp:0: DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const in /workspace/clickhouse\r\n2022.08.08 03:55:33.268935 [ 448 ] {} <Fatal> BaseDaemon: 21. ./build_docker/../src/Interpreters/ActionsDAG.cpp:0: DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<DB::ActionsDAG::Node const*, std::__1::allocator<DB::ActionsDAG::Node const*> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) in /workspace/clickhouse\r\n2022.08.08 03:55:33.317941 [ 448 ] {} <Fatal> BaseDaemon: 22. ./build_docker/../src/Interpreters/ActionsVisitor.cpp:0: DB::ScopeStack::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) in /workspace/clickhouse\r\n2022.08.08 03:55:33.369927 [ 448 ] {} <Fatal> BaseDaemon: 23.1. inlined from ./build_docker/../contrib/libcxx/include/string:1445: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const\r\n2022.08.08 03:55:33.369962 [ 448 ] {} <Fatal> BaseDaemon: 23.2. inlined from ../contrib/libcxx/include/string:2231: ~basic_string\r\n2022.08.08 03:55:33.369980 [ 448 ] {} <Fatal> BaseDaemon: 23. ../src/Interpreters/ActionsVisitor.h:185: DB::ActionsMatcher::Data::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) in /workspace/clickhouse\r\n2022.08.08 03:55:33.419598 [ 448 ] {} <Fatal> BaseDaemon: 24. ./build_docker/../src/Interpreters/ActionsVisitor.cpp:0: DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) in /workspace/clickhouse\r\n2022.08.08 03:55:33.470536 [ 448 ] {} <Fatal> BaseDaemon: 25. ./build_docker/../contrib/libcxx/include/vector:0: DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) in /workspace/clickhouse\r\n2022.08.08 03:55:33.525620 [ 448 ] {} <Fatal> BaseDaemon: 26. ./build_docker/../src/Interpreters/InDepthNodeVisitor.h:43: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) in /workspace/clickhouse\r\n2022.08.08 03:55:33.580978 [ 448 ] {} <Fatal> BaseDaemon: 27.1. inlined from ./build_docker/../src/Interpreters/ActionsVisitor.h:190: DB::ActionsMatcher::Data::getActions()\r\n2022.08.08 03:55:33.581005 [ 448 ] {} <Fatal> BaseDaemon: 27. ../src/Interpreters/ExpressionAnalyzer.cpp:552: DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) in /workspace/clickhouse\r\n2022.08.08 03:55:33.642058 [ 448 ] {} <Fatal> BaseDaemon: 28. ./build_docker/../src/Interpreters/ExpressionAnalyzer.cpp:0: DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) in /workspace/clickhouse\r\n2022.08.08 03:55:33.705421 [ 448 ] {} <Fatal> BaseDaemon: 29. ./build_docker/../src/Interpreters/ExpressionAnalyzer.cpp:0: DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) in /workspace/clickhouse\r\n2022.08.08 03:55:33.788633 [ 448 ] {} <Fatal> BaseDaemon: 30. ./build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:792: DB::InterpreterSelectQuery::getSampleBlockImpl() in /workspace/clickhouse\r\n2022.08.08 03:55:33.868042 [ 448 ] {} <Fatal> BaseDaemon: 31. ./build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:633: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::SubqueryForSet, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::SubqueryForSet> > >, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >)::$_1::operator()(bool) const in /workspace/clickhouse\r\n2022.08.08 03:55:33.945759 [ 448 ] {} <Fatal> BaseDaemon: 32. ./build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::SubqueryForSet, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::SubqueryForSet> > >, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) in /workspace/clickhouse\r\n2022.08.08 03:55:34.023929 [ 448 ] {} <Fatal> BaseDaemon: 33. ./build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:191: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) in /workspace/clickhouse\r\n2022.08.08 03:55:34.057693 [ 448 ] {} <Fatal> BaseDaemon: 34. ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:725: std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) in /workspace/clickhouse\r\n2022.08.08 03:55:34.085100 [ 448 ] {} <Fatal> BaseDaemon: 35.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/compressed_pair.h:48: __compressed_pair_elem<DB::InterpreterSelectQuery *, void>\r\n2022.08.08 03:55:34.085129 [ 448 ] {} <Fatal> BaseDaemon: 35.2. inlined from ../contrib/libcxx/include/__memory/compressed_pair.h:130: __compressed_pair<DB::InterpreterSelectQuery *, std::__1::default_delete<DB::InterpreterSelectQuery> >\r\n2022.08.08 03:55:34.085145 [ 448 ] {} <Fatal> BaseDaemon: 35.3. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:220: unique_ptr<DB::InterpreterSelectQuery, std::__1::default_delete<DB::InterpreterSelectQuery>, void, void>\r\n2022.08.08 03:55:34.085161 [ 448 ] {} <Fatal> BaseDaemon: 35. ../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:244: DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) in /workspace/clickhouse\r\n2022.08.08 03:55:34.111710 [ 448 ] {} <Fatal> BaseDaemon: 36. ./build_docker/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:0: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) in /workspace/clickhouse\r\n2022.08.08 03:55:34.124925 [ 448 ] {} <Fatal> BaseDaemon: 37. ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:0: std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&>(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&) in /workspace/clickhouse\r\n2022.08.08 03:55:34.136365 [ 448 ] {} <Fatal> BaseDaemon: 38.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/compressed_pair.h:48: __compressed_pair_elem<DB::InterpreterSelectWithUnionQuery *, void>\r\n2022.08.08 03:55:34.136391 [ 448 ] {} <Fatal> BaseDaemon: 38.2. inlined from ../contrib/libcxx/include/__memory/compressed_pair.h:130: __compressed_pair<DB::InterpreterSelectWithUnionQuery *, std::__1::default_delete<DB::InterpreterSelectWithUnionQuery> >\r\n2022.08.08 03:55:34.136408 [ 448 ] {} <Fatal> BaseDaemon: 38.3. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:220: unique_ptr<DB::InterpreterSelectWithUnionQuery, std::__1::default_delete<DB::InterpreterSelectWithUnionQuery>, void, void>\r\n2022.08.08 03:55:34.136422 [ 448 ] {} <Fatal> BaseDaemon: 38. ../src/Interpreters/InterpreterFactory.cpp:130: DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) in /workspace/clickhouse\r\n2022.08.08 03:55:34.180086 [ 448 ] {} <Fatal> BaseDaemon: 39. ./build_docker/../src/Interpreters/executeQuery.cpp:648: DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) in /workspace/clickhouse\r\n2022.08.08 03:55:34.227023 [ 448 ] {} <Fatal> BaseDaemon: 40. ./build_docker/../src/Interpreters/executeQuery.cpp:1085: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) in /workspace/clickhouse\r\n2022.08.08 03:55:34.265480 [ 448 ] {} <Fatal> BaseDaemon: 41. ./build_docker/../src/Server/TCPHandler.cpp:336: DB::TCPHandler::runImpl() in /workspace/clickhouse\r\n2022.08.08 03:55:34.312267 [ 448 ] {} <Fatal> BaseDaemon: 42. ./build_docker/../src/Server/TCPHandler.cpp:1827: DB::TCPHandler::run() in /workspace/clickhouse\r\n2022.08.08 03:55:34.316194 [ 448 ] {} <Fatal> BaseDaemon: 43. ./build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() in /workspace/clickhouse\r\n2022.08.08 03:55:34.322451 [ 448 ] {} <Fatal> BaseDaemon: 44.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:54: std::__1::default_delete<Poco::Net::TCPServerConnection>::operator()(Poco::Net::TCPServerConnection*) const\r\n2022.08.08 03:55:34.322480 [ 448 ] {} <Fatal> BaseDaemon: 44.2. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:315: std::__1::unique_ptr<Poco::Net::TCPServerConnection, std::__1::default_delete<Poco::Net::TCPServerConnection> >::reset(Poco::Net::TCPServerConnection*)\r\n2022.08.08 03:55:34.322496 [ 448 ] {} <Fatal> BaseDaemon: 44.3. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n2022.08.08 03:55:34.322510 [ 448 ] {} <Fatal> BaseDaemon: 44. ../contrib/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() in /workspace/clickhouse\r\n2022.08.08 03:55:34.635150 [ 448 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: FA761F7044D0D7A2EB5DF549555410CC)\r\n\r\n```\r\n\r\ncc: @Enmk \n",
  "hints_text": "",
  "created_at": "2022-08-14T02:29:34Z"
}