{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 24285,
  "instance_id": "ClickHouse__ClickHouse-24285",
  "issue_numbers": [
    "23901"
  ],
  "base_commit": "e9b69bbd708b5fc1761df09812359d8112b87aae",
  "patch": "diff --git a/src/Common/StringUtils/StringUtils.h b/src/Common/StringUtils/StringUtils.h\nindex cb2227f01a87..20c0a5ca3805 100644\n--- a/src/Common/StringUtils/StringUtils.h\n+++ b/src/Common/StringUtils/StringUtils.h\n@@ -123,7 +123,7 @@ inline bool isWhitespaceASCII(char c)\n /// Since |isWhiteSpaceASCII()| is used inside algorithms it's easier to implement another function than add extra argument.\n inline bool isWhitespaceASCIIOneLine(char c)\n {\n-    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\f' || c == '\\v';\n+    return c == ' ' || c == '\\t' || c == '\\f' || c == '\\v';\n }\n \n inline bool isControlASCII(char c)\ndiff --git a/src/Server/HTTP/ReadHeaders.cpp b/src/Server/HTTP/ReadHeaders.cpp\nindex 2fc2de8321a9..b70575010646 100644\n--- a/src/Server/HTTP/ReadHeaders.cpp\n+++ b/src/Server/HTTP/ReadHeaders.cpp\n@@ -68,9 +68,6 @@ void readHeaders(\n         if (in.eof())\n             throw Poco::Net::MessageException(\"Field is invalid\");\n \n-        if (value.empty())\n-            throw Poco::Net::MessageException(\"Field value is empty\");\n-\n         if (ch == '\\n')\n             throw Poco::Net::MessageException(\"No CRLF found\");\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01399_http_request_headers.reference b/tests/queries/0_stateless/01399_http_request_headers.reference\nindex 99ba2b1787f6..90a10a9818dc 100644\n--- a/tests/queries/0_stateless/01399_http_request_headers.reference\n+++ b/tests/queries/0_stateless/01399_http_request_headers.reference\n@@ -1,4 +1,5 @@\n 1\n+1\n Code: 516\n 1\n Code: 516\ndiff --git a/tests/queries/0_stateless/01399_http_request_headers.sh b/tests/queries/0_stateless/01399_http_request_headers.sh\nindex 9b07f018230c..f06e7ffc32be 100755\n--- a/tests/queries/0_stateless/01399_http_request_headers.sh\n+++ b/tests/queries/0_stateless/01399_http_request_headers.sh\n@@ -4,6 +4,7 @@ CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n # shellcheck source=../shell_config.sh\n . \"$CURDIR\"/../shell_config.sh\n \n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}\" -H 'EmptyHeader;' -d 'SELECT 1'\n ${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}\" -H 'X-ClickHouse-User: default' -d 'SELECT 1'\n ${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}\" -H 'X-ClickHouse-User: header_test' -d 'SELECT 1' | grep -o 'Code: 516'\n ${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}\" -H 'X-ClickHouse-Key: ' -d 'SELECT 1'\n",
  "problem_statement": "HTTP request with an empty header value results in bad request response\nClicktail installed from provided .deb package (version 1.0.20180402) generates HTTP requests like:\r\n\r\n`POST /?query=INSERT+INTO+clicktail.apache_log+FORMAT+JSONEachRow HTTP/1.1`\r\n`Host: XXX:8123`\r\n`User-Agent: libclick-go/1.4.0 clicktail/dev (regex)`\r\n`Content-Length: 2425`\r\n`Authorization: Basic XXX`\r\n`Content-Encoding: gzip`\r\n`Content-Type: application/json`\r\n`X-Honeycomb-Team: `\r\n`Accept-Encoding: gzip`\r\n\r\nHeader X-Honeycomb-Team contains only space before terminal characters:\r\n`58 2d 48 6f 6e 65 79 63 6f 6d 62 2d 54 65 61 6d 3a 20 0d 0a`\r\n\r\nClickhouse server 21.4.5.46 doesn't accept those requests and returns: \r\n`HTTP/1.1 400 Bad Request`\r\n\r\nThere is no requirement in RFC 7230 https://tools.ietf.org/html/rfc7230#section-3.2 for field-value to contains any data. Shouldn't be those requests accepted?\n",
  "hints_text": "Yes, I think we should accept it.\nIf we simply remove these two lines it will work as expected:\r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/src/Server/HTTP/ReadHeaders.cpp#L71\nYes, it looks like the code is non-conformant without a reason.\n> @alexey-milovidov \r\n> If we simply remove these two lines it will work as expected:\r\n> https://github.com/ClickHouse/ClickHouse/blob/master/src/Server/HTTP/ReadHeaders.cpp#L71\r\n\r\nNope, it will fails further on `ch == '\\n'` as `skipWhitespaceIfAny(in, true);` skips `\\r` too",
  "created_at": "2021-05-19T13:21:29Z"
}