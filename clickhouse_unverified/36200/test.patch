diff --git a/tests/integration/test_distributed_ddl/test.py b/tests/integration/test_distributed_ddl/test.py
index 9270efdd29b8..74cbcf915d14 100755
--- a/tests/integration/test_distributed_ddl/test.py
+++ b/tests/integration/test_distributed_ddl/test.py
@@ -510,7 +510,7 @@ def test_replicated_without_arguments(test_cluster):
     )
     assert (
         instance.query("SHOW CREATE test_atomic.rmt FORMAT TSVRaw")
-        == "CREATE TABLE test_atomic.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree('/clickhouse/tables/12345678-0000-4000-8000-000000000001/{shard}', '{replica}')
ORDER BY n
SETTINGS index_granularity = 8192
"
+        == "CREATE TABLE test_atomic.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree('/clickhouse/tables/{uuid}/{shard}', '{replica}')
ORDER BY n
SETTINGS index_granularity = 8192
"
     )
     test_cluster.ddl_check_query(
         instance,
diff --git a/tests/integration/test_replicated_database/test.py b/tests/integration/test_replicated_database/test.py
index 13e9c225a613..3c39171d8f41 100644
--- a/tests/integration/test_replicated_database/test.py
+++ b/tests/integration/test_replicated_database/test.py
@@ -111,7 +111,7 @@ def test_create_replicated_table(started_cluster):
 
     expected = (
         "CREATE TABLE testdb.replicated_table\
(\
    `d` Date,\
    `k` UInt64,\
    `i32` Int32\
)\
"
-        "ENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/uuid/{shard}\\', \\'{replica}\\')\
"
+        "ENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/{uuid}/{shard}\\', \\'{replica}\\')\
"
         "PARTITION BY toYYYYMM(d)\
ORDER BY k\
SETTINGS index_granularity = 8192"
     )
     assert_create_query([main_node, dummy_node], "testdb.replicated_table", expected)
@@ -164,7 +164,7 @@ def test_simple_alter_table(started_cluster, engine):
     full_engine = (
         engine
         if not "Replicated" in engine
-        else engine + "(\\'/clickhouse/tables/uuid/{shard}\\', \\'{replica}\\')"
+        else engine + "(\\'/clickhouse/tables/{uuid}/{shard}\\', \\'{replica}\\')"
     )
     expected = (
         "CREATE TABLE {}\
(\
    `CounterID` UInt32,\
    `StartDate` Date,\
    `UserID` UInt32,\
"
@@ -191,7 +191,7 @@ def test_simple_alter_table(started_cluster, engine):
     full_engine = (
         engine
         if not "Replicated" in engine
-        else engine + "(\\'/clickhouse/tables/uuid/{shard}\\', \\'{replica}\\')"
+        else engine + "(\\'/clickhouse/tables/{uuid}/{shard}\\', \\'{replica}\\')"
     )
     expected = (
         "CREATE TABLE {}\
(\
    `CounterID` UInt32,\
    `StartDate` Date,\
    `UserID` UInt32,\
"
@@ -459,7 +459,7 @@ def test_alters_from_different_replicas(started_cluster):
     expected = (
         "CREATE TABLE testdb.concurrent_test\
(\
    `CounterID` UInt32,\
    `StartDate` Date,\
    `UserID` UInt32,\
"
         "    `VisitID` UInt32,\
    `NestedColumn.A` Array(UInt8),\
    `NestedColumn.S` Array(String),\
    `ToDrop` UInt32\
)\
"
-        "ENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/uuid/{shard}\\', \\'{replica}\\')\
ORDER BY CounterID\
SETTINGS index_granularity = 8192"
+        "ENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/{uuid}/{shard}\\', \\'{replica}\\')\
ORDER BY CounterID\
SETTINGS index_granularity = 8192"
     )
 
     assert_create_query([main_node, competing_node], "testdb.concurrent_test", expected)
@@ -474,7 +474,7 @@ def test_alters_from_different_replicas(started_cluster):
     expected = (
         "CREATE TABLE testdb.concurrent_test\
(\
    `CounterID` UInt32,\
    `StartDate` Date,\
    `UserID` UInt32,\
"
         "    `VisitID` UInt32,\
    `NestedColumn.A` Array(UInt8),\
    `NestedColumn.S` Array(String),\
    `ToDrop` UInt32\
)\
"
-        "ENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/uuid/{shard}\\', \\'{replica}\\')\
ORDER BY CounterID\
SETTINGS index_granularity = 8192"
+        "ENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/{uuid}/{shard}\\', \\'{replica}\\')\
ORDER BY CounterID\
SETTINGS index_granularity = 8192"
     )
 
     # test_snapshot_and_snapshot_recover
@@ -521,7 +521,7 @@ def test_alters_from_different_replicas(started_cluster):
     expected = (
         "CREATE TABLE testdb.concurrent_test\
(\
    `CounterID` UInt32,\
    `StartDate` Date,\
    `UserID` UInt32,\
"
         "    `VisitID` UInt32,\
    `NestedColumn.A` Array(UInt8),\
    `NestedColumn.S` Array(String),\
    `ToDrop` UInt32\
)\
"
-        "ENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/uuid/{shard}\\', \\'{replica}\\')\
ORDER BY CounterID\
SETTINGS index_granularity = 8192"
+        "ENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/{uuid}/{shard}\\', \\'{replica}\\')\
ORDER BY CounterID\
SETTINGS index_granularity = 8192"
     )
 
     assert_create_query([main_node, competing_node], "testdb.concurrent_test", expected)
@@ -724,7 +724,13 @@ def test_recover_staled_replica(started_cluster):
         dummy_node.query(
             "SELECT count() FROM system.tables WHERE database='recover_broken_tables'"
         )
-        == f"{2*test_recover_staled_replica_run}
"
+        == f"{test_recover_staled_replica_run}
"
+    )
+    assert (
+        dummy_node.query(
+            "SELECT count() FROM system.tables WHERE database='recover_broken_replicated_tables'"
+        )
+        == f"{test_recover_staled_replica_run}
"
     )
     test_recover_staled_replica_run += 1
     table = dummy_node.query(
@@ -735,10 +741,12 @@ def test_recover_staled_replica(started_cluster):
         == "42
"
     )
     table = dummy_node.query(
-        "SHOW TABLES FROM recover_broken_tables LIKE 'rmt5_29_%' LIMIT 1"
+        "SHOW TABLES FROM recover_broken_replicated_tables LIKE 'rmt5_29_%' LIMIT 1"
     ).strip()
     assert (
-        dummy_node.query("SELECT (*,).1 FROM recover_broken_tables.{}".format(table))
+        dummy_node.query(
+            "SELECT (*,).1 FROM recover_broken_replicated_tables.{}".format(table)
+        )
         == "42
"
     )
 
diff --git a/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.reference b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.reference
index d217855586be..fad3b45a354e 100644
--- a/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.reference
+++ b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.reference
@@ -2,3 +2,6 @@ CREATE TABLE default.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = Replic
 CREATE TABLE default.rmt1
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree(\'/clickhouse/test_01148/{shard}/default/rmt\', \'{replica}\')
ORDER BY n
SETTINGS index_granularity = 8192
 CREATE TABLE default.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree(\'{default_path_test}test_01148\', \'{default_name_test}\')
ORDER BY n
SETTINGS index_granularity = 8192
 CREATE TABLE default.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree(\'{default_path_test}test_01148\', \'{default_name_test}\')
ORDER BY n
SETTINGS index_granularity = 8192
+CREATE TABLE test_01148_atomic.rmt2
(
    `n` Int32
)
ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/{uuid}/{shard}\', \'{replica}\')
PRIMARY KEY n
ORDER BY n
SETTINGS index_granularity = 8192
+CREATE TABLE test_01148_atomic.rmt3
(
    `n` Int32
)
ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/{uuid}/{shard}\', \'{replica}\')
PRIMARY KEY n
ORDER BY n
SETTINGS index_granularity = 8192
+CREATE TABLE imdb_01148.anything
(
    `director_id` UInt64,
    `movie_id` UInt64
)
ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/{uuid}/{shard}\', \'{replica}\')
ORDER BY (director_id, movie_id)
SETTINGS index_granularity = 8192
diff --git a/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql
index 2fef16c4b0a5..16d3dc741138 100644
--- a/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql
+++ b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql
@@ -1,6 +1,9 @@
--- Tags: zookeeper, no-replicated-database, no-parallel
+-- Tags: zookeeper, no-replicated-database, no-parallel, no-ordinary-database
 
 DROP TABLE IF EXISTS rmt;
+DROP TABLE IF EXISTS rmt1;
+DROP TABLE IF EXISTS rmt2;
+DROP TABLE IF EXISTS rmt3;
 
 CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('/clickhouse/test_01148/{shard}/{database}/{table}', '{replica}') ORDER BY n;
 SHOW CREATE TABLE rmt;
@@ -17,5 +20,29 @@ DETACH TABLE rmt;
 ATTACH TABLE rmt;
 SHOW CREATE TABLE rmt;
 
+SET distributed_ddl_output_mode='none';
+DROP DATABASE IF EXISTS test_01148_atomic;
+CREATE DATABASE test_01148_atomic ENGINE=Atomic;
+CREATE TABLE test_01148_atomic.rmt2 ON CLUSTER test_shard_localhost (n int, PRIMARY KEY n) ENGINE=ReplicatedMergeTree;
+CREATE TABLE test_01148_atomic.rmt3 AS test_01148_atomic.rmt2; -- { serverError 62 }
+CREATE TABLE test_01148_atomic.rmt4 ON CLUSTER test_shard_localhost AS test_01148_atomic.rmt2;
+SHOW CREATE TABLE test_01148_atomic.rmt2;
+RENAME TABLE test_01148_atomic.rmt4 to test_01148_atomic.rmt3;
+SHOW CREATE TABLE test_01148_atomic.rmt3;
+
+DROP DATABASE IF EXISTS test_01148_ordinary;
+CREATE DATABASE test_01148_ordinary ENGINE=Ordinary;
+RENAME TABLE test_01148_atomic.rmt3 to test_01148_ordinary.rmt3; -- { serverError 48 }
+DROP DATABASE test_01148_ordinary;
+DROP DATABASE test_01148_atomic;
+
 DROP TABLE rmt;
 DROP TABLE rmt1;
+
+SET allow_experimental_database_replicated=1;
+DROP DATABASE IF EXISTS imdb_01148;
+CREATE DATABASE imdb_01148 ENGINE = Replicated('/test/databases/imdb_01148', '{shard}', '{replica}');
+CREATE TABLE imdb_01148.movie_directors (`director_id` UInt64, `movie_id` UInt64) ENGINE = ReplicatedMergeTree ORDER BY (director_id, movie_id) SETTINGS index_granularity = 8192;
+CREATE TABLE imdb_01148.anything AS imdb_01148.movie_directors;
+SHOW CREATE TABLE imdb_01148.anything;
+DROP DATABASE imdb_01148;
