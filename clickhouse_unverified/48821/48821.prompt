You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
File/S3/HDFS as Database engine
**Use case**

Process a bunch of files in the most intuitive way.

**Describe the solution you'd like**

After #32455 is implemented, the format and structure of remote datasets is autodetected.
So, we can write `SELECT * FROM url('https://datasets.clickhouse.com/github_events_v2.native.xz')` without specifying data format or data structure.

Now let's look at the directory with files as a database.
It will allow to write something like:

```
SELECT * FROM "data.parquet"
```

The database engine should do lazy listing of the files.
The table structure should also be obtained lazily to avoid slow SHOW TABLES.

Database engine can take the following parameters:
- prefix for files;
- filter for filenames / file paths, optional (a question - should it be regexp or glob style);
- should it do recursive directory traversal or look at the immediate directory only (the latter by default);
- maybe a rule to glue some files together by pattern to represent them as a single table;
- maybe a regexp to transform names;
- default format if it is not autodetected, optional (skip unknown by default);

**Caveats**

`SELECT * FROM system.tables` without filters will become slower if these types of databases exist.

**Additional ideas**

We can introduce the notion of overlay databases (one database that can shadow tables from another database) and add File database to `clickhouse-local` to be available under default database.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
