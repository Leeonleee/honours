diff --git a/tests/config/config.d/named_collection.xml b/tests/config/config.d/named_collection.xml
index 2e49c0c596f8..5b716a7b8da5 100644
--- a/tests/config/config.d/named_collection.xml
+++ b/tests/config/config.d/named_collection.xml
@@ -32,5 +32,10 @@
             <secret_access_key>testtest</secret_access_key>
             <structure>auto</structure>
         </s3_conn>
+        <s3_conn_db>
+            <url>http://localhost:11111/test/</url>
+            <access_key_id>test</access_key_id>
+            <secret_access_key>testtest</secret_access_key>
+        </s3_conn_db>
     </named_collections>
 </clickhouse>
diff --git a/tests/queries/0_stateless/02707_clickhouse_local_implicit_file_table_function.reference b/tests/queries/0_stateless/02707_clickhouse_local_implicit_file_table_function.reference
new file mode 100644
index 000000000000..ccc02ad4f345
--- /dev/null
+++ b/tests/queries/0_stateless/02707_clickhouse_local_implicit_file_table_function.reference
@@ -0,0 +1,9 @@
+Test 1: check explicit and implicit call of the file table function
+explicit:
+4
+implicit:
+4
+Test 2: check Filesystem database
+4
+Test 3: check show database with Filesystem
+test02707
diff --git a/tests/queries/0_stateless/02707_clickhouse_local_implicit_file_table_function.sh b/tests/queries/0_stateless/02707_clickhouse_local_implicit_file_table_function.sh
new file mode 100755
index 000000000000..7c9095b3d8b3
--- /dev/null
+++ b/tests/queries/0_stateless/02707_clickhouse_local_implicit_file_table_function.sh
@@ -0,0 +1,45 @@
+#!/usr/bin/env bash
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+dir=${CLICKHOUSE_TEST_UNIQUE_NAME}
+[[ -d $dir ]] && rm -rd $dir
+mkdir $dir
+
+# Create temporary csv file for tests
+echo '"id","str","int","text"' > $dir/tmp.csv
+echo '1,"abc",123,"abacaba"' >> $dir/tmp.csv
+echo '2,"def",456,"bacabaa"' >> $dir/tmp.csv
+echo '3,"story",78912,"acabaab"' >> $dir/tmp.csv
+echo '4,"history",21321321,"cabaaba"' >> $dir/tmp.csv
+
+#################
+echo "Test 1: check explicit and implicit call of the file table function"
+
+echo "explicit:"
+$CLICKHOUSE_LOCAL -q "SELECT COUNT(*) FROM file('${dir}/tmp.csv')"
+echo "implicit:"
+$CLICKHOUSE_LOCAL -q "SELECT COUNT(*) FROM \"${dir}/tmp.csv\""
+
+#################
+echo "Test 2: check Filesystem database"
+$CLICKHOUSE_LOCAL --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test;
+CREATE DATABASE test ENGINE = Filesystem('${dir}');
+SELECT COUNT(*) FROM test.\`tmp.csv\`;
+DROP DATABASE test;
+"""
+
+#################
+echo "Test 3: check show database with Filesystem"
+$CLICKHOUSE_LOCAL --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test02707;
+CREATE DATABASE test02707 ENGINE = Filesystem('${dir}');
+SHOW DATABASES;
+DROP DATABASE test02707;
+""" | grep "test02707"
+
+# Remove temporary dir with files
+rm -rd $dir
diff --git a/tests/queries/0_stateless/02722_database_filesystem.reference b/tests/queries/0_stateless/02722_database_filesystem.reference
new file mode 100644
index 000000000000..c65dda7933a5
--- /dev/null
+++ b/tests/queries/0_stateless/02722_database_filesystem.reference
@@ -0,0 +1,15 @@
+Test 1: create filesystem database and check implicit calls
+0
+test1
+4
+4
+4
+Test 2: check DatabaseFilesystem access rights and errors handling on server
+OK
+OK
+OK
+OK
+OK
+OK
+OK
+OK
diff --git a/tests/queries/0_stateless/02722_database_filesystem.sh b/tests/queries/0_stateless/02722_database_filesystem.sh
new file mode 100755
index 000000000000..4ff659ee7468
--- /dev/null
+++ b/tests/queries/0_stateless/02722_database_filesystem.sh
@@ -0,0 +1,72 @@
+#!/usr/bin/env bash
+# Tags: no-parallel
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+# see 01658_read_file_to_stringcolumn.sh
+CLICKHOUSE_USER_FILES_PATH=$(clickhouse-client --query "select _path, _file from file('nonexist.txt', 'CSV', 'val1 char')" 2>&1 | grep Exception | awk '{gsub("/nonexist.txt","",$9); print $9}')
+
+# Prepare data
+unique_name=${CLICKHOUSE_TEST_UNIQUE_NAME}
+user_files_tmp_dir=${CLICKHOUSE_USER_FILES_PATH}/${unique_name}
+mkdir -p ${user_files_tmp_dir}/tmp/
+echo '"id","str","int","text"' > ${user_files_tmp_dir}/tmp.csv
+echo '1,"abc",123,"abacaba"' >> ${user_files_tmp_dir}/tmp.csv
+echo '2,"def",456,"bacabaa"' >> ${user_files_tmp_dir}/tmp.csv
+echo '3,"story",78912,"acabaab"' >> ${user_files_tmp_dir}/tmp.csv
+echo '4,"history",21321321,"cabaaba"' >> ${user_files_tmp_dir}/tmp.csv
+
+tmp_dir=${CLICKHOUSE_TEST_UNIQUE_NAME}
+[[ -d $tmp_dir ]] && rm -rd $tmp_dir
+mkdir $tmp_dir
+cp ${user_files_tmp_dir}/tmp.csv ${tmp_dir}/tmp.csv
+cp ${user_files_tmp_dir}/tmp.csv ${user_files_tmp_dir}/tmp/tmp.csv
+cp ${user_files_tmp_dir}/tmp.csv ${user_files_tmp_dir}/tmp.myext
+
+#################
+echo "Test 1: create filesystem database and check implicit calls"
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test1;
+CREATE DATABASE test1 ENGINE = Filesystem;
+"""
+echo $?
+${CLICKHOUSE_CLIENT} --query "SHOW DATABASES" | grep "test1"
+${CLICKHOUSE_CLIENT} --query "SELECT COUNT(*) FROM test1.\`${unique_name}/tmp.csv\`;"
+${CLICKHOUSE_CLIENT} --query "SELECT COUNT(*) FROM test1.\`${unique_name}/tmp/tmp.csv\`;"
+${CLICKHOUSE_LOCAL} -q "SELECT COUNT(*) FROM \"${tmp_dir}/tmp.csv\""
+
+#################
+echo "Test 2: check DatabaseFilesystem access rights and errors handling on server"
+# DATABASE_ACCESS_DENIED: Allows list files only inside user_files
+${CLICKHOUSE_CLIENT} --query "SELECT COUNT(*) FROM test1.\`../tmp.csv\`;" 2>&1| grep -F "Code: 291" > /dev/null && echo "OK"
+${CLICKHOUSE_CLIENT} --query "SELECT COUNT(*) FROM test1.\`/tmp/tmp.csv\`;" 2>&1| grep -F "Code: 291" > /dev/null && echo "OK"
+${CLICKHOUSE_CLIENT} --multiline --multiquery --query """
+USE test1;
+SELECT COUNT(*) FROM \"../${tmp_dir}/tmp.csv\";
+""" 2>&1| grep -F "Code: 291" > /dev/null && echo "OK"
+${CLICKHOUSE_CLIENT} --query "SELECT COUNT(*) FROM test1.\`../../../../../../tmp.csv\`;" 2>&1| grep -F "Code: 291" > /dev/null && echo "OK"
+
+# BAD_ARGUMENTS: path should be inside user_files
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test2;
+CREATE DATABASE test2 ENGINE = Filesystem('/tmp');
+""" 2>&1| grep -F "Code: 36" > /dev/null && echo "OK"
+
+# BAD_ARGUMENTS: .../user_files/relative_unknown_dir does not exists
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test2;
+CREATE DATABASE test2 ENGINE = Filesystem('relative_unknown_dir');
+""" 2>&1| grep -F "Code: 36" > /dev/null && echo "OK"
+
+# FILE_DOESNT_EXIST: unknown file
+${CLICKHOUSE_CLIENT} --query "SELECT COUNT(*) FROM test1.\`tmp2.csv\`;" 2>&1| grep -F "Code: 107" > /dev/null && echo "OK"
+
+# BAD_ARGUMENTS: Cannot determine the file format by it's extension
+${CLICKHOUSE_CLIENT} --query "SELECT COUNT(*) FROM test1.\`${unique_name}/tmp.myext\`;" 2>&1| grep -F "Code: 36" > /dev/null && echo "OK"
+
+# Clean
+${CLICKHOUSE_CLIENT} --query "DROP DATABASE test1;"
+rm -rd $tmp_dir
+rm -rd $user_files_tmp_dir
diff --git a/tests/queries/0_stateless/02724_database_s3.reference b/tests/queries/0_stateless/02724_database_s3.reference
new file mode 100644
index 000000000000..425cca6a077a
--- /dev/null
+++ b/tests/queries/0_stateless/02724_database_s3.reference
@@ -0,0 +1,21 @@
+Test 1: select from s3
+1	2	3
+4	5	6
+7	8	9
+0	0	0
+test1
+10	11	12
+13	14	15
+16	17	18
+0	0	0
+10	11	12
+13	14	15
+16	17	18
+0	0	0
+10	11	12
+13	14	15
+16	17	18
+0	0	0
+Test 2: check exceptions
+OK
+OK
diff --git a/tests/queries/0_stateless/02724_database_s3.sh b/tests/queries/0_stateless/02724_database_s3.sh
new file mode 100755
index 000000000000..79199b435712
--- /dev/null
+++ b/tests/queries/0_stateless/02724_database_s3.sh
@@ -0,0 +1,63 @@
+#!/usr/bin/env bash
+# Tags: no-fasttest, no-parallel
+# Tag no-fasttest: Depends on AWS
+
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CUR_DIR"/../shell_config.sh
+
+#################
+echo "Test 1: select from s3"
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test1;
+CREATE DATABASE test1 ENGINE = S3;
+USE test1;
+SELECT * FROM \"http://localhost:11111/test/a.tsv\"
+"""
+${CLICKHOUSE_CLIENT} -q "SHOW DATABASES;" | grep test1
+
+# check credentials with absolute path
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test2;
+CREATE DATABASE test2 ENGINE = S3('', 'test', 'testtest');
+USE test2;
+SELECT * FROM \"http://localhost:11111/test/b.tsv\"
+"""
+
+# check credentials with relative path
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test4;
+CREATE DATABASE test4 ENGINE = S3('http://localhost:11111/test', 'test', 'testtest');
+USE test4;
+SELECT * FROM \"b.tsv\"
+"""
+
+# Check named collection loading
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test5;
+CREATE DATABASE test5 ENGINE = S3(s3_conn_db);
+SELECT * FROM test5.\`b.tsv\`
+"""
+
+#################
+echo "Test 2: check exceptions"
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test3;
+CREATE DATABASE test3 ENGINE = S3;
+USE test3;
+SELECT * FROM \"http://localhost:11111/test/a.myext\"
+""" 2>&1| grep -F "BAD_ARGUMENTS" > /dev/null && echo "OK"
+
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+USE test3;
+SELECT * FROM \"abacaba\"
+""" 2>&1| grep -F "BAD_ARGUMENTS" > /dev/null && echo "OK"
+
+# Cleanup
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test1;
+DROP DATABASE IF EXISTS test2;
+DROP DATABASE IF EXISTS test3;
+DROP DATABASE IF EXISTS test4;
+DROP DATABASE IF EXISTS test5;
+"""
diff --git a/tests/queries/0_stateless/02725_database_hdfs.reference b/tests/queries/0_stateless/02725_database_hdfs.reference
new file mode 100644
index 000000000000..ef8adae2bbc9
--- /dev/null
+++ b/tests/queries/0_stateless/02725_database_hdfs.reference
@@ -0,0 +1,12 @@
+Test 1: select from hdfs database
+1	2	3
+test1
+1	2	3
+test2
+Test 2: check exceptions
+OK0
+OK1
+OK2
+OK3
+OK4
+OK5
diff --git a/tests/queries/0_stateless/02725_database_hdfs.sh b/tests/queries/0_stateless/02725_database_hdfs.sh
new file mode 100755
index 000000000000..a78f3e6bbdc1
--- /dev/null
+++ b/tests/queries/0_stateless/02725_database_hdfs.sh
@@ -0,0 +1,60 @@
+#!/usr/bin/env bash
+# Tags: no-fasttest, use-hdfs, no-parallel
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+# Prepare data
+${CLICKHOUSE_CLIENT} -q "insert into table function hdfs('hdfs://localhost:12222/test_02725_1.tsv', 'TSV', 'column1 UInt32, column2 UInt32, column3 UInt32') select 1, 2, 3 settings hdfs_truncate_on_insert=1;"
+${CLICKHOUSE_CLIENT} -q "insert into table function hdfs('hdfs://localhost:12222/test_02725_2.tsv', 'TSV', 'column1 UInt32, column2 UInt32, column3 UInt32') select 4, 5, 6 settings hdfs_truncate_on_insert=1;"
+
+#################
+echo "Test 1: select from hdfs database"
+
+# Database without specific host
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test1;
+CREATE DATABASE test1 ENGINE = HDFS;
+USE test1;
+SELECT * FROM \"hdfs://localhost:12222/test_02725_1.tsv\"
+"""
+${CLICKHOUSE_CLIENT} -q "SHOW DATABASES;" | grep test1
+
+# Database with host
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test2;
+CREATE DATABASE test2 ENGINE = HDFS('hdfs://localhost:12222');
+USE test2;
+SELECT * FROM \"test_02725_1.tsv\"
+"""
+${CLICKHOUSE_CLIENT} -q "SHOW DATABASES;" | grep test2
+
+#################
+echo "Test 2: check exceptions"
+
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test3;
+CREATE DATABASE test3 ENGINE = HDFS('abacaba');
+""" 2>&1| grep -F "BAD_ARGUMENTS" > /dev/null && echo "OK0"
+
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test4;
+CREATE DATABASE test4 ENGINE = HDFS;
+USE test4;
+SELECT * FROM \"abacaba/file.tsv\"
+""" 2>&1| grep -F "BAD_ARGUMENTS" > /dev/null && echo "OK1"
+
+${CLICKHOUSE_CLIENT} -q "SELECT * FROM test4.\`http://localhost:11111/test/a.tsv\`" 2>&1| grep -F "BAD_ARGUMENTS" > /dev/null && echo "OK2"
+${CLICKHOUSE_CLIENT} --query "SELECT * FROM test4.\`hdfs://localhost:12222/file.myext\`" 2>&1| grep -F "BAD_ARGUMENTS" > /dev/null && echo "OK3"
+${CLICKHOUSE_CLIENT} --query "SELECT * FROM test4.\`hdfs://localhost:12222/test_02725_3.tsv\`" 2>&1| grep -F "CANNOT_EXTRACT_TABLE_STRUCTURE" > /dev/null && echo "OK4"
+${CLICKHOUSE_CLIENT} --query "SELECT * FROM test4.\`hdfs://localhost:12222\`" 2>&1| grep -F "BAD_ARGUMENTS" > /dev/null && echo "OK5"
+
+
+# Cleanup
+${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
+DROP DATABASE IF EXISTS test1;
+DROP DATABASE IF EXISTS test2;
+DROP DATABASE IF EXISTS test3;
+DROP DATABASE IF EXISTS test4;
+"""
\ No newline at end of file
