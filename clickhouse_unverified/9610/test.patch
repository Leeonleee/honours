diff --git a/dbms/tests/queries/0_stateless/01049_join_low_card_bug.reference b/dbms/tests/queries/0_stateless/01049_join_low_card_bug.reference
new file mode 100644
index 000000000000..ece76c99662a
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01049_join_low_card_bug.reference
@@ -0,0 +1,80 @@
+	LowCardinality(String)
+str	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	str	LowCardinality(String)	LowCardinality(String)
+	str	LowCardinality(String)	LowCardinality(String)
+	str	LowCardinality(String)	LowCardinality(String)
+	str	LowCardinality(String)	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	str	LowCardinality(String)	String
+	str	LowCardinality(String)	String
+	str	LowCardinality(String)	String
+	str	LowCardinality(String)	String
+	String
+str	String
+	String
+str	String
+	str	String	LowCardinality(String)
+	str	String	LowCardinality(String)
+	str	String	LowCardinality(String)
+	str	String	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	str	LowCardinality(String)	Nullable(String)
+	str	LowCardinality(String)	Nullable(String)
+	str	LowCardinality(String)	Nullable(String)
+	str	LowCardinality(String)	Nullable(String)
+\N	Nullable(String)
+str	Nullable(String)
+\N	Nullable(String)
+str	Nullable(String)
+\N	str	Nullable(String)	LowCardinality(String)
+\N	str	Nullable(String)	LowCardinality(String)
+\N	str	Nullable(String)	LowCardinality(String)
+\N	str	Nullable(String)	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+\N	Nullable(String)
+str	Nullable(String)
+\N	Nullable(String)
+str	Nullable(String)
+\N	str	Nullable(String)
+\N	str	Nullable(String)
+\N	str	Nullable(String)
+\N	str	Nullable(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	LowCardinality(String)
+str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+	str	LowCardinality(String)
+\N	Nullable(String)
+str	Nullable(String)
+\N	Nullable(String)
+str	Nullable(String)
+\N	str	Nullable(String)
+\N	str	Nullable(String)
+\N	str	Nullable(String)
+\N	str	Nullable(String)
diff --git a/dbms/tests/queries/0_stateless/01049_join_low_card_bug.sql b/dbms/tests/queries/0_stateless/01049_join_low_card_bug.sql
new file mode 100644
index 000000000000..dee7f5923aa1
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01049_join_low_card_bug.sql
@@ -0,0 +1,145 @@
+DROP TABLE IF EXISTS l;
+DROP TABLE IF EXISTS r;
+DROP TABLE IF EXISTS nl;
+DROP TABLE IF EXISTS nr;
+DROP TABLE IF EXISTS l_lc;
+DROP TABLE IF EXISTS r_lc;
+
+CREATE TABLE l (x UInt32, lc String) ENGINE = Memory;
+CREATE TABLE r (x UInt32, lc String) ENGINE = Memory;
+CREATE TABLE nl (x Nullable(UInt32), lc Nullable(String)) ENGINE = Memory;
+CREATE TABLE nr (x Nullable(UInt32), lc Nullable(String)) ENGINE = Memory;
+CREATE TABLE l_lc (x UInt32, lc LowCardinality(String)) ENGINE = Memory;
+CREATE TABLE r_lc (x UInt32, lc LowCardinality(String)) ENGINE = Memory;
+
+INSERT INTO r VALUES (0, 'str');
+INSERT INTO nr VALUES (0, 'str');
+INSERT INTO r_lc VALUES (0, 'str');
+
+--
+
+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc);
+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc);
+ 
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(r.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(r.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(r.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(r.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc);
+
+--
+
+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (lc);
+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l FULL JOIN r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l FULL JOIN r USING (lc);
+
+--
+
+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (x);
+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (lc);
+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (x);
+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l RIGHT JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l RIGHT JOIN r_lc AS r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l FULL JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l FULL JOIN r_lc AS r USING (lc);
+
+--
+
+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (lc);
+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN nr AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN nr AS r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l FULL JOIN nr AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l FULL JOIN nr AS r USING (lc);
+
+--
+
+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (x);
+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (lc);
+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (x);
+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM nl AS l RIGHT JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM nl AS l RIGHT JOIN r_lc AS r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM nl AS l FULL JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM nl AS l FULL JOIN r_lc AS r USING (lc);
+
+-- TODO: LC nullability
+SET join_use_nulls = 1;
+
+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc);
+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc);
+
+--
+
+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (lc);
+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN r USING (lc);
+
+--
+
+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (x);
+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (lc);
+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (x);
+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l RIGHT JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l RIGHT JOIN r_lc AS r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l FULL JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l FULL JOIN r_lc AS r USING (lc);
+
+--
+
+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (lc);
+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (x);
+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (lc);
+
+--
+
+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (x);
+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (lc);
+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (x);
+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (lc);
+
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (lc);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (x);
+SELECT l.lc, r.lc, toTypeName(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (lc);
+
+DROP TABLE l;
+DROP TABLE r;
+DROP TABLE nl;
+DROP TABLE nr;
+DROP TABLE l_lc;
+DROP TABLE r_lc;
