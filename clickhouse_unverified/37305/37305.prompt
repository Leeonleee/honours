You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error: 'offsets_column has data inconsistent with nested_column'
https://s3.amazonaws.com/clickhouse-test-reports/0/cdfd16174c704d664f965007e684841dc34a55ff/stateless_tests__address__actions__[2/2].html

```
2022.05.10 10:26:56.111254 [ 16098 ] {16bb88ef-6940-436b-b750-9733fcaa16fd} <Fatal> : Logical error: 'offsets_column has data inconsistent with nested_column'.
2022.05.10 10:26:56.111952 [ 22486 ] {} <Fatal> BaseDaemon: ########################################
2022.05.10 10:26:56.112113 [ 22486 ] {} <Fatal> BaseDaemon: (version 22.5.1.1 (official build), build id: 89CC279EBFD389A6) (from thread 16098) (query_id: 16bb88ef-6940-436b-b750-9733fcaa16fd) (query: INSERT INTO type_json_dst SELECT data FROM type_json_src;) Received signal Aborted (6)
2022.05.10 10:26:56.112222 [ 22486 ] {} <Fatal> BaseDaemon: 
2022.05.10 10:26:56.112360 [ 22486 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f31c5c7b03b 0x7f31c5c5a859 0xd24900f 0xd24966e 0x2be2b39c 0x13b870ce 0x29a727a5 0x29a7b44f 0x29a71a17 0x29a674ba 0x29a5fd85 0x2d6416db 0x2d8d37e0 0x2e37287c 0x2e23d2d3 0x2e23cd92 0x2e23bd02 0x2dd31d1f 0x2dd121e7 0x2dd14eb7 0xd394a07 0xd39cd97 0x7f31c5e32609 0x7f31c5d57163
2022.05.10 10:26:56.112539 [ 22486 ] {} <Fatal> BaseDaemon: 3. gsignal @ 0x7f31c5c7b03b in ?
2022.05.10 10:26:56.112651 [ 22486 ] {} <Fatal> BaseDaemon: 4. abort @ 0x7f31c5c5a859 in ?
2022.05.10 10:26:56.231553 [ 22486 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Common/Exception.cpp:0: DB::handle_error_code(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, std::__1::vector<void*, std::__1::allocator<void*> > const&) @ 0xd24900f in /usr/bin/clickhouse
2022.05.10 10:26:56.329756 [ 22486 ] {} <Fatal> BaseDaemon: 6.1. inlined from ./build_docker/../contrib/libcxx/include/vector:547: std::__1::vector<void*, std::__1::allocator<void*> >::data() const
2022.05.10 10:26:56.329858 [ 22486 ] {} <Fatal> BaseDaemon: 6.2. inlined from ../contrib/libcxx/include/vector:731: std::__1::vector<void*, std::__1::allocator<void*> >::__annotate_delete() const
2022.05.10 10:26:56.329923 [ 22486 ] {} <Fatal> BaseDaemon: 6.3. inlined from ../contrib/libcxx/include/vector:394: ~vector
2022.05.10 10:26:56.329990 [ 22486 ] {} <Fatal> BaseDaemon: 6. ../src/Common/Exception.cpp:59: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xd24966e in /usr/bin/clickhouse
2022.05.10 10:26:56.500955 [ 22486 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Columns/ColumnArray.cpp:59: DB::ColumnArray::ColumnArray(COW<DB::IColumn>::mutable_ptr<DB::IColumn>&&, COW<DB::IColumn>::mutable_ptr<DB::IColumn>&&) @ 0x2be2b39c in /usr/bin/clickhouse
2022.05.10 10:27:01.303925 [ 22486 ] {} <Fatal> BaseDaemon: 8. DB::ColumnArray::create(COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) @ 0x13b870ce in /usr/bin/clickhouse
2022.05.10 10:27:01.484729 [ 22486 ] {} <Fatal> BaseDaemon: 9.1. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: ~intrusive_ptr
2022.05.10 10:27:01.484840 [ 22486 ] {} <Fatal> BaseDaemon: 9. ../src/DataTypes/ObjectUtils.cpp:520: DB::(anonymous namespace)::createTypeFromNode(DB::SubcolumnsTree<DB::(anonymous namespace)::ColumnWithTypeAndDimensions>::Node const*) @ 0x29a727a5 in /usr/bin/clickhouse
2022.05.10 10:27:01.633051 [ 22486 ] {} <Fatal> BaseDaemon: 10.1. inlined from ./build_docker/../contrib/libcxx/include/vector:1575: std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::(anonymous namespace)::ColumnWithTypeAndDimensions>& std::__1::vector<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::(anonymous namespace)::ColumnWithTypeAndDimensions>, std::__1::allocator<std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::(anonymous namespace)::ColumnWithTypeAndDimensions> > >::emplace_back<StringRef const&, DB::(anonymous namespace)::ColumnWithTypeAndDimensions>(StringRef const&, DB::(anonymous namespace)::ColumnWithTypeAndDimensions&&)
2022.05.10 10:27:01.633155 [ 22486 ] {} <Fatal> BaseDaemon: 10. ../src/DataTypes/ObjectUtils.cpp:467: auto DB::(anonymous namespace)::createTypeFromNode(DB::SubcolumnsTree<DB::(anonymous namespace)::ColumnWithTypeAndDimensions>::Node const*)::$_1::operator()<HashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, std::__1::shared_ptr<DB::SubcolumnsTree<DB::(anonymous namespace)::ColumnWithTypeAndDimensions>::Node>, StringRefHash, HashTableNoState>, StringRefHash, HashTableGrower<4ul>, AllocatorWithStackMemory<Allocator<true, true>, 640ul, 1ul> > >(HashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, std::__1::shared_ptr<DB::SubcolumnsTree<DB::(anonymous namespace)::ColumnWithTypeAndDimensions>::Node>, StringRefHash, HashTableNoState>, StringRefHash, HashTableGrower<4ul>, AllocatorWithStackMemory<Allocator<true, true>, 640ul, 1ul> > const&) const @ 0x29a7b44f in /usr/bin/clickhouse
2022.05.10 10:27:01.906838 [ 22486 ] {} <Fatal> BaseDaemon: 11.1. inlined from ./build_docker/../contrib/libcxx/include/tuple:297: std::__1::__tuple_leaf<1ul, std::__1::vector<DB::(anonymous namespace)::ColumnWithTypeAndDimensions, std::__1::allocator<DB::(anonymous namespace)::ColumnWithTypeAndDimensions> >, false>::get()
2022.05.10 10:27:01.906944 [ 22486 ] {} <Fatal> BaseDaemon: 11.2. inlined from ../contrib/libcxx/include/tuple:1184: std::__1::tuple_element<1ul, std::__1::tuple<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::vector<DB::(anonymous namespace)::ColumnWithTypeAndDimensions, std::__1::allocator<DB::(anonymous namespace)::ColumnWithTypeAndDimensions> > > >::type&& std::__1::get<1ul, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::vector<DB::(anonymous namespace)::ColumnWithTypeAndDimensions, std::__1::allocator<DB::(anonymous namespace)::ColumnWithTypeAndDimensions> > >(std::__1::tuple<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::vector<DB::(anonymous namespace)::ColumnWithTypeAndDimensions, std::__1::allocator<DB::(anonymous namespace)::ColumnWithTypeAndDimensions> > >&&)
2022.05.10 10:27:01.906999 [ 22486 ] {} <Fatal> BaseDaemon: 11. ../src/DataTypes/ObjectUtils.cpp:534: DB::(anonymous namespace)::createTypeFromNode(DB::SubcolumnsTree<DB::(anonymous namespace)::ColumnWithTypeAndDimensions>::Node const*) @ 0x29a71a17 in /usr/bin/clickhouse
2022.05.10 10:27:02.082064 [ 22486 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/DataTypes/ObjectUtils.cpp:0: DB::unflattenTuple(std::__1::vector<DB::PathInData, std::__1::allocator<DB::PathInData> > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&) @ 0x29a674ba in /usr/bin/clickhouse
2022.05.10 10:27:02.278990 [ 22486 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:115: intrusive_ptr
2022.05.10 10:27:02.279118 [ 22486 ] {} <Fatal> BaseDaemon: 13.2. inlined from ../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:122: boost::intrusive_ptr<DB::IColumn const>::operator=(boost::intrusive_ptr<DB::IColumn const>&&)
2022.05.10 10:27:02.279217 [ 22486 ] {} <Fatal> BaseDaemon: 13.3. inlined from ../src/Common/COW.h:136: COW<DB::IColumn>::immutable_ptr<DB::IColumn>::operator=(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&&)
2022.05.10 10:27:02.279311 [ 22486 ] {} <Fatal> BaseDaemon: 13.4. inlined from ../contrib/libcxx/include/tuple:1053: std::__1::tuple<COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, std::__1::shared_ptr<DB::IDataType const>&>& std::__1::tuple<COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, std::__1::shared_ptr<DB::IDataType const>&>::operator=<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::shared_ptr<DB::IDataType const>, std::__1::integral_constant<bool, true>, 0>(std::__1::pair<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::shared_ptr<DB::IDataType const> >&&)
2022.05.10 10:27:02.279380 [ 22486 ] {} <Fatal> BaseDaemon: 13. ../src/DataTypes/ObjectUtils.cpp:168: DB::convertObjectsToTuples(DB::Block&, DB::NamesAndTypesList const&) @ 0x29a5fd85 in /usr/bin/clickhouse
2022.05.10 10:27:02.429090 [ 22486 ] {} <Fatal> BaseDaemon: 14. ./build_docker/../src/Storages/MergeTree/MergeTreeDataWriter.cpp:479: DB::MergeTreeDataWriter::deduceTypesOfObjectColumns(std::__1::shared_ptr<DB::StorageSnapshot const> const&, DB::Block&) @ 0x2d6416db in /usr/bin/clickhouse
2022.05.10 10:27:02.460966 [ 22486 ] {} <Fatal> BaseDaemon: 15. ./build_docker/../src/Storages/MergeTree/MergeTreeSink.cpp:56: DB::MergeTreeSink::consume(DB::Chunk) @ 0x2d8d37e0 in /usr/bin/clickhouse
2022.05.10 10:27:02.474836 [ 22486 ] {} <Fatal> BaseDaemon: 16.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/shared_ptr.h:702: ~shared_ptr
2022.05.10 10:27:02.474918 [ 22486 ] {} <Fatal> BaseDaemon: 16.2. inlined from ../src/Processors/Chunk.h:32: ~Chunk
2022.05.10 10:27:02.474958 [ 22486 ] {} <Fatal> BaseDaemon: 16. ../src/Processors/Sinks/SinkToStorage.cpp:18: DB::SinkToStorage::onConsume(DB::Chunk) @ 0x2e37287c in /usr/bin/clickhouse
2022.05.10 10:27:02.512254 [ 22486 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/shared_ptr.h:702: ~shared_ptr
2022.05.10 10:27:02.512348 [ 22486 ] {} <Fatal> BaseDaemon: 17.2. inlined from ../src/Processors/Chunk.h:32: ~Chunk
2022.05.10 10:27:02.512389 [ 22486 ] {} <Fatal> BaseDaemon: 17.3. inlined from ../src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: operator()
2022.05.10 10:27:02.512469 [ 22486 ] {} <Fatal> BaseDaemon: 17.4. inlined from ../contrib/libcxx/include/type_traits:3640: decltype(static_cast<DB::ExceptionKeepingTransform::work()::$_1&>(fp)()) std::__1::__invoke<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&)
2022.05.10 10:27:02.512528 [ 22486 ] {} <Fatal> BaseDaemon: 17.5. inlined from ../contrib/libcxx/include/__functional/invoke.h:61: void std::__1::__invoke_void_return_wrapper<void, true>::__call<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&)
2022.05.10 10:27:02.512591 [ 22486 ] {} <Fatal> BaseDaemon: 17.6. inlined from ../contrib/libcxx/include/__functional/function.h:230: std::__1::__function::__default_alloc_func<DB::ExceptionKeepingTransform::work()::$_1, void ()>::operator()()
2022.05.10 10:27:02.512633 [ 22486 ] {} <Fatal> BaseDaemon: 17. ../contrib/libcxx/include/__functional/function.h:711: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::ExceptionKeepingTransform::work()::$_1, void ()> >(std::__1::__function::__policy_storage const*) @ 0x2e23d2d3 in /usr/bin/clickhouse
2022.05.10 10:27:02.574747 [ 22486 ] {} <Fatal> BaseDaemon: 18. ./build_docker/../src/Processors/Transforms/ExceptionKeepingTransform.cpp:103: DB::runStep(std::__1::function<void ()>, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x2e23cd92 in /usr/bin/clickhouse
2022.05.10 10:27:02.615633 [ 22486 ] {} <Fatal> BaseDaemon: 19.1. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:813: ~__policy_func
2022.05.10 10:27:02.615753 [ 22486 ] {} <Fatal> BaseDaemon: 19.2. inlined from ../contrib/libcxx/include/__functional/function.h:1171: ~function
2022.05.10 10:27:02.615840 [ 22486 ] {} <Fatal> BaseDaemon: 19. ../src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: DB::ExceptionKeepingTransform::work() @ 0x2e23bd02 in /usr/bin/clickhouse
2022.05.10 10:27:02.634189 [ 22486 ] {} <Fatal> BaseDaemon: 20. ./build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:0: DB::ExecutionThreadContext::executeTask() @ 0x2dd31d1f in /usr/bin/clickhouse
2022.05.10 10:27:02.698610 [ 22486 ] {} <Fatal> BaseDaemon: 21. ./build_docker/../src/Processors/Executors/PipelineExecutor.cpp:217: DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x2dd121e7 in /usr/bin/clickhouse
2022.05.10 10:27:02.764280 [ 22486 ] {} <Fatal> BaseDaemon: 22.1. inlined from ./build_docker/../src/Processors/Executors/PipelineExecutor.cpp:0: operator()
2022.05.10 10:27:02.764417 [ 22486 ] {} <Fatal> BaseDaemon: 22.2. inlined from ../contrib/libcxx/include/type_traits:3648: decltype(static_cast<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&)
2022.05.10 10:27:02.764518 [ 22486 ] {} <Fatal> BaseDaemon: 22.3. inlined from ../contrib/libcxx/include/tuple:1595: decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&, std::__1::__tuple_indices<>)
2022.05.10 10:27:02.764592 [ 22486 ] {} <Fatal> BaseDaemon: 22.4. inlined from ../contrib/libcxx/include/tuple:1604: decltype(auto) std::__1::apply<DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&, std::__1::tuple<>&)
2022.05.10 10:27:02.764655 [ 22486 ] {} <Fatal> BaseDaemon: 22.5. inlined from ../src/Common/ThreadPool.h:188: operator()
2022.05.10 10:27:02.764731 [ 22486 ] {} <Fatal> BaseDaemon: 22.6. inlined from ../contrib/libcxx/include/type_traits:3640: decltype(static_cast<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)
2022.05.10 10:27:02.764811 [ 22486 ] {} <Fatal> BaseDaemon: 22.7. inlined from ../contrib/libcxx/include/__functional/invoke.h:61: void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'()&)
2022.05.10 10:27:02.764904 [ 22486 ] {} <Fatal> BaseDaemon: 22.8. inlined from ../contrib/libcxx/include/__functional/function.h:230: std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'(), void ()>::operator()()
2022.05.10 10:27:02.764968 [ 22486 ] {} <Fatal> BaseDaemon: 22. ../contrib/libcxx/include/__functional/function.h:711: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_1>(DB::PipelineExecutor::executeImpl(unsigned long)::$_1&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0x2dd14eb7 in /usr/bin/clickhouse
2022.05.10 10:27:02.805632 [ 22486 ] {} <Fatal> BaseDaemon: 23. ./build_docker/../contrib/libcxx/include/__functional/function.h:0: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xd394a07 in /usr/bin/clickhouse
2022.05.10 10:27:02.847822 [ 22486 ] {} <Fatal> BaseDaemon: 24.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:312: std::__1::unique_ptr<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>, std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> > >::reset(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>*)
2022.05.10 10:27:02.847930 [ 22486 ] {} <Fatal> BaseDaemon: 24.2. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr
2022.05.10 10:27:02.847995 [ 22486 ] {} <Fatal> BaseDaemon: 24. ../contrib/libcxx/include/thread:295: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xd39cd97 in /usr/bin/clickhouse
2022.05.10 10:27:02.848083 [ 22486 ] {} <Fatal> BaseDaemon: 25. ? @ 0x7f31c5e32609 in ?
2022.05.10 10:27:02.848139 [ 22486 ] {} <Fatal> BaseDaemon: 26. __clone @ 0x7f31c5d57163 in ?
2022.05.10 10:27:04.350486 [ 22486 ] {} <Fatal> BaseDaemon: Checksum of the binary: D0C642E90A58A4CA4FF40B17388829D2, integrity check passed.
2022.05.10 10:27:16.474222 [ 391 ] {} <Fatal> Application: Child process was terminated by signal 6.
```

cc: @CurtizJ
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
