You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error: 'Bad cast from type DB::ColumnVector<char8_t> to DB::ColumnNullable'
### Describe the bug

Not related to https://github.com/ClickHouse/ClickHouse/issues/78572 I think

### How to reproduce

On a debug build run:

```sql
CREATE TABLE t0 (c0 Bool) ENGINE = EmbeddedRocksDB PRIMARY KEY (c0);
INSERT INTO TABLE t0 (c0) VALUES (TRUE);
SELECT t0.c0 FROM (SELECT NULL c0 FROM t0) v0 RIGHT JOIN t0 USING (c0);
```

### Error message and/or stacktrace

Stack trace:

```
<Fatal> : Logical error: 'Bad cast from type DB::ColumnVector<char8_t> to DB::ColumnNullable'.
<Fatal> : Stack trace (when copying this message, always include the lines below):

0. contrib/llvm-project/libcxx/include/__exception/exception.h:113: Poco::Exception::Exception(String const&, int) @ 0x0000000021145e32
1. src/Common/Exception.cpp:115: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x0000000011e7b1c6
2. src/Common/Exception.h:119: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000ba6c0ac
3. src/Common/Exception.h:137: DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x000000000ba6b0f6
4. src/Common/assert_cast.h:48: DB::ColumnNullable const& assert_cast<DB::ColumnNullable const&, DB::IColumn const&>(DB::IColumn const&) @ 0x000000000c56a04e
5. src/DataTypes/Serializations/SerializationNullable.cpp:67: DB::SerializationNullable::serializeBinaryBulkStatePrefix(DB::IColumn const&, DB::ISerialization::SerializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::SerializeBinaryBulkState>&) const @ 0x000000001629a3fc
6. src/Formats/NativeWriter.cpp:91: DB::NativeWriter::writeData(DB::ISerialization const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, DB::WriteBuffer&, std::optional<DB::FormatSettings> const&, unsigned long, unsigned long, unsigned long) @ 0x0000000019190ef0
7. src/Formats/NativeWriter.cpp:218: DB::NativeWriter::write(DB::Block const&) @ 0x0000000019191b5d
8. src/Server/TCPHandler.cpp:2582: DB::TCPHandler::sendData(DB::QueryState&, DB::Block const&) @ 0x0000000019113067
9. src/Server/TCPHandler.cpp:1326: DB::TCPHandler::processOrdinaryQuery(DB::QueryState&) @ 0x000000001910954c
10. src/Server/TCPHandler.cpp:735: DB::TCPHandler::runImpl() @ 0x00000000190fe103
11. src/Server/TCPHandler.cpp:2727: DB::TCPHandler::run() @ 0x00000000191175e4
12. base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x00000000211eaac7
13. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x00000000211eafc5
14. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x00000000211936df
15. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000021191291
16. start_thread @ 0x00000000000a2ef1
17. __clone3 @ 0x000000000013445c
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
