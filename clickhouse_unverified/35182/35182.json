{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 35182,
  "instance_id": "ClickHouse__ClickHouse-35182",
  "issue_numbers": [
    "35117"
  ],
  "base_commit": "15e4978a3f622164094d31ca55e314a81c6033f4",
  "patch": "diff --git a/src/Functions/ReplaceRegexpImpl.h b/src/Functions/ReplaceRegexpImpl.h\nindex 5d2549239c86..ad0ce08d9051 100644\n--- a/src/Functions/ReplaceRegexpImpl.h\n+++ b/src/Functions/ReplaceRegexpImpl.h\n@@ -137,8 +137,14 @@ struct ReplaceRegexpImpl\n \n                 if (replace_one)\n                     can_finish_current_string = true;\n-                else if (match.length() == 0)\n-                    ++match_pos; /// Step one character to avoid infinite loop.\n+\n+                if (match.length() == 0)\n+                {\n+                    /// Step one character to avoid infinite loop\n+                    ++match_pos;\n+                    if (match_pos >= static_cast<size_t>(input.length()))\n+                        can_finish_current_string = true;\n+                }\n             }\n             else\n                 can_finish_current_string = true;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.reference b/tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.reference\nindex e8183f05f5db..da7b788b1575 100644\n--- a/tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.reference\n+++ b/tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.reference\n@@ -1,3 +1,18 @@\n 1\n 1\n 1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\ndiff --git a/tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.sql b/tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.sql\nindex 6725fa041140..ebbc6ce97e0f 100644\n--- a/tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.sql\n+++ b/tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.sql\n@@ -1,3 +1,21 @@\n-select replaceRegexpAll(',,1,,', '^[,]*|[,]*$', '') x;\n-select replaceRegexpAll(',,1', '^[,]*|[,]*$', '') x;\n-select replaceRegexpAll('1,,', '^[,]*|[,]*$', '') x;\n+SELECT replaceRegexpAll(',,1,,', '^[,]*|[,]*$', '');\n+SELECT replaceRegexpAll(',,1', '^[,]*|[,]*$', '');\n+SELECT replaceRegexpAll('1,,', '^[,]*|[,]*$', '');\n+\n+SELECT replaceRegexpAll(materialize(',,1,,'), '^[,]*|[,]*$', '');\n+SELECT replaceRegexpAll(materialize(',,1'), '^[,]*|[,]*$', '');\n+SELECT replaceRegexpAll(materialize('1,,'), '^[,]*|[,]*$', '');\n+\n+SELECT replaceRegexpAll('a', 'z*', '') == 'a';\n+SELECT replaceRegexpAll('aa', 'z*', '') == 'aa';\n+SELECT replaceRegexpAll('aaq', 'z*', '') == 'aaq';\n+SELECT replaceRegexpAll('aazq', 'z*', '') == 'aaq';\n+SELECT replaceRegexpAll('aazzq', 'z*', '') == 'aaq';\n+SELECT replaceRegexpAll('aazzqa', 'z*', '') == 'aaqa';\n+\n+SELECT replaceRegexpAll(materialize('a'), 'z*', '') == 'a';\n+SELECT replaceRegexpAll(materialize('aa'), 'z*', '') == 'aa';\n+SELECT replaceRegexpAll(materialize('aaq'), 'z*', '') == 'aaq';\n+SELECT replaceRegexpAll(materialize('aazq'), 'z*', '') == 'aaq';\n+SELECT replaceRegexpAll(materialize('aazzq'), 'z*', '') == 'aaq';\n+SELECT replaceRegexpAll(materialize('aazzqa'), 'z*', '') == 'aaqa';\n",
  "problem_statement": "Bug in `replaceRegexpAll`\n```sql\r\nSELECT replaceRegexpAll('a', 'z*', '')\r\n```\r\n\r\n```\r\n\u250c\u2500replaceRegexpAll('a', 'z*', '')\u2500\u2510\r\n\u2502                                 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n```sql\r\nSELECT replaceRegexpAll('aaaa', 'z*', '')\r\n```\r\n\r\n```\r\n\u250c\u2500replaceRegexpAll('aaaa', 'z*', '')\u2500\u2510\r\n\u2502 aaa                                \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nPlease create another issue.\r\n\r\n_Originally posted by @alexey-milovidov in https://github.com/ClickHouse/ClickHouse/issues/35046#issuecomment-1061220789_\n",
  "hints_text": "",
  "created_at": "2022-03-10T13:33:39Z",
  "modified_files": [
    "src/Functions/ReplaceRegexpImpl.h"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.reference",
    "tests/queries/0_stateless/02151_replace_regexp_all_empty_match_alternative.sql"
  ]
}