{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 28873,
  "instance_id": "ClickHouse__ClickHouse-28873",
  "issue_numbers": [
    "28862"
  ],
  "base_commit": "5b967d91ba03f3f2f154507f7f57bf4ccb18abe6",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeReaderCompact.cpp b/src/Storages/MergeTree/MergeTreeReaderCompact.cpp\nindex 3a8119863cbe..122e7932507b 100644\n--- a/src/Storages/MergeTree/MergeTreeReaderCompact.cpp\n+++ b/src/Storages/MergeTree/MergeTreeReaderCompact.cpp\n@@ -219,7 +219,14 @@ void MergeTreeReaderCompact::readData(\n         auto serialization = type_in_storage->getDefaultSerialization();\n         serialization->deserializeBinaryBulkStatePrefix(deserialize_settings, state);\n         serialization->deserializeBinaryBulkWithMultipleStreams(temp_column, rows_to_read, deserialize_settings, state, nullptr);\n-        column = type_in_storage->getSubcolumn(name_and_type.getSubcolumnName(), *temp_column);\n+\n+        auto subcolumn = type_in_storage->getSubcolumn(name_and_type.getSubcolumnName(), *temp_column);\n+\n+        /// TODO: Avoid extra copying.\n+        if (column->empty())\n+            column = subcolumn;\n+        else\n+            column->assumeMutable()->insertRangeFrom(*subcolumn, 0, subcolumn->size());\n     }\n     else\n     {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02025_subcolumns_compact_parts.reference b/tests/queries/0_stateless/02025_subcolumns_compact_parts.reference\nnew file mode 100644\nindex 000000000000..431d62da742e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02025_subcolumns_compact_parts.reference\n@@ -0,0 +1,8 @@\n+0\n+0\n+0\n+0\n+0\n+0\n+40000\n+219970\ndiff --git a/tests/queries/0_stateless/02025_subcolumns_compact_parts.sql b/tests/queries/0_stateless/02025_subcolumns_compact_parts.sql\nnew file mode 100644\nindex 000000000000..7d1957a1efc6\n--- /dev/null\n+++ b/tests/queries/0_stateless/02025_subcolumns_compact_parts.sql\n@@ -0,0 +1,14 @@\n+DROP TABLE IF EXISTS t_comp_subcolumns;\n+\n+CREATE TABLE t_comp_subcolumns (id UInt32, n Nullable(String), arr Array(Array(UInt32)))\n+ENGINE = MergeTree ORDER BY id;\n+\n+INSERT INTO t_comp_subcolumns SELECT number, 'a', [range(number % 11), range(number % 13)] FROM numbers(20000);\n+\n+SELECT sum(n.null) FROM t_comp_subcolumns;\n+SELECT n.null FROM t_comp_subcolumns LIMIT 10000, 5;\n+\n+SELECT sum(arr.size0) FROM t_comp_subcolumns;\n+SELECT sumArray(arr.size1) FROM t_comp_subcolumns;\n+\n+DROP TABLE t_comp_subcolumns;\n",
  "problem_statement": "Invalid number of rows in Chunk column UInt8 position 0: \n**Describe what's wrong**\r\n\r\nNull sub column doesn't work.\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nYes.\r\n\r\n\r\n**How to reproduce**\r\n\r\nClickhouse version 21.8.5.7\r\nCompact part.\r\nNullable(String) column\r\n\r\nAll values in that column are non nullable\r\n\r\n```\r\nSELECT some_column_name.`null`\r\nFROM default.xxx_test_4\r\nLIMIT 8182, 10\r\n\r\n\r\n\r\n\u250c\u2500\u2500\u2500some_column_name.null\u2500\u2510\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2502                       0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n10 rows in set. Elapsed: 0.003 sec. Processed 8.19 thousand rows, 8.19 KB (2.46 million rows/s., 2.46 MB/s.)\r\n\r\nSELECT some_column_name.`null`\r\nFROM default.xxx_test_4\r\nLIMIT 8183, 10\r\n\r\nQuery id: 57433167-6bcf-4e67-8a0e-89a7c4640062\r\n\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nReceived exception from server (version 21.8.5):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Invalid number of rows in Chunk column UInt8 position 0: expected 11508, got 3316: While executing MergeTree.\r\n\r\n\r\nSELECT isNotNull(some_column_name)\r\nFROM default.xxx_test_4\r\nLIMIT 8183, 10\r\nSETTINGS optimize_functions_to_subcolumns = 0\r\n\r\n\u250c\u2500\u2500\u2500isNotNull(some_column_name)\u2500\u2510\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2502                             1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n10 rows in set. Elapsed: 0.002 sec. Processed 11.51 thousand rows, 287.70 KB (4.81 million rows/s., 120.15 MB/s.)\r\n\r\n\r\nSELECT isNotNull(some_column_name)\r\nFROM default.xxx_test_4\r\nLIMIT 8183, 10\r\nSETTINGS optimize_functions_to_subcolumns = 1\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\nReceived exception from server (version 21.8.5):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Invalid number of rows in Chunk column UInt8 position 0: expected 11508, got 3316: While executing MergeTree.\r\n```\r\n\r\n11508-3316=8192\r\n\r\n**Expected behavior**\r\n\r\nQuery works.\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x8f9a2ba in /usr/bin/clickhouse\r\n1. DB::Chunk::checkNumRowsIsConsistent() @ 0x11012245 in /usr/bin/clickhouse\r\n2. DB::MergeTreeBaseSelectProcessor::readFromPartImpl() @ 0x112689d0 in /usr/bin/clickhouse\r\n3. DB::MergeTreeBaseSelectProcessor::readFromPart() @ 0x1126916d in /usr/bin/clickhouse\r\n4. DB::MergeTreeBaseSelectProcessor::generate() @ 0x11267cab in /usr/bin/clickhouse\r\n5. DB::ISource::tryGenerate() @ 0x1101a335 in /usr/bin/clickhouse\r\n6. DB::ISource::work() @ 0x11019f1a in /usr/bin/clickhouse\r\n7. DB::SourceWithProgress::work() @ 0x111eb0ca in /usr/bin/clickhouse\r\n8. ? @ 0x110549dd in /usr/bin/clickhouse\r\n9. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x11051571 in /usr/bin/clickhouse\r\n10. DB::PipelineExecutor::executeImpl(unsigned long) @ 0x1104f5af in /usr/bin/clickhouse\r\n11. DB::PipelineExecutor::execute(unsigned long) @ 0x1104f38d in /usr/bin/clickhouse\r\n12. ? @ 0x1105c61f in /usr/bin/clickhouse\r\n13. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8fdaf3f in /usr/bin/clickhouse\r\n14. ? @ 0x8fde823 in /usr/bin/clickhouse\r\n15. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n16. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n```\r\n    \r\n**Additional context**\r\n\r\nRelated to https://github.com/ClickHouse/ClickHouse/issues/20218\r\n\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2021-09-10T17:20:22Z",
  "modified_files": [
    "src/Storages/MergeTree/MergeTreeReaderCompact.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02025_subcolumns_compact_parts.reference",
    "b/tests/queries/0_stateless/02025_subcolumns_compact_parts.sql"
  ]
}