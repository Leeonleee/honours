diff --git a/tests/queries/0_stateless/03152_join_filter_push_down_equivalent_columns.reference b/tests/queries/0_stateless/03152_join_filter_push_down_equivalent_columns.reference
new file mode 100644
index 000000000000..7058d36aaf9b
--- /dev/null
+++ b/tests/queries/0_stateless/03152_join_filter_push_down_equivalent_columns.reference
@@ -0,0 +1,91 @@
+-- { echoOn }
+
+EXPLAIN header = 1, indexes = 1
+SELECT name FROM users INNER JOIN users2 USING name WHERE users.name ='Alice';
+Expression ((Project names + (Projection + )))
+Header: name String
+  Join (JOIN FillRightFirst)
+  Header: __table1.name String
+    Filter (( + Change column names to column identifiers))
+    Header: __table1.name String
+      ReadFromMergeTree (default.users)
+      Header: name String
+      Indexes:
+        PrimaryKey
+          Keys: 
+            name
+          Condition: (name in [\'Alice\', \'Alice\'])
+          Parts: 1/3
+          Granules: 1/3
+    Filter (( + Change column names to column identifiers))
+    Header: __table2.name String
+      ReadFromMergeTree (default.users2)
+      Header: name String
+      Indexes:
+        PrimaryKey
+          Keys: 
+            name
+          Condition: (name in [\'Alice\', \'Alice\'])
+          Parts: 1/3
+          Granules: 1/3
+SELECT '--';
+--
+EXPLAIN header = 1, indexes = 1
+SELECT name FROM users LEFT JOIN users2 USING name WHERE users.name ='Alice';
+Expression ((Project names + (Projection + )))
+Header: name String
+  Join (JOIN FillRightFirst)
+  Header: __table1.name String
+    Filter (( + Change column names to column identifiers))
+    Header: __table1.name String
+      ReadFromMergeTree (default.users)
+      Header: name String
+      Indexes:
+        PrimaryKey
+          Keys: 
+            name
+          Condition: (name in [\'Alice\', \'Alice\'])
+          Parts: 1/3
+          Granules: 1/3
+    Filter (( + Change column names to column identifiers))
+    Header: __table2.name String
+      ReadFromMergeTree (default.users2)
+      Header: name String
+      Indexes:
+        PrimaryKey
+          Keys: 
+            name
+          Condition: (name in [\'Alice\', \'Alice\'])
+          Parts: 1/3
+          Granules: 1/3
+SELECT '--';
+--
+EXPLAIN header = 1, indexes = 1
+SELECT name FROM users RIGHT JOIN users2 USING name WHERE users2.name ='Alice';
+Expression ((Project names + (Projection + )))
+Header: name String
+  Join (JOIN FillRightFirst)
+  Header: __table1.name String
+          __table2.name String
+    Filter (( + Change column names to column identifiers))
+    Header: __table1.name String
+      ReadFromMergeTree (default.users)
+      Header: name String
+      Indexes:
+        PrimaryKey
+          Keys: 
+            name
+          Condition: (name in [\'Alice\', \'Alice\'])
+          Parts: 1/3
+          Granules: 1/3
+    Filter (( + Change column names to column identifiers))
+    Header: __table2.name String
+      ReadFromMergeTree (default.users2)
+      Header: name String
+      Indexes:
+        PrimaryKey
+          Keys: 
+            name
+          Condition: (name in [\'Alice\', \'Alice\'])
+          Parts: 1/3
+          Granules: 1/3
diff --git a/tests/queries/0_stateless/03152_join_filter_push_down_equivalent_columns.sql b/tests/queries/0_stateless/03152_join_filter_push_down_equivalent_columns.sql
new file mode 100644
index 000000000000..645e89034d78
--- /dev/null
+++ b/tests/queries/0_stateless/03152_join_filter_push_down_equivalent_columns.sql
@@ -0,0 +1,35 @@
+SET allow_experimental_analyzer = 1;
+
+DROP TABLE IF EXISTS users;
+CREATE TABLE users (uid Int16, name String, age Int16) ENGINE=MergeTree order by (uid, name);
+
+INSERT INTO users VALUES (1231, 'John', 33);
+INSERT INTO users VALUES (6666, 'Ksenia', 48);
+INSERT INTO users VALUES (8888, 'Alice', 50);
+
+DROP TABLE IF EXISTS users2;
+CREATE TABLE users2 (uid Int16, name String, age2 Int16) ENGINE=MergeTree order by (uid, name);
+
+INSERT INTO users2 VALUES (1231, 'John', 33);
+INSERT INTO users2 VALUES (6666, 'Ksenia', 48);
+INSERT INTO users2 VALUES (8888, 'Alice', 50);
+
+-- { echoOn }
+
+EXPLAIN header = 1, indexes = 1
+SELECT name FROM users INNER JOIN users2 USING name WHERE users.name ='Alice';
+
+SELECT '--';
+
+EXPLAIN header = 1, indexes = 1
+SELECT name FROM users LEFT JOIN users2 USING name WHERE users.name ='Alice';
+
+SELECT '--';
+
+EXPLAIN header = 1, indexes = 1
+SELECT name FROM users RIGHT JOIN users2 USING name WHERE users2.name ='Alice';
+
+-- { echoOff }
+
+DROP TABLE users;
+DROP TABLE users2;
