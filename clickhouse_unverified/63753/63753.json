{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 63753,
  "instance_id": "ClickHouse__ClickHouse-63753",
  "issue_numbers": [
    "63637"
  ],
  "base_commit": "03b47ddcbdf84f5af39775f52051352e17fe26f5",
  "patch": "diff --git a/src/Functions/FunctionsConversion.cpp b/src/Functions/FunctionsConversion.cpp\nindex c727ce663b32..beb7e6feb47b 100644\n--- a/src/Functions/FunctionsConversion.cpp\n+++ b/src/Functions/FunctionsConversion.cpp\n@@ -7,6 +7,7 @@\n #include <Columns/ColumnFixedString.h>\n #include <Columns/ColumnLowCardinality.h>\n #include <Columns/ColumnMap.h>\n+#include <Columns/ColumnNothing.h>\n #include <Columns/ColumnNullable.h>\n #include <Columns/ColumnObject.h>\n #include <Columns/ColumnString.h>\n@@ -3770,6 +3771,12 @@ class FunctionCast final : public IFunctionBase\n         }\n         else if (const auto * from_array = typeid_cast<const DataTypeArray *>(from_type_untyped.get()))\n         {\n+            if (typeid_cast<const DataTypeNothing *>(from_array->getNestedType().get()))\n+                return [nested = to_type->getNestedType()](ColumnsWithTypeAndName &, const DataTypePtr &, const ColumnNullable *, size_t size)\n+                {\n+                    return ColumnMap::create(nested->createColumnConstWithDefaultValue(size)->convertToFullColumnIfConst());\n+                };\n+\n             const auto * nested_tuple = typeid_cast<const DataTypeTuple *>(from_array->getNestedType().get());\n             if (!nested_tuple || nested_tuple->getElements().size() != 2)\n                 throw Exception(\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01787_map_remote.reference b/tests/queries/0_stateless/01787_map_remote.reference\nindex c7828769f9f7..c411899c87ce 100644\n--- a/tests/queries/0_stateless/01787_map_remote.reference\n+++ b/tests/queries/0_stateless/01787_map_remote.reference\n@@ -2,3 +2,6 @@\n {'a':1,'b':2}\n {'a':1,'b':2}\n {'a':1,'b':2}\n+{}\n+{}\n+{'':''}\ndiff --git a/tests/queries/0_stateless/01787_map_remote.sql b/tests/queries/0_stateless/01787_map_remote.sql\nindex 217308e5141d..e169ed627818 100644\n--- a/tests/queries/0_stateless/01787_map_remote.sql\n+++ b/tests/queries/0_stateless/01787_map_remote.sql\n@@ -1,2 +1,8 @@\n SELECT map('a', 1, 'b', 2) FROM remote('127.0.0.{1,2}', system, one);\n SELECT map('a', 1, 'b', 2) FROM remote('127.0.0.{1,2}');\n+\n+SELECT map() from remote('127.0.0.{1,2}', system,one);\n+\n+drop table if exists bug_repro_local;\n+CREATE TABLE bug_repro_local (`attributes` Map(LowCardinality(String), String)) ENGINE = Log as select map('','');\n+SELECT if(1, attributes, map()) from remote('127.0.0.{1,2}', currentDatabase(), bug_repro_local) limit 1;\n",
  "problem_statement": "map inside if statement with default empty map value fails when accessed through distributed table\nclickhouse version: 24.4.1.2088\r\n\r\nUsing `if(..., some_map, map())` appears to fail with `allow_experimental_analyzer=1` when queried through a distributed table.\r\n\r\nour setup:\r\n\r\ncreate table:\r\n```sql\r\n    `resource_attributes` Map(LowCardinality(String), String) CODEC(ZSTD(1)),\r\n```\r\n\r\n```sql\r\n-- Query through distributed table, analyzer on\r\n\r\nSELECT if(1, resource_attributes, map())\r\nFROM tracing.otel_traces\r\nLIMIT 1\r\nFORMAT `Null`\r\nSETTINGS allow_experimental_analyzer = 1\r\n\r\nReceived exception from server (version 24.4.1):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column if(1_UInt8, __table1.resource_attributes, _CAST([]_Map(Nothing, Nothing), 'Map(Nothing, Nothing)'_String)) in block. There are only columns: __table1.resource_attributes: While executing Remote. (NOT_FOUND_COLUMN_IN_BLOCK)\r\n\r\n\r\n-- Query through distributed table, analyzer off\r\nSELECT if(1, resource_attributes, map())\r\nFROM tracing.otel_traces\r\nLIMIT 1\r\nFORMAT `Null`\r\nSETTINGS allow_experimental_analyzer = 0\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.833 sec.\r\n\r\n\r\n-- Query through local table, analyzer on\r\nSELECT if(1, resource_attributes, map())\r\nFROM tracing.otel_traces_local\r\nLIMIT 1\r\nSETTINGS allow_experimental_analyzer = 1\r\n\r\nQuery id: e209cf69-2621-476a-8b25-c1e5ed1f5e78\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.001 sec.\r\n```\r\n\r\nThis should reproduce it from what I am seeing:\r\n\r\n```sql\r\nCREATE TABLE default.bug_repro_local\r\n(\r\n    `id` String CODEC(ZSTD(1)),\r\n    `attributes` Map(LowCardinality(String), String) CODEC(ZSTD(1))\r\n)\r\nENGINE = MergeTree\r\nORDER BY (id);\r\n\r\nCREATE TABLE default.bug_repro\r\n(\r\n    `id` String CODEC(ZSTD(1)),\r\n    `attributes` Map(LowCardinality(String), String) CODEC(ZSTD(1))\r\n)\r\nENGINE = Distributed('all-shards', 'default', 'bug_repro_local', rand());\r\n\r\nSELECT if(1, attributes, map()) from default.bug_repro limit 1 SETTINGS allow_experimental_analyzer=1;\r\nSELECT if(1, attributes, map()) from default.bug_repro limit 1 SETTINGS allow_experimental_analyzer=0;\r\nSELECT if(1, attributes, map()) from default.bug_repro_local limit 1 SETTINGS allow_experimental_analyzer=1;\r\n```\r\n\r\n\n",
  "hints_text": "```\r\nSELECT map() \r\nfrom remote('127.0.0.{1,2}', system,one)\r\nSETTINGS allow_experimental_analyzer=0\r\n{}\r\n{}\r\n\r\n\r\nSELECT map() \r\nfrom remote('127.0.0.{1,2}', system,one)\r\nSETTINGS allow_experimental_analyzer=1\r\n\r\nDB::Exception: CAST AS Map from array requires nested tuple of 2 elements.\r\n```\r\nhttps://fiddle.clickhouse.com/535fe5c1-b10a-465d-bb27-0146058c6a5d\r\n\r\n\r\n```\r\nCREATE TABLE bug_repro_local\r\n(\r\n    `attributes` Map(LowCardinality(String), String)\r\n)\r\nENGINE = Memory as select map('','');\r\n\r\nSELECT if(1, attributes, map()) \r\nfrom remote('127.0.0.{1,2}', default,bug_repro_local)\r\nlimit 1 SETTINGS allow_experimental_analyzer=0\r\nformat Pretty;\r\n\r\n   +------------+\r\n   | attributes |\r\n   +------------+\r\n1. | {'':''}    |\r\n   +------------+\r\n\r\n\r\nSELECT if(1, attributes, map()) \r\nfrom remote('127.0.0.{1,2}', default,bug_repro_local)\r\nlimit 1 SETTINGS allow_experimental_analyzer=1\r\nformat Pretty;\r\n\r\nDB::Exception: Not found column if(1_UInt8, __table1.attributes,\r\n```\r\n\r\n\r\nhttps://fiddle.clickhouse.com/160b5196-2915-4f60-95ba-a9a85e05044e",
  "created_at": "2024-05-14T10:44:42Z"
}