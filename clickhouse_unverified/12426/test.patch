diff --git a/src/Storages/tests/gtest_storage_log.cpp b/src/Storages/tests/gtest_storage_log.cpp
index c97adaf118d7..13c96fbab542 100644
--- a/src/Storages/tests/gtest_storage_log.cpp
+++ b/src/Storages/tests/gtest_storage_log.cpp
@@ -31,7 +31,7 @@ DB::StoragePtr createStorage(DB::DiskPtr & disk)
     names_and_types.emplace_back("a", std::make_shared<DataTypeUInt64>());
 
     StoragePtr table = StorageLog::create(
-        disk, "table/", StorageID("test", "test"), ColumnsDescription{names_and_types}, ConstraintsDescription{}, 1048576);
+        disk, "table/", StorageID("test", "test"), ColumnsDescription{names_and_types}, ConstraintsDescription{}, false, 1048576);
 
     table->startup();
 
@@ -100,6 +100,7 @@ std::string writeData(int rows, DB::StoragePtr & table, const DB::Context & cont
 
     BlockOutputStreamPtr out = table->write({}, metadata_snapshot, context);
     out->write(block);
+    out->writeSuffix();
 
     return data;
 }
@@ -115,7 +116,8 @@ std::string readData(DB::StoragePtr & table, const DB::Context & context)
 
     QueryProcessingStage::Enum stage = table->getQueryProcessingStage(context);
 
-    BlockInputStreamPtr in = std::make_shared<TreeExecutorBlockInputStream>(std::move(table->read(column_names, metadata_snapshot, {}, context, stage, 8192, 1)[0]));
+    BlockInputStreamPtr in = std::make_shared<TreeExecutorBlockInputStream>(
+        std::move(table->read(column_names, metadata_snapshot, {}, context, stage, 8192, 1)[0]));
 
     Block sample;
     {
diff --git a/tests/queries/0_stateless/01383_log_broken_table.reference b/tests/queries/0_stateless/01383_log_broken_table.reference
new file mode 100644
index 000000000000..1bc7c914e46a
--- /dev/null
+++ b/tests/queries/0_stateless/01383_log_broken_table.reference
@@ -0,0 +1,3 @@
+Testing TinyLog
+Testing StripeLog
+Testing Log
diff --git a/tests/queries/0_stateless/01383_log_broken_table.sh b/tests/queries/0_stateless/01383_log_broken_table.sh
new file mode 100755
index 000000000000..2afac11e7c2e
--- /dev/null
+++ b/tests/queries/0_stateless/01383_log_broken_table.sh
@@ -0,0 +1,40 @@
+#!/usr/bin/env bash
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+CLICKHOUSE_CLIENT_SERVER_LOGS_LEVEL=none
+. $CURDIR/../shell_config.sh
+
+
+function test()
+{
+    ENGINE=$1
+    MAX_MEM=4096
+
+    echo "Testing $ENGINE"
+
+    $CLICKHOUSE_CLIENT --query "DROP TABLE IF EXISTS log";
+    $CLICKHOUSE_CLIENT --query "CREATE TABLE log (x UInt64, y UInt64, z UInt64) ENGINE = $ENGINE";
+
+    while true; do
+        MAX_MEM=$((2 * $MAX_MEM))
+
+        $CLICKHOUSE_CLIENT --query "INSERT INTO log SELECT number, number, number FROM numbers(1000000)" --max_memory_usage $MAX_MEM > ${CLICKHOUSE_TMP}/insert_result 2>&1
+
+        grep -o -F 'Memory limit' ${CLICKHOUSE_TMP}/insert_result || cat ${CLICKHOUSE_TMP}/insert_result
+
+        $CLICKHOUSE_CLIENT --query "SELECT count(), sum(x + y + z) FROM log" > ${CLICKHOUSE_TMP}/select_result 2>&1;
+
+        grep -o -F 'File not found' ${CLICKHOUSE_TMP}/select_result || cat ${CLICKHOUSE_TMP}/select_result
+
+        [[ $MAX_MEM -gt 200000000 ]] && break;
+    done
+
+    $CLICKHOUSE_CLIENT --query "DROP TABLE log";
+}
+
+test TinyLog | grep -v -P '^(Memory limit|0\t0|File not found|[1-9]000000\t)'
+test StripeLog | grep -v -P '^(Memory limit|0\t0|File not found|[1-9]000000\t)'
+test Log | grep -v -P '^(Memory limit|0\t0|File not found|[1-9]000000\t)'
+
+rm "${CLICKHOUSE_TMP}/insert_result"
+rm "${CLICKHOUSE_TMP}/select_result"
