diff --git a/tests/queries/0_stateless/00205_emptyscalar_subquery_type_mismatch_bug.reference b/tests/queries/0_stateless/00205_emptyscalar_subquery_type_mismatch_bug.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/00205_emptyscalar_subquery_type_mismatch_bug.sql b/tests/queries/0_stateless/00205_emptyscalar_subquery_type_mismatch_bug.sql
new file mode 100644
index 000000000000..aeac6be7d8fb
--- /dev/null
+++ b/tests/queries/0_stateless/00205_emptyscalar_subquery_type_mismatch_bug.sql
@@ -0,0 +1,38 @@
+
+-- Bug reproduction form #25411
+WITH a AS (select (select 1 WHERE 0) as b)
+select 1
+from system.one
+cross join a
+where a.b = 0;
+
+-- Reported query
+drop table if exists t_q1ht4gq_5;
+create table t_q1ht4gq_5 (c_zeij INTEGER NOT NULL, c_fehk75l TEXT, c_jz TEXT, c_wynzuek TEXT, c_nkt INTEGER NOT NULL, c_g TEXT, c_mc2 TEXT, primary key(c_nkt)) engine = MergeTree();
+WITH
+cte_0 AS (select
+    subq_0.c6 as c2,
+    case when 0<>0 then ((select c_zeij from t_q1ht4gq_5 order by c_zeij limit 1 offset 1)
+           + subq_0.c4) else ((select c_zeij from t_q1ht4gq_5 order by c_zeij limit 1 offset 1)
+           + subq_0.c4) end as c4
+  from
+    (select
+          ref_0.c_nkt as c4,
+          ref_0.c_nkt as c6
+        from
+          t_q1ht4gq_5 as ref_0
+        ) as subq_0
+  )
+select
+    ref_12.c_zeij as c3
+  from
+    t_q1ht4gq_5 as ref_12
+  where (ref_12.c_jz not in (
+          select
+              ref_14.c_mc2 as c0
+            from
+              t_q1ht4gq_5 as ref_14
+                cross join cte_0 as ref_15
+            where ref_15.c4 > ref_15.c2));
+
+drop table if exists t_q1ht4gq_5;
diff --git a/tests/queries/0_stateless/00205_scalar_subqueries.reference b/tests/queries/0_stateless/00205_scalar_subqueries.reference
index 7b3ebbc75191..3e18045c8eda 100644
--- a/tests/queries/0_stateless/00205_scalar_subqueries.reference
+++ b/tests/queries/0_stateless/00205_scalar_subqueries.reference
@@ -3,3 +3,6 @@
 1	1
 ('2015-01-02','Hello')
 ('2015-01-02','Hello')	('2015-01-02','Hello')	1	1
+\N
+(1,2)
+[1]
diff --git a/tests/queries/0_stateless/00205_scalar_subqueries.sql b/tests/queries/0_stateless/00205_scalar_subqueries.sql
index 03bcd0a3ebce..c6cece662446 100644
--- a/tests/queries/0_stateless/00205_scalar_subqueries.sql
+++ b/tests/queries/0_stateless/00205_scalar_subqueries.sql
@@ -8,3 +8,14 @@ SELECT (SELECT toDate('2015-01-02'), 'Hello') AS x, x, identity((SELECT 1)), ide
 -- SELECT (SELECT uniqState(''));
 
  SELECT ( SELECT throwIf(1 + dummy) );  -- { serverError 395 }
+
+-- Scalar subquery with 0 rows must return Null
+SELECT (SELECT 1 WHERE 0);
+-- But tuple and array can't be inside nullable
+SELECT (SELECT 1, 2 WHERE 0); -- { serverError 125 }
+SELECT (SELECT [1] WHERE 0); -- { serverError 125 }
+-- Works for not-empty casle
+SELECT (SELECT 1, 2);
+SELECT (SELECT [1]);
+-- Several rows
+SELECT (SELECT number FROM numbers(2)); -- { serverError 125 }
diff --git a/tests/queries/0_stateless/00597_push_down_predicate_long.reference b/tests/queries/0_stateless/00597_push_down_predicate_long.reference
index bd7d3cd81d46..3eaa1139c5df 100644
--- a/tests/queries/0_stateless/00597_push_down_predicate_long.reference
+++ b/tests/queries/0_stateless/00597_push_down_predicate_long.reference
@@ -114,7 +114,7 @@ FROM
 (
     SELECT
         1 AS id,
-        identity(CAST(1, \'UInt8\')) AS subquery
+        identity(CAST(1, \'Nullable(UInt8)\')) AS subquery
     WHERE subquery = 1
 )
 WHERE subquery = 1
diff --git a/tests/queries/0_stateless/01029_early_constant_folding.reference b/tests/queries/0_stateless/01029_early_constant_folding.reference
index 6063e08afe03..88139b7e2b80 100644
--- a/tests/queries/0_stateless/01029_early_constant_folding.reference
+++ b/tests/queries/0_stateless/01029_early_constant_folding.reference
@@ -2,7 +2,7 @@ SELECT 1
 WHERE 0
 SELECT 1
 SELECT 1
-WHERE (1 IN (0, 2)) AND (2 = (identity(CAST(2, \'UInt8\')) AS subquery))
+WHERE (1 IN (0, 2)) AND (2 = (identity(CAST(2, \'Nullable(UInt8)\')) AS subquery))
 SELECT 1
 WHERE 1 IN ((
     SELECT arrayJoin([1, 2, 3])
diff --git a/tests/queries/0_stateless/01611_constant_folding_subqueries.reference b/tests/queries/0_stateless/01611_constant_folding_subqueries.reference
index e46fd479413e..6128cd109e2f 100644
--- a/tests/queries/0_stateless/01611_constant_folding_subqueries.reference
+++ b/tests/queries/0_stateless/01611_constant_folding_subqueries.reference
@@ -5,7 +5,7 @@ SELECT (SELECT * FROM system.numbers LIMIT 1 OFFSET 1) AS n, toUInt64(10 / n) FO
 1,10
 EXPLAIN SYNTAX SELECT (SELECT * FROM system.numbers LIMIT 1 OFFSET 1) AS n, toUInt64(10 / n);
 SELECT
-    identity(CAST(0, \'UInt64\')) AS n,
+    identity(CAST(0, \'Nullable(UInt64)\')) AS n,
     toUInt64(10 / n)
 SELECT * FROM (WITH (SELECT * FROM system.numbers LIMIT 1 OFFSET 1) AS n, toUInt64(10 / n) as q SELECT * FROM system.one WHERE q > 0);
 0
diff --git a/tests/queries/0_stateless/01651_bugs_from_15889.reference b/tests/queries/0_stateless/01651_bugs_from_15889.reference
index 77ac542d4fbf..8b137891791f 100644
--- a/tests/queries/0_stateless/01651_bugs_from_15889.reference
+++ b/tests/queries/0_stateless/01651_bugs_from_15889.reference
@@ -1,2 +1,1 @@
-0
 
diff --git a/tests/queries/0_stateless/01651_bugs_from_15889.sql b/tests/queries/0_stateless/01651_bugs_from_15889.sql
index d0f1006da95d..4717a8dcc0d5 100644
--- a/tests/queries/0_stateless/01651_bugs_from_15889.sql
+++ b/tests/queries/0_stateless/01651_bugs_from_15889.sql
@@ -55,7 +55,7 @@ WHERE (query_id =
     WHERE current_database = currentDatabase() AND (query LIKE '%test cpu time query profiler%') AND (query NOT LIKE '%system%')
     ORDER BY event_time DESC
     LIMIT 1
-)) AND (symbol LIKE '%Source%');
+)) AND (symbol LIKE '%Source%'); -- { serverError 125 }
 
 
 WITH addressToSymbol(arrayJoin(trace)) AS symbol
@@ -70,7 +70,7 @@ WHERE greaterOrEquals(event_date, ignore(ignore(ignore(NULL, '')), 256), yesterd
     WHERE current_database = currentDatabase() AND (event_date >= yesterday()) AND (query LIKE '%test memory profiler%')
     ORDER BY event_time DESC
     LIMIT 1
-)); -- { serverError 42 }
+)); -- { serverError 125 }
 
 DROP TABLE IF EXISTS trace_log;
 
diff --git a/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.reference b/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.reference
index 65b7bf54f7ff..972f4c89bdfe 100644
--- a/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.reference
+++ b/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.reference
@@ -1,17 +1,17 @@
 (0, 2)
 0	0
 0	0
-WITH CAST(\'default\', \'String\') AS id_no SELECT one.dummy, ignore(id_no) FROM system.one WHERE dummy IN (0, 2)
-WITH CAST(\'default\', \'String\') AS id_no SELECT one.dummy, ignore(id_no) FROM system.one WHERE dummy IN (0, 2)
+WITH CAST(\'default\', \'Nullable(String)\') AS id_no SELECT one.dummy, ignore(id_no) FROM system.one WHERE dummy IN (0, 2)
+WITH CAST(\'default\', \'Nullable(String)\') AS id_no SELECT one.dummy, ignore(id_no) FROM system.one WHERE dummy IN (0, 2)
 optimize_skip_unused_shards_rewrite_in(0, 2)
 0	0
-WITH CAST(\'default\', \'String\') AS id_02 SELECT one.dummy, ignore(id_02) FROM system.one WHERE dummy IN tuple(0)
-WITH CAST(\'default\', \'String\') AS id_02 SELECT one.dummy, ignore(id_02) FROM system.one WHERE dummy IN tuple(2)
+WITH CAST(\'default\', \'Nullable(String)\') AS id_02 SELECT one.dummy, ignore(id_02) FROM system.one WHERE dummy IN tuple(0)
+WITH CAST(\'default\', \'Nullable(String)\') AS id_02 SELECT one.dummy, ignore(id_02) FROM system.one WHERE dummy IN tuple(2)
 optimize_skip_unused_shards_rewrite_in(2,)
-WITH CAST(\'default\', \'String\') AS id_2 SELECT one.dummy, ignore(id_2) FROM system.one WHERE dummy IN tuple(2)
+WITH CAST(\'default\', \'Nullable(String)\') AS id_2 SELECT one.dummy, ignore(id_2) FROM system.one WHERE dummy IN tuple(2)
 optimize_skip_unused_shards_rewrite_in(0,)
 0	0
-WITH CAST(\'default\', \'String\') AS id_0 SELECT one.dummy, ignore(id_0) FROM system.one WHERE dummy IN tuple(0)
+WITH CAST(\'default\', \'Nullable(String)\') AS id_0 SELECT one.dummy, ignore(id_0) FROM system.one WHERE dummy IN tuple(0)
 0
 0
 errors
