diff --git a/tests/performance/reinterpret_as.xml b/tests/performance/reinterpret_as.xml
new file mode 100644
index 000000000000..50cf0cb22781
--- /dev/null
+++ b/tests/performance/reinterpret_as.xml
@@ -0,0 +1,257 @@
+<test max_ignored_relative_change="0.2">
+    <settings>
+        <allow_experimental_bigint_types>1</allow_experimental_bigint_types>
+        <max_memory_usage>15G</max_memory_usage>
+    </settings>
+
+    <query>
+        SELECT
+            reinterpretAsUInt8(a),
+            reinterpretAsUInt8(b),
+            reinterpretAsUInt8(c),
+            reinterpretAsUInt8(d),
+            reinterpretAsUInt8(f),
+            reinterpretAsUInt8(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsUInt16(a),
+            reinterpretAsUInt16(b),
+            reinterpretAsUInt16(c),
+            reinterpretAsUInt16(d),
+            reinterpretAsUInt16(f),
+            reinterpretAsUInt16(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsUInt32(a),
+            reinterpretAsUInt32(b),
+            reinterpretAsUInt32(c),
+            reinterpretAsUInt32(d),
+            reinterpretAsUInt32(f),
+            reinterpretAsUInt32(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsUInt64(a),
+            reinterpretAsUInt64(b),
+            reinterpretAsUInt64(c),
+            reinterpretAsUInt64(d),
+            reinterpretAsUInt64(f),
+            reinterpretAsUInt64(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsUInt256(a),
+            reinterpretAsUInt256(b),
+            reinterpretAsUInt256(c),
+            reinterpretAsUInt256(d),
+            reinterpretAsUInt256(f),
+            reinterpretAsUInt256(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+
+    <query>
+        SELECT
+            reinterpretAsInt8(a),
+            reinterpretAsInt8(b),
+            reinterpretAsInt8(c),
+            reinterpretAsInt8(d),
+            reinterpretAsInt8(f),
+            reinterpretAsInt8(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsInt16(a),
+            reinterpretAsInt16(b),
+            reinterpretAsInt16(c),
+            reinterpretAsInt16(d),
+            reinterpretAsInt16(f),
+            reinterpretAsInt16(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsInt32(a),
+            reinterpretAsInt32(b),
+            reinterpretAsInt32(c),
+            reinterpretAsInt32(d),
+            reinterpretAsInt32(f),
+            reinterpretAsInt32(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsInt64(a),
+            reinterpretAsInt64(b),
+            reinterpretAsInt64(c),
+            reinterpretAsInt64(d),
+            reinterpretAsInt64(f),
+            reinterpretAsInt64(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsInt128(a),
+            reinterpretAsInt128(b),
+            reinterpretAsInt128(c),
+            reinterpretAsInt128(d),
+            reinterpretAsInt128(f),
+            reinterpretAsInt128(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    <query>
+        SELECT
+            reinterpretAsInt256(a),
+            reinterpretAsInt256(b),
+            reinterpretAsInt256(c),
+            reinterpretAsInt256(d),
+            reinterpretAsInt256(f),
+            reinterpretAsInt256(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+
+    <query>
+        SELECT
+            reinterpretAsString(a),
+            reinterpretAsString(b),
+            reinterpretAsString(c),
+            reinterpretAsString(d),
+            reinterpretAsString(f),
+            reinterpretAsString(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+    
+    <query>
+         SELECT
+            reinterpretAsFixedString(a),
+            reinterpretAsFixedString(b),
+            reinterpretAsFixedString(c),
+            reinterpretAsFixedString(d),
+            reinterpretAsFixedString(g),
+
+            toUInt64(number) as a,
+            toUInt256(number) as b,
+            toInt128(number) as c,
+            toInt256(number) as d,
+            toString(number) as f,
+            toFixedString(f, 20) as g
+        FROM numbers_mt(200000000)
+        SETTINGS max_threads = 8
+        FORMAT Null
+    </query>
+
+</test>
diff --git a/tests/queries/0_stateless/01676_reinterpret_as.reference b/tests/queries/0_stateless/01676_reinterpret_as.reference
new file mode 100644
index 000000000000..bbde2d5ed575
--- /dev/null
+++ b/tests/queries/0_stateless/01676_reinterpret_as.reference
@@ -0,0 +1,30 @@
+Into String
+1
+Into FixedString
+1
+1\0
+1\0\0
+1\0\0\0
+1
+Into Numeric Representable
+Integer and Integer types
+1	1
+1	1
+257	257
+257	257
+257	257
+257	257
+257	257
+257	257
+257	257
+257	257
+257	257
+Integer and Float types
+1045220557	1045220557
+4596373779694328218	4596373779694328218
+0.2	1045220557
+0.2	4596373779694328218
+Integer and String types
+1	49
+1	49
+11	12593
diff --git a/tests/queries/0_stateless/01676_reinterpret_as.sql b/tests/queries/0_stateless/01676_reinterpret_as.sql
new file mode 100644
index 000000000000..88dc64370439
--- /dev/null
+++ b/tests/queries/0_stateless/01676_reinterpret_as.sql
@@ -0,0 +1,30 @@
+SELECT 'Into String';
+SELECT reinterpretAs(49, 'String');
+SELECT 'Into FixedString';
+SELECT reinterpretAs(49, 'FixedString(1)');
+SELECT reinterpretAs(49, 'FixedString(2)');
+SELECT reinterpretAs(49, 'FixedString(3)');
+SELECT reinterpretAs(49, 'FixedString(4)');
+SELECT reinterpretAsFixedString(49);
+SELECT 'Into Numeric Representable';
+SELECT 'Integer and Integer types';
+SELECT reinterpretAs(257, 'UInt8'), reinterpretAsUInt8(257);
+SELECT reinterpretAs(257, 'Int8'), reinterpretAsInt8(257);
+SELECT reinterpretAs(257, 'UInt16'), reinterpretAsUInt16(257);
+SELECT reinterpretAs(257, 'Int16'), reinterpretAsInt16(257);
+SELECT reinterpretAs(257, 'UInt32'), reinterpretAsUInt32(257);
+SELECT reinterpretAs(257, 'Int32'), reinterpretAsInt32(257);
+SELECT reinterpretAs(257, 'UInt64'), reinterpretAsUInt64(257);
+SELECT reinterpretAs(257, 'Int64'), reinterpretAsInt64(257);
+SELECT reinterpretAs(257, 'Int128'), reinterpretAsInt128(257);
+SELECT reinterpretAs(257, 'UInt256'), reinterpretAsUInt256(257);
+SELECT reinterpretAs(257, 'Int256'), reinterpretAsInt256(257);
+SELECT 'Integer and Float types';
+SELECT reinterpretAs(toFloat32(0.2), 'UInt32'), reinterpretAsUInt32(toFloat32(0.2));
+SELECT reinterpretAs(toFloat64(0.2), 'UInt64'), reinterpretAsUInt64(toFloat64(0.2));
+SELECT reinterpretAsFloat32(a), reinterpretAsUInt32(toFloat32(0.2)) as a;
+SELECT reinterpretAsFloat64(a), reinterpretAsUInt64(toFloat64(0.2)) as a;
+SELECT 'Integer and String types';
+SELECT reinterpretAsString(a), reinterpretAsUInt8('1') as a;
+SELECT reinterpretAsString(a), reinterpretAsUInt8('11') as a;
+SELECT reinterpretAsString(a), reinterpretAsUInt16('11') as a;
