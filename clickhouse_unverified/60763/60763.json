{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 60763,
  "instance_id": "ClickHouse__ClickHouse-60763",
  "issue_numbers": [
    "60366"
  ],
  "base_commit": "fb02137fcc35799d9444d56c45db39afc68c131e",
  "patch": "diff --git a/src/Functions/DateTimeTransforms.h b/src/Functions/DateTimeTransforms.h\nindex 5467cf770851..2c5d8add0db9 100644\n--- a/src/Functions/DateTimeTransforms.h\n+++ b/src/Functions/DateTimeTransforms.h\n@@ -538,7 +538,7 @@ struct ToStartOfInterval<IntervalKind::Microsecond>\n         {\n             Int64 scale_diff = scale_multiplier / static_cast<Int64>(1000000);\n             if (t >= 0) [[likely]] /// When we divide the `t` value we should round the result\n-                return (t / microseconds + scale_diff / 2) / scale_diff * microseconds;\n+                return (t + scale_diff / 2) / (microseconds * scale_diff) * microseconds;\n             else\n                 return ((t + 1) / microseconds / scale_diff - 1) * microseconds;\n         }\n@@ -581,7 +581,7 @@ struct ToStartOfInterval<IntervalKind::Millisecond>\n         {\n             Int64 scale_diff = scale_multiplier / static_cast<Int64>(1000);\n             if (t >= 0) [[likely]]  /// When we divide the `t` value we should round the result\n-                return (t / milliseconds + scale_diff / 2) / scale_diff * milliseconds;\n+                return (t + scale_diff / 2) / (milliseconds * scale_diff) * milliseconds;\n             else\n                 return ((t + 1) / milliseconds / scale_diff - 1) * milliseconds;\n         }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02956_fix_to_start_of_milli_microsecond.reference b/tests/queries/0_stateless/02956_fix_to_start_of_milli_microsecond.reference\nindex d3a002c4fd4e..413c79828c7f 100644\n--- a/tests/queries/0_stateless/02956_fix_to_start_of_milli_microsecond.reference\n+++ b/tests/queries/0_stateless/02956_fix_to_start_of_milli_microsecond.reference\n@@ -2,3 +2,6 @@\n 2023-10-09 10:11:12.001\n 2023-10-09 10:11:12.000\n 2023-10-09 10:11:12.000\n+2023-10-09 00:00:00.000000\n+2023-10-09 00:00:00.000\n+2023-10-09 00:00:00\ndiff --git a/tests/queries/0_stateless/02956_fix_to_start_of_milli_microsecond.sql b/tests/queries/0_stateless/02956_fix_to_start_of_milli_microsecond.sql\nindex 178f21a9e63a..15753d4532c3 100644\n--- a/tests/queries/0_stateless/02956_fix_to_start_of_milli_microsecond.sql\n+++ b/tests/queries/0_stateless/02956_fix_to_start_of_milli_microsecond.sql\n@@ -1,4 +1,7 @@\n SELECT toStartOfInterval(toDateTime64('2023-10-09 10:11:12.000999', 6), toIntervalMillisecond(1));\n SELECT toStartOfInterval(toDateTime64('2023-10-09 10:11:12.000500', 6), toIntervalMillisecond(1));\n SELECT toStartOfInterval(toDateTime64('2023-10-09 10:11:12.000499', 6), toIntervalMillisecond(1));\n-SELECT toStartOfInterval(toDateTime64('2023-10-09 10:11:12.000999', 6), toIntervalMillisecond(10));\n\\ No newline at end of file\n+SELECT toStartOfInterval(toDateTime64('2023-10-09 10:11:12.000999', 6), toIntervalMillisecond(10));\n+select toStartOfInterval(toDateTime64('2023-10-09 00:01:34', 9), toIntervalMicrosecond(100000000));\n+select toStartOfInterval(toDateTime64('2023-10-09 00:01:34', 9), toIntervalMillisecond(100000));\n+select toStartOfInterval(toDateTime64('2023-10-09 00:01:34', 9), toIntervalSecond(100));\n\\ No newline at end of file\n",
  "problem_statement": "toStartOfInterval returns wrong result when interval is in miliseconds\nThe following two queries return different values with Clickhouse server 24.1\r\n`select toStartOfInterval(toDateTime64('2015-01-01 00:01:34', 9), interval 100000 MILLISECONDS)`\r\n`select toStartOfInterval(toDateTime64('2015-01-01 00:01:34', 9), interval 100 second)`\r\n\r\nhttps://fiddle.clickhouse.com/00959742-a277-4ff9-9c37-28315f3fbc53\r\n\r\nThe second version is correct.\r\n\r\nThis issue doesn't exist with 23.12 or prior version.\n",
  "hints_text": "https://clickhouse.com/docs/en/whats-new/changelog/2021#backward-incompatible-change-7\n@zvonand, PTAL.\nAny findings on this issue?\nIt is probably one of the inaccurate changes by @zvonand or @Enmk.\r\n\r\n@zvonand, @Enmk, please at least explain this behavior and add tests.\n> It is probably one of the inaccurate changes by @zvonand or @Enmk.\n\nHavent touched this for ages, at least since 23.12 \nThe issue only appeared in 24.1\nHowever, I'll take a look, but later\nCheck this: https://github.com/ClickHouse/ClickHouse/pull/58557\n> Check this: https://github.com/ClickHouse/ClickHouse/pull/58557\n\nLooks like a related one, tnx\n@zvonand, could you please fix it and add a test?\n> @zvonand, could you please fix it and add a test?\r\n\r\nI'll take a look on Monday\nYes, it was broken by #58557. Looking into it now.\r\nCC @yariks5s ",
  "created_at": "2024-03-04T11:55:37Z"
}