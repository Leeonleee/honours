diff --git a/tests/integration/test_compressed_marks_restart/__init__.py b/tests/integration/test_compressed_marks_restart/__init__.py
new file mode 100644
index 000000000000..e5a0d9b4834e
--- /dev/null
+++ b/tests/integration/test_compressed_marks_restart/__init__.py
@@ -0,0 +1,1 @@
+#!/usr/bin/env python3
diff --git a/tests/integration/test_compressed_marks_restart/test.py b/tests/integration/test_compressed_marks_restart/test.py
new file mode 100644
index 000000000000..90e09d62792b
--- /dev/null
+++ b/tests/integration/test_compressed_marks_restart/test.py
@@ -0,0 +1,58 @@
+#!/usr/bin/env python3
+import pytest
+from helpers.cluster import ClickHouseCluster
+
+cluster = ClickHouseCluster(__file__)
+node = cluster.add_instance("node", stay_alive=True)
+
+
+@pytest.fixture(scope="module", autouse=True)
+def started_cluster():
+    try:
+        cluster.start()
+        yield cluster
+
+    finally:
+        cluster.shutdown()
+
+
+def test_compressed_marks_restart_compact():
+    node.query(
+        "create table test_02381_compact (a UInt64, b String) ENGINE = MergeTree order by (a, b)"
+    )
+    node.query("insert into test_02381_compact values (1, 'Hello')")
+    node.query(
+        "alter table test_02381_compact modify setting compress_marks=true, compress_primary_key=true"
+    )
+    node.query("insert into test_02381_compact values (2, 'World')")
+    node.query("optimize table test_02381_compact final")
+
+    assert (
+        node.query("SELECT count() FROM test_02381_compact WHERE not ignore(*)")
+        == "2
"
+    )
+    node.restart_clickhouse()
+    assert (
+        node.query("SELECT count() FROM test_02381_compact WHERE not ignore(*)")
+        == "2
"
+    )
+
+
+def test_compressed_marks_restart_wide():
+    node.query(
+        "create table test_02381_wide (a UInt64, b String) ENGINE = MergeTree order by (a, b) SETTINGS min_bytes_for_wide_part=0"
+    )
+    node.query("insert into test_02381_wide values (1, 'Hello')")
+    node.query(
+        "alter table test_02381_wide modify setting compress_marks=true, compress_primary_key=true"
+    )
+    node.query("insert into test_02381_wide values (2, 'World')")
+    node.query("optimize table test_02381_wide final")
+
+    assert (
+        node.query("SELECT count() FROM test_02381_wide WHERE not ignore(*)") == "2
"
+    )
+    node.restart_clickhouse()
+    assert (
+        node.query("SELECT count() FROM test_02381_wide WHERE not ignore(*)") == "2
"
+    )
diff --git a/tests/queries/0_stateless/02454_compressed_marks_in_compact_part.reference b/tests/queries/0_stateless/02454_compressed_marks_in_compact_part.reference
new file mode 100644
index 000000000000..bade13b252d0
--- /dev/null
+++ b/tests/queries/0_stateless/02454_compressed_marks_in_compact_part.reference
@@ -0,0 +1,1 @@
+2	World
diff --git a/tests/queries/0_stateless/02454_compressed_marks_in_compact_part.sql b/tests/queries/0_stateless/02454_compressed_marks_in_compact_part.sql
new file mode 100644
index 000000000000..332b1c05d6ce
--- /dev/null
+++ b/tests/queries/0_stateless/02454_compressed_marks_in_compact_part.sql
@@ -0,0 +1,6 @@
+drop table if exists cc sync;
+create table cc (a UInt64, b String) ENGINE = MergeTree order by (a, b) SETTINGS compress_marks = true;
+insert into cc  values (2, 'World');
+alter table cc detach part 'all_1_1_0';
+alter table cc attach part 'all_1_1_0';
+select * from cc;
