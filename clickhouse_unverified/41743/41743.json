{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 41743,
  "instance_id": "ClickHouse__ClickHouse-41743",
  "issue_numbers": [
    "41416"
  ],
  "base_commit": "dc7bef40db504dffb93d209944d116beced796b7",
  "patch": "diff --git a/programs/client/Client.cpp b/programs/client/Client.cpp\nindex 5bd9d28d8e3c..303c8c2ce4f6 100644\n--- a/programs/client/Client.cpp\n+++ b/programs/client/Client.cpp\n@@ -842,6 +842,7 @@ void Client::addOptions(OptionsDescription & options_description)\n \n         (\"no-warnings\", \"disable warnings when client connects to server\")\n         (\"fake-drop\", \"Ignore all DROP queries, should be used only for testing\")\n+        (\"accept-invalid-certificate\", \"Ignore certificate verification errors, equal to config parameters openSSL.client.invalidCertificateHandler.name=AcceptCertificateHandler and openSSL.client.verificationMode=none\")\n     ;\n \n     /// Commandline options related to external tables.\n@@ -976,6 +977,13 @@ void Client::processOptions(const OptionsDescription & options_description,\n         config().setBool(\"no-warnings\", true);\n     if (options.count(\"fake-drop\"))\n         fake_drop = true;\n+    if (options.count(\"accept-invalid-certificate\"))\n+    {\n+        config().setString(\"openSSL.client.invalidCertificateHandler.name\", \"AcceptCertificateHandler\");\n+        config().setString(\"openSSL.client.verificationMode\", \"none\");\n+    }\n+    else\n+        config().setString(\"openSSL.client.invalidCertificateHandler.name\", \"RejectCertificateHandler\");\n \n     if ((query_fuzzer_runs = options[\"query-fuzzer-runs\"].as<int>()))\n     {\n",
  "test_patch": "diff --git a/tests/queries/shell_config.sh b/tests/queries/shell_config.sh\nindex 963ac384148b..3f05322bb73d 100644\n--- a/tests/queries/shell_config.sh\n+++ b/tests/queries/shell_config.sh\n@@ -78,7 +78,7 @@ export CLICKHOUSE_PORT_POSTGRESQL=${CLICKHOUSE_PORT_POSTGRESQL:=\"9005\"}\n export CLICKHOUSE_PORT_KEEPER=${CLICKHOUSE_PORT_KEEPER:=$(${CLICKHOUSE_EXTRACT_CONFIG} --try --key=keeper_server.tcp_port 2>/dev/null)} 2>/dev/null\n export CLICKHOUSE_PORT_KEEPER=${CLICKHOUSE_PORT_KEEPER:=\"9181\"}\n \n-export CLICKHOUSE_CLIENT_SECURE=${CLICKHOUSE_CLIENT_SECURE:=$(echo \"${CLICKHOUSE_CLIENT}\" | sed 's/--secure //' | sed 's/'\"--port=${CLICKHOUSE_PORT_TCP}\"'//g; s/$/'\"--secure --port=${CLICKHOUSE_PORT_TCP_SECURE}\"'/g')}\n+export CLICKHOUSE_CLIENT_SECURE=${CLICKHOUSE_CLIENT_SECURE:=$(echo \"${CLICKHOUSE_CLIENT}\" | sed 's/--secure //' | sed 's/'\"--port=${CLICKHOUSE_PORT_TCP}\"'//g; s/$/'\"--secure --accept-invalid-certificate --port=${CLICKHOUSE_PORT_TCP_SECURE}\"'/g')}\n \n # Add database and log comment to url params\n if [ -v CLICKHOUSE_URL_PARAMS ]\n",
  "problem_statement": "Duplicate accept request on self-signed server certificate\n**Describe the unexpected behaviour**\r\nOn connection with server having self-signed certificate warning message and acceptance request issued twice.\r\n\r\n**How to reproduce**\r\nProvide server with self-signed certificate and make a secure connection.\r\n\r\n**Expected behavior**\r\nOnly one warning message and acceptance request should be issued.\r\n\r\n**Error message and/or stacktrace**\r\n```\r\nubuntu@ip-172-31-42-195:~/ClickHouse-comb/build_debug/programs$ ./clickhouse-client -s --port 9541\r\nClickHouse client version 22.9.1.1.\r\nConnecting to localhost:9541 as user default.\r\n\r\nWARNING: Certificate verification failed\r\n----------------------------------------\r\nIssuer Name:  /CN=another\r\nSubject Name: /CN=another\r\n\r\nThe certificate yielded the error: self signed certificate\r\n\r\nThe error occurred in the certificate chain at position 0\r\nAccept the certificate (y,n)? y\r\nConnected to ClickHouse server version 22.9.1 revision 54460.\r\n\r\nWarnings:\r\n * Server was built in debug mode. It will work slowly.\r\n\r\nip-172-31-42-195.us-east-2.compute.internal :)\r\nWARNING: Certificate verification failed\r\n----------------------------------------\r\nIssuer Name:  /CN=another\r\nSubject Name: /CN=another\r\n\r\nThe certificate yielded the error: self signed certificate\r\n\r\nThe error occurred in the certificate chain at position 0\r\nAccept the certificate (y,n)?\r\n```\n",
  "hints_text": "It is not supposed to work at all.\r\n\r\nA prompt in the terminal is just an unwanted side effect from the SSL library.\r\nWe did not plan to have this prompt. We did not order it and we don't need it.\n> It is not supposed to work at all.\r\n\r\nyou mean it should exit with error? I actually think the correct behavior is to allow to work with some command line switch and provide just a warning.\r\n\r\n\r\n\n> allow to work with some command line switch and provide just a warning\r\n\r\nYes, this will be ok.\r\n\r\n> you mean it should exit with error?\r\n\r\nNo, I just mean that this dialog is not something we expected.",
  "created_at": "2022-09-24T04:53:09Z",
  "modified_files": [
    "programs/client/Client.cpp"
  ],
  "modified_test_files": [
    "tests/queries/shell_config.sh"
  ]
}