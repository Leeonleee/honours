You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
MySQL compatibility: REGEXP operator support
**Use case**

_NB: [the cell towers dataset](https://clickhouse.com/docs/en/getting-started/example-datasets/cell-towers/) is used here as an example._

When using Looker Studio with ClickHouse as a pseudo-MySQL data source, the following generated query fails because [REGEXP](https://dev.mysql.com/doc/refman/8.0/en/regexp.html#operator_regexp) operator is not supported yet:

```
SELECT AVG(area) AS qt_3rarca233c, COUNT(1) AS qt_6er8nps33c, MAX(range) AS qt_6huada233c, SUM(area) AS qt_b9ehfa233c, MIN(range) AS qt_ufjdha233c, radio 
FROM (SELECT * FROM datasets.cell_towers) AS t 
WHERE (radio REGEXP '^^C.*$') 
GROUP BY radio;
```

This limits the usage of the string-type filters in Looker Studio.

Full stack trace:

```
2023.03.10 20:18:39.173880 [ 509 ] {mysql:2648:8e360bc1-262a-4bf6-a488-f612f1c0a444} <Debug> executeQuery: (from 74.125.88.49:37438) SELECT AVG(area) AS qt_3rarca233c, COUNT(1) AS qt_6er8nps33c, MAX(range) AS qt_6huada233c, SUM(area) AS qt_b9ehfa233c, MIN(range) AS qt_ufjdha233c, radio FROM (SELECT * FROM datasets.cell_towers) AS t WHERE (radio REGEXP '^^C.*$') GROUP BY radio; (stage: Complete)
2023.03.10 20:18:39.174241 [ 509 ] {mysql:2648:8e360bc1-262a-4bf6-a488-f612f1c0a444} <Error> executeQuery: Code: 62. DB::Exception: Syntax error: failed at position 215 ('REGEXP'): REGEXP '^^C.*$') GROUP BY radio;. Expected one of: token, Dot, Comma, ClosingRoundBracket, OR, AND, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, IS NULL, IS NOT NULL, alias, AS. (SYNTAX_ERROR) (version 23.3.1.387 (official build)) (from 74.125.88.49:37438) (in query: SELECT AVG(area) AS qt_3rarca233c, COUNT(1) AS qt_6er8nps33c, MAX(range) AS qt_6huada233c, SUM(area) AS qt_b9ehfa233c, MIN(range) AS qt_ufjdha233c, radio FROM (SELECT * FROM datasets.cell_towers) AS t WHERE (radio REGEXP '^^C.*$') GROUP BY radio;), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xe0cb6d5 in /usr/bin/clickhouse
1. ? @ 0x8ccf3ed in /usr/bin/clickhouse
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, bool, unsigned long, unsigned long) @ 0x14ddbd5f in /usr/bin/clickhouse
3. ? @ 0x13994a3c in /usr/bin/clickhouse
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (DB::QueryResultDetails const&)>, std::__1::optional<DB::FormatSettings> const&) @ 0x1399cf32 in /usr/bin/clickhouse
5. DB::MySQLHandler::comQuery(DB::ReadBuffer&) @ 0x146f5a13 in /usr/bin/clickhouse
6. DB::MySQLHandler::run() @ 0x146f2502 in /usr/bin/clickhouse
7. Poco::Net::TCPServerConnection::start() @ 0x176321b4 in /usr/bin/clickhouse
8. Poco::Net::TCPServerDispatcher::run() @ 0x176333db in /usr/bin/clickhouse
9. Poco::PooledThread::run() @ 0x177bac87 in /usr/bin/clickhouse
10. Poco::ThreadImpl::runnableEntry(void*) @ 0x177b86bd in /usr/bin/clickhouse
11. ? @ 0x7fcbd2203609 in ?
12. __clone @ 0x7fcbd2128133 in ?

2023.03.10 20:18:39.174890 [ 509 ] {} <Error> MySQLHandler: MySQLHandler: Cannot read packet: : Code: 62. DB::Exception: Syntax error: failed at position 215 ('REGEXP'): REGEXP '^^C.*$') GROUP BY radio;. Expected one of: token, Dot, Comma, ClosingRoundBracket, OR, AND, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, IS NULL, IS NOT NULL, alias, AS. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xe0cb6d5 in /usr/bin/clickhouse
1. ? @ 0x8ccf3ed in /usr/bin/clickhouse
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, bool, unsigned long, unsigned long) @ 0x14ddbd5f in /usr/bin/clickhouse
3. ? @ 0x13994a3c in /usr/bin/clickhouse
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (DB::QueryResultDetails const&)>, std::__1::optional<DB::FormatSettings> const&) @ 0x1399cf32 in /usr/bin/clickhouse
5. DB::MySQLHandler::comQuery(DB::ReadBuffer&) @ 0x146f5a13 in /usr/bin/clickhouse
6. DB::MySQLHandler::run() @ 0x146f2502 in /usr/bin/clickhouse
7. Poco::Net::TCPServerConnection::start() @ 0x176321b4 in /usr/bin/clickhouse
8. Poco::Net::TCPServerDispatcher::run() @ 0x176333db in /usr/bin/clickhouse
9. Poco::PooledThread::run() @ 0x177bac87 in /usr/bin/clickhouse
10. Poco::ThreadImpl::runnableEntry(void*) @ 0x177b86bd in /usr/bin/clickhouse
11. ? @ 0x7fcbd2203609 in ?
12. __clone @ 0x7fcbd2128133 in ?
 (version 23.3.1.387 (official build))
```

**Describe the solution you'd like**

[REGEXP](https://dev.mysql.com/doc/refman/8.0/en/regexp.html#operator_regexp) operator is supported via MySQL wire protocol.

CC @alexey-milovidov @mshustov
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
