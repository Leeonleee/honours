diff --git a/docs/en/sql-reference/functions/string-search-functions.md b/docs/en/sql-reference/functions/string-search-functions.md
index 58006f98a4c9..c5304c433c62 100644
--- a/docs/en/sql-reference/functions/string-search-functions.md
+++ b/docs/en/sql-reference/functions/string-search-functions.md
@@ -375,7 +375,7 @@ For a case-insensitive search or/and in UTF-8 format use functions `multiSearchA
 In all `multiSearch*` functions the number of needles should be less than 2<sup>8</sup> because of implementation specification.
 :::
 
-## match(haystack, pattern)
+## match(haystack, pattern), haystack REGEXP pattern operator
 
 Checks whether string `haystack` matches the regular expression `pattern`. The pattern is an [re2 regular expression](https://github.com/google/re2/wiki/Syntax) which has a more limited syntax than Perl regular expressions.
 
diff --git a/src/Parsers/ExpressionListParsers.cpp b/src/Parsers/ExpressionListParsers.cpp
index 054a22a0c3a7..7b9477c57427 100644
--- a/src/Parsers/ExpressionListParsers.cpp
+++ b/src/Parsers/ExpressionListParsers.cpp
@@ -2255,6 +2255,7 @@ std::vector<std::pair<const char *, Operator>> ParserExpressionImpl::operators_t
         {"ILIKE",         Operator("ilike",           8,  2)},
         {"NOT LIKE",      Operator("notLike",         8,  2)},
         {"NOT ILIKE",     Operator("notILike",        8,  2)},
+        {"REGEXP",        Operator("match",           8,  2)},
         {"IN",            Operator("in",              8,  2)},
         {"NOT IN",        Operator("notIn",           8,  2)},
         {"GLOBAL IN",     Operator("globalIn",        8,  2)},
