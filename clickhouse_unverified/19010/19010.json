{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 19010,
  "instance_id": "ClickHouse__ClickHouse-19010",
  "issue_numbers": [
    "18629"
  ],
  "base_commit": "038f52d08bb9c838bdd18cf778b88c654a59e3d4",
  "patch": "diff --git a/src/Storages/StorageTinyLog.cpp b/src/Storages/StorageTinyLog.cpp\nindex fe8a25ba13bb..6e3e9c612bb6 100644\n--- a/src/Storages/StorageTinyLog.cpp\n+++ b/src/Storages/StorageTinyLog.cpp\n@@ -294,11 +294,17 @@ IDataType::OutputStreamGetter TinyLogBlockOutputStream::createStreamGetter(\n void TinyLogBlockOutputStream::writeData(const String & name, const IDataType & type, const IColumn & column, WrittenStreams & written_streams)\n {\n     IDataType::SerializeBinaryBulkSettings settings;\n-    settings.getter = createStreamGetter(name, written_streams);\n \n     if (serialize_states.count(name) == 0)\n+    {\n+        /// Some stream getters may be called form `serializeBinaryBulkStatePrefix`.\n+        /// Use different WrittenStreams set, or we get nullptr for them in `serializeBinaryBulkWithMultipleStreams`\n+        WrittenStreams prefix_written_streams;\n+        settings.getter = createStreamGetter(name, prefix_written_streams);\n         type.serializeBinaryBulkStatePrefix(settings, serialize_states[name]);\n+    }\n \n+    settings.getter = createStreamGetter(name, written_streams);\n     type.serializeBinaryBulkWithMultipleStreams(column, 0, 0, settings, serialize_states[name]);\n }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference b/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference\nnew file mode 100644\nindex 000000000000..3da44c57b274\n--- /dev/null\n+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log.reference\n@@ -0,0 +1,12 @@\n+10000000\n+10000000\t1274991808\n+20000000\n+20000000\t2549983616\n+10000000\n+10000000\t1274991808\n+20000000\n+20000000\t2549983616\n+10000000\n+10000000\t1274991808\n+20000000\n+20000000\t2549983616\ndiff --git a/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql b/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql\nnew file mode 100644\nindex 000000000000..225325298129\n--- /dev/null\n+++ b/tests/queries/0_stateless/01651_lc_insert_tiny_log.sql\n@@ -0,0 +1,47 @@\n+drop table if exists perf_lc_num;\n+\n+CREATE TABLE perf_lc_num(\u3000        num UInt8,\u3000        arr Array(LowCardinality(Int64)) default [num]\u3000        ) ENGINE = TinyLog;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+drop table if exists perf_lc_num;\n+\n+\n+CREATE TABLE perf_lc_num(\u3000        num UInt8,\u3000        arr Array(LowCardinality(Int64)) default [num]\u3000        ) ENGINE = Log;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+drop table if exists perf_lc_num;\n+\n+\n+CREATE TABLE perf_lc_num(\u3000        num UInt8,\u3000        arr Array(LowCardinality(Int64)) default [num]\u3000        ) ENGINE = StripeLog;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+INSERT INTO perf_lc_num (num) SELECT toUInt8(number) FROM numbers(10000000);\n+\n+select sum(length(arr)) from perf_lc_num;\n+select sum(length(arr)), sum(num) from perf_lc_num;\n+\n+drop table if exists perf_lc_num;\n+\n+\n",
  "problem_statement": "Logical error: Got empty stream for DataTypeLowCardinality keys\n```\r\nmilovidov-desktop :) CREATE TABLE perf_lc_num(\u3000        num UInt8,\u3000        arr Array(LowCardinality(Int64)) default [num]\u3000        ) ENGINE = TinyLog\r\n\r\nCREATE TABLE perf_lc_num\r\n(\r\n    `num` UInt8,\r\n    `arr` Array(LowCardinality(Int64)) DEFAULT [num]\r\n)\r\nENGINE = TinyLog\r\n\r\nQuery id: e95f9a71-5795-4dea-8d80-4729fc8016b9\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.002 sec. \r\n\r\nmilovidov-desktop :) INSERT INTO perf_lc_num (num)\r\n:-]         SELECT toUInt8(number)\r\n:-]         FROM numbers(100000000)\r\n\r\nINSERT INTO perf_lc_num (num) SELECT toUInt8(number)\r\nFROM numbers(100000000)\r\n\r\nQuery id: 1101fd75-a545-4809-acb5-8afa2fae80c0\r\n\r\n\r\nReceived exception from server (version 20.13.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Got empty stream for DataTypeLowCardinality keys.: While executing SinkToOutputStream. \r\n\r\n0 rows in set. Elapsed: 0.045 sec. \r\n\r\nmilovidov-desktop :) INSERT INTO perf_lc_num (num)\u3000        SELECT toUInt8(number)\u3000        FROM numbers(100000000)\r\n\r\nINSERT INTO perf_lc_num (num) SELECT toUInt8(number)\r\nFROM numbers(100000000)\r\n\r\nQuery id: 0ad8532a-5c6e-4590-84cd-7e00759d152d\r\n\r\n\r\nReceived exception from server (version 20.13.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Got empty stream for DataTypeLowCardinality keys.: While executing SinkToOutputStream. \r\n\r\n0 rows in set. Elapsed: 0.033 sec.\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2021-01-13T12:43:50Z"
}