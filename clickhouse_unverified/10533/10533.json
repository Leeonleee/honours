{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 10533,
  "instance_id": "ClickHouse__ClickHouse-10533",
  "issue_numbers": [
    "9078"
  ],
  "base_commit": "0fd0711b5145a1c2b3096391bf1158d0504e0b24",
  "patch": "diff --git a/src/Common/ErrorCodes.cpp b/src/Common/ErrorCodes.cpp\nindex 374315005de7..a8bd41162e3d 100644\n--- a/src/Common/ErrorCodes.cpp\n+++ b/src/Common/ErrorCodes.cpp\n@@ -495,6 +495,7 @@ namespace ErrorCodes\n     extern const int ATOMIC_RENAME_FAIL = 521;\n     extern const int OPENCL_ERROR = 522;\n     extern const int UNKNOWN_ROW_POLICY = 523;\n+    extern const int ALTER_OF_COLUMN_IS_FORBIDDEN = 524;\n \n     extern const int KEEPER_EXCEPTION = 999;\n     extern const int POCO_EXCEPTION = 1000;\ndiff --git a/src/Storages/MergeTree/MergeTreeData.cpp b/src/Storages/MergeTree/MergeTreeData.cpp\nindex edc492efdbe3..88094f031a7c 100644\n--- a/src/Storages/MergeTree/MergeTreeData.cpp\n+++ b/src/Storages/MergeTree/MergeTreeData.cpp\n@@ -109,6 +109,7 @@ namespace ErrorCodes\n     extern const int UNEXPECTED_AST_STRUCTURE;\n     extern const int UNKNOWN_DISK;\n     extern const int NOT_ENOUGH_SPACE;\n+    extern const int ALTER_OF_COLUMN_IS_FORBIDDEN;\n }\n \n \n@@ -1473,13 +1474,13 @@ void MergeTreeData::checkAlterIsPossible(const AlterCommands & commands, const S\n             {\n                 throw Exception(\n                     \"Trying to ALTER RENAME key \" + backQuoteIfNeed(command.column_name) + \" column which is a part of key expression\",\n-                    ErrorCodes::ILLEGAL_COLUMN);\n+                    ErrorCodes::ALTER_OF_COLUMN_IS_FORBIDDEN);\n             }\n         }\n         else if (command.isModifyingData(getInMemoryMetadata()))\n         {\n             if (columns_alter_type_forbidden.count(command.column_name))\n-                throw Exception(\"Trying to ALTER key column \" + command.column_name, ErrorCodes::ILLEGAL_COLUMN);\n+                throw Exception(\"ALTER of key column \" + command.column_name + \" is forbidden\", ErrorCodes::ALTER_OF_COLUMN_IS_FORBIDDEN);\n \n             if (columns_alter_type_metadata_only.count(command.column_name))\n             {\n@@ -1487,7 +1488,8 @@ void MergeTreeData::checkAlterIsPossible(const AlterCommands & commands, const S\n                 {\n                     auto it = old_types.find(command.column_name);\n                     if (it == old_types.end() || !isMetadataOnlyConversion(it->second, command.data_type.get()))\n-                        throw Exception(\"ALTER of key column \" + command.column_name + \" must be metadata-only\", ErrorCodes::ILLEGAL_COLUMN);\n+                        throw Exception(\"ALTER of key column \" + command.column_name + \" must be metadata-only\",\n+                            ErrorCodes::ALTER_OF_COLUMN_IS_FORBIDDEN);\n                 }\n             }\n         }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00714_alter_uuid.sql b/tests/queries/0_stateless/00714_alter_uuid.sql\nindex 6dca79c37abb..00a8f793e0e9 100644\n--- a/tests/queries/0_stateless/00714_alter_uuid.sql\n+++ b/tests/queries/0_stateless/00714_alter_uuid.sql\n@@ -39,7 +39,7 @@ ORDER BY (created_at, id0, id1);\n \n SET send_logs_level = 'none';\n \n-ALTER TABLE uuid MODIFY COLUMN id0 UUID; -- { serverError 44 }\n-ALTER TABLE uuid MODIFY COLUMN id1 UUID; -- { serverError 44 }\n+ALTER TABLE uuid MODIFY COLUMN id0 UUID; -- { serverError 524 }\n+ALTER TABLE uuid MODIFY COLUMN id1 UUID; -- { serverError 524 }\n \n DROP TABLE uuid;\ndiff --git a/tests/queries/0_stateless/00933_alter_ttl.sql b/tests/queries/0_stateless/00933_alter_ttl.sql\nindex f7f141a94081..d3298b3fbe1a 100644\n--- a/tests/queries/0_stateless/00933_alter_ttl.sql\n+++ b/tests/queries/0_stateless/00933_alter_ttl.sql\n@@ -21,6 +21,6 @@ drop table if exists ttl;\n create table ttl (d Date, a Int) engine = MergeTree order by tuple() partition by toDayOfMonth(d);\n alter table ttl modify column a Int ttl d + interval 1 day;\n desc table ttl;\n-alter table ttl modify column d Int ttl d + interval 1 day; -- { serverError 44}\n+alter table ttl modify column d Int ttl d + interval 1 day; -- { serverError 524 }\n \n drop table if exists ttl;\ndiff --git a/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper.sql b/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper.sql\nindex b5ad162fdfb2..5c62d5d91070 100644\n--- a/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper.sql\n+++ b/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper.sql\n@@ -17,11 +17,11 @@ INSERT INTO table_for_rename_pk SELECT toDate('2019-10-01') + number % 3, number\n \n SELECT key1, value1 FROM table_for_rename_pk WHERE key1 = 1 AND key2 = 1 AND key3 = 1;\n \n-ALTER TABLE table_for_rename_pk RENAME COLUMN key1 TO renamed_key1; --{serverError 44}\n+ALTER TABLE table_for_rename_pk RENAME COLUMN key1 TO renamed_key1; --{serverError 524}\n \n-ALTER TABLE table_for_rename_pk RENAME COLUMN key3 TO renamed_key3; --{serverError 44}\n+ALTER TABLE table_for_rename_pk RENAME COLUMN key3 TO renamed_key3; --{serverError 524}\n \n-ALTER TABLE table_for_rename_pk RENAME COLUMN key2 TO renamed_key2; --{serverError 44}\n+ALTER TABLE table_for_rename_pk RENAME COLUMN key2 TO renamed_key2; --{serverError 524}\n \n DROP TABLE IF EXISTS table_for_rename_pk NO DELAY;\n SELECT sleep(1) FORMAT Null;\n@@ -45,12 +45,12 @@ PRIMARY KEY (key1, key2);\n \n INSERT INTO table_for_rename_with_primary_key SELECT toDate('2019-10-01') + number % 3, number, number, number, toString(number), toString(number) from numbers(9);\n \n-ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN key1 TO renamed_key1; --{serverError 44}\n+ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN key1 TO renamed_key1; --{serverError 524}\n \n-ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN key2 TO renamed_key2; --{serverError 44}\n+ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN key2 TO renamed_key2; --{serverError 524}\n \n-ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN key3 TO renamed_key3; --{serverError 44}\n+ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN key3 TO renamed_key3; --{serverError 524}\n \n-ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN value1 TO renamed_value1; --{serverError 44}\n+ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN value1 TO renamed_value1; --{serverError 524}\n \n DROP TABLE IF EXISTS table_for_rename_with_primary_key;\n",
  "problem_statement": "Allow changing CODEC for columns with skipping indexes.\nIf ALTER TABLE ... MODIFY COLUMN:\r\n\r\n1) don't change type of the column \r\n2) ~~don't change DEFAULT|MATERIALIZED|ALIAS~~\r\n3) don't change TTL (?)\r\n\r\nbut change CODEC only (also codec can be removed) - it should be allowed.\r\n\r\nThat's how it works currenlty for PK:\r\n```\r\nDROP TABLE IF EXISTS alter_codec;\r\nCREATE TABLE alter_codec(id UInt64) Engine=MergeTree() ORDER BY id ;\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 CODEC(NONE);\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 CODEC(Delta, LZ4);\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt32 CODEC(Delta, LZ4); -- fails:  ALTER of key column id must be metadata-only. \r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 DEFAULT 3 CODEC(Delta, LZ4);\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 ALIAS 3 CODEC(Delta, LZ4); -- fails: Missing columns: 'id' while processing query: 'id', required columns: 'id', no source columns\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 MATERIALIZED 3 CODEC(Delta, LZ4); -- Empty list of columns passed.\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64;\r\nALTER TABLE alter_codec MODIFY COLUMN id Int64; -- ALTER of key column id must be metadata-only.\r\nDROP TABLE IF EXISTS alter_codec;\r\n```\r\n\r\nSimilar should for columns with index (now all of the return 'Trying to ALTER key column id.')\r\n```\r\nDROP TABLE IF EXISTS alter_codec;\r\nCREATE TABLE default.alter_codec (`id` UInt64,  INDEX id_index id TYPE minmax GRANULARITY 1) ENGINE = MergeTree() ORDER BY tuple();\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 CODEC(NONE);\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 CODEC(Delta, LZ4);\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt32 CODEC(Delta, LZ4); -- fails:  ALTER of key column id must be metadata-only. \r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 DEFAULT 3 CODEC(Delta, LZ4);\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 ALIAS 3 CODEC(Delta, LZ4); -- fails: Missing columns: 'id' while processing query: 'id', required columns: 'id', no source columns\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64 MATERIALIZED 3 CODEC(Delta, LZ4); -- Empty list of columns passed.\r\nALTER TABLE alter_codec MODIFY COLUMN id UInt64;\r\nALTER TABLE alter_codec MODIFY COLUMN id Int64; -- ALTER of key column id must be metadata-only.\r\nDROP TABLE IF EXISTS alter_codec;\r\n```\n",
  "hints_text": "@excitoon\nPlease also make sure the error message is explicit rather than \"DB::Exception: Trying to ALTER key column\"",
  "created_at": "2020-04-27T13:55:56Z",
  "modified_files": [
    "src/Common/ErrorCodes.cpp",
    "src/Storages/MergeTree/MergeTreeData.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/00714_alter_uuid.sql",
    "tests/queries/0_stateless/00933_alter_ttl.sql",
    "tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper.sql"
  ]
}