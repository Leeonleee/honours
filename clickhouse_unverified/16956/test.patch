diff --git a/tests/queries/0_stateless/01321_monotonous_functions_in_order_by.reference b/tests/queries/0_stateless/01321_monotonous_functions_in_order_by.reference
index ffa91586f350..0a7746e1832f 100644
--- a/tests/queries/0_stateless/01321_monotonous_functions_in_order_by.reference
+++ b/tests/queries/0_stateless/01321_monotonous_functions_in_order_by.reference
@@ -54,14 +54,10 @@ FROM numbers(3)
 ORDER BY exp(number) ASC
 SELECT roundToExp2(number) AS x
 FROM numbers(3)
-ORDER BY
-    number ASC,
-    number ASC
+ORDER BY number ASC
 SELECT number AS x
 FROM numbers(3)
-ORDER BY
-    number ASC,
-    number ASC
+ORDER BY number ASC
 SELECT number
 FROM numbers(3)
 ORDER BY number DESC
@@ -79,9 +75,7 @@ FROM numbers(3)
 ORDER BY exp(number) DESC
 SELECT roundToExp2(number) AS x
 FROM numbers(3)
-ORDER BY
-    number DESC,
-    number DESC
+ORDER BY number DESC
 0
 1
 2
diff --git a/tests/queries/0_stateless/01562_optimize_monotonous_functions_in_order_by.reference b/tests/queries/0_stateless/01562_optimize_monotonous_functions_in_order_by.reference
new file mode 100644
index 000000000000..203efdab299b
--- /dev/null
+++ b/tests/queries/0_stateless/01562_optimize_monotonous_functions_in_order_by.reference
@@ -0,0 +1,46 @@
+SELECT
+    timestamp,
+    key
+FROM test_order_by
+ORDER BY timestamp ASC
+LIMIT 10
+Expression (Projection)
+  Limit (preliminary LIMIT)
+    MergingSorted (Merge sorted streams for ORDER BY)
+      MergeSorting (Merge sorted blocks for ORDER BY)
+        PartialSorting (Sort each block for ORDER BY)
+          Expression (Before ORDER BY and SELECT)
+            SettingQuotaAndLimits (Set limits and quota after reading from storage)
+              ReadFromStorage (MergeTree)
+SELECT
+    timestamp,
+    key
+FROM test_order_by
+ORDER BY toDate(timestamp) ASC
+LIMIT 10
+Expression (Projection)
+  Limit (preliminary LIMIT)
+    FinishSorting
+      Expression (Before ORDER BY and SELECT)
+        SettingQuotaAndLimits (Set limits and quota after reading from storage)
+          ReadFromStorage (MergeTree  with order)
+SELECT
+    timestamp,
+    key
+FROM test_order_by
+ORDER BY
+    toDate(timestamp) ASC,
+    timestamp ASC
+LIMIT 10
+Expression (Projection)
+  Limit (preliminary LIMIT)
+    FinishSorting
+      Expression (Before ORDER BY and SELECT)
+        SettingQuotaAndLimits (Set limits and quota after reading from storage)
+          ReadFromStorage (MergeTree  with order)
+SELECT
+    timestamp,
+    key
+FROM test_order_by
+ORDER BY timestamp ASC
+LIMIT 10
diff --git a/tests/queries/0_stateless/01562_optimize_monotonous_functions_in_order_by.sql b/tests/queries/0_stateless/01562_optimize_monotonous_functions_in_order_by.sql
new file mode 100644
index 000000000000..b31457d8f686
--- /dev/null
+++ b/tests/queries/0_stateless/01562_optimize_monotonous_functions_in_order_by.sql
@@ -0,0 +1,26 @@
+SET optimize_monotonous_functions_in_order_by = 1;
+
+DROP TABLE IF EXISTS test_order_by;
+
+CREATE TABLE test_order_by (timestamp DateTime, key UInt32) ENGINE=MergeTree() ORDER BY (toDate(timestamp), key);
+INSERT INTO test_order_by SELECT now() + toIntervalSecond(number), number % 4 FROM numbers(10000);
+OPTIMIZE TABLE test_order_by FINAL;
+
+EXPLAIN SYNTAX SELECT * FROM test_order_by ORDER BY timestamp LIMIT 10;
+EXPLAIN PLAN SELECT * FROM test_order_by ORDER BY timestamp LIMIT 10;
+
+EXPLAIN SYNTAX SELECT * FROM test_order_by ORDER BY toDate(timestamp) LIMIT 10;
+EXPLAIN PLAN SELECT * FROM test_order_by ORDER BY toDate(timestamp) LIMIT 10;
+
+EXPLAIN SYNTAX SELECT * FROM test_order_by ORDER BY toDate(timestamp), timestamp LIMIT 10;
+EXPLAIN PLAN SELECT * FROM test_order_by ORDER BY toDate(timestamp), timestamp LIMIT 10;
+
+DROP TABLE IF EXISTS test_order_by;
+
+CREATE TABLE test_order_by (timestamp DateTime, key UInt32) ENGINE=MergeTree() ORDER BY tuple();
+INSERT INTO test_order_by SELECT now() + toIntervalSecond(number), number % 4 FROM numbers(10000);
+OPTIMIZE TABLE test_order_by FINAL;
+
+EXPLAIN SYNTAX SELECT * FROM test_order_by ORDER BY toDate(timestamp), timestamp LIMIT 10;
+
+DROP TABLE IF EXISTS test_order_by;
