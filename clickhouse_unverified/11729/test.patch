diff --git a/tests/performance/distinct_combinator.xml b/tests/performance/distinct_combinator.xml
new file mode 100644
index 000000000000..2261dc2f86d1
--- /dev/null
+++ b/tests/performance/distinct_combinator.xml
@@ -0,0 +1,6 @@
+<test>
+    <query>SELECT x, sum(DISTINCT y) from (SELECT number % 12 AS x, number % 12321 AS y FROM numbers(10000000)) GROUP BY x</query>
+    <query>SELECT x, sum(y) from (SELECT DISTINCT number % 12 AS x, number % 12321 AS y FROM numbers(10000000)) GROUP BY x</query>
+    <query>SELECT sumIf(DISTINCT number % 10, number % 5 = 2) FROM numbers(100000000)</query>
+    <query>SELECT countIf(DISTINCT number % 10, number % 5 = 2) FROM numbers(100000000)</query>
+</test>
diff --git a/tests/queries/0_stateless/01259_combinator_distinct.reference b/tests/queries/0_stateless/01259_combinator_distinct.reference
new file mode 100644
index 000000000000..94e4f7d0d179
--- /dev/null
+++ b/tests/queries/0_stateless/01259_combinator_distinct.reference
@@ -0,0 +1,15 @@
+4999950000
+78
+[0,1,2,3,4,5,6,7,8,9,10,11,12]
+20
+0.49237
+0.49237
+15
+18
+21
+24
+27
+2
+SELECT uniqExactIf(number % 10, (number % 5) = 2)
FROM numbers(10000)
+9
+SELECT sumDistinctIf(number % 10, (number % 5) = 2)
FROM numbers(10000)
diff --git a/tests/queries/0_stateless/01259_combinator_distinct.sql b/tests/queries/0_stateless/01259_combinator_distinct.sql
new file mode 100644
index 000000000000..1b6f887ff701
--- /dev/null
+++ b/tests/queries/0_stateless/01259_combinator_distinct.sql
@@ -0,0 +1,15 @@
+SELECT sum(DISTINCT number) FROM numbers_mt(100000);
+SELECT sum(DISTINCT number % 13) FROM numbers_mt(100000);
+SELECT arraySort(groupArray(DISTINCT number % 13)) FROM numbers_mt(100000);
+SELECT finalizeAggregation(countState(DISTINCT toString(number % 20))) FROM numbers_mt(100000);
+SELECT round(corrStable(DISTINCT x, y), 5) FROM (SELECT number % 10 AS x, number % 5 AS y FROM numbers(1000));
+SELECT round(corrStable(x, y), 5) FROM (SELECT DISTINCT number % 10 AS x, number % 5 AS y FROM numbers(1000));
+
+SELECT sum(DISTINCT y) FROM (SELECT number % 5 AS x, number % 15 AS y FROM numbers(1000)) GROUP BY x;
+
+SET enable_debug_queries = 1;
+SELECT countIf(DISTINCT number % 10, number % 5 = 2) FROM numbers(10000);
+ANALYZE SELECT countIf(DISTINCT number % 10, number % 5 = 2) FROM numbers(10000);
+
+SELECT sumIf(DISTINCT number % 10, number % 5 = 2) FROM numbers(10000);
+ANALYZE SELECT sumIf(DISTINCT number % 10, number % 5 = 2) FROM numbers(10000);
diff --git a/tests/queries/0_stateless/01259_combinator_distinct_distributed.reference b/tests/queries/0_stateless/01259_combinator_distinct_distributed.reference
new file mode 100644
index 000000000000..096d5703292e
--- /dev/null
+++ b/tests/queries/0_stateless/01259_combinator_distinct_distributed.reference
@@ -0,0 +1,4 @@
+78
+[0,1,2,3,4,5,6,7,8,9,10,11,12]
+20
+0.49237
diff --git a/tests/queries/0_stateless/01259_combinator_distinct_distributed.sql b/tests/queries/0_stateless/01259_combinator_distinct_distributed.sql
new file mode 100644
index 000000000000..f851e64dbcbc
--- /dev/null
+++ b/tests/queries/0_stateless/01259_combinator_distinct_distributed.sql
@@ -0,0 +1,4 @@
+SELECT sum(DISTINCT number % 13) FROM remote('127.0.0.{1,2}', numbers_mt(100000));
+SELECT arraySort(groupArray(DISTINCT number % 13)) FROM remote('127.0.0.{1,2}', numbers_mt(100000));
+SELECT finalizeAggregation(countState(DISTINCT toString(number % 20))) FROM remote('127.0.0.{1,2}', numbers_mt(100000));
+SELECT round(corrStable(DISTINCT x, y), 5) FROM (SELECT number % 10 AS x, number % 5 AS y FROM remote('127.0.0.{1,2}', numbers(1000)));
