{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 56613,
  "instance_id": "ClickHouse__ClickHouse-56613",
  "issue_numbers": [
    "56438"
  ],
  "base_commit": "82b41f232ad397da6d92a13bca583ee1a3c8a847",
  "patch": "diff --git a/programs/server/users.d/allow_introspection_functions.xml b/programs/server/users.d/allow_introspection_functions.xml\ndeleted file mode 100644\nindex ec3057c82d7e..000000000000\n--- a/programs/server/users.d/allow_introspection_functions.xml\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-<clickhouse>\n-    <profiles>\n-        <default>\n-            <allow_introspection_functions>1</allow_introspection_functions>\n-        </default>\n-    </profiles>\n-</clickhouse>\ndiff --git a/programs/server/users.d/allow_introspection_functions.yaml b/programs/server/users.d/allow_introspection_functions.yaml\nnew file mode 120000\nindex 000000000000..bac14df302b0\n--- /dev/null\n+++ b/programs/server/users.d/allow_introspection_functions.yaml\n@@ -0,0 +1,1 @@\n+../../../tests/config/users.d/allow_introspection_functions.yaml\n\\ No newline at end of file\n",
  "test_patch": "diff --git a/docker/test/base/setup_export_logs.sh b/docker/test/base/setup_export_logs.sh\nindex f09b8225da40..ec24b2377527 100755\n--- a/docker/test/base/setup_export_logs.sh\n+++ b/docker/test/base/setup_export_logs.sh\n@@ -19,6 +19,11 @@ EXTRA_COLUMNS=${EXTRA_COLUMNS:-\"pull_request_number UInt32, commit_sha String, c\n EXTRA_COLUMNS_EXPRESSION=${EXTRA_COLUMNS_EXPRESSION:-\"CAST(0 AS UInt32) AS pull_request_number, '' AS commit_sha, now() AS check_start_time, toLowCardinality('') AS check_name, toLowCardinality('') AS instance_type, '' AS instance_id\"}\n EXTRA_ORDER_BY_COLUMNS=${EXTRA_ORDER_BY_COLUMNS:-\"check_name, \"}\n \n+# trace_log needs more columns for symbolization\n+EXTRA_COLUMNS_TRACE_LOG=\"${EXTRA_COLUMNS} symbols Array(LowCardinality(String)), lines Array(LowCardinality(String)), \"\n+EXTRA_COLUMNS_EXPRESSION_TRACE_LOG=\"${EXTRA_COLUMNS_EXPRESSION}, arrayMap(x -> toLowCardinality(demangle(addressToSymbol(x))), trace) AS symbols, arrayMap(x -> toLowCardinality(addressToLine(x)), trace) AS lines\"\n+\n+\n function __set_connection_args\n {\n     # It's impossible to use generous $CONNECTION_ARGS string, it's unsafe from word splitting perspective.\n@@ -125,9 +130,18 @@ function setup_logs_replication\n     echo 'Create %_log tables'\n     clickhouse-client --query \"SHOW TABLES FROM system LIKE '%\\\\_log'\" | while read -r table\n     do\n+        if [[ \"$table\" = \"trace_log\" ]]\n+        then\n+            EXTRA_COLUMNS_FOR_TABLE=\"${EXTRA_COLUMNS_TRACE_LOG}\"\n+            EXTRA_COLUMNS_EXPRESSION_FOR_TABLE=\"${EXTRA_COLUMNS_EXPRESSION_TRACE_LOG}\"\n+        else\n+            EXTRA_COLUMNS_FOR_TABLE=\"${EXTRA_COLUMNS}\"\n+            EXTRA_COLUMNS_EXPRESSION_FOR_TABLE=\"${EXTRA_COLUMNS_EXPRESSION}\"\n+        fi\n+\n         # Calculate hash of its structure. Note: 4 is the version of extra columns - increment it if extra columns are changed:\n         hash=$(clickhouse-client --query \"\n-            SELECT sipHash64(7, groupArray((name, type)))\n+            SELECT sipHash64(9, groupArray((name, type)))\n             FROM (SELECT name, type FROM system.columns\n                 WHERE database = 'system' AND table = '$table'\n                 ORDER BY position)\n@@ -135,7 +149,7 @@ function setup_logs_replication\n \n         # Create the destination table with adapted name and structure:\n         statement=$(clickhouse-client --format TSVRaw --query \"SHOW CREATE TABLE system.${table}\" | sed -r -e '\n-            s/^\\($/('\"$EXTRA_COLUMNS\"'/;\n+            s/^\\($/('\"$EXTRA_COLUMNS_FOR_TABLE\"'/;\n             s/ORDER BY \\(/ORDER BY ('\"$EXTRA_ORDER_BY_COLUMNS\"'/;\n             s/^CREATE TABLE system\\.\\w+_log$/CREATE TABLE IF NOT EXISTS '\"$table\"'_'\"$hash\"'/;\n             /^TTL /d\n@@ -155,7 +169,7 @@ function setup_logs_replication\n             ENGINE = Distributed(${CLICKHOUSE_CI_LOGS_CLUSTER}, default, ${table}_${hash})\n             SETTINGS flush_on_detach=0\n             EMPTY AS\n-            SELECT ${EXTRA_COLUMNS_EXPRESSION}, *\n+            SELECT ${EXTRA_COLUMNS_EXPRESSION_FOR_TABLE}, *\n             FROM system.${table}\n         \" || continue\n \n@@ -163,7 +177,7 @@ function setup_logs_replication\n \n         clickhouse-client --query \"\n             CREATE MATERIALIZED VIEW system.${table}_watcher TO system.${table}_sender AS\n-            SELECT ${EXTRA_COLUMNS_EXPRESSION}, *\n+            SELECT ${EXTRA_COLUMNS_EXPRESSION_FOR_TABLE}, *\n             FROM system.${table}\n         \" || continue\n     done\ndiff --git a/tests/config/install.sh b/tests/config/install.sh\nindex a5037bfb64e7..c31275cdcf2b 100755\n--- a/tests/config/install.sh\n+++ b/tests/config/install.sh\n@@ -82,6 +82,7 @@ ln -sf $SRC_PATH/users.d/marks.xml $DEST_SERVER_PATH/users.d/\n ln -sf $SRC_PATH/users.d/insert_keeper_retries.xml $DEST_SERVER_PATH/users.d/\n ln -sf $SRC_PATH/users.d/prefetch_settings.xml $DEST_SERVER_PATH/users.d/\n ln -sf $SRC_PATH/users.d/nonconst_timezone.xml $DEST_SERVER_PATH/users.d/\n+ln -sf $SRC_PATH/users.d/allow_introspection_functions.yaml $DEST_SERVER_PATH/users.d/\n \n if [[ -n \"$USE_NEW_ANALYZER\" ]] && [[ \"$USE_NEW_ANALYZER\" -eq 1 ]]; then\n     ln -sf $SRC_PATH/users.d/analyzer.xml $DEST_SERVER_PATH/users.d/\ndiff --git a/tests/config/users.d/allow_introspection_functions.yaml b/tests/config/users.d/allow_introspection_functions.yaml\nnew file mode 100644\nindex 000000000000..24806bbe235d\n--- /dev/null\n+++ b/tests/config/users.d/allow_introspection_functions.yaml\n@@ -0,0 +1,3 @@\n+profiles:\n+    default:\n+        allow_introspection_functions: 1\n",
  "problem_statement": "`trace_log` exported to the CI database in ClickHouse Cloud should be symbolized\n\n",
  "hints_text": "",
  "created_at": "2023-11-11T04:53:24Z"
}