{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 50285,
  "instance_id": "ClickHouse__ClickHouse-50285",
  "issue_numbers": [
    "49885"
  ],
  "base_commit": "53de761e0eb6c234ff1f2f7d0afb653d31b3ebbe",
  "patch": "diff --git a/src/AggregateFunctions/AggregateFunctionIf.h b/src/AggregateFunctions/AggregateFunctionIf.h\nindex 47f04dad9a41..cd7d7e27a250 100644\n--- a/src/AggregateFunctions/AggregateFunctionIf.h\n+++ b/src/AggregateFunctions/AggregateFunctionIf.h\n@@ -152,6 +152,13 @@ class AggregateFunctionIf final : public IAggregateFunctionHelper<AggregateFunct\n         nested_func->merge(place, rhs, arena);\n     }\n \n+    bool isAbleToParallelizeMerge() const override { return nested_func->isAbleToParallelizeMerge(); }\n+\n+    void merge(AggregateDataPtr __restrict place, ConstAggregateDataPtr rhs, ThreadPool & thread_pool, Arena * arena) const override\n+    {\n+        nested_func->merge(place, rhs, thread_pool, arena);\n+    }\n+\n     void mergeBatch(\n         size_t row_begin,\n         size_t row_end,\n",
  "test_patch": "diff --git a/tests/performance/uniqExactIf.xml b/tests/performance/uniqExactIf.xml\nnew file mode 100644\nindex 000000000000..409be2577377\n--- /dev/null\n+++ b/tests/performance/uniqExactIf.xml\n@@ -0,0 +1,3 @@\n+<test>\n+    <query>SELECT uniqExactIf(number, 1) FROM numbers_mt(1e6)</query>\n+</test>\n",
  "problem_statement": "Parallelise merging of `UniqExactIf` states\nOriginal question from user: https://github.com/ClickHouse/ClickHouse/discussions/49865#discussioncomment-5904525\r\n\r\nWe need to repeat what was done for `uniqExact`, i.e. provide [methods](https://github.com/nickitat/ClickHouse/blob/master/src/AggregateFunctions/AggregateFunctionUniq.h#L416-L424) for `AggregateFunctionIf` that is used for parallel merging, that could just call corresponding methods on the nested function.\n",
  "hints_text": "@mlex promised issue",
  "created_at": "2023-05-28T06:07:53Z"
}