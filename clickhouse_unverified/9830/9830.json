{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 9830,
  "instance_id": "ClickHouse__ClickHouse-9830",
  "issue_numbers": [
    "9782"
  ],
  "base_commit": "c965e5e07c28e8a2495157277cc2939c87ab7869",
  "patch": "diff --git a/dbms/src/Interpreters/CrossToInnerJoinVisitor.cpp b/dbms/src/Interpreters/CrossToInnerJoinVisitor.cpp\nindex a378ba967400..62bbd18c060e 100644\n--- a/dbms/src/Interpreters/CrossToInnerJoinVisitor.cpp\n+++ b/dbms/src/Interpreters/CrossToInnerJoinVisitor.cpp\n@@ -273,9 +273,6 @@ bool getTables(ASTSelectQuery & select, std::vector<JoinedElement> & joined_tabl\n     if (num_using && (num_tables - num_array_join) > 2)\n         throw Exception(\"Multiple CROSS/COMMA JOIN do not support USING\", ErrorCodes::NOT_IMPLEMENTED);\n \n-    if (num_comma && (num_comma != (joined_tables.size() - 1)))\n-        throw Exception(\"Mix of COMMA and other JOINS is not supported\", ErrorCodes::NOT_IMPLEMENTED);\n-\n     return !(num_array_join || num_using);\n }\n \ndiff --git a/dbms/src/Interpreters/JoinToSubqueryTransformVisitor.cpp b/dbms/src/Interpreters/JoinToSubqueryTransformVisitor.cpp\nindex 46cf38177200..ca21a53b5b05 100644\n--- a/dbms/src/Interpreters/JoinToSubqueryTransformVisitor.cpp\n+++ b/dbms/src/Interpreters/JoinToSubqueryTransformVisitor.cpp\n@@ -639,6 +639,11 @@ std::shared_ptr<ASTExpressionList> subqueryExpressionList(\n } /// namelesspace\n \n \n+bool JoinToSubqueryTransformMatcher::needChildVisit(ASTPtr & node, const ASTPtr &)\n+{\n+    return !node->as<ASTSubquery>();\n+}\n+\n void JoinToSubqueryTransformMatcher::visit(ASTPtr & ast, Data & data)\n {\n     if (auto * t = ast->as<ASTSelectQuery>())\ndiff --git a/dbms/src/Interpreters/JoinToSubqueryTransformVisitor.h b/dbms/src/Interpreters/JoinToSubqueryTransformVisitor.h\nindex a4f841d99234..77d8f6b536ec 100644\n--- a/dbms/src/Interpreters/JoinToSubqueryTransformVisitor.h\n+++ b/dbms/src/Interpreters/JoinToSubqueryTransformVisitor.h\n@@ -24,7 +24,7 @@ class JoinToSubqueryTransformMatcher\n         bool done = false;\n     };\n \n-    static bool needChildVisit(ASTPtr &, const ASTPtr &) { return true; }\n+    static bool needChildVisit(ASTPtr &, const ASTPtr &);\n     static void visit(ASTPtr & ast, Data & data);\n \n private:\n",
  "test_patch": "diff --git a/dbms/tests/queries/0_stateless/00849_multiple_comma_join.reference b/dbms/tests/queries/0_stateless/00849_multiple_comma_join.reference\nindex a0664f1a53cb..829a5d25e541 100644\n--- a/dbms/tests/queries/0_stateless/00849_multiple_comma_join.reference\n+++ b/dbms/tests/queries/0_stateless/00849_multiple_comma_join.reference\n@@ -11,6 +11,7 @@ SELECT `--t1_00849.a` AS `t1_00849.a`\\nFROM \\n(\\n    SELECT \\n        `--t1_0084\n SELECT `--t1_00849.a` AS `t1_00849.a`\\nFROM \\n(\\n    SELECT \\n        `--t1_00849.a`, \\n        b, \\n        `--t2_00849.a`, \\n        `t2_00849.b`, \\n        a AS `--t3_00849.a`, \\n        t3_00849.b\\n    FROM \\n    (\\n        SELECT \\n            a AS `--t1_00849.a`, \\n            b, \\n            t2_00849.a AS `--t2_00849.a`, \\n            t2_00849.b\\n        FROM t1_00849\\n        ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`\\n    ) AS `--.s`\\n    ALL INNER JOIN t3_00849 ON `--t2_00849.a` = `--t3_00849.a`\\n) AS `--.s`\\nALL INNER JOIN t4_00849 ON `--t3_00849.a` = a\\nWHERE (`--t1_00849.a` = `--t2_00849.a`) AND (`--t2_00849.a` = `--t3_00849.a`) AND (`--t3_00849.a` = a)\n SELECT `--t1_00849.a` AS `t1_00849.a`\\nFROM \\n(\\n    SELECT \\n        `--t1_00849.a`, \\n        b, \\n        `t2_00849.a`, \\n        `t2_00849.b`, \\n        a, \\n        t3_00849.b\\n    FROM \\n    (\\n        SELECT \\n            a AS `--t1_00849.a`, \\n            b, \\n            t2_00849.a, \\n            t2_00849.b\\n        FROM t1_00849\\n        CROSS JOIN t2_00849\\n    ) AS `--.s`\\n    CROSS JOIN t3_00849\\n) AS `--.s`\\nCROSS JOIN t4_00849\n SELECT `--t1_00849.a` AS `t1_00849.a`\\nFROM \\n(\\n    SELECT \\n        `--t1_00849.a`, \\n        b, \\n        `t2_00849.a`, \\n        `t2_00849.b`, \\n        a, \\n        t3_00849.b\\n    FROM \\n    (\\n        SELECT \\n            a AS `--t1_00849.a`, \\n            b, \\n            t2_00849.a, \\n            t2_00849.b\\n        FROM t1_00849\\n        CROSS JOIN t2_00849\\n    ) AS `--.s`\\n    CROSS JOIN t3_00849\\n) AS `--.s`\\nCROSS JOIN t4_00849\n+SELECT `--t1_00849.a` AS `t1_00849.a`\\nFROM \\n(\\n    SELECT \\n        a AS `--t1_00849.a`, \\n        b, \\n        t2_00849.a, \\n        t2_00849.b\\n    FROM t1_00849\\n    CROSS JOIN t2_00849\\n) AS `--.s`\\nCROSS JOIN t3_00849\n SELECT `--t1_00849.a` AS `t1_00849.a`\\nFROM \\n(\\n    SELECT \\n        a AS `--t1_00849.a`, \\n        b, \\n        t2_00849.a AS `--t2_00849.a`, \\n        t2_00849.b\\n    FROM t1_00849\\n    ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`\\n) AS `--.s`\\nCROSS JOIN t3_00849\n SELECT * FROM t1, t2\n 1\t1\t1\t1\ndiff --git a/dbms/tests/queries/0_stateless/00849_multiple_comma_join.sql b/dbms/tests/queries/0_stateless/00849_multiple_comma_join.sql\nindex 332491683b94..5a8962c2277c 100644\n--- a/dbms/tests/queries/0_stateless/00849_multiple_comma_join.sql\n+++ b/dbms/tests/queries/0_stateless/00849_multiple_comma_join.sql\n@@ -28,7 +28,7 @@ ANALYZE SELECT t1_00849.a FROM t1_00849, t2_00849, t3_00849, t4_00849 WHERE t1_0\n ANALYZE SELECT t1_00849.a FROM t1_00849, t2_00849, t3_00849, t4_00849;\n ANALYZE SELECT t1_00849.a FROM t1_00849 CROSS JOIN t2_00849 CROSS JOIN t3_00849 CROSS JOIN t4_00849;\n \n-ANALYZE SELECT t1_00849.a FROM t1_00849, t2_00849 CROSS JOIN t3_00849; -- { serverError 48 }\n+ANALYZE SELECT t1_00849.a FROM t1_00849, t2_00849 CROSS JOIN t3_00849;\n ANALYZE SELECT t1_00849.a FROM t1_00849 JOIN t2_00849 USING a CROSS JOIN t3_00849; -- { serverError 48 }\n ANALYZE SELECT t1_00849.a FROM t1_00849 JOIN t2_00849 ON t1_00849.a = t2_00849.a CROSS JOIN t3_00849;\n \ndiff --git a/dbms/tests/queries/0_stateless/00849_multiple_comma_join_2.reference b/dbms/tests/queries/0_stateless/00849_multiple_comma_join_2.reference\nindex 581e4efca6a3..7875c1e9e867 100644\n--- a/dbms/tests/queries/0_stateless/00849_multiple_comma_join_2.reference\n+++ b/dbms/tests/queries/0_stateless/00849_multiple_comma_join_2.reference\n@@ -11,6 +11,7 @@ SELECT `--t1.a` AS `t1.a`\\nFROM \\n(\\n    SELECT \\n        `--t1.a`, \\n        `-\n SELECT `--t1.a` AS `t1.a`\\nFROM \\n(\\n    SELECT \\n        `--t1.a`, \\n        `--t2.a`, \\n        a AS `--t3.a`\\n    FROM \\n    (\\n        SELECT \\n            a AS `--t1.a`, \\n            t2.a AS `--t2.a`\\n        FROM t1\\n        ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`\\n    ) AS `--.s`\\n    ALL INNER JOIN t3 ON `--t2.a` = `--t3.a`\\n) AS `--.s`\\nALL INNER JOIN t4 ON `--t3.a` = a\\nWHERE (`--t1.a` = `--t2.a`) AND (`--t2.a` = `--t3.a`) AND (`--t3.a` = a)\n SELECT `--t1.a` AS `t1.a`\\nFROM \\n(\\n    SELECT `--t1.a`\\n    FROM \\n    (\\n        SELECT a AS `--t1.a`\\n        FROM t1\\n        CROSS JOIN t2\\n    ) AS `--.s`\\n    CROSS JOIN t3\\n) AS `--.s`\\nCROSS JOIN t4\n SELECT `--t1.a` AS `t1.a`\\nFROM \\n(\\n    SELECT `--t1.a`\\n    FROM \\n    (\\n        SELECT a AS `--t1.a`\\n        FROM t1\\n        CROSS JOIN t2\\n    ) AS `--.s`\\n    CROSS JOIN t3\\n) AS `--.s`\\nCROSS JOIN t4\n+SELECT `--t1.a` AS `t1.a`\\nFROM \\n(\\n    SELECT a AS `--t1.a`\\n    FROM t1\\n    CROSS JOIN t2\\n) AS `--.s`\\nCROSS JOIN t3\n SELECT `--t1.a` AS `t1.a`\\nFROM \\n(\\n    SELECT \\n        a AS `--t1.a`, \\n        t2.a AS `--t2.a`\\n    FROM t1\\n    ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`\\n) AS `--.s`\\nCROSS JOIN t3\n SELECT * FROM t1, t2\n 1\t1\t1\t1\ndiff --git a/dbms/tests/queries/0_stateless/00849_multiple_comma_join_2.sql b/dbms/tests/queries/0_stateless/00849_multiple_comma_join_2.sql\nindex 8c4202ac0907..de09bcc0b4df 100644\n--- a/dbms/tests/queries/0_stateless/00849_multiple_comma_join_2.sql\n+++ b/dbms/tests/queries/0_stateless/00849_multiple_comma_join_2.sql\n@@ -28,7 +28,7 @@ ANALYZE SELECT t1.a FROM t1, t2, t3, t4 WHERE t1.a = t2.a AND t2.a = t3.a AND t3\n ANALYZE SELECT t1.a FROM t1, t2, t3, t4;\n ANALYZE SELECT t1.a FROM t1 CROSS JOIN t2 CROSS JOIN t3 CROSS JOIN t4;\n \n-ANALYZE SELECT t1.a FROM t1, t2 CROSS JOIN t3; -- { serverError 48 }\n+ANALYZE SELECT t1.a FROM t1, t2 CROSS JOIN t3;\n ANALYZE SELECT t1.a FROM t1 JOIN t2 USING a CROSS JOIN t3; -- { serverError 48 }\n ANALYZE SELECT t1.a FROM t1 JOIN t2 ON t1.a = t2.a CROSS JOIN t3;\n \ndiff --git a/dbms/tests/queries/0_stateless/01095_tpch_like_smoke.reference b/dbms/tests/queries/0_stateless/01095_tpch_like_smoke.reference\nindex 20caccfed839..58d6ef4a34ca 100644\n--- a/dbms/tests/queries/0_stateless/01095_tpch_like_smoke.reference\n+++ b/dbms/tests/queries/0_stateless/01095_tpch_like_smoke.reference\n@@ -1,14 +1,25 @@\n 1\n+2\tfail: correlated subquery\n 3\n+4\tfail: exists\n 5\n 6\n 0.0000\n+7\n+8\n 9\n 10\n+11\n 12\n+13\tfail: join predicates\n 14\n 0.00000000\n+15\tfail: correlated subquery\n 16\n+17\tfail: correlated subquery\n 18\n 19\n 0.0000\n+20\tfail: correlated subquery\n+21\tfail: exists, not exists\n+22\tfail: not exists\ndiff --git a/dbms/tests/queries/0_stateless/01095_tpch_like_smoke.sql b/dbms/tests/queries/0_stateless/01095_tpch_like_smoke.sql\nindex 074889d45aec..b081c7259b95 100644\n--- a/dbms/tests/queries/0_stateless/01095_tpch_like_smoke.sql\n+++ b/dbms/tests/queries/0_stateless/01095_tpch_like_smoke.sql\n@@ -137,51 +137,51 @@ order by\n     l_returnflag,\n     l_linestatus;\n \n--- select 2; -- rewrite fail\n--- select\n---     s_acctbal,\n---     s_name,\n---     n_name,\n---     p_partkey,\n---     p_mfgr,\n---     s_address,\n---     s_phone,\n---     s_comment\n--- from\n---     part,\n---     supplier,\n---     partsupp,\n---     nation,\n---     region\n--- where\n---     p_partkey = ps_partkey\n---     and s_suppkey = ps_suppkey\n---     and p_size = 15\n---     and p_type like '%BRASS'\n---     and s_nationkey = n_nationkey\n---     and n_regionkey = r_regionkey\n---     and r_name = 'EUROPE'\n---     and ps_supplycost = (\n---         select\n---             min(ps_supplycost)\n---         from\n---             partsupp,\n---             supplier,\n---             nation,\n---             region\n---         where\n---             p_partkey = ps_partkey\n---             and s_suppkey = ps_suppkey\n---             and s_nationkey = n_nationkey\n---             and n_regionkey = r_regionkey\n---             and r_name = 'EUROPE'\n---     )\n--- order by\n---     s_acctbal desc,\n---     n_name,\n---     s_name,\n---     p_partkey\n--- limit 100;\n+select 2, 'fail: correlated subquery'; -- TODO: Missing columns: 'p_partkey'\n+select\n+    s_acctbal,\n+    s_name,\n+    n_name,\n+    p_partkey,\n+    p_mfgr,\n+    s_address,\n+    s_phone,\n+    s_comment\n+from\n+    part,\n+    supplier,\n+    partsupp,\n+    nation,\n+    region\n+where\n+    p_partkey = ps_partkey\n+    and s_suppkey = ps_suppkey\n+    and p_size = 15\n+    and p_type like '%BRASS'\n+    and s_nationkey = n_nationkey\n+    and n_regionkey = r_regionkey\n+    and r_name = 'EUROPE'\n+    and ps_supplycost = (\n+        select\n+            min(ps_supplycost)\n+        from\n+            partsupp,\n+            supplier,\n+            nation,\n+            region\n+        where\n+            p_partkey = ps_partkey\n+            and s_suppkey = ps_suppkey\n+            and s_nationkey = n_nationkey\n+            and n_regionkey = r_regionkey\n+            and r_name = 'EUROPE'\n+    )\n+order by\n+    s_acctbal desc,\n+    n_name,\n+    s_name,\n+    p_partkey\n+limit 100; -- { serverError 47 }\n \n select 3;\n select\n@@ -208,7 +208,7 @@ order by\n     o_orderdate\n limit 10;\n \n--- select 4;\n+select 4, 'fail: exists'; -- TODO\n -- select\n --     o_orderpriority,\n --     count(*) as order_count\n@@ -269,85 +269,85 @@ where\n         and toDecimal32(0.06, 2) + toDecimal32(0.01, 2)\n     and l_quantity < 24;\n \n--- select 7;\n--- select\n---     supp_nation,\n---     cust_nation,\n---     l_year,\n---     sum(volume) as revenue\n--- from\n---     (\n---         select\n---             n1.n_name as supp_nation,\n---             n2.n_name as cust_nation,\n---             extract(year from l_shipdate) as l_year,\n---             l_extendedprice * (1 - l_discount) as volume\n---         from\n---             supplier,\n---             lineitem,\n---             orders,\n---             customer,\n---             nation n1,\n---             nation n2\n---         where\n---             s_suppkey = l_suppkey\n---             and o_orderkey = l_orderkey\n---             and c_custkey = o_custkey\n---             and s_nationkey = n1.n_nationkey\n---             and c_nationkey = n2.n_nationkey\n---             and (\n---                 (n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')\n---                 or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')\n---             )\n---             and l_shipdate between date '1995-01-01' and date '1996-12-31'\n---     ) as shipping\n--- group by\n---     supp_nation,\n---     cust_nation,\n---     l_year\n--- order by\n---     supp_nation,\n---     cust_nation,\n---     l_year;\n+select 7;\n+select\n+    supp_nation,\n+    cust_nation,\n+    l_year,\n+    sum(volume) as revenue\n+from\n+    (\n+        select\n+            n1.n_name as supp_nation,\n+            n2.n_name as cust_nation,\n+            extract(year from l_shipdate) as l_year,\n+            l_extendedprice * (1 - l_discount) as volume\n+        from\n+            supplier,\n+            lineitem,\n+            orders,\n+            customer,\n+            nation n1,\n+            nation n2\n+        where\n+            s_suppkey = l_suppkey\n+            and o_orderkey = l_orderkey\n+            and c_custkey = o_custkey\n+            and s_nationkey = n1.n_nationkey\n+            and c_nationkey = n2.n_nationkey\n+            and (\n+                (n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')\n+                or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')\n+            )\n+            and l_shipdate between date '1995-01-01' and date '1996-12-31'\n+    ) as shipping\n+group by\n+    supp_nation,\n+    cust_nation,\n+    l_year\n+order by\n+    supp_nation,\n+    cust_nation,\n+    l_year;\n \n--- select 8;\n--- select\n---     o_year,\n---     sum(case\n---         when nation = 'BRAZIL' then volume\n---         else 0\n---     end) / sum(volume) as mkt_share\n--- from\n---     (\n---         select\n---             extract(year from o_orderdate) as o_year,\n---             l_extendedprice * (1 - l_discount) as volume,\n---             n2.n_name as nation\n---         from\n---             part,\n---             supplier,\n---             lineitem,\n---             orders,\n---             customer,\n---             nation n1,\n---             nation n2,\n---             region\n---         where\n---             p_partkey = l_partkey\n---             and s_suppkey = l_suppkey\n---             and l_orderkey = o_orderkey\n---             and o_custkey = c_custkey\n---             and c_nationkey = n1.n_nationkey\n---             and n1.n_regionkey = r_regionkey\n---             and r_name = 'AMERICA'\n---             and s_nationkey = n2.n_nationkey\n---             and o_orderdate between date '1995-01-01' and date '1996-12-31'\n---             and p_type = 'ECONOMY ANODIZED STEEL'\n---     ) as all_nations\n--- group by\n---     o_year\n--- order by\n---     o_year;\n+select 8;\n+select\n+    o_year,\n+    sum(case\n+        when nation = 'BRAZIL' then volume\n+        else 0\n+    end) / sum(volume) as mkt_share\n+from\n+    (\n+        select\n+            extract(year from o_orderdate) as o_year,\n+            l_extendedprice * (1 - l_discount) as volume,\n+            n2.n_name as nation\n+        from\n+            part,\n+            supplier,\n+            lineitem,\n+            orders,\n+            customer,\n+            nation n1,\n+            nation n2,\n+            region\n+        where\n+            p_partkey = l_partkey\n+            and s_suppkey = l_suppkey\n+            and l_orderkey = o_orderkey\n+            and o_custkey = c_custkey\n+            and c_nationkey = n1.n_nationkey\n+            and n1.n_regionkey = r_regionkey\n+            and r_name = 'AMERICA'\n+            and s_nationkey = n2.n_nationkey\n+            and o_orderdate between date '1995-01-01' and date '1996-12-31'\n+            and p_type = 'ECONOMY ANODIZED STEEL'\n+    ) as all_nations\n+group by\n+    o_year\n+order by\n+    o_year;\n \n select 9;\n select\n@@ -417,37 +417,37 @@ order by\n     revenue desc\n limit 20;\n \n--- select 11; -- rewrite fail\n--- select\n---     ps_partkey,\n---     sum(ps_supplycost * ps_availqty) as value\n--- from\n---     partsupp,\n---     supplier,\n---     nation\n--- where\n---     ps_suppkey = s_suppkey\n---     and s_nationkey = n_nationkey\n---     and n_name = 'GERMANY'\n--- group by\n---     ps_partkey having\n---         sum(ps_supplycost * ps_availqty) > (\n---             select\n---                 sum(ps_supplycost * ps_availqty) * 0.0100000000\n---             --                                     ^^^^^^^^^^^^\n---             -- The above constant needs to be adjusted according\n---             -- to the scale factor (SF): constant = 0.0001 / SF.\n---             from\n---                 partsupp,\n---                 supplier,\n---                 nation\n---             where\n---                 ps_suppkey = s_suppkey\n---                 and s_nationkey = n_nationkey\n---                 and n_name = 'GERMANY'\n---         )\n--- order by\n---     value desc;\n+select 11; -- TODO: remove toDecimal()\n+select\n+    ps_partkey,\n+    sum(ps_supplycost * ps_availqty) as value\n+from\n+    partsupp,\n+    supplier,\n+    nation\n+where\n+    ps_suppkey = s_suppkey\n+    and s_nationkey = n_nationkey\n+    and n_name = 'GERMANY'\n+group by\n+    ps_partkey having\n+        sum(ps_supplycost * ps_availqty) > (\n+            select\n+                sum(ps_supplycost * ps_availqty) * toDecimal64('0.0100000000', 2)\n+            --                                                  ^^^^^^^^^^^^\n+            -- The above constant needs to be adjusted according\n+            -- to the scale factor (SF): constant = 0.0001 / SF.\n+            from\n+                partsupp,\n+                supplier,\n+                nation\n+            where\n+                ps_suppkey = s_suppkey\n+                and s_nationkey = n_nationkey\n+                and n_name = 'GERMANY'\n+        )\n+order by\n+    value desc;\n \n select 12;\n select\n@@ -479,27 +479,27 @@ group by\n order by\n     l_shipmode;\n \n--- select 13; -- rewrite fail\n--- select\n---     c_count,\n---     count(*) as custdist\n--- from\n---     (\n---         select\n---             c_custkey,\n---             count(o_orderkey)\n---         from\n---             customer left outer join orders on\n---                 c_custkey = o_custkey\n---                 and o_comment not like '%special%requests%'\n---         group by\n---             c_custkey\n---     ) as c_orders\n--- group by\n---     c_count\n--- order by\n---     custdist desc,\n---     c_count desc;\n+select 13, 'fail: join predicates'; -- TODO: Invalid expression for JOIN ON\n+select\n+    c_count,\n+    count(*) as custdist\n+from\n+    (\n+        select\n+            c_custkey,\n+            count(o_orderkey)\n+        from\n+            customer left outer join orders on\n+                c_custkey = o_custkey\n+                and o_comment not like '%special%requests%'\n+        group by\n+            c_custkey\n+    ) as c_orders\n+group by\n+    c_count\n+order by\n+    custdist desc,\n+    c_count desc; -- { serverError 403 }\n \n select 14;\n select\n@@ -516,39 +516,40 @@ where\n     and l_shipdate >= date '1995-09-01'\n     and l_shipdate < date '1995-09-01' + interval '1' month;\n \n--- select 15;\n--- create view revenue0 as\n---     select\n---         l_suppkey,\n---         sum(l_extendedprice * (1 - l_discount))\n---     from\n---         lineitem\n---     where\n---         l_shipdate >= date '1996-01-01'\n---         and l_shipdate < date '1996-01-01' + interval '3' month\n---     group by\n---         l_suppkey;\n--- select\n---     s_suppkey,\n---     s_name,\n---     s_address,\n---     s_phone,\n---     total_revenue\n--- from\n---     supplier,\n---     revenue0\n--- where\n---     s_suppkey = supplier_no\n---     and total_revenue = (\n---         select\n---             max(total_revenue)\n---         from\n---             revenue0\n---     )\n--- order by\n---     s_suppkey;\n--- drop view revenue0;\n-    \n+select 15, 'fail: correlated subquery'; -- TODO: Missing columns: 'total_revenue'\n+drop table if exists revenue0;\n+create view revenue0 as\n+    select\n+        l_suppkey,\n+        sum(l_extendedprice * (1 - l_discount))\n+    from\n+        lineitem\n+    where\n+        l_shipdate >= date '1996-01-01'\n+        and l_shipdate < date '1996-01-01' + interval '3' month\n+    group by\n+        l_suppkey;\n+select\n+    s_suppkey,\n+    s_name,\n+    s_address,\n+    s_phone,\n+    total_revenue\n+from\n+    supplier,\n+    revenue0\n+where\n+    s_suppkey = supplier_no\n+    and total_revenue = (\n+        select\n+            max(total_revenue)\n+        from\n+            revenue0\n+    )\n+order by\n+    s_suppkey; -- { serverError 47 }\n+drop table revenue0; -- TODO: drop view\n+\n select 16;\n select\n     p_brand,\n@@ -580,25 +581,25 @@ order by\n     p_brand,\n     p_type,\n     p_size;\n-    \n--- select 17;\n--- select\n---     sum(l_extendedprice) / 7.0 as avg_yearly\n--- from\n---     lineitem,\n---     part\n--- where\n---     p_partkey = l_partkey\n---     and p_brand = 'Brand#23'\n---     and p_container = 'MED BOX'\n---     and l_quantity < (\n---         select\n---             0.2 * avg(l_quantity)\n---         from\n---             lineitem\n---         where\n---             l_partkey = p_partkey\n---     );\n+\n+select 17, 'fail: correlated subquery'; -- TODO: Missing columns: 'p_partkey'\n+select\n+    sum(l_extendedprice) / 7.0 as avg_yearly\n+from\n+    lineitem,\n+    part\n+where\n+    p_partkey = l_partkey\n+    and p_brand = 'Brand#23'\n+    and p_container = 'MED BOX'\n+    and l_quantity < (\n+        select\n+            0.2 * avg(l_quantity)\n+        from\n+            lineitem\n+        where\n+            l_partkey = p_partkey\n+    ); -- { serverError 47 }\n \n select 18;\n select\n@@ -672,46 +673,46 @@ where\n         and l_shipinstruct = 'DELIVER IN PERSON'\n     );\n     \n--- select 20;\n--- select\n---     s_name,\n---     s_address\n--- from\n---     supplier,\n---     nation\n--- where\n---     s_suppkey in (\n---         select\n---             ps_suppkey\n---         from\n---             partsupp\n---         where\n---             ps_partkey in (\n---                 select\n---                     p_partkey\n---                 from\n---                     part\n---                 where\n---                     p_name like 'forest%'\n---             )\n---             and ps_availqty > (\n---                 select\n---                     0.5 * sum(l_quantity)\n---                 from\n---                     lineitem\n---                 where\n---                     l_partkey = ps_partkey\n---                     and l_suppkey = ps_suppkey\n---                     and l_shipdate >= date '1994-01-01'\n---                     and l_shipdate < date '1994-01-01' + interval '1' year\n---             )\n---     )\n---     and s_nationkey = n_nationkey\n---     and n_name = 'CANADA'\n--- order by\n---     s_name;\n+select 20, 'fail: correlated subquery'; -- TODO: Missing columns: 'ps_suppkey' 'ps_partkey'\n+select\n+    s_name,\n+    s_address\n+from\n+    supplier,\n+    nation\n+where\n+    s_suppkey in (\n+        select\n+            ps_suppkey\n+        from\n+            partsupp\n+        where\n+            ps_partkey in (\n+                select\n+                    p_partkey\n+                from\n+                    part\n+                where\n+                    p_name like 'forest%'\n+            )\n+            and ps_availqty > (\n+                select\n+                    0.5 * sum(l_quantity)\n+                from\n+                    lineitem\n+                where\n+                    l_partkey = ps_partkey\n+                    and l_suppkey = ps_suppkey\n+                    and l_shipdate >= date '1994-01-01'\n+                    and l_shipdate < date '1994-01-01' + interval '1' year\n+            )\n+    )\n+    and s_nationkey = n_nationkey\n+    and n_name = 'CANADA'\n+order by\n+    s_name; -- { serverError 47 }\n \n--- select 21;\n+select 21, 'fail: exists, not exists'; -- TODO\n -- select\n --     s_name,\n --     count(*) as numwait\n@@ -753,7 +754,7 @@ where\n --     s_name\n -- limit 100;\n \n--- select 22;\n+select 22, 'fail: not exists'; -- TODO\n -- select\n --     cntrycode,\n --     count(*) as numcust,\n",
  "problem_statement": "COMMA to CROSS JOIN rewriter is not enabled or cannot rewrite query\n**Describe the bug**\r\nRequest worked on 20.1, but fails on master(20.3+)\r\n``` sql\r\nselect\r\n\ts_acctbal,\r\n\ts_name,\r\n\tn_name,\r\n\tp_partkey,\r\n\tp_mfgr,\r\n\ts_address,\r\n\ts_phone,\r\n\ts_comment,\r\n\ts_suppkey\r\nfrom\r\n(\r\n\tselect\r\n\t\tps1.ps_suppkey as ps_suppkey,\r\n\t\tn1.n_nationkey as n_nationkey,\r\n\t\tn1.n_regionkey as n_regionkey,\r\n\t\ts1.s_acctbal as s_acctbal,\r\n\t\ts1.s_name as s_name,\r\n\t\tn1.n_name as n_name,\r\n\t\ts1.s_address as s_address,\r\n\t\ts1.s_phone as s_phone,\r\n\t\ts1.s_comment as s_comment,\r\n\t\ts1.s_suppkey as s_suppkey,\r\n\t\tp1.p_mfgr as p_mfgr,\r\n\t\tp1.p_partkey as p_partkey\r\n\tfrom\r\n\t\tpartsupp as ps1,\r\n\t\tsupplier as s1,\r\n\t\tnation as n1,\r\n\t\tpart as p1,\r\n\t\tregion as r1\r\n\twhere\r\n\t\ts1.s_suppkey = ps1.ps_suppkey\r\n\t\tand s1.s_nationkey = n1.n_nationkey\r\n\t\tand n1.n_regionkey = r1.r_regionkey\r\n\t\tand p1.p_partkey = ps1.ps_partkey\r\n\t\tand p1.p_size = 15\r\n) as t1\r\nANY LEFT JOIN\r\n(\r\n\tselect\r\n\t\tmin(ps_supplycost) as min_cost,\r\n\t\tps2.ps_suppkey as ps_suppkey\r\n\tfrom\r\n\t\tpartsupp as ps2,\r\n\t\tsupplier as s2,\r\n\t\tnation as n2,\r\n\t\tregion as r2\r\n\twhere\r\n\t\ts2.s_suppkey = ps2.ps_suppkey\r\n\t\tand s2.s_nationkey = n2.n_nationkey\r\n\t\tand n2.n_regionkey = r2.r_regionkey\r\n\t\tand r2.r_name = toFixedString('EUROPE', 25)\r\n\tgroup by\r\n\t\tps_suppkey\r\n) as t2\r\non t1.ps_suppkey = t2.ps_suppkey\r\nwhere p_type like '%BRASS'\r\norder by\r\n\ts_acctbal desc,\r\n\tn_name,\r\n\ts_name,\r\n\tp_partkey\r\nlimit 100;\r\n```\r\n\r\n```\r\n2020.03.20 17:18:21.242893 [ 1017330 ] {69d35959-d10b-469c-9e0a-54f3f6301d90} <Error> executeQuery: Code: 48, e.displayText() = DB::Exception: COMMA to CROSS JOIN rewriter is not enabled or cannot rewrite query (version 20.4.1.1) (from [::1]:43832) (in query: SELECT s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment, s_suppkey FROM (SELECT ps1.ps_suppkey AS ps_suppkey, n1.n_nationkey AS n_nationkey, n1.n_regionkey AS n_regionkey, s1.s_acctbal AS s_acctbal, s1.s_name AS s_name, n1.n_name AS n_name, s1.s_address AS s_address, s1.s_phone AS s_phone, s1.s_comment AS s_comment, s1.s_suppkey AS s_suppkey, p1.p_mfgr AS p_mfgr, p1.p_partkey AS p_partkey FROM partsupp AS ps1 , supplier AS s1 , nation AS n1 , part AS p1 , region AS r1 WHERE (s1.s_suppkey = ps1.ps_suppkey) AND (s1.s_nationkey = n1.n_nationkey) AND (n1.n_regionkey = r1.r_regionkey) AND (p1.p_partkey = ps1.ps_partkey) AND (p1.p_size = 15)) AS t1 ANY LEFT JOIN (SELECT min(ps_supplycost) AS min_cost, ps2.ps_suppkey AS ps_suppkey FROM partsupp AS ps2 , supplier AS s2 , nation AS n2 , region AS r2 WHERE (s2.s_suppkey = ps2.ps_suppkey) AND (s2.s_nationkey = n2.n_nationkey) AND (n2.n_regionkey = r2.r_regionkey) AND (r2.r_name = toFixedString('EUROPE', 25)) GROUP BY ps_suppkey) AS t2 ON t1.ps_suppkey = t2.ps_suppkey WHERE p_type LIKE '%BRASS' ORDER BY s_acctbal DESC, n_name ASC, s_name ASC, p_partkey ASC LIMIT 100), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/qoega/clickhouse/build/../contrib/libcxx/include/exception:129: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xaf213c2 in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n1. /home/qoega/clickhouse/build/../dbms/src/Common/Exception.cpp:30: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x4c42eee in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n2. /home/qoega/clickhouse/build/../dbms/src/Interpreters/JoinToSubqueryTransformVisitor.cpp:0: DB::JoinToSubqueryTransformMatcher::visit(DB::ASTSelectQuery&, std::__1::shared_ptr<DB::IAST>&, DB::JoinToSubqueryTransformMatcher::Data&) @ 0x88fe0c2 in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n3. /home/qoega/clickhouse/build/../contrib/libcxx/include/memory:3826: DB::InDepthNodeVisitor<DB::JoinToSubqueryTransformMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x8744978 in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n4. /home/qoega/clickhouse/build/../contrib/libcxx/include/iterator:1480: DB::InDepthNodeVisitor<DB::JoinToSubqueryTransformMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x874499b in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n5. /home/qoega/clickhouse/build/../contrib/libcxx/include/iterator:1480: DB::InDepthNodeVisitor<DB::JoinToSubqueryTransformMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x874499b in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n6. /home/qoega/clickhouse/build/../contrib/libcxx/include/iterator:1480: DB::InDepthNodeVisitor<DB::JoinToSubqueryTransformMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x874499b in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n7. /home/qoega/clickhouse/build/../contrib/libcxx/include/iterator:1480: DB::InDepthNodeVisitor<DB::JoinToSubqueryTransformMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x874499b in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n8. /home/qoega/clickhouse/build/../contrib/libcxx/include/iterator:1480: DB::InDepthNodeVisitor<DB::JoinToSubqueryTransformMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x874499b in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n9. /home/qoega/clickhouse/build/../contrib/libcxx/include/iterator:1480: DB::InDepthNodeVisitor<DB::JoinToSubqueryTransformMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x874499b in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n10. /home/qoega/clickhouse/build/../contrib/libcxx/include/iterator:1480: DB::InDepthNodeVisitor<DB::JoinToSubqueryTransformMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x874499b in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n11. /home/qoega/clickhouse/build/../contrib/libcxx/include/memory:3826: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x872fd6a in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n12. /home/qoega/clickhouse/build/../dbms/src/Interpreters/InterpreterSelectQuery.cpp:166: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x872f3ce in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n13. /home/qoega/clickhouse/build/../contrib/libcxx/include/memory:2204: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x87806bf in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n14. /home/qoega/clickhouse/build/../contrib/libcxx/include/memory:2204: std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&&) @ 0x871e96e in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n15. /home/qoega/clickhouse/build/../dbms/src/Interpreters/InterpreterFactory.cpp:0: DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::QueryProcessingStage::Enum) @ 0x871e198 in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n16. /home/qoega/clickhouse/build/../dbms/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*, bool) @ 0x8973523 in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n17. /home/qoega/clickhouse/build/../dbms/src/Interpreters/executeQuery.cpp:572: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0x8972be6 in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n18. /home/qoega/clickhouse/build/../dbms/programs/server/TCPHandler.cpp:0: DB::TCPHandler::runImpl() @ 0x4c9f75d in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n19. /home/qoega/clickhouse/build/../dbms/programs/server/TCPHandler.cpp:0: DB::TCPHandler::run() @ 0x4ca892c in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n20. /home/qoega/clickhouse/build/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0xae7208c in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n21. /home/qoega/clickhouse/build/../contrib/libcxx/include/atomic:1036: Poco::Net::TCPServerDispatcher::run() @ 0xae7254c in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n22. /home/qoega/clickhouse/build/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0xaf77a27 in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n23. /home/qoega/clickhouse/build/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156: Poco::ThreadImpl::runnableEntry(void*) @ 0xaf758ac in /home/qoega/clickhouse/build/dbms/programs/clickhouse\r\n24. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n25. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2020-03-23T13:56:51Z"
}