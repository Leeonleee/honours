{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 50215,
  "instance_id": "ClickHouse__ClickHouse-50215",
  "issue_numbers": [
    "22574"
  ],
  "base_commit": "b8f9a57797b415fce9a5c877b381986f0e325caa",
  "patch": "diff --git a/docs/en/interfaces/formats.md b/docs/en/interfaces/formats.md\nindex 2ab9e8caec44..f19fd94dcd87 100644\n--- a/docs/en/interfaces/formats.md\n+++ b/docs/en/interfaces/formats.md\n@@ -467,6 +467,7 @@ The CSV format supports the output of totals and extremes the same way as `TabSe\n - [output_format_csv_crlf_end_of_line](/docs/en/operations/settings/settings-formats.md/#output_format_csv_crlf_end_of_line) - if it is set to true, end of line in CSV output format will be `\\r\\n` instead of `\\n`. Default value - `false`.\n - [input_format_csv_skip_first_lines](/docs/en/operations/settings/settings-formats.md/#input_format_csv_skip_first_lines) - skip the specified number of lines at the beginning of data. Default value - `0`.\n - [input_format_csv_detect_header](/docs/en/operations/settings/settings-formats.md/#input_format_csv_detect_header) - automatically detect header with names and types in CSV format. Default value - `true`.\n+- [input_format_csv_trim_whitespaces](/docs/en/operations/settings/settings-formats.md/#input_format_csv_trim_whitespaces) - trim spaces and tabs in non-quoted CSV strings. Default value - `true`.\n \n ## CSVWithNames {#csvwithnames}\n \ndiff --git a/docs/en/operations/settings/settings-formats.md b/docs/en/operations/settings/settings-formats.md\nindex 65038d3a256a..025e9f889f3f 100644\n--- a/docs/en/operations/settings/settings-formats.md\n+++ b/docs/en/operations/settings/settings-formats.md\n@@ -882,6 +882,38 @@ My NULL\n My NULL\n ```\n \n+### input_format_csv_trim_whitespaces {#input_format_csv_trim_whitespaces}\n+\n+Trims spaces and tabs in non-quoted CSV strings.\n+\n+Default value: `true`.\n+\n+**Examples**\n+\n+Query\n+\n+```bash\n+echo '  string  ' | ./clickhouse local -q  \"select * from table FORMAT CSV\" --input-format=\"CSV\" --input_format_csv_trim_whitespaces=true\n+```\n+\n+Result\n+\n+```text\n+\"string\"\n+```\n+\n+Query\n+\n+```bash\n+echo '  string  ' | ./clickhouse local -q  \"select * from table FORMAT CSV\" --input-format=\"CSV\" --input_format_csv_trim_whitespaces=false\n+```\n+\n+Result\n+\n+```text\n+\"  string  \"\n+```\n+\n ## Values format settings {#values-format-settings}\n \n ### input_format_values_interpret_expressions {#input_format_values_interpret_expressions}\ndiff --git a/docs/ru/interfaces/formats.md b/docs/ru/interfaces/formats.md\nindex bef5c2232810..48a6132170a3 100644\n--- a/docs/ru/interfaces/formats.md\n+++ b/docs/ru/interfaces/formats.md\n@@ -387,6 +387,23 @@ $ clickhouse-client --format_csv_delimiter=\"|\" --query=\"INSERT INTO test.csv FOR\n \n \u0424\u043e\u0440\u043c\u0430\u0442 CSV \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u0432\u043e\u0434 totals \u0438 extremes \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e `TabSeparated`.\n \n+\n+### CSV \u043e\u043f\u0446\u0438\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f {#csv-format-settings}\n+\n+- [format_csv_delimiter](../operations/settings/settings.md#format_csv_delimiter) - \u0441\u0438\u043c\u0432\u043e\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0441\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0435\u043c \u0432 CSV \u0434\u0430\u043d\u043d\u044b\u0445. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `,`.\n+- [format_csv_allow_single_quotes](../operations/settings/settings.md#format_csv_allow_single_quotes) - \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043e\u0434\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043a\u0430\u0432\u044b\u0447\u043a\u0430\u0445. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `true`.\n+- [format_csv_allow_double_quotes](../operations/settings/settings.md#format_csv_allow_double_quotes) - \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0434\u0432\u043e\u0439\u043d\u044b\u0445 \u043a\u0430\u0432\u044b\u0447\u043a\u0430\u0445. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `true`.\n+- [format_csv_null_representation](../operations/settings/settings.md#format_tsv_null_representation) - \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 NULL \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CSV. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `\\N`.\n+- [input_format_csv_empty_as_default](../operations/settings/settings.md#input_format_csv_empty_as_default) - \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u0435 \u043f\u043e\u043b\u044f \u0432 CSV \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `true`. \u0414\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0442\u0430\u043a\u0436\u0435 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c [input_format_defaults_for_omitted_fields](../operations/settings/settings.md#input_format_defaults_for_omitted_fields).\n+- [input_format_csv_enum_as_number](../operations/settings/settings.md#input_format_csv_enum_as_number) - \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f enum \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u0445 CSV \u043a\u0430\u043a \u0438\u043d\u0434\u0435\u043a\u0441\u044b enum. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `false`.\n+- [input_format_csv_use_best_effort_in_schema_inference](../operations/settings/settings.md#input_format_csv_use_best_effort_in_schema_inference) - \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0432\u0438\u043a\u0438 \u0438 \u044d\u0432\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0441\u0445\u0435\u043c\u044b \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CSV. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d, \u0432\u0441\u0435 \u043f\u043e\u043b\u044f \u0431\u0443\u0434\u0443\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u0441\u0442\u0440\u043e\u043a\u0438. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `true`.\n+- [input_format_csv_arrays_as_nested_csv](../operations/settings/settings.md#input_format_csv_arrays_as_nested_csv) - \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\u0437 CSV \u043e\u0436\u0438\u0434\u0430\u0442\u044c, \u0447\u0442\u043e \u0435\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0432\u043e \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0439 CSV \u0438 \u0437\u0430\u0442\u0435\u043c \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0443. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `false`.\n+- [output_format_csv_crlf_end_of_line](../operations/settings/settings.md#output_format_csv_crlf_end_of_line) - \u0435\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 true, \u043a\u043e\u043d\u0435\u0446 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0432\u044b\u0432\u043e\u0434\u0430 CSV \u0431\u0443\u0434\u0435\u0442 `\\r\\n` \u0432\u043c\u0435\u0441\u0442\u043e `\\n`. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `false`.\n+- [input_format_csv_skip_first_lines](../operations/settings/settings.md#input_format_csv_skip_first_lines) - \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `0`.\n+- [input_format_csv_detect_header](../operations/settings/settings.md#input_format_csv_detect_header) - \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0438 \u0442\u0438\u043f\u0430\u043c\u0438 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CSV. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `true`.\n+- [input_format_csv_trim_whitespaces](../operations/settings/settings.md#input_format_csv_trim_whitespaces) - \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0442\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u0438 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a \u0431\u0435\u0437 \u043a\u0430\u0432\u044b\u0447\u0435\u043a.\n+\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `true`.\n+\n ## CSVWithNames {#csvwithnames}\n \n \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e [TabSeparatedWithNames](#tabseparatedwithnames).\ndiff --git a/docs/ru/operations/settings/settings.md b/docs/ru/operations/settings/settings.md\nindex cda338cef757..f5c8f06e3ca6 100644\n--- a/docs/ru/operations/settings/settings.md\n+++ b/docs/ru/operations/settings/settings.md\n@@ -1589,6 +1589,24 @@ SELECT area/period FROM account_orders FORMAT JSON;\n \n \u0421\u0438\u043c\u0432\u043e\u043b, \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0439 \u043a\u0430\u043a \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 CSV. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u2014 `,`.\n \n+## format_csv_allow_double_quotes {#format_csv_allow_double_quotes}\n+\n+\u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 true, \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0434\u0432\u043e\u0439\u043d\u044b\u0445 \u043a\u0430\u0432\u044b\u0447\u043a\u0430\u0445.\n+\n+\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n+\n+## input_format_csv_empty_as_default {#input_format_csv_empty_as_default}\n+\n+\u0415\u0441\u043b\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043e, \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043f\u0443\u0441\u0442\u044b\u0435 \u043f\u043e\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0432 CSV \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0414\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `input_format_defaults_for_omitted_fields` \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d.\n+\n+\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n+\n+## input_format_csv_arrays_as_nested_csv {#input_format_csv_arrays_as_nested_csv}\n+\n+\u041f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\u0437 CSV \u043e\u0436\u0438\u0434\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u0435\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0432\u043e \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0439 CSV, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0443. \u041f\u0440\u0438\u043c\u0435\u0440: \"[\"\"Hello\"\", \"\"world\"\", \"\"42\"\"\"\" TV\"\"]\". \u0421\u043a\u043e\u0431\u043a\u0438 \u0432\u043e\u043a\u0440\u0443\u0433 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u043f\u0443\u0449\u0435\u043d\u044b.\n+\n+\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u044b.\n+\n ## input_format_csv_unquoted_null_literal_as_null {#settings-input_format_csv_unquoted_null_literal_as_null}\n \n \u0414\u043b\u044f \u0444\u043e\u0440\u043c\u0430\u0442\u0430 CSV \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u043b\u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u043d\u0435\u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 `NULL` \u043a\u0430\u043a \u043b\u0438\u0442\u0435\u0440\u0430\u043b\u0430 (\u0441\u0438\u043d\u043e\u043d\u0438\u043c \u0434\u043b\u044f `\\N`)\n@@ -1665,6 +1683,50 @@ SELECT * FROM table_with_enum_column_for_csv_insert;\n \n \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f \u0441\u0442\u0440\u043e\u043a \u0434\u043b\u044f CSV \u0444\u043e\u0440\u043c\u0430\u0442\u0430 CRLF (DOS/Windows \u0441\u0442\u0438\u043b\u044c) \u0432\u043c\u0435\u0441\u0442\u043e LF (Unix \u0441\u0442\u0438\u043b\u044c).\n \n+## input_format_csv_detect_header {#input_format_csv_detect_header}\n+\n+\u041e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0438 \u0442\u0438\u043f\u0430\u043c\u0438 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CSV.\n+ \n+\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - `true`.\n+\n+## input_format_csv_skip_first_lines {#input_format_csv_skip_first_lines}\n+\n+\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a, \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u043c\u044b\u0445 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0432\u0432\u043e\u0434\u0430 CSV.\n+\n+\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: `0`.\n+\n+## input_format_csv_trim_whitespaces {#input_format_csv_trim_whitespaces}\n+\n+\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0442\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u0438 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a \u0431\u0435\u0437 \u043a\u0430\u0432\u044b\u0447\u0435\u043a.\n+\n+\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: `true`.\n+\n+**\u041f\u0440\u0438\u043c\u0435\u0440\u044b**\n+\n+\u0417\u0430\u043f\u0440\u043e\u0441\n+\n+```bash\n+echo '  string  ' | ./clickhouse local -q  \"select * from table FORMAT CSV\" --input-format=\"CSV\" --input_format_csv_trim_whitespaces=true\n+```\n+\n+\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n+\n+```text\n+\"string\"\n+```\n+\n+\u0417\u0430\u043f\u0440\u043e\u0441\n+\n+```bash\n+echo '  string  ' | ./clickhouse local -q  \"select * from table FORMAT CSV\" --input-format=\"CSV\" --input_format_csv_trim_whitespaces=false\n+```\n+\n+\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\n+\n+```text\n+\"  string  \"\n+```\n+\n ## output_format_tsv_crlf_end_of_line {#settings-output-format-tsv-crlf-end-of-line}\n \n \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f \u0441\u0442\u0440\u043e\u043a \u0434\u043b\u044f TSV \u0444\u043e\u0440\u043c\u0430\u0442\u0430 CRLF (DOC/Windows \u0441\u0442\u0438\u043b\u044c) \u0432\u043c\u0435\u0441\u0442\u043e LF (Unix \u0441\u0442\u0438\u043b\u044c).\ndiff --git a/src/Core/Settings.h b/src/Core/Settings.h\nindex f40dd01a51b8..6a0833aef60c 100644\n--- a/src/Core/Settings.h\n+++ b/src/Core/Settings.h\n@@ -847,6 +847,7 @@ class IColumn;\n     M(Bool, input_format_csv_use_best_effort_in_schema_inference, true, \"Use some tweaks and heuristics to infer schema in CSV format\", 0) \\\n     M(Bool, input_format_tsv_use_best_effort_in_schema_inference, true, \"Use some tweaks and heuristics to infer schema in TSV format\", 0) \\\n     M(Bool, input_format_csv_detect_header, true, \"Automatically detect header with names and types in CSV format\", 0) \\\n+    M(Bool, input_format_csv_trim_whitespaces, true, \"Trims spaces and tabs (\\\\t) characters at the beginning and end in CSV strings\", 0) \\\n     M(Bool, input_format_tsv_detect_header, true, \"Automatically detect header with names and types in TSV format\", 0) \\\n     M(Bool, input_format_custom_detect_header, true, \"Automatically detect header with names and types in CustomSeparated format\", 0) \\\n     M(Bool, input_format_parquet_skip_columns_with_unsupported_types_in_schema_inference, false, \"Skip columns with unsupported types while schema inference for format Parquet\", 0) \\\ndiff --git a/src/Formats/FormatFactory.cpp b/src/Formats/FormatFactory.cpp\nindex 586e1bb72512..6f2974c49c6c 100644\n--- a/src/Formats/FormatFactory.cpp\n+++ b/src/Formats/FormatFactory.cpp\n@@ -69,6 +69,7 @@ FormatSettings getFormatSettings(ContextPtr context, const Settings & settings)\n     format_settings.csv.use_best_effort_in_schema_inference = settings.input_format_csv_use_best_effort_in_schema_inference;\n     format_settings.csv.skip_first_lines = settings.input_format_csv_skip_first_lines;\n     format_settings.csv.try_detect_header = settings.input_format_csv_detect_header;\n+    format_settings.csv.trim_whitespaces = settings.input_format_csv_trim_whitespaces;\n     format_settings.hive_text.fields_delimiter = settings.input_format_hive_text_fields_delimiter;\n     format_settings.hive_text.collection_items_delimiter = settings.input_format_hive_text_collection_items_delimiter;\n     format_settings.hive_text.map_keys_delimiter = settings.input_format_hive_text_map_keys_delimiter;\ndiff --git a/src/Formats/FormatSettings.h b/src/Formats/FormatSettings.h\nindex e332bd749a14..6b4caffbf43d 100644\n--- a/src/Formats/FormatSettings.h\n+++ b/src/Formats/FormatSettings.h\n@@ -136,6 +136,7 @@ struct FormatSettings\n         UInt64 skip_first_lines = 0;\n         String custom_delimiter;\n         bool try_detect_header = true;\n+        bool trim_whitespaces = true;\n     } csv;\n \n     struct HiveText\ndiff --git a/src/IO/ReadHelpers.cpp b/src/IO/ReadHelpers.cpp\nindex 99d25ee66133..8dc05e758559 100644\n--- a/src/IO/ReadHelpers.cpp\n+++ b/src/IO/ReadHelpers.cpp\n@@ -849,15 +849,18 @@ void readCSVStringInto(Vector & s, ReadBuffer & buf, const FormatSettings::CSV &\n \n             if constexpr (WithResize<Vector>)\n             {\n-                /** CSV format can contain insignificant spaces and tabs.\n-                * Usually the task of skipping them is for the calling code.\n-                * But in this case, it will be difficult to do this, so remove the trailing whitespace by ourself.\n-                */\n-                size_t size = s.size();\n-                while (size > 0 && (s[size - 1] == ' ' || s[size - 1] == '\\t'))\n-                    --size;\n-\n-                s.resize(size);\n+                if (settings.trim_whitespaces) [[likely]]\n+                {\n+                    /** CSV format can contain insignificant spaces and tabs.\n+                    * Usually the task of skipping them is for the calling code.\n+                    * But in this case, it will be difficult to do this, so remove the trailing whitespace by ourself.\n+                    */\n+                    size_t size = s.size();\n+                    while (size > 0 && (s[size - 1] == ' ' || s[size - 1] == '\\t'))\n+                        --size;\n+\n+                    s.resize(size);\n+                }\n             }\n             return;\n         }\ndiff --git a/src/Processors/Formats/Impl/CSVRowInputFormat.cpp b/src/Processors/Formats/Impl/CSVRowInputFormat.cpp\nindex de955d81651f..8b4dbbffe1df 100644\n--- a/src/Processors/Formats/Impl/CSVRowInputFormat.cpp\n+++ b/src/Processors/Formats/Impl/CSVRowInputFormat.cpp\n@@ -10,6 +10,7 @@\n #include <Processors/Formats/Impl/CSVRowInputFormat.h>\n #include <DataTypes/Serializations/SerializationNullable.h>\n #include <DataTypes/DataTypeString.h>\n+#include <DataTypes/DataTypeNullable.h>\n \n \n namespace DB\n@@ -152,7 +153,9 @@ void CSVFormatReader::skipFieldDelimiter()\n template <bool read_string>\n String CSVFormatReader::readCSVFieldIntoString()\n {\n-    skipWhitespacesAndTabs(*buf);\n+    if (format_settings.csv.trim_whitespaces) [[likely]]\n+        skipWhitespacesAndTabs(*buf);\n+\n     String field;\n     if constexpr (read_string)\n         readCSVString(field, *buf, format_settings.csv);\n@@ -200,7 +203,6 @@ void CSVFormatReader::skipHeaderRow()\n template <bool is_header>\n std::vector<String> CSVFormatReader::readRowImpl()\n {\n-\n     std::vector<String> fields;\n     do\n     {\n@@ -280,7 +282,8 @@ bool CSVFormatReader::readField(\n     bool is_last_file_column,\n     const String & /*column_name*/)\n {\n-    skipWhitespacesAndTabs(*buf);\n+    if (format_settings.csv.trim_whitespaces || !isStringOrFixedString(removeNullable(type))) [[likely]]\n+        skipWhitespacesAndTabs(*buf);\n \n     const bool at_delimiter = !buf->eof() && *buf->position() == format_settings.csv.delimiter;\n     const bool at_last_column_line_end = is_last_file_column && (buf->eof() || *buf->position() == '\\n' || *buf->position() == '\\r');\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02764_csv_trim_whitespaces.reference b/tests/queries/0_stateless/02764_csv_trim_whitespaces.reference\nnew file mode 100644\nindex 000000000000..a2ea31ddae77\n--- /dev/null\n+++ b/tests/queries/0_stateless/02764_csv_trim_whitespaces.reference\n@@ -0,0 +1,122 @@\n+\"\ttrim_false_tab_left\"\n+\"trim_false_tab_right\t\"\n+\"trim_false_\ttab_middle\"\n+\"\ttrim_false_\ttab_everywhere\t\"\n+\"\ttrim_false_fixed_string_\ttab_everywhere\t\"\n+\"\tquoted_trim_false_\ttab_everywhere\t\"\n+\"\ttrim_false_csv_field1\t\",\"123\t\",\"5.0\t\",\"\t12.0123\",\"\tquoted_string1\"\n+\"\ttrim_false_csv_field2\t\",\"\t321\t\",\"\t0.5\",\"21.321\t\",\"\tquoted_\tstring2\t\"\n+\"\ttrim_false_csv_field1_with_\tstructure\t\",123,5,12.0123,\"\tquoted_string\t\"\n+\"\ttrim_false_csv_field2_with_structure\t\",321,0.5,21.321,\"\tquoted_\t_string2\t\"\n+\" trim_false_space_left\"\n+\"trim_false_space_right \"\n+\"trim_false_ space_middle\"\n+\" trim_false_ space_everywhere \"\n+\" trim_false_fixed_string_ space_everywhere \"\n+\" quoted_trim_false_ space_everywhere \"\n+\" trim_false_csv_field1 \",\"123 \",\"5.0 \",\" 12.0123\",\" quoted_string1\"\n+\" trim_false_csv_field2 \",\" 321 \",\" 0.5\",\"21.321 \",\" quoted_ string2 \"\n+\" trim_false_csv_field1_with_ structure \",123,5,12.0123,\" quoted_string \"\n+\" trim_false_csv_field2_with_structure \",321,0.5,21.321,\" quoted_ _string2 \"\n+\"\t trim_false_tab_space_left\"\n+\"trim_false_tab_space_right\t \"\n+\"trim_false_\t tab_space_middle\"\n+\"\t trim_false_\t tab_space_everywhere\t \"\n+\"\t trim_false_fixed_string_\t tab_space_everywhere\t \"\n+\"\t quoted_trim_false_\t tab_space_everywhere\t \"\n+\"\t trim_false_csv_field1\t \",\"123\t \",\"5.0\t \",\"\t 12.0123\",\"\t quoted_string1\"\n+\"\t trim_false_csv_field2\t \",\"\t 321\t \",\"\t 0.5\",\"21.321\t \",\"\t quoted_\t string2\t \"\n+\"\t trim_false_csv_field1_with_\t structure\t \",123,5,12.0123,\"\t quoted_string\t \"\n+\"\t trim_false_csv_field2_with_structure\t \",321,0.5,21.321,\"\t quoted_\t _string2\t \"\n+8\n+8\n+16\n+16\n+32.32\n+32.32\n+64.64\n+64.64\n+\"2023-05-22\"\n+\"2023-05-22\"\n+\"2023-05-22\"\n+\"2023-05-22\"\n+\"2023-05-22 00:00:00\"\n+\"2023-05-22 00:00:00\"\n+\"2023-05-22 00:00:00.000\"\n+\"2023-05-22 00:00:00.000\"\n+\"trim_true_tab_left\"\n+\"trim_true_tab_right\"\n+\"trim_true_\ttab_middle\"\n+\"trim_true_\ttab_everywhere\"\n+\"trim_true_fixed_string_\ttab_everywhere\"\n+\"\tquoted_trim_true_\ttab_everywhere\t\"\n+\"trim_true_csv_field1\",123,5,12.0123,\"\tquoted_string1\"\n+\"trim_true_csv_field2\",321,0.5,21.321,\"\tquoted_\tstring2\t\"\n+\"trim_true_csv_field1_with_\tstructure\",123,5,12.0123,\"\tquoted_string\t\"\n+\"trim_true_csv_field2_with_structure\",321,0.5,21.321,\"\tquoted_\t_string2\t\"\n+\"trim_true_space_left\"\n+\"trim_true_space_right\"\n+\"trim_true_ space_middle\"\n+\"trim_true_ space_everywhere\"\n+\"trim_true_fixed_string_ space_everywhere\"\n+\" quoted_trim_true_ space_everywhere \"\n+\"trim_true_csv_field1\",123,5,12.0123,\" quoted_string1\"\n+\"trim_true_csv_field2\",321,0.5,21.321,\" quoted_ string2 \"\n+\"trim_true_csv_field1_with_ structure\",123,5,12.0123,\" quoted_string \"\n+\"trim_true_csv_field2_with_structure\",321,0.5,21.321,\" quoted_ _string2 \"\n+\"trim_true_tab_space_left\"\n+\"trim_true_tab_space_right\"\n+\"trim_true_\t tab_space_middle\"\n+\"trim_true_\t tab_space_everywhere\"\n+\"trim_true_fixed_string_\t tab_space_everywhere\"\n+\"\t quoted_trim_true_\t tab_space_everywhere\t \"\n+\"trim_true_csv_field1\",123,5,12.0123,\"\t quoted_string1\"\n+\"trim_true_csv_field2\",321,0.5,21.321,\"\t quoted_\t string2\t \"\n+\"trim_true_csv_field1_with_\t structure\",123,5,12.0123,\"\t quoted_string\t \"\n+\"trim_true_csv_field2_with_structure\",321,0.5,21.321,\"\t quoted_\t _string2\t \"\n+8\n+8\n+16\n+16\n+32.32\n+32.32\n+64.64\n+64.64\n+\"2023-05-22\"\n+\"2023-05-22\"\n+\"2023-05-22\"\n+\"2023-05-22\"\n+\"2023-05-22 00:00:00\"\n+\"2023-05-22 00:00:00\"\n+\"2023-05-22 00:00:00.000\"\n+\"2023-05-22 00:00:00.000\"\n+\"\tcustom_csv_tab_left\"\n+\"custom_csv_tab_right\t\"\n+\"custom_csv_\ttab_middle\"\n+\"\tcustom_csv_\ttab_everywhere\t\"\n+\"\tcustom_csv_fixed_string_\ttab_everywhere\t\"\n+\"\tquoted_custom_csv_\ttab_everywhere\t\"\n+\"\tcustom_csv_field_with_\tstructure\t\",123,5,12.0123,\"\tcustom_csv_quoted_string\t\"\n+\"\tcustom_csv_field2_with_structure\t\",321,0.5,21.321,\"\tcustom_csv_quoted_\t_string2\t\"\n+\"\tcustom_csv_field_with_\tstructure\t\",123,5,12.0123,\"\tcustom_csv_quoted_string\t\"\n+\"\tcustom_csv_field2_with_structure\t\",321,0.5,21.321,\"\tcustom_csv_quoted_\t_string2\t\"\n+\" custom_csv_space_left\"\n+\"custom_csv_space_right \"\n+\"custom_csv_ space_middle\"\n+\" custom_csv_ space_everywhere \"\n+\" custom_csv_fixed_string_ space_everywhere \"\n+\" quoted_custom_csv_ space_everywhere \"\n+\" custom_csv_field_with_ structure \",123,5,12.0123,\" custom_csv_quoted_string \"\n+\" custom_csv_field2_with_structure \",321,0.5,21.321,\" custom_csv_quoted_ _string2 \"\n+\" custom_csv_field_with_ structure \",123,5,12.0123,\" custom_csv_quoted_string \"\n+\" custom_csv_field2_with_structure \",321,0.5,21.321,\" custom_csv_quoted_ _string2 \"\n+\"\t custom_csv_tab_space_left\"\n+\"custom_csv_tab_space_right\t \"\n+\"custom_csv_\t tab_space_middle\"\n+\"\t custom_csv_\t tab_space_everywhere\t \"\n+\"\t custom_csv_fixed_string_\t tab_space_everywhere\t \"\n+\"\t quoted_custom_csv_\t tab_space_everywhere\t \"\n+\"\t custom_csv_field_with_\t structure\t \",123,5,12.0123,\"\t custom_csv_quoted_string\t \"\n+\"\t custom_csv_field2_with_structure\t \",321,0.5,21.321,\"\t custom_csv_quoted_\t _string2\t \"\n+\"\t custom_csv_field_with_\t structure\t \",123,5,12.0123,\"\t custom_csv_quoted_string\t \"\n+\"\t custom_csv_field2_with_structure\t \",321,0.5,21.321,\"\t custom_csv_quoted_\t _string2\t \"\ndiff --git a/tests/queries/0_stateless/02764_csv_trim_whitespaces.sh b/tests/queries/0_stateless/02764_csv_trim_whitespaces.sh\nnew file mode 100755\nindex 000000000000..9b3b7231f6e1\n--- /dev/null\n+++ b/tests/queries/0_stateless/02764_csv_trim_whitespaces.sh\n@@ -0,0 +1,55 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+BOOLS=('false' 'true')\n+\n+WHITESPACES=(      '\\t'  ' '      '\\t ')\n+WHITESPACES_NAMES=('tab' 'space'  'tab_space')\n+\n+DATA_TYPES=(  'Int8'  'Int16' 'Float32' 'Float64'  'Date'        'Date32'        'DateTime'              'DateTime64')\n+DATA_VALUES=( '8'     '16'    '32.32'   '64.64'    '2023-05-22'  '2023-05-22'    '2023-05-22 00:00:00'   '2023-05-22 00:00:00.000')\n+\n+for trim in \"${BOOLS[@]}\"\n+do\n+    for wsIndex in \"${!WHITESPACES[@]}\";\n+    do\n+        whitespace=${WHITESPACES[$wsIndex]}\n+        whitespace_name=${WHITESPACES_NAMES[$wsIndex]}\n+        echo -e \"${whitespace}trim_${trim}_${whitespace_name}_left\"                                              | $CLICKHOUSE_LOCAL --input_format_csv_trim_whitespaces=${trim} --input-format=\"CSV\" -q \"select * from table FORMAT CSV\"\n+        echo -e \"trim_${trim}_${whitespace_name}_right${whitespace}\"                                             | $CLICKHOUSE_LOCAL --input_format_csv_trim_whitespaces=${trim} --input-format=\"CSV\" -q \"select * from table FORMAT CSV\"\n+        echo -e \"trim_${trim}_${whitespace}${whitespace_name}_middle\"                                            | $CLICKHOUSE_LOCAL --input_format_csv_trim_whitespaces=${trim} --input-format=\"CSV\" -q \"select * from table FORMAT CSV\"\n+        echo -e \"${whitespace}trim_${trim}_${whitespace}${whitespace_name}_everywhere${whitespace}\"              | $CLICKHOUSE_LOCAL --input_format_csv_trim_whitespaces=${trim} --input-format=\"CSV\" -q \"select * from table FORMAT CSV\"\n+        echo -e \"${whitespace}trim_${trim}_fixed_string_${whitespace}${whitespace_name}_everywhere${whitespace}\" | $CLICKHOUSE_LOCAL -S \"c1 FixedString(64)\" --input_format_csv_trim_whitespaces=${trim} --input-format=\"CSV\" -q \"select toString(c1) from table FORMAT CSV\"\n+        echo -e \"\\\"${whitespace}quoted_trim_${trim}_${whitespace}${whitespace_name}_everywhere${whitespace}\\\"\"   | $CLICKHOUSE_LOCAL --input_format_csv_trim_whitespaces=${trim} --input-format=\"CSV\" -q \"select * from table FORMAT CSV\"\n+        echo -e \"${whitespace}trim_${trim}_csv_field1${whitespace},123${whitespace},5.0${whitespace},${whitespace}12.0123,\\\"${whitespace}quoted_string1\\\"\\n${whitespace}trim_${trim}_csv_field2${whitespace},${whitespace}321${whitespace},${whitespace}0.5,21.321${whitespace},\\\"${whitespace}quoted_${whitespace}string2${whitespace}\\\"${whitespace}\" | $CLICKHOUSE_LOCAL --input_format_csv_trim_whitespaces=${trim} --input-format=\"CSV\" -q \"select * from table FORMAT CSV\"\n+        echo -e \"${whitespace}trim_${trim}_csv_field1_with_${whitespace}structure${whitespace},${whitespace}123,${whitespace}5.0${whitespace},12.0123${whitespace},\\\"${whitespace}quoted_string${whitespace}\\\"\\n${whitespace}trim_${trim}_csv_field2_with_structure${whitespace},${whitespace}321${whitespace},0.5,21.321,\\\"${whitespace}quoted_${whitespace}_string2${whitespace}\\\"${whitespace}\" | $CLICKHOUSE_LOCAL -S \"c1 String, c2 Int32, c3 Float, c4 Double, c5 String\" --input_format_csv_trim_whitespaces=${trim} --input-format=\"CSV\" -q \"select * from table FORMAT CSV\"\n+    done\n+\n+    for type_index in \"${!DATA_TYPES[@]}\";\n+    do\n+        type=${DATA_TYPES[$type_index]}\n+        value=${DATA_VALUES[$type_index]}\n+        echo -e \"\\t ${value} \\t\" | $CLICKHOUSE_LOCAL -S \"c1 ${type}\" --input-format=\"CSV\" --input_format_csv_trim_whitespaces=${trim} -q \"select * from table FORMAT CSV\"\n+        echo -e \"\\t ${value} \\t\" | $CLICKHOUSE_LOCAL -S \"c1 Nullable(${type})\" --input-format=\"CSV\" --input_format_csv_trim_whitespaces=${trim} -q \"select * from table FORMAT CSV\"\n+    done\n+done\n+\n+## Custom CSV tested with input_format_csv_trim_whitespaces = false.\n+## Custom CSV with input_format_csv_trim_whitespaces=true doesn't trim whitespaces from the left side at the moment\n+for wsIndex in \"${!WHITESPACES[@]}\";\n+do\n+    whitespace=${WHITESPACES[$wsIndex]}\n+    whitespace_name=${WHITESPACES_NAMES[$wsIndex]}\n+    echo -e \"${whitespace}custom_csv_${whitespace_name}_left\"                                               | $CLICKHOUSE_LOCAL --input-format=\"CustomSeparated\" --input_format_csv_trim_whitespaces=false --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select * from table FORMAT CSV\"\n+    echo -e \"custom_csv_${whitespace_name}_right${whitespace}\"                                              | $CLICKHOUSE_LOCAL --input-format=\"CustomSeparated\" --input_format_csv_trim_whitespaces=false --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select * from table FORMAT CSV\"\n+    echo -e \"custom_csv_${whitespace}${whitespace_name}_middle\"                                             | $CLICKHOUSE_LOCAL --input-format=\"CustomSeparated\" --input_format_csv_trim_whitespaces=false --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select * from table FORMAT CSV\"\n+    echo -e \"${whitespace}custom_csv_${whitespace}${whitespace_name}_everywhere${whitespace}\"               | $CLICKHOUSE_LOCAL --input-format=\"CustomSeparated\" --input_format_csv_trim_whitespaces=false --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select * from table FORMAT CSV\"\n+    echo -e \"${whitespace}custom_csv_fixed_string_${whitespace}${whitespace_name}_everywhere${whitespace}\"  | $CLICKHOUSE_LOCAL -S \"c1 FixedString(64)\" --input-format=\"CustomSeparated\"  --input_format_csv_trim_whitespaces=false --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select toString(c1) from table FORMAT CSV\"\n+    echo -e \"\\\"${whitespace}quoted_custom_csv_${whitespace}${whitespace_name}_everywhere${whitespace}\\\"\"    | $CLICKHOUSE_LOCAL --input-format=\"CustomSeparated\" --input_format_csv_trim_whitespaces=false --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select * from table FORMAT CSV\"\n+\n+    echo -e \"${whitespace}custom_csv_field_with_${whitespace}structure${whitespace},123,5.0,12.0123,\\\"${whitespace}custom_csv_quoted_string${whitespace}\\\"\\n${whitespace}custom_csv_field2_with_structure${whitespace},321,0.5,21.321,\\\"${whitespace}custom_csv_quoted_${whitespace}_string2${whitespace}\\\"\" | $CLICKHOUSE_LOCAL --input_format_csv_trim_whitespaces=false --input-format=\"CustomSeparated\" --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select * from table FORMAT CSV\"\n+    echo -e \"${whitespace}custom_csv_field_with_${whitespace}structure${whitespace},123,5.0,12.0123,\\\"${whitespace}custom_csv_quoted_string${whitespace}\\\"\\n${whitespace}custom_csv_field2_with_structure${whitespace},321,0.5,21.321,\\\"${whitespace}custom_csv_quoted_${whitespace}_string2${whitespace}\\\"\" | $CLICKHOUSE_LOCAL -S \"c1 String, c2 Int32, c3 Float, c4 Double, c5 String\" --input_format_csv_trim_whitespaces=false --input-format=\"CustomSeparated\" --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select * from table FORMAT CSV\"\n+done\n",
  "problem_statement": "CSV parsing setting: format_csv_not_trim_spaces\n**Use case**\r\nCSV file with unquoted strings and spaces at start and end of strings which needs to be preserved.\r\n\r\n>  In violation of the RFC, when parsing rows without quotes, the leading and trailing spaces and tabs are ignored. \r\n\r\n```\r\necho \"aa ,2\" | clickhouse-local -S \"a String, b int\" --input-format=\"CustomSeparated\" --format_custom_escaping_rule=CSV --format_custom_field_delimiter=',' --format_csv_delimiter=',' -q \"select * from table FORMAT CSV\"\r\n\"aa\",2\r\n```\r\n\r\n\r\n**Describe the solution you'd like**\r\nSetting\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/issues/6742#issuecomment-526567265\r\n\n",
  "hints_text": "",
  "created_at": "2023-05-25T07:59:40Z",
  "modified_files": [
    "docs/en/interfaces/formats.md",
    "docs/en/operations/settings/settings-formats.md",
    "docs/ru/interfaces/formats.md",
    "docs/ru/operations/settings/settings.md",
    "src/Core/Settings.h",
    "src/Formats/FormatFactory.cpp",
    "src/Formats/FormatSettings.h",
    "src/IO/ReadHelpers.cpp",
    "src/Processors/Formats/Impl/CSVRowInputFormat.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02764_csv_trim_whitespaces.reference",
    "b/tests/queries/0_stateless/02764_csv_trim_whitespaces.sh"
  ]
}