{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 50210,
  "instance_id": "ClickHouse__ClickHouse-50210",
  "issue_numbers": [
    "49769"
  ],
  "base_commit": "55b2e4215001dafd24133bcf86be9954855fbb92",
  "patch": "diff --git a/programs/client/Client.cpp b/programs/client/Client.cpp\nindex 5870327c3b5c..32a07284d268 100644\n--- a/programs/client/Client.cpp\n+++ b/programs/client/Client.cpp\n@@ -1180,6 +1180,9 @@ void Client::processOptions(const OptionsDescription & options_description,\n \n void Client::processConfig()\n {\n+    if (config().has(\"query\") && config().has(\"queries-file\"))\n+        throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Options '--query' and '--queries-file' cannot be specified at the same time\");\n+\n     /// Batch mode is enabled if one of the following is true:\n     /// - -q (--query) command line option is present.\n     ///   The value of the option is used as the text of query (or of multiple queries).\ndiff --git a/programs/local/LocalServer.cpp b/programs/local/LocalServer.cpp\nindex e026f87279ad..944a60d4e4c4 100644\n--- a/programs/local/LocalServer.cpp\n+++ b/programs/local/LocalServer.cpp\n@@ -516,12 +516,12 @@ void LocalServer::updateLoggerLevel(const String & logs_level)\n \n void LocalServer::processConfig()\n {\n+    if (config().has(\"query\") && config().has(\"queries-file\"))\n+        throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Options '--query' and '--queries-file' cannot be specified at the same time\");\n+\n     delayed_interactive = config().has(\"interactive\") && (config().has(\"query\") || config().has(\"queries-file\"));\n     if (is_interactive && !delayed_interactive)\n     {\n-        if (config().has(\"query\") && config().has(\"queries-file\"))\n-            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Specify either `query` or `queries-file` option\");\n-\n         if (config().has(\"multiquery\"))\n             is_multiquery = true;\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01523_client_local_queries_file_parameter.reference b/tests/queries/0_stateless/01523_client_local_queries_file_parameter.reference\nindex 2a3eb745751c..634bee3d288d 100644\n--- a/tests/queries/0_stateless/01523_client_local_queries_file_parameter.reference\n+++ b/tests/queries/0_stateless/01523_client_local_queries_file_parameter.reference\n@@ -4,3 +4,7 @@\n 3\n 1\t2\n 3\t4\n+BAD_ARGUMENTS\n+BAD_ARGUMENTS\n+BAD_ARGUMENTS\n+BAD_ARGUMENTS\ndiff --git a/tests/queries/0_stateless/01523_client_local_queries_file_parameter.sh b/tests/queries/0_stateless/01523_client_local_queries_file_parameter.sh\nindex cf19efa9b7d4..17dc04d75714 100755\n--- a/tests/queries/0_stateless/01523_client_local_queries_file_parameter.sh\n+++ b/tests/queries/0_stateless/01523_client_local_queries_file_parameter.sh\n@@ -5,20 +5,29 @@ CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n # shellcheck source=../shell_config.sh\n . \"$CURDIR\"/../shell_config.sh\n \n-echo \"SELECT 1;\" > 01523_client_local_queries_file_parameter_tmp.sql\n-$CLICKHOUSE_CLIENT --queries-file=01523_client_local_queries_file_parameter_tmp.sql 2>&1\n+## Use process ID ($$) for uniqueness of file name\n+TEMP_SQL_FILE_NAME=$\"01523_client_local_queries_file_parameter_tmp_$$.sql\"\n+echo \"SELECT 1;\" > \"$TEMP_SQL_FILE_NAME\"\n+$CLICKHOUSE_CLIENT --queries-file=\"$TEMP_SQL_FILE_NAME\" 2>&1\n \n echo \"CREATE TABLE 01523_test(value Int32) ENGINE=Log;\n INSERT INTO 01523_test \n     VALUES (1), (2), (3);\n SELECT * FROM 01523_test;\n-DROP TABLE 01523_test;\" > 01523_client_local_queries_file_parameter_tmp.sql\n-$CLICKHOUSE_CLIENT --queries-file=01523_client_local_queries_file_parameter_tmp.sql 2>&1\n+DROP TABLE 01523_test;\" > \"$TEMP_SQL_FILE_NAME\"\n+$CLICKHOUSE_CLIENT --queries-file=\"$TEMP_SQL_FILE_NAME\" 2>&1\n \n echo \"CREATE TABLE 01523_test (a Int64, b Int64) ENGINE = File(CSV, stdin);\n SELECT a, b FROM 01523_test;\n-DROP TABLE 01523_test;\" > 01523_client_local_queries_file_parameter_tmp.sql\n+DROP TABLE 01523_test;\" > \"$TEMP_SQL_FILE_NAME\"\n \n-echo -e \"1,2\\n3,4\" | $CLICKHOUSE_LOCAL --queries-file=01523_client_local_queries_file_parameter_tmp.sql 2>&1\n+echo -e \"1,2\\n3,4\" | $CLICKHOUSE_LOCAL --queries-file=\"$TEMP_SQL_FILE_NAME\" 2>&1\n \n-rm 01523_client_local_queries_file_parameter_tmp.sql\n+# Simultaneously passing --queries-file + --query is prohibited.\n+echo \"SELECT 1;\" > \"$TEMP_SQL_FILE_NAME\"\n+$CLICKHOUSE_LOCAL --queries-file=\"$TEMP_SQL_FILE_NAME\" -q \"SELECT 1;\" 2>&1 | grep -o 'BAD_ARGUMENTS'\n+$CLICKHOUSE_CLIENT --queries-file=\"$TEMP_SQL_FILE_NAME\" -q \"SELECT 2;\" 2>&1 | grep -o 'BAD_ARGUMENTS'\n+$CLICKHOUSE_LOCAL --queries-file=\"$TEMP_SQL_FILE_NAME\" --query \"SELECT 3;\" 2>&1 | grep -o 'BAD_ARGUMENTS'\n+$CLICKHOUSE_CLIENT --queries-file=\"$TEMP_SQL_FILE_NAME\" --query \"SELECT 4;\" 2>&1 | grep -o 'BAD_ARGUMENTS'\n+\n+rm \"$TEMP_SQL_FILE_NAME\"\ndiff --git a/tests/queries/0_stateless/02751_multiquery_with_argument.reference b/tests/queries/0_stateless/02751_multiquery_with_argument.reference\nindex 33288ec5bcbe..df9771b6bd3a 100644\n--- a/tests/queries/0_stateless/02751_multiquery_with_argument.reference\n+++ b/tests/queries/0_stateless/02751_multiquery_with_argument.reference\n@@ -8,6 +8,8 @@ Empty query\n BAD_ARGUMENTS\n BAD_ARGUMENTS\n BAD_ARGUMENTS\n+BAD_ARGUMENTS\n+BAD_ARGUMENTS\n Bad arguments\n Bad arguments\n Bad arguments\ndiff --git a/tests/queries/0_stateless/02751_multiquery_with_argument.sh b/tests/queries/0_stateless/02751_multiquery_with_argument.sh\nindex 153004c752e7..ce53ede33319 100755\n--- a/tests/queries/0_stateless/02751_multiquery_with_argument.sh\n+++ b/tests/queries/0_stateless/02751_multiquery_with_argument.sh\n@@ -13,6 +13,10 @@ $CLICKHOUSE_LOCAL --multiquery \"SELECT 200; S\" 2>&1 | grep -o 'Syntax error'\n $CLICKHOUSE_LOCAL --multiquery \"; SELECT 201;\" 2>&1 | grep -o 'Empty query'\n $CLICKHOUSE_LOCAL --multiquery \"; S; SELECT 202\" 2>&1 | grep -o 'Empty query'\n \n+# Simultaneously passing --queries-file + --query (multiquery) is prohibited.\n+$CLICKHOUSE_LOCAL --queries-file \"queries.csv\" --multiquery \"SELECT 250;\" 2>&1 | grep -o 'BAD_ARGUMENTS'\n+$CLICKHOUSE_CLIENT --queries-file \"queries.csv\" --multiquery \"SELECT 251;\" 2>&1 | grep -o 'BAD_ARGUMENTS'\n+\n # Error expectation cases.\n # -n <SQL> is prohibited\n $CLICKHOUSE_LOCAL -n \"SELECT 301\" 2>&1 | grep -o 'BAD_ARGUMENTS'\n",
  "problem_statement": "clickhouse-client: Passing `--query` and `--queries-file` works in non-oblivious way\nCombining `clickhouse-client` executes queries from file but does not exectute query in --query\r\n\r\n**How to reproduce**\r\n1. Create file sql.sql with string `SELECT 'File`\r\n2. `clickhouse-local --query \"select 1\" --queries-file \"sql.sql\"`\r\n\r\n**Actual behavior**\r\nClient prints `File`, `Select 1` is ignored\r\n\r\n**Expected behavior**\r\nAn exception that usage of both options `--query (-q)` and `--queries-file` is prohibited\n",
  "hints_text": "",
  "created_at": "2023-05-24T22:22:29Z"
}