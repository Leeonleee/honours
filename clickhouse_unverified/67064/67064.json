{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 67064,
  "instance_id": "ClickHouse__ClickHouse-67064",
  "issue_numbers": [
    "66517"
  ],
  "base_commit": "722fb1f512ea18541e80f124431f3a178a03c8b9",
  "patch": "diff --git a/docs/en/sql-reference/table-functions/hdfs.md b/docs/en/sql-reference/table-functions/hdfs.md\nindex 28cba5ccc6a2..405ac4778464 100644\n--- a/docs/en/sql-reference/table-functions/hdfs.md\n+++ b/docs/en/sql-reference/table-functions/hdfs.md\n@@ -44,6 +44,7 @@ LIMIT 2\n Paths may use globbing. Files must match the whole path pattern, not only the suffix or prefix.\n \n - `*` \u2014 Represents arbitrarily many characters except `/` but including the empty string.\n+- `**` \u2014 Represents all files inside a folder recursively.\n - `?` \u2014 Represents an arbitrary single character.\n - `{some_string,another_string,yet_another_one}` \u2014 Substitutes any of strings `'some_string', 'another_string', 'yet_another_one'`. The strings can contain the `/` symbol.\n - `{N..M}` \u2014 Represents any number `>= N` and `<= M`.\ndiff --git a/docs/ru/sql-reference/table-functions/file.md b/docs/ru/sql-reference/table-functions/file.md\nindex 546a674d41a2..f3e8b0f46b74 100644\n--- a/docs/ru/sql-reference/table-functions/file.md\n+++ b/docs/ru/sql-reference/table-functions/file.md\n@@ -81,6 +81,7 @@ SELECT * FROM file('test.csv', 'CSV', 'column1 UInt32, column2 UInt32, column3 U\n \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0431\u0443\u0434\u0443\u0442 \u0442\u0435 \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0444\u0430\u0439\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0438 \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0442 \u0432\u0441\u0435\u043c\u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0443 \u043f\u0443\u0442\u0438.\n \n -   `*` \u2014 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u044e\u0431\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0431\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043a\u0440\u043e\u043c\u0435 `/`, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n+-   `**` \u2014 \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u044e\u0431\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0431\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f `/`, \u0442\u043e \u0435\u0441\u0442\u044c \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u043c.\n -   `?` \u2014 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u043b\u044e\u0431\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b.\n -   `{some_string,another_string,yet_another_one}` \u2014 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u044e\u0431\u0443\u044e \u0438\u0437 \u0441\u0442\u0440\u043e\u043a `'some_string', 'another_string', 'yet_another_one'`. \u042d\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0433\u0443\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b `/`.\n -   `{N..M}` \u2014 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u044e\u0431\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0435 \u043e\u0442 `N` \u0434\u043e `M` \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e (\u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0432\u0435\u0434\u0443\u0449\u0438\u0435 \u043d\u0443\u043b\u0438).\ndiff --git a/docs/ru/sql-reference/table-functions/hdfs.md b/docs/ru/sql-reference/table-functions/hdfs.md\nindex 6dcb1a217911..13f1bdc43af9 100644\n--- a/docs/ru/sql-reference/table-functions/hdfs.md\n+++ b/docs/ru/sql-reference/table-functions/hdfs.md\n@@ -47,6 +47,7 @@ LIMIT 2\n \n \n -   `*` \u2014 \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u044e\u0431\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0431\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 (\u043a\u0440\u043e\u043c\u0435 `/`), \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n+-   `**` \u2014 \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u044e\u0431\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0431\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f `/`, \u0442\u043e \u0435\u0441\u0442\u044c \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f\u043c.\n -   `?` \u2014 \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u043b\u044e\u0431\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b.\n -   `{some_string,another_string,yet_another_one}` \u2014 \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u044e\u0431\u0443\u044e \u0438\u0437 \u0441\u0442\u0440\u043e\u043a `'some_string', 'another_string', 'yet_another_one'`. \u042d\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0433\u0443\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b `/`.\n -   `{N..M}` \u2014 \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043b\u044e\u0431\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0435 \u043e\u0442 `N` \u0434\u043e `M` \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e (\u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0432\u0435\u0434\u0443\u0449\u0438\u0435 \u043d\u0443\u043b\u0438).\n",
  "test_patch": "diff --git a/tests/integration/test_storage_hdfs/test.py b/tests/integration/test_storage_hdfs/test.py\nindex e3d56c52020f..aef5ddb36753 100644\n--- a/tests/integration/test_storage_hdfs/test.py\n+++ b/tests/integration/test_storage_hdfs/test.py\n@@ -64,6 +64,17 @@ def test_read_write_storage_with_globs(started_cluster):\n         hdfs_api.write_data(\"/storage\" + i, i + \"\\tMark\\t72.53\\n\")\n         assert hdfs_api.read_data(\"/storage\" + i) == i + \"\\tMark\\t72.53\\n\"\n \n+    node1.query(\n+        \"create table HDFSStorageWithDoubleAsterisk (id UInt32, name String, weight Float64) ENGINE = HDFS('hdfs://hdfs1:9000/**.doublestar.tsv', 'TSV')\"\n+    )\n+\n+    for i in [\"1\", \"2\", \"3\"]:\n+        hdfs_api.write_data(f\"/subdir{i}/file{i}.doublestar.tsv\", f\"{i}\\tMark\\t72.53\\n\")\n+    assert (\n+        hdfs_api.read_data(f\"/subdir{i}/file{i}.doublestar.tsv\")\n+        == f\"{i}\\tMark\\t72.53\\n\"\n+    )\n+\n     assert (\n         node1.query(\n             \"select count(*) from HDFSStorageWithRange settings s3_throw_on_zero_files_match=1\"\n@@ -73,6 +84,7 @@ def test_read_write_storage_with_globs(started_cluster):\n     assert node1.query(\"select count(*) from HDFSStorageWithEnum\") == \"3\\n\"\n     assert node1.query(\"select count(*) from HDFSStorageWithQuestionMark\") == \"3\\n\"\n     assert node1.query(\"select count(*) from HDFSStorageWithAsterisk\") == \"3\\n\"\n+    assert node1.query(\"select count(*) from HDFSStorageWithDoubleAsterisk\") == \"3\\n\"\n \n     try:\n         node1.query(\"insert into HDFSStorageWithEnum values (1, 'NEW', 4.2)\")\n@@ -95,10 +107,18 @@ def test_read_write_storage_with_globs(started_cluster):\n         print(ex)\n         assert \"in readonly mode\" in str(ex)\n \n+    try:\n+        node1.query(\"insert into HDFSStorageWithDoubleAsterisk values (1, 'NEW', 4.2)\")\n+        assert False, \"Exception have to be thrown\"\n+    except Exception as ex:\n+        print(ex)\n+        assert \"in readonly mode\" in str(ex)\n+\n     node1.query(\"drop table HDFSStorageWithRange\")\n     node1.query(\"drop table HDFSStorageWithEnum\")\n     node1.query(\"drop table HDFSStorageWithQuestionMark\")\n     node1.query(\"drop table HDFSStorageWithAsterisk\")\n+    node1.query(\"drop table HDFSStorageWithDoubleAsterisk\")\n \n \n def test_storage_with_multidirectory_glob(started_cluster):\n",
  "problem_statement": "Support the same type of globs in S3 and hdfs\n**Use case**\r\n\r\nCurrently, `hdfs` supports the following [globs](https://clickhouse.com/docs/en/sql-reference/table-functions/hdfs):\r\n\r\n> The relative URI to the file in HDFS. Path to file support following globs in readonly mode: *, ?, {abc,def} and {N..M} where N, M \u2014 numbers, `'abc', 'def' \u2014 strings. \r\n\r\nWhile `s3` [supports](https://clickhouse.com/docs/en/sql-reference/table-functions/s3):\r\n\r\n> Bucket url with path to file. Supports following wildcards in readonly mode: *, **, ?, {abc,def} and {N..M} where N, M \u2014 numbers, 'abc', 'def' \u2014 strings. For more information see [here](https://clickhouse.com/docs/en/engines/table-engines/integrations/s3#wildcards-in-path).\r\n\r\nThe main difference is `**`, which is allows recursion. It would be great if hdfs would also support `**`. The main reason is when one adds more (hive) partitions in hdfs, then the queries need to be modified, sometimes needlessly (when one reads all data from a particular base path). \r\n\n",
  "hints_text": "Actually it also works for `hdfs` now. It is missing in the docs, I will add it.",
  "created_at": "2024-07-24T14:34:09Z"
}