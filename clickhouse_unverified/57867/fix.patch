diff --git a/src/Storages/StorageMerge.cpp b/src/Storages/StorageMerge.cpp
index 7958cdf9f507..ff34d2b175e5 100644
--- a/src/Storages/StorageMerge.cpp
+++ b/src/Storages/StorageMerge.cpp
@@ -1153,6 +1153,40 @@ std::tuple<bool /* is_regexp */, ASTPtr> StorageMerge::evaluateDatabaseName(cons
     return {false, ast};
 }
 
+bool StorageMerge::supportsTrivialCountOptimization() const
+{
+    bool supported = true;
+    forEachTable([&](const auto & table)
+    {
+        supported &= table->supportsTrivialCountOptimization();
+    });
+    return supported;
+}
+
+std::optional<UInt64> StorageMerge::totalRows(const Settings & settings) const
+{
+    UInt64 total_rows = 0;
+    forEachTable([&](const auto & table)
+    {
+        std::optional<UInt64> rows = table->totalRows(settings);
+        if (rows)
+            total_rows += *rows;
+    });
+    return {total_rows};
+}
+
+std::optional<UInt64> StorageMerge::totalBytes(const Settings & settings) const
+{
+    UInt64 total_bytes = 0;
+    forEachTable([&](const auto & table)
+    {
+        std::optional<UInt64> bytes = table->totalBytes(settings);
+        if (bytes)
+            total_bytes += *bytes;
+    });
+    return {total_bytes};
+}
+
 
 void registerStorageMerge(StorageFactory & factory)
 {
diff --git a/src/Storages/StorageMerge.h b/src/Storages/StorageMerge.h
index 80a5fa335f72..8b6d15910dbe 100644
--- a/src/Storages/StorageMerge.h
+++ b/src/Storages/StorageMerge.h
@@ -77,6 +77,11 @@ class StorageMerge final : public IStorage, WithContext
     /// Evaluate database name or regexp for StorageMerge and TableFunction merge
     static std::tuple<bool /* is_regexp */, ASTPtr> evaluateDatabaseName(const ASTPtr & node, ContextPtr context);
 
+    bool supportsTrivialCountOptimization() const override;
+
+    std::optional<UInt64> totalRows(const Settings &) const override;
+    std::optional<UInt64> totalBytes(const Settings &) const override;
+
 private:
     std::optional<OptimizedRegularExpression> source_database_regexp;
     std::optional<OptimizedRegularExpression> source_table_regexp;
