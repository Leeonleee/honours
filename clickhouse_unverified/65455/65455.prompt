You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
arrayMin/arrayMax should have a generic specialization
**Use case**

```
milovidov-desktop :) SELECT arrayMin([3, 1, 2])

SELECT arrayMin([3, 1, 2])

Query id: 9bf45956-442f-47a6-af83-74f40361cb66

┌─arrayMin([3, 1, 2])─┐
│                   1 │
└─────────────────────┘

1 row in set. Elapsed: 0.001 sec. 

milovidov-desktop :) SELECT arrayMin([[3], [1], [2]])

SELECT arrayMin([[3], [1], [2]])

Query id: 1d8d574a-ce78-45a0-9bba-a5b80110dbc2


0 rows in set. Elapsed: 0.001 sec. 

Received exception from server (version 23.8.1):
Code: 43. DB::Exception: Received from localhost:9000. DB::Exception: array aggregation function cannot be performed on type Array(UInt8): While processing arrayMin([[3], [1], [2]]). (ILLEGAL_TYPE_OF_ARGUMENT)

milovidov-desktop :) SELECT arrayReduce('min', [[3], [1], [2]])

SELECT arrayReduce('min', [[3], [1], [2]])

Query id: f7053fe6-4639-4a2f-85bc-acc10592d8ab

┌─arrayReduce('min', [[3], [1], [2]])─┐
│ [1]                                 │
└─────────────────────────────────────┘

1 row in set. Elapsed: 0.001 sec.
```

**Describe the solution you'd like**

`arrayMin/Max` should be applicable to all data types that have `IColumn::compareAt`.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
