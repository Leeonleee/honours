{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 37738,
  "instance_id": "ClickHouse__ClickHouse-37738",
  "issue_numbers": [
    "37727"
  ],
  "base_commit": "6c2db00f1f7d65cbe605a6edcf0a6271e32bc52e",
  "patch": "diff --git a/src/Common/ColumnsHashing.h b/src/Common/ColumnsHashing.h\nindex c3a087c0a6ef..e921f4fbf9ab 100644\n--- a/src/Common/ColumnsHashing.h\n+++ b/src/Common/ColumnsHashing.h\n@@ -6,9 +6,11 @@\n #include <Common/Arena.h>\n #include <Common/LRUCache.h>\n #include <Common/assert_cast.h>\n+#include \"Columns/IColumn.h\"\n #include <base/unaligned.h>\n \n #include <Columns/ColumnString.h>\n+#include <Columns/ColumnConst.h>\n #include <Columns/ColumnFixedString.h>\n #include <Columns/ColumnLowCardinality.h>\n \n@@ -83,8 +85,11 @@ struct HashMethodString\n \n     HashMethodString(const ColumnRawPtrs & key_columns, const Sizes & /*key_sizes*/, const HashMethodContextPtr &)\n     {\n-        const IColumn & column = *key_columns[0];\n-        const ColumnString & column_string = assert_cast<const ColumnString &>(column);\n+        const IColumn * column = key_columns[0];\n+        if (isColumnConst(*column))\n+            column = &assert_cast<const ColumnConst &>(*column).getDataColumn();\n+\n+        const ColumnString & column_string = assert_cast<const ColumnString &>(*column);\n         offsets = column_string.getOffsets().data();\n         chars = column_string.getChars().data();\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02316_const_string_intersact.reference b/tests/queries/0_stateless/02316_const_string_intersact.reference\nnew file mode 100644\nindex 000000000000..957124d5fdd3\n--- /dev/null\n+++ b/tests/queries/0_stateless/02316_const_string_intersact.reference\n@@ -0,0 +1,1 @@\n+Play ClickHouse\ndiff --git a/tests/queries/0_stateless/02316_const_string_intersact.sql b/tests/queries/0_stateless/02316_const_string_intersact.sql\nnew file mode 100644\nindex 000000000000..ace3c8d03c53\n--- /dev/null\n+++ b/tests/queries/0_stateless/02316_const_string_intersact.sql\n@@ -0,0 +1,1 @@\n+SELECT 'Play ClickHouse' InterSect SELECT 'Play ClickHouse'\n",
  "problem_statement": "`SELECT 'Play ClickHouse' InterSect SELECT 'Play ClickHouse'` makes null pointer dereference.\n\n",
  "hints_text": "",
  "created_at": "2022-06-01T11:20:19Z"
}