diff --git a/tests/queries/0_stateless/02751_multiquery_with_argument.reference b/tests/queries/0_stateless/02751_multiquery_with_argument.reference
index 843fffb476ce..4b0c199ed350 100644
--- a/tests/queries/0_stateless/02751_multiquery_with_argument.reference
+++ b/tests/queries/0_stateless/02751_multiquery_with_argument.reference
@@ -7,9 +7,10 @@ Empty query
 Empty query
 BAD_ARGUMENTS
 BAD_ARGUMENTS
-BAD_ARGUMENTS
-BAD_ARGUMENTS
-BAD_ARGUMENTS
+301
+302
+304
+305
 Bad arguments
 Bad arguments
 Bad arguments
@@ -17,7 +18,8 @@ Bad arguments
 Bad arguments
 Bad arguments
 Bad arguments
-BAD_ARGUMENTS
-BAD_ARGUMENTS
+Bad arguments
+320
+317
 Bad arguments
 Bad arguments
diff --git a/tests/queries/0_stateless/02751_multiquery_with_argument.sh b/tests/queries/0_stateless/02751_multiquery_with_argument.sh
index d742cc0ad90e..fea2978c1167 100755
--- a/tests/queries/0_stateless/02751_multiquery_with_argument.sh
+++ b/tests/queries/0_stateless/02751_multiquery_with_argument.sh
@@ -18,10 +18,10 @@ $CLICKHOUSE_LOCAL --queries-file "queries.csv" --multiquery "SELECT 250;" 2>&1 |
 $CLICKHOUSE_CLIENT --queries-file "queries.csv" --multiquery "SELECT 251;" 2>&1 | grep -o 'BAD_ARGUMENTS'
 
 # Error expectation cases.
-# -n <SQL> is prohibited
-$CLICKHOUSE_LOCAL -n "SELECT 301" 2>&1 | grep -o 'BAD_ARGUMENTS'
-$CLICKHOUSE_LOCAL -n "SELECT 302;" 2>&1 | grep -o 'BAD_ARGUMENTS'
-$CLICKHOUSE_LOCAL -n "SELECT 304;SELECT 305;" 2>&1 | grep -o 'BAD_ARGUMENTS'
+# -n <SQL> is also interpreted as a query
+$CLICKHOUSE_LOCAL -n "SELECT 301"
+$CLICKHOUSE_LOCAL -n "SELECT 302;"
+$CLICKHOUSE_LOCAL -n "SELECT 304;SELECT 305;"
 $CLICKHOUSE_LOCAL --multiquery --multiquery 2>&1 | grep -o 'Bad arguments'
 $CLICKHOUSE_LOCAL -n --multiquery 2>&1 | grep -o 'Bad arguments'
 $CLICKHOUSE_LOCAL --multiquery -n 2>&1 | grep -o 'Bad arguments'
@@ -29,7 +29,7 @@ $CLICKHOUSE_LOCAL --multiquery --multiquery "SELECT 306; SELECT 307;" 2>&1 | gre
 $CLICKHOUSE_LOCAL -n --multiquery "SELECT 307; SELECT 308;" 2>&1 | grep -o 'Bad arguments'
 $CLICKHOUSE_LOCAL --multiquery "SELECT 309; SELECT 310;" --multiquery  2>&1 | grep -o 'Bad arguments'
 $CLICKHOUSE_LOCAL --multiquery "SELECT 311;" --multiquery "SELECT 312;" 2>&1 | grep -o 'Bad arguments'
-$CLICKHOUSE_LOCAL --multiquery "SELECT 313;" -n "SELECT 314;" 2>&1 | grep -o 'BAD_ARGUMENTS'
-$CLICKHOUSE_LOCAL -n "SELECT 320" --query "SELECT 317;" 2>&1 | grep -o 'BAD_ARGUMENTS'
+$CLICKHOUSE_LOCAL --multiquery "SELECT 313;" -n "SELECT 314;" 2>&1 | grep -o 'Bad arguments'
+$CLICKHOUSE_LOCAL -n "SELECT 320" --query "SELECT 317;"
 $CLICKHOUSE_LOCAL --query -n "SELECT 400;" 2>&1 | grep -o 'Bad arguments'
 $CLICKHOUSE_LOCAL --query -n --multiquery "SELECT 401;" 2>&1 | grep -o 'Bad arguments'
diff --git a/tests/queries/0_stateless/02784_connection_string.reference b/tests/queries/0_stateless/02784_connection_string.reference
index 9d58d485a14b..2f4e5efa53fd 100644
--- a/tests/queries/0_stateless/02784_connection_string.reference
+++ b/tests/queries/0_stateless/02784_connection_string.reference
@@ -101,7 +101,7 @@ BAD_ARGUMENTS
 BAD_ARGUMENTS
 BAD_ARGUMENTS
 BAD_ARGUMENTS
-BAD_ARGUMENTS
+SYNTAX_ERROR
 BAD_ARGUMENTS
 BAD_ARGUMENTS
 BAD_ARGUMENTS
diff --git a/tests/queries/0_stateless/02784_connection_string.sh b/tests/queries/0_stateless/02784_connection_string.sh
index 8353ac5b1e40..3519a0debdf5 100755
--- a/tests/queries/0_stateless/02784_connection_string.sh
+++ b/tests/queries/0_stateless/02784_connection_string.sh
@@ -10,13 +10,13 @@ DATABASES=("$CLICKHOUSE_DATABASE" "")
 
 TEST_INDEX=0
 
-function runClient() 
+function runClient()
 {
     $CLICKHOUSE_CLIENT_BINARY "$@" -q "SELECT $TEST_INDEX" --log_comment 02766_connection_string.sh --send_logs_level=warning
     ((++TEST_INDEX))
 }
 
-function testConnectionString() 
+function testConnectionString()
 {
     if [ "$database" == "" ]; then
         runClient "clickhouse:$1"
@@ -26,7 +26,7 @@ function testConnectionString()
     fi
 }
 
-function testConnectionWithUserName() 
+function testConnectionWithUserName()
 {
 if [ "$user_info" == "" ] && [ "$host_port" == "" ]; then
         testConnectionString "//"
@@ -53,9 +53,9 @@ TEST_USER_NAME="test_user_02771_$$"
 TEST_USER_EMAIL_NAME="test_user_02771_$$@some_mail.com"
 TEST_USER_EMAIL_NAME_ENCODED="test_user_02771_$$%40some_mail.com"
 
-TEST_USER_PASSWORD="zyx%$&abc" 
+TEST_USER_PASSWORD="zyx%$&abc"
 # %, $, & percent encoded
-TEST_USER_PASSWORD_ENCODED="zyx%25%24%26abc" 
+TEST_USER_PASSWORD_ENCODED="zyx%25%24%26abc"
 
 $CLICKHOUSE_CLIENT -q "CREATE USER '$TEST_USER_NAME'"
 $CLICKHOUSE_CLIENT -q "CREATE USER '$TEST_USER_EMAIL_NAME' IDENTIFIED WITH plaintext_password BY '$TEST_USER_PASSWORD'"
@@ -66,14 +66,14 @@ runClient "clickhouse://$TEST_USER_EMAIL_NAME_ENCODED:$TEST_USER_PASSWORD_ENCODE
 $CLICKHOUSE_CLIENT -q "DROP USER '$TEST_USER_NAME'"
 $CLICKHOUSE_CLIENT -q "DROP USER '$TEST_USER_EMAIL_NAME'"
 
-# Percent-encoded database in non-ascii symbols 
+# Percent-encoded database in non-ascii symbols
 UTF8_DATABASE="БазаДанных_$$"
 UTF8_DATABASE_PERCENT_ENCODED="%D0%91%D0%B0%D0%B7%D0%B0%D0%94%D0%B0%D0%BD%D0%BD%D1%8B%D1%85_$$"
 $CLICKHOUSE_CLIENT -q "CREATE DATABASE IF NOT EXISTS \`$UTF8_DATABASE\`"
 runClient "clickhouse://default@$CLICKHOUSE_HOST/$UTF8_DATABASE_PERCENT_ENCODED"
 $CLICKHOUSE_CLIENT -q "DROP DATABASE IF EXISTS \`$UTF8_DATABASE\`"
 
-# clickhouse-client extra options cases 
+# clickhouse-client extra options cases
 TEST_INDEX=1000
 
 runClient "clickhouse://$CLICKHOUSE_HOST/" --user 'default'
@@ -114,13 +114,13 @@ runClient "clickhouse://" --port "$CLICKHOUSE_PORT_TCP" --host "$CLICKHOUSE_HOST
 runClient "clickhouse:///" --port "$CLICKHOUSE_PORT_TCP" --host "$CLICKHOUSE_HOST" 2>&1 | grep -o 'BAD_ARGUMENTS'
 runClient "clickhouse:///?" --port "$CLICKHOUSE_PORT_TCP" --host "$CLICKHOUSE_HOST" 2>&1 | grep -o 'BAD_ARGUMENTS'
 runClient "clickhouse://:/?" --port "$CLICKHOUSE_PORT_TCP" --host "$CLICKHOUSE_HOST" 2>&1 | grep -o 'BAD_ARGUMENTS'
-runClient "clickhouse:" --database "$CLICKHOUSE_DATABASE" --port "$CLICKHOUSE_PORT_TCP" --host "$CLICKHOUSE_HOST" 2>&1 | grep -o 'BAD_ARGUMENTS' 
+runClient "clickhouse:" --database "$CLICKHOUSE_DATABASE" --port "$CLICKHOUSE_PORT_TCP" --host "$CLICKHOUSE_HOST" 2>&1 | grep -o 'BAD_ARGUMENTS'
 
 # Using clickhouse-client and connection is prohibited
 runClient "clickhouse:" --connection "connection" 2>&1 | grep -o 'BAD_ARGUMENTS'
 
 # Space is used in connection string (This is prohibited).
-runClient " clickhouse:" 2>&1 | grep -o 'BAD_ARGUMENTS'
+runClient " clickhouse:" 2>&1 | grep -o 'SYNTAX_ERROR'
 runClient "clickhouse: " 2>&1 | grep -o 'BAD_ARGUMENTS'
 runClient "clickhouse://host1 /" 2>&1 | grep -o 'BAD_ARGUMENTS'
 runClient "clickhouse://host1, host2/" 2>&1 | grep -o 'BAD_ARGUMENTS'
@@ -151,7 +151,7 @@ runClient "clickhouse://user1@localhost,default@localhost/" 2>&1 | grep -o 'BAD_
 # Using '@' in user name is prohibited. User name should be percent-encoded.
 runClient "clickhouse://my_mail@email.com@host/" 2>&1 | grep -o 'BAD_ARGUMENTS'
 
-# Wrong input cases 
+# Wrong input cases
 TEST_INDEX=100000
 # Invalid user name
 runClient "clickhouse://non_exist_user@$CLICKHOUSE_HOST:$CLICKHOUSE_PORT_TCP/" 2>&1 | grep -o 'Authentication failed'
diff --git a/tests/queries/0_stateless/03134_positional_arguments.reference b/tests/queries/0_stateless/03134_positional_arguments.reference
new file mode 100644
index 000000000000..f1cd5725b243
--- /dev/null
+++ b/tests/queries/0_stateless/03134_positional_arguments.reference
@@ -0,0 +1,16 @@
+1
+2
+3
+Hello
+1
+2
+is not supported
+Use one of the following commands
+1
+2
+3
+Hello
+1
+2
+3
+Hello
diff --git a/tests/queries/0_stateless/03134_positional_arguments.sh b/tests/queries/0_stateless/03134_positional_arguments.sh
new file mode 100755
index 000000000000..437c8226010f
--- /dev/null
+++ b/tests/queries/0_stateless/03134_positional_arguments.sh
@@ -0,0 +1,39 @@
+#!/usr/bin/env bash
+
+# Checks that "clickhouse-client/local --help" prints a brief summary of CLI arguments and "--help --verbose" prints all possible CLI arguments
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CUR_DIR"/../shell_config.sh
+
+# The best way to write the query parameter, explicit long option.
+${CLICKHOUSE_BINARY} --query "SELECT 1"
+
+# Shorthand option:
+${CLICKHOUSE_BINARY} -q "SELECT 2"
+
+# It is also accepted as a positional argument
+${CLICKHOUSE_BINARY} "SELECT 3"
+
+# The positional argument can go after normal arguments.
+${CLICKHOUSE_BINARY} --param_test Hello "SELECT {test:String}"
+
+# This is ambiguous: currently works, but does not have to.
+${CLICKHOUSE_BINARY} --query "SELECT 1" "SELECT 2"
+
+# Multiple positional arguments are not allowed.
+${CLICKHOUSE_BINARY} "SELECT 1" "SELECT 2" 2>&1 | grep -o -F 'is not supported'
+
+# This is ambiguous - in case of a single word, it can be confused with a tool name.
+${CLICKHOUSE_BINARY} "SELECT" 2>&1 | grep -o -F 'Use one of the following commands'
+
+# Everything works with clickhouse/ch/chl and also in clickhouse-local and clickhouse-client.
+
+${CLICKHOUSE_LOCAL} --query "SELECT 1"
+${CLICKHOUSE_LOCAL} -q "SELECT 2"
+${CLICKHOUSE_LOCAL} "SELECT 3"
+${CLICKHOUSE_LOCAL} --param_test Hello "SELECT {test:String}"
+
+${CLICKHOUSE_CLIENT_BINARY} --query "SELECT 1"
+${CLICKHOUSE_CLIENT_BINARY} -q "SELECT 2"
+${CLICKHOUSE_CLIENT_BINARY} "SELECT 3"
+${CLICKHOUSE_CLIENT_BINARY} --param_test Hello "SELECT {test:String}"
