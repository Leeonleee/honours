You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Improve performance by extracting common expressions from `OR` expressions of `WHERE` and `ON` expressions
The goal is rewrite `WHERE`/`ON` expressions with multiple `OR` expressions when there is common conditions on those `OR` expressions. For example `A AND ((B AND C) OR (B AND D) OR (B AND E))` should be rewritten to `A AND B AND (C OR D OR E)`.

In case of `WHERE` expressions this might help to skip some rows based on primary key and/or other indices. We would like to always rewrite the `WHERE` expressions.

In case of joins this should help to convert more cross joins to inner joins. If the join cannot be converted to inner join after rewriting the `ON` expression, the expression shouldn't be changed.

The steps for both `WHERE` and `ON` conditions:
1. Flatten the `OR` and `AND` expressions (e.g.: `A OR (B OR C) => A OR B OR C`)
2. Move the common expressions out from `OR` expressions
3. If nothing can be moved out, discard the flattening

Moving out expressions that only depend on one table (e.g.: `ON (t1.a = t2.a AND t1.x > 1) OR (t1.b = t2.b AND t1.x > 1)`) might break some queries, so [planning](https://github.com/ClickHouse/ClickHouse/blob/20bf1d7b721f26abc99bfd7ea572150d23a89666/src/Planner/PlannerJoins.cpp#L454-L472) has to be improved to not to break such queries.

A good example if the query 19 from TCP-H:

```sql
SELECT
     SUM(l_extendedprice* (1 - l_discount)) AS revenue
FROM
     lineitem,
     part
WHERE
     (
		p_partkey = l_partkey
		AND p_brand = 'Brand#12'
		AND p_container IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
		AND l_quantity >= 1 AND l_quantity <= 1 + 10
		AND p_size BETWEEN 1 AND 5
		AND l_shipmode IN ('AIR', 'AIR REG')
		AND l_shipinstruct = 'DELIVER IN PERSON'
     )
     OR
     (
		p_partkey = l_partkey
		AND p_brand = 'Brand#23'
		AND p_container IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
		AND l_quantity >= 10 AND l_quantity <= 10 + 10
		AND p_size BETWEEN 1 AND 10
		AND l_shipmode IN ('AIR', 'AIR REG')
		AND l_shipinstruct = 'DELIVER IN PERSON'
     )
     OR
     (
		p_partkey = l_partkey
		AND p_brand = 'Brand#34'
		AND p_container IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
		AND l_quantity >= 20 AND l_quantity <= 20 + 10
		AND p_size BETWEEN 1 AND 15
		AND l_shipmode IN ('AIR', 'AIR REG')
		AND l_shipinstruct = 'DELIVER IN PERSON'
     )
```

should become:

```sql
SELECT
     SUM(l_extendedprice* (1 - l_discount)) AS revenue
FROM
     lineitem,
     part
WHERE
		p_partkey = l_partkey
		AND l_shipinstruct = 'DELIVER IN PERSON'
		AND l_shipmode IN ('AIR', 'AIR REG')
		AND 
			(
				(
				    p_brand = 'Brand#12'
					AND p_container IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
					AND l_quantity >= 1 AND l_quantity <= 1 + 10
					AND p_size BETWEEN 1 AND 5
				)
				OR
				(
				    p_brand = 'Brand#23'
					AND p_container IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
					AND l_quantity >= 10 AND l_quantity <= 10 + 10
					AND p_size BETWEEN 1 AND 10
				)
				OR
				(
				    p_brand = 'Brand#34'
					AND p_container IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
					AND l_quantity >= 20 AND l_quantity <= 20 + 10
					AND p_size BETWEEN 1 AND 15
				)
			)
```

**Future ideas**:
- Detect when some conditions can be combined in the `OR` expressions to make filtering better, e.g.: `l_quantity >= 1 AND l_quantity <= 20 + 10` could be added to the root `AND` expression to prefilter the results
- Implement `Join Dependent Predicate Duplication` from [here](https://www.vldb.org/pvldb/vol13/p1206-dreseler.pdf), section 4.4. Basically extract and copy the part of `ON` expressions which can be used to prune the input data. It is a more generic version of the first point.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
