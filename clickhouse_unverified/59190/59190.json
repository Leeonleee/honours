{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 59190,
  "instance_id": "ClickHouse__ClickHouse-59190",
  "issue_numbers": [
    "59126"
  ],
  "base_commit": "a66d409534ed8faf6edf5f1d0b96019e3bdb0682",
  "patch": "diff --git a/src/Functions/FunctionsConversion.h b/src/Functions/FunctionsConversion.h\nindex e04d547e579d..11ce68eba21a 100644\n--- a/src/Functions/FunctionsConversion.h\n+++ b/src/Functions/FunctionsConversion.h\n@@ -1130,6 +1130,9 @@ struct ConvertImpl<FromDataType, DataTypeString, Name, ConvertDefaultBehaviorTag\n \n                 ColumnUInt8::MutablePtr null_map = copyNullMap(datetime_arg.column);\n \n+                if (!null_map && arguments.size() > 1)\n+                    null_map = copyNullMap(arguments[1].column->convertToFullColumnIfConst());\n+\n                 if (null_map)\n                 {\n                     for (size_t i = 0; i < size; ++i)\n@@ -1154,7 +1157,7 @@ struct ConvertImpl<FromDataType, DataTypeString, Name, ConvertDefaultBehaviorTag\n                         if (!time_zone_column && arguments.size() > 1)\n                         {\n                             if (!arguments[1].column.get()->getDataAt(i).toString().empty())\n-                            time_zone = &DateLUT::instance(arguments[1].column.get()->getDataAt(i).toString());\n+                                time_zone = &DateLUT::instance(arguments[1].column.get()->getDataAt(i).toString());\n                             else\n                                 throw Exception(ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT, \"Provided time zone must be non-empty\");\n                         }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02972_to_string_nullable_timezone.reference b/tests/queries/0_stateless/02972_to_string_nullable_timezone.reference\nnew file mode 100644\nindex 000000000000..6c362c0207ec\n--- /dev/null\n+++ b/tests/queries/0_stateless/02972_to_string_nullable_timezone.reference\n@@ -0,0 +1,3 @@\n+2022-01-01 11:13:14\n+2022-01-01 11:13:14\n+2022-01-01 11:13:14\ndiff --git a/tests/queries/0_stateless/02972_to_string_nullable_timezone.sql b/tests/queries/0_stateless/02972_to_string_nullable_timezone.sql\nnew file mode 100644\nindex 000000000000..d8cff4f3c007\n--- /dev/null\n+++ b/tests/queries/0_stateless/02972_to_string_nullable_timezone.sql\n@@ -0,0 +1,4 @@\n+SET session_timezone='Europe/Amsterdam';\n+SELECT toString(toDateTime('2022-01-01 12:13:14'), CAST('UTC', 'Nullable(String)'));\n+SELECT toString(toDateTime('2022-01-01 12:13:14'), materialize(CAST('UTC', 'Nullable(String)')));\n+SELECT toString(CAST(toDateTime('2022-01-01 12:13:14'), 'Nullable(DateTime)'), materialize(CAST('UTC', 'Nullable(String)')));\n",
  "problem_statement": "crash in toString(ts, Nullable('UTC')) with nullable timezone\n\r\n\r\n**How to reproduce**\r\n\r\n```sql\r\nSELECT toString(now(), materialize(CAST('UTC', 'Nullable(String)')))\r\n\r\nQuery id: 496dc875-ed87-4f84-808e-03f3413a2774\r\n\r\n[1]    8652 abort      clickhouse-local -mn\r\n```\r\n\r\n\n",
  "hints_text": "Affects to all stable releases from 23.9. Versions prior to this one get an error:\r\n```\r\nCode: 44. DB::Exception: Illegal type of argument #2 'timezone' of function toString, expected const String, got String: While processing toString(now(), materialize(CAST('UTC', 'Nullable(String)'))). (ILLEGAL_COLUMN)\r\n```",
  "created_at": "2024-01-24T22:43:24Z"
}