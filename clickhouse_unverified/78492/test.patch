diff --git a/tests/ci/build_download_helper.py b/tests/ci/build_download_helper.py
index f9b4d0feab05..51b17a9c4e46 100644
--- a/tests/ci/build_download_helper.py
+++ b/tests/ci/build_download_helper.py
@@ -132,7 +132,7 @@ def set_auth_header():
     BuildNames.PACKAGE_DEBUG: "artifact_report_build_amd_debug.json",
     BuildNames.PACKAGE_AARCH64: "artifact_report_build_arm_release.json",
     BuildNames.PACKAGE_AARCH64_ASAN: "artifact_report_build_arm_asan.json",
-    BuildNames.PACKAGE_RELEASE_COVERAGE: "artifact_report_build_amd_coverage.json",
+    BuildNames.PACKAGE_RELEASE_COVERAGE: "artifact_report_build_arm_coverage.json",
     BuildNames.BINARY_RELEASE: "artifact_report_build_amd_binary.json",
     BuildNames.BINARY_TIDY: "artifact_report_build_amd_tidy.json",
     BuildNames.BINARY_DARWIN: "artifact_report_build_amd_darwin.json",
diff --git a/tests/ci/ci_config.py b/tests/ci/ci_config.py
index 88a35cfa0bd7..c72939a186ca 100644
--- a/tests/ci/ci_config.py
+++ b/tests/ci/ci_config.py
@@ -326,7 +326,7 @@ class CI:
             required_builds=[BuildNames.PACKAGE_DEBUG], num_batches=1
         ),
         JobNames.STATELESS_TEST_AZURE_ASAN: CommonJobConfigs.STATELESS_TEST.with_properties(
-            required_builds=[BuildNames.PACKAGE_ASAN], num_batches=3, release_only=True
+            required_builds=[BuildNames.PACKAGE_AARCH64_ASAN], num_batches=3, release_only=True
         ),
         JobNames.STATELESS_TEST_S3_TSAN: CommonJobConfigs.STATELESS_TEST.with_properties(
             required_builds=[BuildNames.PACKAGE_TSAN],
@@ -339,7 +339,7 @@ class CI:
             required_builds=[BuildNames.PACKAGE_TSAN],
         ),
         JobNames.STRESS_TEST_ASAN: CommonJobConfigs.STRESS_TEST.with_properties(
-            required_builds=[BuildNames.PACKAGE_ASAN],
+            required_builds=[BuildNames.PACKAGE_AARCH64_ASAN],
             random_bucket="stress_with_sanitizer",
         ),
         JobNames.STRESS_TEST_UBSAN: CommonJobConfigs.STRESS_TEST.with_properties(
@@ -357,7 +357,7 @@ class CI:
             required_builds=[BuildNames.PACKAGE_MSAN], release_only=True
         ),
         JobNames.UPGRADE_TEST_ASAN: CommonJobConfigs.UPGRADE_TEST.with_properties(
-            required_builds=[BuildNames.PACKAGE_ASAN],
+            required_builds=[BuildNames.PACKAGE_AARCH64_ASAN],
             random_bucket="upgrade_with_sanitizer",
             pr_only=True,
         ),
@@ -434,7 +434,7 @@ class CI:
             required_builds=[BuildNames.PACKAGE_DEBUG],
         ),
         JobNames.AST_FUZZER_TEST_ASAN: CommonJobConfigs.ASTFUZZER_TEST.with_properties(
-            required_builds=[BuildNames.PACKAGE_ASAN],
+            required_builds=[BuildNames.PACKAGE_AARCH64_ASAN],
         ),
         JobNames.AST_FUZZER_TEST_MSAN: CommonJobConfigs.ASTFUZZER_TEST.with_properties(
             required_builds=[BuildNames.PACKAGE_MSAN],
@@ -449,7 +449,7 @@ class CI:
             required_builds=[BuildNames.PACKAGE_DEBUG],
         ),
         JobNames.BUZZHOUSE_TEST_ASAN: CommonJobConfigs.BUZZHOUSE_TEST.with_properties(
-            required_builds=[BuildNames.PACKAGE_ASAN],
+            required_builds=[BuildNames.PACKAGE_AARCH64_ASAN],
         ),
         JobNames.BUZZHOUSE_TEST_MSAN: CommonJobConfigs.BUZZHOUSE_TEST.with_properties(
             required_builds=[BuildNames.PACKAGE_MSAN],
@@ -616,6 +616,7 @@ def get_job_ci_stage(cls, job_name: str, non_blocking_ci: bool = False) -> str:
     @classmethod
     def get_job_config(cls, check_name: str) -> JobConfig:
         # remove job batch if it exists in check name (hack for migration to praktika)
+        check_name = check_name.replace("arm_", "").replace("amd_", "")  # hack for new names in praktika
         check_name = re.sub(r",\s*\d+/\d+\)", ")", check_name)
         return cls.JOB_CONFIGS[check_name]
 
@@ -746,7 +747,7 @@ def is_workflow_ok(cls) -> bool:
     "Build (amd_ubsan)": BuildNames.PACKAGE_UBSAN,
     "Build (arm_release)": BuildNames.PACKAGE_AARCH64,
     "Build (arm_asan)": BuildNames.PACKAGE_AARCH64_ASAN,
-    "Build (amd_coverage)": BuildNames.PACKAGE_RELEASE_COVERAGE,
+    "Build (arm_coverage)": BuildNames.PACKAGE_RELEASE_COVERAGE,
     "Build (arm_binary)": BuildNames.BINARY_AARCH64,
     "Build (amd_tidy)": BuildNames.BINARY_TIDY,
     "Build (amd_darwin)": BuildNames.BINARY_DARWIN,
