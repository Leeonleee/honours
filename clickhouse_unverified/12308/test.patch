diff --git a/src/Compression/tests/gtest_compressionCodec.cpp b/src/Compression/tests/gtest_compressionCodec.cpp
index 3609e9f9d36e..edcb6050abb3 100644
--- a/src/Compression/tests/gtest_compressionCodec.cpp
+++ b/src/Compression/tests/gtest_compressionCodec.cpp
@@ -13,6 +13,7 @@
 
 #include <fmt/format.h>
 
+#include <random>
 #include <bitset>
 #include <cmath>
 #include <initializer_list>
@@ -473,7 +474,8 @@ CompressionCodecPtr makeCodec(const std::string & codec_string, const DataTypePt
 }
 
 template <typename Timer>
-void testTranscoding(Timer & timer, ICompressionCodec & codec, const CodecTestSequence & test_sequence, std::optional<double> expected_compression_ratio = std::optional<double>{})
+void testTranscoding(Timer & timer, ICompressionCodec & codec, const CodecTestSequence & test_sequence,
+                     std::optional<double> expected_compression_ratio = {})
 {
     const auto & source_data = test_sequence.serialized_data;
 
@@ -540,11 +542,6 @@ TEST_P(CodecTest, TranscodingWithDataType)
     testTranscoding(*codec);
 }
 
-TEST_P(CodecTest, TranscodingWithoutDataType)
-{
-    const auto codec = makeCodec(CODEC_WITHOUT_DATA_TYPE);
-    testTranscoding(*codec);
-}
 
 // Param is tuple-of-tuple to simplify instantiating with values, since typically group of cases test only one codec.
 class CodecTestCompatibility : public ::testing::TestWithParam<std::tuple<Codec, std::tuple<CodecTestSequence, std::string>>>
diff --git a/tests/queries/0_stateless/00804_test_custom_compression_codecs.reference b/tests/queries/0_stateless/00804_test_custom_compression_codecs.reference
index 00556b0f8c9a..a0c13b9ca476 100644
--- a/tests/queries/0_stateless/00804_test_custom_compression_codecs.reference
+++ b/tests/queries/0_stateless/00804_test_custom_compression_codecs.reference
@@ -9,7 +9,7 @@
 10003
 274972506.6
 9175437371954010821
-CREATE TABLE default.compression_codec_multiple_more_types
(
    `id` Decimal(38, 13) CODEC(ZSTD(1), LZ4, ZSTD(1), ZSTD(1), Delta(2), Delta(4), Delta(1), LZ4HC(0)),
    `data` FixedString(12) CODEC(ZSTD(1), ZSTD(1), Delta(1), Delta(1), Delta(1), NONE, NONE, NONE, LZ4HC(0)),
    `ddd.age` Array(UInt8) CODEC(LZ4, LZ4HC(0), NONE, NONE, NONE, ZSTD(1), Delta(8)),
    `ddd.Name` Array(String) CODEC(LZ4, LZ4HC(0), NONE, NONE, NONE, ZSTD(1), Delta(8))
)
ENGINE = MergeTree()
ORDER BY tuple()
SETTINGS index_granularity = 8192
+CREATE TABLE default.compression_codec_multiple_more_types
(
    `id` Decimal(38, 13) CODEC(ZSTD(1), LZ4, ZSTD(1), ZSTD(1), Delta(2), Delta(4), Delta(1), LZ4HC(0)),
    `data` FixedString(12) CODEC(ZSTD(1), ZSTD(1), NONE, NONE, NONE, LZ4HC(0)),
    `ddd.age` Array(UInt8) CODEC(LZ4, LZ4HC(0), NONE, NONE, NONE, ZSTD(1), Delta(8)),
    `ddd.Name` Array(String) CODEC(LZ4, LZ4HC(0), NONE, NONE, NONE, ZSTD(1), Delta(8))
)
ENGINE = MergeTree()
ORDER BY tuple()
SETTINGS index_granularity = 8192
 1.5555555555555	hello world!	[77]	['John']
 7.1000000000000	xxxxxxxxxxxx	[127]	['Henry']
 !
diff --git a/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql b/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql
index 61298de25482..87862f46e056 100644
--- a/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql
+++ b/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql
@@ -88,6 +88,12 @@ CREATE TABLE compression_codec_multiple_more_types (
     id Decimal128(13) CODEC(ZSTD, LZ4, ZSTD, ZSTD, Delta(2), Delta(4), Delta(1), LZ4HC),
     data FixedString(12) CODEC(ZSTD, ZSTD, Delta, Delta, Delta, NONE, NONE, NONE, LZ4HC),
     ddd Nested (age UInt8, Name String) CODEC(LZ4, LZ4HC, NONE, NONE, NONE, ZSTD, Delta(8))
+) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
+
+CREATE TABLE compression_codec_multiple_more_types (
+    id Decimal128(13) CODEC(ZSTD, LZ4, ZSTD, ZSTD, Delta(2), Delta(4), Delta(1), LZ4HC),
+    data FixedString(12) CODEC(ZSTD, ZSTD, NONE, NONE, NONE, LZ4HC),
+    ddd Nested (age UInt8, Name String) CODEC(LZ4, LZ4HC, NONE, NONE, NONE, ZSTD, Delta(8))
 ) ENGINE = MergeTree() ORDER BY tuple();
 
 SHOW CREATE TABLE compression_codec_multiple_more_types;
@@ -105,7 +111,7 @@ SET network_zstd_compression_level = 5;
 CREATE TABLE compression_codec_multiple_with_key (
     somedate Date CODEC(ZSTD, ZSTD, ZSTD(12), LZ4HC(12), Delta, Delta),
     id UInt64 CODEC(LZ4, ZSTD, Delta, NONE, LZ4HC, Delta),
-    data String CODEC(ZSTD(2), Delta, LZ4HC, NONE, LZ4, LZ4)
+    data String CODEC(ZSTD(2), Delta(1), LZ4HC, NONE, LZ4, LZ4)
 ) ENGINE = MergeTree() PARTITION BY somedate ORDER BY id SETTINGS index_granularity = 2;
 
 
@@ -131,13 +137,13 @@ DROP TABLE IF EXISTS test_default_delta;
 
 CREATE TABLE test_default_delta(
     id UInt64 CODEC(Delta),
-    data String CODEC(Delta),
+    data String CODEC(Delta(1)),
     somedate Date CODEC(Delta),
     somenum Float64 CODEC(Delta),
-    somestr FixedString(3) CODEC(Delta),
+    somestr FixedString(3) CODEC(Delta(1)),
     othernum Int64 CODEC(Delta),
     yetothernum Float32 CODEC(Delta),
-    ddd Nested (age UInt8, Name String, OName String, BName String) CODEC(Delta)
+    ddd Nested (age UInt8, Name String, OName String, BName String) CODEC(Delta(1))
 ) ENGINE = MergeTree() ORDER BY tuple();
 
 SHOW CREATE TABLE test_default_delta;
diff --git a/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated.sql b/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated.sql
index 688233868539..90d917ed3c56 100644
--- a/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated.sql
+++ b/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated.sql
@@ -104,7 +104,7 @@ DROP TABLE IF EXISTS test.compression_codec_multiple_more_types_replicated;
 
 CREATE TABLE test.compression_codec_multiple_more_types_replicated (
     id Decimal128(13) CODEC(ZSTD, LZ4, ZSTD, ZSTD, Delta(2), Delta(4), Delta(1), LZ4HC),
-    data FixedString(12) CODEC(ZSTD, ZSTD, Delta, Delta, Delta, NONE, NONE, NONE, LZ4HC),
+    data FixedString(12) CODEC(ZSTD, ZSTD, Delta(1), Delta(1), Delta(1), NONE, NONE, NONE, LZ4HC),
     ddd Nested (age UInt8, Name String) CODEC(LZ4, LZ4HC, NONE, NONE, NONE, ZSTD, Delta(8))
 ) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test/compression_codec_multiple_more_types_replicated', '1') ORDER BY tuple();
 
@@ -123,7 +123,7 @@ SET network_zstd_compression_level = 5;
 CREATE TABLE test.compression_codec_multiple_with_key_replicated (
     somedate Date CODEC(ZSTD, ZSTD, ZSTD(12), LZ4HC(12), Delta, Delta),
     id UInt64 CODEC(LZ4, ZSTD, Delta, NONE, LZ4HC, Delta),
-    data String CODEC(ZSTD(2), Delta, LZ4HC, NONE, LZ4, LZ4)
+    data String CODEC(ZSTD(2), Delta(1), LZ4HC, NONE, LZ4, LZ4)
 ) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test/compression_codec_multiple_with_key_replicated', '1') PARTITION BY somedate ORDER BY id SETTINGS index_granularity = 2;
 
 
diff --git a/tests/queries/0_stateless/01380_coded_delta_exception_code.reference b/tests/queries/0_stateless/01380_coded_delta_exception_code.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/01380_coded_delta_exception_code.sql b/tests/queries/0_stateless/01380_coded_delta_exception_code.sql
new file mode 100644
index 000000000000..fc679e30e3f9
--- /dev/null
+++ b/tests/queries/0_stateless/01380_coded_delta_exception_code.sql
@@ -0,0 +1,10 @@
+CREATE TABLE delta_codec_synthetic (`id` UInt64 NULL CODEC(Delta, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
+CREATE TABLE delta_codec_synthetic (`id` UInt64 NULL CODEC(DoubleDelta, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
+CREATE TABLE delta_codec_synthetic (`id` UInt64 NULL CODEC(Gorilla, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
+
+CREATE TABLE delta_codec_synthetic (`id` Decimal(38, 10) CODEC(Delta, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
+CREATE TABLE delta_codec_synthetic (`id` Decimal(38, 10) CODEC(DoubleDelta, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
+CREATE TABLE delta_codec_synthetic (`id` Decimal(38, 10) CODEC(Gorilla, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
+
+CREATE TABLE delta_codec_synthetic (`id` UInt64 CODEC(DoubleDelta(3), ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
+CREATE TABLE delta_codec_synthetic (`id` UInt64 CODEC(Gorilla('hello, world'), ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError 36 }
