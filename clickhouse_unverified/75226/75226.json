{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 75226,
  "instance_id": "ClickHouse__ClickHouse-75226",
  "issue_numbers": [
    "75225"
  ],
  "base_commit": "a561de2f97520e7cfa25f1b28c271bbe81a8d88a",
  "patch": "diff --git a/src/Interpreters/Aggregator.cpp b/src/Interpreters/Aggregator.cpp\nindex f80383cb9d07..31c1d1d6455c 100644\n--- a/src/Interpreters/Aggregator.cpp\n+++ b/src/Interpreters/Aggregator.cpp\n@@ -239,7 +239,7 @@ size_t Aggregator::Params::getMaxBytesBeforeExternalGroupBy(size_t max_bytes_bef\n             throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Setting max_bytes_ratio_before_external_group_by should be >= 0 and < 1 ({})\", ratio);\n \n         auto available_system_memory = getMostStrictAvailableSystemMemory();\n-        if (available_system_memory.has_value())\n+        if (available_system_memory.has_value() && !std::isnan(ratio))\n         {\n             size_t ratio_in_bytes = static_cast<size_t>(*available_system_memory * ratio);\n             if (threshold)\n@@ -248,9 +248,9 @@ size_t Aggregator::Params::getMaxBytesBeforeExternalGroupBy(size_t max_bytes_bef\n                 threshold = ratio_in_bytes;\n \n             LOG_TRACE(getLogger(\"Aggregator\"), \"Adjusting memory limit before external aggregation with {} (ratio: {}, available system memory: {})\",\n-                formatReadableSizeWithBinarySuffix(ratio_in_bytes),\n-                ratio,\n-                formatReadableSizeWithBinarySuffix(*available_system_memory));\n+                    formatReadableSizeWithBinarySuffix(ratio_in_bytes),\n+                    ratio,\n+                    formatReadableSizeWithBinarySuffix(*available_system_memory));\n         }\n         else\n         {\ndiff --git a/src/Processors/QueryPlan/SortingStep.cpp b/src/Processors/QueryPlan/SortingStep.cpp\nindex 7e04ebc6ff7b..38ddc7986ca1 100644\n--- a/src/Processors/QueryPlan/SortingStep.cpp\n+++ b/src/Processors/QueryPlan/SortingStep.cpp\n@@ -78,7 +78,7 @@ size_t getMaxBytesBeforeExternalSort(size_t max_bytes_before_external_sort, doub\n             throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Setting max_bytes_ratio_before_external_sort should be >= 0 and < 1 ({})\", ratio);\n \n         auto available_system_memory = getMostStrictAvailableSystemMemory();\n-        if (available_system_memory.has_value())\n+        if (available_system_memory.has_value() && !std::isnan(ratio))\n         {\n             size_t ratio_in_bytes = static_cast<size_t>(*available_system_memory * ratio);\n             if (threshold)\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03322_nan_in_aggregator.reference b/tests/queries/0_stateless/03322_nan_in_aggregator.reference\nnew file mode 100644\nindex 000000000000..9ef72f6f37ce\n--- /dev/null\n+++ b/tests/queries/0_stateless/03322_nan_in_aggregator.reference\n@@ -0,0 +1,2 @@\n+500\n+500\ndiff --git a/tests/queries/0_stateless/03322_nan_in_aggregator.sql b/tests/queries/0_stateless/03322_nan_in_aggregator.sql\nnew file mode 100644\nindex 000000000000..7afa6bac66f1\n--- /dev/null\n+++ b/tests/queries/0_stateless/03322_nan_in_aggregator.sql\n@@ -0,0 +1,9 @@\n+SET send_logs_level='fatal';\n+\n+-- max_bytes_ratio_before_external_group_by = nan - regarding fix in Aggregator.cpp, \n+-- max_bytes_ratio_before_external_sort = nan - regarding fix in SortingStep.cpp\n+SELECT uniqExact(CAST(number, 'String'))\n+FROM numbers(1000.)\n+GROUP BY CAST(number % 2, 'String')\n+ORDER BY uniqExact(CAST(number, 'String')) ASC NULLS FIRST\n+SETTINGS max_bytes_ratio_before_external_group_by = nan, max_bytes_ratio_before_external_sort = nan;\n",
  "problem_statement": "Aggregator.cpp:nan is outside the range of representable values\n\n",
  "hints_text": "",
  "created_at": "2025-01-29T15:53:26Z",
  "modified_files": [
    "src/Interpreters/Aggregator.cpp",
    "src/Processors/QueryPlan/SortingStep.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03322_nan_in_aggregator.reference",
    "b/tests/queries/0_stateless/03322_nan_in_aggregator.sql"
  ]
}