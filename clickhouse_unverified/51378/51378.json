{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 51378,
  "instance_id": "ClickHouse__ClickHouse-51378",
  "issue_numbers": [
    "43358"
  ],
  "base_commit": "aac8eda40a1ef610970e4a6eb35c84fff145d262",
  "patch": "diff --git a/src/Common/QueryProfiler.cpp b/src/Common/QueryProfiler.cpp\nindex 085c8fb8af49..313d4b77739d 100644\n--- a/src/Common/QueryProfiler.cpp\n+++ b/src/Common/QueryProfiler.cpp\n@@ -120,6 +120,15 @@ void Timer::createIfNecessary(UInt64 thread_id, int clock_type, int pause_signal\n                 throw Exception(ErrorCodes::CANNOT_CREATE_TIMER, \"Failed to create thread timer. The function \"\n                                 \"'timer_create' returned non-zero but didn't set errno. This is bug in your OS.\");\n \n+            /// For example, it cannot be created if the server is run under QEMU:\n+            /// \"Failed to create thread timer, errno: 11, strerror: Resource temporarily unavailable.\"\n+\n+            /// You could accidentally run the server under QEMU without being aware,\n+            /// if you use Docker image for a different architecture,\n+            /// and you have the \"binfmt-misc\" kernel module, and \"qemu-user\" tools.\n+\n+            /// Also, it cannot be created if the server has too many threads.\n+\n             throwFromErrno(\"Failed to create thread timer\", ErrorCodes::CANNOT_CREATE_TIMER);\n         }\n         timer_id.emplace(local_timer_id);\ndiff --git a/src/Common/StringSearcher.h b/src/Common/StringSearcher.h\nindex 3ed192d05f33..b3065354f654 100644\n--- a/src/Common/StringSearcher.h\n+++ b/src/Common/StringSearcher.h\n@@ -793,88 +793,6 @@ class StringSearcher<false, false> : public StringSearcherBase\n     }\n };\n \n-\n-// Searches for needle surrounded by token-separators.\n-// Separators are anything inside ASCII (0-128) and not alphanum.\n-// Any value outside of basic ASCII (>=128) is considered a non-separator symbol, hence UTF-8 strings\n-// should work just fine. But any Unicode whitespace is not considered a token separtor.\n-template <typename StringSearcher>\n-class TokenSearcher : public StringSearcherBase\n-{\n-    StringSearcher searcher;\n-    size_t needle_size;\n-\n-public:\n-\n-    template <typename CharT>\n-    requires (sizeof(CharT) == 1)\n-    static bool isValidNeedle(const CharT * needle_, size_t needle_size_)\n-    {\n-        return std::none_of(needle_, needle_ + needle_size_, isTokenSeparator);\n-    }\n-\n-    template <typename CharT>\n-    requires (sizeof(CharT) == 1)\n-    TokenSearcher(const CharT * needle_, size_t needle_size_)\n-        : searcher(needle_, needle_size_)\n-        , needle_size(needle_size_)\n-    {\n-        /// The caller is responsible for calling isValidNeedle()\n-        chassert(isValidNeedle(needle_, needle_size_));\n-    }\n-\n-    template <typename CharT>\n-    requires (sizeof(CharT) == 1)\n-    ALWAYS_INLINE bool compare(const CharT * haystack, const CharT * haystack_end, const CharT * pos) const\n-    {\n-        // use searcher only if pos is in the beginning of token and pos + searcher.needle_size is end of token.\n-        if (isToken(haystack, haystack_end, pos))\n-            return searcher.compare(haystack, haystack_end, pos);\n-\n-        return false;\n-    }\n-\n-    template <typename CharT>\n-    requires (sizeof(CharT) == 1)\n-    const CharT * search(const CharT * haystack, const CharT * const haystack_end) const\n-    {\n-        // use searcher.search(), then verify that returned value is a token\n-        // if it is not, skip it and re-run\n-\n-        const auto * pos = haystack;\n-        while (pos < haystack_end)\n-        {\n-            pos = searcher.search(pos, haystack_end);\n-            if (pos == haystack_end || isToken(haystack, haystack_end, pos))\n-                return pos;\n-\n-            // assuming that heendle does not contain any token separators.\n-            pos += needle_size;\n-        }\n-        return haystack_end;\n-    }\n-\n-    template <typename CharT>\n-    requires (sizeof(CharT) == 1)\n-    const CharT * search(const CharT * haystack, size_t haystack_size) const\n-    {\n-        return search(haystack, haystack + haystack_size);\n-    }\n-\n-    template <typename CharT>\n-    requires (sizeof(CharT) == 1)\n-    ALWAYS_INLINE bool isToken(const CharT * haystack, const CharT * const haystack_end, const CharT* p) const\n-    {\n-        return (p == haystack || isTokenSeparator(*(p - 1)))\n-             && (p + needle_size >= haystack_end || isTokenSeparator(*(p + needle_size)));\n-    }\n-\n-    ALWAYS_INLINE static bool isTokenSeparator(const uint8_t c)\n-    {\n-        return !(isAlphaNumericASCII(c) || !isASCII(c));\n-    }\n-};\n-\n }\n \n using ASCIICaseSensitiveStringSearcher =   impl::StringSearcher<true, true>;\n@@ -882,9 +800,6 @@ using ASCIICaseInsensitiveStringSearcher = impl::StringSearcher<false, true>;\n using UTF8CaseSensitiveStringSearcher =    impl::StringSearcher<true, false>;\n using UTF8CaseInsensitiveStringSearcher =  impl::StringSearcher<false, false>;\n \n-using ASCIICaseSensitiveTokenSearcher =    impl::TokenSearcher<ASCIICaseSensitiveStringSearcher>;\n-using ASCIICaseInsensitiveTokenSearcher =  impl::TokenSearcher<ASCIICaseInsensitiveStringSearcher>;\n-\n /// Use only with short haystacks where cheap initialization is required.\n template <bool CaseInsensitive>\n struct StdLibASCIIStringSearcher\n@@ -906,11 +821,11 @@ struct StdLibASCIIStringSearcher\n         if constexpr (CaseInsensitive)\n             return std::search(\n                 haystack_start, haystack_end, needle_start, needle_end,\n-                [](char c1, char c2) {return std::toupper(c1) == std::toupper(c2);});\n+                [](char c1, char c2) { return std::toupper(c1) == std::toupper(c2); });\n         else\n             return std::search(\n                 haystack_start, haystack_end, needle_start, needle_end,\n-                [](char c1, char c2) {return c1 == c2;});\n+                [](char c1, char c2) { return c1 == c2; });\n     }\n \n     template <typename CharT>\ndiff --git a/src/Common/Volnitsky.h b/src/Common/Volnitsky.h\nindex 8f9aa23a38aa..3360c197984f 100644\n--- a/src/Common/Volnitsky.h\n+++ b/src/Common/Volnitsky.h\n@@ -730,9 +730,6 @@ using VolnitskyUTF8 = VolnitskyBase<true, false, UTF8CaseSensitiveStringSearcher\n using VolnitskyCaseInsensitive = VolnitskyBase<false, true, ASCIICaseInsensitiveStringSearcher>; /// ignores non-ASCII bytes\n using VolnitskyCaseInsensitiveUTF8 = VolnitskyBase<false, false, UTF8CaseInsensitiveStringSearcher>;\n \n-using VolnitskyCaseSensitiveToken = VolnitskyBase<true, true, ASCIICaseSensitiveTokenSearcher>;\n-using VolnitskyCaseInsensitiveToken = VolnitskyBase<false, true, ASCIICaseInsensitiveTokenSearcher>;\n-\n using MultiVolnitsky = MultiVolnitskyBase<true, true, ASCIICaseSensitiveStringSearcher>;\n using MultiVolnitskyUTF8 = MultiVolnitskyBase<true, false, UTF8CaseSensitiveStringSearcher>;\n using MultiVolnitskyCaseInsensitive = MultiVolnitskyBase<false, true, ASCIICaseInsensitiveStringSearcher>;\ndiff --git a/src/Functions/HasTokenImpl.h b/src/Functions/HasTokenImpl.h\nindex 8cacdfff99d9..fdec5fcb0b7b 100644\n--- a/src/Functions/HasTokenImpl.h\n+++ b/src/Functions/HasTokenImpl.h\n@@ -17,7 +17,7 @@ namespace ErrorCodes\n \n /** Token search the string, means that needle must be surrounded by some separator chars, like whitespace or puctuation.\n   */\n-template <typename Name, typename TokenSearcher, bool negate>\n+template <typename Name, typename Searcher, bool negate>\n struct HasTokenImpl\n {\n     using ResultType = UInt8;\n@@ -46,7 +46,7 @@ struct HasTokenImpl\n         const UInt8 * const end = haystack_data.data() + haystack_data.size();\n         const UInt8 * pos = begin;\n \n-        if (!ASCIICaseSensitiveTokenSearcher::isValidNeedle(pattern.data(), pattern.size()))\n+        if (!std::none_of(pattern.begin(), pattern.end(), isTokenSeparator))\n         {\n             if (res_null)\n             {\n@@ -58,7 +58,8 @@ struct HasTokenImpl\n                 throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Needle must not contain whitespace or separator characters\");\n         }\n \n-        TokenSearcher searcher(pattern.data(), pattern.size(), end - pos);\n+        size_t pattern_size = pattern.size();\n+        Searcher searcher(pattern.data(), pattern_size, end - pos);\n         if (res_null)\n             std::ranges::fill(res_null->getData(), false);\n \n@@ -67,21 +68,31 @@ struct HasTokenImpl\n         /// We will search for the next occurrence in all rows at once.\n         while (pos < end && end != (pos = searcher.search(pos, end - pos)))\n         {\n-            /// Let's determine which index it refers to.\n-            while (begin + haystack_offsets[i] <= pos)\n+            /// The found substring is a token\n+            if ((pos == begin || isTokenSeparator(pos[-1]))\n+                && (pos + pattern_size == end || isTokenSeparator(pos[pattern_size])))\n             {\n-                res[i] = negate;\n+                /// Let's determine which index it refers to.\n+                while (begin + haystack_offsets[i] <= pos)\n+                {\n+                    res[i] = negate;\n+                    ++i;\n+                }\n+\n+                /// We check that the entry does not pass through the boundaries of strings.\n+                if (pos + pattern.size() < begin + haystack_offsets[i])\n+                    res[i] = !negate;\n+                else\n+                    res[i] = negate;\n+\n+                pos = begin + haystack_offsets[i];\n                 ++i;\n             }\n-\n-            /// We check that the entry does not pass through the boundaries of strings.\n-            if (pos + pattern.size() < begin + haystack_offsets[i])\n-                res[i] = !negate;\n             else\n-                res[i] = negate;\n-\n-            pos = begin + haystack_offsets[i];\n-            ++i;\n+            {\n+                /// Not a token. Jump over it.\n+                pos += pattern_size;\n+            }\n         }\n \n         /// Tail, in which there can be no substring.\n@@ -113,6 +124,12 @@ struct HasTokenImpl\n     {\n         throw Exception(ErrorCodes::ILLEGAL_COLUMN, \"Function '{}' doesn't support FixedString haystack argument\", name);\n     }\n+\n+private:\n+    static bool isTokenSeparator(UInt8 c)\n+    {\n+        return isASCII(c) && !isAlphaNumericASCII(c);\n+    }\n };\n \n }\ndiff --git a/src/Functions/hasToken.cpp b/src/Functions/hasToken.cpp\nindex b90750ea233d..fa41abf26415 100644\n--- a/src/Functions/hasToken.cpp\n+++ b/src/Functions/hasToken.cpp\n@@ -6,6 +6,7 @@\n \n namespace DB\n {\n+\n struct NameHasToken\n {\n     static constexpr auto name = \"hasToken\";\n@@ -17,9 +18,9 @@ struct NameHasTokenOrNull\n };\n \n using FunctionHasToken\n-    = FunctionsStringSearch<HasTokenImpl<NameHasToken, VolnitskyCaseSensitiveToken, false>>;\n+    = FunctionsStringSearch<HasTokenImpl<NameHasToken, Volnitsky, false>>;\n using FunctionHasTokenOrNull\n-    = FunctionsStringSearch<HasTokenImpl<NameHasTokenOrNull, VolnitskyCaseSensitiveToken, false>, ExecutionErrorPolicy::Null>;\n+    = FunctionsStringSearch<HasTokenImpl<NameHasTokenOrNull, Volnitsky, false>, ExecutionErrorPolicy::Null>;\n \n REGISTER_FUNCTION(HasToken)\n {\ndiff --git a/src/Functions/hasTokenCaseInsensitive.cpp b/src/Functions/hasTokenCaseInsensitive.cpp\nindex d7381e336b56..32675b9384d5 100644\n--- a/src/Functions/hasTokenCaseInsensitive.cpp\n+++ b/src/Functions/hasTokenCaseInsensitive.cpp\n@@ -6,6 +6,7 @@\n \n namespace DB\n {\n+\n struct NameHasTokenCaseInsensitive\n {\n     static constexpr auto name = \"hasTokenCaseInsensitive\";\n@@ -17,9 +18,9 @@ struct NameHasTokenCaseInsensitiveOrNull\n };\n \n using FunctionHasTokenCaseInsensitive\n-    = FunctionsStringSearch<HasTokenImpl<NameHasTokenCaseInsensitive, VolnitskyCaseInsensitiveToken, false>>;\n+    = FunctionsStringSearch<HasTokenImpl<NameHasTokenCaseInsensitive, VolnitskyCaseInsensitive, false>>;\n using FunctionHasTokenCaseInsensitiveOrNull\n-    = FunctionsStringSearch<HasTokenImpl<NameHasTokenCaseInsensitiveOrNull, VolnitskyCaseInsensitiveToken, false>, ExecutionErrorPolicy::Null>;\n+    = FunctionsStringSearch<HasTokenImpl<NameHasTokenCaseInsensitiveOrNull, VolnitskyCaseInsensitive, false>, ExecutionErrorPolicy::Null>;\n \n REGISTER_FUNCTION(HasTokenCaseInsensitive)\n {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02809_has_token.reference b/tests/queries/0_stateless/02809_has_token.reference\nnew file mode 100644\nindex 000000000000..573541ac9702\n--- /dev/null\n+++ b/tests/queries/0_stateless/02809_has_token.reference\n@@ -0,0 +1,1 @@\n+0\ndiff --git a/tests/queries/0_stateless/02809_has_token.sql b/tests/queries/0_stateless/02809_has_token.sql\nnew file mode 100644\nindex 000000000000..08edf3756d1f\n--- /dev/null\n+++ b/tests/queries/0_stateless/02809_has_token.sql\n@@ -0,0 +1,3 @@\n+-- in old versions of ClickHouse, the following query returned a wrong result:\n+\n+SELECT hasToken('', 'quota') AS r;\n",
  "problem_statement": "Function hasToken return incorrect result\n**Describe the unexpected behaviour**\r\nFunction `hasToken` may return wrong result in some cases.\r\n\r\n**How to reproduce**\r\nSee: [fiddle](https://fiddle.clickhouse.com/781c4a16-0531-4afd-b6ce-1a0b41e62abf)\r\n\r\n**Expected behavior**\r\nIn the above case, `hasToken` should return 0.\r\n\r\n**Additional context**\r\nWhen the search text size  >= min_haystack_size_for_algorithm(default 20000), function `hasToken` use Volnitsky algorithm, with a normal fallback token searcher, these may lead to wrong result sometimes. \r\nSince function `hasToken` treats `ColumnString` as a whole text, so the bug is easily to be reproduced on a normal String column.\r\nHere are some cases I met\uff1a\r\n```\r\n:) SELECT path FROM test WHERE  hasToken(path, 'quota');\r\n\r\nSELECT path\r\nFROM test\r\nWHERE hasToken(path, 'quota')\r\n\r\nQuery id: 4630e82c-bcf8-48b9-93e1-2927ac155023\r\n\r\n\u250c\u2500path\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 /api/crm/podsquota \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 rows in set. Elapsed: 0.090 sec. Processed 851.63 thousand rows, 19.91 MB (9.47 million rows/s., 221.49 MB/s.)\r\n\r\n:) set preferred_block_size_bytes = 10000;\r\n\r\nSET preferred_block_size_bytes = 10000\r\n\r\nQuery id: a86af3f8-f046-4e9f-ae77-b9cfdae83422\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\n:) SELECT path FROM test WHERE  hasToken(path, 'quota');\r\n\r\nSELECT path\r\nFROM test\r\nWHERE hasToken(path, 'quota')\r\n\r\nQuery id: 87d4c33c-a8fd-4061-b230-141a42ba1935\r\n\r\n\u250c\u2500path\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 /api/crm/podsquota \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500path\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 /api/crm/podsquota \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n2 rows in set. Elapsed: 0.081 sec. Processed 851.63 thousand rows, 19.91 MB (10.45 million rows/s., 244.41 MB/s.)\r\n\r\n:) set preferred_block_size_bytes = 100000000;\r\n\r\nSET preferred_block_size_bytes = 100000000\r\n\r\nQuery id: f5377329-20b4-4aba-88f8-61fd59c581b0\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n\r\n:) SELECT path FROM test WHERE  hasToken(path, 'quota');\r\n\r\nSELECT path\r\nFROM test\r\nWHERE hasToken(path, 'quota')\r\n\r\nQuery id: bdd9fc6a-6d44-4c8e-bb8a-10f491eb4229\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.076 sec. Processed 851.63 thousand rows, 19.91 MB (11.24 million rows/s., 262.86 MB/s.)\r\n```\n",
  "hints_text": "@Enmk \r\nHi Vasily,\r\n\r\nCould you please help take a look at this problem?\r\nWe will appreciate so much if you can give us some advice on how to fix it.\nIt's fixed.",
  "created_at": "2023-06-25T05:30:56Z"
}