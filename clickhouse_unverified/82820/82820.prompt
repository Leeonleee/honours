You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Trivial EXCEPT query crash
### Describe the bug

How was this not found before? Failing since v24.1

### How to reproduce

Run Fiddle: https://fiddle.clickhouse.com/c8744f80-76a0-4198-b7cc-459a6ed3bf96

### Error message and/or stacktrace

Stack trace:

```
contrib/llvm-project/libcxx/include/vector:1443: assertion __n < size() failed: vector[] index out of bounds

#0  __pthread_kill_implementation (threadid=<optimized out>, signo=6, no_tid=0) at ./nptl/pthread_kill.c:44
#1  __pthread_kill_internal (threadid=<optimized out>, signo=6) at ./nptl/pthread_kill.c:89
#2  __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:100
#3  0x00007ffff7c456de in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26
#4  0x00007ffff7c288cd in __GI_abort () at ./stdlib/abort.c:73
#5  0x000055557a23039d in std::__1::__libcpp_verbose_abort (format=<optimized out>) at  contrib/llvm-project/libcxx/src/verbose_abort.cpp:74
#6  0x000055557276a3ac in std::__1::vector<DB::SelectUnionMode, std::__1::allocator<DB::SelectUnionMode> >::operator[][abi:se190107](unsigned long) const (this=0x7ffd4e7a9c20, __n=<optimized out>)
    at  contrib/llvm-project/libcxx/include/vector:1443
#7  DB::ASTSelectWithUnionQuery::formatQueryImpl(DB::WriteBuffer&, DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const::$_1::operator()(std::__1::shared_ptr<DB::IAST> const*) const (
    it=0x7ffd4e79e128, this=<optimized out>) at  src/Parsers/ASTSelectWithUnionQuery.cpp:67
#8  DB::ASTSelectWithUnionQuery::formatQueryImpl (this=0x7ffd4e7a9b18, ostr=..., settings=..., state=..., frame=...) at  src/Parsers/ASTSelectWithUnionQuery.cpp:89
#9  0x000055557275d61a in DB::ASTQueryWithOutput::formatImpl (this=0x7ffd4e7a9b18, ostr=..., s=..., state=..., frame=...) at  src/Parsers/ASTQueryWithOutput.cpp:40
#10 0x000055556401fd2e in DB::IAST::format (this=0x10c495, ostr=..., settings=...) at  src/Parsers/IAST.h:262
#11 0x00005555727c636b in DB::IAST::formatWithPossiblyHidingSensitiveData (this=0x7ffd4e7a9b18, max_length=0, one_line=true, show_secrets=false, print_pretty_type_names=false, 
    identifier_quoting_rule=DB::IdentifierQuotingRule::WhenNecessary, identifier_quoting_style=DB::IdentifierQuotingStyle::Backticks) at  src/Parsers/IAST.cpp:187
#12 0x00005555727c64da in DB::IAST::formatForErrorMessage (this=0x10c49d) at  src/Parsers/IAST.cpp:204
#13 0x000055556f98265b in DB::InDepthNodeVisitor<DB::SelectIntersectExceptQueryMatcher, false, false, std::__1::shared_ptr<DB::IAST> >::doVisit (this=this@entry=0x7ffe951eea70, ast=...)
    at  src/Interpreters/InDepthNodeVisitor.h:75
#14 0x000055556f973c95 in DB::InDepthNodeVisitor<DB::SelectIntersectExceptQueryMatcher, false, false, std::__1::shared_ptr<DB::IAST> >::visitImplMain<false> (this=0x7ffe951eea70, ast=...)
    at  src/Interpreters/InDepthNodeVisitor.h:61
#15 DB::InDepthNodeVisitor<DB::SelectIntersectExceptQueryMatcher, false, false, std::__1::shared_ptr<DB::IAST> >::visitImpl<false> (this=0x7ffe951eea70, ast=...)
    at  src/Interpreters/InDepthNodeVisitor.h:51
#16 DB::InDepthNodeVisitor<DB::SelectIntersectExceptQueryMatcher, false, false, std::__1::shared_ptr<DB::IAST> >::visit (this=0x7ffe951eea70, ast=...)
    at  src/Interpreters/InDepthNodeVisitor.h:32
#17 DB::executeQueryImpl (begin=<optimized out>, end=<optimized out>, context=..., flags=..., stage=DB::QueryProcessingStage::Complete, istr=0x0, out_ast=...)
    at  src/Interpreters/executeQuery.cpp:1222
#18 0x000055556f972051 in DB::executeQuery (query=..., context=..., flags=..., stage=DB::QueryProcessingStage::Complete) at  src/Interpreters/executeQuery.cpp:1715
#19 0x00005555717333b2 in DB::TCPHandler::runImpl (this=0x7ffd4e7ab000) at  src/Server/TCPHandler.cpp:722
#20 0x000055557174c9e4 in DB::TCPHandler::run (this=0x10c495) at  src/Server/TCPHandler.cpp:2729
#21 0x0000555575a72167 in Poco::Net::TCPServerConnection::start (this=0x10c495) at  base/poco/Net/src/TCPServerConnection.cpp:40
#22 0x0000555575a72665 in Poco::Net::TCPServerDispatcher::run (this=0x7ffd70b8f700) at  base/poco/Net/src/TCPServerDispatcher.cpp:115
#23 0x0000555575a1ab5f in Poco::PooledThread::run (this=0x7ffff5159880) at  base/poco/Foundation/src/ThreadPool.cpp:205
#24 0x0000555575a18711 in Poco::ThreadImpl::runnableEntry (pThread=<optimized out>) at  base/poco/Foundation/src/Thread_POSIX.cpp:335
#25 0x00007ffff7ca2ef1 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:448
#26 0x00007ffff7d3445c in __GI___clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:78
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
