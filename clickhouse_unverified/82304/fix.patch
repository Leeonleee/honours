diff --git a/src/Databases/DataLake/DatabaseDataLake.cpp b/src/Databases/DataLake/DatabaseDataLake.cpp
index 122791e30bc8..7df98c2550da 100644
--- a/src/Databases/DataLake/DatabaseDataLake.cpp
+++ b/src/Databases/DataLake/DatabaseDataLake.cpp
@@ -66,6 +66,7 @@ namespace ErrorCodes
     extern const int BAD_ARGUMENTS;
     extern const int SUPPORT_IS_DISABLED;
     extern const int DATALAKE_DATABASE_ERROR;
+    extern const int CANNOT_GET_CREATE_TABLE_QUERY;
 }
 
 namespace
@@ -596,7 +597,12 @@ ASTPtr DatabaseDataLake::getCreateTableQueryImpl(
     auto table_metadata = DataLake::TableMetadata().withLocation().withSchema();
 
     const auto [namespace_name, table_name] = parseTableName(name);
-    catalog->getTableMetadata(namespace_name, table_name, table_metadata);
+
+    if (!catalog->tryGetTableMetadata(namespace_name, table_name, table_metadata))
+    {
+        throw Exception(
+            ErrorCodes::CANNOT_GET_CREATE_TABLE_QUERY, "Table `{}` doesn't exist", name);
+    }
 
     auto create_table_query = std::make_shared<ASTCreateQuery>();
     auto table_storage_define = table_engine_definition->clone();
diff --git a/src/Databases/DataLake/GlueCatalog.cpp b/src/Databases/DataLake/GlueCatalog.cpp
index d30b7c6597c0..fde1019463c8 100644
--- a/src/Databases/DataLake/GlueCatalog.cpp
+++ b/src/Databases/DataLake/GlueCatalog.cpp
@@ -242,15 +242,6 @@ bool GlueCatalog::tryGetTableMetadata(
     const std::string & database_name,
     const std::string & table_name,
     TableMetadata & result) const
-{
-    getTableMetadata(database_name, table_name, result);
-    return true;
-}
-
-void GlueCatalog::getTableMetadata(
-    const std::string & database_name,
-    const std::string & table_name,
-    TableMetadata & result) const
 {
     Aws::Glue::Model::GetTableRequest request;
     request.SetDatabaseName(database_name);
@@ -320,11 +311,30 @@ void GlueCatalog::getTableMetadata(
     }
     else
     {
+        if (outcome.GetError().GetErrorType() == Aws::Glue::GlueErrors::ENTITY_NOT_FOUND)
+            return false; // Table does not exist
+
         throw DB::Exception(
             DB::ErrorCodes::DATALAKE_DATABASE_ERROR,
             "Exception calling GetTable for table {}: {}",
             database_name + "." + table_name, outcome.GetError().GetMessage());
     }
+
+    return true;
+}
+
+void GlueCatalog::getTableMetadata(
+    const std::string & database_name,
+    const std::string & table_name,
+    TableMetadata & result) const
+{
+    if (!tryGetTableMetadata(database_name, table_name, result))
+    {
+        throw DB::Exception(
+            DB::ErrorCodes::DATALAKE_DATABASE_ERROR,
+            "Table {} does not exist in Glue catalog",
+            database_name + "." + table_name);
+    }
 }
 
 void GlueCatalog::setCredentials(TableMetadata & metadata) const
