diff --git a/tests/integration/test_storage_redis/test.py b/tests/integration/test_storage_redis/test.py
index d54718531707..5a931aa2f4ee 100644
--- a/tests/integration/test_storage_redis/test.py
+++ b/tests/integration/test_storage_redis/test.py
@@ -1,4 +1,5 @@
 ## sudo -H pip install redis
+import json
 import struct
 import sys
 
@@ -430,3 +431,33 @@ def test_direct_join(started_cluster):
                                     "test_direct_join.k = test_mt.k FORMAT TSV"))
     assert len(response) == 1
     assert response[0] == ["1", "1"]
+
+
+def test_get_keys(started_cluster):
+    """
+    Checks that ClickHouse reads by key instead of full scan if possible.
+    """
+    address = get_address_for_ch()
+
+    # clean all
+    drop_table("test_get_keys")
+
+    # create table
+    node.query(f"""
+               CREATE TABLE test_get_keys(k Int) Engine=Redis('{address}', 2, 'clickhouse') PRIMARY KEY (k);
+               INSERT INTO test_get_keys VALUES (1), (2), (3);
+               """)
+
+    def check_query(query, read_type, keys_count, rows_read):
+        plan = node.query(f'EXPLAIN actions=1 {query}')
+        assert 'ReadFromRedis' in plan
+        assert f'ReadType: {read_type}' in plan
+        if read_type == 'GetKeys':
+            assert f'Keys: {keys_count}' in plan
+
+        res = node.query(f'{query} FORMAT JSON')
+        assert json.loads(res)['statistics']['rows_read'] == rows_read, res
+
+    check_query("SELECT * FROM test_get_keys", "FullScan", 0, 3)
+    check_query("SELECT * FROM test_get_keys WHERE k = 1", "GetKeys", 1, 1)
+    check_query("SELECT * FROM test_get_keys WHERE k in (3, 5)", "GetKeys", 2, 1)
diff --git a/tests/queries/0_stateless/02375_rocksdb_with_filters.reference b/tests/queries/0_stateless/02375_rocksdb_with_filters.reference
index 2d6a0e0ad78a..77201bc4c43d 100644
--- a/tests/queries/0_stateless/02375_rocksdb_with_filters.reference
+++ b/tests/queries/0_stateless/02375_rocksdb_with_filters.reference
@@ -1,5 +1,10 @@
+    ReadFromEmbeddedRocksDB
+    ReadType: FullScan
 1
 "rows_read":1,
+    ReadFromEmbeddedRocksDB
+    ReadType: GetKeys
+    Keys: 1
 2
 "rows_read":2,
 1
diff --git a/tests/queries/0_stateless/02375_rocksdb_with_filters.sh b/tests/queries/0_stateless/02375_rocksdb_with_filters.sh
index 1f9922100cb0..3a03fb89accb 100755
--- a/tests/queries/0_stateless/02375_rocksdb_with_filters.sh
+++ b/tests/queries/0_stateless/02375_rocksdb_with_filters.sh
@@ -10,8 +10,11 @@ $CLICKHOUSE_CLIENT --query="DROP TABLE IF EXISTS rocksdb_with_filter;"
 $CLICKHOUSE_CLIENT --query="CREATE TABLE rocksdb_with_filter (key String, value String) ENGINE=EmbeddedRocksDB PRIMARY KEY key;"
 $CLICKHOUSE_CLIENT --query="INSERT INTO rocksdb_with_filter (*) SELECT n.number, n.number*10 FROM numbers(10000) n;"
 
+$CLICKHOUSE_CLIENT --query "EXPLAIN actions=1 SELECT value FROM rocksdb_with_filter LIMIT 1" | grep -A 2 "ReadFromEmbeddedRocksDB"
+
 $CLICKHOUSE_CLIENT --query "SELECT count() FROM rocksdb_with_filter WHERE key = '5000'"
 $CLICKHOUSE_CLIENT --query "SELECT value FROM rocksdb_with_filter WHERE key = '5000' FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+$CLICKHOUSE_CLIENT --query "EXPLAIN actions=1 SELECT value FROM rocksdb_with_filter WHERE key = '5000'" | grep -A 3 "ReadFromEmbeddedRocksDB"
 
 $CLICKHOUSE_CLIENT --query "SELECT count() FROM rocksdb_with_filter WHERE key = '5000' OR key = '6000'"
 $CLICKHOUSE_CLIENT --query "SELECT value FROM rocksdb_with_filter WHERE key = '5000' OR key = '6000' FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
diff --git a/tests/queries/0_stateless/03541_keeper_map_filter_keys.reference b/tests/queries/0_stateless/03541_keeper_map_filter_keys.reference
new file mode 100644
index 000000000000..12a3bbcf41a9
--- /dev/null
+++ b/tests/queries/0_stateless/03541_keeper_map_filter_keys.reference
@@ -0,0 +1,24 @@
+    ReadFromKeeperMap
+    ReadType: FullScan
+1
+"rows_read":1,
+    ReadFromKeeperMap
+    ReadType: GetKeys
+    Keys: 1
+2
+"rows_read":2,
+1
+"rows_read":1,
+2
+"rows_read":2,
+1
+"rows_read":1,
+    ReadFromKeeperMap
+    ReadType: GetKeys
+    Keys: 1
+2
+"rows_read":2,
+1
+"rows_read":1,
+2
+"rows_read":2,
diff --git a/tests/queries/0_stateless/03541_keeper_map_filter_keys.sh b/tests/queries/0_stateless/03541_keeper_map_filter_keys.sh
new file mode 100755
index 000000000000..b862bda95799
--- /dev/null
+++ b/tests/queries/0_stateless/03541_keeper_map_filter_keys.sh
@@ -0,0 +1,48 @@
+#!/usr/bin/env bash
+# Tags: no-fasttest, no-ordinary-database
+# Tag no-ordinary-database: KeeperMap doesn't support Ordinary database
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+$CLICKHOUSE_CLIENT --query="DROP TABLE IF EXISTS keeper_map_with_filter;"
+$CLICKHOUSE_CLIENT --query="CREATE TABLE keeper_map_with_filter (key String, value String) ENGINE=KeeperMap(concat(currentDatabase(), '_simple')) PRIMARY KEY key;"
+$CLICKHOUSE_CLIENT --query="INSERT INTO keeper_map_with_filter (*) SELECT n.number, n.number*10 FROM numbers(10) n;"
+
+$CLICKHOUSE_CLIENT --query "EXPLAIN actions=1 SELECT value FROM keeper_map_with_filter LIMIT 1" | grep -A 2 "ReadFromKeeperMap"
+
+$CLICKHOUSE_CLIENT --query "SELECT count() FROM keeper_map_with_filter WHERE key = '5'"
+$CLICKHOUSE_CLIENT --query "SELECT value FROM keeper_map_with_filter WHERE key = '5' FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+$CLICKHOUSE_CLIENT --query "EXPLAIN actions=1 SELECT value FROM keeper_map_with_filter WHERE key = '5'" | grep -A 3 "ReadFromKeeperMap"
+
+$CLICKHOUSE_CLIENT --query "SELECT count() FROM keeper_map_with_filter WHERE key = '5' OR key = '6'"
+$CLICKHOUSE_CLIENT --query "SELECT value FROM keeper_map_with_filter WHERE key = '5' OR key = '6' FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+
+$CLICKHOUSE_CLIENT "--param_key=5" --query "SELECT count() FROM keeper_map_with_filter WHERE key = {key:String}"
+$CLICKHOUSE_CLIENT "--param_key=5" --query "SELECT value FROM keeper_map_with_filter WHERE key = {key:String} FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+
+$CLICKHOUSE_CLIENT --query "SELECT count() FROM keeper_map_with_filter WHERE key IN ('5', '6')"
+$CLICKHOUSE_CLIENT --query "SELECT value FROM keeper_map_with_filter WHERE key IN ('5', '6') FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+
+$CLICKHOUSE_CLIENT --query="DROP TABLE keeper_map_with_filter;"
+
+# Same test, but with complex key
+$CLICKHOUSE_CLIENT --query="DROP TABLE IF EXISTS keeper_map_with_filter_and_complex_key;"
+$CLICKHOUSE_CLIENT --query="CREATE TABLE keeper_map_with_filter_and_complex_key (key String, value String) ENGINE=KeeperMap(concat(currentDatabase(), '_complex')) PRIMARY KEY hex(toFloat32(key));"
+$CLICKHOUSE_CLIENT --query="INSERT INTO keeper_map_with_filter_and_complex_key (*) SELECT n.number, n.number*10 FROM numbers(10) n;"
+
+$CLICKHOUSE_CLIENT --query "SELECT count() FROM keeper_map_with_filter_and_complex_key WHERE key = '5'"
+$CLICKHOUSE_CLIENT --query "SELECT value FROM keeper_map_with_filter_and_complex_key WHERE key = '5' FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+$CLICKHOUSE_CLIENT --query "EXPLAIN actions=1 SELECT value FROM keeper_map_with_filter_and_complex_key WHERE key = '5'" | grep -A 3 "ReadFromKeeperMap"
+
+$CLICKHOUSE_CLIENT --query "SELECT count() FROM keeper_map_with_filter_and_complex_key WHERE key = '5' OR key = '6'"
+$CLICKHOUSE_CLIENT --query "SELECT value FROM keeper_map_with_filter_and_complex_key WHERE key = '5' OR key = '6' FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+
+$CLICKHOUSE_CLIENT "--param_key=5" --query "SELECT count() FROM keeper_map_with_filter_and_complex_key WHERE key = {key:String}"
+$CLICKHOUSE_CLIENT "--param_key=5" --query "SELECT value FROM keeper_map_with_filter_and_complex_key WHERE key = {key:String} FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+
+$CLICKHOUSE_CLIENT --query "SELECT count() FROM keeper_map_with_filter_and_complex_key WHERE key IN ('5', '6')"
+$CLICKHOUSE_CLIENT --query "SELECT value FROM keeper_map_with_filter_and_complex_key WHERE key IN ('5', '6') FORMAT JSON" | grep "rows_read" | tr -d "[:blank:]"
+
+$CLICKHOUSE_CLIENT --query="DROP TABLE keeper_map_with_filter_and_complex_key;"
