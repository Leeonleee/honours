{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 63930,
  "instance_id": "ClickHouse__ClickHouse-63930",
  "issue_numbers": [
    "63833"
  ],
  "base_commit": "3553fdeab46290236e42d0dd794806b10afc664a",
  "patch": "diff --git a/src/Analyzer/Passes/QueryAnalysisPass.cpp b/src/Analyzer/Passes/QueryAnalysisPass.cpp\nindex f0a3a2c74b62..7091f16b5169 100644\n--- a/src/Analyzer/Passes/QueryAnalysisPass.cpp\n+++ b/src/Analyzer/Passes/QueryAnalysisPass.cpp\n@@ -5615,9 +5615,13 @@ ProjectionNames QueryAnalyzer::resolveFunction(QueryTreeNodePtr & node, Identifi\n             /// Replace storage with values storage of insertion block\n             if (StoragePtr storage = scope.context->getViewSource())\n             {\n-                if (auto * query_node = in_second_argument->as<QueryNode>())\n+                QueryTreeNodePtr table_expression;\n+                /// Process possibly nested sub-selects\n+                for (auto * query_node = in_second_argument->as<QueryNode>(); query_node; query_node = table_expression->as<QueryNode>())\n+                    table_expression = extractLeftTableExpression(query_node->getJoinTree());\n+\n+                if (table_expression)\n                 {\n-                    auto table_expression = extractLeftTableExpression(query_node->getJoinTree());\n                     if (auto * query_table_node = table_expression->as<TableNode>())\n                     {\n                         if (query_table_node->getStorageID().getFullNameNotQuoted() == storage->getStorageID().getFullNameNotQuoted())\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03155_in_nested_subselects.reference b/tests/queries/0_stateless/03155_in_nested_subselects.reference\nnew file mode 100644\nindex 000000000000..5565ed6787ff\n--- /dev/null\n+++ b/tests/queries/0_stateless/03155_in_nested_subselects.reference\n@@ -0,0 +1,4 @@\n+0\n+1\n+0\n+1\ndiff --git a/tests/queries/0_stateless/03155_in_nested_subselects.sql b/tests/queries/0_stateless/03155_in_nested_subselects.sql\nnew file mode 100644\nindex 000000000000..4f5ccd30aa3e\n--- /dev/null\n+++ b/tests/queries/0_stateless/03155_in_nested_subselects.sql\n@@ -0,0 +1,19 @@\n+-- https://github.com/ClickHouse/ClickHouse/issues/63833\n+SET allow_experimental_analyzer = 1;\n+\n+create table Example (id Int32) engine = MergeTree ORDER BY id;\n+INSERT INTO Example SELECT number AS id FROM numbers(2);\n+\n+create table Null engine=Null as Example ;\n+--create table Null engine=MergeTree order by id as Example ;\n+\n+create materialized view Transform to Example as\n+select * from Null \n+join ( select * FROM Example \n+       WHERE id IN (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM Null)))))\n+     ) as old  \n+using id;\n+\n+INSERT INTO Null SELECT number AS id FROM numbers(2);\n+\n+select * from Example;  -- should return 4 rows\n",
  "problem_statement": "Analyzer doesn't read rows from Null table in subquery inside Materialized View\nThe null table packed into the subquery won't work as it should with the new analyzer inside a Materialized View on the latest Clickhouse version.\r\n\r\n```\r\nset allow_experimental_analyzer=1;\r\ncreate table Example (id Int32) engine = MergeTree ORDER BY id;\r\nINSERT INTO Example SELECT number AS id FROM numbers(2);\r\n\r\ncreate table Null engine=Null as Example ;\r\n--create table Null engine=MergeTree order by id as Example ;\r\n\r\ncreate materialized view Transform to Example as\r\nwith new as (SELECT * FROM Null)\r\nselect * from Null \r\njoin ( select * FROM Example \r\n       WHERE id IN (SELECT id FROM new)  --comment to disable bug\r\n     ) as old  \r\nusing id;\r\n\r\nINSERT INTO Null SELECT number AS id FROM numbers(2);\r\n\r\nselect * from Example;  \r\n```\r\n\r\nhttps://fiddle.clickhouse.com/bb87744c-a8ea-4a26-bc4e-c6cd3067c1e9\r\n\r\n\r\nthe correct 4 rows are returned only if:\r\n- disable experimental analyzer \r\n- change Engine to MergeTree for the table to INSERT\r\n- remove WHERE from subquery\r\n\r\nWhen doing lookup into the insert buffer inside Materialized View query\r\n\r\n\r\n\n",
  "hints_text": "This works fine\r\nhttps://fiddle.clickhouse.com/02f3bc5b-7adb-4bb4-824a-c8344521a798\r\n\r\nThis is not\r\nhttps://fiddle.clickhouse.com/81f3f49c-95ee-4c1b-b938-404e048cc795\r\n\r\n",
  "created_at": "2024-05-16T06:55:59Z"
}