You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Crash with mapFromArrays
### Describe the bug

https://s3.amazonaws.com/clickhouse-test-reports/json.html?PR=77336&sha=e92be9c734c17d0827bcae4dbc2a8c9f7cfd67c9&name_0=PR&name_1=AST%20fuzzer%20%28debug%29

### How to reproduce

```sql
SELECT mapFromArrays([toNullable(toLowCardinality('c')), toFixedString(toFixedString('d', toUInt256(1)), toLowCardinality(1))], map('b', 1, toFixedString('a', 1), 2))
```

### Error message and/or stacktrace

```

2025.03.18 12:32:52.239759 [ 137053 ] {} <Fatal> ClientBase: ########## Short fault info ############
2025.03.18 12:32:52.276082 [ 137053 ] {} <Fatal> ClientBase: (version 25.2.1.3085 (official build), build id: 1A3F7CA3FA57AA5910DEB2DA4440126BF05F69CD, git hash: 09989205d6fd661fb2683cbb1390fe4fcedaa548, architecture: x86_64) (from thread 137029) Received signal 11
2025.03.18 12:32:52.276096 [ 137053 ] {} <Fatal> ClientBase: Signal description: Segmentation fault
2025.03.18 12:32:52.276100 [ 137053 ] {} <Fatal> ClientBase: Address: 0x724a00000047. Access: read. Address not mapped to object.
2025.03.18 12:32:52.276104 [ 137053 ] {} <Fatal> ClientBase: Stack trace: 0x000000000f2324b7 0x00007209b63f0cd0 0x0000000009fe6791 0x000000001231c610 0x00000000122dbdae 0x00000000122ddfd1 0x0000000014888b5b 0x0000000014888382 0x000000001488e109 0x00000000146e5762 0x00000000144c995d 0x00000000144c8a22 0x00000000144c8059 0x00000000144c5b83 0x00000000144d0dca 0x00000000144d26f0 0x00000000144d9c5b 0x000000000f139a06 0x0000000017d1d906 0x000000000f147f6f 0x0000000009eff6e1 0x00007209b63da488 0x00007209b63da54c 0x0000000006a9002e
2025.03.18 12:32:52.276121 [ 137053 ] {} <Fatal> ClientBase: ########################################
2025.03.18 12:32:52.276125 [ 137053 ] {} <Fatal> ClientBase: (version 25.2.1.3085 (official build), build id: 1A3F7CA3FA57AA5910DEB2DA4440126BF05F69CD, git hash: 09989205d6fd661fb2683cbb1390fe4fcedaa548) (from thread 137029) (no query) Received signal Segmentation fault (11)
2025.03.18 12:32:52.276129 [ 137053 ] {} <Fatal> ClientBase: Address: 0x724a00000047. Access: read. Address not mapped to object.
2025.03.18 12:32:52.276132 [ 137053 ] {} <Fatal> ClientBase: Stack trace: 0x000000000f2324b7 0x00007209b63f0cd0 0x0000000009fe6791 0x000000001231c610 0x00000000122dbdae 0x00000000122ddfd1 0x0000000014888b5b 0x0000000014888382 0x000000001488e109 0x00000000146e5762 0x00000000144c995d 0x00000000144c8a22 0x00000000144c8059 0x00000000144c5b83 0x00000000144d0dca 0x00000000144d26f0 0x00000000144d9c5b 0x000000000f139a06 0x0000000017d1d906 0x000000000f147f6f 0x0000000009eff6e1 0x00007209b63da488 0x00007209b63da54c 0x0000000006a9002e
2025.03.18 12:32:52.276546 [ 137053 ] {} <Fatal> ClientBase: 0. signalHandler(int, siginfo_t*, void*) @ 0x000000000f2324b7
2025.03.18 12:32:52.276550 [ 137053 ] {} <Fatal> ClientBase: 1. ? @ 0x00007209b63f0cd0
2025.03.18 12:32:52.276881 [ 137053 ] {} <Fatal> ClientBase: 2. void DB::writeAnyEscapedString<(char)39, false, true>(char const*, char const*, DB::WriteBuffer&) @ 0x0000000009fe6791
2025.03.18 12:32:52.277099 [ 137053 ] {} <Fatal> ClientBase: 3. DB::SerializationString::serializeTextQuoted(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x000000001231c610
2025.03.18 12:32:52.277267 [ 137053 ] {} <Fatal> ClientBase: 4. void DB::SerializationLowCardinality::serializeImpl<DB::WriteBuffer&, DB::FormatSettings const&, DB::WriteBuffer&, DB::FormatSettings const&>(DB::IColumn const&, unsigned long, void (DB::ISerialization::*)(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x00000000122dbdae
2025.03.18 12:32:52.277274 [ 137053 ] {} <Fatal> ClientBase: 5. DB::SerializationMap::serializeText(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x00000000122ddfd1
2025.03.18 12:32:52.277521 [ 137053 ] {} <Fatal> ClientBase: 6. DB::PrettyBlockOutputFormat::writeChunk(DB::Chunk const&, DB::IOutputFormat::PortKind) @ 0x0000000014888b5b
2025.03.18 12:32:52.277695 [ 137053 ] {} <Fatal> ClientBase: 7. DB::PrettyBlockOutputFormat::writeMonoChunkIfNeeded() @ 0x0000000014888382
2025.03.18 12:32:52.277878 [ 137053 ] {} <Fatal> ClientBase: 8. DB::PrettyBlockOutputFormat::writeSuffix() @ 0x000000001488e109
2025.03.18 12:32:52.278106 [ 137053 ] {} <Fatal> ClientBase: 9. DB::IOutputFormat::finalize() @ 0x00000000146e5762
2025.03.18 12:32:52.278328 [ 137053 ] {} <Fatal> ClientBase: 10. DB::ClientBase::onEndOfStream() @ 0x00000000144c995d
2025.03.18 12:32:52.278606 [ 137053 ] {} <Fatal> ClientBase: 11. DB::ClientBase::receiveAndProcessPacket(std::shared_ptr<DB::IAST>, bool) @ 0x00000000144c8a22
2025.03.18 12:32:52.278751 [ 137053 ] {} <Fatal> ClientBase: 12. DB::ClientBase::receiveResult(std::shared_ptr<DB::IAST>, int, bool) @ 0x00000000144c8059
2025.03.18 12:32:52.278759 [ 137053 ] {} <Fatal> ClientBase: 13. DB::ClientBase::processParsedSingleQuery(String const&, String const&, std::shared_ptr<DB::IAST>, std::optional<bool>, bool) @ 0x00000000144c5b83
2025.03.18 12:32:52.279092 [ 137053 ] {} <Fatal> ClientBase: 14. DB::ClientBase::executeMultiQuery(String const&) @ 0x00000000144d0dca
2025.03.18 12:32:52.279097 [ 137053 ] {} <Fatal> ClientBase: 15. DB::ClientBase::processQueryText(String const&) @ 0x00000000144d26f0
2025.03.18 12:32:52.279239 [ 137053 ] {} <Fatal> ClientBase: 16. DB::ClientBase::runInteractive() @ 0x00000000144d9c5b
2025.03.18 12:32:52.279433 [ 137053 ] {} <Fatal> ClientBase: 17. DB::LocalServer::main(std::vector<String, std::allocator<String>> const&) @ 0x000000000f139a06
2025.03.18 12:32:52.279620 [ 137053 ] {} <Fatal> ClientBase: 18. Poco::Util::Application::run() @ 0x0000000017d1d906
2025.03.18 12:32:52.279791 [ 137053 ] {} <Fatal> ClientBase: 19. mainEntryClickHouseLocal(int, char**) @ 0x000000000f147f6f
2025.03.18 12:32:52.279926 [ 137053 ] {} <Fatal> ClientBase: 20. main @ 0x0000000009eff6e1
2025.03.18 12:32:52.279929 [ 137053 ] {} <Fatal> ClientBase: 21. ? @ 0x00007209b63da488
2025.03.18 12:32:52.279933 [ 137053 ] {} <Fatal> ClientBase: 22. ? @ 0x00007209b63da54c
2025.03.18 12:32:52.280133 [ 137053 ] {} <Fatal> ClientBase: 23. _start @ 0x0000000006a9002e
2025.03.18 12:32:52.280139 [ 137053 ] {} <Fatal> ClientBase: Report this error to https://github.com/ClickHouse/ClickHouse/issues
```


AFAICT it started happening in 25.1 (no crash in 24.12)
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
