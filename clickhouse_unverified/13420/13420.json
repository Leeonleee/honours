{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 13420,
  "instance_id": "ClickHouse__ClickHouse-13420",
  "issue_numbers": [
    "12461"
  ],
  "base_commit": "511b0978811f3bd0cf3906422c54de4ea3edaec3",
  "patch": "diff --git a/src/Functions/FunctionsComparison.h b/src/Functions/FunctionsComparison.h\nindex a2d39814f7dc..44c8ffa23a64 100644\n--- a/src/Functions/FunctionsComparison.h\n+++ b/src/Functions/FunctionsComparison.h\n@@ -13,6 +13,7 @@\n \n #include <DataTypes/DataTypesNumber.h>\n #include <DataTypes/DataTypeNullable.h>\n+#include <DataTypes/DataTypeNothing.h>\n #include <DataTypes/DataTypeDateTime.h>\n #include <DataTypes/DataTypeDateTime64.h>\n #include <DataTypes/DataTypeDate.h>\n@@ -884,11 +885,18 @@ class FunctionComparison : public IFunction\n         if (tuple_size != typeid_cast<const DataTypeTuple &>(*c1.type).getElements().size())\n             throw Exception(\"Cannot compare tuples of different sizes.\", ErrorCodes::BAD_ARGUMENTS);\n \n+        auto & res = block.getByPosition(result);\n+        if (res.type->onlyNull())\n+        {\n+            res.column = res.type->createColumnConstWithDefaultValue(input_rows_count);\n+            return;\n+        }\n+\n         ColumnsWithTypeAndName x(tuple_size);\n         ColumnsWithTypeAndName y(tuple_size);\n \n-        auto x_const = checkAndGetColumnConst<ColumnTuple>(c0.column.get());\n-        auto y_const = checkAndGetColumnConst<ColumnTuple>(c1.column.get());\n+        const auto * x_const = checkAndGetColumnConst<ColumnTuple>(c0.column.get());\n+        const auto * y_const = checkAndGetColumnConst<ColumnTuple>(c1.column.get());\n \n         Columns x_columns;\n         Columns y_columns;\n@@ -1135,17 +1143,22 @@ class FunctionComparison : public IFunction\n                 FunctionComparison<Op, Name>::create(context)));\n \n             bool has_nullable = false;\n+            bool has_null = false;\n \n             size_t size = left_tuple->getElements().size();\n             for (size_t i = 0; i < size; ++i)\n             {\n                 ColumnsWithTypeAndName args = {{nullptr, left_tuple->getElements()[i], \"\"},\n                                                {nullptr, right_tuple->getElements()[i], \"\"}};\n-                has_nullable = has_nullable || adaptor.build(args)->getReturnType()->isNullable();\n+                auto element_type = adaptor.build(args)->getReturnType();\n+                has_nullable = has_nullable || element_type->isNullable();\n+                has_null = has_null || element_type->onlyNull();\n             }\n \n             /// If any element comparison is nullable, return type will also be nullable.\n             /// We useDefaultImplementationForNulls, but it doesn't work for tuples.\n+            if (has_null)\n+                return std::make_shared<DataTypeNullable>(std::make_shared<DataTypeNothing>());\n             if (has_nullable)\n                 return std::make_shared<DataTypeNullable>(std::make_shared<DataTypeUInt8>());\n         }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00250_tuple_comparison.reference b/tests/queries/0_stateless/00250_tuple_comparison.reference\nindex 05547aaf6a4d..078592f1f2a4 100644\n--- a/tests/queries/0_stateless/00250_tuple_comparison.reference\n+++ b/tests/queries/0_stateless/00250_tuple_comparison.reference\n@@ -13,3 +13,4 @@\n 1\t0\t0\t0\t1\t1\n 0\t1\t1\t0\t1\t0\n 0\t1\t0\t1\t0\t1\n+\\N\t\\N\t\\N\t\\N\t\\N\ndiff --git a/tests/queries/0_stateless/00250_tuple_comparison.sql b/tests/queries/0_stateless/00250_tuple_comparison.sql\nindex 8f5763e2ebbe..2ee29ef58639 100644\n--- a/tests/queries/0_stateless/00250_tuple_comparison.sql\n+++ b/tests/queries/0_stateless/00250_tuple_comparison.sql\n@@ -103,3 +103,9 @@ SELECT\n     tuple(2) >  tuple(1),\n     tuple(2) <= tuple(1),\n     tuple(2) >= tuple(1);\n+SELECT\n+    tuple(NULL) < tuple(1),\n+    tuple(NULL) = tuple(1),\n+    tuple(NULL) <= tuple(1),\n+    tuple(1, NULL) = tuple(2, 1),\n+    tuple(1, NULL) < tuple(2, 1);\n",
  "problem_statement": "tuple(null): clickhouse-client: data compressed with different methods\n```\r\n/4/ :) SELECT tuple(NULL) < tuple(1)\r\n\r\n\u2192 Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.) \r\nException on client:\r\nCode: 271. DB::Exception: Data compressed with different methods, given method byte 0x6e, previous method byte 0x82: while receiving packet from localhost:9000\r\nStack trace:\r\n0. /home/akuzm/ch4/ch/contrib/libcxx/include/exception:129: std::exception::capture() @ 0x2767c2 in /home/akuzm/ch4/build-clang10/src/libclickhouse_common_iod.so\r\n1. /home/akuzm/ch4/ch/contrib/libcxx/include/exception:109: std::exception::exception() @ 0x1ad9b2 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n2. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Exception.cpp:28: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1c3da3 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n3. /home/akuzm/ch4/ch/src/Common/Exception.cpp:37: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x279543 in /home/akuzm/ch4/build-clang10/src/libclickhouse_common_iod.so\r\n4. /home/akuzm/ch4/ch/src/Compression/CompressedReadBufferBase.cpp:113: DB::CompressedReadBufferBase::readCompressedData(unsigned long&, unsigned long&) @ 0x14684d in /home/akuzm/ch4/build-clang10/src/libclickhouse_compressiond.so\r\n5. /home/akuzm/ch4/ch/src/Compression/CompressedReadBuffer.cpp:0: DB::CompressedReadBuffer::nextImpl() @ 0x14601e in /home/akuzm/ch4/build-clang10/src/libclickhouse_compressiond.so\r\n6. /home/akuzm/ch4/ch/src/IO/ReadBuffer.h:53: DB::ReadBuffer::next() @ 0x18b33b in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n7. /home/akuzm/ch4/ch/src/IO/ReadBuffer.h:81: DB::NativeBlockInputStream::readImpl() @ 0x2d0bd9 in /home/akuzm/ch4/build-clang10/src/libclickhouse_datastreamsd.so\r\n8. /home/akuzm/ch4/ch/src/DataStreams/IBlockInputStream.cpp:60: DB::IBlockInputStream::read() @ 0x29d86d in /home/akuzm/ch4/build-clang10/src/libclickhouse_datastreamsd.so\r\n9. /home/akuzm/ch4/ch/src/Client/Connection.cpp:755: DB::Connection::receiveDataImpl(std::__1::shared_ptr<DB::IBlockInputStream>&) @ 0x146cca in /home/akuzm/ch4/build-clang10/src/libclickhouse_clientd.so\r\n10. /home/akuzm/ch4/ch/src/Client/Connection.cpp:736: DB::Connection::receiveData() @ 0x1468e8 in /home/akuzm/ch4/build-clang10/src/libclickhouse_clientd.so\r\n11. /home/akuzm/ch4/ch/src/Client/Connection.cpp:688: DB::Connection::receivePacket() @ 0x1463d8 in /home/akuzm/ch4/build-clang10/src/libclickhouse_clientd.so\r\n12. /home/akuzm/ch4/ch/programs/client/Client.cpp:1585: DB::Client::receiveAndProcessPacket(bool) @ 0x1b52f3 in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n13. /home/akuzm/ch4/ch/programs/client/Client.cpp:1569: DB::Client::receiveResult() @ 0x1b893a in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n14. /home/akuzm/ch4/ch/programs/client/Client.cpp:1311: DB::Client::processOrdinaryQuery() @ 0x1a1151 in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n15. /home/akuzm/ch4/ch/programs/client/Client.cpp:1218: DB::Client::processParsedSingleQuery() @ 0x1a0022 in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n16. /home/akuzm/ch4/ch/programs/client/Client.cpp:1159: DB::Client::processTextAsSingleQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x19d898 in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n17. /home/akuzm/ch4/ch/programs/client/Client.cpp:899: DB::Client::processQueryText(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1845c0 in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n18. /home/akuzm/ch4/ch/programs/client/Client.cpp:630: DB::Client::mainImpl() @ 0x1811c7 in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n19. /home/akuzm/ch4/ch/programs/client/Client.cpp:252: DB::Client::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x175106 in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n20. /home/akuzm/ch4/ch/contrib/poco/Util/src/Application.cpp:334: Poco::Util::Application::run() @ 0x8ca4f in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Util/lib_poco_utild.so\r\n21. /home/akuzm/ch4/ch/programs/client/Client.cpp:2348: mainEntryClickHouseClient(int, char**) @ 0x16d107 in /home/akuzm/ch4/build-clang10/programs/client/libclickhouse-client-libd.so\r\n22. main @ 0x2c21f2 in ?\r\n23. /build/glibc-YYA7BZ/glibc-2.31/csu/../csu/libc-start.c:342: __libc_start_main @ 0x270b3 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n24. _start @ 0x2c202e in ?\r\n```\r\n\r\nThe message about data compression is an error by itself, I expect to receive the stack trace from the server.\r\n\r\nIn the server log:\r\n```\r\n2020.07.13 16:09:39.358425 [ 47508 ] {1c392ed6-3953-4846-81f5-273ca6e3814a} <Error> : Logical error: 'Bad cast from type DB::ColumnNothing to DB::ColumnVector<char8_t>'.\r\nclickhouse-server: /home/akuzm/ch4/ch/src/Common/Exception.cpp:45: DB::Exception::Exception(const std::string &, int): Assertion `false' failed.\r\n2020.07.13 16:09:39.358833 [ 47457 ] {} <Trace> BaseDaemon: Received signal 6\r\n2020.07.13 16:09:39.359144 [ 47525 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.07.13 16:09:39.359801 [ 47525 ] {} <Fatal> BaseDaemon: (version 20.6.1.1, build id: F176DE2A5C050ABF) (from thread 47508) (query_id: 1c392ed6-3953-4846-81f5-273ca6e3814a) Received signal Aborted (6)\r\n2020.07.13 16:09:39.359917 [ 47525 ] {} <Fatal> BaseDaemon: \r\n2020.07.13 16:09:39.360046 [ 47525 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f8be3db818b 0x7f8be3d97859 0x7f8be3d97729 0x7f8be3da8f36 0x7f8be7cbc8ab 0x7f8bdf0f07cb 0x7f8bd832f5e5 0x7f8be2a887a4 0x7f8bd8325bbb 0x7f8bd86a9194 0x7f8bd86a95d8 0x7f8bd40af029 0x7f8bd40addbf 0x7f8bd40aaeed 0x7f8bd40b1b52 0x7f8be4f7dd7c 0x7f8be4f7e58a 0x7f8be4a8f173 0x7f8be4a8c03d 0x7f8be4a8aeba 0x7f8be3bfe609 0x7f8be3e94103\r\n2020.07.13 16:09:39.360405 [ 47525 ] {} <Fatal> BaseDaemon: 4. /build/glibc-YYA7BZ/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51: __GI_raise @ 0x4618b in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.13 16:09:39.360586 [ 47525 ] {} <Fatal> BaseDaemon: 5. /build/glibc-YYA7BZ/glibc-2.31/stdlib/abort.c:81: abort @ 0x25859 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.13 16:09:39.360829 [ 47525 ] {} <Fatal> BaseDaemon: 6. /build/glibc-YYA7BZ/glibc-2.31/intl/loadmsgcat.c:509: _nl_load_domain.cold @ 0x25729 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.13 16:09:39.361138 [ 47525 ] {} <Fatal> BaseDaemon: 7. ? @ 0x36f36 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n2020.07.13 16:09:39.361474 [ 47525 ] {} <Fatal> BaseDaemon: 8. /home/akuzm/ch4/ch/src/Common/Exception.cpp:48: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x2798ab in /home/akuzm/ch4/build-clang10/src/libclickhouse_common_iod.so\r\n2020.07.13 16:09:39.369748 [ 47525 ] {} <Fatal> BaseDaemon: 9. /home/akuzm/ch4/ch/src/Common/typeid_cast.h:40: std::__1::enable_if<std::is_reference_v<DB::ColumnVector<char8_t> const&>, DB::ColumnVector<char8_t> const&>::type typeid_cast<DB::ColumnVector<char8_t> const&, DB::IColumn const>(DB::IColumn const&) @ 0x3d797cb in /home/akuzm/ch4/build-clang10/src/Functions/libclickhouse_functionsd.so\r\n2020.07.13 16:09:39.370442 [ 47525 ] {} <Fatal> BaseDaemon: 10. /home/akuzm/ch4/ch/src/DataTypes/DataTypeNumberBase.cpp:186: DB::DataTypeNumberBase<char8_t>::serializeBinaryBulk(DB::IColumn const&, DB::WriteBuffer&, unsigned long, unsigned long) const @ 0x4445e5 in /home/akuzm/ch4/build-clang10/src/libclickhouse_datatypesd.so\r\n2020.07.13 16:09:39.371049 [ 47525 ] {} <Fatal> BaseDaemon: 11. /home/akuzm/ch4/ch/src/DataTypes/IDataType.h:184: DB::IDataType::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const @ 0x24aa7a4 in /home/akuzm/ch4/build-clang10/src/AggregateFunctions/libclickhouse_aggregate_functionsd.so\r\n2020.07.13 16:09:39.371651 [ 47525 ] {} <Fatal> BaseDaemon: 12. /home/akuzm/ch4/ch/src/DataTypes/DataTypeNullable.cpp:102: DB::DataTypeNullable::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const @ 0x43abbb in /home/akuzm/ch4/build-clang10/src/libclickhouse_datatypesd.so\r\n2020.07.13 16:09:39.372305 [ 47525 ] {} <Fatal> BaseDaemon: 13. /home/akuzm/ch4/ch/src/DataStreams/NativeBlockOutputStream.cpp:58: DB::NativeBlockOutputStream::writeData(DB::IDataType const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, DB::WriteBuffer&, unsigned long, unsigned long) @ 0x2d9194 in /home/akuzm/ch4/build-clang10/src/libclickhouse_datastreamsd.so\r\n2020.07.13 16:09:39.372908 [ 47525 ] {} <Fatal> BaseDaemon: 14. /home/akuzm/ch4/ch/src/DataStreams/NativeBlockOutputStream.cpp:124: DB::NativeBlockOutputStream::write(DB::Block const&) @ 0x2d95d8 in /home/akuzm/ch4/build-clang10/src/libclickhouse_datastreamsd.so\r\n2020.07.13 16:09:39.373641 [ 47525 ] {} <Fatal> BaseDaemon: 15. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:1106: DB::TCPHandler::sendData(DB::Block const&) @ 0x348029 in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n2020.07.13 16:09:39.374240 [ 47525 ] {} <Fatal> BaseDaemon: 16. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:597: DB::TCPHandler::processOrdinaryQueryWithProcessors() @ 0x346dbf in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n2020.07.13 16:09:39.374769 [ 47525 ] {} <Fatal> BaseDaemon: 17. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:272: DB::TCPHandler::runImpl() @ 0x343eed in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n2020.07.13 16:09:39.375391 [ 47525 ] {} <Fatal> BaseDaemon: 18. /home/akuzm/ch4/ch/src/Server/TCPHandler.cpp:1201: DB::TCPHandler::run() @ 0x34ab52 in /home/akuzm/ch4/build-clang10/src/libclickhouse_serverd.so\r\n2020.07.13 16:09:39.375853 [ 47525 ] {} <Fatal> BaseDaemon: 19. /home/akuzm/ch4/ch/contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x1b9d7c in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Net/lib_poco_netd.so\r\n2020.07.13 16:09:39.376416 [ 47525 ] {} <Fatal> BaseDaemon: 20. /home/akuzm/ch4/ch/contrib/poco/Net/src/TCPServerDispatcher.cpp:114: Poco::Net::TCPServerDispatcher::run() @ 0x1ba58a in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Net/lib_poco_netd.so\r\n2020.07.13 16:09:39.377223 [ 47525 ] {} <Fatal> BaseDaemon: 21. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x276173 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n2020.07.13 16:09:39.378055 [ 47525 ] {} <Fatal> BaseDaemon: 22. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x27303d in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n2020.07.13 16:09:39.378751 [ 47525 ] {} <Fatal> BaseDaemon: 23. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x271eba in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n2020.07.13 16:09:39.378956 [ 47525 ] {} <Fatal> BaseDaemon: 24. start_thread @ 0x9609 in /lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2020.07.13 16:09:39.379325 [ 47525 ] {} <Fatal> BaseDaemon: 25. /build/glibc-YYA7BZ/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x122103 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n```\n",
  "hints_text": "",
  "created_at": "2020-08-06T14:02:21Z"
}