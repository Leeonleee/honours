diff --git a/src/Dictionaries/DictionaryStructure.cpp b/src/Dictionaries/DictionaryStructure.cpp
index 74bf67a2738f..79df24d96537 100644
--- a/src/Dictionaries/DictionaryStructure.cpp
+++ b/src/Dictionaries/DictionaryStructure.cpp
@@ -193,6 +193,7 @@ DictionaryStructure::DictionaryStructure(const Poco::Util::AbstractConfiguration
     }
 
     attributes = getAttributes(config, config_prefix);
+
     if (attributes.empty())
         throw Exception{"Dictionary has no attributes defined", ErrorCodes::BAD_ARGUMENTS};
 }
@@ -302,6 +303,12 @@ std::vector<DictionaryAttribute> DictionaryStructure::getAttributes(
         checkAttributeKeys(attribute_keys);
 
         const auto name = config.getString(prefix + "name");
+
+        /// Don't include range_min and range_max in attributes list, otherwise
+        /// columns will be duplicated
+        if ((range_min && name == range_min->name) || (range_max && name == range_max->name))
+            continue;
+
         const auto type_string = config.getString(prefix + "type");
         const auto type = DataTypeFactory::instance().get(type_string);
         const auto underlying_type = getAttributeUnderlyingType(type_string);
diff --git a/src/Dictionaries/DictionaryStructure.h b/src/Dictionaries/DictionaryStructure.h
index 2893dea2e4f4..5a9fa7979c35 100644
--- a/src/Dictionaries/DictionaryStructure.h
+++ b/src/Dictionaries/DictionaryStructure.h
@@ -113,6 +113,7 @@ struct DictionaryStructure final
     size_t getKeySize() const;
 
 private:
+    /// range_min and range_max have to be parsed before this function call
     std::vector<DictionaryAttribute> getAttributes(
         const Poco::Util::AbstractConfiguration & config,
         const std::string & config_prefix,
