You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Abort in `InterpreterSelectQuery::executeSubqueriesInSetsAndJoins` due to invalid std::promise
https://s3.amazonaws.com/clickhouse-test-reports/45596/5915290f0fe9ed8aaa5344aec85390b874bd949b/fuzzer_astfuzzerubsan/report.html

```
std::exception. Code: 1001, type: std::__1::future_error, e.what() = The associated promise has been destructed prior to the associated state becoming ready. (version 23.4.1.1) (from [::ffff:127.0.0.1]:50486) (in query: SELECT 1000.0001, toUInt64(arrayJoin([NULL, 257, 65536, NULL])), arrayExists(x -> (x IN (SELECT '2.55', NULL WITH TOTALS)), [-9223372036854775808]) FROM remote('127.0.0.{1,2}', system.one) GROUP BY NULL, NULL, NULL, NULL), Stack trace (when copying this message, always include the lines below):

0. std::exception::capture() @ 0x2af3ebf6 in /workspace/clickhouse
1. ./build_docker/./contrib/llvm-project/libcxx/src/support/runtime/stdexcept_default.ipp:26: std::logic_error::logic_error(std::logic_error const&) @ 0x4962ef3f in /workspace/clickhouse
2. ./build_docker/./contrib/llvm-project/libcxx/include/future:520: std::exception_ptr std::make_exception_ptr[abi:v15000]<std::future_error>(std::future_error) @ 0x40e265f0 in /workspace/clickhouse
3. ./build_docker/./contrib/llvm-project/libcxx/include/future:1351: std::promise<std::shared_ptr<DB::Set>>::~promise() @ 0x40fb14ca in /workspace/clickhouse
4. ./build_docker/./src/Interpreters/PreparedSets.h:55: DB::SubqueryForSet::~SubqueryForSet() @ 0x40fb1296 in /workspace/clickhouse
5. ./build_docker/./contrib/llvm-project/libcxx/include/string:1499: std::__hash_table<std::__hash_value_type<String, DB::SubqueryForSet>, std::__unordered_map_hasher<String, std::__hash_value_type<String, DB::SubqueryForSet>, std::hash<String>, std::equal_to<String>, true>, std::__unordered_map_equal<String, std::__hash_value_type<String, DB::SubqueryForSet>, std::equal_to<String>, std::hash<String>, true>, std::allocator<std::__hash_value_type<String, DB::SubqueryForSet>>>::__deallocate_node(std::__hash_node_base<std::__hash_node<std::__hash_value_type<String, DB::SubqueryForSet>, void*>*>*) @ 0x40fb11f2 in /workspace/clickhouse
6. ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:534: DB::addCreatingSetsStep(DB::QueryPlan&, std::shared_ptr<DB::PreparedSets>, std::shared_ptr<DB::Context const>) @ 0x44c75ffe in /workspace/clickhouse
7. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:3092: DB::InterpreterSelectQuery::executeSubqueriesInSetsAndJoins(DB::QueryPlan&) @ 0x42adbb93 in /workspace/clickhouse
8. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::optional<DB::Pipe>) @ 0x42ac30bb in /workspace/clickhouse
9. ./build_docker/./contrib/llvm-project/libcxx/include/optional:260: DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x42abe50a in /workspace/clickhouse
10. ./build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:0: DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x42b9fc0c in /workspace/clickhouse
11. ./build_docker/./src/Interpreters/InterpreterSelectWithUnionQuery.cpp:0: DB::InterpreterSelectWithUnionQuery::execute() @ 0x42ba115e in /workspace/clickhouse
12. ./build_docker/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x430404e1 in /workspace/clickhouse
13. ./build_docker/./src/Interpreters/executeQuery.cpp:1168: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x4303bb6f in /workspace/clickhouse
14. ./build_docker/./src/Server/TCPHandler.cpp:0: DB::TCPHandler::runImpl() @ 0x444c649b in /workspace/clickhouse
15. ./build_docker/./src/Server/TCPHandler.cpp:2045: DB::TCPHandler::run() @ 0x444eb779 in /workspace/clickhouse
16. ./build_docker/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x45a2f9de in /workspace/clickhouse
17. ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: Poco::Net::TCPServerDispatcher::run() @ 0x45a30a92 in /workspace/clickhouse
18. ./build_docker/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x45c9b150 in /workspace/clickhouse
19. ./build_docker/./base/poco/Foundation/src/Thread_POSIX.cpp:0: Poco::ThreadImpl::runnableEntry(void*) @ 0x45c967f1 in /workspace/clickhouse
20. ? @ 0x7feb00253609 in ?
21. clone @ 0x7feb00178133 in ?

2023.04.27 12:52:52.394342 [ 504 ] {} <Fatal> BaseDaemon: ########################################
2023.04.27 12:52:52.394409 [ 504 ] {} <Fatal> BaseDaemon: (version 23.4.1.1, build id: 5DC4BFB4030A0B9016CF767588CD1BC7A81EF6DF) (from thread 150) (query_id: 7068c995-c0fe-4163-b966-7df324e6d962) (query: SELECT 1000.0001, toUInt64(arrayJoin([NULL, 257, 65536, NULL])), arrayExists(x -> (x IN (SELECT '2.55', NULL WITH TOTALS)), [-9223372036854775808]) FROM remote('127.0.0.{1,2}', system.one) GROUP BY NULL, NULL, NULL, NULL) Received signal Aborted (6)
2023.04.27 12:52:52.394433 [ 504 ] {} <Fatal> BaseDaemon: 
2023.04.27 12:52:52.394459 [ 504 ] {} <Fatal> BaseDaemon: Stack trace: 0x7feb0009c00b 0x7feb0007b859 0x5582772eb123 0x558277309779 0x55827884d9de 0x55827884ea92 0x558278ab9150 0x558278ab47f1 0x7feb00253609 0x7feb00178133
2023.04.27 12:52:52.394485 [ 504 ] {} <Fatal> BaseDaemon: 3. raise @ 0x7feb0009c00b in ?
2023.04.27 12:52:52.394503 [ 504 ] {} <Fatal> BaseDaemon: 4. abort @ 0x7feb0007b859 in ?
2023.04.27 12:52:52.460697 [ 504 ] {} <Fatal> BaseDaemon: 5. ./build_docker/./src/Server/TCPHandler.cpp:558: DB::TCPHandler::runImpl() @ 0x444cd123 in /workspace/clickhouse
2023.04.27 12:52:52.539932 [ 504 ] {} <Fatal> BaseDaemon: 6. ./build_docker/./src/Server/TCPHandler.cpp:2045: DB::TCPHandler::run() @ 0x444eb779 in /workspace/clickhouse
2023.04.27 12:52:52.546036 [ 504 ] {} <Fatal> BaseDaemon: 7. ./build_docker/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x45a2f9de in /workspace/clickhouse
2023.04.27 12:52:52.553998 [ 504 ] {} <Fatal> BaseDaemon: 8.1. inlined from ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: std::unique_ptr<Poco::Net::TCPServerConnection, std::default_delete<Poco::Net::TCPServerConnection>>::reset[abi:v15000](Poco::Net::TCPServerConnection*)
2023.04.27 12:52:52.554030 [ 504 ] {} <Fatal> BaseDaemon: 8.2. inlined from ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:259: ~unique_ptr
2023.04.27 12:52:52.554043 [ 504 ] {} <Fatal> BaseDaemon: 8. ./build_docker/./base/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() @ 0x45a30a92 in /workspace/clickhouse
2023.04.27 12:52:52.562263 [ 504 ] {} <Fatal> BaseDaemon: 9. ./build_docker/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x45c9b150 in /workspace/clickhouse
2023.04.27 12:52:52.569995 [ 504 ] {} <Fatal> BaseDaemon: 10. ./build_docker/./base/poco/Foundation/src/Thread_POSIX.cpp:0: Poco::ThreadImpl::runnableEntry(void*) @ 0x45c967f1 in /workspace/clickhouse
2023.04.27 12:52:52.570022 [ 504 ] {} <Fatal> BaseDaemon: 11. ? @ 0x7feb00253609 in ?
2023.04.27 12:52:52.570040 [ 504 ] {} <Fatal> BaseDaemon: 12. clone @ 0x7feb00178133 in ?
2023.04.27 12:52:52.570065 [ 504 ] {} <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read.
2023.04.27 12:52:57.102787 [ 141 ] {} <Fatal> Application: Child process was terminated by signal 6.
```
Reproduces since 23.4
Fiddle: https://fiddle.clickhouse.com/e03a998d-cdf7-445d-a18a-7d236b196f9c

```
Received exception from server (version 23.4.1):
Code: 1001. DB::Exception: Received from localhost:9000. DB::Exception: std::__1::future_error: The associated promise has been destructed prior to the associated state becoming ready.. (STD_EXCEPTION)
(query: SELECT 1000.0001, toUInt64(arrayJoin([NULL, 257, 65536, NULL])), arrayExists(x -> (x IN (SELECT '2.55', NULL WITH TOTALS)), [-9223372036854775808]) FROM remote('127.0.0.{1,2}', system.one) GROUP BY NULL, NULL, NULL, NULL;)
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
