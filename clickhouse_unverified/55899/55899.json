{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 55899,
  "instance_id": "ClickHouse__ClickHouse-55899",
  "issue_numbers": [
    "55023"
  ],
  "base_commit": "2346f3009575665a9bc02abfb21450a4340c3c9b",
  "patch": "diff --git a/docs/en/engines/table-engines/mergetree-family/mergetree.md b/docs/en/engines/table-engines/mergetree-family/mergetree.md\nindex e37fd3b72884..b90513acbad4 100644\n--- a/docs/en/engines/table-engines/mergetree-family/mergetree.md\n+++ b/docs/en/engines/table-engines/mergetree-family/mergetree.md\n@@ -73,7 +73,7 @@ A tuple of column names or arbitrary expressions. Example: `ORDER BY (CounterID,\n \n ClickHouse uses the sorting key as a primary key if the primary key is not defined explicitly by the `PRIMARY KEY` clause.\n \n-Use the `ORDER BY tuple()` syntax, if you do not need sorting. See [Selecting the Primary Key](#selecting-the-primary-key).\n+Use the `ORDER BY tuple()` syntax, if you do not need sorting, or set `create_table_empty_primary_key_by_default` to `true` to use the `ORDER BY tuple()` syntax by default. See [Selecting the Primary Key](#selecting-the-primary-key).\n \n #### PARTITION BY\n \ndiff --git a/src/Core/Settings.h b/src/Core/Settings.h\nindex b58705614d8e..1b788514c8cb 100644\n--- a/src/Core/Settings.h\n+++ b/src/Core/Settings.h\n@@ -812,6 +812,7 @@ class IColumn;\n     M(Bool, allow_create_index_without_type, false, \"Allow CREATE INDEX query without TYPE. Query will be ignored. Made for SQL compatibility tests.\", 0) \\\n     M(Bool, create_index_ignore_unique, false, \"Ignore UNIQUE keyword in CREATE UNIQUE INDEX. Made for SQL compatibility tests.\", 0) \\\n     M(Bool, print_pretty_type_names, false, \"Print pretty type names in DESCRIBE query and toTypeName() function\", 0) \\\n+    M(Bool, create_table_empty_primary_key_by_default, false, \"Allow to create *MergeTree tables with empty primary key when ORDER BY and PRIMARY KEY not specified\", 0) \\\n \n // End of COMMON_SETTINGS\n     // Please add settings related to formats into the FORMAT_FACTORY_SETTINGS, move obsolete settings to OBSOLETE_SETTINGS and obsolete format settings to OBSOLETE_FORMAT_SETTINGS.\ndiff --git a/src/Storages/MergeTree/registerStorageMergeTree.cpp b/src/Storages/MergeTree/registerStorageMergeTree.cpp\nindex 0a1827893112..f22d86499c22 100644\n--- a/src/Storages/MergeTree/registerStorageMergeTree.cpp\n+++ b/src/Storages/MergeTree/registerStorageMergeTree.cpp\n@@ -535,9 +535,20 @@ static StoragePtr create(const StorageFactory::Arguments & args)\n             args.storage_def->set(args.storage_def->order_by, args.storage_def->primary_key->clone());\n \n         if (!args.storage_def->order_by)\n-            throw Exception(ErrorCodes::BAD_ARGUMENTS,\n-                            \"You must provide an ORDER BY or PRIMARY KEY expression in the table definition. \"\n-                            \"If you don't want this table to be sorted, use ORDER BY/PRIMARY KEY ()\");\n+        {\n+            if (args.getLocalContext()->getSettingsRef().create_table_empty_primary_key_by_default)\n+            {\n+                args.storage_def->set(args.storage_def->order_by, makeASTFunction(\"tuple\"));\n+            }\n+            else\n+            {\n+                throw Exception(ErrorCodes::BAD_ARGUMENTS,\n+                                \"You must provide an ORDER BY or PRIMARY KEY expression in the table definition. \"\n+                                \"If you don't want this table to be sorted, use ORDER BY/PRIMARY KEY (). \"\n+                                \"Otherwise, you can use the setting 'create_table_empty_primary_key_by_default' to \"\n+                                \"automatically add an empty primary key to the table definition\");\n+            }\n+        }\n \n         /// Get sorting key from engine arguments.\n         ///\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02903_empty_order_by_throws_error.reference b/tests/queries/0_stateless/02903_empty_order_by_throws_error.reference\nnew file mode 100644\nindex 000000000000..2c94e4837100\n--- /dev/null\n+++ b/tests/queries/0_stateless/02903_empty_order_by_throws_error.reference\n@@ -0,0 +1,2 @@\n+OK\n+OK\ndiff --git a/tests/queries/0_stateless/02903_empty_order_by_throws_error.sh b/tests/queries/0_stateless/02903_empty_order_by_throws_error.sh\nnew file mode 100755\nindex 000000000000..64f5dd1a987f\n--- /dev/null\n+++ b/tests/queries/0_stateless/02903_empty_order_by_throws_error.sh\n@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+\n+CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CUR_DIR\"/../shell_config.sh\n+\n+# setting disabled and no order by or primary key; expect error\n+$CLICKHOUSE_CLIENT -n --query=\"\n+    DROP TABLE IF EXISTS test_empty_order_by;\n+    CREATE TABLE test_empty_order_by(a UInt8) ENGINE = MergeTree() SETTINGS index_granularity = 8192;\n+\" 2>&1 \\ | grep -F -q \"You must provide an ORDER BY or PRIMARY KEY expression in the table definition.\" && echo 'OK' || echo 'FAIL'\n+\n+# setting disabled and primary key in table definition\n+$CLICKHOUSE_CLIENT -n --query=\"\n+    DROP TABLE IF EXISTS test_empty_order_by;\n+    CREATE TABLE test_empty_order_by(a UInt8) ENGINE = MergeTree() PRIMARY KEY a SETTINGS index_granularity = 8192;\n+    SHOW CREATE TABLE test_empty_order_by;\n+\" 2>&1 \\ | grep -F -q \"ORDER BY a\" && echo 'OK' || echo 'FAIL'\ndiff --git a/tests/queries/0_stateless/02904_empty_order_by_with_setting_enabled.reference b/tests/queries/0_stateless/02904_empty_order_by_with_setting_enabled.reference\nnew file mode 100644\nindex 000000000000..b462a5a7baa4\n--- /dev/null\n+++ b/tests/queries/0_stateless/02904_empty_order_by_with_setting_enabled.reference\n@@ -0,0 +1,4 @@\n+OK\n+OK\n+OK\n+OK\ndiff --git a/tests/queries/0_stateless/02904_empty_order_by_with_setting_enabled.sh b/tests/queries/0_stateless/02904_empty_order_by_with_setting_enabled.sh\nnew file mode 100755\nindex 000000000000..7ac9b488be50\n--- /dev/null\n+++ b/tests/queries/0_stateless/02904_empty_order_by_with_setting_enabled.sh\n@@ -0,0 +1,37 @@\n+#!/usr/bin/env bash\n+\n+CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CUR_DIR\"/../shell_config.sh\n+\n+# setting enabled and no order by or primary key\n+${CLICKHOUSE_CLIENT} -n --query=\"\n+    SET create_table_empty_primary_key_by_default = true;\n+    DROP TABLE IF EXISTS test_empty_order_by;\n+    CREATE TABLE test_empty_order_by(a UInt8) ENGINE = MergeTree() SETTINGS index_granularity = 8192;\n+    SHOW CREATE TABLE test_empty_order_by;\n+\" 2>&1 \\ | grep -F -q \"ORDER BY tuple()\" && echo 'OK' || echo 'FAIL'\n+\n+# setting enabled and per-column primary key\n+${CLICKHOUSE_CLIENT} -n --query=\"\n+    SET create_table_empty_primary_key_by_default = true;\n+    DROP TABLE IF EXISTS test_empty_order_by;\n+    CREATE TABLE test_empty_order_by(a UInt8 PRIMARY KEY, b String PRIMARY KEY) ENGINE = MergeTree() SETTINGS index_granularity = 8192;\n+    SHOW CREATE TABLE test_empty_order_by;\n+\" 2>&1 \\ | grep -F -q \"ORDER BY (a, b)\" && echo 'OK' || echo 'FAIL'\n+\n+# setting enabled and primary key in table definition (not per-column or order by)\n+${CLICKHOUSE_CLIENT} -n --query=\"\n+    SET create_table_empty_primary_key_by_default = true;\n+    DROP TABLE IF EXISTS test_empty_order_by;\n+    CREATE TABLE test_empty_order_by(a UInt8, b String) ENGINE = MergeTree() PRIMARY KEY (a) SETTINGS index_granularity = 8192;\n+    SHOW CREATE TABLE test_empty_order_by;\n+\" 2>&1 \\ | grep -F -q \"ORDER BY a\" && echo 'OK' || echo 'FAIL'\n+\n+# setting enabled and order by in table definition (no primary key)\n+${CLICKHOUSE_CLIENT} -n --query=\"\n+    SET create_table_empty_primary_key_by_default = true;\n+    DROP TABLE IF EXISTS test_empty_order_by;\n+    CREATE TABLE test_empty_order_by(a UInt8, b String) ENGINE = MergeTree() ORDER BY (a, b) SETTINGS index_granularity = 8192;\n+    SHOW CREATE TABLE test_empty_order_by;\n+\" 2>&1 \\ | grep -F -q \"ORDER BY (a, b)\"  && echo 'OK' || echo 'FAIL'\n",
  "problem_statement": "Default ORDER BY key\nI found the setting to enable default table engine, but you can only set default engine = MergeTree\r\n\r\ntherefore, one must always write CREATE TABLE db.table **ORDER BY tuple() a**s  select .. unless one uses the log engine.\r\n\r\nI would hope for an option MergeTree ORDER BY tuple() as a default engine, because then the create table statement would look like one in any other SQL language.\n",
  "hints_text": "IMO OLAP users must educate themselves before shouting \"Clickhouse is slow\".\r\n\r\n\r\n \n`ORDER BY tuple()` is an antipattern, you should never use that for real usecases, it's suitable only for simple tests. \r\n\r\nYes, you should always specify an ORDER BY key.\r\n\r\nSee also https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree#primary-keys-and-indexes-in-queries and https://clickhouse.com/docs/en/optimize/sparse-primary-indexes#ordering-key-columns-efficiently\nActually, ORDER BY tuple() is useful in real use cases when you don't know which data you are loading, for example you have such scripted pipeline:\r\n1. Import data to staging table from File/other DBMS.\r\n2. Run queries, which return uniq count/ crosstab/min/max values\r\n3. Based on input, script create new optimized table with better column types/codecs/order by/partition by and additional columns.\r\n4. INSERT INTO destination_table SELECT * FROM staging\n@den-crane Not to be rude, but I'm really well aware of what ORDER BY tuple() means. But I have 15000 tables, many are tiny and Clickhouse isn't fast at joins anyway, so what's the point of specifying keys for all of them? @tavplubix I don't think it's a good idea to force that. If I'm ETLing 100 files I kind of don't care. Most data is too tiny and infrequently used to matter.\nIn fact, because Clickhouse is so fast its liberating to not have to think about table schemas unless they really need performance, since if it takes a few seconds to even manually specify a key and Clickhouse can process 100k rows at a sub-second pace, it makes a good table design basically irrelevant.\nI don't like adding `ORDER BY tuple()` by default because new users (who are not very familiar with some ClickHouse concepts) will forget to specify a proper ORDER BY key, so they will get very bad performance. The requirement of some ORDER BY key makes them pay attention.\r\n\r\nMaybe we could introduce a setting (disabled by default), but I'm not sure if it's worth adding a setting.\n> Maybe we could introduce a setting (disabled by default), but I'm not sure if it's worth adding a setting.\r\n\r\nIMO, it's ok, because in order to make ClickHouse compatible with other dbms SQL (drop in), a lot of settings were added to ignore specific features, which clickhouse doesn't' support from SQL (FK for example)",
  "created_at": "2023-10-21T16:17:37Z"
}