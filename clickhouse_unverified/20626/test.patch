diff --git a/tests/integration/test_force_drop_table/__init__.py b/tests/integration/test_force_drop_table/__init__.py
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/integration/test_force_drop_table/configs/config.xml b/tests/integration/test_force_drop_table/configs/config.xml
new file mode 100644
index 000000000000..e5f133953a6d
--- /dev/null
+++ b/tests/integration/test_force_drop_table/configs/config.xml
@@ -0,0 +1,4 @@
+<yandex>
+    <max_table_size_to_drop>1</max_table_size_to_drop>
+    <max_partition_size_to_drop>1</max_partition_size_to_drop>
+</yandex>
diff --git a/tests/integration/test_force_drop_table/test.py b/tests/integration/test_force_drop_table/test.py
new file mode 100644
index 000000000000..ad8316493e4a
--- /dev/null
+++ b/tests/integration/test_force_drop_table/test.py
@@ -0,0 +1,49 @@
+import pytest
+
+from helpers.cluster import ClickHouseCluster
+
+cluster = ClickHouseCluster(__file__)
+node = cluster.add_instance('node', main_configs=["configs/config.xml"], with_zookeeper=True)
+
+
+@pytest.fixture(scope="module")
+def started_cluster():
+    try:
+        cluster.start()
+        yield cluster
+    finally:
+        cluster.shutdown()
+
+def create_force_drop_flag(node):
+    force_drop_flag_path = "/var/lib/clickhouse/flags/force_drop_table"
+    node.exec_in_container(["bash", "-c", "touch {} && chmod a=rw {}".format(force_drop_flag_path, force_drop_flag_path)], user="root")
+
+@pytest.mark.parametrize("engine", ['Ordinary', 'Atomic'])
+def test_drop_materialized_view(started_cluster, engine):
+    node.query("CREATE DATABASE d ENGINE={}".format(engine))
+    node.query("CREATE TABLE d.rmt (n UInt64) ENGINE=ReplicatedMergeTree('/test/rmt', 'r1') ORDER BY n PARTITION BY n % 2")
+    node.query("CREATE MATERIALIZED VIEW d.mv (n UInt64, s String) ENGINE=MergeTree ORDER BY n PARTITION BY n % 2 AS SELECT n, toString(n) AS s FROM d.rmt")
+    node.query("INSERT INTO d.rmt VALUES (1), (2)")
+    assert "is greater than max" in node.query_and_get_error("DROP TABLE d.rmt")
+    assert "is greater than max" in node.query_and_get_error("DROP TABLE d.mv")
+    assert "is greater than max" in node.query_and_get_error("TRUNCATE TABLE d.rmt")
+    assert "is greater than max" in node.query_and_get_error("TRUNCATE TABLE d.mv")
+    assert "is greater than max" in node.query_and_get_error("ALTER TABLE d.rmt DROP PARTITION '0'")
+    assert node.query("SELECT * FROM d.rmt ORDER BY n") == "1
2
"
+    assert node.query("SELECT * FROM d.mv ORDER BY n") == "1\t1
2\t2
"
+
+    create_force_drop_flag(node)
+    node.query("ALTER TABLE d.rmt DROP PARTITION '0'")
+    assert node.query("SELECT * FROM d.rmt ORDER BY n") == "1
"
+    assert "is greater than max" in node.query_and_get_error("ALTER TABLE d.mv DROP PARTITION '0'")
+    create_force_drop_flag(node)
+    node.query("ALTER TABLE d.mv DROP PARTITION '0'")
+    assert node.query("SELECT * FROM d.mv ORDER BY n") == "1\t1
"
+    assert "is greater than max" in node.query_and_get_error("DROP TABLE d.rmt SYNC")
+    create_force_drop_flag(node)
+    node.query("DROP TABLE d.rmt SYNC")
+    assert "is greater than max" in node.query_and_get_error("DROP TABLE d.mv SYNC")
+    create_force_drop_flag(node)
+    node.query("DROP TABLE d.mv SYNC")
+    node.query("DROP DATABASE d")
+
diff --git a/tests/integration/test_reload_auxiliary_zookeepers/test.py b/tests/integration/test_reload_auxiliary_zookeepers/test.py
index 92c66c890fc3..1b14408bc12a 100644
--- a/tests/integration/test_reload_auxiliary_zookeepers/test.py
+++ b/tests/integration/test_reload_auxiliary_zookeepers/test.py
@@ -62,8 +62,7 @@ def test_reload_auxiliary_zookeepers(start_cluster):
 </yandex>"""
     node.replace_config("/etc/clickhouse-server/conf.d/zookeeper.xml", new_config)
 
-    # Hopefully it has finished the configuration reload
-    time.sleep(2)
+    node.query("SYSTEM RELOAD CONFIG")
 
     node.query(
         "ALTER TABLE simple2 FETCH PARTITION '2020-08-27' FROM 'zookeeper2:/clickhouse/tables/0/simple';"
@@ -81,7 +80,7 @@ def test_reload_auxiliary_zookeepers(start_cluster):
     </zookeeper>
 </yandex>"""
     node.replace_config("/etc/clickhouse-server/conf.d/zookeeper.xml", new_config)
-    time.sleep(2)
+    node.query("SYSTEM RELOAD CONFIG")
     with pytest.raises(QueryRuntimeException):
         node.query(
             "ALTER TABLE simple2 FETCH PARTITION '2020-08-27' FROM 'zookeeper2:/clickhouse/tables/0/simple';"
