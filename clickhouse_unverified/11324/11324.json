{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 11324,
  "instance_id": "ClickHouse__ClickHouse-11324",
  "issue_numbers": [
    "11140"
  ],
  "base_commit": "8e5d6725635be2d9866734d22f93cc872ec979d4",
  "patch": "diff --git a/src/Common/UTF8Helpers.cpp b/src/Common/UTF8Helpers.cpp\nindex 3cc29371b645..d8ba1bac5e99 100644\n--- a/src/Common/UTF8Helpers.cpp\n+++ b/src/Common/UTF8Helpers.cpp\n@@ -89,7 +89,18 @@ static int wcwidth(wchar_t wc)\n     }\n }\n \n-size_t computeWidth(const UInt8 * data, size_t size, size_t prefix) noexcept\n+\n+namespace\n+{\n+\n+enum ComputeWidthMode\n+{\n+    Width,              /// Calcualte and return visible width\n+    BytesBeforLimit     /// Calculate and return the maximum number of bytes when substring fits in visible width.\n+};\n+\n+template <ComputeWidthMode mode>\n+static size_t computeWidthImpl(const UInt8 * data, size_t size, size_t prefix, size_t limit) noexcept\n {\n     UTF8Decoder decoder;\n     size_t width = 0;\n@@ -132,16 +143,24 @@ size_t computeWidth(const UInt8 * data, size_t size, size_t prefix) noexcept\n             ++i;\n         }\n \n+        /// Now i points to position in bytes after regular ASCII sequence\n+        /// and if width > limit, then (width - limit) is the number of extra ASCII characters after width limit.\n+        if (mode == BytesBeforLimit && width > limit)\n+            return i - (width - limit);\n+\n         switch (decoder.decode(data[i]))\n         {\n             case UTF8Decoder::REJECT:\n+            {\n                 decoder.reset();\n                 // invalid sequences seem to have zero width in modern terminals\n                 // tested in libvte-based, alacritty, urxvt and xterm\n                 i -= rollback;\n                 rollback = 0;\n                 break;\n+            }\n             case UTF8Decoder::ACCEPT:\n+            {\n                 // there are special control characters that manipulate the terminal output.\n                 // (`0x08`, `0x09`, `0x0a`, `0x0b`, `0x0c`, `0x0d`, `0x1b`)\n                 // Since we don't touch the original column data, there is no easy way to escape them.\n@@ -149,12 +168,19 @@ size_t computeWidth(const UInt8 * data, size_t size, size_t prefix) noexcept\n                 // TODO: multiline support for '\\n'\n \n                 // special treatment for '\\t'\n+                size_t next_width = width;\n                 if (decoder.codepoint == '\\t')\n-                    width += 8 - (prefix + width) % 8;\n+                    next_width += 8 - (prefix + width) % 8;\n                 else\n-                    width += wcwidth(decoder.codepoint);\n+                    next_width += wcwidth(decoder.codepoint);\n+\n+                if (mode == BytesBeforLimit && next_width > limit)\n+                    return i - rollback;\n+                width = next_width;\n+\n                 rollback = 0;\n                 break;\n+            }\n             // continue if we meet other values here\n             default:\n                 ++rollback;\n@@ -162,7 +188,21 @@ size_t computeWidth(const UInt8 * data, size_t size, size_t prefix) noexcept\n     }\n \n     // no need to handle trailing sequence as they have zero width\n-    return width;\n+    return (mode == BytesBeforLimit) ? size : width;\n+}\n+\n+}\n+\n+\n+size_t computeWidth(const UInt8 * data, size_t size, size_t prefix) noexcept\n+{\n+    return computeWidthImpl<Width>(data, size, prefix, 0);\n+}\n+\n+size_t computeBytesBeforeWidth(const UInt8 * data, size_t size, size_t prefix, size_t limit) noexcept\n+{\n+    return computeWidthImpl<BytesBeforLimit>(data, size, prefix, limit);\n }\n+\n }\n }\ndiff --git a/src/Common/UTF8Helpers.h b/src/Common/UTF8Helpers.h\nindex c1c73783870d..926bb6a7f92e 100644\n--- a/src/Common/UTF8Helpers.h\n+++ b/src/Common/UTF8Helpers.h\n@@ -99,6 +99,19 @@ int queryConvert(const CharT * bytes, int length)\n /// and include `\\t` to the nearest longer length with multiple of eight.\n size_t computeWidth(const UInt8 * data, size_t size, size_t prefix = 0) noexcept;\n \n+\n+/** Calculate the maximum number of bytes, so that substring of this size fits in 'limit' width.\n+  *\n+  * For example, we have string \"x\u4f60\u597d\", it has 3 code points and visible width of 5 and byte size of 7.\n+\n+  * Suppose we have limit = 3.\n+  * Then we have to return 4 as maximum number of bytes\n+  *  and the truncated string will be \"x\u4f60\": two code points, visible width 3, byte size 4.\n+  *\n+  * The same result will be for limit 4, because the last character would not fit.\n+  */\n+size_t computeBytesBeforeWidth(const UInt8 * data, size_t size, size_t prefix, size_t limit) noexcept;\n+\n }\n \n \ndiff --git a/src/Core/Settings.h b/src/Core/Settings.h\nindex c3c8eedbb124..d1e36e9f3de0 100644\n--- a/src/Core/Settings.h\n+++ b/src/Core/Settings.h\n@@ -211,6 +211,7 @@ struct Settings : public SettingsCollection<Settings>\n     \\\n     M(SettingUInt64, output_format_pretty_max_rows, 10000, \"Rows limit for Pretty formats.\", 0) \\\n     M(SettingUInt64, output_format_pretty_max_column_pad_width, 250, \"Maximum width to pad all values in a column in Pretty formats.\", 0) \\\n+    M(SettingUInt64, output_format_pretty_max_value_width, 10000, \"Maximum width of value to display in Pretty formats. If greater - it will be cut.\", 0) \\\n     M(SettingBool, output_format_pretty_color, true, \"Use ANSI escape sequences to paint colors in Pretty formats\", 0) \\\n     M(SettingUInt64, output_format_parquet_row_group_size, 1000000, \"Row group size in rows.\", 0) \\\n     M(SettingString, output_format_avro_codec, \"\", \"Compression codec used for output. Possible values: 'null', 'deflate', 'snappy'.\", 0) \\\ndiff --git a/src/Formats/FormatFactory.cpp b/src/Formats/FormatFactory.cpp\nindex 669baace2f5b..9182c728600b 100644\n--- a/src/Formats/FormatFactory.cpp\n+++ b/src/Formats/FormatFactory.cpp\n@@ -101,6 +101,7 @@ static FormatSettings getOutputFormatSetting(const Settings & settings, const Co\n     format_settings.csv.crlf_end_of_line = settings.output_format_csv_crlf_end_of_line;\n     format_settings.pretty.max_rows = settings.output_format_pretty_max_rows;\n     format_settings.pretty.max_column_pad_width = settings.output_format_pretty_max_column_pad_width;\n+    format_settings.pretty.max_value_width = settings.output_format_pretty_max_value_width;\n     format_settings.pretty.color = settings.output_format_pretty_color;\n     format_settings.template_settings.resultset_format = settings.format_template_resultset;\n     format_settings.template_settings.row_format = settings.format_template_row;\ndiff --git a/src/Formats/FormatSettings.h b/src/Formats/FormatSettings.h\nindex 5382d0e0b9d7..26195c9ae0a6 100644\n--- a/src/Formats/FormatSettings.h\n+++ b/src/Formats/FormatSettings.h\n@@ -42,6 +42,7 @@ struct FormatSettings\n     {\n         UInt64 max_rows = 10000;\n         UInt64 max_column_pad_width = 250;\n+        UInt64 max_value_width = 10000;\n         bool color = true;\n     };\n \ndiff --git a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\nindex 96b1ff5a5113..59d3814adea8 100644\n--- a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\n+++ b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\n@@ -30,14 +30,14 @@ PrettyBlockOutputFormat::PrettyBlockOutputFormat(\n /// Note that number of code points is just a rough approximation of visible string width.\n void PrettyBlockOutputFormat::calculateWidths(\n     const Block & header, const Chunk & chunk,\n-    WidthsPerColumn & widths, Widths & max_widths, Widths & name_widths)\n+    WidthsPerColumn & widths, Widths & max_padded_widths, Widths & name_widths)\n {\n-    size_t num_rows = chunk.getNumRows();\n+    size_t num_rows = std::min(chunk.getNumRows(), format_settings.pretty.max_rows);\n     size_t num_columns = chunk.getNumColumns();\n     const auto & columns = chunk.getColumns();\n \n     widths.resize(num_columns);\n-    max_widths.resize_fill(num_columns);\n+    max_padded_widths.resize_fill(num_columns);\n     name_widths.resize(num_columns);\n \n     /// Calculate widths of all values.\n@@ -57,9 +57,21 @@ void PrettyBlockOutputFormat::calculateWidths(\n                 elem.type->serializeAsText(*column, j, out_serialize, format_settings);\n             }\n \n-            widths[i][j] = std::min<UInt64>(format_settings.pretty.max_column_pad_width,\n-                UTF8::computeWidth(reinterpret_cast<const UInt8 *>(serialized_value.data()), serialized_value.size(), prefix));\n-            max_widths[i] = std::max(max_widths[i], widths[i][j]);\n+            /// Avoid calculating width of too long strings by limiting the size in bytes.\n+            /// Note that it is just an estimation. 4 is the maximum size of Unicode code point in bytes in UTF-8.\n+            /// But it's possible that the string is long in bytes but very short in visible size.\n+            /// (e.g. non-printable characters, diacritics, combining characters)\n+            if (format_settings.pretty.max_value_width)\n+            {\n+                size_t max_byte_size = format_settings.pretty.max_value_width * 4;\n+                if (serialized_value.size() > max_byte_size)\n+                    serialized_value.resize(max_byte_size);\n+            }\n+\n+            widths[i][j] = UTF8::computeWidth(reinterpret_cast<const UInt8 *>(serialized_value.data()), serialized_value.size(), prefix);\n+            max_padded_widths[i] = std::max<UInt64>(max_padded_widths[i],\n+                std::min<UInt64>(format_settings.pretty.max_column_pad_width,\n+                    std::min<UInt64>(format_settings.pretty.max_value_width, widths[i][j])));\n         }\n \n         /// And also calculate widths for names of columns.\n@@ -67,9 +79,9 @@ void PrettyBlockOutputFormat::calculateWidths(\n             // name string doesn't contain Tab, no need to pass `prefix`\n             name_widths[i] = std::min<UInt64>(format_settings.pretty.max_column_pad_width,\n                 UTF8::computeWidth(reinterpret_cast<const UInt8 *>(elem.name.data()), elem.name.size()));\n-            max_widths[i] = std::max(max_widths[i], name_widths[i]);\n+            max_padded_widths[i] = std::max<UInt64>(max_padded_widths[i], name_widths[i]);\n         }\n-        prefix += max_widths[i] + 3;\n+        prefix += max_padded_widths[i] + 3;\n     }\n }\n \n@@ -174,18 +186,20 @@ void PrettyBlockOutputFormat::write(const Chunk & chunk, PortKind port_kind)\n         if (i != 0)\n             writeString(middle_values_separator_s, out);\n \n-        writeCString(\"\u2502 \", out);\n+        writeCString(\"\u2502\", out);\n \n         for (size_t j = 0; j < num_columns; ++j)\n         {\n             if (j != 0)\n-                writeCString(\" \u2502 \", out);\n+                writeCString(\"\u2502\", out);\n \n             const auto & type = *header.getByPosition(j).type;\n-            writeValueWithPadding(*columns[j], type, i, widths[j].empty() ? max_widths[j] : widths[j][i], max_widths[j]);\n+            writeValueWithPadding(*columns[j], type, i,\n+                widths[j].empty() ? max_widths[j] : widths[j][i],\n+                max_widths[j]);\n         }\n \n-        writeCString(\" \u2502\\n\", out);\n+        writeCString(\"\u2502\\n\", out);\n     }\n \n     writeString(bottom_separator_s, out);\n@@ -197,20 +211,42 @@ void PrettyBlockOutputFormat::write(const Chunk & chunk, PortKind port_kind)\n void PrettyBlockOutputFormat::writeValueWithPadding(\n         const IColumn & column, const IDataType & type, size_t row_num, size_t value_width, size_t pad_to_width)\n {\n+    String serialized_value = \" \";\n+    {\n+        WriteBufferFromString out_serialize(serialized_value, WriteBufferFromString::AppendModeTag());\n+        type.serializeAsText(column, row_num, out_serialize, format_settings);\n+    }\n+\n+    if (value_width > format_settings.pretty.max_value_width)\n+    {\n+        serialized_value.resize(UTF8::computeBytesBeforeWidth(\n+            reinterpret_cast<const UInt8 *>(serialized_value.data()), serialized_value.size(), 0, 1 + format_settings.pretty.max_value_width));\n+\n+        if (format_settings.pretty.color)\n+            serialized_value += \"\\033[31;1m\u22ef\\033[0m\";\n+        else\n+            serialized_value += \"\u22ef\";\n+\n+        value_width = format_settings.pretty.max_value_width;\n+    }\n+    else\n+        serialized_value += ' ';\n+\n     auto write_padding = [&]()\n     {\n-        for (size_t k = 0; k < pad_to_width - value_width; ++k)\n-            writeChar(' ', out);\n+        if (pad_to_width > value_width)\n+            for (size_t k = 0; k < pad_to_width - value_width; ++k)\n+                writeChar(' ', out);\n     };\n \n     if (type.shouldAlignRightInPrettyFormats())\n     {\n         write_padding();\n-        type.serializeAsText(column, row_num, out, format_settings);\n+        out.write(serialized_value.data(), serialized_value.size());\n     }\n     else\n     {\n-        type.serializeAsText(column, row_num, out, format_settings);\n+        out.write(serialized_value.data(), serialized_value.size());\n         write_padding();\n     }\n }\ndiff --git a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\nindex eae1c3e9eb12..a873e02c1e48 100644\n--- a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\n+++ b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\n@@ -52,7 +52,7 @@ class PrettyBlockOutputFormat : public IOutputFormat\n \n     void calculateWidths(\n         const Block & header, const Chunk & chunk,\n-        WidthsPerColumn & widths, Widths & max_widths, Widths & name_widths);\n+        WidthsPerColumn & widths, Widths & max_padded_widths, Widths & name_widths);\n \n     void writeValueWithPadding(\n         const IColumn & column, const IDataType & type, size_t row_num, size_t value_width, size_t pad_to_width);\ndiff --git a/src/Processors/Formats/Impl/PrettyCompactBlockOutputFormat.cpp b/src/Processors/Formats/Impl/PrettyCompactBlockOutputFormat.cpp\nindex 4726332e554a..e9040f672b4b 100644\n--- a/src/Processors/Formats/Impl/PrettyCompactBlockOutputFormat.cpp\n+++ b/src/Processors/Formats/Impl/PrettyCompactBlockOutputFormat.cpp\n@@ -83,19 +83,19 @@ void PrettyCompactBlockOutputFormat::writeRow(\n {\n     size_t num_columns = max_widths.size();\n \n-    writeCString(\"\u2502 \", out);\n+    writeCString(\"\u2502\", out);\n \n     for (size_t j = 0; j < num_columns; ++j)\n     {\n         if (j != 0)\n-            writeCString(\" \u2502 \", out);\n+            writeCString(\"\u2502\", out);\n \n         const auto & type = *header.getByPosition(j).type;\n         const auto & cur_widths = widths[j].empty() ? max_widths[j] : widths[j][row_num];\n         writeValueWithPadding(*columns[j], type, row_num, cur_widths, max_widths[j]);\n     }\n \n-    writeCString(\" \u2502\\n\", out);\n+    writeCString(\"\u2502\\n\", out);\n }\n \n void PrettyCompactBlockOutputFormat::write(const Chunk & chunk, PortKind port_kind)\ndiff --git a/src/Processors/Formats/Impl/PrettySpaceBlockOutputFormat.cpp b/src/Processors/Formats/Impl/PrettySpaceBlockOutputFormat.cpp\nindex ca9d1b674d47..6b42ea57e1f2 100644\n--- a/src/Processors/Formats/Impl/PrettySpaceBlockOutputFormat.cpp\n+++ b/src/Processors/Formats/Impl/PrettySpaceBlockOutputFormat.cpp\n@@ -34,6 +34,8 @@ void PrettySpaceBlockOutputFormat::write(const Chunk & chunk, PortKind port_kind\n     {\n         if (i != 0)\n             writeCString(\"   \", out);\n+        else\n+            writeChar(' ', out);\n \n         const ColumnWithTypeAndName & col = header.getByPosition(i);\n \n@@ -67,7 +69,7 @@ void PrettySpaceBlockOutputFormat::write(const Chunk & chunk, PortKind port_kind\n         for (size_t column = 0; column < num_columns; ++column)\n         {\n             if (column != 0)\n-                writeCString(\"   \", out);\n+                writeCString(\" \", out);\n \n             const auto & type = *header.getByPosition(column).type;\n             auto & cur_width = widths[column].empty() ? max_widths[column] : widths[column][row];\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00098_k_union_all.reference b/tests/queries/0_stateless/00098_k_union_all.reference\nindex 1b21a751afc4..a6921e228af4 100644\n--- a/tests/queries/0_stateless/00098_k_union_all.reference\n+++ b/tests/queries/0_stateless/00098_k_union_all.reference\n@@ -1,18 +1,18 @@\n-\u001b[1m1\u001b[0m\n+ \u001b[1m1\u001b[0m\n \n-1\n-\u001b[1m1\u001b[0m\n+ 1 \n+ \u001b[1m1\u001b[0m\n \n-1\n-\u001b[1m1\u001b[0m\n+ 1 \n+ \u001b[1m1\u001b[0m\n \n-1\n-\u001b[1m1\u001b[0m\n+ 1 \n+ \u001b[1m1\u001b[0m\n \n-1\n-\u001b[1m1\u001b[0m\n+ 1 \n+ \u001b[1m1\u001b[0m\n \n-1\n-\u001b[1m1\u001b[0m\n+ 1 \n+ \u001b[1m1\u001b[0m\n \n-1\n+ 1 \ndiff --git a/tests/queries/0_stateless/00305_http_and_readonly.reference b/tests/queries/0_stateless/00305_http_and_readonly.reference\nindex f148cbbb93b4..4d0cb6bd6bc7 100644\n--- a/tests/queries/0_stateless/00305_http_and_readonly.reference\n+++ b/tests/queries/0_stateless/00305_http_and_readonly.reference\n@@ -1,19 +1,19 @@\n-name               value   changed\n+ name               value   changed\n \n-max_rows_to_read   10000         1\n-readonly           0             0\n-name               value   changed\n+ max_rows_to_read   10000         1 \n+ readonly           0             0 \n+ name               value   changed\n \n-max_rows_to_read   10000         1\n-readonly           2             1\n-name               value   changed\n+ max_rows_to_read   10000         1 \n+ readonly           2             1 \n+ name               value   changed\n \n-max_rows_to_read   10000         1\n-readonly           1             1\n-name               value   changed\n+ max_rows_to_read   10000         1 \n+ readonly           1             1 \n+ name               value   changed\n \n-max_rows_to_read   10000         1\n-readonly           2             1\n+ max_rows_to_read   10000         1 \n+ readonly           2             1 \n Ok\n Ok\n 0\ndiff --git a/tests/queries/0_stateless/00405_pretty_formats.reference b/tests/queries/0_stateless/00405_pretty_formats.reference\nindex 07dfd76339be..ef3184f28378 100644\n--- a/tests/queries/0_stateless/00405_pretty_formats.reference\n+++ b/tests/queries/0_stateless/00405_pretty_formats.reference\n@@ -38,20 +38,20 @@\n \u2502     8 \u2502 8     \u2502 (8,'8') \u2502               2 \u2502\n \u2502     9 \u2502 9     \u2502 (9,'9') \u2502            \u1d3a\u1d41\u1d38\u1d38 \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-\u001b[1mhello\u001b[0m   \u001b[1mworld\u001b[0m   \u001b[1mtuple\u001b[0m     \u001b[1msometimes_nulls\u001b[0m\n+ \u001b[1mhello\u001b[0m   \u001b[1mworld\u001b[0m   \u001b[1mtuple\u001b[0m     \u001b[1msometimes_nulls\u001b[0m\n \n-    0   0       (0,'0')              \u1d3a\u1d41\u1d38\u1d38\n-    1   1       (1,'1')                 1\n-    2   2       (2,'2')                 2\n-    3   3       (3,'3')              \u1d3a\u1d41\u1d38\u1d38\n-    4   4       (4,'4')                 1\n-\u001b[1mhello\u001b[0m   \u001b[1mworld\u001b[0m   \u001b[1mtuple\u001b[0m     \u001b[1msometimes_nulls\u001b[0m\n+     0   0       (0,'0')              \u1d3a\u1d41\u1d38\u1d38 \n+     1   1       (1,'1')                 1 \n+     2   2       (2,'2')                 2 \n+     3   3       (3,'3')              \u1d3a\u1d41\u1d38\u1d38 \n+     4   4       (4,'4')                 1 \n+ \u001b[1mhello\u001b[0m   \u001b[1mworld\u001b[0m   \u001b[1mtuple\u001b[0m     \u001b[1msometimes_nulls\u001b[0m\n \n-    5   5       (5,'5')                 2\n-    6   6       (6,'6')              \u1d3a\u1d41\u1d38\u1d38\n-    7   7       (7,'7')                 1\n-    8   8       (8,'8')                 2\n-    9   9       (9,'9')              \u1d3a\u1d41\u1d38\u1d38\n+     5   5       (5,'5')                 2 \n+     6   6       (6,'6')              \u1d3a\u1d41\u1d38\u1d38 \n+     7   7       (7,'7')                 1 \n+     8   8       (8,'8')                 2 \n+     9   9       (9,'9')              \u1d3a\u1d41\u1d38\u1d38 \n \u250c\u2500\u001b[1mhello\u001b[0m\u2500\u252c\u2500\u001b[1mworld\u001b[0m\u2500\u252c\u2500\u001b[1mtuple\u001b[0m\u2500\u2500\u2500\u252c\u2500\u001b[1msometimes_nulls\u001b[0m\u2500\u2510\n \u2502     0 \u2502 0     \u2502 (0,'0') \u2502            \u1d3a\u1d41\u1d38\u1d38 \u2502\n \u2502     1 \u2502 1     \u2502 (1,'1') \u2502               1 \u2502\n@@ -104,20 +104,20 @@\n \u2502     8 \u2502 8     \u2502 (8,'8') \u2502               2 \u2502\n \u2502     9 \u2502 9     \u2502 (9,'9') \u2502            \u1d3a\u1d41\u1d38\u1d38 \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-hello   world   tuple     sometimes_nulls\n+ hello   world   tuple     sometimes_nulls\n \n-    0   0       (0,'0')              \u1d3a\u1d41\u1d38\u1d38\n-    1   1       (1,'1')                 1\n-    2   2       (2,'2')                 2\n-    3   3       (3,'3')              \u1d3a\u1d41\u1d38\u1d38\n-    4   4       (4,'4')                 1\n-hello   world   tuple     sometimes_nulls\n+     0   0       (0,'0')              \u1d3a\u1d41\u1d38\u1d38 \n+     1   1       (1,'1')                 1 \n+     2   2       (2,'2')                 2 \n+     3   3       (3,'3')              \u1d3a\u1d41\u1d38\u1d38 \n+     4   4       (4,'4')                 1 \n+ hello   world   tuple     sometimes_nulls\n \n-    5   5       (5,'5')                 2\n-    6   6       (6,'6')              \u1d3a\u1d41\u1d38\u1d38\n-    7   7       (7,'7')                 1\n-    8   8       (8,'8')                 2\n-    9   9       (9,'9')              \u1d3a\u1d41\u1d38\u1d38\n+     5   5       (5,'5')                 2 \n+     6   6       (6,'6')              \u1d3a\u1d41\u1d38\u1d38 \n+     7   7       (7,'7')                 1 \n+     8   8       (8,'8')                 2 \n+     9   9       (9,'9')              \u1d3a\u1d41\u1d38\u1d38 \n \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n \u2503 \u001b[1mhello\u001b[0m \u2503 \u001b[1mworld\u001b[0m \u2503 \u001b[1mtuple  \u001b[0m \u2503 \u001b[1msometimes_nulls\u001b[0m \u2503\n \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n@@ -148,16 +148,16 @@ hello   world   tuple     sometimes_nulls\n \u2502     5 \u2502 5     \u2502 (5,'5') \u2502               2 \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   Showed first 6.\n-\u001b[1mhello\u001b[0m   \u001b[1mworld\u001b[0m   \u001b[1mtuple\u001b[0m     \u001b[1msometimes_nulls\u001b[0m\n+ \u001b[1mhello\u001b[0m   \u001b[1mworld\u001b[0m   \u001b[1mtuple\u001b[0m     \u001b[1msometimes_nulls\u001b[0m\n \n-    0   0       (0,'0')              \u1d3a\u1d41\u1d38\u1d38\n-    1   1       (1,'1')                 1\n-    2   2       (2,'2')                 2\n-    3   3       (3,'3')              \u1d3a\u1d41\u1d38\u1d38\n-    4   4       (4,'4')                 1\n-\u001b[1mhello\u001b[0m   \u001b[1mworld\u001b[0m   \u001b[1mtuple\u001b[0m     \u001b[1msometimes_nulls\u001b[0m\n+     0   0       (0,'0')              \u1d3a\u1d41\u1d38\u1d38 \n+     1   1       (1,'1')                 1 \n+     2   2       (2,'2')                 2 \n+     3   3       (3,'3')              \u1d3a\u1d41\u1d38\u1d38 \n+     4   4       (4,'4')                 1 \n+ \u001b[1mhello\u001b[0m   \u001b[1mworld\u001b[0m   \u001b[1mtuple\u001b[0m     \u001b[1msometimes_nulls\u001b[0m\n \n-    5   5       (5,'5')                 2\n+     5   5       (5,'5')                 2 \n \n Showed first 6.\n \u250c\u2500\u001b[1mhello\u001b[0m\u2500\u252c\u2500\u001b[1mworld\u001b[0m\u2500\u252c\u2500\u001b[1mtuple\u001b[0m\u2500\u2500\u2500\u252c\u2500\u001b[1msometimes_nulls\u001b[0m\u2500\u2510\n@@ -199,15 +199,15 @@ Showed first 6.\n \u2502     5 \u2502 5     \u2502 (5,'5') \u2502               2 \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   Showed first 6.\n-hello   world   tuple     sometimes_nulls\n+ hello   world   tuple     sometimes_nulls\n \n-    0   0       (0,'0')              \u1d3a\u1d41\u1d38\u1d38\n-    1   1       (1,'1')                 1\n-    2   2       (2,'2')                 2\n-    3   3       (3,'3')              \u1d3a\u1d41\u1d38\u1d38\n-    4   4       (4,'4')                 1\n-hello   world   tuple     sometimes_nulls\n+     0   0       (0,'0')              \u1d3a\u1d41\u1d38\u1d38 \n+     1   1       (1,'1')                 1 \n+     2   2       (2,'2')                 2 \n+     3   3       (3,'3')              \u1d3a\u1d41\u1d38\u1d38 \n+     4   4       (4,'4')                 1 \n+ hello   world   tuple     sometimes_nulls\n \n-    5   5       (5,'5')                 2\n+     5   5       (5,'5')                 2 \n \n Showed first 6.\ndiff --git a/tests/queries/0_stateless/00476_pretty_formats_and_widths.reference b/tests/queries/0_stateless/00476_pretty_formats_and_widths.reference\nindex c97991ae0e97..eedaa4b5d8bd 100644\n--- a/tests/queries/0_stateless/00476_pretty_formats_and_widths.reference\n+++ b/tests/queries/0_stateless/00476_pretty_formats_and_widths.reference\n@@ -33,18 +33,18 @@\n \u2502  100000000 \u2502 100000000  \u2502\n \u2502 1000000000 \u2502 1000000000 \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-         \u001b[1mx\u001b[0m   \u001b[1ms\u001b[0m         \n+          \u001b[1mx\u001b[0m   \u001b[1ms\u001b[0m         \n \n-         1   1         \n-        10   10        \n-       100   100       \n-      1000   1000      \n-     10000   10000     \n-    100000   100000    \n-   1000000   1000000   \n-  10000000   10000000  \n- 100000000   100000000 \n-1000000000   1000000000\n+          1   1          \n+         10   10         \n+        100   100        \n+       1000   1000       \n+      10000   10000      \n+     100000   100000     \n+    1000000   1000000    \n+   10000000   10000000   \n+  100000000   100000000  \n+ 1000000000   1000000000 \n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[1mx\u001b[0m\u2500\u252c\u2500\u001b[1ms\u001b[0m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502          1 \u2502 1          \u2502\n \u2502         10 \u2502 10         \u2502\ndiff --git a/tests/queries/0_stateless/00569_parse_date_time_best_effort.reference b/tests/queries/0_stateless/00569_parse_date_time_best_effort.reference\nindex 8638c0b707f5..b873e8b848d5 100644\n--- a/tests/queries/0_stateless/00569_parse_date_time_best_effort.reference\n+++ b/tests/queries/0_stateless/00569_parse_date_time_best_effort.reference\n@@ -1,106 +1,106 @@\n-s                                                   a                     b\n+ s                                                   a                     b\n \n-0                                 2000-01-01 00:00:00   2000-01-01 00:00:00\n-0000                              2000-01-01 00:00:00   2000-01-01 00:00:00\n-00:00:00                          2000-01-01 00:00:00   2000-01-01 00:00:00\n-01:00:00                          2000-01-01 01:00:00   2000-01-01 01:00:00\n-02/01/17 010203 MSK               2017-01-01 22:02:03   2017-01-01 22:02:03\n-02/01/17 010203 MSK+0100          2017-01-01 21:02:03   2017-01-01 21:02:03\n-02/01/17 010203 UTC+0300          2017-01-01 22:02:03   2017-01-01 22:02:03\n-02/01/17 010203Z                  2017-01-02 01:02:03   2017-01-02 01:02:03\n-02/01/1970 010203Z                1970-01-02 01:02:03   1970-01-02 01:02:03\n-02/01/70 010203Z                  1970-01-02 01:02:03   1970-01-02 01:02:03\n-11 Feb 2018 06:40:50 +0300        2018-02-11 03:40:50   2018-02-11 03:40:50\n-17 Apr 2 1:2:3                    2000-04-17 01:02:03   2000-04-17 01:02:03\n-19700102 01:00:00                 1970-01-02 01:00:00   1970-01-02 01:00:00\n-1970010201:00:00                  2032-06-06 02:03:21   2032-06-06 02:03:21\n-19700102010203                    1970-01-02 01:02:03   1970-01-02 01:02:03\n-19700102010203Z                   1970-01-02 01:02:03   1970-01-02 01:02:03\n-1970/01/02 010203Z                1970-01-02 01:02:03   1970-01-02 01:02:03\n-20                                2000-01-20 00:00:00   2000-01-20 00:00:00\n-201                                              \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00\n-20160101                          2016-01-01 00:00:00   2016-01-01 00:00:00\n-2016-01-01                        2016-01-01 00:00:00   2016-01-01 00:00:00\n-201601-01                         2016-01-01 01:00:00   2016-01-01 01:00:00\n-2016-01-01MSD                     2015-12-31 20:00:00   2015-12-31 20:00:00\n-2016-01-01 MSD                    2015-12-31 20:00:00   2015-12-31 20:00:00\n-201601-01 MSD                     2016-01-01 04:00:00   2016-01-01 04:00:00\n-2016-01-01UTC                     2016-01-01 00:00:00   2016-01-01 00:00:00\n-2016-01-01Z                       2016-01-01 00:00:00   2016-01-01 00:00:00\n-2017                              2017-01-01 00:00:00   2017-01-01 00:00:00\n-2017/01/00                        2017-01-01 00:00:00   2017-01-01 00:00:00\n-2017/01/00 MSD                    2016-12-31 20:00:00   2016-12-31 20:00:00\n-2017/01/00 MSD Jun                2017-05-31 20:00:00   2017-05-31 20:00:00\n-2017/01/01                        2017-01-01 00:00:00   2017-01-01 00:00:00\n-201701 02 010203 UTC+0300         2017-01-01 22:02:03   2017-01-01 22:02:03\n-2017-01-02 03:04:05               2017-01-02 03:04:05   2017-01-02 03:04:05\n-2017-01-0203:04:05                               \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00\n-2017-01-02 03:04:05+0             2017-01-02 03:04:05   2017-01-02 03:04:05\n-2017-01-02 03:04:05+00            2017-01-02 03:04:05   2017-01-02 03:04:05\n-2017-01-02 03:04:05+0000          2017-01-02 03:04:05   2017-01-02 03:04:05\n-2017-01-02 03:04:05 -0100         2017-01-02 04:04:05   2017-01-02 04:04:05\n-2017-01-02 03:04:05+030           2017-01-02 02:34:05   2017-01-02 02:34:05\n-2017-01-02 03:04:05+0300          2017-01-02 00:04:05   2017-01-02 00:04:05\n-2017-01-02 03:04:05+1             2017-01-02 02:04:05   2017-01-02 02:04:05\n-2017-01-02 03:04:05+300           2017-01-02 00:04:05   2017-01-02 00:04:05\n-2017-01-02 03:04:05+900           2017-01-01 18:04:05   2017-01-01 18:04:05\n-2017-01-02 03:04:05GMT            2017-01-02 03:04:05   2017-01-02 03:04:05\n-2017-01-02 03:04:05 MSD           2017-01-01 23:04:05   2017-01-01 23:04:05\n-2017-01-02 03:04:05 MSD Feb       2017-02-01 23:04:05   2017-02-01 23:04:05\n-2017-01-02 03:04:05 MSD Jun       2017-06-01 23:04:05   2017-06-01 23:04:05\n-2017-01-02 03:04:05 MSK           2017-01-02 00:04:05   2017-01-02 00:04:05\n-2017-01-02T03:04:05               2017-01-02 03:04:05   2017-01-02 03:04:05\n-2017-01-02T03:04:05+00            2017-01-02 03:04:05   2017-01-02 03:04:05\n-2017-01-02T03:04:05 -0100         2017-01-02 04:04:05   2017-01-02 04:04:05\n-2017-01-02T03:04:05-0100          2017-01-02 04:04:05   2017-01-02 04:04:05\n-2017-01-02T03:04:05+0100          2017-01-02 02:04:05   2017-01-02 02:04:05\n-2017-01-02T03:04:05Z              2017-01-02 03:04:05   2017-01-02 03:04:05\n-2017-01 03:04:05 MSD Jun          2017-05-31 23:04:05   2017-05-31 23:04:05\n-2017-01 03:04 MSD Jun             2017-05-31 23:04:00   2017-05-31 23:04:00\n-2017/01/31                        2017-01-31 00:00:00   2017-01-31 00:00:00\n-2017/01/32                        0000-00-00 00:00:00   0000-00-00 00:00:00\n-2017-01 MSD Jun                   2017-05-31 20:00:00   2017-05-31 20:00:00\n-201701 MSD Jun                    2017-05-31 20:00:00   2017-05-31 20:00:00\n-2017 25 1:2:3                     0000-00-00 00:00:00   0000-00-00 00:00:00\n-2017 25 Apr 1:2:3                 2017-04-01 01:02:03   2017-04-01 01:02:03\n-2017 Apr 01 11:22:33              2017-04-01 11:22:33   2017-04-01 11:22:33\n-2017 Apr 02 01/02/03 UTC+0300                    \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00\n-2017 Apr 02 010203 UTC+0300       2017-04-01 22:02:03   2017-04-01 22:02:03\n-2017 Apr 02 01:2:3 UTC+0300       2017-04-01 22:02:03   2017-04-01 22:02:03\n-2017 Apr 02 1:02:3                2017-04-02 01:02:03   2017-04-02 01:02:03\n-2017 Apr 02 11:22:33              2017-04-02 11:22:33   2017-04-02 11:22:33\n-2017 Apr 02 1:2:03                2017-04-02 01:02:03   2017-04-02 01:02:03\n-2017 Apr 02 1:22:33               2017-04-02 01:22:33   2017-04-02 01:22:33\n-2017 Apr 02 1:2:3                 2017-04-02 01:02:03   2017-04-02 01:02:03\n-2017 Apr 02 1:2:33                2017-04-02 01:02:33   2017-04-02 01:02:33\n-2017 Apr 02 1:2:3 MSK             2017-04-01 22:02:03   2017-04-01 22:02:03\n-2017 Apr 02 1:2:3 MSK 2017        2017-04-01 22:02:03   2017-04-01 22:02:03\n-2017 Apr 02 1:2:3 MSK 2018        2017-04-01 22:02:03   2017-04-01 22:02:03\n-2017 Apr 02 1:2:3 UTC+0000        2017-04-02 01:02:03   2017-04-02 01:02:03\n-2017 Apr 02 1:2:3 UTC+0300        2017-04-01 22:02:03   2017-04-01 22:02:03\n-2017 Apr 02 1:2:3 UTC+0400        2017-04-01 21:02:03   2017-04-01 21:02:03\n-2017 Apr 2 1:2:3                  2017-04-02 01:02:03   2017-04-02 01:02:03\n-2017 Jan 02 010203 UTC+0300       2017-01-01 22:02:03   2017-01-01 22:02:03\n-25 Apr 2017 01:02:03              2017-04-25 01:02:03   2017-04-25 01:02:03\n-25 Apr 2017 1:2:3                 2017-04-25 01:02:03   2017-04-25 01:02:03\n-25 Jan 2017 1:2:3                 2017-01-25 01:02:03   2017-01-25 01:02:03\n-25 Jan 2017 1:2:3 MSK             2017-01-24 22:02:03   2017-01-24 22:02:03\n-25 Jan 2017 1:2:3 PM              2017-01-25 13:02:03   2017-01-25 13:02:03\n-25 Jan 2017 1:2:3Z                2017-01-25 01:02:03   2017-01-25 01:02:03\n-25 Jan 2017 1:2:3 Z               2017-01-25 01:02:03   2017-01-25 01:02:03\n-25 Jan 2017 1:2:3 Z +0300         2017-01-24 22:02:03   2017-01-24 22:02:03\n-25 Jan 2017 1:2:3 Z+03:00         2017-01-24 22:02:03   2017-01-24 22:02:03\n-25 Jan 2017 1:2:3 Z +0300 OM                     \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00\n-25 Jan 2017 1:2:3 Z +03:00 PM     2017-01-25 10:02:03   2017-01-25 10:02:03\n-25 Jan 2017 1:2:3 Z +0300 PM      2017-01-25 10:02:03   2017-01-25 10:02:03\n-25 Jan 2017 1:2:3 Z+03:00 PM      2017-01-25 10:02:03   2017-01-25 10:02:03\n-25 Jan 2017 1:2:3 Z +03:30 PM     2017-01-25 09:32:03   2017-01-25 09:32:03\n-25 Jan 2017 1:2:3Z Mo                            \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00\n-25 Jan 2017 1:2:3Z Mon            2017-01-25 01:02:03   2017-01-25 01:02:03\n-25 Jan 2017 1:2:3Z Moo                           \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00\n-25 Jan 2017 1:2:3 Z PM            2017-01-25 13:02:03   2017-01-25 13:02:03\n-25 Jan 2017 1:2:3Z PM             2017-01-25 13:02:03   2017-01-25 13:02:03\n-25 Jan 2017 1:2:3 Z PM +03:00     2017-01-25 10:02:03   2017-01-25 10:02:03\n-Jun, 11 Feb 2018 06:40:50 +0300   2000-06-01 00:00:00   2000-06-01 00:00:00\n-Sun 11 Feb 2018 06:40:50 +0300    2018-02-11 03:40:50   2018-02-11 03:40:50\n-Sun, 11 Feb 2018 06:40:50 +0300   2018-02-11 03:40:50   2018-02-11 03:40:50\n+ 0                                 2000-01-01 00:00:00   2000-01-01 00:00:00 \n+ 0000                              2000-01-01 00:00:00   2000-01-01 00:00:00 \n+ 00:00:00                          2000-01-01 00:00:00   2000-01-01 00:00:00 \n+ 01:00:00                          2000-01-01 01:00:00   2000-01-01 01:00:00 \n+ 02/01/17 010203 MSK               2017-01-01 22:02:03   2017-01-01 22:02:03 \n+ 02/01/17 010203 MSK+0100          2017-01-01 21:02:03   2017-01-01 21:02:03 \n+ 02/01/17 010203 UTC+0300          2017-01-01 22:02:03   2017-01-01 22:02:03 \n+ 02/01/17 010203Z                  2017-01-02 01:02:03   2017-01-02 01:02:03 \n+ 02/01/1970 010203Z                1970-01-02 01:02:03   1970-01-02 01:02:03 \n+ 02/01/70 010203Z                  1970-01-02 01:02:03   1970-01-02 01:02:03 \n+ 11 Feb 2018 06:40:50 +0300        2018-02-11 03:40:50   2018-02-11 03:40:50 \n+ 17 Apr 2 1:2:3                    2000-04-17 01:02:03   2000-04-17 01:02:03 \n+ 19700102 01:00:00                 1970-01-02 01:00:00   1970-01-02 01:00:00 \n+ 1970010201:00:00                  2032-06-06 02:03:21   2032-06-06 02:03:21 \n+ 19700102010203                    1970-01-02 01:02:03   1970-01-02 01:02:03 \n+ 19700102010203Z                   1970-01-02 01:02:03   1970-01-02 01:02:03 \n+ 1970/01/02 010203Z                1970-01-02 01:02:03   1970-01-02 01:02:03 \n+ 20                                2000-01-20 00:00:00   2000-01-20 00:00:00 \n+ 201                                              \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00 \n+ 20160101                          2016-01-01 00:00:00   2016-01-01 00:00:00 \n+ 2016-01-01                        2016-01-01 00:00:00   2016-01-01 00:00:00 \n+ 201601-01                         2016-01-01 01:00:00   2016-01-01 01:00:00 \n+ 2016-01-01MSD                     2015-12-31 20:00:00   2015-12-31 20:00:00 \n+ 2016-01-01 MSD                    2015-12-31 20:00:00   2015-12-31 20:00:00 \n+ 201601-01 MSD                     2016-01-01 04:00:00   2016-01-01 04:00:00 \n+ 2016-01-01UTC                     2016-01-01 00:00:00   2016-01-01 00:00:00 \n+ 2016-01-01Z                       2016-01-01 00:00:00   2016-01-01 00:00:00 \n+ 2017                              2017-01-01 00:00:00   2017-01-01 00:00:00 \n+ 2017/01/00                        2017-01-01 00:00:00   2017-01-01 00:00:00 \n+ 2017/01/00 MSD                    2016-12-31 20:00:00   2016-12-31 20:00:00 \n+ 2017/01/00 MSD Jun                2017-05-31 20:00:00   2017-05-31 20:00:00 \n+ 2017/01/01                        2017-01-01 00:00:00   2017-01-01 00:00:00 \n+ 201701 02 010203 UTC+0300         2017-01-01 22:02:03   2017-01-01 22:02:03 \n+ 2017-01-02 03:04:05               2017-01-02 03:04:05   2017-01-02 03:04:05 \n+ 2017-01-0203:04:05                               \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00 \n+ 2017-01-02 03:04:05+0             2017-01-02 03:04:05   2017-01-02 03:04:05 \n+ 2017-01-02 03:04:05+00            2017-01-02 03:04:05   2017-01-02 03:04:05 \n+ 2017-01-02 03:04:05+0000          2017-01-02 03:04:05   2017-01-02 03:04:05 \n+ 2017-01-02 03:04:05 -0100         2017-01-02 04:04:05   2017-01-02 04:04:05 \n+ 2017-01-02 03:04:05+030           2017-01-02 02:34:05   2017-01-02 02:34:05 \n+ 2017-01-02 03:04:05+0300          2017-01-02 00:04:05   2017-01-02 00:04:05 \n+ 2017-01-02 03:04:05+1             2017-01-02 02:04:05   2017-01-02 02:04:05 \n+ 2017-01-02 03:04:05+300           2017-01-02 00:04:05   2017-01-02 00:04:05 \n+ 2017-01-02 03:04:05+900           2017-01-01 18:04:05   2017-01-01 18:04:05 \n+ 2017-01-02 03:04:05GMT            2017-01-02 03:04:05   2017-01-02 03:04:05 \n+ 2017-01-02 03:04:05 MSD           2017-01-01 23:04:05   2017-01-01 23:04:05 \n+ 2017-01-02 03:04:05 MSD Feb       2017-02-01 23:04:05   2017-02-01 23:04:05 \n+ 2017-01-02 03:04:05 MSD Jun       2017-06-01 23:04:05   2017-06-01 23:04:05 \n+ 2017-01-02 03:04:05 MSK           2017-01-02 00:04:05   2017-01-02 00:04:05 \n+ 2017-01-02T03:04:05               2017-01-02 03:04:05   2017-01-02 03:04:05 \n+ 2017-01-02T03:04:05+00            2017-01-02 03:04:05   2017-01-02 03:04:05 \n+ 2017-01-02T03:04:05 -0100         2017-01-02 04:04:05   2017-01-02 04:04:05 \n+ 2017-01-02T03:04:05-0100          2017-01-02 04:04:05   2017-01-02 04:04:05 \n+ 2017-01-02T03:04:05+0100          2017-01-02 02:04:05   2017-01-02 02:04:05 \n+ 2017-01-02T03:04:05Z              2017-01-02 03:04:05   2017-01-02 03:04:05 \n+ 2017-01 03:04:05 MSD Jun          2017-05-31 23:04:05   2017-05-31 23:04:05 \n+ 2017-01 03:04 MSD Jun             2017-05-31 23:04:00   2017-05-31 23:04:00 \n+ 2017/01/31                        2017-01-31 00:00:00   2017-01-31 00:00:00 \n+ 2017/01/32                        0000-00-00 00:00:00   0000-00-00 00:00:00 \n+ 2017-01 MSD Jun                   2017-05-31 20:00:00   2017-05-31 20:00:00 \n+ 201701 MSD Jun                    2017-05-31 20:00:00   2017-05-31 20:00:00 \n+ 2017 25 1:2:3                     0000-00-00 00:00:00   0000-00-00 00:00:00 \n+ 2017 25 Apr 1:2:3                 2017-04-01 01:02:03   2017-04-01 01:02:03 \n+ 2017 Apr 01 11:22:33              2017-04-01 11:22:33   2017-04-01 11:22:33 \n+ 2017 Apr 02 01/02/03 UTC+0300                    \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00 \n+ 2017 Apr 02 010203 UTC+0300       2017-04-01 22:02:03   2017-04-01 22:02:03 \n+ 2017 Apr 02 01:2:3 UTC+0300       2017-04-01 22:02:03   2017-04-01 22:02:03 \n+ 2017 Apr 02 1:02:3                2017-04-02 01:02:03   2017-04-02 01:02:03 \n+ 2017 Apr 02 11:22:33              2017-04-02 11:22:33   2017-04-02 11:22:33 \n+ 2017 Apr 02 1:2:03                2017-04-02 01:02:03   2017-04-02 01:02:03 \n+ 2017 Apr 02 1:22:33               2017-04-02 01:22:33   2017-04-02 01:22:33 \n+ 2017 Apr 02 1:2:3                 2017-04-02 01:02:03   2017-04-02 01:02:03 \n+ 2017 Apr 02 1:2:33                2017-04-02 01:02:33   2017-04-02 01:02:33 \n+ 2017 Apr 02 1:2:3 MSK             2017-04-01 22:02:03   2017-04-01 22:02:03 \n+ 2017 Apr 02 1:2:3 MSK 2017        2017-04-01 22:02:03   2017-04-01 22:02:03 \n+ 2017 Apr 02 1:2:3 MSK 2018        2017-04-01 22:02:03   2017-04-01 22:02:03 \n+ 2017 Apr 02 1:2:3 UTC+0000        2017-04-02 01:02:03   2017-04-02 01:02:03 \n+ 2017 Apr 02 1:2:3 UTC+0300        2017-04-01 22:02:03   2017-04-01 22:02:03 \n+ 2017 Apr 02 1:2:3 UTC+0400        2017-04-01 21:02:03   2017-04-01 21:02:03 \n+ 2017 Apr 2 1:2:3                  2017-04-02 01:02:03   2017-04-02 01:02:03 \n+ 2017 Jan 02 010203 UTC+0300       2017-01-01 22:02:03   2017-01-01 22:02:03 \n+ 25 Apr 2017 01:02:03              2017-04-25 01:02:03   2017-04-25 01:02:03 \n+ 25 Apr 2017 1:2:3                 2017-04-25 01:02:03   2017-04-25 01:02:03 \n+ 25 Jan 2017 1:2:3                 2017-01-25 01:02:03   2017-01-25 01:02:03 \n+ 25 Jan 2017 1:2:3 MSK             2017-01-24 22:02:03   2017-01-24 22:02:03 \n+ 25 Jan 2017 1:2:3 PM              2017-01-25 13:02:03   2017-01-25 13:02:03 \n+ 25 Jan 2017 1:2:3Z                2017-01-25 01:02:03   2017-01-25 01:02:03 \n+ 25 Jan 2017 1:2:3 Z               2017-01-25 01:02:03   2017-01-25 01:02:03 \n+ 25 Jan 2017 1:2:3 Z +0300         2017-01-24 22:02:03   2017-01-24 22:02:03 \n+ 25 Jan 2017 1:2:3 Z+03:00         2017-01-24 22:02:03   2017-01-24 22:02:03 \n+ 25 Jan 2017 1:2:3 Z +0300 OM                     \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00 \n+ 25 Jan 2017 1:2:3 Z +03:00 PM     2017-01-25 10:02:03   2017-01-25 10:02:03 \n+ 25 Jan 2017 1:2:3 Z +0300 PM      2017-01-25 10:02:03   2017-01-25 10:02:03 \n+ 25 Jan 2017 1:2:3 Z+03:00 PM      2017-01-25 10:02:03   2017-01-25 10:02:03 \n+ 25 Jan 2017 1:2:3 Z +03:30 PM     2017-01-25 09:32:03   2017-01-25 09:32:03 \n+ 25 Jan 2017 1:2:3Z Mo                            \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00 \n+ 25 Jan 2017 1:2:3Z Mon            2017-01-25 01:02:03   2017-01-25 01:02:03 \n+ 25 Jan 2017 1:2:3Z Moo                           \u1d3a\u1d41\u1d38\u1d38   0000-00-00 00:00:00 \n+ 25 Jan 2017 1:2:3 Z PM            2017-01-25 13:02:03   2017-01-25 13:02:03 \n+ 25 Jan 2017 1:2:3Z PM             2017-01-25 13:02:03   2017-01-25 13:02:03 \n+ 25 Jan 2017 1:2:3 Z PM +03:00     2017-01-25 10:02:03   2017-01-25 10:02:03 \n+ Jun, 11 Feb 2018 06:40:50 +0300   2000-06-01 00:00:00   2000-06-01 00:00:00 \n+ Sun 11 Feb 2018 06:40:50 +0300    2018-02-11 03:40:50   2018-02-11 03:40:50 \n+ Sun, 11 Feb 2018 06:40:50 +0300   2018-02-11 03:40:50   2018-02-11 03:40:50 \ndiff --git a/tests/queries/0_stateless/00813_parse_date_time_best_effort_more.reference b/tests/queries/0_stateless/00813_parse_date_time_best_effort_more.reference\nindex 921400838d0e..3acae55e8462 100644\n--- a/tests/queries/0_stateless/00813_parse_date_time_best_effort_more.reference\n+++ b/tests/queries/0_stateless/00813_parse_date_time_best_effort_more.reference\n@@ -1,22 +1,22 @@\n-s                                               a                     b\n+ s                                               a                     b\n \n-24.12.2018                    2018-12-24 00:00:00   2018-12-24 00:00:00\n-24-12-2018                    2018-12-24 00:00:00   2018-12-24 00:00:00\n-24.12.18                      2018-12-24 00:00:00   2018-12-24 00:00:00\n-24-12-18                      2018-12-24 00:00:00   2018-12-24 00:00:00\n-24-Dec-18                     2018-12-24 00:00:00   2018-12-24 00:00:00\n-24/DEC/18                     2018-12-24 00:00:00   2018-12-24 00:00:00\n-24/DEC/2018                   2018-12-24 00:00:00   2018-12-24 00:00:00\n-01-OCT-2015                   2015-10-01 00:00:00   2015-10-01 00:00:00\n-24.12.2018                    2018-12-24 00:00:00   2018-12-24 00:00:00\n-24-12-2018                    2018-12-24 00:00:00   2018-12-24 00:00:00\n-24.12.18                      2018-12-24 00:00:00   2018-12-24 00:00:00\n-24-12-18                      2018-12-24 00:00:00   2018-12-24 00:00:00\n-24-Dec-18                     2018-12-24 00:00:00   2018-12-24 00:00:00\n-24/DEC/18                     2018-12-24 00:00:00   2018-12-24 00:00:00\n-24/DEC/2018                   2018-12-24 00:00:00   2018-12-24 00:00:00\n-01-OCT-2015                   2015-10-01 00:00:00   2015-10-01 00:00:00\n-24.12.18 010203               2018-12-24 01:02:03   2018-12-24 01:02:03\n-24.12.18 01:02:03             2018-12-24 01:02:03   2018-12-24 01:02:03\n-24.DEC.18T01:02:03.000+0300   2018-12-23 22:02:03   2018-12-23 22:02:03\n-01-September-2018 11:22       2018-09-01 11:22:00   2018-09-01 11:22:00\n+ 24.12.2018                    2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24-12-2018                    2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24.12.18                      2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24-12-18                      2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24-Dec-18                     2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24/DEC/18                     2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24/DEC/2018                   2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 01-OCT-2015                   2015-10-01 00:00:00   2015-10-01 00:00:00 \n+ 24.12.2018                    2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24-12-2018                    2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24.12.18                      2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24-12-18                      2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24-Dec-18                     2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24/DEC/18                     2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 24/DEC/2018                   2018-12-24 00:00:00   2018-12-24 00:00:00 \n+ 01-OCT-2015                   2015-10-01 00:00:00   2015-10-01 00:00:00 \n+ 24.12.18 010203               2018-12-24 01:02:03   2018-12-24 01:02:03 \n+ 24.12.18 01:02:03             2018-12-24 01:02:03   2018-12-24 01:02:03 \n+ 24.DEC.18T01:02:03.000+0300   2018-12-23 22:02:03   2018-12-23 22:02:03 \n+ 01-September-2018 11:22       2018-09-01 11:22:00   2018-09-01 11:22:00 \ndiff --git a/tests/queries/0_stateless/01293_pretty_max_value_width.reference b/tests/queries/0_stateless/01293_pretty_max_value_width.reference\nnew file mode 100644\nindex 000000000000..9887169f7af7\n--- /dev/null\n+++ b/tests/queries/0_stateless/01293_pretty_max_value_width.reference\n@@ -0,0 +1,114 @@\n+\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx     \u001b[0m \u2503 \u001b[1my  \u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2529\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u0442 \u2502 \u043c\u0438\u0440 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx    \u001b[0m \u2503 \u001b[1my  \u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2529\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m\u2502 \u043c\u0438\u0440 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mx\u001b[0m\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u001b[1my\u001b[0m\u2500\u2500\u2500\u2510\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m\u2502 \u043c\u0438\u0440 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n+ \u001b[1mx\u001b[0m       \u001b[1my\u001b[0m  \n+\n+ \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m  \u043c\u0438\u0440 \n+\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx    \u001b[0m \u2503 \u001b[1my    \u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m\u2502 \u043c\u0438\u0440   \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502 \u043c\u0438\u0440   \u2502 \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m\u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mx\u001b[0m\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u001b[1my\u001b[0m\u2500\u2500\u2500\u2500\u2500\u2510\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m\u2502 \u043c\u0438\u0440   \u2502\n+\u2502 \u043c\u0438\u0440   \u2502 \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m\u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+ \u001b[1mx\u001b[0m       \u001b[1my\u001b[0m    \n+\n+ \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m  \u043c\u0438\u0440   \n+ \u043c\u0438\u0440     \u043f\u0440\u0438\u0432\u0435\u001b[31;1m\u22ef\u001b[0m\n+\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx     \u001b[0m \u2503 \u001b[1my  \u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2529\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u0442 \u2502 \u043c\u0438\u0440 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mx\u001b[0m\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u001b[1my\u001b[0m\u2500\u2500\u2500\u2510\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u0442 \u2502 \u043c\u0438\u0440 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n+ \u001b[1mx\u001b[0m        \u001b[1my\u001b[0m  \n+\n+ \u043f\u0440\u0438\u0432\u0435\u0442   \u043c\u0438\u0440 \n+\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx     \u001b[0m \u2503 \u001b[1my     \u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u0442 \u2502 \u043c\u0438\u0440    \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502 \u043c\u0438\u0440    \u2502 \u043f\u0440\u0438\u0432\u0435\u0442 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mx\u001b[0m\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u001b[1my\u001b[0m\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n+\u2502 \u043f\u0440\u0438\u0432\u0435\u0442 \u2502 \u043c\u0438\u0440    \u2502\n+\u2502 \u043c\u0438\u0440    \u2502 \u043f\u0440\u0438\u0432\u0435\u0442 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+ \u001b[1mx\u001b[0m        \u001b[1my\u001b[0m     \n+\n+ \u043f\u0440\u0438\u0432\u0435\u0442   \u043c\u0438\u0440    \n+ \u043c\u0438\u0440      \u043f\u0440\u0438\u0432\u0435\u0442 \n+\u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx\u001b[0m \u2503 \u001b[1my\u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2529\n+\u2502 \u043f\u001b[31;1m\u22ef\u001b[0m\u2502 \u043c\u001b[31;1m\u22ef\u001b[0m\u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mx\u001b[0m\u2500\u252c\u2500\u001b[1my\u001b[0m\u2500\u2510\n+\u2502 \u043f\u001b[31;1m\u22ef\u001b[0m\u2502 \u043c\u001b[31;1m\u22ef\u001b[0m\u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+ \u001b[1mx\u001b[0m   \u001b[1my\u001b[0m\n+\n+ \u043f\u001b[31;1m\u22ef\u001b[0m  \u043c\u001b[31;1m\u22ef\u001b[0m\n+\u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx\u001b[0m \u2503 \u001b[1my\u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2529\n+\u2502 \u043f\u001b[31;1m\u22ef\u001b[0m\u2502 \u043c\u001b[31;1m\u22ef\u001b[0m\u2502\n+\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n+\u2502 \u043c\u001b[31;1m\u22ef\u001b[0m\u2502 \u043f\u001b[31;1m\u22ef\u001b[0m\u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mx\u001b[0m\u2500\u252c\u2500\u001b[1my\u001b[0m\u2500\u2510\n+\u2502 \u043f\u001b[31;1m\u22ef\u001b[0m\u2502 \u043c\u001b[31;1m\u22ef\u001b[0m\u2502\n+\u2502 \u043c\u001b[31;1m\u22ef\u001b[0m\u2502 \u043f\u001b[31;1m\u22ef\u001b[0m\u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+ \u001b[1mx\u001b[0m   \u001b[1my\u001b[0m\n+\n+ \u043f\u001b[31;1m\u22ef\u001b[0m  \u043c\u001b[31;1m\u22ef\u001b[0m\n+ \u043c\u001b[31;1m\u22ef\u001b[0m  \u043f\u001b[31;1m\u22ef\u001b[0m\n+\u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx\u001b[0m \u2503 \u001b[1my\u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2529\n+\u2502 \u001b[31;1m\u22ef\u001b[0m \u2502 \u001b[31;1m\u22ef\u001b[0m \u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mx\u001b[0m\u2500\u252c\u2500\u001b[1my\u001b[0m\u2500\u2510\n+\u2502 \u001b[31;1m\u22ef\u001b[0m \u2502 \u001b[31;1m\u22ef\u001b[0m \u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+ \u001b[1mx\u001b[0m   \u001b[1my\u001b[0m\n+\n+ \u001b[31;1m\u22ef\u001b[0m   \u001b[31;1m\u22ef\u001b[0m \n+\u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2513\n+\u2503 \u001b[1mx\u001b[0m \u2503 \u001b[1my\u001b[0m \u2503\n+\u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2529\n+\u2502 \u001b[31;1m\u22ef\u001b[0m \u2502 \u001b[31;1m\u22ef\u001b[0m \u2502\n+\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n+\u2502 \u001b[31;1m\u22ef\u001b[0m \u2502 \u001b[31;1m\u22ef\u001b[0m \u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+\u250c\u2500\u001b[1mx\u001b[0m\u2500\u252c\u2500\u001b[1my\u001b[0m\u2500\u2510\n+\u2502 \u001b[31;1m\u22ef\u001b[0m \u2502 \u001b[31;1m\u22ef\u001b[0m \u2502\n+\u2502 \u001b[31;1m\u22ef\u001b[0m \u2502 \u001b[31;1m\u22ef\u001b[0m \u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n+ \u001b[1mx\u001b[0m   \u001b[1my\u001b[0m\n+\n+ \u001b[31;1m\u22ef\u001b[0m   \u001b[31;1m\u22ef\u001b[0m \n+ \u001b[31;1m\u22ef\u001b[0m   \u001b[31;1m\u22ef\u001b[0m \n+\u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2513\n+\u2503 x \u2503 y \u2503\n+\u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2529\n+\u2502 \u22ef \u2502 \u22ef \u2502\n+\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\ndiff --git a/tests/queries/0_stateless/01293_pretty_max_value_width.sql b/tests/queries/0_stateless/01293_pretty_max_value_width.sql\nnew file mode 100644\nindex 000000000000..992aec06f0a2\n--- /dev/null\n+++ b/tests/queries/0_stateless/01293_pretty_max_value_width.sql\n@@ -0,0 +1,43 @@\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT Pretty;\n+\n+SET output_format_pretty_max_value_width = 5;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT Pretty;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT PrettyCompact;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT PrettySpace;\n+\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT Pretty;\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT PrettyCompact;\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT PrettySpace;\n+\n+SET output_format_pretty_max_value_width = 6;\n+\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT Pretty;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT PrettyCompact;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT PrettySpace;\n+\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT Pretty;\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT PrettyCompact;\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT PrettySpace;\n+\n+SET output_format_pretty_max_value_width = 1;\n+\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT Pretty;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT PrettyCompact;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT PrettySpace;\n+\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT Pretty;\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT PrettyCompact;\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT PrettySpace;\n+\n+SET output_format_pretty_max_value_width = 0;\n+\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT Pretty;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT PrettyCompact;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT PrettySpace;\n+\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT Pretty;\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT PrettyCompact;\n+SELECT * FROM VALUES('x String, y String', ('\u043f\u0440\u0438\u0432\u0435\u0442', '\u043c\u0438\u0440'), ('\u043c\u0438\u0440', '\u043f\u0440\u0438\u0432\u0435\u0442')) FORMAT PrettySpace;\n+\n+SET output_format_pretty_color = 0;\n+SELECT '\u043f\u0440\u0438\u0432\u0435\u0442' AS x, '\u043c\u0438\u0440' AS y FORMAT Pretty;\n",
  "problem_statement": "Cannot quit from clickhouse-client with Ctrl+C.\n```\r\nmilovidov-desktop :) SELECT arrayJoin(arrayMap(y -> [arrayMap(x -> (cos(x / 90. * pi()) * y, sin(x / 90. * pi()) * y), range(180))], arraySlice(range(35000), 2, 35000)))\r\n\r\nSELECT arrayJoin(arrayMap(y -> [arrayMap(x -> (cos((x / 90.) * pi()) * y, sin((x / 90.) * pi()) * y), range(180))], arraySlice(range(35000), 2, 35000)))\r\n\r\n^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C\r\n```\n",
  "hints_text": "https://github.com/ClickHouse/ClickHouse/issues/9473\nI'll close this one as a duplicate.",
  "created_at": "2020-05-31T22:13:26Z"
}