{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 10640,
  "instance_id": "ClickHouse__ClickHouse-10640",
  "issue_numbers": [
    "10636"
  ],
  "base_commit": "615104c8202adc2b5b15977b65d426ce0b9f57ed",
  "patch": "diff --git a/programs/server/HTTPHandler.cpp b/programs/server/HTTPHandler.cpp\nindex 1a579e2bff3e..6c01a28c5a59 100644\n--- a/programs/server/HTTPHandler.cpp\n+++ b/programs/server/HTTPHandler.cpp\n@@ -58,6 +58,7 @@ namespace ErrorCodes\n     extern const int CANNOT_PARSE_DATE;\n     extern const int CANNOT_PARSE_DATETIME;\n     extern const int CANNOT_PARSE_NUMBER;\n+    extern const int CANNOT_PARSE_INPUT_ASSERTION_FAILED;\n     extern const int CANNOT_OPEN_FILE;\n     extern const int CANNOT_COMPILE_REGEXP;\n \n@@ -105,25 +106,27 @@ static Poco::Net::HTTPResponse::HTTPStatus exceptionCodeToHTTPStatus(int excepti\n     using namespace Poco::Net;\n \n     if (exception_code == ErrorCodes::REQUIRED_PASSWORD)\n+    {\n         return HTTPResponse::HTTP_UNAUTHORIZED;\n+    }\n     else if (exception_code == ErrorCodes::CANNOT_PARSE_TEXT ||\n              exception_code == ErrorCodes::CANNOT_PARSE_ESCAPE_SEQUENCE ||\n              exception_code == ErrorCodes::CANNOT_PARSE_QUOTED_STRING ||\n              exception_code == ErrorCodes::CANNOT_PARSE_DATE ||\n              exception_code == ErrorCodes::CANNOT_PARSE_DATETIME ||\n              exception_code == ErrorCodes::CANNOT_PARSE_NUMBER ||\n-\n+             exception_code == ErrorCodes::CANNOT_PARSE_INPUT_ASSERTION_FAILED ||\n              exception_code == ErrorCodes::UNKNOWN_ELEMENT_IN_AST ||\n              exception_code == ErrorCodes::UNKNOWN_TYPE_OF_AST_NODE ||\n              exception_code == ErrorCodes::TOO_DEEP_AST ||\n              exception_code == ErrorCodes::TOO_BIG_AST ||\n              exception_code == ErrorCodes::UNEXPECTED_AST_STRUCTURE ||\n-\n              exception_code == ErrorCodes::SYNTAX_ERROR ||\n-\n              exception_code == ErrorCodes::INCORRECT_DATA ||\n              exception_code == ErrorCodes::TYPE_MISMATCH)\n+    {\n         return HTTPResponse::HTTP_BAD_REQUEST;\n+    }\n     else if (exception_code == ErrorCodes::UNKNOWN_TABLE ||\n              exception_code == ErrorCodes::UNKNOWN_FUNCTION ||\n              exception_code == ErrorCodes::UNKNOWN_IDENTIFIER ||\n@@ -135,18 +138,27 @@ static Poco::Net::HTTPResponse::HTTPStatus exceptionCodeToHTTPStatus(int excepti\n              exception_code == ErrorCodes::UNKNOWN_AGGREGATE_FUNCTION ||\n              exception_code == ErrorCodes::UNKNOWN_FORMAT ||\n              exception_code == ErrorCodes::UNKNOWN_DATABASE_ENGINE ||\n-\n              exception_code == ErrorCodes::UNKNOWN_TYPE_OF_QUERY)\n+    {\n         return HTTPResponse::HTTP_NOT_FOUND;\n+    }\n     else if (exception_code == ErrorCodes::QUERY_IS_TOO_LARGE)\n+    {\n         return HTTPResponse::HTTP_REQUESTENTITYTOOLARGE;\n+    }\n     else if (exception_code == ErrorCodes::NOT_IMPLEMENTED)\n+    {\n         return HTTPResponse::HTTP_NOT_IMPLEMENTED;\n+    }\n     else if (exception_code == ErrorCodes::SOCKET_TIMEOUT ||\n              exception_code == ErrorCodes::CANNOT_OPEN_FILE)\n+    {\n         return HTTPResponse::HTTP_SERVICE_UNAVAILABLE;\n+    }\n     else if (exception_code == ErrorCodes::HTTP_LENGTH_REQUIRED)\n+    {\n         return HTTPResponse::HTTP_LENGTH_REQUIRED;\n+    }\n \n     return HTTPResponse::HTTP_INTERNAL_SERVER_ERROR;\n }\ndiff --git a/src/Common/Exception.h b/src/Common/Exception.h\nindex 2726c3f2eae3..de63f35f4631 100644\n--- a/src/Common/Exception.h\n+++ b/src/Common/Exception.h\n@@ -14,10 +14,6 @@ namespace Poco { class Logger; }\n namespace DB\n {\n \n-namespace ErrorCodes\n-{\n-}\n-\n class Exception : public Poco::Exception\n {\n public:\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01271_http_code_parse_error.reference b/tests/queries/0_stateless/01271_http_code_parse_error.reference\nnew file mode 100644\nindex 000000000000..4a84465139fd\n--- /dev/null\n+++ b/tests/queries/0_stateless/01271_http_code_parse_error.reference\n@@ -0,0 +1,1 @@\n+< HTTP/1.1 400 Bad Request\r\ndiff --git a/tests/queries/0_stateless/01271_http_code_parse_error.sh b/tests/queries/0_stateless/01271_http_code_parse_error.sh\nnew file mode 100755\nindex 000000000000..63355ef8e36f\n--- /dev/null\n+++ b/tests/queries/0_stateless/01271_http_code_parse_error.sh\n@@ -0,0 +1,11 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+. $CURDIR/../shell_config.sh\n+\n+${CLICKHOUSE_CLIENT} --query \"DROP TABLE IF EXISTS test\"\n+${CLICKHOUSE_CLIENT} --query \"CREATE TABLE test (f1 String, f2 String) ENGINE = Memory\"\n+\n+${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL}\" --data-binary 'insert into test (f1, f2) format TSV 1' 2>&1 | grep -F '< HTTP/'\n+\n+${CLICKHOUSE_CLIENT} --query \"DROP TABLE test\"\n",
  "problem_statement": "Improper HTTP status code on data parsing errors\nClickHouse returns 500 \"Internal Server Error\" on attempt to insert invalid data. Below the example:\r\n\r\n```\r\n# echo -e '1' | http  --verify no -v POST https://127.0.0.1:8443 query=='insert into test (f1, f2) format TSV'\r\nPOST /?query=insert+into+test+%28f1%2C+f2%29+format+TSV HTTP/1.1\r\nAccept: application/json, */*;q=0.5\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 2\r\nContent-Type: application/json\r\nHost: 127.0.0.1:8443\r\nUser-Agent: HTTPie/2.1.0\r\n\r\n1\r\n\r\nHTTP/1.1 500 Internal Server Error\r\nConnection: Keep-Alive\r\nContent-Type: text/tab-separated-values; charset=UTF-8\r\nDate: Sat, 02 May 2020 09:52:08 GMT\r\nKeep-Alive: timeout=3\r\nTransfer-Encoding: chunked\r\nX-ClickHouse-Exception-Code: 27\r\nX-ClickHouse-Format: TabSeparated\r\nX-ClickHouse-Query-Id: 32de9567-4be9-4af2-8860-e76d12e65b2c\r\nX-ClickHouse-Server-Display-Name: sas-72adix65lvucxtf4.db.yandex.net\r\nX-ClickHouse-Summary: {\"read_rows\":\"0\",\"read_bytes\":\"0\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\nX-ClickHouse-Timezone: Europe/Moscow\r\n\r\nCode: 27, e.displayText() = DB::Exception: Cannot parse input: expected '\\t' before: '\\n': (at row 1)\r\n\r\nRow 1:\r\nColumn 0,   name: f1, type: String, parsed text: \"1\"\r\nERROR: Line feed found where tab is expected. It's like your file has less columns than expected.\r\nAnd if your file have right number of columns, maybe it have unescaped backslash in value before tab, which cause tab has escaped.\r\n\r\n (version 20.4.1.3079 (official build))\r\n```\r\n\r\nInvalid data is a client-side error. So the code 400 or some other 4xx code is expected.\n",
  "hints_text": "",
  "created_at": "2020-05-03T20:52:59Z",
  "modified_files": [
    "programs/server/HTTPHandler.cpp",
    "src/Common/Exception.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01271_http_code_parse_error.reference",
    "b/tests/queries/0_stateless/01271_http_code_parse_error.sh"
  ]
}