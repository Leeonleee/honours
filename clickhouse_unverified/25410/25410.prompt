You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error: Unexpected dictionary type for DataTypeLowCardinality: IntervalMinute
https://clickhouse-test-reports.s3.yandex.net/21661/e116e75d2cb52c09ca31b5851e22bf100e36c07b/fuzzer_debug/report.html#fail1
```
2021.03.14 05:09:35.683119 [ 92 ] {278806d3-c9df-48c8-bcdb-67aecc52aeed} <Debug> executeQuery: (from [::1]:47512, using production parser) SELECT toIntervalMinute(NULL, toIntervalMinute(toIntervalMinute(NULL, toIntervalMinute(lc)), NULL)), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN r USING (lc)
2021.03.14 05:09:35.689018 [ 92 ] {278806d3-c9df-48c8-bcdb-67aecc52aeed} <Trace> ContextAccess (default): Access granted: SELECT(lc) ON default.r
2021.03.14 05:09:35.689509 [ 92 ] {278806d3-c9df-48c8-bcdb-67aecc52aeed} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2021.03.14 05:09:35.690260 [ 92 ] {278806d3-c9df-48c8-bcdb-67aecc52aeed} <Debug> HashJoin: Right sample block: r.lc String String(size = 0)
2021.03.14 05:09:35.692580 [ 92 ] {278806d3-c9df-48c8-bcdb-67aecc52aeed} <Trace> ContextAccess (default): Access granted: SELECT(lc) ON default.l_lc
2021.03.14 05:09:35.693062 [ 92 ] {278806d3-c9df-48c8-bcdb-67aecc52aeed} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2021.03.14 05:09:35.694166 [ 92 ] {278806d3-c9df-48c8-bcdb-67aecc52aeed} <Fatal> : Logical error: 'Unexpected dictionary type for DataTypeLowCardinality: IntervalMinute'.
2021.03.14 05:09:35.694981 [ 87 ] {} <Trace> BaseDaemon: Received signal 6
2021.03.14 05:09:35.695540 [ 217 ] {} <Fatal> BaseDaemon: ########################################
2021.03.14 05:09:35.695828 [ 217 ] {} <Fatal> BaseDaemon: (version 21.4.1.6245, build id: 05C30FB3F93FAF06BC887F3BD6E7724DC6C3E415) (from thread 92) (query_id: 278806d3-c9df-48c8-bcdb-67aecc52aeed) Received signal Aborted (6)
2021.03.14 05:09:35.696058 [ 217 ] {} <Fatal> BaseDaemon: 
2021.03.14 05:09:35.696267 [ 217 ] {} <Fatal> BaseDaemon: Stack trace: 0x7fa95541b18b 0x7fa9553fa859 0x11928fc6 0x11929083 0x1a770b9d 0x1a76ea5f 0x13dce38d 0x1aa8d0a4 0x1aa8c716 0x1c11aafc 0x1c1dd95c 0x1ac20d93 0x1ac14fdf 0x1ac0d51c 0x1ac0afd6 0x1b1c1a7a 0x1b1c21ed 0x1b3e65b1 0x1b3e4a7a 0x1bdb7522 0x1bdc3b38 0x1f87f3ec 0x1f87fbf0 0x1f9bc393 0x1f9b921d 0x1f9b80a8 0x7fa9555d0609 0x7fa9554f7293
2021.03.14 05:09:35.696732 [ 217 ] {} <Fatal> BaseDaemon: 4. raise @ 0x4618b in /usr/lib/x86_64-linux-gnu/libc-2.31.so
2021.03.14 05:09:35.696883 [ 217 ] {} <Fatal> BaseDaemon: 5. abort @ 0x25859 in /usr/lib/x86_64-linux-gnu/libc-2.31.so
2021.03.14 05:09:35.822557 [ 217 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:50: DB::handle_error_code(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x11928fc6 in /workspace/clickhouse
2021.03.14 05:09:35.935152 [ 217 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:57: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x11929083 in /workspace/clickhouse
2021.03.14 05:09:35.966060 [ 138 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 2.26 TiB.
2021.03.14 05:09:35.979034 [ 138 ] {} <Trace> system.text_log (62596e15-6853-4dd9-8aeb-205807faed23): Renaming temporary part tmp_insert_202103_329_329_0 to 202103_329_329_0.
2021.03.14 05:09:36.171923 [ 217 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/DataTypes/DataTypeLowCardinality.cpp:884: COW<DB::IColumn>::mutable_ptr<DB::IColumnUnique> DB::DataTypeLowCardinality::createColumnUniqueImpl<DB::DataTypeLowCardinality::createColumnUnique(DB::IDataType const&)::$_3>(DB::IDataType const&, DB::DataTypeLowCardinality::createColumnUnique(DB::IDataType const&)::$_3 const&) @ 0x1a770b9d in /workspace/clickhouse
2021.03.14 05:09:36.404150 [ 217 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/DataTypes/DataTypeLowCardinality.cpp:0: DB::DataTypeLowCardinality::createColumnUnique(DB::IDataType const&) @ 0x1a76ea5f in /workspace/clickhouse
2021.03.14 05:09:36.768205 [ 217 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Functions/IFunction.cpp:420: DB::ExecutableFunctionAdaptor::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x13dce38d in /workspace/clickhouse
2021.03.14 05:09:37.253892 [ 217 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../src/Interpreters/ExpressionActions.cpp:333: DB::executeAction(DB::ExpressionActions::Action const&, DB::(anonymous namespace)::ExecutionContext&, bool) @ 0x1aa8d0a4 in /workspace/clickhouse
2021.03.14 05:09:37.681840 [ 217 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../src/Interpreters/ExpressionActions.cpp:449: DB::ExpressionActions::execute(DB::Block&, unsigned long&, bool) const @ 0x1aa8c716 in /workspace/clickhouse
2021.03.14 05:09:37.854810 [ 217 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/ExpressionTransform.cpp:9: DB::ExpressionTransform::transformHeader(DB::Block, std::__1::shared_ptr<DB::ExpressionActions> const&) @ 0x1c11aafc in /workspace/clickhouse
2021.03.14 05:09:38.114295 [ 217 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../src/Processors/QueryPlan/ExpressionStep.cpp:46: DB::ExpressionStep::ExpressionStep(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG>) @ 0x1c1dd95c in /workspace/clickhouse
2021.03.14 05:09:39.367728 [ 217 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068: std::__1::__unique_if<DB::ExpressionStep>::__unique_single std::__1::make_unique<DB::ExpressionStep, DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&>(DB::DataStream const&, std::__1::shared_ptr<DB::ActionsDAG> const&) @ 0x1ac20d93 in /workspace/clickhouse
2021.03.14 05:09:40.481949 [ 217 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1947: DB::InterpreterSelectQuery::executeExpression(DB::QueryPlan&, std::__1::shared_ptr<DB::ActionsDAG> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1ac14fdf in /workspace/clickhouse
2021.03.14 05:09:41.592043 [ 217 ] {} <Fatal> BaseDaemon: 17. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1115: DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x1ac0d51c in /workspace/clickhouse
2021.03.14 05:09:42.730691 [ 217 ] {} <Fatal> BaseDaemon: 18. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:541: DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x1ac0afd6 in /workspace/clickhouse
2021.03.14 05:09:43.228549 [ 217 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:243: DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x1b1c1a7a in /workspace/clickhouse
2021.03.14 05:09:43.738942 [ 217 ] {} <Fatal> BaseDaemon: 20. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:297: DB::InterpreterSelectWithUnionQuery::execute() @ 0x1b1c21ed in /workspace/clickhouse
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
