You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Analyzer: Bad cast from type DB::FunctionNode to DB::ColumnNode. (LOGICAL_ERROR)
Analyzer found this:
```
SELECT arrayFilter(x -> notEmpty(concat(x, 'hello')), [''])
FROM system.one
ARRAY JOIN
    [0] AS elem,
    arrayMap(x -> concat(x, ignore(ignore(toLowCardinality('03147_parquet_memory_tracking.parquet'), 37, 37, toUInt128(37), 37, 37, toLowCardinality(37), 37), 8, ignore(ignore(1., 36, 8, 8)), *), 'hello'), ['']) AS unused
WHERE NOT ignore(elem)
GROUP BY
    sum(ignore(ignore(ignore(1., 1, 36, 8, 8), ignore(52, 37, 37, '03147_parquet_memory_tracking.parquet', 37, 37, toUInt256(37), 37, 37, toNullable(37), 37, 37), 1., 1, 36, 8, 8), emptyArrayToSingle(arrayMap(x -> toString(x), arrayMap(x -> nullIf(x, 2), arrayJoin([[1]])))))) IGNORE NULLS,
    modulo(toLowCardinality('03147_parquet_memory_tracking.parquet'), number, toLowCardinality(3))

Query id: 912eb23a-8a1e-40cb-91db-3bd74113d1f9


Elapsed: 0.002 sec. 

Received exception from server (version 24.5.1):
Code: 49. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::ConstantNode to DB::ColumnNode. (LOGICAL_ERROR)
```

Simplified query that fails with a slightly different error (may or may not be the same root cause):
```
SELECT 1
FROM system.one
ARRAY JOIN arrayMap(x -> ignore(*), [])

Query id: d3c27a87-cc8f-4e8c-a99b-8dfc5382a960


Elapsed: 0.001 sec. 

Received exception from server (version 24.5.1):
Code: 49. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::FunctionNode to DB::ColumnNode. (LOGICAL_ERROR)
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
