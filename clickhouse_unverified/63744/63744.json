{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 63744,
  "instance_id": "ClickHouse__ClickHouse-63744",
  "issue_numbers": [
    "63640"
  ],
  "base_commit": "03b47ddcbdf84f5af39775f52051352e17fe26f5",
  "patch": "diff --git a/src/Analyzer/Passes/QueryAnalysisPass.cpp b/src/Analyzer/Passes/QueryAnalysisPass.cpp\nindex e20ff4ab9097..d18823017050 100644\n--- a/src/Analyzer/Passes/QueryAnalysisPass.cpp\n+++ b/src/Analyzer/Passes/QueryAnalysisPass.cpp\n@@ -4589,7 +4589,7 @@ QueryAnalyzer::QueryTreeNodesWithNames QueryAnalyzer::resolveUnqualifiedMatcher(\n \n     for (auto & table_expression : table_expressions_stack)\n     {\n-        bool table_expression_in_resolve_process = scope.table_expressions_in_resolve_process.contains(table_expression.get());\n+        bool table_expression_in_resolve_process = nearest_query_scope->table_expressions_in_resolve_process.contains(table_expression.get());\n \n         if (auto * array_join_node = table_expression->as<ArrayJoinNode>())\n         {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02374_analyzer_array_join.reference b/tests/queries/0_stateless/02374_analyzer_array_join.reference\nindex 28859f715b37..6dd384c7d9cc 100644\n--- a/tests/queries/0_stateless/02374_analyzer_array_join.reference\n+++ b/tests/queries/0_stateless/02374_analyzer_array_join.reference\n@@ -108,3 +108,15 @@ ARRAY JOIN value_array_array_inner_element AS value_array_array_inner_inner_elem\n 0\tValue\t[[1,2,3],[4,5,6]]\t[4,5,6]\t[4,5,6]\t4\n 0\tValue\t[[1,2,3],[4,5,6]]\t[4,5,6]\t[4,5,6]\t5\n 0\tValue\t[[1,2,3],[4,5,6]]\t[4,5,6]\t[4,5,6]\t6\n+SELECT '--';\n+--\n+SELECT 1 FROM system.one ARRAY JOIN arrayMap(x -> ignore(*), []);\n+SELECT arrayFilter(x -> notEmpty(concat(x, 'hello')), [''])\n+FROM system.one\n+ARRAY JOIN\n+    [0] AS elem,\n+    arrayMap(x -> concat(x, ignore(ignore(toLowCardinality('03147_parquet_memory_tracking.parquet'), 37, 37, toUInt128(37), 37, 37, toLowCardinality(37), 37), 8, ignore(ignore(1., 36, 8, 8)), *), 'hello'), ['']) AS unused\n+WHERE NOT ignore(elem)\n+GROUP BY\n+    sum(ignore(ignore(ignore(1., 1, 36, 8, 8), ignore(52, 37, 37, '03147_parquet_memory_tracking.parquet', 37, 37, toUInt256(37), 37, 37, toNullable(37), 37, 37), 1., 1, 36, 8, 8), emptyArrayToSingle(arrayMap(x -> toString(x), arrayMap(x -> nullIf(x, 2), arrayJoin([[1]])))))) IGNORE NULLS,\n+    modulo(toLowCardinality('03147_parquet_memory_tracking.parquet'), number, toLowCardinality(3)); -- { serverError UNKNOWN_IDENTIFIER }\ndiff --git a/tests/queries/0_stateless/02374_analyzer_array_join.sql b/tests/queries/0_stateless/02374_analyzer_array_join.sql\nindex 8ebfdef349c8..bc4bb6616c16 100644\n--- a/tests/queries/0_stateless/02374_analyzer_array_join.sql\n+++ b/tests/queries/0_stateless/02374_analyzer_array_join.sql\n@@ -65,6 +65,18 @@ SELECT id, value, value_array_array, value_array_array_inner_element, value_arra\n FROM test_table ARRAY JOIN value_array_array AS value_array_array_inner_element\n ARRAY JOIN value_array_array_inner_element AS value_array_array_inner_inner_element;\n \n+SELECT '--';\n+SELECT 1 FROM system.one ARRAY JOIN arrayMap(x -> ignore(*), []);\n+SELECT arrayFilter(x -> notEmpty(concat(x, 'hello')), [''])\n+FROM system.one\n+ARRAY JOIN\n+    [0] AS elem,\n+    arrayMap(x -> concat(x, ignore(ignore(toLowCardinality('03147_parquet_memory_tracking.parquet'), 37, 37, toUInt128(37), 37, 37, toLowCardinality(37), 37), 8, ignore(ignore(1., 36, 8, 8)), *), 'hello'), ['']) AS unused\n+WHERE NOT ignore(elem)\n+GROUP BY\n+    sum(ignore(ignore(ignore(1., 1, 36, 8, 8), ignore(52, 37, 37, '03147_parquet_memory_tracking.parquet', 37, 37, toUInt256(37), 37, 37, toNullable(37), 37, 37), 1., 1, 36, 8, 8), emptyArrayToSingle(arrayMap(x -> toString(x), arrayMap(x -> nullIf(x, 2), arrayJoin([[1]])))))) IGNORE NULLS,\n+    modulo(toLowCardinality('03147_parquet_memory_tracking.parquet'), number, toLowCardinality(3)); -- { serverError UNKNOWN_IDENTIFIER }\n+\n -- { echoOff }\n \n DROP TABLE test_table;\n",
  "problem_statement": "Analyzer: Bad cast from type DB::FunctionNode to DB::ColumnNode. (LOGICAL_ERROR)\nAnalyzer found this:\r\n```\r\nSELECT arrayFilter(x -> notEmpty(concat(x, 'hello')), [''])\r\nFROM system.one\r\nARRAY JOIN\r\n    [0] AS elem,\r\n    arrayMap(x -> concat(x, ignore(ignore(toLowCardinality('03147_parquet_memory_tracking.parquet'), 37, 37, toUInt128(37), 37, 37, toLowCardinality(37), 37), 8, ignore(ignore(1., 36, 8, 8)), *), 'hello'), ['']) AS unused\r\nWHERE NOT ignore(elem)\r\nGROUP BY\r\n    sum(ignore(ignore(ignore(1., 1, 36, 8, 8), ignore(52, 37, 37, '03147_parquet_memory_tracking.parquet', 37, 37, toUInt256(37), 37, 37, toNullable(37), 37, 37), 1., 1, 36, 8, 8), emptyArrayToSingle(arrayMap(x -> toString(x), arrayMap(x -> nullIf(x, 2), arrayJoin([[1]])))))) IGNORE NULLS,\r\n    modulo(toLowCardinality('03147_parquet_memory_tracking.parquet'), number, toLowCardinality(3))\r\n\r\nQuery id: 912eb23a-8a1e-40cb-91db-3bd74113d1f9\r\n\r\n\r\nElapsed: 0.002 sec. \r\n\r\nReceived exception from server (version 24.5.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::ConstantNode to DB::ColumnNode. (LOGICAL_ERROR)\r\n```\r\n\r\nSimplified query that fails with a slightly different error (may or may not be the same root cause):\r\n```\r\nSELECT 1\r\nFROM system.one\r\nARRAY JOIN arrayMap(x -> ignore(*), [])\r\n\r\nQuery id: d3c27a87-cc8f-4e8c-a99b-8dfc5382a960\r\n\r\n\r\nElapsed: 0.001 sec. \r\n\r\nReceived exception from server (version 24.5.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::FunctionNode to DB::ColumnNode. (LOGICAL_ERROR)\r\n```\n",
  "hints_text": "",
  "created_at": "2024-05-14T09:55:20Z",
  "modified_files": [
    "src/Analyzer/Passes/QueryAnalysisPass.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02374_analyzer_array_join.reference",
    "tests/queries/0_stateless/02374_analyzer_array_join.sql"
  ]
}