{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 11182,
  "instance_id": "ClickHouse__ClickHouse-11182",
  "issue_numbers": [
    "11178"
  ],
  "base_commit": "39feb4f0d43f61331c88a4cb95e24ecf3fdf527a",
  "patch": "diff --git a/programs/CMakeLists.txt b/programs/CMakeLists.txt\nindex 657426973331..baf8270d1bfb 100644\n--- a/programs/CMakeLists.txt\n+++ b/programs/CMakeLists.txt\n@@ -207,7 +207,7 @@ if (TARGET clickhouse-server AND TARGET copy-headers)\n endif ()\n \n if (ENABLE_TESTS AND USE_GTEST)\n-    set (CLICKHOUSE_ALL_TESTS_TARGETS local_date_time_comparison unit_tests_libcommon unit_tests_dbms hashing_write_buffer hashing_read_buffer in_join_subqueries_preprocessor expression_analyzer)\n+    set (CLICKHOUSE_ALL_TESTS_TARGETS local_date_time_comparison unit_tests_libcommon unit_tests_dbms hashing_write_buffer hashing_read_buffer in_join_subqueries_preprocessor)\n     add_custom_target (clickhouse-tests ALL DEPENDS ${CLICKHOUSE_ALL_TESTS_TARGETS})\n     add_dependencies(clickhouse-bundle clickhouse-tests)\n endif()\n",
  "test_patch": "diff --git a/src/Interpreters/tests/CMakeLists.txt b/src/Interpreters/tests/CMakeLists.txt\nindex 26ebf007e6c7..19d302d2b30d 100644\n--- a/src/Interpreters/tests/CMakeLists.txt\n+++ b/src/Interpreters/tests/CMakeLists.txt\n@@ -51,10 +51,6 @@ add_executable (in_join_subqueries_preprocessor in_join_subqueries_preprocessor.\n target_link_libraries (in_join_subqueries_preprocessor PRIVATE dbms clickhouse_parsers)\n add_check(in_join_subqueries_preprocessor)\n \n-add_executable (expression_analyzer expression_analyzer.cpp)\n-target_link_libraries (expression_analyzer PRIVATE dbms clickhouse_storages_system clickhouse_parsers clickhouse_common_io)\n-add_check(expression_analyzer)\n-\n add_executable (users users.cpp)\n target_link_libraries (users PRIVATE dbms clickhouse_common_config)\n \ndiff --git a/src/Interpreters/tests/expression_analyzer.cpp b/src/Interpreters/tests/expression_analyzer.cpp\ndeleted file mode 100644\nindex 987b5c763e6a..000000000000\n--- a/src/Interpreters/tests/expression_analyzer.cpp\n+++ /dev/null\n@@ -1,128 +0,0 @@\n-#include <DataTypes/DataTypesNumber.h>\n-\n-#include <Storages/System/StorageSystemOne.h>\n-#include <Storages/System/StorageSystemNumbers.h>\n-#include <Databases/DatabaseMemory.h>\n-\n-#include <Parsers/ParserSelectQuery.h>\n-#include <Parsers/parseQuery.h>\n-\n-#include <Interpreters/Context.h>\n-#include <Interpreters/SyntaxAnalyzer.h>\n-\n-#include <IO/WriteBufferFromFileDescriptor.h>\n-#include <IO/ReadBufferFromFileDescriptor.h>\n-\n-#include <vector>\n-#include <unordered_map>\n-#include <iostream>\n-\n-\n-using namespace DB;\n-\n-namespace DB\n-{\n-    namespace ErrorCodes\n-    {\n-        extern const int SYNTAX_ERROR;\n-    }\n-}\n-\n-struct TestEntry\n-{\n-    String query;\n-    std::unordered_map<String, String> expected_aliases; /// alias -> AST.getID()\n-    NamesAndTypesList source_columns = {};\n-\n-    bool check(const Context & context)\n-    {\n-        ASTPtr ast = parse(query);\n-\n-        auto res = SyntaxAnalyzer(context).analyze(ast, source_columns);\n-        return checkAliases(*res);\n-    }\n-\n-private:\n-    bool checkAliases(const SyntaxAnalyzerResult & res)\n-    {\n-        for (const auto & alias : res.aliases)\n-        {\n-            const String & alias_name = alias.first;\n-            if (expected_aliases.count(alias_name) == 0 ||\n-                expected_aliases[alias_name] != alias.second->getID())\n-            {\n-                std::cout << \"unexpected alias: \" << alias_name << ' ' << alias.second->getID() << std::endl;\n-                return false;\n-            }\n-            else\n-                expected_aliases.erase(alias_name);\n-        }\n-\n-        if (!expected_aliases.empty())\n-        {\n-            std::cout << \"missing aliases: \" << expected_aliases.size() << std::endl;\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    static ASTPtr parse(const std::string & query)\n-    {\n-        ParserSelectQuery parser;\n-        std::string message;\n-        const auto * text = query.data();\n-        if (ASTPtr ast = tryParseQuery(parser, text, text + query.size(), message, false, \"\", false, 0, 0))\n-            return ast;\n-        throw Exception(message, ErrorCodes::SYNTAX_ERROR);\n-    }\n-};\n-\n-\n-int main()\n-{\n-    std::vector<TestEntry> queries =\n-    {\n-        {\n-            \"SELECT number AS n FROM system.numbers LIMIT 0\",\n-            {{\"n\", \"Identifier_number\"}},\n-            { NameAndTypePair(\"number\", std::make_shared<DataTypeUInt64>()) }\n-        },\n-\n-        {\n-            \"SELECT number AS n FROM system.numbers LIMIT 0\",\n-            {{\"n\", \"Identifier_number\"}}\n-        }\n-    };\n-\n-    SharedContextHolder shared_context = Context::createShared();\n-    Context context = Context::createGlobal(shared_context.get());\n-    context.makeGlobalContext();\n-\n-    auto system_database = std::make_shared<DatabaseMemory>(\"system\");\n-    DatabaseCatalog::instance().attachDatabase(\"system\", system_database);\n-    //context.setCurrentDatabase(\"system\");\n-    system_database->attachTable(\"one\", StorageSystemOne::create(\"one\"), {});\n-    system_database->attachTable(\"numbers\", StorageSystemNumbers::create(StorageID(\"system\", \"numbers\"), false), {});\n-\n-    size_t success = 0;\n-    for (auto & entry : queries)\n-    {\n-        try\n-        {\n-            if (entry.check(context))\n-            {\n-                ++success;\n-                std::cout << \"[OK] \" << entry.query << std::endl;\n-            }\n-            else\n-                std::cout << \"[Failed] \" << entry.query << std::endl;\n-        }\n-        catch (Exception & e)\n-        {\n-            std::cout << \"[Error] \" << entry.query << std::endl << e.displayText() << std::endl;\n-        }\n-    }\n-\n-    return success != queries.size();\n-}\n",
  "problem_statement": "expression_analyzer thread sanitizer build fails\nhttps://proxy.sandbox.yandex-team.ru/1522880080/build.out.log\r\n\r\nhttps://clickhouse-builds.s3.yandex.net/11088/f2e3bcdd15d5436ea2c8866457964f6c3572978f/report.html\r\n\r\n```\r\ndocker run --network=host --rm --volume=/place/sandbox-data/tasks/6/5/683506056/ClickHouse/build_output_folder:/output --volume=/place/sandbox-data/tasks/6/5/683506056/ClickHouse/docker/packager/../..:/build --volume=/place/sandbox-data/tasks/6/5/683506056/local_ccache:/ccache  -e DEB_CC=clang-10 -e DEB_CXX=clang++-10 -e BUILD_TYPE=debug -e CCACHE_DIR=/ccache -e CCACHE_BASEDIR=/build -e CCACHE_NOHASHDIR=true -e CCACHE_COMPILERCHECK=content -e ENABLE_TESTS=1 -e BINARY_OUTPUT=tests -e VERSION_STRING='20.5.1.3501' -e AUTHOR='clickhouse' -e CMAKE_FLAGS=\"$CMAKE_FLAGS -DADD_GDB_INDEX_FOR_GOLD=1 -DLINKER_NAME=lld -DENABLE_TESTS=1 -DUSE_GTEST=1 -DENABLE_CLANG_TIDY=1 -DWITH_COVERAGE=1\"  yandex/clickhouse-deb-builder\r\n```\r\n\r\n```\r\n2020-05-25 05:24:57 [7403/7470] Linking CXX executable src/Interpreters/tests/expression_analyzer\r\n2020-05-25 05:24:57 FAILED: src/Interpreters/tests/expression_analyzer \r\n2020-05-25 05:24:57 : && /usr/bin/ccache /usr/bin/clang++-10  -g -fno-omit-frame-pointer -DSANITIZER -fsanitize=thread -fsanitize-blacklist=/build/tests/tsan_suppressions.txt -fdiagnostics-color=always -std=c++2a -fsized-deallocation  -gdwarf-aranges -pipe -msse4.1 -msse4.2 -mpopcnt   -Wall -Wno-unused-command-line-argument  -fdiagnostics-absolute-paths -Werror -Wextra -Wpedantic -Wno-vla-extension -Wno-zero-length-array -Wcomma -Wconditional-uninitialized -Wcovered-switch-default -Wdeprecated -Wembedded-directive -Wempty-init-stmt -Wextra-semi-stmt -Wextra-semi -Wgnu-case-range -Winconsistent-missing-destructor-override -Wnewline-eof -Wold-style-cast -Wrange-loop-analysis -Wredundant-parens -Wreserved-id-macro -Wshadow-field -Wshadow-uncaptured-local -Wshadow -Wstring-plus-int -Wundef -Wunreachable-code-return -Wunreachable-code -Wunused-exception-parameter -Wunused-macros -Wunused-member-function -Wzero-as-null-pointer-constant -Weverything -Wno-c++98-compat-pedantic -Wno-c++98-compat -Wno-c99-extensions -Wno-conversion -Wno-ctad-maybe-unsupported -Wno-deprecated-dynamic-exception-spec -Wno-disabled-macro-expansion -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-nested-anon-types -Wno-packed -Wno-padded -Wno-return-std-move-in-c++11 -Wno-shift-sign-overflow -Wno-sign-conversion -Wno-switch-enum -Wno-undefined-func-template -Wno-unused-template -Wno-vla -Wno-weak-template-vtables -Wno-weak-vtables -O2 -g -DNDEBUG -O3  -fno-pie  -fuse-ld=lld -rdynamic -Wl,--gdb-index -Wl,-no-pie   -rdynamic src/CMakeFiles/clickhouse_malloc.dir/Common/malloc.cpp.o src/Interpreters/tests/CMakeFiles/expression_analyzer.dir/expression_analyzer.cpp.o  -o src/Interpreters/tests/expression_analyzer  src/libclickhouse_new_delete.a src/libdbms.a src/Storages/System/libclickhouse_storages_system.a src/Parsers/libclickhouse_parsers.a src/libclickhouse_common_io.a src/libdbms.a contrib/llvm/llvm/lib/libLLVMOrcJIT.a contrib/llvm/llvm/lib/libLLVMJITLink.a contrib/llvm/llvm/lib/libLLVMExecutionEngine.a contrib/llvm/llvm/lib/libLLVMRuntimeDyld.a contrib/llvm/llvm/lib/libLLVMX86CodeGen.a contrib/llvm/llvm/lib/libLLVMX86Desc.a contrib/llvm/llvm/lib/libLLVMX86Info.a contrib/llvm/llvm/lib/libLLVMX86Utils.a contrib/llvm/llvm/lib/libLLVMAsmPrinter.a contrib/llvm/llvm/lib/libLLVMDebugInfoDWARF.a contrib/llvm/llvm/lib/libLLVMGlobalISel.a contrib/llvm/llvm/lib/libLLVMSelectionDAG.a contrib/llvm/llvm/lib/libLLVMMCDisassembler.a contrib/llvm/llvm/lib/libLLVMPasses.a contrib/llvm/llvm/lib/libLLVMCodeGen.a contrib/llvm/llvm/lib/libLLVMipo.a contrib/llvm/llvm/lib/libLLVMIRReader.a contrib/llvm/llvm/lib/libLLVMAsmParser.a contrib/llvm/llvm/lib/libLLVMLinker.a contrib/llvm/llvm/lib/libLLVMBitWriter.a contrib/llvm/llvm/lib/libLLVMInstrumentation.a contrib/llvm/llvm/lib/libLLVMScalarOpts.a contrib/llvm/llvm/lib/libLLVMAggressiveInstCombine.a contrib/llvm/llvm/lib/libLLVMInstCombine.a contrib/llvm/llvm/lib/libLLVMVectorize.a contrib/llvm/llvm/lib/libLLVMTransformUtils.a contrib/llvm/llvm/lib/libLLVMTarget.a contrib/llvm/llvm/lib/libLLVMAnalysis.a contrib/llvm/llvm/lib/libLLVMProfileData.a contrib/llvm/llvm/lib/libLLVMObject.a contrib/llvm/llvm/lib/libLLVMBitReader.a contrib/llvm/llvm/lib/libLLVMCore.a contrib/llvm/llvm/lib/libLLVMRemarks.a contrib/llvm/llvm/lib/libLLVMBitstreamReader.a contrib/llvm/llvm/lib/libLLVMMCParser.a contrib/llvm/llvm/lib/libLLVMMC.a contrib/llvm/llvm/lib/libLLVMBinaryFormat.a contrib/llvm/llvm/lib/libLLVMDebugInfoCodeView.a contrib/llvm/llvm/lib/libLLVMDebugInfoMSF.a contrib/llvm/llvm/lib/libLLVMSupport.a contrib/llvm/llvm/lib/libLLVMDemangle.a contrib/cppkafka-cmake/libcppkafka.a contrib/librdkafka-cmake/librdkafka.a contrib/libbtrie/libbtrie.a src/Common/Config/libclickhouse_common_config.a src/Dictionaries/Embedded/libclickhouse_dictionaries_embedded.a base/mysqlxx/libmysqlxx.a contrib/mariadb-connector-c/libmariadb/libmariadbclient.a contrib/icu-cmake/libicui18n.a contrib/icu-cmake/libicuuc.a contrib/icu-cmake/libicudata.a contrib/capnproto-cmake/libcapnpc.a contrib/capnproto-cmake/libcapnp.a contrib/capnproto-cmake/libkj.a contrib/arrow-cmake/libparquet_static.a contrib/arrow-cmake/libarrow_static.a contrib/boost-cmake/libboost_filesystem_internal.a contrib/lz4-cmake/liblz4.a contrib/zstd-cmake/libzstd.a contrib/flatbuffers/libflatbuffers.a contrib/arrow-cmake/libthrift_static.a contrib/boost-cmake/libboost_regex_internal.a contrib/avro-cmake/libavrocpp.a contrib/boost-cmake/libboost_iostreams_internal.a contrib/snappy/libsnappy.a contrib/openldap-cmake/libldap_r.a contrib/openldap-cmake/liblber.a src/Parsers/libclickhouse_parsers.a src/Common/ZooKeeper/libclickhouse_common_zookeeper.a src/libclickhouse_common_io.a contrib/boost-cmake/libboost_program_options_internal.a base/widechar_width/libwidechar_width.a contrib/double-conversion-cmake/libdouble-conversion.a contrib/ryu-cmake/libryu.a contrib/re2/libre2.a contrib/re2_st/libre2_st.a contrib/libcpuid-cmake/libcpuid.a contrib/croaring/libroaring.a contrib/libhdfs3-cmake/libhdfs3.a contrib/protobuf/cmake/libprotobuf.a contrib/libgsasl/liblibgsasl.a contrib/libxml2-cmake/liblibxml2.a contrib/aws-s3-cmake/libaws_s3.a contrib/aws-s3-cmake/libaws_s3_checksums.a contrib/curl-cmake/libcurl.a contrib/brotli-cmake/libbrotli.a src/Common/StringUtils/libstring_utils.a base/common/libcommon.a contrib/boost-cmake/libboost_system_internal.a contrib/cityhash102/libcityhash.a contrib/FastMemcpy/libFastMemcpy.a contrib/poco-cmake/Net/SSL/lib_poco_net_ssl.a contrib/poco-cmake/Net/lib_poco_net.a contrib/poco-cmake/Crypto/lib_poco_crypto.a contrib/openssl-cmake/libssl.a contrib/openssl-cmake/libcrypto.a contrib/poco-cmake/Util/lib_poco_util.a contrib/poco-cmake/JSON/lib_poco_json.a contrib/poco-cmake/JSON/lib_poco_json_pdjson.a contrib/poco-cmake/XML/lib_poco_xml.a contrib/poco-cmake/Foundation/lib_poco_foundation.a contrib/zlib-ng/libzlib.a contrib/poco-cmake/Foundation/lib_poco_foundation_pcre.a contrib/poco-cmake/XML/lib_poco_xml_expat.a contrib/replxx-cmake/libreplxx.a contrib/fmtlib-cmake/libfmt.a contrib/cctz-cmake/libcctz.a -Wl,--whole-archive contrib/cctz-cmake/libtzdata.a -Wl,--start-group base/glibc-compatibility/libglibc-compatibility.a contrib/libcxx-cmake/libcxx.a contrib/libcxxabi-cmake/libcxxabi.a contrib/libunwind-cmake/libunwind.a -Wl,--end-group -Wl,--no-whole-archive -nodefaultlibs /usr/lib/llvm-10/lib/clang/10.0.1/lib/linux/libclang_rt.builtins-x86_64.a  -lc -lm -lrt -lpthread -ldl && :\r\n2020-05-25 05:24:57 ld.lld: error: duplicate symbol: __cxa_guard_abort\r\n2020-05-25 05:24:57 >>> defined at tsan_interceptors_posix.cpp.o:(__cxa_guard_abort) in archive /usr/lib/llvm-10/lib/clang/10.0.1/lib/linux/libclang_rt.tsan-x86_64.a\r\n2020-05-25 05:24:57 >>> defined at cxa_guard.cpp:47 (../contrib/libcxxabi/src/cxa_guard.cpp:47)\r\n2020-05-25 05:24:57 >>>            cxa_guard.cpp.o:(.text+0x270) in archive contrib/libcxxabi-cmake/libcxxabi.a\r\n2020-05-25 05:24:57 \r\n2020-05-25 05:24:57 ld.lld: error: duplicate symbol: __cxa_guard_acquire\r\n2020-05-25 05:24:57 >>> defined at tsan_interceptors_posix.cpp.o:(__cxa_guard_acquire) in archive /usr/lib/llvm-10/lib/clang/10.0.1/lib/linux/libclang_rt.tsan-x86_64.a\r\n2020-05-25 05:24:57 >>> defined at cxa_guard.cpp:37 (../contrib/libcxxabi/src/cxa_guard.cpp:37)\r\n2020-05-25 05:24:57 >>>            cxa_guard.cpp.o:(.text+0x0) in archive contrib/libcxxabi-cmake/libcxxabi.a\r\n2020-05-25 05:24:57 \r\n2020-05-25 05:24:57 ld.lld: error: duplicate symbol: __cxa_guard_release\r\n2020-05-25 05:24:57 >>> defined at tsan_interceptors_posix.cpp.o:(__cxa_guard_release) in archive /usr/lib/llvm-10/lib/clang/10.0.1/lib/linux/libclang_rt.tsan-x86_64.a\r\n2020-05-25 05:24:57 >>> defined at cxa_guard.cpp:42 (../contrib/libcxxabi/src/cxa_guard.cpp:42)\r\n2020-05-25 05:24:57 >>>            cxa_guard.cpp.o:(.text+0x1A0) in archive contrib/libcxxabi-cmake/libcxxabi.a\r\n2020-05-25 05:24:57 clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\n",
  "hints_text": "I'd prefere remove this test at all. It's not an algorithmic part and already tested by functional tests.",
  "created_at": "2020-05-25T12:08:12Z",
  "modified_files": [
    "programs/CMakeLists.txt"
  ],
  "modified_test_files": [
    "src/Interpreters/tests/CMakeLists.txt",
    "src/Interpreters/tests/expression_analyzer.cpp"
  ]
}