diff --git a/tests/queries/0_stateless/03156_group_concat.reference b/tests/queries/0_stateless/03156_group_concat.reference
new file mode 100644
index 000000000000..c1ab35e96c0e
--- /dev/null
+++ b/tests/queries/0_stateless/03156_group_concat.reference
@@ -0,0 +1,19 @@
+0	95	abc	[1,2,3]
+1	\N	a	[993,986,979,972]
+2	123	makson95	[]
+95123
+abcamakson95
+[1,2,3][993,986,979,972][]
+[1,2,3]
+abcamakson95
+95123
+95
123
+95,123
+abc,a,makson95
+[1,2,3],[993,986,979,972]
+\N
+951239512395123
+abc,a,makson95,abc,a,makson95,abc,a,makson95
+[1,2,3][993,986,979,972][][1,2,3][993,986,979,972][][1,2,3][993,986,979,972][]
+488890
+488890
diff --git a/tests/queries/0_stateless/03156_group_concat.sql b/tests/queries/0_stateless/03156_group_concat.sql
new file mode 100644
index 000000000000..0d561c69f0af
--- /dev/null
+++ b/tests/queries/0_stateless/03156_group_concat.sql
@@ -0,0 +1,57 @@
+DROP TABLE IF EXISTS test_groupConcat;
+CREATE TABLE test_groupConcat
+(
+    id UInt64,
+    p_int Int32 NULL,
+    p_string String,
+    p_array Array(Int32)
+) ENGINE = MergeTree ORDER BY id;
+
+SET max_insert_threads = 1, max_threads = 1, min_insert_block_size_rows = 0, min_insert_block_size_bytes = 0;
+INSERT INTO test_groupConcat VALUES (0, 95, 'abc', [1, 2, 3]), (1, NULL, 'a', [993, 986, 979, 972]), (2, 123, 'makson95', []);
+
+SELECT * FROM test_groupConcat;
+
+SELECT groupConcat(p_int) FROM test_groupConcat;
+SELECT groupConcat(p_string) FROM test_groupConcat;
+SELECT groupConcat(p_array) FROM test_groupConcat;
+
+SELECT groupConcat('', 1)(p_array) FROM test_groupConcat;
+SELECT groupConcat('', 3)(p_string) FROM test_groupConcat;
+SELECT groupConcat('', 2)(p_int) FROM test_groupConcat;
+SELECT groupConcat('
', 3)(p_int) FROM test_groupConcat;
+
+SELECT groupConcat(',')(p_int) FROM test_groupConcat;
+SELECT groupConcat(',')(p_string) FROM test_groupConcat;
+SELECT groupConcat(',', 2)(p_array) FROM test_groupConcat;
+
+SELECT groupConcat(p_int) FROM test_groupConcat WHERE id = 1;
+
+INSERT INTO test_groupConcat VALUES (0, 95, 'abc', [1, 2, 3]), (1, NULL, 'a', [993, 986, 979, 972]), (2, 123, 'makson95', []);
+INSERT INTO test_groupConcat VALUES (0, 95, 'abc', [1, 2, 3]), (1, NULL, 'a', [993, 986, 979, 972]), (2, 123, 'makson95', []);
+
+SELECT groupConcat(p_int) FROM test_groupConcat;
+SELECT groupConcat(',')(p_string) FROM test_groupConcat;
+SELECT groupConcat(p_array) FROM test_groupConcat;
+
+SELECT groupConcat(123)(number) FROM numbers(10); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+SELECT groupConcat(',', '3')(number) FROM numbers(10); -- { serverError BAD_ARGUMENTS }
+SELECT groupConcat(',', 0)(number) FROM numbers(10); -- { serverError BAD_ARGUMENTS }
+SELECT groupConcat(',', -1)(number) FROM numbers(10); -- { serverError BAD_ARGUMENTS }
+SELECT groupConcat(',', 3, 3)(number) FROM numbers(10); -- { serverError TOO_MANY_ARGUMENTS_FOR_FUNCTION }
+
+SELECT length(groupConcat(number)) FROM numbers(100000);
+
+DROP TABLE IF EXISTS test_groupConcat;
+
+CREATE TABLE test_groupConcat
+(
+    id UInt64,
+    p_int Int32,
+) ENGINE = MergeTree ORDER BY id;
+
+INSERT INTO test_groupConcat SELECT number, number FROM numbers(100000) SETTINGS min_insert_block_size_rows = 2000;
+
+SELECT length(groupConcat(p_int)) FROM test_groupConcat;
+
+DROP TABLE IF EXISTS test_groupConcat;
diff --git a/tests/queries/0_stateless/03195_group_concat_deserialization_fix.reference b/tests/queries/0_stateless/03195_group_concat_deserialization_fix.reference
new file mode 100644
index 000000000000..1696fc465548
--- /dev/null
+++ b/tests/queries/0_stateless/03195_group_concat_deserialization_fix.reference
@@ -0,0 +1,3 @@
+First
+First
+Second
diff --git a/tests/queries/0_stateless/03195_group_concat_deserialization_fix.sql b/tests/queries/0_stateless/03195_group_concat_deserialization_fix.sql
new file mode 100644
index 000000000000..337f1f3db241
--- /dev/null
+++ b/tests/queries/0_stateless/03195_group_concat_deserialization_fix.sql
@@ -0,0 +1,23 @@
+DROP TABLE IF EXISTS test_serialization;
+
+CREATE TABLE test_serialization
+(
+    id UInt64,
+    text AggregateFunction(groupConcat, String)
+) ENGINE = AggregatingMergeTree() ORDER BY id;
+
+INSERT INTO test_serialization SELECT
+    1,
+    groupConcatState('First');
+
+SELECT groupConcatMerge(text) AS concatenated_text FROM test_serialization GROUP BY id;
+
+INSERT INTO test_serialization SELECT
+    2,
+    groupConcatState('Second');
+
+SELECT groupConcatMerge(text) AS concatenated_text FROM test_serialization GROUP BY id ORDER BY id;
+
+DROP TABLE IF EXISTS test_serialization;
+
+
