You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
LWU after ALTER taking too long
### Describe the bug

Easy to reproduce.

### How to reproduce

Run: 
```sql
CREATE DATABASE d0 ENGINE = Atomic;
CREATE TABLE d0.t0 (c0 Int) ENGINE = MergeTree() ORDER BY tuple();
INSERT INTO TABLE d0.t0 (c0) VALUES (1);
ALTER TABLE d0.t0 REPLACE PARTITION ID '0' FROM d0.t0;
UPDATE d0.t0 SET c0 = 2 WHERE TRUE; --times out eventually
```

### Error message and/or stacktrace

The timeout error:

```
 <Error> executeQuery: Code: 159. DB::Exception: Failed to wait (120000 ms) for inserts and mutations to commit up to block number 3. (TIMEOUT_EXCEEDED) (version 25.8.1.976 (official build)) (from 127.0.0.1:55810) (query 5, line 5) (in query: UPDATE d0.t0 SET c0 = 2 WHERE TRUE;), Stack trace (when copying this message, always include the lines below):

0. contrib/llvm-project/libcxx/include/__exception/exception.h:113: Poco::Exception::Exception(String const&, int) @ 0x000000002663c8f2
1. src/Common/Exception.cpp:115: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000140c1fe6
2. src/Common/Exception.h:119: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000cdb55ac
3. src/Common/Exception.h:137: DB::Exception::Exception<unsigned long&, long&>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<long&>::type>, unsigned long&, long&) @ 0x000000001de70936
4. src/Storages/StorageMergeTree.cpp:2923: DB::StorageMergeTree::waitForCommittingInsertsAndMutations(long, unsigned long) const @ 0x000000001de47ad1
5. src/Storages/StorageMergeTree.cpp:791: DB::StorageMergeTree::updateLightweight(DB::MutationCommands const&, std::shared_ptr<DB::Context const>) @ 0x000000001de47190
6. src/Interpreters/InterpreterUpdateQuery.cpp:108: DB::InterpreterUpdateQuery::execute() @ 0x000000001b347274
7. src/Interpreters/executeQuery.cpp:1561: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::ImplicitTransactionControlExecutor>) @ 0x000000001b2c3243
8. src/Interpreters/executeQuery.cpp:1769: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x000000001b2bd1bb
9. src/Server/TCPHandler.cpp:723: DB::TCPHandler::runImpl() @ 0x000000001e5420d2
10. src/Server/TCPHandler.cpp:2727: DB::TCPHandler::run() @ 0x000000001e55b864
11. base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x00000000266f29c7
12. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x00000000266f2fa5
13. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000002669293f
14. base/poco/Foundation/src/Thread_POSIX.cpp:341: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000026690011
15. start_thread @ 0x00000000000a27f1
16. __clone3 @ 0x0000000000133c9c
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
