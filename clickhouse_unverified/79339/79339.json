{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 79339,
  "instance_id": "ClickHouse__ClickHouse-79339",
  "issue_numbers": [
    "79333"
  ],
  "base_commit": "75ec9df90e1fd7917791de43ffb51f9ad95e8582",
  "patch": "diff --git a/src/Core/FormatFactorySettings.h b/src/Core/FormatFactorySettings.h\nindex cd7f12aa2479..6dccff175ce9 100644\n--- a/src/Core/FormatFactorySettings.h\n+++ b/src/Core/FormatFactorySettings.h\n@@ -918,6 +918,11 @@ Output the pending block in pretty formats if more than the specified number of\n )\", 0) \\\n     DECLARE(UInt64Auto, output_format_pretty_color, \"auto\", R\"(\n Use ANSI escape sequences in Pretty formats. 0 - disabled, 1 - enabled, 'auto' - enabled if a terminal.\n+)\", 0) \\\n+    DECLARE(UInt64Auto, output_format_pretty_glue_chunks, \"auto\", R\"(\n+If the data rendered in Pretty formats arrived in multiple chunks, even after a delay, but the next chunk has the same column widths as the previous, use ANSI escape sequences to move back to the previous line and overwrite the footer of the previous chunk to continue it with the data of the new chunk. This makes the result more visually pleasant.\n+\n+0 - disabled, 1 - enabled, 'auto' - enabled if a terminal.\n )\", 0) \\\n     DECLARE(String, output_format_pretty_grid_charset, \"UTF-8\", R\"(\n Charset for printing grid borders. Available charsets: ASCII, UTF-8 (default one).\ndiff --git a/src/Core/SettingsChangesHistory.cpp b/src/Core/SettingsChangesHistory.cpp\nindex b84502a03a4d..e2d602f2fb46 100644\n--- a/src/Core/SettingsChangesHistory.cpp\n+++ b/src/Core/SettingsChangesHistory.cpp\n@@ -73,6 +73,7 @@ const VersionToSettingsChangesMap & getSettingsChangesHistory()\n             {\"implicit_table_at_top_level\", \"\", \"\", \"A new setting, used in clickhouse-local\"},\n             {\"use_skip_indexes_if_final_exact_mode\", 0, 0, \"This setting was introduced to help FINAL query return correct results with skip indexes\"},\n             {\"parallel_replicas_insert_select_local_pipeline\", false, false, \"Use local pipeline during distributed INSERT SELECT with parallel replicas. Currently disabled due to performance issues\"},\n+            {\"output_format_pretty_glue_chunks\", \"0\", \"auto\", \"A new setting to make Pretty formats prettier.\"},\n         });\n         addSettingsChanges(settings_changes_history, \"25.4\",\n         {\ndiff --git a/src/Formats/FormatFactory.cpp b/src/Formats/FormatFactory.cpp\nindex 5229aab34c4e..af7f368baf62 100644\n--- a/src/Formats/FormatFactory.cpp\n+++ b/src/Formats/FormatFactory.cpp\n@@ -216,6 +216,7 @@ FormatSettings getFormatSettings(const ContextPtr & context, const Settings & se\n     format_settings.parquet.enable_row_group_prefetch = settings[Setting::input_format_parquet_enable_row_group_prefetch];\n     format_settings.pretty.charset = settings[Setting::output_format_pretty_grid_charset].toString() == \"ASCII\" ? FormatSettings::Pretty::Charset::ASCII : FormatSettings::Pretty::Charset::UTF8;\n     format_settings.pretty.color = settings[Setting::output_format_pretty_color].valueOr(2);\n+    format_settings.pretty.glue_chunks = settings[Setting::output_format_pretty_glue_chunks].valueOr(2);\n     format_settings.pretty.max_column_pad_width = settings[Setting::output_format_pretty_max_column_pad_width];\n     format_settings.pretty.max_rows = settings[Setting::output_format_pretty_max_rows];\n     format_settings.pretty.max_column_name_width_cut_to = settings[Setting::output_format_pretty_max_column_name_width_cut_to];\ndiff --git a/src/Formats/FormatSettings.h b/src/Formats/FormatSettings.h\nindex bc62df0513b5..cfe9f7f87254 100644\n--- a/src/Formats/FormatSettings.h\n+++ b/src/Formats/FormatSettings.h\n@@ -325,6 +325,8 @@ struct FormatSettings\n \n         UInt64 squash_consecutive_ms = 50;\n         UInt64 squash_max_wait_ms = 1000;\n+        /// Set to 2 for auto\n+        UInt64 glue_chunks = 2;\n \n         bool fallback_to_vertical = true;\n         UInt64 fallback_to_vertical_max_rows_per_chunk = 100;\ndiff --git a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\nindex ec46d0ba92ab..b53c617ccf3c 100644\n--- a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\n+++ b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.cpp\n@@ -20,8 +20,8 @@ namespace DB\n {\n \n PrettyBlockOutputFormat::PrettyBlockOutputFormat(\n-    WriteBuffer & out_, const Block & header_, const FormatSettings & format_settings_, Style style_, bool mono_block_, bool color_)\n-     : IOutputFormat(header_, out_), format_settings(format_settings_), serializations(header_.getSerializations()), style(style_), mono_block(mono_block_), color(color_)\n+    WriteBuffer & out_, const Block & header_, const FormatSettings & format_settings_, Style style_, bool mono_block_, bool color_, bool glue_chunks_)\n+     : IOutputFormat(header_, out_), format_settings(format_settings_), serializations(header_.getSerializations()), style(style_), mono_block(mono_block_), color(color_), glue_chunks(glue_chunks_)\n {\n     /// Decide whether we should print a tip near the single number value in the result.\n     if (header_.getColumns().size() == 1)\n@@ -51,6 +51,7 @@ void PrettyBlockOutputFormat::calculateWidths(\n     size_t num_displayed_rows = std::min<size_t>(num_rows, format_settings.pretty.max_rows);\n \n     /// len(num_rows + total_rows) + len(\". \")\n+    prev_row_number_width = row_number_width;\n     row_number_width = static_cast<size_t>(std::floor(std::log10(num_rows + total_rows))) + 3;\n \n     size_t num_columns = chunk.getNumColumns();\n@@ -457,9 +458,28 @@ void PrettyBlockOutputFormat::writeChunk(const Chunk & chunk, PortKind port_kind\n         out << \"\\n\";\n     };\n \n-    writeString(header_begin, out);\n-    write_names(true);\n-    writeString(header_end, out);\n+    if (glue_chunks\n+        && (!format_settings.pretty.row_numbers || row_number_width == prev_row_number_width)\n+        && name_widths == prev_chunk_name_widths)\n+    {\n+        /// Move cursor up to overwrite the footer of the previous chunk:\n+        if (!rows_end.empty())\n+            writeCString(\"\\033[1A\\033[2K\\033[G\", out);\n+        if (had_footer)\n+        {\n+            size_t times = !footer_begin.empty() + !footer_end.empty() + rows_end.empty();\n+            for (size_t i = 0; i < times; ++i)\n+                writeCString(\"\\033[1A\\033[2K\\033[G\", out);\n+        }\n+        if (!rows_separator.empty())\n+            writeString(rows_separator, out);\n+    }\n+    else\n+    {\n+        writeString(header_begin, out);\n+        write_names(true);\n+        writeString(header_end, out);\n+    }\n \n     bool vertical_filler_written = false;\n     size_t displayed_row = 0;\n@@ -561,13 +581,16 @@ void PrettyBlockOutputFormat::writeChunk(const Chunk & chunk, PortKind port_kind\n         writeString(footer_begin, out);\n         write_names(false);\n         writeString(footer_end, out);\n+        had_footer = true;\n     }\n     else\n     {\n         ///    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         writeString(rows_end, out);\n+        had_footer = false;\n     }\n     total_rows += num_rows;\n+    prev_chunk_name_widths = std::move(name_widths);\n }\n \n \n@@ -778,7 +801,9 @@ void registerOutputFormatPretty(FormatFactory & factory)\n                 {\n                     bool color = !no_escapes\n                         && (format_settings.pretty.color == 1 || (format_settings.pretty.color == 2 && format_settings.is_writing_to_terminal));\n-                    return std::make_shared<PrettyBlockOutputFormat>(buf, sample, format_settings, style, mono_block, color);\n+                    bool glue_chunks = !no_escapes\n+                        && (format_settings.pretty.glue_chunks == 1 || (format_settings.pretty.glue_chunks == 2 && format_settings.is_writing_to_terminal));\n+                    return std::make_shared<PrettyBlockOutputFormat>(buf, sample, format_settings, style, mono_block, color, glue_chunks);\n                 });\n             }\n         }\ndiff --git a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\nindex 0c132a04188b..ac53e2477c61 100644\n--- a/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\n+++ b/src/Processors/Formats/Impl/PrettyBlockOutputFormat.h\n@@ -4,7 +4,8 @@\n #include <Formats/FormatFactory.h>\n #include <Formats/FormatSettings.h>\n #include <Processors/Formats/IOutputFormat.h>\n-#include <Common/PODArray_fwd.h>\n+#include <Common/PODArray.h>\n+\n \n namespace DB\n {\n@@ -26,7 +27,7 @@ class PrettyBlockOutputFormat : public IOutputFormat\n     };\n \n     /// no_escapes - do not use ANSI escape sequences - to display in the browser, not in the console.\n-    PrettyBlockOutputFormat(WriteBuffer & out_, const Block & header_, const FormatSettings & format_settings_, Style style_, bool mono_block_, bool color_);\n+    PrettyBlockOutputFormat(WriteBuffer & out_, const Block & header_, const FormatSettings & format_settings_, Style style_, bool mono_block_, bool color_, bool glue_chunks_);\n     ~PrettyBlockOutputFormat() override;\n \n     String getName() const override { return \"PrettyBlockOutputFormat\"; }\n@@ -38,6 +39,7 @@ class PrettyBlockOutputFormat : public IOutputFormat\n \n     size_t total_rows = 0;\n     size_t displayed_rows = 0;\n+    size_t prev_row_number_width = 7;\n     size_t row_number_width = 7; // \"10000. \"\n \n     const FormatSettings format_settings;\n@@ -78,6 +80,7 @@ class PrettyBlockOutputFormat : public IOutputFormat\n     Style style;\n     bool mono_block;\n     bool color;\n+    bool glue_chunks;\n \n     /// Fallback to Vertical format for wide but short tables.\n     std::unique_ptr<IRowOutputFormat> vertical_format_fallback;\n@@ -85,6 +88,8 @@ class PrettyBlockOutputFormat : public IOutputFormat\n \n     /// For mono_block == true only\n     Chunk mono_chunk;\n+    Widths prev_chunk_name_widths;\n+    bool had_footer = false;\n \n     /// Implements squashing of chunks by time\n     std::condition_variable mono_chunk_condvar;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03416_glue_chunks.reference b/tests/queries/0_stateless/03416_glue_chunks.reference\nnew file mode 100644\nindex 000000000000..925f3d952209\n--- /dev/null\n+++ b/tests/queries/0_stateless/03416_glue_chunks.reference\n@@ -0,0 +1,218 @@\n+   \u250c\u2500sleep(0.01)\u2500\u252c\u2500number\u2500\u2510\n+1. \u2502           0 \u2502      0 \u2502\n+2. \u2502           0 \u2502      1 \u2502\n+   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G3. \u2502           0 \u2502      2 \u2502\n+4. \u2502           0 \u2502      3 \u2502\n+   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G5. \u2502           0 \u2502      4 \u2502\n+6. \u2502           0 \u2502      5 \u2502\n+   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G7. \u2502           0 \u2502      6 \u2502\n+8. \u2502           0 \u2502      7 \u2502\n+   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+    \u250c\u2500sleep(0.01)\u2500\u252c\u2500number\u2500\u2510\n+ 9. \u2502           0 \u2502      8 \u2502\n+10. \u2502           0 \u2502      9 \u2502\n+    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G11. \u2502           0 \u2502     10 \u2502\n+    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+    sleep(0.01)   number\n+\n+1.            0        0 \n+2.            0        1 \n+3.            0        2 \n+4.            0        3 \n+5.            0        4 \n+6.            0        5 \n+7.            0        6 \n+8.            0        7 \n+     sleep(0.01)   number\n+\n+ 9.            0        8 \n+10.            0        9 \n+11.            0       10 \n+   \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+   \u2503 sleep(0.01) \u2503 number \u2503\n+   \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+1. \u2502           0 \u2502      0 \u2502\n+   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+2. \u2502           0 \u2502      1 \u2502\n+   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+3. \u2502           0 \u2502      2 \u2502\n+   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+4. \u2502           0 \u2502      3 \u2502\n+   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+5. \u2502           0 \u2502      4 \u2502\n+   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+6. \u2502           0 \u2502      5 \u2502\n+   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+7. \u2502           0 \u2502      6 \u2502\n+   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+8. \u2502           0 \u2502      7 \u2502\n+   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+    \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+    \u2503 sleep(0.01) \u2503 number \u2503\n+    \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+ 9. \u2502           0 \u2502      8 \u2502\n+    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+10. \u2502           0 \u2502      9 \u2502\n+    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+11. \u2502           0 \u2502     10 \u2502\n+    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500sleep(0.01)\u2500\u252c\u2500number\u2500\u2510\n+\u2502           0 \u2502      0 \u2502\n+\u2502           0 \u2502      1 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502      2 \u2502\n+\u2502           0 \u2502      3 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502      4 \u2502\n+\u2502           0 \u2502      5 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502      6 \u2502\n+\u2502           0 \u2502      7 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502      8 \u2502\n+\u2502           0 \u2502      9 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502     10 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+ sleep(0.01)   number\n+\n+           0        0 \n+           0        1 \n+           0        2 \n+           0        3 \n+           0        4 \n+           0        5 \n+           0        6 \n+           0        7 \n+           0        8 \n+           0        9 \n+           0       10 \n+\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+\u2503 sleep(0.01) \u2503 number \u2503\n+\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+\u2502           0 \u2502      0 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      1 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      2 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      3 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      4 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      5 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      6 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      7 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      8 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      9 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502     10 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500sleep(0.01)\u2500\u252c\u2500number\u2500\u2510\n+\u2502           0 \u2502      0 \u2502\n+\u2502           0 \u2502      1 \u2502\n+\u2514\u2500sleep(0.01)\u2500\u2534\u2500number\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502      2 \u2502\n+\u2502           0 \u2502      3 \u2502\n+\u2514\u2500sleep(0.01)\u2500\u2534\u2500number\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502      4 \u2502\n+\u2502           0 \u2502      5 \u2502\n+\u2514\u2500sleep(0.01)\u2500\u2534\u2500number\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502      6 \u2502\n+\u2502           0 \u2502      7 \u2502\n+\u2514\u2500sleep(0.01)\u2500\u2534\u2500number\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502      8 \u2502\n+\u2502           0 \u2502      9 \u2502\n+\u2514\u2500sleep(0.01)\u2500\u2534\u2500number\u2500\u2518\n+\u001b[1A\u001b[2K\u001b[G\u2502           0 \u2502     10 \u2502\n+\u2514\u2500sleep(0.01)\u2500\u2534\u2500number\u2500\u2518\n+ sleep(0.01)   number\n+\n+           0        0 \n+           0        1 \n+\n+ sleep(0.01)   number\n+\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G           0        2 \n+           0        3 \n+\n+ sleep(0.01)   number\n+\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G           0        4 \n+           0        5 \n+\n+ sleep(0.01)   number\n+\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G           0        6 \n+           0        7 \n+\n+ sleep(0.01)   number\n+\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G           0        8 \n+           0        9 \n+\n+ sleep(0.01)   number\n+\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G           0       10 \n+\n+ sleep(0.01)   number\n+\n+\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+\u2503 sleep(0.01) \u2503 number \u2503\n+\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+\u2502           0 \u2502      0 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      1 \u2502\n+\u2522\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2548\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252a\n+\u2503 sleep(0.01) \u2503 number \u2503\n+\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253b\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      2 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      3 \u2502\n+\u2522\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2548\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252a\n+\u2503 sleep(0.01) \u2503 number \u2503\n+\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253b\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      4 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      5 \u2502\n+\u2522\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2548\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252a\n+\u2503 sleep(0.01) \u2503 number \u2503\n+\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253b\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      6 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      7 \u2502\n+\u2522\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2548\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252a\n+\u2503 sleep(0.01) \u2503 number \u2503\n+\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253b\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      8 \u2502\n+\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502      9 \u2502\n+\u2522\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2548\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252a\n+\u2503 sleep(0.01) \u2503 number \u2503\n+\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253b\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n+\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u001b[1A\u001b[2K\u001b[G\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+\u2502           0 \u2502     10 \u2502\n+\u2522\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2548\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252a\n+\u2503 sleep(0.01) \u2503 number \u2503\n+\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u253b\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\ndiff --git a/tests/queries/0_stateless/03416_glue_chunks.sql b/tests/queries/0_stateless/03416_glue_chunks.sql\nnew file mode 100644\nindex 000000000000..b4e76d1069b7\n--- /dev/null\n+++ b/tests/queries/0_stateless/03416_glue_chunks.sql\n@@ -0,0 +1,20 @@\n+SET output_format_pretty_row_numbers = 1;\n+SET output_format_pretty_glue_chunks = 1;\n+SET output_format_pretty_squash_consecutive_ms = 0;\n+SET max_block_size = 2;\n+\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT PrettyCompact;\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT PrettySpace;\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT Pretty;\n+\n+SET output_format_pretty_row_numbers = 0;\n+\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT PrettyCompact;\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT PrettySpace;\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT Pretty;\n+\n+SET output_format_pretty_display_footer_column_names_min_rows = 1;\n+\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT PrettyCompact;\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT PrettySpace;\n+SELECT sleep(0.01), number FROM numbers(11) FORMAT Pretty;\n",
  "problem_statement": "Pretty formats: if column widths in different blocks are the same, and we are writing into the terminal, overwrite the footer of the previous block to continue it with the new block.\n### Company or project name\n\nClickHouse\n\n### Describe the unexpected behaviour\n\nSee the title.\n\n### How to reproduce\n\n```\nSELECT sleep(0.2), number FROM numbers(11) SETTINGS max_block_size = 2\n```\n\n### Expected behavior\n\n_No response_\n\n### Error message and/or stacktrace\n\n_No response_\n\n### Additional context\n\n_No response_\n",
  "hints_text": "",
  "created_at": "2025-04-19T02:20:23Z"
}