diff --git a/tests/queries/0_stateless/03395_global_join_supported_kind.reference b/tests/queries/0_stateless/03395_global_join_supported_kind.reference
new file mode 100644
index 000000000000..573541ac9702
--- /dev/null
+++ b/tests/queries/0_stateless/03395_global_join_supported_kind.reference
@@ -0,0 +1,1 @@
+0
diff --git a/tests/queries/0_stateless/03395_global_join_unsupported_kind.sql b/tests/queries/0_stateless/03395_global_join_supported_kind.sql
similarity index 66%
rename from tests/queries/0_stateless/03395_global_join_unsupported_kind.sql
rename to tests/queries/0_stateless/03395_global_join_supported_kind.sql
index 310f7b50560b..b6a8831413bc 100644
--- a/tests/queries/0_stateless/03395_global_join_unsupported_kind.sql
+++ b/tests/queries/0_stateless/03395_global_join_supported_kind.sql
@@ -1,1 +1,1 @@
-SELECT t1.* FROM remote('127.1') AS t1 global FULL OUTER JOIN remote('127.1') AS t2 ON t1.dummy = t2.dummy SETTINGS allow_experimental_analyzer=1; -- { serverError INCOMPATIBLE_TYPE_OF_JOIN }
+SELECT t1.* FROM remote('127.1') AS t1 global FULL OUTER JOIN remote('127.1') AS t2 ON t1.dummy = t2.dummy SETTINGS allow_experimental_analyzer=1;
diff --git a/tests/queries/0_stateless/03395_global_join_unsupported_kind.reference b/tests/queries/0_stateless/03395_global_join_unsupported_kind.reference
deleted file mode 100644
index e69de29bb2d1..000000000000
diff --git a/tests/queries/0_stateless/03448_analyzer_array_join_alias_in_join_using_bug.reference b/tests/queries/0_stateless/03448_analyzer_array_join_alias_in_join_using_bug.reference
new file mode 100644
index 000000000000..48951c03b686
--- /dev/null
+++ b/tests/queries/0_stateless/03448_analyzer_array_join_alias_in_join_using_bug.reference
@@ -0,0 +1,42 @@
+-- { echoOn }
+
+SELECT arr
+FROM remote('127.0.0.2', currentDatabase(), local_table) r
+ARRAY JOIN arr AS dummy
+INNER JOIN system.one AS foo USING (dummy);
+[0,1,2]
+SELECT arr
+FROM remote('127.0.0.{1,2}', currentDatabase(), local_table) r
+ARRAY JOIN arr AS dummy
+INNER JOIN system.one AS foo USING (dummy);
+[0,1,2]
+[0,1,2]
+SELECT arr
+FROM remote('127.0.0.2', currentDatabase(), local_table) r
+ARRAY JOIN arr AS arr_item
+INNER JOIN (SELECT 1 as arr_item) AS foo USING (arr_item);
+[0,1,2]
+SELECT arr
+FROM remote('127.0.0.{1,2}', currentDatabase(), local_table) r
+ARRAY JOIN arr AS arr_item
+INNER JOIN (SELECT 1 as arr_item) AS foo USING (arr_item);
+[0,1,2]
+[0,1,2]
+SELECT arr, arr_item
+FROM remote('127.0.0.2', currentDatabase(), local_table) r
+ARRAY JOIN arr AS arr_item
+INNER JOIN (SELECT 1 + number as arr_item from numbers(2)) AS foo USING (arr_item);
+[0,1,2]	1
+[0,1,2]	2
+SELECT arr, arr_item
+FROM remote('127.0.0.{1,2}', currentDatabase(), local_table) r
+ARRAY JOIN arr AS arr_item
+INNER JOIN (SELECT 1 + number as arr_item from numbers(2)) AS foo USING (arr_item);
+[0,1,2]	1
+[0,1,2]	2
+[0,1,2]	1
+[0,1,2]	2
+-- Fuzzed
+
+SELECT arr FROM remote('127.0.0.2', currentDatabase(), local_table) AS r ARRAY JOIN arr AS arr_item GLOBAL RIGHT JOIN (SELECT 1 AS arr_item) AS foo USING (arr_item);
+[0,1,2]
diff --git a/tests/queries/0_stateless/03448_analyzer_array_join_alias_in_join_using_bug.sql b/tests/queries/0_stateless/03448_analyzer_array_join_alias_in_join_using_bug.sql
new file mode 100644
index 000000000000..06829d394d93
--- /dev/null
+++ b/tests/queries/0_stateless/03448_analyzer_array_join_alias_in_join_using_bug.sql
@@ -0,0 +1,45 @@
+CREATE TABLE local_table
+(
+    id Int8,
+    `arr` Array(UInt8)
+)
+ENGINE = MergeTree
+ORDER BY id;
+
+insert into local_table select 42, [0, 1, 2];
+
+-- { echoOn }
+
+SELECT arr
+FROM remote('127.0.0.2', currentDatabase(), local_table) r
+ARRAY JOIN arr AS dummy
+INNER JOIN system.one AS foo USING (dummy);
+
+SELECT arr
+FROM remote('127.0.0.{1,2}', currentDatabase(), local_table) r
+ARRAY JOIN arr AS dummy
+INNER JOIN system.one AS foo USING (dummy);
+
+SELECT arr
+FROM remote('127.0.0.2', currentDatabase(), local_table) r
+ARRAY JOIN arr AS arr_item
+INNER JOIN (SELECT 1 as arr_item) AS foo USING (arr_item);
+
+SELECT arr
+FROM remote('127.0.0.{1,2}', currentDatabase(), local_table) r
+ARRAY JOIN arr AS arr_item
+INNER JOIN (SELECT 1 as arr_item) AS foo USING (arr_item);
+
+SELECT arr, arr_item
+FROM remote('127.0.0.2', currentDatabase(), local_table) r
+ARRAY JOIN arr AS arr_item
+INNER JOIN (SELECT 1 + number as arr_item from numbers(2)) AS foo USING (arr_item);
+
+SELECT arr, arr_item
+FROM remote('127.0.0.{1,2}', currentDatabase(), local_table) r
+ARRAY JOIN arr AS arr_item
+INNER JOIN (SELECT 1 + number as arr_item from numbers(2)) AS foo USING (arr_item);
+
+-- Fuzzed
+
+SELECT arr FROM remote('127.0.0.2', currentDatabase(), local_table) AS r ARRAY JOIN arr AS arr_item GLOBAL RIGHT JOIN (SELECT 1 AS arr_item) AS foo USING (arr_item);
diff --git a/tests/queries/0_stateless/03449_join_using_allow_alias.reference b/tests/queries/0_stateless/03449_join_using_allow_alias.reference
new file mode 100644
index 000000000000..a284cf5b437c
--- /dev/null
+++ b/tests/queries/0_stateless/03449_join_using_allow_alias.reference
@@ -0,0 +1,10 @@
+-- { echo On }
+
+select * from numbers(1) l inner join system.one r using (number as dummy);
+0	0
+select * from system.one l inner join numbers(1) r using (dummy as number);
+0	0
+select * from numbers(2) l inner join (select number + 1 as dummy from numbers(1)) r using (number as dummy);
+1	1
+select * from (select number + 1 as dummy from numbers(1)) l inner join numbers(2) r using (dummy as number);
+1	1
diff --git a/tests/queries/0_stateless/03449_join_using_allow_alias.sql b/tests/queries/0_stateless/03449_join_using_allow_alias.sql
new file mode 100644
index 000000000000..5e4a3fe5d122
--- /dev/null
+++ b/tests/queries/0_stateless/03449_join_using_allow_alias.sql
@@ -0,0 +1,9 @@
+set enable_analyzer=1;
+
+-- { echo On }
+
+select * from numbers(1) l inner join system.one r using (number as dummy);
+select * from system.one l inner join numbers(1) r using (dummy as number);
+
+select * from numbers(2) l inner join (select number + 1 as dummy from numbers(1)) r using (number as dummy);
+select * from (select number + 1 as dummy from numbers(1)) l inner join numbers(2) r using (dummy as number);
