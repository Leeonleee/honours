{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 64614,
  "instance_id": "ClickHouse__ClickHouse-64614",
  "issue_numbers": [
    "64613"
  ],
  "base_commit": "dc2d5e0ec65e34a14d37bd030f32117a11d08866",
  "patch": "diff --git a/src/Functions/formatDateTime.cpp b/src/Functions/formatDateTime.cpp\nindex f63ecbf6146e..1c5dc05c5aa6 100644\n--- a/src/Functions/formatDateTime.cpp\n+++ b/src/Functions/formatDateTime.cpp\n@@ -205,13 +205,13 @@ class FunctionFormatDateTimeImpl : public IFunction\n             return 4;\n         }\n \n-        /// Cast content from integer to string, and append result string to buffer.\n-        /// Make sure digits number in result string is no less than total_digits by padding leading '0'\n+        /// Casts val from integer to string, then appends result string to buffer.\n+        /// Makes sure digits number in result string is no less than min_digits by padding leading '0'.\n         /// Notice: '-' is not counted as digit.\n         /// For example:\n-        /// val = -123, total_digits = 2 => dest = \"-123\"\n-        /// val = -123, total_digits = 3 => dest = \"-123\"\n-        /// val = -123, total_digits = 4 => dest = \"-0123\"\n+        /// val = -123, min_digits = 2 => dest = \"-123\"\n+        /// val = -123, min_digits = 3 => dest = \"-123\"\n+        /// val = -123, min_digits = 4 => dest = \"-0123\"\n         static size_t writeNumberWithPadding(char * dest, std::integral auto val, size_t min_digits)\n         {\n             using T = decltype(val);\n@@ -226,9 +226,10 @@ class FunctionFormatDateTimeImpl : public IFunction\n                 ++digits;\n             }\n \n-            /// Possible sign\n             size_t pos = 0;\n             n = val;\n+\n+            /// Possible sign\n             if constexpr (is_signed_v<T>)\n                 if (val < 0)\n                 {\n@@ -245,16 +246,17 @@ class FunctionFormatDateTimeImpl : public IFunction\n             }\n \n             /// Digits\n+            size_t digits_written = 0;\n             while (w >= 100)\n             {\n                 w /= 100;\n \n                 writeNumber2(dest + pos, n / w);\n                 pos += 2;\n-\n+                digits_written += 2;\n                 n = n % w;\n             }\n-            if (n)\n+            if (digits_written < digits)\n             {\n                 dest[pos] = '0' + n;\n                 ++pos;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02496_format_datetime_in_joda_syntax.reference b/tests/queries/0_stateless/02496_format_datetime_in_joda_syntax.reference\nindex 5d1bfd221959..6d6e5a0cc03d 100644\n--- a/tests/queries/0_stateless/02496_format_datetime_in_joda_syntax.reference\n+++ b/tests/queries/0_stateless/02496_format_datetime_in_joda_syntax.reference\n@@ -147,3 +147,5 @@ with '2018-01-12 22:33:44.55' as s, toDateTime64(s, 6) as datetime64 SELECT form\n 550000000\n with '2018-01-12 22:33:44.55' as s, toDateTime64(s, 6) as datetime64 SELECT formatDateTimeInJodaSyntax(datetime64, 'SSSSSSSSSS');\n 550000000\n+150\n+300\ndiff --git a/tests/queries/0_stateless/02496_format_datetime_in_joda_syntax.sql b/tests/queries/0_stateless/02496_format_datetime_in_joda_syntax.sql\nindex 89021e8561f6..b2b29cc55a41 100644\n--- a/tests/queries/0_stateless/02496_format_datetime_in_joda_syntax.sql\n+++ b/tests/queries/0_stateless/02496_format_datetime_in_joda_syntax.sql\n@@ -93,3 +93,7 @@ SELECT formatDateTimeInJodaSyntax(toDate32('2018-01-12 22:33:44'), 'Z'); -- { se\n SELECT formatDateTimeInJodaSyntax(toDate32('2018-01-12 22:33:44'), 'b'); -- { serverError NOT_IMPLEMENTED }\n \n SELECT formatDateTimeInJodaSyntax(toDate32('2018-01-12 22:33:44'), '\\'aaaa\\'\\''); -- { serverError BAD_ARGUMENTS }\n+\n+-- Bug #64613\n+select formatDateTimeInJodaSyntax(toDate('2012-05-29'), 'D');\n+select formatDateTimeInJodaSyntax(toDateTime('2010-10-27 13:41:27'), 'D');\n",
  "problem_statement": "formatDateTimeInJodaSyntax result error\nall version have function formatDateTimeInJodaSyntax\r\n\r\n\r\n\r\n**Describe what's wrong**\r\n\r\n![image](https://github.com/ClickHouse/ClickHouse/assets/16730247/4c97b60e-3a4b-4c27-8963-35ea7a3440bd)\r\nanswer should be 150\r\n> https://fiddle.clickhouse.com/a0c4a6c9-21b8-4824-bc93-f7373a135bc3\r\n\n",
  "hints_text": "I will fix this bug",
  "created_at": "2024-05-30T06:59:05Z"
}