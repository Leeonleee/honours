{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 60682,
  "instance_id": "ClickHouse__ClickHouse-60682",
  "issue_numbers": [
    "60517"
  ],
  "base_commit": "f523ae669abb6a8c8d66e3cb61f771d4fa78354c",
  "patch": "diff --git a/src/Interpreters/InterpreterAlterQuery.cpp b/src/Interpreters/InterpreterAlterQuery.cpp\nindex b768593da981..7acaf95beccb 100644\n--- a/src/Interpreters/InterpreterAlterQuery.cpp\n+++ b/src/Interpreters/InterpreterAlterQuery.cpp\n@@ -1,3 +1,4 @@\n+#include <Interpreters/ApplyWithSubqueryVisitor.h>\n #include <Interpreters/InterpreterAlterQuery.h>\n #include <Interpreters/InterpreterFactory.h>\n \n@@ -71,11 +72,15 @@ BlockIO InterpreterAlterQuery::execute()\n \n BlockIO InterpreterAlterQuery::executeToTable(const ASTAlterQuery & alter)\n {\n+    ASTSelectWithUnionQuery * modify_query = nullptr;\n+\n     for (auto & child : alter.command_list->children)\n     {\n         auto * command_ast = child->as<ASTAlterCommand>();\n         if (command_ast->sql_security)\n             InterpreterCreateQuery::processSQLSecurityOption(getContext(), command_ast->sql_security->as<ASTSQLSecurity &>());\n+        else if (command_ast->type == ASTAlterCommand::MODIFY_QUERY)\n+            modify_query = command_ast->select->as<ASTSelectWithUnionQuery>();\n     }\n \n     BlockIO res;\n@@ -123,6 +128,12 @@ BlockIO InterpreterAlterQuery::executeToTable(const ASTAlterQuery & alter)\n         throw Exception(ErrorCodes::TABLE_IS_READ_ONLY, \"Table is read-only\");\n     auto table_lock = table->lockForShare(getContext()->getCurrentQueryId(), getContext()->getSettingsRef().lock_acquire_timeout);\n \n+    if (modify_query)\n+    {\n+        // Expand CTE before filling default database\n+        ApplyWithSubqueryVisitor().visit(*modify_query);\n+    }\n+\n     /// Add default database to table identifiers that we can encounter in e.g. default expressions, mutation expression, etc.\n     AddDefaultDatabaseVisitor visitor(getContext(), table_id.getDatabaseName());\n     ASTPtr command_list_ptr = alter.command_list->ptr();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03002_modify_query_cte.reference b/tests/queries/0_stateless/03002_modify_query_cte.reference\nnew file mode 100644\nindex 000000000000..50e4a7c6a070\n--- /dev/null\n+++ b/tests/queries/0_stateless/03002_modify_query_cte.reference\n@@ -0,0 +1,2 @@\n+CREATE MATERIALIZED VIEW default.mv_03002 TO default.table_03002\\n(\\n    `ts` DateTime\\n)\\nAS SELECT ts\\nFROM default.table_03002\n+CREATE MATERIALIZED VIEW default.mv_03002 TO default.table_03002\\n(\\n    `ts` DateTime\\n)\\nAS WITH MY_CTE AS\\n    (\\n        SELECT ts\\n        FROM default.table_03002\\n    )\\nSELECT *\\nFROM MY_CTE\ndiff --git a/tests/queries/0_stateless/03002_modify_query_cte.sql b/tests/queries/0_stateless/03002_modify_query_cte.sql\nnew file mode 100644\nindex 000000000000..3a36ce7e7fd0\n--- /dev/null\n+++ b/tests/queries/0_stateless/03002_modify_query_cte.sql\n@@ -0,0 +1,15 @@\n+\n+CREATE TABLE table_03002 (ts DateTime, event_type String) ENGINE = MergeTree ORDER BY (event_type, ts);\n+\n+CREATE MATERIALIZED VIEW mv_03002 TO table_03002 AS SELECT ts FROM table_03002;\n+\n+SHOW CREATE TABLE mv_03002;\n+\n+ALTER TABLE mv_03002 MODIFY QUERY\n+WITH MY_CTE AS (SELECT ts FROM table_03002)\n+SELECT * FROM MY_CTE;\n+\n+SHOW CREATE TABLE mv_03002;\n+\n+DROP TABLE mv_03002;\n+DROP TABLE table_03002;\n",
  "problem_statement": "ALTER TABLE ... MODIFY QUERY doesn't work with CTE\n**Describe what's wrong**\r\n`ALTER TABLE ... MODIFY QUERY` doesn't work with CTE\r\nhttps://fiddle.clickhouse.com/0d0b5129-c625-4f57-8cb3-ee5c7973e81c\r\n\r\n**Does it reproduce on the most recent release?**\r\nyes\r\n\r\n**How to reproduce**\r\n```\r\nSELECT version();\r\n\r\nCREATE TABLE events (ts DateTime, event_type String)\r\nENGINE = MergeTree ORDER BY (event_type, ts);\r\n\r\nCREATE MATERIALIZED VIEW mv TO events AS\r\nSELECT ts FROM events;\r\n\r\nALTER TABLE mv MODIFY QUERY\r\nWITH MY_CTE AS (SELECT ts FROM events)\r\nSELECT *\r\nFROM MY_CTE;\r\n\r\n24.1.5.6\r\n\r\nReceived exception from server (version 24.1.5):\r\nCode: 60. DB::Exception: Received from localhost:9000. DB::Exception: Table default.MY_CTE does not exist. (UNKNOWN_TABLE)\r\n(query: ALTER TABLE mv MODIFY QUERY\r\nWITH MY_CTE AS (SELECT ts FROM events)\r\nSELECT *\r\nFROM MY_CTE;)\r\n```\r\n\r\n**Expected behavior**\r\nShould successfully alter materialized view\r\n\r\n**Error message and/or stacktrace**\r\n```\r\nReceived exception from server (version 24.1.5):\r\nCode: 60. DB::Exception: Received from localhost:9000. DB::Exception: Table default.MY_CTE does not exist. (UNKNOWN_TABLE)\r\n(query: ALTER TABLE mv MODIFY QUERY\r\nWITH MY_CTE AS (SELECT ts FROM events)\r\nSELECT *\r\nFROM MY_CTE;)\r\n```\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2024-03-02T15:35:18Z",
  "modified_files": [
    "src/Interpreters/InterpreterAlterQuery.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03002_modify_query_cte.reference",
    "b/tests/queries/0_stateless/03002_modify_query_cte.sql"
  ]
}