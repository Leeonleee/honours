{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 25667,
  "instance_id": "ClickHouse__ClickHouse-25667",
  "issue_numbers": [
    "24971"
  ],
  "base_commit": "b1263c18ee15f0aa40c5f94dee11c7e1e0e27e74",
  "patch": "diff --git a/src/Storages/StorageDistributed.cpp b/src/Storages/StorageDistributed.cpp\nindex 8507198a7f6c..414f6cd20c42 100644\n--- a/src/Storages/StorageDistributed.cpp\n+++ b/src/Storages/StorageDistributed.cpp\n@@ -1155,6 +1155,7 @@ void StorageDistributed::renameOnDisk(const String & new_path_to_table_data)\n {\n     for (const DiskPtr & disk : data_volume->getDisks())\n     {\n+        disk->createDirectories(new_path_to_table_data);\n         disk->moveDirectory(relative_data_path, new_path_to_table_data);\n \n         auto new_path = disk->getPath() + new_path_to_table_data;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01155_rename_move_materialized_view.reference b/tests/queries/0_stateless/01155_rename_move_materialized_view.reference\nindex 942cedf86967..635fd16620d7 100644\n--- a/tests/queries/0_stateless/01155_rename_move_materialized_view.reference\n+++ b/tests/queries/0_stateless/01155_rename_move_materialized_view.reference\n@@ -1,10 +1,12 @@\n 1\t.inner.mv1\tbefore moving tablesmv1\n+1\tdist\tbefore moving tables\n 1\tdst\tbefore moving tablesmv2\n 1\tmv1\tbefore moving tablesmv1\n 1\tmv2\tbefore moving tablesmv2\n 1\tsrc\tbefore moving tables\n ordinary:\n .inner.mv1\n+dist\n dst\n mv1\n mv2\n@@ -12,12 +14,16 @@ src\n ordinary after rename:\n atomic after rename:\n .inner_id.\n+dist\n dst\n mv1\n mv2\n src\n 3\t.inner_id.\tafter renaming databasemv1\n 3\t.inner_id.\tbefore moving tablesmv1\n+3\tdist\tafter moving tables\n+3\tdist\tafter renaming database\n+3\tdist\tbefore moving tables\n 3\tdst\tafter renaming databasemv2\n 3\tdst\tbefore moving tablesmv2\n 3\tmv1\tafter renaming databasemv1\n@@ -28,6 +34,7 @@ src\n 3\tsrc\tafter renaming database\n 3\tsrc\tbefore moving tables\n .inner_id.\n+dist\n dst\n mv1\n mv2\n@@ -36,6 +43,10 @@ CREATE DATABASE test_01155_atomic\\nENGINE = Atomic\n 4\t.inner.mv1\tafter renaming databasemv1\n 4\t.inner.mv1\tafter renaming tablesmv1\n 4\t.inner.mv1\tbefore moving tablesmv1\n+4\tdist\tafter moving tables\n+4\tdist\tafter renaming database\n+4\tdist\tafter renaming tables\n+4\tdist\tbefore moving tables\n 4\tdst\tafter renaming databasemv2\n 4\tdst\tafter renaming tablesmv2\n 4\tdst\tbefore moving tablesmv2\n@@ -51,6 +62,7 @@ CREATE DATABASE test_01155_atomic\\nENGINE = Atomic\n 4\tsrc\tbefore moving tables\n test_01155_ordinary:\n .inner.mv1\n+dist\n dst\n mv1\n mv2\ndiff --git a/tests/queries/0_stateless/01155_rename_move_materialized_view.sql b/tests/queries/0_stateless/01155_rename_move_materialized_view.sql\nindex 2ede0fbcedfa..882be2702d81 100644\n--- a/tests/queries/0_stateless/01155_rename_move_materialized_view.sql\n+++ b/tests/queries/0_stateless/01155_rename_move_materialized_view.sql\n@@ -9,8 +9,11 @@ CREATE TABLE src (s String) ENGINE=MergeTree() PARTITION BY tuple() ORDER BY s;\n CREATE MATERIALIZED VIEW mv1 (s String) ENGINE=MergeTree() PARTITION BY tuple() ORDER BY s AS SELECT (*,).1 || 'mv1' as s FROM src;\n CREATE TABLE dst (s String) ENGINE=MergeTree() PARTITION BY tuple() ORDER BY s;\n CREATE MATERIALIZED VIEW mv2 TO dst (s String) AS SELECT (*,).1 || 'mv2' as s FROM src;\n-INSERT INTO src VALUES ('before moving tables');\n-SELECT 1, substr(_table, 1, 10), s FROM merge('test_01155_ordinary', '') ORDER BY _table, s;\n+CREATE TABLE dist (s String) Engine=Distributed(test_shard_localhost, test_01155_ordinary, src);\n+INSERT INTO dist VALUES ('before moving tables');\n+SYSTEM FLUSH DISTRIBUTED  dist;\n+-- FIXME Cannot convert column `1` because it is non constant in source stream but must be constant in result\n+SELECT materialize(1), substr(_table, 1, 10), s FROM merge('test_01155_ordinary', '') ORDER BY _table, s;\n \n -- Move tables with materialized views from Ordinary to Atomic\n SELECT 'ordinary:';\n@@ -19,6 +22,7 @@ RENAME TABLE test_01155_ordinary.mv1 TO test_01155_atomic.mv1;\n RENAME TABLE test_01155_ordinary.mv2 TO test_01155_atomic.mv2;\n RENAME TABLE test_01155_ordinary.dst TO test_01155_atomic.dst;\n RENAME TABLE test_01155_ordinary.src TO test_01155_atomic.src;\n+RENAME TABLE test_01155_ordinary.dist TO test_01155_atomic.dist;\n SELECT 'ordinary after rename:';\n SELECT substr(name, 1, 10) FROM system.tables WHERE database='test_01155_ordinary';\n SELECT 'atomic after rename:';\n@@ -27,13 +31,14 @@ DROP DATABASE test_01155_ordinary;\n USE default;\n \n INSERT INTO test_01155_atomic.src VALUES ('after moving tables');\n-SELECT 2, substr(_table, 1, 10), s FROM merge('test_01155_atomic', '') ORDER BY _table, s; -- { serverError 81 }\n+SELECT materialize(2), substr(_table, 1, 10), s FROM merge('test_01155_atomic', '') ORDER BY _table, s; -- { serverError 81 }\n \n RENAME DATABASE test_01155_atomic TO test_01155_ordinary;\n USE test_01155_ordinary;\n \n-INSERT INTO src VALUES ('after renaming database');\n-SELECT 3, substr(_table, 1, 10), s FROM merge('test_01155_ordinary', '') ORDER BY _table, s;\n+INSERT INTO dist VALUES ('after renaming database');\n+SYSTEM FLUSH DISTRIBUTED  dist;\n+SELECT materialize(3), substr(_table, 1, 10), s FROM merge('test_01155_ordinary', '') ORDER BY _table, s;\n \n SELECT substr(name, 1, 10) FROM system.tables WHERE database='test_01155_ordinary';\n \n@@ -47,9 +52,11 @@ RENAME TABLE test_01155_atomic.mv1 TO test_01155_ordinary.mv1;\n RENAME TABLE test_01155_atomic.mv2 TO test_01155_ordinary.mv2;\n RENAME TABLE test_01155_atomic.dst TO test_01155_ordinary.dst;\n RENAME TABLE test_01155_atomic.src TO test_01155_ordinary.src;\n+RENAME TABLE test_01155_atomic.dist TO test_01155_ordinary.dist;\n \n-INSERT INTO src VALUES ('after renaming tables');\n-SELECT 4, substr(_table, 1, 10), s FROM merge('test_01155_ordinary', '') ORDER BY _table, s;\n+INSERT INTO dist VALUES ('after renaming tables');\n+SYSTEM FLUSH DISTRIBUTED  dist;\n+SELECT materialize(4), substr(_table, 1, 10), s FROM merge('test_01155_ordinary', '') ORDER BY _table, s;\n SELECT 'test_01155_ordinary:';\n SHOW TABLES FROM test_01155_ordinary;\n SELECT 'test_01155_atomic:';\ndiff --git a/tests/queries/0_stateless/arcadia_skip_list.txt b/tests/queries/0_stateless/arcadia_skip_list.txt\nindex 0f3861c0bbe1..82d054a223ba 100644\n--- a/tests/queries/0_stateless/arcadia_skip_list.txt\n+++ b/tests/queries/0_stateless/arcadia_skip_list.txt\n@@ -92,6 +92,7 @@\n 01129_dict_get_join_lose_constness\n 01138_join_on_distributed_and_tmp\n 01153_attach_mv_uuid\n+01155_rename_move_materialized_view\n 01191_rename_dictionary\n 01200_mutations_memory_consumption\n 01211_optimize_skip_unused_shards_type_mismatch\n",
  "problem_statement": "Unable to move Distributed table from Ordinary database to Atomic\n**Describe the bug**\r\n\r\nCan't rename distributed table and move it from Ordinary to Atomic database\r\n\r\n**How to reproduce**\r\n\r\n```\r\nCREATE DATABASE atomic_database ON CLUSTER cluster_name ENGINE = Atomic\r\n```\r\n```\r\nCREATE DATABASE ordinary_database ON CLUSTER cluster_name ENGINE = Ordinary\r\n```\r\n\r\n```\r\nCREATE TABLE ordinary_database.t ON CLUSTER cluster_name\r\n...\r\nENGINE = ReplicatedMergeTree(...)\r\n...\r\n```\r\n\r\n```\r\nCREATE TABLE ordinary_database.distributed_table ON CLUSTER cluster_name AS ordinary_database.t \r\nENGINE = Distributed(cluster_name, ordinary_database, t)\r\n```\r\n\r\n```\r\nRENAME TABLE ordinary_database.distributed_table TO atomic_database.distributed_table\r\n\r\nQuery id: 7bd2101e-f78a-4584-8374-6e44a0bbf23f\r\n\r\n\r\n0 rows in set. Elapsed: 0.011 sec.\r\n\r\nReceived exception from server (version 21.5.6):\r\nCode: 1000. DB::Exception: Received from clickhouse-server:9000. DB::Exception: File not found: /var/lib/clickhouse/data/ordinary_database/distributed_table.\r\n```\r\nBut \r\n```\r\nls -lh /var/lib/clickhouse/data/ordinary_database\r\ntotal 0\r\ndrwxr-x---  2 ...  staff    64B Jun  4 18:19 distributed_table\r\ndrwxr-x---  4 ...  staff   128B Jun  4 18:18 t\r\n```\r\n\r\n**Does it reproduce on recent release?**\r\nChecked on 21.5.6.6 version\r\n\r\n\r\n**Expected behavior**\r\n\r\nFor example, renaming _Views_ works perfectly. I expect the same from the _Distributed_ table\r\n\n",
  "hints_text": "",
  "created_at": "2021-06-24T10:02:59Z",
  "modified_files": [
    "src/Storages/StorageDistributed.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01155_rename_move_materialized_view.reference",
    "tests/queries/0_stateless/01155_rename_move_materialized_view.sql",
    "tests/queries/0_stateless/arcadia_skip_list.txt"
  ]
}