diff --git a/tests/queries/0_stateless/02117_show_create_table_system.reference b/tests/queries/0_stateless/02117_show_create_table_system.reference
index 3fd431ed11ae..ee7cc3ca7fa1 100644
--- a/tests/queries/0_stateless/02117_show_create_table_system.reference
+++ b/tests/queries/0_stateless/02117_show_create_table_system.reference
@@ -282,7 +282,8 @@ CREATE TABLE system.formats
     `is_input` UInt8,
     `is_output` UInt8,
     `supports_parallel_parsing` UInt8,
-    `supports_parallel_formatting` UInt8
+    `supports_parallel_formatting` UInt8,
+    `is_tty_friendly` UInt8
 )
 ENGINE = SystemFormats
 COMMENT 'Contains a list of all the formats along with flags whether a format is suitable for input/output or whether it supports parallelization.'
diff --git a/tests/queries/0_stateless/02537_system_formats.reference b/tests/queries/0_stateless/02537_system_formats.reference
index 5987834d9b95..ab1da5a6107d 100644
--- a/tests/queries/0_stateless/02537_system_formats.reference
+++ b/tests/queries/0_stateless/02537_system_formats.reference
@@ -1,2 +1,2 @@
-CSV	1	1	1	1
-Native	1	1	0	0
+CSV	1	1	1	1	1
+Native	1	1	0	0	0
diff --git a/tests/queries/0_stateless/03237_sticky_error_client.expect b/tests/queries/0_stateless/03237_sticky_error_client.expect
index cfcda3819f50..879269a54e65 100755
--- a/tests/queries/0_stateless/03237_sticky_error_client.expect
+++ b/tests/queries/0_stateless/03237_sticky_error_client.expect
@@ -1,4 +1,5 @@
 #!/usr/bin/expect -f
+# Tags: no-fasttest
 
 set basedir [file dirname $argv0]
 set basename [file tail $argv0]
@@ -25,6 +26,8 @@ spawn bash -c "source $basedir/../shell_config.sh ; \$CLICKHOUSE_CLIENT_BINARY \
 
 expect ":) "
 send -- "SELECT generateUUIDv4() FORMAT Arrow;\r"
+expect "Do you want to output it anyway\?"
+send -- "y\r"
 expect ":) "
 send -- "SELECT 1;\r"
 expect "1 row in set."
diff --git a/tests/queries/0_stateless/03292_format_tty_friendly.reference b/tests/queries/0_stateless/03292_format_tty_friendly.reference
new file mode 100644
index 000000000000..339a01fe257d
--- /dev/null
+++ b/tests/queries/0_stateless/03292_format_tty_friendly.reference
@@ -0,0 +1,23 @@
+Arrow	1	0
+ArrowStream	1	0
+Avro	1	0
+BSONEachRow	1	0
+CapnProto	1	0
+JSON	1	1
+JSONEachRow	1	1
+MsgPack	1	0
+MySQLWire	1	0
+Native	1	0
+Npy	1	0
+ODBCDriver2	1	0
+ORC	1	0
+Parquet	1	0
+PostgreSQLWire	1	0
+Pretty	1	1
+Protobuf	1	0
+ProtobufList	1	0
+ProtobufSingle	1	0
+RowBinary	1	0
+RowBinaryWithNames	1	0
+RowBinaryWithNamesAndTypes	1	0
+TSV	1	1
diff --git a/tests/queries/0_stateless/03292_format_tty_friendly.sql b/tests/queries/0_stateless/03292_format_tty_friendly.sql
new file mode 100644
index 000000000000..5ba6f8271e09
--- /dev/null
+++ b/tests/queries/0_stateless/03292_format_tty_friendly.sql
@@ -0,0 +1,5 @@
+-- Tags: no-fasttest
+
+SELECT name, is_output, is_tty_friendly FROM system.formats WHERE name IN ('Pretty', 'TSV', 'JSON', 'JSONEachRow',
+'ODBCDriver2', 'Parquet', 'Arrow', 'BSONEachRow', 'Protobuf', 'ProtobufList', 'ProtobufSingle', 'CapnProto', 'Npy', 'ArrowStream', 'ORC', 'MsgPack', 'Avro', 'RowBinary', 'RowBinaryWithNames', 'RowBinaryWithNamesAndTypes', 'Native', 'MySQLWire', 'PostgreSQLWire')
+ORDER BY name;
diff --git a/tests/queries/0_stateless/03293_tty_binary_confirmation.expect b/tests/queries/0_stateless/03293_tty_binary_confirmation.expect
new file mode 100755
index 000000000000..bf0b50cc7616
--- /dev/null
+++ b/tests/queries/0_stateless/03293_tty_binary_confirmation.expect
@@ -0,0 +1,61 @@
+#!/usr/bin/expect -f
+# Tags: no-fasttest
+
+set basedir [file dirname $argv0]
+set basename [file tail $argv0]
+if {[info exists env(CLICKHOUSE_TMP)]} {
+    set CLICKHOUSE_TMP $env(CLICKHOUSE_TMP)
+} else {
+    set CLICKHOUSE_TMP "."
+}
+exp_internal -f $CLICKHOUSE_TMP/$basename.debuglog 0
+set history_file $CLICKHOUSE_TMP/$basename.history
+
+log_user 0
+set timeout 60
+match_max 100000
+
+expect_after {
+    # Do not ignore eof from expect
+    -i $any_spawn_id eof { exp_continue }
+    # A default timeout action is to do nothing, change it to fail
+    -i $any_spawn_id timeout { exit 1 }
+}
+
+# useful debugging configuration
+# exp_internal 1
+
+spawn bash -c "source $basedir/../shell_config.sh ; \$CLICKHOUSE_CLIENT_BINARY \$CLICKHOUSE_CLIENT_OPT --disable_suggestion --enable-progress-table-toggle=0 --highlight 0 --history_file=$history_file"
+expect ":) "
+
+# Make a query
+send -- "SELECT 1 FORMAT Parquet\r"
+expect "is binary and could produce side-effects"
+expect "Do you want to output it anyway\?"
+send -- "y\r"
+
+expect "PAR"
+expect ":) "
+
+send -- "SELECT 1 FORMAT Parquet\r"
+expect "is binary and could produce side-effects"
+expect "Do you want to output it anyway\?"
+send -- "n\r"
+
+expect {
+    "PAR" { exit 1 }
+    ":) " { send -- "\r" }
+}
+
+send -- "SELECT 1 FORMAT Parquet\r"
+expect "is binary and could produce side-effects"
+expect "Do you want to output it anyway\?"
+send -- "\r"
+
+expect {
+    "PAR" { exit 1 }
+    ":) " { send -- "\r" }
+}
+
+send -- "exit\r"
+expect eof
diff --git a/tests/queries/0_stateless/03293_tty_binary_confirmation.reference b/tests/queries/0_stateless/03293_tty_binary_confirmation.reference
new file mode 100644
index 000000000000..e69de29bb2d1
