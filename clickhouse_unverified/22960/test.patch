diff --git a/tests/queries/0_stateless/01802_dict_sparse_hashed_bytes_allocated.reference b/tests/queries/0_stateless/01802_dict_sparse_hashed_bytes_allocated.reference
deleted file mode 100644
index c4844ab2c99e..000000000000
--- a/tests/queries/0_stateless/01802_dict_sparse_hashed_bytes_allocated.reference
+++ /dev/null
@@ -1,1 +0,0 @@
-4422
diff --git a/tests/queries/0_stateless/01802_dict_sparse_hashed_bytes_allocated.sql b/tests/queries/0_stateless/01802_dict_sparse_hashed_bytes_allocated.sql
deleted file mode 100644
index 1b69de273a2f..000000000000
--- a/tests/queries/0_stateless/01802_dict_sparse_hashed_bytes_allocated.sql
+++ /dev/null
@@ -1,30 +0,0 @@
-DROP TABLE IF EXISTS data_01802;
-DROP DICTIONARY IF EXISTS dict_01802;
-
-CREATE TABLE data_01802
-(
-   id UInt64,
-   value UInt16
-)
-ENGINE = Memory();
-
-INSERT INTO data_01802 VALUES(0, 0);
-INSERT INTO data_01802 VALUES(1, 0);
-INSERT INTO data_01802 VALUES(2, 0);
-
-CREATE DICTIONARY dict_01802
-(
-   id UInt64,
-   value UInt16
-)
-PRIMARY KEY id
-SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'data_01802'))
-LIFETIME(MIN 1 MAX 1000)
-LAYOUT(SPARSE_HASHED());
-
-SYSTEM RELOAD DICTIONARY dict_01802;
-
-SELECT bytes_allocated FROM system.dictionaries WHERE database = currentDatabase() AND name = 'dict_01802';
-
-DROP TABLE data_01802;
-DROP DICTIONARY dict_01802;
diff --git a/tests/queries/0_stateless/01804_dictionary_decimal256_type.reference b/tests/queries/0_stateless/01804_dictionary_decimal256_type.reference
new file mode 100644
index 000000000000..1af9d45f72b4
--- /dev/null
+++ b/tests/queries/0_stateless/01804_dictionary_decimal256_type.reference
@@ -0,0 +1,14 @@
+Flat dictionary
+5.00000
+Hashed dictionary
+5.00000
+Cache dictionary
+5.00000
+SSDCache dictionary
+5.00000
+Direct dictionary
+5.00000
+IPTrie dictionary
+5.00000
+Polygon dictionary
+5.00000
diff --git a/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql b/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql
new file mode 100644
index 000000000000..cc0ec598b70f
--- /dev/null
+++ b/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql
@@ -0,0 +1,141 @@
+SET allow_experimental_bigint_types = 1;
+
+DROP TABLE IF EXISTS dictionary_decimal_source_table;
+CREATE TABLE dictionary_decimal_source_table
+(
+    id UInt64,
+    decimal_value Decimal256(5)
+) ENGINE = TinyLog;
+
+INSERT INTO dictionary_decimal_source_table VALUES (1, 5.0);
+
+DROP DICTIONARY IF EXISTS flat_dictionary;
+CREATE DICTIONARY flat_dictionary
+(
+    id UInt64,
+    decimal_value Decimal256(5)
+)
+PRIMARY KEY id
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))
+LIFETIME(MIN 1 MAX 1000)
+LAYOUT(FLAT());
+
+SELECT 'Flat dictionary';
+SELECT dictGet('flat_dictionary', 'decimal_value', toUInt64(1));
+
+DROP DICTIONARY IF EXISTS hashed_dictionary;
+CREATE DICTIONARY hashed_dictionary
+(
+    id UInt64,
+    decimal_value Decimal256(5)
+)
+PRIMARY KEY id
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))
+LIFETIME(MIN 1 MAX 1000)
+LAYOUT(HASHED());
+
+SELECT 'Hashed dictionary';
+SELECT dictGet('hashed_dictionary', 'decimal_value', toUInt64(1));
+
+DROP DICTIONARY hashed_dictionary;
+
+DROP DICTIONARY IF EXISTS cache_dictionary;
+CREATE DICTIONARY cache_dictionary
+(
+    id UInt64,
+    decimal_value Decimal256(5)
+)
+PRIMARY KEY id
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))
+LIFETIME(MIN 1 MAX 1000)
+LAYOUT(CACHE(SIZE_IN_CELLS 10));
+
+SELECT 'Cache dictionary';
+SELECT dictGet('cache_dictionary', 'decimal_value', toUInt64(1));
+
+DROP DICTIONARY cache_dictionary;
+
+DROP DICTIONARY IF EXISTS ssd_cache_dictionary;
+CREATE DICTIONARY ssd_cache_dictionary
+(
+    id UInt64,
+    decimal_value Decimal256(5)
+)
+PRIMARY KEY id
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))
+LIFETIME(MIN 1 MAX 1000)
+LAYOUT(SSD_CACHE(BLOCK_SIZE 4096 FILE_SIZE 8192 PATH '/var/lib/clickhouse/clickhouse_dicts/0d'));
+
+SELECT 'SSDCache dictionary';
+SELECT dictGet('ssd_cache_dictionary', 'decimal_value', toUInt64(1));
+
+DROP DICTIONARY ssd_cache_dictionary;
+
+DROP DICTIONARY IF EXISTS direct_dictionary;
+CREATE DICTIONARY direct_dictionary
+(
+    id UInt64,
+    decimal_value Decimal256(5)
+)
+PRIMARY KEY id
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))
+LAYOUT(DIRECT());
+
+SELECT 'Direct dictionary';
+SELECT dictGet('direct_dictionary', 'decimal_value', toUInt64(1));
+
+DROP DICTIONARY direct_dictionary;
+
+DROP TABLE dictionary_decimal_source_table;
+
+DROP TABLE IF EXISTS ip_trie_dictionary_decimal_source_table;
+CREATE TABLE ip_trie_dictionary_decimal_source_table
+(
+    prefix String,
+    decimal_value Decimal256(5)
+) ENGINE = TinyLog;
+
+INSERT INTO ip_trie_dictionary_decimal_source_table VALUES ('127.0.0.0', 5.0);
+
+DROP DICTIONARY IF EXISTS ip_trie_dictionary;
+CREATE DICTIONARY ip_trie_dictionary
+(
+    prefix String,
+    decimal_value Decimal256(5)
+)
+PRIMARY KEY prefix
+SOURCE(CLICKHOUSE(HOST 'localhost' port tcpPort() TABLE 'ip_trie_dictionary_decimal_source_table'))
+LIFETIME(MIN 10 MAX 1000)
+LAYOUT(IP_TRIE());
+
+SELECT 'IPTrie dictionary';
+SELECT dictGet('ip_trie_dictionary', 'decimal_value', tuple(IPv4StringToNum('127.0.0.0')));
+
+DROP DICTIONARY ip_trie_dictionary;
+DROP TABLE ip_trie_dictionary_decimal_source_table;
+
+DROP TABLE IF EXISTS dictionary_decimal_polygons_source_table;
+CREATE TABLE dictionary_decimal_polygons_source_table
+(
+    key Array(Array(Array(Tuple(Float64, Float64)))),
+    decimal_value Decimal256(5)
+) ENGINE = TinyLog;
+
+INSERT INTO dictionary_decimal_polygons_source_table VALUES ([[[(0, 0), (0, 1), (1, 1), (1, 0)]]], 5.0);
+
+DROP DICTIONARY IF EXISTS polygon_dictionary;
+CREATE DICTIONARY polygon_dictionary
+(
+    key Array(Array(Array(Tuple(Float64, Float64)))),
+    decimal_value Decimal256(5)
+)
+PRIMARY KEY key
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_polygons_source_table'))
+LIFETIME(MIN 0 MAX 1000)
+LAYOUT(POLYGON());
+
+SELECT 'Polygon dictionary';
+SELECT dictGet('polygon_dictionary', 'decimal_value', tuple(0.5, 0.5));
+
+DROP DICTIONARY polygon_dictionary;
+DROP TABLE dictionary_decimal_polygons_source_table;
diff --git a/tests/queries/0_stateless/arcadia_skip_list.txt b/tests/queries/0_stateless/arcadia_skip_list.txt
index 7dfbce1e6f0b..c8a0971bb282 100644
--- a/tests/queries/0_stateless/arcadia_skip_list.txt
+++ b/tests/queries/0_stateless/arcadia_skip_list.txt
@@ -228,3 +228,4 @@
 01790_dist_INSERT_block_structure_mismatch_types_and_names
 01791_dist_INSERT_block_structure_mismatch
 01801_distinct_group_by_shard
+01804_dictionary_decimal256_type
diff --git a/tests/queries/skip_list.json b/tests/queries/skip_list.json
index c1a1cd026722..d41a41bd5244 100644
--- a/tests/queries/skip_list.json
+++ b/tests/queries/skip_list.json
@@ -700,6 +700,7 @@
         "01760_polygon_dictionaries",
         "01778_hierarchical_dictionaries",
         "01780_clickhouse_dictionary_source_loop",
-        "01785_dictionary_element_count"
+        "01785_dictionary_element_count",
+        "01804_dictionary_decimal256_type"
     ]
 }
