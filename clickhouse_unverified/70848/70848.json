{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 70848,
  "instance_id": "ClickHouse__ClickHouse-70848",
  "issue_numbers": [
    "70819"
  ],
  "base_commit": "f41d604f28f8937fb5f2445025141d5e5ad47c77",
  "patch": "diff --git a/src/Interpreters/PartLog.h b/src/Interpreters/PartLog.h\nindex 6dc3116ad489..6d83b02b3d8d 100644\n--- a/src/Interpreters/PartLog.h\n+++ b/src/Interpreters/PartLog.h\n@@ -135,7 +135,7 @@ class PartLog : public SystemLog<PartLogElement>\n \n     static PartLogEntries createPartLogEntries(const MutableDataPartsVector & parts, UInt64 elapsed_ns, ProfileCountersSnapshotPtr profile_counters = {});\n \n-    /// Add a record about creation of new part.\n+    /// Add a record about creation of a new part.\n     static bool addNewPart(ContextPtr context, const PartLogEntry & part,\n                            const ExecutionStatus & execution_status = {});\n \ndiff --git a/src/Storages/MergeTree/MergeTreeData.cpp b/src/Storages/MergeTree/MergeTreeData.cpp\nindex 89a8a8602cdc..715b2172caaf 100644\n--- a/src/Storages/MergeTree/MergeTreeData.cpp\n+++ b/src/Storages/MergeTree/MergeTreeData.cpp\n@@ -2666,6 +2666,10 @@ void MergeTreeData::removePartsFinally(const MergeTreeData::DataPartsVector & pa\n         for (const auto & part : parts)\n         {\n             part_log_elem.partition_id = part->info.partition_id;\n+            {\n+                WriteBufferFromString out(part_log_elem.partition);\n+                part->partition.serializeText(part->storage, out, {});\n+            }\n             part_log_elem.part_name = part->name;\n             part_log_elem.bytes_compressed_on_disk = part->getBytesOnDisk();\n             part_log_elem.bytes_uncompressed = part->getBytesUncompressedOnDisk();\n@@ -7920,6 +7924,20 @@ try\n     part_log_elem.table_name = table_id.table_name;\n     part_log_elem.table_uuid = table_id.uuid;\n     part_log_elem.partition_id = MergeTreePartInfo::fromPartName(new_part_name, format_version).partition_id;\n+\n+    {\n+        const DataPart * result_or_source_data_part = nullptr;\n+        if (result_part)\n+            result_or_source_data_part = result_part.get();\n+        else if (!source_parts.empty())\n+            result_or_source_data_part = source_parts.at(0).get();\n+        if (result_or_source_data_part)\n+        {\n+            WriteBufferFromString out(part_log_elem.partition);\n+            result_or_source_data_part->partition.serializeText(*this, out, {});\n+        }\n+    }\n+\n     part_log_elem.part_name = new_part_name;\n \n     if (result_part)\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03254_part_log_partition_column_is_set.reference b/tests/queries/0_stateless/03254_part_log_partition_column_is_set.reference\nnew file mode 100644\nindex 000000000000..c355e3b06a67\n--- /dev/null\n+++ b/tests/queries/0_stateless/03254_part_log_partition_column_is_set.reference\n@@ -0,0 +1,3 @@\n+1\t1\t11\n+1\t2\t12\n+0\ndiff --git a/tests/queries/0_stateless/03254_part_log_partition_column_is_set.sql b/tests/queries/0_stateless/03254_part_log_partition_column_is_set.sql\nnew file mode 100644\nindex 000000000000..32cab8f8dd86\n--- /dev/null\n+++ b/tests/queries/0_stateless/03254_part_log_partition_column_is_set.sql\n@@ -0,0 +1,16 @@\n+DROP TABLE IF EXISTS test;\n+CREATE TABLE test (x UInt8, y UInt8, z String DEFAULT toString(x)) PARTITION BY x ORDER BY x;\n+INSERT INTO test (x, y) VALUES (1, 1);\n+INSERT INTO test (x, y) VALUES (1, 2);\n+OPTIMIZE TABLE test FINAL;\n+INSERT INTO test (x, y) VALUES (2, 1);\n+ALTER TABLE test DROP PARTITION 2;\n+SET mutations_sync = 1;\n+ALTER TABLE test UPDATE z = x || y WHERE 1;\n+SELECT * FROM test ORDER BY ALL;\n+TRUNCATE TABLE test;\n+DROP TABLE test SYNC;\n+SYSTEM FLUSH LOGS;\n+\n+-- SELECT * FROM system.part_log WHERE database = currentDatabase() FORMAT Vertical;\n+SELECT DISTINCT throwIf(empty(partition)) FROM system.part_log WHERE database = currentDatabase();\n",
  "problem_statement": "`system.part_log.partition` column is not set for most of event types.\nThe bug was introduced here: https://github.com/ClickHouse/ClickHouse/pull/48990\n",
  "hints_text": "",
  "created_at": "2024-10-18T22:35:30Z"
}