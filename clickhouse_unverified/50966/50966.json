{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 50966,
  "instance_id": "ClickHouse__ClickHouse-50966",
  "issue_numbers": [
    "50459"
  ],
  "base_commit": "badde0fde2a2f8134f8491dd4b28ead45d016d1f",
  "patch": "diff --git a/programs/client/Client.cpp b/programs/client/Client.cpp\nindex 6c3df3520e91..54b091700b2f 100644\n--- a/programs/client/Client.cpp\n+++ b/programs/client/Client.cpp\n@@ -977,13 +977,7 @@ void Client::addOptions(OptionsDescription & options_description)\n         (\"connection\", po::value<std::string>(), \"connection to use (from the client config), by default connection name is hostname\")\n         (\"secure,s\", \"Use TLS connection\")\n         (\"user,u\", po::value<std::string>()->default_value(\"default\"), \"user\")\n-        /** If \"--password [value]\" is used but the value is omitted, the bad argument exception will be thrown.\n-            * implicit_value is used to avoid this exception (to allow user to type just \"--password\")\n-            * Since currently boost provides no way to check if a value has been set implicitly for an option,\n-            * the \"\\n\" is used to distinguish this case because there is hardly a chance a user would use \"\\n\"\n-            * as the password.\n-            */\n-        (\"password\", po::value<std::string>()->implicit_value(\"\\n\", \"\"), \"password\")\n+        (\"password\", po::value<std::string>(), \"password\")\n         (\"ask-password\", \"ask-password\")\n         (\"quota_key\", po::value<std::string>(), \"A string to differentiate quotas when the user have keyed quotas configured on server\")\n \n@@ -1397,6 +1391,14 @@ void Client::readArguments(\n                 arg = argv[arg_num];\n                 addMultiquery(arg, common_arguments);\n             }\n+            else if (arg == \"--password\" && ((arg_num + 1) >= argc || std::string_view(argv[arg_num + 1]).starts_with('-')))\n+            {\n+                common_arguments.emplace_back(arg);\n+                /// No password was provided by user. Add '\\n' as implicit password,\n+                /// which encodes that client should ask user for the password.\n+                /// '\\n' is used because there is hardly a chance that a user would use '\\n' as a password.\n+                common_arguments.emplace_back(\"\\n\");\n+            }\n             else\n                 common_arguments.emplace_back(arg);\n         }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01317_no_password_in_command_line.reference b/tests/queries/0_stateless/01317_no_password_in_command_line.reference\nindex e69de29bb2d1..8f2f637d5e37 100644\n--- a/tests/queries/0_stateless/01317_no_password_in_command_line.reference\n+++ b/tests/queries/0_stateless/01317_no_password_in_command_line.reference\n@@ -0,0 +1,1 @@\n+Bad arguments\ndiff --git a/tests/queries/0_stateless/01317_no_password_in_command_line.sh b/tests/queries/0_stateless/01317_no_password_in_command_line.sh\nindex 7f2e91201a32..fc5b89976368 100755\n--- a/tests/queries/0_stateless/01317_no_password_in_command_line.sh\n+++ b/tests/queries/0_stateless/01317_no_password_in_command_line.sh\n@@ -45,3 +45,5 @@ ps u --no-header $bg_query | grep -F -- '--password' | grep -F hello ||:\n grep -F -- '--password' < \"/proc/$bg_query/comm\" | grep -F hello ||:\n $CLICKHOUSE_CLIENT --format Null --param_query_id \"$query_id\" -q \"KILL QUERY WHERE query_id = {query_id:String} SYNC\"\n wait\n+\n+$CLICKHOUSE_CLIENT --user \"$user\" --password=hello --password -q 'select currentUser()' 2>&1 | grep -o 'Bad arguments'\n",
  "problem_statement": "Specifying --password \"secret\" --password in client asks user to enter password\nClickHouse client version 23.5.1.1\r\n\r\n**Describe the unexpected behavior.**\r\nSpecifying `--password \"secret\" --password` asks the user to enter the password instead of failing in the console output.\r\n\r\n**Repro**\r\n`clickhouse-client --password \"secret\" --password`\r\n\r\n**Expected behavior**\r\nAn error: `Bad arguments: option '--password' cannot be specified more than once`\r\n\r\n**Error message and/or stacktrace**\r\nNo error message. The client just ignores the \"secret\" password, and uses implicit_value \"\" from the boost options configuration.\r\nIf the password is an empty string, then the client asks the user to enter the password (even if the user does not have a password).\n",
  "hints_text": "",
  "created_at": "2023-06-14T02:28:05Z"
}