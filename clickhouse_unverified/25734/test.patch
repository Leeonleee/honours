diff --git a/src/Storages/tests/gtest_transform_query_for_external_database.cpp b/src/Storages/tests/gtest_transform_query_for_external_database.cpp
index 1d4cad576fac..b2621445147b 100644
--- a/src/Storages/tests/gtest_transform_query_for_external_database.cpp
+++ b/src/Storages/tests/gtest_transform_query_for_external_database.cpp
@@ -104,7 +104,7 @@ static void check(
     SelectQueryInfo query_info;
     SelectQueryOptions select_options;
     query_info.syntax_analyzer_result
-        = TreeRewriter(state.context).analyzeSelect(ast, state.getColumns(), select_options, state.getTables(table_num));
+        = TreeRewriter(state.context).analyzeSelect(ast, DB::TreeRewriterResult(state.getColumns()), select_options, state.getTables(table_num));
     query_info.query = ast;
     std::string transformed_query = transformQueryForExternalDatabase(
         query_info, state.getColumns(), IdentifierQuotingStyle::DoubleQuotes, "test", "table", state.context);
diff --git a/tests/queries/0_stateless/00561_storage_join.sql b/tests/queries/0_stateless/00561_storage_join.sql
index 01e66d0c3808..ad4fab09c208 100644
--- a/tests/queries/0_stateless/00561_storage_join.sql
+++ b/tests/queries/0_stateless/00561_storage_join.sql
@@ -25,24 +25,17 @@ insert into joinbug_join (id, id2, val, val2, created)
 select id, id2, val, val2, created
 from joinbug;
 
-/* expected */
-select *
-from joinbug;
+select * from joinbug;
 
-/* wtf */
 select id, id2, val, val2, created
-from (
-   SELECT toUInt64(arrayJoin(range(50))) AS id2
-) js1
+from ( SELECT toUInt64(arrayJoin(range(50))) AS id2 ) js1
 SEMI LEFT JOIN joinbug_join using id2;
 
-/* type conversion */
-SELECT * FROM
-(
-    SELECT toUInt32(11) AS id2
-) AS js1
-SEMI LEFT JOIN joinbug_join USING (id2);
+-- type conversion
+SELECT * FROM ( SELECT toUInt32(11) AS id2 ) AS js1 SEMI LEFT JOIN joinbug_join USING (id2);
 
+-- can't convert right side in case on storage join
+SELECT * FROM ( SELECT toInt64(11) AS id2 ) AS js1 SEMI LEFT JOIN joinbug_join USING (id2); -- { serverError 53 }
 
 DROP TABLE joinbug;
 DROP TABLE joinbug_join;
diff --git a/tests/queries/0_stateless/00855_join_with_array_join.reference b/tests/queries/0_stateless/00855_join_with_array_join.reference
index 88f9253500c4..acb0240fbd27 100644
--- a/tests/queries/0_stateless/00855_join_with_array_join.reference
+++ b/tests/queries/0_stateless/00855_join_with_array_join.reference
@@ -9,3 +9,12 @@
 2	2	a2
 1	0	
 2	2	a2
+0	0
+0	0
+0	0
+0	0
+0
+0
+0
+0
+0	Int64	Int64
diff --git a/tests/queries/0_stateless/00855_join_with_array_join.sql b/tests/queries/0_stateless/00855_join_with_array_join.sql
index 506d94791105..642f90d4c6cb 100644
--- a/tests/queries/0_stateless/00855_join_with_array_join.sql
+++ b/tests/queries/0_stateless/00855_join_with_array_join.sql
@@ -30,6 +30,22 @@ SELECT did, id, name FROM f LEFT ARRAY JOIN d_ids as did LEFT JOIN d ON d.id = d
 -- name clash, doesn't work yet
 SELECT id, name FROM f LEFT ARRAY JOIN d_ids as id LEFT JOIN d ON d.id = id ORDER BY id; -- { serverError 403 }
 
+SELECT * FROM ( SELECT [dummy, dummy] AS dummy FROM system.one ) AS x ARRAY JOIN dummy
+JOIN system.one AS y ON x.dummy == y.dummy;
+
+SELECT * FROM ( SELECT [dummy, dummy] AS dummy FROM system.one ) AS x ARRAY JOIN dummy
+JOIN system.one AS y ON x.dummy + 1 == y.dummy + 1;
+
+SELECT * FROM ( SELECT [dummy, dummy] AS dummy FROM system.one ) AS x ARRAY JOIN dummy
+JOIN system.one AS y USING dummy;
+
+SELECT * FROM ( SELECT [toUInt32(dummy), toUInt32(dummy)] AS dummy FROM system.one ) AS x ARRAY JOIN dummy
+JOIN (select toInt32(dummy) as dummy from system.one ) AS y USING dummy;
+
+SELECT dummy > 0, toTypeName(any(dummy)), any(toTypeName(dummy)) 
+FROM ( SELECT [toUInt32(dummy), toUInt32(dummy)] AS dummy FROM system.one ) AS x ARRAY JOIN dummy
+JOIN ( SELECT toInt32(dummy) AS dummy FROM system.one ) AS y USING dummy GROUP BY (dummy > 0);
+
 DROP TABLE IF EXISTS f;
 DROP TABLE IF EXISTS d;
 
