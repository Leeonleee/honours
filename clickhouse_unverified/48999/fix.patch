diff --git a/src/Interpreters/Aggregator.h b/src/Interpreters/Aggregator.h
index 5fb94c5f4e80..fad24adae2cc 100644
--- a/src/Interpreters/Aggregator.h
+++ b/src/Interpreters/Aggregator.h
@@ -300,11 +300,13 @@ struct AggregationMethodStringNoCache
     {
         if constexpr (nullable)
         {
-            static_cast<ColumnNullable *>(key_columns[0])->insertData(key.data, key.size);
+            ColumnNullable & column_nullable = assert_cast<ColumnNullable &>(*key_columns[0]);
+            assert_cast<ColumnString &>(column_nullable.getNestedColumn()).insertData(key.data, key.size);
+            column_nullable.getNullMapData().push_back(0);
         }
         else
         {
-            static_cast<ColumnString *>(key_columns[0])->insertData(key.data, key.size);
+            assert_cast<ColumnString &>(*key_columns[0]).insertData(key.data, key.size);
         }
     }
 };
@@ -338,7 +340,7 @@ struct AggregationMethodFixedString
 
     static void insertKeyIntoColumns(StringRef key, std::vector<IColumn *> & key_columns, const Sizes &)
     {
-        static_cast<ColumnFixedString *>(key_columns[0])->insertData(key.data, key.size);
+        assert_cast<ColumnFixedString &>(*key_columns[0]).insertData(key.data, key.size);
     }
 };
 
@@ -372,11 +374,11 @@ struct AggregationMethodFixedStringNoCache
     {
         if constexpr (nullable)
         {
-            static_cast<ColumnNullable *>(key_columns[0])->insertData(key.data, key.size);
+            assert_cast<ColumnNullable &>(*key_columns[0]).insertData(key.data, key.size);
         }
         else
         {
-            static_cast<ColumnFixedString *>(key_columns[0])->insertData(key.data, key.size);
+            assert_cast<ColumnFixedString &>(*key_columns[0]).insertData(key.data, key.size);
         }
     }
 };
