{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 48999,
  "instance_id": "ClickHouse__ClickHouse-48999",
  "issue_numbers": [
    "48997"
  ],
  "base_commit": "6f5945175c60b1b25ac2ee7504079ee288f160ba",
  "patch": "diff --git a/src/Interpreters/Aggregator.h b/src/Interpreters/Aggregator.h\nindex 5fb94c5f4e80..fad24adae2cc 100644\n--- a/src/Interpreters/Aggregator.h\n+++ b/src/Interpreters/Aggregator.h\n@@ -300,11 +300,13 @@ struct AggregationMethodStringNoCache\n     {\n         if constexpr (nullable)\n         {\n-            static_cast<ColumnNullable *>(key_columns[0])->insertData(key.data, key.size);\n+            ColumnNullable & column_nullable = assert_cast<ColumnNullable &>(*key_columns[0]);\n+            assert_cast<ColumnString &>(column_nullable.getNestedColumn()).insertData(key.data, key.size);\n+            column_nullable.getNullMapData().push_back(0);\n         }\n         else\n         {\n-            static_cast<ColumnString *>(key_columns[0])->insertData(key.data, key.size);\n+            assert_cast<ColumnString &>(*key_columns[0]).insertData(key.data, key.size);\n         }\n     }\n };\n@@ -338,7 +340,7 @@ struct AggregationMethodFixedString\n \n     static void insertKeyIntoColumns(StringRef key, std::vector<IColumn *> & key_columns, const Sizes &)\n     {\n-        static_cast<ColumnFixedString *>(key_columns[0])->insertData(key.data, key.size);\n+        assert_cast<ColumnFixedString &>(*key_columns[0]).insertData(key.data, key.size);\n     }\n };\n \n@@ -372,11 +374,11 @@ struct AggregationMethodFixedStringNoCache\n     {\n         if constexpr (nullable)\n         {\n-            static_cast<ColumnNullable *>(key_columns[0])->insertData(key.data, key.size);\n+            assert_cast<ColumnNullable &>(*key_columns[0]).insertData(key.data, key.size);\n         }\n         else\n         {\n-            static_cast<ColumnFixedString *>(key_columns[0])->insertData(key.data, key.size);\n+            assert_cast<ColumnFixedString &>(*key_columns[0]).insertData(key.data, key.size);\n         }\n     }\n };\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02719_aggregate_with_empty_string_key.reference b/tests/queries/0_stateless/02719_aggregate_with_empty_string_key.reference\nnew file mode 100644\nindex 000000000000..e9b4456e5c74\n--- /dev/null\n+++ b/tests/queries/0_stateless/02719_aggregate_with_empty_string_key.reference\n@@ -0,0 +1,4 @@\n+-----------String------------\n+\\N\t1\n+\t2\n+s\t1\ndiff --git a/tests/queries/0_stateless/02719_aggregate_with_empty_string_key.sql b/tests/queries/0_stateless/02719_aggregate_with_empty_string_key.sql\nnew file mode 100644\nindex 000000000000..7930b2ca0ccd\n--- /dev/null\n+++ b/tests/queries/0_stateless/02719_aggregate_with_empty_string_key.sql\n@@ -0,0 +1,7 @@\n+drop table if exists test ;\n+create table test(str Nullable(String), i Int64) engine=Memory();\n+insert into test values(null, 1),('', 2),('s', 1);\n+select '-----------String------------';\n+select str ,max(i) from test group by str;\n+\n+drop table test;\n",
  "problem_statement": "When key is Nullable(String), the aggregate operator converts the empty string to null\n> You have to provide the following information whenever possible.\r\n\r\n**Describe what's wrong**\r\n\r\n![image](https://user-images.githubusercontent.com/16730247/233553522-a94eecdc-9af9-4ada-afe0-a7333503c217.png)\r\n\r\n**Does it reproduce on recent release?**\r\n\r\n23.3\r\n\r\n**Enable crash reporting**\r\n\r\n> If possible, change \"enabled\" to true in \"send_crash_reports\" section in `config.xml`:\r\n\r\n```\r\n<send_crash_reports>\r\n        <!-- Changing <enabled> to true allows sending crash reports to -->\r\n        <!-- the ClickHouse core developers team via Sentry https://sentry.io -->\r\n        <enabled>false</enabled>\r\n```\r\n\r\n**How to reproduce**\r\n\r\nhttps://fiddle.clickhouse.com/a4be8131-1332-4f87-b342-853f349f43b2\r\n\r\n**Expected behavior**\r\n\r\n> A clear and concise description of what you expected to happen.\r\n\r\n**Error message and/or stacktrace**\r\n\r\n> If applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\n\r\n> Add any other context about the problem here.\r\n\n",
  "hints_text": "I'm working on this issue",
  "created_at": "2023-04-21T07:24:58Z"
}