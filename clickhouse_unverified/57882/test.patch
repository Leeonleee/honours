diff --git a/tests/queries/0_stateless/02943_tokenbf_and_ngrambf_indexes_support_match_function.reference b/tests/queries/0_stateless/02943_tokenbf_and_ngrambf_indexes_support_match_function.reference
new file mode 100644
index 000000000000..1cf1644fe0ab
--- /dev/null
+++ b/tests/queries/0_stateless/02943_tokenbf_and_ngrambf_indexes_support_match_function.reference
@@ -0,0 +1,38 @@
+1	Hello ClickHouse
+2	Hello World
+1	Hello ClickHouse
+2	Hello World
+          Granules: 6/6
+          Granules: 2/6
+            Granules: 6/6
+            Granules: 2/6
+          Granules: 6/6
+          Granules: 2/6
+            Granules: 6/6
+            Granules: 2/6
+---
+1	Hello ClickHouse
+2	Hello World
+6	World Champion
+1	Hello ClickHouse
+2	Hello World
+6	World Champion
+          Granules: 6/6
+          Granules: 3/6
+            Granules: 6/6
+            Granules: 3/6
+          Granules: 6/6
+          Granules: 3/6
+            Granules: 6/6
+            Granules: 3/6
+---
+5	OLAP Database
+5	OLAP Database
+          Granules: 6/6
+          Granules: 1/6
+            Granules: 6/6
+            Granules: 1/6
+          Granules: 6/6
+          Granules: 1/6
+            Granules: 6/6
+            Granules: 1/6
diff --git a/tests/queries/0_stateless/02943_tokenbf_and_ngrambf_indexes_support_match_function.sql b/tests/queries/0_stateless/02943_tokenbf_and_ngrambf_indexes_support_match_function.sql
new file mode 100644
index 000000000000..49d39c601ef6
--- /dev/null
+++ b/tests/queries/0_stateless/02943_tokenbf_and_ngrambf_indexes_support_match_function.sql
@@ -0,0 +1,185 @@
+DROP TABLE IF EXISTS tokenbf_tab;
+DROP TABLE IF EXISTS ngrambf_tab;
+
+CREATE TABLE tokenbf_tab
+(
+    id UInt32,
+    str String,
+    INDEX idx str TYPE tokenbf_v1(256, 2, 0)
+)
+ENGINE = MergeTree
+ORDER BY id
+SETTINGS index_granularity = 1;
+
+CREATE TABLE ngrambf_tab
+(
+    id UInt32,
+    str String,
+    INDEX idx str TYPE ngrambf_v1(3, 256, 2, 0)
+)
+ENGINE = MergeTree
+ORDER BY id
+SETTINGS index_granularity = 1;
+
+INSERT INTO tokenbf_tab VALUES (1, 'Hello ClickHouse'), (2, 'Hello World'), (3, 'Good Weather'), (4, 'Say Hello'), (5, 'OLAP Database'), (6, 'World Champion');
+INSERT INTO ngrambf_tab VALUES (1, 'Hello ClickHouse'), (2, 'Hello World'), (3, 'Good Weather'), (4, 'Say Hello'), (5, 'OLAP Database'), (6, 'World Champion');
+
+SELECT * FROM tokenbf_tab WHERE match(str, 'Hello (ClickHouse|World)') ORDER BY id;
+SELECT * FROM ngrambf_tab WHERE match(str, 'Hello (ClickHouse|World)') ORDER BY id;
+
+-- Read 2/6 granules
+-- Required string: 'Hello '
+-- Alternatives: 'Hello ClickHouse', 'Hello World'
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes=1
+    SELECT * FROM tokenbf_tab WHERE match(str, 'Hello (ClickHouse|World)') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 0;
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes=1
+    SELECT * FROM tokenbf_tab WHERE match(str, 'Hello (ClickHouse|World)') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 1;
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes=1
+    SELECT * FROM ngrambf_tab WHERE match(str, 'Hello (ClickHouse|World)') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 0;
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes=1
+    SELECT * FROM ngrambf_tab WHERE match(str, 'Hello (ClickHouse|World)') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 1;
+
+
+SELECT '---';
+
+SELECT * FROM tokenbf_tab WHERE match(str, '.*(ClickHouse|World)') ORDER BY id;
+SELECT * FROM ngrambf_tab WHERE match(str, '.*(ClickHouse|World)') ORDER BY id;
+
+-- Read 3/6 granules
+-- Required string: -
+-- Alternatives: 'ClickHouse', 'World'
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes = 1
+    SELECT * FROM tokenbf_tab WHERE match(str, '.*(ClickHouse|World)') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 0;
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes = 1
+    SELECT * FROM tokenbf_tab WHERE match(str, '.*(ClickHouse|World)') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 1;
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes = 1
+    SELECT * FROM ngrambf_tab WHERE match(str, '.*(ClickHouse|World)') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 0;
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes = 1
+    SELECT * FROM ngrambf_tab WHERE match(str, '.*(ClickHouse|World)') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 1;
+
+SELECT '---';
+
+SELECT * FROM tokenbf_tab WHERE match(str, 'OLAP.*') ORDER BY id;
+SELECT * FROM ngrambf_tab WHERE match(str, 'OLAP.*') ORDER BY id;
+
+-- Read 1/6 granules
+-- Required string: 'OLAP'
+-- Alternatives: -
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes = 1
+    SELECT * FROM tokenbf_tab WHERE match(str, 'OLAP (.*?)*') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 0;
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes = 1
+    SELECT * FROM tokenbf_tab WHERE match(str, 'OLAP (.*?)*') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 1;
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes = 1
+    SELECT * FROM ngrambf_tab WHERE match(str, 'OLAP (.*?)*') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 0;
+
+SELECT *
+FROM
+(
+    EXPLAIN PLAN indexes = 1
+    SELECT * FROM ngrambf_tab WHERE match(str, 'OLAP (.*?)*') ORDER BY id
+)
+WHERE
+    explain LIKE '%Granules: %'
+SETTINGS
+  allow_experimental_analyzer = 1;
+
+DROP TABLE tokenbf_tab;
+DROP TABLE ngrambf_tab;
