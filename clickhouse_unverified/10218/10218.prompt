You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
INSERT SELECT cause DB::Exception: Logical error: part spans more than one month.
**How to reproduce**
* Which ClickHouse server version to use: 20.3+
* `CREATE TABLE` statements for all tables involved

``` sql
CREATE TABLE mass_table_117 (`dt` Date, `site_id` Int32, `site_key` String) ENGINE = MergeTree(dt, (site_id, site_key, dt), 8192)
```
* Queries to run that lead to unexpected result
``` sql
INSERT INTO mass_table_117 SELECT * FROM generateRandom('`dt` Date,`site_id` Int32,`site_key` String', 1, 10, 2) LIMIT 100;
```
**Error message and/or stacktrace**
If applicable, add screenshots to help explain your problem.
```
2020.03.31 19:57:48.246430 [ 74864 ] {c245df2b-78f9-4806-8974-6b53e8f4745a} <Error> executeQuery: Code: 49, e.displayText() = DB::Exception: Logical error: part spans more than one month. (version 20.4.1.
1) (from [::1]:58042) (in query: INSERT INTO mass_table_117 SELECT * FROM generateRandom('`dt` Date,`site_id` Int32,`site_key` String', 1, 10, 2) LIMIT 100), Stack trace (when copying this message, always
 include the lines below):

0. /home/qoega/clickhouse/build/../contrib/libcxx/include/exception:129: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xa
f940c2 in /home/qoega/clickhouse/build/dbms/programs/clickhouse
1. /home/qoega/clickhouse/build/../dbms/src/Common/Exception.cpp:30: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x4c5b45e
 in /home/qoega/clickhouse/build/dbms/programs/clickhouse
2. /home/qoega/clickhouse/build/../dbms/src/Storages/MergeTree/MergeTreeDataWriter.cpp:0: DB::MergeTreeDataWriter::writeTempPart(DB::BlockWithPartition&) @ 0x8c56640 in /home/qoega/clickhouse/build/dbms/p
rograms/clickhouse
3. /home/qoega/clickhouse/build/../dbms/src/Storages/MergeTree/MergeTreeBlockOutputStream.cpp:25: DB::MergeTreeBlockOutputStream::write(DB::Block const&) @ 0x8bca44c in /home/qoega/clickhouse/build/dbms/p
rograms/clickhouse
4. /home/qoega/clickhouse/build/../dbms/src/DataStreams/PushingToViewsBlockOutputStream.cpp:134: DB::PushingToViewsBlockOutputStream::write(DB::Block const&) @ 0x8f2af58 in /home/qoega/clickhouse/build/db
ms/programs/clickhouse
5. /home/qoega/clickhouse/build/../contrib/libcxx/include/map:1090: DB::SquashingBlockOutputStream::finalize() @ 0x8f2ffa6 in /home/qoega/clickhouse/build/dbms/programs/clickhouse
6. /home/qoega/clickhouse/build/../contrib/libcxx/include/memory:3826: DB::SquashingBlockOutputStream::writeSuffix() @ 0x8f3017e in /home/qoega/clickhouse/build/dbms/programs/clickhouse
7. /home/qoega/clickhouse/build/../dbms/src/DataStreams/copyData.cpp:139: DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::__1::atomic<bool>*) @ 0x8631c66 in /home/qoega/clickhouse/build
/dbms/programs/clickhouse
8. /home/qoega/clickhouse/build/../dbms/src/DataStreams/NullAndDoCopyBlockInputStream.h:0: DB::NullAndDoCopyBlockInputStream::readImpl() @ 0x876e344 in /home/qoega/clickhouse/build/dbms/programs/clickhous
e
9. /home/qoega/clickhouse/build/../dbms/src/DataStreams/IBlockInputStream.cpp:0: DB::IBlockInputStream::read() @ 0x861fd76 in /home/qoega/clickhouse/build/dbms/programs/clickhouse
10. /home/qoega/clickhouse/build/../dbms/src/Core/Block.h:27: DB::AsynchronousBlockInputStream::calculate() @ 0x861df6f in /home/qoega/clickhouse/build/dbms/programs/clickhouse
11. /home/qoega/clickhouse/build/../contrib/libcxx/include/atomic:1036: std::__1::__function::__func<DB::AsynchronousBlockInputStream::next()::$_0, std::__1::allocator<DB::AsynchronousBlockInputStream::ne
xt()::$_0>, void ()>::operator()() @ 0x861e361 in /home/qoega/clickhouse/build/dbms/programs/clickhouse
12. /home/qoega/clickhouse/build/../contrib/libcxx/include/atomic:1036: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x4c670a1 in /home/qoega/clic
khouse/build/dbms/programs/clickhouse
13. /home/qoega/clickhouse/build/../dbms/src/Common/ThreadPool.cpp:0: ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>,
int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'(
)&&...)::'lambda'()::operator()() const @ 0x4c698aa in /home/qoega/clickhouse/build/dbms/programs/clickhouse
14. /home/qoega/clickhouse/build/../contrib/libcxx/include/atomic:1036: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x4c650f1 in /home/qoega/clickhouse/b
uild/dbms/programs/clickhouse
15. /home/qoega/clickhouse/build/../contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__
thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x4c68620 in /home/qoega/clickhous
e/build/dbms/programs/clickhouse
16. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so
17. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
