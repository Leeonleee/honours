You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Views very slow since upgrading to 24.3
(you don't have to strictly follow this form)

**Describe the situation**
We have several views which only point to a table.
`CREATE VIEW v AS SELECT * FROM myTable`
We don't want our visualization tool (metabase) to directly access tables, in case we need to change something without changing the structure.

Since 24.3 the performance of those views is very bad.
With version 24.2 running queries on the tables directly or the view was basically the same performance.
Now, in 24.3, the views are several times slower.
From what I could tell by checking things like htop during queries, the views now seem to load the entire table into RAM before doing anything.
RAM and CPU spike massively during the query. 

**How to reproduce**
* **Which ClickHouse server version to use** 
24.3
* **Which interface to use, if matters**
Doesn't matter. I could reproduce it with clickhouse-client and HTTP interface. Did not try other, but most likely same problem.
* **Non-default settings, if any**
None
* **`CREATE TABLE` statements for all tables involved**
I was able to reproduce the problem with your sample dataset _UK property prices_
https://clickhouse.com/docs/en/getting-started/example-datasets/uk-price-paid
* **Sample data for all these tables, use [clickhouse-obfuscator]**
Data from the sample.
* **Queries to run that lead to slow performance**
`SELECT max(price) FROM uk_price_paid`
This takes around 15ms on my machine
`CREATE VIEW priceView AS SELECT * FROM uk_price_paid`
`SELECT max(price) FROM priceView`
This takes roughly 100ms on my machine with 24.3.
With 24.2 same performance as direct query on the table.
The bigger the table, the bigger the performance difference between view and table.
Most likely due loading it all first.

**Expected performance**
View and table should have same performance as it has been the case in 24.2 and earlier.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
