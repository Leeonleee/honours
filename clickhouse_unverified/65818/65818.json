{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 65818,
  "instance_id": "ClickHouse__ClickHouse-65818",
  "issue_numbers": [
    "65517"
  ],
  "base_commit": "36f38e6ae39d305026f517c0cce49ab2b2b0f09c",
  "patch": "diff --git a/docs/en/sql-reference/functions/bit-functions.md b/docs/en/sql-reference/functions/bit-functions.md\nindex a48893b93bf8..5ab7e07fcad0 100644\n--- a/docs/en/sql-reference/functions/bit-functions.md\n+++ b/docs/en/sql-reference/functions/bit-functions.md\n@@ -173,7 +173,7 @@ See function [substring](string-functions.md#substring).\n \n ## bitTest\n \n-Takes any integer and converts it into [binary form](https://en.wikipedia.org/wiki/Binary_number), returns the value of a bit at specified position. The countdown starts from 0 from the right to the left.\n+Takes any integer and converts it into [binary form](https://en.wikipedia.org/wiki/Binary_number), returns the value of a bit at specified position. Counting is right-to-left, starting at 0.\n \n **Syntax**\n \n@@ -226,7 +226,7 @@ Result:\n \n ## bitTestAll\n \n-Returns result of [logical conjuction](https://en.wikipedia.org/wiki/Logical_conjunction) (AND operator) of all bits at given positions. The countdown starts from 0 from the right to the left.\n+Returns result of [logical conjuction](https://en.wikipedia.org/wiki/Logical_conjunction) (AND operator) of all bits at given positions. Counting is right-to-left, starting at 0.\n \n The conjuction for bit-wise operations:\n \n@@ -289,7 +289,7 @@ Result:\n \n ## bitTestAny\n \n-Returns result of [logical disjunction](https://en.wikipedia.org/wiki/Logical_disjunction) (OR operator) of all bits at given positions. The countdown starts from 0 from the right to the left.\n+Returns result of [logical disjunction](https://en.wikipedia.org/wiki/Logical_disjunction) (OR operator) of all bits at given positions. Counting is right-to-left, starting at 0.\n \n The disjunction for bit-wise operations:\n \ndiff --git a/src/Functions/FunctionBitTestMany.h b/src/Functions/FunctionBitTestMany.h\nindex 71e94b1e71df..950e4ab4ea8e 100644\n--- a/src/Functions/FunctionBitTestMany.h\n+++ b/src/Functions/FunctionBitTestMany.h\n@@ -16,6 +16,7 @@ namespace ErrorCodes\n {\n     extern const int ILLEGAL_COLUMN;\n     extern const int ILLEGAL_TYPE_OF_ARGUMENT;\n+    extern const int PARAMETER_OUT_OF_BOUND;\n     extern const int TOO_FEW_ARGUMENTS_FOR_FUNCTION;\n }\n \n@@ -146,6 +147,9 @@ struct FunctionBitTestMany : public IFunction\n                 const auto pos = pos_col_const->getUInt(0);\n                 if (pos < 8 * sizeof(ValueType))\n                     mask = mask | (ValueType(1) << pos);\n+                else\n+                    throw Exception(ErrorCodes::PARAMETER_OUT_OF_BOUND,\n+                                   \"The bit position argument {} is out of bounds for number\", static_cast<UInt64>(pos));\n             }\n             else\n             {\n@@ -186,13 +190,20 @@ struct FunctionBitTestMany : public IFunction\n             for (const auto i : collections::range(0, mask.size()))\n                 if (pos[i] < 8 * sizeof(ValueType))\n                     mask[i] = mask[i] | (ValueType(1) << pos[i]);\n+                else\n+                    throw Exception(ErrorCodes::PARAMETER_OUT_OF_BOUND,\n+                                    \"The bit position argument {} is out of bounds for number\", static_cast<UInt64>(pos[i]));\n \n             return true;\n         }\n         else if (const auto pos_col_const = checkAndGetColumnConst<ColumnVector<PosType>>(pos_col_untyped))\n         {\n             const auto & pos = pos_col_const->template getValue<PosType>();\n-            const auto new_mask = pos < 8 * sizeof(ValueType) ? ValueType(1) << pos : 0;\n+            if (pos >= 8 * sizeof(ValueType))\n+                throw Exception(ErrorCodes::PARAMETER_OUT_OF_BOUND,\n+                                \"The bit position argument {} is out of bounds for number\", static_cast<UInt64>(pos));\n+\n+            const auto new_mask = ValueType(1) << pos;\n \n             for (const auto i : collections::range(0, mask.size()))\n                 mask[i] = mask[i] | new_mask;\ndiff --git a/src/Functions/bitTest.cpp b/src/Functions/bitTest.cpp\nindex 78ec9c8b7739..cb6b83c1cf1c 100644\n--- a/src/Functions/bitTest.cpp\n+++ b/src/Functions/bitTest.cpp\n@@ -8,6 +8,7 @@ namespace DB\n namespace ErrorCodes\n {\n     extern const int NOT_IMPLEMENTED;\n+    extern const int PARAMETER_OUT_OF_BOUND;\n }\n \n namespace\n@@ -21,12 +22,21 @@ struct BitTestImpl\n     static const constexpr bool allow_string_integer = false;\n \n     template <typename Result = ResultType>\n-    NO_SANITIZE_UNDEFINED static Result apply(A a [[maybe_unused]], B b [[maybe_unused]])\n+    static Result apply(A a [[maybe_unused]], B b [[maybe_unused]])\n     {\n         if constexpr (is_big_int_v<A> || is_big_int_v<B>)\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"bitTest is not implemented for big integers as second argument\");\n         else\n-            return (typename NumberTraits::ToInteger<A>::Type(a) >> typename NumberTraits::ToInteger<B>::Type(b)) & 1;\n+        {\n+            typename NumberTraits::ToInteger<A>::Type a_int = a;\n+            typename NumberTraits::ToInteger<B>::Type b_int = b;\n+            const auto max_position = static_cast<decltype(b)>((8 * sizeof(a)) - 1);\n+            if (b_int > max_position || b_int < 0)\n+                throw Exception(ErrorCodes::PARAMETER_OUT_OF_BOUND,\n+                                \"The bit position argument needs to a positive value and less or equal to {} for integer {}\",\n+                                std::to_string(max_position), std::to_string(a_int));\n+            return (a_int >> b_int) & 1;\n+        }\n     }\n \n #if USE_EMBEDDED_COMPILER\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00967_ubsan_bit_test.reference b/tests/queries/0_stateless/00967_ubsan_bit_test.reference\ndeleted file mode 100644\nindex 573541ac9702..000000000000\n--- a/tests/queries/0_stateless/00967_ubsan_bit_test.reference\n+++ /dev/null\n@@ -1,1 +0,0 @@\n-0\ndiff --git a/tests/queries/0_stateless/00967_ubsan_bit_test.sql b/tests/queries/0_stateless/00967_ubsan_bit_test.sql\ndeleted file mode 100644\nindex 1682e725670d..000000000000\n--- a/tests/queries/0_stateless/00967_ubsan_bit_test.sql\n+++ /dev/null\n@@ -1,1 +0,0 @@\n-SELECT sum(ignore(bitTest(number, 65))) FROM numbers(10);\ndiff --git a/tests/queries/0_stateless/01082_bit_test_out_of_bound.reference b/tests/queries/0_stateless/01082_bit_test_out_of_bound.reference\nindex 708c5d9d9947..26085389381d 100644\n--- a/tests/queries/0_stateless/01082_bit_test_out_of_bound.reference\n+++ b/tests/queries/0_stateless/01082_bit_test_out_of_bound.reference\n@@ -1,3 +1,22 @@\n+-- bitTestAny\n+0\t1\n+1\t0\n+2\t1\n+3\t0\n+4\t1\n+5\t0\n+6\t1\n+7\t0\n+-- bitTestAll\n+0\t1\n+1\t0\n+2\t1\n+3\t0\n+4\t1\n+5\t0\n+6\t1\n+7\t0\n+-- bitTest\n 0\t1\n 1\t0\n 2\t1\n@@ -6,98 +25,6 @@\n 5\t0\n 6\t1\n 7\t0\n-8\t0\n-9\t0\n-10\t0\n-11\t0\n-12\t0\n-13\t0\n-14\t0\n-15\t0\n-16\t0\n-17\t0\n-18\t0\n-19\t0\n-20\t0\n-21\t0\n-22\t0\n-23\t0\n-24\t0\n-25\t0\n-26\t0\n-27\t0\n-28\t0\n-29\t0\n-30\t0\n-31\t0\n-32\t0\n-33\t0\n-34\t0\n-35\t0\n-36\t0\n-37\t0\n-38\t0\n-39\t0\n-40\t0\n-41\t0\n-42\t0\n-43\t0\n-44\t0\n-45\t0\n-46\t0\n-47\t0\n-48\t0\n-49\t0\n-50\t0\n-51\t0\n-52\t0\n-53\t0\n-54\t0\n-55\t0\n-56\t0\n-57\t0\n-58\t0\n-59\t0\n-60\t0\n-61\t0\n-62\t0\n-63\t0\n-64\t0\n-65\t0\n-66\t0\n-67\t0\n-68\t0\n-69\t0\n-70\t0\n-71\t0\n-72\t0\n-73\t0\n-74\t0\n-75\t0\n-76\t0\n-77\t0\n-78\t0\n-79\t0\n-80\t0\n-81\t0\n-82\t0\n-83\t0\n-84\t0\n-85\t0\n-86\t0\n-87\t0\n-88\t0\n-89\t0\n-90\t0\n-91\t0\n-92\t0\n-93\t0\n-94\t0\n-95\t0\n-96\t0\n-97\t0\n-98\t0\n-99\t0\n 0\t1\n 1\t0\n 2\t1\n@@ -107,94 +34,10 @@\n 6\t1\n 7\t0\n 8\t1\n-9\t1\n+9\t0\n 10\t1\n-11\t1\n+11\t0\n 12\t1\n-13\t1\n+13\t0\n 14\t1\n-15\t1\n-16\t1\n-17\t1\n-18\t1\n-19\t1\n-20\t1\n-21\t1\n-22\t1\n-23\t1\n-24\t1\n-25\t1\n-26\t1\n-27\t1\n-28\t1\n-29\t1\n-30\t1\n-31\t1\n-32\t1\n-33\t1\n-34\t1\n-35\t1\n-36\t1\n-37\t1\n-38\t1\n-39\t1\n-40\t1\n-41\t1\n-42\t1\n-43\t1\n-44\t1\n-45\t1\n-46\t1\n-47\t1\n-48\t1\n-49\t1\n-50\t1\n-51\t1\n-52\t1\n-53\t1\n-54\t1\n-55\t1\n-56\t1\n-57\t1\n-58\t1\n-59\t1\n-60\t1\n-61\t1\n-62\t1\n-63\t1\n-64\t1\n-65\t1\n-66\t1\n-67\t1\n-68\t1\n-69\t1\n-70\t1\n-71\t1\n-72\t1\n-73\t1\n-74\t1\n-75\t1\n-76\t1\n-77\t1\n-78\t1\n-79\t1\n-80\t1\n-81\t1\n-82\t1\n-83\t1\n-84\t1\n-85\t1\n-86\t1\n-87\t1\n-88\t1\n-89\t1\n-90\t1\n-91\t1\n-92\t1\n-93\t1\n-94\t1\n-95\t1\n-96\t1\n-97\t1\n-98\t1\n-99\t1\n+15\t0\ndiff --git a/tests/queries/0_stateless/01082_bit_test_out_of_bound.sql b/tests/queries/0_stateless/01082_bit_test_out_of_bound.sql\nindex 82e2c5a23806..e741cb249d03 100644\n--- a/tests/queries/0_stateless/01082_bit_test_out_of_bound.sql\n+++ b/tests/queries/0_stateless/01082_bit_test_out_of_bound.sql\n@@ -1,2 +1,13 @@\n-SELECT number, bitTestAny(toUInt8(1 + 4 + 16 + 64), number) FROM numbers(100);\n-SELECT number, bitTestAll(toUInt8(1 + 4 + 16 + 64), number) FROM numbers(100);\n+SELECT '-- bitTestAny';\n+SELECT number, bitTestAny(toUInt8(1 + 4 + 16 + 64), number) FROM numbers(8);\n+SELECT number, bitTestAny(toUInt8(1 + 4 + 16 + 64), number) FROM numbers(8, 16); -- { serverError PARAMETER_OUT_OF_BOUND }\n+\n+SELECT '-- bitTestAll';\n+SELECT number, bitTestAll(toUInt8(1 + 4 + 16 + 64), number) FROM numbers(8);\n+SELECT number, bitTestAll(toUInt8(1 + 4 + 16 + 64), number) FROM numbers(8, 16); -- { serverError PARAMETER_OUT_OF_BOUND }\n+\n+SELECT '-- bitTest';\n+SELECT number, bitTest(toUInt8(1 + 4 + 16 + 64), number) FROM numbers(8);\n+SELECT number, bitTest(toUInt8(1 + 4 + 16 + 64), number) FROM numbers(8, 16); -- { serverError PARAMETER_OUT_OF_BOUND }\n+SELECT number, bitTest(toUInt16(1 + 4 + 16 + 64 + 256 + 1024 + 4096 + 16384 + 65536), number) FROM numbers(16);\n+SELECT -number, bitTest(toUInt16(1), -number) FROM numbers(8); -- { serverError PARAMETER_OUT_OF_BOUND }\ndiff --git a/tests/queries/0_stateless/01710_minmax_count_projection.sql b/tests/queries/0_stateless/01710_minmax_count_projection.sql\nindex d0177da84d28..6c598bce4406 100644\n--- a/tests/queries/0_stateless/01710_minmax_count_projection.sql\n+++ b/tests/queries/0_stateless/01710_minmax_count_projection.sql\n@@ -16,7 +16,7 @@ select min(i), max(i), count() from d where _partition_value.1 = 10 group by _pa\n select min(i) from d where 1 = _partition_value.1;\n \n -- fuzz crash https://github.com/ClickHouse/ClickHouse/issues/37151\n-SELECT min(i), max(i), count() FROM d WHERE (_partition_value.1) = 0 GROUP BY ignore(bitTest(ignore(NULL), 65535), NULL, (_partition_value.1) = 7, '10.25', bitTest(NULL, -9223372036854775808), NULL, ignore(ignore(-2147483647, NULL)), 1024), _partition_id ORDER BY _partition_id ASC NULLS FIRST;\n+SELECT min(i), max(i), count() FROM d WHERE (_partition_value.1) = 0 GROUP BY ignore(bitTest(ignore(NULL), 0), NULL, (_partition_value.1) = 7, '10.25', bitTest(NULL, 0), NULL, ignore(ignore(-2147483647, NULL)), 1024), _partition_id ORDER BY _partition_id ASC NULLS FIRST;\n \n drop table d;\n \n",
  "problem_statement": "`bitTest` may produce unexpected result.\n**Describe what's wrong**\r\n`bitTest` produces unexpected result.\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use: `24.3.3.102`\r\n* Which interface to use, if it matters: `MySQL Shell`\r\n* Non-default settings, if any: `distributed_product_mode='allow'`\r\n\r\n* init database:\r\n```sql\r\ncreate database ch_main;\r\nuse ch_main;\r\n\r\n-- sql #1\r\ncreate table t_hwi130st4 ( \r\n  c_wpg Int32 ,\r\n  c_s String ,\r\n  c_i8 String ,\r\n  c_seahk2u Float64 ,\r\n  c_b Float64 ,\r\n  c_w9_4ap Int32 primary key ,\r\n  );\r\n\r\n\r\n-- sql #3\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap) values \r\n  (-1149739257, 'oqo0b9wn0y', 'uwiw', 50.62, 1.9, -56238719), \r\n  (2, 'x', 'yi4n6vrr', 76.98, 9223372036854775807.8, -3), \r\n  (11686210, 'mlp50m', 'tc17pov2', 4294967294.0, 93.15, -1271189987), \r\n  (-1403535781, 'ss75f', 'zf', 3.98, 56.36, 1445090706);\r\n\r\n-- sql #21\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap) values \r\n  (-4, 'k3ab', 'vsi9mlt2f', -0.1, 99.68, -838905824), \r\n  (21797751, 'yiw', 'e707iszq', 256.5, -65537.5, 1545255954), \r\n  (-1173571010, 'u9', 'yh_dsb95d', -4294967295.8, -4294967295.1, -86953426), \r\n  (1084934805, 'tod', 'a52o13ea4', 43.49, -4294967294.9, 1338049738);\r\n\r\n\r\n-- sql #22\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap) values \r\n  (-676988243, 'g', 'fy5bz', 17.61, 96.85, -528458811), \r\n  (-25, 'h6mcbk8', 'pp', 97.23, -18446744073709551614.9, 5), \r\n  (1671090888, 'v945', 'kw', 44.4, 17.83, -1314342888), \r\n  (65536, 'v0zewjo49u', 'askk_1h', 72.48, 81.15, 2);\r\n\r\n\r\n-- sql #23\r\nalter table t_hwi130st4 add column c_skwq8 String;\r\n\r\n-- sql #25\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap, c_skwq8) values \r\n  (-2040837324, 'si8shj', 'b', 41.20, 3.10, 1291544549, 'kx68agni4'), \r\n  (-310404151, '__nc8rsl', 'tqosx0s', 32767.6, 29.14, 752873682, 'v971pfad'), \r\n  (3, 'rdj', 'p5w', 32769.6, -9223372036854775809.1, -486995628, 'hiqsow'), \r\n  (-6, 'gbs780nv', 'u8ojaqgpa', 4.44, 129.0, 1746224505, 't1tzo4w538');\r\n\r\n\r\n-- sql #26\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap, c_skwq8) values \r\n  (-1580788152, 'e', 'w6i', -9223372036854775809.2, 13.32, 962706574, 'tjl7k5r'), \r\n  (3, 'j', 'ix', 88.10, 89.77, -610474587, 'mh_'), \r\n  (1897548408, 'jb', 'ddr9kbf', 54.21, 76.36, -5, 'ditpajx'), \r\n  (441043873, 'wvi16h', 'r', 92.8, 30.88, 2029856608, 'pb4');\r\n\r\n\r\n-- sql #27\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap, c_skwq8) values \r\n  (16, 'o6z', 'aujtujgdon', 30.87, 22.11, 259350534, 'ql'), \r\n  (1669987147, 'i4n40ete9', 'kv155wtf', 35.47, 68.80, -1976235388, 'rihep_f57'), \r\n  (-1000436932, 'kkpa29zk_6', 'ksckscqhr5', 9223372036854775807.9, 75.97, 1706844447, 'fsj'), \r\n  (2137575349, 'x73x', 'hg938x95r', 70.39, 49.36, -1951482829, 'lbvo843i');\r\n```\r\n\r\n* Queries to run that lead to an unexpected result\r\n```sql\r\nSELECT\r\n  ref_0.c_wpg as c0,\r\n  bitTest(\r\n    ref_0.c_wpg, \r\n    ref_0.c_wpg) as c2\r\nFROM\r\n  t_hwi130st4 as ref_0\r\norder by 1,2\r\n  ;\r\n```\r\n\r\n**Expected behavior**\r\nprevious SQL produces:\r\n```\r\nmysql> SELECT\r\n    ->   ref_0.c_wpg as c0,\r\n    ->   bitTest(\r\n    ->     ref_0.c_wpg, \r\n    ->     ref_0.c_wpg) as c2\r\n    -> FROM\r\n    ->   t_hwi130st4 as ref_0\r\n    -> order by 1,2\r\n    ->   ;\r\n+-------------+------+\r\n| c0          | c2   |\r\n+-------------+------+\r\n| -2040837324 |    0 |\r\n| -1580788152 |    0 |\r\n| -1403535781 |    0 |\r\n| -1173571010 |    0 |\r\n| -1149739257 |    0 |\r\n| -1000436932 |    0 |\r\n|  -676988243 |    0 |\r\n|  -310404151 |    0 |\r\n|         -25 |    0 |\r\n|          -6 |    0 |\r\n|          -4 |    0 |\r\n|           2 |    0 |\r\n|           3 |    0 |\r\n|           3 |    0 |\r\n|          16 |    0 |\r\n|       65536 |    0 |\r\n|    11686210 |    0 |\r\n|    21797751 |    0 |\r\n|   441043873 |    0 |\r\n|  1084934805 |    0 |\r\n|  1669987147 |    0 |\r\n|  1671090888 |    0 |\r\n|  1897548408 |    0 |\r\n|  2137575349 |    0 |\r\n+-------------+------+\r\n24 rows in set (0.00 sec)\r\nRead 24 rows, 96.00 B in 0.001233 sec., 19464 rows/sec., 76.03 KiB/sec.\r\n```\r\n\r\nWhen using `bitTest` in a simple select statement:\r\n```\r\nmysql> select bitTest(cast(2137575349 as Int32), cast(2137575349 as Int32));\r\n+---------------------------------------------------------------+\r\n| bitTest(CAST(2137575349, 'Int32'), CAST(2137575349, 'Int32')) |\r\n+---------------------------------------------------------------+\r\n|                                                             1 |\r\n+---------------------------------------------------------------+\r\n1 row in set (0.00 sec)\r\nRead 1 rows, 1.00 B in 0.001141 sec., 876 rows/sec., 876.42 B/sec.\r\n```\r\nThe results of two queries do not match.\r\n\r\n**Additional context**\r\ndocker compose config:\r\n```\r\nversion: '3.8'\r\nservices:\r\n  clickhouse-01:\r\n    image: \"clickhouse/clickhouse-server:${CHVER:-latest}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-01\r\n    hostname: clickhouse-01\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.1\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-01/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml\r\n      - ${PWD}/fs/volumes/clickhouse-01/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml\r\n    depends_on:\r\n      - clickhouse-keeper-01\r\n      - clickhouse-keeper-02\r\n      - clickhouse-keeper-03\r\n  clickhouse-02:\r\n    image: \"clickhouse/clickhouse-server:${CHVER:-latest}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-02\r\n    hostname: clickhouse-02\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.2\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-02/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml\r\n      - ${PWD}/fs/volumes/clickhouse-02/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml\r\n    depends_on:\r\n      - clickhouse-keeper-01\r\n      - clickhouse-keeper-02\r\n      - clickhouse-keeper-03\r\n  clickhouse-keeper-01:\r\n    image: \"clickhouse/clickhouse-keeper:${CHKVER:-latest-alpine}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-keeper-01\r\n    hostname: clickhouse-keeper-01\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.5\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-keeper-01/etc/clickhouse-keeper/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml\r\n\r\n  clickhouse-keeper-02:\r\n    image: \"clickhouse/clickhouse-keeper:${CHKVER:-latest-alpine}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-keeper-02\r\n    hostname: clickhouse-keeper-02\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.6\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-keeper-02/etc/clickhouse-keeper/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml\r\n\r\n  clickhouse-keeper-03:\r\n    image: \"clickhouse/clickhouse-keeper:${CHKVER:-latest-alpine}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-keeper-03\r\n    hostname: clickhouse-keeper-03\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.7\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-keeper-03/etc/clickhouse-keeper/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml\r\n\r\nnetworks:\r\n  cluster_2S_1R:\r\n    driver: bridge\r\n    ipam:\r\n      config:\r\n        - subnet: 10.0.7.0/24\r\n          gateway: 10.0.7.254\r\n```\r\n\r\nconfig.xml\r\n```xml\r\n<clickhouse replace=\"true\">\r\n    <logger>\r\n        <level>debug</level>\r\n        <log>/var/log/clickhouse-server/clickhouse-server.log</log>\r\n        <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>\r\n        <size>1000M</size>\r\n        <count>3</count>\r\n    </logger>\r\n    <display_name>cluster_2S_1R node 1</display_name>\r\n    <listen_host>0.0.0.0</listen_host>\r\n    <http_port>8123</http_port>\r\n    <tcp_port>9000</tcp_port>\r\n    <mysql_port>9004</mysql_port>\r\n    <postgresql_port>9005</postgresql_port>\r\n    <user_directories>\r\n        <users_xml>\r\n            <path>users.xml</path>\r\n        </users_xml>\r\n        <local_directory>\r\n            <path>/var/lib/clickhouse/access/</path>\r\n        </local_directory>\r\n    </user_directories>\r\n    <distributed_ddl>\r\n        <path>/clickhouse/task_queue/ddl</path>\r\n    </distributed_ddl>\r\n    <remote_servers>\r\n        <default>\r\n            <shard>\r\n                <replica>\r\n                    <host>clickhouse-01</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n            </shard>\r\n            <shard>\r\n                <replica>\r\n                    <host>clickhouse-02</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n            </shard>\r\n        </default>\r\n    </remote_servers>\r\n    <zookeeper>\r\n        <node>\r\n            <host>clickhouse-keeper-01</host>\r\n            <port>9181</port>\r\n        </node>\r\n        <node>\r\n            <host>clickhouse-keeper-02</host>\r\n            <port>9181</port>\r\n        </node>\r\n        <node>\r\n            <host>clickhouse-keeper-03</host>\r\n            <port>9181</port>\r\n        </node>\r\n    </zookeeper>\r\n    <macros>\r\n        <shard>01</shard>\r\n        <replica>01</replica>\r\n    </macros>\r\n</clickhouse>\r\n```\r\nusers.xml\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<clickhouse replace=\"true\">\r\n    <profiles>\r\n        <default>\r\n            <max_memory_usage>10000000000</max_memory_usage>\r\n            <use_uncompressed_cache>0</use_uncompressed_cache>\r\n            <load_balancing>in_order</load_balancing>\r\n            <log_queries>1</log_queries>\r\n            <distributed_product_mode>allow</distributed_product_mode>\r\n        </default>\r\n    </profiles>\r\n    <users>\r\n        <default>\r\n            <access_management>1</access_management>\r\n            <profile>default</profile>\r\n            <networks>\r\n                <ip>::/0</ip>\r\n            </networks>\r\n            <password></password>\r\n            <quota>default</quota>\r\n            <access_management>1</access_management>\r\n            <named_collection_control>1</named_collection_control>\r\n            <show_named_collections>1</show_named_collections>\r\n            <show_named_collections_secrets>1</show_named_collections_secrets>\r\n        </default>\r\n    </users>\r\n    <quotas>\r\n        <default>\r\n            <interval>\r\n                <duration>3600</duration>\r\n                <queries>0</queries>\r\n                <errors>0</errors>\r\n                <result_rows>0</result_rows>\r\n                <read_rows>0</read_rows>\r\n                <execution_time>0</execution_time>\r\n            </interval>\r\n        </default>\r\n    </quotas>\r\n</clickhouse>\r\n```\r\n\r\n#### about us\r\nWe are the BASS team from the School of Cyber Science and Technology at Beihang University. Our main focus is on system software security, operating systems, and program analysis research, as well as the development of automated program testing frameworks for detecting software defects. Using our self-developed database vulnerability testing tool, we have identified the potential above-mentioned vulnerability that may lead to database logic error.\n",
  "hints_text": "We should define better what bitTest of a non existent bit is. It seems undefined behaviour and you get different results depending on the build:\r\n\r\n```bash\r\n/tmp $ cat repro.sql \r\ncreate table t_hwi130st4 ( \r\n  c_wpg Int32 ,\r\n  c_s String ,\r\n  c_i8 String ,\r\n  c_seahk2u Float64 ,\r\n  c_b Float64 ,\r\n  c_w9_4ap Int32 primary key ,\r\n  );\r\n\r\n\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap) values   (-1149739257, 'oqo0b9wn0y', 'uwiw', 50.62, 1.9, -56238719), (2, 'x', 'yi4n6vrr', 76.98, 9223372036854775807.8, -3),  (11686210, 'mlp50m', 'tc17pov2', 4294967294.0, 93.15, -1271189987),  (-1403535781, 'ss75f', 'zf', 3.98, 56.36, 1445090706);\r\n\r\nSELECT\r\n  ref_0.c_wpg as c0,\r\n  bitTest(\r\n    ref_0.c_wpg,\r\n    ref_0.c_wpg) as c2\r\nFROM\r\n  t_hwi130st4 as ref_0\r\norder by 1,2\r\n  ;\r\n/tmp $ /mnt/ch/ClickHouse/build_msan/programs/clickhouse local --queries-file repro.sql\r\n-1403535781     0\r\n-1149739257     0\r\n2       0\r\n11686210        0\r\n/tmp $ /mnt/ch/ClickHouse/build_ubsan/programs/clickhouse local --queries-file repro.sql\r\n-1403535781     1\r\n-1149739257     0\r\n2       0\r\n11686210        0\r\n```\n> We should define better what bitTest of a non existent bit is\r\n\r\nIMO I think we should throw an error when it tries to check against a non-existing bit. Choosing to return either 0 or 1 (deterministically, not undefined as it is now) is less intuitive.\r\n\r\nYay or nay?",
  "created_at": "2024-06-28T11:23:00Z"
}