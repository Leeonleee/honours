diff --git a/tests/config/config.d/macros.xml b/tests/config/config.d/macros.xml
index 97c3065471f7..4902b12bc819 100644
--- a/tests/config/config.d/macros.xml
+++ b/tests/config/config.d/macros.xml
@@ -3,5 +3,7 @@
         <test>Hello, world!</test>
         <shard>s1</shard>
         <replica>r1</replica>
+        <default_path_test>/clickhouse/tables/{database}/{shard}/</default_path_test>
+        <default_name_test>table_{table}</default_name_test>
     </macros>
 </yandex>
diff --git a/tests/integration/test_distributed_ddl/test.py b/tests/integration/test_distributed_ddl/test.py
index b788dafe167d..9f01fa7ed5b1 100755
--- a/tests/integration/test_distributed_ddl/test.py
+++ b/tests/integration/test_distributed_ddl/test.py
@@ -330,10 +330,12 @@ def test_replicated_without_arguments(test_cluster):
     assert "are supported only for ON CLUSTER queries with Atomic database engine" in \
            instance.query_and_get_error("CREATE TABLE test_atomic.rmt (n UInt64, s String) ENGINE=ReplicatedMergeTree ORDER BY n")
     test_cluster.ddl_check_query(instance,
-                                 "CREATE TABLE test_atomic.rmt ON CLUSTER cluster (n UInt64, s String) ENGINE=ReplicatedMergeTree ORDER BY n")
+                                 "CREATE TABLE test_atomic.rmt ON CLUSTER cluster (n UInt64, s String) ENGINE=ReplicatedMergeTree() ORDER BY n")
     test_cluster.ddl_check_query(instance, "DROP TABLE test_atomic.rmt ON CLUSTER cluster")
     test_cluster.ddl_check_query(instance,
-                                 "CREATE TABLE test_atomic.rmt ON CLUSTER cluster (n UInt64, s String) ENGINE=ReplicatedMergeTree ORDER BY n")
+                                 "CREATE TABLE test_atomic.rmt UUID '12345678-0000-4000-8000-000000000001' ON CLUSTER cluster (n UInt64, s String) ENGINE=ReplicatedMergeTree ORDER BY n")
+    assert instance.query("SHOW CREATE test_atomic.rmt FORMAT TSVRaw") == \
+           "CREATE TABLE test_atomic.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree('/clickhouse/tables/12345678-0000-4000-8000-000000000001/{shard}', '{replica}')
ORDER BY n
SETTINGS index_granularity = 8192
"
     test_cluster.ddl_check_query(instance, "RENAME TABLE test_atomic.rmt TO test_atomic.rmt_renamed ON CLUSTER cluster")
     test_cluster.ddl_check_query(instance,
                                  "CREATE TABLE test_atomic.rmt ON CLUSTER cluster (n UInt64, s String) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{uuid}/{shard}', '{replica}') ORDER BY n")
@@ -349,6 +351,8 @@ def test_replicated_without_arguments(test_cluster):
     assert "are supported only for ON CLUSTER queries with Atomic database engine" in \
            instance.query_and_get_error("CREATE TABLE test_ordinary.rmt ON CLUSTER cluster (n UInt64, s String) ENGINE=ReplicatedMergeTree('/{shard}/{uuid}/', '{replica}') ORDER BY n")
     test_cluster.ddl_check_query(instance, "CREATE TABLE test_ordinary.rmt ON CLUSTER cluster (n UInt64, s String) ENGINE=ReplicatedMergeTree('/{shard}/{table}/', '{replica}') ORDER BY n")
+    assert instance.query("SHOW CREATE test_ordinary.rmt FORMAT TSVRaw") == \
+           "CREATE TABLE test_ordinary.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree('/{shard}/rmt/', '{replica}')
ORDER BY n
SETTINGS index_granularity = 8192
"
     test_cluster.ddl_check_query(instance, "DROP DATABASE test_ordinary ON CLUSTER cluster")
     test_cluster.pm_random_drops.push_rules(rules)
 
diff --git a/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.reference b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.reference
new file mode 100644
index 000000000000..d217855586be
--- /dev/null
+++ b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.reference
@@ -0,0 +1,4 @@
+CREATE TABLE default.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree(\'/clickhouse/test_01148/{shard}/default/rmt\', \'{replica}\')
ORDER BY n
SETTINGS index_granularity = 8192
+CREATE TABLE default.rmt1
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree(\'/clickhouse/test_01148/{shard}/default/rmt\', \'{replica}\')
ORDER BY n
SETTINGS index_granularity = 8192
+CREATE TABLE default.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree(\'{default_path_test}test_01148\', \'{default_name_test}\')
ORDER BY n
SETTINGS index_granularity = 8192
+CREATE TABLE default.rmt
(
    `n` UInt64,
    `s` String
)
ENGINE = ReplicatedMergeTree(\'{default_path_test}test_01148\', \'{default_name_test}\')
ORDER BY n
SETTINGS index_granularity = 8192
diff --git a/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql
new file mode 100644
index 000000000000..e13b25d1706b
--- /dev/null
+++ b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql
@@ -0,0 +1,19 @@
+DROP TABLE IF EXISTS rmt;
+
+CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('/clickhouse/test_01148/{shard}/{database}/{table}', '{replica}') ORDER BY n;
+SHOW CREATE TABLE rmt;
+RENAME TABLE rmt TO rmt1;
+DETACH TABLE rmt1;
+ATTACH TABLE rmt1;
+SHOW CREATE TABLE rmt1;
+
+CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('{default_path_test}{uuid}', '{default_name_test}') ORDER BY n;    -- { serverError 62 }
+CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('{default_path_test}test_01148', '{default_name_test}') ORDER BY n;
+SHOW CREATE TABLE rmt;
+RENAME TABLE rmt TO rmt2;   -- { serverError 48 }
+DETACH TABLE rmt;
+ATTACH TABLE rmt;
+SHOW CREATE TABLE rmt;
+
+DROP TABLE rmt;
+DROP TABLE rmt1;
