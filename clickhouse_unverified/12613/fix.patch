diff --git a/src/Common/ErrorCodes.cpp b/src/Common/ErrorCodes.cpp
index b91004fa92fb..ce7f5cf39422 100644
--- a/src/Common/ErrorCodes.cpp
+++ b/src/Common/ErrorCodes.cpp
@@ -336,7 +336,6 @@ namespace ErrorCodes
     extern const int CURRENT_WRITE_BUFFER_IS_EXHAUSTED = 362;
     extern const int CANNOT_CREATE_IO_BUFFER = 363;
     extern const int RECEIVED_ERROR_TOO_MANY_REQUESTS = 364;
-    extern const int OUTPUT_IS_NOT_SORTED = 365;
     extern const int SIZES_OF_NESTED_COLUMNS_ARE_INCONSISTENT = 366;
     extern const int TOO_MANY_FETCHES = 367;
     extern const int ALL_REPLICAS_ARE_STALE = 369;
diff --git a/src/DataStreams/DistinctSortedBlockInputStream.cpp b/src/DataStreams/DistinctSortedBlockInputStream.cpp
index aac3c3742520..eab706924c1b 100644
--- a/src/DataStreams/DistinctSortedBlockInputStream.cpp
+++ b/src/DataStreams/DistinctSortedBlockInputStream.cpp
@@ -9,8 +9,8 @@ namespace ErrorCodes
 }
 
 DistinctSortedBlockInputStream::DistinctSortedBlockInputStream(
-    const BlockInputStreamPtr & input, const SizeLimits & set_size_limits_, UInt64 limit_hint_, const Names & columns)
-    : description(input->getSortDescription())
+    const BlockInputStreamPtr & input, SortDescription sort_description, const SizeLimits & set_size_limits_, UInt64 limit_hint_, const Names & columns)
+    : description(std::move(sort_description))
     , columns_names(columns)
     , limit_hint(limit_hint_)
     , set_size_limits(set_size_limits_)
diff --git a/src/DataStreams/DistinctSortedBlockInputStream.h b/src/DataStreams/DistinctSortedBlockInputStream.h
index 1fb8c011f6e7..146c9326e5d2 100644
--- a/src/DataStreams/DistinctSortedBlockInputStream.h
+++ b/src/DataStreams/DistinctSortedBlockInputStream.h
@@ -22,7 +22,7 @@ class DistinctSortedBlockInputStream : public IBlockInputStream
 {
 public:
     /// Empty columns_ means all columns.
-    DistinctSortedBlockInputStream(const BlockInputStreamPtr & input, const SizeLimits & set_size_limits_, UInt64 limit_hint_, const Names & columns);
+    DistinctSortedBlockInputStream(const BlockInputStreamPtr & input, SortDescription sort_description, const SizeLimits & set_size_limits_, UInt64 limit_hint_, const Names & columns);
 
     String getName() const override { return "DistinctSorted"; }
 
@@ -48,7 +48,7 @@ class DistinctSortedBlockInputStream : public IBlockInputStream
         size_t rows,
         ClearableSetVariants & variants) const;
 
-    const SortDescription & description;
+    SortDescription description;
 
     struct PreviousBlock
     {
diff --git a/src/DataStreams/IBlockInputStream.cpp b/src/DataStreams/IBlockInputStream.cpp
index 6929db45a94d..66c747207e85 100644
--- a/src/DataStreams/IBlockInputStream.cpp
+++ b/src/DataStreams/IBlockInputStream.cpp
@@ -18,7 +18,6 @@ namespace DB
 namespace ErrorCodes
 {
     extern const int QUERY_WAS_CANCELLED;
-    extern const int OUTPUT_IS_NOT_SORTED;
     extern const int TOO_MANY_ROWS;
     extern const int TOO_MANY_BYTES;
     extern const int TOO_MANY_ROWS_OR_BYTES;
@@ -26,10 +25,6 @@ namespace ErrorCodes
     extern const int TOO_DEEP_PIPELINE;
 }
 
-const SortDescription & IBlockInputStream::getSortDescription() const
-{
-    throw Exception("Output of " + getName() + " is not sorted", ErrorCodes::OUTPUT_IS_NOT_SORTED);
-}
 
 /// It's safe to access children without mutex as long as these methods are called before first call to `read()` or `readPrefix()`.
 
diff --git a/src/DataStreams/IBlockInputStream.h b/src/DataStreams/IBlockInputStream.h
index dff567d15dc6..34e7bbac034f 100644
--- a/src/DataStreams/IBlockInputStream.h
+++ b/src/DataStreams/IBlockInputStream.h
@@ -66,12 +66,6 @@ class IBlockInputStream : public TypePromotion<IBlockInputStream>
         return none;
     }
 
-    /// If this stream generates data in order by some keys, return true.
-    virtual bool isSortedOutput() const { return false; }
-
-    /// In case of isSortedOutput, return corresponding SortDescription
-    virtual const SortDescription & getSortDescription() const;
-
     /** Read next block.
       * If there are no more blocks, return an empty block (for which operator `bool` returns false).
       * NOTE: Only one thread can read from one instance of IBlockInputStream simultaneously.
diff --git a/src/DataStreams/MergingSortedBlockInputStream.h b/src/DataStreams/MergingSortedBlockInputStream.h
index 9a732fff9471..d162fcfb0669 100644
--- a/src/DataStreams/MergingSortedBlockInputStream.h
+++ b/src/DataStreams/MergingSortedBlockInputStream.h
@@ -30,9 +30,6 @@ class MergingSortedBlockInputStream : public IBlockInputStream
 
     String getName() const override { return "MergingSorted"; }
 
-    bool isSortedOutput() const override { return true; }
-    const SortDescription & getSortDescription() const override { return description; }
-
     Block getHeader() const override { return header; }
 
 protected:
diff --git a/src/Storages/MergeTree/MergeTreeDataMergerMutator.cpp b/src/Storages/MergeTree/MergeTreeDataMergerMutator.cpp
index b7f400870a7e..46e1b2b9cb6e 100644
--- a/src/Storages/MergeTree/MergeTreeDataMergerMutator.cpp
+++ b/src/Storages/MergeTree/MergeTreeDataMergerMutator.cpp
@@ -802,7 +802,7 @@ MergeTreeData::MutableDataPartPtr MergeTreeDataMergerMutator::mergePartsToTempor
     BlockInputStreamPtr merged_stream = std::make_shared<TreeExecutorBlockInputStream>(std::move(merged_pipe));
 
     if (deduplicate)
-        merged_stream = std::make_shared<DistinctSortedBlockInputStream>(merged_stream, SizeLimits(), 0 /*limit_hint*/, Names());
+        merged_stream = std::make_shared<DistinctSortedBlockInputStream>(merged_stream, sort_description, SizeLimits(), 0 /*limit_hint*/, Names());
 
     if (need_remove_expired_values)
         merged_stream = std::make_shared<TTLBlockInputStream>(merged_stream, data, metadata_snapshot, new_data_part, time_of_merge, force_ttl);
