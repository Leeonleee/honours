diff --git a/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.reference b/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.reference
index 317dbe1c61c2..41ebee2944e7 100644
--- a/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.reference
+++ b/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.reference
@@ -1,5 +1,5 @@
 CREATE DICTIONARY default.dict
(
    `id` UInt32,
    `value` String
)
PRIMARY KEY id
SOURCE(CLICKHOUSE(HOST \'localhost\' PORT 9000 USER \'default\' DB \'default\' TABLE \'view\'))
LIFETIME(MIN 600 MAX 600)
LAYOUT(HASHED())
-CREATE TABLE default.`table`
(
    `col` String MATERIALIZED dictGet(\'default.dict\', \'value\', toUInt32(1))
)
ENGINE = MergeTree
ORDER BY tuple()
SETTINGS index_granularity = 8192
+CREATE TABLE default.`table`
(
    `col` String MATERIALIZED dictGet(\'default.dict\', \'value\', toUInt32(1)),
    `phys` Int32
)
ENGINE = MergeTree
ORDER BY tuple()
SETTINGS index_granularity = 8192
 1	v
 1	v
 1	v
diff --git a/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.sql b/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.sql
index c586db447c0a..cb10c50d5f01 100644
--- a/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.sql
+++ b/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.sql
@@ -14,7 +14,8 @@ SHOW CREATE dict;
 
 CREATE TABLE table
 (
-    col MATERIALIZED dictGet(currentDatabase() || '.dict', 'value', toUInt32(1))
+    col MATERIALIZED dictGet(currentDatabase() || '.dict', 'value', toUInt32(1)),
+    phys Int
 )
 ENGINE = MergeTree()
 ORDER BY tuple();
diff --git a/tests/queries/0_stateless/03199_join_with_materialized_column.sql b/tests/queries/0_stateless/03199_join_with_materialized_column.sql
index fef171cb9d1c..3b7c5e52b6bc 100644
--- a/tests/queries/0_stateless/03199_join_with_materialized_column.sql
+++ b/tests/queries/0_stateless/03199_join_with_materialized_column.sql
@@ -1,6 +1,6 @@
 SET enable_analyzer = 1;
 
 DROP TABLE IF EXISTS table_with_materialized;
-CREATE TABLE table_with_materialized (col String MATERIALIZED 'A') ENGINE = Memory;
+CREATE TABLE table_with_materialized (col String MATERIALIZED 'A', ins Int Ephemeral) ENGINE = Memory;
 SELECT number FROM numbers(1) AS n, table_with_materialized;
 DROP TABLE table_with_materialized;
diff --git a/tests/queries/0_stateless/03541_table_without_insertable_columns.reference b/tests/queries/0_stateless/03541_table_without_insertable_columns.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/03541_table_without_insertable_columns.sql b/tests/queries/0_stateless/03541_table_without_insertable_columns.sql
new file mode 100644
index 000000000000..8cf0e072328d
--- /dev/null
+++ b/tests/queries/0_stateless/03541_table_without_insertable_columns.sql
@@ -0,0 +1,12 @@
+-- Tags: no-parallel, no-ordinary-database
+-- Tag no-parallel: static UUID
+-- Tag no-ordinary-database: requires UUID
+
+CREATE TABLE no_physical (a Int EPHEMERAL) Engine=Memory; -- { serverError EMPTY_LIST_OF_COLUMNS_PASSED }
+CREATE TABLE no_physical (a Int ALIAS 1) Engine=Memory; -- { serverError EMPTY_LIST_OF_COLUMNS_PASSED }
+
+CREATE TABLE no_insertable (a Int MATERIALIZED 1) Engine=Memory; -- { serverError EMPTY_LIST_OF_COLUMNS_PASSED }
+ATTACH TABLE no_insertable UUID '00000000-0000-0000-0000-000000000001' (a Int MATERIALIZED 1) Engine=Memory;
+
+CREATE TABLE insertable (a Int EPHEMERAL, b Int MATERIALIZED 1) Engine=Memory;
+ALTER TABLE insertable DROP COLUMN a; -- { serverError EMPTY_LIST_OF_COLUMNS_PASSED }
