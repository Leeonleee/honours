{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 13277,
  "instance_id": "ClickHouse__ClickHouse-13277",
  "issue_numbers": [
    "13275"
  ],
  "base_commit": "4049f23188f6ced067bca407b4b1a29803e99d6f",
  "patch": "diff --git a/src/Functions/h3ToChildren.cpp b/src/Functions/h3ToChildren.cpp\nindex 6c1b685bcd92..d9e402231f7f 100644\n--- a/src/Functions/h3ToChildren.cpp\n+++ b/src/Functions/h3ToChildren.cpp\n@@ -5,17 +5,26 @@\n #include <Functions/FunctionFactory.h>\n #include <Functions/IFunction.h>\n #include <Common/typeid_cast.h>\n+#include <IO/WriteHelpers.h>\n #include <ext/range.h>\n \n+#include <constants.h>\n #include <h3api.h>\n \n \n+static constexpr size_t MAX_ARRAY_SIZE = 1 << 30;\n+\n+\n namespace DB\n {\n+\n namespace ErrorCodes\n {\n     extern const int ILLEGAL_TYPE_OF_ARGUMENT;\n+    extern const int ARGUMENT_OUT_OF_BOUND;\n+    extern const int TOO_LARGE_ARRAY_SIZE;\n }\n+\n class FunctionH3ToChildren : public IFunction\n {\n public:\n@@ -63,7 +72,16 @@ class FunctionH3ToChildren : public IFunction\n             const UInt64 parent_hindex = col_hindex->getUInt(row);\n             const UInt8 child_resolution = col_resolution->getUInt(row);\n \n-            const auto vec_size = maxH3ToChildrenSize(parent_hindex, child_resolution);\n+            if (child_resolution > MAX_H3_RES)\n+                throw Exception(\"The argument 'resolution' (\" + toString(child_resolution) + \") of function \" + getName()\n+                    + \" is out of bounds because the maximum resolution in H3 library is \" + toString(MAX_H3_RES), ErrorCodes::ARGUMENT_OUT_OF_BOUND);\n+\n+            const size_t vec_size = maxH3ToChildrenSize(parent_hindex, child_resolution);\n+            if (vec_size > MAX_ARRAY_SIZE)\n+                throw Exception(\"The result of function\" + getName()\n+                    + \" (array of \" + toString(vec_size) + \" elements) will be too large with resolution argument = \"\n+                    + toString(child_resolution), ErrorCodes::TOO_LARGE_ARRAY_SIZE);\n+\n             hindex_vec.resize(vec_size);\n             h3ToChildren(parent_hindex, child_resolution, hindex_vec.data());\n \ndiff --git a/src/Functions/h3ToParent.cpp b/src/Functions/h3ToParent.cpp\nindex 981628ae8f81..2f6a9f3264d5 100644\n--- a/src/Functions/h3ToParent.cpp\n+++ b/src/Functions/h3ToParent.cpp\n@@ -3,17 +3,22 @@\n #include <Functions/FunctionFactory.h>\n #include <Functions/IFunction.h>\n #include <Common/typeid_cast.h>\n+#include <IO/WriteHelpers.h>\n #include <ext/range.h>\n \n+#include <constants.h>\n #include <h3api.h>\n \n \n namespace DB\n {\n+\n namespace ErrorCodes\n {\n     extern const int ILLEGAL_TYPE_OF_ARGUMENT;\n+    extern const int ARGUMENT_OUT_OF_BOUND;\n }\n+\n class FunctionH3ToParent : public IFunction\n {\n public:\n@@ -57,6 +62,10 @@ class FunctionH3ToParent : public IFunction\n             const UInt64 hindex = col_hindex->getUInt(row);\n             const UInt8 resolution = col_resolution->getUInt(row);\n \n+            if (resolution > MAX_H3_RES)\n+                throw Exception(\"The argument 'resolution' (\" + toString(resolution) + \") of function \" + getName()\n+                    + \" is out of bounds because the maximum resolution in H3 library is \" + toString(MAX_H3_RES), ErrorCodes::ARGUMENT_OUT_OF_BOUND);\n+\n             UInt64 res = h3ToParent(hindex, resolution);\n \n             dst_data[row] = res;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01428_h3_range_check.reference b/tests/queries/0_stateless/01428_h3_range_check.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/01428_h3_range_check.sql b/tests/queries/0_stateless/01428_h3_range_check.sql\nnew file mode 100644\nindex 000000000000..7c7376a90aea\n--- /dev/null\n+++ b/tests/queries/0_stateless/01428_h3_range_check.sql\n@@ -0,0 +1,2 @@\n+SELECT h3ToChildren(599405990164561919, 100); -- { serverError 69 }\n+SELECT h3ToParent(599405990164561919, 100); -- { serverError 69 }\n",
  "problem_statement": "Stack overflow in `h3ToChildren` function.\n`SELECT h3ToChildren(599405990164561919, 100)`\n",
  "hints_text": "",
  "created_at": "2020-08-03T14:33:39Z"
}