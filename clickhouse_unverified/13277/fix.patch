diff --git a/src/Functions/h3ToChildren.cpp b/src/Functions/h3ToChildren.cpp
index 6c1b685bcd92..d9e402231f7f 100644
--- a/src/Functions/h3ToChildren.cpp
+++ b/src/Functions/h3ToChildren.cpp
@@ -5,17 +5,26 @@
 #include <Functions/FunctionFactory.h>
 #include <Functions/IFunction.h>
 #include <Common/typeid_cast.h>
+#include <IO/WriteHelpers.h>
 #include <ext/range.h>
 
+#include <constants.h>
 #include <h3api.h>
 
 
+static constexpr size_t MAX_ARRAY_SIZE = 1 << 30;
+
+
 namespace DB
 {
+
 namespace ErrorCodes
 {
     extern const int ILLEGAL_TYPE_OF_ARGUMENT;
+    extern const int ARGUMENT_OUT_OF_BOUND;
+    extern const int TOO_LARGE_ARRAY_SIZE;
 }
+
 class FunctionH3ToChildren : public IFunction
 {
 public:
@@ -63,7 +72,16 @@ class FunctionH3ToChildren : public IFunction
             const UInt64 parent_hindex = col_hindex->getUInt(row);
             const UInt8 child_resolution = col_resolution->getUInt(row);
 
-            const auto vec_size = maxH3ToChildrenSize(parent_hindex, child_resolution);
+            if (child_resolution > MAX_H3_RES)
+                throw Exception("The argument 'resolution' (" + toString(child_resolution) + ") of function " + getName()
+                    + " is out of bounds because the maximum resolution in H3 library is " + toString(MAX_H3_RES), ErrorCodes::ARGUMENT_OUT_OF_BOUND);
+
+            const size_t vec_size = maxH3ToChildrenSize(parent_hindex, child_resolution);
+            if (vec_size > MAX_ARRAY_SIZE)
+                throw Exception("The result of function" + getName()
+                    + " (array of " + toString(vec_size) + " elements) will be too large with resolution argument = "
+                    + toString(child_resolution), ErrorCodes::TOO_LARGE_ARRAY_SIZE);
+
             hindex_vec.resize(vec_size);
             h3ToChildren(parent_hindex, child_resolution, hindex_vec.data());
 
diff --git a/src/Functions/h3ToParent.cpp b/src/Functions/h3ToParent.cpp
index 981628ae8f81..2f6a9f3264d5 100644
--- a/src/Functions/h3ToParent.cpp
+++ b/src/Functions/h3ToParent.cpp
@@ -3,17 +3,22 @@
 #include <Functions/FunctionFactory.h>
 #include <Functions/IFunction.h>
 #include <Common/typeid_cast.h>
+#include <IO/WriteHelpers.h>
 #include <ext/range.h>
 
+#include <constants.h>
 #include <h3api.h>
 
 
 namespace DB
 {
+
 namespace ErrorCodes
 {
     extern const int ILLEGAL_TYPE_OF_ARGUMENT;
+    extern const int ARGUMENT_OUT_OF_BOUND;
 }
+
 class FunctionH3ToParent : public IFunction
 {
 public:
@@ -57,6 +62,10 @@ class FunctionH3ToParent : public IFunction
             const UInt64 hindex = col_hindex->getUInt(row);
             const UInt8 resolution = col_resolution->getUInt(row);
 
+            if (resolution > MAX_H3_RES)
+                throw Exception("The argument 'resolution' (" + toString(resolution) + ") of function " + getName()
+                    + " is out of bounds because the maximum resolution in H3 library is " + toString(MAX_H3_RES), ErrorCodes::ARGUMENT_OUT_OF_BOUND);
+
             UInt64 res = h3ToParent(hindex, resolution);
 
             dst_data[row] = res;
