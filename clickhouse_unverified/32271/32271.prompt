You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
[RFC] How to count read rows and bytes in scalar subqueries
Hi,

As you might be aware, ClickHouse currently doesn't count rows or bytes read/written in scalar subqueries, and it doesn't handle query cancellation or progress in them either.

While working on being able to cancel scalar queries in https://github.com/ClickHouse/ClickHouse/pull/32271 it turns out that everything was related and once you are able to cancel them you get progress reports, rows read/written and so on all with the same change.

@KochetovNicolai pointed out that we would be breaking backwards compatibility since some people might be relying in the fact that rows read by the scalar subqueries are not accounted in the final report or the limits, in fact there are many tests that needed to be changed for this reason.

Paraphrasing his comments, therea re a few things that we can do:
```
* Keep ignoring max_rows_to_read for subqueries and discuss possible changes in a separate pr. It's the easiest one, I would be happy to merge this pr. (There could be other settings which are not obvious, and we should be ready to default them too).
* Mark this pr as backward incompatibly, and introduce another one setting to roll back to old behaviour (which we can remove probably in a few month). (I don't like new settings).
* Also add a new setting, but keep current behaviour as default.
* Separate settings for subqueries (which may be zero or same for query by default).
```

Personally I would change the behaviour without any settings to turn it off for 2 reasons:
* I think that this is a good improvement and something desirable in all cases. Reporting read rows indepedently of where they were read (CTE, main query, subqueries, scalar subqueries) should be the way to go.
* It keeps the code clean. Adding more settings involves either complicating the code or breaking the ability to KILL scalar subqueries.

What does the community think? Do somebody need to keep the old behaviour and wouldn't be able to handle the change?
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
