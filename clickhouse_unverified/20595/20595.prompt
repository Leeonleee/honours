You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Ideas on how to rework cache dictionaries.
The code of cache dictionaries is unnesessarily complicated.

1. Template specialization on types (all integers and strings) is unnecessary.
2. It does not make sense to have separate `cache` and `complex_key_cache` - the performance of generic case won't be lower.
3. It stores all attributes in separate hash tables that leads to higher complexity and higher memory usage. Instead, let's serialize all attributes of every record into single contiguous memory region (in ArenaWithFreeLists) along with offsets to every column. This will also allow to support more data types. Serialize and desirialize with IColumn methods.
4. Intrusive LRU linked list may work better than cache table and as we collect all attributes together, memory overhead won't be high.

We can create new type of dictionary layout, then provide for `cache` and `complex_key_cached` and remove their code.
Cache dictionary weird bytes allocated behaviour
My code runs on a 128Gb of RAM machine. I generate a CSV file, create a corresponding dictionary caching the entire table so that I can run a query returning the entire table (for benchmarking purposes). I record the number of rows, the time to load the dictionary, and number of bytes allocated. There are two bizarre things to note:

- Sometimes the bytes allocated get stuck, i.e. 3400000 and 3500000 rows have the same number of bytes allocated despite the number of cached entries being different.
- Between 3300000 and 3400000 the number of bytes allocated almost doubles while the number of cached entries only increases slightly.
Keep in mind `cachedEntries = numberOfRows*28`. 

```
Consecutive: Number of rows,Loading time,Mean,Variance,Skewness,Bytes Allocated
3000000,14.04,6.445,0.08519,0.1359,16.06 GiB
3100000,17.78,9.309,0.5572,0.2411,16.19 GiB
3200000,30.44,6.821,0.04326,0.09151,16.31 GiB
3300000,31.37,8.631,0.2122,0.1603,16.31 GiB
3400000,38.62,9.87,0.2573,0.1543,30.25 GiB
3500000,21.65,9.046,0.2258,0.1577,30.25 GiB
3600000,41.43,12.62,0.03201,0.04252,30.37 GiB
3700000,25.55,10.25,0.3695,0.1781,30.50 GiB
```
AddressSanitizer: heap-buffer-overflow DB::SSDComplexKeyCachePartition::append
**Describe the bug**
https://clickhouse-test-reports.s3.yandex.net/19702/6fc39b10d30be05d183f77ea7013901cbc425a5d/fuzzer_asan/report.html#fail1

**Error message and/or stacktrace**
``` sql
SELECT 2., dictGetInt32('database_for_dict.ssd_dict', 'btoInt32(9223372036854775807)))
```

```
2021.01.27 15:42:44.233048 [ 177 ] {} <Fatal> BaseDaemon: ########################################
2021.01.27 15:42:44.233149 [ 177 ] {} <Fatal> BaseDaemon: (version 21.2.1.5823, build id: 6582B09C21ECF70ADDA3E772ACAA4BCDF9378F88) (from thread 91) (query_id: d918ad4b-6fa2-4e73-839b-233653f1297e) Received signal Unknown signal (-3)
2021.01.27 15:42:44.233223 [ 177 ] {} <Fatal> BaseDaemon: Sanitizer trap.
2021.01.27 15:42:44.233337 [ 177 ] {} <Fatal> BaseDaemon: Stack trace: 0xa9ddce7 0xadf69bd 0xa916496 0xa8fdec4 0xa8ff97e 0xa8f938c 0xa984105 0x19937ad7 0x19933946 0x1998d9b0 0x11494d8b 0x11481b46 0xf756235 0xf755dfc 0xf832797 0xf8311c1 0xf8326c6 0xf8338d4 0x1e31158d 0x1e30faeb 0x1f0ab4f3 0x1f0b6983 0x1f0c0fe9 0x1f07919f 0x1f04c631 0x1f0637c9 0x1f06ed8a 0x1ec41f02 0x1ec37bc5 0x1ec2ca27 0x1ec291b7 0x1f101913
2021.01.27 15:42:44.233694 [ 177 ] {} <Fatal> BaseDaemon: 0. ./obj-x86_64-linux-gnu/../src/Common/StackTrace.cpp:293: StackTrace::StackTrace() @ 0xa9ddce7 in /workspace/clickhouse
2021.01.27 15:42:44.234679 [ 177 ] {} <Fatal> BaseDaemon: 1. ./obj-x86_64-linux-gnu/../src/Common/CurrentThread.h:81: sanitizerDeathCallback() @ 0xadf69bd in /workspace/clickhouse
2021.01.27 15:42:44.236450 [ 177 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0xa916496 in /workspace/clickhouse
2021.01.27 15:42:44.238154 [ 177 ] {} <Fatal> BaseDaemon: 3. ? @ 0xa8fdec4 in /workspace/clickhouse
2021.01.27 15:42:44.239825 [ 177 ] {} <Fatal> BaseDaemon: 4. __asan::ReportGenericError(unsigned long, unsigned long, unsigned long, unsigned long, bool, unsigned long, unsigned int, bool) @ 0xa8ff97e in /workspace/clickhouse
2021.01.27 15:42:44.241581 [ 177 ] {} <Fatal> BaseDaemon: 5. __asan_memcpy @ 0xa8f938c in /workspace/clickhouse
2021.01.27 15:42:44.245370 [ 177 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/IO/WriteBuffer.h:81: DB::WriteBuffer::write(char const*, unsigned long) @ 0xa984105 in /workspace/clickhouse
2021.01.27 15:42:44.246290 [ 177 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:268: DB::SSDComplexKeyCachePartition::append(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, std::__1::vector<DB::SSDComplexKeyCachePartition::Attribute, std::__1::allocator<DB::SSDComplexKeyCachePartition::Attribute> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, unsigned long) @ 0x19937ad7 in /workspace/clickhouse
2021.01.27 15:42:44.246984 [ 177 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:0: DB::SSDComplexKeyCachePartition::appendDefaults(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, unsigned long) @ 0x19933946 in /workspace/clickhouse
2021.01.27 15:42:44.252187 [ 177 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1235: DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const @ 0x1998d9b0 in /workspace/clickhouse
2021.01.27 15:42:44.253899 [ 177 ] {} <Fatal> BaseDaemon: 10. COW<DB::IColumn>::immutable_ptr<DB::IColumn> DB::FunctionDictGet<DB::DataTypeNumber<int>, DB::NameDictGetInt32>::executeDispatchComplex<DB::SSDComplexKeyCacheDictionary>(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDictionaryBase const> const&) const @ 0x11494d8b in /workspace/clickhouse
2021.01.27 15:42:44.255575 [ 177 ] {} <Fatal> BaseDaemon: 11. DB::FunctionDictGet<DB::DataTypeNumber<int>, DB::NameDictGetInt32>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x11481b46 in /workspace/clickhouse
2021.01.27 15:42:44.257224 [ 177 ] {} <Fatal> BaseDaemon: 12. DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0xf756235 in /workspace/clickhouse
2021.01.27 15:42:44.258863 [ 177 ] {} <Fatal> BaseDaemon: 13. DB::DefaultExecutable::executeDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0xf755dfc in /workspace/clickhouse
2021.01.27 15:42:44.260545 [ 177 ] {} <Fatal> BaseDaemon: 14. DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0xf832797 in /workspace/clickhouse
2021.01.27 15:42:44.262139 [ 177 ] {} <Fatal> BaseDaemon: 15. DB::ExecutableFunctionAdaptor::defaultImplementationForConstantArguments(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0xf8311c1 in /workspace/clickhouse
2021.01.27 15:42:44.263847 [ 177 ] {} <Fatal> BaseDaemon: 16. DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0xf8326c6 in /workspace/clickhouse
2021.01.27 15:42:44.265523 [ 177 ] {} <Fatal> BaseDaemon: 17. DB::ExecutableFunctionAdaptor::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0xf8338d4 in /workspace/clickhouse
2021.01.27 15:42:44.266568 [ 177 ] {} <Fatal> BaseDaemon: 18. ./obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:194: DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<DB::ActionsDAG::Node*, std::__1::allocator<DB::ActionsDAG::Node*> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) @ 0x1e31158d in /workspace/clickhouse
2021.01.27 15:42:44.267542 [ 177 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:0: DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::Context const&) @ 0x1e30faeb in /workspace/clickhouse
2021.01.27 15:42:44.269271 [ 177 ] {} <Fatal> BaseDaemon: 20. ./obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:0: DB::ScopeStack::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) @ 0x1f0ab4f3 in /workspace/clickhouse
2021.01.27 15:42:44.271427 [ 177 ] {} <Fatal> BaseDaemon: 21. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/string:1444: DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x1f0b6983 in /workspace/clickhouse
2021.01.27 15:42:44.274172 [ 177 ] {} <Fatal> BaseDaemon: 22. ./obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:0: DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x1f0c0fe9 in /workspace/clickhouse
2021.01.27 15:42:44.277875 [ 177 ] {} <Fatal> BaseDaemon: 23. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2844: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x1f07919f in /workspace/clickhouse
2021.01.27 15:42:44.279240 [ 177 ] {} <Fatal> BaseDaemon: 24. ./obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:410: DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x1f04c631 in /workspace/clickhouse
2021.01.27 15:42:44.281664 [ 177 ] {} <Fatal> BaseDaemon: 25. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3211: DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x1f0637c9 in /workspace/clickhouse
2021.01.27 15:42:44.284638 [ 177 ] {} <Fatal> BaseDaemon: 26. ./obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:0: DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&) @ 0x1f06ed8a in /workspace/clickhouse
2021.01.27 15:42:44.286693 [ 177 ] {} <Fatal> BaseDaemon: 27. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:567: DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x1ec41f02 in /workspace/clickhouse
2021.01.27 15:42:44.288396 [ 177 ] {} <Fatal> BaseDaemon: 28. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:461: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const @ 0x1ec37bc5 in /workspace/clickhouse
2021.01.27 15:42:44.289529 [ 177 ] {} <Fatal> BaseDaemon: 29. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0x1ec2ca27 in /workspace/clickhouse
2021.01.27 15:42:44.290532 [ 177 ] {} <Fatal> BaseDaemon: 30. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:154: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x1ec291b7 in /workspace/clickhouse
2021.01.27 15:42:44.291527 [ 177 ] {} <Fatal> BaseDaemon: 31. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:0: DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x1f101913 in /workspace/clickhouse
2021.01.27 15:42:44.788310 [ 177 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: 610FC81A2CB78A9147920C9EDBBBDD7F. There is no information about the reference checksum.
```

```
=================================================================
==86==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6270007c0000 at pc 0x00000a8f936a bp 0x7f91d51b3320 sp 0x7f91d51b2ae8
WRITE of size 8 at 0x6270007c0000 thread T3 (TCPHandler)
    #0 0xa8f9369 in __asan_memcpy (/workspace/clickhouse+0xa8f9369)
    #1 0xa984104 in DB::WriteBuffer::write(char const*, unsigned long) obj-x86_64-linux-gnu/../src/IO/WriteBuffer.h:80:13
    #2 0x19937ad6 in DB::SSDComplexKeyCachePartition::append(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, std::__1::vector<DB::SSDComplexKeyCachePartition::Attribute, std::__1::allocator<DB::SSDComplexKeyCachePartition::Attribute> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, unsigned long)::$_2::operator()() const obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:267:23
    #3 0x19937ad6 in DB::SSDComplexKeyCachePartition::append(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, std::__1::vector<DB::SSDComplexKeyCachePartition::Attribute, std::__1::allocator<DB::SSDComplexKeyCachePartition::Attribute> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, unsigned long) obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:371:13
    #4 0x19933945 in DB::SSDComplexKeyCachePartition::appendDefaults(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, unsigned long) obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:232:12
    #5 0x1998d9af in void DB::SSDComplexKeyCacheStorage::update<void DB::SSDComplexKeyCacheDictionary::getItemsNumberImpl<int, int, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::conditional<IsDecimalNumber<int>, DB::DecimalPaddedPODArray<int>, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul> >::type&, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13&&) const::'lambda'(auto, int, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13 const&), void DB::SSDComplexKeyCacheDictionary::getItemsNumberImpl<int, int, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::conditional<IsDecimalNumber<int>, DB::DecimalPaddedPODArray<int>, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul> >::type&, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13&&) const::'lambda'(auto)>(std::__1::unique_ptr<DB::IDictionarySource, std::__1::default_delete<DB::IDictionarySource> >&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, DB::ComplexKeysPoolImpl<DB::Arena>&, auto&&, int&&, DB::ExternalLoadableLifetime)::'lambda'(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&)::operator()(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&) const obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1235:49
    #6 0x1998d9af in void DB::SSDComplexKeyCacheStorage::update<void DB::SSDComplexKeyCacheDictionary::getItemsNumberImpl<int, int, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::conditional<IsDecimalNumber<int>, DB::DecimalPaddedPODArray<int>, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul> >::type&, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13&&) const::'lambda'(auto, int, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13 const&), void DB::SSDComplexKeyCacheDictionary::getItemsNumberImpl<int, int, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::conditional<IsDecimalNumber<int>, DB::DecimalPaddedPODArray<int>, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul> >::type&, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13&&) const::'lambda'(auto)>(std::__1::unique_ptr<DB::IDictionarySource, std::__1::default_delete<DB::IDictionarySource> >&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, DB::ComplexKeysPoolImpl<DB::Arena>&, auto&&, int&&, DB::ExternalLoadableLifetime) obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1303:13
    #7 0x1998d9af in void DB::SSDComplexKeyCacheDictionary::getItemsNumberImpl<int, int, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::conditional<IsDecimalNumber<int>, DB::DecimalPaddedPODArray<int>, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul> >::type&, DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const::$_13&&) const obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1491:13
    #8 0x1998d9af in DB::SSDComplexKeyCacheDictionary::getInt32(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::PODArray<int, 4096ul, Allocator<false, false>, 15ul, 16ul>&) const obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1399:5
    #9 0x11494d8a in COW<DB::IColumn>::immutable_ptr<DB::IColumn> DB::FunctionDictGet<DB::DataTypeNumber<int>, DB::NameDictGetInt32>::executeDispatchComplex<DB::SSDComplexKeyCacheDictionary>(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDictionaryBase const> const&) const (/workspace/clickhouse+0x11494d8a)
    #10 0x11481b45 in DB::FunctionDictGet<DB::DataTypeNumber<int>, DB::NameDictGetInt32>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x11481b45)
    #11 0xf756234 in DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0xf756234)
    #12 0xf755dfb in DB::DefaultExecutable::executeDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0xf755dfb)
    #13 0xf832796 in DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0xf832796)
    #14 0xf8311c0 in DB::ExecutableFunctionAdaptor::defaultImplementationForConstantArguments(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0xf8311c0)
    #15 0xf8326c5 in DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0xf8326c5)
    #16 0xf8338d3 in DB::ExecutableFunctionAdaptor::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0xf8338d3)
    #17 0x1e31158c in DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<DB::ActionsDAG::Node*, std::__1::allocator<DB::ActionsDAG::Node*> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:211:35
    #18 0x1e30faea in DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::Context const&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:165:12
    #19 0x1f0ab4f2 in DB::ScopeStack::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:501:51
    #20 0x1f0b6982 in DB::ActionsMatcher::Data::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.h:155:27
    #21 0x1f0b6982 in DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:971:14
    #22 0x1f0c0fe8 in DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:654:17
    #23 0x1f07919e in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:34:13
    #24 0x1f04c630 in DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:410:48
    #25 0x1f0637c8 in DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:1083:5
    #26 0x1f06ed89 in DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:1467:24
    #27 0x1ec41f01 in DB::InterpreterSelectQuery::getSampleBlockImpl() obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:567:23
    #28 0x1ec37bc4 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:461:25
    #29 0x1ec2ca26 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:464:5
    #30 0x1ec291b6 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:154:7
    #31 0x1f101912 in std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST> const&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068:32
    #32 0x1f101912 in DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:327:16
    #33 0x1f0fdce2 in DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:249:13
    #34 0x1eb730c0 in std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068:32
    #35 0x1eb730c0 in DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterFactory.cpp:110:16
    #36 0x1f51301e in DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:520:28
    #37 0x1f510297 in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:900:30
    #38 0x20777e0c in DB::TCPHandler::runImpl() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:260:24
    #39 0x2079a86c in DB::TCPHandler::run() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1417:9
    #40 0x2672c48e in Poco::Net::TCPServerConnection::start() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3
    #41 0x2672cfab in Poco::Net::TCPServerDispatcher::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:112:19
    #42 0x269ee7d4 in Poco::PooledThread::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14
    #43 0x269e8d26 in Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27
    #44 0x7f92b127b608 in start_thread /build/glibc-ZN95T4/glibc-2.31/nptl/pthread_create.c:477:8
    #45 0x7f92b11a2292 in clone /build/glibc-ZN95T4/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95

0x6270007c0000 is located 0 bytes to the right of 8192-byte region [0x6270007be000,0x6270007c0000)
allocated by thread T3 (TCPHandler) here:
    #0 0xa8fa917 in posix_memalign (/workspace/clickhouse+0xa8fa917)
    #1 0xaa28445 in Allocator<false, false>::allocNoTrack(unsigned long, unsigned long) obj-x86_64-linux-gnu/../src/Common/Allocator.h:227:27
    #2 0xaa2815c in Allocator<false, false>::alloc(unsigned long, unsigned long) obj-x86_64-linux-gnu/../src/Common/Allocator.h:96:16
    #3 0xaa2815c in DB::Memory<Allocator<false, false> >::alloc() obj-x86_64-linux-gnu/../src/IO/BufferWithOwnMemory.h:117:49
    #4 0x19934018 in DB::Memory<Allocator<false, false> >::Memory(unsigned long, unsigned long) obj-x86_64-linux-gnu/../src/IO/BufferWithOwnMemory.h:43:9
    #5 0x19934018 in void std::__1::__optional_storage_base<DB::Memory<Allocator<false, false> >, false>::__construct<unsigned long, unsigned long const&>(unsigned long&&, unsigned long const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/optional:324:55
    #6 0x19934018 in DB::Memory<Allocator<false, false> >& std::__1::optional<DB::Memory<Allocator<false, false> > >::emplace<unsigned long, unsigned long const&, void>(unsigned long&&, unsigned long const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/optional:830:15
    #7 0x19934018 in DB::SSDComplexKeyCachePartition::append(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, std::__1::vector<DB::SSDComplexKeyCachePartition::Attribute, std::__1::allocator<DB::SSDComplexKeyCachePartition::Attribute> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, unsigned long) obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:261:16
    #8 0x19933945 in DB::SSDComplexKeyCachePartition::appendDefaults(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, unsigned long) obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:232:12
    #9 0x19a9136e in void DB::SSDComplexKeyCacheStorage::update<void DB::SSDComplexKeyCacheDictionary::getItemsStringImpl<DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*, DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48&&) const::'lambda'(DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48, auto, auto const&), void DB::SSDComplexKeyCacheDictionary::getItemsStringImpl<DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*, DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48&&) const::'lambda'(DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48)>(std::__1::unique_ptr<DB::IDictionarySource, std::__1::default_delete<DB::IDictionarySource> >&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, DB::ComplexKeysPoolImpl<DB::Arena>&, DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48&&, auto&&, DB::ExternalLoadableLifetime)::'lambda'(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&)::operator()(std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, DB::PODArray<DB::SSDComplexKeyCachePartition::Metadata, 4096ul, Allocator<false, false>, 15ul, 16ul> const&) const obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1235:49
    #10 0x19a9136e in void DB::SSDComplexKeyCacheStorage::update<void DB::SSDComplexKeyCacheDictionary::getItemsStringImpl<DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*, DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48&&) const::'lambda'(DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48, auto, auto const&), void DB::SSDComplexKeyCacheDictionary::getItemsStringImpl<DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*, DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48&&) const::'lambda'(DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48)>(std::__1::unique_ptr<DB::IDictionarySource, std::__1::default_delete<DB::IDictionarySource> >&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, std::__1::vector<DB::KeyRef, std::__1::allocator<DB::KeyRef> > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, DB::ComplexKeysPoolImpl<DB::Arena>&, DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48&&, auto&&, DB::ExternalLoadableLifetime) obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1303:13
    #11 0x19a9136e in void DB::SSDComplexKeyCacheDictionary::getItemsStringImpl<DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48>(unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*, DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const::$_48&&) const obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1600:13
    #12 0x19a9136e in DB::SSDComplexKeyCacheDictionary::getString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, DB::ColumnString*) const obj-x86_64-linux-gnu/../src/Dictionaries/SSDComplexKeyCacheDictionary.cpp:1520:5
    #13 0x115673c3 in COW<DB::IColumn>::immutable_ptr<DB::IColumn> DB::FunctionDictGetString::executeDispatchComplex<DB::SSDComplexKeyCacheDictionary>(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDictionaryBase const> const&) const (/workspace/clickhouse+0x115673c3)
    #14 0x11556095 in DB::FunctionDictGetString::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x11556095)
    #15 0xf756234 in DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0xf756234)
    #16 0xf755dfb in DB::DefaultExecutable::executeDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0xf755dfb)
    #17 0xf832796 in DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0xf832796)
    #18 0xf8311c0 in DB::ExecutableFunctionAdaptor::defaultImplementationForConstantArguments(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0xf8311c0)
    #19 0xf8326c5 in DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0xf8326c5)
    #20 0xf8338d3 in DB::ExecutableFunctionAdaptor::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0xf8338d3)
    #21 0x1e31158c in DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<DB::ActionsDAG::Node*, std::__1::allocator<DB::ActionsDAG::Node*> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:211:35
    #22 0x1e30faea in DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::Context const&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:165:12
    #23 0x1f0ab4f2 in DB::ScopeStack::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:501:51
    #24 0x1f0b6982 in DB::ActionsMatcher::Data::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.h:155:27
    #25 0x1f0b6982 in DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:971:14
    #26 0x1f0b0f7b in DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:882:17
    #27 0x1f0c0fe8 in DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:654:17
    #28 0x1f07919e in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:34:13
    #29 0x1f04c630 in DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:410:48
    #30 0x1f0637c8 in DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:1083:5
    #31 0x1f06ed89 in DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:1467:24
    #32 0x1ec41f01 in DB::InterpreterSelectQuery::getSampleBlockImpl() obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:567:23
    #33 0x1ec37bc4 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:461:25
    #34 0x1ec2ca26 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:464:5
    #35 0x1ec291b6 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:154:7
    #36 0x1f101912 in std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST> const&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068:32
    #37 0x1f101912 in DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:327:16
    #38 0x1f0fdce2 in DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:249:13

Thread T3 (TCPHandler) created by T0 here:
    #0 0xa8e488a in pthread_create (/workspace/clickhouse+0xa8e488a)
    #1 0x269e80bf in Poco::ThreadImpl::startImpl(Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:202:6
    #2 0x269eaf3a in Poco::Thread::start(Poco::Runnable&) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:128:2
    #3 0x269eed78 in Poco::PooledThread::start() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:85:10
    #4 0x269eed78 in Poco::ThreadPool::ThreadPool(int, int, int, int) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:252:12
    #5 0xa94a623 in DB::Server::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../programs/server/Server.cpp:828:22
    #6 0x2675c595 in Poco::Util::Application::run() obj-x86_64-linux-gnu/../contrib/poco/Util/src/Application.cpp:334:8
    #7 0xa93518a in DB::Server::run() obj-x86_64-linux-gnu/../programs/server/Server.cpp:337:25
    #8 0x26799b97 in Poco::Util::ServerApplication::run(int, char**) obj-x86_64-linux-gnu/../contrib/poco/Util/src/ServerApplication.cpp:611:9
    #9 0xa931791 in mainEntryClickHouseServer(int, char**) obj-x86_64-linux-gnu/../programs/server/Server.cpp:129:20
    #10 0xa92d6ba in main obj-x86_64-linux-gnu/../programs/main.cpp:368:12
    #11 0x7f92b10a70b2 in __libc_start_main /build/glibc-ZN95T4/glibc-2.31/csu/../csu/libc-start.c:308:16

SUMMARY: AddressSanitizer: heap-buffer-overflow (/workspace/clickhouse+0xa8f9369) in __asan_memcpy
Shadow bytes around the buggy address:
  0x0c4e800effb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4e800effc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4e800effd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4e800effe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4e800efff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c4e800f0000:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4e800f0010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4e800f0020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4e800f0030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4e800f0040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4e800f0050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==86==ABORTING
```
Dictionaries add dictGet, dictGetOrDefault overload that returns multiple columns as tuple
Currently for cache and direct dictionaries if we need to get multiple columns we have to go into cache or into source multiple times. Solution is to add overload for dictGet, dictGetOrDefault functions to support multiple attributes names passes into function as tuple. For dictGetOrDefault additionally we need pass tuple of default columns.
Syntax: 
1. dictGet('dict_name', ('1_attr_name', ...), keys_type, keys_column_expression).
2. dictGetOrDefault('dict_name', ('1_attr_name', ...), keys_type, keys_column_expression, (1_attr_default_expr, ...)).

OOM error when setting up cache dictionaries
Running a centos 7.6 VM with 16Gb of RAM I get the following error
```
Code: 32. DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000
```
when querying a cache dictionary with 75 columns and 100000 rows (126Mb). Is this to be expected as the dictionary seems quite small. I'm using `clickhouse-client --query` to launch the query:
```
SELECT  dictGet('CacheDictionary', 'date', toUInt64(number)) AS date, SUM(dictGet('CacheDictionary', 'filterColumn', toUInt64(number))) AS val, AVG(dictGet('CacheDictionary', 'filterColumn', toUInt64(number))) AS avg FROM system.numbers(1, 100000) GROUP BY date
```
Checking dmesg I get the correspond OOM error.
```
[613700.447158] CPU: 1 PID: 5859 Comm: node Not tainted 3.10.0-957.5.1.el7.x86_64 #1
[613700.449266] Hardware name: Scaleway SCW-GP1-S, BIOS 0.0.0 02/06/2015
[613700.451020] Call Trace:
[613700.451708]  [<ffffffff9cf61e41>] dump_stack+0x19/0x1b
[613700.452792]  [<ffffffff9cf5c86a>] dump_header+0x90/0x229
[613700.453875]  [<ffffffff9cb00f3b>] ? cred_has_capability+0x6b/0x120
[613700.455220]  [<ffffffff9c9ba524>] oom_kill_process+0x254/0x3d0
[613700.456475]  [<ffffffff9cb0101e>] ? selinux_capable+0x2e/0x40
[613700.457641]  [<ffffffff9c9bad66>] out_of_memory+0x4b6/0x4f0
[613700.458844]  [<ffffffff9cf5d36e>] __alloc_pages_slowpath+0x5d6/0x724
[613700.459965]  [<ffffffff9c9c1145>] __alloc_pages_nodemask+0x405/0x420
[613700.460773]  [<ffffffff9ca0e0a8>] alloc_pages_current+0x98/0x110
[613700.461521]  [<ffffffff9c9b6387>] __page_cache_alloc+0x97/0xb0
[613700.462156]  [<ffffffff9c9b8fe8>] filemap_fault+0x298/0x490
[613700.462849]  [<ffffffffc0461186>] ext4_filemap_fault+0x36/0x50 [ext4]
[613700.463623]  [<ffffffff9c9e458a>] __do_fault.isra.59+0x8a/0x100
[613700.464350]  [<ffffffff9c9e4b3c>] do_read_fault.isra.61+0x4c/0x1b0
[613700.465079]  [<ffffffff9c9e94e4>] handle_pte_fault+0x2f4/0xd10
[613700.465756]  [<ffffffff9c9ec01d>] handle_mm_fault+0x39d/0x9b0
[613700.466454]  [<ffffffff9cf6f5e3>] __do_page_fault+0x203/0x500
[613700.467136]  [<ffffffff9c9f1a37>] ? do_munmap+0x327/0x480
[613700.467749]  [<ffffffff9cf6f9c6>] trace_do_page_fault+0x56/0x150
[613700.468410]  [<ffffffff9cf6ef42>] do_async_page_fault+0x22/0xf0
[613700.469126]  [<ffffffff9cf6b788>] async_page_fault+0x28/0x30
[613700.469766] Mem-Info:
[613700.470040] active_anon:5266300 inactive_anon:2788185 isolated_anon:0
 active_file:184 inactive_file:53 isolated_file:0
 unevictable:0 dirty:11 writeback:223 unstable:0
 slab_reclaimable:9023 slab_unreclaimable:9736
 mapped:1319 shmem:1310 pagetables:18040 bounce:0
 free:49178 free_pcp:61 free_cma:0
[613700.473741] Node 0 DMA free:14912kB min:28kB low:32kB high:40kB active_anon:0kB inactive_anon:0kB active_file:0kB inactive_file:0kB unevictable:0kB isolated(anon):0kB isolated(file):0kB present:15004kB managed:14912kB mlocked:0kB dirty:0kB writeback:0kB mapped:0kB shmem:0kB slab_reclaimable:0kB slab_unreclaimable:0kB kernel_stack:0kB pagetables:0kB unstable:0kB bounce:0kB free_pcp:0kB local_pcp:0kB free_cma:0kB writeback_tmp:0kB pages_scanned:0 all_unreclaimable? yes
[613700.478645] lowmem_reserve[]: 0 2827 31990 31990
[613700.479345] Node 0 DMA32 free:122332kB min:5788kB low:7232kB high:8680kB active_anon:1511568kB inactive_anon:1243404kB active_file:84kB inactive_file:140kB unevictable:0kB isolated(anon):0kB isolated(file):0kB present:3126684kB managed:2895228kB mlocked:0kB dirty:24kB writeback:272kB mapped:148kB shmem:216kB slab_reclaimable:3228kB slab_unreclaimable:3372kB kernel_stack:144kB pagetables:7784kB unstable:0kB bounce:0kB free_pcp:0kB local_pcp:0kB free_cma:0kB writeback_tmp:0kB pages_scanned:47688 all_unreclaimable? yes
[613700.484885] lowmem_reserve[]: 0 0 29163 29163
[613700.485457] Node 0 Normal free:59468kB min:59716kB low:74644kB high:89572kB active_anon:19553632kB inactive_anon:9909336kB active_file:652kB inactive_file:72kB unevictable:0kB isolated(anon):0kB isolated(file):0kB present:30408704kB managed:29866176kB mlocked:0kB dirty:20kB writeback:620kB mapped:5128kB shmem:5024kB slab_reclaimable:32864kB slab_unreclaimable:35572kB kernel_stack:3728kB pagetables:64376kB unstable:0kB bounce:0kB free_pcp:244kB local_pcp:0kB free_cma:0kB writeback_tmp:0kB pages_scanned:7605 all_unreclaimable? yes
[613700.490897] lowmem_reserve[]: 0 0 0 0
[613700.491483] Node 0 DMA: 2*4kB (U) 1*8kB (U) 1*16kB (U) 3*32kB (UM) 1*64kB (U) 1*128kB (U) 1*256kB (U) 0*512kB 2*1024kB (UM) 2*2048kB (M) 2*4096kB (M) = 14912kB
[613700.493471] Node 0 DMA32: 134*4kB (UEM) 83*8kB (UEM) 149*16kB (UEM) 74*32kB (UE) 41*64kB (UE) 27*128kB (UEM) 13*256kB (UE) 8*512kB (UEM) 101*1024kB (UM) 0*2048kB 0*4096kB = 122880kB
[613700.495884] Node 0 Normal: 408*4kB (UE) 320*8kB (UE) 301*16kB (UE) 252*32kB (UE) 184*64kB (UEM) 130*128kB (UE) 34*256kB (UE) 2*512kB (UE) 5*1024kB (M) 0*2048kB 0*4096kB = 60336kB
[613700.498284] Node 0 hugepages_total=0 hugepages_free=0 hugepages_surp=0 hugepages_size=1048576kB
[613700.499258] Node 0 hugepages_total=0 hugepages_free=0 hugepages_surp=0 hugepages_size=2048kB
[613700.500155] 152719 total pagecache pages
[613700.500582] 151262 pages in swap cache
[613700.500989] Swap cache stats: add 25089927, delete 24939368, find 1630185/1802893
[613700.501787] Free swap  = 0kB
[613700.502119] Total swap = 1048572kB
[613700.502538] 8387598 pages RAM
[613700.502891] 0 pages HighMem/MovableOnly
[613700.503352] 193519 pages reserved
[613700.503741] [ pid ]   uid  tgid total_vm      rss nr_ptes swapents oom_score_adj name
[613700.504600] [ 1773]     0  1773    63151     1390     100      153             0 systemd-journal
[613700.505791] [ 1812]     0  1812     9945        2      25      538         -1000 systemd-udevd
[613700.506886] [ 2179]     0  2179     6594       41      19       35             0 systemd-logind
[613700.507899] [ 2185]    81  2185    16581       57      32       80          -900 dbus-daemon
[613700.508887] [ 3808]     0  3808    26865        2      50      498             0 dhclient
[613700.509845] [ 3965]     0  3965    22931       12      45      251             0 master
[613700.510888] [ 3967]    89  3967    22974       12      45      246             0 qmgr
[613700.511796] [ 4041]     0  4041    90366      307     113      577             0 rsyslogd
[613700.512756] [ 4060]     0  4060     2476        1      10       32             0 agetty
[613700.513715] [ 4061]     0  4061     2476        1      10       31             0 agetty
[613700.514736] [ 4064]     0  4064     6476        1      18       52             0 atd
[613700.515708] [ 4065]     0  4065     6533      105      18       65             0 crond
[613700.516641] [ 4110]     0  4110    28215       13      57      243         -1000 sshd
[613700.517563] [ 5851]     0  5851     3247        0      11       47             0 sh
[613700.518476] [ 5859]     0  5859   380762     1460     310    10577             0 node
[613700.519397] [ 6163]     0  6163     3841       52      12       65             0 bash
[613700.520320] [24945]     0 24945     3813        1      12      103             0 bash
[613700.521241] [26835]     0 26835    38743       56      77      850             0 sshd
[613700.522116] [26838]     0 26838     3779        2      12       65             0 bash
[613700.523063] [26848]     0 26848     3314       40      13       98             0 bash
[613700.523971] [26898]     0 26898   208799     8732     320     5172             0 node
[613700.524890] [26914]     0 26914   218819     1071     149     2602             0 node
[613700.525827] [30635]    89 30635    22438       10      46      240             0 pickup
[613700.526717] [31250]     0 31250     5768        1      16       56             0 anacron
[613700.527670] [32757]     0 32757   413109      921     220    12462             0 python3
[613700.528622] [ 1083]   999  1014 11454714  7881670   16173   207603             0 TCPHandler
[613700.529600] [ 1174]     0  1174     1941       18       9        0             0 sleep
[613700.530531] [ 1344]     0  1344   123706     6927     125        0             0 clickhouse-clie
[613700.531556] Out of memory: Kill process 1083 (TCPHandler) score 958 or sacrifice child
[613700.532483] Killed process 1083 (TCPHandler) total-vm:45818856kB, anon-rss:31526680kB, file-rss:0kB, shmem-rss:0kB
```
and the corresponding `stderr.log` (no output to `clickhouse-server.err.log`)
```
Processing configuration file '/etc/clickhouse-server/users.xml'.
Include not found: networks
Saved preprocessed configuration to '/var/lib/clickhouse//preprocessed_configs/users.xml'.
Processing configuration file '/etc/clickhouse-server/dicts/benchmark_dictionary.xml'.
Saved preprocessed configuration to '/var/lib/clickhouse//preprocessed_configs/dicts_benchmark_dictionary.xml'.
Processing configuration file '/etc/clickhouse-server/config.xml'.
Include not found: clickhouse_remote_servers
Include not found: clickhouse_compression
Saved preprocessed configuration to '/var/lib/clickhouse//preprocessed_configs/config.xml'.
Processing configuration file '/etc/clickhouse-server/dicts/benchmark_dictionary.xml'.
Saved preprocessed configuration to '/var/lib/clickhouse//preprocessed_configs/dicts_benchmark_dictionary.xml'.
Processing configuration file '/etc/clickhouse-server/dicts/benchmark_dictionary.xml'.
Saved preprocessed configuration to '/var/lib/clickhouse//preprocessed_configs/dicts_benchmark_dictionary.xml'.
Status file /var/run/clickhouse-server/clickhouse-server.pid already exists - unclean restart. Contents:
26053
Logging trace to /var/log/clickhouse-server/clickhouse-server.log
Logging errors to /var/log/clickhouse-server/clickhouse-server.err.log
Status file /var/lib/clickhouse/status already exists - unclean restart. Contents:
PID: 26053
Started at: 2021-02-08 03:26:05
Revision: 54438
```
Here is the dictionary xml file:
```
<yandex>
        <dictionary> 
        <name>CacheDictionary</name> 
        <source>
        <executable>
            <command>
            awk 'BEGIN { FS=","; OFS=","} { $1=$1; print }' /var/lib/clickhouse/user_files/testCache.csv 
            </command> 
            <format>CSV</format>
        </executable>
        </source>
        <layout>
        <cache>
        <size_in_cells>7500000</size_in_cells>
        </cache>
        </layout>
        <lifetime>0</lifetime>
        <structure>
            <id>
                <name>referentialKey</name>
            </id>

            <attribute>
                <name>date</name>
                <type>Date</type>
                <null_value></null_value>
            </attribute>
            <attribute>
                <name>integers</name>
                <type>UInt64</type>
                <null_value></null_value>
            </attribute>
            <attribute>
                <name>filterColumn</name>
                <type>Float64</type>
                <null_value></null_value>
            </attribute>
            
            <attribute>
                <name>random0</name>
                <type>String</type>
                <null_value></null_value>
            </attribute>

            ...
            
            <attribute>
                <name>random74</name>
                <type>String</type>
                <null_value></null_value>
            </attribute>
            
        </structure>
        </dictionary>
        </yandex>
        
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
