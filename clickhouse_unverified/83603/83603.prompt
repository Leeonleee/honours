You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Overflow in NumericIndexedVector
### Describe the bug

If we use NumericIndexedVector with a very large number, there will be an overflow. The behaviour [is expected](https://github.com/ClickHouse/ClickHouse/blob/bcb38dba12f24ac7d81dfda75cbea5ca4053463b/src/AggregateFunctions/AggregateFunctionGroupNumericIndexedVectorDataBSI.h#L294), but it is good not only to expect it, but to handle it. [Happens on CI.](https://github.com/ClickHouse/ClickHouse/pull/83546#issuecomment-3057288578)

### How to reproduce

[Fiddle link](https://fiddle.clickhouse.com/49917854-ced4-4845-9771-b5758e0de3aa)

```
CREATE TABLE test (t AggregateFunction(groupNumericIndexedVectorState, UInt32, Float64)) ENGINE = AggregatingMergeTree ORDER BY tuple();


INSERT INTO test SELECT groupNumericIndexedVectorState(toUInt32(1), -1.54743e26);

SELECT * FROM test;
```

### Error message and/or stacktrace

```
/home/ubuntu/actions-runner/_work/ClickHouse/ClickHouse/src/AggregateFunctions/AggregateFunctionGroupNumericIndexedVectorDataBSI.h:1627:36: runtime error: -2.59616e+33 is outside the range of representable values of type 'long'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /home/ubuntu/actions-runner/_work/ClickHouse/ClickHouse/src/AggregateFunctions/AggregateFunctionGroupNumericIndexedVectorDataBSI.h:1627:36 
2025.07.10 13:01:58.995083 [ 2327540 ] {} <Fatal> ClientBase: ########## Short fault info ############
2025.07.10 13:01:58.995138 [ 2327540 ] {} <Fatal> ClientBase: (version 25.7.1.1, build id: F9EE77993380521FDB0D2F4FC96E08937FD687C1, git hash: 7002242b11687c813817448d9bb23b771d8c5bd1, architecture: x86_64) (from thread 2326703) Received signal -3
2025.07.10 13:01:58.995143 [ 2327540 ] {} <Fatal> ClientBase: Signal description: sanitizer trap
2025.07.10 13:01:58.995145 [ 2327540 ] {} <Fatal> ClientBase: Sanitizer trap.
2025.07.10 13:01:58.995158 [ 2327540 ] {} <Fatal> ClientBase: Stack trace: 0x00005ced2fe81983 0x00005ced376c182b 0x00005ced21b71d30 0x00005ced21b7dcf9 0x00005ced2271cbcf 0x00005ced34077724 0x00005ced39e384d2 0x00005ced39e38cc4 0x00005ced39e3d325 0x00005ced3fffe19a 0x00005ced3fff81ed 0x00005ced3fa84b4e 0x00005ced3fa6f30e 0x00005ced3fa70c4d 0x00005ced2ff7c159 0x00005ced2ff84b2a 0x00005ced2ff792af 0x00005ced2ff810aa 0x00007bcfdd49caa4 0x00007bcfdd529c3c
2025.07.10 13:01:58.995173 [ 2327540 ] {} <Fatal> ClientBase: ########################################
2025.07.10 13:01:58.995321 [ 2327540 ] {} <Fatal> ClientBase: (version 25.7.1.1, build id: F9EE77993380521FDB0D2F4FC96E08937FD687C1, git hash: 7002242b11687c813817448d9bb23b771d8c5bd1) (from thread 2326703) (query_id: 88e9f674-be79-41bc-b148-0513cd284ee3) (query: INSERT INTO metric_bsi
SELECT groupNumericIndexedVectorState(toUInt32(1), -1.54743e+26)) Received signal sanitizer trap (-3)
2025.07.10 13:01:58.995361 [ 2327540 ] {} <Fatal> ClientBase: Sanitizer trap.
...
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
