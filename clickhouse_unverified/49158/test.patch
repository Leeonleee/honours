diff --git a/tests/queries/0_stateless/02706_show_columns.reference b/tests/queries/0_stateless/02706_show_columns.reference
index da967d59cda7..9d7e8485e194 100644
--- a/tests/queries/0_stateless/02706_show_columns.reference
+++ b/tests/queries/0_stateless/02706_show_columns.reference
@@ -1,3 +1,7 @@
+--- Aliases of SHOW COLUMNS
+int32	Nullable(Int32)	1		\N	
+str	String	0	SOR	\N	
+uint64	UInt64	0	PRI SOR	\N	
 int32	Nullable(Int32)	1		\N	
 str	String	0	SOR	\N	
 uint64	UInt64	0	PRI SOR	\N	
@@ -24,6 +28,11 @@ int32	Nullable(Int32)	1		\N
 uint64	UInt64	0	PRI SOR	\N	
 --- LIMIT
 int32	Nullable(Int32)	1		\N	
+--- Check with weird table names
+c	String	0	PRI SOR	\N	
+c	String	0	PRI SOR	\N	
+c	String	0	PRI SOR	\N	
+c	String	0	PRI SOR	\N	
 --- Original table
 int32	Nullable(Int32)	1		\N	
 str	String	0	SOR	\N	
diff --git a/tests/queries/0_stateless/02706_show_columns.sql b/tests/queries/0_stateless/02706_show_columns.sql
index ce206fedee43..b1a907c5c71c 100644
--- a/tests/queries/0_stateless/02706_show_columns.sql
+++ b/tests/queries/0_stateless/02706_show_columns.sql
@@ -15,7 +15,9 @@ ENGINE = MergeTree
 PRIMARY KEY (uint64)
 ORDER BY (uint64, str);
 
+SELECT '--- Aliases of SHOW COLUMNS';
 SHOW COLUMNS FROM tab;
+SHOW FIELDS FROM tab;
 
 SELECT '--- EXTENDED';
 SHOW EXTENDED COLUMNS FROM tab;
@@ -41,6 +43,26 @@ SHOW COLUMNS FROM tab WHERE field LIKE '%int%';
 SELECT '--- LIMIT';
 SHOW COLUMNS FROM tab LIMIT 1;
 
+SELECT '--- Check with weird table names';
+
+DROP TABLE IF EXISTS `$4@^7`;
+CREATE TABLE `$4@^7` (c String) ENGINE = MergeTree ORDER BY c;
+SHOW COLUMNS FROM `$4@^7`;
+DROP TABLE `$4@^7`;
+
+DROP TABLE IF EXISTS NULL;
+CREATE TABLE NULL (c String) ENGINE = MergeTree ORDER BY c;
+SHOW COLUMNS FROM NULL;
+DROP TABLE NULL;
+
+DROP DATABASE IF EXISTS `'`;
+CREATE DATABASE `'`;
+CREATE TABLE `'`.`'` (c String) ENGINE = MergeTree ORDER BY c;
+SHOW COLUMNS FROM `'` FROM `'`;
+SHOW COLUMNS FROM `'`.`'`; -- abbreviated form
+DROP TABLE `'`.`'`;
+DROP DATABASE `'`;
+
 -- Create a table in a different database. Intentionally useing the same table/column names as above so
 -- we notice if something is buggy in the implementation of SHOW COLUMNS.
 DROP DATABASE IF EXISTS database_123456789abcde;
diff --git a/tests/queries/0_stateless/02724_show_indexes.reference b/tests/queries/0_stateless/02724_show_indexes.reference
new file mode 100644
index 000000000000..20af3954fa5c
--- /dev/null
+++ b/tests/queries/0_stateless/02724_show_indexes.reference
@@ -0,0 +1,42 @@
+--- Aliases of SHOW INDEX
+tbl	0	blf_idx	\N	\N	\N	\N	\N	\N	\N	bloom_filter	\N	\N	YES	d, b
+tbl	0	mm1_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	a, c, d
+tbl	0	mm2_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	c, d, e
+tbl	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c, a
+tbl	0	set_idx	\N	\N	\N	\N	\N	\N	\N	set	\N	\N	YES	e
+tbl	0	blf_idx	\N	\N	\N	\N	\N	\N	\N	bloom_filter	\N	\N	YES	d, b
+tbl	0	mm1_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	a, c, d
+tbl	0	mm2_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	c, d, e
+tbl	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c, a
+tbl	0	set_idx	\N	\N	\N	\N	\N	\N	\N	set	\N	\N	YES	e
+tbl	0	blf_idx	\N	\N	\N	\N	\N	\N	\N	bloom_filter	\N	\N	YES	d, b
+tbl	0	mm1_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	a, c, d
+tbl	0	mm2_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	c, d, e
+tbl	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c, a
+tbl	0	set_idx	\N	\N	\N	\N	\N	\N	\N	set	\N	\N	YES	e
+--- EXTENDED
+tbl	0	blf_idx	\N	\N	\N	\N	\N	\N	\N	bloom_filter	\N	\N	YES	d, b
+tbl	0	mm1_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	a, c, d
+tbl	0	mm2_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	c, d, e
+tbl	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c, a
+tbl	0	set_idx	\N	\N	\N	\N	\N	\N	\N	set	\N	\N	YES	e
+--- WHERE
+tbl	0	mm1_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	a, c, d
+tbl	0	mm2_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	c, d, e
+--- Check with weird table names
+$4@^7	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c
+NULL	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c
+\'	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c
+\'	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c
+--- Original table
+tbl	0	blf_idx	\N	\N	\N	\N	\N	\N	\N	bloom_filter	\N	\N	YES	d, b
+tbl	0	mm1_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	a, c, d
+tbl	0	mm2_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	c, d, e
+tbl	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	c, a
+tbl	0	set_idx	\N	\N	\N	\N	\N	\N	\N	set	\N	\N	YES	e
+--- Equally named table in other database
+tbl	0	mmi_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	b
+tbl	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	a
+--- Short form
+tbl	0	mmi_idx	\N	\N	\N	\N	\N	\N	\N	minmax	\N	\N	YES	b
+tbl	0	PRIMARY	\N	\N	A	\N	\N	\N	\N	primary	\N	\N	YES	a
diff --git a/tests/queries/0_stateless/02724_show_indexes.sql b/tests/queries/0_stateless/02724_show_indexes.sql
new file mode 100644
index 000000000000..ce8ed67c5248
--- /dev/null
+++ b/tests/queries/0_stateless/02724_show_indexes.sql
@@ -0,0 +1,79 @@
+-- Tags: no-parallel
+-- no-parallel: creates a custom database schema and expects to use it exclusively
+
+-- Create a test table and verify that the output of SHOW INDEXES is sane.
+-- The matching of actual/expected results relies on the fact that the output of SHOW INDEX is sorted.
+DROP TABLE IF EXISTS tbl;
+CREATE TABLE tbl
+(
+    a UInt64,
+    b UInt64,
+    c UInt64,
+    d UInt64,
+    e UInt64,
+    INDEX mm1_idx (a, c, d) TYPE minmax,
+    INDEX mm2_idx (c, d, e) TYPE minmax,
+    INDEX set_idx (e)       TYPE set(100),
+    INDEX blf_idx (d, b)    TYPE bloom_filter(0.8)
+)
+ENGINE = MergeTree
+PRIMARY KEY (c, a);
+
+SELECT '--- Aliases of SHOW INDEX';
+SHOW INDEX FROM tbl;
+SHOW INDEXES FROM tbl;
+SHOW KEYS FROM tbl;
+
+SELECT '--- EXTENDED';
+SHOW EXTENDED INDEX FROM tbl;
+--
+SELECT '--- WHERE';
+SHOW INDEX FROM tbl WHERE index_type LIKE '%minmax%';
+
+SELECT '--- Check with weird table names';
+
+DROP TABLE IF EXISTS `$4@^7`;
+CREATE TABLE `$4@^7` (c String) ENGINE = MergeTree ORDER BY c;
+SHOW INDEX FROM `$4@^7`;
+DROP TABLE `$4@^7`;
+
+DROP TABLE IF EXISTS NULL;
+CREATE TABLE NULL (c String) ENGINE = MergeTree ORDER BY c;
+SHOW INDEX FROM NULL;
+DROP TABLE NULL;
+
+DROP DATABASE IF EXISTS `'`;
+CREATE DATABASE `'`;
+CREATE TABLE `'`.`'` (c String) ENGINE = MergeTree ORDER BY c;
+SHOW INDEX FROM `'` FROM `'`;
+SHOW INDEX FROM `'`.`'`; -- abbreviated form
+DROP TABLE `'`.`'`;
+DROP DATABASE `'`;
+
+-- Create a table in a different database. Intentionally using the same table/column names as above so
+-- we notice if something is buggy in the implementation of SHOW INDEX.
+DROP DATABASE IF EXISTS database_123456789abcde;
+CREATE DATABASE database_123456789abcde; -- pseudo-random database name
+
+DROP TABLE IF EXISTS database_123456789abcde.tbl;
+CREATE TABLE database_123456789abcde.tbl
+(
+    a UInt64,
+    b UInt64,
+    INDEX mmi_idx b TYPE minmax
+)
+ENGINE = MergeTree
+PRIMARY KEY a;
+
+SELECT '--- Original table';
+SHOW INDEX FROM tbl;
+
+SELECT '--- Equally named table in other database';
+SHOW INDEX FROM tbl FROM database_123456789abcde;
+
+SELECT '--- Short form';
+SHOW INDEX FROM database_123456789abcde.tbl;
+
+DROP DATABASE database_123456789abcde;
+
+DROP TABLE tbl;
