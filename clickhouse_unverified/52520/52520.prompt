You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
ClickHouse Server 23.7.1.1659 crashed through a SELECT statement calling the toDecimalString function
**Describe the bug**
ClickHouse Server 23.7.1.1659 crashed through a SELECT statement calling the toDecimalString function.

**How to reproduce**
The SQL statement to reproduce:
```sql
SELECT toDecimalString ( '110' :: Decimal256 ( 45 ) , * ) ;
```
It can be reproduced on the official docker image. (`clickhouse/clickhouse-server:head` and `clickhouse/clickhouse-server:latest`).

The log traced by ClickHouse Server:
```
SELECT toDecimalString(CAST('110', 'Decimal256(45)'), *)

Query id: aa30d1a0-9002-4fab-9243-887e9b9af1cc

[25b36a6e4a9c] 2023.07.21 10:04:17.617202 [ 333 ] <Fatal> BaseDaemon: ########################################
[25b36a6e4a9c] 2023.07.21 10:04:17.617283 [ 333 ] <Fatal> BaseDaemon: (version 23.7.1.1659 (official build), build id: 2A82CED3B49248890AFC97BDD6FE0D5C0590676F, git hash: 234b5047b5cd093b8950bb8de3725eacffe02dc0) (from thread 48) (query_id: aa30d1a0-9002-4fab-9243-887e9b9af1cc) (query: SELECT toDecimalString ( '110' :: Decimal256 ( 45 ) , * ) ;) Received signal Segmentation fault (11)
[25b36a6e4a9c] 2023.07.21 10:04:17.617329 [ 333 ] <Fatal> BaseDaemon: Address: 0x28. Access: read. Address not mapped to object.
[25b36a6e4a9c] 2023.07.21 10:04:17.617369 [ 333 ] <Fatal> BaseDaemon: Stack trace: 0x000000000907fdd0 0x0000000008cf1a6a 0x0000000008cf100e 0x0000000012c2f22f 0x0000000012c2fca2 0x0000000012c30f99 0x00000000133c0fcc 0x000000001515b224 0x00000000152aed8e 0x0000000013cf35c7 0x0000000013ce2d8a 0x0000000013ce0514 0x0000000013d7e936 0x0000000013d7f844 0x00000000140b2825 0x00000000140ae68e 0x0000000014ed69c4 0x0000000014eedc79 0x0000000017e7a154 0x0000000017e7b371 0x0000000017ffd207 0x0000000017ffac3c 0x00007fd6b78f7609 0x00007fd6b781c133
[25b36a6e4a9c] 2023.07.21 10:04:17.617462 [ 333 ] <Fatal> BaseDaemon: 2. ? @ 0x000000000907fdd0 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617514 [ 333 ] <Fatal> BaseDaemon: 3. ? @ 0x0000000008cf1a6a in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617552 [ 333 ] <Fatal> BaseDaemon: 4. ? @ 0x0000000008cf100e in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617623 [ 333 ] <Fatal> BaseDaemon: 5. DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x0000000012c2f22f in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617678 [ 333 ] <Fatal> BaseDaemon: 6. DB::IExecutableFunction::executeWithoutSparseColumns(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x0000000012c2fca2 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617737 [ 333 ] <Fatal> BaseDaemon: 7. DB::IExecutableFunction::execute(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x0000000012c30f99 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617797 [ 333 ] <Fatal> BaseDaemon: 8. DB::ActionsDAG::updateHeader(DB::Block) const @ 0x00000000133c0fcc in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617837 [ 333 ] <Fatal> BaseDaemon: 9. DB::ExpressionTransform::transformHeader(DB::Block, DB::ActionsDAG const&) @ 0x000000001515b224 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617894 [ 333 ] <Fatal> BaseDaemon: 10. DB::ExpressionStep::ExpressionStep(DB::DataStream const&, std::shared_ptr<DB::ActionsDAG> const&) @ 0x00000000152aed8e in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617940 [ 333 ] <Fatal> BaseDaemon: 11. DB::InterpreterSelectQuery::executeExpression(DB::QueryPlan&, std::shared_ptr<DB::ActionsDAG> const&, String const&) @ 0x0000000013cf35c7 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.617983 [ 333 ] <Fatal> BaseDaemon: 12. DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::optional<DB::Pipe>) @ 0x0000000013ce2d8a in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618030 [ 333 ] <Fatal> BaseDaemon: 13. DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x0000000013ce0514 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618110 [ 333 ] <Fatal> BaseDaemon: 14. DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x0000000013d7e936 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618155 [ 333 ] <Fatal> BaseDaemon: 15. DB::InterpreterSelectWithUnionQuery::execute() @ 0x0000000013d7f844 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618199 [ 333 ] <Fatal> BaseDaemon: 16. ? @ 0x00000000140b2825 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618251 [ 333 ] <Fatal> BaseDaemon: 17. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x00000000140ae68e in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618294 [ 333 ] <Fatal> BaseDaemon: 18. DB::TCPHandler::runImpl() @ 0x0000000014ed69c4 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618324 [ 333 ] <Fatal> BaseDaemon: 19. DB::TCPHandler::run() @ 0x0000000014eedc79 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618378 [ 333 ] <Fatal> BaseDaemon: 20. Poco::Net::TCPServerConnection::start() @ 0x0000000017e7a154 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618434 [ 333 ] <Fatal> BaseDaemon: 21. Poco::Net::TCPServerDispatcher::run() @ 0x0000000017e7b371 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618484 [ 333 ] <Fatal> BaseDaemon: 22. Poco::PooledThread::run() @ 0x0000000017ffd207 in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618528 [ 333 ] <Fatal> BaseDaemon: 23. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017ffac3c in /usr/bin/clickhouse
[25b36a6e4a9c] 2023.07.21 10:04:17.618560 [ 333 ] <Fatal> BaseDaemon: 24. ? @ 0x00007fd6b78f7609 in ?
[25b36a6e4a9c] 2023.07.21 10:04:17.618609 [ 333 ] <Fatal> BaseDaemon: 25. clone @ 0x00007fd6b781c133 in ?
[25b36a6e4a9c] 2023.07.21 10:04:17.908820 [ 333 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 7D28AF63E0E09B75DF5876280E0C8DBB)
[25b36a6e4a9c] 2023.07.21 10:04:17.909276 [ 333 ] <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
[25b36a6e4a9c] 2023.07.21 10:04:17.909468 [ 333 ] <Fatal> BaseDaemon: No settings were changed
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
