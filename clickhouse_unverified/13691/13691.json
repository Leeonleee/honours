{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 13691,
  "instance_id": "ClickHouse__ClickHouse-13691",
  "issue_numbers": [
    "12964",
    "12562"
  ],
  "base_commit": "0b071211771c4edc5c5c8e728c7d8d90e8651e2e",
  "patch": "diff --git a/programs/client/Client.cpp b/programs/client/Client.cpp\nindex e3a9b68dc473..db5a677e0e17 100644\n--- a/programs/client/Client.cpp\n+++ b/programs/client/Client.cpp\n@@ -127,7 +127,6 @@ class Client : public Poco::Util::Application\n     };\n     bool is_interactive = true;          /// Use either interactive line editing interface or batch mode.\n     bool need_render_progress = true;    /// Render query execution progress.\n-    bool has_received_logs = false;      /// We have received some logs, do not use previous cursor position, to avoid overlaps with logs\n     bool echo_queries = false;           /// Print queries before execution in batch mode.\n     bool ignore_error = false;           /// In case of errors, don't print error message, continue to next query. Only applicable for non-interactive mode.\n     bool print_time_to_stderr = false;   /// Output execution time to stderr in batch mode.\n@@ -161,6 +160,7 @@ class Client : public Poco::Util::Application\n     /// Console output.\n     WriteBufferFromFileDescriptor std_out {STDOUT_FILENO};\n     std::unique_ptr<ShellCommand> pager_cmd;\n+\n     /// The user can specify to redirect query output to a file.\n     std::optional<WriteBufferFromFile> out_file_buf;\n     BlockOutputStreamPtr block_out_stream;\n@@ -1552,8 +1552,7 @@ class Client : public Poco::Util::Application\n                         cancelled = true;\n                         if (is_interactive)\n                         {\n-                            if (written_progress_chars)\n-                                clearProgress();\n+                            clearProgress();\n                             std::cout << \"Cancelling query.\" << std::endl;\n                         }\n \n@@ -1809,9 +1808,6 @@ class Client : public Poco::Util::Application\n \n     void onData(Block & block)\n     {\n-        if (written_progress_chars)\n-            clearProgress();\n-\n         if (!block)\n             return;\n \n@@ -1828,18 +1824,23 @@ class Client : public Poco::Util::Application\n             written_first_block = true;\n         }\n \n+        bool clear_progess = std_out.offset() > 0;\n+        if (clear_progess)\n+            clearProgress();\n+\n         /// Received data block is immediately displayed to the user.\n         block_out_stream->flush();\n \n         /// Restore progress bar after data block.\n-        writeProgress();\n+        if (clear_progess)\n+            writeProgress();\n     }\n \n \n     void onLogData(Block & block)\n     {\n-        has_received_logs = true;\n         initLogsOutputStream();\n+        clearProgress();\n         logs_out_stream->write(block);\n         logs_out_stream->flush();\n     }\n@@ -1867,15 +1868,18 @@ class Client : public Poco::Util::Application\n         }\n         if (block_out_stream)\n             block_out_stream->onProgress(value);\n+\n         writeProgress();\n     }\n \n \n     void clearProgress()\n     {\n-        written_progress_chars = 0;\n-        if (!has_received_logs)\n+        if (written_progress_chars)\n+        {\n+            written_progress_chars = 0;\n             std::cerr << \"\\r\" CLEAR_TO_END_OF_LINE;\n+        }\n     }\n \n \n@@ -1902,8 +1906,15 @@ class Client : public Poco::Util::Application\n \n         const char * indicator = indicators[increment % 8];\n \n-        if (!has_received_logs && written_progress_chars)\n-            message << '\\r';\n+        size_t terminal_width = getTerminalWidth();\n+\n+        if (!written_progress_chars)\n+        {\n+            /// If the current line is not empty, the progress must be output on the next line.\n+            /// The trick is found here: https://www.vidarholen.net/contents/blog/?p=878\n+            message << std::string(terminal_width, ' ');\n+        }\n+        message << '\\r';\n \n         size_t prefix_size = message.count();\n \n@@ -1939,7 +1950,7 @@ class Client : public Poco::Util::Application\n \n                 if (show_progress_bar)\n                 {\n-                    ssize_t width_of_progress_bar = static_cast<ssize_t>(getTerminalWidth()) - written_progress_chars - strlen(\" 99%\");\n+                    ssize_t width_of_progress_bar = static_cast<ssize_t>(terminal_width) - written_progress_chars - strlen(\" 99%\");\n                     if (width_of_progress_bar > 0)\n                     {\n                         std::string bar = UnicodeBar::render(UnicodeBar::getWidth(progress.read_rows, 0, total_rows_corrected, width_of_progress_bar));\n@@ -1955,10 +1966,6 @@ class Client : public Poco::Util::Application\n         }\n \n         message << CLEAR_TO_END_OF_LINE;\n-\n-        if (has_received_logs)\n-            message << '\\n';\n-\n         ++increment;\n \n         message.next();\n@@ -2019,6 +2026,8 @@ class Client : public Poco::Util::Application\n \n     void onEndOfStream()\n     {\n+        clearProgress();\n+\n         if (block_out_stream)\n             block_out_stream->writeSuffix();\n \n@@ -2029,8 +2038,7 @@ class Client : public Poco::Util::Application\n \n         if (is_interactive && !written_first_block)\n         {\n-            if (written_progress_chars)\n-                clearProgress();\n+            clearProgress();\n             std::cout << \"Ok.\" << std::endl;\n         }\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py b/tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py\nindex 4418c22872a2..794d04a429cc 100755\n--- a/tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py\n+++ b/tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py\n@@ -38,7 +38,6 @@\n     client1.expect('Progress: 2.00 rows.*\\)')\n     client2.send('INSERT INTO test.mt VALUES (2),(3)')\n     client2.expect(prompt)\n-    client1.expect('Progress: 3.00 rows.*\\)')\n     # wait for heartbeat\n     client1.expect('Progress: 3.00 rows.*\\)')\n     # send Ctrl-C\n@@ -46,7 +45,7 @@\n     match = client1.expect('(%s)|([#\\$] )' % prompt)\n     if match.groups()[1]:\n         client1.send(client1.command)\n-        client1.expect(prompt)    \n+        client1.expect(prompt)\n     client1.send('DROP TABLE test.lv')\n     client1.expect(prompt)\n     client1.send('DROP TABLE test.mt')\ndiff --git a/tests/queries/0_stateless/00965_live_view_watch_heartbeat.py b/tests/queries/0_stateless/00965_live_view_watch_heartbeat.py\nindex a20c9c3919c9..1d557f09f4d6 100755\n--- a/tests/queries/0_stateless/00965_live_view_watch_heartbeat.py\n+++ b/tests/queries/0_stateless/00965_live_view_watch_heartbeat.py\n@@ -36,7 +36,6 @@\n     client1.expect(r'0.*1' + end_of_block)\n     client2.send('INSERT INTO test.mt VALUES (1),(2),(3)')\n     client1.expect(r'6.*2' + end_of_block)\n-    client1.expect('Progress: 2.00 rows.*\\)')\n     # wait for heartbeat\n     client1.expect('Progress: 2.00 rows.*\\)')\n     # send Ctrl-C\n@@ -44,7 +43,7 @@\n     match = client1.expect('(%s)|([#\\$] )' % prompt)\n     if match.groups()[1]:\n         client1.send(client1.command)\n-        client1.expect(prompt)    \n+        client1.expect(prompt)\n     client1.send('DROP TABLE test.lv')\n     client1.expect(prompt)\n     client1.send('DROP TABLE test.mt')\n",
  "problem_statement": "Progress bar flicker in clickhouse-client.\nWhen I execute the following query:\r\n\r\n```\r\nSELECT \r\n    toInt64(WatchID), \r\n    toInt8(JavaEnable), \r\n    toValidUTF8(toString(Title)), \r\n    toInt16(GoodEvent), \r\n    EventTime, \r\n    EventDate, \r\n    toInt32(CounterID), \r\n    toInt32(ClientIP), \r\n    toInt32(RegionID), \r\n    toInt64(UserID), \r\n    toInt8(CounterClass), \r\n    toInt8(OS), \r\n    toInt8(UserAgent), \r\n    toValidUTF8(toString(URL)), \r\n    toValidUTF8(toString(Referer)), \r\n    toInt8(Refresh), \r\n    toInt16(RefererCategoryID), \r\n    toInt32(RefererRegionID), \r\n    toInt16(URLCategoryID), \r\n    toInt32(URLRegionID), \r\n    toInt16(ResolutionWidth), \r\n    toInt16(ResolutionHeight), \r\n    toInt8(ResolutionDepth), \r\n    toInt8(FlashMajor), \r\n    toInt8(FlashMinor), \r\n    toValidUTF8(toString(FlashMinor2)), \r\n    toInt8(NetMajor), \r\n    toInt8(NetMinor), \r\n    toInt16(UserAgentMajor), \r\n    toValidUTF8(toString(UserAgentMinor)), \r\n    toInt8(CookieEnable), \r\n    toInt8(JavascriptEnable), \r\n    toInt8(IsMobile), \r\n    toInt8(MobilePhone), \r\n    toValidUTF8(toString(MobilePhoneModel)), \r\n    toValidUTF8(toString(Params)), \r\n    toInt32(IPNetworkID), \r\n    toInt8(TraficSourceID), \r\n    toInt16(SearchEngineID), \r\n    toValidUTF8(toString(SearchPhrase)), \r\n    toInt8(AdvEngineID), \r\n    toInt8(IsArtifical), \r\n    toInt16(WindowClientWidth), \r\n    toInt16(WindowClientHeight), \r\n    toInt16(ClientTimeZone), \r\n    ClientEventTime, \r\n    toInt8(SilverlightVersion1), \r\n    toInt8(SilverlightVersion2), \r\n    toInt32(SilverlightVersion3), \r\n    toInt16(SilverlightVersion4), \r\n    toValidUTF8(toString(PageCharset)), \r\n    toInt32(CodeVersion), \r\n    toInt8(IsLink), \r\n    toInt8(IsDownload), \r\n    toInt8(IsNotBounce), \r\n    toInt64(FUniqID), \r\n    toValidUTF8(toString(OriginalURL)), \r\n    toInt32(HID), \r\n    toInt8(IsOldCounter), \r\n    toInt8(IsEvent), \r\n    toInt8(IsParameter), \r\n    toInt8(DontCountHits), \r\n    toInt8(WithHash), \r\n    toValidUTF8(toString(HitColor)), \r\n    LocalEventTime, \r\n    toInt8(Age), \r\n    toInt8(Sex), \r\n    toInt8(Income), \r\n    toInt16(Interests), \r\n    toInt8(Robotness), \r\n    toInt32(RemoteIP), \r\n    toInt32(WindowName), \r\n    toInt32(OpenerName), \r\n    toInt16(HistoryLength), \r\n    toValidUTF8(toString(BrowserLanguage)), \r\n    toValidUTF8(toString(BrowserCountry)), \r\n    toValidUTF8(toString(SocialNetwork)), \r\n    toValidUTF8(toString(SocialAction)), \r\n    toInt16(HTTPError), \r\n    toInt32(SendTiming), \r\n    toInt32(DNSTiming), \r\n    toInt32(ConnectTiming), \r\n    toInt32(ResponseStartTiming), \r\n    toInt32(ResponseEndTiming), \r\n    toInt32(FetchTiming), \r\n    toInt8(SocialSourceNetworkID), \r\n    toValidUTF8(toString(SocialSourcePage)), \r\n    toInt64(ParamPrice), \r\n    toValidUTF8(toString(ParamOrderID)), \r\n    toValidUTF8(toString(ParamCurrency)), \r\n    toInt16(ParamCurrencyID), \r\n    toValidUTF8(toString(OpenstatServiceName)), \r\n    toValidUTF8(toString(OpenstatCampaignID)), \r\n    toValidUTF8(toString(OpenstatAdID)), \r\n    toValidUTF8(toString(OpenstatSourceID)), \r\n    toValidUTF8(toString(UTMSource)), \r\n    toValidUTF8(toString(UTMMedium)), \r\n    toValidUTF8(toString(UTMCampaign)), \r\n    toValidUTF8(toString(UTMContent)), \r\n    toValidUTF8(toString(UTMTerm)), \r\n    toValidUTF8(toString(FromTag)), \r\n    toInt8(HasGCLID), \r\n    toInt64(RefererHash), \r\n    toInt64(URLHash), \r\n    toInt32(CLID)\r\nFROM hits_100m_obfuscated\r\nINTO OUTFILE '/home/milovidov/example_datasets/hits_100m_obfuscated.csv'\r\n```\nJSON and JSONCompact formats produce invalid JSON objects in interactive mode of clickhouse-client\nThe last line in `data` section of the output is always empty. \r\n\r\n```\r\n# clickhouse-client\r\nClickHouse client version 20.5.2.7 (official build).\r\nConnecting to localhost:9001 as user default.\r\nConnected to ClickHouse server version 20.5.2 revision 54435.\r\n\r\nsas-vrxctd96rqw5lw25.db.yandex.net :) select 1 format JSON\r\n\r\nSELECT 1\r\nFORMAT JSON\r\n\r\n{\r\n\t\"meta\":\r\n\t[\r\n\t\t{\r\n\t\t\t\"name\": \"1\",\r\n\t\t\t\"type\": \"UInt8\"\r\n\t\t}\r\n\t],\r\n\r\n\t\"data\":\r\n\t[\r\n\t\t{\r\n\t\t\t\"1\": 1\r\n\r\n\t],\r\n\r\n\t\"rows\": 1,\r\n\r\n\t\"statistics\":\r\n\t{\r\n\t\t\"elapsed\": 0.00019223,\r\n\t\t\"rows_read\": 1,\r\n\t\t\"bytes_read\": 1\r\n\t}\r\n}\r\n\r\n```\r\n\r\nThe issue appears only in interactive mode. In non-interactive mode clickhouse-client produces the correct output:\r\n\r\n```\r\n# clickhouse-client -q 'select 1 format JSON'\r\n{\r\n\t\"meta\":\r\n\t[\r\n\t\t{\r\n\t\t\t\"name\": \"1\",\r\n\t\t\t\"type\": \"UInt8\"\r\n\t\t}\r\n\t],\r\n\r\n\t\"data\":\r\n\t[\r\n\t\t{\r\n\t\t\t\"1\": 1\r\n\t\t}\r\n\t],\r\n\r\n\t\"rows\": 1,\r\n\r\n\t\"statistics\":\r\n\t{\r\n\t\t\"elapsed\": 0.000220845,\r\n\t\t\"rows_read\": 1,\r\n\t\t\"bytes_read\": 1\r\n\t}\r\n}\r\n``` \r\n\n",
  "hints_text": "```\r\nSET max_block_size = 1\r\nSELECT * FROM system.numbers INTO OUTFILE 'test.tsv'\r\n```\nIt's an issue with formatting in `clickhouse-client` in interactive mode.\r\n\r\nThis command is producing correct output:\r\n`clickhouse-client --query \"select  1 format JSON\" | less`\nAnd it's all about formatting of progress messages.",
  "created_at": "2020-08-14T02:21:58Z",
  "modified_files": [
    "programs/client/Client.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/00964_live_view_watch_events_heartbeat.py",
    "tests/queries/0_stateless/00965_live_view_watch_heartbeat.py"
  ]
}