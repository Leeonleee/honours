diff --git a/tests/queries/0_stateless/00927_asof_join_long.sql b/tests/queries/0_stateless/00927_asof_join_long.sql
index 7a73875e93ee..99a3a8308391 100644
--- a/tests/queries/0_stateless/00927_asof_join_long.sql
+++ b/tests/queries/0_stateless/00927_asof_join_long.sql
@@ -3,7 +3,7 @@
 DROP TABLE IF EXISTS tvs;
 
 -- to use different algorithms for in subquery
-SET allow_experimental_analyzer = 1;
+SET enable_analyzer = 1;
 
 CREATE TABLE tvs(k UInt32, t UInt32, tv UInt64) ENGINE = Memory;
 INSERT INTO tvs(k,t,tv) SELECT k, t, t
diff --git a/tests/queries/0_stateless/01180_client_syntax_errors.expect b/tests/queries/0_stateless/01180_client_syntax_errors.expect
index 058c75e43071..fbfee8b2acca 100755
--- a/tests/queries/0_stateless/01180_client_syntax_errors.expect
+++ b/tests/queries/0_stateless/01180_client_syntax_errors.expect
@@ -30,11 +30,11 @@ expect "Expected one of: "
 
 # Make another query with syntax error
 send -- "CREATE TABLE t4 UUID '57f27aa5-141c-47c5-888a-9563681717f5' AS t1 (`rowNumberInAllBlocks()` UInt64, `toLowCardinality(arrayJoin(\['exchange', 'tables'\]))` LowCardinality(String)) ENGINE = MergeTree \r"
-expect "Syntax error: failed at position 93 ('UInt64'):*"
+expect "Syntax error: failed at position 93 (UInt64):*"
 
 # Make a query with unmatched parentheses
 send -- "select (1, 2\r"
-expect "Syntax error: failed at position 8 ('('):"
+expect "Syntax error: failed at position 8 (():"
 expect "Unmatched parentheses: ("
 expect ":) "
 
diff --git a/tests/queries/0_stateless/02050_clickhouse_local_parsing_exception.sh b/tests/queries/0_stateless/02050_clickhouse_local_parsing_exception.sh
index 65563837f55e..a3744364f503 100755
--- a/tests/queries/0_stateless/02050_clickhouse_local_parsing_exception.sh
+++ b/tests/queries/0_stateless/02050_clickhouse_local_parsing_exception.sh
@@ -4,4 +4,4 @@ CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
 # shellcheck source=../shell_config.sh
 . "$CURDIR"/../shell_config.sh
 
-$CLICKHOUSE_LOCAL --query="SELECT number FROM system.numbers INTO OUTFILE test.native.zst FORMAT Native" 2>&1 | grep -q "Code: 62. DB::Exception: Syntax error: failed at position 48 ('test'): test.native.zst FORMAT Native." && echo 'OK' || echo 'FAIL' ||:
+$CLICKHOUSE_LOCAL --query="SELECT number FROM system.numbers INTO OUTFILE test.native.zst FORMAT Native" 2>&1 | grep -q "Code: 62. DB::Exception: Syntax error: failed at position 48 (test): test.native.zst FORMAT Native." && echo 'OK' || echo 'FAIL' ||:
diff --git a/tests/queries/0_stateless/03286_reverse_sorting_key_final.sql b/tests/queries/0_stateless/03286_reverse_sorting_key_final.sql
index 51eadfce9d3a..aab8abd22a3f 100644
--- a/tests/queries/0_stateless/03286_reverse_sorting_key_final.sql
+++ b/tests/queries/0_stateless/03286_reverse_sorting_key_final.sql
@@ -4,6 +4,9 @@ INSERT INTO t0 (c0.c1) VALUES ([1]), ([2]);
 SELECT 1 FROM t0 FINAL;
 DROP TABLE t0;
 
+-- For consistency of the EXPLAIN output:
+SET allow_prefetched_read_pool_for_remote_filesystem = 0;
+
 -- PartsSplitter should work for reverse keys.
 CREATE TABLE t0(a Int, b Int) Engine=ReplacingMergeTree order by (a desc, b desc) SETTINGS allow_experimental_reverse_key = 1, allow_nullable_key = 1, index_granularity = 8192, index_granularity_bytes = '10Mi';
 INSERT INTO t0 select number, number from numbers(5);
@@ -19,4 +22,3 @@ INSERT INTO t0 select number, number from numbers(5,2);
 set max_threads = 2;
 explain pipeline select * from t0 final SETTINGS enable_vertical_final = 0;
 DROP TABLE t0;
-
diff --git a/tests/queries/0_stateless/03328_syntax_error_exception.reference b/tests/queries/0_stateless/03328_syntax_error_exception.reference
new file mode 100644
index 000000000000..6a9eb836c4e9
--- /dev/null
+++ b/tests/queries/0_stateless/03328_syntax_error_exception.reference
@@ -0,0 +1,3 @@
+ption: Max query size exceeded
+1
+Unrecognized token: Syntax error: failed at position 8 (ы): ыыы'
diff --git a/tests/queries/0_stateless/03328_syntax_error_exception.sh b/tests/queries/0_stateless/03328_syntax_error_exception.sh
new file mode 100755
index 000000000000..80c93330b4ce
--- /dev/null
+++ b/tests/queries/0_stateless/03328_syntax_error_exception.sh
@@ -0,0 +1,14 @@
+#!/usr/bin/env bash
+
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CUR_DIR"/../shell_config.sh
+
+# The reason is in front of the message:
+${CLICKHOUSE_CURL} "${CLICKHOUSE_URL}&max_query_size=20" -d "SELECT 'ыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыыы'" | grep -o -F 'ption: Max query size exceeded'
+
+# The message is not too long:
+perl -e 'print "SELECT length('"'"'" . ("x" x '262140') . "'"'"')"' | ${CLICKHOUSE_LOCAL} 2>&1 | wc -c | ${CLICKHOUSE_LOCAL} --input-format TSV --query "SELECT c1 < 500 FROM table"
+
+# When it's an unrecognized token, the UTF-8 codepoint is correctly cut:
+${CLICKHOUSE_CURL} "${CLICKHOUSE_URL}" -d "SELECT ыыы'" | grep -o -F "Unrecognized token: Syntax error: failed at position 8 (ы): ыыы'"
