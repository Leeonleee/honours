diff --git a/tests/queries/0_stateless/02004_intersect_except_const_column.reference b/tests/queries/0_stateless/02004_intersect_except_const_column.reference
new file mode 100644
index 000000000000..6e3081b017d4
--- /dev/null
+++ b/tests/queries/0_stateless/02004_intersect_except_const_column.reference
@@ -0,0 +1,85 @@
+-- { echo }
+-- Test: crash the server
+SELECT 'fooooo' INTERSECT DISTINCT SELECT 'fooooo';
+fooooo
+SELECT 'fooooo' EXCEPT ALL SELECT 'fooooo';
+-- Test: intersect return incorrect result for const column
+SELECT 1 FROM numbers(10) INTERSECT SELECT 1 FROM numbers(10);
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+SELECT toString(1) FROM numbers(10) INTERSECT SELECT toString(1) FROM numbers(10);
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+SELECT '1' FROM numbers(10) INTERSECT SELECT '1' FROM numbers(10);
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+SELECT 1 FROM numbers(10) INTERSECT DISTINCT SELECT 1 FROM numbers(10);
+1
+SELECT toString(1) FROM numbers(10) INTERSECT DISTINCT SELECT toString(1) FROM numbers(10);
+1
+SELECT '1' FROM numbers(10) INTERSECT DISTINCT SELECT '1' FROM numbers(10);
+1
+-- Test: except return incorrect result for const column
+SELECT 2 FROM numbers(10) EXCEPT SELECT 1 FROM numbers(5);
+2
+2
+2
+2
+2
+2
+2
+2
+2
+2
+SELECT toString(2) FROM numbers(10) EXCEPT SELECT toString(1) FROM numbers(5);
+2
+2
+2
+2
+2
+2
+2
+2
+2
+2
+SELECT '2' FROM numbers(10) EXCEPT SELECT '1' FROM numbers(5);
+2
+2
+2
+2
+2
+2
+2
+2
+2
+2
+SELECT 2 FROM numbers(10) EXCEPT DISTINCT SELECT 1 FROM numbers(5);
+2
+SELECT toString(2) FROM numbers(10) EXCEPT DISTINCT SELECT toString(1) FROM numbers(5);
+2
+SELECT '2' FROM numbers(10) EXCEPT DISTINCT SELECT '1' FROM numbers(5);
+2
diff --git a/tests/queries/0_stateless/02004_intersect_except_const_column.sql b/tests/queries/0_stateless/02004_intersect_except_const_column.sql
new file mode 100644
index 000000000000..6fabf34d38a5
--- /dev/null
+++ b/tests/queries/0_stateless/02004_intersect_except_const_column.sql
@@ -0,0 +1,20 @@
+-- { echo }
+-- Test: crash the server
+SELECT 'fooooo' INTERSECT DISTINCT SELECT 'fooooo';
+SELECT 'fooooo' EXCEPT ALL SELECT 'fooooo';
+
+-- Test: intersect return incorrect result for const column
+SELECT 1 FROM numbers(10) INTERSECT SELECT 1 FROM numbers(10);
+SELECT toString(1) FROM numbers(10) INTERSECT SELECT toString(1) FROM numbers(10);
+SELECT '1' FROM numbers(10) INTERSECT SELECT '1' FROM numbers(10);
+SELECT 1 FROM numbers(10) INTERSECT DISTINCT SELECT 1 FROM numbers(10);
+SELECT toString(1) FROM numbers(10) INTERSECT DISTINCT SELECT toString(1) FROM numbers(10);
+SELECT '1' FROM numbers(10) INTERSECT DISTINCT SELECT '1' FROM numbers(10);
+
+-- Test: except return incorrect result for const column
+SELECT 2 FROM numbers(10) EXCEPT SELECT 1 FROM numbers(5);
+SELECT toString(2) FROM numbers(10) EXCEPT SELECT toString(1) FROM numbers(5);
+SELECT '2' FROM numbers(10) EXCEPT SELECT '1' FROM numbers(5);
+SELECT 2 FROM numbers(10) EXCEPT DISTINCT SELECT 1 FROM numbers(5);
+SELECT toString(2) FROM numbers(10) EXCEPT DISTINCT SELECT toString(1) FROM numbers(5);
+SELECT '2' FROM numbers(10) EXCEPT DISTINCT SELECT '1' FROM numbers(5);
\ No newline at end of file
diff --git a/tests/queries/0_stateless/02004_intersect_except_distinct_operators.reference b/tests/queries/0_stateless/02004_intersect_except_distinct_operators.reference
new file mode 100644
index 000000000000..49529aa76834
--- /dev/null
+++ b/tests/queries/0_stateless/02004_intersect_except_distinct_operators.reference
@@ -0,0 +1,133 @@
+-- { echo }
+
+set intersect_default_mode = 'DISTINCT';
+set except_default_mode = 'DISTINCT';
+select 1 intersect select 1;
+1
+select 2 intersect select 1;
+select 1 except select 1;
+select 2 except select 1;
+2
+select 5 from numbers(20) intersect select number from numbers(5, 5);
+5
+select number from numbers(10) except select number from numbers(5);
+5
+6
+7
+8
+9
+select number, number+10 from numbers(12) except select number+5, number+15 from numbers(10);
+0	10
+1	11
+2	12
+3	13
+4	14
+select 1 except select 2 intersect select 1;
+1
+select 1 except select 2 intersect select 2;
+1
+select 1 intersect select 1 except select 2;
+1
+select 1 intersect select 1 except select 1;
+select 1 intersect select 1 except select 2 intersect select 1 except select 3 intersect select 1;
+1
+select 1 intersect select 1 except select 2 intersect select 1 except select 3 intersect select 2;
+1
+select 1 intersect select 1 except select 2 intersect select 1 except select 3 intersect select 2 except select 1;
+select number%3 from numbers(10) except select 1;
+0
+2
+select number from numbers(100) intersect select number from numbers(20, 60) except select number from numbers(30, 20) except select number from numbers(60, 20);
+20
+21
+22
+23
+24
+25
+26
+27
+28
+29
+50
+51
+52
+53
+54
+55
+56
+57
+58
+59
+select * from (select 1 intersect select 1);
+1
+with (select number from numbers(10) intersect select 5) as a select a * 10;
+50
+with (select 5 except select 1) as a select a except select 5;
+with (select number from numbers(10) intersect select 5) as a select a intersect select 1;
+with (select number from numbers(10) intersect select 5) as a select a except select 1;
+5
+select count() from (select number from numbers(10) except select 5);
+9
+select count() from (select number from numbers(1000000) intersect select number from numbers(200000, 600000));
+600000
+select count() from (select number from numbers(100) intersect select number from numbers(20, 60) except select number from numbers(30, 20) except select number from numbers(60, 20));
+20
+select count() from (select number from numbers(100) intersect select number from numbers(20, 60) except select number from numbers(30, 20) except select number from numbers(60, 20) union all select number from numbers(100, 10));
+30
+select count() from (select number from numbers(1000000) intersect select number from numbers(200000, 600000) except select number from numbers(300000, 200000) except select number from numbers(600000, 200000));
+200000
+select count() from (select 1 intersect select 1) limit 100;
+1
+select count() from (select 1 except select 2) limit 100;
+1
+with (select count() from (select 1 union distinct select 2 except select 1)) as max
+select count() from (select 1 union all select max) limit 100;
+2
+select 1 union all select 1 intersect select 1;
+1
+1
+select 1 union all select 1 intersect select 2;
+1
+select * from (select 1 union all select 2 union all select 3 union all select 4 except select 3 union all select 5) order by 1;
+1
+2
+4
+5
+select * from (select 1 union all select 2 union all select 3 union all select 4 intersect select 3 union all select 5) order by 1;
+1
+2
+3
+5
+select * from (select 1 union all select 2 union all select 3 union all select 4 intersect select 3 union all select 5 except select 1) order by 1;
+2
+3
+5
+select 1 intersect (select 1 except select 2);
+1
+select 1 union all select 2  except (select 2 except select 1 union all select 1) except select 4;
+select 1 intersect select count() from (select 1 except select 2 intersect select 2 union all select 1);
+explain syntax select 1 intersect select 1;
+SELECT 1
+INTERSECT DISTINCT
+SELECT 1
+explain syntax select 1 except select 1;
+SELECT 1
+EXCEPT DISTINCT
+SELECT 1
+explain syntax select 1 union all select 2  except (select 2 except select 1 union all select 1) except select 4;
+SELECT 1
+UNION ALL
+SELECT 2
+EXCEPT DISTINCT
+SELECT 2
+EXCEPT DISTINCT
+SELECT 1
+UNION ALL
+SELECT 1
+EXCEPT DISTINCT
+SELECT 4
+set limit=1;
+select 1 intersect select 1;
+1
+(((select 1) intersect select 1));
+1
diff --git a/tests/queries/0_stateless/02004_intersect_except_distinct_operators.sql b/tests/queries/0_stateless/02004_intersect_except_distinct_operators.sql
new file mode 100644
index 000000000000..efb48e59f3df
--- /dev/null
+++ b/tests/queries/0_stateless/02004_intersect_except_distinct_operators.sql
@@ -0,0 +1,58 @@
+-- { echo }
+
+set intersect_default_mode = 'DISTINCT';
+set except_default_mode = 'DISTINCT';
+
+select 1 intersect select 1;
+select 2 intersect select 1;
+select 1 except select 1;
+select 2 except select 1;
+
+select 5 from numbers(20) intersect select number from numbers(5, 5);
+select number from numbers(10) except select number from numbers(5);
+select number, number+10 from numbers(12) except select number+5, number+15 from numbers(10);
+
+select 1 except select 2 intersect select 1;
+select 1 except select 2 intersect select 2;
+select 1 intersect select 1 except select 2;
+select 1 intersect select 1 except select 1;
+select 1 intersect select 1 except select 2 intersect select 1 except select 3 intersect select 1;
+select 1 intersect select 1 except select 2 intersect select 1 except select 3 intersect select 2;
+select 1 intersect select 1 except select 2 intersect select 1 except select 3 intersect select 2 except select 1;
+
+select number%3 from numbers(10) except select 1;
+select number from numbers(100) intersect select number from numbers(20, 60) except select number from numbers(30, 20) except select number from numbers(60, 20);
+
+select * from (select 1 intersect select 1);
+with (select number from numbers(10) intersect select 5) as a select a * 10;
+with (select 5 except select 1) as a select a except select 5;
+with (select number from numbers(10) intersect select 5) as a select a intersect select 1;
+with (select number from numbers(10) intersect select 5) as a select a except select 1;
+select count() from (select number from numbers(10) except select 5);
+select count() from (select number from numbers(1000000) intersect select number from numbers(200000, 600000));
+select count() from (select number from numbers(100) intersect select number from numbers(20, 60) except select number from numbers(30, 20) except select number from numbers(60, 20));
+select count() from (select number from numbers(100) intersect select number from numbers(20, 60) except select number from numbers(30, 20) except select number from numbers(60, 20) union all select number from numbers(100, 10));
+select count() from (select number from numbers(1000000) intersect select number from numbers(200000, 600000) except select number from numbers(300000, 200000) except select number from numbers(600000, 200000));
+
+select count() from (select 1 intersect select 1) limit 100;
+select count() from (select 1 except select 2) limit 100;
+with (select count() from (select 1 union distinct select 2 except select 1)) as max
+select count() from (select 1 union all select max) limit 100;
+
+select 1 union all select 1 intersect select 1;
+select 1 union all select 1 intersect select 2;
+select * from (select 1 union all select 2 union all select 3 union all select 4 except select 3 union all select 5) order by 1;
+select * from (select 1 union all select 2 union all select 3 union all select 4 intersect select 3 union all select 5) order by 1;
+select * from (select 1 union all select 2 union all select 3 union all select 4 intersect select 3 union all select 5 except select 1) order by 1;
+
+select 1 intersect (select 1 except select 2);
+select 1 union all select 2  except (select 2 except select 1 union all select 1) except select 4;
+select 1 intersect select count() from (select 1 except select 2 intersect select 2 union all select 1);
+
+explain syntax select 1 intersect select 1;
+explain syntax select 1 except select 1;
+explain syntax select 1 union all select 2  except (select 2 except select 1 union all select 1) except select 4;
+
+set limit=1;
+select 1 intersect select 1;
+(((select 1) intersect select 1));
diff --git a/tests/queries/0_stateless/02004_intersect_except_operators.reference b/tests/queries/0_stateless/02004_intersect_except_operators.reference
index a96a6bc72649..0acb550c1e84 100644
--- a/tests/queries/0_stateless/02004_intersect_except_operators.reference
+++ b/tests/queries/0_stateless/02004_intersect_except_operators.reference
@@ -116,23 +116,23 @@ select 1 union all select 2  except (select 2 except select 1 union all select 1
 select 1 intersect select count() from (select 1 except select 2 intersect select 2 union all select 1);
 explain syntax select 1 intersect select 1;
 SELECT 1
-INTERSECT
+INTERSECT ALL
 SELECT 1
 explain syntax select 1 except select 1;
 SELECT 1
-EXCEPT
+EXCEPT ALL
 SELECT 1
 explain syntax select 1 union all select 2  except (select 2 except select 1 union all select 1) except select 4;
 SELECT 1
 UNION ALL
 SELECT 2
-EXCEPT
+EXCEPT ALL
 SELECT 2
-EXCEPT
+EXCEPT ALL
 SELECT 1
 UNION ALL
 SELECT 1
-EXCEPT
+EXCEPT ALL
 SELECT 4
 set limit=1;
 select 1 intersect select 1;
diff --git a/tests/queries/0_stateless/02381_intersect_except_const_column.reference b/tests/queries/0_stateless/02381_intersect_except_const_column.reference
deleted file mode 100644
index 290835b412ec..000000000000
--- a/tests/queries/0_stateless/02381_intersect_except_const_column.reference
+++ /dev/null
@@ -1,61 +0,0 @@
-fooooo
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
diff --git a/tests/queries/0_stateless/02381_intersect_except_const_column.sql b/tests/queries/0_stateless/02381_intersect_except_const_column.sql
deleted file mode 100644
index b10f913dd1e8..000000000000
--- a/tests/queries/0_stateless/02381_intersect_except_const_column.sql
+++ /dev/null
@@ -1,13 +0,0 @@
--- Test: crash the server
-SELECT 'fooooo' INTERSECT SELECT 'fooooo';
-SELECT 'fooooo' EXCEPT SELECT 'fooooo';
-
--- Test: intersect return incorrect result for const column
-SELECT 1 FROM numbers(10) INTERSECT SELECT 1 FROM numbers(10);
-SELECT toString(1) FROM numbers(10) INTERSECT SELECT toString(1) FROM numbers(10);
-SELECT '1' FROM numbers(10) INTERSECT SELECT '1' FROM numbers(10);
-
--- Test: except return incorrect result for const column
-SELECT 2 FROM numbers(10) EXCEPT SELECT 1 FROM numbers(5);
-SELECT toString(2) FROM numbers(10) EXCEPT SELECT toString(1) FROM numbers(5);
-SELECT '2' FROM numbers(10) EXCEPT SELECT '1' FROM numbers(5);
\ No newline at end of file
