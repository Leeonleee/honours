You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Server crashes by format(JSONCompactEachRow, ...) with crafted arguments and settings
**Describe the bug**
Server crashes by format(JSONCompactEachRow, ...) with crafted arguments and `input_format_json_compact_allow_variable_number_of_columns` enabled.
It was found by an in-development fuzzer of WINGFUZZ.

**How to reproduce**
The SQL statement to reproduce:
```sql
SELECT * FROM format("JSONCompactEachRow", 'x UInt32, y UInt32', REPEAT('[1,1,', 100000)) SETTINGS input_format_json_compact_allow_variable_number_of_columns = 1
```

It can be reproduced on the official docker image. (clickhouse/clickhouse-server:head (version 24.8.1.473) and clickhouse/clickhouse-server:latest (version 24.6.2.17)).

The log traced by ClickHouse Server:
```
SELECT *
FROM format(JSONCompactEachRow, 'x UInt32, y UInt32', REPEAT('[1,1,', 100000))
SETTINGS input_format_json_compact_allow_variable_number_of_columns = 1

Query id: f55f7931-1fed-41f8-b5a3-789d14ee5a71

[1c6fc9302e45] 2024.07.28 07:49:01.878836 [ 755 ] <Fatal> BaseDaemon: ########################################
[1c6fc9302e45] 2024.07.28 07:49:01.878905 [ 755 ] <Fatal> BaseDaemon: (version 24.8.1.473 (official build), build id: AB57C74DD7456AA12E643F366E718F749FADFC24, git hash: 206a5ff4a1f09f1f4b6826de1f0b35a605697fed) (from thread 745) (query_id: f55f7931-1fed-41f8-b5a3-789d14ee5a71) (query: SELECT * FROM format("JSONCompactEachRow", 'x UInt32, y UInt32', REPEAT('[1,1,', 100000)) SETTINGS input_format_json_compact_allow_variable_number_of_columns = 1;) Received signal Segmentation fault (11)
[1c6fc9302e45] 2024.07.28 07:49:01.878931 [ 755 ] <Fatal> BaseDaemon: Address: 0x7fab4c7c8fe8. Access: write. Attempted access has violated the permissions assigned to the memory area.
[1c6fc9302e45] 2024.07.28 07:49:01.878951 [ 755 ] <Fatal> BaseDaemon: Stack trace: 0x000000000d8bd724 0x00007facf510d420 0x000000000d679af1 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879019 [ 755 ] <Fatal> BaseDaemon: 0. signalHandler(int, siginfo_t*, void*) @ 0x000000000d8bd724
[1c6fc9302e45] 2024.07.28 07:49:01.879053 [ 755 ] <Fatal> BaseDaemon: 1. ? @ 0x00007facf510d420
[1c6fc9302e45] 2024.07.28 07:49:01.879088 [ 755 ] <Fatal> BaseDaemon: 2. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d679af1
[1c6fc9302e45] 2024.07.28 07:49:01.879116 [ 755 ] <Fatal> BaseDaemon: 3. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879148 [ 755 ] <Fatal> BaseDaemon: 4. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879175 [ 755 ] <Fatal> BaseDaemon: 5. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879200 [ 755 ] <Fatal> BaseDaemon: 6. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879224 [ 755 ] <Fatal> BaseDaemon: 7. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879267 [ 755 ] <Fatal> BaseDaemon: 8. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879292 [ 755 ] <Fatal> BaseDaemon: 9. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879318 [ 755 ] <Fatal> BaseDaemon: 10. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879345 [ 755 ] <Fatal> BaseDaemon: 11. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879368 [ 755 ] <Fatal> BaseDaemon: 12. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879396 [ 755 ] <Fatal> BaseDaemon: 13. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879423 [ 755 ] <Fatal> BaseDaemon: 14. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879453 [ 755 ] <Fatal> BaseDaemon: 15. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879485 [ 755 ] <Fatal> BaseDaemon: 16. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879509 [ 755 ] <Fatal> BaseDaemon: 17. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879536 [ 755 ] <Fatal> BaseDaemon: 18. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879565 [ 755 ] <Fatal> BaseDaemon: 19. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879590 [ 755 ] <Fatal> BaseDaemon: 20. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879617 [ 755 ] <Fatal> BaseDaemon: 21. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879640 [ 755 ] <Fatal> BaseDaemon: 22. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879677 [ 755 ] <Fatal> BaseDaemon: 23. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879703 [ 755 ] <Fatal> BaseDaemon: 24. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879749 [ 755 ] <Fatal> BaseDaemon: 25. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879774 [ 755 ] <Fatal> BaseDaemon: 26. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879795 [ 755 ] <Fatal> BaseDaemon: 27. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879825 [ 755 ] <Fatal> BaseDaemon: 28. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879853 [ 755 ] <Fatal> BaseDaemon: 29. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879883 [ 755 ] <Fatal> BaseDaemon: 30. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879915 [ 755 ] <Fatal> BaseDaemon: 31. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879937 [ 755 ] <Fatal> BaseDaemon: 32. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879962 [ 755 ] <Fatal> BaseDaemon: 33. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.879991 [ 755 ] <Fatal> BaseDaemon: 34. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880019 [ 755 ] <Fatal> BaseDaemon: 35. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880045 [ 755 ] <Fatal> BaseDaemon: 36. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880073 [ 755 ] <Fatal> BaseDaemon: 37. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880100 [ 755 ] <Fatal> BaseDaemon: 38. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880130 [ 755 ] <Fatal> BaseDaemon: 39. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880154 [ 755 ] <Fatal> BaseDaemon: 40. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880178 [ 755 ] <Fatal> BaseDaemon: 41. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880198 [ 755 ] <Fatal> BaseDaemon: 42. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880227 [ 755 ] <Fatal> BaseDaemon: 43. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:01.880253 [ 755 ] <Fatal> BaseDaemon: 44. void DB::skipJSONFieldImpl<void>(DB::ReadBuffer&, StringRef, DB::FormatSettings::JSON const&) @ 0x000000000d67a0c5
[1c6fc9302e45] 2024.07.28 07:49:02.031011 [ 755 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: EFFEC9494498ABD92EF154C349356F59)
[1c6fc9302e45] 2024.07.28 07:49:02.031368 [ 755 ] <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
[1c6fc9302e45] 2024.07.28 07:49:02.031506 [ 755 ] <Fatal> BaseDaemon: Changed settings: input_format_json_compact_allow_variable_number_of_columns = true
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
