{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 58657,
  "instance_id": "ClickHouse__ClickHouse-58657",
  "issue_numbers": [
    "58593"
  ],
  "base_commit": "6b666f20a93aedb43ac90a310f233fd0e8266fd6",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeIndexSet.cpp b/src/Storages/MergeTree/MergeTreeIndexSet.cpp\nindex 831856f80852..3a3d77644e30 100644\n--- a/src/Storages/MergeTree/MergeTreeIndexSet.cpp\n+++ b/src/Storages/MergeTree/MergeTreeIndexSet.cpp\n@@ -13,6 +13,7 @@\n #include <Planner/PlannerActionsVisitor.h>\n \n #include <Storages/MergeTree/MergeTreeIndexUtils.h>\n+#include \"DataTypes/IDataType.h\"\n \n namespace DB\n {\n@@ -490,7 +491,8 @@ bool MergeTreeIndexConditionSet::checkDAGUseless(const ActionsDAG::Node & node,\n     RPNBuilderTreeContext tree_context(context);\n     RPNBuilderTreeNode tree_node(node_to_check, tree_context);\n \n-    if (node.column && isColumnConst(*node.column))\n+    if (node.column && isColumnConst(*node.column)\n+        && !WhichDataType(node.result_type).isSet())\n     {\n         Field literal;\n         node.column->get(0, literal);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02962_analyzer_constant_set.reference b/tests/queries/0_stateless/02962_analyzer_constant_set.reference\nnew file mode 100644\nindex 000000000000..ec635144f600\n--- /dev/null\n+++ b/tests/queries/0_stateless/02962_analyzer_constant_set.reference\n@@ -0,0 +1,1 @@\n+9\ndiff --git a/tests/queries/0_stateless/02962_analyzer_constant_set.sql b/tests/queries/0_stateless/02962_analyzer_constant_set.sql\nnew file mode 100644\nindex 000000000000..aae2f1c01450\n--- /dev/null\n+++ b/tests/queries/0_stateless/02962_analyzer_constant_set.sql\n@@ -0,0 +1,15 @@\n+DROP TABLE IF EXISTS test_parallel_index;\n+\n+CREATE TABLE test_parallel_index\n+(\n+    z UInt64,\n+    INDEX i z TYPE set(8)\n+)\n+ENGINE = MergeTree\n+ORDER BY ();\n+\n+insert into test_parallel_index select number from numbers(10);\n+\n+select sum(z) from test_parallel_index where z = 2 or z = 7 or z = 13 or z = 17 or z = 19 or z = 23;\n+\n+DROP TABLE test_parallel_index;\n",
  "problem_statement": "[Analyzer] Set index: Cannot get value from Set (parallel_index test)\nFrom perf tests (parallel_index):\r\n\r\n```sql\r\n\r\ncreate table test_parallel_index (x UInt64, y UInt64, z UInt64, INDEX a (y) TYPE minmax GRANULARITY 2,\r\n        INDEX b (z) TYPE set(8) GRANULARITY 2) engine = MergeTree order by x partition by bitAnd(x, 63 * 64) settings index_granularity = 4;\r\n\r\ninsert into test_parallel_index select number, number, number from numbers(1048576);\r\n\r\nselect sum(z) from test_parallel_index where z = 2 or z = 7 or z = 13 or z = 17 or z = 19 or z = 23;\r\n```\r\n\r\nWith the analyzer you get: `Code: 48. DB::Exception: Cannot get value from Set. (NOT_IMPLEMENTED)`\r\n\r\nWorks fine without it\r\n\n",
  "hints_text": "",
  "created_at": "2024-01-10T14:36:02Z"
}