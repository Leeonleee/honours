{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 11303,
  "instance_id": "ClickHouse__ClickHouse-11303",
  "issue_numbers": [
    "11286"
  ],
  "base_commit": "94887f0c7436718ba96b8dcc315106f4044b4226",
  "patch": "diff --git a/src/Storages/MergeTree/KeyCondition.cpp b/src/Storages/MergeTree/KeyCondition.cpp\nindex 6ae22885dfde..ee381709dd45 100644\n--- a/src/Storages/MergeTree/KeyCondition.cpp\n+++ b/src/Storages/MergeTree/KeyCondition.cpp\n@@ -181,8 +181,11 @@ const KeyCondition::AtomMap KeyCondition::atom_map\n     },\n     {\n         \"empty\",\n-        [] (RPNElement & out, const Field &)\n+        [] (RPNElement & out, const Field & value)\n         {\n+            if (value.getType() != Field::Types::String)\n+                return false;\n+\n             out.function = RPNElement::FUNCTION_IN_RANGE;\n             out.range = Range(\"\");\n             return true;\n@@ -190,8 +193,11 @@ const KeyCondition::AtomMap KeyCondition::atom_map\n     },\n     {\n         \"notEmpty\",\n-        [] (RPNElement & out, const Field &)\n+        [] (RPNElement & out, const Field & value)\n         {\n+            if (value.getType() != Field::Types::String)\n+                return false;\n+\n             out.function = RPNElement::FUNCTION_NOT_IN_RANGE;\n             out.range = Range(\"\");\n             return true;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01290_empty_array_index_analysis.reference b/tests/queries/0_stateless/01290_empty_array_index_analysis.reference\nnew file mode 100644\nindex 000000000000..5037a64c0f08\n--- /dev/null\n+++ b/tests/queries/0_stateless/01290_empty_array_index_analysis.reference\n@@ -0,0 +1,50 @@\n+--- notEmpty\n+\t['a']\t2\n+\t['a','b','c']\t3\n+\t['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']\t4\n+--- empty\n+\t[]\t1\n+--- = []\n+\t[]\t1\n+--- != []\n+\t['a']\t2\n+\t['a','b','c']\t3\n+\t['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']\t4\n+--- > []\n+\t['a']\t2\n+\t['a','b','c']\t3\n+\t['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']\t4\n+--- < []\n+--- >= []\n+\t[]\t1\n+\t['a']\t2\n+\t['a','b','c']\t3\n+\t['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']\t4\n+--- <= []\n+\t[]\t1\n+---\n+--- notEmpty\n+\t['a']\t2\n+\t['a','b','c']\t3\n+\t['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']\t4\n+--- empty\n+\t[]\t1\n+--- = []\n+\t[]\t1\n+--- != []\n+\t['a']\t2\n+\t['a','b','c']\t3\n+\t['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']\t4\n+--- > []\n+\t['a']\t2\n+\t['a','b','c']\t3\n+\t['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']\t4\n+--- < []\n+--- >= []\n+\t[]\t1\n+\t['a']\t2\n+\t['a','b','c']\t3\n+\t['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']\t4\n+--- <= []\n+\t[]\t1\n+---\ndiff --git a/tests/queries/0_stateless/01290_empty_array_index_analysis.sql b/tests/queries/0_stateless/01290_empty_array_index_analysis.sql\nnew file mode 100644\nindex 000000000000..b1b6067945dd\n--- /dev/null\n+++ b/tests/queries/0_stateless/01290_empty_array_index_analysis.sql\n@@ -0,0 +1,66 @@\n+drop table if exists count_lc_test;\n+\n+CREATE TABLE count_lc_test\n+(\n+    `s` LowCardinality(String),\n+    `arr` Array(LowCardinality(String)),\n+    `num` UInt64\n+)\n+ENGINE = MergeTree\n+ORDER BY (s, arr);\n+\n+INSERT INTO count_lc_test(num, arr) VALUES (1,[]),(2,['a']),(3,['a','b','c']),(4,['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']);\n+\n+SELECT '--- notEmpty';\n+select * from count_lc_test where notEmpty(arr);\n+SELECT '--- empty';\n+select * from count_lc_test where empty(arr);\n+SELECT '--- = []';\n+select * from count_lc_test where arr = [];\n+SELECT '--- != []';\n+select * from count_lc_test where arr != [];\n+SELECT '--- > []';\n+select * from count_lc_test where arr > [];\n+SELECT '--- < []';\n+select * from count_lc_test where arr < [];\n+SELECT '--- >= []';\n+select * from count_lc_test where arr >= [];\n+SELECT '--- <= []';\n+select * from count_lc_test where arr <= [];\n+SELECT '---';\n+\n+DROP TABLE count_lc_test;\n+\n+\n+drop table if exists count_lc_test;\n+\n+CREATE TABLE count_lc_test\n+(\n+    `s` LowCardinality(String),\n+    `arr` Array(String),\n+    `num` UInt64\n+)\n+ENGINE = MergeTree\n+ORDER BY (s, arr);\n+\n+INSERT INTO count_lc_test(num, arr) VALUES (1,[]),(2,['a']),(3,['a','b','c']),(4,['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']);\n+\n+SELECT '--- notEmpty';\n+select * from count_lc_test where notEmpty(arr);\n+SELECT '--- empty';\n+select * from count_lc_test where empty(arr);\n+SELECT '--- = []';\n+select * from count_lc_test where arr = [];\n+SELECT '--- != []';\n+select * from count_lc_test where arr != [];\n+SELECT '--- > []';\n+select * from count_lc_test where arr > [];\n+SELECT '--- < []';\n+select * from count_lc_test where arr < [];\n+SELECT '--- >= []';\n+select * from count_lc_test where arr >= [];\n+SELECT '--- <= []';\n+select * from count_lc_test where arr <= [];\n+SELECT '---';\n+\n+DROP TABLE count_lc_test;\n",
  "problem_statement": " Cannot compare DB::Array with std::__1::basic_string\nThat test works on 19.11, and fails on all versions >=19.13.\r\n```\r\ndrop table if exists count_lc_test;\r\n\r\nCREATE TABLE count_lc_test\r\n(\r\n    `s` LowCardinality(String), \r\n    `arr` Array(LowCardinality(String)),\r\n    `num` UInt64\r\n)\r\nENGINE = MergeTree\r\nORDER BY (s, arr);\r\n\r\nINSERT INTO count_lc_test(num, arr) VALUES (1,[]),(2,['a']),(3,['a','b','c']),(4,['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa']);\r\n\r\nselect count() from count_lc_test where notEmpty(arr);\r\n```\r\n\r\nThe error message:\r\n```\r\nReceived exception from server (version 20.5.1):\r\nCode: 169. DB::Exception: Received from localhost:9000. DB::Exception: Cannot compare DB::Array with std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >. Stack trace:\r\n\r\n0. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1065a1f0 in /usr/lib/debug/usr/bin/clickhouse\r\n1. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:32: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x914dd3d in /usr/lib/debug/usr/bin/clickhouse\r\n2. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/string:2134: bool DB::FieldVisitorAccurateLess::cantCompare<DB::Array, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(DB::Array const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xd66880a in /usr/lib/debug/usr/bin/clickhouse\r\n3. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:547: auto DB::Field::dispatch<auto DB::applyVisitor<DB::FieldVisitorAccurateLess, DB::Field const&, DB::Field const&>(DB::FieldVisitorAccurateLess&&, DB::Field const&, DB::Field const&)::'lambda'(DB::FieldVisitorAccurateLess&), DB::Field const&>(DB::FieldVisitorAccurateLess&&, DB::Field const&) @ 0xd7b9290 in /usr/lib/debug/usr/bin/clickhouse\r\n4. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.h:172: DB::KeyCondition::checkInHyperrectangle(std::__1::vector<DB::Range, std::__1::allocator<DB::Range> > const&, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&) const @ 0xdc70d33 in /usr/lib/debug/usr/bin/clickhouse\r\n5. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.cpp:1052: DB::KeyCondition::checkInRange(unsigned long, DB::FieldRef const*, DB::FieldRef const*, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&, bool, BoolMask) const @ 0xdc7221f in /usr/lib/debug/usr/bin/clickhouse\r\n6. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.cpp:1207: DB::KeyCondition::mayBeTrueInRange(unsigned long, DB::FieldRef const*, DB::FieldRef const*, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&) const @ 0xdc723db in /usr/lib/debug/usr/bin/clickhouse\r\n7. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp:1284: DB::MergeTreeDataSelectExecutor::markRangesFromPKRange(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::KeyCondition const&, DB::Settings const&) const @ 0xdd39bab in /usr/lib/debug/usr/bin/clickhouse\r\n8. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/deque:1719: DB::MergeTreeDataSelectExecutor::readFromParts(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const @ 0xdd43882 in /usr/lib/debug/usr/bin/clickhouse\r\n9. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:461: DB::MergeTreeDataSelectExecutor::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const @ 0xdd478a3 in /usr/lib/debug/usr/bin/clickhouse\r\n10. /build/obj-x86_64-linux-gnu/../src/Storages/StorageMergeTree.cpp:149: DB::StorageMergeTree::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0xdaf9b05 in /usr/lib/debug/usr/bin/clickhouse\r\n11. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1383: void DB::InterpreterSelectQuery::executeFetchColumns<DB::QueryPipeline>(DB::QueryProcessingStage::Enum, DB::QueryPipeline&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::QueryPipeline&) @ 0xd67ed2b in /usr/lib/debug/usr/bin/clickhouse\r\n12. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:788: void DB::InterpreterSelectQuery::executeImpl<DB::QueryPipeline>(DB::QueryPipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, DB::QueryPipeline&) @ 0xd6824c2 in /usr/lib/debug/usr/bin/clickhouse\r\n13. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/optional:224: DB::InterpreterSelectQuery::executeWithProcessors() @ 0xd6464fd in /usr/lib/debug/usr/bin/clickhouse\r\n14. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:256: DB::InterpreterSelectWithUnionQuery::executeWithProcessors() @ 0xd817c75 in /usr/lib/debug/usr/bin/clickhouse\r\n15. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:341: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*, bool) @ 0xd956d94 in /usr/lib/debug/usr/bin/clickhouse\r\n16. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:588: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0xd95a735 in /usr/lib/debug/usr/bin/clickhouse\r\n17. /build/obj-x86_64-linux-gnu/../programs/server/TCPHandler.cpp:252: DB::TCPHandler::runImpl() @ 0x9256a98 in /usr/lib/debug/usr/bin/clickhouse\r\n18. /build/obj-x86_64-linux-gnu/../programs/server/TCPHandler.cpp:1244: DB::TCPHandler::run() @ 0x9257a70 in /usr/lib/debug/usr/bin/clickhouse\r\n19. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1057801b in /usr/lib/debug/usr/bin/clickhouse\r\n20. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:856: Poco::Net::TCPServerDispatcher::run() @ 0x105784ab in /usr/lib/debug/usr/bin/clickhouse\r\n21. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/Mutex_POSIX.h:59: Poco::PooledThread::run() @ 0x106f6fd6 in /usr/lib/debug/usr/bin/clickhouse\r\n22. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/AutoPtr.h:223: Poco::ThreadImpl::runnableEntry(void*) @ 0x106f23d0 in /usr/lib/debug/usr/bin/clickhouse\r\n23. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n24. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n\r\n\r\n0 rows in set. Elapsed: 0.419 sec. \r\n```\n",
  "hints_text": "Reproduced in master.\nBroken after https://github.com/ClickHouse/ClickHouse/pull/5965\r\nIt is caused by wrong index analysis for empty/notEmpty and Array data type.\r\n\r\nBy the way, the query works if you write\r\n```\r\nselect count() from count_lc_test where arr != []\r\n```",
  "created_at": "2020-05-29T21:34:18Z",
  "modified_files": [
    "src/Storages/MergeTree/KeyCondition.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01290_empty_array_index_analysis.reference",
    "b/tests/queries/0_stateless/01290_empty_array_index_analysis.sql"
  ]
}