{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 40195,
  "instance_id": "ClickHouse__ClickHouse-40195",
  "issue_numbers": [
    "41004"
  ],
  "base_commit": "9a0892c40c9bbe5f27981014468fccb1edf16d57",
  "patch": "diff --git a/base/base/StringRef.h b/base/base/StringRef.h\nindex 9a368f21e7d2..5ee197021ca5 100644\n--- a/base/base/StringRef.h\n+++ b/base/base/StringRef.h\n@@ -61,11 +61,6 @@ struct StringRef\n     constexpr explicit operator std::string_view() const { return std::string_view(data, size); }\n };\n \n-/// Here constexpr doesn't implicate inline, see https://www.viva64.com/en/w/v1043/\n-/// nullptr can't be used because the StringRef values are used in SipHash's pointer arithmetic\n-/// and the UBSan thinks that something like nullptr + 8 is UB.\n-constexpr const inline char empty_string_ref_addr{};\n-constexpr const inline StringRef EMPTY_STRING_REF{&empty_string_ref_addr, 0};\n \n using StringRefs = std::vector<StringRef>;\n \ndiff --git a/src/Columns/ColumnNullable.cpp b/src/Columns/ColumnNullable.cpp\nindex 809024316bf7..20c9965c8c3a 100644\n--- a/src/Columns/ColumnNullable.cpp\n+++ b/src/Columns/ColumnNullable.cpp\n@@ -24,6 +24,7 @@ namespace ErrorCodes\n     extern const int LOGICAL_ERROR;\n     extern const int ILLEGAL_COLUMN;\n     extern const int SIZES_OF_NESTED_COLUMNS_ARE_INCONSISTENT;\n+    extern const int NOT_IMPLEMENTED;\n }\n \n \n@@ -40,6 +41,14 @@ ColumnNullable::ColumnNullable(MutableColumnPtr && nested_column_, MutableColumn\n         throw Exception{\"ColumnNullable cannot have constant null map\", ErrorCodes::ILLEGAL_COLUMN};\n }\n \n+StringRef ColumnNullable::getDataAt(size_t n) const\n+{\n+    if (!isNullAt(n))\n+        return getNestedColumn().getDataAt(n);\n+\n+    throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"Method getDataAt is not supported for {} in case if value is NULL\", getName());\n+}\n+\n void ColumnNullable::updateHashWithValue(size_t n, SipHash & hash) const\n {\n     const auto & arr = getNullMapData();\ndiff --git a/src/Columns/ColumnNullable.h b/src/Columns/ColumnNullable.h\nindex e832f6d20e57..064becbf2f4b 100644\n--- a/src/Columns/ColumnNullable.h\n+++ b/src/Columns/ColumnNullable.h\n@@ -59,19 +59,7 @@ class ColumnNullable final : public COWHelper<IColumn, ColumnNullable>\n     bool getBool(size_t n) const override { return isNullAt(n) ? false : nested_column->getBool(n); }\n     UInt64 get64(size_t n) const override { return nested_column->get64(n); }\n     bool isDefaultAt(size_t n) const override { return isNullAt(n); }\n-\n-    /**\n-     * If isNullAt(n) returns false, returns the nested column's getDataAt(n), otherwise returns a special value\n-     * EMPTY_STRING_REF indicating that data is not present.\n-     */\n-    StringRef getDataAt(size_t n) const override\n-    {\n-        if (isNullAt(n))\n-            return EMPTY_STRING_REF;\n-\n-        return getNestedColumn().getDataAt(n);\n-    }\n-\n+    StringRef getDataAt(size_t) const override;\n     /// Will insert null value if pos=nullptr\n     void insertData(const char * pos, size_t length) override;\n     StringRef serializeValueIntoArena(size_t n, Arena & arena, char const *& begin) const override;\ndiff --git a/src/Columns/ColumnUnique.h b/src/Columns/ColumnUnique.h\nindex 58891e30e129..d3ab87410f3b 100644\n--- a/src/Columns/ColumnUnique.h\n+++ b/src/Columns/ColumnUnique.h\n@@ -136,15 +136,16 @@ class ColumnUnique final : public COWHelper<IColumnUnique, ColumnUnique<ColumnTy\n \n     UInt128 getHash() const override { return hash.getHash(*getRawColumnPtr()); }\n \n+    /// This is strange. Please remove this method as soon as possible.\n     std::optional<UInt64> getOrFindValueIndex(StringRef value) const override\n     {\n         if (std::optional<UInt64> res = reverse_index.getIndex(value); res)\n             return res;\n \n-        auto& nested = *getNestedColumn();\n+        const IColumn & nested = *getNestedColumn();\n \n         for (size_t i = 0; i < nested.size(); ++i)\n-            if (nested.getDataAt(i) == value)\n+            if (!nested.isNullAt(i) && nested.getDataAt(i) == value)\n                 return i;\n \n         return {};\ndiff --git a/src/Columns/IColumnUnique.h b/src/Columns/IColumnUnique.h\nindex 9502daaf65b9..97c9119ebd6d 100644\n--- a/src/Columns/IColumnUnique.h\n+++ b/src/Columns/IColumnUnique.h\n@@ -65,30 +65,12 @@ class IColumnUnique : public IColumn\n \n     virtual size_t uniqueDeserializeAndInsertFromArena(const char * pos, const char *& new_pos) = 0;\n \n-    /// Returns dictionary hash which is sipHash is applied to each row of nested column.\n+    /// Returns dictionary hash which is SipHash is applied to each row of nested column.\n     virtual UInt128 getHash() const = 0;\n \n     const char * getFamilyName() const override { return \"ColumnUnique\"; }\n     TypeIndex getDataType() const override { return getNestedColumn()->getDataType(); }\n \n-    /**\n-     * Given some value (usually, of type @e ColumnType) @p value that is convertible to DB::StringRef, obtains its\n-     * index in the DB::ColumnUnique::reverse_index hashtable.\n-     *\n-     * The reverse index (StringRef => UInt64) is built lazily, so there are two variants:\n-     * - On the function call it's present. Therefore we obtain the index in O(1).\n-     * - The reverse index is absent. We search for the index linearly.\n-     *\n-     * @see DB::ReverseIndex\n-     * @see DB::ColumnUnique\n-     *\n-     * The most common example uses https://clickhouse.com/docs/en/sql-reference/data-types/lowcardinality/ columns.\n-     * Consider data type @e LC(String). The inner type here is @e String which is more or less a contiguous memory\n-     * region, so it can be easily represented as a @e StringRef. So we pass that ref to this function and get its\n-     * index in the dictionary, which can be used to operate with the indices column.\n-     */\n-    virtual std::optional<UInt64> getOrFindValueIndex(StringRef value) const = 0;\n-\n     void insert(const Field &) override\n     {\n         throw Exception(\"Method insert is not supported for ColumnUnique.\", ErrorCodes::NOT_IMPLEMENTED);\n@@ -190,6 +172,23 @@ class IColumnUnique : public IColumn\n     {\n         throw Exception(\"Method hasEqualValues is not supported for ColumnUnique.\", ErrorCodes::NOT_IMPLEMENTED);\n     }\n+\n+    /** Given some value (usually, of type @e ColumnType) @p value that is convertible to DB::StringRef, obtains its\n+     * index in the DB::ColumnUnique::reverse_index hashtable.\n+     *\n+     * The reverse index (StringRef => UInt64) is built lazily, so there are two variants:\n+     * - On the function call it's present. Therefore we obtain the index in O(1).\n+     * - The reverse index is absent. We search for the index linearly.\n+     *\n+     * @see DB::ReverseIndex\n+     * @see DB::ColumnUnique\n+     *\n+     * The most common example uses https://clickhouse.com/docs/en/sql-reference/data-types/lowcardinality/ columns.\n+     * Consider data type @e LC(String). The inner type here is @e String which is more or less a contiguous memory\n+     * region, so it can be easily represented as a @e StringRef. So we pass that ref to this function and get its\n+     * index in the dictionary, which can be used to operate with the indices column.\n+     */\n+    virtual std::optional<UInt64> getOrFindValueIndex(StringRef value) const = 0;\n };\n \n using ColumnUniquePtr = IColumnUnique::ColumnUniquePtr;\ndiff --git a/src/Functions/array/arrayIndex.h b/src/Functions/array/arrayIndex.h\nindex 0dbbe5e41b6f..7f0946e3e507 100644\n--- a/src/Functions/array/arrayIndex.h\n+++ b/src/Functions/array/arrayIndex.h\n@@ -740,42 +740,34 @@ class FunctionArrayIndex : public IFunction\n \n         const auto [null_map_data, null_map_item] = getNullMaps(arguments);\n \n-        const IColumn& col_arg = *arguments[1].column.get();\n-\n-        if (const ColumnConst * const col_arg_const = checkAndGetColumn<ColumnConst>(col_arg))\n+        if (const ColumnConst * col_arg_const = checkAndGetColumn<ColumnConst>(*arguments[1].column))\n         {\n-            const IColumnUnique& col_lc_dict = col_lc->getDictionary();\n-\n-            const bool different_inner_types = col_lc_dict.isNullable()\n-                ? !col_arg_const->structureEquals(*col_lc_dict.getNestedColumn().get())\n-                : true; // Can't compare so ignore this check\n-\n-            const bool use_cloned_arg = col_arg_const->isNumeric()\n-                // outer types do not match\n-                && !col_arg_const->structureEquals(col_lc_dict)\n-                // inner types do not match (like A and Nullable(B) or A and Const(B));\n-                && different_inner_types;\n+            const IColumnUnique & col_lc_dict = col_lc->getDictionary();\n \n             const DataTypeArray * const array_type = checkAndGetDataType<DataTypeArray>(arguments[0].type.get());\n             const DataTypePtr target_type_ptr = recursiveRemoveLowCardinality(array_type->getNestedType());\n \n-            const ColumnPtr col_arg_cloned = use_cloned_arg\n-                ? castColumn(arguments[1], target_type_ptr)\n-                : col_arg_const->getPtr();\n+            ColumnPtr col_arg_cloned = castColumn(\n+                {col_arg_const->getDataColumnPtr(), arguments[1].type, arguments[1].name}, target_type_ptr);\n \n-            const StringRef elem = col_arg_cloned->getDataAt(0);\n             ResultColumnPtr col_result = ResultColumnType::create();\n-\n             UInt64 index = 0;\n \n-            if (elem != EMPTY_STRING_REF)\n+            if (!col_arg_cloned->isNullAt(0))\n             {\n+                if (col_arg_cloned->isNullable())\n+                    col_arg_cloned = checkAndGetColumn<ColumnNullable>(*col_arg_cloned)->getNestedColumnPtr();\n+\n+                StringRef elem = col_arg_cloned->getDataAt(0);\n+\n                 if (std::optional<UInt64> maybe_index = col_lc_dict.getOrFindValueIndex(elem); maybe_index)\n+                {\n                     index = *maybe_index;\n+                }\n                 else\n                 {\n                     const size_t offsets_size = col_array->getOffsets().size();\n-                    auto& data = col_result->getData();\n+                    auto & data = col_result->getData();\n \n                     data.resize_fill(offsets_size);\n \n@@ -786,7 +778,7 @@ class FunctionArrayIndex : public IFunction\n             Impl::Main<ConcreteAction, true>::vector(\n                 col_lc->getIndexes(),\n                 col_array->getOffsets(),\n-                index,\n+                index, /** Assuming LowCardinality has index of NULL always as zero. */\n                 col_result->getData(),\n                 null_map_data,\n                 null_map_item);\n@@ -800,9 +792,9 @@ class FunctionArrayIndex : public IFunction\n \n             const NullMap * const null_map_left_casted = &left_nullable.getNullMapColumn().getData();\n \n-            const IColumn& left_ptr = left_nullable.getNestedColumn();\n+            const IColumn & left_ptr = left_nullable.getNestedColumn();\n \n-            const ColumnPtr right_casted = col_arg.convertToFullColumnIfLowCardinality();\n+            const ColumnPtr right_casted = arguments[1].column->convertToFullColumnIfLowCardinality();\n             const ColumnNullable * const right_nullable = checkAndGetColumn<ColumnNullable>(right_casted.get());\n \n             const NullMap * const null_map_right_casted = right_nullable\n@@ -825,17 +817,17 @@ class FunctionArrayIndex : public IFunction\n         }\n         else // LowCardinality(T) and U, T not Nullable\n         {\n-            if (col_arg.isNullable())\n+            if (arguments[1].column->isNullable())\n                 return nullptr;\n \n-            if (const auto* const arg_lc = checkAndGetColumn<ColumnLowCardinality>(&col_arg);\n+            if (const auto* const arg_lc = checkAndGetColumn<ColumnLowCardinality>(arguments[1].column.get());\n                 arg_lc && arg_lc->isNullable())\n                 return nullptr;\n \n             // LowCardinality(T) and U (possibly LowCardinality(V))\n \n             const ColumnPtr left_casted = col_lc->convertToFullColumnIfLowCardinality();\n-            const ColumnPtr right_casted = col_arg.convertToFullColumnIfLowCardinality();\n+            const ColumnPtr right_casted = arguments[1].column->convertToFullColumnIfLowCardinality();\n \n             ExecutionData data =\n             {\ndiff --git a/src/Processors/Formats/Impl/RawBLOBRowOutputFormat.cpp b/src/Processors/Formats/Impl/RawBLOBRowOutputFormat.cpp\nindex 1d0e987f0c43..1627bb0cad09 100644\n--- a/src/Processors/Formats/Impl/RawBLOBRowOutputFormat.cpp\n+++ b/src/Processors/Formats/Impl/RawBLOBRowOutputFormat.cpp\n@@ -17,8 +17,11 @@ RawBLOBRowOutputFormat::RawBLOBRowOutputFormat(\n \n void RawBLOBRowOutputFormat::writeField(const IColumn & column, const ISerialization &, size_t row_num)\n {\n-    std::string_view value = column.getDataAt(row_num).toView();\n-    out.write(value.data(), value.size());\n+    if (!column.isNullAt(row_num))\n+    {\n+        auto value = column.getDataAt(row_num);\n+        out.write(value.data, value.size);\n+    }\n }\n \n \n@@ -35,4 +38,3 @@ void registerOutputFormatRawBLOB(FormatFactory & factory)\n }\n \n }\n-\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02419_contingency_array_nullable.reference b/tests/queries/0_stateless/02419_contingency_array_nullable.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02419_contingency_array_nullable.sql b/tests/queries/0_stateless/02419_contingency_array_nullable.sql\nnew file mode 100644\nindex 000000000000..5d56e259d2fb\n--- /dev/null\n+++ b/tests/queries/0_stateless/02419_contingency_array_nullable.sql\n@@ -0,0 +1,1 @@\n+SELECT contingency(1, [1, NULL]); -- { serverError 48 }\n",
  "problem_statement": "Buffer overflow in `AggregateFunctionCrossTab`\nhttps://s3.amazonaws.com/clickhouse-test-reports/0/e12858dca51e4587b01547cc132e527502f136c1/stateless_tests__asan__[1/2].html\r\n\r\n```\r\n==641==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60c002494a40 at pc 0x000039cd0635 bp 0x7f4d78fa9f00 sp 0x7f4d78fa9ef8\r\nREAD of size 8 at 0x60c002494a40 thread T1818 (QueryPipelineEx)\r\n    #0 0x39cd0634 in CityHash_v1_0_2::UNALIGNED_LOAD64(char const*) build_docker/../contrib/cityhash102/src/city.cc:79:3\r\n    #1 0x39cd0634 in CityHash_v1_0_2::Fetch64(char const*) build_docker/../contrib/cityhash102/src/city.cc:90:10\r\n    #2 0x39cd0634 in CityHash_v1_0_2::CityHash64(char const*, unsigned long) build_docker/../contrib/cityhash102/src/city.cc:231:31\r\n    #3 0x1409673e in DB::UniqVariadicHash<false, false>::apply(unsigned long, DB::IColumn const**, unsigned long) build_docker/../src/AggregateFunctions/UniqVariadicHash.h:50:20\r\n    #4 0x1409673e in DB::AggregateFunctionCrossTab<DB::(anonymous namespace)::ContingencyData>::add(char*, DB::IColumn const**, unsigned long, DB::Arena*) const build_docker/../src/AggregateFunctions/CrossTab.h:147:24\r\n    #5 0x14097443 in DB::IAggregateFunctionHelper<DB::AggregateFunctionCrossTab<DB::(anonymous namespace)::ContingencyData> >::addBatchSinglePlace(unsigned long, unsigned long, char*, DB::IColumn const**, DB::Arena*, long) const build_docker/../src/AggregateFunctions/IAggregateFunction.h:476:53\r\n    #6 0x2df09764 in void DB::Aggregator::executeWithoutKeyImpl<false>(char*&, unsigned long, unsigned long, DB::Aggregator::AggregateFunctionInstruction*, DB::Arena*) const build_docker/../src/Interpreters/Aggregator.cpp\r\n    #7 0x2ddc51cf in DB::Aggregator::executeOnBlock(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >, unsigned long, unsigned long, DB::AggregatedDataVariants&, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >&, std::__1::vector<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >, std::__1::allocator<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > > >&, bool&) const build_docker/../src/Interpreters/Aggregator.cpp:1442:13\r\n    #8 0x32e1a4be in DB::AggregatingTransform::consume(DB::Chunk) build_docker/../src/Processors/Transforms/AggregatingTransform.cpp:531:33\r\n    #9 0x32e15a9c in DB::AggregatingTransform::work() build_docker/../src/Processors/Transforms/AggregatingTransform.cpp:490:9\r\n    #10 0x328dca6d in DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:47:26\r\n    #11 0x328dca6d in DB::ExecutionThreadContext::executeTask() build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:92:9\r\n    #12 0x328bb842 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:228:26\r\n    #13 0x328bf43c in DB::PipelineExecutor::executeSingleThread(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:194:5\r\n    #14 0x328bf43c in DB::PipelineExecutor::spawnThreads()::$_0::operator()() const build_docker/../src/Processors/Executors/PipelineExecutor.cpp:315:17\r\n    #15 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) build_docker/../contrib/libcxx/include/type_traits:3648:23\r\n    #16 0x328bf43c in decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/tuple:1595:1\r\n    #17 0x328bf43c in decltype(auto) std::__1::apply<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&) build_docker/../contrib/libcxx/include/tuple:1604:1\r\n    #18 0x328bf43c in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()::operator()() build_docker/../src/Common/ThreadPool.h:193:13\r\n    #19 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #20 0x328bf43c in void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&) build_docker/../contrib/libcxx/include/__functional/invoke.h:61:9\r\n    #21 0x328bf43c in std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()>::operator()() build_docker/../contrib/libcxx/include/__functional/function.h:230:12\r\n    #22 0x328bf43c in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) build_docker/../contrib/libcxx/include/__functional/function.h:711:16\r\n    #23 0xdce412b in std::__1::__function::__policy_func<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:843:16\r\n    #24 0xdce412b in std::__1::function<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:1184:12\r\n    #25 0xdce412b in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) build_docker/../src/Common/ThreadPool.cpp:294:17\r\n    #26 0xdcee281 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/../src/Common/ThreadPool.cpp:144:73\r\n    #27 0xdcee281 in decltype(static_cast<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #28 0xdcee281 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/thread:282:5\r\n    #29 0xdcee281 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()> >(void*) build_docker/../contrib/libcxx/include/thread:293:5\r\n    #30 0x7f5205c9e608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)\r\n    #31 0x7f5205bc3132 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x11f132) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)\r\n\r\n0x60c002494a40 is located 0 bytes to the right of 128-byte region [0x60c0024949c0,0x60c002494a40)\r\nallocated by thread T1818 (QueryPipelineEx) here:\r\n    #0 0xda93b3e in malloc (/usr/bin/clickhouse+0xda93b3e) (BuildId: 1b4e3e8d26f64d77d9c64e1765ce544156fd08d0)\r\n    #1 0xdbf1036 in Allocator<false, false>::allocNoTrack(unsigned long, unsigned long) build_docker/../src/Common/Allocator.h:227:27\r\n    #2 0xdc9652e in Allocator<false, false>::alloc(unsigned long, unsigned long) build_docker/../src/Common/Allocator.h:96:16\r\n    #3 0xdc9652e in void DB::PODArrayBase<1ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::alloc<>(unsigned long) build_docker/../src/Common/PODArray.h:128:65\r\n    #4 0x30971926 in void DB::PODArrayBase<1ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::realloc<>(unsigned long) build_docker/../src/Common/PODArray.h:153:13\r\n    #5 0x30971926 in void DB::PODArrayBase<1ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::reserve<>(unsigned long) build_docker/../src/Common/PODArray.h:234:13\r\n    #6 0x30971926 in void DB::PODArrayBase<1ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::resize<>(unsigned long) build_docker/../src/Common/PODArray.h:247:9\r\n    #7 0x30971926 in DB::ColumnFixedString::insertRangeFrom(DB::IColumn const&, unsigned long, unsigned long) build_docker/../src/Columns/ColumnFixedString.cpp:202:11\r\n    #8 0x30728021 in DB::ColumnArray::insertFrom(DB::IColumn const&, unsigned long) build_docker/../src/Columns/ColumnArray.cpp:313:15\r\n    #9 0x30728021 in DB::ColumnArray::replicateGeneric(DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul> const&) const build_docker/../src/Columns/ColumnArray.cpp:1137:26\r\n    #10 0x307228a4 in DB::ColumnArray::replicate(DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul> const&) const build_docker/../src/Columns/ColumnArray.cpp:946:12\r\n    #11 0x307255b8 in DB::ColumnArray::replicateNullable(DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul> const&) const build_docker/../src/Columns/ColumnArray.cpp:1152:14\r\n    #12 0x30722893 in DB::ColumnArray::replicate(DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul> const&) const build_docker/../src/Columns/ColumnArray.cpp:944:65\r\n    #13 0x307c4a53 in DB::ColumnConst::convertToFullColumn() const build_docker/../src/Columns/ColumnConst.cpp:48:18\r\n    #14 0x307c9d6d in DB::ColumnConst::convertToFullColumnIfConst() const build_docker/../src/Columns/ColumnConst.h:39:16\r\n    #15 0x2ddc172a in DB::Aggregator::prepareAggregateInstructions(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >, std::__1::vector<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >, std::__1::allocator<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > > >&, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&, std::__1::vector<DB::Aggregator::AggregateFunctionInstruction, std::__1::allocator<DB::Aggregator::AggregateFunctionInstruction> >&, std::__1::vector<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >, std::__1::allocator<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > > >&) const build_docker/../src/Interpreters/Aggregator.cpp:1314:61\r\n    #16 0x2ddc4e4b in DB::Aggregator::executeOnBlock(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >, unsigned long, unsigned long, DB::AggregatedDataVariants&, std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >&, std::__1::vector<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> >, std::__1::allocator<std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > > >&, bool&) const build_docker/../src/Interpreters/Aggregator.cpp:1419:5\r\n    #17 0x32e1a4be in DB::AggregatingTransform::consume(DB::Chunk) build_docker/../src/Processors/Transforms/AggregatingTransform.cpp:531:33\r\n    #18 0x32e15a9c in DB::AggregatingTransform::work() build_docker/../src/Processors/Transforms/AggregatingTransform.cpp:490:9\r\n    #19 0x328dca6d in DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:47:26\r\n    #20 0x328dca6d in DB::ExecutionThreadContext::executeTask() build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:92:9\r\n    #21 0x328bb842 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:228:26\r\n    #22 0x328bf43c in DB::PipelineExecutor::executeSingleThread(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:194:5\r\n    #23 0x328bf43c in DB::PipelineExecutor::spawnThreads()::$_0::operator()() const build_docker/../src/Processors/Executors/PipelineExecutor.cpp:315:17\r\n    #24 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) build_docker/../contrib/libcxx/include/type_traits:3648:23\r\n    #25 0x328bf43c in decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/tuple:1595:1\r\n    #26 0x328bf43c in decltype(auto) std::__1::apply<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&) build_docker/../contrib/libcxx/include/tuple:1604:1\r\n    #27 0x328bf43c in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()::operator()() build_docker/../src/Common/ThreadPool.h:193:13\r\n    #28 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #29 0x328bf43c in void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&) build_docker/../contrib/libcxx/include/__functional/invoke.h:61:9\r\n    #30 0x328bf43c in std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()>::operator()() build_docker/../contrib/libcxx/include/__functional/function.h:230:12\r\n    #31 0x328bf43c in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) build_docker/../contrib/libcxx/include/__functional/function.h:711:16\r\n    #32 0xdce412b in std::__1::__function::__policy_func<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:843:16\r\n    #33 0xdce412b in std::__1::function<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:1184:12\r\n    #34 0xdce412b in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) build_docker/../src/Common/ThreadPool.cpp:294:17\r\n    #35 0xdcee281 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/../src/Common/ThreadPool.cpp:144:73\r\n    #36 0xdcee281 in decltype(static_cast<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #37 0xdcee281 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/thread:282:5\r\n    #38 0xdcee281 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()> >(void*) build_docker/../contrib/libcxx/include/thread:293:5\r\n    #39 0x7f5205c9e608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)\r\n\r\nThread T1818 (QueryPipelineEx) created by T705 (QueryPipelineEx) here:\r\n    #0 0xda7d04c in pthread_create (/usr/bin/clickhouse+0xda7d04c) (BuildId: 1b4e3e8d26f64d77d9c64e1765ce544156fd08d0)\r\n    #1 0xdced0d4 in std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) build_docker/../contrib/libcxx/include/__threading_support:375:10\r\n    #2 0xdced0d4 in std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'(), void>(void&&) build_docker/../contrib/libcxx/include/thread:309:16\r\n    #3 0xdce09cc in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool) build_docker/../src/Common/ThreadPool.cpp:144:35\r\n    #4 0xdce2627 in ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long, bool) build_docker/../src/Common/ThreadPool.cpp:180:5\r\n    #5 0x328bec7c in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../src/Common/ThreadPool.h:176:38\r\n    #6 0x328bec7c in ThreadFromGlobalPoolImpl<true>* std::__1::construct_at<ThreadFromGlobalPoolImpl<true>, DB::PipelineExecutor::spawnThreads()::$_0, ThreadFromGlobalPoolImpl<true>*>(ThreadFromGlobalPoolImpl<true>*, DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/__memory/construct_at.h:38:50\r\n    #7 0x328bec7c in void std::__1::allocator_traits<std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::construct<ThreadFromGlobalPoolImpl<true>, DB::PipelineExecutor::spawnThreads()::$_0, void, void>(std::__1::allocator<ThreadFromGlobalPoolImpl<true> >&, ThreadFromGlobalPoolImpl<true>*, DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/__memory/allocator_traits.h:298:9\r\n    #8 0x328bd791 in void std::__1::vector<ThreadFromGlobalPoolImpl<true>, std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::__construct_one_at_end<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/vector:778:5\r\n    #9 0x328bd791 in ThreadFromGlobalPoolImpl<true>& std::__1::vector<ThreadFromGlobalPoolImpl<true>, std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::emplace_back<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/vector:1577:9\r\n    #10 0x328bd791 in DB::PipelineExecutor::spawnThreads() build_docker/../src/Processors/Executors/PipelineExecutor.cpp:304:17\r\n    #11 0x328bbe6d in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:259:13\r\n    #12 0x328bf43c in DB::PipelineExecutor::executeSingleThread(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:194:5\r\n    #13 0x328bf43c in DB::PipelineExecutor::spawnThreads()::$_0::operator()() const build_docker/../src/Processors/Executors/PipelineExecutor.cpp:315:17\r\n    #14 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) build_docker/../contrib/libcxx/include/type_traits:3648:23\r\n    #15 0x328bf43c in decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/tuple:1595:1\r\n    #16 0x328bf43c in decltype(auto) std::__1::apply<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&) build_docker/../contrib/libcxx/include/tuple:1604:1\r\n    #17 0x328bf43c in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()::operator()() build_docker/../src/Common/ThreadPool.h:193:13\r\n    #18 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #19 0x328bf43c in void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&) build_docker/../contrib/libcxx/include/__functional/invoke.h:61:9\r\n    #20 0x328bf43c in std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()>::operator()() build_docker/../contrib/libcxx/include/__functional/function.h:230:12\r\n    #21 0x328bf43c in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) build_docker/../contrib/libcxx/include/__functional/function.h:711:16\r\n    #22 0xdce412b in std::__1::__function::__policy_func<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:843:16\r\n    #23 0xdce412b in std::__1::function<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:1184:12\r\n    #24 0xdce412b in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) build_docker/../src/Common/ThreadPool.cpp:294:17\r\n    #25 0xdcee281 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/../src/Common/ThreadPool.cpp:144:73\r\n    #26 0xdcee281 in decltype(static_cast<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #27 0xdcee281 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/thread:282:5\r\n    #28 0xdcee281 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()> >(void*) build_docker/../contrib/libcxx/include/thread:293:5\r\n    #29 0x7f5205c9e608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)\r\n\r\nThread T705 (QueryPipelineEx) created by T270 (QueryPipelineEx) here:\r\n    #0 0xda7d04c in pthread_create (/usr/bin/clickhouse+0xda7d04c) (BuildId: 1b4e3e8d26f64d77d9c64e1765ce544156fd08d0)\r\n    #1 0xdced0d4 in std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) build_docker/../contrib/libcxx/include/__threading_support:375:10\r\n    #2 0xdced0d4 in std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'(), void>(void&&) build_docker/../contrib/libcxx/include/thread:309:16\r\n    #3 0xdce09cc in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool) build_docker/../src/Common/ThreadPool.cpp:144:35\r\n    #4 0xdce2627 in ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long, bool) build_docker/../src/Common/ThreadPool.cpp:180:5\r\n    #5 0x328bec7c in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../src/Common/ThreadPool.h:176:38\r\n    #6 0x328bec7c in ThreadFromGlobalPoolImpl<true>* std::__1::construct_at<ThreadFromGlobalPoolImpl<true>, DB::PipelineExecutor::spawnThreads()::$_0, ThreadFromGlobalPoolImpl<true>*>(ThreadFromGlobalPoolImpl<true>*, DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/__memory/construct_at.h:38:50\r\n    #7 0x328bec7c in void std::__1::allocator_traits<std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::construct<ThreadFromGlobalPoolImpl<true>, DB::PipelineExecutor::spawnThreads()::$_0, void, void>(std::__1::allocator<ThreadFromGlobalPoolImpl<true> >&, ThreadFromGlobalPoolImpl<true>*, DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/__memory/allocator_traits.h:298:9\r\n    #8 0x328bd791 in void std::__1::vector<ThreadFromGlobalPoolImpl<true>, std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::__construct_one_at_end<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/vector:778:5\r\n    #9 0x328bd791 in ThreadFromGlobalPoolImpl<true>& std::__1::vector<ThreadFromGlobalPoolImpl<true>, std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::emplace_back<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/vector:1577:9\r\n    #10 0x328bd791 in DB::PipelineExecutor::spawnThreads() build_docker/../src/Processors/Executors/PipelineExecutor.cpp:304:17\r\n    #11 0x328bbe6d in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:259:13\r\n    #12 0x328bf43c in DB::PipelineExecutor::executeSingleThread(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:194:5\r\n    #13 0x328bf43c in DB::PipelineExecutor::spawnThreads()::$_0::operator()() const build_docker/../src/Processors/Executors/PipelineExecutor.cpp:315:17\r\n    #14 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) build_docker/../contrib/libcxx/include/type_traits:3648:23\r\n    #15 0x328bf43c in decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/tuple:1595:1\r\n    #16 0x328bf43c in decltype(auto) std::__1::apply<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&) build_docker/../contrib/libcxx/include/tuple:1604:1\r\n    #17 0x328bf43c in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()::operator()() build_docker/../src/Common/ThreadPool.h:193:13\r\n    #18 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #19 0x328bf43c in void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&) build_docker/../contrib/libcxx/include/__functional/invoke.h:61:9\r\n    #20 0x328bf43c in std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()>::operator()() build_docker/../contrib/libcxx/include/__functional/function.h:230:12\r\n    #21 0x328bf43c in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) build_docker/../contrib/libcxx/include/__functional/function.h:711:16\r\n    #22 0xdce412b in std::__1::__function::__policy_func<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:843:16\r\n    #23 0xdce412b in std::__1::function<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:1184:12\r\n    #24 0xdce412b in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) build_docker/../src/Common/ThreadPool.cpp:294:17\r\n    #25 0xdcee281 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/../src/Common/ThreadPool.cpp:144:73\r\n    #26 0xdcee281 in decltype(static_cast<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #27 0xdcee281 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/thread:282:5\r\n    #28 0xdcee281 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()> >(void*) build_docker/../contrib/libcxx/include/thread:293:5\r\n    #29 0x7f5205c9e608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)\r\n\r\nThread T270 (QueryPipelineEx) created by T266 (ThreadPool) here:\r\n    #0 0xda7d04c in pthread_create (/usr/bin/clickhouse+0xda7d04c) (BuildId: 1b4e3e8d26f64d77d9c64e1765ce544156fd08d0)\r\n    #1 0xdced0d4 in std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) build_docker/../contrib/libcxx/include/__threading_support:375:10\r\n    #2 0xdced0d4 in std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'(), void>(void&&) build_docker/../contrib/libcxx/include/thread:309:16\r\n    #3 0xdce09cc in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool) build_docker/../src/Common/ThreadPool.cpp:144:35\r\n    #4 0xdcf376a in ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long, bool) build_docker/../src/Common/ThreadPool.cpp:180:5\r\n    #5 0xdcf376a in ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false> >::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_docker/../src/Common/ThreadPool.h:176:38\r\n    #6 0xdce6820 in void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false> >::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool) build_docker/../src/Common/ThreadPool.cpp:144:35\r\n    #7 0xdce5f7b in ThreadPoolImpl<ThreadFromGlobalPoolImpl<false> >::scheduleOrThrowOnError(std::__1::function<void ()>, int) build_docker/../src/Common/ThreadPool.cpp:168:5\r\n    #8 0x32b9e139 in DB::ParallelFormattingOutputFormat::scheduleFormatterThreadForUnitWithNumber(unsigned long, unsigned long) build_docker/../src/Processors/Formats/Impl/ParallelFormattingOutputFormat.h:251:14\r\n    #9 0x32b9a94d in DB::ParallelFormattingOutputFormat::addChunk(DB::Chunk, DB::ParallelFormattingOutputFormat::ProcessingUnitType, bool) build_docker/../src/Processors/Formats/Impl/ParallelFormattingOutputFormat.cpp:66:9\r\n    #10 0x32b99c5c in DB::ParallelFormattingOutputFormat::finalizeImpl() build_docker/../src/Processors/Formats/Impl/ParallelFormattingOutputFormat.cpp:13:9\r\n    #11 0x328fcae7 in DB::IOutputFormat::finalize() build_docker/../src/Processors/Formats/IOutputFormat.cpp:126:5\r\n    #12 0x328fcae7 in DB::IOutputFormat::work() build_docker/../src/Processors/Formats/IOutputFormat.cpp:75:9\r\n    #13 0x328dca6d in DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:47:26\r\n    #14 0x328dca6d in DB::ExecutionThreadContext::executeTask() build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:92:9\r\n    #15 0x328bb842 in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:228:26\r\n    #16 0x328bf43c in DB::PipelineExecutor::executeSingleThread(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:194:5\r\n    #17 0x328bf43c in DB::PipelineExecutor::spawnThreads()::$_0::operator()() const build_docker/../src/Processors/Executors/PipelineExecutor.cpp:315:17\r\n    #18 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&) build_docker/../contrib/libcxx/include/type_traits:3648:23\r\n    #19 0x328bf43c in decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/tuple:1595:1\r\n    #20 0x328bf43c in decltype(auto) std::__1::apply<DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&>(DB::PipelineExecutor::spawnThreads()::$_0&, std::__1::tuple<>&) build_docker/../contrib/libcxx/include/tuple:1604:1\r\n    #21 0x328bf43c in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()::operator()() build_docker/../src/Common/ThreadPool.h:193:13\r\n    #22 0x328bf43c in decltype(static_cast<DB::PipelineExecutor::spawnThreads()::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #23 0x328bf43c in void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'()&) build_docker/../contrib/libcxx/include/__functional/invoke.h:61:9\r\n    #24 0x328bf43c in std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()>::operator()() build_docker/../contrib/libcxx/include/__functional/function.h:230:12\r\n    #25 0x328bf43c in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) build_docker/../contrib/libcxx/include/__functional/function.h:711:16\r\n    #26 0xdce412b in std::__1::__function::__policy_func<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:843:16\r\n    #27 0xdce412b in std::__1::function<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:1184:12\r\n    #28 0xdce412b in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) build_docker/../src/Common/ThreadPool.cpp:294:17\r\n    #29 0xdcee281 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/../src/Common/ThreadPool.cpp:144:73\r\n    #30 0xdcee281 in decltype(static_cast<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_docker/../contrib/libcxx/include/type_traits:3640:23\r\n    #31 0xdcee281 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/thread:282:5\r\n    #32 0xdcee281 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()> >(void*) build_docker/../contrib/libcxx/include/thread:293:5\r\n    #33 0x7f5205c9e608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)\r\n\r\nThread T266 (ThreadPool) created by T3 (HTTPHandler) here:\r\n    #0 0xda7d04c in pthread_create (/usr/bin/clickhouse+0xda7d04c) (BuildId: 1b4e3e8d26f64d77d9c64e1765ce544156fd08d0)\r\n    #1 0xdced0d4 in std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) build_docker/../contrib/libcxx/include/__threading_support:375:10\r\n    #2 0xdced0d4 in std::__1::thread::thread<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'(), void>(void&&) build_docker/../contrib/libcxx/include/thread:309:16\r\n    #3 0xdce09cc in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool) build_docker/../src/Common/ThreadPool.cpp:144:35\r\n    #4 0xdce2627 in ThreadPoolImpl<std::__1::thread>::scheduleOrThrow(std::__1::function<void ()>, int, unsigned long, bool) build_docker/../src/Common/ThreadPool.cpp:180:5\r\n    #5 0x328bec7c in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../src/Common/ThreadPool.h:176:38\r\n    #6 0x328bec7c in ThreadFromGlobalPoolImpl<true>* std::__1::construct_at<ThreadFromGlobalPoolImpl<true>, DB::PipelineExecutor::spawnThreads()::$_0, ThreadFromGlobalPoolImpl<true>*>(ThreadFromGlobalPoolImpl<true>*, DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/__memory/construct_at.h:38:50\r\n    #7 0x328bec7c in void std::__1::allocator_traits<std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::construct<ThreadFromGlobalPoolImpl<true>, DB::PipelineExecutor::spawnThreads()::$_0, void, void>(std::__1::allocator<ThreadFromGlobalPoolImpl<true> >&, ThreadFromGlobalPoolImpl<true>*, DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/__memory/allocator_traits.h:298:9\r\n    #8 0x328bd791 in void std::__1::vector<ThreadFromGlobalPoolImpl<true>, std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::__construct_one_at_end<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/vector:778:5\r\n    #9 0x328bd791 in ThreadFromGlobalPoolImpl<true>& std::__1::vector<ThreadFromGlobalPoolImpl<true>, std::__1::allocator<ThreadFromGlobalPoolImpl<true> > >::emplace_back<DB::PipelineExecutor::spawnThreads()::$_0>(DB::PipelineExecutor::spawnThreads()::$_0&&) build_docker/../contrib/libcxx/include/vector:1577:9\r\n    #10 0x328bd791 in DB::PipelineExecutor::spawnThreads() build_docker/../src/Processors/Executors/PipelineExecutor.cpp:304:17\r\n    #11 0x328ba0a1 in DB::PipelineExecutor::executeImpl(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:360:9\r\n    #12 0x328b9d13 in DB::PipelineExecutor::execute(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:89:9\r\n    #13 0x328b735f in DB::CompletedPipelineExecutor::execute() build_docker/../src/Processors/Executors/CompletedPipelineExecutor.cpp:100:18\r\n    #14 0x3053f539 in DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>, std::__1::optional<DB::FormatSettings> const&) build_docker/../src/Interpreters/executeQuery.cpp:1232:22\r\n    #15 0x326e102c in DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::__1::optional<DB::CurrentThread::QueryScope>&) build_docker/../src/Server/HTTPHandler.cpp:818:5\r\n    #16 0x326ef04d in DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) build_docker/../src/Server/HTTPHandler.cpp:990:9\r\n    #17 0x3280592f in DB::HTTPServerConnection::run() build_docker/../src/Server/HTTP/HTTPServerConnection.cpp:65:34\r\n    #18 0x3996864e in Poco::Net::TCPServerConnection::start() build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3\r\n    #19 0x39969412 in Poco::Net::TCPServerDispatcher::run() build_docker/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115:20\r\n    #20 0x39e492bb in Poco::PooledThread::run() build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14\r\n    #21 0x39e428d9 in Poco::ThreadImpl::runnableEntry(void*) build_docker/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27\r\n    #22 0x7f5205c9e608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)\r\n\r\nThread T3 (HTTPHandler) created by T0 here:\r\n    #0 0xda7d04c in pthread_create (/usr/bin/clickhouse+0xda7d04c) (BuildId: 1b4e3e8d26f64d77d9c64e1765ce544156fd08d0)\r\n    #1 0x39e41b45 in Poco::ThreadImpl::startImpl(Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >) build_docker/../contrib/poco/Foundation/src/Thread_POSIX.cpp:202:6\r\n    #2 0x39e44cfd in Poco::Thread::start(Poco::Runnable&) build_docker/../contrib/poco/Foundation/src/Thread.cpp:128:2\r\n    #3 0x39e49cc9 in Poco::PooledThread::start() build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:85:10\r\n    #4 0x39e49cc9 in Poco::ThreadPool::ThreadPool(int, int, int, int) build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:252:12\r\n    #5 0xdaeaf25 in DB::Server::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) build_docker/../programs/server/Server.cpp:733:22\r\n    #6 0x399a1e47 in Poco::Util::Application::run() build_docker/../contrib/poco/Util/src/Application.cpp:334:8\r\n    #7 0xdadec7e in DB::Server::run() build_docker/../programs/server/Server.cpp:466:25\r\n    #8 0x399e66a7 in Poco::Util::ServerApplication::run(int, char**) build_docker/../contrib/poco/Util/src/ServerApplication.cpp:611:9\r\n    #9 0xdad7aed in mainEntryClickHouseServer(int, char**) build_docker/../programs/server/Server.cpp:181:20\r\n    #10 0xdad257f in main build_docker/../programs/main.cpp:449:12\r\n    #11 0x7f5205ac8082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)\r\n\r\nSUMMARY: AddressSanitizer: heap-buffer-overflow build_docker/../contrib/cityhash102/src/city.cc:79:3 in CityHash_v1_0_2::UNALIGNED_LOAD64(char const*)\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2022-08-14T02:37:19Z"
}