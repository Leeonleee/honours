diff --git a/tests/integration/test_partition/test.py b/tests/integration/test_partition/test.py
index 6600d6712e04..7395e544816c 100644
--- a/tests/integration/test_partition/test.py
+++ b/tests/integration/test_partition/test.py
@@ -372,6 +372,11 @@ def test_drop_detached_parts(drop_detached_parts_table):
 
 
 def test_system_detached_parts(drop_detached_parts_table):
+    q("drop table if exists sdp_0 sync")
+    q("drop table if exists sdp_1 sync")
+    q("drop table if exists sdp_2 sync")
+    q("drop table if exists sdp_3 sync")
+
     q(
         "create table sdp_0 (n int, x int) engine=MergeTree order by n SETTINGS compress_marks=false, compress_primary_key=false, ratio_of_defaults_for_sparse_serialization=1"
     )
@@ -492,12 +497,13 @@ def test_system_detached_parts(drop_detached_parts_table):
             q("alter table sdp_{} attach partition id '{}'".format(i, p))
 
     assert (
-        q("select n, x, count() from merge('default', 'sdp_') group by n, x")
+        q("select n, x::int AS x, count() from merge('default', '^sdp_') group by n, x")
         == "0\t0\t4
1\t1\t4
"
     )
 
 
 def test_detached_part_dir_exists(started_cluster):
+    q("drop table if exists detached_part_dir_exists sync")
     q(
         "create table detached_part_dir_exists (n int) engine=MergeTree order by n "
         "SETTINGS compress_marks=false, compress_primary_key=false, ratio_of_defaults_for_sparse_serialization=1, old_parts_lifetime=0"
@@ -551,6 +557,7 @@ def test_detached_part_dir_exists(started_cluster):
 
 
 def test_make_clone_in_detached(started_cluster):
+    q("drop table if exists clone_in_detached sync")
     q(
         "create table clone_in_detached (n int, m String) engine=ReplicatedMergeTree('/clone_in_detached', '1') order by n SETTINGS compress_marks=false, compress_primary_key=false, ratio_of_defaults_for_sparse_serialization=1"
     )
diff --git a/tests/queries/0_stateless/00717_merge_and_distributed.sql b/tests/queries/0_stateless/00717_merge_and_distributed.sql
index 4d63757e65c3..69e9c12e6c05 100644
--- a/tests/queries/0_stateless/00717_merge_and_distributed.sql
+++ b/tests/queries/0_stateless/00717_merge_and_distributed.sql
@@ -6,7 +6,8 @@ DROP TABLE IF EXISTS test_local_2;
 DROP TABLE IF EXISTS test_distributed_1;
 DROP TABLE IF EXISTS test_distributed_2;
 
-set allow_deprecated_syntax_for_merge_tree=1;
+SET merge_table_max_tables_to_look_for_schema_inference = 1;
+SET allow_deprecated_syntax_for_merge_tree = 1;
 CREATE TABLE test_local_1 (date Date, value UInt32) ENGINE = MergeTree(date, date, 8192);
 CREATE TABLE test_local_2 (date Date, value UInt32) ENGINE = MergeTree(date, date, 8192);
 CREATE TABLE test_distributed_1 AS test_local_1 ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_local_1, rand());
diff --git a/tests/queries/0_stateless/02024_merge_regexp_assert.sql b/tests/queries/0_stateless/02024_merge_regexp_assert.sql
index de1fdbbb56b1..feb1ce2f974b 100644
--- a/tests/queries/0_stateless/02024_merge_regexp_assert.sql
+++ b/tests/queries/0_stateless/02024_merge_regexp_assert.sql
@@ -6,5 +6,5 @@ CREATE TABLE t (b UInt8) ENGINE = Memory;
 SELECT a FROM merge(REGEXP('.'), '^t$'); -- { serverError UNKNOWN_IDENTIFIER }
 SELECT a FROM merge(REGEXP('\0'), '^t$'); -- { serverError UNKNOWN_IDENTIFIER }
 SELECT a FROM merge(REGEXP('\0a'), '^t$'); -- { serverError UNKNOWN_IDENTIFIER }
-SELECT a FROM merge(REGEXP('\0a'), '^$'); -- { serverError BAD_ARGUMENTS }
+SELECT a FROM merge(REGEXP('\0a'), '^$'); -- { serverError CANNOT_EXTRACT_TABLE_STRUCTURE }
 DROP TABLE t;
diff --git a/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql b/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql
index db0a498fd82c..d15997f4f6bc 100644
--- a/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql
+++ b/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql
@@ -1,3 +1,5 @@
+SET merge_table_max_tables_to_look_for_schema_inference = 1;
+
 CREATE TABLE test_s64_local (date Date, value Int64) ENGINE = MergeTree order by tuple();
 CREATE TABLE test_u64_local (date Date, value UInt64) ENGINE = MergeTree order by tuple();
 CREATE TABLE test_s64_distributed AS test_s64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_s64_local, rand());
diff --git a/tests/queries/0_stateless/02763_row_policy_storage_merge.reference b/tests/queries/0_stateless/02763_row_policy_storage_merge.reference
index 6510a3c933e1..82ee518c61db 100644
--- a/tests/queries/0_stateless/02763_row_policy_storage_merge.reference
+++ b/tests/queries/0_stateless/02763_row_policy_storage_merge.reference
@@ -143,8 +143,8 @@ SELECT y from merge(currentDatabase(), 02763_merge)
 SELECT *
 SELECT x, lc
 SELECT *
-1	11	111	111	42
-1	11	111	111	42
+1	11	111	111
+1	11	111	111
 SELECT x, lc
 1	111
 1	111
@@ -293,8 +293,8 @@ SELECT y from merge(currentDatabase(), 02763_merge)
 SELECT *
 SELECT x, lc
 SELECT *
-1	11	111	111	42
-1	11	111	111	42
+1	11	111	111
+1	11	111	111
 SELECT x, lc
 1	111
 1	111
diff --git a/tests/queries/0_stateless/02763_row_policy_storage_merge.sql.j2 b/tests/queries/0_stateless/02763_row_policy_storage_merge.sql.j2
index eabbde9e9dd7..f2d5e93b608e 100644
--- a/tests/queries/0_stateless/02763_row_policy_storage_merge.sql.j2
+++ b/tests/queries/0_stateless/02763_row_policy_storage_merge.sql.j2
@@ -3,6 +3,7 @@ DROP TABLE IF EXISTS 02763_merge_log_2;
 DROP TABLE IF EXISTS 02763_merge_merge_1;
 DROP TABLE IF EXISTS 02763_merge_merge_2;
 DROP TABLE IF EXISTS 02763_merge_fancycols;
+DROP TABLE IF EXISTS 02763_engine_merge_12;
 DROP ROW POLICY IF EXISTS 02763_filter_1 ON 02763_merge_log_1;
 DROP ROW POLICY IF EXISTS 02763_filter_2 ON 02763_merge_merge_1;
 DROP ROW POLICY IF EXISTS 02763_filter_3 ON 02763_merge_log_1;
diff --git a/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.reference b/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.reference
index 7278018f1d63..62d78339b14d 100644
--- a/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.reference
+++ b/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.reference
@@ -7,9 +7,9 @@ Expression ((Projection + Before ORDER BY))
   Aggregating
     Expression (Before GROUP BY)
       ReadFromMerge
-        Expression
+        Expression (( + ))
           ReadFromMergeTree (default.mt1)
-        Expression
+        Expression (( + ))
           ReadFromMergeTree (default.mt2)
-        Expression
+        Expression (( + ))
           ReadFromStorage (TinyLog)
diff --git a/tests/queries/0_stateless/03217_filtering_in_storage_merge.reference b/tests/queries/0_stateless/03217_filtering_in_storage_merge.reference
index d366ad04c396..faf90275d117 100644
--- a/tests/queries/0_stateless/03217_filtering_in_storage_merge.reference
+++ b/tests/queries/0_stateless/03217_filtering_in_storage_merge.reference
@@ -2,5 +2,5 @@ Expression ((Project names + Projection))
   Aggregating
     Expression (Before GROUP BY)
       ReadFromMerge
-        Filter (( + ( + )))
+        Filter (( + ( + ( + ))))
           ReadFromMergeTree (default.test_03217_merge_replica_1)
diff --git a/tests/queries/0_stateless/03302_analyzer_join_filter_push_down_bug.reference b/tests/queries/0_stateless/03302_analyzer_join_filter_push_down_bug.reference
index 07540b3d9d9e..6d05103be79c 100644
--- a/tests/queries/0_stateless/03302_analyzer_join_filter_push_down_bug.reference
+++ b/tests/queries/0_stateless/03302_analyzer_join_filter_push_down_bug.reference
@@ -2,7 +2,7 @@ Expression ((Project names + Projection))
 Actions: INPUT :: 0 -> count() UInt64 : 0
 Positions: 0
   Aggregating
-  Keys: 
+  Keys:
   Aggregates:
       count()
         Function: count() â†’ UInt64
diff --git a/tests/queries/0_stateless/03302_merge_table_structure_unification.reference b/tests/queries/0_stateless/03302_merge_table_structure_unification.reference
new file mode 100644
index 000000000000..15565cb3091d
--- /dev/null
+++ b/tests/queries/0_stateless/03302_merge_table_structure_unification.reference
@@ -0,0 +1,19 @@
+-1		['Goodbye']	2025-01-01 02:03:04
+1	Hello	['World']	1970-01-01 00:00:00
+a	Int32					
+b	String					
+c	Array(Nullable(String))					
+d	DateTime(\'UTC\')	DEFAULT	now()			
+-1		['Goodbye']	2025-01-01 02:03:04
+-1		['Goodbye']	2025-01-01 02:03:04
+1	Hello	['World']	1970-01-01 00:00:00
+1	Hello	['World']	1970-01-01 00:00:00
+-1		['Goodbye']	2025-01-01 02:03:04
+1	Hello	['World']	1970-01-01 00:00:00
+a	UInt8					
+b	String					
+c	Array(String)					
+1	Hello	['World']
+1	Hello	['World']
+255		['Goodbye']
+255		['Goodbye']
diff --git a/tests/queries/0_stateless/03302_merge_table_structure_unification.sql b/tests/queries/0_stateless/03302_merge_table_structure_unification.sql
new file mode 100644
index 000000000000..b6548b21527c
--- /dev/null
+++ b/tests/queries/0_stateless/03302_merge_table_structure_unification.sql
@@ -0,0 +1,49 @@
+SET enable_analyzer = 1;
+
+DROP TABLE IF EXISTS test_a;
+DROP TABLE IF EXISTS test_b;
+DROP TABLE IF EXISTS test_merge;
+
+CREATE TABLE test_a
+(
+    a UInt8,
+    b String,
+    c Array(String)
+) ENGINE = Memory;
+
+CREATE TABLE test_b
+(
+    a Int32,
+    c Array(Nullable(String)),
+    d DateTime('UTC') DEFAULT now(),
+) ENGINE = Memory;
+
+INSERT INTO test_a VALUES (1, 'Hello', ['World']);
+INSERT INTO test_b VALUES (-1, ['Goodbye'], '2025-01-01 02:03:04');
+
+CREATE TABLE test_merge ENGINE = Merge(currentDatabase(), '^test_');
+
+-- TODO: defaults are not calculated
+SELECT * FROM test_merge ORDER BY a;
+
+DESCRIBE merge('^test_');
+
+-- Note that this will also pick up the test_merge table, duplicating the results
+SELECT * FROM merge('^test_') ORDER BY a;
+
+DROP TABLE test_merge;
+
+SET merge_table_max_tables_to_look_for_schema_inference = 1;
+
+CREATE TABLE test_merge ENGINE = Merge(currentDatabase(), '^test_');
+
+SELECT * FROM test_merge ORDER BY a;
+
+DESCRIBE merge('^test_');
+
+SELECT * FROM merge('^test_') ORDER BY a;
+
+DROP TABLE test_merge;
+
+DROP TABLE test_a;
+DROP TABLE test_b;
