diff --git a/tests/queries/0_stateless/02125_transform_decimal_bug.reference b/tests/queries/0_stateless/02125_transform_decimal_bug.reference
index 7f59d0ee7bf6..d1bf333ec8e1 100644
--- a/tests/queries/0_stateless/02125_transform_decimal_bug.reference
+++ b/tests/queries/0_stateless/02125_transform_decimal_bug.reference
@@ -1,3 +1,4 @@
+1
 0
 1
 2
diff --git a/tests/queries/0_stateless/02125_transform_decimal_bug.sql b/tests/queries/0_stateless/02125_transform_decimal_bug.sql
index 4ef471ea875e..002f60076e9a 100644
--- a/tests/queries/0_stateless/02125_transform_decimal_bug.sql
+++ b/tests/queries/0_stateless/02125_transform_decimal_bug.sql
@@ -1,4 +1,4 @@
-SELECT transform(1, [1], [toDecimal32(1, 2)]); -- { serverError 44 }
+SELECT transform(1, [1], [toDecimal32(1, 2)]);
 SELECT transform(toDecimal32(number, 2), [toDecimal32(3, 2)], [toDecimal32(30, 2)]) FROM system.numbers LIMIT 10;
 SELECT transform(toDecimal32(number, 2), [toDecimal32(3, 2)], [toDecimal32(30, 2)], toDecimal32(1000, 2)) FROM system.numbers LIMIT 10;
 SELECT transform(number, [3, 5, 11], [toDecimal32(30, 2), toDecimal32(50, 2), toDecimal32(70,2)], toDecimal32(1000, 2)) FROM system.numbers LIMIT 10;
diff --git a/tests/queries/0_stateless/02163_operators.sql b/tests/queries/0_stateless/02163_operators.sql
index b2414bb197ef..3f2d7d8bbb7a 100644
--- a/tests/queries/0_stateless/02163_operators.sql
+++ b/tests/queries/0_stateless/02163_operators.sql
@@ -1,2 +1,2 @@
-WITH 2 AS `b.c`, [4, 5] AS a, 6 AS u, 3 AS v, 2 AS d, TRUE AS e, 1 AS f, 0 AS g, 2 AS h, 'Hello' AS i, 'World' AS j, TIMESTAMP '2022-02-02 02:02:02' AS w, [] AS k, (1, 2) AS l, 2 AS m, 3 AS n, [] AS o, [1] AS p, 1 AS q, q AS r, 1 AS s, 1 AS t
+WITH 2 AS `b.c`, [4, 5] AS a, 6 AS u, 3 AS v, 2 AS d, TRUE AS e, 1 AS f, 0 AS g, 2 AS h, 'Hello' AS i, 'World' AS j, 'hi' AS w, NULL AS k, (1, 2) AS l, 2 AS m, 3 AS n, [] AS o, [1] AS p, 1 AS q, q AS r, 1 AS s, 1 AS t
 SELECT INTERVAL CASE CASE WHEN NOT -a[`b.c`] * u DIV v + d IS NOT NULL AND e OR f BETWEEN g AND h THEN i ELSE j END WHEN w THEN k END || [l, (m, n)] MINUTE IS NULL OR NOT o::Array(INT) = p <> q < r > s != t AS upyachka;
diff --git a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
index f5284f38b86a..a1a653361ee2 100644
--- a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
+++ b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
@@ -405,16 +405,6 @@ QUERY id: 0
     TABLE id: 7, table_name: system.numbers
   LIMIT
     CONSTANT id: 17, constant_value: UInt64_10, constant_value_type: UInt64
-\N
-\N
-\N
-\N
-\N
-\N
-\N
-\N
-\N
-\N
 SELECT transform(number, [NULL], _CAST([\'google\', \'censor.net\', \'yahoo\'], \'Array(Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4))\'), _CAST(\'other\', \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4)\'))
 FROM
 (
@@ -424,56 +414,38 @@ FROM
 )
 QUERY id: 0
   PROJECTION COLUMNS
-    transform(number, [NULL], [\'google\', \'censor.net\', \'yahoo\'], \'other\') Nullable(Nothing)
+    transform(number, [NULL], [\'google\', \'censor.net\', \'yahoo\'], \'other\') String
   PROJECTION
     LIST id: 1, nodes: 1
-      FUNCTION id: 2, function_name: transform, function_type: ordinary, result_type: Nullable(Nothing)
+      FUNCTION id: 2, function_name: toString, function_type: ordinary, result_type: String
         ARGUMENTS
-          LIST id: 3, nodes: 4
-            COLUMN id: 4, column_name: number, result_type: Nullable(Nothing), source_id: 5
-            CONSTANT id: 6, constant_value: Array_[NULL], constant_value_type: Array(Nullable(Nothing))
-            CONSTANT id: 7, constant_value: Array_[\'google\', \'censor.net\', \'yahoo\'], constant_value_type: Array(String)
-            CONSTANT id: 8, constant_value: \'other\', constant_value_type: String
+          LIST id: 3, nodes: 1
+            FUNCTION id: 4, function_name: transform, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4)
+              ARGUMENTS
+                LIST id: 5, nodes: 4
+                  COLUMN id: 6, column_name: number, result_type: Nullable(Nothing), source_id: 7
+                  CONSTANT id: 8, constant_value: Array_[NULL], constant_value_type: Array(Nullable(Nothing))
+                  FUNCTION id: 9, function_name: _CAST, function_type: ordinary, result_type: Array(Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4))
+                    ARGUMENTS
+                      LIST id: 10, nodes: 2
+                        CONSTANT id: 11, constant_value: Array_[\'google\', \'censor.net\', \'yahoo\'], constant_value_type: Array(String)
+                        CONSTANT id: 12, constant_value: \'Array(Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4))\', constant_value_type: String
+                  FUNCTION id: 13, function_name: _CAST, function_type: ordinary, result_type: Enum8(\'censor.net\' = 1, \'google\' = 2, \'other\' = 3, \'yahoo\' = 4)
+                    ARGUMENTS
+                      LIST id: 14, nodes: 2
+                        CONSTANT id: 15, constant_value: \'other\', constant_value_type: String
+                        CONSTANT id: 16, constant_value: \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4)\', constant_value_type: String
   JOIN TREE
-    QUERY id: 5, is_subquery: 1
+    QUERY id: 7, is_subquery: 1
       PROJECTION COLUMNS
         number Nullable(Nothing)
       PROJECTION
-        LIST id: 9, nodes: 1
-          CONSTANT id: 10, constant_value: NULL, constant_value_type: Nullable(Nothing)
+        LIST id: 17, nodes: 1
+          CONSTANT id: 18, constant_value: NULL, constant_value_type: Nullable(Nothing)
       JOIN TREE
-        TABLE id: 11, table_name: system.numbers
+        TABLE id: 19, table_name: system.numbers
       LIMIT
-        CONSTANT id: 12, constant_value: UInt64_10, constant_value_type: UInt64
-\N
-\N
-\N
-\N
-\N
-\N
-\N
-\N
-\N
-\N
-SELECT transform(number, NULL, _CAST([\'google\', \'censor.net\', \'yahoo\'], \'Array(Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4))\'), _CAST(\'other\', \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4)\'))
-FROM system.numbers
-LIMIT 10
-QUERY id: 0
-  PROJECTION COLUMNS
-    transform(number, NULL, [\'google\', \'censor.net\', \'yahoo\'], \'other\') Nullable(Nothing)
-  PROJECTION
-    LIST id: 1, nodes: 1
-      FUNCTION id: 2, function_name: transform, function_type: ordinary, result_type: Nullable(Nothing)
-        ARGUMENTS
-          LIST id: 3, nodes: 4
-            COLUMN id: 4, column_name: number, result_type: UInt64, source_id: 5
-            CONSTANT id: 6, constant_value: NULL, constant_value_type: Nullable(Nothing)
-            CONSTANT id: 7, constant_value: Array_[\'google\', \'censor.net\', \'yahoo\'], constant_value_type: Array(String)
-            CONSTANT id: 8, constant_value: \'other\', constant_value_type: String
-  JOIN TREE
-    TABLE id: 5, table_name: system.numbers
-  LIMIT
-    CONSTANT id: 9, constant_value: UInt64_10, constant_value_type: UInt64
+        CONSTANT id: 20, constant_value: UInt64_10, constant_value_type: UInt64
 other
 other
 google
diff --git a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.sql b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.sql
index c23046c7b208..492d42cb6bc2 100644
--- a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.sql
+++ b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.sql
@@ -33,13 +33,13 @@ SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other')
 EXPLAIN SYNTAX SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') as value, value FROM system.numbers LIMIT 10;
 EXPLAIN QUERY TREE run_passes = 1 SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') as value, value FROM system.numbers LIMIT 10;
 
-SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10);
+SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10); -- { serverError 36 }
 EXPLAIN SYNTAX SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10);
 EXPLAIN QUERY TREE run_passes = 1 SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10);
 
-SELECT transform(number, NULL, ['google', 'censor.net', 'yahoo'], 'other') FROM system.numbers LIMIT 10;
-EXPLAIN SYNTAX SELECT transform(number, NULL, ['google', 'censor.net', 'yahoo'], 'other') FROM system.numbers LIMIT 10;
-EXPLAIN QUERY TREE run_passes = 1 SELECT transform(number, NULL, ['google', 'censor.net', 'yahoo'], 'other') FROM system.numbers LIMIT 10;
+SELECT transform(number, NULL, ['google', 'censor.net', 'yahoo'], 'other') FROM system.numbers LIMIT 10; -- { serverError 43 }
+EXPLAIN SYNTAX SELECT transform(number, NULL, ['google', 'censor.net', 'yahoo'], 'other') FROM system.numbers LIMIT 10; -- { serverError 43 }
+EXPLAIN QUERY TREE run_passes = 1 SELECT transform(number, NULL, ['google', 'censor.net', 'yahoo'], 'other') FROM system.numbers LIMIT 10; -- { serverError 43 }
 
 SET optimize_if_transform_strings_to_enum = 0;
 
diff --git a/tests/queries/0_stateless/02542_case_no_else.reference b/tests/queries/0_stateless/02542_case_no_else.reference
new file mode 100644
index 000000000000..8f3fdf29168a
--- /dev/null
+++ b/tests/queries/0_stateless/02542_case_no_else.reference
@@ -0,0 +1,3 @@
+2
+1	Z
+1	Z
diff --git a/tests/queries/0_stateless/02542_case_no_else.sql b/tests/queries/0_stateless/02542_case_no_else.sql
new file mode 100644
index 000000000000..0c7975a750ee
--- /dev/null
+++ b/tests/queries/0_stateless/02542_case_no_else.sql
@@ -0,0 +1,14 @@
+SELECT CASE 1 WHEN 1 THEN 2 END;
+
+SELECT id,
+    CASE id
+         WHEN 1 THEN 'Z'
+    END x
+FROM  (SELECT 1 as id);
+
+SELECT id,
+       CASE id
+            WHEN 1 THEN 'Z'
+            ELSE 'X'
+     END x
+FROM  (SELECT 1 as id);
diff --git a/tests/queries/0_stateless/02542_transform_new.reference b/tests/queries/0_stateless/02542_transform_new.reference
new file mode 100644
index 000000000000..b6eaa692c416
--- /dev/null
+++ b/tests/queries/0_stateless/02542_transform_new.reference
@@ -0,0 +1,32 @@
+1
+1
+1
+1
+9
+9
+\N
+7
+1
+9
+7
+b
+b
+b
+b
+a
+a
+\N
+c
+sep1
+80000
+80000
+sep2
+80000
+80000
+sep3
+1
+sep4
+8000
+sep5
+8000
+sep6
diff --git a/tests/queries/0_stateless/02542_transform_new.sql b/tests/queries/0_stateless/02542_transform_new.sql
new file mode 100644
index 000000000000..43da0a507317
--- /dev/null
+++ b/tests/queries/0_stateless/02542_transform_new.sql
@@ -0,0 +1,35 @@
+select transform(2, [1,2], [9,1], materialize(null));
+select transform(2, [1,2], [9,1], materialize(7));
+select transform(2, [1,2], [9,1], null);
+select transform(2, [1,2], [9,1], 7);
+select transform(1, [1,2], [9,1], null);
+select transform(1, [1,2], [9,1], 7);
+select transform(5, [1,2], [9,1], null);
+select transform(5, [1,2], [9,1], 7);
+select transform(2, [1,2], [9,1]);
+select transform(1, [1,2], [9,1]);
+select transform(7, [1,2], [9,1]);
+
+select transform(2, [1,2], ['a','b'], materialize(null));
+select transform(2, [1,2], ['a','b'], materialize('c'));
+select transform(2, [1,2], ['a','b'], null);
+select transform(2, [1,2], ['a','b'], 'c');
+select transform(1, [1,2], ['a','b'], null);
+select transform(1, [1,2], ['a','b'], 'c');
+select transform(5, [1,2], ['a','b'], null);
+select transform(5, [1,2], ['a','b'], 'c');
+
+select 'sep1';
+SELECT transform(number, [2], [toDecimal32(1, 1)], materialize(80000)) as x FROM numbers(2);
+select 'sep2';
+SELECT transform(number, [2], [toDecimal32(1, 1)], 80000) as x FROM numbers(2);
+select 'sep3';
+SELECT transform(toDecimal32(2, 1), [toDecimal32(2, 1)], [1]);
+select 'sep4';
+SELECT transform(8000, [1], [toDecimal32(2, 1)]);
+select 'sep5';
+SELECT transform(toDecimal32(8000,0), [1], [toDecimal32(2, 1)]);
+select 'sep6';
+SELECT transform(-9223372036854775807, [-1], [toDecimal32(1024, 3)]) FROM system.numbers LIMIT 7; -- { serverError BAD_ARGUMENTS }
+SELECT [NULL, NULL, NULL, NULL], transform(number, [2147483648], [toDecimal32(1, 2)]) AS x FROM numbers(257) WHERE materialize(10); -- { serverError BAD_ARGUMENTS }
+SELECT transform(-2147483649, [1], [toDecimal32(1, 2)]) GROUP BY [1] WITH TOTALS; -- { serverError BAD_ARGUMENTS }
diff --git a/tests/queries/0_stateless/02542_transform_old.reference b/tests/queries/0_stateless/02542_transform_old.reference
new file mode 100644
index 000000000000..d03b17d40a32
--- /dev/null
+++ b/tests/queries/0_stateless/02542_transform_old.reference
@@ -0,0 +1,72 @@
+google
+other
+yahoo
+yandex
+#1
+20
+21
+22
+29
+#2
+0
+1
+3
+5
+7
+8
+9
+20
+21
+29
+#3
+20
+21
+22
+29
+#4
+google
+other
+yahoo
+yandex
+#5
+0
+1
+3
+5
+7
+8
+9
+google
+yahoo
+yandex
+----
+google
+other
+yahoo
+yandex
+#1
+20
+21
+22
+29
+#3
+20
+21
+22
+29
+#4
+google
+other
+yahoo
+yandex
+----
+2000
+2100
+2200
+2900
+#1
+2000
+2100
+2200
+2900
+----
diff --git a/tests/queries/0_stateless/02542_transform_old.sql b/tests/queries/0_stateless/02542_transform_old.sql
new file mode 100644
index 000000000000..01a960ec3674
--- /dev/null
+++ b/tests/queries/0_stateless/02542_transform_old.sql
@@ -0,0 +1,25 @@
+SELECT transform(number, [2, 4, 6], ['google', 'yandex', 'yahoo'], 'other') as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#1';
+SELECT transform(number, [2, 4, 6], [29, 20, 21], 22) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#2';
+SELECT transform(number, [2, 4, 6], [29, 20, 21]) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#3';
+SELECT transform(toString(number), ['2', '4', '6'], [29, 20, 21], 22) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#4';
+SELECT transform(toString(number), ['2', '4', '6'], ['google', 'yandex', 'yahoo'], 'other') as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#5';
+SELECT transform(toString(number), ['2', '4', '6'], ['google', 'yandex', 'yahoo']) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '----';
+SELECT transform(number, [2, 4, 6], ['google', 'yandex', 'yahoo'], materialize('other')) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#1';
+SELECT transform(number, [2, 4, 6], [29, 20, 21], materialize(22)) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#3';
+SELECT transform(toString(number), ['2', '4', '6'], [29, 20, 21], materialize(22)) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#4';
+SELECT transform(toString(number), ['2', '4', '6'], ['google', 'yandex', 'yahoo'], materialize('other')) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '----';
+SELECT transform(number, [2, 4, 6], [2900, 2000, 2100], 2200) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '#1';
+SELECT transform(number, [2, 4, 6], [2900, 2000, 2100], materialize(2200)) as x FROM numbers(10) GROUP BY x ORDER BY x;
+SELECT '----';
+SELECT transform(number, [1], [null]) FROM system.numbers LIMIT 1; -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
