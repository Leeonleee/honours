diff --git a/tests/integration/test_quorum_inserts/test.py b/tests/integration/test_quorum_inserts/test.py
index 279018426920..f490c13ca278 100644
--- a/tests/integration/test_quorum_inserts/test.py
+++ b/tests/integration/test_quorum_inserts/test.py
@@ -256,7 +256,7 @@ def test_insert_quorum_with_ttl(started_cluster):
                    "(a Int8, d Date) " \
                    "Engine = ReplicatedMergeTree('/clickhouse/tables/{table}', '{replica}') " \
                    "PARTITION BY d ORDER BY a " \
-                   "TTL d + INTERVAL 5 second " \
+                   "TTL d + INTERVAL 5 second DELETE WHERE toYear(d) = 2011 " \
                    "SETTINGS merge_with_ttl_timeout=2 "
 
     print("Create Replicated table with two replicas")
@@ -284,11 +284,14 @@ def test_insert_quorum_with_ttl(started_cluster):
     zero.query("INSERT INTO test_insert_quorum_with_ttl(a,d) VALUES(1, '2011-01-01')",
                                               settings={'insert_quorum_timeout' : 5000})
 
-
-    assert TSV("1\t2011-01-01
") == TSV(first.query("SELECT * FROM test_insert_quorum_with_ttl", settings={'select_sequential_consistency' : 0}))
-    assert TSV("1\t2011-01-01
") == TSV(first.query("SELECT * FROM test_insert_quorum_with_ttl", settings={'select_sequential_consistency' : 1}))
-
     print("Inserts should resume.")
     zero.query("INSERT INTO test_insert_quorum_with_ttl(a, d) VALUES(2, '2012-02-02')")
 
+    first.query("OPTIMIZE TABLE test_insert_quorum_with_ttl")
+    first.query("SYSTEM SYNC REPLICA test_insert_quorum_with_ttl")
+    zero.query("SYSTEM SYNC REPLICA test_insert_quorum_with_ttl")
+
+    assert TSV("2\t2012-02-02
") == TSV(first.query("SELECT * FROM test_insert_quorum_with_ttl", settings={'select_sequential_consistency' : 0}))
+    assert TSV("2\t2012-02-02
") == TSV(first.query("SELECT * FROM test_insert_quorum_with_ttl", settings={'select_sequential_consistency' : 1}))
+
     execute_on_all_cluster("DROP TABLE IF EXISTS test_insert_quorum_with_ttl")
diff --git a/tests/queries/0_stateless/00620_optimize_on_nonleader_replica_zookeeper.sql b/tests/queries/0_stateless/00620_optimize_on_nonleader_replica_zookeeper.sql
index 9622a5bd3c2a..f488502b13b0 100644
--- a/tests/queries/0_stateless/00620_optimize_on_nonleader_replica_zookeeper.sql
+++ b/tests/queries/0_stateless/00620_optimize_on_nonleader_replica_zookeeper.sql
@@ -1,3 +1,5 @@
+-- The test is mostly outdated as now every replica is leader and can do OPTIMIZE locally.
+
 DROP TABLE IF EXISTS rename1;
 DROP TABLE IF EXISTS rename2;
 DROP TABLE IF EXISTS rename3;
@@ -14,7 +16,9 @@ SELECT * FROM rename1;
 RENAME TABLE rename2 TO rename3;
 
 INSERT INTO rename1 VALUES (0, 1, 2);
+SYSTEM SYNC REPLICA rename3; -- Make "rename3" to see all data parts.
 OPTIMIZE TABLE rename3;
+SYSTEM SYNC REPLICA rename1; -- Make "rename1" to see and process all scheduled merges.
 SELECT * FROM rename1;
 
 DROP TABLE IF EXISTS rename1;
diff --git a/tests/queries/0_stateless/01307_multiple_leaders.sh b/tests/queries/0_stateless/01307_multiple_leaders.sh
index e19a10bcecb6..a43aa074c438 100755
--- a/tests/queries/0_stateless/01307_multiple_leaders.sh
+++ b/tests/queries/0_stateless/01307_multiple_leaders.sh
@@ -5,35 +5,28 @@ CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
 
 set -e
 
-$CLICKHOUSE_CLIENT -n --query "
-DROP TABLE IF EXISTS r0;
-DROP TABLE IF EXISTS r1;
+NUM_REPLICAS=2
+DATA_SIZE=200
 
-CREATE TABLE r0 (x UInt64) ENGINE = ReplicatedMergeTree('/test/table', 'r0') ORDER BY x SETTINGS min_bytes_for_wide_part = '10M';
-CREATE TABLE r1 (x UInt64) ENGINE = ReplicatedMergeTree('/test/table', 'r1') ORDER BY x SETTINGS min_bytes_for_wide_part = '10M';
-"
+SEQ=$(seq 0 $(($NUM_REPLICAS - 1)))
+
+for REPLICA in $SEQ; do $CLICKHOUSE_CLIENT -n --query "DROP TABLE IF EXISTS r$REPLICA"; done
+for REPLICA in $SEQ; do $CLICKHOUSE_CLIENT -n --query "CREATE TABLE r$REPLICA (x UInt64) ENGINE = ReplicatedMergeTree('/test/table', 'r$REPLICA') ORDER BY x SETTINGS min_bytes_for_wide_part = '10M';"; done
 
 function thread()
 {
     REPLICA=$1
     ITERATIONS=$2
 
-    $CLICKHOUSE_CLIENT --max_block_size 1 --min_insert_block_size_rows 0 --min_insert_block_size_bytes 0 --query "INSERT INTO r$REPLICA SELECT number * 2 + $REPLICA FROM numbers($ITERATIONS)"
+    $CLICKHOUSE_CLIENT --max_block_size 1 --min_insert_block_size_rows 0 --min_insert_block_size_bytes 0 --query "INSERT INTO r$REPLICA SELECT number * $NUM_REPLICAS + $REPLICA FROM numbers($ITERATIONS)"
 }
 
-
-thread 0 200 &
-thread 1 200 &
+for REPLICA in $SEQ; do
+    thread $REPLICA $DATA_SIZE &
+done
 
 wait
 
-$CLICKHOUSE_CLIENT -n --query "
-SYSTEM SYNC REPLICA r0;
-SYSTEM SYNC REPLICA r1;
-
-SELECT count(), sum(x) FROM r0;
-SELECT count(), sum(x) FROM r1;
-
-DROP TABLE r0;
-DROP TABLE r1;
-"
+for REPLICA in $SEQ; do $CLICKHOUSE_CLIENT -n --query "SYSTEM SYNC REPLICA r$REPLICA"; done
+for REPLICA in $SEQ; do $CLICKHOUSE_CLIENT -n --query "SELECT count(), sum(x) FROM r$REPLICA"; done
+for REPLICA in $SEQ; do $CLICKHOUSE_CLIENT -n --query "DROP TABLE r$REPLICA"; done
