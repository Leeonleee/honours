diff --git a/tests/queries/0_stateless/01674_filter_by_uint8.reference b/tests/queries/0_stateless/01674_filter_by_uint8.reference
new file mode 100644
index 000000000000..6b522898280d
--- /dev/null
+++ b/tests/queries/0_stateless/01674_filter_by_uint8.reference
@@ -0,0 +1,8 @@
+0
+0
+255
+1	['foo','bar']	1	1
+2	['foo','bar']	2	1
+3	['foo','bar']	3	1
+4	['foo','bar']	4	1
+5	['foo','bar']	5	1
diff --git a/tests/queries/0_stateless/01674_filter_by_uint8.sql b/tests/queries/0_stateless/01674_filter_by_uint8.sql
new file mode 100644
index 000000000000..960153d9c5af
--- /dev/null
+++ b/tests/queries/0_stateless/01674_filter_by_uint8.sql
@@ -0,0 +1,14 @@
+-- ORDER BY is to trigger comparison at uninitialized memory after bad filtering.
+SELECT ignore(number) FROM numbers(256) ORDER BY arrayFilter(x -> materialize(255), materialize([257])) LIMIT 1;
+SELECT ignore(number) FROM numbers(256) ORDER BY arrayFilter(x -> materialize(255), materialize(['257'])) LIMIT 1;
+
+SELECT count() FROM numbers(256) WHERE toUInt8(number);
+
+DROP TABLE IF EXISTS t_filter;
+CREATE TABLE t_filter(s String, a Array(FixedString(3)), u UInt64, f UInt8)
+ENGINE = MergeTree ORDER BY u;
+
+INSERT INTO t_filter SELECT toString(number), ['foo', 'bar'], number, toUInt8(number) FROM numbers(1000);
+SELECT * FROM t_filter WHERE f LIMIT 5;
+
+DROP TABLE IF EXISTS t_filter;
