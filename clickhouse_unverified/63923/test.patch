diff --git a/docker/test/fuzzer/run-fuzzer.sh b/docker/test/fuzzer/run-fuzzer.sh
index d1ccdea304b7..b8f967ed9c27 100755
--- a/docker/test/fuzzer/run-fuzzer.sh
+++ b/docker/test/fuzzer/run-fuzzer.sh
@@ -138,7 +138,7 @@ function filter_exists_and_template
             # but it doesn't allow to use regex
             echo "$path" | sed 's/\.sql\.j2$/.gen.sql/'
         else
-            echo "'$path' does not exists" >&2
+            echo "'$path' does not exist" >&2
         fi
     done
 }
diff --git a/tests/integration/test_access_for_functions/test.py b/tests/integration/test_access_for_functions/test.py
index 3e58c9614218..004d39e1deae 100644
--- a/tests/integration/test_access_for_functions/test.py
+++ b/tests/integration/test_access_for_functions/test.py
@@ -42,7 +42,7 @@ def test_access_rights_for_function():
     function_resolution_error = instance.query_and_get_error("SELECT MySum(1, 2)")
     assert (
         "Unknown function MySum" in function_resolution_error
-        or "Function with name 'MySum' does not exists." in function_resolution_error
+        or "Function with name 'MySum' does not exist." in function_resolution_error
     )
 
     instance.query("REVOKE CREATE FUNCTION ON *.* FROM A")
diff --git a/tests/integration/test_sql_user_defined_functions_on_cluster/test.py b/tests/integration/test_sql_user_defined_functions_on_cluster/test.py
index 0bf03f545bef..dc36a7b32b83 100644
--- a/tests/integration/test_sql_user_defined_functions_on_cluster/test.py
+++ b/tests/integration/test_sql_user_defined_functions_on_cluster/test.py
@@ -28,7 +28,7 @@ def check_function_does_not_exist(node: ClickHouseInstance):
         error_message = node.query_and_get_error("SELECT test_function(1);")
         assert (
             "Unknown function test_function" in error_message
-            or "Function with name 'test_function' does not exists. In scope SELECT test_function(1)"
+            or "Function with name 'test_function' does not exist. In scope SELECT test_function(1)"
             in error_message
         )
 
diff --git a/tests/integration/test_user_defined_object_persistence/test.py b/tests/integration/test_user_defined_object_persistence/test.py
index 1919da0726e2..986438a4eed9 100644
--- a/tests/integration/test_user_defined_object_persistence/test.py
+++ b/tests/integration/test_user_defined_object_persistence/test.py
@@ -38,13 +38,13 @@ def test_persistence():
     error_message = instance.query_and_get_error("SELECT MySum1(1, 2)")
     assert (
         "Unknown function MySum1" in error_message
-        or "Function with name 'MySum1' does not exists. In scope SELECT MySum1(1, 2)"
+        or "Function with name 'MySum1' does not exist. In scope SELECT MySum1(1, 2)"
         in error_message
     )
 
     error_message = instance.query_and_get_error("SELECT MySum2(1, 2)")
     assert (
         "Unknown function MySum2" in error_message
-        or "Function with name 'MySum2' does not exists. In scope SELECT MySum2(1, 2)"
+        or "Function with name 'MySum2' does not exist. In scope SELECT MySum2(1, 2)"
         in error_message
     )
diff --git a/tests/queries/0_stateless/02722_database_filesystem.sh b/tests/queries/0_stateless/02722_database_filesystem.sh
index 0c75c15fc695..374dd246c96c 100755
--- a/tests/queries/0_stateless/02722_database_filesystem.sh
+++ b/tests/queries/0_stateless/02722_database_filesystem.sh
@@ -72,7 +72,7 @@ DROP DATABASE IF EXISTS test2;
 CREATE DATABASE test2 ENGINE = Filesystem('/tmp');
 """ 2>&1 | tr '
' ' ' | grep -oF -e "UNKNOWN_TABLE" -e "BAD_ARGUMENTS" > /dev/null && echo "OK" || echo 'FAIL' ||:
 
-# BAD_ARGUMENTS: .../user_files/relative_unknown_dir does not exists
+# BAD_ARGUMENTS: .../user_files/relative_unknown_dir does not exist
 ${CLICKHOUSE_CLIENT} --multiline --multiquery -q """
 DROP DATABASE IF EXISTS test2;
 CREATE DATABASE test2 ENGINE = Filesystem('relative_unknown_dir');
diff --git a/tests/queries/0_stateless/03096_text_log_format_string_args_not_empty.sql b/tests/queries/0_stateless/03096_text_log_format_string_args_not_empty.sql
index 0f4a217a4aef..cffc8a49c676 100644
--- a/tests/queries/0_stateless/03096_text_log_format_string_args_not_empty.sql
+++ b/tests/queries/0_stateless/03096_text_log_format_string_args_not_empty.sql
@@ -10,4 +10,4 @@ select count() > 0 from system.text_log where message_format_string = 'Peak memo
 
 select count() > 0 from system.text_log where level = 'Error' and message_format_string = 'Unknown {}{} identifier \'{}\' in scope {}{}' and value1 = 'expression' and value3 = 'count' and value4 = 'SELECT count';
 
-select count() > 0 from system.text_log where level = 'Error' and message_format_string = 'Function with name \'{}\' does not exists. In scope {}{}' and value1 = 'conut' and value2 = 'SELECT conut()' and value3 ilike '%\'count\'%';
+select count() > 0 from system.text_log where level = 'Error' and message_format_string = 'Function with name \'{}\' does not exist. In scope {}{}' and value1 = 'conut' and value2 = 'SELECT conut()' and value3 ilike '%\'count\'%';
diff --git a/tests/queries/0_stateless/03155_datasketches_ubsan.reference b/tests/queries/0_stateless/03155_datasketches_ubsan.reference
new file mode 100644
index 000000000000..d00491fd7e5b
--- /dev/null
+++ b/tests/queries/0_stateless/03155_datasketches_ubsan.reference
@@ -0,0 +1,1 @@
+1
diff --git a/tests/queries/0_stateless/03155_datasketches_ubsan.sql b/tests/queries/0_stateless/03155_datasketches_ubsan.sql
new file mode 100644
index 000000000000..521301d03f72
--- /dev/null
+++ b/tests/queries/0_stateless/03155_datasketches_ubsan.sql
@@ -0,0 +1,2 @@
+-- Tags: no-fasttest
+SELECT uniqTheta(toFixedString('uniqTheta distinct', 18)) FROM (SELECT number % 2 AS x FROM numbers(10) WHERE materialize(16));
