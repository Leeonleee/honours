{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 9500,
  "instance_id": "ClickHouse__ClickHouse-9500",
  "issue_numbers": [
    "9492",
    "9491"
  ],
  "base_commit": "a34852676ac05b0606fa21e787d6290a9f206f4e",
  "patch": "diff --git a/contrib/base64 b/contrib/base64\nindex 5257626d2be1..95ba56a9b041 160000\n--- a/contrib/base64\n+++ b/contrib/base64\n@@ -1,1 +1,1 @@\n-Subproject commit 5257626d2be17a3eb23f79be17fe55ebba394ad2\n+Subproject commit 95ba56a9b041f9933f5cd2bbb2ee4e083468c20a\n",
  "test_patch": "diff --git a/dbms/tests/queries/0_stateless/01092_base64.reference b/dbms/tests/queries/0_stateless/01092_base64.reference\nnew file mode 100644\nindex 000000000000..4c41ac319467\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/01092_base64.reference\n@@ -0,0 +1,1 @@\n+TEcgT3B0aW11cw==\ndiff --git a/dbms/tests/queries/0_stateless/01092_base64.sql b/dbms/tests/queries/0_stateless/01092_base64.sql\nnew file mode 100644\nindex 000000000000..476edfe31d75\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/01092_base64.sql\n@@ -0,0 +1,2 @@\n+-- This query reproduces a bug in TurboBase64 library.\n+select distinct base64Encode(materialize('LG Optimus')) from numbers(100);\n",
  "problem_statement": "Revert base64\nChangelog category (leave one):\r\n- Bug Fix\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nChanged base64 library back from TurboBase64 to  aklomp/base64. Reverts #8444 This fixes #9491\r\n\nbase64encode() gives undefined result\n```\r\n:) select distinct base64Encode(materialize('LG Optimus')) from numbers(100)\r\n\r\n\u250c\u2500base64Encode(materialize('LG Optimus'))\u2500\u2510\r\n\u2502 TEcgT3B0aW11cwBM                        \u2502\r\n\u2502 TEcgT3B0aW11cwAA                        \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\nReproduces when encoded length is a multiple of 16.\n",
  "hints_text": "@powturbo We will be happy to change it back whenever the fix is ready!\nIt's about padding. The correct result is `TEcgT3B0aW11cw==`\r\nProbably the library forget to fill it with `=`. It should be easily reproducible under MSan.",
  "created_at": "2020-03-03T22:55:38Z",
  "modified_files": [
    "contrib/base64"
  ],
  "modified_test_files": [
    "b/dbms/tests/queries/0_stateless/01092_base64.reference",
    "b/dbms/tests/queries/0_stateless/01092_base64.sql"
  ]
}