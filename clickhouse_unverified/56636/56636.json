{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 56636,
  "instance_id": "ClickHouse__ClickHouse-56636",
  "issue_numbers": [
    "56107"
  ],
  "base_commit": "213c7cffb5eae1951f67b8531ec69262696c7e3d",
  "patch": "diff --git a/src/Columns/ColumnDecimal.cpp b/src/Columns/ColumnDecimal.cpp\nindex 012ae03bab20..baccfc691477 100644\n--- a/src/Columns/ColumnDecimal.cpp\n+++ b/src/Columns/ColumnDecimal.cpp\n@@ -6,9 +6,7 @@\n #include <Common/HashTable/Hash.h>\n #include <Common/RadixSort.h>\n \n-#include <base/unaligned.h>\n #include <base/sort.h>\n-#include <base/scope_guard.h>\n \n #include <IO/WriteHelpers.h>\n \n@@ -20,8 +18,6 @@\n #include <Processors/Transforms/ColumnGathererTransform.h>\n \n \n-template <typename T> bool decimalLess(T x, T y, UInt32 x_scale, UInt32 y_scale);\n-\n namespace DB\n {\n \ndiff --git a/utils/prepare-time-trace/prepare-time-trace.sh b/utils/prepare-time-trace/prepare-time-trace.sh\nindex 7cacdec8c94b..7e585db20009 100755\n--- a/utils/prepare-time-trace/prepare-time-trace.sh\n+++ b/utils/prepare-time-trace/prepare-time-trace.sh\n@@ -11,12 +11,19 @@\n <<///\n CREATE TABLE build_time_trace\n (\n-    -- extra columns here\n+    -- Extra columns:\n+    pull_request_number UInt32,\n+    commit_sha String,\n+    check_start_time DateTime,\n+    check_name LowCardinality(String),\n+    instance_type LowCardinality(String),\n+    instance_id String,\n+\n+    -- Normal columns:\n     file String,\n     library LowCardinality(String),\n     date Date DEFAULT toDate(time),\n     time DateTime64(6),\n-\n     pid UInt32,\n     tid UInt32,\n     ph Enum8('B', 'E', 'X', 'i', 'I', 'C', 'b', 'n', 'e', 'S', 'T', 'p', 'F', 's', 't', 'f', 'P', 'N', 'O', 'D', 'M'),\n@@ -30,7 +37,8 @@ CREATE TABLE build_time_trace\n     args_name LowCardinality(String),\n     is_total Bool DEFAULT name LIKE 'Total %'\n )\n-ENGINE = MergeTree ORDER BY (date, file, name, args_name);\n+ENGINE = MergeTree\n+ORDER BY (date, file, name, args_name);\n ///\n \n INPUT_DIR=$1\n@@ -48,3 +56,29 @@ find \"$INPUT_DIR\" -name '*.json' | grep -P '\\.(c|cpp|cc|cxx)\\.json$' | xargs -P\n # Now you can upload it as follows:\n \n #cat \"$OUTPUT_DIR\"/* | clickhouse-client --progress --query \"INSERT INTO build_time_trace (extra_column_names, file, library, time, pid, tid, ph, ts, dur, cat, name, detail, count, avgMs, args_name) FORMAT JSONCompactEachRow\"\n+\n+# Additionally, collect information about the sizes of translation units\n+\n+<<///\n+CREATE TABLE binary_sizes\n+(\n+    -- Extra columns:\n+    pull_request_number UInt32,\n+    commit_sha String,\n+    check_start_time DateTime,\n+    check_name LowCardinality(String),\n+    instance_type LowCardinality(String),\n+    instance_id String,\n+\n+    -- Normal columns:\n+    file LowCardinality(String),\n+    library LowCardinality(String) DEFAULT extract(file, 'CMakeFiles/([^/]+)\\.dir/'),\n+    size UInt64,\n+    date Date DEFAULT toDate(time),\n+    time DateTime64(6) DEFAULT now64()\n+)\n+ENGINE = MergeTree\n+ORDER BY (date, file, pull_request_number, commit_sha, check_name);\n+///\n+\n+find \"$INPUT_DIR\" -type f -executable -or -name '*.o' -or -name '*.a' | grep -v cargo | xargs wc -c | grep -v 'total' > \"${OUTPUT_DIR}/binary_sizes.txt\"\n",
  "test_patch": "diff --git a/tests/ci/build_check.py b/tests/ci/build_check.py\nindex c18abcf11917..3a20ca846a19 100644\n--- a/tests/ci/build_check.py\n+++ b/tests/ci/build_check.py\n@@ -433,9 +433,10 @@ def main():\n         )\n         profile_data_file = temp_path / \"profile.json\"\n         with open(profile_data_file, \"wb\") as profile_fd:\n-            for profile_sourse in profiles_dir.iterdir():\n-                with open(profiles_dir / profile_sourse, \"rb\") as ps_fd:\n-                    profile_fd.write(ps_fd.read())\n+            for profile_source in profiles_dir.iterdir():\n+                if profile_source.name != \"binary_sizes.txt\":\n+                    with open(profiles_dir / profile_source, \"rb\") as ps_fd:\n+                        profile_fd.write(ps_fd.read())\n \n         logging.info(\n             \"::notice ::Log Uploading profile data, path: %s, size: %s, query: %s\",\n@@ -445,6 +446,32 @@ def main():\n         )\n         ch_helper.insert_file(url, auth, query, profile_data_file)\n \n+        query = f\"\"\"INSERT INTO binary_sizes\n+(\n+    pull_request_number,\n+    commit_sha,\n+    check_start_time,\n+    check_name,\n+    instance_type,\n+    instance_id,\n+    file,\n+    size\n+)\n+SELECT {pr_info.number}, '{pr_info.sha}', '{stopwatch.start_time_str}', '{build_name}', '{instance_type}', '{instance_id}', file, size\n+FROM input('size UInt64, file String')\n+SETTINGS format_regexp = '^\\\\s*(\\\\d+) (.+)$'\n+FORMAT Regexp\"\"\"\n+\n+        binary_sizes_file = profiles_dir / \"binary_sizes.txt\"\n+\n+        logging.info(\n+            \"::notice ::Log Uploading binary sizes data, path: %s, size: %s, query: %s\",\n+            binary_sizes_file,\n+            binary_sizes_file.stat().st_size,\n+            query,\n+        )\n+        ch_helper.insert_file(url, auth, query, binary_sizes_file)\n+\n     # Upload statistics to CI database\n     prepared_events = prepare_tests_results_for_clickhouse(\n         pr_info,\n",
  "problem_statement": "Send information about compiled sizes of translation units and all files to the CI database\nDepends on #53610.\n",
  "hints_text": "",
  "created_at": "2023-11-12T03:04:24Z"
}