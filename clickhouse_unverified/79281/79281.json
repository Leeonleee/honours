{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 79281,
  "instance_id": "ClickHouse__ClickHouse-79281",
  "issue_numbers": [
    "75180"
  ],
  "base_commit": "4e201dc5363bef3fc671729a5e1cf4c1591c7301",
  "patch": "diff --git a/src/Storages/MergeTree/AlterConversions.cpp b/src/Storages/MergeTree/AlterConversions.cpp\nindex 28d75e7d0514..f5c8680e7f52 100644\n--- a/src/Storages/MergeTree/AlterConversions.cpp\n+++ b/src/Storages/MergeTree/AlterConversions.cpp\n@@ -1,11 +1,13 @@\n #include <Storages/MergeTree/AlterConversions.h>\n #include <Storages/MergeTree/LoadedMergeTreeDataPartInfoForReader.h>\n #include <Storages/MergeTree/MergeTreeRangeReader.h>\n+#include <Storages/MergeTree/MergeTreeVirtualColumns.h>\n #include <Storages/MutationCommands.h>\n #include <Interpreters/MutationsInterpreter.h>\n #include <Interpreters/MutationsNonDeterministicHelpers.h>\n #include <Parsers/ASTAlterQuery.h>\n #include <Parsers/ASTAssignment.h>\n+#include <Parsers/ASTLiteral.h>\n #include <Common/ProfileEvents.h>\n #include <ranges>\n \n@@ -64,6 +66,41 @@ static MutationCommand createCommandWithUpdatedColumns(\n     return res;\n }\n \n+static bool isLightweightDeleteCommand(const String & column_name, const ASTPtr & ast)\n+{\n+    if (column_name != RowExistsColumn::name)\n+        return false;\n+\n+    const auto * literal = ast->as<ASTLiteral>();\n+    if (!literal)\n+        return false;\n+\n+    if (literal->value.getType() != Field::Types::UInt64)\n+        return false;\n+\n+    return literal->value.safeGet<UInt64>() == 0;\n+}\n+\n+static MutationCommand createLightweightDeleteCommand(const MutationCommand & command)\n+{\n+    chassert(command.type == MutationCommand::Type::UPDATE);\n+    chassert(command.predicate != nullptr);\n+\n+    auto alter_command = std::make_shared<ASTAlterCommand>();\n+    alter_command->type = ASTAlterCommand::DELETE;\n+\n+    if (command.partition)\n+        alter_command->partition = alter_command->children.emplace_back(command.partition->clone()).get();\n+\n+    alter_command->predicate = alter_command->children.emplace_back(command.predicate->clone()).get();\n+    auto mutation_command = MutationCommand::parse(alter_command.get());\n+\n+    if (!mutation_command)\n+        throw Exception(ErrorCodes::LOGICAL_ERROR, \"Failed to parse command {}\", alter_command->formatForErrorMessage());\n+\n+    return *mutation_command;\n+}\n+\n AlterConversions::AlterConversions(\n     const MutationCommands & mutation_commands_,\n     const ContextPtr & context)\n@@ -308,16 +345,29 @@ MutationCommands AlterConversions::filterMutationCommands(Names & read_columns,\n         }\n         else if (command.type == MutationCommand::Type::UPDATE)\n         {\n+            bool has_lightweight_delete = false;\n             std::unordered_map<String, ASTPtr> new_updated_columns;\n+\n             for (const auto & [column, ast] : command.column_to_update_expression)\n             {\n-                if (read_columns_set.contains(column))\n+                if (isLightweightDeleteCommand(column, ast))\n+                {\n+                    has_lightweight_delete = true;\n+                }\n+                else if (read_columns_set.contains(column))\n                 {\n                     ast->collectIdentifierNames(source_columns);\n                     new_updated_columns.emplace(column, ast->clone());\n                 }\n             }\n \n+            if (has_lightweight_delete)\n+            {\n+                auto new_command = createLightweightDeleteCommand(command);\n+                new_command.predicate->collectIdentifierNames(source_columns);\n+                filtered_commands.push_back(std::move(new_command));\n+            }\n+\n             if (!new_updated_columns.empty())\n             {\n                 auto new_command = createCommandWithUpdatedColumns(command, std::move(new_updated_columns));\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03442_lightweight_deletes_on_fly.reference b/tests/queries/0_stateless/03442_lightweight_deletes_on_fly.reference\nnew file mode 100644\nindex 000000000000..f610f9980282\n--- /dev/null\n+++ b/tests/queries/0_stateless/03442_lightweight_deletes_on_fly.reference\n@@ -0,0 +1,2 @@\n+3\n+9850\ndiff --git a/tests/queries/0_stateless/03442_lightweight_deletes_on_fly.sql b/tests/queries/0_stateless/03442_lightweight_deletes_on_fly.sql\nnew file mode 100644\nindex 000000000000..5d34b6fcf089\n--- /dev/null\n+++ b/tests/queries/0_stateless/03442_lightweight_deletes_on_fly.sql\n@@ -0,0 +1,31 @@\n+DROP TABLE IF EXISTS test_deletes;\n+\n+CREATE TABLE test_deletes (a UInt64) ENGINE = MergeTree ORDER BY a;\n+\n+INSERT INTO test_deletes VALUES (1) (2) (3);\n+\n+SYSTEM STOP MERGES test_deletes;\n+SET mutations_sync = 0;\n+SET lightweight_deletes_sync = 0;\n+\n+ALTER TABLE test_deletes DELETE WHERE a = 1 SETTINGS mutations_sync = 0;\n+DELETE FROM test_deletes WHERE a = 2 SETTINGS lightweight_deletes_sync = 0;\n+\n+SELECT a FROM test_deletes SETTINGS apply_mutations_on_fly = 1;\n+\n+DROP TABLE test_deletes;\n+\n+CREATE TABLE test_deletes (a UInt64, b UInt64) ENGINE = MergeTree ORDER BY a;\n+\n+INSERT INTO test_deletes SELECT number, 0 FROM numbers(10000);\n+\n+DELETE FROM test_deletes WHERE a >= 100 AND a < 200 SETTINGS lightweight_deletes_sync = 1;\n+\n+SYSTEM STOP MERGES test_deletes;\n+\n+ALTER TABLE test_deletes UPDATE b = 1 WHERE a >= 150 AND a < 250 SETTINGS mutations_sync = 0;\n+DELETE FROM test_deletes WHERE b = 1 SETTINGS lightweight_deletes_sync = 0;\n+\n+SELECT count() FROM test_deletes SETTINGS apply_mutations_on_fly = 1;\n+\n+DROP TABLE test_deletes;\n",
  "problem_statement": "Support lightweight delete in on fly mutations\n### Company or project name\n\nClickHouse Inc.\n\n### Use case\n\nApply `DELETE FROM ... SETTINGS lightweight_deletes_sync = 0` queries on the fly with enabled setting `apply_mutations_on_fly`.\n\nNow it doesn't work:\n\n```sql\nDROP TABLE IF EXISTS test_deletes;\n\nCREATE TABLE test_deletes (a UInt64) ENGINE = MergeTree ORDER BY a;\n\nINSERT INTO test_deletes VALUES (1) (2) (3);\n\nSYSTEM STOP MERGES test_deletes;\nSET mutations_sync = 0;\nSET lightweight_deletes_sync = 0;\n\nALTER TABLE test_deletes DELETE WHERE a = 1;\nDELETE FROM test_deletes WHERE a = 2;\n\nSELECT a FROM test_deletes SETTINGS apply_mutations_on_fly = 1;\n\n   \u250c\u2500a\u2500\u2510\n1. \u2502 2 \u2502\n2. \u2502 3 \u2502   --- Expected only 3.\n   \u2514\u2500\u2500\u2500\u2518\n```\n\n",
  "hints_text": "",
  "created_at": "2025-04-16T18:22:37Z"
}