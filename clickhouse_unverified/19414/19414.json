{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 19414,
  "instance_id": "ClickHouse__ClickHouse-19414",
  "issue_numbers": [
    "15889"
  ],
  "base_commit": "8b9105bf39b08176dc56ffb3a86ef867579ad4dd",
  "patch": "diff --git a/src/Interpreters/GlobalSubqueriesVisitor.h b/src/Interpreters/GlobalSubqueriesVisitor.h\nindex e87ee6349f34..cde59d1e6c99 100644\n--- a/src/Interpreters/GlobalSubqueriesVisitor.h\n+++ b/src/Interpreters/GlobalSubqueriesVisitor.h\n@@ -17,6 +17,7 @@\n #include <Interpreters/InDepthNodeVisitor.h>\n #include <Interpreters/IdentifierSemantic.h>\n #include <Interpreters/Context.h>\n+#include <Processors/Executors/PullingPipelineExecutor.h>\n \n namespace DB\n {\n@@ -140,16 +141,15 @@ class GlobalSubqueriesMatcher\n             {\n                 auto external_table = external_storage_holder->getTable();\n                 auto table_out = external_table->write({}, external_table->getInMemoryMetadataPtr(), context);\n-                auto stream = interpreter->execute().getInputStream();\n+                auto io = interpreter->execute();\n+                PullingPipelineExecutor executor(io.pipeline);\n \n                 table_out->writePrefix();\n-                stream->readPrefix();\n-                while (Block block = stream->read())\n-                {\n+                Block block;\n+                while (executor.pull(block))\n                     table_out->write(block);\n-                }\n+\n                 table_out->writeSuffix();\n-                stream->readSuffix();\n             }\n             else\n             {\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00850_global_join_dups.reference b/tests/queries/0_stateless/00850_global_join_dups.reference\nindex dcaae3f745e1..d94e4df34259 100644\n--- a/tests/queries/0_stateless/00850_global_join_dups.reference\n+++ b/tests/queries/0_stateless/00850_global_join_dups.reference\n@@ -1,4 +1,5 @@\n 1\n+\\N\n 0\n 0\n 0\t0\ndiff --git a/tests/queries/0_stateless/00850_global_join_dups.sql b/tests/queries/0_stateless/00850_global_join_dups.sql\nindex 46ff7dad472f..92c1d81aa8ef 100644\n--- a/tests/queries/0_stateless/00850_global_join_dups.sql\n+++ b/tests/queries/0_stateless/00850_global_join_dups.sql\n@@ -19,6 +19,9 @@ GLOBAL INNER JOIN\n     USING dummy\n ) USING dummy;\n \n+-- query from fuzzer\n+SELECT toDateTime64(toString(toString('0000-00-00 00:00:000000-00-00 00:00:00', toDateTime64(toDateTime64('655.36', -2, NULL)))), NULL) FROM t1_00850 GLOBAL INNER JOIN (SELECT toDateTime64(toDateTime64('6553.6', '', NULL), NULL), * FROM (SELECT * FROM t2_00850) INNER JOIN (SELECT toDateTime64('6553.7', 1024, NULL), * FROM t1_00850) USING (dummy)) USING (dummy);\n+\n DROP TABLE t_local;\n DROP TABLE t1_00850;\n DROP TABLE t2_00850;\ndiff --git a/tests/queries/0_stateless/01651_bugs_from_15889.sql b/tests/queries/0_stateless/01651_bugs_from_15889.sql\nindex 7b69061eb041..34fcfc64114f 100644\n--- a/tests/queries/0_stateless/01651_bugs_from_15889.sql\n+++ b/tests/queries/0_stateless/01651_bugs_from_15889.sql\n@@ -107,6 +107,5 @@ WITH (\n     ) AS t)\n SELECT if(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)) = -9223372036854775808, 'ok', '');\n \n-\n-\n-\n+set joined_subquery_requires_alias=0;\n+SELECT number, number / 2 AS n, j1, j2 FROM remote('127.0.0.{2,3}', system.numbers) GLOBAL ANY LEFT JOIN (SELECT number / 3 AS n, number AS j1, 'Hello' AS j2 FROM system.numbers LIMIT 1048577) USING (n) LIMIT 10 format Null;\n",
  "problem_statement": "Block structure mismatch in PipelineExecuting stream\n```\r\n2020.10.12 13:15:05.239308 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> executeQuery: (from [::1]:46320) WITH ((SELECT query_start_time_microseconds FROM system.query_log ORDER BY query_start_time DESC LIMIT 1) AS time_with_microseconds, (SELECT inf, query_start_time FROM system.query_log ORDER BY query_start_time DESC LIMIT 1) AS t) SELECT if(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)) = -9223372036854775808, 'ok', '')\r\n2020.10.12 13:15:05.243710 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> ContextAccess (default): Access granted: SELECT(query_start_time, query_start_time_microseconds) ON system.query_log\r\n2020.10.12 13:15:05.245355 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Key condition: unknown\r\n2020.10.12 13:15:05.245454 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): MinMax index condition: unknown\r\n2020.10.12 13:15:05.245813 [ 235 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_1_60_9\r\n2020.10.12 13:15:05.245845 [ 229 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_63_63_0\r\n2020.10.12 13:15:05.245863 [ 226 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_61_61_0\r\n2020.10.12 13:15:05.245884 [ 234 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_64_64_0\r\n2020.10.12 13:15:05.245916 [ 228 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_62_62_0\r\n2020.10.12 13:15:05.246204 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Selected 5 parts by partition key, 5 parts by primary key, 12 marks by primary key, 12 marks to read from 5 ranges\r\n2020.10.12 13:15:05.248770 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Reading approx. 19739 rows with 5 streams\r\n2020.10.12 13:15:05.251524 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2020.10.12 13:15:05.260614 [ 227 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> MergingSortedTransform: Merge sorted 1 blocks, 1 rows in 0.004000037 sec., 249.99768752139045 rows/sec., 18.55 KiB/sec\r\n2020.10.12 13:15:05.261034 [ 227 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.003778689 sec. Execution time: 0.003262682 sec. Processing time: 0.000480476 sec. Wait time: 3.5531e-05 sec.\r\n2020.10.12 13:15:05.261079 [ 236 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.003783064 sec. Execution time: 0.000933743 sec. Processing time: 0.000229429 sec. Wait time: 0.002619892 sec.\r\n2020.10.12 13:15:05.261081 [ 225 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.003868763 sec. Execution time: 0.00091308 sec. Processing time: 0.000267219 sec. Wait time: 0.002688464 sec.\r\n2020.10.12 13:15:05.261081 [ 238 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.003764126 sec. Execution time: 0.000826601 sec. Processing time: 0.000233279 sec. Wait time: 0.002704246 sec.\r\n2020.10.12 13:15:05.261082 [ 230 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.003799183 sec. Execution time: 0.000983339 sec. Processing time: 0.000247121 sec. Wait time: 0.002568723 sec.\r\n2020.10.12 13:15:05.266979 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> ContextAccess (default): Access granted: SELECT(query_start_time) ON system.query_log\r\n2020.10.12 13:15:05.268713 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Key condition: unknown\r\n2020.10.12 13:15:05.268798 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): MinMax index condition: unknown\r\n2020.10.12 13:15:05.269171 [ 231 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_1_60_9\r\n2020.10.12 13:15:05.269174 [ 239 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_61_61_0\r\n2020.10.12 13:15:05.269197 [ 233 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_63_63_0\r\n2020.10.12 13:15:05.269229 [ 237 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_64_64_0\r\n2020.10.12 13:15:05.269241 [ 240 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Not using primary index on part 202010_62_62_0\r\n2020.10.12 13:15:05.269508 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Selected 5 parts by partition key, 5 parts by primary key, 12 marks by primary key, 12 marks to read from 5 ranges\r\n2020.10.12 13:15:05.271821 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> system.query_log (d975bd7e-9255-4c3a-9c9e-84a3ac6e62aa) (SelectExecutor): Reading approx. 19739 rows with 5 streams\r\n2020.10.12 13:15:05.274314 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2020.10.12 13:15:05.281264 [ 229 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Debug> MergingSortedTransform: Merge sorted 1 blocks, 1 rows in 0.004000038 sec., 249.9976250225623 rows/sec., 18.55 KiB/sec\r\n2020.10.12 13:15:05.281608 [ 229 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.002385765 sec. Execution time: 0.001881305 sec. Processing time: 0.00046749 sec. Wait time: 3.697e-05 sec.\r\n2020.10.12 13:15:05.281631 [ 235 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.002407127 sec. Execution time: 0.000738441 sec. Processing time: 0.000247655 sec. Wait time: 0.001421031 sec.\r\n2020.10.12 13:15:05.281710 [ 227 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.00241224 sec. Execution time: 0.000765352 sec. Processing time: 0.000233002 sec. Wait time: 0.001413886 sec.\r\n2020.10.12 13:15:05.281710 [ 226 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.002424628 sec. Execution time: 0.000724931 sec. Processing time: 0.000227065 sec. Wait time: 0.001472632 sec.\r\n2020.10.12 13:15:05.281711 [ 228 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Trace> PipelineExecutor: Thread finished. Total time: 0.002506015 sec. Execution time: 0.000779022 sec. Processing time: 0.000249285 sec. Wait time: 0.001477708 sec.\r\n2020.10.12 13:15:05.281775 [ 97 ] {d01a7689-5432-480c-8007-6a12895bf9ee} <Error> : Logical error: 'Block structure mismatch in PipelineExecuting stream: different columns:\r\ninf Float64 Float64(size = 1), query_start_time DateTime UInt32(size = 1)\r\ninf Float64 Const(size = 0, Float64(size = 1)), query_start_time DateTime UInt32(size = 0)'.\r\nclickhouse-server: ../src/Common/Exception.cpp:45: DB::Exception::Exception(const std::string &, int): Assertion `false' failed.\r\n2020.10.12 13:15:05.282203 [ 64 ] {} <Trace> BaseDaemon: Received signal 6\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.282647 [ 241 ] <Fatal> BaseDaemon: ########################################\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.283063 [ 241 ] <Fatal> BaseDaemon: (version 20.11.1.4898, build id: 04CB12865EE1D398) (from thread 97) (query_id: d01a7689-5432-480c-8007-6a12895bf9ee) Received signal Aborted (6)\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.283229 [ 241 ] <Fatal> BaseDaemon: \r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.283412 [ 241 ] <Fatal> BaseDaemon: Stack trace: 0x7f145def3f47 0x7f145def58b1 0x7f145dee542a 0x7f145dee54a2 0xfb3303c 0x17df0033 0x17ded659 0x17decdb5 0x17f650eb 0x18bf4646 0x18bf4011 0x18bb782b 0x18bb7906 0x18bb783d 0x18bf5584 0x18bf4042 0x18bb782b 0x18bb7906 0x18bb783d 0x18bb7906 0x18bb783d 0x18baff40 0x18bae6d0 0x18704084 0x1870276e 0x187015cc 0x18a048c1 0x18a0340d\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.283768 [ 241 ] <Fatal> BaseDaemon: 4. /build/glibc-2ORdQG/glibc-2.27/signal/../sysdeps/unix/sysv/linux/raise.c:51: gsignal @ 0x3ef47 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.284042 [ 241 ] <Fatal> BaseDaemon: 5. /build/glibc-2ORdQG/glibc-2.27/stdlib/abort.c:81: abort @ 0x408b1 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.284294 [ 241 ] <Fatal> BaseDaemon: 6. /build/glibc-2ORdQG/glibc-2.27/assert/assert.c:89: __assert_fail_base @ 0x3042a in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.284700 [ 241 ] <Fatal> BaseDaemon: 7. ? @ 0x304a2 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.285015 [ 241 ] <Fatal> BaseDaemon: 8. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:48: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xfb3303c in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.316964 [ 241 ] <Fatal> BaseDaemon: 9. /build/obj-x86_64-linux-gnu/../src/Core/Block.cpp:469: void DB::checkBlockStructure<void>(DB::Block const&, DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) const @ 0x17df0033 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.348594 [ 241 ] <Fatal> BaseDaemon: 10. /build/obj-x86_64-linux-gnu/../src/Core/Block.cpp:496: void DB::checkBlockStructure<void>(DB::Block const&, DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x17ded659 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.380109 [ 241 ] <Fatal> BaseDaemon: 11. /build/obj-x86_64-linux-gnu/../src/Core/Block.cpp:524: DB::assertBlocksHaveEqualStructure(DB::Block const&, DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x17decdb5 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.411921 [ 241 ] <Fatal> BaseDaemon: 12. /build/obj-x86_64-linux-gnu/../src/DataStreams/IBlockInputStream.cpp:90: DB::IBlockInputStream::read() @ 0x17f650eb in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.450022 [ 241 ] <Fatal> BaseDaemon: 13. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExecuteScalarSubqueriesVisitor.cpp:123: DB::ExecuteScalarSubqueriesMatcher::visit(DB::ASTSubquery const&, std::__1::shared_ptr<DB::IAST>&, DB::ExecuteScalarSubqueriesMatcher::Data&) @ 0x18bf4646 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.488681 [ 241 ] <Fatal> BaseDaemon: 14. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExecuteScalarSubqueriesVisitor.cpp:62: DB::ExecuteScalarSubqueriesMatcher::visit(std::__1::shared_ptr<DB::IAST>&, DB::ExecuteScalarSubqueriesMatcher::Data&) @ 0x18bf4011 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.527750 [ 241 ] <Fatal> BaseDaemon: 15. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:32: DB::InDepthNodeVisitor<DB::ExecuteScalarSubqueriesMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x18bb782b in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.566789 [ 241 ] <Fatal> BaseDaemon: 16. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:45: DB::InDepthNodeVisitor<DB::ExecuteScalarSubqueriesMatcher, true, std::__1::shared_ptr<DB::IAST> >::visitChildren(std::__1::shared_ptr<DB::IAST>&) @ 0x18bb7906 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.605881 [ 241 ] <Fatal> BaseDaemon: 17. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:35: DB::InDepthNodeVisitor<DB::ExecuteScalarSubqueriesMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x18bb783d in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.643867 [ 241 ] <Fatal> BaseDaemon: 18. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExecuteScalarSubqueriesVisitor.cpp:205: DB::ExecuteScalarSubqueriesMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST>&, DB::ExecuteScalarSubqueriesMatcher::Data&) @ 0x18bf5584 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.681551 [ 241 ] <Fatal> BaseDaemon: 19. /build/obj-x86_64-linux-gnu/../src/Interpreters/ExecuteScalarSubqueriesVisitor.cpp:64: DB::ExecuteScalarSubqueriesMatcher::visit(std::__1::shared_ptr<DB::IAST>&, DB::ExecuteScalarSubqueriesMatcher::Data&) @ 0x18bf4042 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.719981 [ 241 ] <Fatal> BaseDaemon: 20. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:32: DB::InDepthNodeVisitor<DB::ExecuteScalarSubqueriesMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x18bb782b in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.757929 [ 241 ] <Fatal> BaseDaemon: 21. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:45: DB::InDepthNodeVisitor<DB::ExecuteScalarSubqueriesMatcher, true, std::__1::shared_ptr<DB::IAST> >::visitChildren(std::__1::shared_ptr<DB::IAST>&) @ 0x18bb7906 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.796083 [ 241 ] <Fatal> BaseDaemon: 22. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:35: DB::InDepthNodeVisitor<DB::ExecuteScalarSubqueriesMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x18bb783d in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.834343 [ 241 ] <Fatal> BaseDaemon: 23. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:45: DB::InDepthNodeVisitor<DB::ExecuteScalarSubqueriesMatcher, true, std::__1::shared_ptr<DB::IAST> >::visitChildren(std::__1::shared_ptr<DB::IAST>&) @ 0x18bb7906 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.872787 [ 241 ] <Fatal> BaseDaemon: 24. /build/obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:35: DB::InDepthNodeVisitor<DB::ExecuteScalarSubqueriesMatcher, true, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x18bb783d in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.910316 [ 241 ] <Fatal> BaseDaemon: 25. /build/obj-x86_64-linux-gnu/../src/Interpreters/TreeRewriter.cpp:229: DB::(anonymous namespace)::executeScalarSubqueries(std::__1::shared_ptr<DB::IAST>&, DB::Context const&, unsigned long, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::Block, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::Block> > >&, bool) @ 0x18baff40 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.947266 [ 241 ] <Fatal> BaseDaemon: 26. /build/obj-x86_64-linux-gnu/../src/Interpreters/TreeRewriter.cpp:608: DB::TreeRewriter::analyzeSelect(std::__1::shared_ptr<DB::IAST>&, DB::TreeRewriterResult&&, DB::SelectQueryOptions const&, std::__1::vector<DB::TableWithColumnNamesAndTypes, std::__1::allocator<DB::TableWithColumnNamesAndTypes> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::TableJoin>) const @ 0x18bae6d0 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:05.983404 [ 241 ] <Fatal> BaseDaemon: 27. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:314: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const @ 0x18704084 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:06.019105 [ 241 ] <Fatal> BaseDaemon: 28. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:405: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0x1870276e in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:06.054345 [ 241 ] <Fatal> BaseDaemon: 29. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:146: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x187015cc in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:06.089993 [ 241 ] <Fatal> BaseDaemon: 30. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3028: std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x18a048c1 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.10.12 13:15:06.126074 [ 241 ] <Fatal> BaseDaemon: 31. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:84: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x18a0340d in /workspace/clickhouse\r\n```\r\n\n",
  "hints_text": "@KochetovNicolai This is still relevant and easy reproducible:\r\n\r\n```\r\nWITH (\r\n    (\r\n        SELECT query_start_time_microseconds\r\n        FROM system.query_log\r\n        ORDER BY query_start_time DESC\r\n        LIMIT 1\r\n    ) AS time_with_microseconds, \r\n    (\r\n        SELECT\r\n            inf,\r\n            query_start_time\r\n        FROM system.query_log\r\n        ORDER BY query_start_time DESC\r\n        LIMIT 1\r\n    ) AS t)\r\nSELECT if(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)) = -9223372036854775808, 'ok', '')\r\n```\nAnother test case: \r\n```sql\r\nWITH addressToSymbol(arrayJoin(trace)) AS symbol\r\nSELECT count() > 0\r\nFROM system.trace_log AS t\r\nWHERE greaterOrEquals(event_date, ignore(ignore(ignore(NULL, '')), 256), yesterday()) AND (trace_type = 'Memory') AND (query_id = \r\n(\r\n    SELECT\r\n        ignore(ignore(ignore(ignore(65536)), ignore(65537), ignore(2)), ''),\r\n        query_id\r\n    FROM system.query_log\r\n    WHERE (event_date >= yesterday()) AND (query LIKE '%test memory profiler%')\r\n    ORDER BY event_time DESC\r\n    LIMIT 1\r\n))\r\n```\n```\r\nWITH concat(addressToLine(arrayJoin(trace) AS addr), '#') AS symbol\r\nSELECT count() > 7\r\nFROM system.trace_log AS t\r\nWHERE (query_id = \r\n(\r\n    SELECT\r\n        [NULL, NULL, NULL, NULL, 0.00009999999747378752, NULL, NULL, NULL, NULL, NULL],\r\n        query_id\r\n    FROM system.query_log\r\n    WHERE (query LIKE '%test cpu time query profiler%') AND (query NOT LIKE '%system%')\r\n    ORDER BY event_time DESC\r\n    LIMIT 1\r\n)) AND (symbol LIKE '%Source%')\r\n```\r\n\r\nhttps://clickhouse-test-reports.s3.yandex.net/17871/59b59684851e6ff6452282a175b9d619d427defe/fuzzer/fuzzer.log\n@KochetovNicolai It is reproducing very easily:\r\n\r\n```\r\nCREATE TABLE xp (`A` Date, `B` Int64, `S` String) ENGINE = MergeTree PARTITION BY toYYYYMM(A) ORDER BY B;\r\nINSERT INTO xp SELECT '2020-01-01', number, '' FROM numbers(100000);\r\n\r\nCREATE TABLE xp_d AS xp ENGINE = Distributed(test_shard_localhost, currentDatabase(), xp);\r\n\r\nSELECT count(7 = (SELECT number FROM numbers(0) ORDER BY number ASC NULLS FIRST LIMIT 7)) FROM xp_d PREWHERE toYYYYMM(A) GLOBAL IN (SELECT NULL = (SELECT number FROM numbers(1) ORDER BY number DESC NULLS LAST LIMIT 1), toYYYYMM(min(A)) FROM xp_d) WHERE B > NULL;\r\n```\n`SELECT count() FROM xp_d WHERE A GLOBAL IN (SELECT NULL)`\n```\r\nSELECT count(7 = \r\n    (\r\n        SELECT number\r\n        FROM numbers(0)\r\n        ORDER BY number ASC NULLS FIRST\r\n        LIMIT 7\r\n    ))\r\nFROM xp_d\r\nPREWHERE toYYYYMM(A) GLOBAL IN \r\n(\r\n    SELECT\r\n        NULL = \r\n        (\r\n            SELECT number\r\n            FROM numbers(1)\r\n            ORDER BY number DESC NULLS LAST\r\n            LIMIT 1\r\n        ),\r\n        toYYYYMM(min(A))\r\n    FROM xp_d\r\n)\r\nWHERE B > NULL\r\n\r\nQuery id: 6b1812aa-ab6b-4a8c-9749-43cfbf97f6c3\r\n\r\n\r\nReceived exception from server (version 21.1.1):\r\nCode: 20. DB::Exception: Received from localhost:9000. DB::Exception: Number of columns in section IN doesn't match. 1 at left, 2 at right.. \r\n\r\n0 rows in set. Elapsed: 0.026 sec. \r\n\r\n```\r\n\r\n```\r\nSELECT count()\r\nFROM xp_d\r\nWHERE A GLOBAL IN \r\n(\r\n    SELECT NULL\r\n)\r\n\r\nQuery id: 1460ceb0-18bb-4bb5-831b-4b03e92711d7\r\n\r\n\r\nReceived exception from server (version 21.1.1):\r\nCode: 53. DB::Exception: Received from localhost:9000. DB::Exception: Types of column 1 in section IN don't match: Date on the left, Nullable(Nothing) on the right. \r\n```\r\n\r\nLGTM\n```\r\nWITH concat(addressToLine(arrayJoin(trace) AS addr), '#') AS symbol\r\nSELECT count() > 7\r\nFROM system.trace_log AS t\r\nWHERE (query_id = \r\n(\r\n    SELECT\r\n        [NULL, NULL, NULL, NULL, 0.00009999999747378752, NULL, NULL, NULL, NULL, NULL],\r\n        query_id\r\n    FROM system.query_log\r\n    WHERE (query LIKE '%test cpu time query profiler%') AND (query NOT LIKE '%system%')\r\n    ORDER BY event_time DESC\r\n    LIMIT 1\r\n)) AND (symbol LIKE '%Source%')\r\n\r\nQuery id: 4199f0e9-0f92-4d56-b3ba-597ad278c814\r\n\r\n\u250c\u2500greater(count(), 7)\u2500\u2510\r\n\u2502                   0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n```\r\n\r\nok\n```\r\nWITH addressToSymbol(arrayJoin(trace)) AS symbol\r\nSELECT count() > 0\r\nFROM system.trace_log AS t\r\nWHERE greaterOrEquals(event_date, ignore(ignore(ignore(NULL, ''))), yesterday()) AND (trace_type = 'Memory') AND (query_id = \r\n(\r\n    SELECT\r\n        ignore(ignore(ignore(ignore(65536)), ignore(65537), ignore(2)), ''),\r\n        query_id\r\n    FROM system.query_log\r\n    WHERE (event_date >= yesterday()) AND (query LIKE '%test memory profiler%')\r\n    ORDER BY event_time DESC\r\n    LIMIT 1\r\n))\r\n\r\nQuery id: 2f7feaf1-b724-41ea-b564-08302fabc4d3\r\n\r\n\r\nReceived exception from server (version 21.1.1):\r\nCode: 42. DB::Exception: Received from localhost:9000. DB::Exception: Number of arguments for function greaterOrEquals doesn't match: passed 3, should be 2: While processing greaterOrEquals(event_date, ignore(ignore(ignore(NULL, ''))), yesterday()). \r\n\r\n0 rows in set. Elapsed: 0.009 sec. \r\n```\r\n\r\nLGTM\n```\r\nWITH (\r\n    (\r\n        SELECT query_start_time_microseconds\r\n        FROM system.query_log\r\n        ORDER BY query_start_time DESC\r\n        LIMIT 1\r\n    ) AS time_with_microseconds, \r\n    (\r\n        SELECT\r\n            inf,\r\n            query_start_time\r\n        FROM system.query_log\r\n        ORDER BY query_start_time DESC\r\n        LIMIT 1\r\n    ) AS t)\r\nSELECT if(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)) = -9223372036854775808, 'ok', '')\r\n\r\nQuery id: cb57afcf-2488-4c64-a76b-b8d28705681f\r\n\r\n\r\nReceived exception from server (version 21.1.1):\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type Tuple(Float64, DateTime) of argument of function toDateTime: While processing if(dateDiff('second', toDateTime(cast('1610533227.263623', 'DateTime64(6)') AS time_with_microseconds), toDateTime(__getScalar('2373636349428592473_3231269544239334528') AS t)) = -9223372036854775808, 'ok', ''). \r\n\r\n0 rows in set. Elapsed: 0.030 sec. \r\n\r\n\r\nWITH (\r\n    (\r\n        SELECT query_start_time_microseconds\r\n        FROM system.query_log\r\n        ORDER BY query_start_time DESC\r\n        LIMIT 1\r\n    ) AS time_with_microseconds, \r\n    (\r\n        SELECT query_start_time\r\n        FROM system.query_log\r\n        ORDER BY query_start_time DESC\r\n        LIMIT 1\r\n    ) AS t)\r\nSELECT if(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)) = -9223372036854775808, 'ok', '')\r\n\r\nQuery id: 2e9a8c9f-f67e-4e4e-ab5f-9f070ef8abe4\r\n\r\n\u250c\u2500if(equals(dateDiff('second', toDateTime(time_with_microseconds), toDateTime(t)), -9223372036854775808), 'ok', '')\u2500\u2510\r\n\u2502                                                                                                                   \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\n```\r\n\r\nLGTM\nAll tests seem to be working on current master\nOk, some tests fails for debug build.\nRecent PR\r\n```\r\n2021.01.14 17:46:57.656157 [ 66 ] {a3ab16bf-a2ef-4bb9-9dba-d4e5f5d5163a} <Fatal> : Logical error: 'Block structure mismatch in PipelineExecuting stream: different columns:\r\nignore(-9223372036854775808, toDateTime(addDays(addDays(ignore(addDays(toDateTime(256), 1)), addDays(NULL, toDateTime(addDays(toDateTime(ignore(addDays(toDateTime(65535, 0), 1023)), 2), 255), NULL), 10), toDateTime(NULL), 65537), NULL, toDateTime(NULL), -2), 1023)) UInt8 Const(size = 1, UInt8(size = 1)), key Int32 Int32(size = 1)\r\nignore(-9223372036854775808, toDateTime(addDays(addDays(ignore(addDays(toDateTime(256), 1)), addDays(NULL, toDateTime(addDays(toDateTime(ignore(addDays(toDateTime(65535, 0), 1023)), 2), 255), NULL), 10), toDateTime(NULL), 65537), NULL, toDateTime(NULL), -2), 1023)) UInt8 UInt8(size = 0), key Int32 Int32(size = 0)'.\r\n```\r\nhttps://clickhouse-test-reports.s3.yandex.net/19064/ac426c3da641644144e76f730fdbb5d044d01e04/fuzzer/report.html#fail1\n@KochetovNicolai \r\nhttps://clickhouse-test-reports.s3.yandex.net/19346/5f3059555a039181cdb9b558fb073fc7998ad496/fuzzer_debug/report.html#fail1\r\n```\r\n2021.01.21 12:35:44.409077 [ 80 ] {f28a3642-27c7-4d51-be46-b0ea06062068} <Fatal> : Logical error: 'Block structure mismatch in PipelineExecuting stream: different columns:\r\ntoDateTime64(toDateTime64('6553.6', '', NULL), NULL) Nullable(Nothing) Const(size = 1, Nullable(size = 1, Nothing(size = 1), UInt8(size = 1))), dummy UInt8 UInt8(size = 1), toDateTime64('6553.7', 1024, NULL) Nullable(Nothing) Nullable(size = 1, Nothing(size = 1), UInt8(size = 1))\r\ntoDateTime64(toDateTime64('6553.6', '', NULL), NULL) Nullable(Nothing) Nullable(size = 0, Nothing(size = 0), UInt8(size = 0)), dummy UInt8 UInt8(size = 0), toDateTime64('6553.7', 1024, NULL) Nullable(Nothing) Nullable(size = 0, Nothing(size = 0), UInt8(size = 0))'.\r\n2021.01.21 12:35:44.409692 [ 76 ] {} <Trace> BaseDaemon: Received signal 6\r\n2021.01.21 12:35:44.410080 [ 150 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.01.21 12:35:44.410334 [ 150 ] {} <Fatal> BaseDaemon: (version 21.1.1.5747, build id: F731C0A3E8C12B86A39D28B56069E99F09B69293) (from thread 80) (query_id: f28a3642-27c7-4d51-be46-b0ea06062068) Received signal Aborted (6)\r\n2021.01.21 12:35:44.410503 [ 150 ] {} <Fatal> BaseDaemon: \r\n2021.01.21 12:35:44.410705 [ 150 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f76a41cb18b 0x7f76a41aa859 0x108a6546 0x108a65f1 0x19435503 0x19432b29 0x19432285 0x195dcb5b 0x1a039703 0x1a038a02 0x1a0387d2 0x1a02d61e 0x1a038746 0x1a02d606 0x1a038746 0x1a02d606 0x1a01e1b8 0x1a01e05b 0x19dac76d 0x19db5c75 0x19d99b21 0x19d97a78 0x19d9684c 0x1a4a0c89 0x19da3490 0x19d9bff7 0x19d9b5d6 0x1a07890a\r\n2021.01.21 12:35:44.411096 [ 150 ] {} <Fatal> BaseDaemon: 4. raise @ 0x4618b in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.01.21 12:35:44.411258 [ 150 ] {} <Fatal> BaseDaemon: 5. abort @ 0x25859 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.01.21 12:35:44.411685 [ 150 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:50: DB::handle_error_code(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x108a6546 in /workspace/clickhouse\r\n2021.01.21 12:35:44.412138 [ 150 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:56: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x108a65f1 in /workspace/clickhouse\r\n2021.01.21 12:35:44.444063 [ 150 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Core/Block.cpp:483: void DB::checkBlockStructure<void>(DB::Block const&, DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) const @ 0x19435503 in /workspace/clickhouse\r\n2021.01.21 12:35:44.476011 [ 150 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Core/Block.cpp:510: void DB::checkBlockStructure<void>(DB::Block const&, DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x19432b29 in /workspace/clickhouse\r\n2021.01.21 12:35:44.507322 [ 150 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Core/Block.cpp:538: DB::assertBlocksHaveEqualStructure(DB::Block const&, DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x19432285 in /workspace/clickhouse\r\n2021.01.21 12:35:44.539814 [ 150 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../src/DataStreams/IBlockInputStream.cpp:91: DB::IBlockInputStream::read() @ 0x195dcb5b in /workspace/clickhouse\r\n2021.01.21 12:35:44.579021 [ 150 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../src/Interpreters/GlobalSubqueriesVisitor.h:147: DB::GlobalSubqueriesMatcher::Data::addExternalStorage(std::__1::shared_ptr<DB::IAST>&, bool) @ 0x1a039703 in /workspace/clickhouse\r\n2021.01.21 12:35:44.618251 [ 150 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../src/Interpreters/GlobalSubqueriesVisitor.h:214: DB::GlobalSubqueriesMatcher::visit(DB::ASTTablesInSelectQueryElement&, std::__1::shared_ptr<DB::IAST>&, DB::GlobalSubqueriesMatcher::Data&) @ 0x1a038a02 in /workspace/clickhouse\r\n2021.01.21 12:35:44.641743 [ 88 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 14 entries to flush\r\n2021.01.21 12:35:44.644629 [ 88 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 2.34 TiB.\r\n2021.01.21 12:35:44.647539 [ 88 ] {} <Trace> system.trace_log (7bde316a-f160-4c30-a7cf-f7c936a7dc37): Renaming temporary part tmp_insert_202101_83_83_0 to 202101_83_83_0.\r\n2021.01.21 12:35:44.648141 [ 88 ] {} <Trace> SystemLog (system.trace_log): Flushed system log\r\n2021.01.21 12:35:44.657049 [ 150 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../src/Interpreters/GlobalSubqueriesVisitor.h:175: DB::GlobalSubqueriesMatcher::visit(std::__1::shared_ptr<DB::IAST>&, DB::GlobalSubqueriesMatcher::Data&) @ 0x1a0387d2 in /workspace/clickhouse\r\n2021.01.21 12:35:44.693713 [ 150 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:34: DB::InDepthNodeVisitor<DB::GlobalSubqueriesMatcher, false, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x1a02d61e in /workspace/clickhouse\r\n2021.01.21 12:35:44.733029 [ 150 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:53: DB::InDepthNodeVisitor<DB::GlobalSubqueriesMatcher, false, std::__1::shared_ptr<DB::IAST> >::visitChildren(std::__1::shared_ptr<DB::IAST>&) @ 0x1a038746 in /workspace/clickhouse\r\n2021.01.21 12:35:44.770159 [ 150 ] {} <Fatal> BaseDaemon: 17. ./obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:30: DB::InDepthNodeVisitor<DB::GlobalSubqueriesMatcher, false, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x1a02d606 in /workspace/clickhouse\r\n2021.01.21 12:35:44.808845 [ 150 ] {} <Fatal> BaseDaemon: 18. ./obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:53: DB::InDepthNodeVisitor<DB::GlobalSubqueriesMatcher, false, std::__1::shared_ptr<DB::IAST> >::visitChildren(std::__1::shared_ptr<DB::IAST>&) @ 0x1a038746 in /workspace/clickhouse\r\n2021.01.21 12:35:44.846080 [ 150 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:30: DB::InDepthNodeVisitor<DB::GlobalSubqueriesMatcher, false, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0x1a02d606 in /workspace/clickhouse\r\n2021.01.21 12:35:44.882378 [ 150 ] {} <Fatal> BaseDaemon: 20. ./obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:305: DB::ExpressionAnalyzer::initGlobalSubqueriesAndExternalTables(bool) @ 0x1a01e1b8 in /workspace/clickhouse\r\n2021.01.21 12:35:44.919812 [ 150 ] {} <Fatal> BaseDaemon: 21. ./obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:144: DB::ExpressionAnalyzer::ExpressionAnalyzer(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::TreeRewriterResult const> const&, DB::Context const&, unsigned long, bool, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::SubqueryForSet, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::SubqueryForSet> > >) @ 0x1a01e05b in /workspace/clickhouse\r\n2021.01.21 12:35:44.957267 [ 150 ] {} <Fatal> BaseDaemon: 22. ./obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.h:265: DB::SelectQueryExpressionAnalyzer::SelectQueryExpressionAnalyzer(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::TreeRewriterResult const> const&, DB::Context const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, bool, DB::SelectQueryOptions const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::SubqueryForSet, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::SubqueryForSet> > >) @ 0x19dac76d in /workspace/clickhouse\r\n2021.01.21 12:35:44.995868 [ 150 ] {} <Fatal> BaseDaemon: 23. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068: std::__1::__unique_if<DB::SelectQueryExpressionAnalyzer>::__unique_single std::__1::make_unique<DB::SelectQueryExpressionAnalyzer, std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::TreeRewriterResult const>&, DB::Context&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, bool, DB::SelectQueryOptions&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::SubqueryForSet, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::SubqueryForSet> > > >(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::TreeRewriterResult const>&, DB::Context&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&&, bool&&, DB::SelectQueryOptions&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::SubqueryForSet, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::SubqueryForSet> > >&&) @ 0x19db5c75 in /workspace/clickhouse\r\n2021.01.21 12:35:45.032322 [ 150 ] {} <Fatal> BaseDaemon: 24. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:399: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const @ 0x19d99b21 in /workspace/clickhouse\r\n2021.01.21 12:35:45.069146 [ 150 ] {} <Fatal> BaseDaemon: 25. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:460: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0x19d97a78 in /workspace/clickhouse\r\n2021.01.21 12:35:45.105060 [ 150 ] {} <Fatal> BaseDaemon: 26. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:154: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x19d9684c in /workspace/clickhouse\r\n2021.01.21 12:35:45.145165 [ 150 ] {} <Fatal> BaseDaemon: 27. ./obj-x86_64-linux-gnu/../src/Storages/StorageDistributed.cpp:519: DB::StorageDistributed::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0x1a4a0c89 in /workspace/clickhouse\r\n2021.01.21 12:35:45.181927 [ 150 ] {} <Fatal> BaseDaemon: 28. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1602: DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&, std::__1::shared_ptr<DB::PrewhereDAGInfo> const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x19da3490 in /workspace/clickhouse\r\n2021.01.21 12:35:45.218562 [ 150 ] {} <Fatal> BaseDaemon: 29. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:871: DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x19d9bff7 in /workspace/clickhouse\r\n2021.01.21 12:35:45.255356 [ 150 ] {} <Fatal> BaseDaemon: 30. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:520: DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x19d9b5d6 in /workspace/clickhouse\r\n2021.01.21 12:35:45.292358 [ 150 ] {} <Fatal> BaseDaemon: 31. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:356: DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x1a07890a in /workspace/clickhouse\r\n2021.01.21 12:35:46.238838 [ 150 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: 183FCDBAADB958E672B5E910143C1B3A. There is no information about the reference checksum.\r\n```\nhttps://clickhouse-test-reports.s3.yandex.net/19385/d9cb1c1bdddf5810aadf70cbe6e44f5b40689a8a/fuzzer_debug/report.html#fail1",
  "created_at": "2021-01-22T10:27:40Z"
}