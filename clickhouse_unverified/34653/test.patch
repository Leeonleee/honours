diff --git a/tests/integration/test_executable_user_defined_function/functions/test_function_config.xml b/tests/integration/test_executable_user_defined_function/functions/test_function_config.xml
index d8f81a588a29..b2b7db83fbcb 100644
--- a/tests/integration/test_executable_user_defined_function/functions/test_function_config.xml
+++ b/tests/integration/test_executable_user_defined_function/functions/test_function_config.xml
@@ -193,4 +193,100 @@
         <execute_direct>0</execute_direct>
     </function>
 
+    <function>
+        <type>executable</type>
+        <name>test_function_sum_json_unnamed_args_python</name>
+        <return_type>UInt64</return_type>
+        <return_name>result_name</return_name>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <format>JSONEachRow</format>
+        <command>input_sum_json_unnamed_args.py</command>
+    </function>
+
+    <function>
+        <type>executable_pool</type>
+        <name>test_function_sum_json_unnamed_args_pool_python</name>
+        <return_type>UInt64</return_type>
+        <return_name>result_name</return_name>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <format>JSONEachRow</format>
+        <command>input_sum_json_unnamed_args.py</command>
+    </function>
+
+    <function>
+        <type>executable</type>
+        <name>test_function_sum_json_partially_named_args_python</name>
+        <return_type>UInt64</return_type>
+        <return_name>result_name</return_name>
+        <argument>
+            <type>UInt64</type>
+            <name>argument_1</name>
+        </argument>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <format>JSONEachRow</format>
+        <command>input_sum_json_partially_named_args.py</command>
+    </function>
+
+    <function>
+        <type>executable_pool</type>
+        <name>test_function_sum_json_partially_named_args_pool_python</name>
+        <return_type>UInt64</return_type>
+        <return_name>result_name</return_name>
+        <argument>
+            <type>UInt64</type>
+            <name>argument_1</name>
+        </argument>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <format>JSONEachRow</format>
+        <command>input_sum_json_partially_named_args.py</command>
+    </function>
+
+    <function>
+        <type>executable</type>
+        <name>test_function_sum_json_named_args_python</name>
+        <return_type>UInt64</return_type>
+        <return_name>result_name</return_name>
+        <argument>
+            <type>UInt64</type>
+            <name>argument_1</name>
+        </argument>
+        <argument>
+            <type>UInt64</type>
+            <name>argument_2</name>
+        </argument>
+        <format>JSONEachRow</format>
+        <command>input_sum_json_named_args.py</command>
+    </function>
+
+    <function>
+        <type>executable_pool</type>
+        <name>test_function_sum_json_named_args_pool_python</name>
+        <return_type>UInt64</return_type>
+        <return_name>result_name</return_name>
+        <argument>
+            <type>UInt64</type>
+            <name>argument_1</name>
+        </argument>
+        <argument>
+            <type>UInt64</type>
+            <name>argument_2</name>
+        </argument>
+        <format>JSONEachRow</format>
+        <command>input_sum_json_named_args.py</command>
+    </function>
+
 </functions>
diff --git a/tests/integration/test_executable_user_defined_function/test.py b/tests/integration/test_executable_user_defined_function/test.py
index 94afdf8d8a9d..e6542d79e4bb 100644
--- a/tests/integration/test_executable_user_defined_function/test.py
+++ b/tests/integration/test_executable_user_defined_function/test.py
@@ -104,3 +104,30 @@ def test_executable_function_non_direct_bash(started_cluster):
 
     assert node.query("SELECT test_function_non_direct_pool_bash(toUInt64(1))") == 'Key 1
'
     assert node.query("SELECT test_function_non_direct_pool_bash(1)") == 'Key 1
'
+
+def test_executable_function_sum_json_python(started_cluster):
+    skip_test_msan(node)
+
+    node.query("CREATE TABLE test_table (lhs UInt64, rhs UInt64) ENGINE=TinyLog;")
+    node.query("INSERT INTO test_table VALUES (0, 0), (1, 1), (2, 2);")
+
+    assert node.query("SELECT test_function_sum_json_unnamed_args_python(1, 2);") == '3
'
+    assert node.query("SELECT test_function_sum_json_unnamed_args_python(lhs, rhs) FROM test_table;") == '0
2
4
'
+
+    assert node.query("SELECT test_function_sum_json_partially_named_args_python(1, 2);") == '3
'
+    assert node.query("SELECT test_function_sum_json_partially_named_args_python(lhs, rhs) FROM test_table;") == '0
2
4
'
+
+    assert node.query("SELECT test_function_sum_json_named_args_python(1, 2);") == '3
'
+    assert node.query("SELECT test_function_sum_json_named_args_python(lhs, rhs) FROM test_table;") == '0
2
4
'
+
+    assert node.query("SELECT test_function_sum_json_unnamed_args_pool_python(1, 2);") == '3
'
+    assert node.query("SELECT test_function_sum_json_unnamed_args_pool_python(lhs, rhs) FROM test_table;") == '0
2
4
'
+
+    assert node.query("SELECT test_function_sum_json_partially_named_args_python(1, 2);") == '3
'
+    assert node.query("SELECT test_function_sum_json_partially_named_args_python(lhs, rhs) FROM test_table;") == '0
2
4
'
+
+    assert node.query("SELECT test_function_sum_json_named_args_pool_python(1, 2);") == '3
'
+    assert node.query("SELECT test_function_sum_json_named_args_pool_python(lhs, rhs) FROM test_table;") == '0
2
4
'
+
+    node.query("DROP TABLE test_table;")
+
diff --git a/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_named_args.py b/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_named_args.py
new file mode 100755
index 000000000000..6154abf665aa
--- /dev/null
+++ b/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_named_args.py
@@ -0,0 +1,13 @@
+#!/usr/bin/python3
+
+import sys
+import json
+
+if __name__ == '__main__':
+    for line in sys.stdin:
+        value = json.loads(line)
+        first_arg = int(value['argument_1'])
+        second_arg = int(value['argument_2'])
+        result = {'result_name': first_arg + second_arg}
+        print(json.dumps(result), end='
')
+        sys.stdout.flush()
diff --git a/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_partially_named_args.py b/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_partially_named_args.py
new file mode 100755
index 000000000000..1408418eb4a3
--- /dev/null
+++ b/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_partially_named_args.py
@@ -0,0 +1,13 @@
+#!/usr/bin/python3
+
+import sys
+import json
+
+if __name__ == '__main__':
+    for line in sys.stdin:
+        value = json.loads(line)
+        first_arg = int(value['argument_1'])
+        second_arg = int(value['c2'])
+        result = {'result_name': first_arg + second_arg}
+        print(json.dumps(result), end='
')
+        sys.stdout.flush()
diff --git a/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_unnamed_args.py b/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_unnamed_args.py
new file mode 100755
index 000000000000..7e0c68510c81
--- /dev/null
+++ b/tests/integration/test_executable_user_defined_function/user_scripts/input_sum_json_unnamed_args.py
@@ -0,0 +1,13 @@
+#!/usr/bin/python3
+
+import sys
+import json
+
+if __name__ == '__main__':
+    for line in sys.stdin:
+        value = json.loads(line)
+        first_arg = int(value['c1'])
+        second_arg = int(value['c2'])
+        result = {'result_name': first_arg + second_arg}
+        print(json.dumps(result), end='
')
+        sys.stdout.flush()
