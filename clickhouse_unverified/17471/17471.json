{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 17471,
  "instance_id": "ClickHouse__ClickHouse-17471",
  "issue_numbers": [
    "17392"
  ],
  "base_commit": "19bdb34b19e2b297c2ff0797d7fce82f406382ab",
  "patch": "diff --git a/src/Interpreters/RedundantFunctionsInOrderByVisitor.h b/src/Interpreters/RedundantFunctionsInOrderByVisitor.h\nindex 6e943c83c652..d737e877f01c 100644\n--- a/src/Interpreters/RedundantFunctionsInOrderByVisitor.h\n+++ b/src/Interpreters/RedundantFunctionsInOrderByVisitor.h\n@@ -5,6 +5,7 @@\n #include <Parsers/ASTIdentifier.h>\n #include <Parsers/ASTOrderByElement.h>\n #include <Parsers/ASTSelectQuery.h>\n+#include <Parsers/ASTExpressionList.h>\n \n namespace DB\n {\n@@ -75,7 +76,8 @@ class RedundantFunctionsInOrderByMatcher\n \n     static bool needChildVisit(const ASTPtr & node, const ASTPtr &)\n     {\n-        return node->as<ASTFunction>();\n+        /// Visit functions and their arguments, that are stored in ASTExpressionList.\n+        return node->as<ASTFunction>() || node->as<ASTExpressionList>();\n     }\n };\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01323_redundant_functions_in_order_by.reference b/tests/queries/0_stateless/01323_redundant_functions_in_order_by.reference\nindex fd52438e9b0a..c8421b9869ec 100644\n--- a/tests/queries/0_stateless/01323_redundant_functions_in_order_by.reference\n+++ b/tests/queries/0_stateless/01323_redundant_functions_in_order_by.reference\n@@ -63,7 +63,9 @@ SELECT\n     key,\n     a\n FROM test\n-ORDER BY key ASC\n+ORDER BY\n+    key ASC,\n+    exp(key + a) ASC\n [0,1,2]\n [0,1,2]\n [0,1,2]\ndiff --git a/tests/queries/0_stateless/01593_functions_in_order_by.reference b/tests/queries/0_stateless/01593_functions_in_order_by.reference\nnew file mode 100644\nindex 000000000000..534b29af3e68\n--- /dev/null\n+++ b/tests/queries/0_stateless/01593_functions_in_order_by.reference\n@@ -0,0 +1,14 @@\n+SELECT\n+    msg,\n+    toDateTime(intDiv(ms, 1000)) AS time\n+FROM \n+(\n+    SELECT\n+        \\'hello\\' AS msg,\n+        toUInt64(t) * 1000 AS ms\n+    FROM generateRandom(\\'t DateTime\\')\n+    LIMIT 10\n+)\n+ORDER BY\n+    msg ASC,\n+    time ASC\ndiff --git a/tests/queries/0_stateless/01593_functions_in_order_by.sql b/tests/queries/0_stateless/01593_functions_in_order_by.sql\nnew file mode 100644\nindex 000000000000..2d38e45fff74\n--- /dev/null\n+++ b/tests/queries/0_stateless/01593_functions_in_order_by.sql\n@@ -0,0 +1,11 @@\n+EXPLAIN SYNTAX\n+SELECT msg, toDateTime(intDiv(ms, 1000)) AS time\n+FROM \n+(\n+    SELECT\n+        'hello' AS msg,\n+        toUInt64(t) * 1000 AS ms\n+    FROM generateRandom('t DateTime')\n+    LIMIT 10\n+)\n+ORDER BY msg, time;\n",
  "problem_statement": "optimize_redundant_functions_in_order_by issue \n```\r\nSELECT msg, toDateTime(intDiv(ms, 1000)) AS time\r\nFROM (\r\n    SELECT 'hello' as msg, toUInt64(t)*1000 as ms FROM generateRandom('t DateTime') LIMIT 10\r\n)\r\nORDER BY msg, time\r\n```\r\n\r\n```\r\n/* optimize_redundant_functions_in_order_by=1 -- (default) */\r\n\r\nSELECT msg, toDateTime(intDiv(ms, 1000)) AS time\r\nFROM (\r\n    SELECT 'hello' as msg, toUInt64(t)*1000 as ms FROM generateRandom('t DateTime') LIMIT 10\r\n)\r\nORDER BY msg, time\r\n\r\nQuery id: 85b48419-d2eb-40e1-9606-088a1136ad6c\r\n\r\n\u250c\u2500msg\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500time\u2500\u2510\r\n\u2502 hello \u2502 2048-05-08 14:54:21 \u2502\r\n\u2502 hello \u2502 2003-01-25 22:23:27 \u2502\r\n\u2502 hello \u2502 2049-03-11 15:29:16 \u2502\r\n\u2502 hello \u2502 2002-04-14 08:17:00 \u2502\r\n\u2502 hello \u2502 1990-04-22 03:55:27 \u2502\r\n\u2502 hello \u2502 2034-04-14 21:30:22 \u2502\r\n\u2502 hello \u2502 2011-11-03 04:36:37 \u2502\r\n\u2502 hello \u2502 1988-12-06 02:15:03 \u2502\r\n\u2502 hello \u2502 2017-01-17 14:44:14 \u2502\r\n\u2502 hello \u2502 2094-05-25 13:22:16 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n10 rows in set. Elapsed: 0.002 sec. \r\n\r\n\r\nexplain syntax SELECT msg, toDateTime(intDiv(ms, 1000)) AS time\r\n FROM (\r\n     SELECT 'hello' as msg, toUInt64(t)*1000 as ms FROM generateRandom('t DateTime') LIMIT 10\r\n )\r\n ORDER BY msg, time\r\n\r\n\u250c\u2500explain\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 SELECT                                   \u2502\r\n\u2502     msg,                                 \u2502\r\n\u2502     toDateTime(intDiv(ms, 1000)) AS time \u2502\r\n\u2502 FROM                                     \u2502\r\n\u2502 (                                        \u2502\r\n\u2502     SELECT                               \u2502\r\n\u2502         'hello' AS msg,                  \u2502\r\n\u2502         toUInt64(t) * 1000 AS ms         \u2502\r\n\u2502     FROM generateRandom('t DateTime')    \u2502\r\n\u2502     LIMIT 10                             \u2502\r\n\u2502 )                                        \u2502\r\n\u2502 ORDER BY msg ASC                         \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nDisabling the optimizer resolves the issue. \n",
  "hints_text": "",
  "created_at": "2020-11-27T11:30:19Z"
}