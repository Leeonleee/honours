{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12043,
  "instance_id": "ClickHouse__ClickHouse-12043",
  "issue_numbers": [
    "3740"
  ],
  "base_commit": "c1d2d2d7f759536cdac991077110ea40023030c2",
  "patch": "diff --git a/src/AggregateFunctions/AggregateFunctionTopK.cpp b/src/AggregateFunctions/AggregateFunctionTopK.cpp\nindex 7f2da260c2df..344ab340d62b 100644\n--- a/src/AggregateFunctions/AggregateFunctionTopK.cpp\n+++ b/src/AggregateFunctions/AggregateFunctionTopK.cpp\n@@ -100,7 +100,8 @@ AggregateFunctionPtr createAggregateFunctionTopK(const std::string & name, const\n         threshold = k;\n     }\n \n-    AggregateFunctionPtr res(createWithNumericType<AggregateFunctionTopK, is_weighted>(*argument_types[0], threshold, load_factor, argument_types, params));\n+    AggregateFunctionPtr res(createWithNumericType<AggregateFunctionTopK, is_weighted>(\n+        *argument_types[0], threshold, load_factor, argument_types, params));\n \n     if (!res)\n         res = AggregateFunctionPtr(createWithExtraTypes<is_weighted>(argument_types[0], threshold, load_factor, params));\ndiff --git a/src/AggregateFunctions/AggregateFunctionTopK.h b/src/AggregateFunctions/AggregateFunctionTopK.h\nindex 68317d0bdf0f..f77fc482685a 100644\n--- a/src/AggregateFunctions/AggregateFunctionTopK.h\n+++ b/src/AggregateFunctions/AggregateFunctionTopK.h\n@@ -47,7 +47,7 @@ class AggregateFunctionTopK\n \n     DataTypePtr getReturnType() const override\n     {\n-        return std::make_shared<DataTypeArray>(std::make_shared<DataTypeNumber<T>>());\n+        return std::make_shared<DataTypeArray>(this->argument_types[0]);\n     }\n \n     void add(AggregateDataPtr place, const IColumn ** columns, size_t row_num, Arena *) const override\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01353_topk_enum.reference b/tests/queries/0_stateless/01353_topk_enum.reference\nnew file mode 100644\nindex 000000000000..d650850c4342\n--- /dev/null\n+++ b/tests/queries/0_stateless/01353_topk_enum.reference\n@@ -0,0 +1,1 @@\n+['test','world','hello','']\ndiff --git a/tests/queries/0_stateless/01353_topk_enum.sql b/tests/queries/0_stateless/01353_topk_enum.sql\nnew file mode 100644\nindex 000000000000..ba048401b237\n--- /dev/null\n+++ b/tests/queries/0_stateless/01353_topk_enum.sql\n@@ -0,0 +1,1 @@\n+WITH CAST(round(sqrt(number)) % 4 AS Enum('' = 0, 'hello' = 1, 'world' = 2, 'test' = 3)) AS x SELECT topK(10)(x) FROM numbers(1000);\n",
  "problem_statement": "Topk(enumColumn) returns int\nVersion: ClickHouse 18.12.17\r\n<img width=\"961\" alt=\"screen shot 2018-12-03 at 22 33 01\" src=\"https://user-images.githubusercontent.com/504986/49399003-1c0fa880-f751-11e8-8a1d-160fc55f8368.png\">\n",
  "hints_text": "@blinkov  @abyss7 \u0430 \u043a\u0430\u043a\u043e\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0442\u043e?\n@orloffv \u042f \u043d\u0435 \u043f\u043e\u043d\u044f\u043b, \u043f\u043e\u0447\u0435\u043c\u0443 \u043a\u043e\u043b\u043b\u0435\u0433\u0438 \u0437\u0430\u0431\u0438\u043b\u0438 \u043d\u0430 \u044d\u0442\u0443 \u0437\u0430\u0434\u0430\u0447\u0443. \u0418\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0440\u0438\u0432\u0438\u0430\u043b\u044c\u043d\u043e. \u0421\u0434\u0435\u043b\u0430\u044e.",
  "created_at": "2020-06-29T23:18:08Z"
}