{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 75794,
  "instance_id": "ClickHouse__ClickHouse-75794",
  "issue_numbers": [
    "75592"
  ],
  "base_commit": "3cd1a44d2555925f954c11861c834fd153a90e5d",
  "patch": "diff --git a/src/Functions/translate.cpp b/src/Functions/translate.cpp\nindex c6a9759227c9..cf24631c03d1 100644\n--- a/src/Functions/translate.cpp\n+++ b/src/Functions/translate.cpp\n@@ -80,12 +80,14 @@ struct TranslateImpl\n             {\n                 if (*src <= ascii_upper_bound && map[*src] != ascii_upper_bound + 1)\n                 {\n-                    *dst++ = map[*src];\n+                    *dst = map[*src];\n+                    ++dst;\n                     ++data_size;\n                 }\n                 else if (*src > ascii_upper_bound)\n                 {\n-                    *dst++ = *src;\n+                    *dst = *src;\n+                    ++dst;\n                     ++data_size;\n                 }\n \n@@ -94,9 +96,13 @@ struct TranslateImpl\n \n             /// Technically '\\0' can be mapped into other character,\n             ///  so we need to process '\\0' delimiter separately\n-            *dst++ = 0;\n-            res_offsets[i] = ++data_size;\n+            *dst = 0;\n+            ++dst;\n+            ++data_size;\n+            res_offsets[i] = data_size;\n         }\n+\n+        res_data.resize(data_size);\n     }\n \n     static void vectorFixed(\n@@ -282,7 +288,8 @@ struct TranslateUTF8Impl\n \n             /// Technically '\\0' can be mapped into other character,\n             ///  so we need to process '\\0' delimiter separately\n-            *dst++ = 0;\n+            *dst = 0;\n+            ++dst;\n \n             ++data_size;\n             res_offsets[i] = data_size;\n@@ -337,12 +344,7 @@ class FunctionTranslate : public IFunction\n             throw Exception(ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT, \"Illegal type {} of third argument of function {}\",\n                 arguments[2]->getName(), getName());\n \n-        if (isString(arguments[0]))\n-            return std::make_shared<DataTypeString>();\n-\n-        const auto * ptr = checkAndGetDataType<DataTypeFixedString>(arguments[0].get());\n-        chassert(ptr);\n-        return std::make_shared<DataTypeFixedString>(ptr->getN());\n+        return arguments[0];\n     }\n \n     ColumnPtr executeImpl(const ColumnsWithTypeAndName & arguments, const DataTypePtr &, size_t input_rows_count) const override\n@@ -361,9 +363,18 @@ class FunctionTranslate : public IFunction\n         String map_from = c1_const->getValue<String>();\n         String map_to = c2_const->getValue<String>();\n \n-        auto map_from_size = UTF8::countCodePoints(reinterpret_cast<const UInt8 *>(map_from.data()), map_from.size());\n-        auto map_to_size = UTF8::countCodePoints(reinterpret_cast<const UInt8 *>(map_to.data()), map_to.size());\n-\n+        size_t map_from_size;\n+        size_t map_to_size;\n+        if constexpr (std::is_same_v<Impl, TranslateUTF8Impl>)\n+        {\n+            map_from_size = UTF8::countCodePoints(reinterpret_cast<const UInt8 *>(map_from.data()), map_from.size());\n+            map_to_size = UTF8::countCodePoints(reinterpret_cast<const UInt8 *>(map_to.data()), map_to.size());\n+        }\n+        else\n+        {\n+            map_from_size = map_from.size();\n+            map_to_size = map_to.size();\n+        }\n         if (map_from_size < map_to_size)\n             throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Second argument of function {} must not be shorter than the third argument. Size of the second argument: {}, size of the third argument: {}\", getName(), map_from.size(), map_to.size());\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03354_translate_crap.reference b/tests/queries/0_stateless/03354_translate_crap.reference\nnew file mode 100644\nindex 000000000000..8cee6ba15c25\n--- /dev/null\n+++ b/tests/queries/0_stateless/03354_translate_crap.reference\n@@ -0,0 +1,1 @@\n+1A2BC\tString\ndiff --git a/tests/queries/0_stateless/03354_translate_crap.sql b/tests/queries/0_stateless/03354_translate_crap.sql\nnew file mode 100644\nindex 000000000000..60037a24cfae\n--- /dev/null\n+++ b/tests/queries/0_stateless/03354_translate_crap.sql\n@@ -0,0 +1,1 @@\n+SELECT translate('aAbBcC', 'abc', toFixedString('12', 2)) AS a, toTypeName(a);\n",
  "problem_statement": "MemorySanitizer: use-of-uninitialized-value in IQueryTreeNode::getTreeHash\n### Describe the bug\n\nhttps://s3.amazonaws.com/clickhouse-test-reports/75063/79851705827b3c12ff76caf644be04eec6fa8f95/ast_fuzzer__msan_.html\n\n### How to reproduce\n\nMinimized to:\n```\nSELECT\n    translate('aAbBcC', 'abc', toFixedString('12', 2)) AS a,\n    toTypeName(a)\n```\n\n### Error message and/or stacktrace\n\n```\n==81415==WARNING: MemorySanitizer: use-of-uninitialized-value\n    #0 0x5a08890e7c56 in std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache>, std::__1::__map_value_compare<CityHash_v1_0_2::uint128, std::__1::__value_type<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache>, std::__1::less<CityHash_v1_0_2::uint128>, true>, std::__1::allocator<std::__1::__value_type<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache>>>::__find_equal<CityHash_v1_0_2::uint128>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, CityHash_v1_0_2::uint128 const&) build_msan/./contrib/llvm-project/libcxx/include/__tree:1687:11\n    #1 0x5a08890e7c56 in std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache>, std::__1::__tree_node<std::__1::__value_type<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache>, std::__1::__map_value_compare<CityHash_v1_0_2::uint128, std::__1::__value_type<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache>, std::__1::less<CityHash_v1_0_2::uint128>, true>, std::__1::allocator<std::__1::__value_type<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache>>>::__emplace_unique_key_args<CityHash_v1_0_2::uint128, std::__1::piecewise_construct_t const&, std::__1::tuple<CityHash_v1_0_2::uint128 const&>, std::__1::tuple<>>(CityHash_v1_0_2::uint128 const&, std::__1::piecewise_construct_t const&, std::__1::tuple<CityHash_v1_0_2::uint128 const&>&&, std::__1::tuple<>&&) build_msan/./contrib/llvm-project/libcxx/include/__tree:1782:34\n    #2 0x5a088902c829 in std::__1::map<CityHash_v1_0_2::uint128, DB::IdentifierResolveScope::ResolvedFunctionsCache, std::__1::less<CityHash_v1_0_2::uint128>, std::__1::allocator<std::__1::pair<CityHash_v1_0_2::uint128 const, DB::IdentifierResolveScope::ResolvedFunctionsCache>>>::operator[](CityHash_v1_0_2::uint128 const&) build_msan/./contrib/llvm-project/libcxx/include/map:1519:8\n    #3 0x5a088902c829 in DB::QueryAnalyzer::resolveFunction(std::__1::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:3298:27\n    #4 0x5a0888fd1dae in DB::QueryAnalyzer::resolveExpressionNode(std::__1::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, bool, bool, bool) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:3851:46\n    #5 0x5a0888fcef6a in DB::QueryAnalyzer::resolveExpressionNodeList(std::__1::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, bool, bool) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:4011:49\n    #6 0x5a0889071ff5 in DB::QueryAnalyzer::resolveProjectionExpressionNodeList(std::__1::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:4335:40\n    #7 0x5a0888fb8b47 in DB::QueryAnalyzer::resolveQuery(std::__1::shared_ptr<DB::IQueryTreeNode> const&, DB::IdentifierResolveScope&) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:5627:30\n    #8 0x5a0888fb56b3 in DB::QueryAnalyzer::resolve(std::__1::shared_ptr<DB::IQueryTreeNode>&, std::__1::shared_ptr<DB::IQueryTreeNode> const&, std::__1::shared_ptr<DB::Context const>) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:174:13\n    #9 0x5a0888fb3f95 in DB::QueryAnalysisPass::run(std::__1::shared_ptr<DB::IQueryTreeNode>&, std::__1::shared_ptr<DB::Context const>) build_msan/./src/Analyzer/Resolve/QueryAnalysisPass.cpp:18:14\n    #10 0x5a088ac06ae7 in DB::QueryTreePassManager::run(std::__1::shared_ptr<DB::IQueryTreeNode>) build_msan/./src/Analyzer/QueryTreePassManager.cpp:184:20\n    #11 0x5a088b9feb1c in DB::(anonymous namespace)::buildQueryTreeAndRunPasses(std::__1::shared_ptr<DB::IAST> const&, DB::SelectQueryOptions const&, std::__1::shared_ptr<DB::Context const> const&, std::__1::shared_ptr<DB::IStorage> const&) build_msan/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:149:33\n    #12 0x5a088b9f7daa in DB::InterpreterSelectQueryAnalyzer::InterpreterSelectQueryAnalyzer(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_msan/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:167:18\n    #13 0x5a088ba03c5d in std::__1::__unique_if<DB::InterpreterSelectQueryAnalyzer>::__unique_single std::__1::make_unique[abi:ne180100]<DB::InterpreterSelectQueryAnalyzer, std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&>(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&) build_msan/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:597:30\n    #14 0x5a088ba037a6 in DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0::operator()(DB::InterpreterFactory::Arguments const&) const build_msan/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:292:16\n    #15 0x5a088ba037a6 in decltype(std::declval<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&>()(std::declval<DB::InterpreterFactory::Arguments const&>())) std::__1::__invoke[abi:ne180100]<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&, DB::InterpreterFactory::Arguments const&>(DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&, DB::InterpreterFactory::Arguments const&) build_msan/./contrib/llvm-project/libcxx/include/__type_traits/invoke.h:344:25\n    #16 0x5a088ba037a6 in std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> std::__1::__invoke_void_return_wrapper<std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>>, false>::__call[abi:ne180100]<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&, DB::InterpreterFactory::Arguments const&>(DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&, DB::InterpreterFactory::Arguments const&) build_msan/./contrib/llvm-project/libcxx/include/__type_traits/invoke.h:411:12\n    #17 0x5a088ba037a6 in std::__1::__function::__default_alloc_func<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0, std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>::operator()[abi:ne180100](DB::InterpreterFactory::Arguments const&) build_msan/./contrib/llvm-project/libcxx/include/__functional/function.h:208:12\n    #18 0x5a088ba037a6 in std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> std::__1::__function::__policy_invoker<std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>::__call_impl[abi:ne180100]<std::__1::__function::__default_alloc_func<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0, std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>>(std::__1::__function::__policy_storage const*, DB::InterpreterFactory::Arguments const&) build_msan/./contrib/llvm-project/libcxx/include/__functional/function.h:608:12\n    #19 0x5a088b887e6d in std::__1::__function::__policy_func<std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>::operator()[abi:ne180100](DB::InterpreterFactory::Arguments const&) const build_msan/./contrib/llvm-project/libcxx/include/__functional/function.h:714:12\n    #20 0x5a088b887e6d in std::__1::function<std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>::operator()(DB::InterpreterFactory::Arguments const&) const build_msan/./contrib/llvm-project/libcxx/include/__functional/function.h:981:10\n    #21 0x5a088b887e6d in DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) build_msan/./src/Interpreters/InterpreterFactory.cpp:392:12\n    #22 0x5a088c6aba3b in DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::__1::shared_ptr<DB::IAST>&) build_msan/./src/Interpreters/executeQuery.cpp:1389:62\n    #23 0x5a088c69e83e in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) build_msan/./src/Interpreters/executeQuery.cpp:1621:19\n    #24 0x5a0893bee693 in DB::LocalConnection::sendQuery(DB::ConnectionTimeouts const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned long, DB::Settings const*, DB::ClientInfo const*, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::function<void (DB::Progress const&)>) build_msan/./src/Client/LocalConnection.cpp:252:21\n    #25 0x5a0893a65f00 in DB::ClientBase::processOrdinaryQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::IAST>) build_msan/./src/Client/ClientBase.cpp:1178:29\n    #26 0x5a0893a5fbea in DB::ClientBase::processParsedSingleQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::IAST>, std::__1::optional<bool>, bool) build_msan/./src/Client/ClientBase.cpp:2160:13\n    #27 0x5a0893a85751 in DB::ClientBase::executeMultiQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) build_msan/./src/Client/ClientBase.cpp:2521:21\n    #28 0x5a0893a8a3dd in DB::ClientBase::processQueryText(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) build_msan/./src/Client/ClientBase.cpp:2705:12\n    #29 0x5a0893aa2a99 in DB::ClientBase::runInteractive() build_msan/./src/Client/ClientBase.cpp:3219:18\n    #30 0x5a0873ac9fe5 in DB::LocalServer::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_msan/./programs/local/LocalServer.cpp\n    #31 0x5a0873acb74e in non-virtual thunk to DB::LocalServer::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_msan/./programs/local/LocalServer.cpp\n    #32 0x5a089a76864b in Poco::Util::Application::run() build_msan/./base/poco/Util/src/Application.cpp:315:8\n    #33 0x5a0873aee42c in mainEntryClickHouseLocal(int, char**) build_msan/./programs/local/LocalServer.cpp:1075:20\n    #34 0x5a085a60eecc in main build_msan/./programs/main.cpp:269:21\n    #35 0x7c0911ed7487 in __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n    #36 0x7c0911ed754b in __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:360:3\n    #37 0x5a085a57902d in _start (/mnt/ch/ClickHouse/build_msan/programs/clickhouse+0x88a002d) (BuildId: 127342298683c9344e59e9d8cea271170f137b8b)\n\n  Uninitialized value was stored to memory at\n    #0 0x5a0888c7e1ec in SipHash::update(char const*, unsigned long) build_msan/./src/Common/SipHash.h:132:13\n    #1 0x5a0888c7e1ec in void SipHash::update<void, unsigned long>(unsigned long const&) build_msan/./src/Common/SipHash.h:179:13\n    #2 0x5a0888c7e1ec in DB::IQueryTreeNode::getTreeHash(DB::IQueryTreeNode::CompareOptions) const build_msan/./src/Analyzer/IQueryTreeNode.cpp:213:20\n    #3 0x5a088902c727 in DB::QueryAnalyzer::resolveFunction(std::__1::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:3297:40\n    #4 0x5a0888fd1dae in DB::QueryAnalyzer::resolveExpressionNode(std::__1::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, bool, bool, bool) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:3851:46\n    #5 0x5a0888fcef6a in DB::QueryAnalyzer::resolveExpressionNodeList(std::__1::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, bool, bool) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:4011:49\n    #6 0x5a0889071ff5 in DB::QueryAnalyzer::resolveProjectionExpressionNodeList(std::__1::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:4335:40\n    #7 0x5a0888fb8b47 in DB::QueryAnalyzer::resolveQuery(std::__1::shared_ptr<DB::IQueryTreeNode> const&, DB::IdentifierResolveScope&) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:5627:30\n    #8 0x5a0888fb56b3 in DB::QueryAnalyzer::resolve(std::__1::shared_ptr<DB::IQueryTreeNode>&, std::__1::shared_ptr<DB::IQueryTreeNode> const&, std::__1::shared_ptr<DB::Context const>) build_msan/./src/Analyzer/Resolve/QueryAnalyzer.cpp:174:13\n    #9 0x5a0888fb3f95 in DB::QueryAnalysisPass::run(std::__1::shared_ptr<DB::IQueryTreeNode>&, std::__1::shared_ptr<DB::Context const>) build_msan/./src/Analyzer/Resolve/QueryAnalysisPass.cpp:18:14\n    #10 0x5a088ac06ae7 in DB::QueryTreePassManager::run(std::__1::shared_ptr<DB::IQueryTreeNode>) build_msan/./src/Analyzer/QueryTreePassManager.cpp:184:20\n    #11 0x5a088b9feb1c in DB::(anonymous namespace)::buildQueryTreeAndRunPasses(std::__1::shared_ptr<DB::IAST> const&, DB::SelectQueryOptions const&, std::__1::shared_ptr<DB::Context const> const&, std::__1::shared_ptr<DB::IStorage> const&) build_msan/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:149:33\n    #12 0x5a088b9f7daa in DB::InterpreterSelectQueryAnalyzer::InterpreterSelectQueryAnalyzer(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_msan/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:167:18\n    #13 0x5a088ba03c5d in std::__1::__unique_if<DB::InterpreterSelectQueryAnalyzer>::__unique_single std::__1::make_unique[abi:ne180100]<DB::InterpreterSelectQueryAnalyzer, std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&>(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&) build_msan/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:597:30\n    #14 0x5a088ba037a6 in DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0::operator()(DB::InterpreterFactory::Arguments const&) const build_msan/./src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:292:16\n    #15 0x5a088ba037a6 in decltype(std::declval<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&>()(std::declval<DB::InterpreterFactory::Arguments const&>())) std::__1::__invoke[abi:ne180100]<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&, DB::InterpreterFactory::Arguments const&>(DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&, DB::InterpreterFactory::Arguments const&) build_msan/./contrib/llvm-project/libcxx/include/__type_traits/invoke.h:344:25\n    #16 0x5a088ba037a6 in std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> std::__1::__invoke_void_return_wrapper<std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>>, false>::__call[abi:ne180100]<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&, DB::InterpreterFactory::Arguments const&>(DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0&, DB::InterpreterFactory::Arguments const&) build_msan/./contrib/llvm-project/libcxx/include/__type_traits/invoke.h:411:12\n    #17 0x5a088ba037a6 in std::__1::__function::__default_alloc_func<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0, std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>::operator()[abi:ne180100](DB::InterpreterFactory::Arguments const&) build_msan/./contrib/llvm-project/libcxx/include/__functional/function.h:208:12\n    #18 0x5a088ba037a6 in std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> std::__1::__function::__policy_invoker<std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>::__call_impl[abi:ne180100]<std::__1::__function::__default_alloc_func<DB::registerInterpreterSelectQueryAnalyzer(DB::InterpreterFactory&)::$_0, std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>>(std::__1::__function::__policy_storage const*, DB::InterpreterFactory::Arguments const&) build_msan/./contrib/llvm-project/libcxx/include/__functional/function.h:608:12\n    #19 0x5a088b887e6d in std::__1::__function::__policy_func<std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>::operator()[abi:ne180100](DB::InterpreterFactory::Arguments const&) const build_msan/./contrib/llvm-project/libcxx/include/__functional/function.h:714:12\n    #20 0x5a088b887e6d in std::__1::function<std::__1::unique_ptr<DB::IInterpreter, std::__1::default_delete<DB::IInterpreter>> (DB::InterpreterFactory::Arguments const&)>::operator()(DB::InterpreterFactory::Arguments const&) const build_msan/./contrib/llvm-project/libcxx/include/__functional/function.h:981:10\n    #21 0x5a088b887e6d in DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) build_msan/./src/Interpreters/InterpreterFactory.cpp:392:12\n    #22 0x5a088c6aba3b in DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::__1::shared_ptr<DB::IAST>&) build_msan/./src/Interpreters/executeQuery.cpp:1389:62\n    #23 0x5a088c69e83e in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) build_msan/./src/Interpreters/executeQuery.cpp:1621:19\n    #24 0x5a0893bee693 in DB::LocalConnection::sendQuery(DB::ConnectionTimeouts const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned long, DB::Settings const*, DB::ClientInfo const*, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::function<void (DB::Progress const&)>) build_msan/./src/Client/LocalConnection.cpp:252:21\n    #25 0x5a0893a65f00 in DB::ClientBase::processOrdinaryQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::IAST>) build_msan/./src/Client/ClientBase.cpp:1178:29\n    #26 0x5a0893a5fbea in DB::ClientBase::processParsedSingleQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::IAST>, std::__1::optional<bool>, bool) build_msan/./src/Client/ClientBase.cpp:2160:13\n    #27 0x5a0893a85751 in DB::ClientBase::executeMultiQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) build_msan/./src/Client/ClientBase.cpp:2521:21\n\n  Uninitialized value was created by an allocation of 'hash_state' in the stack frame\n    #0 0x5a0888c774bd in DB::IQueryTreeNode::getTreeHash(DB::IQueryTreeNode::CompareOptions) const build_msan/./src/Analyzer/IQueryTreeNode.cpp:180:5\n```\n",
  "hints_text": "",
  "created_at": "2025-02-10T07:49:28Z",
  "modified_files": [
    "src/Functions/translate.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03354_translate_crap.reference",
    "b/tests/queries/0_stateless/03354_translate_crap.sql"
  ]
}