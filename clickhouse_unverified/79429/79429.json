{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 79429,
  "instance_id": "ClickHouse__ClickHouse-79429",
  "issue_numbers": [
    "63093"
  ],
  "base_commit": "5eb1225f867cc5010750d9d788a7e80f467bd78a",
  "patch": "diff --git a/programs/client/Client.cpp b/programs/client/Client.cpp\nindex 05ae15eb3304..ef55cdc364db 100644\n--- a/programs/client/Client.cpp\n+++ b/programs/client/Client.cpp\n@@ -1018,8 +1018,8 @@ void Client::readArguments(\n             if (arg == \"--file\"sv || arg == \"--name\"sv || arg == \"--structure\"sv || arg == \"--types\"sv)\n                 throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Parameter must be in external group, try add --external before {}\", arg);\n \n-            /// Parameter arg after underline.\n-            if (arg.starts_with(\"--param_\"))\n+            /// Parameter arg after underline or dash.\n+            if (arg.starts_with(\"--param_\") || arg.starts_with(\"--param-\"))\n             {\n                 auto param_continuation = arg.substr(strlen(\"--param_\"));\n                 auto equal_pos = param_continuation.find_first_of('=');\ndiff --git a/programs/local/LocalServer.cpp b/programs/local/LocalServer.cpp\nindex 5db60d6f8ee5..b1168891d0d9 100644\n--- a/programs/local/LocalServer.cpp\n+++ b/programs/local/LocalServer.cpp\n@@ -1103,8 +1103,8 @@ void LocalServer::readArguments(int argc, char ** argv, Arguments & common_argum\n     {\n         std::string_view arg = argv[arg_num];\n \n-        /// Parameter arg after underline.\n-        if (arg.starts_with(\"--param_\"))\n+        /// Parameter arg after underline or dash.\n+        if (arg.starts_with(\"--param_\") || arg.starts_with(\"--param-\"))\n         {\n             auto param_continuation = arg.substr(strlen(\"--param_\"));\n             auto equal_pos = param_continuation.find_first_of('=');\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03312_issue_63093.reference b/tests/queries/0_stateless/03312_issue_63093.reference\nnew file mode 100644\nindex 000000000000..33844fb6e2f4\n--- /dev/null\n+++ b/tests/queries/0_stateless/03312_issue_63093.reference\n@@ -0,0 +1,2 @@\n+param-test OK\n+param_test OK\ndiff --git a/tests/queries/0_stateless/03312_issue_63093.sh b/tests/queries/0_stateless/03312_issue_63093.sh\nnew file mode 100755\nindex 000000000000..6149e6b874c6\n--- /dev/null\n+++ b/tests/queries/0_stateless/03312_issue_63093.sh\n@@ -0,0 +1,8 @@\n+#!/usr/bin/env bash\n+\n+CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CUR_DIR\"/../shell_config.sh\n+\n+${CLICKHOUSE_CLIENT} --param-test \"param-test OK\" -q \"SELECT {test:String}\"\n+${CLICKHOUSE_CLIENT} --param_test \"param_test OK\" -q \"SELECT {test:String}\"\n",
  "problem_statement": "The ability to use options-with-dashes does not extend to query parameters.\n**Describe the issue**\r\n\r\n```\r\n$ ch --max-threads 1 -q \"SELECT getSetting('max_threads')\"\r\n1\r\n$ ch --param-test 1 -q \"SELECT {test:String}\"\r\nCode: 552. DB::Exception: Unrecognized option '--param-test'. (UNRECOGNIZED_ARGUMENTS)\r\n```\n",
  "hints_text": "",
  "created_at": "2025-04-22T17:37:13Z",
  "modified_files": [
    "programs/client/Client.cpp",
    "programs/local/LocalServer.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03312_issue_63093.reference",
    "b/tests/queries/0_stateless/03312_issue_63093.sh"
  ]
}