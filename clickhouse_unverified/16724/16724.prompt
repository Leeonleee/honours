You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Add function accurateCastOrNull.
**Use case**
This function is needed to implement #10266

**Describe the solution you'd like**
The function is like `cast` but always returns nullable type and returns NULL if the casted value is not representable in the target type.

Example:

```
accurateCastOrNull(-1, 'UInt8')
NULL

cast(-1, 'UInt8')
255
```
Allow different types inside IN subquery.
**Use case**
`SELECT 1 IN (SELECT -1)`

This task it not trivial as it looks.

We can apply conversion for left hand side to the type of right hand side.
But this will lead to strange artifacts: `SELECT 257 IN (SELECT 1)` will return true.

We can apply conversion to the lest common type, but we create the set only one time but may use it in different context, e.g:
`SELECT 1 IN (SELECT 18446744073709551615), -1 IN (SELECT 18446744073709551615)`
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
