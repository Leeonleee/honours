{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 33141,
  "instance_id": "ClickHouse__ClickHouse-33141",
  "issue_numbers": [
    "6331"
  ],
  "base_commit": "119b8628e5750a0812964876f01deadde8a6cb0f",
  "patch": "diff --git a/docs/en/sql-reference/statements/insert-into.md b/docs/en/sql-reference/statements/insert-into.md\nindex c36f1b1c9cf3..f8eefad7051b 100644\n--- a/docs/en/sql-reference/statements/insert-into.md\n+++ b/docs/en/sql-reference/statements/insert-into.md\n@@ -55,7 +55,11 @@ SELECT * FROM insert_select_testtable;\n \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n ```\n \n-In this example, we see that the second inserted row has `a` and `c` columns filled by the passed values, and `b` filled with value by default.\n+In this example, we see that the second inserted row has `a` and `c` columns filled by the passed values, and `b` filled with value by default. It is also possible to use `DEFAULT` keyword to insert default values:\n+\n+``` sql\n+INSERT INTO insert_select_testtable VALUES (1, DEFAULT, 1) ;\n+```\n \n If a list of columns does not include all existing columns, the rest of the columns are filled with:\n \ndiff --git a/docs/ru/sql-reference/statements/insert-into.md b/docs/ru/sql-reference/statements/insert-into.md\nindex 21fef0e02869..a2d9ebaf68e5 100644\n--- a/docs/ru/sql-reference/statements/insert-into.md\n+++ b/docs/ru/sql-reference/statements/insert-into.md\n@@ -55,7 +55,12 @@ SELECT * FROM insert_select_testtable\n \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n ```\n \n-\u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0432\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0442\u043e\u043b\u0431\u0446\u044b `a` \u0438 `c`, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 `b`, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n+\u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0432\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0442\u043e\u043b\u0431\u0446\u044b `a` \u0438 `c`, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 `b`, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e `DEFAULT` \u0434\u043b\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e:\n+\n+``` sql\n+INSERT INTO insert_select_testtable VALUES (1, DEFAULT, 1) ;\n+```\n+\n \u0415\u0441\u043b\u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b, \u0442\u043e \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\n \n -   \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435 \u0438\u0437 `DEFAULT` \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b.\ndiff --git a/src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp b/src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp\nindex adf6d2e8a253..afe2d6a9f304 100644\n--- a/src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp\n+++ b/src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp\n@@ -176,12 +176,20 @@ bool ValuesBlockInputFormat::tryReadValue(IColumn & column, size_t column_idx)\n     try\n     {\n         bool read = true;\n-        const auto & type = types[column_idx];\n-        const auto & serialization = serializations[column_idx];\n-        if (format_settings.null_as_default && !type->isNullable() && !type->isLowCardinalityNullable())\n-            read = SerializationNullable::deserializeTextQuotedImpl(column, *buf, format_settings, serialization);\n+        if (bool default_value = checkStringByFirstCharacterAndAssertTheRestCaseInsensitive(\"DEFAULT\", *buf); default_value)\n+        {\n+            column.insertDefault();\n+            read = false;\n+        }\n         else\n-            serialization->deserializeTextQuoted(column, *buf, format_settings);\n+        {\n+            const auto & type = types[column_idx];\n+            const auto & serialization = serializations[column_idx];\n+            if (format_settings.null_as_default && !type->isNullable() && !type->isLowCardinalityNullable())\n+                read = SerializationNullable::deserializeTextQuotedImpl(column, *buf, format_settings, serialization);\n+            else\n+                serialization->deserializeTextQuoted(column, *buf, format_settings);\n+        }\n \n         rollback_on_exception = true;\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02154_default_keyword_insert.reference b/tests/queries/0_stateless/02154_default_keyword_insert.reference\nnew file mode 100644\nindex 000000000000..158abdfd686d\n--- /dev/null\n+++ b/tests/queries/0_stateless/02154_default_keyword_insert.reference\n@@ -0,0 +1,3 @@\n+0\t42\t33\n+1\t42\t33\n+2\t33\t33\ndiff --git a/tests/queries/0_stateless/02154_default_keyword_insert.sql b/tests/queries/0_stateless/02154_default_keyword_insert.sql\nnew file mode 100644\nindex 000000000000..efccc35e6a8c\n--- /dev/null\n+++ b/tests/queries/0_stateless/02154_default_keyword_insert.sql\n@@ -0,0 +1,7 @@\n+CREATE TEMPORARY TABLE IF NOT EXISTS default_table (x UInt32, y UInt32 DEFAULT 42, z UInt32 DEFAULT 33) ENGINE = Memory;\n+\n+INSERT INTO default_table(x) values (DEFAULT);\n+INSERT INTO default_table(x, z) values (1, DEFAULT);\n+INSERT INTO default_table values (2, 33, DEFAULT);\n+\n+SELECT * FROM default_table ORDER BY x;\ndiff --git a/tests/queries/0_stateless/02155_default_keyword_format_values.reference b/tests/queries/0_stateless/02155_default_keyword_format_values.reference\nnew file mode 100644\nindex 000000000000..022aeaff0a99\n--- /dev/null\n+++ b/tests/queries/0_stateless/02155_default_keyword_format_values.reference\n@@ -0,0 +1,8 @@\n+0\t1\t33\n+0\t42\t33\n+1\t42\t2\n+2\t42\t33\n+3\t42\t3\n+4\t42\t3\n+5\t42\t33\n+6\t6\t33\ndiff --git a/tests/queries/0_stateless/02155_default_keyword_format_values.sh b/tests/queries/0_stateless/02155_default_keyword_format_values.sh\nnew file mode 100755\nindex 000000000000..53f88747fdc5\n--- /dev/null\n+++ b/tests/queries/0_stateless/02155_default_keyword_format_values.sh\n@@ -0,0 +1,16 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+$CLICKHOUSE_CLIENT -q \"CREATE TABLE IF NOT EXISTS default_table (x UInt32, y UInt32 DEFAULT 42, z UInt32 DEFAULT 33) ENGINE = Memory;\"\n+\n+echo \"(DEFAULT, 1, DEFAULT), (1, DEFAULT, 2)\" | $CLICKHOUSE_CLIENT --input_format_values_interpret_expressions=0 -q \"INSERT INTO default_table FORMAT Values\"\n+echo \"(2, DEFAULT), (3, 3)\" | $CLICKHOUSE_CLIENT --input_format_values_interpret_expressions=0 -q \"INSERT INTO default_table(x, z) FORMAT Values\"\n+\n+echo \"(DEFAULT, DEFAULT, DEFAULT), (4, DEFAULT, 3)\" | $CLICKHOUSE_CLIENT --input_format_values_interpret_expressions=1 -q \"INSERT INTO default_table FORMAT Values\"\n+echo \"(5, DEFAULT), (6, 6)\" | $CLICKHOUSE_CLIENT --input_format_values_interpret_expressions=1 -q \"INSERT INTO default_table(x, y) FORMAT Values\"\n+\n+$CLICKHOUSE_CLIENT --query=\"SELECT * FROM default_table ORDER BY x, y\";\n+$CLICKHOUSE_CLIENT --query=\"DROP TABLE default_table\"\n",
  "problem_statement": "Add support for DEFAULT keyword for INSERT statement \n**Use case**\r\n```\r\ncreate table table1\r\n(\r\n    field1 Int32,\r\n    field2 Int32,\r\n    field3 Int32 default CAST(1337, 'Int32'),\r\n    field4 Int32 default CAST(1337, 'Int32')\r\n)engine = MergeTree() PARTITION BY field1 \r\nORDER BY (field1, field2) \r\nSETTINGS index_granularity = 8192;\r\n\r\ninsert into table1 (field1, field3) values (5, DEFAULT)\r\ninsert into table1 values (5, DEFAULT, 10, DEFAULT)\r\n```\r\nResult:\r\n\r\n| field1 | field2 | field3 | field4 |\r\n|--------|--------|--------|--------|\r\n| 5      | 0      | 1337   | 1337   |\r\n| 5      | 0      | 10     | 1337   |\r\n\r\n\r\n**Additional context**\r\nWith the `DEFAULT` keyword, insertion of data would have a bit more flexibility. And, let data with some missing values utilize bulk loading.   \n",
  "hints_text": "Sounds reasonable, supported by most of popular DBMS (including MySQL, Postgres, MsSQL etc)\nAfter #7215 `NULL` keyword can be used as `DEFAULT` if `input_format_null_as_default=1` and column type is not `Nullable`\nIt can be implemented quite easily.\nI would like to try this. @alexey-milovidov\n@1over Do you have any troubles implementing it? Do you need help?\n@alexey-milovidov no troubles yet, I was occupied with other things. I plan to finish it in the coming days",
  "created_at": "2021-12-24T12:46:25Z",
  "modified_files": [
    "docs/en/sql-reference/statements/insert-into.md",
    "docs/ru/sql-reference/statements/insert-into.md",
    "src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02154_default_keyword_insert.reference",
    "b/tests/queries/0_stateless/02154_default_keyword_insert.sql",
    "b/tests/queries/0_stateless/02155_default_keyword_format_values.reference",
    "b/tests/queries/0_stateless/02155_default_keyword_format_values.sh"
  ]
}