{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 31967,
  "instance_id": "ClickHouse__ClickHouse-31967",
  "issue_numbers": [
    "31962"
  ],
  "base_commit": "b5f44de8f0c863927fa324f1933a7ad5834ae5bf",
  "patch": "diff --git a/src/Storages/FileLog/StorageFileLog.cpp b/src/Storages/FileLog/StorageFileLog.cpp\nindex 1ba16fc821c6..1ff2502f2c31 100644\n--- a/src/Storages/FileLog/StorageFileLog.cpp\n+++ b/src/Storages/FileLog/StorageFileLog.cpp\n@@ -119,7 +119,8 @@ void StorageFileLog::loadMetaFiles(bool attach)\n                 \"Metadata files already exist by path: {}, remove them manually if it is intended\",\n                 root_meta_path);\n         }\n-        std::filesystem::create_directories(root_meta_path);\n+        /// We do not create the root_meta_path directory at creation time, create it at the moment of serializing\n+        /// meta files, such that can avoid unnecessarily create this directory if create table failed.\n     }\n }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02125_fix_storage_filelog.reference b/tests/queries/0_stateless/02125_fix_storage_filelog.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02125_fix_storage_filelog.sql b/tests/queries/0_stateless/02125_fix_storage_filelog.sql\nnew file mode 100644\nindex 000000000000..7586df1ee007\n--- /dev/null\n+++ b/tests/queries/0_stateless/02125_fix_storage_filelog.sql\n@@ -0,0 +1,3 @@\n+CREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV'); -- {serverError 36 }\n+CREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV'); -- {serverError 36 }\n+CREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV'); -- {serverError 36 }\ndiff --git a/tests/queries/0_stateless/02126_fix_filelog.reference b/tests/queries/0_stateless/02126_fix_filelog.reference\nnew file mode 100644\nindex 000000000000..0eabe3671300\n--- /dev/null\n+++ b/tests/queries/0_stateless/02126_fix_filelog.reference\n@@ -0,0 +1,3 @@\n+OK\n+OK\n+OK\ndiff --git a/tests/queries/0_stateless/02126_fix_filelog.sh b/tests/queries/0_stateless/02126_fix_filelog.sh\nnew file mode 100755\nindex 000000000000..ac2e9d1bd192\n--- /dev/null\n+++ b/tests/queries/0_stateless/02126_fix_filelog.sh\n@@ -0,0 +1,28 @@\n+#!/usr/bin/env bash\n+\n+set -eu\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+# Data preparation.\n+# Now we can get the user_files_path by use the table file function for trick. also we can get it by query as:\n+#  \"insert into function file('exist.txt', 'CSV', 'val1 char') values ('aaaa'); select _path from file('exist.txt', 'CSV', 'val1 char')\"\n+user_files_path=$(clickhouse-client --query \"select _path,_file from file('nonexist.txt', 'CSV', 'val1 char')\" 2>&1 | grep Exception | awk '{gsub(\"/nonexist.txt\",\"\",$9); print $9}')\n+\n+mkdir -p ${user_files_path}/${CLICKHOUSE_TEST_UNIQUE_NAME}/\n+\n+rm -rf ${user_files_path}/${CLICKHOUSE_TEST_UNIQUE_NAME:?}/*\n+\n+${CLICKHOUSE_CLIENT} --query \"drop table if exists file_log;\"\n+\n+${CLICKHOUSE_CLIENT} --query \"create table file_log(k UInt8, v UInt8) engine=FileLog('/tmp/aaa.csv', 'CSV');\" 2>&1 | grep -q \"Code: 36\" && echo 'OK' || echo 'FAIL';\n+${CLICKHOUSE_CLIENT} --query \"create table file_log(k UInt8, v UInt8) engine=FileLog('/tmp/aaa.csv', 'CSV');\" 2>&1 | grep -q \"Code: 36\" && echo 'OK' || echo 'FAIL';\n+${CLICKHOUSE_CLIENT} --query \"create table file_log(k UInt8, v UInt8) engine=FileLog('/tmp/aaa.csv', 'CSV');\" 2>&1 | grep -q \"Code: 36\" && echo 'OK' || echo 'FAIL';\n+\n+${CLICKHOUSE_CLIENT} --query \"create table file_log(k UInt8, v UInt8) engine=FileLog('${user_files_path}/${CLICKHOUSE_TEST_UNIQUE_NAME}/', 'CSV');\"\n+\n+${CLICKHOUSE_CLIENT} --query \"drop table file_log;\"\n+\n+rm -rf ${user_files_path}/${CLICKHOUSE_TEST_UNIQUE_NAME:?}\n",
  "problem_statement": "FileLog is able to read files only in /var/lib/clickhouse/user_files/ \n```\r\ntouch /tmp/aaa.csv\r\n\r\nCREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV');\r\nDB::Exception: The absolute data path should be inside `user_files_path`(/var/lib/clickhouse/user_files/). (BAD_ARGUMENTS)\r\n\r\n\r\nCREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV');\r\nDB::Exception: Metadata files already exist by path: /var/lib/clickhouse/.filelog_storage_metadata/default/log, remove them manually if it is intended. (TABLE_METADATA_ALREADY_EXISTS)\r\n```\n",
  "hints_text": "> CREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV');\r\nDB::Exception: The absolute data path should be inside `user_files_path`(/var/lib/clickhouse/user_files/). (BAD_ARGUMENTS)\r\n\r\nYou can also put symlinks to your files by user_files path, isn't it ok?\r\n\r\n> CREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV');\r\nDB::Exception: Metadata files already exist by path: /var/lib/clickhouse/.filelog_storage_metadata/default/log, remove them manually if it is intended. (TABLE_METADATA_ALREADY_EXISTS)\r\n\r\nhm, this needs to be fixed..\n>You can also put symlinks to your files by user_files path, isn't it ok?\r\n\r\nOK. Yes, I can. \r\nI did not expect that it's intentional. It's kinda ruins the beauty of this engine at least for me.\nIt shouldn't be possible for the user to read arbitrary files on the server with SQL queries unless the paths of these files are preconfigured on the server side.\n> > CREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV');\r\n> > DB::Exception: Metadata files already exist by path: /var/lib/clickhouse/.filelog_storage_metadata/default/log, remove them manually if it is intended. (TABLE_METADATA_ALREADY_EXISTS)\r\n> \r\n> hm, this needs to be fixed..\r\n\r\nI will fix it.",
  "created_at": "2021-11-30T03:57:22Z",
  "modified_files": [
    "src/Storages/FileLog/StorageFileLog.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02125_fix_storage_filelog.sql",
    "b/tests/queries/0_stateless/02126_fix_filelog.reference",
    "b/tests/queries/0_stateless/02126_fix_filelog.sh"
  ]
}