diff --git a/tests/queries/0_stateless/03004_force_null_for_omitted.reference b/tests/queries/0_stateless/03004_force_null_for_omitted.reference
new file mode 100644
index 000000000000..a4c928aae8cb
--- /dev/null
+++ b/tests/queries/0_stateless/03004_force_null_for_omitted.reference
@@ -0,0 +1,44 @@
+0	0
+0	0
+2	0
+0	0
+4	0
+0	\N
+0	\N
+2	\N
+0	\N
+4	\N
+0	\N
+0	\N
+2	\N
+0	\N
+4	\N
+0	\N
+0	\N
+2	\N
+0	\N
+4	\N
+0	\N
+0	\N
+2	\N
+0	\N
+4	\N
+0
+0	\N
+1	\N
+1	\N
+1	\N
+1	\N
+1	0
+1	\N
+1	\N
+1	2
+3	0
+1	0
+1	\N
+1	\N
+1	2
+3	0
+1	0
+1	\N
+1	\N
diff --git a/tests/queries/0_stateless/03004_force_null_for_omitted.sql b/tests/queries/0_stateless/03004_force_null_for_omitted.sql
new file mode 100644
index 000000000000..43ba2568acb7
--- /dev/null
+++ b/tests/queries/0_stateless/03004_force_null_for_omitted.sql
@@ -0,0 +1,36 @@
+set allow_suspicious_low_cardinality_types = 1;
+insert into function file(concat(currentDatabase(), '.03004_data.bsonEachRow'), auto, 'null Nullable(UInt32)') select number % 2 ? NULL : number from numbers(5) settings engine_file_truncate_on_insert=1;
+select * from file(concat(currentDatabase(), '.03004_data.bsonEachRow'), auto, 'null UInt32, foo UInt32');
+select * from file(concat(currentDatabase(), '.03004_data.bsonEachRow'), auto, 'null UInt32, foo UInt32') settings input_format_force_null_for_omitted_fields = 1; -- { serverError TYPE_MISMATCH }
+select * from file(concat(currentDatabase(), '.03004_data.bsonEachRow'), auto, 'null UInt32, foo Nullable(UInt32)');
+select * from file(concat(currentDatabase(), '.03004_data.bsonEachRow'), auto, 'null UInt32, foo Nullable(UInt32)') settings input_format_force_null_for_omitted_fields = 1;
+select * from file(concat(currentDatabase(), '.03004_data.bsonEachRow'), auto, 'null UInt32, foo LowCardinality(Nullable(UInt32))');
+select * from file(concat(currentDatabase(), '.03004_data.bsonEachRow'), auto, 'null UInt32, foo LowCardinality(Nullable(UInt32))') settings input_format_force_null_for_omitted_fields = 1;
+
+select * from format(JSONEachRow, 'foo UInt32', '{}');
+select * from format(JSONEachRow, 'foo UInt32', '{}') settings input_format_force_null_for_omitted_fields = 1;  -- { serverError TYPE_MISMATCH }
+select * from format(JSONEachRow, 'foo UInt32, bar Nullable(UInt32)', '{}');
+select * from format(JSONEachRow, 'foo UInt32, bar Nullable(UInt32)', '{\"foo\":1}');
+select * from format(JSONEachRow, 'foo UInt32, bar Nullable(UInt32)', '{}') settings input_format_force_null_for_omitted_fields = 1;  -- { serverError TYPE_MISMATCH }
+select * from format(JSONEachRow, 'foo UInt32, bar Nullable(UInt32)', '{\"foo\":1}') settings input_format_force_null_for_omitted_fields = 1;
+select * from format(JSONEachRow, 'foo UInt32, bar LowCardinality(Nullable(UInt32))', '{\"foo\":1}');
+select * from format(JSONEachRow, 'foo UInt32, bar LowCardinality(Nullable(UInt32))', '{\"foo\":1}') settings input_format_force_null_for_omitted_fields = 1;
+
+select * from format(CSVWithNamesAndTypes, 'foo UInt32, bar UInt32', 'foo
UInt32
1');
+select * from format(CSVWithNamesAndTypes, 'foo UInt32, bar UInt32', 'foo
UInt32
1') settings input_format_force_null_for_omitted_fields = 1;  -- { serverError TYPE_MISMATCH }
+select * from format(CSVWithNamesAndTypes, 'foo UInt32, bar Nullable(UInt32)', 'foo
UInt32
1') settings input_format_force_null_for_omitted_fields = 1;
+select * from format(CSVWithNamesAndTypes, 'foo UInt32, bar LowCardinality(Nullable(UInt32))', 'foo
UInt32
1') settings input_format_force_null_for_omitted_fields = 1;
+select * from format(CSVWithNamesAndTypes, 'foo UInt32, bar UInt32', 'foo,bar
UInt32,UInt32
1,2
3
') settings input_format_csv_allow_variable_number_of_columns = 1;
+select * from format(CSVWithNamesAndTypes, 'foo UInt32, bar UInt32', 'foo,bar
UInt32,UInt32
1,2
3
') settings input_format_csv_allow_variable_number_of_columns = 1, input_format_force_null_for_omitted_fields = 1;  -- { serverError TYPE_MISMATCH }
+
+select * from format(TSVWithNamesAndTypes, 'foo UInt32, bar UInt32', 'foo
UInt32
1');
+select * from format(TSVWithNamesAndTypes, 'foo UInt32, bar UInt32', 'foo
UInt32
1') settings input_format_force_null_for_omitted_fields = 1;  -- { serverError TYPE_MISMATCH }
+select * from format(TSVWithNamesAndTypes, 'foo UInt32, bar Nullable(UInt32)', 'foo
UInt32
1') settings input_format_force_null_for_omitted_fields = 1;
+select * from format(TSVWithNamesAndTypes, 'foo UInt32, bar LowCardinality(Nullable(UInt32))', 'foo
UInt32
1') settings input_format_force_null_for_omitted_fields = 1;
+select * from format(TSVWithNamesAndTypes, 'foo UInt32, bar UInt32', 'foo\tbar
UInt32\tUInt32
1\t2
3
') settings input_format_tsv_allow_variable_number_of_columns = 1;
+select * from format(TSVWithNamesAndTypes, 'foo UInt32, bar UInt32', 'foo\tbar
UInt32\tUInt32
1\t2
3
') settings input_format_tsv_allow_variable_number_of_columns = 1, input_format_force_null_for_omitted_fields = 1;  -- { serverError TYPE_MISMATCH }
+
+select * from format(TSKV, 'foo UInt32, bar UInt32', 'foo=1
');
+select * from format(TSKV, 'foo UInt32, bar UInt32', 'foo=1
') settings input_format_force_null_for_omitted_fields = 1;  -- { serverError TYPE_MISMATCH }
+select * from format(TSKV, 'foo UInt32, bar Nullable(UInt32)', 'foo=1
') settings input_format_force_null_for_omitted_fields = 1;
+select * from format(TSKV, 'foo UInt32, bar LowCardinality(Nullable(UInt32))', 'foo=1
') settings input_format_force_null_for_omitted_fields = 1;
