diff --git a/tests/queries/0_stateless/02226_analyzer_or_like_combine.reference b/tests/queries/0_stateless/02226_analyzer_or_like_combine.reference
new file mode 100644
index 000000000000..8b89f5847b6e
--- /dev/null
+++ b/tests/queries/0_stateless/02226_analyzer_or_like_combine.reference
@@ -0,0 +1,110 @@
+SELECT materialize(\'Привет, World\') AS s
+WHERE (s LIKE \'hell%\') OR (s ILIKE \'%привет%\') OR (s ILIKE \'world%\')
+SETTINGS optimize_or_like_chain = 0
+QUERY id: 0
+  PROJECTION COLUMNS
+    s String
+  PROJECTION
+    LIST id: 1, nodes: 1
+      FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+        ARGUMENTS
+          LIST id: 3, nodes: 1
+            CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
+  JOIN TREE
+    TABLE id: 5, table_name: system.one
+  WHERE
+    FUNCTION id: 6, function_name: or, function_type: ordinary, result_type: UInt8
+      ARGUMENTS
+        LIST id: 7, nodes: 3
+          FUNCTION id: 8, function_name: like, function_type: ordinary, result_type: UInt8
+            ARGUMENTS
+              LIST id: 9, nodes: 2
+                FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+                  ARGUMENTS
+                    LIST id: 3, nodes: 1
+                      CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
+                CONSTANT id: 10, constant_value: \'hell%\', constant_value_type: String
+          FUNCTION id: 11, function_name: ilike, function_type: ordinary, result_type: UInt8
+            ARGUMENTS
+              LIST id: 12, nodes: 2
+                FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+                  ARGUMENTS
+                    LIST id: 3, nodes: 1
+                      CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
+                CONSTANT id: 13, constant_value: \'%привет%\', constant_value_type: String
+          FUNCTION id: 14, function_name: ilike, function_type: ordinary, result_type: UInt8
+            ARGUMENTS
+              LIST id: 15, nodes: 2
+                FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+                  ARGUMENTS
+                    LIST id: 3, nodes: 1
+                      CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
+                CONSTANT id: 16, constant_value: \'world%\', constant_value_type: String
+  SETTINGS optimize_or_like_chain=0 allow_experimental_analyzer=1
+SELECT materialize(\'Привет, World\') AS s
+WHERE multiMatchAny(s, [\'^hell\', \'(?i)привет\', \'(?i)^world\']) OR false
+SETTINGS optimize_or_like_chain = 1
+QUERY id: 0
+  PROJECTION COLUMNS
+    s String
+  PROJECTION
+    LIST id: 1, nodes: 1
+      FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+        ARGUMENTS
+          LIST id: 3, nodes: 1
+            CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
+  JOIN TREE
+    TABLE id: 5, table_name: system.one
+  WHERE
+    FUNCTION id: 6, function_name: or, function_type: ordinary, result_type: Bool
+      ARGUMENTS
+        LIST id: 7, nodes: 2
+          FUNCTION id: 8, function_name: multiMatchAny, function_type: ordinary, result_type: UInt8
+            ARGUMENTS
+              LIST id: 9, nodes: 2
+                FUNCTION id: 2, function_name: materialize, function_type: ordinary, result_type: String
+                  ARGUMENTS
+                    LIST id: 3, nodes: 1
+                      CONSTANT id: 4, constant_value: \'Привет, World\', constant_value_type: String
+                CONSTANT id: 10, constant_value: Array_[\'^hell\', \'(?i)привет\', \'(?i)^world\'], constant_value_type: Array(String)
+          CONSTANT id: 11, constant_value: UInt64_0, constant_value_type: Bool
+  SETTINGS optimize_or_like_chain=1 allow_experimental_analyzer=1
+SELECT
+    materialize(\'Привет, World\') AS s1,
+    materialize(\'Привет, World\') AS s2
+WHERE multiMatchAny(s1, [\'^hell\', \'(?i)^world\']) OR multiMatchAny(s2, [\'(?i)привет\'])
+SETTINGS optimize_or_like_chain = 1
+SELECT
+    materialize(\'Привет, World\') AS s1,
+    materialize(\'Привет, World\') AS s2
+WHERE (s1 LIKE \'hell%\') OR (s2 ILIKE \'%привет%\') OR (s1 ILIKE \'world%\')
+SETTINGS optimize_or_like_chain = 1
+SELECT
+    materialize(\'Привет, World\') AS s1,
+    materialize(\'Привет, World\') AS s2
+WHERE (s1 LIKE \'hell%\') OR (s2 ILIKE \'%привет%\') OR (s1 ILIKE \'world%\')
+SETTINGS optimize_or_like_chain = 1
+SELECT
+    materialize(\'Привет, World\') AS s1,
+    materialize(\'Привет, World\') AS s2
+WHERE (s1 LIKE \'hell%\') OR (s2 ILIKE \'%привет%\') OR (s1 ILIKE \'world%\')
+SETTINGS optimize_or_like_chain = 1
+SELECT
+    materialize(\'Привет, World\') AS s1,
+    materialize(\'Привет, World\') AS s2
+WHERE multiMatchAny(s1, [\'^hell\', \'(?i)^world\']) OR multiMatchAny(s2, [\'(?i)привет\']) OR (s1 = \'Привет\')
+SETTINGS optimize_or_like_chain = 1
+Привет, optimized World
+Привет, optimized World
+Привет, World
+Привет, World
+Привет, optimized World
+Привет, optimized World
+Привет, World
+Привет, World
+Привет, World
+SELECT
+    (materialize(\'Привет, World\') AS s) LIKE \'hell%\' AS test,
+    s
+WHERE multiMatchAny(s, [\'^hell\', \'(?i)привет\', \'(?i)^world\']) OR false
+SETTINGS optimize_or_like_chain = 1
diff --git a/tests/queries/0_stateless/02226_or_like_combine.sql b/tests/queries/0_stateless/02226_analyzer_or_like_combine.sql
similarity index 63%
rename from tests/queries/0_stateless/02226_or_like_combine.sql
rename to tests/queries/0_stateless/02226_analyzer_or_like_combine.sql
index ed91dda74691..dec73c201ef9 100644
--- a/tests/queries/0_stateless/02226_or_like_combine.sql
+++ b/tests/queries/0_stateless/02226_analyzer_or_like_combine.sql
@@ -1,6 +1,7 @@
 EXPLAIN SYNTAX SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s ILIKE 'world%') SETTINGS optimize_or_like_chain = 0;
+EXPLAIN QUERY TREE run_passes=1 SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s ILIKE 'world%') SETTINGS optimize_or_like_chain = 0, allow_experimental_analyzer = 1;
 EXPLAIN SYNTAX SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s ILIKE 'world%') SETTINGS optimize_or_like_chain = 1;
-
+EXPLAIN QUERY TREE run_passes=1 SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s ILIKE 'world%') SETTINGS optimize_or_like_chain = 1, allow_experimental_analyzer = 1;
 
 EXPLAIN SYNTAX SELECT materialize('Привет, World') AS s1, materialize('Привет, World') AS s2 WHERE (s1 LIKE 'hell%') OR (s2 ILIKE '%привет%') OR (s1 ILIKE 'world%') SETTINGS optimize_or_like_chain = 1;
 EXPLAIN SYNTAX SELECT materialize('Привет, World') AS s1, materialize('Привет, World') AS s2 WHERE (s1 LIKE 'hell%') OR (s2 ILIKE '%привет%') OR (s1 ILIKE 'world%') SETTINGS optimize_or_like_chain = 1 SETTINGS allow_hyperscan = 0;
@@ -10,9 +11,18 @@ EXPLAIN SYNTAX SELECT materialize('Привет, World') AS s1, materialize('П
 
 
 SELECT materialize('Привет, optimized World') AS s WHERE (s LIKE 'hell%') OR (s LIKE '%привет%') OR (s ILIKE '%world') SETTINGS optimize_or_like_chain = 1;
+SELECT materialize('Привет, optimized World') AS s WHERE (s LIKE 'hell%') OR (s LIKE '%привет%') OR (s ILIKE '%world') SETTINGS optimize_or_like_chain = 1, allow_experimental_analyzer = 1;
+
 SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s LIKE '%привет%') OR (s ILIKE '%world') SETTINGS optimize_or_like_chain = 0;
+SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s LIKE '%привет%') OR (s ILIKE '%world') SETTINGS optimize_or_like_chain = 0, allow_experimental_analyzer = 1;
+
 SELECT materialize('Привет, optimized World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s LIKE 'world%') SETTINGS optimize_or_like_chain = 1;
+SELECT materialize('Привет, optimized World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s LIKE 'world%') SETTINGS optimize_or_like_chain = 1, allow_experimental_analyzer = 1;
+
 SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s LIKE 'world%') SETTINGS optimize_or_like_chain = 0;
+SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s LIKE 'world%') SETTINGS optimize_or_like_chain = 0, allow_experimental_analyzer = 1;
+
+SELECT materialize('Привет, World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%привет%') OR (s ILIKE 'world%') SETTINGS optimize_or_like_chain = 1, allow_experimental_analyzer = 1;
 
 -- Aliases
 
diff --git a/tests/queries/0_stateless/02226_or_like_combine.reference b/tests/queries/0_stateless/02226_or_like_combine.reference
deleted file mode 100644
index 93465f606fee..000000000000
--- a/tests/queries/0_stateless/02226_or_like_combine.reference
+++ /dev/null
@@ -1,40 +0,0 @@
-SELECT materialize(\'Привет, World\') AS s
-WHERE (s LIKE \'hell%\') OR (s ILIKE \'%привет%\') OR (s ILIKE \'world%\')
-SETTINGS optimize_or_like_chain = 0
-SELECT materialize(\'Привет, World\') AS s
-WHERE multiMatchAny(s, [\'^hell\', \'(?i)привет\', \'(?i)^world\']) OR false
-SETTINGS optimize_or_like_chain = 1
-SELECT
-    materialize(\'Привет, World\') AS s1,
-    materialize(\'Привет, World\') AS s2
-WHERE multiMatchAny(s1, [\'^hell\', \'(?i)^world\']) OR multiMatchAny(s2, [\'(?i)привет\'])
-SETTINGS optimize_or_like_chain = 1
-SELECT
-    materialize(\'Привет, World\') AS s1,
-    materialize(\'Привет, World\') AS s2
-WHERE (s1 LIKE \'hell%\') OR (s2 ILIKE \'%привет%\') OR (s1 ILIKE \'world%\')
-SETTINGS optimize_or_like_chain = 1
-SELECT
-    materialize(\'Привет, World\') AS s1,
-    materialize(\'Привет, World\') AS s2
-WHERE (s1 LIKE \'hell%\') OR (s2 ILIKE \'%привет%\') OR (s1 ILIKE \'world%\')
-SETTINGS optimize_or_like_chain = 1
-SELECT
-    materialize(\'Привет, World\') AS s1,
-    materialize(\'Привет, World\') AS s2
-WHERE (s1 LIKE \'hell%\') OR (s2 ILIKE \'%привет%\') OR (s1 ILIKE \'world%\')
-SETTINGS optimize_or_like_chain = 1
-SELECT
-    materialize(\'Привет, World\') AS s1,
-    materialize(\'Привет, World\') AS s2
-WHERE multiMatchAny(s1, [\'^hell\', \'(?i)^world\']) OR multiMatchAny(s2, [\'(?i)привет\']) OR (s1 = \'Привет\')
-SETTINGS optimize_or_like_chain = 1
-Привет, optimized World
-Привет, World
-Привет, optimized World
-Привет, World
-SELECT
-    (materialize(\'Привет, World\') AS s) LIKE \'hell%\' AS test,
-    s
-WHERE multiMatchAny(s, [\'^hell\', \'(?i)привет\', \'(?i)^world\']) OR false
-SETTINGS optimize_or_like_chain = 1
