{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 37415,
  "instance_id": "ClickHouse__ClickHouse-37415",
  "issue_numbers": [
    "37395"
  ],
  "base_commit": "3dfa30dedd65505b654a9f345448d54dabf24fce",
  "patch": "diff --git a/src/Functions/generateUUIDv4.cpp b/src/Functions/generateUUIDv4.cpp\nindex 659c4c2c7c61..e4ecf5358f91 100644\n--- a/src/Functions/generateUUIDv4.cpp\n+++ b/src/Functions/generateUUIDv4.cpp\n@@ -5,6 +5,11 @@\n namespace DB\n {\n \n+namespace ErrorCodes\n+{\n+    extern const int NUMBER_OF_ARGUMENTS_DOESNT_MATCH;\n+}\n+\n #define DECLARE_SEVERAL_IMPLEMENTATIONS(...) \\\n DECLARE_DEFAULT_CODE      (__VA_ARGS__) \\\n DECLARE_AVX2_SPECIFIC_CODE(__VA_ARGS__)\n@@ -23,10 +28,18 @@ class FunctionGenerateUUIDv4 : public IFunction\n \n     size_t getNumberOfArguments() const override { return 0; }\n \n+    bool isDeterministicInScopeOfQuery() const override { return false; }\n+    bool useDefaultImplementationForNulls() const override { return false; }\n     bool isSuitableForShortCircuitArgumentsExecution(const DataTypesWithConstInfo & /*arguments*/) const override { return false; }\n+    bool isVariadic() const override { return true; }\n \n-    DataTypePtr getReturnTypeImpl(const DataTypes &) const override\n+    DataTypePtr getReturnTypeImpl(const DataTypes & arguments) const override\n     {\n+        if (arguments.size() > 1)\n+            throw Exception(\"Number of arguments for function \" + getName() + \" doesn't match: passed \"\n+                + toString(arguments.size()) + \", should be 0 or 1.\",\n+                ErrorCodes::NUMBER_OF_ARGUMENTS_DOESNT_MATCH);\n+\n         return std::make_shared<DataTypeUUID>();\n     }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02310_generate_multi_columns_with_uuid.reference b/tests/queries/0_stateless/02310_generate_multi_columns_with_uuid.reference\nnew file mode 100644\nindex 000000000000..bb5ee5c21ebe\n--- /dev/null\n+++ b/tests/queries/0_stateless/02310_generate_multi_columns_with_uuid.reference\n@@ -0,0 +1,3 @@\n+0\n+0\n+1\ndiff --git a/tests/queries/0_stateless/02310_generate_multi_columns_with_uuid.sql b/tests/queries/0_stateless/02310_generate_multi_columns_with_uuid.sql\nnew file mode 100644\nindex 000000000000..3ab19446b3e2\n--- /dev/null\n+++ b/tests/queries/0_stateless/02310_generate_multi_columns_with_uuid.sql\n@@ -0,0 +1,5 @@\n+SELECT generateUUIDv4(1) = generateUUIDv4(2);\n+\n+SELECT generateUUIDv4() = generateUUIDv4(1);\n+\n+SELECT generateUUIDv4(1) = generateUUIDv4(1);\n",
  "problem_statement": "generateUUIDv4(tag argument)\nto make it possible to generate two columns with UUID.\r\n\r\n```\r\nselect generateUUIDv4(1), generateUUIDv4(2);\r\n\r\n\u250c\u2500generateUUIDv4(1)\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500generateUUIDv4(2)\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 bc834744-236b-4860-a961-4f8aafcae2b5 \u2502 37e7908c-e1d4-491f-b34d-dee0de7794df \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nthe same as rand() https://clickhouse.com/docs/en/sql-reference/functions/random-functions#rand\r\n\r\n_x \u2014 [Expression](https://clickhouse.com/docs/en/sql-reference/syntax#syntax-expressions) resulting in any of the [supported data types](https://clickhouse.com/docs/en/sql-reference/data-types/#data_types). The resulting value is discarded, but the expression itself if used for bypassing [common subexpression elimination](https://clickhouse.com/docs/en/sql-reference/functions/#common-subexpression-elimination) if the function is called multiple times in one query. Optional parameter._\r\n\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/issues/37366\n",
  "hints_text": "I'd like to do that.",
  "created_at": "2022-05-21T15:57:33Z"
}