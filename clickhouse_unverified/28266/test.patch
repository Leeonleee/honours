diff --git a/tests/queries/0_stateless/02014_storage_merge_order_by.reference b/tests/queries/0_stateless/02014_storage_merge_order_by.reference
new file mode 100644
index 000000000000..0bb816b39871
--- /dev/null
+++ b/tests/queries/0_stateless/02014_storage_merge_order_by.reference
@@ -0,0 +1,5 @@
+20
+20
+20
+20
+20
diff --git a/tests/queries/0_stateless/02014_storage_merge_order_by.sql b/tests/queries/0_stateless/02014_storage_merge_order_by.sql
new file mode 100644
index 000000000000..5b9789ae1d97
--- /dev/null
+++ b/tests/queries/0_stateless/02014_storage_merge_order_by.sql
@@ -0,0 +1,22 @@
+DROP TABLE IF EXISTS short;
+DROP TABLE IF EXISTS long;
+DROP TABLE IF EXISTS merged;
+
+CREATE TABLE short (e Int64, t DateTime ) ENGINE = MergeTree PARTITION BY e ORDER BY t;
+CREATE TABLE long (e Int64, t DateTime ) ENGINE = MergeTree PARTITION BY (e, toStartOfMonth(t)) ORDER BY t;
+
+insert into short select number % 11, toDateTime('2021-01-01 00:00:00') + number from numbers(1000);
+insert into long select number % 11, toDateTime('2021-01-01 00:00:00') + number from numbers(1000);
+
+CREATE TABLE merged as short ENGINE = Merge(currentDatabase(), 'short|long');
+
+select sum(e) from (select * from merged order by t limit 10) SETTINGS optimize_read_in_order = 0;
+
+select sum(e) from (select * from merged order by t limit 10) SETTINGS max_threads = 1;
+select sum(e) from (select * from merged order by t limit 10) SETTINGS max_threads = 3;
+select sum(e) from (select * from merged order by t limit 10) SETTINGS max_threads = 10;
+select sum(e) from (select * from merged order by t limit 10) SETTINGS max_threads = 50;
+
+DROP TABLE IF EXISTS short;
+DROP TABLE IF EXISTS long;
+DROP TABLE IF EXISTS merged;
