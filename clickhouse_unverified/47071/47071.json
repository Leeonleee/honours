{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 47071,
  "instance_id": "ClickHouse__ClickHouse-47071",
  "issue_numbers": [
    "46816"
  ],
  "base_commit": "5b423837306831277577cbb9a9aca9031f06421f",
  "patch": "diff --git a/src/IO/parseDateTimeBestEffort.cpp b/src/IO/parseDateTimeBestEffort.cpp\nindex d4a7d04540f7..b370bee6f3f1 100644\n--- a/src/IO/parseDateTimeBestEffort.cpp\n+++ b/src/IO/parseDateTimeBestEffort.cpp\n@@ -321,6 +321,11 @@ ReturnType parseDateTimeBestEffortImpl(\n                             return on_error(ErrorCodes::CANNOT_PARSE_DATETIME, \"Cannot read DateTime: unexpected number of decimal digits after hour and minute: {}\", num_digits);\n                     }\n                 }\n+                else if (checkChar(',', in))\n+                {\n+                    if (month && !day_of_month)\n+                        day_of_month = hour_or_day_of_month_or_month;\n+                }\n                 else if (checkChar('/', in) || checkChar('.', in) || checkChar('-', in))\n                 {\n                     if (day_of_month)\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01442_date_time_with_params.reference b/tests/queries/0_stateless/01442_date_time_with_params.reference\nindex bc819d5f8fce..b5478665a1c3 100644\n--- a/tests/queries/0_stateless/01442_date_time_with_params.reference\n+++ b/tests/queries/0_stateless/01442_date_time_with_params.reference\n@@ -15,6 +15,9 @@ parseDateTimeBestEffort\n 2020-05-14 03:37:03.253\tDateTime64(3, \\'UTC\\')\n 2021-12-28 00:00:00.123\tDateTime64(3, \\'UTC\\')\n 2021-12-28 00:00:00\tDateTime(\\'UTC\\')\n+2021-12-15 00:00:00\tDateTime\n+2021-12-15 00:00:00\tDateTime(\\'UTC\\')\n+2021-12-15 00:00:00.000\tDateTime64(3, \\'UTC\\')\n parseDateTimeBestEffortOrNull\n \\N\tNullable(DateTime64(3))\n 2020-05-14 03:37:03.000\tNullable(DateTime64(3, \\'UTC\\'))\n@@ -29,6 +32,9 @@ parseDateTimeBestEffortOrNull\n 2020-05-14 03:37:03.253\tNullable(DateTime64(3, \\'UTC\\'))\n 2021-12-28 00:00:00.123\tNullable(DateTime64(3, \\'UTC\\'))\n 2021-12-28 00:00:00\tNullable(DateTime(\\'UTC\\'))\n+2021-12-15 00:00:00\tNullable(DateTime)\n+2021-12-15 00:00:00\tNullable(DateTime(\\'UTC\\'))\n+2021-12-15 00:00:00.000\tNullable(DateTime64(3, \\'UTC\\'))\n parseDateTimeBestEffortOrZero\n 1970-01-01 00:00:00.000\tDateTime64(3, \\'UTC\\')\n 2020-05-14 03:37:03.000\tDateTime64(3, \\'UTC\\')\n@@ -43,6 +49,9 @@ parseDateTimeBestEffortOrZero\n 2020-05-14 03:37:03.253\tDateTime64(3, \\'UTC\\')\n 2021-12-28 00:00:00.123\tDateTime64(3, \\'UTC\\')\n 2021-12-28 00:00:00\tDateTime(\\'UTC\\')\n+2021-12-15 00:00:00\tDateTime\n+2021-12-15 00:00:00\tDateTime(\\'UTC\\')\n+2021-12-15 00:00:00.000\tDateTime64(3, \\'UTC\\')\n parseDateTime32BestEffort\n 2020-05-14 03:37:03\tDateTime(\\'UTC\\')\n 2020-05-14 03:37:03\tDateTime(\\'UTC\\')\n@@ -55,6 +64,8 @@ parseDateTime32BestEffort\n 2020-05-14 06:37:03\tDateTime(\\'Europe/Minsk\\')\n 2020-05-14 03:37:03\tDateTime(\\'UTC\\')\n 2021-12-28 00:00:00\tDateTime(\\'UTC\\')\n+2021-12-15 00:00:00\tDateTime\n+2021-12-15 00:00:00\tDateTime(\\'UTC\\')\n parseDateTime32BestEffortOrNull\n \\N\tNullable(DateTime)\n 2020-05-14 03:37:03\tNullable(DateTime(\\'UTC\\'))\n@@ -68,6 +79,8 @@ parseDateTime32BestEffortOrNull\n 2020-05-14 06:37:03\tNullable(DateTime(\\'Europe/Minsk\\'))\n 2020-05-14 03:37:03\tNullable(DateTime(\\'UTC\\'))\n 2021-12-28 00:00:00\tNullable(DateTime(\\'UTC\\'))\n+2021-12-15 00:00:00\tNullable(DateTime)\n+2021-12-15 00:00:00\tNullable(DateTime(\\'UTC\\'))\n parseDateTime32BestEffortOrZero\n 1970-01-01 00:00:00\tDateTime(\\'UTC\\')\n 2020-05-14 03:37:03\tDateTime(\\'UTC\\')\n@@ -81,3 +94,5 @@ parseDateTime32BestEffortOrZero\n 2020-05-14 06:37:03\tDateTime(\\'Europe/Minsk\\')\n 2020-05-14 03:37:03\tDateTime(\\'UTC\\')\n 2021-12-28 00:00:00\tDateTime(\\'UTC\\')\n+2021-12-15 00:00:00\tDateTime\n+2021-12-15 00:00:00\tDateTime(\\'UTC\\')\ndiff --git a/tests/queries/0_stateless/01442_date_time_with_params.sql b/tests/queries/0_stateless/01442_date_time_with_params.sql\nindex aeb9aa597efc..6b32ee4919de 100644\n--- a/tests/queries/0_stateless/01442_date_time_with_params.sql\n+++ b/tests/queries/0_stateless/01442_date_time_with_params.sql\n@@ -26,6 +26,9 @@ SELECT parseDateTimeBestEffort('2020-05-14T03:37:03.253184Z', 3, 'Europe/Minsk')\n SELECT parseDateTimeBestEffort(materialize('2020-05-14T03:37:03.253184Z'), 3, 'UTC') AS a, toTypeName(a);\n SELECT parseDateTimeBestEffort('1640649600123', 3, 'UTC') AS a, toTypeName(a);\n SELECT parseDateTimeBestEffort('1640649600123', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffort('Dec 15, 2021') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffort('Dec 15, 2021', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffort('Dec 15, 2021', 3, 'UTC') AS a, toTypeName(a);\n \n SELECT 'parseDateTimeBestEffortOrNull';\n SELECT parseDateTimeBestEffortOrNull('<Empty>', 3) AS a, toTypeName(a);\n@@ -41,6 +44,9 @@ SELECT parseDateTimeBestEffortOrNull('2020-05-14T03:37:03.253184Z', 3, 'Europe/M\n SELECT parseDateTimeBestEffortOrNull(materialize('2020-05-14T03:37:03.253184Z'), 3, 'UTC') AS a, toTypeName(a);\n SELECT parseDateTimeBestEffortOrNull('1640649600123', 3, 'UTC') AS a, toTypeName(a);\n SELECT parseDateTimeBestEffortOrNull('1640649600123', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffortOrNull('Dec 15, 2021') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffortOrNull('Dec 15, 2021', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffortOrNull('Dec 15, 2021', 3, 'UTC') AS a, toTypeName(a);\n \n SELECT 'parseDateTimeBestEffortOrZero';\n SELECT parseDateTimeBestEffortOrZero('<Empty>', 3, 'UTC') AS a, toTypeName(a);\n@@ -56,6 +62,9 @@ SELECT parseDateTimeBestEffortOrZero('2020-05-14T03:37:03.253184Z', 3, 'Europe/M\n SELECT parseDateTimeBestEffortOrZero(materialize('2020-05-14T03:37:03.253184Z'), 3, 'UTC') AS a, toTypeName(a);\n SELECT parseDateTimeBestEffortOrZero('1640649600123', 3, 'UTC') AS a, toTypeName(a);\n SELECT parseDateTimeBestEffortOrZero('1640649600123', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffortOrZero('Dec 15, 2021') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffortOrZero('Dec 15, 2021', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTimeBestEffortOrZero('Dec 15, 2021', 3, 'UTC') AS a, toTypeName(a);\n \n SELECT 'parseDateTime32BestEffort';\n SELECT parseDateTime32BestEffort('<Empty>') AS a, toTypeName(a); -- {serverError 41}\n@@ -70,6 +79,8 @@ SELECT parseDateTime32BestEffort('2020-05-14T03:37:03.253184Z', 'UTC') AS a, toT\n SELECT parseDateTime32BestEffort('2020-05-14T03:37:03.253184Z', 'Europe/Minsk') AS a, toTypeName(a);\n SELECT parseDateTime32BestEffort(materialize('2020-05-14T03:37:03.253184Z'), 'UTC') AS a, toTypeName(a);\n SELECT parseDateTime32BestEffort('1640649600123', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTime32BestEffort('Dec 15, 2021') AS a, toTypeName(a);\n+SELECT parseDateTime32BestEffort('Dec 15, 2021', 'UTC') AS a, toTypeName(a);\n \n SELECT 'parseDateTime32BestEffortOrNull';\n SELECT parseDateTime32BestEffortOrNull('<Empty>') AS a, toTypeName(a);\n@@ -84,6 +95,8 @@ SELECT parseDateTime32BestEffortOrNull('2020-05-14T03:37:03.253184Z', 'UTC') AS\n SELECT parseDateTime32BestEffortOrNull('2020-05-14T03:37:03.253184Z', 'Europe/Minsk') AS a, toTypeName(a);\n SELECT parseDateTime32BestEffortOrNull(materialize('2020-05-14T03:37:03.253184Z'), 'UTC') AS a, toTypeName(a);\n SELECT parseDateTime32BestEffortOrNull('1640649600123', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTime32BestEffortOrNull('Dec 15, 2021') AS a, toTypeName(a);\n+SELECT parseDateTime32BestEffortOrNull('Dec 15, 2021', 'UTC') AS a, toTypeName(a);\n \n SELECT 'parseDateTime32BestEffortOrZero';\n SELECT parseDateTime32BestEffortOrZero('<Empty>', 'UTC') AS a, toTypeName(a);\n@@ -98,5 +111,7 @@ SELECT parseDateTime32BestEffortOrZero('2020-05-14T03:37:03.253184Z', 'UTC') AS\n SELECT parseDateTime32BestEffortOrZero('2020-05-14T03:37:03.253184Z', 'Europe/Minsk') AS a, toTypeName(a);\n SELECT parseDateTime32BestEffortOrZero(materialize('2020-05-14T03:37:03.253184Z'), 'UTC') AS a, toTypeName(a);\n SELECT parseDateTime32BestEffortOrZero('1640649600123', 'UTC') AS a, toTypeName(a);\n+SELECT parseDateTime32BestEffortOrZero('Dec 15, 2021') AS a, toTypeName(a);\n+SELECT parseDateTime32BestEffortOrZero('Dec 15, 2021', 'UTC') AS a, toTypeName(a);\n \n DROP TABLE IF EXISTS test;\n",
  "problem_statement": "Dec 15, 2021 support for parseDateTimeBestEffort function\n**Use case**\r\n```\r\nSELECT parseDateTimeBestEffort('Dec 15, 2021')\r\n\r\nQuery id: b849327e-3893-4a97-9a6a-da59b61f4a7a\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nReceived exception from server (version 22.13.1):\r\nCode: 6. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse string 'Dec 15, 2021' as DateTime: syntax error at position 6 (parsed just 'Dec 15'): While processing parseDateTimeBestEffort('Dec 15, 2021'). (CANNOT_PARSE_TEXT)\r\n\r\nSELECT parseDateTimeBestEffort('Dec 15 2021')\r\n\r\nQuery id: 988b6d95-d22c-4882-a835-07dc8261a7bb\r\n\r\n\u250c\u2500parseDateTimeBestEffort('Dec 15 2021')\u2500\u2510\r\n\u2502                    2021-12-15 00:00:00 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.001 sec.\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2023-03-01T13:12:41Z"
}