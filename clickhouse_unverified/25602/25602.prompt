You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
query_log doesn't explain the reason of insert query slowness
- One insert query with 28950 rows executed for more than 9 seconds and the ProfileEvents can not show the bottleneck.

```sql
Row 2:
──────
type:                 2
event_date:           2020-03-31
event_time:           2020-03-31 14:33:30
query_start_time:     2020-03-31 14:33:21
query_duration_ms:    9191
read_rows:            0
read_bytes:           0
written_rows:         28950
written_bytes:        95706647
result_rows:          28950
result_bytes:         95706647
memory_usage:         343670784
query:                insert into xxxxxxxxxxxx
exception:
stack_trace:
is_initial_query:     1
user:                 ck_rw
query_id:             5b6eda08-51a8-4b90-b1f2-27ac6cfcb14f
address:              ��
�
port:                 58130
initial_user:         xxxx
initial_query_id:     5b6eda08-51a8-4b90-b1f2-27ac6cfcb14f
initial_address:      ��
�
initial_port:         58130
interface:            1
os_user:              db8b6be1be89
client_hostname:      db8b6be1be89
client_name:          Golang SQLDriver
client_revision:      54213
client_version_major: 1
client_version_minor: 1
client_version_patch: 54213
http_method:          0
http_user_agent:
quota_key:
revision:             54419
thread_numbers:       [55092]
ProfileEvents.Names:  ['Query','InsertQuery','FileOpen','WriteBufferFromFileDescriptorWrite','WriteBufferFromFileDescriptorWriteBytes','IOBufferAllocs','IOBufferAllocBytes','ArenaAllocChunks','ArenaAllocBytes','FunctionExecute','CreatedWriteBufferOrdinary','DiskWriteElapsedMicroseconds','NetworkReceiveElapsedMicroseconds','NetworkSendElapsedMicroseconds','InsertedRows','InsertedBytes','MergeTreeDataWriterRows','MergeTreeDataWriterUncompressedBytes','MergeTreeDataWriterCompressedBytes','MergeTreeDataWriterBlocks','ContextLock','RWLockAcquiredReadLocks','RealTimeMicroseconds','UserTimeMicroseconds','SystemTimeMicroseconds','SoftPageFaults']
ProfileEvents.Values: [1,1,90,114,30593676,263,91746153,2,8192,22,42,50421,652895,11,28950,95706647,28950,103371082,30589926,1,7,2,9191763,775680,519470,80599]
Settings.Names:       ['max_threads','use_uncompressed_cache','background_pool_size','distributed_aggregation_memory_efficient','skip_unavailable_shards','force_index_by_date','log_queries','max_rows_to_read','max_rows_to_group_by','max_bytes_before_external_group_by','max_rows_to_sort','max_execution_time','max_columns_to_read','readonly','max_rows_to_transfer','max_rows_in_distinct','max_memory_usage','max_memory_usage_for_user','allow_experimental_data_skipping_indices']
Settings.Values:      ['48','1','64','0','1','0','1','1000000000000','1000000000000','600000000000','1000000000000','600','200','0','1000000000000','1000000000000','68719476736','68719476736','1']

2 rows in set. Elapsed: 0.444 sec. Processed 25.40 million rows, 1.14 GB (57.27 million rows/s., 2.58 GB/s.)

```



```sql
SELECT
    pe.Names,
    pe.Values
FROM system.query_log_all
ARRAY JOIN ProfileEvents AS pe
WHERE (event_date = '2020-03-31') AND (type = 2) AND (query_id = '5b6eda08-51a8-4b90-b1f2-27ac6cfcb14f')

┌─pe.Names────────────────────────────────┬─pe.Values─┐
│ Query                                   │         1 │
│ InsertQuery                             │         1 │
│ FileOpen                                │        90 │
│ WriteBufferFromFileDescriptorWrite      │       114 │
│ WriteBufferFromFileDescriptorWriteBytes │  30593676 │
│ IOBufferAllocs                          │       263 │
│ IOBufferAllocBytes                      │  91746153 │
│ ArenaAllocChunks                        │         2 │
│ ArenaAllocBytes                         │      8192 │
│ FunctionExecute                         │        22 │
│ CreatedWriteBufferOrdinary              │        42 │
│ DiskWriteElapsedMicroseconds            │     50421 │
│ NetworkReceiveElapsedMicroseconds       │    652895 │
│ NetworkSendElapsedMicroseconds          │        11 │
│ InsertedRows                            │     28950 │
│ InsertedBytes                           │  95706647 │
│ MergeTreeDataWriterRows                 │     28950 │
│ MergeTreeDataWriterUncompressedBytes    │ 103371082 │
│ MergeTreeDataWriterCompressedBytes      │  30589926 │
│ MergeTreeDataWriterBlocks               │         1 │
│ ContextLock                             │         7 │
│ RWLockAcquiredReadLocks                 │         2 │
│ RealTimeMicroseconds                    │   9191763 │
│ UserTimeMicroseconds                    │    775680 │
│ SystemTimeMicroseconds                  │    519470 │
│ SoftPageFaults                          │     80599 │
└─────────────────────────────────────────┴───────────┘




SELECT
    pe.Names,
    pe.Values / 1000000
FROM system.query_log_all
ARRAY JOIN ProfileEvents AS pe
WHERE (event_date = '2020-03-31') AND (type = 2) AND (query_id = '5b6eda08-51a8-4b90-b1f2-27ac6cfcb14f') AND (pe.Names LIKE '%seconds%')

┌─pe.Names──────────────────────────┬─divide(pe.Values, 1000000)─┐
│ DiskWriteElapsedMicroseconds      │                   0.050421 │
│ NetworkReceiveElapsedMicroseconds │                   0.652895 │
│ NetworkSendElapsedMicroseconds    │                   0.000011 │
│ RealTimeMicroseconds              │                   9.191763 │
│ UserTimeMicroseconds              │                    0.77568 │
│ SystemTimeMicroseconds            │                    0.51947 │
└───────────────────────────────────┴────────────────────────────┘

```

- It seems more info should be recorded, like waiting for something.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
