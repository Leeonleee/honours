{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 11537,
  "instance_id": "ClickHouse__ClickHouse-11537",
  "issue_numbers": [
    "10403"
  ],
  "base_commit": "09b9a308cbf5fb20870e94eb72918c4cd873ce8d",
  "patch": "diff --git a/src/TableFunctions/parseColumnsListForTableFunction.cpp b/src/TableFunctions/parseColumnsListForTableFunction.cpp\nindex 8eea3edf9bd5..5221d96e0861 100644\n--- a/src/TableFunctions/parseColumnsListForTableFunction.cpp\n+++ b/src/TableFunctions/parseColumnsListForTableFunction.cpp\n@@ -1,5 +1,6 @@\n #include <Parsers/ASTExpressionList.h>\n #include <Parsers/ParserCreateQuery.h>\n+#include <Parsers/parseQuery.h>\n #include <Interpreters/InterpreterCreateQuery.h>\n #include <Interpreters/Context.h>\n #include <TableFunctions/parseColumnsListForTableFunction.h>\n@@ -11,27 +12,20 @@ namespace DB\n namespace ErrorCodes\n {\n     extern const int LOGICAL_ERROR;\n-    extern const int SYNTAX_ERROR;\n }\n \n ColumnsDescription parseColumnsListFromString(const std::string & structure, const Context & context)\n {\n-    Expected expected;\n-\n-    Tokens tokens(structure.c_str(), structure.c_str() + structure.size());\n-    IParser::Pos token_iterator(tokens, context.getSettingsRef().max_parser_depth);\n-\n     ParserColumnDeclarationList parser;\n-    ASTPtr columns_list_raw;\n+    const Settings & settings = context.getSettingsRef();\n \n-    if (!parser.parse(token_iterator, columns_list_raw, expected))\n-        throw Exception(\"Cannot parse columns declaration list.\", ErrorCodes::SYNTAX_ERROR);\n+    ASTPtr columns_list_raw = parseQuery(parser, structure, \"columns declaration list\", settings.max_query_size, settings.max_parser_depth);\n \n     auto * columns_list = dynamic_cast<ASTExpressionList *>(columns_list_raw.get());\n     if (!columns_list)\n         throw Exception(\"Could not cast AST to ASTExpressionList\", ErrorCodes::LOGICAL_ERROR);\n \n-    return InterpreterCreateQuery::getColumnsDescription(*columns_list, context, !context.getSettingsRef().allow_suspicious_codecs);\n+    return InterpreterCreateQuery::getColumnsDescription(*columns_list, context, !settings.allow_suspicious_codecs);\n }\n \n }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01087_table_function_generate.sql b/tests/queries/0_stateless/01087_table_function_generate.sql\nindex 96db6803a47c..05f03a5a4e62 100644\n--- a/tests/queries/0_stateless/01087_table_function_generate.sql\n+++ b/tests/queries/0_stateless/01087_table_function_generate.sql\n@@ -33,11 +33,11 @@ LIMIT 10;\n SELECT '-';\n SELECT\n   toTypeName(i)s\n-FROM generateRandom('i Nullable(Enum16(\\'h\\' = 1, \\'w\\' = 5 , \\'o\\' = -200)))')\n+FROM generateRandom('i Nullable(Enum16(\\'h\\' = 1, \\'w\\' = 5 , \\'o\\' = -200))')\n LIMIT 1;\n SELECT\n   i\n-FROM generateRandom('i Nullable(Enum16(\\'h\\' = 1, \\'w\\' = 5 , \\'o\\' = -200)))', 1, 10, 10)\n+FROM generateRandom('i Nullable(Enum16(\\'h\\' = 1, \\'w\\' = 5 , \\'o\\' = -200))', 1, 10, 10)\n LIMIT 10;\n SELECT '-';\n SELECT\n",
  "problem_statement": "Cannot parse columns declaration list\n**How to reproduce**\r\n``` sql\r\nCREATE TABLE tmp1\r\n(\r\n    `WatchID` UInt64,\r\n    `JavaEnable` UInt8,\r\n    `Title` String,\r\n    `GoodEvent` Int16,\r\n    `EventTime` DateTime,\r\n    `EventDate` Date,\r\n    `CounterID` UInt32,\r\n    `ClientIP` UInt32,\r\n    `ClientIP6` FixedString(16),\r\n    `RegionID` UInt32,\r\n    `UserID` UInt64,\r\n    `CounterClass` Int8,\r\n    `OS` UInt8,\r\n    `UserAgent` UInt8,\r\n    `URL` String,\r\n    `Referer` String,\r\n    `URLDomain` String,\r\n    `RefererDomain` String,\r\n    `Refresh` UInt8,\r\n    `IsRobot` UInt8,\r\n    `RefererCategories` Array(UInt16),\r\n    `URLCategories` Array(UInt16),\r\n    `URLRegions` Array(UInt32),\r\n    `RefererRegions` Array(UInt32),\r\n    `ResolutionWidth` UInt16,\r\n    `ResolutionHeight` UInt16,\r\n    `ResolutionDepth` UInt8,\r\n    `FlashMajor` UInt8,\r\n    `FlashMinor` UInt8,\r\n    `FlashMinor2` String,\r\n    `NetMajor` UInt8,\r\n    `NetMinor` UInt8,\r\n    `UserAgentMajor` UInt16,\r\n    `UserAgentMinor` FixedString(2),\r\n    `CookieEnable` UInt8,\r\n    `JavascriptEnable` UInt8,\r\n    `IsMobile` UInt8,\r\n    `MobilePhone` UInt8,\r\n    `MobilePhoneModel` String,\r\n    `Params` String,\r\n    `IPNetworkID` UInt32,\r\n    `TraficSourceID` Int8,\r\n    `SearchEngineID` UInt16,\r\n    `SearchPhrase` String,\r\n    `AdvEngineID` UInt8,\r\n    `IsArtifical` UInt8,\r\n    `WindowClientWidth` UInt16,\r\n    `WindowClientHeight` UInt16,\r\n    `ClientTimeZone` Int16,\r\n    `ClientEventTime` DateTime,\r\n    `SilverlightVersion1` UInt8,\r\n    `SilverlightVersion2` UInt8,\r\n    `SilverlightVersion3` UInt32,\r\n    `SilverlightVersion4` UInt16,\r\n    `PageCharset` String,\r\n    `CodeVersion` UInt32,\r\n    `IsLink` UInt8,\r\n    `IsDownload` UInt8,\r\n    `IsNotBounce` UInt8,\r\n    `FUniqID` UInt64,\r\n    `HID` UInt32,\r\n    `IsOldCounter` UInt8,\r\n    `IsEvent` UInt8,\r\n    `IsParameter` UInt8,\r\n    `DontCountHits` UInt8,\r\n    `WithHash` UInt8,\r\n    `HitColor` FixedString(1),\r\n    `UTCEventTime` DateTime,\r\n    `Age` UInt8,\r\n    `Sex` UInt8,\r\n    `Income` UInt8,\r\n    `Interests` UInt16,\r\n    `Robotness` UInt8,\r\n    `GeneralInterests` Array(UInt16),\r\n    `RemoteIP` UInt32,\r\n    `RemoteIP6` FixedString(16),\r\n    `WindowName` Int32,\r\n    `OpenerName` Int32,\r\n    `HistoryLength` Int16,\r\n    `BrowserLanguage` FixedString(2),\r\n    `BrowserCountry` FixedString(2),\r\n    `SocialNetwork` String,\r\n    `SocialAction` String,\r\n    `HTTPError` UInt16,\r\n    `SendTiming` Int32,\r\n    `DNSTiming` Int32,\r\n    `ConnectTiming` Int32,\r\n    `ResponseStartTiming` Int32,\r\n    `ResponseEndTiming` Int32,\r\n    `FetchTiming` Int32,\r\n    `RedirectTiming` Int32,\r\n    `DOMInteractiveTiming` Int32,\r\n    `DOMContentLoadedTiming` Int32,\r\n    `DOMCompleteTiming` Int32,\r\n    `LoadEventStartTiming` Int32,\r\n    `LoadEventEndTiming` Int32,\r\n    `NSToDOMContentLoadedTiming` Int32,\r\n    `FirstPaintTiming` Int32,\r\n    `RedirectCount` Int8,\r\n    `SocialSourceNetworkID` UInt8,\r\n    `SocialSourcePage` String,\r\n    `ParamPrice` Int64,\r\n    `ParamOrderID` String,\r\n    `ParamCurrency` FixedString(3),\r\n    `ParamCurrencyID` UInt16,\r\n    `GoalsReached` Array(UInt32),\r\n    `OpenstatServiceName` String,\r\n    `OpenstatCampaignID` String,\r\n    `OpenstatAdID` String,\r\n    `OpenstatSourceID` String,\r\n    `UTMSource` String,\r\n    `UTMMedium` String,\r\n    `UTMCampaign` String,\r\n    `UTMContent` String,\r\n    `UTMTerm` String,\r\n    `FromTag` String,\r\n    `HasGCLID` UInt8,\r\n    `RefererHash` UInt64,\r\n    `URLHash` UInt64,\r\n    `CLID` UInt32,\r\n    `YCLID` UInt64,\r\n    `ShareService` String,\r\n    `ShareURL` String,\r\n    `ShareTitle` String,\r\n    `ParsedParams.Key1` Array(String),\r\n    `ParsedParams.Key2` Array(String),\r\n    `ParsedParams.Key3` Array(String),\r\n    `ParsedParams.Key4` Array(String),\r\n    `ParsedParams.Key5` Array(String),\r\n    `ParsedParams.ValueDouble` Array(Float64),\r\n    `IslandID` FixedString(16),\r\n    `RequestNum` UInt32,\r\n    `RequestTry` UInt8\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY toYYYYMM(EventDate)\r\nORDER BY (CounterID, EventDate, intHash32(UserID))\r\nSAMPLE BY intHash32(UserID)\r\nSETTINGS index_granularity = 8192, enable_mixed_granularity_parts = 1, index_granularity_bytes = 0\r\n\r\nINSERT INTO tmp1 SELECT *\r\nFROM generateRandom('(`WatchID` UInt64, `JavaEnable` UInt8, `Title` String, `GoodEvent` Int16, `EventTime` DateTime, `EventDate` Date, `CounterID` UInt32, `ClientIP` UInt32, `ClientIP6` FixedString(16), `RegionID` UInt32, `UserID` UInt64, `CounterClass` Int8, `OS` UInt8, `UserAgent` UInt8, `URL` String, `Referer` String, `URLDomain` String, `RefererDomain` String, `Refresh` UInt8, `IsRobot` UInt8, `RefererCategories` Array(UInt16), `URLCategories` Array(UInt16), `URLRegions` Array(UInt32), `RefererRegions` Array(UInt32), `ResolutionWidth` UInt16, `ResolutionHeight` UInt16, `ResolutionDepth` UInt8, `FlashMajor` UInt8, `FlashMinor` UInt8, `FlashMinor2` String, `NetMajor` UInt8, `NetMinor` UInt8, `UserAgentMajor` UInt16, `UserAgentMinor` FixedString(2), `CookieEnable` UInt8, `JavascriptEnable` UInt8, `IsMobile` UInt8, `MobilePhone` UInt8, `MobilePhoneModel` String, `Params` String, `IPNetworkID` UInt32, `TraficSourceID` Int8, `SearchEngineID` UInt16, `SearchPhrase` String, `AdvEngineID` UInt8, `IsArtifical` UInt8, `WindowClientWidth` UInt16, `WindowClientHeight` UInt16, `ClientTimeZone` Int16, `ClientEventTime` DateTime, `SilverlightVersion1` UInt8, `SilverlightVersion2` UInt8, `SilverlightVersion3` UInt32, `SilverlightVersion4` UInt16, `PageCharset` String, `CodeVersion` UInt32, `IsLink` UInt8, `IsDownload` UInt8, `IsNotBounce` UInt8, `FUniqID` UInt64, `HID` UInt32, `IsOldCounter` UInt8, `IsEvent` UInt8, `IsParameter` UInt8, `DontCountHits` UInt8, `WithHash` UInt8, `HitColor` FixedString(1), `UTCEventTime` DateTime, `Age` UInt8, `Sex` UInt8, `Income` UInt8, `Interests` UInt16, `Robotness` UInt8, `GeneralInterests` Array(UInt16), `RemoteIP` UInt32, `RemoteIP6` FixedString(16), `WindowName` Int32, `OpenerName` Int32, `HistoryLength` Int16, `BrowserLanguage` FixedString(2), `BrowserCountry` FixedString(2), `SocialNetwork` String, `SocialAction` String, `HTTPError` UInt16, `SendTiming` Int32, `DNSTiming` Int32, `ConnectTiming` Int32, `ResponseStartTiming` Int32, `ResponseEndTiming` Int32, `FetchTiming` Int32, `RedirectTiming` Int32, `DOMInteractiveTiming` Int32, `DOMContentLoadedTiming` Int32, `DOMCompleteTiming` Int32, `LoadEventStartTiming` Int32, `LoadEventEndTiming` Int32, `NSToDOMContentLoadedTiming` Int32, `FirstPaintTiming` Int32, `RedirectCount` Int8, `SocialSourceNetworkID` UInt8, `SocialSourcePage` String, `ParamPrice` Int64, `ParamOrderID` String, `ParamCurrency` FixedString(3), `ParamCurrencyID` UInt16, `GoalsReached` Array(UInt32), `OpenstatServiceName` String, `OpenstatCampaignID` String, `OpenstatAdID` String, `OpenstatSourceID` String, `UTMSource` String, `UTMMedium` String, `UTMCampaign` String, `UTMContent` String, `UTMTerm` String, `FromTag` String, `HasGCLID` UInt8, `RefererHash` UInt64, `URLHash` UInt64, `CLID` UInt32, `YCLID` UInt64, `ShareService` String, `ShareURL` String, `ShareTitle` String, `ParsedParams.Key1` Array(String), `ParsedParams.Key2` Array(String), `ParsedParams.Key3` Array(String), `ParsedParams.Key4` Array(String), `ParsedParams.Key5` Array(String), `ParsedParams.ValueDouble` Array(Float64), `IslandID` FixedString(16), `RequestNum` UInt32, `RequestTry` UInt8)', 1, 10, 2)\r\nLIMIT 100\r\n```\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Error message and/or stacktrace**\r\n``` \r\n[qoega-qyp.sas.yp-c.yandex.net] 2020.04.21 16:40:57.582602 [ 52745 ] {f89ccdf3-f3c5-4e34-9c68-0cc78389dbe4} <Error> executeQuery: Code: 62, e.displayText() = DB::Exception: Cannot parse columns declaration list. (version 20.4.1.1) (from [::1]:63504) (in query: INSERT INTO tmp1 SELECT * FROM generateRandom('(`WatchID` UInt64, `JavaEnable` UInt8, `Title` String, `GoodEvent` Int16, `EventTime` DateTime, `EventDate` Date, `CounterID` UInt32, `ClientIP` UInt32, `ClientIP6` FixedString(16), `RegionID` UInt32, `UserID` UInt64, `CounterClass` Int8, `OS` UInt8, `UserAgent` UInt8, `URL` String, `Referer` String, `URLDomain` String, `RefererDomain` String, `Refresh` UInt8, `IsRobot` UInt8, `RefererCategories` Array(UInt16), `URLCategories` Array(UInt16), `URLRegions` Array(UInt32), `RefererRegions` Array(UInt32), `ResolutionWidth` UInt16, `ResolutionHeight` UInt16, `ResolutionDepth` UInt8, `FlashMajor` UInt8, `FlashMinor` UInt8, `FlashMinor2` String, `NetMajor` UInt8, `NetMinor` UInt8, `UserAgentMajor` UInt16, `UserAgentMinor` FixedString(2), `CookieEnable` UInt8, `JavascriptEnable` UInt8, `IsMobile` UInt8, `MobilePhone` UInt8, `MobilePhoneModel` String, `Params` String, `IPNetworkID` UInt32, `TraficSourceID` Int8, `SearchEngineID` UInt16, `SearchPhrase` String, `AdvEngineID` UInt8, `IsArtifical` UInt8, `WindowClientWidth` UInt16, `WindowClientHeight` UInt16, `ClientTimeZone` Int16, `ClientEventTime` DateTime, `SilverlightVersion1` UInt8, `SilverlightVersion2` UInt8, `SilverlightVersion3` UInt32, `SilverlightVersion4` UInt16, `PageCharset` String, `CodeVersion` UInt32, `IsLink` UInt8, `IsDownload` UInt8, `IsNotBounce` UInt8, `FUniqID` UInt64, `HID` UInt32, `IsOldCounter` UInt8, `IsEvent` UInt8, `IsParameter` UInt8, `DontCountHits` UInt8, `WithHash` UInt8, `HitColor` FixedString(1), `UTCEventTime` DateTime, `Age` UInt8, `Sex` UInt8, `Income` UInt8, `Interests` UInt16, `Robotness` UInt8, `GeneralInterests` Array(UInt16), `RemoteIP` UInt32, `RemoteIP6` FixedString(16), `WindowName` Int32, `OpenerName` Int32, `HistoryLength` Int16, `BrowserLanguage` FixedString(2), `BrowserCountry` FixedString(2), `SocialNetwork` String, `SocialAction` String, `HTTPError` UInt16, `SendTiming` Int32, `DNSTiming` Int32, `ConnectTiming` Int32, `ResponseStartTiming` Int32, `ResponseEndTiming` Int32, `FetchTiming` Int32, `RedirectTiming` Int32, `DOMInteractiveTiming` Int32, `DOMContentLoadedTiming` Int32, `DOMCompleteTiming` Int32, `LoadEventStartTiming` Int32, `LoadEventEndTiming` Int32, `NSToDOMContentLoadedTiming` Int32, `FirstPaintTiming` Int32, `RedirectCount` Int8, `SocialSourceNetworkID` UInt8, `SocialSourcePage` String, `ParamPrice` Int64, `ParamOrderID` String, `ParamCurrency` FixedString(3), `ParamCurrencyID` UInt16, `GoalsReached` Array(UInt32), `OpenstatServiceName` String, `OpenstatCampaignID` String, `OpenstatAdID` String, `OpenstatSourceID` String, `UTMSource` String, `UTMMedium` String, `UTMCampaign` String, `UTMContent` String, `UTMTerm` String, `FromTag` String, `HasGCLID` UInt8, `RefererHash` UInt64, `URLHash` UInt64, `CLID` UInt32, `YCLID` UInt64, `ShareService` String, `ShareURL` String, `ShareTitle` String, `ParsedParams.Key1` Array(String), `ParsedParams.Key2` Array(String), `ParsedParams.Key3` Array(String), `ParsedParams.Key4` Array(String), `ParsedParams.Key5` Array(String), `ParsedParams.ValueDouble` Array(Float64), `IslandID` FixedString(16), `RequestNum` UInt32, `RequestTry` UInt8)', 1, 10, 2) LIMIT 100), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/qoega/clickhouse/build/../contrib/libcxx/include/exception:129: std::exception::capture() @ 0xd216778 in /home/qoega/clickhouse/build/programs/clickhouse\r\n1. /home/qoega/clickhouse/build/../contrib/libcxx/include/exception:109: std::exception::exception() @ 0xd216700 in /home/qoega/clickhouse/build/programs/clickhouse\r\n2. /home/qoega/clickhouse/build/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x29e0d776 in /home/qoega/clickhouse/build/programs/clickhouse\r\n3. /home/qoega/clickhouse/build/../src/Common/Exception.cpp:32: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x202b2ef7 in /home/qoega/clickhouse/build/programs/clickhouse\r\n4. /home/qoega/clickhouse/build/../src/TableFunctions/parseColumnsListForTableFunction.cpp:28: DB::parseColumnsListFromString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context const&) @ 0x1b7b2ba1 in /home/qoega/clickhouse/build/programs/clickhouse\r\n5. /home/qoega/clickhouse/build/../src/TableFunctions/TableFunctionGenerateRandom.cpp:68: DB::TableFunctionGenerateRandom::executeImpl(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x1b729c5c in /home/qoega/clickhouse/build/programs/clickhouse\r\n6. /home/qoega/clickhouse/build/../src/TableFunctions/ITableFunction.cpp:20: DB::ITableFunction::execute(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x1eb6c984 in /home/qoega/clickhouse/build/programs/clickhouse\r\n7. /home/qoega/clickhouse/build/../src/Interpreters/Context.cpp:893: DB::Context::executeTableFunction(std::__1::shared_ptr<DB::IAST> const&) @ 0x1c3f9c29 in /home/qoega/clickhouse/build/programs/clickhouse\r\n8. /home/qoega/clickhouse/build/../src/Interpreters/JoinedTables.cpp:175: DB::JoinedTables::getLeftTableStorage() @ 0x1d1b73da in /home/qoega/clickhouse/build/programs/clickhouse\r\n9. /home/qoega/clickhouse/build/../src/Interpreters/InterpreterSelectQuery.cpp:253: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x1cf10e43 in /home/qoega/clickhouse/build/programs/clickhouse\r\n10. /home/qoega/clickhouse/build/../src/Interpreters/InterpreterSelectQuery.cpp:166: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x1cf0f987 in /home/qoega/clickhouse/build/programs/clickhouse\r\n11. /home/qoega/clickhouse/build/../contrib/libcxx/include/memory:3028: std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x1d0feb21 in /home/qoega/clickhouse/build/programs/clickhouse\r\n12. /home/qoega/clickhouse/build/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:90: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x1d0fa5ef in /home/qoega/clickhouse/build/programs/clickhouse\r\n13. /home/qoega/clickhouse/build/../src/Interpreters/InterpreterInsertQuery.cpp:194: DB::InterpreterInsertQuery::execute() @ 0x1cec58c2 in /home/qoega/clickhouse/build/programs/clickhouse\r\n14. /home/qoega/clickhouse/build/../src/Interpreters/executeQuery.cpp:333: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*, bool) @ 0x1d3ea84c in /home/qoega/clickhouse/build/programs/clickhouse\r\n15. /home/qoega/clickhouse/build/../src/Interpreters/executeQuery.cpp:578: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0x1d3e80ae in /home/qoega/clickhouse/build/programs/clickhouse\r\n16. /home/qoega/clickhouse/build/../programs/server/TCPHandler.cpp:252: DB::TCPHandler::runImpl() @ 0xd2c9b74 in /home/qoega/clickhouse/build/programs/clickhouse\r\n17. /home/qoega/clickhouse/build/../programs/server/TCPHandler.cpp:1240: DB::TCPHandler::run() @ 0xd2d9fd1 in /home/qoega/clickhouse/build/programs/clickhouse\r\n18. /home/qoega/clickhouse/build/../contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x29af6d14 in /home/qoega/clickhouse/build/programs/clickhouse\r\n19. /home/qoega/clickhouse/build/../contrib/poco/Net/src/TCPServerDispatcher.cpp:114: Poco::Net::TCPServerDispatcher::run() @ 0x29af7907 in /home/qoega/clickhouse/build/programs/clickhouse\r\n20. /home/qoega/clickhouse/build/../contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x29f49cde in /home/qoega/clickhouse/build/programs/clickhouse\r\n21. /home/qoega/clickhouse/build/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x29f412df in /home/qoega/clickhouse/build/programs/clickhouse\r\n22. /home/qoega/clickhouse/build/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x29f3eb1c in /home/qoega/clickhouse/build/programs/clickhouse\r\n23. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n24. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n\r\nReceived exception from server (version 20.4.1):\r\nCode: 62. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse columns declaration list..\r\n\r\n0 rows in set. Elapsed: 0.011 sec.\r\n```\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\n",
  "hints_text": "The reason is probably that you have extra pair of parentheses around list of types inside generateRandom function. The diagnostics could be better (so I change \"bug\" to \"usability\").\r\n\r\nUpd. Yes, that is the reason.\nWhen I remove extra pair of braces, I get:\r\n\r\n```\r\nSELECT *\r\nFROM generateRandom('`WatchID` UInt64, `JavaEnable` UInt8, `Title` String, `GoodEvent` Int16, `EventTime` DateTime, `EventDate` Date, `CounterID` UInt32, `ClientIP` UInt32, `ClientIP6` FixedString(16), `RegionID` UInt32, `UserID` UInt64, `CounterClass` Int8, `OS` UInt8, `UserAgent` UInt8, `URL` String, `Referer` String, `URLDomain` String, `RefererDomain` String, `Refresh` UInt8, `IsRobot` UInt8, `RefererCategories` Array(UInt16), `URLCategories` Array(UInt16), `URLRegions` Array(UInt32), `RefererRegions` Array(UInt32), `ResolutionWidth` UInt16, `ResolutionHeight` UInt16, `ResolutionDepth` UInt8, `FlashMajor` UInt8, `FlashMinor` UInt8, `FlashMinor2` String, `NetMajor` UInt8, `NetMinor` UInt8, `UserAgentMajor` UInt16, `UserAgentMinor` FixedString(2), `CookieEnable` UInt8, `JavascriptEnable` UInt8, `IsMobile` UInt8, `MobilePhone` UInt8, `MobilePhoneModel` String, `Params` String, `IPNetworkID` UInt32, `TraficSourceID` Int8, `SearchEngineID` UInt16, `SearchPhrase` String, `AdvEngineID` UInt8, `IsArtifical` UInt8, `WindowClientWidth` UInt16, `WindowClientHeight` UInt16, `ClientTimeZone` Int16, `ClientEventTime` DateTime, `SilverlightVersion1` UInt8, `SilverlightVersion2` UInt8, `SilverlightVersion3` UInt32, `SilverlightVersion4` UInt16, `PageCharset` String, `CodeVersion` UInt32, `IsLink` UInt8, `IsDownload` UInt8, `IsNotBounce` UInt8, `FUniqID` UInt64, `HID` UInt32, `IsOldCounter` UInt8, `IsEvent` UInt8, `IsParameter` UInt8, `DontCountHits` UInt8, `WithHash` UInt8, `HitColor` FixedString(1), `UTCEventTime` DateTime, `Age` UInt8, `Sex` UInt8, `Income` UInt8, `Interests` UInt16, `Robotness` UInt8, `GeneralInterests` Array(UInt16), `RemoteIP` UInt32, `RemoteIP6` FixedString(16), `WindowName` Int32, `OpenerName` Int32, `HistoryLength` Int16, `BrowserLanguage` FixedString(2), `BrowserCountry` FixedString(2), `SocialNetwork` String, `SocialAction` String, `HTTPError` UInt16, `SendTiming` Int32, `DNSTiming` Int32, `ConnectTiming` Int32, `ResponseStartTiming` Int32, `ResponseEndTiming` Int32, `FetchTiming` Int32, `RedirectTiming` Int32, `DOMInteractiveTiming` Int32, `DOMContentLoadedTiming` Int32, `DOMCompleteTiming` Int32, `LoadEventStartTiming` Int32, `LoadEventEndTiming` Int32, `NSToDOMContentLoadedTiming` Int32, `FirstPaintTiming` Int32, `RedirectCount` Int8, `SocialSourceNetworkID` UInt8, `SocialSourcePage` String, `ParamPrice` Int64, `ParamOrderID` String, `ParamCurrency` FixedString(3), `ParamCurrencyID` UInt16, `GoalsReached` Array(UInt32), `OpenstatServiceName` String, `OpenstatCampaignID` String, `OpenstatAdID` String, `OpenstatSourceID` String, `UTMSource` String, `UTMMedium` String, `UTMCampaign` String, `UTMContent` String, `UTMTerm` String, `FromTag` String, `HasGCLID` UInt8, `RefererHash` UInt64, `URLHash` UInt64, `CLID` UInt32, `YCLID` UInt64, `ShareService` String, `ShareURL` String, `ShareTitle` String, `ParsedParams.Key1` Array(String), `ParsedParams.Key2` Array(String), `ParsedParams.Key3` Array(String), `ParsedParams.Key4` Array(String), `ParsedParams.Key5` Array(String), `ParsedParams.ValueDouble` Array(Float64), `IslandID` FixedString(16), `RequestNum` UInt32, `RequestTry` UInt8', 1, 10, 2)\r\nLIMIT 100\r\n\r\n\u2192 Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.) \r\nException on client:\r\nCode: 271. DB::Exception: Data compressed with different methods, given method byte 69, previous method byte 82: while receiving packet from localhost:9000\r\n```\r\n\r\nAdd \"bug\" again...\nThe latter issue is solved.",
  "created_at": "2020-06-08T22:50:09Z",
  "modified_files": [
    "src/TableFunctions/parseColumnsListForTableFunction.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01087_table_function_generate.sql"
  ]
}