{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 55960,
  "instance_id": "ClickHouse__ClickHouse-55960",
  "issue_numbers": [
    "54795"
  ],
  "base_commit": "b4ab47380abd0837233385af7b853a8b7596660c",
  "patch": "diff --git a/docs/en/sql-reference/functions/date-time-functions.md b/docs/en/sql-reference/functions/date-time-functions.md\nindex f65354921e2b..7520fe4a4d5c 100644\n--- a/docs/en/sql-reference/functions/date-time-functions.md\n+++ b/docs/en/sql-reference/functions/date-time-functions.md\n@@ -2016,7 +2016,7 @@ Result:\n \n ## addDate\n \n-Adds the time interval or date interval to the provided date or date with time.\n+Adds the time interval to the provided date, date with time or String-encoded date / date with time.\n \n If the addition results in a value outside the bounds of the data type, the result is undefined.\n \n@@ -2028,7 +2028,7 @@ addDate(date, interval)\n \n **Arguments**\n \n-- `date` \u2014 The date or date with time to which `interval` is added. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) or [DateTime64](../../sql-reference/data-types/datetime64.md).\n+- `date` \u2014 The date or date with time to which `interval` is added. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md), [DateTime64](../../sql-reference/data-types/datetime64.md), or [String](../../sql-reference/data-types/string.md)\n - `interval` \u2014 Interval to add. [Interval](../../sql-reference/data-types/special-data-types/interval.md).\n \n **Returned value**\n@@ -2059,7 +2059,7 @@ Alias: `ADDDATE`\n \n ## subDate\n \n-Subtracts the time interval or date interval from the provided date or date with time.\n+Subtracts the time interval from the provided date, date with time or String-encoded date / date with time.\n \n If the subtraction results in a value outside the bounds of the data type, the result is undefined.\n \n@@ -2071,7 +2071,7 @@ subDate(date, interval)\n \n **Arguments**\n \n-- `date` \u2014 The date or date with time from which `interval` is subtracted. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md) or [DateTime64](../../sql-reference/data-types/datetime64.md).\n+- `date` \u2014 The date or date with time from which `interval` is subtracted. [Date](../../sql-reference/data-types/date.md), [Date32](../../sql-reference/data-types/date32.md), [DateTime](../../sql-reference/data-types/datetime.md), [DateTime64](../../sql-reference/data-types/datetime64.md), or [String](../../sql-reference/data-types/string.md)\n - `interval` \u2014 Interval to subtract. [Interval](../../sql-reference/data-types/special-data-types/interval.md).\n \n **Returned value**\ndiff --git a/src/Functions/FunctionBinaryArithmetic.h b/src/Functions/FunctionBinaryArithmetic.h\nindex 33ed22b9fbd9..33f62b8da8c5 100644\n--- a/src/Functions/FunctionBinaryArithmetic.h\n+++ b/src/Functions/FunctionBinaryArithmetic.h\n@@ -796,22 +796,23 @@ class FunctionBinaryArithmetic : public IFunction\n     static FunctionOverloadResolverPtr\n     getFunctionForIntervalArithmetic(const DataTypePtr & type0, const DataTypePtr & type1, ContextPtr context)\n     {\n-        bool first_is_date_or_datetime = isDateOrDate32(type0) || isDateTime(type0) || isDateTime64(type0);\n-        bool second_is_date_or_datetime = isDateOrDate32(type1) || isDateTime(type1) || isDateTime64(type1);\n+        bool first_arg_is_date_or_datetime_or_string = isDateOrDate32OrDateTimeOrDateTime64(type0) || isString(type0);\n+        bool second_arg_is_date_or_datetime_or_string = isDateOrDate32OrDateTimeOrDateTime64(type1) || isString(type1);\n \n-        /// Exactly one argument must be Date or DateTime\n-        if (first_is_date_or_datetime == second_is_date_or_datetime)\n+        /// Exactly one argument must be Date or DateTime or String\n+        if (first_arg_is_date_or_datetime_or_string == second_arg_is_date_or_datetime_or_string)\n             return {};\n \n-        /// Special case when the function is plus or minus, one of arguments is Date/DateTime and another is Interval.\n+        /// Special case when the function is plus or minus, one of arguments is Date or DateTime or String and another is Interval.\n         /// We construct another function (example: addMonths) and call it.\n \n         if constexpr (!is_plus && !is_minus)\n             return {};\n \n-        const DataTypePtr & type_time = first_is_date_or_datetime ? type0 : type1;\n-        const DataTypePtr & type_interval = first_is_date_or_datetime ? type1 : type0;\n+        const DataTypePtr & type_time = first_arg_is_date_or_datetime_or_string ? type0 : type1;\n+        const DataTypePtr & type_interval = first_arg_is_date_or_datetime_or_string ? type1 : type0;\n \n+        bool first_or_second_arg_is_string = isString(type0) || isString(type1);\n         bool interval_is_number = isNumber(type_interval);\n \n         const DataTypeInterval * interval_data_type = nullptr;\n@@ -822,8 +823,12 @@ class FunctionBinaryArithmetic : public IFunction\n             if (!interval_data_type)\n                 return {};\n         }\n+        else if (first_or_second_arg_is_string)\n+        {\n+            return {};\n+        }\n \n-        if (second_is_date_or_datetime && is_minus)\n+        if (second_arg_is_date_or_datetime_or_string && is_minus)\n             throw Exception(ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT, \"Wrong order of arguments for function {}: \"\n                                                                   \"argument of type Interval cannot be first\", name);\n \n@@ -848,11 +853,11 @@ class FunctionBinaryArithmetic : public IFunction\n     static FunctionOverloadResolverPtr\n     getFunctionForDateTupleOfIntervalsArithmetic(const DataTypePtr & type0, const DataTypePtr & type1, ContextPtr context)\n     {\n-        bool first_is_date_or_datetime = isDateOrDate32(type0) || isDateTime(type0) || isDateTime64(type0);\n-        bool second_is_date_or_datetime = isDateOrDate32(type1) || isDateTime(type1) || isDateTime64(type1);\n+        bool first_arg_is_date_or_datetime = isDateOrDate32OrDateTimeOrDateTime64(type0);\n+        bool second_arg_is_date_or_datetime = isDateOrDate32OrDateTimeOrDateTime64(type1);\n \n         /// Exactly one argument must be Date or DateTime\n-        if (first_is_date_or_datetime == second_is_date_or_datetime)\n+        if (first_arg_is_date_or_datetime == second_arg_is_date_or_datetime)\n             return {};\n \n         if (!isTuple(type0) && !isTuple(type1))\n@@ -863,7 +868,7 @@ class FunctionBinaryArithmetic : public IFunction\n         if constexpr (!is_plus && !is_minus)\n             return {};\n \n-        if (isTuple(type0) && second_is_date_or_datetime && is_minus)\n+        if (isTuple(type0) && second_arg_is_date_or_datetime && is_minus)\n             throw Exception(ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT, \"Wrong order of arguments for function {}: \"\n                                                                   \"argument of Tuple type cannot be first\", name);\n \n@@ -1123,7 +1128,7 @@ class FunctionBinaryArithmetic : public IFunction\n         ColumnsWithTypeAndName new_arguments = arguments;\n \n         /// Interval argument must be second.\n-        if (isDateOrDate32(arguments[1].type) || isDateTime(arguments[1].type) || isDateTime64(arguments[1].type))\n+        if (isDateOrDate32OrDateTimeOrDateTime64(arguments[1].type) || isString(arguments[1].type))\n             std::swap(new_arguments[0], new_arguments[1]);\n \n         /// Change interval argument type to its representation\n@@ -1511,7 +1516,7 @@ class FunctionBinaryArithmetic : public IFunction\n             }\n         }\n \n-        /// Special case when the function is plus or minus, one of arguments is Date/DateTime and another is Interval.\n+        /// Special case when the function is plus or minus, one of arguments is Date/DateTime/String and another is Interval.\n         if (auto function_builder = getFunctionForIntervalArithmetic(arguments[0], arguments[1], context))\n         {\n             ColumnsWithTypeAndName new_arguments(2);\n@@ -1520,7 +1525,7 @@ class FunctionBinaryArithmetic : public IFunction\n                 new_arguments[i].type = arguments[i];\n \n             /// Interval argument must be second.\n-            if (isDateOrDate32(new_arguments[1].type) || isDateTime(new_arguments[1].type) || isDateTime64(new_arguments[1].type))\n+            if (isDateOrDate32OrDateTimeOrDateTime64(new_arguments[1].type) || isString(new_arguments[1].type))\n                 std::swap(new_arguments[0], new_arguments[1]);\n \n             /// Change interval argument to its representation\n@@ -2104,7 +2109,7 @@ ColumnPtr executeStringInteger(const ColumnsWithTypeAndName & arguments, const A\n             return executeAggregateAddition(arguments, result_type, input_rows_count);\n         }\n \n-        /// Special case when the function is plus or minus, one of arguments is Date/DateTime and another is Interval.\n+        /// Special case when the function is plus or minus, one of arguments is Date/DateTime/String and another is Interval.\n         if (auto function_builder = getFunctionForIntervalArithmetic(arguments[0].type, arguments[1].type, context))\n         {\n             return executeDateTimeIntervalPlusMinus(arguments, result_type, input_rows_count, function_builder);\ndiff --git a/src/Functions/FunctionsOpDate.cpp b/src/Functions/FunctionsOpDate.cpp\nindex 997513109d63..7355848f73ff 100644\n--- a/src/Functions/FunctionsOpDate.cpp\n+++ b/src/Functions/FunctionsOpDate.cpp\n@@ -1,5 +1,4 @@\n #include <Functions/FunctionFactory.h>\n-#include <Functions/FunctionHelpers.h>\n \n #include <DataTypes/DataTypeDate.h>\n #include <DataTypes/DataTypeDate32.h>\n@@ -32,11 +31,19 @@ class FunctionOpDate : public IFunction\n \n     DataTypePtr getReturnTypeImpl(const ColumnsWithTypeAndName & arguments) const override\n     {\n-        FunctionArgumentDescriptors args{\n-            {\"date\", &isDateOrDate32OrDateTimeOrDateTime64<IDataType>, nullptr, \"Date or date with time\"},\n-            {\"interval\", &isInterval<IDataType>, nullptr, \"Interval\"}\n-        };\n-        validateFunctionArgumentTypes(*this, arguments, args);\n+        if (!isDateOrDate32OrDateTimeOrDateTime64(arguments[0].type) && !isString(arguments[0].type))\n+            throw Exception(\n+                ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT,\n+                \"Illegal type {} of 1st argument of function {}. Should be a date, a date with time or a string\",\n+                arguments[0].type->getName(),\n+                getName());\n+\n+        if (!isInterval(arguments[1].type))\n+            throw Exception(\n+                ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT,\n+                \"Illegal type {} of 2nd argument of function {}. Should be an interval\",\n+                arguments[1].type->getName(),\n+                getName());\n \n         auto op = FunctionFactory::instance().get(Op::internal_name, context);\n         auto op_build = op->build(arguments);\n@@ -48,7 +55,7 @@ class FunctionOpDate : public IFunction\n \n     ColumnPtr executeImpl(const ColumnsWithTypeAndName & arguments, const DataTypePtr &, size_t input_rows_count) const override\n     {\n-        if (!isDateOrDate32(arguments[0].type) && !isDateTime(arguments[0].type) && !isDateTime64(arguments[0].type))\n+        if (!isDateOrDate32OrDateTimeOrDateTime64(arguments[0].type) && !isString(arguments[0].type))\n             throw Exception(\n                 ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT,\n                 \"Illegal type {} of 1st argument of function {}. Should be a date or a date with time\",\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01923_ttl_with_modify_column.sql b/tests/queries/0_stateless/01923_ttl_with_modify_column.sql\nindex ed2812d2a392..650f32fb5886 100644\n--- a/tests/queries/0_stateless/01923_ttl_with_modify_column.sql\n+++ b/tests/queries/0_stateless/01923_ttl_with_modify_column.sql\n@@ -38,6 +38,6 @@ INSERT INTO t_ttl_modify_column VALUES (now());\n SELECT sum(rows), groupUniqArray(type) FROM system.parts_columns\n WHERE database = currentDatabase() AND table = 't_ttl_modify_column' AND column = 'InsertionDateTime' AND active;\n \n-ALTER TABLE t_ttl_modify_column MODIFY COLUMN InsertionDateTime String; -- { serverError 43 }\n+ALTER TABLE t_ttl_modify_column MODIFY COLUMN InsertionDateTime Float32; -- { serverError 43 }\n \n DROP TABLE IF EXISTS t_ttl_modify_column;\ndiff --git a/tests/queries/0_stateless/02834_add_sub_date_functions.reference b/tests/queries/0_stateless/02834_add_sub_date_functions.reference\nindex c37ac34920ca..9b106e41312e 100644\n--- a/tests/queries/0_stateless/02834_add_sub_date_functions.reference\n+++ b/tests/queries/0_stateless/02834_add_sub_date_functions.reference\n@@ -3,9 +3,11 @@\n 2022-05-07 00:05:00.000\n 2022-05-07 00:05:00\n 2022-05-07 00:05:00.000\n+2022-05-07 00:05:00.000\n ---\n 2022-05-06 23:55:00\n 2022-05-06 23:55:00\n 2022-05-06 23:55:00.000\n 2022-05-06 23:55:00\n 2022-05-06 23:55:00.000\n+2022-05-06 23:55:00.000\ndiff --git a/tests/queries/0_stateless/02834_add_sub_date_functions.sql b/tests/queries/0_stateless/02834_add_sub_date_functions.sql\nindex 9c77ba7e3788..49ab305792da 100644\n--- a/tests/queries/0_stateless/02834_add_sub_date_functions.sql\n+++ b/tests/queries/0_stateless/02834_add_sub_date_functions.sql\n@@ -6,11 +6,12 @@ SELECT addDate('2022-05-07'::Date, INTERVAL 5 MINUTE);\n SELECT addDate('2022-05-07'::Date32, INTERVAL 5 MINUTE);\n SELECT addDate('2022-05-07'::DateTime, INTERVAL 5 MINUTE);\n SELECT addDate('2022-05-07'::DateTime64, INTERVAL 5 MINUTE);\n+SELECT addDate('2022-05-07', INTERVAL 5 MINUTE);\n \n SELECT addDate('2022-05-07'::Date); -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\n SELECT addDate('2022-05-07'::Date, INTERVAL 5 MINUTE, 5);  -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\n SELECT addDate('2022-05-07'::Date, 10); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n-SELECT addDate('1234', INTERVAL 5 MINUTE);  -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n+SELECT addDate(1.2, INTERVAL 5 MINUTE);  -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n \n SELECT '---';\n \n@@ -20,8 +21,9 @@ SELECT subDate('2022-05-07'::Date, INTERVAL 5 MINUTE);\n SELECT subDate('2022-05-07'::Date32, INTERVAL 5 MINUTE);\n SELECT subDate('2022-05-07'::DateTime, INTERVAL 5 MINUTE);\n SELECT subDate('2022-05-07'::DateTime64, INTERVAL 5 MINUTE);\n+SELECT subDate('2022-05-07'::String, INTERVAL 5 MINUTE);\n \n SELECT subDate('2022-05-07'::Date); -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\n SELECT subDate('2022-05-07'::Date, INTERVAL 5 MINUTE, 5);  -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\n SELECT subDate('2022-05-07'::Date, 10); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n-SELECT subDate('1234', INTERVAL 5 MINUTE);  -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n+SELECT subDate(1.2, INTERVAL 5 MINUTE);  -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\ndiff --git a/tests/queries/0_stateless/02900_add_subtract_interval_with_string_date.reference b/tests/queries/0_stateless/02900_add_subtract_interval_with_string_date.reference\nindex fa82844c9f3c..d38104c96e7c 100644\n--- a/tests/queries/0_stateless/02900_add_subtract_interval_with_string_date.reference\n+++ b/tests/queries/0_stateless/02900_add_subtract_interval_with_string_date.reference\n@@ -1,100 +1,124 @@\n -- const date, const delta\n    -- add\n-2024-10-22 00:00:00.000\t2024-10-22 00:00:00.000\n-2024-01-22 00:00:00.000\t2024-01-22 00:00:00.000\n-2023-11-22 00:00:00.000\t2023-11-22 00:00:00.000\n-2023-10-29 00:00:00.000\t2023-10-29 00:00:00.000\n-2023-10-23 00:00:00.000\t2023-10-23 00:00:00.000\n-2023-10-22 01:00:00.000\t2023-10-22 01:00:00.000\n-2023-10-22 00:01:00.000\t2023-10-22 00:01:00.000\n-2023-10-22 00:00:01.000\t2023-10-22 00:00:01.000\n-2023-10-22 00:00:00.001\t2023-10-22 00:00:00.001\n-2023-10-22 00:00:00.000001\t2023-10-22 00:00:00.000001\n-2023-10-22 00:00:00.000000001\t2023-10-22 00:00:00.000000001\n+2024-10-22 00:00:00.000\t2024-10-22 12:34:56.123\n+2024-01-22 00:00:00.000\t2024-01-22 12:34:56.123\n+2023-11-22 00:00:00.000\t2023-11-22 12:34:56.123\n+2023-10-29 00:00:00.000\t2023-10-29 12:34:56.123\n+2023-10-23 00:00:00.000\t2023-10-23 12:34:56.123\n+2023-10-22 01:00:00.000\t2023-10-22 13:34:56.123\n+2023-10-22 00:01:00.000\t2023-10-22 12:35:56.123\n+2023-10-22 00:00:01.000\t2023-10-22 12:34:57.123\n+2023-10-22 00:00:00.001\t2023-10-22 12:34:56.124\n+2023-10-22 00:00:00.000001\t2023-10-22 12:34:56.123001\n+2023-10-22 00:00:00.000000001\t2023-10-22 12:34:56.123000001\n    -- subtract\n-2022-10-22 00:00:00.000\t2022-10-22 00:00:00.000\n-2023-07-22 00:00:00.000\t2023-07-22 00:00:00.000\n-2023-09-22 00:00:00.000\t2023-09-22 00:00:00.000\n-2023-10-15 00:00:00.000\t2023-10-15 00:00:00.000\n-2023-10-21 00:00:00.000\t2023-10-21 00:00:00.000\n-2023-10-21 23:00:00.000\t2023-10-21 23:00:00.000\n-2023-10-21 23:59:00.000\t2023-10-21 23:59:00.000\n-2023-10-21 23:59:59.000\t2023-10-21 23:59:59.000\n-2023-10-21 23:59:59.999\t2023-10-21 23:59:59.999\n-2023-10-21 23:59:59.999999\t2023-10-21 23:59:59.999999\n-2023-10-21 23:59:59.999999999\t2023-10-21 23:59:59.999999999\n+2022-10-22 00:00:00.000\t2022-10-22 12:34:56.123\n+2023-07-22 00:00:00.000\t2023-07-22 12:34:56.123\n+2023-09-22 00:00:00.000\t2023-09-22 12:34:56.123\n+2023-10-15 00:00:00.000\t2023-10-15 12:34:56.123\n+2023-10-21 00:00:00.000\t2023-10-21 12:34:56.123\n+2023-10-21 23:00:00.000\t2023-10-22 11:34:56.123\n+2023-10-21 23:59:00.000\t2023-10-22 12:33:56.123\n+2023-10-21 23:59:59.000\t2023-10-22 12:34:55.123\n+2023-10-21 23:59:59.999\t2023-10-22 12:34:56.122\n+2023-10-21 23:59:59.999999\t2023-10-22 12:34:56.122999\n+2023-10-21 23:59:59.999999999\t2023-10-22 12:34:56.122999999\n -- non-const date, const delta\n    -- add\n-2024-10-22 00:00:00.000\t2024-10-22 00:00:00.000\n-2024-01-22 00:00:00.000\t2024-01-22 00:00:00.000\n-2023-11-22 00:00:00.000\t2023-11-22 00:00:00.000\n-2023-10-29 00:00:00.000\t2023-10-29 00:00:00.000\n-2023-10-23 00:00:00.000\t2023-10-23 00:00:00.000\n-2023-10-22 01:00:00.000\t2023-10-22 01:00:00.000\n-2023-10-22 00:01:00.000\t2023-10-22 00:01:00.000\n-2023-10-22 00:00:01.000\t2023-10-22 00:00:01.000\n-2023-10-22 00:00:00.001\t2023-10-22 00:00:00.001\n-2023-10-22 00:00:00.000001\t2023-10-22 00:00:00.000001\n-2023-10-22 00:00:00.000000001\t2023-10-22 00:00:00.000000001\n+2024-10-22 00:00:00.000\t2024-10-22 12:34:56.123\n+2024-01-22 00:00:00.000\t2024-01-22 12:34:56.123\n+2023-11-22 00:00:00.000\t2023-11-22 12:34:56.123\n+2023-10-29 00:00:00.000\t2023-10-29 12:34:56.123\n+2023-10-23 00:00:00.000\t2023-10-23 12:34:56.123\n+2023-10-22 01:00:00.000\t2023-10-22 13:34:56.123\n+2023-10-22 00:01:00.000\t2023-10-22 12:35:56.123\n+2023-10-22 00:00:01.000\t2023-10-22 12:34:57.123\n+2023-10-22 00:00:00.001\t2023-10-22 12:34:56.124\n+2023-10-22 00:00:00.000001\t2023-10-22 12:34:56.123001\n+2023-10-22 00:00:00.000000001\t2023-10-22 12:34:56.123000001\n    -- subtract\n-2022-10-22 00:00:00.000\t2022-10-22 00:00:00.000\n-2023-07-22 00:00:00.000\t2023-07-22 00:00:00.000\n-2023-09-22 00:00:00.000\t2023-09-22 00:00:00.000\n-2023-10-15 00:00:00.000\t2023-10-15 00:00:00.000\n-2023-10-21 00:00:00.000\t2023-10-21 00:00:00.000\n-2023-10-21 23:00:00.000\t2023-10-21 23:00:00.000\n-2023-10-21 23:59:00.000\t2023-10-21 23:59:00.000\n-2023-10-21 23:59:59.000\t2023-10-21 23:59:59.000\n-2023-10-21 23:59:59.999\t2023-10-21 23:59:59.999\n-2023-10-21 23:59:59.999999\t2023-10-21 23:59:59.999999\n-2023-10-21 23:59:59.999999999\t2023-10-21 23:59:59.999999999\n+2022-10-22 00:00:00.000\t2022-10-22 12:34:56.123\n+2023-07-22 00:00:00.000\t2023-07-22 12:34:56.123\n+2023-09-22 00:00:00.000\t2023-09-22 12:34:56.123\n+2023-10-15 00:00:00.000\t2023-10-15 12:34:56.123\n+2023-10-21 00:00:00.000\t2023-10-21 12:34:56.123\n+2023-10-21 23:00:00.000\t2023-10-22 11:34:56.123\n+2023-10-21 23:59:00.000\t2023-10-22 12:33:56.123\n+2023-10-21 23:59:59.000\t2023-10-22 12:34:55.123\n+2023-10-21 23:59:59.999\t2023-10-22 12:34:56.122\n+2023-10-21 23:59:59.999999\t2023-10-22 12:34:56.122999\n+2023-10-21 23:59:59.999999999\t2023-10-22 12:34:56.122999999\n -- const date, non-const delta\n    -- add\n-2024-10-22 00:00:00.000\t2024-10-22 00:00:00.000\n-2024-01-22 00:00:00.000\t2024-01-22 00:00:00.000\n-2023-11-22 00:00:00.000\t2023-11-22 00:00:00.000\n-2023-10-29 00:00:00.000\t2023-10-29 00:00:00.000\n-2023-10-23 00:00:00.000\t2023-10-23 00:00:00.000\n-2023-10-22 01:00:00.000\t2023-10-22 01:00:00.000\n-2023-10-22 00:01:00.000\t2023-10-22 00:01:00.000\n-2023-10-22 00:00:01.000\t2023-10-22 00:00:01.000\n-2023-10-22 00:00:00.001\t2023-10-22 00:00:00.001\n-2023-10-22 00:00:00.000001\t2023-10-22 00:00:00.000001\n-2023-10-22 00:00:00.000000001\t2023-10-22 00:00:00.000000001\n+2024-10-22 00:00:00.000\t2024-10-22 12:34:56.123\n+2024-01-22 00:00:00.000\t2024-01-22 12:34:56.123\n+2023-11-22 00:00:00.000\t2023-11-22 12:34:56.123\n+2023-10-29 00:00:00.000\t2023-10-29 12:34:56.123\n+2023-10-23 00:00:00.000\t2023-10-23 12:34:56.123\n+2023-10-22 01:00:00.000\t2023-10-22 13:34:56.123\n+2023-10-22 00:01:00.000\t2023-10-22 12:35:56.123\n+2023-10-22 00:00:01.000\t2023-10-22 12:34:57.123\n+2023-10-22 00:00:00.001\t2023-10-22 12:34:56.124\n+2023-10-22 00:00:00.000001\t2023-10-22 12:34:56.123001\n+2023-10-22 00:00:00.000000001\t2023-10-22 12:34:56.123000001\n    -- subtract\n-2022-10-22 00:00:00.000\t2022-10-22 00:00:00.000\n-2023-07-22 00:00:00.000\t2023-07-22 00:00:00.000\n-2023-09-22 00:00:00.000\t2023-09-22 00:00:00.000\n-2023-10-15 00:00:00.000\t2023-10-15 00:00:00.000\n-2023-10-21 00:00:00.000\t2023-10-21 00:00:00.000\n-2023-10-21 23:00:00.000\t2023-10-21 23:00:00.000\n-2023-10-21 23:59:00.000\t2023-10-21 23:59:00.000\n-2023-10-21 23:59:59.000\t2023-10-21 23:59:59.000\n-2023-10-21 23:59:59.999\t2023-10-21 23:59:59.999\n-2023-10-21 23:59:59.999999\t2023-10-21 23:59:59.999999\n-2023-10-21 23:59:59.999999999\t2023-10-21 23:59:59.999999999\n+2022-10-22 00:00:00.000\t2022-10-22 12:34:56.123\n+2023-07-22 00:00:00.000\t2023-07-22 12:34:56.123\n+2023-09-22 00:00:00.000\t2023-09-22 12:34:56.123\n+2023-10-15 00:00:00.000\t2023-10-15 12:34:56.123\n+2023-10-21 00:00:00.000\t2023-10-21 12:34:56.123\n+2023-10-21 23:00:00.000\t2023-10-22 11:34:56.123\n+2023-10-21 23:59:00.000\t2023-10-22 12:33:56.123\n+2023-10-21 23:59:59.000\t2023-10-22 12:34:55.123\n+2023-10-21 23:59:59.999\t2023-10-22 12:34:56.122\n+2023-10-21 23:59:59.999999\t2023-10-22 12:34:56.122999\n+2023-10-21 23:59:59.999999999\t2023-10-22 12:34:56.122999999\n -- non-const date, non-const delta\n    -- add\n-2024-10-22 00:00:00.000\t2024-10-22 00:00:00.000\n-2024-01-22 00:00:00.000\t2024-01-22 00:00:00.000\n-2023-11-22 00:00:00.000\t2023-11-22 00:00:00.000\n-2023-10-29 00:00:00.000\t2023-10-29 00:00:00.000\n-2023-10-23 00:00:00.000\t2023-10-23 00:00:00.000\n-2023-10-22 01:00:00.000\t2023-10-22 01:00:00.000\n-2023-10-22 00:01:00.000\t2023-10-22 00:01:00.000\n-2023-10-22 00:00:01.000\t2023-10-22 00:00:01.000\n-2023-10-22 00:00:00.001\t2023-10-22 00:00:00.001\n-2023-10-22 00:00:00.000001\t2023-10-22 00:00:00.000001\n-2023-10-22 00:00:00.000000001\t2023-10-22 00:00:00.000000001\n+2024-10-22 00:00:00.000\t2024-10-22 12:34:56.123\n+2024-01-22 00:00:00.000\t2024-01-22 12:34:56.123\n+2023-11-22 00:00:00.000\t2023-11-22 12:34:56.123\n+2023-10-29 00:00:00.000\t2023-10-29 12:34:56.123\n+2023-10-23 00:00:00.000\t2023-10-23 12:34:56.123\n+2023-10-22 01:00:00.000\t2023-10-22 13:34:56.123\n+2023-10-22 00:01:00.000\t2023-10-22 12:35:56.123\n+2023-10-22 00:00:01.000\t2023-10-22 12:34:57.123\n+2023-10-22 00:00:00.001\t2023-10-22 12:34:56.124\n+2023-10-22 00:00:00.000001\t2023-10-22 12:34:56.123001\n+2023-10-22 00:00:00.000000001\t2023-10-22 12:34:56.123000001\n    -- subtract\n-2022-10-22 00:00:00.000\t2022-10-22 00:00:00.000\n-2023-07-22 00:00:00.000\t2023-07-22 00:00:00.000\n-2023-09-22 00:00:00.000\t2023-09-22 00:00:00.000\n-2023-10-15 00:00:00.000\t2023-10-15 00:00:00.000\n-2023-10-21 00:00:00.000\t2023-10-21 00:00:00.000\n-2023-10-21 23:00:00.000\t2023-10-21 23:00:00.000\n-2023-10-21 23:59:00.000\t2023-10-21 23:59:00.000\n-2023-10-21 23:59:59.000\t2023-10-21 23:59:59.000\n-2023-10-21 23:59:59.999\t2023-10-21 23:59:59.999\n-2023-10-21 23:59:59.999999\t2023-10-21 23:59:59.999999\n-2023-10-21 23:59:59.999999999\t2023-10-21 23:59:59.999999999\n+2022-10-22 00:00:00.000\t2022-10-22 12:34:56.123\n+2023-07-22 00:00:00.000\t2023-07-22 12:34:56.123\n+2023-09-22 00:00:00.000\t2023-09-22 12:34:56.123\n+2023-10-15 00:00:00.000\t2023-10-15 12:34:56.123\n+2023-10-21 00:00:00.000\t2023-10-21 12:34:56.123\n+2023-10-21 23:00:00.000\t2023-10-22 11:34:56.123\n+2023-10-21 23:59:00.000\t2023-10-22 12:33:56.123\n+2023-10-21 23:59:59.000\t2023-10-22 12:34:55.123\n+2023-10-21 23:59:59.999\t2023-10-22 12:34:56.122\n+2023-10-21 23:59:59.999999\t2023-10-22 12:34:56.122999\n+2023-10-21 23:59:59.999999999\t2023-10-22 12:34:56.122999999\n+-- plus operator\n+2024-10-23 00:00:00.000\t2024-10-23 12:34:56.123\n+2024-01-23 00:00:00.000\t2024-01-23 12:34:56.123\n+2023-11-23 00:00:00.000\t2023-11-23 12:34:56.123\n+2023-10-30 00:00:00.000\t2023-10-30 12:34:56.123\n+2023-10-24 00:00:00.000\t2023-10-24 12:34:56.123\n+2023-10-23 01:00:00.000\t2023-10-23 13:34:56.123\n+2023-10-23 00:01:00.000\t2023-10-23 12:35:56.123\n+2023-10-23 00:00:01.000\t2023-10-23 12:34:57.123\n+2023-10-23 00:00:00.001\t2023-10-23 12:34:56.124\n+2023-10-23 00:00:00.000001\t2023-10-23 12:34:56.123001\n+2023-10-23 00:00:00.000000001\t2023-10-23 12:34:56.123000001\n+-- minus operator\n+2022-10-23 00:00:00.000\t2022-10-23 12:34:56.123\n+2023-07-23 00:00:00.000\t2023-07-23 12:34:56.123\n+2023-09-23 00:00:00.000\t2023-09-23 12:34:56.123\n+2023-10-16 00:00:00.000\t2023-10-16 12:34:56.123\n+2023-10-22 00:00:00.000\t2023-10-22 12:34:56.123\n+2023-10-22 23:00:00.000\t2023-10-23 11:34:56.123\n+2023-10-22 23:59:00.000\t2023-10-23 12:33:56.123\n+2023-10-22 23:59:59.000\t2023-10-23 12:34:55.123\n+2023-10-22 23:59:59.999\t2023-10-23 12:34:56.122\n+2023-10-22 23:59:59.999999\t2023-10-23 12:34:56.122999\n+2023-10-22 23:59:59.999999999\t2023-10-23 12:34:56.122999999\ndiff --git a/tests/queries/0_stateless/02900_add_subtract_interval_with_string_date.sql b/tests/queries/0_stateless/02900_add_subtract_interval_with_string_date.sql\nindex 6a02840617b8..bc4410dab0cf 100644\n--- a/tests/queries/0_stateless/02900_add_subtract_interval_with_string_date.sql\n+++ b/tests/queries/0_stateless/02900_add_subtract_interval_with_string_date.sql\n@@ -1,111 +1,139 @@\n SELECT '-- const date, const delta';\n \n SELECT '   -- add';\n-SELECT addYears('2023-10-22', 1), addYears('2023-10-22 00:00:00.000', 1);\n-SELECT addQuarters('2023-10-22', 1), addQuarters('2023-10-22 00:00:00.000', 1);\n-SELECT addMonths('2023-10-22', 1), addMonths('2023-10-22 00:00:00.000', 1);\n-SELECT addWeeks('2023-10-22', 1), addWeeks('2023-10-22 00:00:00.000', 1);\n-SELECT addDays('2023-10-22', 1), addDays('2023-10-22 00:00:00.000', 1);\n-SELECT addHours('2023-10-22', 1), addHours('2023-10-22 00:00:00.000', 1);\n-SELECT addMinutes('2023-10-22', 1), addMinutes('2023-10-22 00:00:00.000', 1);\n-SELECT addSeconds('2023-10-22', 1), addSeconds('2023-10-22 00:00:00.000', 1);\n-SELECT addMilliseconds('2023-10-22', 1), addMilliseconds('2023-10-22 00:00:00.000', 1);\n-SELECT addMicroseconds('2023-10-22', 1), addMicroseconds('2023-10-22 00:00:00.000', 1);\n-SELECT addNanoseconds('2023-10-22', 1), addNanoseconds('2023-10-22 00:00:00.000', 1);\n+SELECT addYears('2023-10-22', 1), addYears('2023-10-22 12:34:56.123', 1);\n+SELECT addQuarters('2023-10-22', 1), addQuarters('2023-10-22 12:34:56.123', 1);\n+SELECT addMonths('2023-10-22', 1), addMonths('2023-10-22 12:34:56.123', 1);\n+SELECT addWeeks('2023-10-22', 1), addWeeks('2023-10-22 12:34:56.123', 1);\n+SELECT addDays('2023-10-22', 1), addDays('2023-10-22 12:34:56.123', 1);\n+SELECT addHours('2023-10-22', 1), addHours('2023-10-22 12:34:56.123', 1);\n+SELECT addMinutes('2023-10-22', 1), addMinutes('2023-10-22 12:34:56.123', 1);\n+SELECT addSeconds('2023-10-22', 1), addSeconds('2023-10-22 12:34:56.123', 1);\n+SELECT addMilliseconds('2023-10-22', 1), addMilliseconds('2023-10-22 12:34:56.123', 1);\n+SELECT addMicroseconds('2023-10-22', 1), addMicroseconds('2023-10-22 12:34:56.123', 1);\n+SELECT addNanoseconds('2023-10-22', 1), addNanoseconds('2023-10-22 12:34:56.123', 1);\n \n SELECT '   -- subtract';\n-SELECT subtractYears('2023-10-22', 1), subtractYears('2023-10-22 00:00:00.000', 1);\n-SELECT subtractQuarters('2023-10-22', 1), subtractQuarters('2023-10-22 00:00:00.000', 1);\n-SELECT subtractMonths('2023-10-22', 1), subtractMonths('2023-10-22 00:00:00.000', 1);\n-SELECT subtractWeeks('2023-10-22', 1), subtractWeeks('2023-10-22 00:00:00.000', 1);\n-SELECT subtractDays('2023-10-22', 1), subtractDays('2023-10-22 00:00:00.000', 1);\n-SELECT subtractHours('2023-10-22', 1), subtractHours('2023-10-22 00:00:00.000', 1);\n-SELECT subtractMinutes('2023-10-22', 1), subtractMinutes('2023-10-22 00:00:00.000', 1);\n-SELECT subtractSeconds('2023-10-22', 1), subtractSeconds('2023-10-22 00:00:00.000', 1);\n-SELECT subtractMilliseconds('2023-10-22', 1), subtractMilliseconds('2023-10-22 00:00:00.000', 1);\n-SELECT subtractMicroseconds('2023-10-22', 1), subtractMicroseconds('2023-10-22 00:00:00.000', 1);\n-SELECT subtractNanoseconds('2023-10-22', 1), subtractNanoseconds('2023-10-22 00:00:00.000', 1);\n+SELECT subtractYears('2023-10-22', 1), subtractYears('2023-10-22 12:34:56.123', 1);\n+SELECT subtractQuarters('2023-10-22', 1), subtractQuarters('2023-10-22 12:34:56.123', 1);\n+SELECT subtractMonths('2023-10-22', 1), subtractMonths('2023-10-22 12:34:56.123', 1);\n+SELECT subtractWeeks('2023-10-22', 1), subtractWeeks('2023-10-22 12:34:56.123', 1);\n+SELECT subtractDays('2023-10-22', 1), subtractDays('2023-10-22 12:34:56.123', 1);\n+SELECT subtractHours('2023-10-22', 1), subtractHours('2023-10-22 12:34:56.123', 1);\n+SELECT subtractMinutes('2023-10-22', 1), subtractMinutes('2023-10-22 12:34:56.123', 1);\n+SELECT subtractSeconds('2023-10-22', 1), subtractSeconds('2023-10-22 12:34:56.123', 1);\n+SELECT subtractMilliseconds('2023-10-22', 1), subtractMilliseconds('2023-10-22 12:34:56.123', 1);\n+SELECT subtractMicroseconds('2023-10-22', 1), subtractMicroseconds('2023-10-22 12:34:56.123', 1);\n+SELECT subtractNanoseconds('2023-10-22', 1), subtractNanoseconds('2023-10-22 12:34:56.123', 1);\n \n SELECT '-- non-const date, const delta';\n \n SELECT '   -- add';\n-SELECT addYears(materialize('2023-10-22'), 1), addYears(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addQuarters(materialize('2023-10-22'), 1), addQuarters(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addMonths(materialize('2023-10-22'), 1), addMonths(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addWeeks(materialize('2023-10-22'), 1), addWeeks(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addDays(materialize('2023-10-22'), 1), addDays(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addHours(materialize('2023-10-22'), 1), addHours(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addMinutes(materialize('2023-10-22'), 1), addMinutes(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addSeconds(materialize('2023-10-22'), 1), addSeconds(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addMilliseconds(materialize('2023-10-22'), 1), addMilliseconds(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addMicroseconds(materialize('2023-10-22'), 1), addMicroseconds(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT addNanoseconds(materialize('2023-10-22'), 1), addNanoseconds(materialize('2023-10-22 00:00:00.000'), 1);\n+SELECT addYears(materialize('2023-10-22'), 1), addYears(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addQuarters(materialize('2023-10-22'), 1), addQuarters(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addMonths(materialize('2023-10-22'), 1), addMonths(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addWeeks(materialize('2023-10-22'), 1), addWeeks(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addDays(materialize('2023-10-22'), 1), addDays(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addHours(materialize('2023-10-22'), 1), addHours(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addMinutes(materialize('2023-10-22'), 1), addMinutes(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addSeconds(materialize('2023-10-22'), 1), addSeconds(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addMilliseconds(materialize('2023-10-22'), 1), addMilliseconds(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addMicroseconds(materialize('2023-10-22'), 1), addMicroseconds(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT addNanoseconds(materialize('2023-10-22'), 1), addNanoseconds(materialize('2023-10-22 12:34:56.123'), 1);\n \n SELECT '   -- subtract';\n-SELECT subtractYears(materialize('2023-10-22'), 1), subtractYears(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractQuarters(materialize('2023-10-22'), 1), subtractQuarters(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractMonths(materialize('2023-10-22'), 1), subtractMonths(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractWeeks(materialize('2023-10-22'), 1), subtractWeeks(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractDays(materialize('2023-10-22'), 1), subtractDays(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractHours(materialize('2023-10-22'), 1), subtractHours(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractMinutes(materialize('2023-10-22'), 1), subtractMinutes(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractSeconds(materialize('2023-10-22'), 1), subtractSeconds(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractMilliseconds(materialize('2023-10-22'), 1), subtractMilliseconds(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractMicroseconds(materialize('2023-10-22'), 1), subtractMicroseconds(materialize('2023-10-22 00:00:00.000'), 1);\n-SELECT subtractNanoseconds(materialize('2023-10-22'), 1), subtractNanoseconds(materialize('2023-10-22 00:00:00.000'), 1);\n+SELECT subtractYears(materialize('2023-10-22'), 1), subtractYears(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractQuarters(materialize('2023-10-22'), 1), subtractQuarters(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractMonths(materialize('2023-10-22'), 1), subtractMonths(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractWeeks(materialize('2023-10-22'), 1), subtractWeeks(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractDays(materialize('2023-10-22'), 1), subtractDays(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractHours(materialize('2023-10-22'), 1), subtractHours(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractMinutes(materialize('2023-10-22'), 1), subtractMinutes(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractSeconds(materialize('2023-10-22'), 1), subtractSeconds(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractMilliseconds(materialize('2023-10-22'), 1), subtractMilliseconds(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractMicroseconds(materialize('2023-10-22'), 1), subtractMicroseconds(materialize('2023-10-22 12:34:56.123'), 1);\n+SELECT subtractNanoseconds(materialize('2023-10-22'), 1), subtractNanoseconds(materialize('2023-10-22 12:34:56.123'), 1);\n \n SELECT '-- const date, non-const delta';\n \n SELECT '   -- add';\n-SELECT addYears('2023-10-22', materialize(1)), addYears('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addQuarters('2023-10-22', materialize(1)), addQuarters('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addMonths('2023-10-22', materialize(1)), addMonths('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addWeeks('2023-10-22', materialize(1)), addWeeks('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addDays('2023-10-22', materialize(1)), addDays('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addHours('2023-10-22', materialize(1)), addHours('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addMinutes('2023-10-22', materialize(1)), addMinutes('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addSeconds('2023-10-22', materialize(1)), addSeconds('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addMilliseconds('2023-10-22', materialize(1)), addMilliseconds('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addMicroseconds('2023-10-22', materialize(1)), addMicroseconds('2023-10-22 00:00:00.000', materialize(1));\n-SELECT addNanoseconds('2023-10-22', materialize(1)), addNanoseconds('2023-10-22 00:00:00.000', materialize(1));\n+SELECT addYears('2023-10-22', materialize(1)), addYears('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addQuarters('2023-10-22', materialize(1)), addQuarters('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addMonths('2023-10-22', materialize(1)), addMonths('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addWeeks('2023-10-22', materialize(1)), addWeeks('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addDays('2023-10-22', materialize(1)), addDays('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addHours('2023-10-22', materialize(1)), addHours('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addMinutes('2023-10-22', materialize(1)), addMinutes('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addSeconds('2023-10-22', materialize(1)), addSeconds('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addMilliseconds('2023-10-22', materialize(1)), addMilliseconds('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addMicroseconds('2023-10-22', materialize(1)), addMicroseconds('2023-10-22 12:34:56.123', materialize(1));\n+SELECT addNanoseconds('2023-10-22', materialize(1)), addNanoseconds('2023-10-22 12:34:56.123', materialize(1));\n \n SELECT '   -- subtract';\n-SELECT subtractYears('2023-10-22', materialize(1)), subtractYears('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractQuarters('2023-10-22', materialize(1)), subtractQuarters('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractMonths('2023-10-22', materialize(1)), subtractMonths('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractWeeks('2023-10-22', materialize(1)), subtractWeeks('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractDays('2023-10-22', materialize(1)), subtractDays('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractHours('2023-10-22', materialize(1)), subtractHours('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractMinutes('2023-10-22', materialize(1)), subtractMinutes('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractSeconds('2023-10-22', materialize(1)), subtractSeconds('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractMilliseconds('2023-10-22', materialize(1)), subtractMilliseconds('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractMicroseconds('2023-10-22', materialize(1)), subtractMicroseconds('2023-10-22 00:00:00.000', materialize(1));\n-SELECT subtractNanoseconds('2023-10-22', materialize(1)), subtractNanoseconds('2023-10-22 00:00:00.000', materialize(1));\n+SELECT subtractYears('2023-10-22', materialize(1)), subtractYears('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractQuarters('2023-10-22', materialize(1)), subtractQuarters('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractMonths('2023-10-22', materialize(1)), subtractMonths('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractWeeks('2023-10-22', materialize(1)), subtractWeeks('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractDays('2023-10-22', materialize(1)), subtractDays('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractHours('2023-10-22', materialize(1)), subtractHours('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractMinutes('2023-10-22', materialize(1)), subtractMinutes('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractSeconds('2023-10-22', materialize(1)), subtractSeconds('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractMilliseconds('2023-10-22', materialize(1)), subtractMilliseconds('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractMicroseconds('2023-10-22', materialize(1)), subtractMicroseconds('2023-10-22 12:34:56.123', materialize(1));\n+SELECT subtractNanoseconds('2023-10-22', materialize(1)), subtractNanoseconds('2023-10-22 12:34:56.123', materialize(1));\n \n SELECT '-- non-const date, non-const delta';\n \n SELECT '   -- add';\n-SELECT addYears(materialize('2023-10-22'), materialize(1)), addYears(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addQuarters(materialize('2023-10-22'), materialize(1)), addQuarters(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addMonths(materialize('2023-10-22'), materialize(1)), addMonths(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addWeeks(materialize('2023-10-22'), materialize(1)), addWeeks(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addDays(materialize('2023-10-22'), materialize(1)), addDays(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addHours(materialize('2023-10-22'), materialize(1)), addHours(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addMinutes(materialize('2023-10-22'), materialize(1)), addMinutes(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addSeconds(materialize('2023-10-22'), materialize(1)), addSeconds(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addMilliseconds(materialize('2023-10-22'), materialize(1)), addMilliseconds(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addMicroseconds(materialize('2023-10-22'), materialize(1)), addMicroseconds(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT addNanoseconds(materialize('2023-10-22'), materialize(1)), addNanoseconds(materialize('2023-10-22 00:00:00.000'), materialize(1));\n+SELECT addYears(materialize('2023-10-22'), materialize(1)), addYears(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addQuarters(materialize('2023-10-22'), materialize(1)), addQuarters(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addMonths(materialize('2023-10-22'), materialize(1)), addMonths(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addWeeks(materialize('2023-10-22'), materialize(1)), addWeeks(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addDays(materialize('2023-10-22'), materialize(1)), addDays(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addHours(materialize('2023-10-22'), materialize(1)), addHours(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addMinutes(materialize('2023-10-22'), materialize(1)), addMinutes(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addSeconds(materialize('2023-10-22'), materialize(1)), addSeconds(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addMilliseconds(materialize('2023-10-22'), materialize(1)), addMilliseconds(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addMicroseconds(materialize('2023-10-22'), materialize(1)), addMicroseconds(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT addNanoseconds(materialize('2023-10-22'), materialize(1)), addNanoseconds(materialize('2023-10-22 12:34:56.123'), materialize(1));\n \n SELECT '   -- subtract';\n-SELECT subtractYears(materialize('2023-10-22'), materialize(1)), subtractYears(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractQuarters(materialize('2023-10-22'), materialize(1)), subtractQuarters(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractMonths(materialize('2023-10-22'), materialize(1)), subtractMonths(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractWeeks(materialize('2023-10-22'), materialize(1)), subtractWeeks(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractDays(materialize('2023-10-22'), materialize(1)), subtractDays(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractHours(materialize('2023-10-22'), materialize(1)), subtractHours(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractMinutes(materialize('2023-10-22'), materialize(1)), subtractMinutes(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractSeconds(materialize('2023-10-22'), materialize(1)), subtractSeconds(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractMilliseconds(materialize('2023-10-22'), materialize(1)), subtractMilliseconds(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractMicroseconds(materialize('2023-10-22'), materialize(1)), subtractMicroseconds(materialize('2023-10-22 00:00:00.000'), materialize(1));\n-SELECT subtractNanoseconds(materialize('2023-10-22'), materialize(1)), subtractNanoseconds(materialize('2023-10-22 00:00:00.000'), 1);\n+SELECT subtractYears(materialize('2023-10-22'), materialize(1)), subtractYears(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractQuarters(materialize('2023-10-22'), materialize(1)), subtractQuarters(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractMonths(materialize('2023-10-22'), materialize(1)), subtractMonths(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractWeeks(materialize('2023-10-22'), materialize(1)), subtractWeeks(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractDays(materialize('2023-10-22'), materialize(1)), subtractDays(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractHours(materialize('2023-10-22'), materialize(1)), subtractHours(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractMinutes(materialize('2023-10-22'), materialize(1)), subtractMinutes(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractSeconds(materialize('2023-10-22'), materialize(1)), subtractSeconds(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractMilliseconds(materialize('2023-10-22'), materialize(1)), subtractMilliseconds(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractMicroseconds(materialize('2023-10-22'), materialize(1)), subtractMicroseconds(materialize('2023-10-22 12:34:56.123'), materialize(1));\n+SELECT subtractNanoseconds(materialize('2023-10-22'), materialize(1)), subtractNanoseconds(materialize('2023-10-22 12:34:56.123'), 1);\n+\n+SELECT '-- plus operator';\n+\n+SELECT '2023-10-23' + INTERVAL 1 YEAR, '2023-10-23 12:34:56.123' + INTERVAL 1 YEAR;\n+SELECT '2023-10-23' + INTERVAL 1 QUARTER, '2023-10-23 12:34:56.123' + INTERVAL 1 QUARTER;\n+SELECT '2023-10-23' + INTERVAL 1 MONTH,'2023-10-23 12:34:56.123' + INTERVAL 1 MONTH;\n+SELECT '2023-10-23' + INTERVAL 1 WEEK, '2023-10-23 12:34:56.123' + INTERVAL 1 WEEK;\n+SELECT '2023-10-23' + INTERVAL 1 DAY, '2023-10-23 12:34:56.123' + INTERVAL 1 DAY;\n+SELECT '2023-10-23' + INTERVAL 1 HOUR, '2023-10-23 12:34:56.123' + INTERVAL 1 HOUR;\n+SELECT '2023-10-23' + INTERVAL 1 MINUTE, '2023-10-23 12:34:56.123' + INTERVAL 1 MINUTE;\n+SELECT '2023-10-23' + INTERVAL 1 SECOND, '2023-10-23 12:34:56.123' + INTERVAL 1 SECOND;\n+SELECT '2023-10-23' + INTERVAL 1 MILLISECOND, '2023-10-23 12:34:56.123' + INTERVAL 1 MILLISECOND;\n+SELECT '2023-10-23' + INTERVAL 1 MICROSECOND, '2023-10-23 12:34:56.123' + INTERVAL 1 MICROSECOND;\n+SELECT '2023-10-23' + INTERVAL 1 NANOSECOND, '2023-10-23 12:34:56.123' + INTERVAL 1 NANOSECOND;\n+\n+SELECT '-- minus operator';\n+\n+SELECT '2023-10-23' - INTERVAL 1 YEAR, '2023-10-23 12:34:56.123' - INTERVAL 1 YEAR;\n+SELECT '2023-10-23' - INTERVAL 1 QUARTER, '2023-10-23 12:34:56.123' - INTERVAL 1 QUARTER;\n+SELECT '2023-10-23' - INTERVAL 1 MONTH, '2023-10-23 12:34:56.123' - INTERVAL 1 MONTH;\n+SELECT '2023-10-23' - INTERVAL 1 WEEK, '2023-10-23 12:34:56.123' - INTERVAL 1 WEEK;\n+SELECT '2023-10-23' - INTERVAL 1 DAY, '2023-10-23 12:34:56.123' - INTERVAL 1 DAY;\n+SELECT '2023-10-23' - INTERVAL 1 HOUR, '2023-10-23 12:34:56.123' - INTERVAL 1 HOUR;\n+SELECT '2023-10-23' - INTERVAL 1 MINUTE, '2023-10-23 12:34:56.123' - INTERVAL 1 MINUTE;\n+SELECT '2023-10-23' - INTERVAL 1 SECOND, '2023-10-23 12:34:56.123' - INTERVAL 1 SECOND;\n+SELECT '2023-10-23' - INTERVAL 1 MILLISECOND, '2023-10-23 12:34:56.123' - INTERVAL 1 MILLISECOND;\n+SELECT '2023-10-23' - INTERVAL 1 MICROSECOND, '2023-10-23 12:34:56.123' - INTERVAL 1 MICROSECOND;\n+SELECT '2023-10-23' - INTERVAL 1 NANOSECOND, '2023-10-23 12:34:56.123' - INTERVAL 1 NANOSECOND;\n",
  "problem_statement": "MySQL Compatibility: Illegal type String of 1st argument of function addDate\nRequired for Tableau Online. \r\n\r\nSample rendered query:\r\n\r\n```sql\r\nSELECT \r\n  ADDDATE( DATE_FORMAT( `cell_towers`.`updated`, '%Y-01-01 00:00:00' ), INTERVAL 0 SECOND ) AS `tyr_updated_ok` \r\nFROM `cell_towers` \r\nGROUP BY 1\r\n```\r\n\r\nfails with\r\n\r\n```\r\nCode: 43. DB::Exception: Illegal type String of 1st argument of function addDate. Should be a date or a date with time: In scope SELECT ADDDATE(DATE_FORMAT(cell_towers.updated, '%Y-01-01 00:00:00'), toIntervalSecond(0)) AS tyr_updated_ok FROM cell_towers GROUP BY 1. (ILLEGAL_TYPE_OF_ARGUMENT)\r\n```\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use: latest master\r\n* Which interface to use, if matters: MySQL\r\n* Sample data for all these tables: cell_towers sample dataset\r\n\r\n**Expected behavior**\r\n\r\nADDDATE accepts String argument like in MySQL.\n",
  "hints_text": "",
  "created_at": "2023-10-24T09:03:48Z"
}