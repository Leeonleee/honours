{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 25539,
  "instance_id": "ClickHouse__ClickHouse-25539",
  "issue_numbers": [
    "20872"
  ],
  "base_commit": "d6b93f3af8517adb7d0bed68bce30801c2a3fa24",
  "patch": "diff --git a/src/Processors/QueryPlan/FillingStep.cpp b/src/Processors/QueryPlan/FillingStep.cpp\nindex a4306ffed2bf..ba3588efa726 100644\n--- a/src/Processors/QueryPlan/FillingStep.cpp\n+++ b/src/Processors/QueryPlan/FillingStep.cpp\n@@ -38,9 +38,10 @@ FillingStep::FillingStep(const DataStream & input_stream_, SortDescription sort_\n \n void FillingStep::transformPipeline(QueryPipeline & pipeline, const BuildQueryPipelineSettings &)\n {\n-    pipeline.addSimpleTransform([&](const Block & header)\n+    pipeline.addSimpleTransform([&](const Block & header, QueryPipeline::StreamType stream_type) -> ProcessorPtr\n     {\n-        return std::make_shared<FillingTransform>(header, sort_description);\n+        bool on_totals = stream_type == QueryPipeline::StreamType::Totals;\n+        return std::make_shared<FillingTransform>(header, sort_description, on_totals);\n     });\n }\n \ndiff --git a/src/Processors/Transforms/FillingTransform.cpp b/src/Processors/Transforms/FillingTransform.cpp\nindex 8419daf91867..45e46649b3a4 100644\n--- a/src/Processors/Transforms/FillingTransform.cpp\n+++ b/src/Processors/Transforms/FillingTransform.cpp\n@@ -30,12 +30,16 @@ Block FillingTransform::transformHeader(Block header, const SortDescription & so\n }\n \n FillingTransform::FillingTransform(\n-        const Block & header_, const SortDescription & sort_description_)\n+        const Block & header_, const SortDescription & sort_description_, bool on_totals_)\n         : ISimpleTransform(header_, transformHeader(header_, sort_description_), true)\n         , sort_description(sort_description_)\n+        , on_totals(on_totals_)\n         , filling_row(sort_description_)\n         , next_row(sort_description_)\n {\n+    if (on_totals)\n+        return;\n+\n     auto try_convert_fields = [](auto & descr, const auto & type)\n     {\n         auto max_type = Field::Types::Null;\n@@ -106,7 +110,7 @@ FillingTransform::FillingTransform(\n \n IProcessor::Status FillingTransform::prepare()\n {\n-    if (input.isFinished() && !output.isFinished() && !has_input && !generate_suffix)\n+    if (!on_totals && input.isFinished() && !output.isFinished() && !has_input && !generate_suffix)\n     {\n         should_insert_first = next_row < filling_row;\n \n@@ -126,6 +130,9 @@ IProcessor::Status FillingTransform::prepare()\n \n void FillingTransform::transform(Chunk & chunk)\n {\n+    if (on_totals)\n+        return;\n+\n     Columns old_fill_columns;\n     Columns old_other_columns;\n     MutableColumns res_fill_columns;\ndiff --git a/src/Processors/Transforms/FillingTransform.h b/src/Processors/Transforms/FillingTransform.h\nindex 33717b079a05..7ccebadfb6da 100644\n--- a/src/Processors/Transforms/FillingTransform.h\n+++ b/src/Processors/Transforms/FillingTransform.h\n@@ -13,7 +13,7 @@ namespace DB\n class FillingTransform : public ISimpleTransform\n {\n public:\n-    FillingTransform(const Block & header_, const SortDescription & sort_description_);\n+    FillingTransform(const Block & header_, const SortDescription & sort_description_, bool on_totals_);\n \n     String getName() const override { return \"FillingTransform\"; }\n \n@@ -28,6 +28,8 @@ class FillingTransform : public ISimpleTransform\n     void setResultColumns(Chunk & chunk, MutableColumns & fill_columns, MutableColumns & other_columns) const;\n \n     const SortDescription sort_description; /// Contains only rows with WITH FILL.\n+    const bool on_totals; /// FillingTransform does nothing on totals.\n+\n     FillingRow filling_row; /// Current row, which is used to fill gaps.\n     FillingRow next_row; /// Row to which we need to generate filling rows.\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01921_with_fill_with_totals.reference b/tests/queries/0_stateless/01921_with_fill_with_totals.reference\nnew file mode 100644\nindex 000000000000..1f209c7db3de\n--- /dev/null\n+++ b/tests/queries/0_stateless/01921_with_fill_with_totals.reference\n@@ -0,0 +1,34 @@\n+15\t0\n+14\t0\n+13\t0\n+12\t0\n+11\t0\n+10\t0\n+9\t0\n+8\t0\n+7\t7\n+6\t0\n+5\t0\n+4\t4\n+3\t0\n+2\t0\n+1\t1\n+\n+0\t12\n+15\t0\n+14\t0\n+13\t0\n+12\t0\n+11\t0\n+10\t0\n+9\t0\n+8\t0\n+7\t7\n+6\t0\n+5\t0\n+4\t4\n+3\t0\n+2\t0\n+1\t1\n+\n+0\t12\ndiff --git a/tests/queries/0_stateless/01921_with_fill_with_totals.sql b/tests/queries/0_stateless/01921_with_fill_with_totals.sql\nnew file mode 100644\nindex 000000000000..1821e5b2413e\n--- /dev/null\n+++ b/tests/queries/0_stateless/01921_with_fill_with_totals.sql\n@@ -0,0 +1,17 @@\n+SELECT\n+    number,\n+    sum(number)\n+FROM numbers(10)\n+WHERE number % 3 = 1\n+GROUP BY number\n+    WITH TOTALS\n+ORDER BY number DESC WITH FILL FROM 15;\n+\n+SELECT\n+    number,\n+    sum(number)\n+FROM numbers(10)\n+WHERE number % 3 = 1\n+GROUP BY number\n+    WITH TOTALS\n+ORDER BY 10, number DESC WITH FILL FROM 15;\n",
  "problem_statement": "WITH FILL FROM TO breaks WITH TOTALS result\n```\r\nSELECT *\r\nFROM xrollup\r\n\r\nQuery id: e702f6fe-8595-4a9f-aeff-ea65e2045801\r\n\r\n\u250c\u2500metric\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500b\u2500\u252c\u2500v\u2500\u2510\r\n\u2502      2 \u2502 2018-01-01 \u2502 1 \u2502\r\n\u2502      2 \u2502 2018-02-02 \u2502 1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\r\n\u250c\u2500metric\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500b\u2500\u252c\u2500v\u2500\u2510\r\n\u2502      1 \u2502 2018-01-01 \u2502 1 \u2502\r\n\u2502      1 \u2502 2018-01-02 \u2502 1 \u2502\r\n\u2502      1 \u2502 2018-02-01 \u2502 1 \u2502\r\n\u2502      1 \u2502 2017-03-01 \u2502 1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\r\n\r\n6 rows in set. Elapsed: 0.004 sec.\r\n```\r\n\r\n`WITH TOTALS + WITH FILL:`\r\n\r\n```\r\nSELECT\r\n    b,\r\n    sum(v)\r\nFROM xrollup\r\nGROUP BY b\r\n    WITH TOTALS\r\nORDER BY b DESC WITH FILL\r\nLIMIT 5\r\n\r\nQuery id: ae21086d-eb89-4b73-b9be-7baa4c0cee27\r\n\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500b\u2500\u252c\u2500sum(v)\u2500\u2510\r\n\u2502 2018-02-02 \u2502      1 \u2502\r\n\u2502 2018-02-01 \u2502      1 \u2502\r\n\u2502 2018-01-31 \u2502      0 \u2502\r\n\u2502 2018-01-30 \u2502      0 \u2502\r\n\u2502 2018-01-29 \u2502      0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\nTotals:\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500b\u2500\u252c\u2500sum(v)\u2500\u2510\r\n\u2502 1970-01-01 \u2502      6 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n5 rows in set. Elapsed: 0.003 sec.\r\n```\r\n\r\n`WITH TOTALS + WITH FILL FROM:`\r\n\r\n```\r\nSELECT\r\n    b,\r\n    sum(v)\r\nFROM xrollup\r\nGROUP BY b\r\n    WITH TOTALS\r\nORDER BY b DESC WITH FILL FROM today()\r\nLIMIT 5\r\n\r\nQuery id: cbf3d659-cf10-4b3b-800f-a5af11fc9faa\r\n\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500b\u2500\u252c\u2500sum(v)\u2500\u2510\r\n\u2502 2021-02-18 \u2502      0 \u2502\r\n\u2502 2021-02-17 \u2502      0 \u2502\r\n\u2502 2021-02-16 \u2502      0 \u2502\r\n\u2502 2021-02-15 \u2502      0 \u2502\r\n\u2502 2021-02-14 \u2502      0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\nTotals:\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500b\u2500\u252c\u2500sum(v)\u2500\u2510\r\n\u2502 2021-02-18 \u2502      0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n5 rows in set. Elapsed: 0.006 sec.\r\n```\r\n\n",
  "hints_text": "And also `rows_before_limit_at_least` stays the same, no matter what date range (with filled missing dates) is.",
  "created_at": "2021-06-21T11:44:58Z"
}