diff --git a/tests/queries/0_stateless/03321_functions_to_subcolumns_skip_index.reference b/tests/queries/0_stateless/03321_functions_to_subcolumns_skip_index.reference
new file mode 100644
index 000000000000..c0b7bee91122
--- /dev/null
+++ b/tests/queries/0_stateless/03321_functions_to_subcolumns_skip_index.reference
@@ -0,0 +1,6 @@
+Granules: 3/3
+Granules: 1/3
+1
+Granules: 3/3
+Granules: 1/3
+1	{'1':'1'}
diff --git a/tests/queries/0_stateless/03321_functions_to_subcolumns_skip_index.sql b/tests/queries/0_stateless/03321_functions_to_subcolumns_skip_index.sql
new file mode 100644
index 000000000000..b1ac8ce1a652
--- /dev/null
+++ b/tests/queries/0_stateless/03321_functions_to_subcolumns_skip_index.sql
@@ -0,0 +1,48 @@
+-- Tags: no-parallel-replicas
+
+DROP TABLE IF EXISTS bloom_filter_test;
+
+CREATE TABLE bloom_filter_test
+(
+    id UInt64,
+    m Map(String, String),
+    INDEX idx_mk mapKeys(m) TYPE bloom_filter GRANULARITY 1
+)
+ENGINE = MergeTree
+ORDER BY id
+SETTINGS index_granularity = 1;
+
+INSERT INTO bloom_filter_test VALUES (1, {'1': '1'}), (2, {'2': '2'}), (3, {'3': '3'});
+
+SET enable_analyzer = 1;
+SET optimize_functions_to_subcolumns = 1;
+
+SELECT trim(explain) FROM
+(
+    EXPLAIN indexes = 1
+    SELECT id          -- 'm' not in projection columns
+    FROM bloom_filter_test
+    WHERE mapContains(m, '1')
+    ORDER BY id
+) WHERE explain LIKE '%Granules:%';
+
+SELECT id          -- 'm' not in projection columns
+FROM bloom_filter_test
+WHERE mapContains(m, '1')
+ORDER BY id;
+
+SELECT trim(explain) FROM
+(
+    EXPLAIN indexes = 1
+    SELECT *           -- 'm' in projection columns
+    FROM bloom_filter_test
+    WHERE mapContains(m, '1')
+    ORDER BY id
+) WHERE explain LIKE '%Granules:%';
+
+SELECT *           -- 'm' in projection columns
+FROM bloom_filter_test
+WHERE mapContains(m, '1')
+ORDER BY id;
+
+DROP TABLE bloom_filter_test;
