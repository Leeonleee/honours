You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
SummingMergeTree support for DateTime64
**Describe the unexpected behaviour**

When using a `DateTime64` in a `SummingMergeTree` on a column that is not part of the sorting key or a summarizable field. You get the following error on insert time:

```
Received exception from server (version 23.5.1):
Code: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type DateTime64(3) of argument for aggregate function sumWithOverflow. (ILLEGAL_TYPE_OF_ARGUMENT)
(query: INSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 1 value;)
```

This was discovered in CH 22.8 but is also happening in master.

**How to reproduce**

To reproduce the issue:

```sql
DROP DATABASE IF EXISTS summ;
CREATE DATABASE summ;

CREATE TABLE summ.landing ( `pk` UInt64, `timestamp` DateTime64(3), `value` UInt64)
ENGINE = SummingMergeTree() ORDER BY pk;

INSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 1 value;
INSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 2 value;
INSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 3 value;
INSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 4 value;
INSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 5 value;

SELECT * FROM summ.landing FINAL FORMAT PrettyCompact;
```

**Expected behavior**

I'd expect the DateTime64 column to behave in a similar way to how DateTime behaves, the column is not summarized, and an arbitrary value gets selected.

See:

```sql
DROP DATABASE IF EXISTS summ;
CREATE DATABASE summ;

CREATE TABLE summ.landing ( `pk` UInt64, `timestamp` DateTime, `value` UInt64)
ENGINE = SummingMergeTree() ORDER BY pk;

INSERT INTO summ.landing SELECT 1 pk, now() timestamp, 1 value;
INSERT INTO summ.landing SELECT 1 pk, now() timestamp, 2 value;
INSERT INTO summ.landing SELECT 1 pk, now() timestamp, 3 value;
INSERT INTO summ.landing SELECT 1 pk, now() timestamp, 4 value;
INSERT INTO summ.landing SELECT 1 pk, now() timestamp, 5 value;

SELECT * FROM summ.landing FINAL FORMAT PrettyCompact;

```

=> 

```
┌─pk─┬───────────timestamp─┬─value─┐
│  1 │ 2023-05-17 09:21:08 │    15 │
└────┴─────────────────────┴───────┘
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
