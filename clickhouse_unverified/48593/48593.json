{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 48593,
  "instance_id": "ClickHouse__ClickHouse-48593",
  "issue_numbers": [
    "48462"
  ],
  "base_commit": "267cd097bfba60b684cc3e7b7d73c506642f9c0d",
  "patch": "diff --git a/src/AggregateFunctions/AggregateFunctionGroupArray.cpp b/src/AggregateFunctions/AggregateFunctionGroupArray.cpp\nindex 15f500b8bb60..67cfa3f73563 100644\n--- a/src/AggregateFunctions/AggregateFunctionGroupArray.cpp\n+++ b/src/AggregateFunctions/AggregateFunctionGroupArray.cpp\n@@ -121,7 +121,7 @@ AggregateFunctionPtr createAggregateFunctionGroupArraySample(\n \n void registerAggregateFunctionGroupArray(AggregateFunctionFactory & factory)\n {\n-    AggregateFunctionProperties properties = { .returns_default_when_only_null = false, .is_order_dependent = true };\n+    AggregateFunctionProperties properties = { .returns_default_when_only_null = true, .is_order_dependent = true };\n \n     factory.registerFunction(\"groupArray\", { createAggregateFunctionGroupArray<false>, properties });\n     factory.registerFunction(\"groupArraySample\", { createAggregateFunctionGroupArraySample, properties });\ndiff --git a/src/AggregateFunctions/AggregateFunctionNull.cpp b/src/AggregateFunctions/AggregateFunctionNull.cpp\nindex 3d3d7af30260..19c66db98cd3 100644\n--- a/src/AggregateFunctions/AggregateFunctionNull.cpp\n+++ b/src/AggregateFunctions/AggregateFunctionNull.cpp\n@@ -72,7 +72,7 @@ class AggregateFunctionCombinatorNull final : public IAggregateFunctionCombinato\n         {\n             /// Currently the only functions that returns not-NULL on all NULL arguments are count and uniq, and they returns UInt64.\n             if (properties.returns_default_when_only_null)\n-                return std::make_shared<AggregateFunctionNothing>(arguments, params, std::make_shared<DataTypeUInt64>());\n+                return std::make_shared<AggregateFunctionNothing>(arguments, params, nested_function->getResultType());\n             else\n                 return std::make_shared<AggregateFunctionNothing>(arguments, params, std::make_shared<DataTypeNullable>(std::make_shared<DataTypeNothing>()));\n         }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00529_orantius.reference b/tests/queries/0_stateless/00529_orantius.reference\nindex 865659048cc4..1deecf44752a 100644\n--- a/tests/queries/0_stateless/00529_orantius.reference\n+++ b/tests/queries/0_stateless/00529_orantius.reference\n@@ -3,7 +3,7 @@\n 1\n 1\n [[1],[-1]]\n-\\N\n+[]\n 1\n 42\t42\n [NULL,'','',NULL]\ndiff --git a/tests/queries/0_stateless/01664_array_slice_ubsan.reference b/tests/queries/0_stateless/01664_array_slice_ubsan.reference\nindex abae410d95c3..beb31c4a02bf 100644\n--- a/tests/queries/0_stateless/01664_array_slice_ubsan.reference\n+++ b/tests/queries/0_stateless/01664_array_slice_ubsan.reference\n@@ -1,1 +1,1 @@\n-[0,0,0]\n+['\\0','\\0','\\0']\ndiff --git a/tests/queries/0_stateless/02713_group_array_nullable.reference b/tests/queries/0_stateless/02713_group_array_nullable.reference\nnew file mode 100644\nindex 000000000000..a163ccade3ad\n--- /dev/null\n+++ b/tests/queries/0_stateless/02713_group_array_nullable.reference\n@@ -0,0 +1,3 @@\n+[1]\n+[0,1,2,3,4,5,6,7,8,9]\n+[8,9]\ndiff --git a/tests/queries/0_stateless/02713_group_array_nullable.sql b/tests/queries/0_stateless/02713_group_array_nullable.sql\nnew file mode 100644\nindex 000000000000..a0cb3075252a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02713_group_array_nullable.sql\n@@ -0,0 +1,5 @@\n+SET aggregate_functions_null_for_empty = 1;\n+\t\n+SELECT groupArray(1);\n+SELECT groupArray(number) FROM numbers(10);\n+SELECT groupArrayLast(2)(number) FROM numbers(10);\n",
  "problem_statement": "Should `returns_default_when_only_null` be true for  `groupArray`\n> Make sure to check documentation https://clickhouse.com/docs/en/ first. If the question is concise and probably has a short answer, asking it in [community Slack](https://join.slack.com/t/clickhousedb/shared_invite/zt-1gh9ds7f4-PgDhJAaF8ad5RbWBAAjzFg) is probably the fastest way to find the answer. For more complicated questions, consider asking them on StackOverflow with \"clickhouse\" tag https://stackoverflow.com/questions/tagged/clickhouse \r\n\r\n> If you still prefer GitHub issues, remove all this text and ask your question here.\r\n\r\nSince `array` type could not be null, should the property `returns_default_when_only_null` for `groupArray` be true ?\r\n\r\n```C++\r\nvoid registerAggregateFunctionGroupArray(AggregateFunctionFactory & factory)\r\n{\r\n    AggregateFunctionProperties properties = { .returns_default_when_only_null = false, .is_order_dependent = true };\r\n\r\n    factory.registerFunction(\"groupArray\", { createAggregateFunctionGroupArray<false>, properties });\r\n    factory.registerFunction(\"groupArraySample\", { createAggregateFunctionGroupArraySample, properties });\r\n    factory.registerFunction(\"groupArrayLast\", { createAggregateFunctionGroupArray<true>, properties });\r\n}\r\n\r\n```\n",
  "hints_text": "Probably yes.\r\nIt will solve https://github.com/ClickHouse/ClickHouse/issues/38738 issue\r\n\r\n```\r\nSELECT groupArray(1)  SETTINGS aggregate_functions_null_for_empty = 1;\r\nDB::Exception: Received from localhost:9000. DB::Exception: Nested type Array(UInt8) cannot be inside Nullable type. (ILLEGAL_TYPE_OF_ARGUMENT)\r\n```\r\n\r\n",
  "created_at": "2023-04-10T09:12:47Z",
  "modified_files": [
    "src/AggregateFunctions/AggregateFunctionGroupArray.cpp",
    "src/AggregateFunctions/AggregateFunctionNull.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/00529_orantius.reference",
    "tests/queries/0_stateless/01664_array_slice_ubsan.reference",
    "b/tests/queries/0_stateless/02713_group_array_nullable.reference",
    "b/tests/queries/0_stateless/02713_group_array_nullable.sql"
  ]
}