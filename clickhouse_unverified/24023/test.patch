diff --git a/tests/performance/column_column_comparison.xml b/tests/performance/column_column_comparison.xml
deleted file mode 100644
index 2b59a65a54b1..000000000000
--- a/tests/performance/column_column_comparison.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<test>
-    <tags>
-        <tag>comparison</tag>
-    </tags>
-
-    <preconditions>
-        <table_exists>hits_100m_single</table_exists>
-    </preconditions>
-
-
-    <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE URL < URL]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE URL < PageCharset]]></query>
-    <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE SearchPhrase < SearchPhrase SETTINGS max_threads = 2]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE SearchPhrase < URL]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE SearchPhrase < PageCharset SETTINGS max_threads = 2]]></query>
-    <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(SearchPhrase) AND SearchPhrase < SearchPhrase SETTINGS max_threads = 2]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(SearchPhrase) AND SearchPhrase < URL]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(SearchPhrase) AND SearchPhrase < PageCharset SETTINGS max_threads = 2]]></query>
-    <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE MobilePhoneModel < MobilePhoneModel SETTINGS max_threads = 1]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE MobilePhoneModel < URL]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE MobilePhoneModel < PageCharset SETTINGS max_threads = 2]]></query>
-    <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(MobilePhoneModel) AND MobilePhoneModel < MobilePhoneModel SETTINGS max_threads = 1]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(MobilePhoneModel) AND MobilePhoneModel < URL]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(MobilePhoneModel) AND MobilePhoneModel < PageCharset SETTINGS max_threads = 2]]></query>
-    <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE PageCharset < PageCharset SETTINGS max_threads = 2]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE PageCharset < URL]]></query>
-    <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE Title < Title]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE Title < URL]]></query>
-    <query><![CDATA[SELECT count() FROM hits_100m_single WHERE Title < PageCharset]]></query>
-
-</test>
diff --git a/tests/queries/0_stateless/00911_tautological_compare.reference b/tests/queries/0_stateless/00911_tautological_compare.reference
index 405d33487754..e69de29bb2d1 100644
--- a/tests/queries/0_stateless/00911_tautological_compare.reference
+++ b/tests/queries/0_stateless/00911_tautological_compare.reference
@@ -1,8 +0,0 @@
-0
-0
-0
-0
-0
-0
-0
-0
diff --git a/tests/queries/0_stateless/00911_tautological_compare.sql b/tests/queries/0_stateless/00911_tautological_compare.sql
index 34c95d737164..bcbbbeb514bc 100644
--- a/tests/queries/0_stateless/00911_tautological_compare.sql
+++ b/tests/queries/0_stateless/00911_tautological_compare.sql
@@ -1,10 +1,49 @@
-SELECT count() FROM system.numbers WHERE number != number;
-SELECT count() FROM system.numbers WHERE number < number;
-SELECT count() FROM system.numbers WHERE number > number;
+-- TODO: Tautological optimization breaks JIT expression compilation, because it can return constant result
+-- for non constant columns. And then sample blocks from same ActionsDAGs can be mismatched.
+-- This optimization cannot be performed on AST rewrite level, because we does not have information about types
+-- and equals(tuple(NULL), tuple(NULL)) have same hash code, but should not be optimized.
+-- Return this test after refactoring of InterpreterSelectQuery.
 
-SELECT count() FROM system.numbers WHERE NOT (number = number);
-SELECT count() FROM system.numbers WHERE NOT (number <= number);
-SELECT count() FROM system.numbers WHERE NOT (number >= number);
+-- SELECT count() FROM system.numbers WHERE number != number;
+-- SELECT count() FROM system.numbers WHERE number < number;
+-- SELECT count() FROM system.numbers WHERE number > number;
 
-SELECT count() FROM system.numbers WHERE SHA256(toString(number)) != SHA256(toString(number));
-SELECT count() FROM system.numbers WHERE SHA256(toString(number)) != SHA256(toString(number)) AND rand() > 10;
+-- SELECT count() FROM system.numbers WHERE NOT (number = number);
+-- SELECT count() FROM system.numbers WHERE NOT (number <= number);
+-- SELECT count() FROM system.numbers WHERE NOT (number >= number);
+
+-- SELECT count() FROM system.numbers WHERE SHA256(toString(number)) != SHA256(toString(number));
+-- SELECT count() FROM system.numbers WHERE SHA256(toString(number)) != SHA256(toString(number)) AND rand() > 10;
+
+-- column_column_comparison.xml
+-- <test>
+--     <tags>
+--         <tag>comparison</tag>
+--     </tags>
+
+--     <preconditions>
+--         <table_exists>hits_100m_single</table_exists>
+--     </preconditions>
+
+
+--     <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE URL < URL]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE URL < PageCharset]]></query>
+--     <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE SearchPhrase < SearchPhrase SETTINGS max_threads = 2]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE SearchPhrase < URL]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE SearchPhrase < PageCharset SETTINGS max_threads = 2]]></query>
+--     <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(SearchPhrase) AND SearchPhrase < SearchPhrase SETTINGS max_threads = 2]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(SearchPhrase) AND SearchPhrase < URL]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(SearchPhrase) AND SearchPhrase < PageCharset SETTINGS max_threads = 2]]></query>
+--     <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE MobilePhoneModel < MobilePhoneModel SETTINGS max_threads = 1]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE MobilePhoneModel < URL]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE MobilePhoneModel < PageCharset SETTINGS max_threads = 2]]></query>
+--     <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(MobilePhoneModel) AND MobilePhoneModel < MobilePhoneModel SETTINGS max_threads = 1]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(MobilePhoneModel) AND MobilePhoneModel < URL]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE notEmpty(MobilePhoneModel) AND MobilePhoneModel < PageCharset SETTINGS max_threads = 2]]></query>
+--     <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE PageCharset < PageCharset SETTINGS max_threads = 2]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE PageCharset < URL]]></query>
+--     <query short="1"><![CDATA[SELECT count() FROM hits_100m_single WHERE Title < Title]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE Title < URL]]></query>
+--     <query><![CDATA[SELECT count() FROM hits_100m_single WHERE Title < PageCharset]]></query>
+
+-- </test>
diff --git a/tests/queries/0_stateless/01855_jit_comparison_constant_result.reference b/tests/queries/0_stateless/01855_jit_comparison_constant_result.reference
index a9e2f17562ae..e97edac16d69 100644
--- a/tests/queries/0_stateless/01855_jit_comparison_constant_result.reference
+++ b/tests/queries/0_stateless/01855_jit_comparison_constant_result.reference
@@ -1,3 +1,11 @@
+ComparisionOperator column with same column
+1
+1
+1
+1
+1
+1
+ComparisionOperator column with alias on same column
 1
 1
 1
diff --git a/tests/queries/0_stateless/01855_jit_comparison_constant_result.sql b/tests/queries/0_stateless/01855_jit_comparison_constant_result.sql
index b8d06e218e08..51cf9aa1d174 100644
--- a/tests/queries/0_stateless/01855_jit_comparison_constant_result.sql
+++ b/tests/queries/0_stateless/01855_jit_comparison_constant_result.sql
@@ -1,6 +1,8 @@
 SET compile_expressions = 1;
 SET min_count_to_compile_expression = 0;
 
+SELECT 'ComparisionOperator column with same column';
+
 DROP TABLE IF EXISTS test_table;
 CREATE TABLE test_table (a UInt64) ENGINE = MergeTree() ORDER BY tuple();
 INSERT INTO test_table VALUES (1);
@@ -13,3 +15,22 @@ SELECT test_table.a FROM test_table ORDER BY (test_table.a <= test_table.a) + 1;
 
 SELECT test_table.a FROM test_table ORDER BY (test_table.a == test_table.a) + 1;
 SELECT test_table.a FROM test_table ORDER BY (test_table.a != test_table.a) + 1;
+
+DROP TABLE test_table;
+
+SELECT 'ComparisionOperator column with alias on same column';
+
+DROP TABLE IF EXISTS test_table;
+CREATE TABLE test_table (a UInt64, b ALIAS a, c ALIAS b) ENGINE = MergeTree() ORDER BY tuple();
+INSERT INTO test_table VALUES (1);
+
+SELECT test_table.a FROM test_table ORDER BY (test_table.a > test_table.b) + 1 AND (test_table.a > test_table.c) + 1;
+SELECT test_table.a FROM test_table ORDER BY (test_table.a >= test_table.b) + 1 AND (test_table.a >= test_table.c) + 1;
+
+SELECT test_table.a FROM test_table ORDER BY (test_table.a < test_table.b) + 1 AND (test_table.a < test_table.c) + 1;
+SELECT test_table.a FROM test_table ORDER BY (test_table.a <= test_table.b) + 1 AND (test_table.a <= test_table.c) + 1;
+
+SELECT test_table.a FROM test_table ORDER BY (test_table.a == test_table.b) + 1 AND (test_table.a == test_table.c) + 1;
+SELECT test_table.a FROM test_table ORDER BY (test_table.a != test_table.b) + 1 AND (test_table.a != test_table.c) + 1;
+
+DROP TABLE test_table;
