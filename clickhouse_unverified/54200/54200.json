{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 54200,
  "instance_id": "ClickHouse__ClickHouse-54200",
  "issue_numbers": [
    "54162"
  ],
  "base_commit": "82d9861fc0748f430d929481bcde886666c89ab9",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeIndexFullText.cpp b/src/Storages/MergeTree/MergeTreeIndexFullText.cpp\nindex b6a2cafe245e..754340352dcd 100644\n--- a/src/Storages/MergeTree/MergeTreeIndexFullText.cpp\n+++ b/src/Storages/MergeTree/MergeTreeIndexFullText.cpp\n@@ -737,7 +737,7 @@ void bloomFilterIndexValidator(const IndexDescription & index, bool /*attach*/)\n             data_type = WhichDataType(low_cardinality.getDictionaryType());\n         }\n \n-        if (!data_type.isString() && !data_type.isFixedString())\n+        if (!data_type.isString() && !data_type.isFixedString() && !data_type.isIPv6())\n             throw Exception(ErrorCodes::INCORRECT_QUERY,\n                 \"Ngram and token bloom filter indexes can only be used with column types `String`, `FixedString`, `LowCardinality(String)`, `LowCardinality(FixedString)`, `Array(String)` or `Array(FixedString)`\");\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00908_bloom_filter_index.reference b/tests/queries/0_stateless/00908_bloom_filter_index.reference\nindex 641e4f035dd7..c0cbd6c0335a 100644\n--- a/tests/queries/0_stateless/00908_bloom_filter_index.reference\n+++ b/tests/queries/0_stateless/00908_bloom_filter_index.reference\n@@ -40,3 +40,4 @@\n 13\tabc\n \t\t\"rows_read\": 3,\n 2\n+::1\ndiff --git a/tests/queries/0_stateless/00908_bloom_filter_index.sh b/tests/queries/0_stateless/00908_bloom_filter_index.sh\nindex 92b5634c1db6..88fc79442360 100755\n--- a/tests/queries/0_stateless/00908_bloom_filter_index.sh\n+++ b/tests/queries/0_stateless/00908_bloom_filter_index.sh\n@@ -150,3 +150,15 @@ CREATE TABLE bloom_filter_idx_na\n     INDEX bf na TYPE bloom_filter(0.1) GRANULARITY 1\n ) ENGINE = MergeTree()\n ORDER BY na\" 2>&1 | grep -c 'DB::Exception: Unexpected type Array(Array(String)) of bloom filter index'\n+\n+# NGRAM BF with IPv6\n+$CLICKHOUSE_CLIENT -n --query=\"\n+CREATE TABLE bloom_filter_ipv6_idx\n+(\n+    foo IPv6,\n+    INDEX fooIndex foo TYPE ngrambf_v1(8,512,3,0) GRANULARITY 1\n+) ENGINE = MergeTree() ORDER BY foo;\"\n+\n+$CLICKHOUSE_CLIENT --query=\"INSERT INTO bloom_filter_ipv6_idx VALUES ('::1.2.3.4'),('::0'),('::1')\"\n+$CLICKHOUSE_CLIENT --query=\"SELECT * FROM bloom_filter_ipv6_idx WHERE foo IN ('::1')\"\n+$CLICKHOUSE_CLIENT --query=\"DROP TABLE bloom_filter_ipv6_idx\"\n",
  "problem_statement": "ngram bloomfilter index based on IPv6 type breaks in v23.3\n**Describe the unexpected behaviour**\r\nWe are trying to upgrade from v22.3-lts to v23.3-lts. This is when we noticed that v23.3 wasn't happy with ngram bloom filter indices we had defined on IPv6 type.\r\n\r\n**How to reproduce**\r\n\r\n- v22.3: https://fiddle.clickhouse.com/623b1437-2ad7-4803-b33f-8793d3e9a87e\r\n- v23.3: https://fiddle.clickhouse.com/9eaef7e1-c306-45d2-bffa-1cd359337a87\r\n\r\n* Which ClickHouse server version to use: v23.3-lts\r\n* Queries to run that lead to unexpected result\r\n```\r\nDROP TABLE IF EXISTS table1;\r\nCREATE TABLE table1 (foo IPv6, INDEX fooIndex foo TYPE ngrambf_v1(8,512,3,0) GRANULARITY 1) ENGINE = MergeTree() ORDER BY foo;\r\nDETACH table table1;\r\nATTACH TABLE table1;\r\nDROP TABLE table1;\r\n```\r\n**Expected behavior**\r\n I would ideally expect this to behave the same as is behaves in v22.3-lts.\r\n\r\n**Error message and/or stacktrace**\r\n```\r\nReceived exception from server (version 23.3.8):\r\nCode: 80. DB::Exception: Received from localhost:9000. DB::Exception: Ngram and token bloom filter indexes can only be used with column types `String`, `FixedString`, `LowCardinality(String)`, `LowCardinality(FixedString)`, `Array(String)` or `Array(FixedString)`. (INCORRECT_QUERY)\r\n(query: CREATE TABLE table1 (foo IPv6, INDEX fooIndex foo TYPE ngrambf_v1(8,512,3,0) GRANULARITY 1) ENGINE = MergeTree() ORDER BY foo;)\r\n```\r\n**Additional context**\r\n\r\nI think the issue here is that IPv6 used to be based on `FixedString(16)` if I recall correctly. But since `v23.3`, it looks like it's now based on IPv6 native type: `https://github.com/ClickHouse/ClickHouse/pull/43221` (which seems to have an underlying type of UInt128). \r\n\r\nWhat could be the possible fix/approach here for the upgrade since this change looks backwards incompatible.\r\n\r\nThank you in advance for taking a look at my issue.\n",
  "hints_text": "cc: @yakov-olkhovskiy ",
  "created_at": "2023-09-01T22:47:27Z"
}