{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 55609,
  "instance_id": "ClickHouse__ClickHouse-55609",
  "issue_numbers": [
    "55562"
  ],
  "base_commit": "e40aa7288341def350b266d56d2dffe6b44fd675",
  "patch": "diff --git a/src/Core/Settings.h b/src/Core/Settings.h\nindex c08425c03fd4..bebe032ead5f 100644\n--- a/src/Core/Settings.h\n+++ b/src/Core/Settings.h\n@@ -627,7 +627,7 @@ class IColumn;\n     \\\n     M(Bool, optimize_rewrite_sum_if_to_count_if, false, \"Rewrite sumIf() and sum(if()) function countIf() function when logically equivalent\", 0) \\\n     M(Bool, optimize_rewrite_aggregate_function_with_if, true, \"Rewrite aggregate functions with if expression as argument when logically equivalent. For example, avg(if(cond, col, null)) can be rewritten to avgIf(cond, col)\", 0) \\\n-    M(Bool, optimize_rewrite_array_exists_to_has, true, \"Rewrite arrayExists() functions to has() when logically equivalent. For example, arrayExists(x -> x = 1, arr) can be rewritten to has(arr, 1)\", 0) \\\n+    M(Bool, optimize_rewrite_array_exists_to_has, false, \"Rewrite arrayExists() functions to has() when logically equivalent. For example, arrayExists(x -> x = 1, arr) can be rewritten to has(arr, 1)\", 0) \\\n     M(UInt64, insert_shard_id, 0, \"If non zero, when insert into a distributed table, the data will be inserted into the shard `insert_shard_id` synchronously. Possible values range from 1 to `shards_number` of corresponding distributed table\", 0) \\\n     \\\n     M(Bool, collect_hash_table_stats_during_aggregation, true, \"Enable collecting hash table statistics to optimize memory allocation\", 0) \\\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02896_optimize_array_exists_to_has_with_date.reference b/tests/queries/0_stateless/02896_optimize_array_exists_to_has_with_date.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02896_optimize_array_exists_to_has_with_date.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/02896_optimize_array_exists_to_has_with_date.sql b/tests/queries/0_stateless/02896_optimize_array_exists_to_has_with_date.sql\nnew file mode 100644\nindex 000000000000..b87a154b46ab\n--- /dev/null\n+++ b/tests/queries/0_stateless/02896_optimize_array_exists_to_has_with_date.sql\n@@ -0,0 +1,1 @@\n+SELECT arrayExists(date -> (date = '2022-07-31'), [toDate('2022-07-31')]) AS date_exists;\n",
  "problem_statement": "Date-String comparison doesn't work for lambda functions on 23.3.8.22\n**Describe the issue**\r\n\r\nOn build 22.8.21.38, comparison between String/Date works fine for lambda function(for example in arrayExists), the same behavior results in an error on build 23.3.8.22\r\n\r\n**How to reproduce**\r\n\r\non 22.8.21.38:\r\n\r\n```\r\n\r\nSELECT arrayExists(date -> (date = '2022-07-31'), [toDate('2022-07-31')]) AS date_exists\r\n\r\nQuery id: 43335dab-870a-41d2-9655-5aa1245d9aeb\r\n\r\n\u250c\u2500date_exists\u2500\u2510\r\n\u2502           1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.001 sec. \r\n\r\n```\r\non 23.3.8.22:\r\n\r\n```\r\n\r\nSELECT arrayExists(date -> (date = '2022-07-31'), [toDate('2022-07-31')]) AS date_exists\r\n\r\nQuery id: d4a6e24e-1316-4a4e-adde-0ada0755c88b\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec. \r\n\r\nReceived exception from server (version 23.3.8):\r\nCode: 386. DB::Exception: Received from localhost:9000. DB::Exception: There is no supertype for types Date, String because some of them are String/FixedString and some of them are not: While processing has([toDate('2022-07-31')], '2022-07-31') AS date_exists. (NO_COMMON_TYPE)\r\n\r\n```\r\n\r\n\r\n* Which ClickHouse server versions are incompatible\r\n\r\n22.8.21.38 and 23.3.8.22\r\n\r\n* Which interface to use, if matters\r\n\r\nCLI\r\n\r\n\r\n* Non-default settings, if any\r\n* `CREATE TABLE` statements for all tables involved\r\n* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary\r\n* Queries to run that lead to unexpected result\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\n\r\nSELECT arrayExists(date -> (date = '2022-07-31'), [toDate('2022-07-31')]) AS date_exists\r\n\r\nSELECT arrayExists(date -> (date = '2022-07-31'), [toDate('2022-07-31')]) AS date_exists\r\n\r\nQuery id: d4a6e24e-1316-4a4e-adde-0ada0755c88b\r\n\r\n[chi-clickhouse-installation-default-0-0-0] 2023.10.12 15:23:47.720381 [ 2723 ] {d4a6e24e-1316-4a4e-adde-0ada0755c88b} <Debug> executeQuery: (from [::1]:59718) SELECT arrayExists(date -> (date = '2022-07-31'), [toDate('2022-07-31')]) AS date_exists (stage: Complete)\r\n[chi-clickhouse-installation-default-0-0-0] 2023.10.12 15:23:47.721060 [ 2723 ] {d4a6e24e-1316-4a4e-adde-0ada0755c88b} <Error> executeQuery: Code: 386. DB::Exception: There is no supertype for types Date, String because some of them are String/FixedString and some of them are not: While processing has([toDate('2022-07-31')], '2022-07-31') AS date_exists. (NO_COMMON_TYPE) (version 23.3.8.22.altinitystable (altinity build)) (from [::1]:59718) (in query: SELECT arrayExists(date -> (date = '2022-07-31'), [toDate('2022-07-31')]) AS date_exists)\r\n\r\n0 rows in set. Elapsed: 0.002 sec. \r\n\r\nReceived exception from server (version 23.3.8):\r\nCode: 386. DB::Exception: Received from localhost:9000. DB::Exception: There is no supertype for types Date, String because some of them are String/FixedString and some of them are not: While processing has([toDate('2022-07-31')], '2022-07-31') AS date_exists. (NO_COMMON_TYPE)\r\n\r\n```\r\n\r\n**Additional context**\r\n\r\n\n",
  "hints_text": "Wrong optimization: https://github.com/ClickHouse/ClickHouse/pull/46188",
  "created_at": "2023-10-13T15:32:42Z",
  "modified_files": [
    "src/Core/Settings.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02896_optimize_array_exists_to_has_with_date.reference",
    "b/tests/queries/0_stateless/02896_optimize_array_exists_to_has_with_date.sql"
  ]
}