{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 10847,
  "instance_id": "ClickHouse__ClickHouse-10847",
  "issue_numbers": [
    "10844"
  ],
  "base_commit": "ff0ae624ef199fa515b7d60e482c88c8fab9adff",
  "patch": "diff --git a/src/DataStreams/CheckConstraintsBlockOutputStream.cpp b/src/DataStreams/CheckConstraintsBlockOutputStream.cpp\nindex 25e4340f6554..878ab0c4e37b 100644\n--- a/src/DataStreams/CheckConstraintsBlockOutputStream.cpp\n+++ b/src/DataStreams/CheckConstraintsBlockOutputStream.cpp\n@@ -61,10 +61,11 @@ void CheckConstraintsBlockOutputStream::write(const Block & block)\n \n                 std::stringstream exception_message;\n \n-                exception_message << \"Constraint \" << backQuote(constraints.constraints[i]->name)\n+                auto * constraint_ptr = constraints.constraints[i]->as<ASTConstraintDeclaration>();\n+                exception_message << \"Constraint \" << backQuote(constraint_ptr->name)\n                     << \" for table \" << table_id.getNameForLogs()\n                     << \" is violated at row \" << (rows_written + row_idx + 1)\n-                    << \". Expression: (\" << serializeAST(*(constraints.constraints[i]->expr), true) << \")\"\n+                    << \". Expression: (\" << serializeAST(*(constraint_ptr->expr), true) << \")\"\n                     << \". Column values\";\n \n                 bool first = true;\ndiff --git a/src/Storages/AlterCommands.cpp b/src/Storages/AlterCommands.cpp\nindex 121974c8b82d..67bd88d10a8a 100644\n--- a/src/Storages/AlterCommands.cpp\n+++ b/src/Storages/AlterCommands.cpp\n@@ -467,6 +467,9 @@ void AlterCommand::apply(StorageInMemoryMetadata & metadata) const\n         }\n         if (metadata.ttl_for_table_ast)\n             rename_visitor.visit(metadata.ttl_for_table_ast);\n+\n+        for (auto & constraint : metadata.constraints.constraints)\n+            rename_visitor.visit(constraint);\n     }\n     else\n         throw Exception(\"Wrong parameter type in ALTER query\", ErrorCodes::LOGICAL_ERROR);\ndiff --git a/src/Storages/ConstraintsDescription.cpp b/src/Storages/ConstraintsDescription.cpp\nindex 8c38af0cd5eb..d86796908a73 100644\n--- a/src/Storages/ConstraintsDescription.cpp\n+++ b/src/Storages/ConstraintsDescription.cpp\n@@ -33,7 +33,7 @@ ConstraintsDescription ConstraintsDescription::parse(const String & str)\n     ASTPtr list = parseQuery(parser, str, 0, DBMS_DEFAULT_MAX_PARSER_DEPTH);\n \n     for (const auto & constraint : list->children)\n-        res.constraints.push_back(std::dynamic_pointer_cast<ASTConstraintDeclaration>(constraint));\n+        res.constraints.push_back(constraint);\n \n     return res;\n }\n@@ -46,9 +46,10 @@ ConstraintsExpressions ConstraintsDescription::getExpressions(const DB::Context\n     for (const auto & constraint : constraints)\n     {\n         // SyntaxAnalyzer::analyze has query as non-const argument so to avoid accidental query changes we clone it\n-        ASTPtr expr = constraint->expr->clone();\n+        auto * constraint_ptr = constraint->as<ASTConstraintDeclaration>();\n+        ASTPtr expr = constraint_ptr->expr->clone();\n         auto syntax_result = SyntaxAnalyzer(context).analyze(expr, source_columns_);\n-        res.push_back(ExpressionAnalyzer(constraint->expr->clone(), syntax_result, context).getActions(false));\n+        res.push_back(ExpressionAnalyzer(constraint_ptr->expr->clone(), syntax_result, context).getActions(false));\n     }\n     return res;\n }\ndiff --git a/src/Storages/ConstraintsDescription.h b/src/Storages/ConstraintsDescription.h\nindex 3ced0e8ddc92..f4da43760414 100644\n--- a/src/Storages/ConstraintsDescription.h\n+++ b/src/Storages/ConstraintsDescription.h\n@@ -6,12 +6,11 @@\n namespace DB\n {\n \n-using ConstraintsASTs = std::vector<std::shared_ptr<ASTConstraintDeclaration>>;\n using ConstraintsExpressions = std::vector<ExpressionActionsPtr>;\n \n struct ConstraintsDescription\n {\n-    ConstraintsASTs constraints;\n+    std::vector<ASTPtr> constraints;\n \n     ConstraintsDescription() = default;\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01277_alter_rename_column_constraint.reference b/tests/queries/0_stateless/01277_alter_rename_column_constraint.reference\nnew file mode 100644\nindex 000000000000..cb1842f95da3\n--- /dev/null\n+++ b/tests/queries/0_stateless/01277_alter_rename_column_constraint.reference\n@@ -0,0 +1,90 @@\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+CREATE TABLE default.table_for_rename\\n(\\n    `date` Date, \\n    `key` UInt64, \\n    `value4` String, \\n    `value5` String, \\n    `value3` String, \\n    CONSTRAINT cs_value1 CHECK toInt64(value4) < toInt64(value5), \\n    CONSTRAINT cs_value2 CHECK toInt64(value5) < toInt64(value3)\\n)\\nENGINE = MergeTree()\\nPARTITION BY date\\nORDER BY key\\nSETTINGS index_granularity = 8192\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+-- insert after rename --\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+2019-10-02\t10\t10\t11\t12\n+2019-10-03\t11\t11\t12\t13\n+2019-10-01\t12\t12\t13\t14\n+2019-10-02\t13\t13\t14\t15\n+2019-10-03\t14\t14\t15\t16\n+2019-10-01\t15\t15\t16\t17\n+2019-10-02\t16\t16\t17\t18\n+2019-10-03\t17\t17\t18\t19\n+2019-10-01\t18\t18\t19\t20\n+2019-10-02\t19\t19\t20\t21\n+-- rename columns back --\n+CREATE TABLE default.table_for_rename\\n(\\n    `date` Date, \\n    `key` UInt64, \\n    `value1` String, \\n    `value2` String, \\n    `value3` String, \\n    CONSTRAINT cs_value1 CHECK toInt64(value1) < toInt64(value2), \\n    CONSTRAINT cs_value2 CHECK toInt64(value2) < toInt64(value3)\\n)\\nENGINE = MergeTree()\\nPARTITION BY date\\nORDER BY key\\nSETTINGS index_granularity = 8192\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+2019-10-02\t10\t10\t11\t12\n+2019-10-03\t11\t11\t12\t13\n+2019-10-01\t12\t12\t13\t14\n+2019-10-02\t13\t13\t14\t15\n+2019-10-03\t14\t14\t15\t16\n+2019-10-01\t15\t15\t16\t17\n+2019-10-02\t16\t16\t17\t18\n+2019-10-03\t17\t17\t18\t19\n+2019-10-01\t18\t18\t19\t20\n+2019-10-02\t19\t19\t20\t21\n+-- insert after rename column --\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+2019-10-02\t10\t10\t11\t12\n+2019-10-03\t11\t11\t12\t13\n+2019-10-01\t12\t12\t13\t14\n+2019-10-02\t13\t13\t14\t15\n+2019-10-03\t14\t14\t15\t16\n+2019-10-01\t15\t15\t16\t17\n+2019-10-02\t16\t16\t17\t18\n+2019-10-03\t17\t17\t18\t19\n+2019-10-01\t18\t18\t19\t20\n+2019-10-02\t19\t19\t20\t21\n+2019-10-03\t20\t20\t21\t22\n+2019-10-01\t21\t21\t22\t23\n+2019-10-02\t22\t22\t23\t24\n+2019-10-03\t23\t23\t24\t25\n+2019-10-01\t24\t24\t25\t26\n+2019-10-02\t25\t25\t26\t27\n+2019-10-03\t26\t26\t27\t28\n+2019-10-01\t27\t27\t28\t29\n+2019-10-02\t28\t28\t29\t30\n+2019-10-03\t29\t29\t30\t31\ndiff --git a/tests/queries/0_stateless/01277_alter_rename_column_constraint.sql b/tests/queries/0_stateless/01277_alter_rename_column_constraint.sql\nnew file mode 100644\nindex 000000000000..72fbb0456012\n--- /dev/null\n+++ b/tests/queries/0_stateless/01277_alter_rename_column_constraint.sql\n@@ -0,0 +1,43 @@\n+DROP TABLE IF EXISTS table_for_rename;\n+\n+CREATE TABLE table_for_rename\n+(\n+  date Date,\n+  key UInt64,\n+  value1 String,\n+  value2 String,\n+  value3 String,\n+  CONSTRAINT cs_value1 CHECK toInt64(value1) < toInt64(value2),\n+  CONSTRAINT cs_value2 CHECK toInt64(value2) < toInt64(value3)\n+)\n+ENGINE = MergeTree()\n+PARTITION BY date\n+ORDER BY key;\n+\n+INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(9);\n+INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number) from numbers(9); ; --{serverError 469}\n+\n+SELECT * FROM table_for_rename ORDER BY key;\n+\n+ALTER TABLE table_for_rename RENAME COLUMN value1 TO value4;\n+ALTER TABLE table_for_rename RENAME COLUMN value2 TO value5;\n+SHOW CREATE TABLE table_for_rename;\n+SELECT * FROM table_for_rename ORDER BY key;\n+\n+SELECT '-- insert after rename --';\n+INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(10, 10);\n+INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number) from numbers(10, 10); ; --{serverError 469}\n+SELECT * FROM table_for_rename ORDER BY key;\n+\n+SELECT '-- rename columns back --';\n+ALTER TABLE table_for_rename RENAME COLUMN value4 TO value1;\n+ALTER TABLE table_for_rename RENAME COLUMN value5 TO value2;\n+SHOW CREATE TABLE table_for_rename;\n+SELECT * FROM table_for_rename ORDER BY key;\n+\n+SELECT '-- insert after rename column --';\n+INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(20,10);\n+INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number), toString(number + 2) from numbers(20, 10); ; --{serverError 469}\n+SELECT * FROM table_for_rename ORDER BY key;\n+\n+DROP TABLE IF EXISTS table_for_rename;\ndiff --git a/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper.reference b/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper.reference\nnew file mode 100644\nindex 000000000000..9ca17dbbc0a8\n--- /dev/null\n+++ b/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper.reference\n@@ -0,0 +1,90 @@\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+CREATE TABLE default.table_for_rename1\\n(\\n    `date` Date, \\n    `key` UInt64, \\n    `value4` String, \\n    `value5` String, \\n    `value3` String, \\n    CONSTRAINT cs_value1 CHECK toInt64(value4) < toInt64(value5), \\n    CONSTRAINT cs_value2 CHECK toInt64(value5) < toInt64(value3)\\n)\\nENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/test_for_rename\\', \\'1\\')\\nPARTITION BY date\\nORDER BY key\\nSETTINGS index_granularity = 8192\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+-- insert after rename --\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+2019-10-02\t10\t10\t11\t12\n+2019-10-03\t11\t11\t12\t13\n+2019-10-01\t12\t12\t13\t14\n+2019-10-02\t13\t13\t14\t15\n+2019-10-03\t14\t14\t15\t16\n+2019-10-01\t15\t15\t16\t17\n+2019-10-02\t16\t16\t17\t18\n+2019-10-03\t17\t17\t18\t19\n+2019-10-01\t18\t18\t19\t20\n+2019-10-02\t19\t19\t20\t21\n+-- rename columns back --\n+CREATE TABLE default.table_for_rename1\\n(\\n    `date` Date, \\n    `key` UInt64, \\n    `value1` String, \\n    `value2` String, \\n    `value3` String, \\n    CONSTRAINT cs_value1 CHECK toInt64(value1) < toInt64(value2), \\n    CONSTRAINT cs_value2 CHECK toInt64(value2) < toInt64(value3)\\n)\\nENGINE = ReplicatedMergeTree(\\'/clickhouse/tables/test_for_rename\\', \\'1\\')\\nPARTITION BY date\\nORDER BY key\\nSETTINGS index_granularity = 8192\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+2019-10-02\t10\t10\t11\t12\n+2019-10-03\t11\t11\t12\t13\n+2019-10-01\t12\t12\t13\t14\n+2019-10-02\t13\t13\t14\t15\n+2019-10-03\t14\t14\t15\t16\n+2019-10-01\t15\t15\t16\t17\n+2019-10-02\t16\t16\t17\t18\n+2019-10-03\t17\t17\t18\t19\n+2019-10-01\t18\t18\t19\t20\n+2019-10-02\t19\t19\t20\t21\n+-- insert after rename column --\n+2019-10-01\t0\t0\t1\t2\n+2019-10-02\t1\t1\t2\t3\n+2019-10-03\t2\t2\t3\t4\n+2019-10-01\t3\t3\t4\t5\n+2019-10-02\t4\t4\t5\t6\n+2019-10-03\t5\t5\t6\t7\n+2019-10-01\t6\t6\t7\t8\n+2019-10-02\t7\t7\t8\t9\n+2019-10-03\t8\t8\t9\t10\n+2019-10-02\t10\t10\t11\t12\n+2019-10-03\t11\t11\t12\t13\n+2019-10-01\t12\t12\t13\t14\n+2019-10-02\t13\t13\t14\t15\n+2019-10-03\t14\t14\t15\t16\n+2019-10-01\t15\t15\t16\t17\n+2019-10-02\t16\t16\t17\t18\n+2019-10-03\t17\t17\t18\t19\n+2019-10-01\t18\t18\t19\t20\n+2019-10-02\t19\t19\t20\t21\n+2019-10-03\t20\t20\t21\t22\n+2019-10-01\t21\t21\t22\t23\n+2019-10-02\t22\t22\t23\t24\n+2019-10-03\t23\t23\t24\t25\n+2019-10-01\t24\t24\t25\t26\n+2019-10-02\t25\t25\t26\t27\n+2019-10-03\t26\t26\t27\t28\n+2019-10-01\t27\t27\t28\t29\n+2019-10-02\t28\t28\t29\t30\n+2019-10-03\t29\t29\t30\t31\ndiff --git a/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper.sql b/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper.sql\nnew file mode 100644\nindex 000000000000..2d3a7e0198a6\n--- /dev/null\n+++ b/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper.sql\n@@ -0,0 +1,43 @@\n+DROP TABLE IF EXISTS table_for_rename1;\n+\n+CREATE TABLE table_for_rename1\n+(\n+  date Date,\n+  key UInt64,\n+  value1 String,\n+  value2 String,\n+  value3 String,\n+  CONSTRAINT cs_value1 CHECK toInt64(value1) < toInt64(value2),\n+  CONSTRAINT cs_value2 CHECK toInt64(value2) < toInt64(value3)\n+)\n+ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_for_rename', '1')\n+PARTITION BY date\n+ORDER BY key;\n+\n+INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(9);\n+INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number) from numbers(9); ; --{serverError 469}\n+\n+SELECT * FROM table_for_rename1 ORDER BY key;\n+\n+ALTER TABLE table_for_rename1 RENAME COLUMN value1 TO value4;\n+ALTER TABLE table_for_rename1 RENAME COLUMN value2 TO value5;\n+SHOW CREATE TABLE table_for_rename1;\n+SELECT * FROM table_for_rename1 ORDER BY key;\n+\n+SELECT '-- insert after rename --';\n+INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(10, 10);\n+INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number) from numbers(10, 10); ; --{serverError 469}\n+SELECT * FROM table_for_rename1 ORDER BY key;\n+\n+SELECT '-- rename columns back --';\n+ALTER TABLE table_for_rename1 RENAME COLUMN value4 TO value1;\n+ALTER TABLE table_for_rename1 RENAME COLUMN value5 TO value2;\n+SHOW CREATE TABLE table_for_rename1;\n+SELECT * FROM table_for_rename1 ORDER BY key;\n+\n+SELECT '-- insert after rename column --';\n+INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(20,10);\n+INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number), toString(number + 2) from numbers(20, 10); ; --{serverError 469}\n+SELECT * FROM table_for_rename1 ORDER BY key;\n+\n+DROP TABLE IF EXISTS table_for_rename1;\n",
  "problem_statement": "ALTER RENAME RENAME column does not update CONSTRAINT expressions\nALTER RENAME RENAME column does not update CONSTRAINT expressions.\r\n\r\n**How to reproduce**\r\nhttps://github.com/ClickHouse/ClickHouse/blob/9780da3e747726086cf705281775af98f38a3e0c/tests/queries/0_stateless/01277_alter_rename_column_constraint_expr.sql\r\n\r\n**Expected behavior**\r\nConstraint expression should be updated similar to DEFAULT and MATERIALIZED expressions.\n",
  "hints_text": "",
  "created_at": "2020-05-12T11:29:25Z",
  "modified_files": [
    "src/DataStreams/CheckConstraintsBlockOutputStream.cpp",
    "src/Storages/AlterCommands.cpp",
    "src/Storages/ConstraintsDescription.cpp",
    "src/Storages/ConstraintsDescription.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01277_alter_rename_column_constraint.reference",
    "b/tests/queries/0_stateless/01277_alter_rename_column_constraint.sql",
    "b/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper.reference",
    "b/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper.sql"
  ]
}