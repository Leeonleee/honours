diff --git a/tests/queries/0_stateless/03240_insert_select_named_tuple.reference b/tests/queries/0_stateless/03240_insert_select_named_tuple.reference
new file mode 100644
index 000000000000..8c3cb5b8425b
--- /dev/null
+++ b/tests/queries/0_stateless/03240_insert_select_named_tuple.reference
@@ -0,0 +1,3 @@
+1	('dete','ok')	('dete','ok')
+{"id":1,"a":{"col_a":"dete","type":"ok"},"b":{"col_b":"dete","type":"ok"}}
+{"id":1,"a":{"col_a":"dete","type":"ok"},"b":{"col_b":"dete","type":"ok"}}
diff --git a/tests/queries/0_stateless/03240_insert_select_named_tuple.sql b/tests/queries/0_stateless/03240_insert_select_named_tuple.sql
new file mode 100644
index 000000000000..c3e12db4e0e1
--- /dev/null
+++ b/tests/queries/0_stateless/03240_insert_select_named_tuple.sql
@@ -0,0 +1,22 @@
+SET enable_analyzer = 1;
+SET enable_named_columns_in_function_tuple = 1;
+
+DROP TABLE IF EXISTS src;
+DROP TABLE IF EXISTS dst;
+
+CREATE TABLE src (id UInt32, type String, data String) ENGINE=MergeTree ORDER BY tuple();
+CREATE TABLE dst (id UInt32, a Tuple (col_a Nullable(String), type String), b Tuple (col_b Nullable(String), type String)) ENGINE = MergeTree ORDER BY id;
+
+INSERT INTO src VALUES (1, 'ok', 'data');
+INSERT INTO dst (id, a, b) SELECT id, tuple(replaceAll(data, 'a', 'e') AS col_a, type) AS a, tuple(replaceAll(data, 'a', 'e') AS col_b, type) AS b FROM src;
+SELECT * FROM dst;
+
+DROP TABLE src;
+DROP TABLE dst;
+
+DROP TABLE IF EXISTS src;
+CREATE TABLE src (id UInt32, type String, data String) ENGINE=MergeTree ORDER BY tuple();
+INSERT INTO src VALUES (1, 'ok', 'data');
+SELECT id, tuple(replaceAll(data, 'a', 'e') AS col_a, type) AS a, tuple(replaceAll(data, 'a', 'e') AS col_b, type) AS b FROM cluster(test_cluster_two_shards, currentDatabase(), src) SETTINGS prefer_localhost_replica=0 FORMAT JSONEachRow;
+
+DROP TABLE src;
