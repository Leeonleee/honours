diff --git a/src/Functions/FunctionsStringDistance.cpp b/src/Functions/FunctionsStringDistance.cpp
index 5845dd33fb4e..98a04170dd48 100644
--- a/src/Functions/FunctionsStringDistance.cpp
+++ b/src/Functions/FunctionsStringDistance.cpp
@@ -108,27 +108,6 @@ struct ByteHammingDistanceImpl
     }
 };
 
-struct ByteJaccardIndexImpl
-{
-    using ResultType = Float64;
-    static ResultType inline process(
-        const char * __restrict haystack, size_t haystack_size, const char * __restrict needle, size_t needle_size)
-    {
-        if (haystack_size == 0 || needle_size == 0)
-            return 0;
-
-        std::unordered_set<char> haystack_set(haystack, haystack + haystack_size);
-        std::unordered_set<char> needle_set(needle, needle + needle_size);
-
-        size_t intersect = 0;
-        for (auto elem : haystack_set)
-        {
-            intersect += needle_set.contains(elem);
-        }
-        return static_cast<Float64>(intersect) / (haystack_set.size() + needle_set.size() - intersect);
-    }
-};
-
 struct ByteEditDistanceImpl
 {
     using ResultType = UInt64;
@@ -185,33 +164,24 @@ struct NameByteHammingDistance
     static constexpr auto name = "byteHammingDistance";
 };
 
-struct NameByteJaccardIndex
+struct NameEditDistance
 {
-    static constexpr auto name = "byteJaccardIndex";
-};
-
-struct NameByteEditDistance
-{
-    static constexpr auto name = "byteEditDistance";
+    static constexpr auto name = "editDistance";
 };
 
 using FunctionByteHammingDistance = FunctionsStringSimilarity<FunctionStringDistanceImpl<ByteHammingDistanceImpl>, NameByteHammingDistance>;
 
-using FunctionByteJaccardIndex = FunctionsStringSimilarity<FunctionStringDistanceImpl<ByteJaccardIndexImpl>, NameByteJaccardIndex>;
-
-using FunctionByteEditDistance = FunctionsStringSimilarity<FunctionStringDistanceImpl<ByteEditDistanceImpl>, NameByteEditDistance>;
+using FunctionByteEditDistance = FunctionsStringSimilarity<FunctionStringDistanceImpl<ByteEditDistanceImpl>, NameEditDistance>;
 
-REGISTER_FUNCTION(StringHammingDistance)
+REGISTER_FUNCTION(StringDistance)
 {
     factory.registerFunction<FunctionByteHammingDistance>(
-        FunctionDocumentation{.description = R"(Calculates the hamming distance between two bytes strings.)"});
+        FunctionDocumentation{.description = R"(Calculates Hamming distance between two byte-strings.)"});
     factory.registerAlias("mismatches", NameByteHammingDistance::name);
 
-    factory.registerFunction<FunctionByteJaccardIndex>(
-        FunctionDocumentation{.description = R"(Calculates the jaccard similarity index between two bytes strings.)"});
-
     factory.registerFunction<FunctionByteEditDistance>(
-        FunctionDocumentation{.description = R"(Calculates the edit distance between two bytes strings.)"});
-    factory.registerAlias("byteLevenshteinDistance", NameByteEditDistance::name);
+        FunctionDocumentation{.description = R"(Calculates the edit distance between two byte-strings.)"});
+
+    factory.registerAlias("levenshteinDistance", NameEditDistance::name);
 }
 }
diff --git a/src/Functions/array/arrayJaccardIndex.cpp b/src/Functions/array/arrayJaccardIndex.cpp
index 755e0f8278f8..c2a4fee48451 100644
--- a/src/Functions/array/arrayJaccardIndex.cpp
+++ b/src/Functions/array/arrayJaccardIndex.cpp
@@ -1,5 +1,4 @@
 #include <Columns/ColumnArray.h>
-#include <Columns/ColumnsNumber.h>
 #include <Columns/IColumn.h>
 #include <DataTypes/DataTypeArray.h>
 #include <DataTypes/DataTypesNumber.h>
@@ -7,11 +6,9 @@
 #include <Functions/FunctionFactory.h>
 #include <Functions/FunctionHelpers.h>
 #include <DataTypes/DataTypeNothing.h>
-#include <DataTypes/getMostSubtype.h>
 #include <Core/ColumnsWithTypeAndName.h>
 #include <Core/ColumnWithTypeAndName.h>
 #include <Interpreters/Context_fwd.h>
-#include <base/types.h>
 
 namespace DB
 {
