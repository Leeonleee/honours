{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 67587,
  "instance_id": "ClickHouse__ClickHouse-67587",
  "issue_numbers": [
    "64754"
  ],
  "base_commit": "f947f91b102f402c56331dfd8774aa7487219aae",
  "patch": "diff --git a/src/Interpreters/AddDefaultDatabaseVisitor.h b/src/Interpreters/AddDefaultDatabaseVisitor.h\nindex 356bffa75e9e..a28c7c1bff35 100644\n--- a/src/Interpreters/AddDefaultDatabaseVisitor.h\n+++ b/src/Interpreters/AddDefaultDatabaseVisitor.h\n@@ -1,6 +1,7 @@\n #pragma once\n \n #include <Common/typeid_cast.h>\n+#include <Parsers/ASTWithElement.h>\n #include <Parsers/ASTLiteral.h>\n #include <Parsers/ASTQueryWithTableAndOutput.h>\n #include <Parsers/ASTRenameQuery.h>\n@@ -100,6 +101,7 @@ class AddDefaultDatabaseVisitor\n \n     const String database_name;\n     std::set<String> external_tables;\n+    mutable std::unordered_set<String> with_aliases;\n \n     bool only_replace_current_database_function = false;\n     bool only_replace_in_join = false;\n@@ -117,6 +119,10 @@ class AddDefaultDatabaseVisitor\n \n     void visit(ASTSelectQuery & select, ASTPtr &) const\n     {\n+        if (select.recursive_with)\n+            for (const auto & child : select.with()->children)\n+                with_aliases.insert(child->as<ASTWithElement>()->name);\n+\n         if (select.tables())\n             tryVisit<ASTTablesInSelectQuery>(select.refTables());\n \n@@ -165,6 +171,9 @@ class AddDefaultDatabaseVisitor\n         /// There is temporary table with such name, should not be rewritten.\n         if (external_tables.contains(identifier.shortName()))\n             return;\n+        /// This is WITH RECURSIVE alias.\n+        if (with_aliases.contains(identifier.name()))\n+            return;\n \n         auto qualified_identifier = std::make_shared<ASTTableIdentifier>(database_name, identifier.name());\n         if (!identifier.alias.empty())\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03215_view_with_recursive.reference b/tests/queries/0_stateless/03215_view_with_recursive.reference\nnew file mode 100644\nindex 000000000000..c3ca8065a70c\n--- /dev/null\n+++ b/tests/queries/0_stateless/03215_view_with_recursive.reference\n@@ -0,0 +1,2 @@\n+5050\n+8\ndiff --git a/tests/queries/0_stateless/03215_view_with_recursive.sql b/tests/queries/0_stateless/03215_view_with_recursive.sql\nnew file mode 100644\nindex 000000000000..5d93ccc54386\n--- /dev/null\n+++ b/tests/queries/0_stateless/03215_view_with_recursive.sql\n@@ -0,0 +1,43 @@\n+SET allow_experimental_analyzer = 1;\n+\n+CREATE VIEW 03215_test_v\n+AS WITH RECURSIVE test_table AS\n+    (\n+        SELECT 1 AS number\n+        UNION ALL\n+        SELECT number + 1\n+        FROM test_table\n+        WHERE number < 100\n+    )\n+SELECT sum(number)\n+FROM test_table;\n+\n+SELECT * FROM 03215_test_v;\n+\n+CREATE VIEW 03215_multi_v\n+AS WITH RECURSIVE\n+    task AS\n+    (\n+        SELECT\n+            number AS task_id,\n+            number - 1 AS parent_id\n+        FROM numbers(10)\n+    ),\n+    rtq AS\n+    (\n+        SELECT\n+            task_id,\n+            parent_id\n+        FROM task AS t\n+        WHERE t.parent_id = 1\n+        UNION ALL\n+        SELECT\n+            t.task_id,\n+            t.parent_id\n+        FROM task AS t, rtq AS r\n+        WHERE t.parent_id = r.task_id\n+    )\n+SELECT count()\n+FROM rtq;\n+\n+SELECT * FROM 03215_multi_v;\n",
  "problem_statement": "Recursive CTE view creation exception.\nWhen creating a view with recursive CTE, it give an exception wiht: Unknown table expression identifier....\r\n\r\n**Does it reproduce on the most recent release?**\r\nWe are using version 24.4.1.2088\r\nBut testing with version 24.5.1 gives the same error\r\n\r\n**How to reproduce**\r\nTake the recursive CTE example from documentation and wrap it in the view:\r\n\r\n```CREATE VIEW test_table_v \r\n  as \r\nWITH RECURSIVE test_table AS (\r\nSELECT 1 AS number\r\n UNION ALL\r\nSELECT number + 1 \r\n  FROM test_table WHERE number < 100\r\n)\r\nSELECT sum(number) \r\n  FROM test_table\r\n  ```\r\n\r\nThe same example can be tested here: https://fiddle.clickhouse.com/6e2c3c6b-ece9-466e-b2a4-a44caed06a9a\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```Received exception from server (version 24.4.1):\r\nCode: 60. DB::Exception: Received from localhost:9000. DB::Exception: Unknown table expression identifier 'default.test_table' in scope SELECT number + 1 FROM default.test_table WHERE number < 100. (UNKNOWN_TABLE)\r\n(query: CREATE VIEW test_table_v \r\n  as \r\nWITH RECURSIVE test_table AS (\r\nSELECT 1 AS number\r\n UNION ALL\r\nSELECT number + 1 \r\n  FROM test_table WHERE number < 100\r\n)\r\nSELECT sum(number) \r\n  FROM test_table)\r\n```\r\n\r\nThe 'default.test_table' is not a table in `default` schema - it is a CTE and should not have any problems with creating a view.\r\n\n",
  "hints_text": "Any updates on this issue? Got same bug, when I tried create view with dbt.",
  "created_at": "2024-08-01T07:40:56Z",
  "modified_files": [
    "src/Interpreters/AddDefaultDatabaseVisitor.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03215_view_with_recursive.reference",
    "b/tests/queries/0_stateless/03215_view_with_recursive.sql"
  ]
}