{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 37959,
  "instance_id": "ClickHouse__ClickHouse-37959",
  "issue_numbers": [
    "37904"
  ],
  "base_commit": "7c30d9b5d3835554f0412c7a89e3987369292a18",
  "patch": "diff --git a/src/Processors/QueryPlan/Optimizations/liftUpFunctions.cpp b/src/Processors/QueryPlan/Optimizations/liftUpFunctions.cpp\nindex 2a415f8c5afb..872adfeccc14 100644\n--- a/src/Processors/QueryPlan/Optimizations/liftUpFunctions.cpp\n+++ b/src/Processors/QueryPlan/Optimizations/liftUpFunctions.cpp\n@@ -1,5 +1,6 @@\n #include <Interpreters/ActionsDAG.h>\n #include <Processors/QueryPlan/ExpressionStep.h>\n+#include <Processors/QueryPlan/FillingStep.h>\n #include <Processors/QueryPlan/Optimizations/Optimizations.h>\n #include <Processors/QueryPlan/SortingStep.h>\n #include <Common/Exception.h>\n@@ -42,6 +43,11 @@ size_t tryExecuteFunctionsAfterSorting(QueryPlan::Node * parent_node, QueryPlan:\n     if (!sorting_step || !expression_step)\n         return 0;\n \n+    // Filling step position should be preserved\n+    if (!child_node->children.empty())\n+        if (typeid_cast<FillingStep *>(child_node->children.front()->step.get()))\n+            return 0;\n+\n     NameSet sort_columns;\n     for (const auto & col : sorting_step->getSortDescription())\n         sort_columns.insert(col.column_name);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02336_sort_optimization_with_fill.reference b/tests/queries/0_stateless/02336_sort_optimization_with_fill.reference\nnew file mode 100644\nindex 000000000000..5eebec30d2bb\n--- /dev/null\n+++ b/tests/queries/0_stateless/02336_sort_optimization_with_fill.reference\n@@ -0,0 +1,9 @@\n+1\tA\n+2\tAA\n+3\tAAA\n+4\tAAAA\n+5\tHello\n+6\tHelloA\n+7\tHelloAA\n+8\tHelloAAA\n+9\tHelloAAAA\ndiff --git a/tests/queries/0_stateless/02336_sort_optimization_with_fill.sql b/tests/queries/0_stateless/02336_sort_optimization_with_fill.sql\nnew file mode 100644\nindex 000000000000..242f2c42119d\n--- /dev/null\n+++ b/tests/queries/0_stateless/02336_sort_optimization_with_fill.sql\n@@ -0,0 +1,4 @@\n+SELECT x, s FROM (\n+        SELECT 5 AS x, 'Hello' AS s ORDER BY x WITH FILL FROM 1 TO 10 INTERPOLATE (s AS s||'A')\n+) ORDER BY s;\n+\n",
  "problem_statement": "Inconsistent result for subselect having ORDER BY WITH FILL when select is also ordered.\n**Describe what's wrong**\r\nInconsistent result for subselect having ORDER BY WITH FILL when select is also ordered.\r\n\r\n**Does it reproduce on recent release?**\r\nyes\r\n\r\n**How to reproduce**\r\n```\r\nSELECT x, s FROM (\r\n    SELECT 5 AS x, 'Hello' AS s ORDER BY x WITH FILL FROM 1 TO 10\r\n);\r\n\u250c\u2500x\u2500\u252c\u2500s\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 1 \u2502       \u2502\r\n\u2502 2 \u2502       \u2502\r\n\u2502 3 \u2502       \u2502\r\n\u2502 4 \u2502       \u2502\r\n\u2502 5 \u2502 Hello \u2502\r\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500x\u2500\u252c\u2500s\u2500\u2510\r\n\u2502 6 \u2502   \u2502\r\n\u2502 7 \u2502   \u2502\r\n\u2502 8 \u2502   \u2502\r\n\u2502 9 \u2502   \u2502\r\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\r\n\r\nSELECT x, s FROM (\r\n    SELECT 5 AS x, 'Hello' AS s ORDER BY x WITH FILL FROM 1 TO 10\r\n) ORDER BY s;\r\n\u250c\u2500x\u2500\u252c\u2500s\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 5 \u2502       \u2502\r\n\u2502 5 \u2502       \u2502\r\n\u2502 5 \u2502       \u2502\r\n\u2502 5 \u2502       \u2502\r\n\u2502 5 \u2502       \u2502\r\n\u2502 5 \u2502       \u2502\r\n\u2502 5 \u2502       \u2502\r\n\u2502 5 \u2502       \u2502\r\n\u2502 5 \u2502 Hello \u2502\r\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n**Expected behavior**\r\n`x` column should preserve values.\n",
  "hints_text": "",
  "created_at": "2022-06-09T17:42:51Z"
}