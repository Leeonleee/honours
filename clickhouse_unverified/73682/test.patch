diff --git a/tests/queries/0_stateless/03290_final_collapsing.reference b/tests/queries/0_stateless/03290_final_collapsing.reference
new file mode 100644
index 000000000000..0b86b762458d
--- /dev/null
+++ b/tests/queries/0_stateless/03290_final_collapsing.reference
@@ -0,0 +1,8 @@
+0
+0
+0
+0
+1
+1
+1
+1
diff --git a/tests/queries/0_stateless/03290_final_collapsing.sql b/tests/queries/0_stateless/03290_final_collapsing.sql
new file mode 100644
index 000000000000..b73c8441c0cc
--- /dev/null
+++ b/tests/queries/0_stateless/03290_final_collapsing.sql
@@ -0,0 +1,52 @@
+DROP TABLE IF EXISTS t_final_collapsing;
+
+CREATE TABLE t_final_collapsing
+(
+  key Int8,
+  sign Int8
+)
+ENGINE = CollapsingMergeTree(sign) ORDER BY key;
+
+INSERT INTO t_final_collapsing VALUES (5, -1);
+
+OPTIMIZE TABLE t_final_collapsing FINAL; -- to move part to a level 1, to enable optimizations
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT count() FROM t_final_collapsing FINAL;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT count() FROM t_final_collapsing FINAL;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT count() FROM t_final_collapsing FINAL;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT count() FROM t_final_collapsing FINAL;
+
+DROP TABLE t_final_collapsing;
+
+CREATE TABLE t_final_collapsing
+(
+  key Int8,
+  sign Int8,
+  version UInt64
+)
+ENGINE = VersionedCollapsingMergeTree(sign, version) ORDER BY key;
+
+INSERT INTO t_final_collapsing VALUES (5, -1, 1);
+
+OPTIMIZE TABLE t_final_collapsing FINAL; -- to move part to a level 1, to enable optimizations
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT count() FROM t_final_collapsing FINAL;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT count() FROM t_final_collapsing FINAL;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT count() FROM t_final_collapsing FINAL;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT count() FROM t_final_collapsing FINAL;
+
+DROP TABLE t_final_collapsing;
diff --git a/tests/queries/0_stateless/03290_final_replacing.reference b/tests/queries/0_stateless/03290_final_replacing.reference
new file mode 100644
index 000000000000..5e34014aff49
--- /dev/null
+++ b/tests/queries/0_stateless/03290_final_replacing.reference
@@ -0,0 +1,12 @@
+1	2
+2	3
+5	4
+1	2
+2	3
+5	4
+1	2
+2	3
+5	4
+1	2
+2	3
+5	4
diff --git a/tests/queries/0_stateless/03290_final_replacing.sql b/tests/queries/0_stateless/03290_final_replacing.sql
new file mode 100644
index 000000000000..dd18a0290209
--- /dev/null
+++ b/tests/queries/0_stateless/03290_final_replacing.sql
@@ -0,0 +1,24 @@
+DROP TABLE IF EXISTS t_final_replacing;
+
+CREATE TABLE t_final_replacing (a UInt64, b UInt64) ENGINE = ReplacingMergeTree ORDER BY a SETTINGS index_granularity = 1;
+
+INSERT INTO t_final_replacing VALUES (1, 1) (1, 2) (2, 3);
+INSERT INTO t_final_replacing VALUES (2, 3) (5, 4);
+
+OPTIMIZE TABLE t_final_replacing FINAL;
+
+SET optimize_read_in_order = 0;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT a, b FROM t_final_replacing FINAL ORDER BY a, b;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT a, b FROM t_final_replacing FINAL ORDER BY a, b;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT a, b FROM t_final_replacing FINAL ORDER BY a, b;
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT a, b FROM t_final_replacing FINAL ORDER BY a, b;
+
+DROP TABLE t_final_replacing;
diff --git a/tests/queries/0_stateless/03290_final_sample.reference b/tests/queries/0_stateless/03290_final_sample.reference
new file mode 100644
index 000000000000..e632860fab31
--- /dev/null
+++ b/tests/queries/0_stateless/03290_final_sample.reference
@@ -0,0 +1,8 @@
+5
+5
+5
+5
+5
+5
+5
+5
diff --git a/tests/queries/0_stateless/03290_final_sample.sql b/tests/queries/0_stateless/03290_final_sample.sql
new file mode 100644
index 000000000000..9fde622ec51b
--- /dev/null
+++ b/tests/queries/0_stateless/03290_final_sample.sql
@@ -0,0 +1,44 @@
+DROP TABLE IF EXISTS t_sample_final;
+
+CREATE TABLE t_sample_final
+(
+    CounterID UInt32,
+    UserID UInt64,
+    Version UInt64
+)
+ENGINE = ReplacingMergeTree(Version)
+ORDER BY (CounterID, intHash32(UserID))
+SAMPLE BY intHash32(UserID)
+SETTINGS index_granularity = 8192;
+
+INSERT INTO t_sample_final SELECT * FROM generateRandom('CounterID UInt32, UserID UInt64, Version UInt64', 1, 10, 2) LIMIT 10;
+
+OPTIMIZE TABLE t_sample_final FINAL;
+
+set send_logs_level = 'error';
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT count() FROM t_sample_final FINAL SAMPLE 1 / 2 WHERE NOT ignore(CounterID);
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT count() FROM t_sample_final FINAL SAMPLE 1 / 2 WHERE NOT ignore(CounterID);
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT count() FROM t_sample_final FINAL SAMPLE 1 / 2 WHERE NOT ignore(CounterID);
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT count() FROM t_sample_final FINAL SAMPLE 1 / 2 WHERE NOT ignore(CounterID);
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT count() FROM t_sample_final FINAL SAMPLE 1 / 2 WHERE NOT ignore(*);
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 0, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT count() FROM t_sample_final FINAL SAMPLE 1 / 2 WHERE NOT ignore(*);
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 0;
+SELECT count() FROM t_sample_final FINAL SAMPLE 1 / 2 WHERE NOT ignore(*);
+
+SET split_parts_ranges_into_intersecting_and_non_intersecting_final = 1, split_intersecting_parts_ranges_into_layers_final = 1;
+SELECT count() FROM t_sample_final FINAL SAMPLE 1 / 2 WHERE NOT ignore(*);
+
+DROP TABLE t_sample_final;
