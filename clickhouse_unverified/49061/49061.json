{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 49061,
  "instance_id": "ClickHouse__ClickHouse-49061",
  "issue_numbers": [
    "48772"
  ],
  "base_commit": "5ca15fcdff4e2918f46439f1b90b41da892f9b26",
  "patch": "diff --git a/src/Interpreters/ReplaceQueryParameterVisitor.cpp b/src/Interpreters/ReplaceQueryParameterVisitor.cpp\nindex c92161c72c35..e4a052388acc 100644\n--- a/src/Interpreters/ReplaceQueryParameterVisitor.cpp\n+++ b/src/Interpreters/ReplaceQueryParameterVisitor.cpp\n@@ -84,10 +84,20 @@ void ReplaceQueryParameterVisitor::visitQueryParameter(ASTPtr & ast)\n     IColumn & temp_column = *temp_column_ptr;\n     ReadBufferFromString read_buffer{value};\n     FormatSettings format_settings;\n-    if (ast_param.name == \"_request_body\")\n-        data_type->getDefaultSerialization()->deserializeWholeText(temp_column, read_buffer, format_settings);\n-    else\n-        data_type->getDefaultSerialization()->deserializeTextEscaped(temp_column, read_buffer, format_settings);\n+\n+    const SerializationPtr & serialization = data_type->getDefaultSerialization();\n+    try\n+    {\n+        if (ast_param.name == \"_request_body\")\n+            serialization->deserializeWholeText(temp_column, read_buffer, format_settings);\n+        else\n+            serialization->deserializeTextEscaped(temp_column, read_buffer, format_settings);\n+    }\n+    catch (Exception & e)\n+    {\n+        e.addMessage(\"value {} cannot be parsed as {} for query parameter '{}'\", value, type_name, ast_param.name);\n+        throw;\n+    }\n \n     if (!read_buffer.eof())\n         throw Exception(ErrorCodes::BAD_QUERY_PARAMETER,\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02723_param_exception_message_context.reference b/tests/queries/0_stateless/02723_param_exception_message_context.reference\nnew file mode 100644\nindex 000000000000..286f53421b59\n--- /dev/null\n+++ b/tests/queries/0_stateless/02723_param_exception_message_context.reference\n@@ -0,0 +1,1 @@\n+for query parameter 'x'\ndiff --git a/tests/queries/0_stateless/02723_param_exception_message_context.sh b/tests/queries/0_stateless/02723_param_exception_message_context.sh\nnew file mode 100755\nindex 000000000000..d37badd444fb\n--- /dev/null\n+++ b/tests/queries/0_stateless/02723_param_exception_message_context.sh\n@@ -0,0 +1,9 @@\n+#!/usr/bin/env bash\n+# Tags: no-fasttest\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+# The exception message about unparsed parameter also tells about the name of the parameter.\n+$CLICKHOUSE_CLIENT --param_x Hello --query \"SELECT {x:Array(String)}\" 2>&1 | rg -oF \"for query parameter 'x'\" | uniq\n",
  "problem_statement": "If there is exception while parsing a query parameter, add the context, describing what parameter failed to parse.\n**Describe the issue**\r\n```\r\nCREATE TABLE sphere_extended\r\n(\r\n    `id` UUID,\r\n    `url` String,\r\n    `domain` String DEFAULT domainWithoutWWW(url),\r\n    `url_hash` UInt64 DEFAULT sipHash64(url),\r\n    `title` String,\r\n    `title_tokens` Array(String) DEFAULT arraySort(arrayDistinct(tokens(lowerUTF8(title)))),\r\n    `sha` String EPHEMERAL,\r\n    `sha1` FixedString(20) DEFAULT substring(base64Decode(extract(sha, '^sha1:(.+)$')), 1, 20),\r\n    `sha1_hex` ALIAS hex(sha1),\r\n    `raw` String,\r\n    `raw_tokens` Array(String) DEFAULT arraySort(arrayDistinct(tokens(lowerUTF8(raw)))),\r\n    `vector` Array(Float32),\r\n    `vector16` Array(Float32) DEFAULT arrayMap(x -> reinterpretAsFloat32(bitAnd(reinterpretAsUInt32(x), 4294901760)), vector),\r\n    `vector1` Array(Bool) DEFAULT arrayMap((x, c) -> (x > c), vector, {center:Array(String)})\r\n)\r\nENGINE = MergeTree\r\nPRIMARY KEY url\r\nORDER BY url\r\n\r\nQuery id: bb7b72ad-0573-497b-86ff-b3ac16be470d\r\n\r\n\r\n0 rows in set. Elapsed: 0.020 sec. \r\n\r\nReceived exception from server (version 23.3.1):\r\nCode: 26. DB::Exception: Received from localhost:9000. DB::ParsingException. DB::ParsingException: Cannot parse quoted string: expected opening quote ''', got '0'. (CANNOT_PARSE_QUOTED_STRING)\r\n```\n",
  "hints_text": "Hey again! I might try and have a go at another ticket if that's alright?\r\n\r\nI've found the file: `src/IO/ReadHelpers.cpp`. I just need to check what data is available to us in the `Exception` context obj and I'll have a go at adding the extra info needed.\nYes, let's do it.\r\n\r\nIt can be implemented inside ReplaceQueryParameterVisitor by catching the exception, adding the info, and rethrowing it.",
  "created_at": "2023-04-23T07:35:26Z"
}