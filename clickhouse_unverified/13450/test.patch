diff --git a/tests/integration/test_on_cluster_timeouts/__init__.py b/tests/integration/test_on_cluster_timeouts/__init__.py
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/integration/test_on_cluster_timeouts/configs/remote_servers.xml b/tests/integration/test_on_cluster_timeouts/configs/remote_servers.xml
new file mode 100644
index 000000000000..4c3de4b39054
--- /dev/null
+++ b/tests/integration/test_on_cluster_timeouts/configs/remote_servers.xml
@@ -0,0 +1,28 @@
+<yandex>
+    <remote_servers>
+        <test_cluster>
+            <shard>
+                <internal_replication>true</internal_replication>
+                <replica>
+                    <host>node1</host>
+                    <port>9000</port>
+                </replica>
+                <replica>
+                    <host>node2</host>
+                    <port>9000</port>
+                </replica>
+            </shard>
+            <shard>
+                <internal_replication>true</internal_replication>
+                <replica>
+                    <host>node3</host>
+                    <port>9000</port>
+                </replica>
+                <replica>
+                    <host>node4</host>
+                    <port>9000</port>
+                </replica>
+            </shard>
+        </test_cluster>
+    </remote_servers>
+</yandex>
diff --git a/tests/integration/test_on_cluster_timeouts/configs/users_config.xml b/tests/integration/test_on_cluster_timeouts/configs/users_config.xml
new file mode 100644
index 000000000000..3a2ad0325f7f
--- /dev/null
+++ b/tests/integration/test_on_cluster_timeouts/configs/users_config.xml
@@ -0,0 +1,23 @@
+<yandex>
+    <profiles>
+        <default>
+            <mutations_sync>2</mutations_sync>
+        </default>
+    </profiles>
+
+    <users>
+        <default>
+            <password></password>
+            <networks incl="networks" replace="replace">
+                <ip>::/0</ip>
+            </networks>
+            <profile>default</profile>
+            <quota>default</quota>
+        </default>
+    </users>
+
+    <quotas>
+        <default>
+        </default>
+    </quotas>
+</yandex>
diff --git a/tests/integration/test_on_cluster_timeouts/test.py b/tests/integration/test_on_cluster_timeouts/test.py
new file mode 100644
index 000000000000..965bf8fae1bf
--- /dev/null
+++ b/tests/integration/test_on_cluster_timeouts/test.py
@@ -0,0 +1,42 @@
+import pytest
+
+from helpers.cluster import ClickHouseCluster
+from helpers.test_tools import assert_eq_with_retry
+
+cluster = ClickHouseCluster(__file__)
+
+node1 = cluster.add_instance('node1', main_configs=['configs/remote_servers.xml'], user_configs=['configs/users_config.xml'], with_zookeeper=True)
+node2 = cluster.add_instance('node2', main_configs=['configs/remote_servers.xml'], user_configs=['configs/users_config.xml'], with_zookeeper=True)
+node3 = cluster.add_instance('node3', main_configs=['configs/remote_servers.xml'], user_configs=['configs/users_config.xml'], with_zookeeper=True)
+node4 = cluster.add_instance('node4', main_configs=['configs/remote_servers.xml'], user_configs=['configs/users_config.xml'], with_zookeeper=True)
+
+
+@pytest.fixture(scope="module")
+def started_cluster():
+    try:
+        cluster.start()
+
+        yield cluster
+    finally:
+        cluster.shutdown()
+
+
+def test_long_query(started_cluster):
+    node1.query("CREATE TABLE cluster_table (key UInt64, value String) ENGINE = ReplicatedMergeTree('/test/1/cluster_table', '1') ORDER BY tuple()")
+    node2.query("CREATE TABLE cluster_table (key UInt64, value String) ENGINE = ReplicatedMergeTree('/test/1/cluster_table', '2') ORDER BY tuple()")
+
+    node1.query("INSERT INTO cluster_table SELECT number, toString(number) FROM numbers(20)")
+    node2.query("SYSTEM SYNC REPLICA cluster_table")
+
+    node3.query("CREATE TABLE cluster_table (key UInt64, value String) ENGINE = ReplicatedMergeTree('/test/2/cluster_table', '1') ORDER BY tuple()")
+
+    node4.query("CREATE TABLE cluster_table (key UInt64, value String) ENGINE = ReplicatedMergeTree('/test/2/cluster_table', '2') ORDER BY tuple()")
+    node3.query("INSERT INTO cluster_table SELECT number, toString(number) FROM numbers(20)")
+    node4.query("SYSTEM SYNC REPLICA cluster_table")
+
+    node1.query("ALTER TABLE cluster_table ON CLUSTER 'test_cluster' UPDATE key = 1 WHERE sleepEachRow(1) == 0", settings={"mutations_sync": "2"})
+
+    assert node1.query("SELECT SUM(key) FROM cluster_table") == "20
"
+    assert node2.query("SELECT SUM(key) FROM cluster_table") == "20
"
+    assert node3.query("SELECT SUM(key) FROM cluster_table") == "20
"
+    assert node4.query("SELECT SUM(key) FROM cluster_table") == "20
"
