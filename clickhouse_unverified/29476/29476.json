{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 29476,
  "instance_id": "ClickHouse__ClickHouse-29476",
  "issue_numbers": [
    "29456"
  ],
  "base_commit": "cd1e72e312de0af9b5982137dea7f7f9bdbff16f",
  "patch": "diff --git a/src/Databases/DatabaseLazy.cpp b/src/Databases/DatabaseLazy.cpp\nindex 384c5ff47dd6..e6f69f797cff 100644\n--- a/src/Databases/DatabaseLazy.cpp\n+++ b/src/Databases/DatabaseLazy.cpp\n@@ -8,6 +8,7 @@\n #include <IO/WriteHelpers.h>\n #include <Parsers/ASTCreateQuery.h>\n #include <Storages/IStorage.h>\n+#include <Common/escapeForFileName.h>\n \n #include <common/logger_useful.h>\n #include <common/scope_guard_safe.h>\n@@ -40,7 +41,7 @@ void DatabaseLazy::loadStoredObjects(\n {\n     iterateMetadataFiles(local_context, [this](const String & file_name)\n     {\n-        const std::string table_name = file_name.substr(0, file_name.size() - 4);\n+        const std::string table_name = unescapeForFileName(file_name.substr(0, file_name.size() - 4));\n \n         fs::path detached_permanently_flag = fs::path(getMetadataPath()) / (file_name + detached_suffix);\n         if (fs::exists(detached_permanently_flag))\ndiff --git a/src/Databases/DatabaseOrdinary.cpp b/src/Databases/DatabaseOrdinary.cpp\nindex 1bdb273c9fb6..a122c5fc1754 100644\n--- a/src/Databases/DatabaseOrdinary.cpp\n+++ b/src/Databases/DatabaseOrdinary.cpp\n@@ -176,7 +176,7 @@ void DatabaseOrdinary::loadTablesMetadata(ContextPtr local_context, ParsedTables\n                     /// if (create_query->uuid != UUIDHelpers::Nil)\n                     ///     DatabaseCatalog::instance().addUUIDMapping(create_query->uuid);\n \n-                    const std::string table_name = file_name.substr(0, file_name.size() - 4);\n+                    const std::string table_name = unescapeForFileName(file_name.substr(0, file_name.size() - 4));\n                     LOG_DEBUG(log, \"Skipping permanently detached table {}.\", backQuote(table_name));\n                     return;\n                 }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01015_database_bad_tables.reference b/tests/queries/0_stateless/01015_database_bad_tables.reference\nindex b69cd02f83d1..917f987fda7d 100644\n--- a/tests/queries/0_stateless/01015_database_bad_tables.reference\n+++ b/tests/queries/0_stateless/01015_database_bad_tables.reference\n@@ -1,3 +1,5 @@\n 1\t1\n 1\t1\n 1\t1\n+1\t1\n+1\t1\ndiff --git a/tests/queries/0_stateless/01015_database_bad_tables.sh b/tests/queries/0_stateless/01015_database_bad_tables.sh\nnew file mode 100755\nindex 000000000000..d1b63cef4762\n--- /dev/null\n+++ b/tests/queries/0_stateless/01015_database_bad_tables.sh\n@@ -0,0 +1,39 @@\n+#!/usr/bin/env bash\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+set -e\n+\n+db=\"db_$CLICKHOUSE_DATABASE\"\n+$CLICKHOUSE_CLIENT -q \"DROP DATABASE IF EXISTS $db;\"\n+$CLICKHOUSE_CLIENT -q \"CREATE DATABASE $db;\"\n+$CLICKHOUSE_CLIENT -q \"CREATE TABLE $db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\` (a UInt64, b UInt64) ENGINE = Log;\"\n+$CLICKHOUSE_CLIENT -q \"INSERT INTO $db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\` VALUES (1, 1);\"\n+$CLICKHOUSE_CLIENT -q \"SELECT * FROM $db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\`;\"\n+$CLICKHOUSE_CLIENT -q \"DETACH DATABASE $db;\"\n+$CLICKHOUSE_CLIENT -q \"ATTACH DATABASE $db;\"\n+$CLICKHOUSE_CLIENT -q \"SELECT * FROM $db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\`;\"\n+$CLICKHOUSE_CLIENT -q \"DROP TABLE $db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\`;\"\n+$CLICKHOUSE_CLIENT -q \"DROP DATABASE $db;\"\n+\n+lazy_db=\"lazy_$CLICKHOUSE_DATABASE\"\n+$CLICKHOUSE_CLIENT -q \"DROP DATABASE IF EXISTS $lazy_db;\"\n+$CLICKHOUSE_CLIENT -q \"CREATE DATABASE $lazy_db ENGINE = Lazy(1);\"\n+$CLICKHOUSE_CLIENT -q \"CREATE TABLE $lazy_db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\` (a UInt64, b UInt64) ENGINE = Log;\"\n+$CLICKHOUSE_CLIENT -q \"INSERT INTO $lazy_db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\` VALUES (1, 1);\"\n+$CLICKHOUSE_CLIENT -q \"SELECT * FROM $lazy_db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\`;\"\n+$CLICKHOUSE_CLIENT -q \"DETACH DATABASE $lazy_db;\"\n+$CLICKHOUSE_CLIENT -q \"ATTACH DATABASE $lazy_db;\"\n+$CLICKHOUSE_CLIENT -q \"SELECT * FROM $lazy_db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\`;\"\n+$CLICKHOUSE_CLIENT -q \"DROP TABLE $lazy_db.\\`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c\\`;\"\n+$CLICKHOUSE_CLIENT -q \"DROP DATABASE $lazy_db;\"\n+\n+$CLICKHOUSE_CLIENT -q \"CREATE DATABASE $lazy_db ENGINE = Lazy(10);\"\n+$CLICKHOUSE_CLIENT -q \"DROP TABLE IF EXISTS $lazy_db.test;\"\n+$CLICKHOUSE_CLIENT -q \"CREATE TABLE IF NOT EXISTS $lazy_db.test (a UInt64, b UInt64) ENGINE = Log;\"\n+$CLICKHOUSE_CLIENT -q \"CREATE TABLE IF NOT EXISTS $lazy_db.test (a UInt64, b UInt64) ENGINE = Log;\"\n+$CLICKHOUSE_CLIENT -q \"INSERT INTO $lazy_db.test VALUES (1, 1);\"\n+$CLICKHOUSE_CLIENT -q \"SELECT * FROM $lazy_db.test;\"\n+$CLICKHOUSE_CLIENT -q \"DROP TABLE IF EXISTS $lazy_db.test;\"\n+$CLICKHOUSE_CLIENT -q \"DROP DATABASE $lazy_db;\"\ndiff --git a/tests/queries/0_stateless/01015_database_bad_tables.sql b/tests/queries/0_stateless/01015_database_bad_tables.sql\ndeleted file mode 100644\nindex 5931b3b6fa5c..000000000000\n--- a/tests/queries/0_stateless/01015_database_bad_tables.sql\n+++ /dev/null\n@@ -1,24 +0,0 @@\n--- Tags: no-parallel\n-\n-DROP DATABASE IF EXISTS testlazy;\n-\n-CREATE TABLE `\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c` (a UInt64, b UInt64) ENGINE = Log;\n-INSERT INTO `\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c` VALUES (1, 1);\n-SELECT * FROM `\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c`;\n-DROP TABLE `\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c`;\n-\n-CREATE DATABASE testlazy ENGINE = Lazy(1);\n-CREATE TABLE testlazy.`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c` (a UInt64, b UInt64) ENGINE = Log;\n-INSERT INTO testlazy.`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c` VALUES (1, 1);\n-SELECT * FROM testlazy.`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c`;\n-DROP TABLE testlazy.`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c`;\n-DROP DATABASE testlazy;\n-\n-CREATE DATABASE testlazy ENGINE = Lazy(10);\n-DROP TABLE IF EXISTS testlazy.test;\n-CREATE TABLE IF NOT EXISTS testlazy.test (a UInt64, b UInt64) ENGINE = Log;\n-CREATE TABLE IF NOT EXISTS testlazy.test (a UInt64, b UInt64) ENGINE = Log;\n-INSERT INTO testlazy.test VALUES (1, 1);\n-SELECT * FROM testlazy.test;\n-DROP TABLE IF EXISTS testlazy.test;\n-DROP DATABASE testlazy;\n",
  "problem_statement": "Server failed to restart.\nAfter such successful queries:\r\n\r\n```sql\r\nCREATE DATABASE testlazy ENGINE = Lazy(1);\r\nCREATE TABLE testlazy.`\u0442\u0430\u0431\u043b\u0438\u0446\u0430_\u0441\u043e_\u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c` (a UInt64, b UInt64) ENGINE = Log;\r\n```\r\nServer failed to restart with error:\r\n```\r\n<Error> Application: filesystem error: in posix_stat: failed to determine attributes for the specified path: File name too long [/home/avogar/tmp/server/metadata/testlazy/%25D1%2582%25D0%25B0%25D0%25B1%25D0%25BB%25D0%25B8%25D1%2586%25D0%25B0_%25D1%2581%25D0%25BE_%25D1%2581%25D1%2582%25D1%2580%25D0%25B0%25D0%25BD%25D0%25BD%25D1%258B%25D0%25BC_%25D0%25BD%25D0%25B0%25D0%25B7%25D0%25B2%25D0%25B0%25D0%25BD%25D0%25B8%25D0%25B5%25D0%25BC.sql]\r\n```\r\n\r\nFound in https://github.com/ClickHouse/ClickHouse/pull/27928\n",
  "hints_text": "We should check NAME_MAX and PATH_MAX on creation time.\r\nPS. Why Linux allowed to create this file but don't allow to `stat` it?\r\n\nAnother option is to use 128bit hash from table name but then the limit should be fixed and we have to ensure that it was not possible to use so long names before.\n20.8 starts successfully, but shows escaped table name:\r\n```\r\nSHOW TABLES FROM testlazy\r\n\r\nQuery id: d4ebbd97-67fb-484d-934d-4a9c9bc8f0cf\r\n\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 20.8.18 revision 54438.\r\n\r\nClickHouse server version is older than ClickHouse client. It may indicate that the server is out of date and can be upgraded.\r\n\r\n\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 %D1%82%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0_%D1%81%D0%BE_%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC_%D0%BD%D0%B0%D0%B7%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%D0%BC \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n\nBug is here:\r\nhttps://github.com/ClickHouse/ClickHouse/blob/df56e99b87f63b5650057d7ecbad597354f2867f/src/Databases/DatabaseLazy.cpp#L43\nSo, the Lazy database forgets to unescape table name?",
  "created_at": "2021-09-28T10:16:23Z",
  "modified_files": [
    "src/Databases/DatabaseLazy.cpp",
    "src/Databases/DatabaseOrdinary.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01015_database_bad_tables.reference",
    "b/tests/queries/0_stateless/01015_database_bad_tables.sh",
    "tests/queries/0_stateless/01015_database_bad_tables.sql"
  ]
}