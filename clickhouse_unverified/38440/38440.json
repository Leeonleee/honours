{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 38440,
  "instance_id": "ClickHouse__ClickHouse-38440",
  "issue_numbers": [
    "38425"
  ],
  "base_commit": "25100ad5e52ee7845ec54ddaed1185a9cf2d333d",
  "patch": "diff --git a/src/Parsers/ParserCreateQuery.cpp b/src/Parsers/ParserCreateQuery.cpp\nindex e4a3f87f288c..4b6ab67e22f8 100644\n--- a/src/Parsers/ParserCreateQuery.cpp\n+++ b/src/Parsers/ParserCreateQuery.cpp\n@@ -467,6 +467,7 @@ bool ParserCreateTableQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expe\n     ParserKeyword s_from(\"FROM\");\n     ParserKeyword s_on(\"ON\");\n     ParserToken s_dot(TokenType::Dot);\n+    ParserToken s_comma(TokenType::Comma);\n     ParserToken s_lparen(TokenType::OpeningRoundBracket);\n     ParserToken s_rparen(TokenType::ClosingRoundBracket);\n     ParserStorage storage_p;\n@@ -574,6 +575,10 @@ bool ParserCreateTableQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expe\n         if (!table_properties_p.parse(pos, columns_list, expected))\n             return false;\n \n+        /// We allow a trailing comma in the columns list for user convenience.\n+        /// Although it diverges from the SQL standard slightly.\n+        s_comma.ignore(pos, expected);\n+\n         if (!s_rparen.ignore(pos, expected))\n             return false;\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.reference b/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.reference\nnew file mode 100644\nindex 000000000000..0ef0fcbd57b9\n--- /dev/null\n+++ b/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.reference\n@@ -0,0 +1,4 @@\n+id\tInt32\tDEFAULT\t1\t\t\t\n+id\tInt32\tDEFAULT\t1\t\t\t\n+x\tUInt8\t\t\t\t\t\n+y\tUInt8\t\t\t\t\t\ndiff --git a/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.sql b/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.sql\nnew file mode 100644\nindex 000000000000..54a0d47bde81\n--- /dev/null\n+++ b/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.sql\n@@ -0,0 +1,14 @@\n+DROP TABLE IF EXISTS trailing_comma_1 SYNC;\n+CREATE TABLE trailing_comma_1 (id INT NOT NULL DEFAULT 1,) ENGINE=MergeTree() ORDER BY tuple();\n+DESCRIBE TABLE trailing_comma_1;\n+DROP TABLE trailing_comma_1;\n+\n+DROP TABLE IF EXISTS trailing_comma_2 SYNC;\n+CREATE TABLE trailing_comma_2 (id INT DEFAULT 1,) ENGINE=MergeTree() ORDER BY tuple();\n+DESCRIBE TABLE trailing_comma_2;\n+DROP TABLE trailing_comma_2;\n+\n+DROP TABLE IF EXISTS trailing_comma_3 SYNC;\n+CREATE TABLE trailing_comma_3 (x UInt8, y UInt8,) ENGINE=MergeTree() ORDER BY tuple();\n+DESCRIBE TABLE trailing_comma_3;\n+DROP TABLE trailing_comma_3;\n",
  "problem_statement": "Allow trailing comma in columns list\n**Use case**\r\n\r\n```\r\nCREATE TABLE t\r\n(\r\n    x UInt8,\r\n    y UInt8,\r\n)\r\n```\n",
  "hints_text": "",
  "created_at": "2022-06-26T13:42:46Z",
  "modified_files": [
    "src/Parsers/ParserCreateQuery.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.reference",
    "b/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.sql"
  ]
}