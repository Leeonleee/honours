{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 64096,
  "instance_id": "ClickHouse__ClickHouse-64096",
  "issue_numbers": [
    "62464"
  ],
  "base_commit": "3878155b19e18ae9497098ac22662b30122a485b",
  "patch": "diff --git a/src/Analyzer/ValidationUtils.cpp b/src/Analyzer/ValidationUtils.cpp\nindex 9e9779647558..59157838edf0 100644\n--- a/src/Analyzer/ValidationUtils.cpp\n+++ b/src/Analyzer/ValidationUtils.cpp\n@@ -276,6 +276,9 @@ void validateAggregates(const QueryTreeNodePtr & query_node, AggregatesValidatio\n         if (query_node_typed.hasOrderBy())\n             validate_group_by_columns_visitor.visit(query_node_typed.getOrderByNode());\n \n+        if (query_node_typed.hasInterpolate())\n+            validate_group_by_columns_visitor.visit(query_node_typed.getInterpolate());\n+\n         validate_group_by_columns_visitor.visit(query_node_typed.getProjectionNode());\n     }\n \ndiff --git a/src/Planner/PlannerExpressionAnalysis.cpp b/src/Planner/PlannerExpressionAnalysis.cpp\nindex 6e194b2c03ec..7984d97a1ea6 100644\n--- a/src/Planner/PlannerExpressionAnalysis.cpp\n+++ b/src/Planner/PlannerExpressionAnalysis.cpp\n@@ -444,7 +444,6 @@ SortAnalysisResult analyzeSort(const QueryNode & query_node,\n         for (auto & interpolate_node : interpolate_list_node.getNodes())\n         {\n             auto & interpolate_node_typed = interpolate_node->as<InterpolateNode &>();\n-            interpolate_actions_visitor.visit(interpolate_actions_dag, interpolate_node_typed.getExpression());\n             interpolate_actions_visitor.visit(interpolate_actions_dag, interpolate_node_typed.getInterpolateExpression());\n         }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03155_analyzer_interpolate.reference b/tests/queries/0_stateless/03155_analyzer_interpolate.reference\nnew file mode 100644\nindex 000000000000..791aaa5b2a22\n--- /dev/null\n+++ b/tests/queries/0_stateless/03155_analyzer_interpolate.reference\n@@ -0,0 +1,13 @@\n+0\t[5]\n+0.5\t[5]\n+1\t[1]\n+1.5\t[5]\n+2\t[5]\n+2.5\t[5]\n+3\t[5]\n+3.5\t[5]\n+4\t[4]\n+4.5\t[5]\n+5\t[5]\n+5.5\t[5]\n+7\t[7]\ndiff --git a/tests/queries/0_stateless/03155_analyzer_interpolate.sql b/tests/queries/0_stateless/03155_analyzer_interpolate.sql\nnew file mode 100644\nindex 000000000000..b3c1d233f478\n--- /dev/null\n+++ b/tests/queries/0_stateless/03155_analyzer_interpolate.sql\n@@ -0,0 +1,12 @@\n+-- https://github.com/ClickHouse/ClickHouse/issues/62464\n+SET allow_experimental_analyzer = 1;\n+\n+SELECT n, [number] AS inter FROM (\n+   SELECT toFloat32(number % 10) AS n, number\n+   FROM numbers(10) WHERE number % 3 = 1\n+) GROUP BY n, inter ORDER BY n WITH FILL FROM 0 TO 5.51 STEP 0.5 INTERPOLATE (inter AS [5]);\n+\n+SELECT n, number+5 AS inter FROM (  -- { serverError NOT_AN_AGGREGATE }\n+   SELECT toFloat32(number % 10) AS n, number, number*2 AS mn\n+   FROM numbers(10) WHERE number % 3 = 1\n+) GROUP BY n, inter ORDER BY n WITH FILL FROM 0 TO 5.51 STEP 0.5 INTERPOLATE (inter AS mn * 2);\n",
  "problem_statement": "Use of INTERPOLATE triggers \"Not found column\" in 24.3 in some cases\n**Describe the issue**\r\n\r\nA request using `WITH FILL ... INTERPOLATE` triggers a \"Not found column\" error for a column that exists. This works with 23.12. This does not work with 24.3.2. This works with 23.12.\r\n\r\n**How to reproduce**\r\n\r\nUsing this table:\r\n\r\n```sql\r\nCREATE TABLE default.flows_1m0s\r\n(\r\n    `TimeReceived` DateTime CODEC(DoubleDelta, LZ4),\r\n    `SamplingRate` UInt64,\r\n    `ExporterAddress` LowCardinality(IPv6),\r\n    `ExporterName` LowCardinality(String),\r\n    `ExporterGroup` LowCardinality(String),\r\n    `ExporterRole` LowCardinality(String),\r\n    `ExporterSite` LowCardinality(String),\r\n    `ExporterRegion` LowCardinality(String),\r\n    `ExporterTenant` LowCardinality(String),\r\n    `SrcAS` UInt32,\r\n    `DstAS` UInt32,\r\n    `SrcNetName` LowCardinality(String),\r\n    `DstNetName` LowCardinality(String),\r\n    `SrcNetRole` LowCardinality(String),\r\n    `DstNetRole` LowCardinality(String),\r\n    `SrcNetSite` LowCardinality(String),\r\n    `DstNetSite` LowCardinality(String),\r\n    `SrcNetRegion` LowCardinality(String),\r\n    `DstNetRegion` LowCardinality(String),\r\n    `SrcNetTenant` LowCardinality(String),\r\n    `DstNetTenant` LowCardinality(String),\r\n    `SrcCountry` FixedString(2),\r\n    `DstCountry` FixedString(2),\r\n    `SrcGeoCity` LowCardinality(String),\r\n    `DstGeoCity` LowCardinality(String),\r\n    `SrcGeoState` LowCardinality(String),\r\n    `DstGeoState` LowCardinality(String),\r\n    `Dst1stAS` UInt32,\r\n    `Dst2ndAS` UInt32,\r\n    `Dst3rdAS` UInt32,\r\n    `InIfName` LowCardinality(String),\r\n    `OutIfName` LowCardinality(String),\r\n    `InIfDescription` LowCardinality(String),\r\n    `OutIfDescription` LowCardinality(String),\r\n    `InIfSpeed` UInt32,\r\n    `OutIfSpeed` UInt32,\r\n    `InIfConnectivity` LowCardinality(String),\r\n    `OutIfConnectivity` LowCardinality(String),\r\n    `InIfProvider` LowCardinality(String),\r\n    `OutIfProvider` LowCardinality(String),\r\n    `InIfBoundary` Enum8('undefined' = 0, 'external' = 1, 'internal' = 2),\r\n    `OutIfBoundary` Enum8('undefined' = 0, 'external' = 1, 'internal' = 2),\r\n    `EType` UInt32,\r\n    `Proto` UInt32,\r\n    `Bytes` UInt64 CODEC(T64, LZ4),\r\n    `Packets` UInt64 CODEC(T64, LZ4),\r\n    `PacketSize` UInt64 ALIAS intDiv(Bytes, Packets),\r\n    `PacketSizeBucket` LowCardinality(String) ALIAS multiIf(PacketSize < 64, '0-63', PacketSize < 128, '64-127', PacketSize < 256, '128-255', PacketSize < 512, '256-511', PacketSize < 768, '512-767', PacketSize < 1024, '768-1023', PacketSize < 1280, '1024-1279', PacketSize < 1501, '1280-1500', PacketSize < 2048, '1501-2047', PacketSize < 3072, '2048-3071', PacketSize < 4096, '3072-4095', PacketSize < 8192, '4096-8191', PacketSize < 10240, '8192-10239', PacketSize < 16384, '10240-16383', PacketSize < 32768, '16384-32767', PacketSize < 65536, '32768-65535', '65536-Inf'),\r\n    `ForwardingStatus` UInt32\r\n)\r\nENGINE = SummingMergeTree((Bytes, Packets))\r\nPARTITION BY toYYYYMMDDhhmmss(toStartOfInterval(TimeReceived, toIntervalSecond(12096)))\r\nPRIMARY KEY (TimeReceived, ExporterAddress, EType, Proto, InIfName, SrcAS, ForwardingStatus, OutIfName, DstAS, SamplingRate)\r\nORDER BY (TimeReceived, ExporterAddress, EType, Proto, InIfName, SrcAS, ForwardingStatus, OutIfName, DstAS, SamplingRate, SrcNetName, DstNetName, SrcNetRole, DstNetRole, SrcNetSite, DstNetSite, SrcNetRegion, DstNetRegion, SrcNetTenant, DstNetTenant, SrcCountry, DstCountry, SrcGeoCity, DstGeoCity, SrcGeoState, DstGeoState, Dst1stAS, Dst2ndAS, Dst3rdAS)\r\nTTL TimeReceived + toIntervalSecond(604800)\r\nSETTINGS index_granularity = 8192, ttl_only_drop_parts = 1\r\n```\r\n\r\nAnd this query:\r\n\r\n```sql\r\nSELECT\r\n    TimeReceived AS time,\r\n    [toString(SrcAS)] AS dimensions\r\nFROM flows_1m0s\r\nWHERE (TimeReceived >= toDateTime('2024-04-09 14:27:00', 'UTC')) AND (TimeReceived <= toDateTime('2024-04-09 20:27:00', 'UTC'))\r\nGROUP BY\r\n    time,\r\n    dimensions\r\nORDER BY time ASC WITH FILL FROM toDateTime('2024-04-09 14:27:00', 'UTC') TO toDateTime('2024-04-09 20:27:00', 'UTC') + toIntervalSecond(1) STEP 60\r\nINTERPOLATE ( dimensions AS ['Other'] )\r\n```\r\n\r\nThis triggers the following error:\r\n\r\n```\r\nReceived exception from server (version 24.3.2):\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column __table1.SrcAS: in block __table1.TimeReceived DateTime UInt32(size = 0), array(__table1.SrcAS) Array(UInt32) Array(size = 0, UInt64(size = 0), UInt32(size = 0)). (NOT_FOUND_COLUMN_IN_BLOCK)\r\n```\r\n\r\nRemoving `INTERPOLATE` makes it work. Also, not using an array for `dimensions` also works:\r\n\r\n```sql\r\nSELECT\r\n    TimeReceived AS time,\r\n    toString(SrcAS) AS dimensions\r\nFROM flows_1m0s\r\nWHERE (TimeReceived >= toDateTime('2024-04-09 14:27:00', 'UTC')) AND (TimeReceived <= toDateTime('2024-04-09 20:27:00', 'UTC'))\r\nGROUP BY\r\n    time,\r\n    dimensions\r\nORDER BY time ASC WITH FILL FROM toDateTime('2024-04-09 14:27:00', 'UTC') TO toDateTime('2024-04-09 20:27:00', 'UTC') + toIntervalSecond(1) STEP 60\r\nINTERPOLATE ( dimensions AS 'Other' )\r\n```\n",
  "hints_text": "seems to be analyzer issue\r\nuse `set allow_experimental_analyzer=0` as a workaround until we fix it...",
  "created_at": "2024-05-18T23:22:52Z",
  "modified_files": [
    "src/Analyzer/ValidationUtils.cpp",
    "src/Planner/PlannerExpressionAnalysis.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03155_analyzer_interpolate.reference",
    "b/tests/queries/0_stateless/03155_analyzer_interpolate.sql"
  ]
}