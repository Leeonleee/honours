You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Tableau converts null in nullable numbers and dates to "0" or "01/01/1970" when using the MySQL Clickhouse connector
When using Tableau, and connecting to Clickhouse through the MySQL connector, we noticed that it doesn't handle `Nullable` fields very well.

When running this SQL in Tableau:

```sql
SELECT NULL AS number_nullable, NULL AS string_nullable, NULL AS date_nullable
UNION ALL
SELECT 123 AS number_nullable, 'abc' AS string_nullable, CURDATE() AS date_nullable;
```

To a regular MySQL instance (all good here!):

<p align="center"><img width="500" src="https://github.com/ClickHouse/ClickHouse/assets/10865165/5eef32a8-dc47-4b51-a499-e65d04c6d45e" /></p>

When running it to the MySQL Clickhouse instance:
- the `NULL` value in `date_nullable` becomes `01/01/1970`
- `NULL` value in `number_nullable` becomes `0`

<p align="center"><img width="500" src="https://github.com/ClickHouse/ClickHouse/assets/10865165/102a1025-987a-4aa1-88a4-7f12ffffe7f7" /> </p>

I am not able to reproduce this using other MySQL clients, only Tableau. When connecting with `mysql` in my terminal:

To a regular MySQL instance (all good):

```
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 21
Server version: 8.1.0 Homebrew

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SELECT NULL AS number_nullable, NULL AS string_nullable, NULL AS date_nullable
    -> UNION ALL
    -> SELECT 123 AS number_nullable, 'abc' AS string_nullable, CURDATE() AS date_nullable;
+-----------------+-----------------+---------------+
| number_nullable | string_nullable | date_nullable |
+-----------------+-----------------+---------------+
|            NULL | NULL            | NULL          |
|             123 | abc             | 2023-10-31    |
+-----------------+-----------------+---------------+
2 rows in set (0.01 sec)
```

To the MySQL Clickhouse instance (also all good!):

```
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 23
Server version: 23.10.1.1795-ClickHouse

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SELECT NULL AS number_nullable, NULL AS string_nullable, NULL AS date_nullable
    -> UNION ALL
    -> SELECT 123 AS number_nullable, 'abc' AS string_nullable, CURDATE() AS date_nullable;
+-----------------+-----------------+---------------+
| number_nullable | string_nullable | date_nullable |
+-----------------+-----------------+---------------+
|             123 | abc             | 2023-10-31    |
|            NULL | NULL            | NULL          |
+-----------------+-----------------+---------------+
2 rows in set (0.10 sec)
Read 2 rows, 2.00 B in 0.001288 sec., 1552 rows/sec., 1.52 KiB/sec.
```


**Describe what's wrong**

Tableau converts null in a nullable number or date field to 0 instead of showing it as `NULL`. Strings work as expected.

Is there anything we can do on the Clickhouse side to make Tableau understand the schema better? 

This might very well be a Tableau bug, but hopefully there is a way to fix it from the Clickhouse side.

**How to reproduce**

* Which ClickHouse server version to use: latest master
* Which interface to use: MySQL

**Expected behavior**

The MySQL Clickhouse connector should behave the same way as a regular MySQL instance in tableau when it comes to parsing `nullable` values
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
