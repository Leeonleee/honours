You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
NPE when using IN clause with a subquery with a tuple

**Describe the bug**
`... where (a,b) in (select (a, b) from ...)` is stated to be not supported anymore in the changelog, but it also shouldn't crash the server.

**How to reproduce**
`create table bug(historydate Date, guid String) Engine=MergeTree(historydate, guid, 8192)`

`select 1 from bug where (guid, historydate) in (select (guid, max(historydate)) from bug group by guid)
`
* Which ClickHouse server version to use
Self-built from today's master, git sha adfc369172

**Expected behavior**
A syntax error, or (better) supporting this type of queries

**Error message and/or stacktrace**
```
2019.07.23 14:33:34.764115 [ 47 ] {} <Error> BaseDaemon: ########################################
2019.07.23 14:33:34.764190 [ 47 ] {} <Error> BaseDaemon: (version 19.12.1.1) (from thread 28) Received signal Segmentation fault (11).
2019.07.23 14:33:34.764222 [ 47 ] {} <Error> BaseDaemon: Address: 0x9 Access: write. Address not mapped to object.
2019.07.23 14:33:35.382038 [ 47 ] {} <Error> BaseDaemon: 0. ./clickhouse-server(StackTrace::StackTrace(ucontext const&)+0x22) [0x7218fb2]
1. ./clickhouse-server() [0x32fc89d]
2. /lib/x86_64-linux-gnu/libpthread.so.0(+0x11390) [0x7f3dd75e4390]
3. ./clickhouse-server(DB::MergeTreeSetIndex::MergeTreeSetIndex(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, std::vector<DB::MergeTreeSetIndex::KeyTuplePositionMapping, std::allocator<DB::MergeTreeSetIndex::KeyTuplePositionMapping> >&&)+0x1d5) [0x5fd1205]
4. ./clickhouse-server(DB::KeyCondition::tryPrepareSetIndex(std::vector<std::shared_ptr<DB::IAST>, std::allocator<std::shared_ptr<DB::IAST> > > const&, DB::Context const&, DB::KeyCondition::RPNElement&, unsigned long&)+0xac2) [0x62cea42]
5. ./clickhouse-server(DB::KeyCondition::atomFromAST(std::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&, DB::KeyCondition::RPNElement&)+0x216) [0x62d22f6]
6. ./clickhouse-server(DB::KeyCondition::traverseAST(std::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&)+0xfe) [0x62d56de]
7. ./clickhouse-server(DB::KeyCondition::KeyCondition(DB::SelectQueryInfo const&, DB::Context const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::shared_ptr<DB::ExpressionActions> const&)+0x430) [0x62d5ed0]
8. ./clickhouse-server(DB::MergeTreeDataSelectExecutor::readFromParts(std::vector<std::shared_ptr<DB::MergeTreeDataPart const>, std::allocator<std::shared_ptr<DB::MergeTreeDataPart const> > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > > const*) const+0x588) [0x6273988]
9. ./clickhouse-server(DB::MergeTreeDataSelectExecutor::read(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > > const*) const+0x70) [0x6278090]
10. ./clickhouse-server(DB::StorageMergeTree::read(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int)+0x31) [0x618ce11]
11. ./clickhouse-server(void DB::InterpreterSelectQuery::executeFetchColumns<DB::InterpreterSelectQuery::Pipeline>(DB::QueryProcessingStage::Enum, DB::InterpreterSelectQuery::Pipeline&, std::shared_ptr<DB::PrewhereInfo> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x199b) [0x6571a7b]
12. ./clickhouse-server(void DB::InterpreterSelectQuery::executeImpl<DB::InterpreterSelectQuery::Pipeline>(DB::InterpreterSelectQuery::Pipeline&, std::shared_ptr<DB::IBlockInputStream> const&, bool)+0x6b1) [0x65779d1]
13. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x4c) [0x656901c]
14. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x64) [0x5f118c4]
15. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x35) [0x5f131c5]
16. ./clickhouse-server() [0x6032908]
17. ./clickhouse-server(DB::executeQuery(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool)+0x174) [0x6034f14]
18. ./clickhouse-server(DB::TCPHandler::runImpl()+0x5fe) [0x31f51be]
19. ./clickhouse-server(DB::TCPHandler::run()+0x2b) [0x31f685b]
20. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0xf) [0x6b490ff]
21. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x166) [0x6b9b286]
22. ./clickhouse-server(Poco::PooledThread::run()+0x77) [0x7312d17]
23. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x38) [0x72c83a8]
24. ./clickhouse-server() [0x78632bf]
25. /lib/x86_64-linux-gnu/libpthread.so.0(+0x76ba) [0x7f3dd75da6ba]
26. /lib/x86_64-linux-gnu/libc.so.6(clone+0x6d) [0x7f3dd6bfb41d]



```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
