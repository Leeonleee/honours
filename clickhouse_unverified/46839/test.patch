diff --git a/tests/queries/0_stateless/01705_normalize_create_alter_function_names.reference b/tests/queries/0_stateless/01705_normalize_create_alter_function_names.reference
index b6f5fe99ca19..b5b93c34c001 100644
--- a/tests/queries/0_stateless/01705_normalize_create_alter_function_names.reference
+++ b/tests/queries/0_stateless/01705_normalize_create_alter_function_names.reference
@@ -1,2 +1,2 @@
-CREATE TABLE default.x
(
    `i` Int32,
    INDEX mm rand() TYPE minmax GRANULARITY 1,
    INDEX nn rand() TYPE minmax GRANULARITY 1,
    PROJECTION p
    (
        SELECT max(i)
    ),
    PROJECTION p2
    (
        SELECT min(i)
    )
)
ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/default/x\', \'r\')
ORDER BY i
SETTINGS index_granularity = 8192
-metadata format version: 1
date column: 
sampling expression: 
index granularity: 8192
mode: 0
sign column: 
primary key: i
data format version: 1
partition key: 
indices: mm rand() TYPE minmax GRANULARITY 1, nn rand() TYPE minmax GRANULARITY 1
projections: p (SELECT max(i)), p2 (SELECT min(i))
granularity bytes: 10485760

+CREATE TABLE default.x
(
    `i` Int32,
    INDEX mm log2(i) TYPE minmax GRANULARITY 1,
    INDEX nn log2(i) TYPE minmax GRANULARITY 1,
    PROJECTION p
    (
        SELECT max(i)
    ),
    PROJECTION p2
    (
        SELECT min(i)
    )
)
ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/default/x\', \'r\')
ORDER BY i
SETTINGS index_granularity = 8192
+metadata format version: 1
date column: 
sampling expression: 
index granularity: 8192
mode: 0
sign column: 
primary key: i
data format version: 1
partition key: 
indices: mm log2(i) TYPE minmax GRANULARITY 1, nn log2(i) TYPE minmax GRANULARITY 1
projections: p (SELECT max(i)), p2 (SELECT min(i))
granularity bytes: 10485760

diff --git a/tests/queries/0_stateless/01705_normalize_create_alter_function_names.sql b/tests/queries/0_stateless/01705_normalize_create_alter_function_names.sql
index 683bd2714052..be0f7e8b7106 100644
--- a/tests/queries/0_stateless/01705_normalize_create_alter_function_names.sql
+++ b/tests/queries/0_stateless/01705_normalize_create_alter_function_names.sql
@@ -2,9 +2,9 @@
 
 drop table if exists x;
 
-create table x(i int, index mm RAND() type minmax granularity 1, projection p (select MAX(i))) engine ReplicatedMergeTree('/clickhouse/tables/{database}/x', 'r') order by i;
+create table x(i int, index mm LOG2(i) type minmax granularity 1, projection p (select MAX(i))) engine ReplicatedMergeTree('/clickhouse/tables/{database}/x', 'r') order by i;
 
-alter table x add index nn RAND() type minmax granularity 1, add projection p2 (select MIN(i));
+alter table x add index nn LOG2(i) type minmax granularity 1, add projection p2 (select MIN(i));
 
 show create x;
 
diff --git a/tests/queries/0_stateless/02670_constant_skip_index.reference b/tests/queries/0_stateless/02670_constant_skip_index.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/02670_constant_skip_index.sql b/tests/queries/0_stateless/02670_constant_skip_index.sql
new file mode 100644
index 000000000000..97dd2ab33c9f
--- /dev/null
+++ b/tests/queries/0_stateless/02670_constant_skip_index.sql
@@ -0,0 +1,25 @@
+
+DROP TABLE IF EXISTS t_constant_index;
+
+CREATE TABLE t_constant_index
+(
+    id UInt64,
+    INDEX t_constant_index 'foo' TYPE set(2) GRANULARITY 1
+) ENGINE = MergeTree
+ORDER BY id; -- { serverError INCORRECT_QUERY }
+
+CREATE TABLE t_constant_index
+(
+    id UInt64,
+    INDEX t_constant_index id + rand() TYPE set(2) GRANULARITY 1
+) ENGINE = MergeTree
+ORDER BY id; -- { serverError BAD_ARGUMENTS }
+
+CREATE TABLE t_constant_index
+(
+    id UInt64,
+    INDEX t_constant_index id * 2 TYPE set(2) GRANULARITY 1
+) ENGINE = MergeTree
+ORDER BY id;
+
+DROP TABLE t_constant_index;
