{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 33445,
  "instance_id": "ClickHouse__ClickHouse-33445",
  "issue_numbers": [
    "33297"
  ],
  "base_commit": "bb000758dfeee96b526cb33c5102bc92efa07aa4",
  "patch": "diff --git a/src/Interpreters/ActionsVisitor.cpp b/src/Interpreters/ActionsVisitor.cpp\nindex d5eb701e2aa9..bc937755618d 100644\n--- a/src/Interpreters/ActionsVisitor.cpp\n+++ b/src/Interpreters/ActionsVisitor.cpp\n@@ -697,6 +697,10 @@ ASTs ActionsMatcher::doUntuple(const ASTFunction * function, ActionsMatcher::Dat\n     for (const auto & name [[maybe_unused]] : tuple_type->getElementNames())\n     {\n         auto tuple_ast = function->arguments->children[0];\n+\n+        /// This transformation can lead to exponential growth of AST size, let's check it.\n+        tuple_ast->checkSize(data.getContext()->getSettingsRef().max_ast_elements);\n+\n         if (tid != 0)\n             tuple_ast = tuple_ast->clone();\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02160_untuple_exponential_growth.reference b/tests/queries/0_stateless/02160_untuple_exponential_growth.reference\nnew file mode 100644\nindex 000000000000..6ed281c757a9\n--- /dev/null\n+++ b/tests/queries/0_stateless/02160_untuple_exponential_growth.reference\n@@ -0,0 +1,2 @@\n+1\n+1\ndiff --git a/tests/queries/0_stateless/02160_untuple_exponential_growth.sh b/tests/queries/0_stateless/02160_untuple_exponential_growth.sh\nnew file mode 100755\nindex 000000000000..9ec6594af695\n--- /dev/null\n+++ b/tests/queries/0_stateless/02160_untuple_exponential_growth.sh\n@@ -0,0 +1,11 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+# Should finish in reasonable time (milliseconds).\n+# In previous versions this query led to exponential complexity of query analysis.\n+\n+${CLICKHOUSE_LOCAL} --query \"SELECT untuple(tuple(untuple((1, untuple((untuple(tuple(untuple(tuple(untuple((untuple((1, 1, 1, 1)), 1, 1, 1)))))), 1, 1))))))\" 2>&1 | grep -cF 'TOO_BIG_AST'\n+${CLICKHOUSE_LOCAL} --query \"SELECT untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple((1, 1, 1, 1, 1))))))))))))))))))))))))))\" 2>&1 | grep -cF 'TOO_BIG_AST'\n",
  "problem_statement": "This weird query is slow\n**How to reproduce**\r\n```\r\nSELECT untuple(tuple(untuple((1, untuple((untuple(tuple(untuple(tuple(untuple((untuple((1, 1, 1, 1)), 1, 1, 1)))))), 1, 1))))))\r\n```\r\n\r\nMost likely due to very long column name.\n",
  "hints_text": "`SELECT untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple(tuple(untuple((1, 1, 1, 1, 1))))))))))))))))))))))))))`\r\n\r\nMemory limit exceeded.",
  "created_at": "2022-01-07T06:19:51Z"
}