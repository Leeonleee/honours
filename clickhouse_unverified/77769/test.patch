diff --git a/tests/integration/test_executable_user_defined_function/functions/test_function_config.xml b/tests/integration/test_executable_user_defined_function/functions/test_function_config.xml
index 99efd99ab311..620c756ccf7d 100644
--- a/tests/integration/test_executable_user_defined_function/functions/test_function_config.xml
+++ b/tests/integration/test_executable_user_defined_function/functions/test_function_config.xml
@@ -394,4 +394,30 @@
         <!-- default -->
         <!-- <check_exit_code>1</check_exit_code> -->
     </function>
+
+    <!-- The next two UDFs have an explicit 'deterministic' tag defined -->
+    <function>
+        <type>executable</type>
+        <name>test_function_bash_deterministic</name>
+        <return_type>String</return_type>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <format>TabSeparated</format>
+        <command>input.sh</command>
+        <deterministic>true</deterministic>
+    </function>
+
+    <function>
+        <type>executable</type>
+        <name>test_function_bash_nondeterministic</name>
+        <return_type>String</return_type>
+        <argument>
+            <type>UInt64</type>
+        </argument>
+        <format>TabSeparated</format>
+        <command>input.sh</command>
+        <deterministic>false</deterministic>
+    </function>
+
 </functions>
diff --git a/tests/integration/test_executable_user_defined_function/test.py b/tests/integration/test_executable_user_defined_function/test.py
index 8b79223a4d27..d092fc9b4f97 100644
--- a/tests/integration/test_executable_user_defined_function/test.py
+++ b/tests/integration/test_executable_user_defined_function/test.py
@@ -340,23 +340,49 @@ def test_executable_function_always_error_python(started_cluster):
         assert "DB::Exception: Child process was exited with return code 1" in str(ex)
 
 def test_executable_function_query_cache(started_cluster):
-    '''Test for issue #77553: Externally-defined UDFs may be non-deterministic. The query cache should treat them as such, i.e. reject them.'''
+    '''Test for issues #77553 and #59988: Users should be able to specify if externally-defined are non-deterministic, and the query cache should treat them correspondingly.'''
     '''Also see tests/0_stateless/test_query_cache_udf_sql.sql'''
     skip_test_msan(node)
 
     node.query("SYSTEM DROP QUERY CACHE");
 
+    # we are each testing an UDF without explicit <deterministic> tag (to check the default behavior) and two queries with <deterministic> true respectively false </deterministic>.
+
     # query_cache_nondeterministic_function_handling = throw
+
     assert node.query_and_get_error("SELECT test_function_bash(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'throw'")
     assert node.query("SELECT count(*) FROM system.query_cache") == "0
"
+
+    assert node.query("SELECT test_function_bash_deterministic(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'throw'") == "Key 1
"
+    assert node.query("SELECT count(*) FROM system.query_cache") == "1
"
+
+    assert node.query_and_get_error("SELECT test_function_bash_nondeterministic(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'throw'")
+    assert node.query("SELECT count(*) FROM system.query_cache") == "1
"
+
     node.query("SYSTEM DROP QUERY CACHE");
 
     # query_cache_nondeterministic_function_handling = save
+
     assert node.query("SELECT test_function_bash(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'save'") == "Key 1
"
     assert node.query("SELECT count(*) FROM system.query_cache") == "1
"
+
+    assert node.query("SELECT test_function_bash_deterministic(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'save'") == "Key 1
"
+    assert node.query("SELECT count(*) FROM system.query_cache") == "2
"
+
+    assert node.query("SELECT test_function_bash_nondeterministic(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'save'") == "Key 1
"
+    assert node.query("SELECT count(*) FROM system.query_cache") == "3
"
+
     node.query("SYSTEM DROP QUERY CACHE");
 
     # query_cache_nondeterministic_function_handling = ignore
+
     assert node.query("SELECT test_function_bash(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'ignore'") == "Key 1
"
     assert node.query("SELECT count(*) FROM system.query_cache") == "0
"
+
+    assert node.query("SELECT test_function_bash_deterministic(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'ignore'") == "Key 1
"
+    assert node.query("SELECT count(*) FROM system.query_cache") == "1
"
+
+    assert node.query("SELECT test_function_bash_nondeterministic(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'ignore'") == "Key 1
"
+    assert node.query("SELECT count(*) FROM system.query_cache") == "1
"
+
     node.query("SYSTEM DROP QUERY CACHE");
diff --git a/tests/queries/0_stateless/02494_query_cache_udf_sql.sql b/tests/queries/0_stateless/02494_query_cache_udf_sql.sql
index 0a87453400fe..18870f0e89a2 100644
--- a/tests/queries/0_stateless/02494_query_cache_udf_sql.sql
+++ b/tests/queries/0_stateless/02494_query_cache_udf_sql.sql
@@ -2,7 +2,7 @@
 -- Tag no-parallel: Messes with internal cache
 
 -- Test for issue #77553: SQL-defined UDFs may be non-deterministic. The query cache should treat them as such, i.e. reject them.
--- Also see 02494_query_cache_udf_executable.sh
+-- Also see test_executable_function_query_cache in tests/integration/test_executable_user_defined_function
 
 SYSTEM DROP QUERY CACHE;
 DROP FUNCTION IF EXISTS udf;
