You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
assertion failure in `ON CLUSTER` query with TestKeeper
```
2021.04.05 20:41:11.963398 [ 589679 ] {f459c27c-24b9-4ca7-ba41-6da0b34e1162} <Debug> executeQuery: (from [::1]:36122, using production parser) (comment: /home/akuzm/ch2/ch/tests/queries/0_stateless/01568_window_functions_distributed.sql) 
 CREATE TABLE demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( `id` Int64 COMMENT 'id', `date_stat` Date COMMENT 'date of stat', `customer_no` String COMMENT 'customer no', `loan_principal` Float64 COMMENT 'loan principal' ) ENGINE=ReplacingMergeTree() ORDER BY id PARTITION BY toYYYYMM(date_stat);
2021.04.05 20:41:11.964234 [ 589679 ] {f459c27c-24b9-4ca7-ba41-6da0b34e1162} <Trace> ContextAccess (default): Access granted: CREATE TABLE ON shard_0.demo_loan_01568
2021.04.05 20:41:11.964328 [ 589679 ] {f459c27c-24b9-4ca7-ba41-6da0b34e1162} <Trace> ContextAccess (default): Access granted: CREATE TABLE ON shard_1.demo_loan_01568
2021.04.05 20:41:11.965306 [ 589730 ] {} <Debug> DDLWorker: Scheduling tasks
2021.04.05 20:41:11.965349 [ 589708 ] {} <Trace> DDLWorker: Too early to clean queue, will do it later.
2021.04.05 20:41:11.965527 [ 589730 ] {} <Debug> DDLWorker: Will schedule 1 tasks starting from query-0000000000
2021.04.05 20:41:11.965596 [ 589730 ] {} <Trace> DDLWorker: Checking task query-0000000000
2021.04.05 20:41:11.966655 [ 589730 ] {} <Warning> DDLWorker: There are two the same ClickHouse instances in task query-0000000000: localhost:9000 and localhost:9000. Will use the first one only.
2021.04.05 20:41:11.966853 [ 589679 ] {f459c27c-24b9-4ca7-ba41-6da0b34e1162} <Debug> executeQuery: Query pipeline:
DDLQueryStatusInputStream

2021.04.05 20:41:12.020599 [ 589730 ] {} <Error> DDLWorker: Cannot parse DDL task query-0000000000: Cannot parse query or obtain cluster info. Will try to send error status: 371
Code: 371, e.displayText() = DB::Exception: For a distributed DDL on circular replicated cluster its table name must be qualified by database name. (version 21.4.1.1)
clickhouse-server: /home/akuzm/ch2/ch/src/Interpreters/DDLWorker.cpp:1011: void DB::DDLWorker::createStatusDirs(const std::string &, const DB::ZooKeeperPtr &): Assertion `Coordination::isHardwareError(code) || code == Coordination::Error::ZNONODE' failed.
2021.04.05 20:41:12.021227 [ 589676 ] {} <Trace> BaseDaemon: Received signal 6
2021.04.05 20:41:12.021622 [ 589955 ] {} <Fatal> BaseDaemon: ########################################
2021.04.05 20:41:12.021737 [ 589955 ] {} <Fatal> BaseDaemon: (version 21.4.1.1, build id: 1D9C4F29D5439E3A) (from thread 589730) (no query) Received signal Aborted (6)
2021.04.05 20:41:12.021796 [ 589955 ] {} <Fatal> BaseDaemon: 
2021.04.05 20:41:12.021913 [ 589955 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f9fd341a18b 0x7f9fd33f9859 0x7f9fd33f9729 0x7f9fd340af36 0x7f9fbf8f6ebb 0x7f9fbf8ef6a7 0x7f9fbf8eeff4 0x7f9fbf8f23b0 0x7f9fbf8ec7e7 0x7f9fbf907407 0x7f9fbf90736a 0x7f9fbf907292 0x7f9fbf90717f 0x7f9fbf9070ad 0x7f9fbf90707d 0x7f9fbf907055 0x7f9fbf907030 0x7f9fd5c107b9 0x7f9fd5c10765 0x7f9fd550efa4 0x7f9fd5515bb4 0x7f9fd5515b3d 0x7f9fd5515a95 0x7f9fd5515462 0x7f9fd37ad609 0x7f9fd34f6293
2021.04.05 20:41:12.024448 [ 589955 ] {} <Fatal> BaseDaemon: 4. /build/glibc-eX1tMB/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51: raise @ 0x4618b in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so
2021.04.05 20:41:12.028554 [ 589955 ] {} <Fatal> BaseDaemon: 5. /build/glibc-eX1tMB/glibc-2.31/stdlib/abort.c:81: abort @ 0x25859 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so
2021.04.05 20:41:12.035536 [ 589955 ] {} <Fatal> BaseDaemon: 6.1. inlined from /build/glibc-eX1tMB/glibc-2.31/intl/loadmsgcat.c:509: get_sysdep_segment_value
2021.04.05 20:41:12.035619 [ 589955 ] {} <Fatal> BaseDaemon: 6. loadmsgcat.c:970: _nl_load_domain.cold @ 0x25729 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so
2021.04.05 20:41:12.080832 [ 589955 ] {} <Fatal> BaseDaemon: 7. ? @ 0x36f36 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so
2021.04.05 20:41:12.481819 [ 589955 ] {} <Fatal> BaseDaemon: 8. /home/akuzm/ch2/ch/src/Interpreters/DDLWorker.cpp:1012: DB::DDLWorker::createStatusDirs(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<zkutil::ZooKeeper> const&) @ 0x1611ebb in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:12.501654 [ 589697 ] {} <Trace> SystemLog (system.query_thread_log): Flushing system log, 23 entries to flush
2021.04.05 20:41:12.510299 [ 589697 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 74.42 GiB.
2021.04.05 20:41:12.520028 [ 589697 ] {} <Trace> system.query_thread_log: Renaming temporary part tmp_insert_202104_3_3_0 to 202104_1606_1606_0.
2021.04.05 20:41:12.521328 [ 589697 ] {} <Trace> SystemLog (system.query_thread_log): Flushed system log
2021.04.05 20:41:12.531652 [ 589693 ] {} <Trace> SystemLog (system.query_log): Flushing system log, 25 entries to flush
2021.04.05 20:41:12.547796 [ 589693 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 74.42 GiB.
2021.04.05 20:41:12.561346 [ 589693 ] {} <Trace> system.query_log: Renaming temporary part tmp_insert_202104_3_3_0 to 202104_1653_1653_0.
2021.04.05 20:41:12.564002 [ 589693 ] {} <Trace> SystemLog (system.query_log): Flushed system log
2021.04.05 20:41:12.901806 [ 589955 ] {} <Fatal> BaseDaemon: 9. /home/akuzm/ch2/ch/src/Interpreters/DDLWorker.cpp:250: DB::DDLWorker::initAndCheckTask(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<zkutil::ZooKeeper> const&)::$_2::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x160a6a7 in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:13.162367 [ 589691 ] {} <Debug> DNSResolver: Updating DNS cache
2021.04.05 20:41:13.162884 [ 589691 ] {} <Debug> DNSResolver: Updated DNS cache
2021.04.05 20:41:13.288263 [ 589955 ] {} <Fatal> BaseDaemon: 10. /home/akuzm/ch2/ch/src/Interpreters/DDLWorker.cpp:288: DB::DDLWorker::initAndCheckTask(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<zkutil::ZooKeeper> const&) @ 0x1609ff4 in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:13.674881 [ 589955 ] {} <Fatal> BaseDaemon: 11. /home/akuzm/ch2/ch/src/Interpreters/DDLWorker.cpp:435: DB::DDLWorker::scheduleTasks(bool) @ 0x160d3b0 in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:14.080896 [ 589955 ] {} <Fatal> BaseDaemon: 12. /home/akuzm/ch2/ch/src/Interpreters/DDLWorker.cpp:1117: DB::DDLWorker::runMainThread() @ 0x16077e7 in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:14.520270 [ 589955 ] {} <Fatal> BaseDaemon: 13. /home/akuzm/ch2/ch/contrib/libcxx/include/type_traits:3624: decltype(*(std::__1::forward<DB::DDLWorker*&>(fp0)).*fp()) std::__1::__invoke_constexpr<void (DB::DDLWorker::*&)(), DB::DDLWorker*&, void>(void (DB::DDLWorker::*&)(), DB::DDLWorker*&) @ 0x1622407 in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:14.951255 [ 589955 ] {} <Fatal> BaseDaemon: 14. /home/akuzm/ch2/ch/contrib/libcxx/include/tuple:1415: decltype(auto) std::__1::__apply_tuple_impl<void (DB::DDLWorker::*&)(), std::__1::tuple<DB::DDLWorker*>&, 0ul>(void (DB::DDLWorker::*&)(), std::__1::tuple<DB::DDLWorker*>&, std::__1::__tuple_indices<0ul>) @ 0x162236a in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:15.384774 [ 589955 ] {} <Fatal> BaseDaemon: 15. /home/akuzm/ch2/ch/contrib/libcxx/include/tuple:1424: decltype(auto) std::__1::apply<void (DB::DDLWorker::*&)(), std::__1::tuple<DB::DDLWorker*>&>(void (DB::DDLWorker::*&)(), std::__1::tuple<DB::DDLWorker*>&) @ 0x1622292 in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:15.843730 [ 589955 ] {} <Fatal> BaseDaemon: 16. /home/akuzm/ch2/ch/src/Common/ThreadPool.h:178: ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::'lambda'()::operator()() @ 0x162217f in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:16.296689 [ 589955 ] {} <Fatal> BaseDaemon: 17. /home/akuzm/ch2/ch/contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<void (DB::DDLWorker::*)()>(fp)(std::__1::forward<DB::DDLWorker*>(fp0))) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::'lambda'()&>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&) @ 0x16220ad in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:16.754507 [ 589955 ] {} <Fatal> BaseDaemon: 18. /home/akuzm/ch2/ch/contrib/libcxx/include/__functional_base:349: void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::'lambda'()&>(void (DB::DDLWorker::*&&)()...) @ 0x162207d in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:17.205419 [ 589955 ] {} <Fatal> BaseDaemon: 19. /home/akuzm/ch2/ch/contrib/libcxx/include/functional:1608: std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::'lambda'(), void ()>::operator()() @ 0x1622055 in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:17.660224 [ 589955 ] {} <Fatal> BaseDaemon: 20. /home/akuzm/ch2/ch/contrib/libcxx/include/functional:2089: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0x1622030 in /home/akuzm/ch2/build-clang11/src/libclickhouse_interpretersd.so
2021.04.05 20:41:18.113033 [ 589955 ] {} <Fatal> BaseDaemon: 21. /home/akuzm/ch2/ch/contrib/libcxx/include/functional:2221: std::__1::__function::__policy_func<void ()>::operator()() const @ 0x10e7b9 in /home/akuzm/ch2/build-clang11/programs/server/libclickhouse-server-libd.so
2021.04.05 20:41:18.519333 [ 589955 ] {} <Fatal> BaseDaemon: 22. /home/akuzm/ch2/ch/contrib/libcxx/include/functional:2560: std::__1::function<void ()>::operator()() const @ 0x10e765 in /home/akuzm/ch2/build-clang11/programs/server/libclickhouse-server-libd.so
2021.04.05 20:41:18.613202 [ 589955 ] {} <Fatal> BaseDaemon: 23. /home/akuzm/ch2/ch/src/Common/ThreadPool.cpp:247: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x33afa4 in /home/akuzm/ch2/build-clang11/src/libclickhouse_common_iod.so
2021.04.05 20:41:18.674626 [ 589955 ] {} <Fatal> BaseDaemon: 24. /home/akuzm/ch2/ch/src/Common/ThreadPool.cpp:124: void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()::operator()() const @ 0x341bb4 in /home/akuzm/ch2/build-clang11/src/libclickhouse_common_iod.so
2021.04.05 20:41:18.733711 [ 589955 ] {} <Fatal> BaseDaemon: 25. /home/akuzm/ch2/ch/contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...) @ 0x341b3d in /home/akuzm/ch2/build-clang11/src/libclickhouse_common_iod.so
2021.04.05 20:41:18.792485 [ 589955 ] {} <Fatal> BaseDaemon: 26. /home/akuzm/ch2/ch/contrib/libcxx/include/thread:281: void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>&, std::__1::__tuple_indices<>) @ 0x341a95 in /home/akuzm/ch2/build-clang11/src/libclickhouse_common_iod.so
2021.04.05 20:41:18.851158 [ 589955 ] {} <Fatal> BaseDaemon: 27. /home/akuzm/ch2/ch/contrib/libcxx/include/thread:291: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x341462 in /home/akuzm/ch2/build-clang11/src/libclickhouse_common_iod.so
2021.04.05 20:41:18.851254 [ 589955 ] {} <Fatal> BaseDaemon: 28. start_thread @ 0x9609 in /lib/x86_64-linux-gnu/libpthread-2.31.so
2021.04.05 20:41:18.851572 [ 589955 ] {} <Fatal> BaseDaemon: 29. /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: clone @ 0x122293 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so
2021.04.05 20:41:18.851653 [ 589955 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: 8F064C5E1A2EABEDFA9A4E91C53B5568. There is no information about the reference checksum.
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
