You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error: 'ColumnObject must be converted to ColumnTuple before use'
https://s3.amazonaws.com/clickhouse-test-reports/36171/ece37d2bd91fee26e066e736464ed65c99129e77/fuzzer_astfuzzerubsan//report.html
```
2022.08.08 16:32:04.568557 [ 132 ] {} <Trace> BaseDaemon: Received signal 6
2022.08.08 16:32:04.568692 [ 456 ] {} <Fatal> BaseDaemon: ########################################
2022.08.08 16:32:04.568869 [ 456 ] {} <Fatal> BaseDaemon: (version 22.8.1.1, build id: 8F5483B425261E20) (from thread 433) (query_id: 05f5eb61-18e9-447f-a337-693d6bce6717) (query: SELECT NULL, [NULL, NULL, NULL, NULL, NULL, NULL, NULL, 7, 1000.0001220703125, 10000000000., NULL, NULL, NULL, NULL], NULL AS name FROM system.numbers_mt ORDER BY CAST('', 'Object(Nullable(\'json\'))') ASC, name ASC NULLS LAST LIMIT 3 FORMAT `Null`) Received signal Aborted (6)
2022.08.08 16:32:04.569023 [ 456 ] {} <Fatal> BaseDaemon:
2022.08.08 16:32:04.569295 [ 456 ] {} <Fatal> BaseDaemon: Stack trace: 0x7ff4c6fd600b 0x7ff4c6fb5859 0x101ac143 0x101ac3ef 0x2608fedc 0x2608d749 0x273c6400 0x273c5fd8 0x273c485e 0x27496a85 0x27494f3b 0x274924ef 0x25bf82ab 0x26f91c45 0x26f9176b 0x26f817c3 0x26f82e20 0x26f82ceb 0x1028ad12 0x1028d963 0x7ff4c718d609 0x7ff4c70b2133
2022.08.08 16:32:04.569548 [ 456 ] {} <Fatal> BaseDaemon: 3. raise in ?
2022.08.08 16:32:04.569738 [ 456 ] {} <Fatal> BaseDaemon: 4. abort in ?
2022.08.08 16:32:04.586789 [ 456 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Common/Exception.cpp:47: DB::abortOnFailedAssertion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in /workspace/clickhouse
2022.08.08 16:32:04.601510 [ 456 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Common/Exception.cpp:70: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) in /workspace/clickhouse
2022.08.08 16:32:04.626884 [ 456 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Columns/ColumnObject.h:0: DB::ColumnObject::throwMustBeConcrete() in /workspace/clickhouse
2022.08.08 16:32:04.652323 [ 456 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Columns/ColumnObject.h:235: DB::ColumnObject::compareAt(unsigned long, unsigned long, DB::IColumn const&, int) const in /workspace/clickhouse
2022.08.08 16:32:04.720406 [ 456 ] {} <Fatal> BaseDaemon: 9.1. inlined from ./build_docker/../src/Core/SortCursor.h:229: DB::SortCursor::greaterAt(DB::SortCursor const&, unsigned long, unsigned long) const
2022.08.08 16:32:04.720448 [ 456 ] {} <Fatal> BaseDaemon: 9.2. inlined from ../src/Core/SortCursor.h:174: DB::SortCursorHelper<DB::SortCursor>::greater(DB::SortCursorHelper<DB::SortCursor> const&) const
2022.08.08 16:32:04.720495 [ 456 ] {} <Fatal> BaseDaemon: 9.3. inlined from ../src/Core/SortCursor.h:185: DB::SortCursorHelper<DB::SortCursor>::operator<(DB::SortCursorHelper<DB::SortCursor> const&) const
2022.08.08 16:32:04.720538 [ 456 ] {} <Fatal> BaseDaemon: 9. ../contrib/libcxx/include/__algorithm/comp.h:73: std::__1::__less<DB::SortCursor, DB::SortCursor>::operator()(DB::SortCursor const&, DB::SortCursor const&) const in /workspace/clickhouse
2022.08.08 16:32:04.793955 [ 456 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../contrib/libcxx/include/__algorithm/sift_down.h:47: void std::__1::__sift_down<std::__1::__less<DB::SortCursor, DB::SortCursor>&, std::__1::__wrap_iter<DB::SortCursor*> >(std::__1::__wrap_iter<DB::SortCursor*>, std::__1::__less<DB::SortCursor, DB::SortCursor>&, std::__1::iterator_traits<std::__1::__wrap_iter<DB::SortCursor*> >::difference_type, std::__1::__wrap_iter<DB::SortCursor*>) in /workspace/clickhouse
2022.08.08 16:32:04.860325 [ 456 ] {} <Fatal> BaseDaemon: 11.1. inlined from ./build_docker/../contrib/libcxx/include/__algorithm/make_heap.h:33: void std::__1::__make_heap<std::__1::__less<DB::SortCursor, DB::SortCursor>&, std::__1::__wrap_iter<DB::SortCursor*> >(std::__1::__wrap_iter<DB::SortCursor*>, std::__1::__wrap_iter<DB::SortCursor*>, std::__1::__less<DB::SortCursor, DB::SortCursor>&)
2022.08.08 16:32:04.860365 [ 456 ] {} <Fatal> BaseDaemon: 11.2. inlined from ../contrib/libcxx/include/__algorithm/make_heap.h:46: void std::__1::make_heap<std::__1::__wrap_iter<DB::SortCursor*>, std::__1::__less<DB::SortCursor, DB::SortCursor> >(std::__1::__wrap_iter<DB::SortCursor*>, std::__1::__wrap_iter<DB::SortCursor*>, std::__1::__less<DB::SortCursor, DB::SortCursor>)
2022.08.08 16:32:04.860413 [ 456 ] {} <Fatal> BaseDaemon: 11.3. inlined from ../contrib/libcxx/include/__algorithm/make_heap.h:54: void std::__1::make_heap<std::__1::__wrap_iter<DB::SortCursor*> >(std::__1::__wrap_iter<DB::SortCursor*>, std::__1::__wrap_iter<DB::SortCursor*>)
2022.08.08 16:32:04.860459 [ 456 ] {} <Fatal> BaseDaemon: 11. ../src/Core/SortCursor.h:363: DB::SortingQueueImpl<DB::SortCursor, (DB::SortingQueueStrategy)1>::SortingQueueImpl<std::__1::vector<DB::SortCursorImpl, std::__1::allocator<DB::SortCursorImpl> > >(std::__1::vector<DB::SortCursorImpl, std::__1::allocator<DB::SortCursorImpl> >&) in /workspace/clickhouse
2022.08.08 16:32:04.942624 [ 456 ] {} <Fatal> BaseDaemon: 12.1. inlined from ./build_docker/../contrib/libcxx/include/vector:1251: std::__1::vector<DB::SortCursor, std::__1::allocator<DB::SortCursor> >::operator=(std::__1::vector<DB::SortCursor, std::__1::allocator<DB::SortCursor> >&&)
2022.08.08 16:32:04.942659 [ 456 ] {} <Fatal> BaseDaemon: 12.2. inlined from ../src/Core/SortCursor.h:344: DB::SortingQueueImpl<DB::SortCursor, (DB::SortingQueueStrategy)1>::operator=(DB::SortingQueueImpl<DB::SortCursor, (DB::SortingQueueStrategy)1>&&)
2022.08.08 16:32:04.942706 [ 456 ] {} <Fatal> BaseDaemon: 12.3. inlined from ../src/Processors/Merges/Algorithms/MergingSortedAlgorithm.cpp:87: operator()<DB::SortingQueueImpl<DB::SortCursor, DB::SortingQueueStrategy::Batch> >
2022.08.08 16:32:04.942759 [ 456 ] {} <Fatal> BaseDaemon: 12. ../contrib/libcxx/include/type_traits:3648: decltype(static_cast<DB::MergingSortedAlgorithm::initialize(std::__1::vector<DB::IMergingAlgorithm::Input, std::__1::allocator<DB::IMergingAlgorithm::Input> >)::$_1&>(fp)(static_cast<DB::SortingQueueImpl<DB::SortCursor, (DB::SortingQueueStrategy)1>&>(fp0))) std::__1::__invoke_constexpr<DB::MergingSortedAlgorithm::initialize(std::__1::vector<DB::IMergingAlgorithm::Input, std::__1::allocator<DB::IMergingAlgorithm::Input> >)::$_1&, DB::SortingQueueImpl<DB::SortCursor, (DB::SortingQueueStrategy)1>&>(DB::MergingSortedAlgorithm::initialize(std::__1::vector<DB::IMergingAlgorithm::Input, std::__1::allocator<DB::IMergingAlgorithm::Input> >)::$_1&, DB::SortingQueueImpl<DB::SortCursor, (DB::SortingQueueStrategy)1>&) in /workspace/clickhouse
```
cc @CurtizJ
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
