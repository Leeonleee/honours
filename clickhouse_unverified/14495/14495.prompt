You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Incorrect order of result rows for "nulls first" condition and "limit[offset]"

**Describe the bug**
When I migrated from 20.4.9.110 to 20.5.5.74 I got some unpredictable behavior of my code. When I try to execute select query with `order by` expression by multiple fields and use for one of this filed 'NULLS FIRST' with `limit` and `offset` I get incorrect order for some offsets.

For example:

I have 830 records in my table and ~300 of them with diff==null.
I execute query:

```
SELECT id,
       country,
       pos,
       diff,
       traf
FROM test_table
WHERE id =  'B07DJRFSDF'
    AND mon=202007
    AND country IN ('us')
order by diff desc NULLS FIRST, traf
limit 10, 10 


```
I get something like that:

```
id: B07DJRFSDF; country: us; pos: 55; diff: null; traf: 0

id: B07DJRFSDF; country: us; pos: 53; diff: null; traf: 0

id: B07DJRFSDF; country: us; pos: 10; diff: null; traf: 0

id: B07DJRFSDF; country: us; pos: 16; diff: null; traf: 0

id: B07DJRFSDF; country: us; pos: 14; diff: null; traf: 0

id: B07DJRFSDF; country: us; pos: 12; diff: 0; traf: 0

id: B07DJRFSDF; country: us; pos: 46; diff: null; traf: 0

id: B07DJRFSDF; country: us; pos: 26; diff: null; traf: 0

id: B07DJRFSDF; country: us; pos: 53; diff: null; traf: 0

id: B07DJRFSDF; country: us; pos: 30; diff: null; traf: 0
```
You can see in result a row with `diff == 0`

And for example if I will use limit==11 everything will be ok.

**How to reproduce**
I attached script to import test data
[test_data.txt](https://github.com/ClickHouse/ClickHouse/files/5157030/test_data.txt)
**Expected behavior**
Result with a correct order
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
