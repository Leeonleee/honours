diff --git a/tests/integration/test_replicated_database/test.py b/tests/integration/test_replicated_database/test.py
index 02301236389e..92c109974e14 100644
--- a/tests/integration/test_replicated_database/test.py
+++ b/tests/integration/test_replicated_database/test.py
@@ -825,6 +825,9 @@ def test_sync_replica(started_cluster):
                 settings=settings,
             )
 
+    # wait for host to reconnect
+    dummy_node.query_with_retry("SELECT * FROM system.zookeeper WHERE path='/'")
+
     dummy_node.query("SYSTEM SYNC DATABASE REPLICA test_sync_database")
 
     assert dummy_node.query(
@@ -834,3 +837,30 @@ def test_sync_replica(started_cluster):
     assert main_node.query(
         "SELECT count() FROM system.tables where database='test_sync_database'"
     ).strip() == str(number_of_tables)
+
+    engine_settings = {"default_table_engine": "ReplicatedMergeTree"}
+    dummy_node.query(
+        "CREATE TABLE test_sync_database.table (n int, primary key n) partition by n",
+        settings=engine_settings,
+    )
+    main_node.query("INSERT INTO test_sync_database.table SELECT * FROM numbers(10)")
+    dummy_node.query("TRUNCATE TABLE test_sync_database.table", settings=settings)
+    dummy_node.query(
+        "ALTER TABLE test_sync_database.table ADD COLUMN m int", settings=settings
+    )
+
+    main_node.query(
+        "SYSTEM SYNC DATABASE REPLICA ON CLUSTER test_sync_database test_sync_database"
+    )
+
+    lp1 = main_node.query(
+        "select value from system.zookeeper where path='/clickhouse/databases/test1/replicas/shard1|replica1' and name='log_ptr'"
+    )
+    lp2 = main_node.query(
+        "select value from system.zookeeper where path='/clickhouse/databases/test1/replicas/shard1|replica2' and name='log_ptr'"
+    )
+    max_lp = main_node.query(
+        "select value from system.zookeeper where path='/clickhouse/databases/test1/' and name='max_log_ptr'"
+    )
+    assert lp1 == max_lp
+    assert lp2 == max_lp
diff --git a/tests/queries/0_stateless/01166_truncate_multiple_partitions.reference b/tests/queries/0_stateless/01166_truncate_multiple_partitions.reference
new file mode 100644
index 000000000000..27f26b32e1e3
--- /dev/null
+++ b/tests/queries/0_stateless/01166_truncate_multiple_partitions.reference
@@ -0,0 +1,8 @@
+20	190
+0	0
+8	52
+0	0
+20	190
+0	0
+8	52
+0	0
diff --git a/tests/queries/0_stateless/01166_truncate_multiple_partitions.sql b/tests/queries/0_stateless/01166_truncate_multiple_partitions.sql
new file mode 100644
index 000000000000..1a7e3ed3bc46
--- /dev/null
+++ b/tests/queries/0_stateless/01166_truncate_multiple_partitions.sql
@@ -0,0 +1,31 @@
+drop table if exists trunc;
+
+set default_table_engine='ReplicatedMergeTree';
+create table trunc (n int, primary key n) engine=ReplicatedMergeTree('/test/1166/{database}', '1') partition by n % 10;
+insert into trunc select * from numbers(20);
+select count(), sum(n) from trunc;
+alter table trunc detach partition all;
+select count(), sum(n) from trunc;
+alter table trunc attach partition id '0';
+alter table trunc attach partition id '1';
+alter table trunc attach partition id '2';
+alter table trunc attach partition id '3';
+select count(), sum(n) from trunc;
+truncate trunc;
+select count(), sum(n) from trunc;
+drop table trunc;
+
+set default_table_engine='MergeTree';
+create table trunc (n int, primary key n) partition by n % 10;
+insert into trunc select * from numbers(20);
+select count(), sum(n) from trunc;
+alter table trunc detach partition all;
+select count(), sum(n) from trunc;
+alter table trunc attach partition id '0';
+alter table trunc attach partition id '1';
+alter table trunc attach partition id '2';
+alter table trunc attach partition id '3';
+select count(), sum(n) from trunc;
+truncate trunc;
+select count(), sum(n) from trunc;
+drop table trunc;
\ No newline at end of file
diff --git a/tests/queries/0_stateless/01293_show_clusters.sql b/tests/queries/0_stateless/01293_show_clusters.sql
index ad5e51531e3e..e1ef8621a164 100644
--- a/tests/queries/0_stateless/01293_show_clusters.sql
+++ b/tests/queries/0_stateless/01293_show_clusters.sql
@@ -1,3 +1,4 @@
 -- don't show all clusters to reduce dependency on the configuration of server
+set send_logs_level = 'fatal';
 show clusters like 'test_shard%' limit 1;
 show cluster 'test_shard_localhost';
