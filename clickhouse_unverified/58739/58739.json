{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 58739,
  "instance_id": "ClickHouse__ClickHouse-58739",
  "issue_numbers": [
    "58714"
  ],
  "base_commit": "a3dcd350dd25a1291016c45c7daa4546ebe36e00",
  "patch": "diff --git a/src/Interpreters/InterpreterSelectQuery.cpp b/src/Interpreters/InterpreterSelectQuery.cpp\nindex 8e8482ccbd74..24beac817529 100644\n--- a/src/Interpreters/InterpreterSelectQuery.cpp\n+++ b/src/Interpreters/InterpreterSelectQuery.cpp\n@@ -2985,7 +2985,15 @@ void InterpreterSelectQuery::executeWindow(QueryPlan & query_plan)\n         // has suitable sorting. Also don't create sort steps when there are no\n         // columns to sort by, because the sort nodes are confused by this. It\n         // happens in case of `over ()`.\n-        if (!window.full_sort_description.empty() && (i == 0 || !sortIsPrefix(window, *windows_sorted[i - 1])))\n+        // Even if full_sort_description of both windows match, in case of different\n+        // partitioning we need to add a SortingStep to reshuffle data in the streams.\n+        bool need_sort = !window.full_sort_description.empty();\n+        if (need_sort && i != 0)\n+        {\n+            need_sort = !sortIsPrefix(window, *windows_sorted[i - 1])\n+                        || (settings.max_threads != 1 && window.partition_by.size() != windows_sorted[i - 1]->partition_by.size());\n+        }\n+        if (need_sort)\n         {\n             SortingStep::Settings sort_settings(*context);\n \ndiff --git a/src/Planner/Planner.cpp b/src/Planner/Planner.cpp\nindex a0c0fce4934a..bbe138705f7c 100644\n--- a/src/Planner/Planner.cpp\n+++ b/src/Planner/Planner.cpp\n@@ -908,9 +908,17 @@ void addWindowSteps(QueryPlan & query_plan,\n           * has suitable sorting. Also don't create sort steps when there are no\n           * columns to sort by, because the sort nodes are confused by this. It\n           * happens in case of `over ()`.\n+          * Even if full_sort_description of both windows match, in case of different\n+          * partitioning we need to add a SortingStep to reshuffle data in the streams.\n           */\n-        if (!window_description.full_sort_description.empty() &&\n-            (i == 0 || !sortDescriptionIsPrefix(window_description.full_sort_description, window_descriptions[i - 1].full_sort_description)))\n+\n+        bool need_sort = !window_description.full_sort_description.empty();\n+        if (need_sort && i != 0)\n+        {\n+            need_sort = !sortDescriptionIsPrefix(window_description.full_sort_description, window_descriptions[i - 1].full_sort_description)\n+                        || (settings.max_threads != 1 && window_description.partition_by.size() != window_descriptions[i - 1].partition_by.size());\n+        }\n+        if (need_sort)\n         {\n             SortingStep::Settings sort_settings(*query_context);\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02962_parallel_window_functions_different_partitioning.reference b/tests/queries/0_stateless/02962_parallel_window_functions_different_partitioning.reference\nnew file mode 100644\nindex 000000000000..f18a39e191e7\n--- /dev/null\n+++ b/tests/queries/0_stateless/02962_parallel_window_functions_different_partitioning.reference\n@@ -0,0 +1,18 @@\n+sales\t15000\n+sales\t15000\n+sales\t15000\n+sales\t29400\n+sales\t29400\n+sales\t29400\n+sales\t43800\n+sales\t43800\n+sales\t43800\n+sales\t15000\t5000\n+sales\t15000\t5000\n+sales\t15000\t5000\n+sales\t29400\t4800\n+sales\t29400\t4800\n+sales\t29400\t4800\n+sales\t43800\t4800\n+sales\t43800\t4800\n+sales\t43800\t4800\ndiff --git a/tests/queries/0_stateless/02962_parallel_window_functions_different_partitioning.sql b/tests/queries/0_stateless/02962_parallel_window_functions_different_partitioning.sql\nnew file mode 100644\nindex 000000000000..90af415c5ea0\n--- /dev/null\n+++ b/tests/queries/0_stateless/02962_parallel_window_functions_different_partitioning.sql\n@@ -0,0 +1,32 @@\n+CREATE TABLE empsalary \n+(\n+    `depname` LowCardinality(String),\n+    `empno` UInt64,\n+    `salary` Int32,\n+    `enroll_date` Date\n+)\n+ENGINE = Memory;\n+\n+insert into empsalary values ('sales',3,4800,'2007-08-01'), ('sales',1,5000,'2006-10-01'), ('sales',4,4800,'2007-08-08');\n+\n+\n+insert into empsalary values ('sales',3,4800,'2007-08-01'), ('sales',1,5000,'2006-10-01'), ('sales',4,4800,'2007-08-08');\n+\n+insert into empsalary values ('sales',3,4800,'2007-08-01'), ('sales',1,5000,'2006-10-01'), ('sales',4,4800,'2007-08-08');\n+\n+-- 1 window function\n+\n+SELECT depname,\n+   sum(salary) OVER (PARTITION BY depname order by empno) AS depsalary\n+FROM  empsalary\n+order by depsalary;\n+\n+\n+-- 2 window functions with different window,\n+-- but result should be the same for depsalary\n+\n+SELECT depname,\n+   sum(salary) OVER (PARTITION BY depname order by empno) AS depsalary,\n+   min(salary) OVER (PARTITION BY depname, empno order by enroll_date) AS depminsalary\n+FROM  empsalary\n+order by depsalary;\n",
  "problem_statement": "Wrong result in window function starting from 23.11\n**Describe what's wrong**\r\n\r\nI have following table:\r\n```sql\r\nCREATE TABLE empsalary \r\n(\r\n    `depname` LowCardinality(String),\r\n    `empno` UInt64,\r\n    `salary` Int32,\r\n    `enroll_date` Date\r\n)\r\nENGINE = MergeTree\r\nORDER BY enroll_date;\r\n\r\n\r\ninsert into empsalary values ('develop',11,5200,2007-08-15), ('sales',3,4800,2007-08-01), ('sales',1,5000,2006-10-01), ('sales',4,4800,2007-08-08), ('personnel',2,3900,2006-12-23), ('develop',10,5200,2007-08-01), ('personnel',5,3500,2007-12-10), ('develop',7,4200,2008-01-01), ('develop',8,6000,2006-10-01), ('develop',9,4500,2008-01-01);\r\n```\r\nAnd I perform following query:\r\n```sql\r\nSELECT * FROM\r\n          (SELECT depname,\r\n                  sum(salary) OVER (PARTITION BY depname order by empno) AS depsalary,\r\n                  min(salary) OVER (PARTITION BY depname, empno order by enroll_date) AS depminsalary\r\n           FROM empsalary)\r\n        WHERE depname = 'sales'\r\n        ORDER BY depname, depsalary\r\n```\r\n\r\nI get following expected result:\r\n```\r\nsales\t5000\t5000\r\nsales\t9800\t4800\r\nsales\t14600\t4800\r\n```\r\n\r\nIf I execute the same query on a distributed table I get wrong result:\r\n```\r\n\u2502 sales   \u2502      4800 \u2502         4800 \u2502\r\n\u2502 sales   \u2502      5000 \u2502         5000 \u2502\r\n\u2502 sales   \u2502      9800 \u2502         4800 \u2502\r\n```\r\n\r\nhttps://github.com/alsugiliazova/clickhouse-setup - **configuration file**\r\n\r\nHow to reproduce:\r\n```sql\r\nCREATE TABLE empsalary_source ON CLUSTER sharded_cluster\r\n(\r\n    `depname` LowCardinality(String),\r\n    `empno` UInt64,\r\n    `salary` Int32,\r\n    `enroll_date` Date\r\n)\r\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{shard}/empsalary_source', '{replica}')\r\nORDER BY enroll_date;\r\n\r\n\r\nCREATE TABLE empsalary AS empsalary_source\r\nENGINE = Distributed(sharded_cluster, default, empsalary_source, empno % toUInt8(getMacro('shard')));\r\n\r\n\r\ninsert into empsalary values ('develop',11,5200,2007-08-15), ('sales',3,4800,2007-08-01), ('sales',1,5000,2006-10-01), ('sales',4,4800,2007-08-08), ('personnel',2,3900,2006-12-23), ('develop',10,5200,2007-08-01), ('personnel',5,3500,2007-12-10), ('develop',7,4200,2008-01-01), ('develop',8,6000,2006-10-01), ('develop',9,4500,2008-01-01);\r\n\r\n\r\nSELECT *\r\nFROM\r\n(\r\n    SELECT\r\n        depname,\r\n        sum(salary) OVER (PARTITION BY depname ORDER BY empno ASC) AS depsalary,\r\n        min(salary) OVER (PARTITION BY depname, empno ORDER BY enroll_date ASC) AS depminsalary\r\n    FROM empsalary\r\n)\r\nWHERE depname = 'sales'\r\nORDER BY\r\n    depname ASC,\r\n    depsalary ASC\r\n``` \r\n\r\n\r\n\n",
  "hints_text": "repro without distributed query\r\n\r\n23.10.6.60 https://fiddle.clickhouse.com/901a1a08-4e89-427c-b4ad-235f4b450757\r\n\r\n```\r\n+-depname-+-depsalary-+-depminsalary-+\r\n| sales   |     15000 |         5000 |\r\n| sales   |     15000 |         5000 |\r\n| sales   |     15000 |         5000 |\r\n| sales   |     29400 |         4800 |\r\n| sales   |     29400 |         4800 |\r\n| sales   |     29400 |         4800 |\r\n| sales   |     43800 |         4800 |\r\n| sales   |     43800 |         4800 |\r\n| sales   |     43800 |         4800 |\r\n+---------+-----------+--------------+\r\n```\r\n\r\n\r\n23.11.4 https://fiddle.clickhouse.com/ba403877-7f61-4f37-a78d-bb60a280e1b8\r\n```\r\n+-depname-+-depsalary-+-depminsalary-+\r\n| sales   |     14400 |         4800 |\r\n| sales   |     14400 |         4800 |\r\n| sales   |     14400 |         4800 |\r\n| sales   |     15000 |         5000 |\r\n| sales   |     15000 |         5000 |\r\n| sales   |     15000 |         5000 |\r\n| sales   |     29400 |         4800 |\r\n| sales   |     29400 |         4800 |\r\n| sales   |     29400 |         4800 |\r\n+---------+-----------+--------------+\r\n```\r\n\r\n\none more smaller repro https://fiddle.clickhouse.com/a6b3dc1e-b01c-484b-8dac-6790efdf3721\n@den-crane  Thank you for creating a small repro!\r\n\r\nIndeed there is a bug because data is shuffled between streams for window function execution in SortingStep, but we didn't add it between WindowSteps.\r\n```\r\n+-explain----------------------------------------------------------------------------------------+\r\n| Expression (Projection)                                                                        |\r\n|   Sorting (Sorting for ORDER BY)                                                               |\r\n|     Expression (Before ORDER BY)                                                               |\r\n|       Window (Window step for window 'PARTITION BY depname ORDER BY empno ASC')                |\r\n|         Window (Window step for window 'PARTITION BY depname, empno ORDER BY enroll_date ASC') |\r\n|           Sorting (Sorting for window 'PARTITION BY depname, empno ORDER BY enroll_date ASC')  |\r\n|             Expression (Before window functions)                                               |\r\n|               ReadFromMemoryStorage                                                            |\r\n+------------------------------------------------------------------------------------------------+\r\n```\r\n\r\nI'll work on the fix, but as a workaround right now I can offer only setting `max_threads = 1`.",
  "created_at": "2024-01-12T08:36:00Z"
}