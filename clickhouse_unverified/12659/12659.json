{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12659,
  "instance_id": "ClickHouse__ClickHouse-12659",
  "issue_numbers": [
    "10572"
  ],
  "base_commit": "b86248a57a56247d091871061ba9139cd8c08647",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeIndexConditionBloomFilter.cpp b/src/Storages/MergeTree/MergeTreeIndexConditionBloomFilter.cpp\nindex e823a1904708..d47364442425 100644\n--- a/src/Storages/MergeTree/MergeTreeIndexConditionBloomFilter.cpp\n+++ b/src/Storages/MergeTree/MergeTreeIndexConditionBloomFilter.cpp\n@@ -43,7 +43,11 @@ ColumnWithTypeAndName getPreparedSetInfo(const SetPtr & prepared_set)\n     if (prepared_set->getDataTypes().size() == 1)\n         return {prepared_set->getSetElements()[0], prepared_set->getElementsTypes()[0], \"dummy\"};\n \n-    return {ColumnTuple::create(prepared_set->getSetElements()), std::make_shared<DataTypeTuple>(prepared_set->getElementsTypes()), \"dummy\"};\n+    Columns set_elements;\n+    for (auto & set_element : prepared_set->getSetElements())\n+        set_elements.emplace_back(set_element->convertToFullColumnIfConst());\n+\n+    return {ColumnTuple::create(set_elements), std::make_shared<DataTypeTuple>(prepared_set->getElementsTypes()), \"dummy\"};\n }\n \n bool maybeTrueOnBloomFilter(const IColumn * hash_column, const BloomFilterPtr & bloom_filter, size_t hash_functions)\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01414_bloom_filter_index_with_const_column.reference b/tests/queries/0_stateless/01414_bloom_filter_index_with_const_column.reference\nnew file mode 100644\nindex 000000000000..5782593a4550\n--- /dev/null\n+++ b/tests/queries/0_stateless/01414_bloom_filter_index_with_const_column.reference\n@@ -0,0 +1,1 @@\n+2\t2\t2\ndiff --git a/tests/queries/0_stateless/01414_bloom_filter_index_with_const_column.sql b/tests/queries/0_stateless/01414_bloom_filter_index_with_const_column.sql\nnew file mode 100644\nindex 000000000000..388398a8fc70\n--- /dev/null\n+++ b/tests/queries/0_stateless/01414_bloom_filter_index_with_const_column.sql\n@@ -0,0 +1,15 @@\n+DROP TABLE IF EXISTS test_bloom_filter_index;\n+\n+CREATE TABLE test_bloom_filter_index(`WatchID` UInt64, `JavaEnable` UInt8, `Title` String, `GoodEvent` Int16, `EventTime` DateTime, `EventDate` Date, `CounterID` UInt32, `ClientIP` UInt32, `ClientIP6` FixedString(16), `RegionID` UInt32, `UserID` UInt64, `CounterClass` Int8, `OS` UInt8, `UserAgent` UInt8, `URL` String, `Referer` String, `URLDomain` String, `RefererDomain` String, `Refresh` UInt8, `IsRobot` UInt8, `RefererCategories` Array(UInt16), `URLCategories` Array(UInt16), `URLRegions` Array(UInt32), `RefererRegions` Array(UInt32), `ResolutionWidth` UInt16, `ResolutionHeight` UInt16, `ResolutionDepth` UInt8, `FlashMajor` UInt8, `FlashMinor` UInt8, `FlashMinor2` String, `NetMajor` UInt8, `NetMinor` UInt8, `UserAgentMajor` UInt16, `UserAgentMinor` FixedString(2), `CookieEnable` UInt8, `JavascriptEnable` UInt8, `IsMobile` UInt8, `MobilePhone` UInt8, `MobilePhoneModel` String, `Params` String, `IPNetworkID` UInt32, `TraficSourceID` Int8, `SearchEngineID` UInt16, `SearchPhrase` String, `AdvEngineID` UInt8, `IsArtifical` UInt8, `WindowClientWidth` UInt16, `WindowClientHeight` UInt16, `ClientTimeZone` Int16, `ClientEventTime` DateTime, `SilverlightVersion1` UInt8, `SilverlightVersion2` UInt8, `SilverlightVersion3` UInt32, `SilverlightVersion4` UInt16, `PageCharset` String, `CodeVersion` UInt32, `IsLink` UInt8, `IsDownload` UInt8, `IsNotBounce` UInt8, `FUniqID` UInt64, `HID` UInt32, `IsOldCounter` UInt8, `IsEvent` UInt8, `IsParameter` UInt8, `DontCountHits` UInt8, `WithHash` UInt8, `HitColor` FixedString(1), `UTCEventTime` DateTime, `Age` UInt8, `Sex` UInt8, `Income` UInt8, `Interests` UInt16, `Robotness` UInt8, `GeneralInterests` Array(UInt16), `RemoteIP` UInt32, `RemoteIP6` FixedString(16), `WindowName` Int32, `OpenerName` Int32, `HistoryLength` Int16, `BrowserLanguage` FixedString(2), `BrowserCountry` FixedString(2), `SocialNetwork` String, `SocialAction` String, `HTTPError` UInt16, `SendTiming` Int32, `DNSTiming` Int32, `ConnectTiming` Int32, `ResponseStartTiming` Int32, `ResponseEndTiming` Int32, `FetchTiming` Int32, `RedirectTiming` Int32, `DOMInteractiveTiming` Int32, `DOMContentLoadedTiming` Int32, `DOMCompleteTiming` Int32, `LoadEventStartTiming` Int32, `LoadEventEndTiming` Int32, `NSToDOMContentLoadedTiming` Int32, `FirstPaintTiming` Int32, `RedirectCount` Int8, `SocialSourceNetworkID` UInt8, `SocialSourcePage` String, `ParamPrice` Int64, `ParamOrderID` String, `ParamCurrency` FixedString(3), `ParamCurrencyID` UInt16, `GoalsReached` Array(UInt32), `OpenstatServiceName` String, `OpenstatCampaignID` String, `OpenstatAdID` String, `OpenstatSourceID` String, `UTMSource` String, `UTMMedium` String, `UTMCampaign` String, `UTMContent` String, `UTMTerm` String, `FromTag` String, `HasGCLID` UInt8, `RefererHash` UInt64, `URLHash` UInt64, `CLID` UInt32, `YCLID` UInt64, `ShareService` String, `ShareURL` String, `ShareTitle` String, `ParsedParams.Key1` Array(String), `ParsedParams.Key2` Array(String), `ParsedParams.Key3` Array(String), `ParsedParams.Key4` Array(String), `ParsedParams.Key5` Array(String), `ParsedParams.ValueDouble` Array(Float64), `IslandID` FixedString(16), `RequestNum` UInt32, `RequestTry` UInt8, INDEX test1 RegionID TYPE bloom_filter GRANULARITY 8129) ENGINE = MergeTree() PARTITION BY toYYYYMM(EventDate) ORDER BY (CounterID, EventDate, intHash32(UserID)) SAMPLE BY intHash32(UserID) SETTINGS index_granularity = 8192;\n+\n+SELECT UserID FROM test_bloom_filter_index WHERE (CounterID, EventTime) IN (SELECT toUInt32(25703952), toDateTime('2014-03-19 23:59:58'));\n+\n+DROP TABLE IF EXISTS test_bloom_filter_index;\n+\n+CREATE TABLE test_bloom_filter_index(`uint8` UInt8, `uint16` UInt16, `index_column` UInt64,  INDEX test1 `index_column` TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree() PARTITION BY tuple() ORDER BY tuple();\n+\n+INSERT INTO test_bloom_filter_index SELECT number, number, number FROM numbers(10000);\n+\n+SELECT * FROM test_bloom_filter_index WHERE (`uint16`, `index_column`) IN (SELECT toUInt16(2), toUInt64(2));\n+\n+DROP TABLE IF EXISTS test_bloom_filter_index;\n",
  "problem_statement": "IN operator: ColumnTuple cannot have ColumnConst as its element\nWith hits from Metrica dataset:\r\n\r\n```\r\n/4/ :) select UserID from hits where (CounterID, EventTime) in (select toUInt32(25703952), toDateTime('2014-03-19 23:59:58'))\r\n\r\nReceived exception from server (version 20.4.1):\r\nCode: 44. DB::Exception: Received from localhost:9000. DB::Exception: ColumnTuple cannot have ColumnConst as its element. Stack trace:\r\n```\n",
  "hints_text": "On a side note, if an exception has a cryptic text that mentions code artifacts (ColumnTuple etc.), its code must be `LOGICAL_ERROR`.\nStack trace:\r\nhttps://pastebin.com/raw/2kv0AhiE\r\n\r\nTable definition (can be reproduced w/o data):\r\n```\r\nCREATE TABLE default.hits1 (     `WatchID` UInt64,     `JavaEnable` UInt8,     `Title` String,     `GoodEvent` Int16,     `EventTime` DateTime,     `EventDate` Date,     `CounterID` UInt32,     `ClientIP` UInt32,     `ClientIP6` FixedString(16),     `RegionID` UInt32,     `UserID` UInt64,     `CounterClass` Int8,     `OS` UInt8,     `UserAgent` UInt8,     `URL` String,     `Referer` String,     `URLDomain` String,     `RefererDomain` String,     `Refresh` UInt8,     `IsRobot` UInt8,     `RefererCategories` Array(UInt16),     `URLCategories` Array(UInt16),     `URLRegions` Array(UInt32),     `RefererRegions` Array(UInt32),     `ResolutionWidth` UInt16,     `ResolutionHeight` UInt16,     `ResolutionDepth` UInt8,     `FlashMajor` UInt8,     `FlashMinor` UInt8,     `FlashMinor2` String,     `NetMajor` UInt8,     `NetMinor` UInt8,     `UserAgentMajor` UInt16,     `UserAgentMinor` FixedString(2),     `CookieEnable` UInt8,     `JavascriptEnable` UInt8,     `IsMobile` UInt8,     `MobilePhone` UInt8,     `MobilePhoneModel` String,     `Params` String,     `IPNetworkID` UInt32,     `TraficSourceID` Int8,     `SearchEngineID` UInt16,     `SearchPhrase` String,     `AdvEngineID` UInt8,     `IsArtifical` UInt8,     `WindowClientWidth` UInt16,     `WindowClientHeight` UInt16,     `ClientTimeZone` Int16,     `ClientEventTime` DateTime,     `SilverlightVersion1` UInt8,     `SilverlightVersion2` UInt8,     `SilverlightVersion3` UInt32,     `SilverlightVersion4` UInt16,     `PageCharset` String,     `CodeVersion` UInt32,     `IsLink` UInt8,     `IsDownload` UInt8,     `IsNotBounce` UInt8,     `FUniqID` UInt64,     `HID` UInt32,     `IsOldCounter` UInt8,     `IsEvent` UInt8,     `IsParameter` UInt8,     `DontCountHits` UInt8,     `WithHash` UInt8,     `HitColor` FixedString(1),     `UTCEventTime` DateTime,     `Age` UInt8,     `Sex` UInt8,     `Income` UInt8,     `Interests` UInt16,     `Robotness` UInt8,     `GeneralInterests` Array(UInt16),     `RemoteIP` UInt32,     `RemoteIP6` FixedString(16),     `WindowName` Int32,     `OpenerName` Int32,     `HistoryLength` Int16,     `BrowserLanguage` FixedString(2),     `BrowserCountry` FixedString(2),     `SocialNetwork` String,     `SocialAction` String,     `HTTPError` UInt16,     `SendTiming` Int32,     `DNSTiming` Int32,     `ConnectTiming` Int32,     `ResponseStartTiming` Int32,     `ResponseEndTiming` Int32,     `FetchTiming` Int32,     `RedirectTiming` Int32,     `DOMInteractiveTiming` Int32,     `DOMContentLoadedTiming` Int32,     `DOMCompleteTiming` Int32,     `LoadEventStartTiming` Int32,     `LoadEventEndTiming` Int32,     `NSToDOMContentLoadedTiming` Int32,     `FirstPaintTiming` Int32,     `RedirectCount` Int8,     `SocialSourceNetworkID` UInt8,     `SocialSourcePage` String,     `ParamPrice` Int64,     `ParamOrderID` String,     `ParamCurrency` FixedString(3),     `ParamCurrencyID` UInt16,     `GoalsReached` Array(UInt32),     `OpenstatServiceName` String,     `OpenstatCampaignID` String,     `OpenstatAdID` String,     `OpenstatSourceID` String,     `UTMSource` String,     `UTMMedium` String,     `UTMCampaign` String,     `UTMContent` String,     `UTMTerm` String,     `FromTag` String,     `HasGCLID` UInt8,     `RefererHash` UInt64,     `URLHash` UInt64,     `CLID` UInt32,     `YCLID` UInt64,     `ShareService` String,     `ShareURL` String,     `ShareTitle` String,     `ParsedParams.Key1` Array(String),     `ParsedParams.Key2` Array(String),     `ParsedParams.Key3` Array(String),     `ParsedParams.Key4` Array(String),     `ParsedParams.Key5` Array(String),     `ParsedParams.ValueDouble` Array(Float64),     `IslandID` FixedString(16),     `RequestNum` UInt32,     `RequestTry` UInt8,     INDEX test1 RegionID TYPE bloom_filter GRANULARITY 8129 ) ENGINE = MergeTree() PARTITION BY toYYYYMM(EventDate) ORDER BY (CounterID, EventDate, intHash32(UserID)) SAMPLE BY intHash32(UserID) SETTINGS index_granularity = 8192\r\n```\nIt's related to `bloom_filter` index, CC @zhang2014.\nWhy ```select touint32 (25703952), todatetime ('2014-03-19 23:59:58 ')``` return const column, this is expected behavior?\r\n\r\ncc : @alexey-milovidov \n@zhang2014 \r\nYes, they are constant expressions.",
  "created_at": "2020-07-22T09:43:24Z"
}