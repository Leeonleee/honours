diff --git a/tests/queries/0_stateless/03299_map_named_tuple.reference b/tests/queries/0_stateless/03299_map_named_tuple.reference
new file mode 100644
index 000000000000..6162f782a650
--- /dev/null
+++ b/tests/queries/0_stateless/03299_map_named_tuple.reference
@@ -0,0 +1,1 @@
+{1:2}	{{1:2}:2}
diff --git a/tests/queries/0_stateless/03299_map_named_tuple.sql b/tests/queries/0_stateless/03299_map_named_tuple.sql
new file mode 100644
index 000000000000..3e8e597c66d8
--- /dev/null
+++ b/tests/queries/0_stateless/03299_map_named_tuple.sql
@@ -0,0 +1,8 @@
+
+-- This is a very subtle issue when map(1 ,2) data type (which is nested with Array(Tuple(key, value))) firstly created with
+-- explicitly named tuple ('keys' key, 'values' value) as an argument of `mapConcat`, and then as a constant is referenced by
+-- map constant in the lambda function of mapApply which creates its type without explicit naming and further these types
+-- are compared, and because tuple naming is participating in this comparison the result is negative - which leads to
+-- 'incompatible types' error showing exactly same Map types - issue https://github.com/ClickHouse/ClickHouse/issues/64805
+
+SELECT mapConcat(map(1, 2)), mapApply((x, y) -> (map(1, 2), x + 1), map(1, 0))
