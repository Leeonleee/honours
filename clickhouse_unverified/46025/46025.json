{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 46025,
  "instance_id": "ClickHouse__ClickHouse-46025",
  "issue_numbers": [
    "45830"
  ],
  "base_commit": "c1655052e2d4302d563560b9e52329b15e037c3d",
  "patch": "diff --git a/contrib/azure b/contrib/azure\nindex e4fcdfc81e33..096049bf24ff 160000\n--- a/contrib/azure\n+++ b/contrib/azure\n@@ -1,1 +1,1 @@\n-Subproject commit e4fcdfc81e337e589ce231a452dcc280fcbb3f99\n+Subproject commit 096049bf24fffafcaccc132b9367694532716731\n",
  "test_patch": "diff --git a/src/Disks/tests/gtest_azure_sdk.cpp b/src/Disks/tests/gtest_azure_sdk.cpp\nnew file mode 100644\nindex 000000000000..56b49ae05ae5\n--- /dev/null\n+++ b/src/Disks/tests/gtest_azure_sdk.cpp\n@@ -0,0 +1,41 @@\n+#include <string>\n+#include <vector>\n+#include <Common/logger_useful.h>\n+\n+#include \"config.h\"\n+\n+#if USE_AZURE_BLOB_STORAGE\n+\n+#include <azure/storage/blobs.hpp>\n+#include <azure/storage/common/internal/xml_wrapper.hpp>\n+#include <azure/storage/blobs/blob_container_client.hpp>\n+#include <azure/storage/blobs/blob_options.hpp>\n+\n+#include <gtest/gtest.h>\n+\n+TEST(AzureXMLWrapper, TestLeak)\n+{\n+    std::string str = \"<hello>world</hello>\";\n+\n+    Azure::Storage::_internal::XmlReader reader(str.c_str(), str.length());\n+    Azure::Storage::_internal::XmlReader reader2(std::move(reader));\n+    Azure::Storage::_internal::XmlReader reader3 = std::move(reader2);\n+    reader3.Read();\n+}\n+\n+TEST(AzureBlobContainerClient, CurlMemoryLeak)\n+{\n+    using Azure::Storage::Blobs::BlobContainerClient;\n+    using Azure::Storage::Blobs::BlobClientOptions;\n+\n+    static constexpr auto unavailable_url = \"http://unavailable:19999/bucket\";\n+    static constexpr auto container = \"container\";\n+\n+    BlobClientOptions options;\n+    options.Retry.MaxRetries = 0;\n+\n+    auto client = std::make_unique<BlobContainerClient>(BlobContainerClient::CreateFromConnectionString(unavailable_url, container, options));\n+    EXPECT_THROW({ client->ListBlobs(); }, Azure::Core::Http::TransportException);\n+}\n+\n+#endif\ndiff --git a/src/Disks/tests/gtest_azure_xml_reader.cpp b/src/Disks/tests/gtest_azure_xml_reader.cpp\ndeleted file mode 100644\nindex 8cb352ad2f72..000000000000\n--- a/src/Disks/tests/gtest_azure_xml_reader.cpp\n+++ /dev/null\n@@ -1,25 +0,0 @@\n-#include <string>\n-#include <vector>\n-#include <Common/logger_useful.h>\n-\n-#include \"config.h\"\n-\n-#if USE_AZURE_BLOB_STORAGE\n-\n-#include <azure/storage/blobs.hpp>\n-#include <azure/storage/common/internal/xml_wrapper.hpp>\n-\n-#include <gtest/gtest.h>\n-\n-\n-TEST(AzureXMLWrapper, TestLeak)\n-{\n-    std::string str = \"<hello>world</hello>\";\n-\n-    Azure::Storage::_internal::XmlReader reader(str.c_str(), str.length());\n-    Azure::Storage::_internal::XmlReader reader2(std::move(reader));\n-    Azure::Storage::_internal::XmlReader reader3 = std::move(reader2);\n-    reader3.Read();\n-}\n-\n-#endif\n",
  "problem_statement": "Memory leak in azure sdk when blob storage is not available\n**Describe the bug**\r\nReport from LSan:\r\n```\r\n=================================================================\r\n==2616282==ERROR: LeakSanitizer: detected memory leaks\r\n\r\nIndirect leak of 42560 byte(s) in 8 object(s) allocated from:\r\n    #0 0xe933918 in calloc (/usr/bin/clickhouse+0xe933918) (BuildId: 96c9fff1cd2835ef65d3c552ed40c6420e8978e2)\r\n    #1 0x3e263bb8 in Curl_open (/usr/bin/clickhouse+0x3e263bb8) (BuildId: 96c9fff1cd2835ef65d3c552ed40c6420e8978e2)\r\n    #2 0x3e25f5d6 in curl_easy_init (/usr/bin/clickhouse+0x3e25f5d6) (BuildId: 96c9fff1cd2835ef65d3c552ed40c6420e8978e2)\r\n    #3 0x3e2fc3f5 in Curl_conncache_init (/usr/bin/clickhouse+0x3e2fc3f5) (BuildId: 96c9fff1cd2835ef65d3c552ed40c6420e8978e2)\r\n    #4 0x3e2ba758 in Curl_multi_handle (/usr/bin/clickhouse+0x3e2ba758) (BuildId: 96c9fff1cd2835ef65d3c552ed40c6420e8978e2)\r\n    #5 0x3e25f866 in curl_easy_perform (/usr/bin/clickhouse+0x3e25f866) (BuildId: 96c9fff1cd2835ef65d3c552ed40c6420e8978e2)\r\n    #6 0x3dfbea50 in Azure::Core::Http::_detail::CurlConnectionPool::ExtractOrCreateCurlConnection(Azure::Core::Http::Request&, Azure::Core::Http::CurlTransportOptions const&, bool) build_docker/../contrib/azure/sdk/core/azure-core/src/http/curl/curl.cpp:1425:24\r\n    #7 0x3dfbb959 in Azure::Core::Http::CurlTransport::Send(Azure::Core::Http::Request&, Azure::Core::Context const&) build_docker/../contrib/azure/sdk/core/azure-core/src/http/curl/curl.cpp:289:48\r\n    #8 0x3dfa9da1 in Azure::Core::Http::Policies::_internal::TransportPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/core/azure-core/src/http/transport_policy.cpp:60:40\r\n    #9 0x3df9ea1e in Azure::Core::Http::Policies::_internal::LogPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/core/azure-core/src/http/log_policy.cpp:172:23\r\n    #10 0x3e0a2435 in Azure::Storage::_internal::SharedKeyPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/storage/azure-storage-common/inc/azure/storage/common/internal/shared_key_policy.hpp:36:25\r\n    #11 0x3e259fee in Azure::Storage::_internal::StoragePerRetryPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/storage/azure-storage-common/src/storage_per_retry_policy.cpp:48:23\r\n    #12 0x3e25b2cb in Azure::Storage::_internal::StorageSwitchToSecondaryPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/storage/azure-storage-common/src/storage_switch_to_secondary_policy.cpp:36:32\r\n    #13 0x3e011918 in Azure::Core::Http::Policies::_internal::RetryPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/core/azure-core/src/http/retry_policy.cpp:134:34\r\n    #14 0x3e017166 in Azure::Core::Http::Policies::_internal::TelemetryPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/core/azure-core/src/http/telemetry_policy.cpp:166:21\r\n    #15 0x3e00f2d1 in Azure::Core::Http::Policies::_internal::RequestIdPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/core/azure-core/inc/azure/core/http/policies/policy.hpp:373:27\r\n    #16 0x3e0a2c86 in Azure::Storage::_internal::StorageServiceVersionPolicy::Send(Azure::Core::Http::Request&, Azure::Core::Http::Policies::NextHttpPolicy, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/storage/azure-storage-common/inc/azure/storage/common/internal/storage_service_version_policy.hpp:31:25\r\n    #17 0x3e13ef86 in Azure::Core::Http::_internal::HttpPipeline::Send(Azure::Core::Http::Request&, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/core/azure-core/inc/azure/core/internal/http/pipeline.hpp:186:29\r\n    #18 0x3e13ef86 in Azure::Storage::Blobs::_detail::BlobRestClient::Service::ListBlobContainers(Azure::Core::Http::_internal::HttpPipeline&, Azure::Core::Url const&, Azure::Storage::Blobs::_detail::BlobRestClient::Service::ListBlobContainersOptions const&, Azure::Core::Context const&) build_docker/../contrib/azure/sdk/storage/azure-storage-blobs/inc/azure/storage/blobs/protocol/blob_rest_client.hpp:3003:41\r\n    #19 0x3e137d77 in Azure::Storage::Blobs::BlobServiceClient::ListBlobContainers(Azure::Storage::Blobs::ListBlobContainersOptions const&, Azure::Core::Context const&) const build_docker/../contrib/azure/sdk/storage/azure-storage-blobs/src/blob_service_client.cpp:131:21\r\n    #20 0x2f4fe89d in DB::getAzureBlobContainerClient(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) build_docker/../src/Disks/ObjectStorages/AzureBlobStorage/AzureBlobStorageAuth.cpp:133:53\r\n    #21 0x2f4f7986 in DB::registerDiskAzureBlobStorage(DB::DiskFactory&, bool)::$_0::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__\r\n1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::alloc\r\nator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const build_docker/../src/Disks/ObjectStorages/AzureBlobStorage/registerDiskAzureBlobStorage.cpp:31:13\r\n    #22 0x2f4f7986 in decltype(std::declval<DB::registerDiskAzureBlobStorage(DB::DiskFactory&, bool)::$_0&>()(std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(), std::declval<Poco\r\n::Util::AbstractConfiguration const&>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(), std::declval<std::__1::shared_ptr<DB::Context const>>(), std::declval<std::__1::map<st\r\nd::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocat\r\nor<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&>())) std::__1::__invoke[abi:v15000]<DB::registerDiskAzureBlobStorage(DB::DiskFactory\r\n&, bool)::$_0&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>\r\nconst&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::\r\nchar_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&>(DB::registerDiskAz\r\nureBlobStorage(DB::DiskFactory&, bool)::$_0&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char\r\n>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>&&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__\r\n1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDis\r\nk>>>> const&) build_docker/../contrib/llvm-project/libcxx/include/__functional/invoke.h:394:23\r\n    #23 0x2f4f7986 in std::__1::shared_ptr<DB::IDisk> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IDisk>, false>::__call<DB::registerDiskAzureBlobStorage(DB::DiskFactory&, bool)::$_0&, std::__1::basic_string<char, st\r\nd::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>\r\n, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>,\r\n std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&>(DB::registerDiskAzureBlobStorage(DB::DiskFactory&, bool)::$_0&, s\r\ntd::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1:\r\n:shared_ptr<DB::Context const>&&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<cha\r\nr>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) build_docker/../contrib/llvm-proj\r\nect/libcxx/include/__functional/invoke.h:470:16\r\n    #24 0x2f4f7986 in std::__1::__function::__default_alloc_func<DB::registerDiskAzureBlobStorage(DB::DiskFactory&, bool)::$_0, std::__1::shared_ptr<DB::IDisk> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocat\r\nor<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char,\r\n std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1\r\n::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&)>::operator()[abi:v15000](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>\r\n const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>&&, std::__1::map<std::__1::basic_string<char, std::_\r\n_1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic\r\n_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) build_docker/../contrib/llvm-project/libcxx/include/__functional/function.h:235:12\r\n    #25 0x2f4f7986 in std::__1::shared_ptr<DB::IDisk> std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IDisk> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::Abstr\r\nactConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::\r\n__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char\r\n_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&)>::__call_impl<std::__1::__function::__default_alloc_func<DB::registerDiskAzureBlobStorage(DB::DiskFactory&, bool)::$_0, std::__1::shared_ptr<DB:\r\n:IDisk> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&,\r\n std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_tr\r\naits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&)>>(std::__1::__function::_\r\n_policy_storage const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator\r\n<char>> const&, std::__1::shared_ptr<DB::Context const>&&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char,\r\nstd::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) build_do\r\ncker/../contrib/llvm-project/libcxx/include/__functional/function.h:716:16\r\n    #26 0x2f36dfc1 in std::__1::__function::__policy_func<std::__1::shared_ptr<DB::IDisk> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::\r\nbasic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::sh\r\nared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<\r\nchar>> const, std::__1::shared_ptr<DB::IDisk>>>> const&)>::operator()[abi:v15000](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_str\r\ning<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>&&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_pt\r\nr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>\r\nconst, std::__1::shared_ptr<DB::IDisk>>>> const&) const build_docker/../contrib/llvm-project/libcxx/include/__functional/function.h:848:16\r\n    #27 0x2f36dfc1 in std::__1::function<std::__1::shared_ptr<DB::IDisk> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char\r\n, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDis\r\nk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std\r\n::__1::shared_ptr<DB::IDisk>>>> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_trai\r\nts<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<st\r\nd::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB:\r\n:IDisk>>>> const&) const build_docker/../contrib/llvm-project/libcxx/include/__functional/function.h:1187:12\r\n    #28 0x2f36dfc1 in DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char\r\n>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1:\r\n:basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>\r\n>>> const&) const build_docker/../src/Disks/DiskFactory.cpp:37:12\r\n    #29 0x2f94fd16 in DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) build_doc\r\nker/../src/Disks/DiskSelector.cpp:49:42\r\n    #30 0x2f8a7781 in DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const build_docker/../src/Interpreters/Context.cpp:2997:24\r\n    #31 0x2f8659d0 in DB::Context::getStoragePolicySelector(std::__1::lock_guard<std::__1::mutex>&) const build_docker/../src/Interpreters/Context.cpp:3010:115\r\n    #32 0x2f8a7d1b in DB::Context::getStoragePolicy(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const build_docker/../src/Interpreters/Context.cpp:2971:28\r\n    #33 0x33c64775 in DB::MergeTreeData::getStoragePolicy() const build_docker/../src/Storages/MergeTree/MergeTreeData.cpp:378:26\r\n    #34 0x33c5825f in DB::MergeTreeData::getDisks() const build_docker/../src/Storages/MergeTree/MergeTreeData.h:901:37\r\n    #35 0x33c5825f in DB::MergeTreeData::initializeDirectoriesAndFormatVersion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>,\r\nstd::__1::allocator<char>> const&, bool) build_docker/../src/Storages/MergeTree/MergeTreeData.cpp:215:30\r\n    #36 0x3444e868 in DB::StorageMergeTree::StorageMergeTree(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, bool, std::__1::shared_p\r\ntr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSet\r\ntings>>, bool) build_docker/../src/Storages/StorageMergeTree.cpp:105:5\r\n    #37 0x3444d4dd in DB::StorageMergeTree* std::__1::construct_at[abi:v15000]<DB::StorageMergeTree, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryM\r\netadata&, bool const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::de\r\nfault_delete<DB::MergeTreeSettings>>, bool const&, DB::StorageMergeTree*>(DB::StorageMergeTree*, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetad\r\nata&, bool const&, std::__1::shared_ptr<DB::Context>&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::defa\r\nult_delete<DB::MergeTreeSettings>>&&, bool const&) build_docker/../contrib/llvm-project/libcxx/include/__memory/construct_at.h:35:48\r\n    #38 0x3444d4dd in void std::__1::allocator_traits<std::__1::allocator<DB::StorageMergeTree>>::construct[abi:v15000]<DB::StorageMergeTree, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allo\r\ncator<char>> const&, DB::StorageInMemoryMetadata&, bool const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, DB::MergeTreeData::MergingParams&, std::__1::uniqu\r\ne_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool const&, void, void>(std::__1::allocator<DB::StorageMergeTree>&, DB::StorageMergeTree*, DB::StorageID const&, std::__1::basic_string<char, std::__1::char\r\n_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata&, bool const&, std::__1::shared_ptr<DB::Context>&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, DB::MergeTreeData::\r\nMergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>&&, bool const&) build_docker/../contrib/llvm-project/libcxx/include/__memory/allocator_traits.h:298:9\r\n    #39 0x3444d4dd in std::__1::__shared_ptr_emplace<DB::StorageMergeTree, std::__1::allocator<DB::StorageMergeTree>>::__shared_ptr_emplace[abi:v15000]<DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std:\r\n:__1::allocator<char>> const&, DB::StorageInMemoryMetadata&, bool const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, DB::MergeTreeData::MergingParams&, std::\r\n__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool const&>(std::__1::allocator<DB::StorageMergeTree>, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::a\r\nllocator<char>> const&, DB::StorageInMemoryMetadata&, bool const&, std::__1::shared_ptr<DB::Context>&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, DB::MergeTreeData::MergingParams&, std::__1::\r\nunique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>&&, bool const&) build_docker/../contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:292:9\r\n    #40 0x3444d4dd in std::__1::shared_ptr<DB::StorageMergeTree> std::__1::allocate_shared[abi:v15000]<DB::StorageMergeTree, std::__1::allocator<DB::StorageMergeTree>, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_tr\r\naits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata&, bool const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, DB::MergeTreeData::Mergi\r\nngParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool const&, void>(std::__1::allocator<DB::StorageMergeTree> const&, DB::StorageID const&, std::__1::basic_string<char, std::__1::c\r\nhar_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata&, bool const&, std::__1::shared_ptr<DB::Context>&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, DB::MergeTreeDat\r\na::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>&&, bool const&) build_docker/../contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:953:55\r\n```\r\n\r\n**How to reproduce**\r\nCreate a configuration with disk with type `azure_blob_storage ` and unavailable blob storage and run clickhouse. Example of configuration:\r\n```\r\n<storage_configuration>\r\n    <disks>\r\n        <default>\r\n        </default>\r\n        <azure>\r\n            <type>azure_blob_storage</type>\r\n            <storage_account_url>http://localhost:10033/sample</storage_account_url>\r\n            <container_name>cont</container_name>\r\n            <skip_access_check>false</skip_access_check>\r\n            <account_name>sample</account_name>\r\n            <account_key>sdfsdfsdfsdf</account_key>\r\n            <max_single_part_upload_size>33554432</max_single_part_upload_size>\r\n        </azure>\r\n    </disks>\r\n    <policies>\r\n        <default>\r\n            <volumes>\r\n                <main>\r\n                    <disk>default</disk>\r\n                </main>\r\n            </volumes>\r\n        </default>\r\n        <azure>\r\n            <volumes>\r\n                <main>\r\n                    <disk>azure</disk>\r\n                </main>\r\n            </volumes>\r\n        </azure>\r\n    </policies>\r\n</storage_configuration>\r\n\r\n<merge_tree>\r\n    <storage_policy>default</storage_policy>\r\n</merge_tree>\r\n```\n",
  "hints_text": "",
  "created_at": "2023-02-03T20:07:08Z"
}