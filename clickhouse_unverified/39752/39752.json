{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 39752,
  "instance_id": "ClickHouse__ClickHouse-39752",
  "issue_numbers": [
    "39704"
  ],
  "base_commit": "c9e685030625f749c7564fc861d8aa1aab8f5e60",
  "patch": "diff --git a/src/Interpreters/Set.cpp b/src/Interpreters/Set.cpp\nindex ab443f58cf24..af05b33c1f66 100644\n--- a/src/Interpreters/Set.cpp\n+++ b/src/Interpreters/Set.cpp\n@@ -430,8 +430,9 @@ MergeTreeSetIndex::MergeTreeSetIndex(const Columns & set_elements, std::vector<K\n     SortDescription sort_description;\n     for (size_t i = 0; i < tuple_size; ++i)\n     {\n-        block_to_sort.insert({ordered_set[i], nullptr, ordered_set[i]->getName()});\n-        sort_description.emplace_back(ordered_set[i]->getName(), 1, 1);\n+        String column_name = \"_\" + toString(i);\n+        block_to_sort.insert({ordered_set[i], nullptr, column_name});\n+        sort_description.emplace_back(column_name, 1, 1);\n     }\n \n     sortBlock(block_to_sort, sort_description);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02374_in_tuple_index.reference b/tests/queries/0_stateless/02374_in_tuple_index.reference\nnew file mode 100644\nindex 000000000000..51993f072d58\n--- /dev/null\n+++ b/tests/queries/0_stateless/02374_in_tuple_index.reference\n@@ -0,0 +1,2 @@\n+2\n+2\ndiff --git a/tests/queries/0_stateless/02374_in_tuple_index.sql b/tests/queries/0_stateless/02374_in_tuple_index.sql\nnew file mode 100644\nindex 000000000000..7f9b7b5470ef\n--- /dev/null\n+++ b/tests/queries/0_stateless/02374_in_tuple_index.sql\n@@ -0,0 +1,23 @@\n+DROP TABLE IF EXISTS t_in_tuple_index;\n+\n+CREATE TABLE t_in_tuple_index\n+(\n+    `ID` String,\n+    `USER_ID` String,\n+    `PLATFORM` LowCardinality(String)\n+)\n+ENGINE = MergeTree()\n+ORDER BY (PLATFORM, USER_ID, ID)\n+SETTINGS index_granularity = 2048;\n+\n+INSERT INTO t_in_tuple_index VALUES ('1', 33, 'insta'), ('2', 33, 'insta');\n+\n+SELECT count()\n+FROM t_in_tuple_index\n+WHERE (PLATFORM, USER_ID) IN (('insta', '33'));\n+\n+SELECT count()\n+FROM t_in_tuple_index\n+WHERE (PLATFORM, USER_ID) IN (('insta', '33'), ('insta', '22'));\n+\n+DROP TABLE IF EXISTS t_in_tuple_index;\n",
  "problem_statement": "IN operator is not working with tuples\n**Describe what's wrong**\r\n\r\nWhen adding new values to IN operator with tuples, result set is reduced.\r\n\r\n<br class=\"Apple-interchange-newline\">\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nProbably not working since v22.4.2.1-stable\r\nStill not working on v22.7.1.2484-stable\r\n\r\n<br class=\"Apple-interchange-newline\">\r\n\r\n**How to reproduce**\r\n\r\n\r\n```\r\nCREATE TABLE ISSUE_EXAMPLE\r\n(\r\n    `THIRDPARTY_ID` String,\r\n    `THIRDPARTY_USER_ID` String,\r\n    `PLATFORM` LowCardinality(String),\r\n    `DATE` Date\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY toYYYYMM(DATE)\r\nORDER BY (PLATFORM, THIRDPARTY_USER_ID, THIRDPARTY_ID)\r\nSETTINGS storage_policy = 'nvme', index_granularity = 2048\r\n```\r\n\r\n```\r\nINSERT INTO ISSUE_EXAMPLE VALUES ('17843212264024828', 238040827, 'insta', '2014-07-30'), ('17862693304001575', 238040827, 'insta', '2016-07-09')\r\n```\r\n\r\n```\r\nSELECT *\r\nFROM ISSUE_EXAMPLE\r\nWHERE (PLATFORM, THIRDPARTY_USER_ID) IN (('insta', '238040827'))\r\n```\r\nThat query returns 2 rows\r\n\r\n```\r\nSELECT *\r\nFROM ISSUE_EXAMPLE\r\nWHERE (PLATFORM, THIRDPARTY_USER_ID) IN (('insta', '238040827'), ('insta', '22606518861'))\r\n```\r\nThat query returns 0 rows instead of 2. Adding new value to IN should not reduce result set. \n",
  "hints_text": "Looks like a major bug in index analysis.",
  "created_at": "2022-07-31T00:41:24Z"
}