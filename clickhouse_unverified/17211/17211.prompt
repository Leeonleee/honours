You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
system.user_directories Can not convert to std::string with ldap server.

**How to reproduce**
Clickhouse version 20.13.1.5509
config.xml:
```
    <!-- LDAP server definitions. -->
    <ldap_servers>
        <my_ldap_server>
           <host>192.168.1.44</host>
           <port>3890</port>
           <auth_dn_prefix>CN=</auth_dn_prefix>
           <auth_dn_suffix>,CN=admin_group,CN=clickhouse,DC=example,DC=com</auth_dn_suffix>
           <enable_tls>no</enable_tls>
        </my_ldap_server>
    </ldap_servers>

    <user_directories>
        <users_xml>
            <!-- Path to configuration file with predefined users. -->
            <path>users.xml</path>
        </users_xml>
        <local_directory>
            <!-- Path to folder where users created by SQL commands are stored. -->
            <path>/var/lib/clickhouse/access/</path>
        </local_directory>

        <ldap>
            <server>my_ldap_server</server>
            <roles>
                <admin/>
            </roles>
        </ldap>
    </user_directories>
  ```
```
SELECT *
FROM system.user_directories

2020.12.23 21:02:59.592291 [ 1718 ] {fc335ba2-415c-4265-9c11-72b1b12475ca} <Debug> executeQuery: (from 127.0.0.1:54954, using old parser) SELECT * FROM system.user_directories;
2020.12.23 21:02:59.592722 [ 1718 ] {fc335ba2-415c-4265-9c11-72b1b12475ca} <Trace> ContextAccess (default): Access granted: SELECT(name, type, params, precedence) ON system.user_directories
2020.12.23 21:02:59.593133 [ 1718 ] {fc335ba2-415c-4265-9c11-72b1b12475ca} <Error> executeQuery: Poco::Exception. Code: 1000, e.code() = 0, e.displayText() = Bad cast exception: Can not convert to std::string (version 20.13.1.5509 (official build)) (from 127.0.0.1:54954) (in query: SELECT * FROM system.user_directories;), Stack trace (when copying this message, always include the lines below):

0. Poco::Dynamic::VarHolder::convert(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) const @ 0xcebe55a in /usr/bin/clickhouse
1. std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Poco::Dynamic::Var::convert<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >() const @ 0xf1112e3 in /usr/bin/clickhouse
2. Poco::JSON::Stringifier::stringify(Poco::Dynamic::Var const&, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int, int, int) @ 0x11845f0c in /usr/bin/clickhouse
3. void Poco::JSON::Object::doStringify<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Poco::Dynamic::Var, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, Poco::Dynamic::Var> > > >(std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Poco::Dynamic::Var, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, Poco::Dynamic::Var> > > const&, std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int, unsigned int) const @ 0x1183a5d2 in /usr/bin/clickhouse
4. DB::LDAPAccessStorage::getStorageParamsJSON() const @ 0xe175f64 in /usr/bin/clickhouse
5. DB::StorageSystemUserDirectories::fillData(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::Context const&, DB::SelectQueryInfo const&) const @ 0xe02a5b0 in /usr/bin/clickhouse
6. DB::IStorageSystemOneBlock<DB::StorageSystemUserDirectories>::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0xdfbb432 in /usr/bin/clickhouse
7. DB::IStorage::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0xecdf093 in /usr/bin/clickhouse
8. DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&, std::__1::shared_ptr<DB::PrewhereDAGInfo> const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xe84a291 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0xe83f931 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0xe83edac in /usr/bin/clickhouse
11. DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0xe9ee8d5 in /usr/bin/clickhouse
12. DB::InterpreterSelectWithUnionQuery::execute() @ 0xe9efc8e in /usr/bin/clickhouse
13. ? @ 0xeb6a4c9 in /usr/bin/clickhouse
14. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0xeb68e0d in /usr/bin/clickhouse
15. DB::TCPHandler::runImpl() @ 0xf263de6 in /usr/bin/clickhouse
16. DB::TCPHandler::run() @ 0xf2727a7 in /usr/bin/clickhouse
17. Poco::Net::TCPServerConnection::start() @ 0x117a60cf in /usr/bin/clickhouse
18. Poco::Net::TCPServerDispatcher::run() @ 0x117a7ae1 in /usr/bin/clickhouse
19. Poco::PooledThread::run() @ 0x118d3469 in /usr/bin/clickhouse
20. Poco::ThreadImpl::runnableEntry(void*) @ 0x118cf3fa in /usr/bin/clickhouse
21. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
22. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so


Received exception from server (version 20.13.1):
Code: 1000. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast exception: Can not convert to std::string.
```


**Expected behavior**
Query is working.

**Additional context**
ldap server is Active Directory Lightweight Directory Services (ADLDS).
ldap user bindings are working normally and i can log with users from ldap.
If we remove the ldap server from user_directories, the query is working correctly.

```
SELECT *
FROM system.user_directories

Query id: c11e8e30-5dfb-4629-a4ea-1f813c176941

┌─name────────────┬─type────────────┬─params─────────────────────────────────────────┬─precedence─┐
│ users.xml       │ users.xml       │ {"path":"\/etc\/clickhouse-server\/users.xml"} │          1 │
│ local directory │ local directory │ {"path":"\/var\/lib\/clickhouse\/access\/"}    │          2 │
└─────────────────┴─────────────────┴────────────────────────────────────────────────┴────────────┘
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
