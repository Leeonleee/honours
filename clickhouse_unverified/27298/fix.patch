diff --git a/src/Interpreters/ExpressionActions.cpp b/src/Interpreters/ExpressionActions.cpp
index 6797947a1011..ef5c1f8e48f8 100644
--- a/src/Interpreters/ExpressionActions.cpp
+++ b/src/Interpreters/ExpressionActions.cpp
@@ -342,6 +342,13 @@ static void executeAction(const ExpressionActions::Action & action, ExecutionCon
             res_column.type = action.node->result_type;
             res_column.name = action.node->result_name;
 
+            if (action.node->column)
+            {
+                /// Do not execute function if it's result is already known.
+                res_column.column = action.node->column->cloneResized(num_rows);
+                break;
+            }
+
             ColumnsWithTypeAndName arguments(action.arguments.size());
             for (size_t i = 0; i < arguments.size(); ++i)
             {
diff --git a/src/Storages/MergeTree/MergeTreeRangeReader.cpp b/src/Storages/MergeTree/MergeTreeRangeReader.cpp
index 2347280a4a09..464d253a12c1 100644
--- a/src/Storages/MergeTree/MergeTreeRangeReader.cpp
+++ b/src/Storages/MergeTree/MergeTreeRangeReader.cpp
@@ -2,6 +2,7 @@
 #include <Columns/FilterDescription.h>
 #include <Columns/ColumnsCommon.h>
 #include <common/range.h>
+#include <Interpreters/castColumn.h>
 #include <DataTypes/DataTypeNothing.h>
 
 #ifdef __SSE2__
@@ -1038,9 +1039,9 @@ void MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(ReadResult & r
     /// Filter in WHERE instead
     else
     {
-        result.columns[prewhere_column_pos] = result.getFilterHolder()->convertToFullColumnIfConst();
-        if (getSampleBlock().getByName(prewhere_info->prewhere_column_name).type->isNullable())
-            result.columns[prewhere_column_pos] = makeNullable(std::move(result.columns[prewhere_column_pos]));
+        auto type = getSampleBlock().getByName(prewhere_info->prewhere_column_name).type;
+        ColumnWithTypeAndName col(result.getFilterHolder()->convertToFullColumnIfConst(), std::make_shared<DataTypeUInt8>(), "");
+        result.columns[prewhere_column_pos] = castColumn(col, type);
         result.clearFilter(); // Acting as a flag to not filter in PREWHERE
     }
 }
