diff --git a/tests/queries/0_stateless/02000_join_on_const.reference b/tests/queries/0_stateless/02000_join_on_const.reference
new file mode 100644
index 000000000000..b9494e4689c1
--- /dev/null
+++ b/tests/queries/0_stateless/02000_join_on_const.reference
@@ -0,0 +1,31 @@
+1
+1
+1
+1
+1
+1
+- ON NULL -
+- inner -
+- left -
+1	0
+2	0
+- right -
+0	2
+0	3
+- full -
+0	2
+0	3
+1	0
+2	0
+- inner -
+- left -
+1	\N
+2	\N
+- right -
+\N	2
+\N	3
+- full -
+\N	2
+\N	3
+1	\N
+2	\N
diff --git a/tests/queries/0_stateless/02000_join_on_const.sql b/tests/queries/0_stateless/02000_join_on_const.sql
new file mode 100644
index 000000000000..f6d686cf9bc4
--- /dev/null
+++ b/tests/queries/0_stateless/02000_join_on_const.sql
@@ -0,0 +1,55 @@
+DROP TABLE IF EXISTS t1;
+DROP TABLE IF EXISTS t2;
+
+CREATE TABLE t1 (id Int) ENGINE = Memory;
+CREATE TABLE t2 (id Int) ENGINE = Memory;
+
+INSERT INTO t1 VALUES (1), (2);
+INSERT INTO t2 VALUES (2), (3);
+
+SELECT 70 = 10 * sum(t1.id) + sum(t2.id) AND count() == 4 FROM t1 JOIN t2 ON 1 = 1;
+SELECT 70 = 10 * sum(t1.id) + sum(t2.id) AND count() == 4 FROM t1 JOIN t2 ON 1;
+SELECT 70 = 10 * sum(t1.id) + sum(t2.id) AND count() == 4 FROM t1 JOIN t2 ON 2 = 2 AND 3 = 3;
+SELECT 70 = 10 * sum(t1.id) + sum(t2.id) AND count() == 4 FROM t1 INNER ANY JOIN t2 ON toNullable(1);
+SELECT 70 = 10 * sum(t1.id) + sum(t2.id) AND count() == 4 FROM t1 INNER ANY JOIN t2 ON toLowCardinality(1);
+SELECT 70 = 10 * sum(t1.id) + sum(t2.id) AND count() == 4 FROM t1 INNER ANY JOIN t2 ON toLowCardinality(toNullable(1));
+
+SELECT * FROM t1 INNER ANY JOIN t2 ON toNullable(toLowCardinality(1)); -- { serverError 403 }
+SELECT * FROM t1 INNER ANY JOIN t2 ON toUInt16(1); -- { serverError 403 }
+SELECT * FROM t1 INNER ANY JOIN t2 ON toInt8(1); -- { serverError 403 }
+SELECT * FROM t1 INNER ANY JOIN t2 ON 256; -- { serverError 403 }
+SELECT * FROM t1 INNER ANY JOIN t2 ON -1; -- { serverError 403 }
+SELECT * FROM t1 INNER ANY JOIN t2 ON toString(1); -- { serverError 403 }
+
+SELECT '- ON NULL -';
+
+SELECT '- inner -';
+SELECT * FROM t1 INNER ANY JOIN t2 ON NULL;
+SELECT * FROM t1 INNER ANY JOIN t2 ON 0;
+SELECT * FROM t1 INNER ANY JOIN t2 ON 1 = 2;
+SELECT '- left -';
+SELECT * FROM t1 LEFT JOIN t2 ON NULL ORDER BY t1.id, t2.id;
+SELECT '- right -';
+SELECT * FROM t1 RIGHT JOIN t2 ON NULL ORDER BY t1.id, t2.id;
+SELECT '- full -';
+SELECT * FROM t1 FULL JOIN t2 ON NULL ORDER BY t1.id, t2.id;
+
+SELECT '- inner -';
+SELECT * FROM t1 INNER ANY JOIN t2 ON NULL ORDER BY t1.id NULLS FIRST, t2.id SETTINGS join_use_nulls = 1;
+SELECT '- left -';
+SELECT * FROM t1 LEFT JOIN t2 ON NULL ORDER BY t1.id NULLS FIRST, t2.id SETTINGS join_use_nulls = 1;
+SELECT '- right -';
+SELECT * FROM t1 RIGHT JOIN t2 ON NULL ORDER BY t1.id NULLS FIRST, t2.id SETTINGS join_use_nulls = 1;
+SELECT '- full -';
+SELECT * FROM t1 FULL JOIN t2 ON NULL ORDER BY t1.id NULLS FIRST, t2.id SETTINGS join_use_nulls = 1;
+
+SELECT * FROM t1 JOIN t2 ON 1 = 1 SETTINGS join_algorithm = 'partial_merge'; -- { serverError 48 }
+SELECT * FROM t1 JOIN t2 ON 1 = 1 SETTINGS join_algorithm = 'auto'; -- { serverError 48 }
+SELECT * FROM t1 JOIN t2 ON NULL SETTINGS join_algorithm = 'partial_merge'; -- { serverError 48 }
+SELECT * FROM t1 LEFT JOIN t2 ON NULL SETTINGS join_algorithm = 'partial_merge'; -- { serverError 48 }
+SELECT * FROM t1 RIGHT JOIN t2 ON NULL SETTINGS join_algorithm = 'auto'; -- { serverError 48 }
+SELECT * FROM t1 FULL JOIN t2 ON NULL SETTINGS join_algorithm = 'partial_merge'; -- { serverError 48 }
+
+DROP TABLE IF EXISTS t1;
+DROP TABLE IF EXISTS t2;
+
diff --git a/tests/queries/0_stateless/02001_join_on_const_bs_long.reference b/tests/queries/0_stateless/02001_join_on_const_bs_long.reference
new file mode 100644
index 000000000000..b45724ee906d
--- /dev/null
+++ b/tests/queries/0_stateless/02001_join_on_const_bs_long.reference
@@ -0,0 +1,41 @@
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
diff --git a/tests/queries/0_stateless/02001_join_on_const_bs_long.sql.j2 b/tests/queries/0_stateless/02001_join_on_const_bs_long.sql.j2
new file mode 100644
index 000000000000..1726bcb7062c
--- /dev/null
+++ b/tests/queries/0_stateless/02001_join_on_const_bs_long.sql.j2
@@ -0,0 +1,27 @@
+DROP TABLE IF EXISTS t1;
+DROP TABLE IF EXISTS t2;
+
+CREATE TABLE t1 (id Int) ENGINE = MergeTree ORDER BY id;
+CREATE TABLE t2 (id Int) ENGINE = MergeTree ORDER BY id;
+
+INSERT INTO t1 VALUES (1), (2);
+INSERT INTO t2 SELECT number + 5 AS x FROM (SELECT * FROM system.numbers LIMIT 1111);
+
+SET max_block_size = 100;
+
+SELECT count() == 2222 FROM t1 JOIN t2 ON 1 = 1;
+
+{% for bs in [90, 95, 99, 100, 101, 110, 111, 128] -%}
+
+SET max_block_size = {{ bs }};
+
+SELECT count() == 0 FROM t1 JOIN t2 ON 1 = 2;
+SELECT count() == 2 FROM t1 LEFT JOIN t2 ON 1 = 2;
+SELECT count() == 1111  FROM t1 RIGHT JOIN t2 ON 1 = 2;
+SELECT count() == 1113  FROM t1 FULL JOIN t2 ON 1 = 2;
+SELECT max(blockSize()) <= {{ bs }} FROM t1 FULL JOIN t2 ON 1 = 2;
+
+{% endfor %}
+
+DROP TABLE IF EXISTS t1;
+DROP TABLE IF EXISTS t2;
