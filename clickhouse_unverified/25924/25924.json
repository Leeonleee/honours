{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 25924,
  "instance_id": "ClickHouse__ClickHouse-25924",
  "issue_numbers": [
    "17861"
  ],
  "base_commit": "1e9fbdb02c3b670e947e2c78c6533f5cda52edb5",
  "patch": "diff --git a/src/Interpreters/JoinedTables.cpp b/src/Interpreters/JoinedTables.cpp\nindex 45466ae5ca16..421fe7fcddd4 100644\n--- a/src/Interpreters/JoinedTables.cpp\n+++ b/src/Interpreters/JoinedTables.cpp\n@@ -48,7 +48,7 @@ void replaceJoinedTable(const ASTSelectQuery & select_query)\n     if (table_expr.database_and_table_name)\n     {\n         const auto & table_id = table_expr.database_and_table_name->as<ASTTableIdentifier &>();\n-        String expr = \"(select * from \" + table_id.name() + \") as \" + table_id.shortName();\n+        String expr = \"(SELECT * FROM \" + backQuote(table_id.name()) + \") AS \" + backQuote(table_id.shortName());\n \n         // FIXME: since the expression \"a as b\" exposes both \"a\" and \"b\" names, which is not equivalent to \"(select * from a) as b\",\n         //        we can't replace aliased tables.\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01938_joins_identifiers.reference b/tests/queries/0_stateless/01938_joins_identifiers.reference\nnew file mode 100644\nindex 000000000000..4ce2f5c25050\n--- /dev/null\n+++ b/tests/queries/0_stateless/01938_joins_identifiers.reference\n@@ -0,0 +1,1 @@\n+0\t0\t1\ndiff --git a/tests/queries/0_stateless/01938_joins_identifiers.sql b/tests/queries/0_stateless/01938_joins_identifiers.sql\nnew file mode 100644\nindex 000000000000..b518080b116e\n--- /dev/null\n+++ b/tests/queries/0_stateless/01938_joins_identifiers.sql\n@@ -0,0 +1,13 @@\n+DROP TABLE IF EXISTS \"/t0\";\n+DROP TABLE IF EXISTS \"/t1\";\n+\n+create table \"/t0\" (a Int64, b Int64) engine = MergeTree() partition by a order by a;\n+create table \"/t1\" (a Int64, b Int64) engine = MergeTree() partition by a order by a;\n+\n+insert into \"/t0\" values (0, 0);\n+insert into \"/t1\" values (0, 1);\n+\n+select * from \"/t0\" join \"/t1\" using a;\n+\n+DROP TABLE \"/t0\";\n+DROP TABLE \"/t1\";\n",
  "problem_statement": "Error joining tables with special symbols in names.\n(you don't have to strictly follow this form)\r\n\r\n**Describe the bug**\r\nJoin fails if table names contain some special symbols (e.g. '/').\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\nversion 20.11.4\r\n* Which interface to use, if matters\r\n* Non-default settings, if any\r\n* `CREATE TABLE` statements for all tables involved\r\ncreate table \"/t0\" (a Int64, b Int64) engine = MergeTree() partition by a order by a;\r\ncreate table \"/t1\" (a Int64, b Int64) engine = MergeTree() partition by a order by a;\r\n* Sample data for all these tables\r\ninsert into \"/t0\" values (0, 0);\r\ninsert into \"/t1\" values (0, 1);\r\n* Queries to run that lead to unexpected result\r\nselect * from \"/t0\" join \"/t1\" using a\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Error message and/or stacktrace**\r\n\r\nReceived exception from server (version 20.11.4):\r\nCode: 62. DB::Exception: Received from localhost:9000. DB::Exception: Syntax error (table or subquery or table function): failed at position 16 ('/'): /t1) as /t1. Expected one of: SELECT subquery, compound identifier, identifier, element of expression with optional alias, list of elements, function, table, table function, subquery or list of joined tables, table or subquery or table function.\r\n\r\n**Additional context**\r\n\r\nWhen I rename tables with \"t0\" and \"t1\" everything works fine. It looks like ClickHouse rewrites query somehow and uses table names without quotes.\r\n\n",
  "hints_text": "WA (normalize join manually):\r\n```sql\r\nSELECT *\r\nFROM `/t0`\r\nINNER JOIN\r\n(\r\n    SELECT *\r\n    FROM `/t1`\r\n) AS `\\t1` USING (a)\r\n\r\nQuery id: cd2ef341-cb94-4f9c-8a46-fae9be938713\r\n\r\n\u250c\u2500a\u2500\u252c\u2500b\u2500\u252c\u2500\t1.b\u2500\u2510\r\n\u2502 0 \u2502 0 \u2502           1 \u2502\r\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n",
  "created_at": "2021-07-03T00:25:14Z"
}