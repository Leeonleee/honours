{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12020,
  "instance_id": "ClickHouse__ClickHouse-12020",
  "issue_numbers": [
    "11379"
  ],
  "base_commit": "c1d2d2d7f759536cdac991077110ea40023030c2",
  "patch": "diff --git a/src/Columns/ColumnConst.cpp b/src/Columns/ColumnConst.cpp\nindex 545c0b1b3000..2fa1fbce32dc 100644\n--- a/src/Columns/ColumnConst.cpp\n+++ b/src/Columns/ColumnConst.cpp\n@@ -120,7 +120,9 @@ void ColumnConst::getPermutation(bool /*reverse*/, size_t /*limit*/, int /*nan_d\n         res[i] = i;\n }\n \n-void ColumnConst::updatePermutation(bool, size_t, int, Permutation &, EqualRanges &) const {}\n+void ColumnConst::updatePermutation(bool, size_t, int, Permutation &, EqualRanges &) const\n+{\n+}\n \n void ColumnConst::updateWeakHash32(WeakHash32 & hash) const\n {\ndiff --git a/src/Interpreters/sortBlock.cpp b/src/Interpreters/sortBlock.cpp\nindex 4b8d4f2b859f..cb3c36e53564 100644\n--- a/src/Interpreters/sortBlock.cpp\n+++ b/src/Interpreters/sortBlock.cpp\n@@ -187,6 +187,9 @@ void sortBlock(Block & block, const SortDescription & description, UInt64 limit)\n                 if (ranges.empty())\n                     break;\n \n+                if (column.column_const)\n+                    continue;\n+\n                 if (isCollationRequired(column.description))\n                 {\n                     const ColumnString & column_string = assert_cast<const ColumnString &>(*column.column);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01354_order_by_tuple_collate_const.reference b/tests/queries/0_stateless/01354_order_by_tuple_collate_const.reference\nnew file mode 100644\nindex 000000000000..0359bf9ccb29\n--- /dev/null\n+++ b/tests/queries/0_stateless/01354_order_by_tuple_collate_const.reference\n@@ -0,0 +1,66 @@\n+0\n+0\n+1\n+1\n+10\n+10\n+2\n+2\n+3\n+3\n+4\n+4\n+5\n+5\n+6\n+6\n+7\n+7\n+8\n+8\n+9\n+9\n+0\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+0\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+0\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+0\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\ndiff --git a/tests/queries/0_stateless/01354_order_by_tuple_collate_const.sql b/tests/queries/0_stateless/01354_order_by_tuple_collate_const.sql\nnew file mode 100644\nindex 000000000000..d9b596f3ec3b\n--- /dev/null\n+++ b/tests/queries/0_stateless/01354_order_by_tuple_collate_const.sql\n@@ -0,0 +1,1 @@\n+SELECT number FROM numbers(11) ORDER BY arrayJoin(['\u0430', '\u044f', '\\0\ufffd', '', '\u042f', '']) ASC, toString(number) ASC, 'y' ASC COLLATE 'el';\ndiff --git a/tests/queries/0_stateless/arcadia_skip_list.txt b/tests/queries/0_stateless/arcadia_skip_list.txt\nindex 2b61d384b009..3995f905332f 100644\n--- a/tests/queries/0_stateless/arcadia_skip_list.txt\n+++ b/tests/queries/0_stateless/arcadia_skip_list.txt\n@@ -125,3 +125,4 @@\n 01326_build_id\n 01053_ssd_dictionary\n 01280_ssd_complex_key_dictionary\n+01354_order_by_tuple_collate_const\n",
  "problem_statement": "Bad cast from type DB::ColumnConst to DB::ColumnString\n```\r\n/4/ :) SELECT number FROM numbers(11) ORDER BY arrayJoin(['\u0430', '\u044f', '\\0\ufffd', '', '\u042f', '']) ASC, toString(number) ASC, 'y' ASC COLLATE 'el'\r\n\r\nCode: 368. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::ColumnConst to DB::ColumnString. Stack trace:\r\n```\n",
  "hints_text": "",
  "created_at": "2020-06-28T20:57:27Z"
}