You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
allow_experimental_reverse_key produces unexpected results
### Company or project name

_No response_

### Describe the unexpected behaviour

@amosbird 

When I execute `order by A desc` and `order by identity(A) desc` I expect the same result.

I got 3 different results here https://fiddle.clickhouse.com/9dc3d794-1850-494b-a596-8de4fd5be7e7
But I expect that all results must be same.

I'm not really sure that the issue is in `allow_experimental_reverse_key`, I found it accidentally.

### How to reproduce

```
create table t1(A Int64) partition by (A % 100) order by A desc
settings allow_experimental_reverse_key=1   
as 
select intDiv(number,1111) from numbers(100000) 
union all
select intHash32(number) from numbers(1e6);

create table t2(A Int64) partition by (A % 10) order by A desc
settings allow_experimental_reverse_key=1  
as select intHash32(-number) from numbers(1e4);

set max_parallel_replicas=1;

-- distributed table / emulates 3 shards
create table d1 as remote('127.0.0{0,1,2}', default, t1);

-- distributed table
create table d2 as remote('127.0.0.0', default, t2);

create table m as t1 Engine=Merge('default', 'd');


select cityHash64(groupArray(A)) from (
   select A from m order by A desc LIMIT 10
);

   +-cityHash64(groupArray(A))-+
1. |      16468920258867734457 |
   +---------------------------+

select cityHash64(groupArray(A)) from (
select A from ( select A from d1 union all select A from d2) 
order by A desc LIMIT 10
);

   +-cityHash64(groupArray(A))-+
1. |       9143693836475351760 |
   +---------------------------+

-- Let's use hacks to disable index optimization

select cityHash64(groupArray(A)) from (
   select A from m order by identity(A) desc LIMIT 10  -- identity
);

   +-cityHash64(groupArray(A))-+
1. |        872953963431779801 | -- I think it's correct 
   +---------------------------+

select cityHash64(groupArray(A)) from (
select A from ( select A from d1 union all select A from d2 
  limit toUInt64(-1) -- LIMIT to prevent a pushdown
) 
order by A desc LIMIT 10
);

   +-cityHash64(groupArray(A))-+
1. |        872953963431779801 |  
   +---------------------------+
```


```
select A from m order by A desc LIMIT 10;

   +----------A-+
 1. | 4294247773 |
 2. | 4294051345 |
 3. | 4293815635 |
 4. | 4293337241 |
 5. | 4293221813 |
 6. | 4291742056 |
 7. | 4291245786 |
 8. | 4290325296 |
 9. | 4289790196 |
10. | 4289427441 |
    +------------+


select A from (
select A from d1 union all select A from d2 
) order by A desc LIMIT 10;

    +----------A-+
 1. | 4294966773 |
 2. | 4294965595 |
 3. | 4294961104 |
 4. | 4294957861 |
 5. | 4294954196 |
 6. | 4294952750 |
 7. | 4294947712 |
 8. | 4294947337 |
 9. | 4294937972 |
10. | 4294934648 |
    +------------+

-- Let's use hacks to disable index optimization

select A from m order by identity(A) desc LIMIT 10;   -- identity

    +----------A-+
 1. | 4294966773 |
 2. | 4294966773 |
 3. | 4294966773 |
 4. | 4294965595 |
 5. | 4294965595 |
 6. | 4294965595 |
 7. | 4294961104 |
 8. | 4294961104 |
 9. | 4294961104 |
10. | 4294957861 |
    +------------+

select A from (
select A from d1 union all select A from d2 
limit toUInt64(-1) -- LIMIT to prevent a pushdown
) order by A desc LIMIT 10;

    +----------A-+
 1. | 4294966773 |
 2. | 4294966773 |
 3. | 4294966773 |
 4. | 4294965595 |
 5. | 4294965595 |
 6. | 4294965595 |
 7. | 4294961104 |
 8. | 4294961104 |
 9. | 4294961104 |
10. | 4294957861 |
    +------------+
```

----

## Expected result

Without allow_experimental_reverse_key (order by tuple) https://fiddle.clickhouse.com/94fa148f-d22d-4f22-bea2-b9c57220655d

```
   +-cityHash64(groupArray(A))-+
1. |        872953963431779801 |
   +---------------------------+

    +----------A-+
 1. | 4294966773 |
 2. | 4294966773 |
 3. | 4294966773 |
 4. | 4294965595 |
 5. | 4294965595 |
 6. | 4294965595 |
 7. | 4294961104 |
 8. | 4294961104 |
 9. | 4294961104 |
10. | 4294957861 |
    +------------+
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
