{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 24275,
  "instance_id": "ClickHouse__ClickHouse-24275",
  "issue_numbers": [
    "24274"
  ],
  "base_commit": "e9b69bbd708b5fc1761df09812359d8112b87aae",
  "patch": "diff --git a/src/Storages/StorageMemory.cpp b/src/Storages/StorageMemory.cpp\nindex 289a17366bba..1deb6a6618ff 100644\n--- a/src/Storages/StorageMemory.cpp\n+++ b/src/Storages/StorageMemory.cpp\n@@ -262,7 +262,14 @@ void StorageMemory::mutate(const MutationCommands & commands, ContextPtr context\n     auto metadata_snapshot = getInMemoryMetadataPtr();\n     auto storage = getStorageID();\n     auto storage_ptr = DatabaseCatalog::instance().getTable(storage, context);\n-    auto interpreter = std::make_unique<MutationsInterpreter>(storage_ptr, metadata_snapshot, commands, context, true);\n+\n+    /// When max_threads > 1, the order of returning blocks is uncentain,\n+    /// which will lead to inconsistency after updateBlockData.\n+    auto new_context = Context::createCopy(context);\n+    new_context->setSetting(\"max_streams_to_max_threads_ratio\", 1);\n+    new_context->setSetting(\"max_threads\", 1);\n+\n+    auto interpreter = std::make_unique<MutationsInterpreter>(storage_ptr, metadata_snapshot, commands, new_context, true);\n     auto in = interpreter->execute();\n \n     in->readPrefix();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01867_fix_storage_memory_mutation.reference b/tests/queries/0_stateless/01867_fix_storage_memory_mutation.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/01867_fix_storage_memory_mutation.sql b/tests/queries/0_stateless/01867_fix_storage_memory_mutation.sql\nnew file mode 100644\nindex 000000000000..4cb80036d738\n--- /dev/null\n+++ b/tests/queries/0_stateless/01867_fix_storage_memory_mutation.sql\n@@ -0,0 +1,32 @@\n+DROP TABLE IF EXISTS mem_test;\n+\n+CREATE TABLE mem_test\n+(\n+    `a` Int64,\n+    `b` Int64\n+)\n+ENGINE = Memory;\n+\n+SET max_block_size = 3;\n+\n+INSERT INTO mem_test SELECT\n+    number,\n+    number\n+FROM numbers(100);\n+\n+ALTER TABLE mem_test\n+    UPDATE a = 0 WHERE b = 99;\n+ALTER TABLE mem_test\n+    UPDATE a = 0 WHERE b = 99;\n+ALTER TABLE mem_test\n+    UPDATE a = 0 WHERE b = 99;\n+ALTER TABLE mem_test\n+    UPDATE a = 0 WHERE b = 99;\n+ALTER TABLE mem_test\n+    UPDATE a = 0 WHERE b = 99;\n+\n+SELECT *\n+FROM mem_test\n+FORMAT Null;\n+\n+DROP TABLE mem_test;\n",
  "problem_statement": "Mutation of StorageMemory with more than one block will fail when max_threads > 1\nHow to reproduce:\r\n\r\n```sql\r\nVM-16-2-centos :) create table mem_test(a Int64, b Int64) engine = Memory\r\n\r\nCREATE TABLE mem_test\r\n(\r\n    `a` Int64,\r\n    `b` Int64\r\n)\r\nENGINE = Memory\r\n\r\nQuery id: fb8d3ab7-6e69-410d-b5e3-9891c8604a9c\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.004 sec. \r\nVM-16-2-centos :) set max_block_size = 3\r\n\r\nSET max_block_size = 3\r\n\r\nQuery id: 6803f260-4893-4f0b-91cf-fc5d5670ce7c\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.001 sec.\r\n\r\nVM-16-2-centos :) insert into mem_test select number, number from numbers(100)\r\n\r\nINSERT INTO mem_test SELECT\r\n    number,\r\n    number\r\nFROM numbers(100)\r\n\r\nQuery id: 19f11e21-4b76-4015-ac05-99732facee6a\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\nVM-16-2-centos :) alter table mem_test update  a = 0 where b = 99\r\n\r\nALTER TABLE mem_test\r\n    UPDATE a = 0 WHERE b = 99\r\n\r\nQuery id: a9d72960-7c86-4195-b739-7148fea99c10\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.001 sec. \r\n\r\nVM-16-2-centos :) select * from mem_test format Null\r\n\r\nSELECT *\r\nFROM mem_test\r\nFORMAT Null\r\n\r\nQuery id: 413f4d7e-cca9-4523-aedb-f9673bc515cb\r\n\r\n\r\n0 rows in set. Elapsed: 0.011 sec. \r\n\r\nReceived exception from server (version 21.6.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Invalid number of rows in Chunk column Int64 position 1: expected 1, got 3: While executing Memory. \r\n\r\n\r\n```\n",
  "hints_text": "",
  "created_at": "2021-05-19T08:51:39Z"
}