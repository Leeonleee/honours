{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 61797,
  "instance_id": "ClickHouse__ClickHouse-61797",
  "issue_numbers": [
    "59848"
  ],
  "base_commit": "6fb40d6765f2db3b3a307cf53ebdad50875f21f2",
  "patch": "diff --git a/programs/client/Client.cpp b/programs/client/Client.cpp\nindex 9e90596b4f86..217684830d40 100644\n--- a/programs/client/Client.cpp\n+++ b/programs/client/Client.cpp\n@@ -1,4 +1,3 @@\n-#include <boost/algorithm/string/join.hpp>\n #include <cstdlib>\n #include <fcntl.h>\n #include <map>\n@@ -7,7 +6,6 @@\n #include <memory>\n #include <optional>\n #include <Common/ThreadStatus.h>\n-#include <Common/scope_guard_safe.h>\n #include <boost/program_options.hpp>\n #include <boost/algorithm/string/replace.hpp>\n #include <filesystem>\n@@ -45,8 +43,6 @@\n \n #include <Processors/Transforms/getSourceFromASTInsertQuery.h>\n \n-#include <Interpreters/InterpreterSetQuery.h>\n-\n #include <Functions/registerFunctions.h>\n #include <AggregateFunctions/registerAggregateFunctions.h>\n #include <Formats/registerFormats.h>\n@@ -1180,7 +1176,7 @@ void Client::processConfig()\n \n     pager = config().getString(\"pager\", \"\");\n \n-    is_default_format = !config().has(\"vertical\") && !config().has(\"format\");\n+    is_default_format = !config().has(\"vertical\") && !config().has(\"output-format\") && !config().has(\"format\");\n     if (is_default_format && checkIfStdoutIsRegularFile())\n     {\n         is_default_format = false;\n@@ -1189,9 +1185,13 @@ void Client::processConfig()\n         format = format_from_file_name ? *format_from_file_name : \"TabSeparated\";\n     }\n     else if (config().has(\"vertical\"))\n-        format = config().getString(\"format\", \"Vertical\");\n+    {\n+        format = config().getString(\"output-format\", config().getString(\"format\", \"Vertical\"));\n+    }\n     else\n-        format = config().getString(\"format\", is_interactive ? \"PrettyCompact\" : \"TabSeparated\");\n+    {\n+        format = config().getString(\"output-format\", config().getString(\"format\", is_interactive ? \"PrettyCompact\" : \"TabSeparated\"));\n+    }\n \n     format_max_block_size = config().getUInt64(\"format_max_block_size\",\n         global_context->getSettingsRef().max_block_size);\ndiff --git a/programs/local/LocalServer.cpp b/programs/local/LocalServer.cpp\nindex 6f7d3681c467..e0124f03a64f 100644\n--- a/programs/local/LocalServer.cpp\n+++ b/programs/local/LocalServer.cpp\n@@ -819,7 +819,6 @@ void LocalServer::addOptions(OptionsDescription & options_description)\n         (\"file,F\", po::value<std::string>(), \"path to file with data of the initial table (stdin if not specified)\")\n \n         (\"input-format\", po::value<std::string>(), \"input format of the initial table data\")\n-        (\"output-format\", po::value<std::string>(), \"default output format\")\n \n         (\"logger.console\", po::value<bool>()->implicit_value(true), \"Log to console\")\n         (\"logger.log\", po::value<std::string>(), \"Log file name\")\ndiff --git a/src/Client/ClientBase.cpp b/src/Client/ClientBase.cpp\nindex 8b13f2a4ffde..c97669760f9e 100644\n--- a/src/Client/ClientBase.cpp\n+++ b/src/Client/ClientBase.cpp\n@@ -2892,7 +2892,9 @@ void ClientBase::init(int argc, char ** argv)\n \n         (\"suggestion_limit\", po::value<int>()->default_value(10000), \"Suggestion limit for how many databases, tables and columns to fetch.\")\n \n-        (\"format,f\", po::value<std::string>(), \"default output format\")\n+        (\"format,f\", po::value<std::string>(), \"default output format (and input format for clickhouse-local)\")\n+        (\"output-format\", po::value<std::string>(), \"default output format (this option has preference over --format)\")\n+\n         (\"vertical,E\", \"vertical output format, same as --format=Vertical or FORMAT Vertical or \\\\G at end of command\")\n         (\"highlight\", po::value<bool>()->default_value(true), \"enable or disable basic syntax highlight in interactive command line\")\n \n@@ -2975,6 +2977,8 @@ void ClientBase::init(int argc, char ** argv)\n         config().setBool(\"ignore-error\", true);\n     if (options.count(\"format\"))\n         config().setString(\"format\", options[\"format\"].as<std::string>());\n+    if (options.count(\"output-format\"))\n+        config().setString(\"output-format\", options[\"output-format\"].as<std::string>());\n     if (options.count(\"vertical\"))\n         config().setBool(\"vertical\", true);\n     if (options.count(\"stacktrace\"))\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03020_output_format_client.reference b/tests/queries/0_stateless/03020_output_format_client.reference\nnew file mode 100644\nindex 000000000000..7738e2cffb2f\n--- /dev/null\n+++ b/tests/queries/0_stateless/03020_output_format_client.reference\n@@ -0,0 +1,12 @@\n+| x |\n+|:-|\n+| Hello, world |\n+| x |\n+|:-|\n+| Hello, world |\n+| x |\n+|:-|\n+| Hello, world |\n+| x |\n+|:-|\n+| Hello, world |\ndiff --git a/tests/queries/0_stateless/03020_output_format_client.sh b/tests/queries/0_stateless/03020_output_format_client.sh\nnew file mode 100755\nindex 000000000000..b641af3e2e4d\n--- /dev/null\n+++ b/tests/queries/0_stateless/03020_output_format_client.sh\n@@ -0,0 +1,16 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+# clickhouse-local has --input-format and --output-format parameters,\n+# and also the --format parameter which is the default for both input and output formats, but has less preference.\n+\n+# clickhouse-client does not have the --input-format parameter.\n+# However, it accepts both --format and --output-format for convenience.\n+\n+${CLICKHOUSE_LOCAL} --output-format Markdown --query \"SELECT 'Hello, world' AS x\"\n+${CLICKHOUSE_CLIENT} --output-format Markdown --query \"SELECT 'Hello, world' AS x\"\n+${CLICKHOUSE_LOCAL} --format Markdown --query \"SELECT 'Hello, world' AS x\"\n+${CLICKHOUSE_CLIENT} --format Markdown --query \"SELECT 'Hello, world' AS x\"\n",
  "problem_statement": "`clickhouse-client` does not have an option `--output-format`, while `clickhouse-local` has.\n**Expected behavior**\r\n\r\nMake it a synonym for `--format`.\n",
  "hints_text": "Hi, I'd like to work on this.\n@rtadepalli, Thank you, it will be wonderful!",
  "created_at": "2024-03-22T20:10:22Z"
}