{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 60012,
  "instance_id": "ClickHouse__ClickHouse-60012",
  "issue_numbers": [
    "41848"
  ],
  "base_commit": "a98facee5295dea5b7ccde98f6c91a5ee28b3490",
  "patch": "diff --git a/src/Parsers/ASTFunction.cpp b/src/Parsers/ASTFunction.cpp\nindex e7f7b48091ac..73625fcfe35a 100644\n--- a/src/Parsers/ASTFunction.cpp\n+++ b/src/Parsers/ASTFunction.cpp\n@@ -1034,7 +1034,15 @@ void ASTFunction::formatImplWithoutAlias(const FormatSettings & settings, Format\n                 }\n             }\n \n-            if (!written && name == \"lambda\"sv)\n+            const auto & first_argument = arguments->children[0];\n+            const ASTIdentifier * first_argument_identifier = first_argument->as<ASTIdentifier>();\n+            const ASTFunction * first_argument_function = first_argument->as<ASTFunction>();\n+            bool first_argument_is_tuple = first_argument_function && first_argument_function->name == \"tuple\";\n+\n+            /// Only these types of arguments are accepted by the parser of the '->' operator.\n+            bool acceptable_first_argument_for_lambda_expression = first_argument_identifier || first_argument_is_tuple;\n+\n+            if (!written && name == \"lambda\"sv && acceptable_first_argument_for_lambda_expression)\n             {\n                 /// Special case: zero elements tuple in lhs of lambda is printed as ().\n                 /// Special case: one-element tuple in lhs of lambda is printed as its element.\n@@ -1042,19 +1050,17 @@ void ASTFunction::formatImplWithoutAlias(const FormatSettings & settings, Format\n                 if (frame.need_parens)\n                     settings.ostr << '(';\n \n-                const auto * first_arg_func = arguments->children[0]->as<ASTFunction>();\n-                if (first_arg_func\n-                    && first_arg_func->name == \"tuple\"\n-                    && first_arg_func->arguments\n-                    && (first_arg_func->arguments->children.size() == 1 || first_arg_func->arguments->children.empty()))\n+                if (first_argument_is_tuple\n+                    && first_argument_function->arguments\n+                    && (first_argument_function->arguments->children.size() == 1 || first_argument_function->arguments->children.empty()))\n                 {\n-                    if (first_arg_func->arguments->children.size() == 1)\n-                        first_arg_func->arguments->children[0]->formatImpl(settings, state, nested_need_parens);\n+                    if (first_argument_function->arguments->children.size() == 1)\n+                        first_argument_function->arguments->children[0]->formatImpl(settings, state, nested_need_parens);\n                     else\n                         settings.ostr << \"()\";\n                 }\n                 else\n-                    arguments->children[0]->formatImpl(settings, state, nested_need_parens);\n+                    first_argument->formatImpl(settings, state, nested_need_parens);\n \n                 settings.ostr << (settings.hilite ? hilite_operator : \"\") << \" -> \" << (settings.hilite ? hilite_none : \"\");\n                 arguments->children[1]->formatImpl(settings, state, nested_need_parens);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02990_format_lambdas.reference b/tests/queries/0_stateless/02990_format_lambdas.reference\nnew file mode 100644\nindex 000000000000..f898d6ffa0e6\n--- /dev/null\n+++ b/tests/queries/0_stateless/02990_format_lambdas.reference\n@@ -0,0 +1,10 @@\n+SELECT lambda(1, 1)\n+SELECT lambda(1, 1)\n+SELECT x -> 1\n+SELECT x -> 1\n+SELECT (x, y) -> 1\n+SELECT (x, y) -> 1\n+SELECT lambda(f(1), 1)\n+SELECT lambda(f(1), 1)\n+SELECT lambda(f(x), 1)\n+SELECT lambda(f(x), 1)\ndiff --git a/tests/queries/0_stateless/02990_format_lambdas.sh b/tests/queries/0_stateless/02990_format_lambdas.sh\nnew file mode 100755\nindex 000000000000..9dc5e0f0461b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02990_format_lambdas.sh\n@@ -0,0 +1,11 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+QUERY=\"SELECT lambda(1, 1)\"; QUERY2=$(${CLICKHOUSE_FORMAT} --query \"$QUERY\"); echo \"$QUERY2\"; QUERY3=$(${CLICKHOUSE_FORMAT} --query \"$QUERY2\"); echo \"$QUERY3\";\n+QUERY=\"SELECT lambda(x, 1)\"; QUERY2=$(${CLICKHOUSE_FORMAT} --query \"$QUERY\"); echo \"$QUERY2\"; QUERY3=$(${CLICKHOUSE_FORMAT} --query \"$QUERY2\"); echo \"$QUERY3\";\n+QUERY=\"SELECT lambda((x, y), 1)\"; QUERY2=$(${CLICKHOUSE_FORMAT} --query \"$QUERY\"); echo \"$QUERY2\"; QUERY3=$(${CLICKHOUSE_FORMAT} --query \"$QUERY2\"); echo \"$QUERY3\";\n+QUERY=\"SELECT lambda(f(1), 1)\"; QUERY2=$(${CLICKHOUSE_FORMAT} --query \"$QUERY\"); echo \"$QUERY2\"; QUERY3=$(${CLICKHOUSE_FORMAT} --query \"$QUERY2\"); echo \"$QUERY3\";\n+QUERY=\"SELECT lambda(f(x), 1)\"; QUERY2=$(${CLICKHOUSE_FORMAT} --query \"$QUERY\"); echo \"$QUERY2\"; QUERY3=$(${CLICKHOUSE_FORMAT} --query \"$QUERY2\"); echo \"$QUERY3\";\n",
  "problem_statement": "Parsing/formatting of lambdas is broken\nhttps://s3.amazonaws.com/clickhouse-test-reports/41796/19062e9d9743f6a926d24fa26abe1f3b56cd2354/fuzzer_astfuzzertsan//report.html\r\n\r\n```\r\nCREATE FUNCTION IF NOT EXISTS `02102_test_function` AS x -> plus(x, (x -> ('214748364.6' + 256)) -> plus(1048576), 1)\r\n\r\nFound error: The query formatting is broken.\r\nChanged settings: receive_timeout = '10', receive_data_timeout_ms = '10000', send_logs_level = 'fatal'\r\nGot the following (different) text after formatting the fuzzed query and parsing it back:\r\n'CREATE FUNCTION IF NOT EXISTS `02102_test_function` AS x -> ((((x, x) -> ('214748364.6' + 256)) -> plus(1048576)) + 1)'\r\n, expected:\r\n'CREATE FUNCTION IF NOT EXISTS `02102_test_function` AS x -> (((x, x -> ('214748364.6' + 256)) -> plus(1048576)) + 1)'\r\nIn more detail:\r\nAST-1 (generated by fuzzer):\r\n'CreateFunctionQuery_02102_test_function, 0x00007b2c00000bc8\r\n-Identifier_02102_test_function, 0x00007b3000010158\r\n-Function_lambda, 0x00007b3c00032dd8\r\n--ExpressionList, 0x00007b1c0001ae98\r\n---Function_tuple, 0x00007b3c0002ba88\r\n----ExpressionList, 0x00007b1c0001a8e8\r\n-----Identifier_x, 0x00007b3000012258\r\n---Function_plus, 0x00007b3c00032ce8\r\n----ExpressionList, 0x00007b1c0001b058\r\n-----Identifier_x, 0x00007b300000b418\r\n-----Function_lambda, 0x00007b3c00032928\r\n------ExpressionList, 0x00007b1c0001afe8\r\n-------Function_lambda, 0x00007b3c00032a18\r\n--------ExpressionList, 0x00007b1c0001af78\r\n---------Function_tuple, 0x00007b3c00032b08\r\n----------ExpressionList, 0x00007b1c0001ab18\r\n-----------Identifier_x, 0x00007b3000012cd8\r\n---------Function_plus, 0x00007b3c00032ec8\r\n----------ExpressionList, 0x00007b1c0001adb8\r\n-----------Literal_Decimal64_'214748364.6', 0x00007b4400039818\r\n-----------Literal_Int64_256, 0x00007b440003a5d8\r\n-------Function_plus, 0x00007b3c00031938\r\n--------ExpressionList, 0x00007b1c0001a258\r\n---------Literal_Int64_1048576, 0x00007b440003a218\r\n-----Literal_UInt64_1, 0x00007b44000396d8\r\n'\r\nText-1 (AST-1 formatted):\r\n'CREATE FUNCTION IF NOT EXISTS `02102_test_function` AS x -> plus(x, (x -> ('214748364.6' + 256)) -> plus(1048576), 1)'\r\nAST-2 (Text-1 parsed):\r\n'CreateFunctionQuery_02102_test_function, 0x00007b2c00000e88\r\n-Identifier_02102_test_function, 0x00007b3000012798\r\n-Function_lambda, 0x00007b3c00032fb8\r\n--ExpressionList, 0x00007b1c0001aa38\r\n---Function_tuple, 0x00007b3c00032bf8\r\n----ExpressionList, 0x00007b1c0001af08\r\n-----Identifier_x, 0x00007b3000012318\r\n---Function_plus, 0x00007b3c00031fc8\r\n----ExpressionList, 0x00007b1c0001b138\r\n-----Function_lambda, 0x00007b3c000330a8\r\n------ExpressionList, 0x00007b1c0001ac68\r\n-------Function_tuple, 0x00007b3c000320b8\r\n--------ExpressionList, 0x00007b1c0001ad48\r\n---------Identifier_x, 0x00007b3000012498\r\n---------Function_lambda, 0x00007b3c00032478\r\n----------ExpressionList, 0x00007b1c0001acd8\r\n-----------Function_tuple, 0x00007b3c00032838\r\n------------ExpressionList, 0x00007b1c0001ae28\r\n-------------Identifier_x, 0x00007b3000012b58\r\n-----------Function_plus, 0x00007b3c00032298\r\n------------ExpressionList, 0x00007b1c0001abf8\r\n-------------Literal_'214748364.6', 0x00007b440003a718\r\n-------------Literal_UInt64_256, 0x00007b4400039958\r\n-------Function_plus, 0x00007b3c00032658\r\n--------ExpressionList, 0x00007b1c0001b1a8\r\n---------Literal_UInt64_1048576, 0x00007b4400039a98\r\n-----Literal_UInt64_1, 0x00007b4400039bd8\r\n'\r\nText-2 (AST-2 formatted):\r\n'CREATE FUNCTION IF NOT EXISTS `02102_test_function` AS x -> (((x, x -> ('214748364.6' + 256)) -> plus(1048576)) + 1)'\r\nAST-3 (Text-2 parsed):\r\n'CreateFunctionQuery_02102_test_function, 0x00007b2c00001148\r\n-Identifier_02102_test_function, 0x00007b3000012918\r\n-Function_lambda, 0x00007b3c00033558\r\n--ExpressionList, 0x00007b1c0001b3d8\r\n---Function_tuple, 0x00007b3c00032568\r\n----ExpressionList, 0x00007b1c0001ab88\r\n-----Identifier_x, 0x00007b3000012858\r\n---Function_plus, 0x00007b3c00033468\r\n----ExpressionList, 0x00007b1c0001b368\r\n-----Function_lambda, 0x00007b3c00033378\r\n------ExpressionList, 0x00007b1c0001b2f8\r\n-------Function_tuple, 0x00007b3c00032388\r\n--------ExpressionList, 0x00007b1c0001a878\r\n---------Function_lambda, 0x00007b3c0002b038\r\n----------ExpressionList, 0x00007b1c0001a808\r\n-----------Function_tuple, 0x00007b3c0002a4f8\r\n------------ExpressionList, 0x00007b1c0001a958\r\n-------------Identifier_x, 0x00007b3000012198\r\n-------------Identifier_x, 0x00007b30000129d8\r\n-----------Function_plus, 0x00007b3c000321a8\r\n------------ExpressionList, 0x00007b1c000178c8\r\n-------------Literal_'214748364.6', 0x00007b4400039d18\r\n-------------Literal_UInt64_256, 0x00007b4400039e58\r\n-------Function_plus, 0x00007b3c00033198\r\n--------ExpressionList, 0x00007b1c0001b218\r\n---------Literal_UInt64_1048576, 0x00007b4400039f98\r\n-----Literal_UInt64_1, 0x00007b44000391d8\r\n'\r\nText-3 (AST-3 formatted):\r\n'CREATE FUNCTION IF NOT EXISTS `02102_test_function` AS x -> ((((x, x) -> ('214748364.6' + 256)) -> plus(1048576)) + 1)'\r\nText-3 must be equal to Text-2, but it is not.\r\n```\r\n\r\ncc: @evillique \n",
  "hints_text": "https://s3.amazonaws.com/clickhouse-test-reports/42254/daaf01c344c0509ca5e74fccb5d0f23fa5ae5b53/fuzzer_astfuzzerasan//report.html\nAnother: https://s3.amazonaws.com/clickhouse-test-reports/42999/a04b9fa9470ced4e50c78c8e204f67b8b7a2e980/fuzzer_astfuzzertsan//report.html\r\n\r\nReport extract:\r\n```\r\nChanged settings: max_distributed_connections = '1', receive_timeout = '10', receive_data_timeout_ms = '10000', allow_suspicious_low_cardinality_types = '1', allow_experimental_object_type = '1', output_format_json_named_tuples_as_objects = '1'\r\nGot the following (different) text after formatting the fuzzed query and parsing it back:\r\n'CREATE OR REPLACE FUNCTION `02101_test_function` AS x -> (plus(NULL, (0.0001, '1', x) -> plus(0.0001, plus(x, plus(lambda(((count('0.0000000002'), ('-0.2147483649', x) -> plus(0.9999), '10485.75', x), (tuple(x), x) -> (x + 100.0001)) -> Array(FixedString(count(NULL))), ('1', x) -> (-inf + 1.1920928955078125e-7), Array(FixedString(count(nan)))) + x), NULL), 1000.0001), 3.4028234663852886e38) + x)'\r\n, expected:\r\n'CREATE OR REPLACE FUNCTION `02101_test_function` AS x -> (plus(NULL, (0.0001, '1', x) -> plus(0.0001, plus(x, plus(lambda((count('0.0000000002'), ('-0.2147483649', x) -> plus(0.9999), '10485.75', x), ((tuple(x), x) -> (x + 100.0001)) -> Array(FixedString(count(NULL))), ('1', x) -> (-inf + 1.1920928955078125e-7), Array(FixedString(count(nan)))) + x), NULL), 1000.0001), 3.4028234663852886e38) + x)'\r\n```\nLooks like it's still broken, but in a different way: https://s3.amazonaws.com/clickhouse-test-reports/0/5d1cc1425a0ff1013fb866c637fe292e7e4773bc/fuzzer_astfuzzerubsan/report.html\r\n\r\n```\r\nCREATE OR REPLACE FUNCTION `02101_test_function` AS x -> (x + FixedString(lambda(x, x -> plus(x -> (Tuple(Date32) + 3.4028234663852886e38), tuple(DateTime) + bad_skip_idx__fuzz_39, x, -2147483647), plus(10, bad_skip_idx__fuzz_13, LowCardinality(FixedString(lambda((UInt8, DateTime, UInt128, x)), ((bad_skip_idx__fuzz_36, bad_skip_idx, x) -> (LowCardinality(FixedString(100)) + bad_skip_idx__fuzz_39), DateTime) + bad_skip_idx__fuzz_39, 1025)))), plus(tuple(-9223372036854775807), x, -9223372036854775807)))\r\n\r\n\r\nSyntax error: failed at position 195 ('->'):\r\n\r\nCREATE OR REPLACE FUNCTION `02101_test_function` AS x -> (x + FixedString(((x, x) -> plus(x -> (Tuple(Date32) + 3.4028234663852886e38), tuple(DateTime) + bad_skip_idx__fuzz_39, x, -2147483647)) \u001b[41;1m-\u001b[0m> plus(10, bad_skip_idx__fuzz_13, LowCardinality(FixedString(lambda((UInt8, DateTime, UInt128, x)), ((bad_skip_idx__fuzz_36, bad_skip_idx, x) -> (LowCardinality(FixedString(100)) + bad_skip_idx__fuzz_39), DateTime) + bad_skip_idx__fuzz_39, 1025))), plus(tuple(-9223372036854775807), x, -9223372036854775807)))\r\n\r\nExpected one of: token, Comma, ClosingRoundBracket\r\n\r\nFound error: The query formatting is broken.\r\nChanged settings: receive_timeout = '10', receive_data_timeout_ms = '10000', allow_suspicious_low_cardinality_types = '1', force_primary_key = '0', send_logs_level = 'fatal', enable_optimize_predicate_expression = '1', optimize_arithmetic_operations_in_aggregate_functions = '1', optimize_rewrite_sum_if_to_count_if = '1', optimize_aggregators_of_group_by_keys = '1', optimize_group_by_function_keys = '1', allow_deprecated_syntax_for_merge_tree = '1'\r\nNo changed MergeTree settings.\r\nGot the following (different) text after formatting the fuzzed query and parsing it back:\r\n''\r\n, expected:\r\n'CREATE OR REPLACE FUNCTION `02101_test_function` AS x -> (x + FixedString(((x, x) -> plus(x -> (Tuple(Date32) + 3.4028234663852886e38), tuple(DateTime) + bad_skip_idx__fuzz_39, x, -2147483647)) -> plus(10, bad_skip_idx__fuzz_13, LowCardinality(FixedString(lambda((UInt8, DateTime, UInt128, x)), ((bad_skip_idx__fuzz_36, bad_skip_idx, x) -> (LowCardinality(FixedString(100)) + bad_skip_idx__fuzz_39), DateTime) + bad_skip_idx__fuzz_39, 1025))), plus(tuple(-9223372036854775807), x, -9223372036854775807)))'\r\nIn more detail:\r\nAST-1 (generated by fuzzer):\r\n'CreateFunctionQuery_02101_test_function, 0x000056027ee71e58\r\n-Identifier_02101_test_function, 0x000056027ef8d668\r\n-Function_lambda, 0x000056027ef3aee8\r\n--ExpressionList, 0x000056027ef3ae18\r\n---Function_tuple, 0x000056027ef3acb8\r\n----ExpressionList, 0x000056027ef3abe8\r\n-----Identifier_x, 0x000056027ef72958\r\n---Function_plus, 0x000056027eeb78c8\r\n----ExpressionList, 0x000056027eeb7578\r\n-----Identifier_x, 0x000056027ef9e5c8\r\n-----Function_FixedString, 0x000056027eeb7a28\r\n------ExpressionList, 0x000056027ee6a8d8\r\n-------Function_lambda, 0x000056027eeb71e8\r\n--------ExpressionList, 0x000056027ee5a3f8\r\n---------Identifier_x, 0x000056027efc8758\r\n---------Function_lambda, 0x000056027efcd4f8\r\n----------ExpressionList, 0x000056027efcd428\r\n-----------Function_tuple, 0x000056027ef71c68\r\n------------ExpressionList, 0x000056027ef71dc8\r\n-------------Identifier_x, 0x000056027ef71e98\r\n-----------Function_plus, 0x000056027ef72028\r\n------------ExpressionList, 0x000056027ef72188\r\n-------------Function_lambda, 0x000056027ef386b8\r\n--------------ExpressionList, 0x000056027ef38818\r\n---------------Function_tuple, 0x000056027ef388e8\r\n----------------ExpressionList, 0x000056027ef38a48\r\n-----------------Identifier_x, 0x000056027ef38b18\r\n---------------Function_plus, 0x000056027ef38ca8\r\n----------------ExpressionList, 0x000056027ef9e908\r\n-----------------Function_Tuple, 0x000056027eeb69f8\r\n------------------ExpressionList, 0x000056027eeb6b58\r\n-------------------Function_Date32, 0x000056027eeb6c28\r\n-----------------Literal_Float64_3.4028234663852886e38, 0x000056027ee73568\r\n-------------Function_plus, 0x000056027eeb6d88\r\n--------------ExpressionList, 0x000056027eeb6ee8\r\n---------------Function_tuple, 0x000056027eeb6fb8\r\n----------------ExpressionList, 0x000056027eeb7118\r\n-----------------Function_DateTime, 0x000056027eedc778\r\n---------------Identifier_bad_skip_idx__fuzz_39, 0x000056027eedc8d8\r\n-------------Identifier_x, 0x000056027eedca68\r\n-------------Literal_Int64_-2147483647, 0x000056027ef38548\r\n---------Function_plus, 0x000056027ee5a4c8\r\n----------ExpressionList, 0x000056027efcd658\r\n-----------Literal_Int64_10, 0x000056027eea1e98\r\n-----------Identifier_bad_skip_idx__fuzz_13, 0x000056027efc8a68\r\n-----------Function_LowCardinality, 0x000056027eea2198\r\n------------ExpressionList, 0x000056027ee29278\r\n-------------Function_FixedString, 0x000056027efc8908\r\n--------------ExpressionList, 0x000056027ee28398\r\n---------------Function_lambda, 0x000056027ee6a748\r\n----------------ExpressionList, 0x000056027ef4c428\r\n-----------------Function_tuple, 0x000056027edc6ce8\r\n------------------ExpressionList, 0x000056027eedb808\r\n-------------------Function_UInt8, 0x000056027ef14278\r\n-------------------Function_DateTime, 0x000056027ef4ffe8\r\n-------------------Function_UInt128, 0x000056027ef724f8\r\n-------------------Identifier_x, 0x000056027eea2008\r\n---------------Function_plus, 0x000056027efd6c48\r\n----------------ExpressionList, 0x000056027ef9ea18\r\n-----------------Function_tuple, 0x000056027eeb7648\r\n------------------ExpressionList, 0x000056027eed78d8\r\n-------------------Function_lambda, 0x000056027eed79a8\r\n--------------------ExpressionList, 0x000056027ee28088\r\n---------------------Function_tuple, 0x000056027ee28158\r\n----------------------ExpressionList, 0x000056027eeb7348\r\n-----------------------Identifier_bad_skip_idx__fuzz_36, 0x000056027eeb7418\r\n-----------------------Identifier_bad_skip_idx, 0x000056027eea29c8\r\n-----------------------Identifier_x, 0x000056027ef9e778\r\n---------------------Function_plus, 0x000056027ede31d8\r\n----------------------ExpressionList, 0x000056027ede3338\r\n-----------------------Function_LowCardinality, 0x000056027ede3408\r\n------------------------ExpressionList, 0x000056027ede3568\r\n-------------------------Function_FixedString, 0x000056027ef4f9f8\r\n--------------------------ExpressionList, 0x000056027ef4fb58\r\n---------------------------Literal_Int64_100, 0x000056027ef4fe78\r\n-----------------------Identifier_bad_skip_idx__fuzz_39, 0x000056027ef4fc28\r\n-------------------Function_DateTime, 0x000056027ef501b8\r\n-----------------Identifier_bad_skip_idx__fuzz_39, 0x000056027ef50318\r\n---------------Literal_Int64_1025, 0x000056027ef72368\r\n-------Function_plus, 0x000056027ef504a8\r\n--------ExpressionList, 0x000056027eea2b58\r\n---------Function_tuple, 0x000056027efcd068\r\n----------ExpressionList, 0x000056027efcd1c8\r\n-----------Literal_Int64_-9223372036854775807, 0x000056027ee733f8\r\n---------Identifier_x, 0x000056027efcd298\r\n---------Literal_Int64_-9223372036854775807, 0x000056027ef4f888\r\n'\r\nText-1 (AST-1 formatted):\r\n'CREATE OR REPLACE FUNCTION `02101_test_function` AS x -> (x + FixedString(lambda(x, x -> plus(x -> (Tuple(Date32) + 3.4028234663852886e38), tuple(DateTime) + bad_skip_idx__fuzz_39, x, -2147483647), plus(10, bad_skip_idx__fuzz_13, LowCardinality(FixedString(lambda((UInt8, DateTime, UInt128, x)), ((bad_skip_idx__fuzz_36, bad_skip_idx, x) -> (LowCardinality(FixedString(100)) + bad_skip_idx__fuzz_39), DateTime) + bad_skip_idx__fuzz_39, 1025)))), plus(tuple(-9223372036854775807), x, -9223372036854775807)))'\r\nAST-2 (Text-1 parsed):\r\n'CreateFunctionQuery_02101_test_function, 0x000056027eeb8fd8\r\n-Identifier_02101_test_function, 0x000056027eea25f8\r\n-Function_lambda, 0x000056027ee54ca8\r\n--ExpressionList, 0x000056027ee54e08\r\n---Function_tuple, 0x000056027eea2498\r\n----ExpressionList, 0x000056027eea22f8\r\n-----Identifier_x, 0x000056027ee69fd8\r\n---Function_plus, 0x000056027ee54a78\r\n----ExpressionList, 0x000056027ee54bd8\r\n-----Identifier_x, 0x000056027ee6a2f8\r\n-----Function_FixedString, 0x000056027ee54848\r\n------ExpressionList, 0x000056027ee549a8\r\n-------Function_lambda, 0x000056027ed9a318\r\n--------ExpressionList, 0x000056027ed9a478\r\n---------Function_lambda, 0x000056027ef4c998\r\n----------ExpressionList, 0x000056027ef4caf8\r\n-----------Function_tuple, 0x000056027ee59698\r\n------------ExpressionList, 0x000056027eea23c8\r\n-------------Identifier_x, 0x000056027ee6a4a8\r\n-------------Identifier_x, 0x000056027ee736d8\r\n-----------Function_plus, 0x000056027ef4c838\r\n------------ExpressionList, 0x000056027ee6a638\r\n-------------Function_lambda, 0x000056027ee289c8\r\n--------------ExpressionList, 0x000056027ee28b28\r\n---------------Function_tuple, 0x000056027ee73a18\r\n----------------ExpressionList, 0x000056027ee595a8\r\n-----------------Identifier_x, 0x000056027ef72808\r\n---------------Function_plus, 0x000056027ee28798\r\n----------------ExpressionList, 0x000056027ee288f8\r\n-----------------Function_Tuple, 0x000056027ee73e98\r\n------------------ExpressionList, 0x000056027ee59ca8\r\n-------------------Identifier_Date32, 0x000056027ee73888\r\n-----------------Literal_Float64_3.4028234663852886e38, 0x000056027ee28628\r\n-------------Function_plus, 0x000056027ee28d48\r\n--------------ExpressionList, 0x000056027ee29028\r\n---------------Function_tuple, 0x000056027ee28ea8\r\n----------------ExpressionList, 0x000056027ee28c18\r\n-----------------Identifier_DateTime, 0x000056027ee73d08\r\n---------------Identifier_bad_skip_idx__fuzz_39, 0x000056027ef4c518\r\n-------------Identifier_x, 0x000056027ef4c6a8\r\n-------------Literal_Int64_-2147483647, 0x000056027ee73b78\r\n---------Function_plus, 0x000056027ed9a0e8\r\n----------ExpressionList, 0x000056027ed9a248\r\n-----------Literal_UInt64_10, 0x000056027ef4ce48\r\n-----------Identifier_bad_skip_idx__fuzz_13, 0x000056027ee73ff8\r\n-----------Function_LowCardinality, 0x000056027ed99eb8\r\n------------ExpressionList, 0x000056027ed9a018\r\n-------------Function_FixedString, 0x000056027ed99c88\r\n--------------ExpressionList, 0x000056027ed99de8\r\n---------------Function_lambda, 0x000056027ef3b9b8\r\n----------------ExpressionList, 0x000056027efc8d68\r\n-----------------Function_tuple, 0x000056027ef3b858\r\n------------------ExpressionList, 0x000056027ef4cbe8\r\n-------------------Identifier_UInt8, 0x000056027ef4ccb8\r\n-------------------Identifier_DateTime, 0x000056027ef3b368\r\n-------------------Identifier_UInt128, 0x000056027ef3b518\r\n-------------------Identifier_x, 0x000056027ef3b6c8\r\n---------------Function_plus, 0x000056027ed99b28\r\n----------------ExpressionList, 0x000056027ed998c8\r\n-----------------Function_tuple, 0x000056027eee6708\r\n------------------ExpressionList, 0x000056027eee64a8\r\n-------------------Function_lambda, 0x000056027eee6258\r\n--------------------ExpressionList, 0x000056027eee63b8\r\n---------------------Function_tuple, 0x000056027efc9588\r\n----------------------ExpressionList, 0x000056027efc8fc8\r\n-----------------------Identifier_bad_skip_idx__fuzz_36, 0x000056027efc9098\r\n-----------------------Identifier_bad_skip_idx, 0x000056027efc9248\r\n-----------------------Identifier_x, 0x000056027efc93f8\r\n---------------------Function_plus, 0x000056027eee60f8\r\n----------------------ExpressionList, 0x000056027eee6028\r\n-----------------------Function_LowCardinality, 0x000056027eee5df8\r\n------------------------ExpressionList, 0x000056027eee5f58\r\n-------------------------Function_FixedString, 0x000056027eee5c98\r\n--------------------------ExpressionList, 0x000056027efc9708\r\n---------------------------Literal_UInt64_100, 0x000056027eee5b28\r\n-----------------------Identifier_bad_skip_idx__fuzz_39, 0x000056027efc97d8\r\n-------------------Identifier_DateTime, 0x000056027eee6578\r\n-----------------Identifier_bad_skip_idx__fuzz_39, 0x000056027ed99998\r\n---------------Literal_UInt64_1025, 0x000056027ef3b1d8\r\n-------Function_plus, 0x000056027ed9a7c8\r\n--------ExpressionList, 0x000056027ed9aa88\r\n---------Function_tuple, 0x000056027ed9a928\r\n----------ExpressionList, 0x000056027ed9a568\r\n-----------Literal_Int64_-9223372036854775807, 0x000056027efc8e38\r\n---------Identifier_x, 0x000056027ed9a638\r\n---------Literal_Int64_-9223372036854775807, 0x000056027ee546d8\r\n'\r\nText-2 (AST-2 formatted):\r\n'CREATE OR REPLACE FUNCTION `02101_test_function` AS x -> (x + FixedString(((x, x) -> plus(x -> (Tuple(Date32) + 3.4028234663852886e38), tuple(DateTime) + bad_skip_idx__fuzz_39, x, -2147483647)) -> plus(10, bad_skip_idx__fuzz_13, LowCardinality(FixedString(lambda((UInt8, DateTime, UInt128, x)), ((bad_skip_idx__fuzz_36, bad_skip_idx, x) -> (LowCardinality(FixedString(100)) + bad_skip_idx__fuzz_39), DateTime) + bad_skip_idx__fuzz_39, 1025))), plus(tuple(-9223372036854775807), x, -9223372036854775807)))'\r\nAST-3 (Text-2 parsed):\r\n''\r\nText-3 (AST-3 formatted):\r\n''\r\nText-3 must be equal to Text-2, but it is not.\r\n```",
  "created_at": "2024-02-15T05:55:22Z"
}