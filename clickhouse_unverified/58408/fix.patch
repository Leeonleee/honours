diff --git a/src/AggregateFunctions/AggregateFunctionSumMap.cpp b/src/AggregateFunctions/AggregateFunctionSumMap.cpp
index 9f0873a6c9c4..629dfe9f0fc5 100644
--- a/src/AggregateFunctions/AggregateFunctionSumMap.cpp
+++ b/src/AggregateFunctions/AggregateFunctionSumMap.cpp
@@ -545,7 +545,28 @@ class AggregateFunctionSumMapFiltered final :
         }
     }
 
-    bool keepKey(const Field & key) const { return keys_to_keep.contains(key); }
+    bool keepKey(const Field & key) const
+    {
+        if (keys_to_keep.contains(key))
+            return true;
+
+        // Determine whether the numerical value of the key can have both types (UInt or Int),
+        // and use the other type with the same numerical value for keepKey verification.
+        if (key.getType() == Field::Types::UInt64)
+        {
+            const auto & value = key.safeGet<const UInt64 &>();
+            if (value <= std::numeric_limits<Int64>::max())
+                return keys_to_keep.contains(Field(Int64(value)));
+        }
+        else if (key.getType() == Field::Types::Int64)
+        {
+            const auto & value = key.safeGet<const Int64 &>();
+            if (value >= 0)
+                return keys_to_keep.contains(Field(UInt64(value)));
+        }
+
+        return false;
+    }
 };
 
 
