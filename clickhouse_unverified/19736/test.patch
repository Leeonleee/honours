diff --git a/tests/queries/0_stateless/00945_bloom_filter_index.sql b/tests/queries/0_stateless/00945_bloom_filter_index.sql
index 82321a75c679..ad9c807fc5a6 100644
--- a/tests/queries/0_stateless/00945_bloom_filter_index.sql
+++ b/tests/queries/0_stateless/00945_bloom_filter_index.sql
@@ -163,23 +163,23 @@ DROP TABLE IF EXISTS bloom_filter_lc_null_types_test;
 DROP TABLE IF EXISTS bloom_filter_array_lc_null_types_test;
 
 CREATE TABLE bloom_filter_array_lc_null_types_test (
-    order_key   Array(LowCardinality(Nullable((UInt64)))),
-
-    i8 Array(LowCardinality(Nullable((Int8)))),
-    i16 Array(LowCardinality(Nullable((Int16)))),
-    i32 Array(LowCardinality(Nullable((Int32)))),
-    i64 Array(LowCardinality(Nullable((Int64)))),
-    u8 Array(LowCardinality(Nullable((UInt8)))),
-    u16 Array(LowCardinality(Nullable((UInt16)))),
-    u32 Array(LowCardinality(Nullable((UInt32)))),
-    u64 Array(LowCardinality(Nullable((UInt64)))),
-    f32 Array(LowCardinality(Nullable((Float32)))),
-    f64 Array(LowCardinality(Nullable((Float64)))),
-
-    date Array(LowCardinality(Nullable((Date)))),
+    order_key   Array(LowCardinality(Nullable(UInt64))),
+
+    i8 Array(LowCardinality(Nullable(Int8))),
+    i16 Array(LowCardinality(Nullable(Int16))),
+    i32 Array(LowCardinality(Nullable(Int32))),
+    i64 Array(LowCardinality(Nullable(Int64))),
+    u8 Array(LowCardinality(Nullable(UInt8))),
+    u16 Array(LowCardinality(Nullable(UInt16))),
+    u32 Array(LowCardinality(Nullable(UInt32))),
+    u64 Array(LowCardinality(Nullable(UInt64))),
+    f32 Array(LowCardinality(Nullable(Float32))),
+    f64 Array(LowCardinality(Nullable(Float64))),
+
+    date Array(LowCardinality(Nullable(Date))),
     date_time Array(LowCardinality(Nullable(DateTime('Europe/Moscow')))),
 
-    str Array(LowCardinality(Nullable((String)))),
+    str Array(LowCardinality(Nullable(String))),
     fixed_string Array(LowCardinality(Nullable(FixedString(5)))),
     INDEX idx (i8, i16, i32, i64, u8, u16, u32, u64, f32, f64, date, date_time, str, fixed_string)
     TYPE bloom_filter GRANULARITY 1)
@@ -286,7 +286,7 @@ SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(fixed_string
 DROP TABLE IF EXISTS bloom_filter_array_lc_null_types_test;
 
 DROP TABLE IF EXISTS bloom_filter_array_offsets_lc_str;
-CREATE TABLE bloom_filter_array_offsets_lc_str (order_key int, str Array(LowCardinality((String))), INDEX idx str TYPE bloom_filter(1.) GRANULARITY 1024) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 1024;
+CREATE TABLE bloom_filter_array_offsets_lc_str (order_key int, str Array(LowCardinality(String)), INDEX idx str TYPE bloom_filter(1.) GRANULARITY 1024) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 1024;
 INSERT INTO bloom_filter_array_offsets_lc_str SELECT number AS i, if(i%2, ['value'], []) FROM system.numbers LIMIT 10000;
 SELECT count() FROM bloom_filter_array_offsets_lc_str WHERE has(str, 'value');
 DROP TABLE IF EXISTS bloom_filter_array_offsets_lc_str;
diff --git a/tests/queries/0_stateless/01414_low_cardinality_nullable.sql b/tests/queries/0_stateless/01414_low_cardinality_nullable.sql
index 9a554ead7763..596e90adfd66 100644
--- a/tests/queries/0_stateless/01414_low_cardinality_nullable.sql
+++ b/tests/queries/0_stateless/01414_low_cardinality_nullable.sql
@@ -1,7 +1,7 @@
 DROP TABLE IF EXISTS lc_nullable;
 
 CREATE TABLE lc_nullable (
-    order_key   Array(LowCardinality(Nullable((UInt64)))),
+    order_key   Array(LowCardinality(Nullable(UInt64))),
 
     i8  Array(LowCardinality(Nullable(Int8))),
     i16 Array(LowCardinality(Nullable(Int16))),
@@ -14,10 +14,10 @@ CREATE TABLE lc_nullable (
     f32 Array(LowCardinality(Nullable(Float32))),
     f64 Array(LowCardinality(Nullable(Float64))),
 
-    date Array(LowCardinality(Nullable((Date)))),
+    date Array(LowCardinality(Nullable(Date))),
     date_time Array(LowCardinality(Nullable(DateTime('Europe/Moscow')))),
 
-    str Array(LowCardinality(Nullable((String)))),
+    str Array(LowCardinality(Nullable(String))),
     fixed_string Array(LowCardinality(Nullable(FixedString(5))))
 ) ENGINE = MergeTree() ORDER BY order_key;
 
diff --git a/tests/queries/0_stateless/01675_data_type_coroutine.reference b/tests/queries/0_stateless/01675_data_type_coroutine.reference
new file mode 100644
index 000000000000..7326d9603970
--- /dev/null
+++ b/tests/queries/0_stateless/01675_data_type_coroutine.reference
@@ -0,0 +1,1 @@
+Ok
diff --git a/tests/queries/0_stateless/01675_data_type_coroutine.sh b/tests/queries/0_stateless/01675_data_type_coroutine.sh
new file mode 100755
index 000000000000..781e43e41346
--- /dev/null
+++ b/tests/queries/0_stateless/01675_data_type_coroutine.sh
@@ -0,0 +1,16 @@
+#!/usr/bin/env bash
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+I=0
+while true
+do
+    I=$((I + 1))
+    TYPE=$(perl -e "print 'Array(' x $I; print 'UInt8'; print ')' x $I")
+    ${CLICKHOUSE_CLIENT} --max_parser_depth 1000000 --query "SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x $TYPE', 1, 1, 1)) LIMIT 1 FORMAT Null" 2>&1 | grep -q -F 'Maximum parse depth' && break;
+done
+
+#echo "I = ${I}"
+echo 'Ok'
diff --git a/tests/queries/0_stateless/arcadia_skip_list.txt b/tests/queries/0_stateless/arcadia_skip_list.txt
index 871d429e0371..253eab720af5 100644
--- a/tests/queries/0_stateless/arcadia_skip_list.txt
+++ b/tests/queries/0_stateless/arcadia_skip_list.txt
@@ -196,4 +196,5 @@
 01181_db_atomic_drop_on_cluster
 01658_test_base64Encode_mysql_compatibility
 01659_test_base64Decode_mysql_compatibility
+01675_data_type_coroutine
 01671_aggregate_function_group_bitmap_data
