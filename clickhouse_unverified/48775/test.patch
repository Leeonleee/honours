diff --git a/tests/integration/test_executable_dictionary/dictionaries/executable_missing_strict_check_dictionary.xml b/tests/integration/test_executable_dictionary/dictionaries/executable_missing_strict_check_dictionary.xml
new file mode 100644
index 000000000000..8562851e69c6
--- /dev/null
+++ b/tests/integration/test_executable_dictionary/dictionaries/executable_missing_strict_check_dictionary.xml
@@ -0,0 +1,29 @@
+<dictionaries>
+  <dictionary>
+    <name>executable_input_missing_executable</name>
+    <source>
+      <executable>
+        <!-- OOPS! executable not found -->
+        <command>executable_not_found</command>
+        <format>CSV</format>
+      </executable>
+    </source>
+    <lifetime>
+      <min>86400</min>
+      <max>90000</max>
+    </lifetime>
+    <layout>
+      <flat />
+    </layout>
+    <structure>
+        <id>
+            <name>input</name>
+        </id>
+        <attribute>
+            <name>result</name>
+            <type>String</type>
+            <null_value></null_value>
+        </attribute>
+    </structure>
+  </dictionary>
+</dictionaries>
diff --git a/tests/integration/test_executable_dictionary/test.py b/tests/integration/test_executable_dictionary/test.py
index 43e6ec0a8000..22f3442bb959 100644
--- a/tests/integration/test_executable_dictionary/test.py
+++ b/tests/integration/test_executable_dictionary/test.py
@@ -217,33 +217,21 @@ def test_executable_implicit_input_argument_python(started_cluster):
 
 def test_executable_input_signalled_python(started_cluster):
     skip_test_msan(node)
-    assert (
-        node.query(
-            "SELECT dictGet('executable_input_signalled_python', 'result', toUInt64(1))"
-        )
-        == "Default result
"
+    assert node.query_and_get_error(
+        "SELECT dictGet('executable_input_signalled_python', 'result', toUInt64(1))"
     )
-    assert (
-        node.query(
-            "SELECT dictGet('executable_input_signalled_pool_python', 'result', toUInt64(1))"
-        )
-        == "Default result
"
+    assert node.query_and_get_error(
+        "SELECT dictGet('executable_input_signalled_pool_python', 'result', toUInt64(1))"
     )
 
 
 def test_executable_implicit_input_signalled_python(started_cluster):
     skip_test_msan(node)
-    assert (
-        node.query(
-            "SELECT dictGet('executable_implicit_input_signalled_python', 'result', toUInt64(1))"
-        )
-        == "Default result
"
+    assert node.query_and_get_error(
+        "SELECT dictGet('executable_implicit_input_signalled_python', 'result', toUInt64(1))"
     )
-    assert (
-        node.query(
-            "SELECT dictGet('executable_implicit_input_signalled_pool_python', 'result', toUInt64(1))"
-        )
-        == "Default result
"
+    assert node.query_and_get_error(
+        "SELECT dictGet('executable_implicit_input_signalled_pool_python', 'result', toUInt64(1))"
     )
 
 
@@ -482,3 +470,23 @@ def test_executable_source_updated_python(started_cluster):
         )
         == "Value 1 1
"
     )
+
+
+def test_executable_source_exit_code_check(started_cluster):
+    skip_test_msan(node)
+    assert "DB::Exception" in node.query_and_get_error(
+        "SELECT * FROM dictionary(executable_input_missing_executable) ORDER BY input"
+    )
+    assert "DB::Exception" in node.query_and_get_error(
+        "SELECT dictGet('executable_input_missing_executable', 'result', toUInt64(1))"
+    )
+
+    assert (
+        node.query(
+            "SELECT status FROM system.dictionaries WHERE name='executable_input_missing_executable'"
+        )
+        == "FAILED
"
+    )
+    assert "DB::Exception" in node.query(
+        "SELECT last_exception FROM system.dictionaries WHERE name='executable_input_missing_executable'"
+    )
