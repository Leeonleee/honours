{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 39404,
  "instance_id": "ClickHouse__ClickHouse-39404",
  "issue_numbers": [
    "39395"
  ],
  "base_commit": "316528817b2458fd37960b965f9eef10b4d13535",
  "patch": "diff --git a/programs/local/LocalServer.cpp b/programs/local/LocalServer.cpp\nindex 1a93e43c730d..aa96551d37c6 100644\n--- a/programs/local/LocalServer.cpp\n+++ b/programs/local/LocalServer.cpp\n@@ -323,12 +323,28 @@ void LocalServer::setupUsers()\n     auto & access_control = global_context->getAccessControl();\n     access_control.setNoPasswordAllowed(config().getBool(\"allow_no_password\", true));\n     access_control.setPlaintextPasswordAllowed(config().getBool(\"allow_plaintext_password\", true));\n-    if (config().has(\"users_config\") || config().has(\"config-file\") || fs::exists(\"config.xml\"))\n+    if (config().has(\"config-file\") || fs::exists(\"config.xml\"))\n     {\n-        const auto users_config_path = config().getString(\"users_config\", config().getString(\"config-file\", \"config.xml\"));\n-        ConfigProcessor config_processor(users_config_path);\n-        const auto loaded_config = config_processor.loadConfig();\n-        users_config = loaded_config.configuration;\n+        String config_path = config().getString(\"config-file\", \"\");\n+        bool has_user_directories = config().has(\"user_directories\");\n+        const auto config_dir = fs::path{config_path}.remove_filename().string();\n+        String users_config_path = config().getString(\"users_config\", \"\");\n+\n+        if (users_config_path.empty() && has_user_directories)\n+        {\n+            users_config_path = config().getString(\"user_directories.users_xml.path\");\n+            if (fs::path(users_config_path).is_relative() && fs::exists(fs::path(config_dir) / users_config_path))\n+                users_config_path = fs::path(config_dir) / users_config_path;\n+        }\n+\n+        if (users_config_path.empty())\n+            users_config = getConfigurationFromXMLString(minimal_default_user_xml);\n+        else\n+        {\n+            ConfigProcessor config_processor(users_config_path);\n+            const auto loaded_config = config_processor.loadConfig();\n+            users_config = loaded_config.configuration;\n+        }\n     }\n     else\n         users_config = getConfigurationFromXMLString(minimal_default_user_xml);\n@@ -338,7 +354,6 @@ void LocalServer::setupUsers()\n         throw Exception(\"Can't load config for users\", ErrorCodes::CANNOT_LOAD_CONFIG);\n }\n \n-\n void LocalServer::connect()\n {\n     connection_parameters = ConnectionParameters(config());\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02360_clickhouse_local_config-option.reference b/tests/queries/0_stateless/02360_clickhouse_local_config-option.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02360_clickhouse_local_config-option.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/02360_clickhouse_local_config-option.sh b/tests/queries/0_stateless/02360_clickhouse_local_config-option.sh\nnew file mode 100755\nindex 000000000000..df0bdf38b4d2\n--- /dev/null\n+++ b/tests/queries/0_stateless/02360_clickhouse_local_config-option.sh\n@@ -0,0 +1,54 @@\n+#!/usr/bin/env bash\n+# Tags: no-parallel\n+set -e\n+\n+CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CUR_DIR\"/../shell_config.sh\n+\n+echo \"<clickhouse>\n+    <logger>\n+        <level>trace</level>\n+        <console>true</console>\n+    </logger>\n+\n+    <tcp_port>9000</tcp_port>\n+\n+    <path>./</path>\n+\n+    <mark_cache_size>0</mark_cache_size>\n+    <user_directories>\n+        <users_xml>\n+            <!-- Path to configuration file with predefined users. -->\n+            <path>users.xml</path>\n+        </users_xml>\n+    </user_directories>\n+</clickhouse>\" > $CUR_DIR/config.xml\n+\n+echo        \"<clickhouse>\n+            <profiles>\n+                <default></default>\n+            </profiles>\n+            <users>\n+                <default>\n+                    <password></password>\n+                    <networks>\n+                        <ip>::/0</ip>\n+                    </networks>\n+                    <profile>default</profile>\n+                    <quota>default</quota>\n+                </default>\n+            </users>\n+            <quotas>\n+                <default></default>\n+            </quotas>\n+        </clickhouse>\" > $CUR_DIR/users.xml\n+\n+local_opts=(\n+    \"--config-file=$CUR_DIR/config.xml\"\n+    \"--send_logs_level=none\")\n+\n+${CLICKHOUSE_LOCAL} \"${local_opts[@]}\" --query 'Select 1' |& grep -v -e 'Processing configuration file'\n+\n+rm -rf $CUR_DIR/users.xml\n+rm -rf $CUR_DIR/config.xml\n",
  "problem_statement": "Clickhouse local doesn't come up with --config-file option\nI am unable to start the Clickhouse-local with --config-file option , However clickhouse-server is running with same configuration xml files.\r\n\r\nI am getting below error :\r\n<img width=\"1247\" alt=\"image\" src=\"https://user-images.githubusercontent.com/86018844/179818457-c75ab326-7169-4f4e-9cbb-3aa3b08c77e8.png\">\r\n\r\nAfter debugging , It seems that Clickhouse-local is searching for \"<users_config>\" in config() and if not , setting the user_config_path to config.xml. Since config.xml doesn't have any user related storage info, throwing error.\r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/programs/local/LocalServer.cpp#L328\r\n\r\nAdding <users_config> in config.xml loaded the user configuration successfully , However it fails with default database exists error. Since Clickhouse-local already creates default database as part of DatabaseMemory and try to create database again here.\r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/src/Interpreters/loadMetadata.cpp#L89\r\n<img width=\"1247\" alt=\"image\" src=\"https://user-images.githubusercontent.com/86018844/179818409-8e72eea4-ed19-4187-b0a6-45a014e2e7a5.png\">\r\n\r\n\r\nPS: , In clickhouse-server, CH automatically searches for user.xml in same path as in config.xml. There is no constraint with <users_config> tag .\n",
  "hints_text": "@kssenii , I tried debugging and came up with the fix  where user_config_path will be identified as in CH server processing something like below.\r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/src/Access/AccessControl.cpp#L361.\r\n\r\nHowever for the second  Issue where default_database is defined in config.xml and try to create default database again based on <default_database> tag. To separate the database from CH server ,  we can append \" _local\" for default_database entry to separate it from clickhouse-server. \r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/programs/local/LocalServer.cpp#L578\r\n\r\n    std::string default_database = config().getString(\"default_database\", \"\");\r\n    default_database = default_database + \"_local\";   \r\n    \r\nPlease suggest your recommendations. ",
  "created_at": "2022-07-20T04:40:51Z"
}