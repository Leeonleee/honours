{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 63377,
  "instance_id": "ClickHouse__ClickHouse-63377",
  "issue_numbers": [
    "63359"
  ],
  "base_commit": "4b1af861d8627a2c9d32735cab9b7887bf0e4f33",
  "patch": "diff --git a/src/Interpreters/executeQuery.cpp b/src/Interpreters/executeQuery.cpp\nindex c785de61a182..c471035df1da 100644\n--- a/src/Interpreters/executeQuery.cpp\n+++ b/src/Interpreters/executeQuery.cpp\n@@ -1522,9 +1522,16 @@ void executeQuery(\n             if (output_format)\n                 handle_exception_in_output_format(*output_format, format_name, context, output_format_settings);\n         }\n+        /// The timezone was already set before query was processed,\n+        /// But `session_timezone` setting could be modified in the query itself, so we update the value.\n+        result_details.timezone = DateLUT::instance().getTimeZone();\n         throw;\n     }\n \n+    /// The timezone was already set before query was processed,\n+    /// But `session_timezone` setting could be modified in the query itself, so we update the value.\n+    result_details.timezone = DateLUT::instance().getTimeZone();\n+\n     auto & pipeline = streams.pipeline;\n \n     std::unique_ptr<WriteBuffer> compressed_buffer;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00265_http_content_type_format_timezone.reference b/tests/queries/0_stateless/00265_http_content_type_format_timezone.reference\nindex 9de2c3d4ba4d..caf1c25eb6c1 100644\n--- a/tests/queries/0_stateless/00265_http_content_type_format_timezone.reference\n+++ b/tests/queries/0_stateless/00265_http_content_type_format_timezone.reference\n@@ -19,3 +19,9 @@\n < Content-Type: application/octet-stream\n < X-ClickHouse-Format: RowBinary\n < X-ClickHouse-Timezone: CLICKHOUSE_TIMEZONE\n+< X-ClickHouse-Timezone: Europe/Berlin\n+< X-ClickHouse-Timezone: Africa/Cairo\n+< X-ClickHouse-Timezone: Europe/Berlin\n+< X-ClickHouse-Timezone: America/Denver\n+< X-ClickHouse-Timezone: Europe/Lisbon\n+< X-ClickHouse-Timezone: Europe/Lisbon\ndiff --git a/tests/queries/0_stateless/00265_http_content_type_format_timezone.sh b/tests/queries/0_stateless/00265_http_content_type_format_timezone.sh\nindex 74cbbe7f71d8..9ca801a14174 100755\n--- a/tests/queries/0_stateless/00265_http_content_type_format_timezone.sh\n+++ b/tests/queries/0_stateless/00265_http_content_type_format_timezone.sh\n@@ -13,3 +13,16 @@ ${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL}\" --data-binary @- <<< \"SELECT 1 FORMA\n ${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL}\" --data-binary @- <<< \"SELECT 1 FORMAT Vertical\"     2>&1 | grep -e '< Content-Type' -e '< X-ClickHouse-Format' -e '< X-ClickHouse-Timezone' | sed \"s|$CLICKHOUSE_TIMEZONE_ESCAPED|CLICKHOUSE_TIMEZONE|\" | sed 's/\\r$//' | sort;\n ${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL}\" --data-binary @- <<< \"SELECT 1 FORMAT Native\"       2>&1 | grep -e '< Content-Type' -e '< X-ClickHouse-Format' -e '< X-ClickHouse-Timezone' | sed \"s|$CLICKHOUSE_TIMEZONE_ESCAPED|CLICKHOUSE_TIMEZONE|\" | sed 's/\\r$//' | sort;\n ${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL}\" --data-binary @- <<< \"SELECT 1 FORMAT RowBinary\"    2>&1 | grep -e '< Content-Type' -e '< X-ClickHouse-Format' -e '< X-ClickHouse-Timezone' | sed \"s|$CLICKHOUSE_TIMEZONE_ESCAPED|CLICKHOUSE_TIMEZONE|\" | sed 's/\\r$//' | sort;\n+\n+${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL}\" --data-binary @- <<< \"SELECT timezone() SETTINGS session_timezone='Europe/Berlin'\" 2>&1 | grep '< X-ClickHouse-Timezone' | grep -v 'GET' | tr -d '\\r';\n+${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL}\" --data-binary @- <<< \"SELECT timezone() SETTINGS session_timezone='Africa/Cairo'\"  2>&1 | grep '< X-ClickHouse-Timezone' | grep -v 'GET' | tr -d '\\r';\n+\n+# Not pretty but working way of removing randomized session_timezone for this part of test\n+CLICKHOUSE_URL_WO_SESSION_TZ=$(echo \"${CLICKHOUSE_URL}\" |sed 's/\\&session_timezone\\=[A-Za-z0-9\\/\\%\\_\\-\\+\\-]*//g' | sed 's/\\?session_timezone\\=[A-Za-z0-9\\/\\%\\_\\-\\+\\-]*\\&/\\?/g');\n+\n+${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL_WO_SESSION_TZ}&session_timezone=Europe/Berlin&query=SELECT+timezone()\" 2>&1 | grep '< X-ClickHouse-Timezone' | grep -v 'GET' | tr -d '\\r';\n+${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL_WO_SESSION_TZ}&session_timezone=America/Denver&query=SELECT+timezone()\" 2>&1 | grep '< X-ClickHouse-Timezone' | grep -v 'GET' | tr -d '\\r';\n+# check that proper X-ClickHouse-Timezone returned on query fail\n+${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL_WO_SESSION_TZ}&session_timezone=UTC&query=SELECT+intDiv(1,+(3600-timeZoneOffset('2024-05-06+12:00:00'::DateTime)))+SETTINGS+session_timezone+=+'Europe/Lisbon'\" 2>&1 | grep '< X-ClickHouse-Timezone' | grep -v 'GET' | tr -d '\\r';\n+# main query's session_timezone shall be set in header\n+${CLICKHOUSE_CURL} -vsS \"${CLICKHOUSE_URL_WO_SESSION_TZ}&session_timezone=America/New_York&query=SELECT+1,(SELECT+1+SETTINGS+session_timezone='UTC')+SETTINGS+session_timezone='Europe/Lisbon'\" 2>&1 | grep '< X-ClickHouse-Timezone' | grep -v 'GET' | tr -d '\\r';\ndiff --git a/tests/queries/0_stateless/02737_timezone_setting.reference b/tests/queries/0_stateless/02737_session_timezone.reference\nsimilarity index 84%\nrename from tests/queries/0_stateless/02737_timezone_setting.reference\nrename to tests/queries/0_stateless/02737_session_timezone.reference\nindex 578aec4e3162..6c6fc2aa93ad 100644\n--- a/tests/queries/0_stateless/02737_timezone_setting.reference\n+++ b/tests/queries/0_stateless/02737_session_timezone.reference\n@@ -2,6 +2,7 @@ Pacific/Pitcairn\tPacific/Pitcairn\n Asia/Novosibirsk\tAsia/Novosibirsk\n 2022-12-12 17:23:23\n 2022-12-13 07:23:23.123\n+2022-12-13 07:23:23\t2022-12-13 07:23:23\n 2002-12-12 23:23:23\t2002-12-12 23:23:23\n 2002-12-12 23:23:23.123\t2002-12-12 23:23:23.123\n 2000-01-01 01:00:00\ndiff --git a/tests/queries/0_stateless/02737_timezone_setting.sql b/tests/queries/0_stateless/02737_session_timezone.sql\nsimilarity index 83%\nrename from tests/queries/0_stateless/02737_timezone_setting.sql\nrename to tests/queries/0_stateless/02737_session_timezone.sql\nindex 8543e2a2c82e..1afadbde6df6 100644\n--- a/tests/queries/0_stateless/02737_timezone_setting.sql\n+++ b/tests/queries/0_stateless/02737_session_timezone.sql\n@@ -9,6 +9,9 @@ SELECT timezone(), timezoneOf(now());\n SELECT toDateTime(toDateTime('2022-12-12 23:23:23'), 'Europe/Zurich');\n SELECT toDateTime64(toDateTime64('2022-12-12 23:23:23.123', 3), 3, 'Europe/Zurich') SETTINGS session_timezone = 'America/Denver';\n \n+-- subquery shall use main query's session_timezone\n+SELECT toDateTime(toDateTime('2022-12-12 23:23:23'), 'Europe/Zurich'), (SELECT toDateTime(toDateTime('2022-12-12 23:23:23'), 'Europe/Zurich') SETTINGS session_timezone = 'Europe/Helsinki') SETTINGS session_timezone = 'America/Denver';\n+\n -- test proper serialization\n SELECT toDateTime('2002-12-12 23:23:23') AS dt, toString(dt) SETTINGS session_timezone = 'Asia/Phnom_Penh';\n SELECT toDateTime64('2002-12-12 23:23:23.123', 3) AS dt64, toString(dt64) SETTINGS session_timezone = 'Asia/Phnom_Penh';\n",
  "problem_statement": "session_timezone is not reflected in X-ClickHouse-Timezone\n```sql\r\nselect timezone() settings session_timezone= 'Europe/Berlin';\r\n   \u250c\u2500timezone()\u2500\u2500\u2500\u2500\u2510\r\n1. \u2502 Europe/Berlin \u2502 -- OK\r\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n\r\n```sql\r\n(curl -v \"http://localhost:8123/?query=select+1+settings+session_timezone='Europe/Berlin'\") 2>&1 |grep Timezone\r\n< X-ClickHouse-Timezone: Etc/UTC   --- Not OK\r\n```\r\n\r\nexpected: X-ClickHouse-Timezone: Europe/Berlin\n",
  "hints_text": "This header was indroduced before 'session_timezone', and is not related\n\nAFAIR it means server's own timezone\n>This header was indroduced before 'session_timezone', and is not related\r\n\r\nI have no more words. I gonna kill myself.\n@zvonand read this https://github.com/ClickHouse/clickhouse-connect/issues/138#issuecomment-1472350299\r\n\r\nAlso we discussed it in the slack and Filimonov told us to add a test for X-ClickHouse-Timezone\n\n> I have no more words. I am gonna kill myself.\n\nWhy? There is a parameter in config.xml called 'timezone'. The header that is called 'timezone' reflects a parameter 'timezone'. It is not called X-Clickhouse-Session-timezone\n> @zvonand read this https://github.com/ClickHouse/clickhouse-connect/issues/138#issuecomment-1472350299\n\nWell, we keep these two things separately: timezone of a server and timezone of a session. Maybe we can introduce a different header that will reflect session_timezone?\n@zvonand Srsly? Guess why Clickhouse sends `X-ClickHouse-Timezone`, what is the purpose of this header? Why clients need it?\nFair enough. I'll do my best to fix it next week",
  "created_at": "2024-05-04T21:50:51Z"
}