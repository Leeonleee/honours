diff --git a/tests/queries/0_stateless/02967_prewhere_no_columns.reference b/tests/queries/0_stateless/02967_prewhere_no_columns.reference
new file mode 100644
index 000000000000..df1052546188
--- /dev/null
+++ b/tests/queries/0_stateless/02967_prewhere_no_columns.reference
@@ -0,0 +1,2 @@
+105
+105
diff --git a/tests/queries/0_stateless/02967_prewhere_no_columns.sql b/tests/queries/0_stateless/02967_prewhere_no_columns.sql
new file mode 100644
index 000000000000..efcc952caa23
--- /dev/null
+++ b/tests/queries/0_stateless/02967_prewhere_no_columns.sql
@@ -0,0 +1,51 @@
+CREATE TABLE t_02967
+(
+  `key` Date,
+  `value` UInt16
+)
+ENGINE = MergeTree
+ORDER BY key
+SETTINGS
+  index_granularity_bytes = 0 --8192 --, min_index_granularity_bytes = 2  
+ , index_granularity = 100
+ , min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0
+--
+--  , min_bytes_for_wide_part = 2
+AS SELECT
+  number,
+  repeat(toString(number), 5)
+FROM numbers(105.);
+
+
+
+-- Check with newly inserted data part. It's in-memory structured are filled at insert time.
+SELECT
+  count(ignore(*))
+FROM t_02967
+PREWHERE CAST(ignore() + 1 as UInt8)
+GROUP BY 
+  ignore(65535, *),
+  ignore(255, 256, *)
+SETTINGS
+ --send_logs_level='test', 
+ max_threads=1;
+
+
+
+-- Reload part form disk to check that in-meory structures where properly serilaized-deserialized
+DETACH TABLE t_02967;
+ATTACH TABLE t_02967;
+
+
+SELECT
+  count(ignore(*))
+FROM t_02967
+PREWHERE CAST(ignore() + 1 as UInt8)
+GROUP BY 
+  ignore(65535, *),
+  ignore(255, 256, *)
+SETTINGS
+ --send_logs_level='test', 
+ max_threads=1;
+
+DROP TABLE t_02967;
diff --git a/tests/queries/0_stateless/03198_non_adaptive_granularity_no_errors.reference b/tests/queries/0_stateless/03198_non_adaptive_granularity_no_errors.reference
new file mode 100644
index 000000000000..fcd78da1283d
--- /dev/null
+++ b/tests/queries/0_stateless/03198_non_adaptive_granularity_no_errors.reference
@@ -0,0 +1,2 @@
+1000000
+1000000
diff --git a/tests/queries/0_stateless/03198_non_adaptive_granularity_no_errors.sql b/tests/queries/0_stateless/03198_non_adaptive_granularity_no_errors.sql
new file mode 100644
index 000000000000..25798ef6d33f
--- /dev/null
+++ b/tests/queries/0_stateless/03198_non_adaptive_granularity_no_errors.sql
@@ -0,0 +1,12 @@
+DROP TABLE IF EXISTS data_02051__fuzz_24;
+
+CREATE TABLE data_02051__fuzz_24 (`key` Int16, `value` String) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity_bytes = 0, min_rows_for_wide_part = 0, min_bytes_for_wide_part=0  AS SELECT number, repeat(toString(number), 5) FROM numbers(1000000.);
+
+SELECT  count(ignore(*)) FROM data_02051__fuzz_24 PREWHERE materialize(1) GROUP BY ignore(*);
+
+detach table data_02051__fuzz_24;
+attach table data_02051__fuzz_24;
+
+SELECT  count(ignore(*)) FROM data_02051__fuzz_24 PREWHERE materialize(1) GROUP BY ignore(*);
+
+DROP TABLE data_02051__fuzz_24;
diff --git a/tests/queries/1_stateful/00166_explain_estimate.reference b/tests/queries/1_stateful/00166_explain_estimate.reference
index 71ddd6815812..85ecd0b9a71a 100644
--- a/tests/queries/1_stateful/00166_explain_estimate.reference
+++ b/tests/queries/1_stateful/00166_explain_estimate.reference
@@ -1,5 +1,5 @@
 test	hits	1	57344	7
-test	hits	1	8839168	1079
-test	hits	1	835584	102
+test	hits	1	8832938	1079
+test	hits	1	829354	102
 test	hits	1	8003584	977
 test	hits	2	581632	71
