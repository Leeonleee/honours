diff --git a/tests/integration/test_dictionaries_ddl/test.py b/tests/integration/test_dictionaries_ddl/test.py
index 3ea64383fbfd..d96d6864ba3e 100644
--- a/tests/integration/test_dictionaries_ddl/test.py
+++ b/tests/integration/test_dictionaries_ddl/test.py
@@ -288,6 +288,23 @@ def test_clickhouse_remote(started_cluster):
             time.sleep(0.5)
 
     node3.query("detach dictionary if exists test.clickhouse_remote")
+
+    with pytest.raises(QueryRuntimeException):
+        node3.query("""
+            CREATE DICTIONARY test.clickhouse_remote(
+                id UInt64,
+                SomeValue1 UInt8,
+                SomeValue2 String
+            )
+            PRIMARY KEY id
+            LAYOUT(FLAT())
+            SOURCE(CLICKHOUSE(HOST 'node4' PORT 9000 USER 'default' PASSWORD 'default' TABLE 'xml_dictionary_table' DB 'test'))
+            LIFETIME(MIN 1 MAX 10)
+            """)
+
+    node3.query("attach dictionary test.clickhouse_remote")
+    node3.query("drop dictionary test.clickhouse_remote")
+
     node3.query("""
         CREATE DICTIONARY test.clickhouse_remote(
             id UInt64,
diff --git a/tests/queries/0_stateless/01018_ddl_dictionaries_create.reference b/tests/queries/0_stateless/01018_ddl_dictionaries_create.reference
index e591300eddcc..a4e2f380eb84 100644
--- a/tests/queries/0_stateless/01018_ddl_dictionaries_create.reference
+++ b/tests/queries/0_stateless/01018_ddl_dictionaries_create.reference
@@ -12,7 +12,10 @@ db_01018	dict1
 ==DROP DICTIONARY
 0
 =DICTIONARY in Memory DB
-0
+CREATE DICTIONARY memory_db.dict2
(
    `key_column` UInt64 DEFAULT 0 INJECTIVE,
    `second_column` UInt8 DEFAULT 1 EXPRESSION rand() % 222,
    `third_column` String DEFAULT \'qqq\'
)
PRIMARY KEY key_column
SOURCE(CLICKHOUSE(HOST \'localhost\' PORT tcpPort() USER \'default\' TABLE \'table_for_dict\' PASSWORD \'\' DB \'database_for_dict_01018\'))
LIFETIME(MIN 1 MAX 10)
LAYOUT(FLAT())
+dict2
+1
+memory_db	dict2
 =DICTIONARY in Lazy DB
 =DROP DATABASE WITH DICTIONARY
 dict4
diff --git a/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql b/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql
index f7d34071eb08..dd62f1451a83 100644
--- a/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql
+++ b/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql
@@ -89,9 +89,9 @@ CREATE DICTIONARY memory_db.dict2
 PRIMARY KEY key_column
 SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'database_for_dict_01018'))
 LIFETIME(MIN 1 MAX 10)
-LAYOUT(FLAT()); -- {serverError 48}
+LAYOUT(FLAT());
 
-SHOW CREATE DICTIONARY memory_db.dict2; -- {serverError 487}
+SHOW CREATE DICTIONARY memory_db.dict2;
 
 SHOW DICTIONARIES FROM memory_db LIKE 'dict2';
 
@@ -114,7 +114,7 @@ CREATE DICTIONARY lazy_db.dict3
 PRIMARY KEY key_column, second_column
 SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'database_for_dict_01018'))
 LIFETIME(MIN 1 MAX 10)
-LAYOUT(COMPLEX_KEY_HASHED()); -- {serverError 48}
+LAYOUT(COMPLEX_KEY_HASHED()); --{serverError 1}
 
 DROP DATABASE IF EXISTS lazy_db;
 
diff --git a/tests/queries/0_stateless/01190_full_attach_syntax.sql b/tests/queries/0_stateless/01190_full_attach_syntax.sql
index 62e77f9870ee..eb739782e5fd 100644
--- a/tests/queries/0_stateless/01190_full_attach_syntax.sql
+++ b/tests/queries/0_stateless/01190_full_attach_syntax.sql
@@ -18,7 +18,7 @@ SHOW CREATE DICTIONARY test_01190.dict;
 CREATE TABLE log ENGINE = Log AS SELECT 'test' AS s;
 SHOW CREATE log;
 DETACH TABLE log;
-ATTACH DICTIONARY log; -- { serverError 487 }
+ATTACH DICTIONARY log; -- { serverError 80 }
 ATTACH TABLE log (s String) ENGINE = Log();
 SHOW CREATE log;
 SELECT * FROM log;
diff --git a/tests/queries/0_stateless/01191_rename_dictionary.sql b/tests/queries/0_stateless/01191_rename_dictionary.sql
index 3656d49f6e68..264c527ccca9 100644
--- a/tests/queries/0_stateless/01191_rename_dictionary.sql
+++ b/tests/queries/0_stateless/01191_rename_dictionary.sql
@@ -13,11 +13,15 @@ INSERT INTO test_01191._ VALUES (42, 'test');
 SELECT name, status FROM system.dictionaries WHERE database='test_01191';
 SELECT name, engine FROM system.tables WHERE database='test_01191' ORDER BY name;
 
-RENAME DICTIONARY test_01191.table TO test_01191.table1; -- {serverError 80}
-EXCHANGE TABLES test_01191.table AND test_01191.dict; -- {serverError 48}
+RENAME DICTIONARY test_01191.table TO test_01191.table1; -- {serverError 60}
+EXCHANGE TABLES test_01191.table AND test_01191.dict; -- {serverError 60}
 EXCHANGE TABLES test_01191.dict AND test_01191.table; -- {serverError 80}
 RENAME TABLE test_01191.dict TO test_01191.dict1; -- {serverError 80}
-RENAME DICTIONARY test_01191.dict TO default.dict1; -- {serverError 48}
+
+CREATE DATABASE dummy_db ENGINE=Atomic;
+RENAME DICTIONARY test_01191.dict TO dummy_db.dict1;
+RENAME DICTIONARY dummy_db.dict1 TO test_01191.dict;
+DROP DATABASE dummy_db;
 
 RENAME DICTIONARY test_01191.dict TO test_01191.dict1;
 
diff --git a/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.reference b/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.reference
new file mode 100644
index 000000000000..71c4a6050316
--- /dev/null
+++ b/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.reference
@@ -0,0 +1,3 @@
+1	First
+2	Second
+3	Third
diff --git a/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.sql b/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.sql
new file mode 100644
index 000000000000..baba8b5188e6
--- /dev/null
+++ b/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.sql
@@ -0,0 +1,30 @@
+DROP DATABASE IF EXISTS 01837_db;
+CREATE DATABASE 01837_db ENGINE = Memory;
+
+DROP TABLE IF EXISTS 01837_db.simple_key_dictionary_source;
+CREATE TABLE 01837_db.simple_key_dictionary_source
+(
+    id UInt64,
+    value String
+) ENGINE = TinyLog;
+
+INSERT INTO 01837_db.simple_key_dictionary_source VALUES (1, 'First');
+INSERT INTO 01837_db.simple_key_dictionary_source VALUES (2, 'Second');
+INSERT INTO 01837_db.simple_key_dictionary_source VALUES (3, 'Third');
+
+DROP DICTIONARY IF EXISTS 01837_db.simple_key_direct_dictionary;
+CREATE DICTIONARY 01837_db.simple_key_direct_dictionary
+(
+    id UInt64,
+    value String
+)
+PRIMARY KEY id
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DB '01837_db' TABLE 'simple_key_dictionary_source'))
+LAYOUT(DIRECT());
+
+SELECT * FROM 01837_db.simple_key_direct_dictionary;
+
+DROP DICTIONARY 01837_db.simple_key_direct_dictionary;
+DROP TABLE 01837_db.simple_key_dictionary_source;
+
+DROP DATABASE 01837_db;
