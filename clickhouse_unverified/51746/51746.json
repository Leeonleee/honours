{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 51746,
  "instance_id": "ClickHouse__ClickHouse-51746",
  "issue_numbers": [
    "48682"
  ],
  "base_commit": "e33dc02c8c226c58ced9faef2fcb8fa09d4c917a",
  "patch": "diff --git a/src/Processors/QueryPlan/Optimizations/optimizeReadInOrder.cpp b/src/Processors/QueryPlan/Optimizations/optimizeReadInOrder.cpp\nindex 655cb1fdb808..bec5708b7456 100644\n--- a/src/Processors/QueryPlan/Optimizations/optimizeReadInOrder.cpp\n+++ b/src/Processors/QueryPlan/Optimizations/optimizeReadInOrder.cpp\n@@ -175,6 +175,8 @@ static void appendExpression(ActionsDAGPtr & dag, const ActionsDAGPtr & expressi\n         dag->mergeInplace(std::move(*expression->clone()));\n     else\n         dag = expression->clone();\n+\n+    dag->projectInput(false);\n }\n \n /// This function builds a common DAG which is a merge of DAGs from Filter and Expression steps chain.\n@@ -235,15 +237,20 @@ void buildSortingDAG(QueryPlan::Node & node, ActionsDAGPtr & dag, FixedColumns &\n \n         const auto & array_joined_columns = array_join->arrayJoin()->columns;\n \n-        /// Remove array joined columns from outputs.\n-        /// Types are changed after ARRAY JOIN, and we can't use this columns anyway.\n-        ActionsDAG::NodeRawConstPtrs outputs;\n-        outputs.reserve(dag->getOutputs().size());\n-\n-        for (const auto & output : dag->getOutputs())\n+        if (dag)\n         {\n-            if (!array_joined_columns.contains(output->result_name))\n-                outputs.push_back(output);\n+            /// Remove array joined columns from outputs.\n+            /// Types are changed after ARRAY JOIN, and we can't use this columns anyway.\n+            ActionsDAG::NodeRawConstPtrs outputs;\n+            outputs.reserve(dag->getOutputs().size());\n+\n+            for (const auto & output : dag->getOutputs())\n+            {\n+                if (!array_joined_columns.contains(output->result_name))\n+                    outputs.push_back(output);\n+            }\n+\n+            dag->getOutputs() = std::move(outputs);\n         }\n     }\n }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02811_read_in_order_and_array_join_bug.reference b/tests/queries/0_stateless/02811_read_in_order_and_array_join_bug.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02811_read_in_order_and_array_join_bug.sql b/tests/queries/0_stateless/02811_read_in_order_and_array_join_bug.sql\nnew file mode 100644\nindex 000000000000..202f52d8b619\n--- /dev/null\n+++ b/tests/queries/0_stateless/02811_read_in_order_and_array_join_bug.sql\n@@ -0,0 +1,17 @@\n+drop table if exists test_array_joins;\n+drop table if exists v4test_array_joins;\n+create table test_array_joins\n+(\n+    id UInt64 default rowNumberInAllBlocks() + 1,\n+    arr_1 Array(String),\n+    arr_2 Array(String),\n+    arr_3 Array(String),\n+    arr_4 Array(String)\n+) engine = MergeTree order by id;\n+\n+insert into test_array_joins (id,arr_1, arr_2, arr_3, arr_4)\n+SELECT number,array(randomPrintableASCII(3)),array(randomPrintableASCII(3)),array(randomPrintableASCII(3)),array(randomPrintableASCII(3))\n+from numbers(1000);\n+create view v4test_array_joins as SELECT * from test_array_joins where id != 10;\n+select * from v4test_array_joins array join arr_1, arr_2, arr_3, arr_4 where match(arr_4,'a') and id < 100 order by id format Null settings optimize_read_in_order = 1;\n+\n",
  "problem_statement": "Cannot find column less(id, 100) in ActionsDAG result. (UNKNOWN_IDENTIFIER)\nGood afternoon, I ran into such a problem that I'm trying to select from a view and I'm catching an error. I found how to fix the error - turn off the optimization \"setting optimize_read_in_order\" , but in my opinion this setting should not throw an exception.\r\n\r\nversion Clickhouse 23.3.1.2823-lts\r\n\r\nexample:\r\nhttps://fiddle.clickhouse.com/66ae12fb-11ee-4684-b07f-531119686419\r\n\r\nor\r\n```\r\ndrop table if exists default.test_array_joins\r\n;\r\ncreate table default.test_array_joins\r\n(\r\n    id UInt64 default rowNumberInAllBlocks() + 1,\r\n    arr_1 Array(String),\r\n    arr_2 Array(String),\r\n    arr_3 Array(String),\r\n    arr_4 Array(String)\r\n) engine = MergeTree order by id\r\n;\r\ninsert into default.test_array_joins (id,arr_1, arr_2, arr_3, arr_4)\r\nSELECT number,array(randomPrintableASCII(3)),array(randomPrintableASCII(3)),array(randomPrintableASCII(3)),array(randomPrintableASCII(3))\r\nfrom numbers(1000)\r\n;\r\ncreate  or replace view default.v4test_array_joins as SELECT * from default.test_array_joins where id != 10\r\n;\r\nselect * from default.v4test_array_joins\r\narray join columns('^arr')\r\nwhere match(arr_4,'a')\r\n  and id < 100\r\nORDER by id limit 1 by arr_1 settings optimize_read_in_order = 1\r\n```\r\n\r\nAnother interesting case is if in the where clause add a known true condition first. It's work without errors!)\r\n```\r\nselect * from default.v4test_array_joins\r\narray join columns('^arr')\r\nwhere true and match(arr_4,'a')\r\n  and id < 100\r\nORDER by id limit 1 by arr_1 settings optimize_read_in_order = 1\r\n```\r\n\n",
  "hints_text": "A bit simpler example: https://fiddle.clickhouse.com/18fc9813-952b-4fae-94d2-5ab4e00a960b\r\nIt was broken between 22.10 (https://fiddle.clickhouse.com/ed81cd19-1a54-4e2f-9e75-570e28f76e76) and 22.11 (https://fiddle.clickhouse.com/33924041-a1b9-46a2-b1fd-0f872fcb8139)\nAnother workaround: `optimize_read_in_order = 1, query_plan_read_in_order = 0`\r\nhttps://fiddle.clickhouse.com/c5a7f8b1-02c7-4a67-9f86-06657c942e35\r\nThe issue was introduced in https://github.com/ClickHouse/ClickHouse/pull/42829\nAnother workaround:  convert_query_to_cnf = 1",
  "created_at": "2023-07-03T17:28:37Z"
}