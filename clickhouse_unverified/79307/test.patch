diff --git a/tests/queries/0_stateless/03442_alter_delete_empty_part.reference b/tests/queries/0_stateless/03442_alter_delete_empty_part.reference
new file mode 100644
index 000000000000..662eb9081063
--- /dev/null
+++ b/tests/queries/0_stateless/03442_alter_delete_empty_part.reference
@@ -0,0 +1,4 @@
+1500
+1_1_1_0_4	1	0	0
+2_2_2_0_4	1	0	1
+3_3_3_0_4	1	1	0
diff --git a/tests/queries/0_stateless/03442_alter_delete_empty_part.sql b/tests/queries/0_stateless/03442_alter_delete_empty_part.sql
new file mode 100644
index 000000000000..528f928c1bdb
--- /dev/null
+++ b/tests/queries/0_stateless/03442_alter_delete_empty_part.sql
@@ -0,0 +1,26 @@
+DROP TABLE IF EXISTS t_delete_empty_part;
+
+CREATE TABLE t_delete_empty_part (a UInt64, b UInt64)
+ENGINE = MergeTree ORDER BY b PARTITION BY a;
+
+INSERT INTO t_delete_empty_part SELECT 1, number FROM numbers(1000);
+INSERT INTO t_delete_empty_part SELECT 2, number FROM numbers(1000);
+INSERT INTO t_delete_empty_part SELECT 3, number FROM numbers(2000, 1000);
+
+SET mutations_sync = 2;
+ALTER TABLE t_delete_empty_part DELETE WHERE a = 2 OR b < 500;
+
+SELECT count() FROM t_delete_empty_part;
+
+SYSTEM FLUSH LOGS;
+
+SELECT
+    part_name,
+    ProfileEvents['MutationTotalParts'],
+    ProfileEvents['MutationUntouchedParts'],
+    ProfileEvents['MutationCreatedEmptyParts']
+FROM system.part_log
+WHERE database = currentDatabase() AND table = 't_delete_empty_part' AND event_type = 'MutatePart'
+ORDER BY part_name;
+
+DROP TABLE t_delete_empty_part;
diff --git a/tests/queries/0_stateless/03442_alter_delete_empty_part_rmt.reference b/tests/queries/0_stateless/03442_alter_delete_empty_part_rmt.reference
new file mode 100644
index 000000000000..402351ef7251
--- /dev/null
+++ b/tests/queries/0_stateless/03442_alter_delete_empty_part_rmt.reference
@@ -0,0 +1,4 @@
+1500
+1_0_0_0_1	1	0	0
+2_0_0_0_1	1	0	1
+3_0_0_0_1	1	1	0
diff --git a/tests/queries/0_stateless/03442_alter_delete_empty_part_rmt.sql b/tests/queries/0_stateless/03442_alter_delete_empty_part_rmt.sql
new file mode 100644
index 000000000000..1d0f6330dd07
--- /dev/null
+++ b/tests/queries/0_stateless/03442_alter_delete_empty_part_rmt.sql
@@ -0,0 +1,29 @@
+DROP TABLE IF EXISTS t_delete_empty_part_rmt;
+
+CREATE TABLE t_delete_empty_part_rmt (a UInt64, b UInt64)
+ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/t_delete_empty_part_rmt', '1')
+ORDER BY b PARTITION BY a;
+
+SET insert_keeper_fault_injection_probability = 0.0;
+
+INSERT INTO t_delete_empty_part_rmt SELECT 1, number FROM numbers(1000);
+INSERT INTO t_delete_empty_part_rmt SELECT 2, number FROM numbers(1000);
+INSERT INTO t_delete_empty_part_rmt SELECT 3, number FROM numbers(2000, 1000);
+
+SET mutations_sync = 2;
+ALTER TABLE t_delete_empty_part_rmt DELETE WHERE a = 2 OR b < 500;
+
+SELECT count() FROM t_delete_empty_part_rmt;
+
+SYSTEM FLUSH LOGS;
+
+SELECT
+    part_name,
+    ProfileEvents['MutationTotalParts'],
+    ProfileEvents['MutationUntouchedParts'],
+    ProfileEvents['MutationCreatedEmptyParts']
+FROM system.part_log
+WHERE database = currentDatabase() AND table = 't_delete_empty_part_rmt' AND event_type = 'MutatePart'
+ORDER BY part_name;
+
+DROP TABLE t_delete_empty_part_rmt;
