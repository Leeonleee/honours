{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 10427,
  "instance_id": "ClickHouse__ClickHouse-10427",
  "issue_numbers": [
    "10226"
  ],
  "base_commit": "eb0a1ec7553c372785d27eaf6746d35cf185efc1",
  "patch": "diff --git a/src/Interpreters/InterpreterSelectQuery.cpp b/src/Interpreters/InterpreterSelectQuery.cpp\nindex 32df599bc327..3e607ad8909f 100644\n--- a/src/Interpreters/InterpreterSelectQuery.cpp\n+++ b/src/Interpreters/InterpreterSelectQuery.cpp\n@@ -687,8 +687,8 @@ static std::pair<UInt64, UInt64> getLimitLengthAndOffset(const ASTSelectQuery &\n \n static UInt64 getLimitForSorting(const ASTSelectQuery & query, const Context & context)\n {\n-    /// Partial sort can be done if there is LIMIT but no DISTINCT or LIMIT BY.\n-    if (!query.distinct && !query.limitBy() && !query.limit_with_ties)\n+    /// Partial sort can be done if there is LIMIT but no DISTINCT or LIMIT BY, neither ARRAY JOIN.\n+    if (!query.distinct && !query.limitBy() && !query.limit_with_ties && !query.arrayJoinExpressionList())\n     {\n         auto [limit_length, limit_offset] = getLimitLengthAndOffset(query, context);\n         return limit_length + limit_offset;\n",
  "test_patch": "diff --git a/tests/queries/1_stateful/00094_order_by_array_join_limit.reference b/tests/queries/1_stateful/00094_order_by_array_join_limit.reference\nnew file mode 100644\nindex 000000000000..a8be94b54704\n--- /dev/null\n+++ b/tests/queries/1_stateful/00094_order_by_array_join_limit.reference\n@@ -0,0 +1,8 @@\n+['']\n+['']\n+\n+\n+[]\n+[]\n+['']\n+['']\ndiff --git a/tests/queries/1_stateful/00094_order_by_array_join_limit.sql b/tests/queries/1_stateful/00094_order_by_array_join_limit.sql\nnew file mode 100644\nindex 000000000000..1c2d9f0164e7\n--- /dev/null\n+++ b/tests/queries/1_stateful/00094_order_by_array_join_limit.sql\n@@ -0,0 +1,9 @@\n+SELECT `ParsedParams.Key2` AS x\n+FROM test.hits\n+ARRAY JOIN ParsedParams AS PP\n+ORDER BY x ASC\n+LIMIT 2;\n+\n+SELECT arrayJoin(`ParsedParams.Key2`) AS x FROM test.hits ORDER BY x ASC LIMIT 2;\n+WITH arrayJoin(`ParsedParams.Key2`) AS pp SELECT ParsedParams.Key2 AS x FROM test.hits ORDER BY x ASC LIMIT 2;\n+WITH arrayJoin(`ParsedParams.Key2`) AS pp SELECT ParsedParams.Key2 AS x FROM test.hits WHERE NOT ignore(pp) ORDER BY x ASC LIMIT 2;\n",
  "problem_statement": "ORDER BY after ARRAY JOIN lead to no output\n\r\n**Describe the bug**\r\nORDER BY and ARRAY JOIN lead to no result\r\n**How to reproduce**\r\n* ClickHouse 20.3+\r\n\r\n``` sql\r\nSELECT `ParsedParams.Key2` AS x\r\nFROM hits_v1\r\nARRAY JOIN ParsedParams AS PP\r\nORDER BY x ASC\r\nLIMIT 2\r\n\r\nOk.\r\n\r\n0 rows in set. Elapsed: 0.091 sec. Processed 8.87 million rows, 89.08 MB (97.81 million rows/s., 981.87 MB/s.)\r\n```\r\n**Expected behavior**\r\nWithout sort there is a result \r\n``` sql\r\n\r\nSELECT `ParsedParams.Key2` AS x\r\nFROM hits_v1\r\nARRAY JOIN ParsedParams AS PP\r\nLIMIT 2\r\n\r\n\u250c\u2500x\u2500\u2500\u2500\u2500\u2510\r\n\u2502 [''] \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500x\u2500\u2500\u2500\u2500\u2510\r\n\u2502 [''] \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "Fun fact: This is very old issue, see CLICKHOUSE-1605.\r\nI reported it on 2015-10-22, so it exists in all ClickHouse versions, even before open-source.\nUnfinished PR: #3334",
  "created_at": "2020-04-22T04:34:05Z"
}