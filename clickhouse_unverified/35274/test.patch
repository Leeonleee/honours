diff --git a/tests/queries/0_stateless/02235_check_table_sparse_serialization.reference b/tests/queries/0_stateless/02235_check_table_sparse_serialization.reference
new file mode 100644
index 000000000000..35e279250576
--- /dev/null
+++ b/tests/queries/0_stateless/02235_check_table_sparse_serialization.reference
@@ -0,0 +1,4 @@
+all_1_1_0	a	Default
+all_2_2_0	a	Sparse
+all_1_1_0	1	
+all_2_2_0	1	
diff --git a/tests/queries/0_stateless/02235_check_table_sparse_serialization.sql b/tests/queries/0_stateless/02235_check_table_sparse_serialization.sql
new file mode 100644
index 000000000000..0ac97404c46f
--- /dev/null
+++ b/tests/queries/0_stateless/02235_check_table_sparse_serialization.sql
@@ -0,0 +1,18 @@
+DROP TABLE IF EXISTS t_sparse_02235;
+
+CREATE TABLE t_sparse_02235 (a UInt8) ENGINE = MergeTree ORDER BY tuple()
+SETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;
+
+SYSTEM STOP MERGES t_sparse_02235;
+
+INSERT INTO t_sparse_02235 SELECT 1 FROM numbers(1000);
+INSERT INTO t_sparse_02235 SELECT 0 FROM numbers(1000);
+
+SELECT name, column, serialization_kind FROM system.parts_columns
+WHERE database = currentDatabase() AND table = 't_sparse_02235'
+ORDER BY name, column;
+
+SET check_query_single_value_result = 0;
+CHECK TABLE t_sparse_02235;
+
+DROP TABLE t_sparse_02235;
