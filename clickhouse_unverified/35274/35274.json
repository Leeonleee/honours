{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 35274,
  "instance_id": "ClickHouse__ClickHouse-35274",
  "issue_numbers": [
    "35192"
  ],
  "base_commit": "b13b415d3f0e2d8b7141466707940531b45043bf",
  "patch": "diff --git a/src/Storages/MergeTree/checkDataPart.cpp b/src/Storages/MergeTree/checkDataPart.cpp\nindex 075e9e9fbc8a..e5c21ed8d3de 100644\n--- a/src/Storages/MergeTree/checkDataPart.cpp\n+++ b/src/Storages/MergeTree/checkDataPart.cpp\n@@ -98,7 +98,8 @@ IMergeTreeDataPart::Checksums checkDataPart(\n         };\n     };\n \n-    SerializationInfoByName serialization_infos(columns_txt, {});\n+    auto ratio_of_defaults = data_part->storage.getSettings()->ratio_of_defaults_for_sparse_serialization;\n+    SerializationInfoByName serialization_infos(columns_txt, SerializationInfo::Settings{ratio_of_defaults, false});\n     auto serialization_path = path + IMergeTreeDataPart::SERIALIZATION_FILE_NAME;\n \n     if (disk->exists(serialization_path))\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02235_check_table_sparse_serialization.reference b/tests/queries/0_stateless/02235_check_table_sparse_serialization.reference\nnew file mode 100644\nindex 000000000000..35e279250576\n--- /dev/null\n+++ b/tests/queries/0_stateless/02235_check_table_sparse_serialization.reference\n@@ -0,0 +1,4 @@\n+all_1_1_0\ta\tDefault\n+all_2_2_0\ta\tSparse\n+all_1_1_0\t1\t\n+all_2_2_0\t1\t\ndiff --git a/tests/queries/0_stateless/02235_check_table_sparse_serialization.sql b/tests/queries/0_stateless/02235_check_table_sparse_serialization.sql\nnew file mode 100644\nindex 000000000000..0ac97404c46f\n--- /dev/null\n+++ b/tests/queries/0_stateless/02235_check_table_sparse_serialization.sql\n@@ -0,0 +1,18 @@\n+DROP TABLE IF EXISTS t_sparse_02235;\n+\n+CREATE TABLE t_sparse_02235 (a UInt8) ENGINE = MergeTree ORDER BY tuple()\n+SETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;\n+\n+SYSTEM STOP MERGES t_sparse_02235;\n+\n+INSERT INTO t_sparse_02235 SELECT 1 FROM numbers(1000);\n+INSERT INTO t_sparse_02235 SELECT 0 FROM numbers(1000);\n+\n+SELECT name, column, serialization_kind FROM system.parts_columns\n+WHERE database = currentDatabase() AND table = 't_sparse_02235'\n+ORDER BY name, column;\n+\n+SET check_query_single_value_result = 0;\n+CHECK TABLE t_sparse_02235;\n+\n+DROP TABLE t_sparse_02235;\n",
  "problem_statement": "There is no column a in serialization infos\ncc @CurtizJ \r\n\r\nSTR:\r\n```sql\r\ncreate table test (a UInt8) ENGINE = MergeTree Order By (a) SETTINGS ratio_of_defaults_for_sparse_serialization = 0.9\r\ninsert into test values ('1')\r\nSET check_query_single_value_result = 0;\r\ncheck table test \r\n```\r\n\r\nthe check table command output is\r\n```\r\nThere is no column a in serialization infos\r\n```\r\n\r\nversion- `22.2.3.1`\r\n(reproducible on master too - just downloaded macos build `22.3.1.1`)\r\n\n",
  "hints_text": "it will be great to know if the check table command isn't aware of the sparse serialization and the error is not serious, or, the error is indeed serious and data is getting corrupted. ",
  "created_at": "2022-03-14T15:23:29Z"
}