{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 57979,
  "instance_id": "ClickHouse__ClickHouse-57979",
  "issue_numbers": [
    "49708"
  ],
  "base_commit": "afd506984dd81872cb716e1af24e4611daf4580d",
  "patch": "diff --git a/src/Storages/StorageFile.cpp b/src/Storages/StorageFile.cpp\nindex 47b915e3ed89..87cb3312544a 100644\n--- a/src/Storages/StorageFile.cpp\n+++ b/src/Storages/StorageFile.cpp\n@@ -10,7 +10,6 @@\n #include <Interpreters/Context.h>\n #include <Interpreters/evaluateConstantExpression.h>\n \n-#include <Parsers/ASTCreateQuery.h>\n #include <Parsers/ASTSelectQuery.h>\n #include <Parsers/ASTIdentifier_fwd.h>\n #include <Parsers/ASTInsertQuery.h>\n@@ -26,8 +25,6 @@\n #include <IO/Archives/createArchiveReader.h>\n #include <IO/Archives/IArchiveReader.h>\n \n-#include <DataTypes/DataTypeLowCardinality.h>\n-#include <DataTypes/DataTypeString.h>\n #include <Formats/FormatFactory.h>\n #include <Formats/ReadSchemaUtils.h>\n #include <Processors/Formats/IInputFormat.h>\n@@ -39,7 +36,6 @@\n #include <Processors/Formats/ISchemaReader.h>\n #include <Processors/Sources/NullSource.h>\n #include <Processors/Sources/ConstChunkGenerator.h>\n-#include <Processors/ResizeProcessor.h>\n #include <Processors/Executors/PullingPipelineExecutor.h>\n \n #include <Common/escapeForFileName.h>\n@@ -56,7 +52,6 @@\n #include <unistd.h>\n #include <filesystem>\n #include <shared_mutex>\n-#include <cmath>\n #include <algorithm>\n \n #ifdef __clang__\ndiff --git a/src/TableFunctions/TableFunctionFile.cpp b/src/TableFunctions/TableFunctionFile.cpp\nindex 45a7378ca82e..8a9dde374ec1 100644\n--- a/src/TableFunctions/TableFunctionFile.cpp\n+++ b/src/TableFunctions/TableFunctionFile.cpp\n@@ -2,17 +2,14 @@\n #include <TableFunctions/ITableFunctionFileLike.h>\n #include <TableFunctions/TableFunctionFile.h>\n \n-#include \"Parsers/IAST_fwd.h\"\n #include \"registerTableFunctions.h\"\n #include <Access/Common/AccessFlags.h>\n #include <Interpreters/Context.h>\n #include <Storages/ColumnsDescription.h>\n #include <Storages/StorageFile.h>\n-#include <Storages/VirtualColumnUtils.h>\n #include <TableFunctions/TableFunctionFactory.h>\n #include <Interpreters/evaluateConstantExpression.h>\n #include <Formats/FormatFactory.h>\n-#include <Parsers/ASTIdentifier_fwd.h>\n \n \n namespace DB\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02946_parallel_replicas_distributed.reference b/tests/queries/0_stateless/02946_parallel_replicas_distributed.reference\nnew file mode 100644\nindex 000000000000..ea4483ec305e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02946_parallel_replicas_distributed.reference\n@@ -0,0 +1,1 @@\n+100\t4950\ndiff --git a/tests/queries/0_stateless/02946_parallel_replicas_distributed.sql b/tests/queries/0_stateless/02946_parallel_replicas_distributed.sql\nnew file mode 100644\nindex 000000000000..6c7fbd0f7521\n--- /dev/null\n+++ b/tests/queries/0_stateless/02946_parallel_replicas_distributed.sql\n@@ -0,0 +1,17 @@\n+DROP TABLE IF EXISTS test;\n+DROP TABLE IF EXISTS test_d;\n+\n+CREATE TABLE test (id UInt64, date Date)\n+ENGINE = MergeTree\n+ORDER BY id\n+AS select *, '2023-12-25' from numbers(100);\n+\n+CREATE TABLE IF NOT EXISTS test_d as test\n+ENGINE = Distributed(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), test);\n+\n+SELECT count(), sum(id)\n+FROM test_d\n+SETTINGS allow_experimental_parallel_reading_from_replicas = 1, max_parallel_replicas = 3, prefer_localhost_replica = 0;\n+\n+DROP TABLE test_d;\n+DROP TABLE test;\n",
  "problem_statement": "allow_experimental_parallel_reading_from_replicas multplies results\n```sql\r\nCREATE TABLE test (id UInt64, date Date)\r\nENGINE = MergeTree\r\nORDER BY id\r\nas select *, today() from numbers(100);\r\n\r\nCREATE TABLE IF NOT EXISTS  test_d as test\r\nENGINE = Distributed(test_cluster_one_shard_three_replicas_localhost, currentDatabase(),test);\r\n\r\nSELECT count(), sum(id) \r\nFROM test_d\r\nSETTINGS allow_experimental_parallel_reading_from_replicas = 1, max_parallel_replicas = 3, prefer_localhost_replica = 0;\r\n\u250c\u2500count()\u2500\u252c\u2500sum(id)\u2500\u2510\r\n\u2502     300 \u2502   14850 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\nSELECT count(), sum(id) \r\nFROM test_d\r\n\u250c\u2500count()\u2500\u252c\u2500sum(id)\u2500\u2510\r\n\u2502     100 \u2502    4950 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "@nikitamikhaylov https://fiddle.clickhouse.com/26544ba8-4de2-41be-a79a-eca6cdf15e5c\nIt works perfectly: https://fiddle.clickhouse.com/25e9c9e5-e3f4-4e85-9c2b-ddca5f08bd2e",
  "created_at": "2023-12-18T07:35:36Z"
}