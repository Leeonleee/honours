{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 24061,
  "instance_id": "ClickHouse__ClickHouse-24061",
  "issue_numbers": [
    "23351",
    "20315"
  ],
  "base_commit": "7a56ab8b1dc833d40e2140a35b95c65f383e4132",
  "patch": "diff --git a/src/Columns/ColumnLowCardinality.h b/src/Columns/ColumnLowCardinality.h\nindex fc607021ccfe..4af2cb2f36e3 100644\n--- a/src/Columns/ColumnLowCardinality.h\n+++ b/src/Columns/ColumnLowCardinality.h\n@@ -188,6 +188,7 @@ class ColumnLowCardinality final : public COWHelper<IColumn, ColumnLowCardinalit\n      */\n     bool nestedIsNullable() const { return isColumnNullable(*dictionary.getColumnUnique().getNestedColumn()); }\n     void nestedToNullable() { dictionary.getColumnUnique().nestedToNullable(); }\n+    void nestedRemoveNullable() { dictionary.getColumnUnique().nestedRemoveNullable(); }\n \n     const IColumnUnique & getDictionary() const { return dictionary.getColumnUnique(); }\n     const ColumnPtr & getDictionaryPtr() const { return dictionary.getColumnUniquePtr(); }\ndiff --git a/src/Columns/ColumnUnique.h b/src/Columns/ColumnUnique.h\nindex d1fa8ecdf933..8ca4baff7c74 100644\n--- a/src/Columns/ColumnUnique.h\n+++ b/src/Columns/ColumnUnique.h\n@@ -51,6 +51,7 @@ class ColumnUnique final : public COWHelper<IColumnUnique, ColumnUnique<ColumnTy\n     const ColumnPtr & getNestedNotNullableColumn() const override { return column_holder; }\n     bool nestedColumnIsNullable() const override { return is_nullable; }\n     void nestedToNullable() override;\n+    void nestedRemoveNullable() override;\n \n     size_t uniqueInsert(const Field & x) override;\n     size_t uniqueInsertFrom(const IColumn & src, size_t n) override;\n@@ -271,6 +272,14 @@ void ColumnUnique<ColumnType>::nestedToNullable()\n     createNullMask();\n }\n \n+template <typename ColumnType>\n+void ColumnUnique<ColumnType>::nestedRemoveNullable()\n+{\n+    is_nullable = false;\n+    nested_null_mask = nullptr;\n+    nested_column_nullable = nullptr;\n+}\n+\n template <typename ColumnType>\n const ColumnPtr & ColumnUnique<ColumnType>::getNestedColumn() const\n {\ndiff --git a/src/Columns/IColumnUnique.h b/src/Columns/IColumnUnique.h\nindex 2c1c542fce5e..5e6473219d18 100644\n--- a/src/Columns/IColumnUnique.h\n+++ b/src/Columns/IColumnUnique.h\n@@ -24,6 +24,7 @@ class IColumnUnique : public IColumn\n \n     virtual bool nestedColumnIsNullable() const = 0;\n     virtual void nestedToNullable() = 0;\n+    virtual void nestedRemoveNullable() = 0;\n \n     /// Returns array with StringRefHash calculated for each row of getNestedNotNullableColumn() column.\n     /// Returns nullptr if nested column doesn't contain strings. Otherwise calculates hash (if it wasn't).\ndiff --git a/src/Functions/materialize.h b/src/Functions/materialize.h\nindex 4676b263f393..5d36a4b23402 100644\n--- a/src/Functions/materialize.h\n+++ b/src/Functions/materialize.h\n@@ -1,6 +1,8 @@\n #pragma once\n #include <Functions/IFunction.h>\n #include <Functions/FunctionFactory.h>\n+#include <Columns/ColumnLowCardinality.h>\n+#include <DataTypes/DataTypeLowCardinality.h>\n \n namespace DB\n {\ndiff --git a/src/Interpreters/HashJoin.cpp b/src/Interpreters/HashJoin.cpp\nindex 09c4c538347b..8023a96374fb 100644\n--- a/src/Interpreters/HashJoin.cpp\n+++ b/src/Interpreters/HashJoin.cpp\n@@ -160,7 +160,7 @@ static ColumnWithTypeAndName correctNullability(ColumnWithTypeAndName && column,\n {\n     if (nullable)\n     {\n-        JoinCommon::convertColumnToNullable(column, true);\n+        JoinCommon::convertColumnToNullable(column);\n         if (column.type->isNullable() && !negative_null_map.empty())\n         {\n             MutableColumnPtr mutable_column = IColumn::mutate(std::move(column.column));\n@@ -1096,8 +1096,13 @@ void HashJoin::joinBlockImpl(\n \n             const auto & col = block.getByName(left_name);\n             bool is_nullable = nullable_right_side || right_key.type->isNullable();\n+\n             auto right_col_name = getTableJoin().renamedRightColumnName(right_key.name);\n-            block.insert(correctNullability({col.column, col.type, right_col_name}, is_nullable));\n+            ColumnWithTypeAndName right_col(col.column, col.type, right_col_name);\n+            if (right_col.type->lowCardinality() != right_key.type->lowCardinality())\n+                JoinCommon::changeLowCardinalityInplace(right_col);\n+            right_col = correctNullability(std::move(right_col), is_nullable);\n+            block.insert(right_col);\n         }\n     }\n     else if (has_required_right_keys)\n@@ -1122,8 +1127,13 @@ void HashJoin::joinBlockImpl(\n             bool is_nullable = nullable_right_side || right_key.type->isNullable();\n \n             ColumnPtr thin_column = filterWithBlanks(col.column, filter);\n+\n             auto right_col_name = getTableJoin().renamedRightColumnName(right_key.name);\n-            block.insert(correctNullability({thin_column, col.type, right_col_name}, is_nullable, null_map_filter));\n+            ColumnWithTypeAndName right_col(thin_column, col.type, right_col_name);\n+            if (right_col.type->lowCardinality() != right_key.type->lowCardinality())\n+                JoinCommon::changeLowCardinalityInplace(right_col);\n+            right_col = correctNullability(std::move(right_col), is_nullable, null_map_filter);\n+            block.insert(right_col);\n \n             if constexpr (need_replication)\n                 right_keys_to_replicate.push_back(block.getPositionByName(right_key.name));\ndiff --git a/src/Interpreters/MergeJoin.cpp b/src/Interpreters/MergeJoin.cpp\nindex a9f50cdda0e8..26463c8c6edd 100644\n--- a/src/Interpreters/MergeJoin.cpp\n+++ b/src/Interpreters/MergeJoin.cpp\n@@ -464,6 +464,12 @@ MergeJoin::MergeJoin(std::shared_ptr<TableJoin> table_join_, const Block & right\n                             ErrorCodes::PARAMETER_OUT_OF_BOUND);\n     }\n \n+    for (const auto & right_key : table_join->keyNamesRight())\n+    {\n+        if (right_sample_block.getByName(right_key).type->lowCardinality())\n+            lowcard_right_keys.push_back(right_key);\n+    }\n+\n     table_join->splitAdditionalColumns(right_sample_block, right_table_keys, right_columns_to_add);\n     JoinCommon::removeLowCardinalityInplace(right_table_keys);\n     JoinCommon::removeLowCardinalityInplace(right_sample_block, table_join->keyNamesRight());\n@@ -607,10 +613,18 @@ bool MergeJoin::addJoinedBlock(const Block & src_block, bool)\n \n void MergeJoin::joinBlock(Block & block, ExtraBlockPtr & not_processed)\n {\n+    Names lowcard_keys = lowcard_right_keys;\n     if (block)\n     {\n         JoinCommon::checkTypesOfKeys(block, table_join->keyNamesLeft(), right_table_keys, table_join->keyNamesRight());\n         materializeBlockInplace(block);\n+\n+        for (const auto & column_name : table_join->keyNamesLeft())\n+        {\n+            if (block.getByName(column_name).type->lowCardinality())\n+                lowcard_keys.push_back(column_name);\n+        }\n+\n         JoinCommon::removeLowCardinalityInplace(block, table_join->keyNamesLeft(), false);\n \n         sortBlock(block, left_sort_description);\n@@ -646,14 +660,20 @@ void MergeJoin::joinBlock(Block & block, ExtraBlockPtr & not_processed)\n     if (!not_processed && left_blocks_buffer)\n         not_processed = std::make_shared<NotProcessed>(NotProcessed{{}, 0, 0, 0});\n \n+    for (const auto & column_name : lowcard_keys)\n+    {\n+        if (!block.has(column_name))\n+            continue;\n+        if (auto & col = block.getByName(column_name); !col.type->lowCardinality())\n+            JoinCommon::changeLowCardinalityInplace(col);\n+    }\n+\n     JoinCommon::restoreLowCardinalityInplace(block);\n }\n \n template <bool in_memory, bool is_all>\n void MergeJoin::joinSortedBlock(Block & block, ExtraBlockPtr & not_processed)\n {\n-    //std::shared_lock lock(rwlock);\n-\n     size_t rows_to_reserve = is_left ? block.rows() : 0;\n     MutableColumns left_columns = makeMutableColumns(block, (is_all ? rows_to_reserve : 0));\n     MutableColumns right_columns = makeMutableColumns(right_columns_to_add, rows_to_reserve);\n@@ -702,7 +722,6 @@ void MergeJoin::joinSortedBlock(Block & block, ExtraBlockPtr & not_processed)\n \n         left_cursor.nextN(left_key_tail);\n         joinInequalsLeft<is_all>(block, left_columns, right_columns_to_add, right_columns, left_cursor.position(), left_cursor.end());\n-        //left_cursor.nextN(left_cursor.end() - left_cursor.position());\n \n         changeLeftColumns(block, std::move(left_columns));\n         addRightColumns(block, std::move(right_columns));\ndiff --git a/src/Interpreters/MergeJoin.h b/src/Interpreters/MergeJoin.h\nindex f286e74b3857..b6bde8fb1312 100644\n--- a/src/Interpreters/MergeJoin.h\n+++ b/src/Interpreters/MergeJoin.h\n@@ -103,6 +103,8 @@ class MergeJoin : public IJoin\n     const size_t max_rows_in_right_block;\n     const size_t max_files_to_merge;\n \n+    Names lowcard_right_keys;\n+\n     void changeLeftColumns(Block & block, MutableColumns && columns) const;\n     void addRightColumns(Block & block, MutableColumns && columns);\n \ndiff --git a/src/Interpreters/join_common.cpp b/src/Interpreters/join_common.cpp\nindex 80299610a441..9f725c3cd59e 100644\n--- a/src/Interpreters/join_common.cpp\n+++ b/src/Interpreters/join_common.cpp\n@@ -49,6 +49,21 @@ ColumnPtr changeLowCardinality(const ColumnPtr & column, const ColumnPtr & dst_s\n namespace JoinCommon\n {\n \n+void changeLowCardinalityInplace(ColumnWithTypeAndName & column)\n+{\n+    if (column.type->lowCardinality())\n+    {\n+        column.type = recursiveRemoveLowCardinality(column.type);\n+        column.column = column.column->convertToFullColumnIfLowCardinality();\n+    }\n+    else\n+    {\n+        column.type = std::make_shared<DataTypeLowCardinality>(column.type);\n+        MutableColumnPtr lc = column.type->createColumn();\n+        typeid_cast<ColumnLowCardinality &>(*lc).insertRangeFromFullColumn(*column.column, 0, column.column->size());\n+        column.column = std::move(lc);\n+    }\n+}\n \n bool canBecomeNullable(const DataTypePtr & type)\n {\n@@ -89,9 +104,11 @@ void convertColumnToNullable(ColumnWithTypeAndName & column, bool remove_low_car\n         if (column.column->lowCardinality())\n         {\n             /// Convert nested to nullable, not LowCardinality itself\n-            ColumnLowCardinality * col_as_lc = assert_cast<ColumnLowCardinality *>(column.column->assumeMutable().get());\n+            auto mut_col = IColumn::mutate(std::move(column.column));\n+            ColumnLowCardinality * col_as_lc = assert_cast<ColumnLowCardinality *>(mut_col.get());\n             if (!col_as_lc->nestedIsNullable())\n                 col_as_lc->nestedToNullable();\n+            column.column = std::move(mut_col);\n         }\n         else\n             column.column = makeNullable(column.column);\n@@ -107,6 +124,19 @@ void convertColumnsToNullable(Block & block, size_t starting_pos)\n /// @warning It assumes that every NULL has default value in nested column (or it does not matter)\n void removeColumnNullability(ColumnWithTypeAndName & column)\n {\n+    if (column.type->lowCardinality())\n+    {\n+        /// LowCardinality(Nullable(T)) case\n+        const auto & dict_type = typeid_cast<const DataTypeLowCardinality *>(column.type.get())->getDictionaryType();\n+        column.type = std::make_shared<DataTypeLowCardinality>(removeNullable(dict_type));\n+\n+        ColumnLowCardinality * col_as_lc = typeid_cast<ColumnLowCardinality *>(column.column->assumeMutable().get());\n+        if (col_as_lc && col_as_lc->nestedIsNullable())\n+            col_as_lc->nestedRemoveNullable();\n+\n+        return;\n+    }\n+\n     if (!column.type->isNullable())\n         return;\n \ndiff --git a/src/Interpreters/join_common.h b/src/Interpreters/join_common.h\nindex 9a000aa107af..9334b9d672fc 100644\n--- a/src/Interpreters/join_common.h\n+++ b/src/Interpreters/join_common.h\n@@ -41,6 +41,8 @@ void addDefaultValues(IColumn & column, const DataTypePtr & type, size_t count);\n \n bool typesEqualUpToNullability(DataTypePtr left_type, DataTypePtr right_type);\n \n+void changeLowCardinalityInplace(ColumnWithTypeAndName & column);\n+\n }\n \n /// Creates result from right table data in RIGHT and FULL JOIN when keys are not present in left table.\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01049_join_low_card_bug.reference b/tests/queries/0_stateless/01049_join_low_card_bug.reference\ndeleted file mode 100644\nindex b4ed81766524..000000000000\n--- a/tests/queries/0_stateless/01049_join_low_card_bug.reference\n+++ /dev/null\n@@ -1,80 +0,0 @@\n-\tLowCardinality(String)\n-str\tLowCardinality(String)\n-\tLowCardinality(String)\n-str\tLowCardinality(String)\n-\tstr\tLowCardinality(String)\tLowCardinality(String)\n-\tstr\tLowCardinality(String)\tLowCardinality(String)\n-\tstr\tLowCardinality(String)\tLowCardinality(String)\n-\tstr\tLowCardinality(String)\tLowCardinality(String)\n-\tLowCardinality(String)\n-str\tLowCardinality(String)\n-\tLowCardinality(String)\n-str\tLowCardinality(String)\n-\tstr\tLowCardinality(String)\tString\n-\tstr\tLowCardinality(String)\tString\n-\tstr\tLowCardinality(String)\tString\n-\tstr\tLowCardinality(String)\tString\n-\tString\n-str\tString\n-\tString\n-str\tString\n-\tstr\tString\tLowCardinality(String)\n-\tstr\tString\tLowCardinality(String)\n-\tstr\tString\tLowCardinality(String)\n-\tstr\tString\tLowCardinality(String)\n-\tLowCardinality(String)\n-str\tLowCardinality(String)\n-\tLowCardinality(String)\n-str\tLowCardinality(String)\n-\tstr\tLowCardinality(String)\tNullable(String)\n-\tstr\tLowCardinality(String)\tNullable(String)\n-\tstr\tLowCardinality(String)\tNullable(String)\n-\tstr\tLowCardinality(String)\tNullable(String)\n-\\N\tNullable(String)\n-str\tNullable(String)\n-\\N\tNullable(String)\n-str\tNullable(String)\n-\\N\tstr\tNullable(String)\tLowCardinality(String)\n-\\N\tstr\tNullable(String)\tLowCardinality(String)\n-\\N\tstr\tNullable(String)\tLowCardinality(String)\n-\\N\tstr\tNullable(String)\tLowCardinality(String)\n-\\N\tLowCardinality(Nullable(String))\n-str\tLowCardinality(Nullable(String))\n-\\N\tLowCardinality(Nullable(String))\n-str\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tLowCardinality(Nullable(String))\n-str\tLowCardinality(Nullable(String))\n-\\N\tLowCardinality(Nullable(String))\n-str\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tNullable(String)\n-str\tNullable(String)\n-\\N\tNullable(String)\n-str\tNullable(String)\n-\\N\tstr\tNullable(String)\n-\\N\tstr\tNullable(String)\n-\\N\tstr\tNullable(String)\n-\\N\tstr\tNullable(String)\n-\\N\tLowCardinality(Nullable(String))\n-str\tLowCardinality(Nullable(String))\n-\\N\tLowCardinality(Nullable(String))\n-str\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tstr\tLowCardinality(Nullable(String))\n-\\N\tNullable(String)\n-str\tNullable(String)\n-\\N\tNullable(String)\n-str\tNullable(String)\n-\\N\tstr\tNullable(String)\n-\\N\tstr\tNullable(String)\n-\\N\tstr\tNullable(String)\n-\\N\tstr\tNullable(String)\ndiff --git a/tests/queries/0_stateless/01049_join_low_card_bug.sql b/tests/queries/0_stateless/01049_join_low_card_bug.sql\ndeleted file mode 100644\nindex 07558770abf6..000000000000\n--- a/tests/queries/0_stateless/01049_join_low_card_bug.sql\n+++ /dev/null\n@@ -1,144 +0,0 @@\n-DROP TABLE IF EXISTS l;\n-DROP TABLE IF EXISTS r;\n-DROP TABLE IF EXISTS nl;\n-DROP TABLE IF EXISTS nr;\n-DROP TABLE IF EXISTS l_lc;\n-DROP TABLE IF EXISTS r_lc;\n-\n-CREATE TABLE l (x UInt32, lc String) ENGINE = Memory;\n-CREATE TABLE r (x UInt32, lc String) ENGINE = Memory;\n-CREATE TABLE nl (x Nullable(UInt32), lc Nullable(String)) ENGINE = Memory;\n-CREATE TABLE nr (x Nullable(UInt32), lc Nullable(String)) ENGINE = Memory;\n-CREATE TABLE l_lc (x UInt32, lc LowCardinality(String)) ENGINE = Memory;\n-CREATE TABLE r_lc (x UInt32, lc LowCardinality(String)) ENGINE = Memory;\n-\n-INSERT INTO r VALUES (0, 'str');\n-INSERT INTO nr VALUES (0, 'str');\n-INSERT INTO r_lc VALUES (0, 'str');\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc);\n- \n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(r.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(r.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(r.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(r.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc);\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (lc);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l FULL JOIN r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l FULL JOIN r USING (lc);\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (x);\n-SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (lc);\n-SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (x);\n-SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l RIGHT JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l RIGHT JOIN r_lc AS r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l FULL JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l FULL JOIN r_lc AS r USING (lc);\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (lc);\n-SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN nr AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN nr AS r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l FULL JOIN nr AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l FULL JOIN nr AS r USING (lc);\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (x);\n-SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (lc);\n-SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (x);\n-SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM nl AS l RIGHT JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM nl AS l RIGHT JOIN r_lc AS r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM nl AS l FULL JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc), toTypeName(materialize(r.lc)) FROM nl AS l FULL JOIN r_lc AS r USING (lc);\n-\n-SET join_use_nulls = 1;\n-\n-SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc);\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (lc);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN r USING (lc);\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (x);\n-SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (lc);\n-SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (x);\n-SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l RIGHT JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l RIGHT JOIN r_lc AS r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l FULL JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l FULL JOIN r_lc AS r USING (lc);\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (lc);\n-SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (x);\n-SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (lc);\n-\n---\n-\n-SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (x);\n-SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (lc);\n-SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (x);\n-SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (lc);\n-\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (lc);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (x);\n-SELECT l.lc, r.lc, toTypeName(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (lc);\n-\n-DROP TABLE l;\n-DROP TABLE r;\n-DROP TABLE nl;\n-DROP TABLE nr;\n-DROP TABLE l_lc;\n-DROP TABLE r_lc;\ndiff --git a/tests/queries/0_stateless/01049_join_low_card_bug_long.reference b/tests/queries/0_stateless/01049_join_low_card_bug_long.reference\nnew file mode 100644\nindex 000000000000..877b4370fcea\n--- /dev/null\n+++ b/tests/queries/0_stateless/01049_join_low_card_bug_long.reference\n@@ -0,0 +1,407 @@\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+LowCardinality(String)\tLowCardinality(String)\t\t\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\t\t\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+String\tString\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+String\tString\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+String\tString\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+String\tString\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+String\tString\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+String\tString\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+String\tString\t\t\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+String\tString\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+String\tString\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+String\tString\t\t\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+str\tString\n+\tString\n+str_r\tString\n+str\tString\n+str\tString\n+\tString\n+str_l\tString\n+str_r\tString\n+str\tString\n+str_l\tString\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tString\tString\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tString\tString\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tString\tString\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tString\tString\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tString\tString\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tString\tString\t\t\n+LowCardinality(String)\tLowCardinality(String)\t\t\tString\tString\tstr_l\tstr_l\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tString\tString\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tString\tString\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\t\t\tString\tString\tstr_l\tstr_l\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str\tNullable(String)\n+str_r\tNullable(String)\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str_l\tNullable(String)\n+str\tNullable(String)\n+str_l\tNullable(String)\n+str_r\tNullable(String)\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\t\t\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\t\t\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+-- join_use_nulls --\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+String\tString\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+String\tString\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+String\tString\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+String\tString\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str\tNullable(String)\n+str_r\tNullable(String)\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str_l\tNullable(String)\n+str\tNullable(String)\n+str_l\tNullable(String)\n+str_r\tNullable(String)\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str\tNullable(String)\n+str_r\tNullable(String)\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str_l\tNullable(String)\n+str\tNullable(String)\n+str_l\tNullable(String)\n+str_r\tNullable(String)\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+LowCardinality(String)\tLowCardinality(String)\t\t\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\t\t\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+String\tString\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+String\tString\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+String\tString\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+String\tString\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+String\tString\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+String\tString\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+String\tString\t\t\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+String\tString\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+String\tString\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+String\tString\t\t\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+str\tString\n+\tString\n+str_r\tString\n+str\tString\n+str\tString\n+\tString\n+str_l\tString\n+str_r\tString\n+str\tString\n+str_l\tString\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tString\tString\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tString\tString\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tString\tString\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tString\tString\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tString\tString\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tString\tString\t\t\n+LowCardinality(String)\tLowCardinality(String)\t\t\tString\tString\tstr_l\tstr_l\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tString\tString\t\t\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tString\tString\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\t\t\tString\tString\tstr_l\tstr_l\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str\tLowCardinality(String)\n+\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+str_r\tLowCardinality(String)\n+str\tLowCardinality(String)\n+str_l\tLowCardinality(String)\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(String)\tLowCardinality(String)\t\t\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(String)\tLowCardinality(String)\tstr\tstr\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(String)\tLowCardinality(String)\tstr_l\tstr_l\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str\tNullable(String)\n+str_r\tNullable(String)\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str_l\tNullable(String)\n+str\tNullable(String)\n+str_l\tNullable(String)\n+str_r\tNullable(String)\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\t\t\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\t\t\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+-- join_use_nulls --\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+String\tString\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+String\tString\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+String\tString\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+String\tString\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str\tNullable(String)\n+str_r\tNullable(String)\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str_l\tNullable(String)\n+str\tNullable(String)\n+str_l\tNullable(String)\n+str_r\tNullable(String)\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+\\N\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str\tLowCardinality(Nullable(String))\n+str_l\tLowCardinality(Nullable(String))\n+str_r\tLowCardinality(Nullable(String))\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr\tstr\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\n+Nullable(String)\tNullable(String)\t\\N\t\\N\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_l\tstr_l\n+Nullable(String)\tNullable(String)\tstr_r\tstr_r\tLowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str\tNullable(String)\n+str_r\tNullable(String)\n+str\tNullable(String)\n+\\N\tNullable(String)\n+str_l\tNullable(String)\n+str\tNullable(String)\n+str_l\tNullable(String)\n+str_r\tNullable(String)\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(String)\tLowCardinality(String)\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(String)\tLowCardinality(String)\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr\tstr\tNullable(String)\tNullable(String)\tstr\tstr\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\t\\N\t\\N\tNullable(String)\tNullable(String)\tstr_l\tstr_l\n+LowCardinality(Nullable(String))\tLowCardinality(Nullable(String))\tstr_r\tstr_r\tNullable(String)\tNullable(String)\t\\N\t\\N\n+\tLowCardinality(String)\n+str\tLowCardinality(String)\n+\n+\n+str\ndiff --git a/tests/queries/0_stateless/01049_join_low_card_bug_long.sql b/tests/queries/0_stateless/01049_join_low_card_bug_long.sql\nnew file mode 100644\nindex 000000000000..e17328244282\n--- /dev/null\n+++ b/tests/queries/0_stateless/01049_join_low_card_bug_long.sql\n@@ -0,0 +1,284 @@\n+DROP TABLE IF EXISTS l;\n+DROP TABLE IF EXISTS r;\n+DROP TABLE IF EXISTS nl;\n+DROP TABLE IF EXISTS nr;\n+DROP TABLE IF EXISTS l_lc;\n+DROP TABLE IF EXISTS r_lc;\n+\n+CREATE TABLE l (x UInt32, lc String) ENGINE = Memory;\n+CREATE TABLE r (x UInt32, lc String) ENGINE = Memory;\n+CREATE TABLE nl (x Nullable(UInt32), lc Nullable(String)) ENGINE = Memory;\n+CREATE TABLE nr (x Nullable(UInt32), lc Nullable(String)) ENGINE = Memory;\n+CREATE TABLE l_lc (x UInt32, lc LowCardinality(String)) ENGINE = Memory;\n+CREATE TABLE r_lc (x UInt32, lc LowCardinality(String)) ENGINE = Memory;\n+\n+INSERT INTO r VALUES (0, 'str'),  (1, 'str_r');\n+INSERT INTO nr VALUES (0, 'str'),  (1, 'str_r');\n+INSERT INTO r_lc VALUES (0, 'str'),  (1, 'str_r');\n+\n+INSERT INTO l VALUES (0, 'str'), (2, 'str_l');\n+INSERT INTO nl VALUES (0, 'str'), (2, 'str_l');\n+INSERT INTO l_lc VALUES (0, 'str'), (2, 'str_l');\n+\n+\n+SET join_use_nulls = 0;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+SELECT '-- join_use_nulls --';\n+\n+SET join_use_nulls = 1;\n+\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+set join_algorithm = 'partial_merge';\n+\n+SET join_use_nulls = 0;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+SELECT '-- join_use_nulls --';\n+\n+SET join_use_nulls = 1;\n+\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l RIGHT JOIN r USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l FULL JOIN r USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc RIGHT JOIN nr USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM l_lc FULL JOIN nr USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN nr AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (lc) ORDER BY x;\n+\n+--\n+\n+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl RIGHT JOIN r_lc USING (lc) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (x) ORDER BY x;\n+SELECT lc, toTypeName(lc) FROM nl FULL JOIN r_lc USING (lc) ORDER BY x;\n+\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l RIGHT JOIN r_lc AS r USING (lc) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (x) ORDER BY x;\n+SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM nl AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x;\n+\n+SET join_use_nulls = 0;\n+SELECT lc, toTypeName(lc)  FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY l.lc;\n+\n+SELECT lowCardinalityKeys(lc.lc) FROM r FULL JOIN l_lc as lc USING (lc) ORDER BY lowCardinalityKeys(lc.lc);\n+\n+DROP TABLE l;\n+DROP TABLE r;\n+DROP TABLE nl;\n+DROP TABLE nr;\n+DROP TABLE l_lc;\n+DROP TABLE r_lc;\ndiff --git a/tests/queries/0_stateless/01049_join_low_card_crash.reference b/tests/queries/0_stateless/01049_join_low_card_crash.reference\nindex 648a5de0a87c..33e6920cd7a0 100644\n--- a/tests/queries/0_stateless/01049_join_low_card_crash.reference\n+++ b/tests/queries/0_stateless/01049_join_low_card_crash.reference\n@@ -4,9 +4,13 @@ a\t1\t2\n b\t0\t3\n \t0\tb\t3\n a\t1\ta\t2\n+0\n+7\n a\t1\n b\t\\N\n a\t1\t2\n b\t\\N\t3\n a\t1\ta\t2\n \\N\t\\N\tb\t3\n+7\n+\\N\ndiff --git a/tests/queries/0_stateless/01049_join_low_card_crash.sql b/tests/queries/0_stateless/01049_join_low_card_crash.sql\nindex 4465fc9581f7..6681014effa7 100644\n--- a/tests/queries/0_stateless/01049_join_low_card_crash.sql\n+++ b/tests/queries/0_stateless/01049_join_low_card_crash.sql\n@@ -11,11 +11,15 @@ SELECT * FROM Alpha FULL JOIN (SELECT 'b' as foo) js2 USING (foo) ORDER BY foo;\n SELECT * FROM Alpha FULL JOIN Beta USING (foo) ORDER BY foo;\n SELECT * FROM Alpha FULL JOIN Beta ON Alpha.foo = Beta.foo ORDER BY foo;\n \n+-- https://github.com/ClickHouse/ClickHouse/issues/20315#issuecomment-789579457\n+SELECT materialize(js2.k) FROM (SELECT toLowCardinality(number) AS k FROM numbers(1)) AS js1  FULL OUTER JOIN (SELECT number + 7 AS k FROM numbers(1)) AS js2 USING (k) ORDER BY js2.k;\n+\n SET join_use_nulls = 1;\n \n SELECT * FROM Alpha FULL JOIN (SELECT 'b' as foo) js2 USING (foo) ORDER BY foo;\n SELECT * FROM Alpha FULL JOIN Beta USING (foo) ORDER BY foo;\n SELECT * FROM Alpha FULL JOIN Beta ON Alpha.foo = Beta.foo ORDER BY foo;\n+SELECT materialize(js2.k) FROM (SELECT toLowCardinality(number) AS k FROM numbers(1)) AS js1  FULL OUTER JOIN (SELECT number + 7 AS k FROM numbers(1)) AS js2 USING (k) ORDER BY js2.k;\n \n DROP TABLE Alpha;\n DROP TABLE Beta;\n",
  "problem_statement": "Join `Logical error: 'Bad cast from type DB::ColumnLowCardinality to DB::ColumnString`\n\r\n**Describe the bug**\r\n`Logical error: 'Bad cast from type DB::ColumnLowCardinality to DB::ColumnString'.` in JOIN\r\n\r\nhttps://clickhouse-test-reports.s3.yandex.net/23237/67e427c13aa2b9857c697726251d1e27af4fa1d9/fuzzer_debug/report.html#fail1\r\n\r\n```\r\nDROP TABLE IF EXISTS l_lc;\r\nDROP TABLE IF EXISTS r;\r\n\r\nCREATE TABLE l_lc (`x` UInt32, `lc` LowCardinality(String)) ENGINE = Memory;\r\nCREATE TABLE r (x UInt32, lc String) ENGINE = Memory;\r\n\r\nINSERT INTO r VALUES (0, 'str');\r\nINSERT INTO l_lc VALUES (0, 'str');\r\n\r\nSELECT r.lc, toTypeName(l.lc), materialize(r.lc), toTypeName(materialize(r.lc)) FROM l_lc AS l RIGHT JOIN r USING (lc);\r\n```\r\n\nabort in debug: LowCardinality -> Nullable -> Vector\nhttps://clickhouse-test-reports.s3.yandex.net/20224/15ce3dc1124445c1edd7dde26ca998ed67816150/fuzzer_debug/report.html#fail1\r\n\r\n```\r\n2021.02.09 13:44:25.975671 [ 91 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Debug> executeQuery: (from [::1]:42050, using production parser) SELECT 1023 + l, * FROM (SELECT toLowCardinality(toNullable(number)) AS l FROM system.numbers LIMIT 10) AS s1 ANY LEFT JOIN (SELECT toLowCardinality(toNullable(number)) AS r FROM system.numbers LIMIT 7) AS s2 ON (l + 1023) = (r * 3)\r\n2021.02.09 13:44:25.978451 [ 91 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> ContextAccess (default): Access granted: SELECT(number) ON system.numbers\r\n2021.02.09 13:44:25.980586 [ 91 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> ContextAccess (default): Access granted: SELECT(number) ON system.numbers\r\n2021.02.09 13:44:25.983013 [ 91 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> ContextAccess (default): Access granted: SELECT(number) ON system.numbers\r\n2021.02.09 13:44:25.987689 [ 91 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> ContextAccess (default): Access granted: SELECT(number) ON system.numbers\r\n2021.02.09 13:44:25.988498 [ 91 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.02.09 13:44:25.992361 [ 91 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.02.09 13:44:25.993567 [ 91 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.02.09 13:44:26.005592 [ 162 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> CreatingSetsTransform: Creating join.\r\n2021.02.09 13:44:26.005993 [ 162 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Debug> CreatingSetsTransform: Created Join with 7 entries from 7 rows in 0.000365869 sec.\r\n2021.02.09 13:44:26.010925 [ 162 ] {db694e24-a7a9-4729-a1c2-90ccb6672069} <Trace> PipelineExecutor: Thread finished. Total time: 0.005616319 sec. Execution time: 0.004462349 sec. Processing time: 0.001097067 sec. Wait time: 5.6903e-05 sec.\r\n2021.02.09 13:44:26.011292 [ 168 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.02.09 13:44:26.011718 [ 168 ] {} <Fatal> BaseDaemon: (version 21.3.1.5957, build id: 8DD631BE1F9992A50D94565D97F7EA3FBDDCB102) (from thread 91) (query_id: db694e24-a7a9-4729-a1c2-90ccb6672069) Received signal Aborted (6)\r\n2021.02.09 13:44:26.011942 [ 168 ] {} <Fatal> BaseDaemon: \r\n2021.02.09 13:44:26.012144 [ 168 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f766a04518b 0x7f766a024859 0x7f766a024729 0x7f766a035f36 0x10e7c036 0x1a4b9e53 0x1a4743ec 0x1a4742a3 0x1a42ef66 0x1a410aee 0x1a410962 0x1a410880 0x196db6ff 0x197a05e0 0x1a0d11fc 0x1a0d1647 0x1ac7a0cc 0x1ac7898d 0x1ac728e8 0x1ac7ea78 0x1e4fb39c 0x1e4fbba0 0x1e638d13 0x1e635b9d 0x1e634a28 0x7f766a1fa609 0x7f766a121293\r\n2021.02.09 13:44:26.012411 [ 168 ] {} <Fatal> BaseDaemon: 4. raise @ 0x4618b in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.02.09 13:44:26.012596 [ 168 ] {} <Fatal> BaseDaemon: 5. abort @ 0x25859 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.02.09 13:44:26.012736 [ 168 ] {} <Fatal> BaseDaemon: 6. ? @ 0x25729 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.02.09 13:44:26.012908 [ 168 ] {} <Fatal> BaseDaemon: 7. ? @ 0x36f36 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.02.09 13:44:26.014450 [ 168 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Common/PODArray.h:0: DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul>::operator[](long) const @ 0x10e7c036 in /workspace/clickhouse\r\n2021.02.09 13:44:26.067013 [ 168 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Columns/ColumnVector.h:343: COW<DB::IColumn>::immutable_ptr<DB::IColumn> DB::ColumnVector<unsigned long>::indexImpl<char8_t>(DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, unsigned long) const @ 0x1a4b9e53 in /workspace/clickhouse\r\n2021.02.09 13:44:26.114313 [ 168 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Columns/ColumnsCommon.h:61: COW<DB::IColumn>::immutable_ptr<DB::IColumn> DB::selectIndexImpl<DB::ColumnVector<unsigned long> >(DB::ColumnVector<unsigned long> const&, DB::IColumn const&, unsigned long) @ 0x1a4743ec in /workspace/clickhouse\r\n2021.02.09 13:44:26.161439 [ 168 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../src/Columns/ColumnVector.cpp:443: DB::ColumnVector<unsigned long>::index(DB::IColumn const&, unsigned long) const @ 0x1a4742a3 in /workspace/clickhouse\r\n2021.02.09 13:44:26.207524 [ 168 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../src/Columns/ColumnNullable.cpp:222: DB::ColumnNullable::index(DB::IColumn const&, unsigned long) const @ 0x1a42ef66 in /workspace/clickhouse\r\n2021.02.09 13:44:26.253724 [ 168 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../src/Columns/ColumnLowCardinality.cpp:852: DB::ColumnLowCardinality::Dictionary::compact(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&) @ 0x1a410aee in /workspace/clickhouse\r\n2021.02.09 13:44:26.324263 [ 168 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../src/Columns/ColumnLowCardinality.cpp:495: DB::ColumnLowCardinality::compactInplace() @ 0x1a410962 in /workspace/clickhouse\r\n2021.02.09 13:44:26.400330 [ 168 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../src/Columns/ColumnLowCardinality.cpp:487: DB::ColumnLowCardinality::cutAndCompact(unsigned long, unsigned long) const @ 0x1a410880 in /workspace/clickhouse\r\n2021.02.09 13:44:26.463750 [ 168 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../src/DataTypes/DataTypeLowCardinality.cpp:524: DB::DataTypeLowCardinality::serializeBinaryBulkWithMultipleStreamsImpl(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const @ 0x196db6ff in /workspace/clickhouse\r\n2021.02.09 13:44:26.528272 [ 168 ] {} <Fatal> BaseDaemon: 17. ./obj-x86_64-linux-gnu/../src/DataTypes/IDataType.cpp:287: DB::IDataType::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const @ 0x197a05e0 in /workspace/clickhouse\r\n2021.02.09 13:44:26.598940 [ 168 ] {} <Fatal> BaseDaemon: 18. ./obj-x86_64-linux-gnu/../src/DataStreams/NativeBlockOutputStream.cpp:58: DB::NativeBlockOutputStream::writeData(DB::IDataType const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, DB::WriteBuffer&, unsigned long, unsigned long) @ 0x1a0d11fc in /workspace/clickhouse\r\n2021.02.09 13:44:26.669783 [ 168 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../src/DataStreams/NativeBlockOutputStream.cpp:124: DB::NativeBlockOutputStream::write(DB::Block const&) @ 0x1a0d1647 in /workspace/clickhouse\r\n2021.02.09 13:44:26.758379 [ 168 ] {} <Fatal> BaseDaemon: 20. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1364: DB::TCPHandler::sendData(DB::Block const&) @ 0x1ac7a0cc in /workspace/clickhouse\r\n2021.02.09 13:44:26.848316 [ 168 ] {} <Fatal> BaseDaemon: 21. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:643: DB::TCPHandler::processOrdinaryQueryWithProcessors() @ 0x1ac7898d in /workspace/clickhouse\r\n2021.02.09 13:44:26.937753 [ 168 ] {} <Fatal> BaseDaemon: 22. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:284: DB::TCPHandler::runImpl() @ 0x1ac728e8 in /workspace/clickhouse\r\n2021.02.09 13:44:27.028547 [ 168 ] {} <Fatal> BaseDaemon: 23. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1459: DB::TCPHandler::run() @ 0x1ac7ea78 in /workspace/clickhouse\r\n2021.02.09 13:44:27.132527 [ 168 ] {} <Fatal> BaseDaemon: 24. ./obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x1e4fb39c in /workspace/clickhouse\r\n2021.02.09 13:44:27.202688 [ 168 ] {} <Fatal> BaseDaemon: 25. ./obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:113: Poco::Net::TCPServerDispatcher::run() @ 0x1e4fbba0 in /workspace/clickhouse\r\n2021.02.09 13:44:27.265082 [ 168 ] {} <Fatal> BaseDaemon: 26. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x1e638d13 in /workspace/clickhouse\r\n2021.02.09 13:44:27.327181 [ 168 ] {} <Fatal> BaseDaemon: 27. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x1e635b9d in /workspace/clickhouse\r\n2021.02.09 13:44:27.389060 [ 168 ] {} <Fatal> BaseDaemon: 28. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x1e634a28 in /workspace/clickhouse\r\n2021.02.09 13:44:27.389367 [ 168 ] {} <Fatal> BaseDaemon: 29. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2021.02.09 13:44:27.389567 [ 168 ] {} <Fatal> BaseDaemon: 30. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.02.09 13:44:28.451829 [ 168 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: 832F331D56D43C484FC29CB29BEB2C38. There is no information about the reference checksum.\r\n2021.02.09 13:44:37.592963 [ 82 ] {} <Fatal> Application: Child process was terminated by signal 6.\r\n```\n",
  "hints_text": "Started to reproduce since https://github.com/ClickHouse/ClickHouse/commit/9d62842a33da9a704b00f074a2c38b05b0e6d378\nIs it related?\r\n\r\nhttps://clickhouse-test-reports.s3.yandex.net/0/a1424bc6750826250786071b2c80dfb44c07d164/fuzzer_debug/report.html#fail1\r\n\r\n``` sql\r\nSELECT 9223372036854775807, materialize(js2.k), NULL FROM (SELECT toLowCardinality(number) AS k, 1048576, number + NULL FROM numbers(1048577)) AS js1 FULL OUTER JOIN (SELECT number + 7 AS k FROM numbers(1)) AS js2 USING (k) ORDER BY '0.0' ASC NULLS FIRST\r\n```\r\n\r\n```\r\n2021.03.03 04:31:24.985319 [ 71 ] {957498c1-e735-4d4e-8287-a223c76d83af} <Fatal> : Logical error: 'Bad cast from type DB::ColumnLowCardinality to DB::ColumnVector<unsigned long>'.\r\n2021.03.03 04:31:24.986879 [ 183 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.03.03 04:31:24.987208 [ 183 ] {} <Fatal> BaseDaemon: (version 21.3.1.6158 (official build), build id: CACA0347FEA0F53236AC68F53362C9ED307B0713) (from thread 71) (query_id: 957498c1-e735-4d4e-8287-a223c76d83af) Received signal Aborted (6)\r\n2021.03.03 04:31:24.987429 [ 183 ] {} <Fatal> BaseDaemon:\r\n2021.03.03 04:31:24.987659 [ 183 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f014985518b 0x7f0149834859 0x10f4e6a6 0x10f4e763 0x16a1193d 0x19a73865 0x112a6864 0x19a9d500 0x1a0f899c 0x1a0f8de7 0x1afd707c 0x1afd593d 0x1afcf898 0x1afdbb08 0x1ea8fbdc 0x1ea903e0 0x1ebccbb3 0x1ebc9a3d 0x1ebc88c8 0x7f0149a0a609 0x7f0149931293\r\n2021.03.03 04:31:24.987968 [ 183 ] {} <Fatal> BaseDaemon: 4. raise @ 0x4618b in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.03.03 04:31:24.988155 [ 183 ] {} <Fatal> BaseDaemon: 5. abort @ 0x25859 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.03.03 04:31:25.104683 [ 183 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:50: DB::handle_error_code(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x10f4e6a6 in /workspace/clickhouse\r\n2021.03.03 04:31:25.211857 [ 183 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:57: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x10f4e763 in /workspace/clickhouse\r\n2021.03.03 04:31:25.725155 [ 183 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Common/typeid_cast.h:40: std::__1::enable_if<std::is_reference_v<DB::ColumnVector<unsigned long> const&>, DB::ColumnVector<unsigned long> const&>::type typeid_cast<DB::ColumnVector<unsigned long> const&, DB::IColumn const>(DB::IColumn const&) @ 0x16a1193d in /workspace/clickhouse\r\n2021.03.03 04:31:25.833929 [ 183 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/DataTypes/DataTypeNumberBase.cpp:184: DB::DataTypeNumberBase<unsigned long>::serializeBinaryBulk(DB::IColumn const&, DB::WriteBuffer&, unsigned long, unsigned long) const @ 0x19a73865 in /workspace/clickhouse\r\n2021.03.03 04:31:25.935481 [ 183 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/DataTypes/IDataType.h:299: DB::IDataType::serializeBinaryBulkWithMultipleStreamsImpl(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const @ 0x112a6864 in /workspace/clickhouse\r\n2021.03.03 04:31:26.036983 [ 183 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../src/DataTypes/IDataType.cpp:287: DB::IDataType::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const @ 0x19a9d500 in /workspace/clickhouse\r\n2021.03.03 04:31:26.120574 [ 183 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../src/DataStreams/NativeBlockOutputStream.cpp:58: DB::NativeBlockOutputStream::writeData(DB::IDataType const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, DB::WriteBuffer&, unsigned long, unsigned long) @ 0x1a0f899c in /workspace/clickhouse\r\n2021.03.03 04:31:26.208695 [ 183 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../src/DataStreams/NativeBlockOutputStream.cpp:124: DB::NativeBlockOutputStream::write(DB::Block const&) @ 0x1a0f8de7 in /workspace/clickhouse\r\n2021.03.03 04:31:26.813209 [ 183 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1405: DB::TCPHandler::sendData(DB::Block const&) @ 0x1afd707c in /workspace/clickhouse\r\n2021.03.03 04:31:27.430742 [ 183 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:665: DB::TCPHandler::processOrdinaryQueryWithProcessors() @ 0x1afd593d in /workspace/clickhouse\r\n2021.03.03 04:31:28.001518 [ 183 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:306: DB::TCPHandler::runImpl() @ 0x1afcf898 in /workspace/clickhouse\r\n2021.03.03 04:31:28.611552 [ 183 ] {} <Fatal> BaseDaemon: 17. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1500: DB::TCPHandler::run() @ 0x1afdbb08 in /workspace/clickhouse\r\n2021.03.03 04:31:28.666778 [ 183 ] {} <Fatal> BaseDaemon: 18. ./obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x1ea8fbdc in /workspace/clickhouse\r\n2021.03.03 04:31:28.752903 [ 183 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:113: Poco::Net::TCPServerDispatcher::run() @ 0x1ea903e0 in /workspace/clickhouse\r\n2021.03.03 04:31:28.833348 [ 183 ] {} <Fatal> BaseDaemon: 20. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x1ebccbb3 in /workspace/clickhouse\r\n2021.03.03 04:31:28.910101 [ 183 ] {} <Fatal> BaseDaemon: 21. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x1ebc9a3d in /workspace/clickhouse\r\n2021.03.03 04:31:28.986929 [ 183 ] {} <Fatal> BaseDaemon: 22. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x1ebc88c8 in /workspace/clickhouse\r\n2021.03.03 04:31:28.987320 [ 183 ] {} <Fatal> BaseDaemon: 23. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2021.03.03 04:31:28.987538 [ 183 ] {} <Fatal> BaseDaemon: 24. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.03.03 04:31:29.891977 [ 183 ] {} <Fatal> BaseDaemon: Checksum of the binary: 7EB250102CE10C94860A56DC1605C2DE, integrity check passed.\r\n2021.03.03 04:31:47.877267 [ 63 ] {} <Fatal> Application: Child process was terminated by signal 6.\r\n```",
  "created_at": "2021-05-12T15:07:09Z"
}