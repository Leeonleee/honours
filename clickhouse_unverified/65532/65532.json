{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 65532,
  "instance_id": "ClickHouse__ClickHouse-65532",
  "issue_numbers": [
    "65525"
  ],
  "base_commit": "0713b3b6c355668e3b595319d5c2165b1fb7e4f4",
  "patch": "diff --git a/programs/main.cpp b/programs/main.cpp\nindex c270388f17fe..61e2bc18ed72 100644\n--- a/programs/main.cpp\n+++ b/programs/main.cpp\n@@ -13,6 +13,7 @@\n \n #include <fmt/format.h>\n \n+#include \"config.h\"\n #include \"config_tools.h\"\n \n #include <Common/StringUtils.h>\n@@ -439,6 +440,14 @@ extern \"C\"\n }\n #endif\n \n+/// Prevent messages from JeMalloc in the release build.\n+/// Some of these messages are non-actionable for the users, such as:\n+/// <jemalloc>: Number of CPUs detected is not deterministic. Per-CPU arena disabled.\n+#if USE_JEMALLOC && defined(NDEBUG) && !defined(SANITIZER)\n+extern \"C\" void (*malloc_message)(void *, const char *s);\n+__attribute__((constructor(0))) void init_je_malloc_message() { malloc_message = [](void *, const char *){}; }\n+#endif\n+\n /// This allows to implement assert to forbid initialization of a class in static constructors.\n /// Usage:\n ///\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.reference b/tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.reference\nindex 8984d35930a7..03ed07cf1a48 100644\n--- a/tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.reference\n+++ b/tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.reference\n@@ -2,6 +2,4 @@ Instruction check fail. The CPU does not support SSSE3 instruction set.\n Instruction check fail. The CPU does not support SSE4.1 instruction set.\n Instruction check fail. The CPU does not support SSE4.2 instruction set.\n Instruction check fail. The CPU does not support POPCNT instruction set.\n-<jemalloc>: MADV_DONTNEED does not work (memset will be used instead)\n-<jemalloc>: (This is the expected behaviour if you are running under QEMU)\n 1\ndiff --git a/tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.sh b/tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.sh\nindex 01047aeb9abf..c37f1f95374d 100755\n--- a/tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.sh\n+++ b/tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.sh\n@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n # Tags: no-tsan, no-asan, no-ubsan, no-msan, no-debug, no-fasttest, no-cpu-aarch64\n-# Tag no-fasttest: avoid dependency on qemu -- invonvenient when running locally\n+# Tag no-fasttest: avoid dependency on qemu -- inconvenient when running locally\n \n CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n # shellcheck source=../shell_config.sh\ndiff --git a/tests/queries/0_stateless/01502_jemalloc_percpu_arena.reference b/tests/queries/0_stateless/01502_jemalloc_percpu_arena.reference\nindex fe093e39a56d..5accb5777864 100644\n--- a/tests/queries/0_stateless/01502_jemalloc_percpu_arena.reference\n+++ b/tests/queries/0_stateless/01502_jemalloc_percpu_arena.reference\n@@ -1,5 +1,3 @@\n-<jemalloc>: Number of CPUs detected is not deterministic. Per-CPU arena disabled.\n 1\n-<jemalloc>: Number of CPUs detected is not deterministic. Per-CPU arena disabled.\n 100000000\n 1\ndiff --git a/tests/queries/0_stateless/01502_jemalloc_percpu_arena.sh b/tests/queries/0_stateless/01502_jemalloc_percpu_arena.sh\nindex b3ea6eca3f47..c1bd1e0e1fa1 100755\n--- a/tests/queries/0_stateless/01502_jemalloc_percpu_arena.sh\n+++ b/tests/queries/0_stateless/01502_jemalloc_percpu_arena.sh\n@@ -1,5 +1,5 @@\n #!/usr/bin/env bash\n-# Tags: no-tsan, no-asan, no-msan, no-ubsan, no-fasttest\n+# Tags: no-tsan, no-asan, no-msan, no-ubsan, no-fasttest, no-debug\n #       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n # NOTE: jemalloc is disabled under sanitizers\n \ndiff --git a/tests/queries/0_stateless/01505_pipeline_executor_UAF.sh b/tests/queries/0_stateless/01505_pipeline_executor_UAF.sh\nindex c2750ad31b20..35c2b796570d 100755\n--- a/tests/queries/0_stateless/01505_pipeline_executor_UAF.sh\n+++ b/tests/queries/0_stateless/01505_pipeline_executor_UAF.sh\n@@ -14,7 +14,7 @@ for _ in {1..10}; do\n     ${CLICKHOUSE_LOCAL} -q 'select * from numbers_mt(100000000) settings max_threads=100 FORMAT Null'\n     # Binding to specific CPU is not required, but this makes the test more reliable.\n     taskset --cpu-list 0 ${CLICKHOUSE_LOCAL} -q 'select * from numbers_mt(100000000) settings max_threads=100 FORMAT Null' 2>&1 | {\n-        # build with santiziers does not have jemalloc\n+        # build with sanitiziers does not have jemalloc\n         # and for jemalloc we have separate test\n         # 01502_jemalloc_percpu_arena\n         grep -v '<jemalloc>: Number of CPUs detected is not deterministic. Per-CPU arena disabled.'\n",
  "problem_statement": "ClickHouse always prints `<jemalloc>: Number of CPUs detected is not deterministic. Per-CPU arena disabled.` on t2.micro machines on AWS\nThis message is not actionable and it is difficult to understand - let's remove it.\n",
  "hints_text": "https://github.com/ClickHouse/ClickHouse/pull/51362#issuecomment-1605686113",
  "created_at": "2024-06-21T13:16:06Z",
  "modified_files": [
    "programs/main.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.reference",
    "tests/queries/0_stateless/01103_check_cpu_instructions_at_startup.sh",
    "tests/queries/0_stateless/01502_jemalloc_percpu_arena.reference",
    "tests/queries/0_stateless/01502_jemalloc_percpu_arena.sh",
    "tests/queries/0_stateless/01505_pipeline_executor_UAF.sh"
  ]
}