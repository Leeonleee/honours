diff --git a/tests/queries/0_stateless/00597_push_down_predicate.reference b/tests/queries/0_stateless/00597_push_down_predicate.reference
index 829c5a1577e5..1798c7270885 100644
--- a/tests/queries/0_stateless/00597_push_down_predicate.reference
+++ b/tests/queries/0_stateless/00597_push_down_predicate.reference
@@ -4,61 +4,582 @@
 1
 2000-01-01	1	test string 1	1
 -------Forbid push down-------
-SELECT count()
FROM 
(
    SELECT 
        [number] AS a,
        [number * 2] AS b
    FROM system.numbers
    LIMIT 1
) AS t
ARRAY JOIN 
    a,
    b
WHERE NOT ignore(a + b)
+SELECT count()
+FROM 
+(
+    SELECT 
+        [number] AS a,
+        [number * 2] AS b
+    FROM system.numbers
+    LIMIT 1
+) AS t
+ARRAY JOIN 
+    a,
+    b
+WHERE NOT ignore(a + b)
 1
-SELECT 
    a,
    b
FROM 
(
    SELECT 1 AS a
)
ANY LEFT JOIN 
(
    SELECT 
        1 AS a,
        1 AS b
) USING (a)
WHERE b = 0
-SELECT 
    a,
    b
FROM 
(
    SELECT 
        1 AS a,
        1 AS b
)
ANY RIGHT JOIN 
(
    SELECT 1 AS a
) USING (a)
WHERE b = 0
-SELECT 
    a,
    b
FROM 
(
    SELECT 1 AS a
)
ANY FULL OUTER JOIN 
(
    SELECT 
        1 AS a,
        1 AS b
) USING (a)
WHERE b = 0
-SELECT 
    a,
    b
FROM 
(
    SELECT 
        1 AS a,
        1 AS b
)
ANY FULL OUTER JOIN 
(
    SELECT 1 AS a
) USING (a)
WHERE b = 0
+SELECT 
+    a,
+    b
+FROM 
+(
+    SELECT 1 AS a
+)
+ANY LEFT JOIN 
+(
+    SELECT 
+        1 AS a,
+        1 AS b
+) USING (a)
+WHERE b = 0
+SELECT 
+    a,
+    b
+FROM 
+(
+    SELECT 
+        1 AS a,
+        1 AS b
+)
+ANY RIGHT JOIN 
+(
+    SELECT 1 AS a
+) USING (a)
+WHERE b = 0
+SELECT 
+    a,
+    b
+FROM 
+(
+    SELECT 1 AS a
+)
+ANY FULL OUTER JOIN 
+(
+    SELECT 
+        1 AS a,
+        1 AS b
+) USING (a)
+WHERE b = 0
+SELECT 
+    a,
+    b
+FROM 
+(
+    SELECT 
+        1 AS a,
+        1 AS b
+)
+ANY FULL OUTER JOIN 
+(
+    SELECT 1 AS a
+) USING (a)
+WHERE b = 0
 -------Need push down-------
-SELECT toString(value) AS value
FROM 
(
    SELECT 1 AS value
)
+SELECT toString(value) AS value
+FROM 
+(
+    SELECT 1 AS value
+)
 1
-SELECT id
FROM 
(
    SELECT 1 AS id
    UNION ALL
    SELECT 2 AS `--predicate_optimizer_0`
    WHERE 0
)
WHERE id = 1
+SELECT id
+FROM 
+(
+    SELECT 1 AS id
+    UNION ALL
+    SELECT 2 AS `--predicate_optimizer_0`
+    WHERE 0
+)
+WHERE id = 1
 1
-SELECT id
FROM 
(
    SELECT arrayJoin([1, 2, 3]) AS id
    WHERE id = 1
)
WHERE id = 1
+SELECT id
+FROM 
+(
+    SELECT arrayJoin([1, 2, 3]) AS id
+    WHERE id = 1
+)
+WHERE id = 1
 1
-SELECT id
FROM 
(
    SELECT arrayJoin([1, 2, 3]) AS id
    WHERE id = 1
)
WHERE id = 1
+SELECT id
+FROM 
+(
+    SELECT arrayJoin([1, 2, 3]) AS id
+    WHERE id = 1
+)
+WHERE id = 1
 1
-SELECT 
    id,
    subquery
FROM 
(
    SELECT 
        1 AS id,
        CAST(1, \'UInt8\') AS subquery
)
+SELECT 
+    id,
+    subquery
+FROM 
+(
+    SELECT 
+        1 AS id,
+        CAST(1, \'UInt8\') AS subquery
+)
 1	1
-SELECT 
    a,
    b
FROM 
(
    SELECT 
        toUInt64(sum(id) AS b) AS a,
        b
    FROM test_00597
    HAVING a = 3
)
WHERE a = 3
+SELECT 
+    a,
+    b
+FROM 
+(
+    SELECT 
+        toUInt64(sum(id) AS b) AS a,
+        b
+    FROM test_00597
+    HAVING a = 3
+)
+WHERE a = 3
 3	3
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        name,
        value,
        min(id) AS id
    FROM test_00597
    GROUP BY 
        date,
        name,
        value
    HAVING id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        name,
+        value,
+        min(id) AS id
+    FROM test_00597
+    GROUP BY 
+        date,
+        name,
+        value
+    HAVING id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    a,
    b
FROM 
(
    SELECT 
        toUInt64(sum(id) AS b) AS a,
        b
    FROM test_00597 AS table_alias
    HAVING b = 3
) AS outer_table_alias
WHERE b = 3
+SELECT 
+    a,
+    b
+FROM 
+(
+    SELECT 
+        toUInt64(sum(id) AS b) AS a,
+        b
+    FROM test_00597 AS table_alias
+    HAVING b = 3
+) AS outer_table_alias
+WHERE b = 3
 3	3
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
    WHERE id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+    WHERE id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM 
    (
        SELECT 
            date,
            id,
            name,
            value
        FROM test_00597
        WHERE id = 1
    )
    WHERE id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM 
+    (
+        SELECT 
+            date,
+            id,
+            name,
+            value
+        FROM test_00597
+        WHERE id = 1
+    )
+    WHERE id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM 
    (
        SELECT 
            date,
            id,
            name,
            value
        FROM test_00597
        WHERE id = 1
    ) AS b
    WHERE id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM 
+    (
+        SELECT 
+            date,
+            id,
+            name,
+            value
+        FROM test_00597
+        WHERE id = 1
+    ) AS b
+    WHERE id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
    WHERE id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+    WHERE id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM 
    (
        SELECT 
            date,
            id,
            name,
            value
        FROM test_00597
        WHERE id = 1
    )
    WHERE id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM 
+    (
+        SELECT 
+            date,
+            id,
+            name,
+            value
+        FROM test_00597
+        WHERE id = 1
+    )
+    WHERE id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
    WHERE id = 1
) AS b
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+    WHERE id = 1
+) AS b
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM 
    (
        SELECT 
            date,
            id,
            name,
            value
        FROM test_00597
        WHERE id = 1
    ) AS a
    WHERE id = 1
) AS b
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM 
+    (
+        SELECT 
+            date,
+            id,
+            name,
+            value
+        FROM test_00597
+        WHERE id = 1
+    ) AS a
+    WHERE id = 1
+) AS b
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    id,
    date,
    value
FROM 
(
    SELECT 
        id,
        date,
        min(value) AS value
    FROM test_00597
    WHERE id = 1
    GROUP BY 
        id,
        date
)
WHERE id = 1
+SELECT 
+    id,
+    date,
+    value
+FROM 
+(
+    SELECT 
+        id,
+        date,
+        min(value) AS value
+    FROM test_00597
+    WHERE id = 1
+    GROUP BY 
+        id,
+        date
+)
+WHERE id = 1
 1	2000-01-01	1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
    WHERE id = 1
    UNION ALL
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
    WHERE id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+    WHERE id = 1
+    UNION ALL
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+    WHERE id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1
 2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value,
    date,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
    WHERE id = 1
)
ANY LEFT JOIN 
(
    SELECT id
    FROM test_00597
) USING (id)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value,
+    date,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+    WHERE id = 1
+)
+ANY LEFT JOIN 
+(
+    SELECT id
+    FROM test_00597
+) USING (id)
+WHERE id = 1
 2000-01-01	1	test string 1	1	2000-01-01	test string 1	1
-SELECT 
    id,
    date,
    name,
    value
FROM 
(
    SELECT toInt8(1) AS id
)
ANY LEFT JOIN 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
) AS test_00597 USING (id)
WHERE value = 1
+SELECT 
+    id,
+    date,
+    name,
+    value
+FROM 
+(
+    SELECT toInt8(1) AS id
+)
+ANY LEFT JOIN 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+) AS test_00597 USING (id)
+WHERE value = 1
 1	2000-01-01	test string 1	1
-SELECT value
FROM 
(
    SELECT toInt8(1) AS id
)
ANY LEFT JOIN test_00597 AS b USING (id)
WHERE value = 1
+SELECT value
+FROM 
+(
+    SELECT toInt8(1) AS id
+)
+ANY LEFT JOIN test_00597 AS b USING (id)
+WHERE value = 1
 1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value,
        date,
        name,
        value
    FROM 
    (
        SELECT 
            date,
            id,
            name,
            value
        FROM test_00597
        WHERE id = 1
    )
    ANY LEFT JOIN 
    (
        SELECT id
        FROM test_00597
    ) USING (id)
    WHERE id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value,
+        date,
+        name,
+        value
+    FROM 
+    (
+        SELECT 
+            date,
+            id,
+            name,
+            value
+        FROM test_00597
+        WHERE id = 1
+    )
+    ANY LEFT JOIN 
+    (
+        SELECT id
+        FROM test_00597
+    ) USING (id)
+    WHERE id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value,
    b.date,
    b.name,
    b.value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
)
ANY LEFT JOIN 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
) AS b USING (id)
WHERE b.id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value,
+    b.date,
+    b.name,
+    b.value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+)
+ANY LEFT JOIN 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+) AS b USING (id)
+WHERE b.id = 1
 2000-01-01	1	test string 1	1	2000-01-01	test string 1	1
-SELECT 
    id,
    date,
    name,
    value
FROM 
(
    SELECT 
        toInt8(1) AS id,
        toDate(\'2000-01-01\') AS date
    FROM system.numbers
    LIMIT 1
)
ANY LEFT JOIN 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
) AS b USING (date, id)
WHERE b.date = toDate(\'2000-01-01\')
+SELECT 
+    id,
+    date,
+    name,
+    value
+FROM 
+(
+    SELECT 
+        toInt8(1) AS id,
+        toDate(\'2000-01-01\') AS date
+    FROM system.numbers
+    LIMIT 1
+)
+ANY LEFT JOIN 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+) AS b USING (date, id)
+WHERE b.date = toDate(\'2000-01-01\')
 1	2000-01-01	test string 1	1
-SELECT 
    date,
    id,
    name,
    value,
    `b.date`,
    `b.id`,
    `b.name`,
    `b.value`
FROM 
(
    SELECT 
        date,
        id,
        name,
        value,
        b.date,
        b.id,
        b.name,
        b.value
    FROM 
    (
        SELECT 
            date,
            id,
            name,
            value
        FROM test_00597
        WHERE id = 1
    ) AS a
    ANY LEFT JOIN 
    (
        SELECT 
            date,
            id,
            name,
            value
        FROM test_00597
    ) AS b ON id = b.id
    WHERE id = 1
)
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value,
+    `b.date`,
+    `b.id`,
+    `b.name`,
+    `b.value`
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value,
+        b.date,
+        b.id,
+        b.name,
+        b.value
+    FROM 
+    (
+        SELECT 
+            date,
+            id,
+            name,
+            value
+        FROM test_00597
+        WHERE id = 1
+    ) AS a
+    ANY LEFT JOIN 
+    (
+        SELECT 
+            date,
+            id,
+            name,
+            value
+        FROM test_00597
+    ) AS b ON id = b.id
+    WHERE id = 1
+)
+WHERE id = 1
 2000-01-01	1	test string 1	1	2000-01-01	1	test string 1	1
-SELECT 
    date,
    id,
    name,
    value,
    r.date,
    r.name,
    r.value
FROM 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM test_00597
)
SEMI LEFT JOIN 
(
    SELECT 
        date,
        id,
        name,
        value
    FROM 
    (
        SELECT 
            date,
            id,
            name,
            value
        FROM test_00597
        WHERE id = 1
    )
    WHERE id = 1
) AS r USING (id)
WHERE r.id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value,
+    r.date,
+    r.name,
+    r.value
+FROM 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM test_00597
+)
+SEMI LEFT JOIN 
+(
+    SELECT 
+        date,
+        id,
+        name,
+        value
+    FROM 
+    (
+        SELECT 
+            date,
+            id,
+            name,
+            value
+        FROM test_00597
+        WHERE id = 1
+    )
+    WHERE id = 1
+) AS r USING (id)
+WHERE r.id = 1
 2000-01-01	1	test string 1	1	2000-01-01	test string 1	1
diff --git a/tests/queries/0_stateless/00826_cross_to_inner_join.reference b/tests/queries/0_stateless/00826_cross_to_inner_join.reference
index 2a4b1487f200..6e5cbdcab4e4 100644
--- a/tests/queries/0_stateless/00826_cross_to_inner_join.reference
+++ b/tests/queries/0_stateless/00826_cross_to_inner_join.reference
@@ -35,18 +35,74 @@ comma nullable
 1	1	1	1
 2	2	1	2
 cross
-SELECT 
    a,
    b,
    t2_00826.a,
    t2_00826.b
FROM t1_00826
ALL INNER JOIN t2_00826 ON a = t2_00826.a
WHERE a = t2_00826.a
+SELECT 
+    a,
+    b,
+    t2_00826.a,
+    t2_00826.b
+FROM t1_00826
+ALL INNER JOIN t2_00826 ON a = t2_00826.a
+WHERE a = t2_00826.a
 cross nullable
-SELECT 
    a,
    b,
    t2_00826.a,
    t2_00826.b
FROM t1_00826
ALL INNER JOIN t2_00826 ON a = t2_00826.a
WHERE a = t2_00826.a
+SELECT 
+    a,
+    b,
+    t2_00826.a,
+    t2_00826.b
+FROM t1_00826
+ALL INNER JOIN t2_00826 ON a = t2_00826.a
+WHERE a = t2_00826.a
 cross nullable vs not nullable
-SELECT 
    a,
    b,
    t2_00826.a,
    t2_00826.b
FROM t1_00826
ALL INNER JOIN t2_00826 ON a = t2_00826.b
WHERE a = t2_00826.b
+SELECT 
+    a,
+    b,
+    t2_00826.a,
+    t2_00826.b
+FROM t1_00826
+ALL INNER JOIN t2_00826 ON a = t2_00826.b
+WHERE a = t2_00826.b
 cross self
-SELECT 
    a,
    b,
    y.a,
    y.b
FROM t1_00826 AS x
ALL INNER JOIN t1_00826 AS y ON (a = y.a) AND (b = y.b)
WHERE (a = y.a) AND (b = y.b)
+SELECT 
+    a,
+    b,
+    y.a,
+    y.b
+FROM t1_00826 AS x
+ALL INNER JOIN t1_00826 AS y ON (a = y.a) AND (b = y.b)
+WHERE (a = y.a) AND (b = y.b)
 cross one table expr
-SELECT 
    a,
    b,
    t2_00826.a,
    t2_00826.b
FROM t1_00826
CROSS JOIN t2_00826
WHERE a = b
+SELECT 
+    a,
+    b,
+    t2_00826.a,
+    t2_00826.b
+FROM t1_00826
+CROSS JOIN t2_00826
+WHERE a = b
 cross multiple ands
-SELECT 
    a,
    b,
    t2_00826.a,
    t2_00826.b
FROM t1_00826
ALL INNER JOIN t2_00826 ON (a = t2_00826.a) AND (b = t2_00826.b)
WHERE (a = t2_00826.a) AND (b = t2_00826.b)
+SELECT 
+    a,
+    b,
+    t2_00826.a,
+    t2_00826.b
+FROM t1_00826
+ALL INNER JOIN t2_00826 ON (a = t2_00826.a) AND (b = t2_00826.b)
+WHERE (a = t2_00826.a) AND (b = t2_00826.b)
 cross and inside and
-SELECT 
    a,
    b,
    t2_00826.a,
    t2_00826.b
FROM t1_00826
ALL INNER JOIN t2_00826 ON (a = t2_00826.a) AND (a = t2_00826.a) AND (a = t2_00826.a) AND (b = t2_00826.b)
WHERE (a = t2_00826.a) AND ((a = t2_00826.a) AND ((a = t2_00826.a) AND (b = t2_00826.b)))
+SELECT 
+    a,
+    b,
+    t2_00826.a,
+    t2_00826.b
+FROM t1_00826
+ALL INNER JOIN t2_00826 ON (a = t2_00826.a) AND (a = t2_00826.a) AND (a = t2_00826.a) AND (b = t2_00826.b)
+WHERE (a = t2_00826.a) AND ((a = t2_00826.a) AND ((a = t2_00826.a) AND (b = t2_00826.b)))
 cross split conjunction
-SELECT 
    a,
    b,
    t2_00826.a,
    t2_00826.b
FROM t1_00826
ALL INNER JOIN t2_00826 ON (a = t2_00826.a) AND (b = t2_00826.b)
WHERE (a = t2_00826.a) AND (b = t2_00826.b) AND (a >= 1) AND (t2_00826.b > 0)
+SELECT 
+    a,
+    b,
+    t2_00826.a,
+    t2_00826.b
+FROM t1_00826
+ALL INNER JOIN t2_00826 ON (a = t2_00826.a) AND (b = t2_00826.b)
+WHERE (a = t2_00826.a) AND (b = t2_00826.b) AND (a >= 1) AND (t2_00826.b > 0)
diff --git a/tests/queries/0_stateless/00849_multiple_comma_join.reference b/tests/queries/0_stateless/00849_multiple_comma_join.reference
index 0f7d28b65a05..5a5a90cbdf2e 100644
--- a/tests/queries/0_stateless/00849_multiple_comma_join.reference
+++ b/tests/queries/0_stateless/00849_multiple_comma_join.reference
@@ -1,18 +1,254 @@
-SELECT a
FROM t1_00849
CROSS JOIN t2_00849
-SELECT a
FROM t1_00849
ALL INNER JOIN t2_00849 ON a = t2_00849.a
WHERE a = t2_00849.a
-SELECT a
FROM t1_00849
ALL INNER JOIN t2_00849 ON b = t2_00849.b
WHERE b = t2_00849.b
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        a AS `--t1_00849.a`,
        b,
        t2_00849.a AS `--t2_00849.a`,
        t2_00849.b
    FROM t1_00849
    ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`
) AS `--.s`
ALL INNER JOIN t3_00849 ON `--t1_00849.a` = a
WHERE (`--t1_00849.a` = `--t2_00849.a`) AND (`--t1_00849.a` = a)
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        a AS `--t1_00849.a`,
        b AS `--t1_00849.b`,
        t2_00849.a,
        t2_00849.b AS `--t2_00849.b`
    FROM t1_00849
    ALL INNER JOIN t2_00849 ON `--t1_00849.b` = `--t2_00849.b`
) AS `--.s`
ALL INNER JOIN t3_00849 ON `--t1_00849.b` = b
WHERE (`--t1_00849.b` = `--t2_00849.b`) AND (`--t1_00849.b` = b)
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        `--t1_00849.a`,
        b,
        `--t2_00849.a`,
        `t2_00849.b`,
        a AS `--t3_00849.a`,
        t3_00849.b
    FROM 
    (
        SELECT 
            a AS `--t1_00849.a`,
            b,
            t2_00849.a AS `--t2_00849.a`,
            t2_00849.b
        FROM t1_00849
        ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`
    ) AS `--.s`
    ALL INNER JOIN t3_00849 ON `--t1_00849.a` = `--t3_00849.a`
) AS `--.s`
ALL INNER JOIN t4_00849 ON `--t1_00849.a` = a
WHERE (`--t1_00849.a` = `--t2_00849.a`) AND (`--t1_00849.a` = `--t3_00849.a`) AND (`--t1_00849.a` = a)
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        `--t1_00849.a`,
        `--t1_00849.b`,
        `t2_00849.a`,
        `--t2_00849.b`,
        a,
        b AS `--t3_00849.b`
    FROM 
    (
        SELECT 
            a AS `--t1_00849.a`,
            b AS `--t1_00849.b`,
            t2_00849.a,
            t2_00849.b AS `--t2_00849.b`
        FROM t1_00849
        ALL INNER JOIN t2_00849 ON `--t1_00849.b` = `--t2_00849.b`
    ) AS `--.s`
    ALL INNER JOIN t3_00849 ON `--t1_00849.b` = `--t3_00849.b`
) AS `--.s`
ALL INNER JOIN t4_00849 ON `--t1_00849.b` = b
WHERE (`--t1_00849.b` = `--t2_00849.b`) AND (`--t1_00849.b` = `--t3_00849.b`) AND (`--t1_00849.b` = b)
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        `--t1_00849.a`,
        b,
        `--t2_00849.a`,
        `t2_00849.b`,
        a AS `--t3_00849.a`,
        t3_00849.b
    FROM 
    (
        SELECT 
            a AS `--t1_00849.a`,
            b,
            t2_00849.a AS `--t2_00849.a`,
            t2_00849.b
        FROM t1_00849
        ALL INNER JOIN t2_00849 ON `--t2_00849.a` = `--t1_00849.a`
    ) AS `--.s`
    ALL INNER JOIN t3_00849 ON `--t2_00849.a` = `--t3_00849.a`
) AS `--.s`
ALL INNER JOIN t4_00849 ON `--t2_00849.a` = a
WHERE (`--t2_00849.a` = `--t1_00849.a`) AND (`--t2_00849.a` = `--t3_00849.a`) AND (`--t2_00849.a` = a)
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        `--t1_00849.a`,
        b,
        `--t2_00849.a`,
        `t2_00849.b`,
        a AS `--t3_00849.a`,
        t3_00849.b
    FROM 
    (
        SELECT 
            a AS `--t1_00849.a`,
            b,
            t2_00849.a AS `--t2_00849.a`,
            t2_00849.b
        FROM t1_00849
        CROSS JOIN t2_00849
    ) AS `--.s`
    ALL INNER JOIN t3_00849 ON (`--t3_00849.a` = `--t1_00849.a`) AND (`--t3_00849.a` = `--t2_00849.a`)
) AS `--.s`
ALL INNER JOIN t4_00849 ON `--t3_00849.a` = a
WHERE (`--t3_00849.a` = `--t1_00849.a`) AND (`--t3_00849.a` = `--t2_00849.a`) AND (`--t3_00849.a` = a)
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        `--t1_00849.a`,
        b,
        `--t2_00849.a`,
        `t2_00849.b`,
        a AS `--t3_00849.a`,
        t3_00849.b
    FROM 
    (
        SELECT 
            a AS `--t1_00849.a`,
            b,
            t2_00849.a AS `--t2_00849.a`,
            t2_00849.b
        FROM t1_00849
        CROSS JOIN t2_00849
    ) AS `--.s`
    CROSS JOIN t3_00849
) AS `--.s`
ALL INNER JOIN t4_00849 ON (a = `--t1_00849.a`) AND (a = `--t2_00849.a`) AND (a = `--t3_00849.a`)
WHERE (a = `--t1_00849.a`) AND (a = `--t2_00849.a`) AND (a = `--t3_00849.a`)
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        `--t1_00849.a`,
        b,
        `--t2_00849.a`,
        `t2_00849.b`,
        a AS `--t3_00849.a`,
        t3_00849.b
    FROM 
    (
        SELECT 
            a AS `--t1_00849.a`,
            b,
            t2_00849.a AS `--t2_00849.a`,
            t2_00849.b
        FROM t1_00849
        ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`
    ) AS `--.s`
    ALL INNER JOIN t3_00849 ON `--t2_00849.a` = `--t3_00849.a`
) AS `--.s`
ALL INNER JOIN t4_00849 ON `--t3_00849.a` = a
WHERE (`--t1_00849.a` = `--t2_00849.a`) AND (`--t2_00849.a` = `--t3_00849.a`) AND (`--t3_00849.a` = a)
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        `--t1_00849.a`,
        b,
        `t2_00849.a`,
        `t2_00849.b`,
        a,
        t3_00849.b
    FROM 
    (
        SELECT 
            a AS `--t1_00849.a`,
            b,
            t2_00849.a,
            t2_00849.b
        FROM t1_00849
        CROSS JOIN t2_00849
    ) AS `--.s`
    CROSS JOIN t3_00849
) AS `--.s`
CROSS JOIN t4_00849
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        `--t1_00849.a`,
        b,
        `t2_00849.a`,
        `t2_00849.b`,
        a,
        t3_00849.b
    FROM 
    (
        SELECT 
            a AS `--t1_00849.a`,
            b,
            t2_00849.a,
            t2_00849.b
        FROM t1_00849
        CROSS JOIN t2_00849
    ) AS `--.s`
    CROSS JOIN t3_00849
) AS `--.s`
CROSS JOIN t4_00849
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        a AS `--t1_00849.a`,
        b,
        t2_00849.a,
        t2_00849.b
    FROM t1_00849
    CROSS JOIN t2_00849
) AS `--.s`
CROSS JOIN t3_00849
-SELECT `--t1_00849.a` AS `t1_00849.a`
FROM 
(
    SELECT 
        a AS `--t1_00849.a`,
        b,
        t2_00849.a AS `--t2_00849.a`,
        t2_00849.b
    FROM t1_00849
    ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`
) AS `--.s`
CROSS JOIN t3_00849
+SELECT a
+FROM t1_00849
+CROSS JOIN t2_00849
+SELECT a
+FROM t1_00849
+ALL INNER JOIN t2_00849 ON a = t2_00849.a
+WHERE a = t2_00849.a
+SELECT a
+FROM t1_00849
+ALL INNER JOIN t2_00849 ON b = t2_00849.b
+WHERE b = t2_00849.b
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        a AS `--t1_00849.a`,
+        b,
+        t2_00849.a AS `--t2_00849.a`,
+        t2_00849.b
+    FROM t1_00849
+    ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`
+) AS `--.s`
+ALL INNER JOIN t3_00849 ON `--t1_00849.a` = a
+WHERE (`--t1_00849.a` = `--t2_00849.a`) AND (`--t1_00849.a` = a)
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        a AS `--t1_00849.a`,
+        b AS `--t1_00849.b`,
+        t2_00849.a,
+        t2_00849.b AS `--t2_00849.b`
+    FROM t1_00849
+    ALL INNER JOIN t2_00849 ON `--t1_00849.b` = `--t2_00849.b`
+) AS `--.s`
+ALL INNER JOIN t3_00849 ON `--t1_00849.b` = b
+WHERE (`--t1_00849.b` = `--t2_00849.b`) AND (`--t1_00849.b` = b)
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        `--t1_00849.a`,
+        b,
+        `--t2_00849.a`,
+        `t2_00849.b`,
+        a AS `--t3_00849.a`,
+        t3_00849.b
+    FROM 
+    (
+        SELECT 
+            a AS `--t1_00849.a`,
+            b,
+            t2_00849.a AS `--t2_00849.a`,
+            t2_00849.b
+        FROM t1_00849
+        ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`
+    ) AS `--.s`
+    ALL INNER JOIN t3_00849 ON `--t1_00849.a` = `--t3_00849.a`
+) AS `--.s`
+ALL INNER JOIN t4_00849 ON `--t1_00849.a` = a
+WHERE (`--t1_00849.a` = `--t2_00849.a`) AND (`--t1_00849.a` = `--t3_00849.a`) AND (`--t1_00849.a` = a)
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        `--t1_00849.a`,
+        `--t1_00849.b`,
+        `t2_00849.a`,
+        `--t2_00849.b`,
+        a,
+        b AS `--t3_00849.b`
+    FROM 
+    (
+        SELECT 
+            a AS `--t1_00849.a`,
+            b AS `--t1_00849.b`,
+            t2_00849.a,
+            t2_00849.b AS `--t2_00849.b`
+        FROM t1_00849
+        ALL INNER JOIN t2_00849 ON `--t1_00849.b` = `--t2_00849.b`
+    ) AS `--.s`
+    ALL INNER JOIN t3_00849 ON `--t1_00849.b` = `--t3_00849.b`
+) AS `--.s`
+ALL INNER JOIN t4_00849 ON `--t1_00849.b` = b
+WHERE (`--t1_00849.b` = `--t2_00849.b`) AND (`--t1_00849.b` = `--t3_00849.b`) AND (`--t1_00849.b` = b)
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        `--t1_00849.a`,
+        b,
+        `--t2_00849.a`,
+        `t2_00849.b`,
+        a AS `--t3_00849.a`,
+        t3_00849.b
+    FROM 
+    (
+        SELECT 
+            a AS `--t1_00849.a`,
+            b,
+            t2_00849.a AS `--t2_00849.a`,
+            t2_00849.b
+        FROM t1_00849
+        ALL INNER JOIN t2_00849 ON `--t2_00849.a` = `--t1_00849.a`
+    ) AS `--.s`
+    ALL INNER JOIN t3_00849 ON `--t2_00849.a` = `--t3_00849.a`
+) AS `--.s`
+ALL INNER JOIN t4_00849 ON `--t2_00849.a` = a
+WHERE (`--t2_00849.a` = `--t1_00849.a`) AND (`--t2_00849.a` = `--t3_00849.a`) AND (`--t2_00849.a` = a)
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        `--t1_00849.a`,
+        b,
+        `--t2_00849.a`,
+        `t2_00849.b`,
+        a AS `--t3_00849.a`,
+        t3_00849.b
+    FROM 
+    (
+        SELECT 
+            a AS `--t1_00849.a`,
+            b,
+            t2_00849.a AS `--t2_00849.a`,
+            t2_00849.b
+        FROM t1_00849
+        CROSS JOIN t2_00849
+    ) AS `--.s`
+    ALL INNER JOIN t3_00849 ON (`--t3_00849.a` = `--t1_00849.a`) AND (`--t3_00849.a` = `--t2_00849.a`)
+) AS `--.s`
+ALL INNER JOIN t4_00849 ON `--t3_00849.a` = a
+WHERE (`--t3_00849.a` = `--t1_00849.a`) AND (`--t3_00849.a` = `--t2_00849.a`) AND (`--t3_00849.a` = a)
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        `--t1_00849.a`,
+        b,
+        `--t2_00849.a`,
+        `t2_00849.b`,
+        a AS `--t3_00849.a`,
+        t3_00849.b
+    FROM 
+    (
+        SELECT 
+            a AS `--t1_00849.a`,
+            b,
+            t2_00849.a AS `--t2_00849.a`,
+            t2_00849.b
+        FROM t1_00849
+        CROSS JOIN t2_00849
+    ) AS `--.s`
+    CROSS JOIN t3_00849
+) AS `--.s`
+ALL INNER JOIN t4_00849 ON (a = `--t1_00849.a`) AND (a = `--t2_00849.a`) AND (a = `--t3_00849.a`)
+WHERE (a = `--t1_00849.a`) AND (a = `--t2_00849.a`) AND (a = `--t3_00849.a`)
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        `--t1_00849.a`,
+        b,
+        `--t2_00849.a`,
+        `t2_00849.b`,
+        a AS `--t3_00849.a`,
+        t3_00849.b
+    FROM 
+    (
+        SELECT 
+            a AS `--t1_00849.a`,
+            b,
+            t2_00849.a AS `--t2_00849.a`,
+            t2_00849.b
+        FROM t1_00849
+        ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`
+    ) AS `--.s`
+    ALL INNER JOIN t3_00849 ON `--t2_00849.a` = `--t3_00849.a`
+) AS `--.s`
+ALL INNER JOIN t4_00849 ON `--t3_00849.a` = a
+WHERE (`--t1_00849.a` = `--t2_00849.a`) AND (`--t2_00849.a` = `--t3_00849.a`) AND (`--t3_00849.a` = a)
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        `--t1_00849.a`,
+        b,
+        `t2_00849.a`,
+        `t2_00849.b`,
+        a,
+        t3_00849.b
+    FROM 
+    (
+        SELECT 
+            a AS `--t1_00849.a`,
+            b,
+            t2_00849.a,
+            t2_00849.b
+        FROM t1_00849
+        CROSS JOIN t2_00849
+    ) AS `--.s`
+    CROSS JOIN t3_00849
+) AS `--.s`
+CROSS JOIN t4_00849
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        `--t1_00849.a`,
+        b,
+        `t2_00849.a`,
+        `t2_00849.b`,
+        a,
+        t3_00849.b
+    FROM 
+    (
+        SELECT 
+            a AS `--t1_00849.a`,
+            b,
+            t2_00849.a,
+            t2_00849.b
+        FROM t1_00849
+        CROSS JOIN t2_00849
+    ) AS `--.s`
+    CROSS JOIN t3_00849
+) AS `--.s`
+CROSS JOIN t4_00849
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        a AS `--t1_00849.a`,
+        b,
+        t2_00849.a,
+        t2_00849.b
+    FROM t1_00849
+    CROSS JOIN t2_00849
+) AS `--.s`
+CROSS JOIN t3_00849
+SELECT `--t1_00849.a` AS `t1_00849.a`
+FROM 
+(
+    SELECT 
+        a AS `--t1_00849.a`,
+        b,
+        t2_00849.a AS `--t2_00849.a`,
+        t2_00849.b
+    FROM t1_00849
+    ALL INNER JOIN t2_00849 ON `--t1_00849.a` = `--t2_00849.a`
+) AS `--.s`
+CROSS JOIN t3_00849
 SELECT * FROM t1, t2
 1	1	1	1
 1	1	1	\N
diff --git a/tests/queries/0_stateless/00849_multiple_comma_join_2.reference b/tests/queries/0_stateless/00849_multiple_comma_join_2.reference
index f2e832123e05..e08d6ff1192b 100644
--- a/tests/queries/0_stateless/00849_multiple_comma_join_2.reference
+++ b/tests/queries/0_stateless/00849_multiple_comma_join_2.reference
@@ -1,18 +1,197 @@
-SELECT a
FROM t1
CROSS JOIN t2
-SELECT a
FROM t1
ALL INNER JOIN t2 ON a = t2.a
WHERE a = t2.a
-SELECT a
FROM t1
ALL INNER JOIN t2 ON b = t2.b
WHERE b = t2.b
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        a AS `--t1.a`,
        t2.a AS `--t2.a`
    FROM t1
    ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`
) AS `--.s`
ALL INNER JOIN t3 ON `--t1.a` = a
WHERE (`--t1.a` = `--t2.a`) AND (`--t1.a` = a)
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        b AS `--t1.b`,
        a AS `--t1.a`,
        t2.b AS `--t2.b`
    FROM t1
    ALL INNER JOIN t2 ON `--t1.b` = `--t2.b`
) AS `--.s`
ALL INNER JOIN t3 ON `--t1.b` = b
WHERE (`--t1.b` = `--t2.b`) AND (`--t1.b` = b)
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        `--t1.a`,
        `--t2.a`,
        a AS `--t3.a`
    FROM 
    (
        SELECT 
            a AS `--t1.a`,
            t2.a AS `--t2.a`
        FROM t1
        ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`
    ) AS `--.s`
    ALL INNER JOIN t3 ON `--t1.a` = `--t3.a`
) AS `--.s`
ALL INNER JOIN t4 ON `--t1.a` = a
WHERE (`--t1.a` = `--t2.a`) AND (`--t1.a` = `--t3.a`) AND (`--t1.a` = a)
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        `--t1.b`,
        `--t1.a`,
        `--t2.b`,
        b AS `--t3.b`
    FROM 
    (
        SELECT 
            b AS `--t1.b`,
            a AS `--t1.a`,
            t2.b AS `--t2.b`
        FROM t1
        ALL INNER JOIN t2 ON `--t1.b` = `--t2.b`
    ) AS `--.s`
    ALL INNER JOIN t3 ON `--t1.b` = `--t3.b`
) AS `--.s`
ALL INNER JOIN t4 ON `--t1.b` = b
WHERE (`--t1.b` = `--t2.b`) AND (`--t1.b` = `--t3.b`) AND (`--t1.b` = b)
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        `--t1.a`,
        `--t2.a`,
        a AS `--t3.a`
    FROM 
    (
        SELECT 
            a AS `--t1.a`,
            t2.a AS `--t2.a`
        FROM t1
        ALL INNER JOIN t2 ON `--t2.a` = `--t1.a`
    ) AS `--.s`
    ALL INNER JOIN t3 ON `--t2.a` = `--t3.a`
) AS `--.s`
ALL INNER JOIN t4 ON `--t2.a` = a
WHERE (`--t2.a` = `--t1.a`) AND (`--t2.a` = `--t3.a`) AND (`--t2.a` = a)
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        `--t1.a`,
        `--t2.a`,
        a AS `--t3.a`
    FROM 
    (
        SELECT 
            a AS `--t1.a`,
            t2.a AS `--t2.a`
        FROM t1
        CROSS JOIN t2
    ) AS `--.s`
    ALL INNER JOIN t3 ON (`--t3.a` = `--t1.a`) AND (`--t3.a` = `--t2.a`)
) AS `--.s`
ALL INNER JOIN t4 ON `--t3.a` = a
WHERE (`--t3.a` = `--t1.a`) AND (`--t3.a` = `--t2.a`) AND (`--t3.a` = a)
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        `--t1.a`,
        `--t2.a`,
        a AS `--t3.a`
    FROM 
    (
        SELECT 
            a AS `--t1.a`,
            t2.a AS `--t2.a`
        FROM t1
        CROSS JOIN t2
    ) AS `--.s`
    CROSS JOIN t3
) AS `--.s`
ALL INNER JOIN t4 ON (a = `--t1.a`) AND (a = `--t2.a`) AND (a = `--t3.a`)
WHERE (a = `--t1.a`) AND (a = `--t2.a`) AND (a = `--t3.a`)
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        `--t1.a`,
        `--t2.a`,
        a AS `--t3.a`
    FROM 
    (
        SELECT 
            a AS `--t1.a`,
            t2.a AS `--t2.a`
        FROM t1
        ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`
    ) AS `--.s`
    ALL INNER JOIN t3 ON `--t2.a` = `--t3.a`
) AS `--.s`
ALL INNER JOIN t4 ON `--t3.a` = a
WHERE (`--t1.a` = `--t2.a`) AND (`--t2.a` = `--t3.a`) AND (`--t3.a` = a)
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT `--t1.a`
    FROM 
    (
        SELECT a AS `--t1.a`
        FROM t1
        CROSS JOIN t2
    ) AS `--.s`
    CROSS JOIN t3
) AS `--.s`
CROSS JOIN t4
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT `--t1.a`
    FROM 
    (
        SELECT a AS `--t1.a`
        FROM t1
        CROSS JOIN t2
    ) AS `--.s`
    CROSS JOIN t3
) AS `--.s`
CROSS JOIN t4
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT a AS `--t1.a`
    FROM t1
    CROSS JOIN t2
) AS `--.s`
CROSS JOIN t3
-SELECT `--t1.a` AS `t1.a`
FROM 
(
    SELECT 
        a AS `--t1.a`,
        t2.a AS `--t2.a`
    FROM t1
    ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`
) AS `--.s`
CROSS JOIN t3
+SELECT a
+FROM t1
+CROSS JOIN t2
+SELECT a
+FROM t1
+ALL INNER JOIN t2 ON a = t2.a
+WHERE a = t2.a
+SELECT a
+FROM t1
+ALL INNER JOIN t2 ON b = t2.b
+WHERE b = t2.b
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        a AS `--t1.a`,
+        t2.a AS `--t2.a`
+    FROM t1
+    ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`
+) AS `--.s`
+ALL INNER JOIN t3 ON `--t1.a` = a
+WHERE (`--t1.a` = `--t2.a`) AND (`--t1.a` = a)
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        b AS `--t1.b`,
+        a AS `--t1.a`,
+        t2.b AS `--t2.b`
+    FROM t1
+    ALL INNER JOIN t2 ON `--t1.b` = `--t2.b`
+) AS `--.s`
+ALL INNER JOIN t3 ON `--t1.b` = b
+WHERE (`--t1.b` = `--t2.b`) AND (`--t1.b` = b)
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        `--t1.a`,
+        `--t2.a`,
+        a AS `--t3.a`
+    FROM 
+    (
+        SELECT 
+            a AS `--t1.a`,
+            t2.a AS `--t2.a`
+        FROM t1
+        ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`
+    ) AS `--.s`
+    ALL INNER JOIN t3 ON `--t1.a` = `--t3.a`
+) AS `--.s`
+ALL INNER JOIN t4 ON `--t1.a` = a
+WHERE (`--t1.a` = `--t2.a`) AND (`--t1.a` = `--t3.a`) AND (`--t1.a` = a)
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        `--t1.b`,
+        `--t1.a`,
+        `--t2.b`,
+        b AS `--t3.b`
+    FROM 
+    (
+        SELECT 
+            b AS `--t1.b`,
+            a AS `--t1.a`,
+            t2.b AS `--t2.b`
+        FROM t1
+        ALL INNER JOIN t2 ON `--t1.b` = `--t2.b`
+    ) AS `--.s`
+    ALL INNER JOIN t3 ON `--t1.b` = `--t3.b`
+) AS `--.s`
+ALL INNER JOIN t4 ON `--t1.b` = b
+WHERE (`--t1.b` = `--t2.b`) AND (`--t1.b` = `--t3.b`) AND (`--t1.b` = b)
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        `--t1.a`,
+        `--t2.a`,
+        a AS `--t3.a`
+    FROM 
+    (
+        SELECT 
+            a AS `--t1.a`,
+            t2.a AS `--t2.a`
+        FROM t1
+        ALL INNER JOIN t2 ON `--t2.a` = `--t1.a`
+    ) AS `--.s`
+    ALL INNER JOIN t3 ON `--t2.a` = `--t3.a`
+) AS `--.s`
+ALL INNER JOIN t4 ON `--t2.a` = a
+WHERE (`--t2.a` = `--t1.a`) AND (`--t2.a` = `--t3.a`) AND (`--t2.a` = a)
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        `--t1.a`,
+        `--t2.a`,
+        a AS `--t3.a`
+    FROM 
+    (
+        SELECT 
+            a AS `--t1.a`,
+            t2.a AS `--t2.a`
+        FROM t1
+        CROSS JOIN t2
+    ) AS `--.s`
+    ALL INNER JOIN t3 ON (`--t3.a` = `--t1.a`) AND (`--t3.a` = `--t2.a`)
+) AS `--.s`
+ALL INNER JOIN t4 ON `--t3.a` = a
+WHERE (`--t3.a` = `--t1.a`) AND (`--t3.a` = `--t2.a`) AND (`--t3.a` = a)
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        `--t1.a`,
+        `--t2.a`,
+        a AS `--t3.a`
+    FROM 
+    (
+        SELECT 
+            a AS `--t1.a`,
+            t2.a AS `--t2.a`
+        FROM t1
+        CROSS JOIN t2
+    ) AS `--.s`
+    CROSS JOIN t3
+) AS `--.s`
+ALL INNER JOIN t4 ON (a = `--t1.a`) AND (a = `--t2.a`) AND (a = `--t3.a`)
+WHERE (a = `--t1.a`) AND (a = `--t2.a`) AND (a = `--t3.a`)
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        `--t1.a`,
+        `--t2.a`,
+        a AS `--t3.a`
+    FROM 
+    (
+        SELECT 
+            a AS `--t1.a`,
+            t2.a AS `--t2.a`
+        FROM t1
+        ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`
+    ) AS `--.s`
+    ALL INNER JOIN t3 ON `--t2.a` = `--t3.a`
+) AS `--.s`
+ALL INNER JOIN t4 ON `--t3.a` = a
+WHERE (`--t1.a` = `--t2.a`) AND (`--t2.a` = `--t3.a`) AND (`--t3.a` = a)
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT `--t1.a`
+    FROM 
+    (
+        SELECT a AS `--t1.a`
+        FROM t1
+        CROSS JOIN t2
+    ) AS `--.s`
+    CROSS JOIN t3
+) AS `--.s`
+CROSS JOIN t4
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT `--t1.a`
+    FROM 
+    (
+        SELECT a AS `--t1.a`
+        FROM t1
+        CROSS JOIN t2
+    ) AS `--.s`
+    CROSS JOIN t3
+) AS `--.s`
+CROSS JOIN t4
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT a AS `--t1.a`
+    FROM t1
+    CROSS JOIN t2
+) AS `--.s`
+CROSS JOIN t3
+SELECT `--t1.a` AS `t1.a`
+FROM 
+(
+    SELECT 
+        a AS `--t1.a`,
+        t2.a AS `--t2.a`
+    FROM t1
+    ALL INNER JOIN t2 ON `--t1.a` = `--t2.a`
+) AS `--.s`
+CROSS JOIN t3
 SELECT * FROM t1, t2
 1	1	1	1
 1	1	1	\N
diff --git a/tests/queries/0_stateless/00908_analyze_query.reference b/tests/queries/0_stateless/00908_analyze_query.reference
index 66db6f5a2e47..0305f528b250 100644
--- a/tests/queries/0_stateless/00908_analyze_query.reference
+++ b/tests/queries/0_stateless/00908_analyze_query.reference
@@ -1,1 +1,4 @@
-SELECT 
    a,
    b
FROM a
+SELECT 
+    a,
+    b
+FROM a
diff --git a/tests/queries/0_stateless/01029_early_constant_folding.reference b/tests/queries/0_stateless/01029_early_constant_folding.reference
index 399f7f5d3b93..7e2f6c7ce765 100644
--- a/tests/queries/0_stateless/01029_early_constant_folding.reference
+++ b/tests/queries/0_stateless/01029_early_constant_folding.reference
@@ -1,5 +1,12 @@
-SELECT 1
WHERE 0
 SELECT 1
-SELECT 1
WHERE 0
-SELECT 1
WHERE 1 IN (
(
    SELECT arrayJoin([1, 2, 3])
) AS subquery)
-SELECT 1
WHERE NOT ignore()
+WHERE 0
+SELECT 1
+SELECT 1
+WHERE 0
+SELECT 1
+WHERE 1 IN (
+(
+    SELECT arrayJoin([1, 2, 3])
+) AS subquery)
+SELECT 1
+WHERE NOT ignore()
diff --git a/tests/queries/0_stateless/01056_predicate_optimizer_bugs.reference b/tests/queries/0_stateless/01056_predicate_optimizer_bugs.reference
index c797226d8321..fd9d96bdf5fa 100644
--- a/tests/queries/0_stateless/01056_predicate_optimizer_bugs.reference
+++ b/tests/queries/0_stateless/01056_predicate_optimizer_bugs.reference
@@ -1,19 +1,125 @@
-SELECT 
    k,
    v,
    d,
    i
FROM 
(
    SELECT 
        t.1 AS k,
        t.2 AS v,
        runningDifference(v) AS d,
        runningDifference(cityHash64(t.1)) AS i
    FROM 
    (
        SELECT arrayJoin([(\'a\', 1), (\'a\', 2), (\'a\', 3), (\'b\', 11), (\'b\', 13), (\'b\', 15)]) AS t
    )
)
WHERE i = 0
+SELECT 
+    k,
+    v,
+    d,
+    i
+FROM 
+(
+    SELECT 
+        t.1 AS k,
+        t.2 AS v,
+        runningDifference(v) AS d,
+        runningDifference(cityHash64(t.1)) AS i
+    FROM 
+    (
+        SELECT arrayJoin([(\'a\', 1), (\'a\', 2), (\'a\', 3), (\'b\', 11), (\'b\', 13), (\'b\', 15)]) AS t
+    )
+)
+WHERE i = 0
 a	1	0	0
 a	2	1	0
 a	3	1	0
 b	13	2	0
 b	15	2	0
-SELECT 
    co,
    co2,
    co3,
    num
FROM 
(
    SELECT 
        co,
        co2,
        co3,
        count() AS num
    FROM 
    (
        SELECT 
            1 AS co,
            2 AS co2,
            3 AS co3
    )
    GROUP BY 
        co,
        co2,
        co3
        WITH CUBE
    HAVING (co2 != 2) AND (co != 0)
)
WHERE (co != 0) AND (co2 != 2)
+SELECT 
+    co,
+    co2,
+    co3,
+    num
+FROM 
+(
+    SELECT 
+        co,
+        co2,
+        co3,
+        count() AS num
+    FROM 
+    (
+        SELECT 
+            1 AS co,
+            2 AS co2,
+            3 AS co3
+    )
+    GROUP BY 
+        co,
+        co2,
+        co3
+        WITH CUBE
+    HAVING (co2 != 2) AND (co != 0)
+)
+WHERE (co != 0) AND (co2 != 2)
 1	0	3	1
 1	0	0	1
-SELECT alias AS name
FROM 
(
    SELECT name AS alias
    FROM system.settings
    WHERE alias = \'enable_optimize_predicate_expression\'
)
ANY INNER JOIN 
(
    SELECT name
    FROM system.settings
) USING (name)
WHERE name = \'enable_optimize_predicate_expression\'
+SELECT alias AS name
+FROM 
+(
+    SELECT name AS alias
+    FROM system.settings
+    WHERE alias = \'enable_optimize_predicate_expression\'
+)
+ANY INNER JOIN 
+(
+    SELECT name
+    FROM system.settings
+) USING (name)
+WHERE name = \'enable_optimize_predicate_expression\'
 enable_optimize_predicate_expression
 1	val11	val21	val31
-SELECT ccc
FROM 
(
    SELECT 1 AS ccc
    WHERE 0
    UNION ALL
    SELECT ccc
    FROM 
    (
        SELECT 2 AS ccc
    )
    ANY INNER JOIN 
    (
        SELECT 2 AS ccc
    ) USING (ccc)
    WHERE ccc > 1
)
WHERE ccc > 1
+SELECT ccc
+FROM 
+(
+    SELECT 1 AS ccc
+    WHERE 0
+    UNION ALL
+    SELECT ccc
+    FROM 
+    (
+        SELECT 2 AS ccc
+    )
+    ANY INNER JOIN 
+    (
+        SELECT 2 AS ccc
+    ) USING (ccc)
+    WHERE ccc > 1
+)
+WHERE ccc > 1
 2
-SELECT 
    ts,
    id,
    id_b,
    b.ts,
    b.id,
    id_c
FROM 
(
    SELECT 
        ts,
        id,
        id_b
    FROM A
    WHERE ts <= toDateTime(\'1970-01-01 03:00:00\')
) AS a
ALL LEFT JOIN B AS b ON b.id = id_b
WHERE ts <= toDateTime(\'1970-01-01 03:00:00\')
-SELECT 
    ts AS `--a.ts`,
    id AS `--a.id`,
    id_b AS `--a.id_b`,
    b.ts AS `--b.ts`,
    b.id AS `--b.id`,
    id_c AS `--b.id_c`
FROM 
(
    SELECT 
        ts,
        id,
        id_b
    FROM A
    WHERE ts <= toDateTime(\'1970-01-01 03:00:00\')
) AS a
ALL LEFT JOIN B AS b ON `--b.id` = `--a.id_b`
WHERE `--a.ts` <= toDateTime(\'1970-01-01 03:00:00\')
+SELECT 
+    ts,
+    id,
+    id_b,
+    b.ts,
+    b.id,
+    id_c
+FROM 
+(
+    SELECT 
+        ts,
+        id,
+        id_b
+    FROM A
+    WHERE ts <= toDateTime(\'1970-01-01 03:00:00\')
+) AS a
+ALL LEFT JOIN B AS b ON b.id = id_b
+WHERE ts <= toDateTime(\'1970-01-01 03:00:00\')
+SELECT 
+    ts AS `--a.ts`,
+    id AS `--a.id`,
+    id_b AS `--a.id_b`,
+    b.ts AS `--b.ts`,
+    b.id AS `--b.id`,
+    id_c AS `--b.id_c`
+FROM 
+(
+    SELECT 
+        ts,
+        id,
+        id_b
+    FROM A
+    WHERE ts <= toDateTime(\'1970-01-01 03:00:00\')
+) AS a
+ALL LEFT JOIN B AS b ON `--b.id` = `--a.id_b`
+WHERE `--a.ts` <= toDateTime(\'1970-01-01 03:00:00\')
 2	3
 3	4
 4	5
@@ -22,8 +128,33 @@ SELECT 
    ts AS `--a.ts`,
    id AS `--a.id`,
    id_b AS `--a.id_b`,

 4	0
 2	3
 4	5
-SELECT dummy
FROM 
(
    SELECT dummy
    FROM system.one
    WHERE arrayMap(x -> (x + 1), [dummy]) = [1]
)
WHERE arrayMap(x -> (x + 1), [dummy]) = [1]
+SELECT dummy
+FROM 
+(
+    SELECT dummy
+    FROM system.one
+    WHERE arrayMap(x -> (x + 1), [dummy]) = [1]
+)
+WHERE arrayMap(x -> (x + 1), [dummy]) = [1]
 0
-SELECT 
    id,
    value,
    value_1
FROM 
(
    SELECT 
        1 AS id,
        2 AS value
)
ALL INNER JOIN 
(
    SELECT 
        1 AS id,
        3 AS value_1
) USING (id)
WHERE arrayMap(x -> ((x + value) + value_1), [1]) = [6]
+SELECT 
+    id,
+    value,
+    value_1
+FROM 
+(
+    SELECT 
+        1 AS id,
+        2 AS value
+)
+ALL INNER JOIN 
+(
+    SELECT 
+        1 AS id,
+        3 AS value_1
+) USING (id)
+WHERE arrayMap(x -> ((x + value) + value_1), [1]) = [6]
 1	2	3
-SELECT dummy
FROM system.one
WHERE (dummy > 0) AND (dummy < 0)
+SELECT dummy
+FROM system.one
+WHERE (dummy > 0) AND (dummy < 0)
diff --git a/tests/queries/0_stateless/01076_predicate_optimizer_with_view.reference b/tests/queries/0_stateless/01076_predicate_optimizer_with_view.reference
index 5cc0a546e272..d6426f679c50 100644
--- a/tests/queries/0_stateless/01076_predicate_optimizer_with_view.reference
+++ b/tests/queries/0_stateless/01076_predicate_optimizer_with_view.reference
@@ -1,4 +1,40 @@
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT *
    FROM default.test
    HAVING id = 1
) AS test_view
WHERE id = 1
-SELECT 
    date,
    id,
    name,
    value
FROM 
(
    SELECT *
    FROM default.test
    HAVING id = 2
) AS test_view
WHERE id = 2
-SELECT id
FROM 
(
    SELECT *
    FROM default.test
    HAVING id = 1
) AS test_view
WHERE id = 1
-SELECT id
FROM 
(
    SELECT *
    FROM default.test
    HAVING id = 1
) AS s
WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT *
+    FROM default.test
+    HAVING id = 1
+) AS test_view
+WHERE id = 1
+SELECT 
+    date,
+    id,
+    name,
+    value
+FROM 
+(
+    SELECT *
+    FROM default.test
+    HAVING id = 2
+) AS test_view
+WHERE id = 2
+SELECT id
+FROM 
+(
+    SELECT *
+    FROM default.test
+    HAVING id = 1
+) AS test_view
+WHERE id = 1
+SELECT id
+FROM 
+(
+    SELECT *
+    FROM default.test
+    HAVING id = 1
+) AS s
+WHERE id = 1
diff --git a/tests/queries/0_stateless/01083_cross_to_inner_with_like.reference b/tests/queries/0_stateless/01083_cross_to_inner_with_like.reference
index e6ebffcae9c0..5491e82c7d32 100644
--- a/tests/queries/0_stateless/01083_cross_to_inner_with_like.reference
+++ b/tests/queries/0_stateless/01083_cross_to_inner_with_like.reference
@@ -1,3 +1,21 @@
-SELECT 
    k,
    r.k,
    name
FROM n
ALL INNER JOIN r ON k = r.k
WHERE (k = r.k) AND (name = \'A\')
-SELECT 
    k,
    r.k,
    name
FROM n
ALL INNER JOIN r ON k = r.k
WHERE (k = r.k) AND (name LIKE \'A%\')
-SELECT 
    k,
    r.k,
    name
FROM n
ALL INNER JOIN r ON k = r.k
WHERE (k = r.k) AND (name NOT LIKE \'A%\')
+SELECT 
+    k,
+    r.k,
+    name
+FROM n
+ALL INNER JOIN r ON k = r.k
+WHERE (k = r.k) AND (name = \'A\')
+SELECT 
+    k,
+    r.k,
+    name
+FROM n
+ALL INNER JOIN r ON k = r.k
+WHERE (k = r.k) AND (name LIKE \'A%\')
+SELECT 
+    k,
+    r.k,
+    name
+FROM n
+ALL INNER JOIN r ON k = r.k
+WHERE (k = r.k) AND (name NOT LIKE \'A%\')
diff --git a/tests/queries/0_stateless/01259_combinator_distinct.reference b/tests/queries/0_stateless/01259_combinator_distinct.reference
index 94e4f7d0d179..3196d78ee44f 100644
--- a/tests/queries/0_stateless/01259_combinator_distinct.reference
+++ b/tests/queries/0_stateless/01259_combinator_distinct.reference
@@ -10,6 +10,8 @@
 24
 27
 2
-SELECT uniqExactIf(number % 10, (number % 5) = 2)
FROM numbers(10000)
+SELECT uniqExactIf(number % 10, (number % 5) = 2)
+FROM numbers(10000)
 9
-SELECT sumDistinctIf(number % 10, (number % 5) = 2)
FROM numbers(10000)
+SELECT sumDistinctIf(number % 10, (number % 5) = 2)
+FROM numbers(10000)
diff --git a/tests/queries/0_stateless/01271_optimize_arithmetic_operations_in_aggr_func.reference b/tests/queries/0_stateless/01271_optimize_arithmetic_operations_in_aggr_func.reference
index ba265f2a7ce0..eeba26460467 100644
--- a/tests/queries/0_stateless/01271_optimize_arithmetic_operations_in_aggr_func.reference
+++ b/tests/queries/0_stateless/01271_optimize_arithmetic_operations_in_aggr_func.reference
@@ -1,51 +1,459 @@
-SELECT 
    sum(n + 1),
    sum(1 + n),
    sum(n - 1),
    sum(1 - n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(n) * 2,
    2 * sum(n),
    sum(n) / 2,
    sum(1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(n) + 1,
    1 + min(n),
    min(n) - 1,
    1 - min(n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(n) * 2,
    2 * min(n),
    min(n) / 2,
    min(1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(n) + 1,
    1 + max(n),
    max(n) - 1,
    1 - max(n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(n) * 2,
    2 * max(n),
    max(n) / 2,
    max(1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(n + -1),
    sum(-1 + n),
    sum(n - -1),
    sum(-1 - n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(n) * -2,
    -2 * sum(n),
    sum(n) / -2,
    sum(-1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(n) + -1,
    -1 + min(n),
    min(n) - -1,
    -1 - min(n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(n) * -2,
    -2 * max(n),
    max(n) / -2,
    min(-1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(n) + -1,
    -1 + max(n),
    max(n) - -1,
    -1 - max(n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(n) * -2,
    -2 * min(n),
    min(n) / -2,
    max(-1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(abs(2) + 1),
    sum(abs(2) + n),
    sum(n - abs(2)),
    sum(1 - abs(2))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(abs(2)) * 2,
    sum(abs(2) * n),
    sum(n / abs(2)),
    sum(1 / abs(2))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(abs(2)) + 1,
    min(abs(2) + n),
    min(n - abs(2)),
    1 - min(abs(2))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(abs(2)) * 2,
    min(abs(2) * n),
    min(n / abs(2)),
    min(1 / abs(2))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(abs(2)) + 1,
    max(abs(2) + n),
    max(n - abs(2)),
    1 - max(abs(2))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(abs(2)) * 2,
    max(abs(2) * n),
    max(n / abs(2)),
    max(1 / abs(2))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(abs(n) + 1),
    sum(abs(n) + n),
    sum(n - abs(n)),
    sum(1 - abs(n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(abs(n)) * 2,
    sum(abs(n) * n),
    sum(n / abs(n)),
    sum(1 / abs(n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(abs(n)) + 1,
    min(abs(n) + n),
    min(n - abs(n)),
    1 - min(abs(n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(abs(n)) * 2,
    min(abs(n) * n),
    min(n / abs(n)),
    min(1 / abs(n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(abs(n)) + 1,
    max(abs(n) + n),
    max(n - abs(n)),
    1 - max(abs(n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(abs(n)) * 2,
    max(abs(n) * n),
    max(n / abs(n)),
    max(1 / abs(n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum((n * n) + 1),
    sum(1 + (n * n)),
    sum((n * n) - 1),
    sum(1 - (n * n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(n * n) * 2,
    sum((2 * n) * n),
    sum(n * n) / 2,
    sum((1 / n) * n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(n * n) + 1,
    1 + min(n * n),
    min(n * n) - 1,
    1 - min(n * n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    min(n * n) * 2,
    min((2 * n) * n),
    min(n * n) / 2,
    min((1 / n) * n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(n * n) + 1,
    1 + max(n * n),
    max(n * n) - 1,
    1 - max(n * n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    max(n * n) * 2,
    max((2 * n) * n),
    max(n * n) / 2,
    max((1 / n) * n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum((1 + n) + 1),
    sum((1 + 1) + n),
    sum((1 + n) - 1),
    sum((1 + 1) - n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum(1 + (n * 2)),
    sum(1 + (2 * n)),
    sum(1 + (n / 2)),
    sum(1 + (1 / n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    (1 + min(n)) + 1,
    min((1 + 1) + n),
    (1 + min(n)) - 1,
    min((1 + 1) - n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    1 + min(n * 2),
    1 + min(2 * n),
    1 + min(n / 2),
    1 + min(1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    (1 + max(n)) + 1,
    max((1 + 1) + n),
    (1 + max(n)) - 1,
    max((1 + 1) - n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    1 + max(n * 2),
    1 + max(2 * n),
    1 + max(n / 2),
    1 + max(1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    sum((n + -1) + -1),
    sum((-1 + n) + -1),
    sum((n - -1) + -1),
    sum((-1 - n) + -1)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    (sum(n) * -2) * -1,
    (-2 * sum(n)) * -1,
    (sum(n) / -2) / -1,
    sum(-1 / n) / -1
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    (min(n) + -1) + -1,
    (-1 + min(n)) + -1,
    (min(n) - -1) + -1,
    (-1 - min(n)) + -1
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    (min(n) * -2) * -1,
    (-2 * min(n)) * -1,
    (min(n) / -2) / -1,
    max(-1 / n) / -1
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    (max(n) + -1) + -1,
    (-1 + max(n)) + -1,
    (max(n) - -1) + -1,
    (-1 - max(n)) + -1
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT 
    (max(n) * -2) * -1,
    (-2 * max(n)) * -1,
    (max(n) / -2) / -1,
    min(-1 / n) / -1
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT ((sum(n + 1) + sum(1 + n)) + sum(n - 1)) + sum(1 - n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT (((sum(n) * 2) + (2 * sum(n))) + (sum(n) / 2)) + sum(1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT (((min(n) + 1) + (1 + min(n))) + (min(n) - 1)) + (1 - min(n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT (((min(n) * 2) + (2 * min(n))) + (min(n) / 2)) + min(1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT (((max(n) + 1) + (1 + max(n))) + (max(n) - 1)) + (1 - max(n))
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
-SELECT (((max(n) * 2) + (2 * max(n))) + (max(n) / 2)) + max(1 / n)
FROM 
(
    SELECT number AS n
    FROM numbers(10)
)
+SELECT 
+    sum(n + 1),
+    sum(1 + n),
+    sum(n - 1),
+    sum(1 - n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(n) * 2,
+    2 * sum(n),
+    sum(n) / 2,
+    sum(1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(n) + 1,
+    1 + min(n),
+    min(n) - 1,
+    1 - min(n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(n) * 2,
+    2 * min(n),
+    min(n) / 2,
+    min(1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(n) + 1,
+    1 + max(n),
+    max(n) - 1,
+    1 - max(n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(n) * 2,
+    2 * max(n),
+    max(n) / 2,
+    max(1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(n + -1),
+    sum(-1 + n),
+    sum(n - -1),
+    sum(-1 - n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(n) * -2,
+    -2 * sum(n),
+    sum(n) / -2,
+    sum(-1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(n) + -1,
+    -1 + min(n),
+    min(n) - -1,
+    -1 - min(n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(n) * -2,
+    -2 * max(n),
+    max(n) / -2,
+    min(-1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(n) + -1,
+    -1 + max(n),
+    max(n) - -1,
+    -1 - max(n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(n) * -2,
+    -2 * min(n),
+    min(n) / -2,
+    max(-1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(abs(2) + 1),
+    sum(abs(2) + n),
+    sum(n - abs(2)),
+    sum(1 - abs(2))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(abs(2)) * 2,
+    sum(abs(2) * n),
+    sum(n / abs(2)),
+    sum(1 / abs(2))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(abs(2)) + 1,
+    min(abs(2) + n),
+    min(n - abs(2)),
+    1 - min(abs(2))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(abs(2)) * 2,
+    min(abs(2) * n),
+    min(n / abs(2)),
+    min(1 / abs(2))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(abs(2)) + 1,
+    max(abs(2) + n),
+    max(n - abs(2)),
+    1 - max(abs(2))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(abs(2)) * 2,
+    max(abs(2) * n),
+    max(n / abs(2)),
+    max(1 / abs(2))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(abs(n) + 1),
+    sum(abs(n) + n),
+    sum(n - abs(n)),
+    sum(1 - abs(n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(abs(n)) * 2,
+    sum(abs(n) * n),
+    sum(n / abs(n)),
+    sum(1 / abs(n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(abs(n)) + 1,
+    min(abs(n) + n),
+    min(n - abs(n)),
+    1 - min(abs(n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(abs(n)) * 2,
+    min(abs(n) * n),
+    min(n / abs(n)),
+    min(1 / abs(n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(abs(n)) + 1,
+    max(abs(n) + n),
+    max(n - abs(n)),
+    1 - max(abs(n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(abs(n)) * 2,
+    max(abs(n) * n),
+    max(n / abs(n)),
+    max(1 / abs(n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum((n * n) + 1),
+    sum(1 + (n * n)),
+    sum((n * n) - 1),
+    sum(1 - (n * n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(n * n) * 2,
+    sum((2 * n) * n),
+    sum(n * n) / 2,
+    sum((1 / n) * n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(n * n) + 1,
+    1 + min(n * n),
+    min(n * n) - 1,
+    1 - min(n * n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    min(n * n) * 2,
+    min((2 * n) * n),
+    min(n * n) / 2,
+    min((1 / n) * n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(n * n) + 1,
+    1 + max(n * n),
+    max(n * n) - 1,
+    1 - max(n * n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    max(n * n) * 2,
+    max((2 * n) * n),
+    max(n * n) / 2,
+    max((1 / n) * n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum((1 + n) + 1),
+    sum((1 + 1) + n),
+    sum((1 + n) - 1),
+    sum((1 + 1) - n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum(1 + (n * 2)),
+    sum(1 + (2 * n)),
+    sum(1 + (n / 2)),
+    sum(1 + (1 / n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    (1 + min(n)) + 1,
+    min((1 + 1) + n),
+    (1 + min(n)) - 1,
+    min((1 + 1) - n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    1 + min(n * 2),
+    1 + min(2 * n),
+    1 + min(n / 2),
+    1 + min(1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    (1 + max(n)) + 1,
+    max((1 + 1) + n),
+    (1 + max(n)) - 1,
+    max((1 + 1) - n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    1 + max(n * 2),
+    1 + max(2 * n),
+    1 + max(n / 2),
+    1 + max(1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    sum((n + -1) + -1),
+    sum((-1 + n) + -1),
+    sum((n - -1) + -1),
+    sum((-1 - n) + -1)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    (sum(n) * -2) * -1,
+    (-2 * sum(n)) * -1,
+    (sum(n) / -2) / -1,
+    sum(-1 / n) / -1
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    (min(n) + -1) + -1,
+    (-1 + min(n)) + -1,
+    (min(n) - -1) + -1,
+    (-1 - min(n)) + -1
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    (min(n) * -2) * -1,
+    (-2 * min(n)) * -1,
+    (min(n) / -2) / -1,
+    max(-1 / n) / -1
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    (max(n) + -1) + -1,
+    (-1 + max(n)) + -1,
+    (max(n) - -1) + -1,
+    (-1 - max(n)) + -1
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT 
+    (max(n) * -2) * -1,
+    (-2 * max(n)) * -1,
+    (max(n) / -2) / -1,
+    min(-1 / n) / -1
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT ((sum(n + 1) + sum(1 + n)) + sum(n - 1)) + sum(1 - n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT (((sum(n) * 2) + (2 * sum(n))) + (sum(n) / 2)) + sum(1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT (((min(n) + 1) + (1 + min(n))) + (min(n) - 1)) + (1 - min(n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT (((min(n) * 2) + (2 * min(n))) + (min(n) / 2)) + min(1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT (((max(n) + 1) + (1 + max(n))) + (max(n) - 1)) + (1 - max(n))
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
+SELECT (((max(n) * 2) + (2 * max(n))) + (max(n) / 2)) + max(1 / n)
+FROM 
+(
+    SELECT number AS n
+    FROM numbers(10)
+)
 55	55	35	-35
 90	90	22.5	inf
 1	1	-1	1
diff --git a/tests/queries/0_stateless/01300_group_by_other_keys.reference b/tests/queries/0_stateless/01300_group_by_other_keys.reference
index 52a5e7f0002f..7f0661ec4fed 100644
--- a/tests/queries/0_stateless/01300_group_by_other_keys.reference
+++ b/tests/queries/0_stateless/01300_group_by_other_keys.reference
@@ -22,11 +22,35 @@
 3465736.595946905
 3465735.2096525617
 3465735.9027997428
-SELECT max(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    number % 2,
    number % 3,
    ((number % 2) + (number % 3)) % 2
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY number % 5
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    (number % 2) * (number % 3),
    number % 3
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    number % 3,
    number % 2
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    (number % 2) % 3,
    number % 2
ORDER BY k ASC
+SELECT max(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    number % 2,
+    number % 3,
+    ((number % 2) + (number % 3)) % 2
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY number % 5
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    (number % 2) * (number % 3),
+    number % 3
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    number % 3,
+    number % 2
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    (number % 2) % 3,
+    number % 2
+ORDER BY k ASC
 6931467.646716369
 6931468.33986355
 6931469.0330107305
@@ -51,8 +75,35 @@ SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    (number
 3465736.595946905
 3465735.2096525617
 3465735.9027997428
-SELECT max(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    number % 2,
    number % 3,
    ((number % 2) + (number % 3)) % 2
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    number % 5,
    (number % 5) * (number % 5)
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    (number % 2) * (number % 3),
    number % 3
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    (number % 2) * (number % 3),
    number % 3,
    number % 2
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    (number % 2) % 3,
    number % 2
ORDER BY k ASC
+SELECT max(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    number % 2,
+    number % 3,
+    ((number % 2) + (number % 3)) % 2
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    number % 5,
+    (number % 5) * (number % 5)
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    (number % 2) * (number % 3),
+    number % 3
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    (number % 2) * (number % 3),
+    number % 3,
+    number % 2
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    (number % 2) % 3,
+    number % 2
+ORDER BY k ASC
diff --git a/tests/queries/0_stateless/01300_group_by_other_keys_having.reference b/tests/queries/0_stateless/01300_group_by_other_keys_having.reference
index d7c04e64df5a..67262193df5b 100644
--- a/tests/queries/0_stateless/01300_group_by_other_keys_having.reference
+++ b/tests/queries/0_stateless/01300_group_by_other_keys_having.reference
@@ -7,9 +7,23 @@
 0
 1
 4
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    number % 3,
    number % 2
HAVING avg(log(2) * number) > 3465735.3
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
WHERE ((number % 5) * (number % 5)) < 5
GROUP BY number % 5
ORDER BY k ASC
-SELECT (number % 5) * (number % 5) AS k
FROM numbers(10000000)
WHERE ((number % 5) * (number % 5)) < 5
GROUP BY number % 5
ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    number % 3,
+    number % 2
+HAVING avg(log(2) * number) > 3465735.3
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+WHERE ((number % 5) * (number % 5)) < 5
+GROUP BY number % 5
+ORDER BY k ASC
+SELECT (number % 5) * (number % 5) AS k
+FROM numbers(10000000)
+WHERE ((number % 5) * (number % 5)) < 5
+GROUP BY number % 5
+ORDER BY k ASC
 3465735.9027997246
 3465735.902799725
 3465736.595946905
@@ -19,6 +33,25 @@ SELECT (number % 5) * (number % 5) AS k
FROM numbers(10000000)
WHERE ((number
 0
 1
 4
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY 
    (number % 2) * (number % 3),
    number % 3,
    number % 2
HAVING avg(log(2) * number) > 3465735.3
ORDER BY k ASC
-SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
WHERE ((number % 5) * (number % 5)) < 5
GROUP BY 
    number % 5,
    (number % 5) * (number % 5)
ORDER BY k ASC
-SELECT (number % 5) * (number % 5) AS k
FROM numbers(10000000)
WHERE ((number % 5) * (number % 5)) < 5
GROUP BY 
    number % 5,
    (number % 5) * (number % 5)
ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+GROUP BY 
+    (number % 2) * (number % 3),
+    number % 3,
+    number % 2
+HAVING avg(log(2) * number) > 3465735.3
+ORDER BY k ASC
+SELECT avg(log(2) * number) AS k
+FROM numbers(10000000)
+WHERE ((number % 5) * (number % 5)) < 5
+GROUP BY 
+    number % 5,
+    (number % 5) * (number % 5)
+ORDER BY k ASC
+SELECT (number % 5) * (number % 5) AS k
+FROM numbers(10000000)
+WHERE ((number % 5) * (number % 5)) < 5
+GROUP BY 
+    number % 5,
+    (number % 5) * (number % 5)
+ORDER BY k ASC
diff --git a/tests/queries/0_stateless/01305_duplicate_order_by_and_distinct.reference b/tests/queries/0_stateless/01305_duplicate_order_by_and_distinct.reference
index 208f3d1abe5f..5e6fdfcdefb6 100644
--- a/tests/queries/0_stateless/01305_duplicate_order_by_and_distinct.reference
+++ b/tests/queries/0_stateless/01305_duplicate_order_by_and_distinct.reference
@@ -1,14 +1,58 @@
-SELECT number
FROM 
(
    SELECT number
    FROM 
    (
        SELECT DISTINCT number
        FROM numbers(3)
    )
)
ORDER BY number ASC
+SELECT number
+FROM 
+(
+    SELECT number
+    FROM 
+    (
+        SELECT DISTINCT number
+        FROM numbers(3)
+    )
+)
+ORDER BY number ASC
 0
 1
 2
-SELECT DISTINCT number
FROM 
(
    SELECT DISTINCT number
    FROM 
    (
        SELECT DISTINCT number
        FROM numbers(3)
        ORDER BY number ASC
    )
    ORDER BY number ASC
)
ORDER BY number ASC
+SELECT DISTINCT number
+FROM 
+(
+    SELECT DISTINCT number
+    FROM 
+    (
+        SELECT DISTINCT number
+        FROM numbers(3)
+        ORDER BY number ASC
+    )
+    ORDER BY number ASC
+)
+ORDER BY number ASC
 0
 1
 2
-SELECT number
FROM 
(
    SELECT DISTINCT number
    FROM 
    (
        SELECT DISTINCT number % 2 AS number
        FROM numbers(3)
    )
)
ORDER BY number ASC
+SELECT number
+FROM 
+(
+    SELECT DISTINCT number
+    FROM 
+    (
+        SELECT DISTINCT number % 2 AS number
+        FROM numbers(3)
+    )
+)
+ORDER BY number ASC
 0
 1
-SELECT DISTINCT number
FROM 
(
    SELECT DISTINCT number
    FROM 
    (
        SELECT DISTINCT number % 2 AS number
        FROM numbers(3)
        ORDER BY number ASC
    )
    ORDER BY number ASC
)
ORDER BY number ASC
+SELECT DISTINCT number
+FROM 
+(
+    SELECT DISTINCT number
+    FROM 
+    (
+        SELECT DISTINCT number % 2 AS number
+        FROM numbers(3)
+        ORDER BY number ASC
+    )
+    ORDER BY number ASC
+)
+ORDER BY number ASC
 0
 1
diff --git a/tests/queries/0_stateless/01321_aggregate_functions_of_group_by_keys.reference b/tests/queries/0_stateless/01321_aggregate_functions_of_group_by_keys.reference
index 0ca6bee85a3a..875a6753f844 100644
--- a/tests/queries/0_stateless/01321_aggregate_functions_of_group_by_keys.reference
+++ b/tests/queries/0_stateless/01321_aggregate_functions_of_group_by_keys.reference
@@ -47,10 +47,39 @@
 24
 0
 0
-SELECT 
    number % 2 AS a,
    number % 3 AS b
FROM numbers(10000000)
GROUP BY 
    number % 2,
    number % 3
ORDER BY 
    min(number % 2) AS a ASC,
    max(number % 3) AS b ASC
-SELECT 
    number % 2 AS a,
    number % 3 AS b
FROM numbers(10000000)
GROUP BY 
    number % 2,
    number % 3
ORDER BY 
    any(number % 2) AS a ASC,
    anyLast(number % 3) AS b ASC
-SELECT (number % 5) * (number % 7) AS a
FROM numbers(10000000)
GROUP BY 
    number % 7,
    number % 5
ORDER BY max((number % 5) * (number % 7)) AS a ASC
-SELECT foo
FROM 
(
    SELECT number AS foo
    FROM numbers(1)
    GROUP BY number
)
+SELECT 
+    number % 2 AS a,
+    number % 3 AS b
+FROM numbers(10000000)
+GROUP BY 
+    number % 2,
+    number % 3
+ORDER BY 
+    min(number % 2) AS a ASC,
+    max(number % 3) AS b ASC
+SELECT 
+    number % 2 AS a,
+    number % 3 AS b
+FROM numbers(10000000)
+GROUP BY 
+    number % 2,
+    number % 3
+ORDER BY 
+    any(number % 2) AS a ASC,
+    anyLast(number % 3) AS b ASC
+SELECT (number % 5) * (number % 7) AS a
+FROM numbers(10000000)
+GROUP BY 
+    number % 7,
+    number % 5
+ORDER BY max((number % 5) * (number % 7)) AS a ASC
+SELECT foo
+FROM 
+(
+    SELECT number AS foo
+    FROM numbers(1)
+    GROUP BY number
+)
 0	0
 0	1
 0	2
@@ -99,7 +128,36 @@ SELECT foo
FROM 
(
    SELECT number AS foo
    FROM numbers(1)
    GROUP B
 20
 24
 0
-SELECT 
    min(number % 2) AS a,
    max(number % 3) AS b
FROM numbers(10000000)
GROUP BY 
    number % 2,
    number % 3
ORDER BY 
    a ASC,
    b ASC
-SELECT 
    any(number % 2) AS a,
    anyLast(number % 3) AS b
FROM numbers(10000000)
GROUP BY 
    number % 2,
    number % 3
ORDER BY 
    a ASC,
    b ASC
-SELECT max((number % 5) * (number % 7)) AS a
FROM numbers(10000000)
GROUP BY 
    number % 7,
    number % 5
ORDER BY a ASC
-SELECT foo
FROM 
(
    SELECT anyLast(number) AS foo
    FROM numbers(1)
    GROUP BY number
)
+SELECT 
+    min(number % 2) AS a,
+    max(number % 3) AS b
+FROM numbers(10000000)
+GROUP BY 
+    number % 2,
+    number % 3
+ORDER BY 
+    a ASC,
+    b ASC
+SELECT 
+    any(number % 2) AS a,
+    anyLast(number % 3) AS b
+FROM numbers(10000000)
+GROUP BY 
+    number % 2,
+    number % 3
+ORDER BY 
+    a ASC,
+    b ASC
+SELECT max((number % 5) * (number % 7)) AS a
+FROM numbers(10000000)
+GROUP BY 
+    number % 7,
+    number % 5
+ORDER BY a ASC
+SELECT foo
+FROM 
+(
+    SELECT anyLast(number) AS foo
+    FROM numbers(1)
+    GROUP BY number
+)
diff --git a/tests/queries/0_stateless/01322_any_input_optimize.reference b/tests/queries/0_stateless/01322_any_input_optimize.reference
index 5b724453c71e..209a4afb3a2b 100644
--- a/tests/queries/0_stateless/01322_any_input_optimize.reference
+++ b/tests/queries/0_stateless/01322_any_input_optimize.reference
@@ -1,2 +1,3 @@
 9
-SELECT any(number) + (any(number) * 2)
FROM numbers(3, 10)
+SELECT any(number) + (any(number) * 2)
+FROM numbers(3, 10)
diff --git a/tests/queries/0_stateless/01372_wrong_order_by_removal.reference b/tests/queries/0_stateless/01372_wrong_order_by_removal.reference
index c1b36bd53cae..8ed303c04aa7 100644
--- a/tests/queries/0_stateless/01372_wrong_order_by_removal.reference
+++ b/tests/queries/0_stateless/01372_wrong_order_by_removal.reference
@@ -1,1 +1,16 @@
-SELECT 
    k,
    groupArrayMovingSum(v)
FROM 
(
    SELECT 
        k,
        dt,
        v
    FROM moving_sum_num
    ORDER BY 
        k ASC,
        dt ASC
)
GROUP BY k
ORDER BY k ASC
+SELECT 
+    k,
+    groupArrayMovingSum(v)
+FROM 
+(
+    SELECT 
+        k,
+        dt,
+        v
+    FROM moving_sum_num
+    ORDER BY 
+        k ASC,
+        dt ASC
+)
+GROUP BY k
+ORDER BY k ASC
