diff --git a/tests/queries/0_stateless/25402_show_columns.reference b/tests/queries/0_stateless/25402_show_columns.reference
new file mode 100644
index 000000000000..da967d59cda7
--- /dev/null
+++ b/tests/queries/0_stateless/25402_show_columns.reference
@@ -0,0 +1,38 @@
+int32	Nullable(Int32)	1		\N	
+str	String	0	SOR	\N	
+uint64	UInt64	0	PRI SOR	\N	
+--- EXTENDED
+int32	Nullable(Int32)	1		\N	
+str	String	0	SOR	\N	
+uint64	UInt64	0	PRI SOR	\N	
+--- FULL
+int32	Nullable(Int32)	1		\N		\N	example comment	
+str	String	0	SOR	\N		\N		
+uint64	UInt64	0	PRI SOR	\N		\N		
+--- LIKE
+int32	Nullable(Int32)	1		\N	
+uint64	UInt64	0	PRI SOR	\N	
+--- NOT LIKE
+str	String	0	SOR	\N	
+--- ILIKE
+int32	Nullable(Int32)	1		\N	
+uint64	UInt64	0	PRI SOR	\N	
+--- NOT ILIKE
+str	String	0	SOR	\N	
+--- WHERE
+int32	Nullable(Int32)	1		\N	
+uint64	UInt64	0	PRI SOR	\N	
+--- LIMIT
+int32	Nullable(Int32)	1		\N	
+--- Original table
+int32	Nullable(Int32)	1		\N	
+str	String	0	SOR	\N	
+uint64	UInt64	0	PRI SOR	\N	
+--- Equally named table in other database
+int32	Int32	0		\N	
+str	String	0		\N	
+uint64	UInt64	0	PRI SOR	\N	
+--- Short form
+int32	Int32	0		\N	
+str	String	0		\N	
+uint64	UInt64	0	PRI SOR	\N	
diff --git a/tests/queries/0_stateless/25402_show_columns.sql b/tests/queries/0_stateless/25402_show_columns.sql
new file mode 100644
index 000000000000..ce206fedee43
--- /dev/null
+++ b/tests/queries/0_stateless/25402_show_columns.sql
@@ -0,0 +1,70 @@
+-- Tags: no-parallel
+-- no-parallel: creates a custom database schema and expects to use it exclusively
+
+-- Create a test table and verify that the output of SHOW COLUMNS is sane.
+-- The matching of actual/expected results relies on the fact that the output of SHOW COLUMNS is sorted.
+DROP TABLE IF EXISTS tab;
+CREATE TABLE tab
+(
+    `uint64` UInt64,
+    `int32` Nullable(Int32) COMMENT 'example comment',
+    `str` String,
+    INDEX idx str TYPE set(1000)
+)
+ENGINE = MergeTree
+PRIMARY KEY (uint64)
+ORDER BY (uint64, str);
+
+SHOW COLUMNS FROM tab;
+
+SELECT '--- EXTENDED';
+SHOW EXTENDED COLUMNS FROM tab;
+
+SELECT '--- FULL';
+SHOW FULL COLUMNS FROM tab;
+
+SELECT '--- LIKE';
+SHOW COLUMNS FROM tab LIKE '%int%';
+
+SELECT '--- NOT LIKE';
+SHOW COLUMNS FROM tab NOT LIKE '%int%';
+
+SELECT '--- ILIKE';
+SHOW COLUMNS FROM tab ILIKE '%INT%';
+
+SELECT '--- NOT ILIKE';
+SHOW COLUMNS FROM tab NOT ILIKE '%INT%';
+
+SELECT '--- WHERE';
+SHOW COLUMNS FROM tab WHERE field LIKE '%int%';
+
+SELECT '--- LIMIT';
+SHOW COLUMNS FROM tab LIMIT 1;
+
+-- Create a table in a different database. Intentionally useing the same table/column names as above so
+-- we notice if something is buggy in the implementation of SHOW COLUMNS.
+DROP DATABASE IF EXISTS database_123456789abcde;
+CREATE DATABASE database_123456789abcde; -- pseudo-random database name
+
+DROP TABLE IF EXISTS database_123456789abcde.tab;
+CREATE TABLE database_123456789abcde.tab
+(
+    `uint64` UInt64,
+    `int32` Int32,
+    `str` String
+)
+ENGINE = MergeTree
+ORDER BY uint64;
+
+SELECT '--- Original table';
+SHOW COLUMNS FROM tab;
+
+SELECT '--- Equally named table in other database';
+SHOW COLUMNS FROM tab FROM database_123456789abcde;
+
+SELECT '--- Short form';
+SHOW COLUMNS FROM database_123456789abcde.tab;
+
+DROP DATABASE database_123456789abcde;
+
+DROP TABLE tab;
