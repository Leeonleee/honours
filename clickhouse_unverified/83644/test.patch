diff --git a/tests/integration/test_system_logs_recreate/test.py b/tests/integration/test_system_logs_recreate/test.py
index ab0c8073f93f..3320699511d8 100644
--- a/tests/integration/test_system_logs_recreate/test.py
+++ b/tests/integration/test_system_logs_recreate/test.py
@@ -42,7 +42,7 @@ def test_system_logs_recreate():
             assert "ENGINE = MergeTree" in node.query(
                 f"SHOW CREATE TABLE system.{table}"
             )
-            assert "ENGINE = Null" not in node.query(
+            assert "ENGINE = `Null`" not in node.query(
                 f"SHOW CREATE TABLE system.{table}"
             )
             assert (
@@ -79,7 +79,7 @@ def test_system_logs_recreate():
             assert "ENGINE = MergeTree" not in node.query(
                 f"SHOW CREATE TABLE system.{table}"
             )
-            assert "ENGINE = Null" in node.query(f"SHOW CREATE TABLE system.{table}")
+            assert "ENGINE = `Null`" in node.query(f"SHOW CREATE TABLE system.{table}")
             assert (
                 len(
                     node.query(f"SHOW TABLES FROM system LIKE '{table}%'")
@@ -119,7 +119,7 @@ def test_system_logs_recreate():
                 create_table_sql,
             )
             assert "ENGINE = MergeTree" in create_table_sql
-            assert "ENGINE = Null" not in create_table_sql
+            assert "ENGINE = `Null`" not in create_table_sql
             assert "SETTINGS storage_policy = 'system_tables'" in create_table_sql
             assert (
                 len(
@@ -141,7 +141,7 @@ def test_system_logs_recreate():
             assert "ENGINE = MergeTree" in node.query(
                 f"SHOW CREATE TABLE system.{table}"
             )
-            assert "ENGINE = Null" not in node.query(
+            assert "ENGINE = `Null`" not in node.query(
                 f"SHOW CREATE TABLE system.{table}"
             )
             assert (
diff --git a/tests/queries/0_stateless/01610_client_editor_format_query.expect b/tests/queries/0_stateless/01610_client_editor_format_query.expect
index 5a8af20a31cc..6db932da8980 100755
--- a/tests/queries/0_stateless/01610_client_editor_format_query.expect
+++ b/tests/queries/0_stateless/01610_client_editor_format_query.expect
@@ -78,7 +78,7 @@ expect ":) "
 send -- "insert into function null() values (1)"
 # editor with format (M-F)
 send -- "\033F"
-expect "INSERT INTO FUNCTION null() VALUES (1)"
+expect "INSERT INTO FUNCTION `null`() VALUES (1)"
 send -- "\r"
 expect "Elapsed"
 expect ":) "
@@ -86,7 +86,7 @@ expect ":) "
 send -- "insert into function null() format JSONEachRow {\"foo\": \"bar\"}"
 # editor with format (M-F)
 send -- "\033F"
-expect "INSERT INTO FUNCTION null() FORMAT JSONEachRow {\"foo\": \"bar\"}"
+expect "INSERT INTO FUNCTION `null`() FORMAT JSONEachRow {\"foo\": \"bar\"}"
 send -- "\r"
 expect "Elapsed"
 expect ":) "
diff --git a/tests/queries/0_stateless/02020_alter_table_modify_comment.reference b/tests/queries/0_stateless/02020_alter_table_modify_comment.reference
index d2e74fd07f08..4a8dee12fc5c 100644
--- a/tests/queries/0_stateless/02020_alter_table_modify_comment.reference
+++ b/tests/queries/0_stateless/02020_alter_table_modify_comment.reference
@@ -1,25 +1,25 @@
 engine : Null
 initial comment
-CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = Null
COMMENT \'Test table with comment\'
+CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = `Null`
COMMENT \'Test table with comment\'
 comment=	Test table with comment
 
 change a comment
-CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = Null
COMMENT \'new comment on a table\'
+CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = `Null`
COMMENT \'new comment on a table\'
 comment=	new comment on a table
 
 remove a comment
-CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = Null
+CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = `Null`
 comment=	
 
 add a comment back
-CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = Null
COMMENT \'another comment on a table\'
+CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = `Null`
COMMENT \'another comment on a table\'
 comment=	another comment on a table
 
 detach table
-CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = Null
COMMENT \'another comment on a table\'
+CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = `Null`
COMMENT \'another comment on a table\'
 
 re-attach table
-CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = Null
COMMENT \'another comment on a table\'
+CREATE TABLE default.comment_test_table
(
    `k` UInt64,
    `s` String
)
ENGINE = `Null`
COMMENT \'another comment on a table\'
 comment=	another comment on a table
 
 engine : Memory
diff --git a/tests/queries/0_stateless/02230_create_table_as_ignore_ttl.reference b/tests/queries/0_stateless/02230_create_table_as_ignore_ttl.reference
index 5236875e2098..cc016127b556 100644
--- a/tests/queries/0_stateless/02230_create_table_as_ignore_ttl.reference
+++ b/tests/queries/0_stateless/02230_create_table_as_ignore_ttl.reference
@@ -12,7 +12,7 @@ CREATE TABLE default.null_02230_ttl
     `date` Date,
     `key` Int32
 )
-ENGINE = Null
+ENGINE = `Null`
 CREATE TABLE default.data_02230_column_ttl
 (
     `date` Date,
@@ -29,4 +29,4 @@ CREATE TABLE default.null_02230_column_ttl
     `value` Int32,
     `key` Int32
 )
-ENGINE = Null
+ENGINE = `Null`
diff --git a/tests/queries/0_stateless/02982_create_mv_inner_extra.reference b/tests/queries/0_stateless/02982_create_mv_inner_extra.reference
index 06a60436b2f6..42c621cf51fc 100644
--- a/tests/queries/0_stateless/02982_create_mv_inner_extra.reference
+++ b/tests/queries/0_stateless/02982_create_mv_inner_extra.reference
@@ -1,5 +1,5 @@
 CREATE TABLE x (`key` String) ENGINE = MergeTree PRIMARY KEY key ORDER BY key SETTINGS index_granularity = 8192
 CREATE TABLE x (`key` String) ENGINE = MergeTree PRIMARY KEY tuple(key) ORDER BY tuple(key) SETTINGS index_granularity = 8192
-CREATE TABLE x (`key` String) ENGINE = Null
+CREATE TABLE x (`key` String) ENGINE = `Null`
 CREATE TABLE x (`key` String, INDEX idx key TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 8192
 CREATE TABLE x (`key` String, PROJECTION p (SELECT uniqCombined(key))) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 8192
diff --git a/tests/queries/0_stateless/03566_inconsistent_formatting_functions_codecs.reference b/tests/queries/0_stateless/03566_inconsistent_formatting_functions_codecs.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/03566_inconsistent_formatting_functions_codecs.sql b/tests/queries/0_stateless/03566_inconsistent_formatting_functions_codecs.sql
new file mode 100644
index 000000000000..73d5cfc03a61
--- /dev/null
+++ b/tests/queries/0_stateless/03566_inconsistent_formatting_functions_codecs.sql
@@ -0,0 +1,6 @@
+CREATE TEMPORARY TABLE a (b UInt8) ENGINE = MergeTree ORDER BY b;
+ALTER TABLE a MODIFY COLUMN b CODEC(`@`); -- { serverError UNKNOWN_CODEC }
+SELECT f(`@`); -- { serverError UNKNOWN_IDENTIFIER }
+SELECT `@`(1); -- { serverError UNKNOWN_FUNCTION }
+SELECT ` `(1); -- { serverError UNKNOWN_FUNCTION }
+SELECT `упячка`(1); -- { serverError UNKNOWN_FUNCTION }
