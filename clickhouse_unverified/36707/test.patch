diff --git a/tests/queries/0_stateless/02286_vertical_merges_missed_column.reference b/tests/queries/0_stateless/02286_vertical_merges_missed_column.reference
new file mode 100644
index 000000000000..9ef2cda285ac
--- /dev/null
+++ b/tests/queries/0_stateless/02286_vertical_merges_missed_column.reference
@@ -0,0 +1,2 @@
+\N	1	
+[]	0
diff --git a/tests/queries/0_stateless/02286_vertical_merges_missed_column.sql b/tests/queries/0_stateless/02286_vertical_merges_missed_column.sql
new file mode 100644
index 000000000000..950777f237f2
--- /dev/null
+++ b/tests/queries/0_stateless/02286_vertical_merges_missed_column.sql
@@ -0,0 +1,39 @@
+DROP TABLE IF EXISTS t_vertical_merges;
+
+CREATE TABLE t_vertical_merges
+(
+  a   Nullable(String),
+  b   Int8
+)
+ENGINE = MergeTree
+ORDER BY tuple()
+settings
+    vertical_merge_algorithm_min_columns_to_activate=1,
+    vertical_merge_algorithm_min_rows_to_activate=1,
+    min_bytes_for_wide_part=0;
+
+INSERT INTO t_vertical_merges SELECT NULL, 1;
+ALTER TABLE t_vertical_merges ADD COLUMN c String;
+OPTIMIZE TABLE t_vertical_merges FINAL;
+SELECT a, b, c FROM t_vertical_merges;
+
+DROP TABLE IF EXISTS t_vertical_merges;
+
+CREATE TABLE t_vertical_merges
+(
+  a   Array(Int16),
+  b   Int8
+)
+ENGINE = MergeTree
+ORDER BY tuple()
+settings
+    vertical_merge_algorithm_min_columns_to_activate=1,
+    vertical_merge_algorithm_min_rows_to_activate=1,
+    min_bytes_for_wide_part=0;
+
+INSERT INTO t_vertical_merges SELECT [], 1;
+ALTER TABLE t_vertical_merges CLEAR COLUMN b;
+OPTIMIZE TABLE t_vertical_merges FINAL;
+SELECT a, b FROM t_vertical_merges;
+
+DROP TABLE IF EXISTS t_vertical_merges;
