{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 80304,
  "instance_id": "ClickHouse__ClickHouse-80304",
  "issue_numbers": [
    "44120"
  ],
  "base_commit": "7de87dad2a71cd9610e42d38580c5881bbd6e1d0",
  "patch": "diff --git a/src/Formats/NativeReader.cpp b/src/Formats/NativeReader.cpp\nindex 36ca2b6b26bb..f4506466aa04 100644\n--- a/src/Formats/NativeReader.cpp\n+++ b/src/Formats/NativeReader.cpp\n@@ -233,9 +233,8 @@ Block NativeReader::read()\n         {\n             /// Index allows to do more checks.\n             if (index_column_it->name != column.name)\n-                throw Exception(ErrorCodes::INCORRECT_INDEX, \"Index points to column with wrong name: corrupted index or data\");\n-            if (index_column_it->type != type_name)\n-                throw Exception(ErrorCodes::INCORRECT_INDEX, \"Index points to column with wrong type: corrupted index or data\");\n+                throw Exception(ErrorCodes::INCORRECT_INDEX, \"Index points to a column with a wrong name ({} instead of {}): corrupted index or data\", index_column_it->name, column.name);\n+            /// Note: we can't compare data types as strings, compatible data types may differ in parameters.\n         }\n \n         /// If no rows, nothing to read.\ndiff --git a/src/Storages/StorageStripeLog.cpp b/src/Storages/StorageStripeLog.cpp\nindex 522833f1f848..a4b1a8e3424b 100644\n--- a/src/Storages/StorageStripeLog.cpp\n+++ b/src/Storages/StorageStripeLog.cpp\n@@ -1,4 +1,3 @@\n-#include <sys/stat.h>\n #include <sys/types.h>\n \n #include <optional>\n@@ -24,10 +23,9 @@\n \n #include <Interpreters/Context.h>\n \n-#include <Parsers/ASTLiteral.h>\n #include <Storages/StorageFactory.h>\n #include <Storages/StorageStripeLog.h>\n-#include \"StorageLogSettings.h\"\n+#include <Storages/StorageLogSettings.h>\n #include <Processors/ISource.h>\n #include <Processors/Sources/NullSource.h>\n #include <Processors/Sinks/SinkToStorage.h>\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01287_max_execution_speed.sql b/tests/queries/0_stateless/01287_max_execution_speed.sql\nindex 89c3050a2565..8fdd16e0a590 100644\n--- a/tests/queries/0_stateless/01287_max_execution_speed.sql\n+++ b/tests/queries/0_stateless/01287_max_execution_speed.sql\n@@ -13,6 +13,7 @@ SELECT count() FROM system.numbers; -- { serverError TOO_SLOW }\n SET min_execution_speed_bytes = 0;\n SELECT 'Ok (2)';\n \n+SET max_execution_time = 600;\n SET max_execution_speed = 1000000;\n SET max_block_size = 100;\n \ndiff --git a/tests/queries/0_stateless/03509_stripe_log_compatible_types.reference b/tests/queries/0_stateless/03509_stripe_log_compatible_types.reference\nnew file mode 100644\nindex 000000000000..6494e611154a\n--- /dev/null\n+++ b/tests/queries/0_stateless/03509_stripe_log_compatible_types.reference\n@@ -0,0 +1,1 @@\n+2022-09-21 03:03:24\ndiff --git a/tests/queries/0_stateless/03509_stripe_log_compatible_types.sql b/tests/queries/0_stateless/03509_stripe_log_compatible_types.sql\nnew file mode 100644\nindex 000000000000..d278011674c9\n--- /dev/null\n+++ b/tests/queries/0_stateless/03509_stripe_log_compatible_types.sql\n@@ -0,0 +1,14 @@\n+DROP TABLE IF EXISTS test_tz;\n+\n+CREATE TABLE test_tz\n+(\n+    `dt` DateTime('UTC')\n+)\n+ENGINE = StripeLog;\n+\n+INSERT INTO test_tz VALUES ('2022-09-21 03:03:24');\n+\n+SELECT *\n+FROM test_tz;\n+\n+DROP TABLE test_tz;\n",
  "problem_statement": "DateTime with timezone in StripeLog causes error on SELECT query\nI create a table with only one DateTime column with timezone, the engine is StripeLog.\r\n\r\n```\r\nCREATE TABLE test_tz\r\n(\r\n    `dt` DateTime('UTC')\r\n)\r\nENGINE = StripeLog\r\n```\r\n\r\nAnd I insert data ```INSERT INTO test_tz VALUES ('2022-09-21 03:03:24');```\r\n\r\nBut when I try to SELECT my data, I get the folowing exception\r\n```\r\nSELECT *\r\nFROM test_tz\r\n\r\nQuery id: aa651ef3-0797-4999-89f4-5cd7133e8683\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec.\r\n\r\nReceived exception from server (version 22.9.3):\r\nCode: 282. DB::Exception: Received from localhost:9000. DB::Exception: Index points to column with wrong type: corrupted index or data: While executing StripeLog. (INCORRECT_INDEX)\r\n```\r\n\r\nI tried to do the same with StripeLog without timezone, it works fine.\r\n```\r\nCREATE TABLE test_no_tz\r\n(\r\n    `dt` DateTime\r\n)\r\nENGINE = StripeLog\r\n\r\nINSERT INTO test_no_tz VALUES ('2022-09-21 03:03:24');\r\n\r\nSELECT *\r\nFROM test_no_tz\r\n\r\nQuery id: 8bec8a90-e23e-47d4-8bf8-d275948bc94d\r\n\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500dt\u2500\u2510\r\n\u2502 2022-09-21 03:03:24 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.002 sec.\r\n```\r\n\r\nAlso I tried the same with Log and TinyLog engines, they work too.\r\n```\r\nCREATE TABLE test_tz_log\r\n(\r\n    `dt` DateTime('UTC')\r\n)\r\nENGINE = Log\r\n\r\nINSERT INTO test_tz_log VALUES ('2022-09-21 03:03:24');\r\n\r\nSELECT *\r\nFROM test_tz_log\r\n\r\nQuery id: 61a205ea-08b1-4611-81bd-3572294782fe\r\n\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500dt\u2500\u2510\r\n\u2502 2022-09-21 03:03:24 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 row in set. Elapsed: 0.002 sec.\r\n\r\n\r\n\r\nCREATE TABLE test_tz_tinylog\r\n(\r\n    `dt` DateTime('UTC')\r\n)\r\nENGINE = TinyLog;\r\n\r\nINSERT INTO test_tz_tinylog VALUES ('2022-09-21 03:03:24');\r\n\r\nSELECT *\r\nFROM test_tz_tinylog\r\n\r\nQuery id: ffb5895b-3218-4626-b7b4-463cc9704162\r\n\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500dt\u2500\u2510\r\n\u2502 2022-09-21 03:03:24 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nChecked it on versions 22.9.3 and 21.8.15\n",
  "hints_text": "Related: https://github.com/ClickHouse/ClickHouse/issues/55911",
  "created_at": "2025-05-16T07:59:31Z"
}