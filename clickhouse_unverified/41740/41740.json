{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 41740,
  "instance_id": "ClickHouse__ClickHouse-41740",
  "issue_numbers": [
    "41269"
  ],
  "base_commit": "89826b77195f535e313ec71c1946006b2ea45704",
  "patch": "diff --git a/src/Interpreters/MonotonicityCheckVisitor.h b/src/Interpreters/MonotonicityCheckVisitor.h\nindex 4b9f36ab72dd..c95f5209760a 100644\n--- a/src/Interpreters/MonotonicityCheckVisitor.h\n+++ b/src/Interpreters/MonotonicityCheckVisitor.h\n@@ -70,6 +70,12 @@ class MonotonicityCheckMatcher\n             if (!pos)\n                 return false;\n \n+            /// It is possible that tables list is empty.\n+            /// IdentifierSemantic get the position from AST, and it can be not valid to use it.\n+            /// Example is re-analysing a part of AST for storage Merge, see 02147_order_by_optimizations.sql\n+            if (*pos >= tables.size())\n+                return false;\n+\n             if (auto data_type_and_name = tables[*pos].columns.tryGetByName(identifier->shortName()))\n             {\n                 arg_data_type = data_type_and_name->type;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02147_order_by_optimizations.sql b/tests/queries/0_stateless/02147_order_by_optimizations.sql\nindex 7aa631ff4322..3925e92bffcf 100644\n--- a/tests/queries/0_stateless/02147_order_by_optimizations.sql\n+++ b/tests/queries/0_stateless/02147_order_by_optimizations.sql\n@@ -13,3 +13,7 @@ SET optimize_monotonous_functions_in_order_by = 1;\n EXPLAIN SYNTAX SELECT * FROM t_02147 ORDER BY toStartOfHour(date), v;\n EXPLAIN SYNTAX SELECT * FROM t_02147_dist ORDER BY toStartOfHour(date), v;\n EXPLAIN SYNTAX SELECT * FROM t_02147_merge ORDER BY toStartOfHour(date), v;\n+\n+drop table t_02147;\n+CREATE TABLE t_02147 (date DateTime, v UInt32) ENGINE = MergeTree ORDER BY date;\n+select *, toString(t.v) as s from t_02147_merge as t order by date, s;\n",
  "problem_statement": "Clickhouse got stuck and had thrown a coredump\n\r\nClickhouse got stuck and had thrown a coredump\r\nOptimize table process has been started there before the fail\r\n\r\n\r\n**Does it reproduce on recent release?**\r\n\r\nv22.3.6.5-lts\r\n\r\n**Error message and/or stacktrace**\r\n\r\nhttps://pastila.nl/?00ea0713/9ad972e00fde60564ff00853050fcc1d\r\n\r\nCan't provide the coredump file for NDA reason, but ready to analyse it\r\n\r\n\n",
  "hints_text": "Do you have complex default/materialize expressions on the table (Optimize table ) ?\r\n\r\n>(from thread 22808) (query_id: c3a943ed-92af-41dd-953d-0ab6226a18a6) (query: SELECT\r\n\r\nCan you share SELECT and show create table ?\r\n\r\n\n> Do you have complex default/materialize expressions on the table (Optimize table ) ?\r\n\r\nNo, we don't, but I'll find those tables and check\r\n>Can you share SELECT and show create table ?\r\n\r\nOne of them is here https://pastila.nl/?04432e0c/1844e3e6290e72a5b3da5eff1e66e80b\r\nThere is a typical scheme for all our tables: local_table + distributed one\nNeed to upgrade to 22.3.12 to get the latest patches and security updates.\r\n\r\nUpgrading to the latest version 22.8.5 is also preferred.\nwe have updated ClickHouse up to version 22.3.12\r\nbut problem remains\r\noutput of `zgrep -Fa Fatal /var/log/clickhouse-server/* |& tee fatal.txt` attached\r\n[fatal.txt](https://github.com/ClickHouse/ClickHouse/files/9609525/fatal.txt)\r\n(just for info for yandex-market employees - that was from welder09h)\r\ncore dump named `core.20220920184601.HTTPHandler.11.welder09h.5195.c9724acfa2bb74ee360ee86510c05840` remains on our host. It has size 278G.\r\nif you can provide some instructions how to investigate problem using this core dump - please, write them\r\n\n@syominsergey you have attached a table schema and logs, but I still can't find the select query caused it.\r\nCan you do `zgrep -a c3a943ed-92af-41dd-953d-0ab6226a18a6 /var/log/clickhouse-server/*` and send the result? Without it it would be almost impossible to find a bug.",
  "created_at": "2022-09-23T18:39:24Z",
  "modified_files": [
    "src/Interpreters/MonotonicityCheckVisitor.h"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02147_order_by_optimizations.sql"
  ]
}