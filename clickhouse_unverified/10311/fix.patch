diff --git a/src/Interpreters/CrossToInnerJoinVisitor.cpp b/src/Interpreters/CrossToInnerJoinVisitor.cpp
index 903f561b8bb7..af694fe634a5 100644
--- a/src/Interpreters/CrossToInnerJoinVisitor.cpp
+++ b/src/Interpreters/CrossToInnerJoinVisitor.cpp
@@ -52,17 +52,21 @@ struct JoinedElement
 
     void rewriteCommaToCross()
     {
-        if (join)
+        if (join && join->kind == ASTTableJoin::Kind::Comma)
             join->kind = ASTTableJoin::Kind::Cross;
     }
 
-    void rewriteCrossToInner(ASTPtr on_expression)
+    bool rewriteCrossToInner(ASTPtr on_expression)
     {
+        if (join->kind != ASTTableJoin::Kind::Cross)
+            return false;
+
         join->kind = ASTTableJoin::Kind::Inner;
         join->strictness = ASTTableJoin::Strictness::All;
 
         join->on_expression = on_expression;
         join->children.push_back(join->on_expression);
+        return true;
     }
 
     ASTPtr arrayJoin() const { return element.array_join; }
@@ -329,8 +333,8 @@ void CrossToInnerJoinMatcher::visit(ASTSelectQuery & select, ASTPtr &, Data & da
     {
         if (visitor_data.matchAny(i))
         {
-            joined_tables[i].rewriteCrossToInner(visitor_data.makeOnExpression(i));
-            data.done = true;
+            if (joined_tables[i].rewriteCrossToInner(visitor_data.makeOnExpression(i)))
+                data.done = true;
         }
     }
 }
