{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 82829,
  "instance_id": "ClickHouse__ClickHouse-82829",
  "issue_numbers": [
    "82105"
  ],
  "base_commit": "26938d351af00dd87d23cf7778552631439b8ce2",
  "patch": "diff --git a/src/Parsers/ASTDictionary.cpp b/src/Parsers/ASTDictionary.cpp\nindex b6098e227bf1..c99fc6bf4577 100644\n--- a/src/Parsers/ASTDictionary.cpp\n+++ b/src/Parsers/ASTDictionary.cpp\n@@ -2,6 +2,7 @@\n #include <Poco/String.h>\n #include <IO/Operators.h>\n #include <Common/FieldVisitorToString.h>\n+#include <Common/quoteString.h>\n \n \n namespace DB\n@@ -28,11 +29,11 @@ void ASTDictionaryRange::formatImpl(WriteBuffer & ostr,\n                   << (settings.hilite ? hilite_keyword : \"\")\n                   << \"MIN \"\n                   << (settings.hilite ? hilite_none : \"\")\n-                  << min_attr_name << \" \"\n+                  << backQuoteIfNeed(min_attr_name) << \" \"\n                   << (settings.hilite ? hilite_keyword : \"\")\n                   << \"MAX \"\n                   << (settings.hilite ? hilite_none : \"\")\n-                  << max_attr_name << \")\";\n+                  << backQuoteIfNeed(max_attr_name) << \")\";\n }\n \n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03553_inconsistent_formatting_of_dictionary.reference b/tests/queries/0_stateless/03553_inconsistent_formatting_of_dictionary.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/03553_inconsistent_formatting_of_dictionary.sql b/tests/queries/0_stateless/03553_inconsistent_formatting_of_dictionary.sql\nnew file mode 100644\nindex 000000000000..0d4faeb36d1f\n--- /dev/null\n+++ b/tests/queries/0_stateless/03553_inconsistent_formatting_of_dictionary.sql\n@@ -0,0 +1,1 @@\n+CREATE DICTIONARY d0 (c1 Nested(c2 Int)) RANGE(MIN c1 MAX `c1.c2`); -- { serverError INCORRECT_DICTIONARY_DEFINITION }\n",
  "problem_statement": "Inconsistent formatting of CREATE DICTIONARY\n### Describe the bug\n\nOne more of these \ud83d\ude04 \n\n### How to reproduce\n\nRun:\n\n```sql\nCREATE DICTIONARY d0 (c1 Nested(c2 Int)) RANGE(MIN c1 MAX `c1.c2`);\n```\n\n### Error message and/or stacktrace\n\nStack trace:\n\n```\n<Fatal> : Logical error: 'Inconsistent AST formatting: the query:\nCREATE DICTIONARY d0 (`c1` Nested(c2 Int)) RANGE(MIN c1 MAX c1.c2)\ncannot parse query back from CREATE DICTIONARY d0 (c1 Nested(c2 Int)) RANGE(MIN c1 MAX `c1.c2`);'.\n<Fatal> : Stack trace (when copying this message, always include the lines below):\n\n0. contrib/llvm-project/libcxx/include/__exception/exception.h:113: Poco::Exception::Exception(String const&, int) @ 0x000000001deb8e52\n1. src/Common/Exception.cpp:115: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000127c25c6\n2. src/Common/Exception.h:119: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000bcc90ac\n3. src/Common/Exception.h:137: DB::Exception::Exception<String&, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x0000000017d5c9d6\n4. src/Interpreters/executeQuery.cpp:1040: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000017d5504a\n5. src/Interpreters/executeQuery.cpp:1715: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000017d4ccb1\n6. src/Server/TCPHandler.cpp:721: DB::TCPHandler::runImpl() @ 0x0000000019adb312\n7. src/Server/TCPHandler.cpp:2727: DB::TCPHandler::run() @ 0x0000000019af4a44\n8. base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x000000001df5e0a7\n9. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000001df5e5a5\n10. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000001df06bdf\n11. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001df04791\n12. start_thread @ 0x00000000000a2ef1\n13. __clone3 @ 0x000000000013445c\n```\n",
  "hints_text": "",
  "created_at": "2025-06-29T06:40:34Z"
}