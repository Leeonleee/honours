{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 28863,
  "instance_id": "ClickHouse__ClickHouse-28863",
  "issue_numbers": [
    "28136"
  ],
  "base_commit": "0bb74f8eaf43e86e405708ddebc8758ec0da9ef8",
  "patch": "diff --git a/src/Interpreters/inplaceBlockConversions.cpp b/src/Interpreters/inplaceBlockConversions.cpp\nindex e40e0635a857..4ba924821d71 100644\n--- a/src/Interpreters/inplaceBlockConversions.cpp\n+++ b/src/Interpreters/inplaceBlockConversions.cpp\n@@ -63,8 +63,11 @@ void addDefaultRequiredExpressionsRecursively(\n         for (const auto & next_required_column_name : required_columns_names)\n             addDefaultRequiredExpressionsRecursively(block, next_required_column_name, required_column_type, columns, default_expr_list_accum, added_columns, null_as_default);\n     }\n-    else\n+    else if (columns.has(required_column_name))\n     {\n+        /// In case of dictGet function we allow to use it with identifier dictGet(identifier, 'column_name', key_expression)\n+        /// and this identifier will be in required columns. If such column is not in ColumnsDescription we ignore it.\n+\n         /// This column is required, but doesn't have default expression, so lets use \"default default\"\n         auto column = columns.get(required_column_name);\n         auto default_value = column.type->getDefault();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/2015_column_default_dict_get_identifier.reference b/tests/queries/0_stateless/2015_column_default_dict_get_identifier.reference\nnew file mode 100644\nindex 000000000000..29e04d559e12\n--- /dev/null\n+++ b/tests/queries/0_stateless/2015_column_default_dict_get_identifier.reference\n@@ -0,0 +1,1 @@\n+5\t0\ndiff --git a/tests/queries/0_stateless/2015_column_default_dict_get_identifier.sql b/tests/queries/0_stateless/2015_column_default_dict_get_identifier.sql\nnew file mode 100644\nindex 000000000000..292f53952d03\n--- /dev/null\n+++ b/tests/queries/0_stateless/2015_column_default_dict_get_identifier.sql\n@@ -0,0 +1,37 @@\n+DROP TABLE IF EXISTS test_table;\n+CREATE TABLE test_table\n+(\n+    key_column UInt64,\n+    data_column_1 UInt64,\n+    data_column_2 UInt8\n+)\n+ENGINE = MergeTree\n+ORDER BY key_column;\n+\n+INSERT INTO test_table VALUES (0, 0, 0);\n+\n+DROP DICTIONARY IF EXISTS test_dictionary;\n+CREATE DICTIONARY test_dictionary\n+(\n+    key_column UInt64 DEFAULT 0,\n+    data_column_1 UInt64 DEFAULT 1,\n+    data_column_2 UInt8 DEFAULT 1\n+)\n+PRIMARY KEY key_column\n+LAYOUT(DIRECT())\n+SOURCE(CLICKHOUSE(TABLE 'test_table'));\n+\n+DROP TABLE IF EXISTS test_table_default;\n+CREATE TABLE test_table_default\n+(\n+    data_1 DEFAULT dictGetUInt64('test_dictionary', 'data_column_1', toUInt64(0)),\n+    data_2 DEFAULT dictGet(test_dictionary, 'data_column_2', toUInt64(0))\n+)\n+ENGINE=TinyLog;\n+\n+INSERT INTO test_table_default(data_1) VALUES (5);\n+SELECT * FROM test_table_default;\n+\n+DROP DICTIONARY test_dictionary;\n+DROP TABLE test_table;\n+DROP TABLE test_table_default;\n",
  "problem_statement": "Default value with dictGet: There is no column <table_name> in table\n```\r\n:) CREATE TABLE table_for_dict (`key_column` UInt64, `second_column` UInt8, `third_column` String) ENGINE = MergeTree ORDER BY key_column\r\n:) INSERT INTO table_for_dict VALUES (1, 100, 'Hello world');\r\n:) CREATE DICTIONARY dict1\u3000(\u3000  key_column UInt64 DEFAULT 0,\u3000  second_column UInt8 DEFAULT 1,\u3000  third_column String DEFAULT 'qqq'\u3000)\u3000PRIMARY KEY key_column\u3000SOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'default'))\u3000LIFETIME(MIN 1 MAX 10)\u3000LAYOUT(FLAT());\r\n:) create table t1 (n default dictGetUInt8('default.dict1', 'second_column', toUInt64(100500)), m default dictGet(default.dict1, 'third_column', toUInt64(100500))) engine=Memory\r\n```\r\n\r\nWorks fine on 20.8.19:\r\n```\r\n:) insert into t1(n) values (1)\r\n:) select * from t1\r\n```\r\n\r\nFails on 21.10.1.1 (master):\r\n```\r\n:) insert into t1(n) values (1)\r\n\r\nINSERT INTO t1 (n) VALUES\r\n\r\nQuery id: abfdc400-0844-41a5-840e-ba1eded588ba\r\n\r\n[avtokmakov-dev.sas.yp-c.yandex.net] 2021.08.25 14:57:24.963404 [ 6061 ] {abfdc400-0844-41a5-840e-ba1eded588ba} <Debug> executeQuery: (from [::1]:55432) insert into t1(n) values \r\n[avtokmakov-dev.sas.yp-c.yandex.net] 2021.08.25 14:57:24.965070 [ 6061 ] {abfdc400-0844-41a5-840e-ba1eded588ba} <Trace> ContextAccess (default): Access granted: INSERT(n) ON default.t1\r\n[avtokmakov-dev.sas.yp-c.yandex.net] 2021.08.25 14:57:24.966993 [ 6061 ] {abfdc400-0844-41a5-840e-ba1eded588ba} <Error> executeQuery: Code: 16. DB::Exception: There is no column default.dict1 in table. (NO_SUCH_COLUMN_IN_TABLE) (version 21.10.1.1) (from [::1]:55432) (in query: insert into t1(n) values ), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/libcxx/include/exception:133: std::exception::capture() @ 0x137b2608 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n1. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/libcxx/include/exception:111: std::exception::exception() @ 0x137b25d5 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n2. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x2453e123 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n3. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Common/Exception.cpp:57: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x137930d0 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n4. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Storages/ColumnsDescription.cpp:382: DB::ColumnsDescription::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x1f448d1e in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n5. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Interpreters/inplaceBlockConversions.cpp:69: DB::(anonymous namespace)::addDefaultRequiredExpressionsRecursively(DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDataType const>, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::IAST>, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, bool) @ 0x1f1de521 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n6. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Interpreters/inplaceBlockConversions.cpp:64: DB::(anonymous namespace)::addDefaultRequiredExpressionsRecursively(DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IDataType const>, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::IAST>, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, bool) @ 0x1f1de478 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n7. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Interpreters/inplaceBlockConversions.cpp:83: DB::(anonymous namespace)::defaultRequiredExpressions(DB::Block const&, DB::NamesAndTypesList const&, DB::ColumnsDescription const&, bool) @ 0x1f1ddca0 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n8. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Interpreters/inplaceBlockConversions.cpp:163: DB::evaluateMissingDefaults(DB::Block const&, DB::NamesAndTypesList const&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool, bool) @ 0x1f1dd9f5 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n9. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Interpreters/addMissingDefaults.cpp:84: DB::addMissingDefaults(DB::Block const&, DB::NamesAndTypesList const&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool) @ 0x1f19469a in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n10. /home/avtokmakov/ch/ClickHouse/build_debug/../src/DataStreams/AddingDefaultBlockOutputStream.cpp:17: DB::AddingDefaultBlockOutputStream::AddingDefaultBlockOutputStream(std::__1::shared_ptr<DB::IBlockOutputStream> const&, DB::Block const&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool) @ 0x1eb4e7b9 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n11. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/libcxx/include/memory:887: void std::__1::allocator<DB::AddingDefaultBlockOutputStream>::construct<DB::AddingDefaultBlockOutputStream, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool&>(DB::AddingDefaultBlockOutputStream*, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>&&, bool&) @ 0x1eb4ada1 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n12. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/libcxx/include/__memory/allocator_traits.h:521: void std::__1::allocator_traits<std::__1::allocator<DB::AddingDefaultBlockOutputStream> >::__construct<DB::AddingDefaultBlockOutputStream, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool&>(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::AddingDefaultBlockOutputStream>&, DB::AddingDefaultBlockOutputStream*, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>&&, bool&) @ 0x1eb4acdc in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n13. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/libcxx/include/__memory/allocator_traits.h:482: void std::__1::allocator_traits<std::__1::allocator<DB::AddingDefaultBlockOutputStream> >::construct<DB::AddingDefaultBlockOutputStream, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool&>(std::__1::allocator<DB::AddingDefaultBlockOutputStream>&, DB::AddingDefaultBlockOutputStream*, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>&&, bool&) @ 0x1eb4aa3c in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n14. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/libcxx/include/memory:2594: std::__1::__shared_ptr_emplace<DB::AddingDefaultBlockOutputStream, std::__1::allocator<DB::AddingDefaultBlockOutputStream> >::__shared_ptr_emplace<std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool&>(std::__1::allocator<DB::AddingDefaultBlockOutputStream>, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>&&, bool&) @ 0x1eb4a646 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n15. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/libcxx/include/memory:3360: std::__1::shared_ptr<DB::AddingDefaultBlockOutputStream> std::__1::allocate_shared<DB::AddingDefaultBlockOutputStream, std::__1::allocator<DB::AddingDefaultBlockOutputStream>, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool&, void>(std::__1::allocator<DB::AddingDefaultBlockOutputStream> const&, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>&&, bool&) @ 0x1eb4a40a in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n16. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/libcxx/include/memory:3369: std::__1::shared_ptr<DB::AddingDefaultBlockOutputStream> std::__1::make_shared<DB::AddingDefaultBlockOutputStream, std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>, bool&, void>(std::__1::shared_ptr<DB::IBlockOutputStream>&, DB::Block&, DB::ColumnsDescription const&, std::__1::shared_ptr<DB::Context const>&&, bool&) @ 0x1eb44fa5 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n17. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Interpreters/InterpreterInsertQuery.cpp:293: DB::InterpreterInsertQuery::execute() @ 0x1eb423d0 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n18. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Interpreters/executeQuery.cpp:573: DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x1f1bd2a4 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n19. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Interpreters/executeQuery.cpp:934: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, bool) @ 0x1f1bb405 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n20. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Server/TCPHandler.cpp:291: DB::TCPHandler::runImpl() @ 0x1fd952a9 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n21. /home/avtokmakov/ch/ClickHouse/build_debug/../src/Server/TCPHandler.cpp:1659: DB::TCPHandler::run() @ 0x1fda2928 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n22. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x24470a7c in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n23. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x24471304 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n24. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x245cb8c3 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n25. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x245c817d in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n26. /home/avtokmakov/ch/ClickHouse/build_debug/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x245c6f08 in /home/avtokmakov/ch/ClickHouse/build_debug/programs/clickhouse\r\n27. start_thread @ 0x9609 in /lib/x86_64-linux-gnu/libpthread-2.31.so\r\n28. /build/glibc-YYA7BZ/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x122103 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so\r\n```\r\n\r\n`default.dict1` is not a column, it's dictionary name\r\n\n",
  "hints_text": "",
  "created_at": "2021-09-10T14:41:46Z",
  "modified_files": [
    "src/Interpreters/inplaceBlockConversions.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/2015_column_default_dict_get_identifier.reference",
    "b/tests/queries/0_stateless/2015_column_default_dict_get_identifier.sql"
  ]
}