{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 44983,
  "instance_id": "ClickHouse__ClickHouse-44983",
  "issue_numbers": [
    "14700"
  ],
  "base_commit": "35511685e3b9effe56b6637a469add158d26389d",
  "patch": "diff --git a/src/Storages/StorageMerge.cpp b/src/Storages/StorageMerge.cpp\nindex 028d6dd8caa8..e096811e5b91 100644\n--- a/src/Storages/StorageMerge.cpp\n+++ b/src/Storages/StorageMerge.cpp\n@@ -44,7 +44,6 @@ namespace DB\n namespace ErrorCodes\n {\n     extern const int BAD_ARGUMENTS;\n-    extern const int LOGICAL_ERROR;\n     extern const int NOT_IMPLEMENTED;\n     extern const int ILLEGAL_PREWHERE;\n     extern const int NUMBER_OF_ARGUMENTS_DOESNT_MATCH;\n@@ -653,7 +652,7 @@ QueryPipelineBuilderPtr ReadFromMerge::createSources(\n \n         /// Subordinary tables could have different but convertible types, like numeric types of different width.\n         /// We must return streams with structure equals to structure of Merge table.\n-        convertingSourceStream(header, storage_snapshot->metadata, aliases, modified_context, modified_query_info.query, *builder, processed_stage);\n+        convertingSourceStream(header, storage_snapshot->metadata, aliases, modified_context, *builder);\n     }\n \n     return builder;\n@@ -829,9 +828,7 @@ void ReadFromMerge::convertingSourceStream(\n     const StorageMetadataPtr & metadata_snapshot,\n     const Aliases & aliases,\n     ContextPtr local_context,\n-    ASTPtr & query,\n-    QueryPipelineBuilder & builder,\n-    QueryProcessingStage::Enum processed_stage)\n+    QueryPipelineBuilder & builder)\n {\n     Block before_block_header = builder.getHeader();\n \n@@ -868,39 +865,6 @@ void ReadFromMerge::convertingSourceStream(\n             return std::make_shared<ExpressionTransform>(stream_header, actions);\n         });\n     }\n-\n-    auto where_expression = query->as<ASTSelectQuery>()->where();\n-\n-    if (!where_expression)\n-        return;\n-\n-    if (processed_stage > QueryProcessingStage::FetchColumns)\n-    {\n-        for (size_t column_index : collections::range(0, header.columns()))\n-        {\n-            ColumnWithTypeAndName header_column = header.getByPosition(column_index);\n-            ColumnWithTypeAndName before_column = before_block_header.getByName(header_column.name);\n-            /// If the processed_stage greater than FetchColumns and the block structure between streams is different.\n-            /// the where expression maybe invalid because of ConvertingTransform.\n-            /// So we need to throw exception.\n-            if (!header_column.type->equals(*before_column.type.get()))\n-            {\n-                NamesAndTypesList source_columns = metadata_snapshot->getSampleBlock().getNamesAndTypesList();\n-                auto virtual_column = *storage_merge->getVirtuals().tryGetByName(\"_table\");\n-                source_columns.emplace_back(NameAndTypePair{virtual_column.name, virtual_column.type});\n-                auto syntax_result = TreeRewriter(local_context).analyze(where_expression, source_columns);\n-                ExpressionActionsPtr actions = ExpressionAnalyzer{where_expression, syntax_result, local_context}.getActions(false, false);\n-                Names required_columns = actions->getRequiredColumns();\n-\n-                for (const auto & required_column : required_columns)\n-                {\n-                    if (required_column == header_column.name)\n-                        throw Exception(\"Block structure mismatch in Merge Storage: different types:\\n\" + before_block_header.dumpStructure()\n-                                        + \"\\n\" + header.dumpStructure(), ErrorCodes::LOGICAL_ERROR);\n-                }\n-            }\n-        }\n-    }\n }\n \n IStorage::ColumnSizeByName StorageMerge::getColumnSizes() const\ndiff --git a/src/Storages/StorageMerge.h b/src/Storages/StorageMerge.h\nindex 54f3999514d0..d296eeea4212 100644\n--- a/src/Storages/StorageMerge.h\n+++ b/src/Storages/StorageMerge.h\n@@ -193,10 +193,10 @@ class ReadFromMerge final : public ISourceStep\n         size_t streams_num,\n         bool concat_streams = false);\n \n-    void convertingSourceStream(\n+    static void convertingSourceStream(\n         const Block & header, const StorageMetadataPtr & metadata_snapshot, const Aliases & aliases,\n-        ContextPtr context, ASTPtr & query,\n-        QueryPipelineBuilder & builder, QueryProcessingStage::Enum processed_stage);\n+        ContextPtr context,\n+        QueryPipelineBuilder & builder);\n };\n \n }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02522_different_types_in_storage_merge.reference b/tests/queries/0_stateless/02522_different_types_in_storage_merge.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql b/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql\nnew file mode 100644\nindex 000000000000..db0a498fd82c\n--- /dev/null\n+++ b/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql\n@@ -0,0 +1,6 @@\n+CREATE TABLE test_s64_local (date Date, value Int64) ENGINE = MergeTree order by tuple();\n+CREATE TABLE test_u64_local (date Date, value UInt64) ENGINE = MergeTree order by tuple();\n+CREATE TABLE test_s64_distributed AS test_s64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_s64_local, rand());\n+CREATE TABLE test_u64_distributed AS test_u64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_u64_local, rand());\n+\n+SELECT * FROM merge(currentDatabase(), '') WHERE value = 1048575;\n",
  "problem_statement": "Logical error: Block structure mismatch in Merge Storage: different types\n```\r\nCREATE DATABASE fuzz;\r\nUSE fuzz;\r\n\r\nCREATE TABLE test_s64_local (date Date, value Int64) ENGINE = MergeTree(date, date, 8192);\r\nCREATE TABLE test_u64_local (date Date, value UInt64) ENGINE = MergeTree(date, date, 8192);\r\nCREATE TABLE test_s64_distributed AS test_s64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_s64_local, rand());\r\nCREATE TABLE test_u64_distributed AS test_u64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_u64_local, rand());\r\n\r\nSELECT * FROM merge(currentDatabase(), '') WHERE value = 1048575\r\n\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.858301 [ 201 ] <Fatal> BaseDaemon: ########################################\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.858807 [ 201 ] <Fatal> BaseDaemon: (version 20.10.1.4614, build id: B4A1B0622B6A7D03) (from thread 97) (query_id: 831c8b30-0013-4edb-a43b-abda6845f302) Received signal Aborted (6)\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.859002 [ 201 ] <Fatal> BaseDaemon: \r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.859195 [ 201 ] <Fatal> BaseDaemon: Stack trace: 0x7f5573666f47 0x7f55736688b1 0x7f557365842a 0x7f55736584a2 0x2122ba21 0x2c130279 0x2c12f983 0x2c12db5e 0x2cbb95cd 0x2b9a6124 0x2b99aaf3 0x2b99445c 0x2b9939a6 0x2bc9e4e8 0x2bc9e7b6 0x2be59a66 0x2be58a2a 0x2c7a6a26 0x2c7adee8 0x304456bc 0x30445ecc 0x30587cd3 0x30584c0d 0x30583a98 0x7f5573e2c6db 0x7f5573749a3f\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.859566 [ 201 ] <Fatal> BaseDaemon: 4. /build/glibc-2ORdQG/glibc-2.27/signal/../sysdeps/unix/sysv/linux/raise.c:51: raise @ 0x3ef47 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.859865 [ 201 ] <Fatal> BaseDaemon: 5. /build/glibc-2ORdQG/glibc-2.27/stdlib/abort.c:81: __GI_abort @ 0x408b1 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.860117 [ 201 ] <Fatal> BaseDaemon: 6. /build/glibc-2ORdQG/glibc-2.27/assert/assert.c:89: __assert_fail_base @ 0x3042a in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.860575 [ 201 ] <Fatal> BaseDaemon: 7. ? @ 0x304a2 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.860948 [ 201 ] <Fatal> BaseDaemon: 8. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:48: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x2122ba21 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.884484 [ 201 ] <Fatal> BaseDaemon: 9. /build/obj-x86_64-linux-gnu/../src/Storages/StorageMerge.cpp:507: DB::StorageMerge::convertingSourceStream(DB::Block const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Context const&, std::__1::shared_ptr<DB::IAST>&, DB::Pipe&, DB::QueryProcessingStage::Enum) @ 0x2c130279 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.907480 [ 201 ] <Fatal> BaseDaemon: 10. /build/obj-x86_64-linux-gnu/../src/Storages/StorageMerge.cpp:331: DB::StorageMerge::createSources(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::QueryProcessingStage::Enum const&, unsigned long, DB::Block const&, std::__1::tuple<std::__1::shared_ptr<DB::IStorage>, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, std::__1::shared_ptr<DB::Context> const&, unsigned long, bool, bool) @ 0x2c12f983 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.931791 [ 201 ] <Fatal> BaseDaemon: 11. /build/obj-x86_64-linux-gnu/../src/Storages/StorageMerge.cpp:234: DB::StorageMerge::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0x2c12db5e in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.962385 [ 201 ] <Fatal> BaseDaemon: 12. /build/obj-x86_64-linux-gnu/../src/Processors/QueryPlan/ReadFromStorageStep.cpp:39: DB::ReadFromStorageStep::ReadFromStorageStep(std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, DB::SelectQueryOptions, std::__1::shared_ptr<DB::IStorage>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context>, DB::QueryProcessingStage::Enum, unsigned long, unsigned long) @ 0x2cbb95cd in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:25.981633 [ 201 ] <Fatal> BaseDaemon: 13. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3028: std::__1::__unique_if<DB::ReadFromStorageStep>::__unique_single std::__1::make_unique<DB::ReadFromStorageStep, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, DB::SelectQueryOptions&, std::__1::shared_ptr<DB::IStorage>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context>&, DB::QueryProcessingStage::Enum&, unsigned long&, unsigned long&>(std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, DB::SelectQueryOptions&, std::__1::shared_ptr<DB::IStorage>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context>&, DB::QueryProcessingStage::Enum&, unsigned long&, unsigned long&) @ 0x2b9a6124 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.000202 [ 201 ] <Fatal> BaseDaemon: 14. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1412: DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x2b99aaf3 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.019178 [ 201 ] <Fatal> BaseDaemon: 15. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:810: DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x2b99445c in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.037936 [ 201 ] <Fatal> BaseDaemon: 16. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:471: DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x2b9939a6 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.057048 [ 201 ] <Fatal> BaseDaemon: 17. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:183: DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x2bc9e4e8 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.075531 [ 201 ] <Fatal> BaseDaemon: 18. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:206: DB::InterpreterSelectWithUnionQuery::execute() @ 0x2bc9e7b6 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.096688 [ 201 ] <Fatal> BaseDaemon: 19. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:392: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x2be59a66 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.119308 [ 201 ] <Fatal> BaseDaemon: 20. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:679: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x2be58a2a in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.146743 [ 201 ] <Fatal> BaseDaemon: 21. /build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:253: DB::TCPHandler::runImpl() @ 0x2c7a6a26 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.174615 [ 201 ] <Fatal> BaseDaemon: 22. /build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1217: DB::TCPHandler::run() @ 0x2c7adee8 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.208762 [ 201 ] <Fatal> BaseDaemon: 23. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x304456bc in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.244270 [ 201 ] <Fatal> BaseDaemon: 24. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:114: Poco::Net::TCPServerDispatcher::run() @ 0x30445ecc in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.278996 [ 201 ] <Fatal> BaseDaemon: 25. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x30587cd3 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.314520 [ 201 ] <Fatal> BaseDaemon: 26. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x30584c0d in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.350760 [ 201 ] <Fatal> BaseDaemon: 27. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x30583a98 in /workspace/clickhouse\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.351062 [ 201 ] <Fatal> BaseDaemon: 28. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n[linux-ubuntu-14-04-trusty] 2020.09.10 15:31:26.351423 [ 201 ] <Fatal> BaseDaemon: 29. /build/glibc-2ORdQG/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x121a3f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\nError on processing query 'SELECT * FROM merge(currentDatabase(), '') WHERE value = 1048575': Code: 32, e.displayText() = DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000, Stack trace (when copying this message, always include the lines below):\r\n```\r\n\r\nhttps://clickhouse-test-reports.s3.yandex.net/14563/20b3823770f60feefcd73306141bc25875d87f9a/fuzzer/report.html#fail1\n",
  "hints_text": "https://clickhouse-test-reports.s3.yandex.net/17310/d7200ee2ede7b739a682c8f5c06e47c7e624a121/fuzzer/report.html#fail1\nStill relevant.\nStill relevant in July 2021.\nhttps://s3.amazonaws.com/clickhouse-test-reports/35597/824c87a5d6a7d61a8d8c2b35fc68d7b782cfef0f/fuzzer_astfuzzerdebug,actions//report.html\nhttps://s3.amazonaws.com/clickhouse-test-reports/0/df0cb0620985eb5ec59760cc76f7736e5b6209bb/fuzzer_astfuzzerubsan,actions//report.html\nhttps://s3.amazonaws.com/clickhouse-test-reports/37450/b73d49158d73245e8ee190dfefad196b017f9bcb/fuzzer_astfuzzerdebug,actions//report.html\nhttps://s3.amazonaws.com/clickhouse-test-reports/37015/f3e573bfdec6f442b5a5543beac1156ed71be8eb/fuzzer_astfuzzerdebug,actions//report.html\nhttps://s3.amazonaws.com/clickhouse-test-reports/0/fab62513aac636ec6e46abc420048f4d6cfd679a/fuzzer_astfuzzerubsan,actions//report.html\nhttps://s3.amazonaws.com/clickhouse-test-reports/38335/94dd80e90069bca17066abadb3bf60d3ff496e59/fuzzer_astfuzzerubsan,actions//report.html\nWe will celebrate birthday of this bug soon...\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/38335/3f266954f07ce0169cfa0f4b592ab96e8accab0e/fuzzer_astfuzzerubsan,actions//report.html\nhttps://s3.amazonaws.com/clickhouse-test-reports/0/ceb66ade4b782513a9c40fca92be8965de914d11/fuzzer_astfuzzerubsan,actions//report.html \nhttps://s3.amazonaws.com/clickhouse-test-reports/39872/1133425624ba6312c8e9fed1544d10dec0d52142/fuzzer_astfuzzerubsan//report.html\nNot fixed: https://s3.amazonaws.com/clickhouse-test-reports/41984/498ba33160871284ab9d2d78a10356675cc60a75/fuzzer_astfuzzerdebug//report.html\nhttps://s3.amazonaws.com/clickhouse-test-reports/42678/7973b4e5e50d31e0529574a3ce34a72b6844c147/fuzzer_astfuzzerubsan//report.html",
  "created_at": "2023-01-06T13:26:46Z"
}