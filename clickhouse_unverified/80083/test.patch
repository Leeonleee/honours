diff --git a/tests/queries/0_stateless/02233_interpolate_1.sql b/tests/queries/0_stateless/02233_interpolate_1.sql
index 36b7c4dbc6a9..453de421f22d 100644
--- a/tests/queries/0_stateless/02233_interpolate_1.sql
+++ b/tests/queries/0_stateless/02233_interpolate_1.sql
@@ -26,7 +26,7 @@ SELECT n, source, inter FROM (
 # Test INTERPOLATE with incompatible expression - should produce error
 SELECT n, source, inter FROM (
    SELECT toFloat32(number % 10) AS n, 'original' AS source, number as inter FROM numbers(10) WHERE number % 3 = 1
-) ORDER BY n WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE (inter AS reverse(inter)); -- { serverError ILLEGAL_COLUMN }
+) ORDER BY n WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE (inter AS reverse(inter)); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
 
 # Test INTERPOLATE with column from WITH FILL expression - should produce error
 SELECT n, source, inter FROM (
diff --git a/tests/queries/0_stateless/03447_function_reverse_for_tuple.reference b/tests/queries/0_stateless/03447_function_reverse_for_tuple.reference
new file mode 100644
index 000000000000..1d865e2ebf46
--- /dev/null
+++ b/tests/queries/0_stateless/03447_function_reverse_for_tuple.reference
@@ -0,0 +1,7 @@
+([2,3],'Hello',1)
+('hello',1)
+('world',2)
+('clickhouse',3)
+1	hello
+2	world
+3	clickhouse
diff --git a/tests/queries/0_stateless/03447_function_reverse_for_tuple.sql b/tests/queries/0_stateless/03447_function_reverse_for_tuple.sql
new file mode 100644
index 000000000000..a3783c2f7bec
--- /dev/null
+++ b/tests/queries/0_stateless/03447_function_reverse_for_tuple.sql
@@ -0,0 +1,12 @@
+SELECT reverse((1, 'Hello', [2, 3]));
+
+DROP TABLE IF EXISTS t_tuple;
+
+CREATE TABLE t_tuple(tuple Tuple(a Int32, b String)) engine = MergeTree order by tuple();
+
+INSERT INTO t_tuple VALUES((1, 'hello')), ((2, 'world')), ((3, 'clickhouse'));
+
+SELECT reverse(tuple) FROM t_tuple;
+SELECT reverse(tuple).a, reverse(tuple).b FROM t_tuple;
+
+DROP TABLE t_tuple;
