{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 52106,
  "instance_id": "ClickHouse__ClickHouse-52106",
  "issue_numbers": [
    "52101"
  ],
  "base_commit": "6c62c3b4268e4afc70ff8841a0a54a09d8456ecd",
  "patch": "diff --git a/docs/en/sql-reference/functions/date-time-functions.md b/docs/en/sql-reference/functions/date-time-functions.md\nindex 19eeda967fe6..66e4f6bc9eb3 100644\n--- a/docs/en/sql-reference/functions/date-time-functions.md\n+++ b/docs/en/sql-reference/functions/date-time-functions.md\n@@ -1134,6 +1134,8 @@ Result:\n \n Returns the current date and time at the moment of query analysis. The function is a constant expression.\n \n+Alias: `current_timestamp`.\n+\n **Syntax**\n \n ``` sql\n@@ -1264,6 +1266,8 @@ Result:\n Accepts zero arguments and returns the current date at one of the moments of query analysis.\n The same as \u2018toDate(now())\u2019.\n \n+Aliases: `curdate`, `current_date`.\n+\n ## yesterday\n \n Accepts zero arguments and returns yesterday\u2019s date at one of the moments of query analysis.\ndiff --git a/src/Functions/now.cpp b/src/Functions/now.cpp\nindex d3a94379a611..827b800a2437 100644\n--- a/src/Functions/now.cpp\n+++ b/src/Functions/now.cpp\n@@ -138,6 +138,7 @@ class NowOverloadResolver : public IFunctionOverloadResolver\n REGISTER_FUNCTION(Now)\n {\n     factory.registerFunction<NowOverloadResolver>({}, FunctionFactory::CaseInsensitive);\n+    factory.registerAlias(\"current_timestamp\", NowOverloadResolver::name, FunctionFactory::CaseInsensitive);\n }\n \n }\ndiff --git a/src/Functions/today.cpp b/src/Functions/today.cpp\nindex f106e3992a87..16a5b98d7ecc 100644\n--- a/src/Functions/today.cpp\n+++ b/src/Functions/today.cpp\n@@ -86,6 +86,8 @@ class TodayOverloadResolver : public IFunctionOverloadResolver\n REGISTER_FUNCTION(Today)\n {\n     factory.registerFunction<TodayOverloadResolver>();\n+    factory.registerAlias(\"current_date\", TodayOverloadResolver::name, FunctionFactory::CaseInsensitive);\n+    factory.registerAlias(\"curdate\", TodayOverloadResolver::name, FunctionFactory::CaseInsensitive);\n }\n \n }\ndiff --git a/utils/check-style/aspell-ignore/en/aspell-dict.txt b/utils/check-style/aspell-ignore/en/aspell-dict.txt\nindex 6c88d63be49e..cee42ec1a601 100644\n--- a/utils/check-style/aspell-ignore/en/aspell-dict.txt\n+++ b/utils/check-style/aspell-ignore/en/aspell-dict.txt\n@@ -2545,3 +2545,4 @@ znode\n znodes\n zookeeperSessionUptime\n zstd\n+curdate\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02813_func_now_and_alias.reference b/tests/queries/0_stateless/02813_func_now_and_alias.reference\nnew file mode 100644\nindex 000000000000..e8183f05f5db\n--- /dev/null\n+++ b/tests/queries/0_stateless/02813_func_now_and_alias.reference\n@@ -0,0 +1,3 @@\n+1\n+1\n+1\ndiff --git a/tests/queries/0_stateless/02813_func_now_and_alias.sql b/tests/queries/0_stateless/02813_func_now_and_alias.sql\nnew file mode 100644\nindex 000000000000..bcda1f26181e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02813_func_now_and_alias.sql\n@@ -0,0 +1,3 @@\n+SELECT now() = current_timestamp();\n+SELECT now() = CURRENT_TIMESTAMP();\n+SELECT now() = current_TIMESTAMP();\ndiff --git a/tests/queries/0_stateless/02813_func_today_and_alias.reference b/tests/queries/0_stateless/02813_func_today_and_alias.reference\nnew file mode 100644\nindex 000000000000..a9e2f17562ae\n--- /dev/null\n+++ b/tests/queries/0_stateless/02813_func_today_and_alias.reference\n@@ -0,0 +1,6 @@\n+1\n+1\n+1\n+1\n+1\n+1\ndiff --git a/tests/queries/0_stateless/02813_func_today_and_alias.sql b/tests/queries/0_stateless/02813_func_today_and_alias.sql\nnew file mode 100644\nindex 000000000000..d379aa74f184\n--- /dev/null\n+++ b/tests/queries/0_stateless/02813_func_today_and_alias.sql\n@@ -0,0 +1,6 @@\n+SELECT today() = current_date();\n+SELECT today() = CURRENT_DATE();\n+SELECT today() = current_DATE();\n+SELECT today() = curdate();\n+SELECT today() = CURDATE();\n+SELECT today() = curDATE();\n",
  "problem_statement": "A compatibility alias `CURRENT_TIMESTAMP`\n**Use case**\r\n\r\n`SELECT CURRENT_TIMESTAMP()`\r\n\r\n**Describe the solution you'd like**\r\n\r\nAn alias for function `now`, case-insensitive as well.\r\nAdd it here: https://clickhouse.com/codebrowser/ClickHouse/src/Functions/now.cpp.html#140\r\n\r\nAdd `CURRENT_DATE` and `CURDATE` as aliases for `today`.\n",
  "hints_text": "",
  "created_at": "2023-07-14T06:02:54Z"
}