{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 69469,
  "instance_id": "ClickHouse__ClickHouse-69469",
  "issue_numbers": [
    "69435"
  ],
  "base_commit": "a34a544f4a8cc94283ba1e134cf02eabd0052954",
  "patch": "diff --git a/src/Interpreters/Squashing.cpp b/src/Interpreters/Squashing.cpp\nindex 95b76c600638..c656a1a797b0 100644\n--- a/src/Interpreters/Squashing.cpp\n+++ b/src/Interpreters/Squashing.cpp\n@@ -45,7 +45,7 @@ Chunk Squashing::squash(Chunk && input_chunk)\n \n Chunk Squashing::add(Chunk && input_chunk)\n {\n-    if (!input_chunk)\n+    if (!input_chunk || input_chunk.getNumRows() == 0)\n         return {};\n \n     /// Just read block is already enough.\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03236_squashing_high_memory.reference b/tests/queries/0_stateless/03236_squashing_high_memory.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/03236_squashing_high_memory.sql b/tests/queries/0_stateless/03236_squashing_high_memory.sql\nnew file mode 100644\nindex 000000000000..f6e5dbdef035\n--- /dev/null\n+++ b/tests/queries/0_stateless/03236_squashing_high_memory.sql\n@@ -0,0 +1,27 @@\n+-- Tags: no-fasttest, no-asan, no-tsan, no-msan, no-ubsan\n+-- reason: test requires too many rows to read\n+\n+SET max_rows_to_read = '501G';\n+\n+DROP TABLE IF EXISTS id_values;\n+\n+DROP TABLE IF EXISTS test_table;\n+\n+CREATE TABLE id_values ENGINE MergeTree ORDER BY id1 AS\n+    SELECT arrayJoin(range(500000)) AS id1, arrayJoin(range(1000)) AS id2;\n+\n+SET max_memory_usage = '1G';\n+\n+CREATE TABLE test_table ENGINE MergeTree ORDER BY id AS\n+SELECT id_values.id1             AS id,\n+    string_values.string_val1 AS string_val1,\n+    string_values.string_val2 AS string_val2\n+FROM id_values\n+        JOIN (SELECT arrayJoin(range(10)) AS id1,\n+                    'qwe'                AS string_val1,\n+                    'asd'                AS string_val2) AS string_values\n+            ON id_values.id1 = string_values.id1\n+    SETTINGS join_algorithm = 'hash';\n+\n+DROP TABLE IF EXISTS id_values;\n+DROP TABLE IF EXISTS test_table;\n",
  "problem_statement": "Increased memory consumption after upgrading from 24.5 to 24.8\n**Describe the situation**\r\nRecently, we encountered a significant increase in memory consumption during query inserts involving joins.\r\nAfter upgrading to version 24.8, the same queries now utilize 10x more memory or even more, occasionally resulting in failures.\r\nThis situation has forced us to apply special settings (join_algorithm='partial_merge'), which unfortunately causes the queries to run much slower.\r\n\r\nThe issue seems to be particularly pronounced when joining tables with columns containing long JSON Strings (usually 200+ characters). Interestingly, the source tables themselves are small in terms of storage size \u2014 kilobytes!\r\n\r\nThe read and result stats are exactly the same before/after the upgrade:\r\n* read_bytes: 3057073\r\n* read_rows: 17005\r\n* result_bytes: 658\r\n* result_rows: 4\r\n\r\nHere is the memory usage comparison:\r\n\r\nMemory usage before upgrade: 361,705,119\r\nMemory usage after upgrading: 39,020,451,116 (with the setting join_algorithm='partial_merge'; without this setting, the query fails due to a memory exception)\r\n\r\nother default settings:\r\n* allow_experimental_analyzer: 0\r\n* max_bytes_before_external_group_by: 8000000000\r\n* max_bytes_before_external_sort: 8000000000\r\n* max_memory_usage: 55000000000\r\n\r\nExample to relevant query:\r\n```sql\r\nselect\r\n    rt1.\"id\" as \"id\",\r\n    rt1.\"data_source_id\" as \"data_source_id\",\r\n    rt1.\"table_name\" as \"table_name\",\r\n    rt1.\"source\" as \"source\",\r\n    rt1.\"created_timestamp\" as \"created_timestamp\",\r\n    -- Column consists long JSON Strings\r\n    lt2.raw_data as raw_data\r\nfrom rt1\t-- ~ 1 MB\r\njoin lt2\t-- ~ 500 KB\r\n    on rt1.id = lt2.id\r\n```\r\n\r\n* ClickHouse version: 24.8.3.59\r\n* Prevouis ClickHouse version:  24.5.3.5\r\n\r\n**Expected performance**\r\nUse the same amount of memory\r\n\n",
  "hints_text": "Looks very similar to https://github.com/ClickHouse/ClickHouse/issues/69415",
  "created_at": "2024-09-10T16:21:40Z"
}