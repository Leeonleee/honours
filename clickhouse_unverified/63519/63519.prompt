You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Materialize view doesn't populate columns after join and migration to 24.3.2.23
**Describe what's wrong**

After migration from 23.8 to 24.3 I noticed that some columns are not populated in the destination table (after materialized view processing). After investigating and narrowing down the issue, I noticed that it applies only when we use join in the materialized view and final column names are the same as in the joined table. It doesn't matter if columns from the joined table are used.

CREATE TABLE IF NOT EXISTS bug_reproduction (
    missingId                  LowCardinality(String),
    someId                  LowCardinality(String),
    dateTime                    DateTime64(3, 'UTC')
) ENGINE MergeTree()
PARTITION BY toYYYYMM(dateTime)
ORDER BY (someId, dateTime);


CREATE MATERIALIZED VIEW IF NOT EXISTS bug_reproduction_mv TO bug_reproduction AS
select
    st.missingId,
    st.someId,
    st.dateTime
from
     source_table st
LEFT JOIN joined_table i
using (missingId, some_column1, some_column2, some_column3);

If I remove the left join from materialized view or change the column names in the final table (and use aliast in MV) the missingId is populated correctly. It also worked correctly in version 23.8.

**Expected behavior**

missingId should be populated
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
