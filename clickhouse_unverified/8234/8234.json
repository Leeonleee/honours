{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 8234,
  "instance_id": "ClickHouse__ClickHouse-8234",
  "issue_numbers": [
    "8070"
  ],
  "base_commit": "9f27e05dc867e60fe395ca39d3eade63dbb1eb30",
  "patch": "diff --git a/dbms/src/Interpreters/InterpreterInsertQuery.cpp b/dbms/src/Interpreters/InterpreterInsertQuery.cpp\nindex 8c95362a6f70..e01e6cd1c44a 100644\n--- a/dbms/src/Interpreters/InterpreterInsertQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterInsertQuery.cpp\n@@ -99,9 +99,7 @@ BlockIO InterpreterInsertQuery::execute()\n     const auto & query = query_ptr->as<ASTInsertQuery &>();\n     checkAccess(query);\n \n-    BlockIO res;\n     StoragePtr table = getTable(query);\n-    res.pipeline.addStorageHolder(table);\n \n     auto table_lock = table->lockStructureForShare(true, context.getInitialQueryId());\n \n@@ -137,7 +135,7 @@ BlockIO InterpreterInsertQuery::execute()\n     out_wrapper->setProcessListElement(context.getProcessListElement());\n     out = std::move(out_wrapper);\n \n-    res.out = std::move(out);\n+    BlockIO res;\n \n     /// What type of query: INSERT or INSERT SELECT?\n     if (query.select)\n@@ -145,13 +143,13 @@ BlockIO InterpreterInsertQuery::execute()\n         /// Passing 1 as subquery_depth will disable limiting size of intermediate result.\n         InterpreterSelectWithUnionQuery interpreter_select{query.select, context, SelectQueryOptions(QueryProcessingStage::Complete, 1)};\n \n-        res.in = interpreter_select.execute().in;\n-\n-        res.in = std::make_shared<ConvertingBlockInputStream>(context, res.in, res.out->getHeader(), ConvertingBlockInputStream::MatchColumnsMode::Position);\n-        res.in = std::make_shared<NullAndDoCopyBlockInputStream>(res.in, res.out);\n-\n+        /// BlockIO may hold StoragePtrs to temporary tables\n+        res = interpreter_select.execute();\n         res.out = nullptr;\n \n+        res.in = std::make_shared<ConvertingBlockInputStream>(context, res.in, out->getHeader(), ConvertingBlockInputStream::MatchColumnsMode::Position);\n+        res.in = std::make_shared<NullAndDoCopyBlockInputStream>(res.in, out);\n+\n         if (!allow_materialized)\n         {\n             Block in_header = res.in->getHeader();\n@@ -163,9 +161,12 @@ BlockIO InterpreterInsertQuery::execute()\n     else if (query.data && !query.has_tail) /// can execute without additional data\n     {\n         res.in = std::make_shared<InputStreamFromASTInsertQuery>(query_ptr, nullptr, query_sample_block, context, nullptr);\n-        res.in = std::make_shared<NullAndDoCopyBlockInputStream>(res.in, res.out);\n-        res.out = nullptr;\n+        res.in = std::make_shared<NullAndDoCopyBlockInputStream>(res.in, out);\n     }\n+    else\n+        res.out = std::move(out);\n+\n+    res.pipeline.addStorageHolder(table);\n \n     return res;\n }\n",
  "test_patch": "diff --git a/dbms/tests/integration/test_storage_mysql/test.py b/dbms/tests/integration/test_storage_mysql/test.py\nindex 113242e8b865..452e56c7ab5b 100644\n--- a/dbms/tests/integration/test_storage_mysql/test.py\n+++ b/dbms/tests/integration/test_storage_mysql/test.py\n@@ -109,6 +109,8 @@ def test_table_function(started_cluster):\n                        \" UNION ALL SELECT count() as c FROM {} WHERE id % 3 == 2)\".format(table_function, table_function,\n                                                                                           table_function)).rstrip() == '10000'\n     assert node1.query(\"SELECT sum(`money`) FROM {}\".format(table_function)).rstrip() == '30000'\n+    node1.query(\"INSERT INTO {} SELECT id + 100000, name, age, money FROM {}\".format('TABLE FUNCTION ' + table_function, table_function))\n+    assert node1.query(\"SELECT sum(`money`) FROM {}\".format(table_function)).rstrip() == '60000'\n     conn.close()\n \n \n",
  "problem_statement": "Insert from MySQL tables doesn't work\n\u041d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0432\u0435\u0440\u0441\u0438\u0438 19.17.3.7 \u0438 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044f 19.17.5.18 \u043f\u0440\u0438 \u0432\u0441\u0442\u0430\u0432\u043a\u0435 \u0438\u0437 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0446 MySQL \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u0451\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u043a\u0430 (SELECT).\r\n\r\n\u0412\u0435\u0440\u0441\u0438\u044f MySQL:\r\nroot@collector:~# apt show mariadb-server\r\nPackage: mariadb-server\r\nVersion: 1:10.3.20-1\r\n\r\n\u041f\u0440\u0438\u043c\u0435\u0440: \r\n\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u0430\u043d\u0430 \u0432 MySQL \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\r\n\r\n`MariaDB [quikdata]> show create table all_trades_raw;`\r\n`CREATE TABLE all_trades_raw (`\r\n`  id int(11) unsigned NOT NULL,`\r\n`  dt_date_quik char(10) NOT NULL,`\r\n`  dt_time time NOT NULL,`\r\n`  dt_ms int(6) unsigned DEFAULT NULL,`\r\n`  symbol char(6) NOT NULL,`\r\n`  price decimal(16,6) unsigned NOT NULL,`\r\n`  amount int(11) NOT NULL,`\r\n`  type char(4) DEFAULT NULL`\r\n`) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 PAGE_CHECKSUM=1`\r\n\r\n\u0412\u044b\u0431\u043e\u0440\u043a\u0430 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u0430: \r\n`MariaDB [quikdata]> select * from all_trades_raw limit 5;`\r\n`+------------+--------------+----------+-------+--------+-------------+--------+------+`\r\n`| id         | dt_date_quik | dt_time  | dt_ms | symbol | price       | amount | type |`\r\n`+------------+--------------+----------+-------+--------+-------------+--------+------+`\r\n`| 2419645750 | 06.12.2019   | 10:00:00 |     0 | GDZ9   | 1477.900000 |      2 | SELL |`\r\n`| 2419645751 | 06.12.2019   | 10:00:00 |     0 | GDZ9   | 1477.300000 |      3 | SELL |`\r\n`| 2419645752 | 06.12.2019   | 10:00:00 |     0 | GDZ9   | 1477.000000 |     20 | SELL |`\r\n`| 2419645753 | 06.12.2019   | 10:00:00 |     0 | GDZ9   | 1476.800000 |      1 | SELL |`\r\n`| 2419645754 | 06.12.2019   | 10:00:00 |     0 | GDZ9   | 1476.700000 |      1 | SELL |`\r\n`+------------+--------------+----------+-------+--------+-------------+--------+------+`\r\n\r\n\u0422\u0435\u043f\u0435\u0440\u044c \u0447\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0432 \u041a\u0425:\r\n`clickhouse :)`\r\n\r\n`SELECT count()`\r\n`FROM mysql('192.168.30.104', 'quikdata', 'all_trades_raw', '***', '***')`\r\n**`\u250c\u2500count()\u2500\u2510`\r\n`\u2502 1269488 \u2502`\r\n`\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`**\r\n`1 rows in set. Elapsed: 0.160 sec. Processed 1.27 million rows, 5.08 MB (7.95 million rows/s., 31.81 MB/s.)`\r\n\r\n\u0421\u043e\u0437\u0434\u0430\u0451\u043c \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0432 \u041a\u0425:\r\nclickhouse :)\r\n`CREATE TABLE full2`\r\n`(`\r\n    `id UInt64,` \r\n    `dt_date Date,` \r\n    `dt_datetime DateTime,` \r\n    `dt_ms Nullable(UInt32),` \r\n    `symbol LowCardinality(String),`\r\n    `price Float64,` \r\n    `amount UInt32,` \r\n    `type LowCardinality(Nullable(String))`\r\n`)`\r\n`ENGINE = MergeTree(dt_date, (symbol, dt_date), 8192)`\r\n\r\n`Ok.`\r\n`0 rows in set. Elapsed: 0.002 sec. `\r\n\r\n\u041f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b:\r\nclickhouse :)\r\n`INSERT INTO full2 SELECT `\r\n`    id, `\r\n`    toDate(dt_datetime) AS dt_date, `\r\n`    toDateTime(concat(replaceRegexpOne(dt_date_quik, '(\\\\d{2}).(\\\\d{2}).(\\\\d{4})', '\\\\3-\\\\2-\\\\1'), ' ', dt_time)) AS dt_datetime, `\r\n`    dt_ms, `\r\n`    symbol, `\r\n`    toFloat64(price) AS price, `\r\n`    toUInt32(amount) AS amount, `\r\n`    type`\r\n`FROM mysql('192.168.30.104', 'quikdata', 'all_trades_raw', '***', '***')`\r\n\r\n`Ok.`\r\n`0 rows in set. Elapsed: 0.005 sec.`\r\n\r\n\u041f\u0440\u0438 \u044d\u0442\u043e\u043c SELECT, \u043a\u0430\u043a \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f INSERT \u0432\u044b\u0448\u0435 - \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e:\r\nclickhouse :)\r\n\r\n`SELECT `\r\n`    id, `\r\n`    toDate(dt_datetime) AS dt_date, `\r\n`    toDateTime(concat(replaceRegexpOne(dt_date_quik, '(\\\\d{2}).(\\\\d{2}).(\\\\d{4})', '\\\\3-\\\\2-\\\\1'), ' ', dt_time)) AS dt_datetime, `\r\n`    dt_ms, `\r\n`    symbol, `\r\n`    toFloat64(price) AS price, `\r\n`    toUInt32(amount) AS amount, `\r\n`    type`\r\n`FROM mysql('192.168.30.104', 'quikdata', 'all_trades_raw', '***', '***')\r\nLIMIT 5`\r\n\r\n`\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500id\u2500\u252c\u2500\u2500\u2500\u2500dt_date\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500dt_datetime\u2500\u252c\u2500dt_ms\u2500\u252c\u2500symbol\u2500\u252c\u2500\u2500price\u2500\u252c\u2500amount\u2500\u252c\u2500type\u2500\u2510`\r\n`\u2502 2419645750 \u2502 2019-12-06 \u2502 2019-12-06 10:00:00 \u2502     0 \u2502 GDZ9   \u2502 1477.9 \u2502      2 \u2502 SELL \u2502`\r\n`\u2502 2419645751 \u2502 2019-12-06 \u2502 2019-12-06 10:00:00 \u2502     0 \u2502 GDZ9   \u2502 1477.3 \u2502      3 \u2502 SELL \u2502`\r\n`\u2502 2419645752 \u2502 2019-12-06 \u2502 2019-12-06 10:00:00 \u2502     0 \u2502 GDZ9   \u2502   1477 \u2502     20 \u2502 SELL \u2502`\r\n`\u2502 2419645753 \u2502 2019-12-06 \u2502 2019-12-06 10:00:00 \u2502     0 \u2502 GDZ9   \u2502 1476.8 \u2502      1 \u2502 SELL \u2502`\r\n`\u2502 2419645754 \u2502 2019-12-06 \u2502 2019-12-06 10:00:00 \u2502     0 \u2502 GDZ9   \u2502 1476.7 \u2502      1 \u2502 SELL \u2502`\r\n`\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518`\r\n\n",
  "hints_text": ">\u041a\u0425 \u0432\u044b\u0434\u0430\u0451\u0442 \u041e\u041a \u0438 0 \u0440\u044f\u0434\u043e\u0432 \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e\r\n\r\n\u0410 \u0447\u0442\u043e \u043a\u043e\u0433\u0434\u0430-\u0442\u043e \u041a\u0425 \u0432\u044b\u0434\u0430\u0432\u0430\u043b \u0447\u0442\u043e-\u0442\u043e \u0434\u0440\u0443\u0433\u043e\u0435???? \r\n\u041a\u0425 \u043d\u0435 \u0437\u043d\u0430\u0435\u0442 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u043a \u0432\u0441\u0442\u0430\u0432\u0438\u043b \u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0437\u043d\u0430\u043b.\r\n\r\n18.14.18. -- \u0432\u0435\u0440\u0441\u0438\u044f 2018 \u0433\u043e\u0434\u0430\r\n\r\ncreate table x (A Int64) Engine=Memory;\r\ninsert into x select * from remote('127.0.0.1', system, one);\r\n**0 rows in set. Elapsed: 0.002 sec.**\r\n\r\n\r\n```\r\nselect count() from x \r\n\u250c\u2500count()\u2500\u2510\r\n\u2502       1 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n0 rows in set.-- \u0437\u043d\u0430\u0447\u0438\u0442 \u0447\u0442\u043e \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u0435\u0440\u043d\u0443\u043b 0 \u0441\u0442\u0440\u043e\u043a \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435. Insert \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a.\nLooks like duplicate of https://github.com/ClickHouse/ClickHouse/issues/7960\n> > \u041a\u0425 \u0432\u044b\u0434\u0430\u0451\u0442 \u041e\u041a \u0438 0 \u0440\u044f\u0434\u043e\u0432 \u0432\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e\r\n> \r\n> \u0410 \u0447\u0442\u043e \u043a\u043e\u0433\u0434\u0430-\u0442\u043e \u041a\u0425 \u0432\u044b\u0434\u0430\u0432\u0430\u043b \u0447\u0442\u043e-\u0442\u043e \u0434\u0440\u0443\u0433\u043e\u0435????\r\n> \u041a\u0425 \u043d\u0435 \u0437\u043d\u0430\u0435\u0442 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u043a \u0432\u0441\u0442\u0430\u0432\u0438\u043b \u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0437\u043d\u0430\u043b.\r\n> \r\n> 18.14.18. -- \u0432\u0435\u0440\u0441\u0438\u044f 2018 \u0433\u043e\u0434\u0430\r\n> \r\n> create table x (A Int64) Engine=Memory;\r\n> insert into x select * from remote('127.0.0.1', system, one);\r\n> **0 rows in set. Elapsed: 0.002 sec.**\r\n> \r\n> ```\r\n> select count() from x \r\n> \u250c\u2500count()\u2500\u2510\r\n> \u2502       1 \u2502\r\n> \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n> ```\r\n> \r\n> 0 rows in set.-- \u0437\u043d\u0430\u0447\u0438\u0442 \u0447\u0442\u043e \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u0435\u0440\u043d\u0443\u043b 0 \u0441\u0442\u0440\u043e\u043a \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435. Insert \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a.\r\n\r\n\u041e\u041a, \u044f \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0441\u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043b. \u0414\u0430, \u0438\u043d\u0441\u0451\u0440\u0442 \u0432\u0435\u0440\u043d\u0451\u0442 0, \u043d\u043e \u0440\u0435\u0447\u044c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043d\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c: \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0435\u043b\u0435\u043a\u0442\u0430 \u0438\u0437 MySQL, \u0441\u0435\u043b\u0435\u043a\u0442 \u043d\u0435 \u043e\u0442\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c. \u0425\u043e\u0442\u044f \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0435\u043b\u0435\u043a\u0442\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. \u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u0438\u043c\u0435\u043d\u043d\u043e \u0432 \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0438 INSERT + SELECT",
  "created_at": "2019-12-16T14:32:55Z"
}