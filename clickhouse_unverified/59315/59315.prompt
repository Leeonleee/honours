You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error "Bad cast from type DB::ColumnCompressed to DB::ColumnVector<unsigned long>" in upgrade check



```
2023.12.14 16:56:19.205987 [ 23952 ] {7ba4d3d0-56b3-43f4-8a56-5825dee631ef} <Error> executeQuery: Code: 49. DB::Exception: Got error from localhost:9000. DB::Exception: Bad cast from type DB::ColumnCompressed to DB::ColumnVector<unsigned long>. Stack trace:
--
7. ./build_docker/./src/Backups/IBackupEntriesLazyBatch.cpp:30: DB::IBackupEntriesLazyBatch::BackupEntryFromBatch::isReference() const @ 0x000000001179c36d in /usr/lib/debug/usr/bin/clickhouse.debug
8. ./build_docker/./src/Backups/BackupFileInfo.cpp:0: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<DB::buildFileInfosForBackupEntries(std::vector<std::pair<String, std::shared_ptr<DB::IBackupEntry const>>, std::allocator<std::pair<String, std::shared_ptr<DB::IBackupEntry const>>>> const&, std::shared_ptr<DB::IBackup const> const&, DB::ReadSettings const&, ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x000000000ffa603a in /usr/lib/debug/usr/bin/clickhouse.debug
9. ./base/base/../base/wide_integer_impl.h:809: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x000000000c5e1fb0 in /usr/lib/debug/usr/bin/clickhouse.debug
10. ./build_docker/./src/Common/ThreadPool.cpp:0: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000000c5e5d3c in /usr/lib/debug/usr/bin/clickhouse.debug
11. ./base/base/../base/wide_integer_impl.h:809: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000000c5e45d3 in /usr/lib/debug/usr/bin/clickhouse.debug
12. ? @ 0x00007f30996a2ac3 in ?
13. ? @ 0x00007f3099734a40 in ?
. (LOGICAL_ERROR) (version 23.11.2.11 (official build)) (from [::1]:45282) (comment: 02907_backup_mv_with_no_source_table.sh) (in query: backup database test_7 on cluster test_shard_localhost to Disk('backups', '02907_backup_mv_with_no_source_table_test_72');), Stack trace (when copying this message, always include the lines below):

0. ./build_docker/./src/Common/Exception.cpp:97: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c4fd597 in /usr/lib/debug/usr/bin/clickhouse.debug
1. ./contrib/llvm-project/libcxx/include/string:1499: DB::readException(DB::ReadBuffer&, String const&, bool) @ 0x000000000c563b9f in /usr/lib/debug/usr/bin/clickhouse.debug
2. ./contrib/llvm-project/libcxx/include/string:1499: DB::BackupCoordinationStageSync::readCurrentState(std::vector<String, std::allocator<String>> const&, std::vector<String, std::allocator<String>> const&, String const&) const @ 0x000000000ffe4597 in /usr/lib/debug/usr/bin/clickhouse.debug
3. ./contrib/llvm-project/libcxx/include/vector:951: DB::BackupCoordinationStageSync::waitImpl(std::vector<String, std::allocator<String>> const&, String const&, std::optional<std::chrono::duration<long long, std::ratio<1l, 1000l>>>) const @ 0x000000000ffde11c in /usr/lib/debug/usr/bin/clickhouse.debug
4. ./build_docker/./src/Backups/BackupCoordinationRemote.cpp:275: DB::BackupCoordinationRemote::waitForStage(String const&) @ 0x000000000ffabcc3 in /usr/lib/debug/usr/bin/clickhouse.debug
5. ./contrib/llvm-project/libcxx/include/vector:434: DB::BackupsWorker::doBackup(std::shared_ptr<DB::ASTBackupQuery> const&, String const&, String const&, DB::BackupInfo const&, DB::BackupSettings, std::shared_ptr<DB::IBackupCoordination>, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::Context>, bool) @ 0x000000000ff97d00 in /usr/lib/debug/usr/bin/clickhouse.debug
6. ./build_docker/./src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::startMakingBackup(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&) @ 0x000000000ff92ff4 in /usr/lib/debug/usr/bin/clickhouse.debug
7. ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:606: DB::BackupsWorker::start(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x000000000ff928a3 in /usr/lib/debug/usr/bin/clickhouse.debug
8. ./build_docker/./src/Interpreters/InterpreterBackupQuery.cpp:0: DB::InterpreterBackupQuery::execute() @ 0x0000000010ec64a0 in /usr/lib/debug/usr/bin/clickhouse.debug
9. ./build_docker/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x0000000011333ea2 in /usr/lib/debug/usr/bin/clickhouse.debug
10. ./build_docker/./src/Interpreters/executeQuery.cpp:1287: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x000000001132dbba in /usr/lib/debug/usr/bin/clickhouse.debug
11. ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x0000000012238829 in /usr/lib/debug/usr/bin/clickhouse.debug
12. ./build_docker/./src/Server/TCPHandler.cpp:2294: DB::TCPHandler::run() @ 0x000000001224d1b9 in /usr/lib/debug/usr/bin/clickhouse.debug
13. ./build_docker/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014c71eb2 in /usr/lib/debug/usr/bin/clickhouse.debug
14. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014c72cb1 in /usr/lib/debug/usr/bin/clickhouse.debug
15. ./build_docker/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x0000000014d69b47 in /usr/lib/debug/usr/bin/clickhouse.debug
16. ./base/poco/Foundation/include/Poco/SharedPtr.h:231: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014d6813c in /usr/lib/debug/usr/bin/clickhouse.debug
17. ? @ 0x00007f30996a2ac3 in ?
18. ? @ 0x00007f3099734a40 in ?

```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
