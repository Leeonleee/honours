You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Disable exception on overflow in bit* related functions
**Use case**

Ability to make behavior of function expected for users again.

**Describe the solution you'd like**

Examples

MSSQL

When shift_amount is greater than the number of bits in expression_value, the result returned will be 0.

SQLite

```
**Schema (SQLite v3.46)**

    

---

**Query #1**

    SELECT  1 << 100, 1 << 3

| 1 << 100 | 1 << 3 |
| -------- | ------ |
| 0        | 8      |

---
```


MySQL

Bits shifted off the end of the value are lost without warning, regardless of the argument type. In particular, if the shift count is greater or equal to the number of bits in the bit argument, all bits in the result are 0.

```
**Schema (MySQL v9)**

    

---

**Query #1**

    SELECT 1  << 300, 1 << 3

| 1  << 300 | 1 << 3 |
| --------- | ------ |
| 0         | 8      |

---
```


PostgreSQL

```
**Schema (PostgreSQL v17)**

    

---

**Query #1**

    SELECT 1::smallint  << 110, B'10001' << 3

| ?column? | ?column? |
| -------- | -------- |
| 16384    | 01000    |

---
```

PowerBI

If absolute value of Shift_Amount is larger than 64, there will be no error but will result in overflow/underflow.


**Additional context**

https://github.com/ClickHouse/ClickHouse/issues/65516
https://github.com/ClickHouse/ClickHouse/pull/65838
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
