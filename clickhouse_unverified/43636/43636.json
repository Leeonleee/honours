{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 43636,
  "instance_id": "ClickHouse__ClickHouse-43636",
  "issue_numbers": [
    "43478"
  ],
  "base_commit": "6fcee9df85f5b386f15a93641a4424f219d2b095",
  "patch": "diff --git a/src/Analyzer/Passes/QueryAnalysisPass.cpp b/src/Analyzer/Passes/QueryAnalysisPass.cpp\nindex 4f24051df793..61e80b31ba53 100644\n--- a/src/Analyzer/Passes/QueryAnalysisPass.cpp\n+++ b/src/Analyzer/Passes/QueryAnalysisPass.cpp\n@@ -3587,6 +3587,7 @@ ProjectionNames QueryAnalyzer::resolveFunction(QueryTreeNodePtr & node, Identifi\n         in_subquery->getJoinTree() = exists_subquery_argument;\n         in_subquery->getLimit() = std::make_shared<ConstantNode>(1UL, constant_data_type);\n         in_subquery->resolveProjectionColumns({NameAndTypePair(\"1\", constant_data_type)});\n+        in_subquery->setIsSubquery(true);\n \n         function_node_ptr = std::make_shared<FunctionNode>(\"in\");\n         function_node_ptr->getArguments().getNodes() = {std::make_shared<ConstantNode>(1UL, constant_data_type), in_subquery};\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02477_exists_fuzz_43478.reference b/tests/queries/0_stateless/02477_exists_fuzz_43478.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02477_exists_fuzz_43478.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/02477_exists_fuzz_43478.sql b/tests/queries/0_stateless/02477_exists_fuzz_43478.sql\nnew file mode 100644\nindex 000000000000..8ec876eb2525\n--- /dev/null\n+++ b/tests/queries/0_stateless/02477_exists_fuzz_43478.sql\n@@ -0,0 +1,3 @@\n+create table test_rows_compact_part__fuzz_11 (x UInt32) engine = MergeTree order by x;\n+insert into test_rows_compact_part__fuzz_11 select 1;\n+select 1 from test_rows_compact_part__fuzz_11 where exists(select 1) settings allow_experimental_analyzer=1;\n",
  "problem_statement": "Logical error: 'Trying to get name of not a column: SelectWithUnionQuery'. \nhttps://s3.amazonaws.com/clickhouse-test-reports/43325/fe6c36f42963ecf60166466fd443ab1325ffd121/fuzzer_astfuzzerubsan//report.html\r\n\r\n```\r\n2022.11.22 00:56:41.370422 [ 136 ] {} <Trace> BaseDaemon: Received signal 6\r\n2022.11.22 00:56:41.370618 [ 418 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.11.22 00:56:41.370660 [ 418 ] {} <Fatal> BaseDaemon: (version 22.12.1.1, build id: E3D3401B19B2EF66F1481C90A462AC0121B06C4A) (from thread 141) (query_id: 2b3e2612-3e82-4752-a954-7f702cf63ab0) (query: SELECT NULL FROM test_rows_compact_part__fuzz_11 WHERE toIntervalYear(exists((SELECT NULL WHERE 1 GROUP BY toIntervalYear(toIntervalYear(3.4028234663852886e38, NULL)))), toIntervalYear(toIntervalYear(toIntervalYear(NULL), NULL, NULL)), toIntervalYear(toIntervalYear(toIntervalYear(toIntervalYear(0, toIntervalYear(toIntervalYear(-2147483649), 1., NULL)), 2147483646, toIntervalYear(toIntervalYear(toIntervalYear(-0., NULL), NULL), NULL)), NULL, NULL), toIntervalYear(NULL), inf, NULL)) LIMIT 65535 FORMAT JSONCompact SETTINGS exact_rows_before_limit = 0, output_format_write_statistics = 0) Received signal Aborted (6)\r\n2022.11.22 00:56:41.370680 [ 418 ] {} <Fatal> BaseDaemon:\r\n2022.11.22 00:56:41.370712 [ 418 ] {} <Fatal> BaseDaemon: Stack trace: 0x7fc35942000b 0x7fc3593ff859 0x2103d563 0x2103d7ef 0x2123b78f 0x2ed14f98 0x2ed14f98 0x2edde8d8 0x2c309167 0x2c2f66e7 0x2c2e25d5 0x2da63969 0x2da62624 0x2da619c4 0x2de62d45 0x2e9f74bf 0x2e9f710d 0x2e9f9801 0x2e9f9a60 0x2e9b575d 0x2e9df69c 0x2cc32e64 0x2d0eb5fa 0x2d0e6c8c 0x2e2d39d0 0x2e2f44da 0x2f2e030c 0x2f2e07fa 0x2f4581c7 0x2f455caf 0x7fc3595d7609 0x7fc3594fc133\r\n2022.11.22 00:56:41.370740 [ 418 ] {} <Fatal> BaseDaemon: 3. raise @ 0x7fc35942000b in ?\r\n2022.11.22 00:56:41.370760 [ 418 ] {} <Fatal> BaseDaemon: 4. abort @ 0x7fc3593ff859 in ?\r\n2022.11.22 00:56:41.394360 [ 418 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Common/Exception.cpp:47: DB::abortOnFailedAssertion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x2103d563 in /workspace/clickhouse\r\n2022.11.22 00:56:41.416809 [ 418 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Common/Exception.cpp:70: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, bool) @ 0x2103d7ef in /workspace/clickhouse\r\n2022.11.22 00:56:41.520260 [ 418 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Parsers/IAST.h:0: DB::IAST::appendColumnName(DB::WriteBuffer&) const @ 0x2123b78f in /workspace/clickhouse\r\n2022.11.22 00:56:41.536697 [ 418 ] {} <Fatal> BaseDaemon: 8.1. inlined from ./build_docker/../src/Parsers/ASTFunction.cpp:404: std::__1::__wrap_iter<std::__1::shared_ptr<DB::IAST>*>::operator++[abi:v15003]()\r\n2022.11.22 00:56:41.536727 [ 418 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Parsers/ASTFunction.cpp:399: DB::ASTFunction::appendColumnNameImpl(DB::WriteBuffer&) const @ 0x2ed14f98 in /workspace/clickhouse\r\n2022.11.22 00:56:41.552635 [ 418 ] {} <Fatal> BaseDaemon: 9.1. inlined from ./build_docker/../src/Parsers/ASTFunction.cpp:404: std::__1::__wrap_iter<std::__1::shared_ptr<DB::IAST>*>::operator++[abi:v15003]()\r\n2022.11.22 00:56:41.552667 [ 418 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/Parsers/ASTFunction.cpp:399: DB::ASTFunction::appendColumnNameImpl(DB::WriteBuffer&) const @ 0x2ed14f98 in /workspace/clickhouse\r\n2022.11.22 00:56:41.563183 [ 418 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../src/Parsers/IAST.cpp:202: DB::IAST::getColumnName() const @ 0x2edde8d8 in /workspace/clickhouse\r\n2022.11.22 00:56:41.631510 [ 418 ] {} <Fatal> BaseDaemon: 11. ./build_docker/../src/Interpreters/ActionsVisitor.cpp:0: DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x2c309167 in /workspace/clickhouse\r\n2022.11.22 00:56:41.709648 [ 418 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/Interpreters/InDepthNodeVisitor.h:78: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::doVisit(std::__1::shared_ptr<DB::IAST> const&) @ 0x2c2f66e7 in /workspace/clickhouse\r\n2022.11.22 00:56:41.784087 [ 418 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./build_docker/../src/Interpreters/InDepthNodeVisitor.h:64: void DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visitImplMain<false>(std::__1::shared_ptr<DB::IAST> const&)\r\n2022.11.22 00:56:41.784121 [ 418 ] {} <Fatal> BaseDaemon: 13.2. inlined from ./build_docker/../src/Interpreters/InDepthNodeVisitor.h:51: void DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visitImpl<false>(std::__1::shared_ptr<DB::IAST> const&)\r\n2022.11.22 00:56:41.784138 [ 418 ] {} <Fatal> BaseDaemon: 13. ./build_docker/../src/Interpreters/InDepthNodeVisitor.h:32: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x2c2e25d5 in /workspace/clickhouse\r\n2022.11.22 00:56:41.815307 [ 418 ] {} <Fatal> BaseDaemon: 14.1. inlined from ./build_docker/../src/Interpreters/ActionsVisitor.h:187: DB::ActionsMatcher::Data::getActions()\r\n2022.11.22 00:56:41.815339 [ 418 ] {} <Fatal> BaseDaemon: 14.2. inlined from ./build_docker/../src/Storages/VirtualColumnUtils.cpp:167: operator()\r\n2022.11.22 00:56:41.815370 [ 418 ] {} <Fatal> BaseDaemon: 14.3. inlined from ./build_docker/../contrib/libcxx/include/__functional/invoke.h:394: decltype(std::declval<DB::VirtualColumnUtils::prepareFilterBlockWithQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::Block, std::__1::shared_ptr<DB::IAST>&)::$_0&>()(std::declval<std::__1::shared_ptr<DB::IAST> const&>())) std::__1::__invoke[abi:v15003]<DB::VirtualColumnUtils::prepareFilterBlockWithQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::Block, std::__1::shared_ptr<DB::IAST>&)::$_0&, std::__1::shared_ptr<DB::IAST> const&>(DB::VirtualColumnUtils::prepareFilterBlockWithQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::Block, std::__1::shared_ptr<DB::IAST>&)::$_0&, std::__1::shared_ptr<DB::IAST> const&)\r\n2022.11.22 00:56:41.815395 [ 418 ] {} <Fatal> BaseDaemon: 14.4. inlined from ./build_docker/../contrib/libcxx/include/__functional/invoke.h:470: bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<DB::VirtualColumnUtils::prepareFilterBlockWithQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::Block, std::__1::shared_ptr<DB::IAST>&)::$_0&, std::__1::shared_ptr<DB::IAST> const&>(DB::VirtualColumnUtils::prepareFilterBlockWithQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::Block, std::__1::shared_ptr<DB::IAST>&)::$_0&, std::__1::shared_ptr<DB::IAST> const&)\r\n2022.11.22 00:56:41.815416 [ 418 ] {} <Fatal> BaseDaemon: 14.5. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:235: std::__1::__function::__default_alloc_func<DB::VirtualColumnUtils::prepareFilterBlockWithQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::Block, std::__1::shared_ptr<DB::IAST>&)::$_0, bool (std::__1::shared_ptr<DB::IAST> const&)>::operator()[abi:v15003](std::__1::shared_ptr<DB::IAST> const&)\r\n2022.11.22 00:56:41.815432 [ 418 ] {} <Fatal> BaseDaemon: 14. ./build_docker/../contrib/libcxx/include/__functional/function.h:716: bool std::__1::__function::__policy_invoker<bool (std::__1::shared_ptr<DB::IAST> const&)>::__call_impl<std::__1::__function::__default_alloc_func<DB::VirtualColumnUtils::prepareFilterBlockWithQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::Block, std::__1::shared_ptr<DB::IAST>&)::$_0, bool (std::__1::shared_ptr<DB::IAST> const&)>>(std::__1::__function::__policy_storage const*, std::__1::shared_ptr<DB::IAST> const&) @ 0x2da63969 in /workspace/clickhouse\r\n2022.11.22 00:56:41.848001 [ 418 ] {} <Fatal> BaseDaemon: 15. ./build_docker/../src/Storages/VirtualColumnUtils.cpp:64: DB::(anonymous namespace)::extractFunctions(std::__1::shared_ptr<DB::IAST> const&, std::__1::function<bool (std::__1::shared_ptr<DB::IAST> const&)> const&, std::__1::vector<std::__1::shared_ptr<DB::IAST>, std::__1::allocator<std::__1::shared_ptr<DB::IAST>>>&) @ 0x2da62624 in /workspace/clickhouse\r\n2022.11.22 00:56:41.880210 [ 418 ] {} <Fatal> BaseDaemon: 16. ./build_docker/../src/Storages/VirtualColumnUtils.cpp:0: DB::VirtualColumnUtils::prepareFilterBlockWithQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::Block, std::__1::shared_ptr<DB::IAST>&) @ 0x2da619c4 in /workspace/clickhouse\r\n2022.11.22 00:56:41.993909 [ 418 ] {} <Fatal> BaseDaemon: 17. ./build_docker/../src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp:0: DB::MergeTreeDataSelectExecutor::filterPartsByVirtualColumns(DB::MergeTreeData const&, std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>) @ 0x2de62d45 in /workspace/clickhouse\r\n2022.11.22 00:56:42.090908 [ 418 ] {} <Fatal> BaseDaemon: 18.1. inlined from ./build_docker/../contrib/libcxx/include/optional:344: std::__1::__optional_storage_base<std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, false>::has_value[abi:v15003]() const\r\n2022.11.22 00:56:42.090950 [ 418 ] {} <Fatal> BaseDaemon: 18.2. inlined from ./build_docker/../contrib/libcxx/include/optional:998: std::__1::optional<std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::operator bool[abi:v15003]() const\r\n2022.11.22 00:56:42.090969 [ 418 ] {} <Fatal> BaseDaemon: 18. ./build_docker/../src/Processors/QueryPlan/ReadFromMergeTree.cpp:913: DB::ReadFromMergeTree::selectRangesToRead(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>, std::__1::shared_ptr<DB::PrewhereInfo> const&, DB::ActionDAGNodes const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const>, unsigned long, std::__1::shared_ptr<std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, long>>>>, DB::MergeTreeData const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, bool, Poco::Logger*) @ 0x2e9f74bf in /workspace/clickhouse\r\n2022.11.22 00:56:42.187018 [ 418 ] {} <Fatal> BaseDaemon: 19. ./build_docker/../src/Processors/QueryPlan/ReadFromMergeTree.cpp:0: DB::ReadFromMergeTree::selectRangesToRead(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>) const @ 0x2e9f710d in /workspace/clickhouse\r\n2022.11.22 00:56:42.285226 [ 418 ] {} <Fatal> BaseDaemon: 20. ./build_docker/../src/Processors/QueryPlan/ReadFromMergeTree.cpp:1115: DB::ReadFromMergeTree::getAnalysisResult() const @ 0x2e9f9801 in /workspace/clickhouse\r\n2022.11.22 00:56:42.371349 [ 418 ] {} <Fatal> BaseDaemon: 21. ./build_docker/../src/Processors/QueryPlan/ReadFromMergeTree.cpp:1125: DB::ReadFromMergeTree::initializePipeline(DB::QueryPipelineBuilder&, DB::BuildQueryPipelineSettings const&) @ 0x2e9f9a60 in /workspace/clickhouse\r\n2022.11.22 00:56:42.385852 [ 418 ] {} <Fatal> BaseDaemon: 22. ./build_docker/../src/Processors/QueryPlan/ISourceStep.cpp:0: DB::ISourceStep::updatePipeline(std::__1::vector<std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>, std::__1::allocator<std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>>>, DB::BuildQueryPipelineSettings const&) @ 0x2e9b575d in /workspace/clickhouse\r\n2022.11.22 00:56:42.413933 [ 418 ] {} <Fatal> BaseDaemon: 23.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:296: std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>::release[abi:v15003]()\r\n2022.11.22 00:56:42.413968 [ 418 ] {} <Fatal> BaseDaemon: 23.2. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:225: std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>::operator=[abi:v15003](std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>&&)\r\n```\n",
  "hints_text": "```\r\ncreate table test_rows_compact_part__fuzz_11 (x UInt32) engine = MergeTree order by x;\r\ninsert into test_rows_compact_part__fuzz_11 select 1;\r\nselect 1 from test_rows_compact_part__fuzz_11 where exists(select 1) settings allow_experimental_analyzer=1;\r\n\r\nSELECT 1\r\nFROM test_rows_compact_part__fuzz_11\r\nWHERE exists((\r\n    SELECT 1\r\n))\r\nSETTINGS allow_experimental_analyzer = 1\r\n\r\nQuery id: 38a87f29-e78f-4c44-8c9b-b4792cb76bb1\r\n\r\n\r\n0 rows in set. Elapsed: 0.002 sec. \r\n\r\nReceived exception from server (version 22.12.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Trying to get name of not a column: SelectWithUnionQuery. (LOGICAL_ERROR)\r\n\r\n\r\n```",
  "created_at": "2022-11-24T17:28:45Z"
}