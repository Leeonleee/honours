You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Asan: heap-buffer-overflow in `combineFilterAndIndices` (`enable_vertical_final`)
It happened on a build without debug symbols, so I had to symbolize manually:

```
==74==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x5140001a01ef at pc 0x56395d25e4ae bp 0x7f095b2656b0 sp 0x7f095b2656a8

WRITE of size 1 at 0x5140001a01ef thread T1441 (QueryPipelineEx)

    ~/ch/logs  llvm-addr2line -afiCe ./clickhouse 0x33a724ad 0x33a6f9a3 0x33a6dbcd 0x21fcd45d 0x332169ec 0x3326dcad 0x3324dd42 0x3324ef65 0x1cece31a 0x1ced6ed2 0x1cec5fac 0x1ced25cc 0xa947f9a     ✔ 
0x33a724ad
DB::combineFilterAndIndices(std::__1::unique_ptr<DB::FilterDescription, std::__1::default_delete<DB::FilterDescription>>, std::__1::shared_ptr<DB::ChunkSelectFinalIndices const>&, unsigned long)
./build_docker/./src/Processors/Transforms/FilterTransform.cpp:84
0x33a6f9a3
DB::FilterTransform::doTransform(DB::Chunk&)
./build_docker/./src/Processors/Transforms/FilterTransform.cpp:316
0x33a6dbcd
DB::FilterTransform::transform(DB::Chunk&)
./build_docker/./src/Processors/Transforms/FilterTransform.cpp:259
0x21fcd45d
DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&)
./build_docker/./src/Processors/ISimpleTransform.h:32
0x332169ec
DB::ISimpleTransform::work()
./build_docker/./src/Processors/ISimpleTransform.cpp:89
0x3326dcad
DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)
./build_docker/./src/Processors/Executors/ExecutionThreadContext.cpp:47
DB::ExecutionThreadContext::executeTask()
./build_docker/./src/Processors/Executors/ExecutionThreadContext.cpp:95
0x3324dd42
DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*)
./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:273
DB::PipelineExecutor::executeSingleThread(unsigned long)
./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:239
0x3324ef65
DB::PipelineExecutor::spawnThreads()::$_0::operator()() const
./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:373
decltype(std::declval<DB::PipelineExecutor::spawnThreads()::$_0&>()()) std::__1::__invoke[abi:v15000]<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394
void std::__1::__invoke_void_return_wrapper<void, true>::__call<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:479
std::__1::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>::operator()[abi:v15000]()
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:235
void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>>(std::__1::__function::__policy_storage const*)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:716
0x1cece31a
std::__1::__function::__policy_func<void ()>::operator()[abi:v15000]() const
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:848
std::__1::function<void ()>::operator()() const
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:1187
ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>)
./build_docker/./src/Common/ThreadPool.cpp:458
0x1ced6ed2
void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const
./build_docker/./src/Common/ThreadPool.cpp:220
decltype(std::declval<void>()()) std::__1::__invoke[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&>(void&&)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394
decltype(auto) std::__1::__apply_tuple_impl[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&, std::__1::__tuple_indices<>)
./build_docker/./contrib/llvm-project/libcxx/include/tuple:1789
decltype(auto) std::__1::apply[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&)
./build_docker/./contrib/llvm-project/libcxx/include/tuple:1798
ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()()
./build_docker/./src/Common/ThreadPool.h:225
0x1cec5fac
std::__1::__function::__policy_func<void ()>::operator()[abi:v15000]() const
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:848
std::__1::function<void ()>::operator()() const
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:1187
ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>)
./build_docker/./src/Common/ThreadPool.cpp:458
0x1ced25cc
void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const
./build_docker/./src/Common/ThreadPool.cpp:220
decltype(std::declval<void>()()) std::__1::__invoke[abi:v15000]<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394
void std::__1::__thread_execute[abi:v15000]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>)
./build_docker/./contrib/llvm-project/libcxx/include/thread:284
void* std::__1::__thread_proxy[abi:v15000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>>(void*)
./build_docker/./contrib/llvm-project/libcxx/include/thread:295
0xa947f9a
asan_thread_start(void*)
crtstuff.c:0


0x5140001a01ef is located 0 bytes after 431-byte region [0x5140001a0040,0x5140001a01ef)
allocated by thread T1441 (QueryPipelineEx) here:

    ~/ch/logs  llvm-addr2line -afiCe ./clickhouse 0xa94a22e 0x1cc19847 0x105ce41c 0x33a723bd 0x33a6f9a3 0x33a6dbcd 0x21fcd45d 0x332169ec 0x3326dcad 0x3324dd42 0x3324ef65 0x1cece31a 0x1ced6ed2 0x1cec5fac 0x1ced25cc 0xa947f9a
0xa94a22e
__interceptor_malloc
??:0
0x1cc19847
void* (anonymous namespace)::allocNoTrack<false, false>(unsigned long, unsigned long)
./build_docker/./src/Common/Allocator.cpp:68
Allocator<false, false>::alloc(unsigned long, unsigned long)
./build_docker/./src/Common/Allocator.cpp:115
0x105ce41c
COW<DB::IColumn>::mutable_ptr<DB::ColumnVector<char8_t>> COWHelper<DB::IColumnHelper<DB::ColumnVector<char8_t>, DB::ColumnFixedSizeHelper>, DB::ColumnVector<char8_t>>::create<unsigned long&, int>(unsigned long&, int&&)
??:0
0x33a723bd
DB::combineFilterAndIndices(std::__1::unique_ptr<DB::FilterDescription, std::__1::default_delete<DB::FilterDescription>>, std::__1::shared_ptr<DB::ChunkSelectFinalIndices const>&, unsigned long)
./build_docker/./src/Processors/Transforms/FilterTransform.cpp:81
0x33a6f9a3
DB::FilterTransform::doTransform(DB::Chunk&)
./build_docker/./src/Processors/Transforms/FilterTransform.cpp:316
0x33a6dbcd
DB::FilterTransform::transform(DB::Chunk&)
./build_docker/./src/Processors/Transforms/FilterTransform.cpp:259
0x21fcd45d
DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&)
./build_docker/./src/Processors/ISimpleTransform.h:32
0x332169ec
DB::ISimpleTransform::work()
./build_docker/./src/Processors/ISimpleTransform.cpp:89
0x3326dcad
DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)
./build_docker/./src/Processors/Executors/ExecutionThreadContext.cpp:47
DB::ExecutionThreadContext::executeTask()
./build_docker/./src/Processors/Executors/ExecutionThreadContext.cpp:95
0x3324dd42
DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*)
./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:273
DB::PipelineExecutor::executeSingleThread(unsigned long)
./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:239
0x3324ef65
DB::PipelineExecutor::spawnThreads()::$_0::operator()() const
./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:373
decltype(std::declval<DB::PipelineExecutor::spawnThreads()::$_0&>()()) std::__1::__invoke[abi:v15000]<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394
void std::__1::__invoke_void_return_wrapper<void, true>::__call<DB::PipelineExecutor::spawnThreads()::$_0&>(DB::PipelineExecutor::spawnThreads()::$_0&)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:479
std::__1::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>::operator()[abi:v15000]()
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:235
void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>>(std::__1::__function::__policy_storage const*)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:716
0x1cece31a
std::__1::__function::__policy_func<void ()>::operator()[abi:v15000]() const
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:848
std::__1::function<void ()>::operator()() const
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:1187
ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>)
./build_docker/./src/Common/ThreadPool.cpp:458
0x1ced6ed2
void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const
./build_docker/./src/Common/ThreadPool.cpp:220
decltype(std::declval<void>()()) std::__1::__invoke[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&>(void&&)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394
decltype(auto) std::__1::__apply_tuple_impl[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&, std::__1::__tuple_indices<>)
./build_docker/./contrib/llvm-project/libcxx/include/tuple:1789
decltype(auto) std::__1::apply[abi:v15000]<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()&, std::__1::tuple<>&>(void&&, std::__1::tuple<>&)
./build_docker/./contrib/llvm-project/libcxx/include/tuple:1798
ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()()
./build_docker/./src/Common/ThreadPool.h:225
0x1cec5fac
std::__1::__function::__policy_func<void ()>::operator()[abi:v15000]() const
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:848
std::__1::function<void ()>::operator()() const
./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:1187
ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>)
./build_docker/./src/Common/ThreadPool.cpp:458
0x1ced25cc
void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const
./build_docker/./src/Common/ThreadPool.cpp:220
decltype(std::declval<void>()()) std::__1::__invoke[abi:v15000]<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)
./build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394
void std::__1::__thread_execute[abi:v15000]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>&, std::__1::__tuple_indices<>)
./build_docker/./contrib/llvm-project/libcxx/include/thread:284
void* std::__1::__thread_proxy[abi:v15000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>>(void*)
./build_docker/./contrib/llvm-project/libcxx/include/thread:295
0xa947f9a
asan_thread_start(void*)
crtstuff.c:0
```

Introduced in https://github.com/ClickHouse/ClickHouse/pull/54366
cc: @canhld94
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
