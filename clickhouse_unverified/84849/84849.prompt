You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Assertion __pos < size() failed: string_view[] index out of bounds with text index
### Describe the bug

Only happens in the current master, time to bisect...

### How to reproduce

Run Fiddle: https://fiddle.clickhouse.com/d50fb362-3df8-4f44-9aa7-013f91a90041

### Error message and/or stacktrace

Stack trace:

```
contrib/llvm-project/libcxx/include/string_view:402: assertion __pos < size() failed: string_view[] index out of bounds
2025.07.31 15:20:27.020728 [ 1471290 ] {} <Trace> BaseDaemon: Received signal 6
2025.07.31 15:20:27.020810 [ 1471290 ] {} <Fatal> BaseDaemon: ########## Short fault info ############
2025.07.31 15:20:27.020827 [ 1471290 ] {} <Fatal> BaseDaemon: (version 25.8.1.2001 (official build), build id: CB71393AA50EECB5F2FB28F0DB4BE3B62C93AD82, git hash: 5b8e4cc14edd339d8cae7c4cd4cf170ffee20668, architecture: x86_64) (from thread 1471293) Received signal 6
2025.07.31 15:20:27.020830 [ 1471290 ] {} <Fatal> BaseDaemon: Signal description: Aborted
2025.07.31 15:20:27.020832 [ 1471290 ] {} <Fatal> BaseDaemon: 
2025.07.31 15:20:27.020854 [ 1471290 ] {} <Fatal> BaseDaemon: Stack trace: 0x00007dfa0a8a49bd 0x00007dfa0a84579e 0x00007dfa0a8288cd 0x00005efd140a8b1d 0x00005efd0118e7bc 0x00005efd0abe0713 0x00005efd0abe0226 0x00005efd0ade0c99 0x00005efd0add8d2a 0x00005efd0af6c260 0x00005efd0af6c1ea 0x00005efd0ae12339 0x00005efd0af5d411 0x00005efd0b738ec3 0x00005efd0b738a7d 0x00005efd0b49d150 0x00005efd0b48fe05 0x00005efd0b48f54e 0x00005efd0b4a901f 0x00005efd0b3c0336 0x00005efd0b3b5133 0x00005efd0b3ceea4 0x00005efd1349c187 0x00005efd1349c765 0x00005efd1343b93f 0x00005efd13439011 0x00007dfa0a8a27f1 0x00007dfa0a933c9c
2025.07.31 15:20:27.020878 [ 1471290 ] {} <Fatal> BaseDaemon: ########################################
2025.07.31 15:20:27.020925 [ 1471290 ] {} <Fatal> BaseDaemon: (version 25.8.1.2001 (official build), build id: CB71393AA50EECB5F2FB28F0DB4BE3B62C93AD82, git hash: 5b8e4cc14edd339d8cae7c4cd4cf170ffee20668) (from thread 1471293) (query_id: facb31a3-4ebc-44f6-8fe5-647309f39d79) (query: INSERT INTO TABLE t0 (c0) VALUES ) Received signal Aborted (6)
2025.07.31 15:20:27.020952 [ 1471290 ] {} <Fatal> BaseDaemon: 
2025.07.31 15:20:27.021010 [ 1471290 ] {} <Fatal> BaseDaemon: Stack trace: 0x00007dfa0a8a49bd 0x00007dfa0a84579e 0x00007dfa0a8288cd 0x00005efd140a8b1d 0x00005efd0118e7bc 0x00005efd0abe0713 0x00005efd0abe0226 0x00005efd0ade0c99 0x00005efd0add8d2a 0x00005efd0af6c260 0x00005efd0af6c1ea 0x00005efd0ae12339 0x00005efd0af5d411 0x00005efd0b738ec3 0x00005efd0b738a7d 0x00005efd0b49d150 0x00005efd0b48fe05 0x00005efd0b48f54e 0x00005efd0b4a901f 0x00005efd0b3c0336 0x00005efd0b3b5133 0x00005efd0b3ceea4 0x00005efd1349c187 0x00005efd1349c765 0x00005efd1343b93f 0x00005efd13439011 0x00007dfa0a8a27f1 0x00007dfa0a933c9c
2025.07.31 15:20:27.021063 [ 1471290 ] {} <Fatal> BaseDaemon: 3. pthread_kill@@GLIBC_2.34 @ 0x00000000000a49bd
2025.07.31 15:20:27.021093 [ 1471290 ] {} <Fatal> BaseDaemon: 4. gsignal @ 0x000000000004579e
2025.07.31 15:20:27.021124 [ 1471290 ] {} <Fatal> BaseDaemon: 5. abort @ 0x00000000000288cd
2025.07.31 15:20:27.025434 [ 1471290 ] {} <Fatal> BaseDaemon: 6. contrib/llvm-project/libcxx/src/verbose_abort.cpp:74: ? @ 0x000000002726eb1d
2025.07.31 15:20:27.035634 [ 1471290 ] {} <Fatal> BaseDaemon: 7.0. inlined from contrib/llvm-project/libcxx/include/string_view:402: std::basic_string_view<char, std::char_traits<char>>::operator[][abi:se190107](unsigned long) const
2025.07.31 15:20:27.035671 [ 1471290 ] {} <Fatal> BaseDaemon: 7. src/Common/FST.cpp:365: DB::FST::FstBuilder::add(std::basic_string_view<char, std::char_traits<char>>, unsigned long) @ 0x00000000143547bc
2025.07.31 15:20:27.054924 [ 1471290 ] {} <Fatal> BaseDaemon: 8. src/Storages/MergeTree/GinIndexStore.cpp:382: DB::GinIndexStore::writeSegment() @ 0x000000001dda6713
2025.07.31 15:20:27.072551 [ 1471290 ] {} <Fatal> BaseDaemon: 9. src/Storages/MergeTree/GinIndexStore.cpp:268: DB::GinIndexStore::finalize() @ 0x000000001dda6226
2025.07.31 15:20:27.099630 [ 1471290 ] {} <Fatal> BaseDaemon: 10. src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:547: DB::MergeTreeDataPartWriterOnDisk::finishSkipIndicesSerialization(bool) @ 0x000000001dfa6c99
2025.07.31 15:20:27.120599 [ 1471290 ] {} <Fatal> BaseDaemon: 11. src/Storages/MergeTree/MergeTreeDataPartWriterCompact.cpp:525: DB::MergeTreeDataPartWriterCompact::finish(bool) @ 0x000000001df9ed2a
2025.07.31 15:20:27.137816 [ 1471290 ] {} <Fatal> BaseDaemon: 12. src/Storages/MergeTree/MergedBlockOutputStream.cpp:140: DB::MergedBlockOutputStream::Finalizer::Impl::finish() @ 0x000000001e132260
2025.07.31 15:20:27.153863 [ 1471290 ] {} <Fatal> BaseDaemon: 13. src/Storages/MergeTree/MergedBlockOutputStream.cpp:127: DB::MergedBlockOutputStream::Finalizer::finish() @ 0x000000001e1321ea
2025.07.31 15:20:27.188797 [ 1471290 ] {} <Fatal> BaseDaemon: 14. src/Storages/MergeTree/MergeTreeDataWriter.cpp:261: DB::MergeTreeTemporaryPart::finalize() @ 0x000000001dfd8339
2025.07.31 15:20:27.207677 [ 1471290 ] {} <Fatal> BaseDaemon: 15. src/Storages/MergeTree/MergeTreeSink.cpp:196: DB::MergeTreeSink::finishDelayedChunk() @ 0x000000001e123411
2025.07.31 15:20:27.217978 [ 1471290 ] {} <Fatal> BaseDaemon: 16.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:716: ?
2025.07.31 15:20:27.218000 [ 1471290 ] {} <Fatal> BaseDaemon: 16.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:989: ?
2025.07.31 15:20:27.218011 [ 1471290 ] {} <Fatal> BaseDaemon: 16. src/Processors/Transforms/ExceptionKeepingTransform.cpp:103: DB::runStep(std::function<void ()>, std::shared_ptr<DB::ThreadGroup>&) @ 0x000000001e8feec3
2025.07.31 15:20:27.224133 [ 1471290 ] {} <Fatal> BaseDaemon: 17. src/Processors/Transforms/ExceptionKeepingTransform.cpp:172: DB::ExceptionKeepingTransform::work() @ 0x000000001e8fea7d
2025.07.31 15:20:27.228568 [ 1471290 ] {} <Fatal> BaseDaemon: 18.0. inlined from src/Processors/Executors/ExecutionThreadContext.cpp:53: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)
2025.07.31 15:20:27.228591 [ 1471290 ] {} <Fatal> BaseDaemon: 18. src/Processors/Executors/ExecutionThreadContext.cpp:102: DB::ExecutionThreadContext::executeTask() @ 0x000000001e663150
2025.07.31 15:20:27.244590 [ 1471290 ] {} <Fatal> BaseDaemon: 19. src/Processors/Executors/PipelineExecutor.cpp:350: DB::PipelineExecutor::executeStepImpl(unsigned long, DB::IAcquiredSlot*, std::atomic<bool>*) @ 0x000000001e655e05
2025.07.31 15:20:27.260195 [ 1471290 ] {} <Fatal> BaseDaemon: 20. src/Processors/Executors/PipelineExecutor.cpp:179: DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x000000001e65554e
2025.07.31 15:20:27.267065 [ 1471290 ] {} <Fatal> BaseDaemon: 21. src/Processors/Executors/PushingPipelineExecutor.cpp:131: DB::PushingPipelineExecutor::finish() @ 0x000000001e66f01f
2025.07.31 15:20:27.314749 [ 1471290 ] {} <Fatal> BaseDaemon: 22.0. inlined from src/Server/TCPHandler.cpp:1205: operator()<DB::PushingPipelineExecutor>
2025.07.31 15:20:27.314780 [ 1471290 ] {} <Fatal> BaseDaemon: 22. src/Server/TCPHandler.cpp:1280: DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x000000001e586336
2025.07.31 15:20:27.348018 [ 1471290 ] {} <Fatal> BaseDaemon: 23. src/Server/TCPHandler.cpp:748: DB::TCPHandler::runImpl() @ 0x000000001e57b133
2025.07.31 15:20:27.408929 [ 1471290 ] {} <Fatal> BaseDaemon: 24. src/Server/TCPHandler.cpp:2740: DB::TCPHandler::run() @ 0x000000001e594ea4
2025.07.31 15:20:27.412688 [ 1471290 ] {} <Fatal> BaseDaemon: 25. base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x0000000026662187
2025.07.31 15:20:27.417417 [ 1471290 ] {} <Fatal> BaseDaemon: 26. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x0000000026662765
2025.07.31 15:20:27.421954 [ 1471290 ] {} <Fatal> BaseDaemon: 27. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000002660193f
2025.07.31 15:20:27.426321 [ 1471290 ] {} <Fatal> BaseDaemon: 28. base/poco/Foundation/src/Thread_POSIX.cpp:341: Poco::ThreadImpl::runnableEntry(void*) @ 0x00000000265ff011
2025.07.31 15:20:27.426349 [ 1471290 ] {} <Fatal> BaseDaemon: 29. start_thread @ 0x00000000000a27f1
2025.07.31 15:20:27.426368 [ 1471290 ] {} <Fatal> BaseDaemon: 30. __GI___clone3 @ 0x0000000000133c9c
2025.07.31 15:20:27.635740 [ 1471290 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 83595180BF5FA3E0871568807F9EC48A)
2025.07.31 15:20:27.646235 [ 1471290 ] {} <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
2025.07.31 15:20:27.646448 [ 1471290 ] {} <Fatal> BaseDaemon: Changed settings: s3_truncate_on_insert = true, azure_truncate_on_insert = true, allow_suspicious_low_cardinality_types = true, allow_suspicious_fixed_string_types = true, allow_suspicious_indices = true, allow_suspicious_ttl_expressions = true, allow_suspicious_variant_types = true, allow_suspicious_primary_key = true, allow_suspicious_types_in_group_by = true, allow_suspicious_types_in_order_by = true, allow_not_comparable_types_in_order_by = true, allow_not_comparable_types_in_comparison_functions = true, enable_positional_arguments = true, allow_nonconst_timezone_arguments = true, allow_experimental_time_time64_type = true, allow_nondeterministic_optimize_skip_unused_shards = true, allow_distributed_ddl = true, allow_suspicious_codecs = true, enable_zstd_qat_codec = true, enable_deflate_qpl_codec = true, max_execution_time = 60., allow_custom_error_code_in_throwif = true, allow_ddl = true, allow_introspection_functions = true, allow_drop_detached = true, enable_lightweight_delete = true, allow_materialized_view_with_bad_select = true, allow_settings_after_format_in_insert = true, allow_nondeterministic_mutations = true, allow_non_metadata_alters = true, allow_experimental_kafka_offsets_storage_in_keeper = true, engine_file_truncate_on_insert = true, allow_experimental_correlated_subqueries = true, keeper_max_retries = 15, enable_order_by_all = true, allow_named_collection_override_by_default = true, allow_experimental_analyzer = true, allow_experimental_vector_similarity_index = true, allow_experimental_variant_type = true, allow_experimental_dynamic_type = true, allow_experimental_json_type = true, allow_experimental_materialized_postgresql_table = true, allow_experimental_funnel_functions = true, allow_experimental_nlp_functions = true, allow_experimental_hash_functions = true, allow_experimental_object_type = true, allow_experimental_time_series_table = true, allow_experimental_codecs = true, allow_experimental_join_right_table_sorting = true, allow_experimental_statistics = true, allow_experimental_full_text_index = true, allow_experimental_lightweight_update = true, allow_experimental_live_view = true, allow_experimental_database_materialized_postgresql = true, allow_experimental_database_iceberg = true, allow_experimental_database_unity_catalog = true, allow_experimental_database_glue_catalog = true, allow_experimental_database_hms_catalog = true, allow_experimental_insert_into_iceberg = true, allow_experimental_bfloat16_type = true, allow_experimental_inverted_index = true, allow_experimental_join_condition = true, allow_experimental_shared_set_join = true, type_json_skip_duplicated_paths = true, input_format_parquet_allow_geoparquet_parser = true
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
