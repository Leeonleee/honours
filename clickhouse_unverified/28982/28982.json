{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 28982,
  "instance_id": "ClickHouse__ClickHouse-28982",
  "issue_numbers": [
    "28660"
  ],
  "base_commit": "6e526aff89c450b3bda19f8bb69e9241097acaf3",
  "patch": "diff --git a/src/Interpreters/HashJoin.cpp b/src/Interpreters/HashJoin.cpp\nindex 1c450d531d6a..2d7015bdb922 100644\n--- a/src/Interpreters/HashJoin.cpp\n+++ b/src/Interpreters/HashJoin.cpp\n@@ -1387,6 +1387,11 @@ ColumnWithTypeAndName HashJoin::joinGet(const Block & block, const Block & block\n     return keys.getByPosition(keys.columns() - 1);\n }\n \n+void HashJoin::checkTypesOfKeys(const Block & block) const\n+{\n+    JoinCommon::checkTypesOfKeys(block, table_join->keyNamesLeft(), right_table_keys, key_names_right);\n+}\n+\n void HashJoin::joinBlock(Block & block, ExtraBlockPtr & not_processed)\n {\n     const Names & key_names_left = table_join->keyNamesLeft();\ndiff --git a/src/Interpreters/HashJoin.h b/src/Interpreters/HashJoin.h\nindex 2e691f189c46..a36393278ff8 100644\n--- a/src/Interpreters/HashJoin.h\n+++ b/src/Interpreters/HashJoin.h\n@@ -140,6 +140,8 @@ class HashJoin : public IJoin\n       */\n     bool addJoinedBlock(const Block & block, bool check_limits) override;\n \n+    void checkTypesOfKeys(const Block & block) const override;\n+\n     /** Join data from the map (that was previously built by calls to addJoinedBlock) to the block with data from \"left\" table.\n       * Could be called from different threads in parallel.\n       */\ndiff --git a/src/Interpreters/IJoin.h b/src/Interpreters/IJoin.h\nindex 2215402e1d44..c48524e2031b 100644\n--- a/src/Interpreters/IJoin.h\n+++ b/src/Interpreters/IJoin.h\n@@ -27,6 +27,8 @@ class IJoin\n     /// @returns false, if some limit was exceeded and you should not insert more data.\n     virtual bool addJoinedBlock(const Block & block, bool check_limits = true) = 0;\n \n+    virtual void checkTypesOfKeys(const Block & block) const = 0;\n+\n     /// Join the block with data from left hand of JOIN to the right hand data (that was previously built by calls to addJoinedBlock).\n     /// Could be called from different threads in parallel.\n     virtual void joinBlock(Block & block, std::shared_ptr<ExtraBlock> & not_processed) = 0;\ndiff --git a/src/Interpreters/JoinSwitcher.h b/src/Interpreters/JoinSwitcher.h\nindex e750bc5eed09..83ac70044a80 100644\n--- a/src/Interpreters/JoinSwitcher.h\n+++ b/src/Interpreters/JoinSwitcher.h\n@@ -26,6 +26,11 @@ class JoinSwitcher : public IJoin\n     /// @returns false, if join-on-disk disk limit exceeded\n     bool addJoinedBlock(const Block & block, bool check_limits) override;\n \n+    void checkTypesOfKeys(const Block & block) const override\n+    {\n+        join->checkTypesOfKeys(block);\n+    }\n+\n     void joinBlock(Block & block, std::shared_ptr<ExtraBlock> & not_processed) override\n     {\n         join->joinBlock(block, not_processed);\ndiff --git a/src/Interpreters/MergeJoin.cpp b/src/Interpreters/MergeJoin.cpp\nindex 0150bbe1d936..eb806caa34fa 100644\n--- a/src/Interpreters/MergeJoin.cpp\n+++ b/src/Interpreters/MergeJoin.cpp\n@@ -666,16 +666,24 @@ bool MergeJoin::addJoinedBlock(const Block & src_block, bool)\n     return saveRightBlock(std::move(block));\n }\n \n+void MergeJoin::checkTypesOfKeys(const Block & block) const\n+{\n+    /// Do not check auxailary column for extra conditions, use original key names\n+    JoinCommon::checkTypesOfKeys(block, table_join->keyNamesLeft(), right_table_keys, table_join->keyNamesRight());\n+}\n+\n void MergeJoin::joinBlock(Block & block, ExtraBlockPtr & not_processed)\n {\n     Names lowcard_keys = lowcard_right_keys;\n     if (block)\n     {\n+        /// We need to check type of masks before `addConditionJoinColumn`, because it assumes that types is correct\n         JoinCommon::checkTypesOfMasks(block, mask_column_name_left, right_sample_block, mask_column_name_right);\n \n         /// Add auxiliary column, will be removed after joining\n         addConditionJoinColumn(block, JoinTableSide::Left);\n \n+        /// Types of keys can be checked only after `checkTypesOfKeys`\n         JoinCommon::checkTypesOfKeys(block, key_names_left, right_table_keys, key_names_right);\n \n         materializeBlockInplace(block);\ndiff --git a/src/Interpreters/MergeJoin.h b/src/Interpreters/MergeJoin.h\nindex 9e765041846f..53cde2bff7c5 100644\n--- a/src/Interpreters/MergeJoin.h\n+++ b/src/Interpreters/MergeJoin.h\n@@ -25,6 +25,7 @@ class MergeJoin : public IJoin\n \n     const TableJoin & getTableJoin() const override { return *table_join; }\n     bool addJoinedBlock(const Block & block, bool check_limits) override;\n+    void checkTypesOfKeys(const Block & block) const override;\n     void joinBlock(Block &, ExtraBlockPtr & not_processed) override;\n \n     void setTotals(const Block &) override;\ndiff --git a/src/Interpreters/join_common.cpp b/src/Interpreters/join_common.cpp\nindex b097a8f61929..9a4cdd97c13a 100644\n--- a/src/Interpreters/join_common.cpp\n+++ b/src/Interpreters/join_common.cpp\n@@ -399,7 +399,7 @@ void checkTypesOfKeys(const Block & block_left, const Names & key_names_left,\n void checkTypesOfKeys(const Block & block_left, const Names & key_names_left, const String & condition_name_left,\n                       const Block & block_right, const Names & key_names_right, const String & condition_name_right)\n {\n-    checkTypesOfKeys(block_left, key_names_left,block_right,key_names_right);\n+    checkTypesOfKeys(block_left, key_names_left, block_right, key_names_right);\n     checkTypesOfMasks(block_left, condition_name_left, block_right, condition_name_right);\n }\n \ndiff --git a/src/Processors/Transforms/JoiningTransform.cpp b/src/Processors/Transforms/JoiningTransform.cpp\nindex f099f41f4722..aceb04d7994b 100644\n--- a/src/Processors/Transforms/JoiningTransform.cpp\n+++ b/src/Processors/Transforms/JoiningTransform.cpp\n@@ -14,8 +14,9 @@ namespace ErrorCodes\n \n Block JoiningTransform::transformHeader(Block header, const JoinPtr & join)\n {\n-    ExtraBlockPtr tmp;\n     LOG_DEBUG(&Poco::Logger::get(\"JoiningTransform\"), \"Before join block: '{}'\", header.dumpStructure());\n+    join->checkTypesOfKeys(header);\n+    ExtraBlockPtr tmp;\n     join->joinBlock(header, tmp);\n     LOG_DEBUG(&Poco::Logger::get(\"JoiningTransform\"), \"After join block: '{}'\", header.dumpStructure());\n     return header;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01010_pm_join_all_join_bug.reference b/tests/queries/0_stateless/01010_pm_join_all_join_bug.reference\nindex 5f51e52afa89..6648a96cbc35 100644\n--- a/tests/queries/0_stateless/01010_pm_join_all_join_bug.reference\n+++ b/tests/queries/0_stateless/01010_pm_join_all_join_bug.reference\n@@ -7,3 +7,4 @@\n 1\t0\t1\n 1\t1\t0\n 1\t1\t1\n+-\ndiff --git a/tests/queries/0_stateless/01010_pm_join_all_join_bug.sql b/tests/queries/0_stateless/01010_pm_join_all_join_bug.sql\nindex ef406108514e..18a67f411949 100644\n--- a/tests/queries/0_stateless/01010_pm_join_all_join_bug.sql\n+++ b/tests/queries/0_stateless/01010_pm_join_all_join_bug.sql\n@@ -9,4 +9,7 @@ SELECT * FROM ints l LEFT JOIN ints r USING i64 ORDER BY l.i32, r.i32;\n SELECT '-';\n SELECT * FROM ints l INNER JOIN ints r USING i64 ORDER BY l.i32, r.i32;\n \n+SELECT '-';\n+SELECT count() FROM ( SELECT [1], count(1) ) AS t1 ALL RIGHT JOIN ( SELECT number AS s FROM numbers(2) ) AS t2 USING (s); -- { serverError NOT_FOUND_COLUMN_IN_BLOCK }\n+\n DROP TABLE ints;\ndiff --git a/tests/queries/0_stateless/01881_join_on_conditions.sql b/tests/queries/0_stateless/01881_join_on_conditions.sql\nindex a34c413845be..e074397ff5ef 100644\n--- a/tests/queries/0_stateless/01881_join_on_conditions.sql\n+++ b/tests/queries/0_stateless/01881_join_on_conditions.sql\n@@ -48,10 +48,10 @@ SELECT DISTINCT t1.id FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toLowCardi\n SELECT DISTINCT t1.id FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toNullable(toLowCardinality(t1.key2 != ''));\n \n SELECT '--';\n-SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND e; \n+SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND e;\n -- `e + 1` is UInt16\n SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND e + 1; -- { serverError 403 }\n-SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toUInt8(e + 1); \n+SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toUInt8(e + 1);\n \n SELECT '--';\n SELECT t1.id, t1.key, t1.key2, t2.id, t2.key, t2.key2  FROM t1 FULL JOIN t2 ON t1.id == t2.id AND t2.key == t2.key2 AND t1.key == t1.key2 ORDER BY t1.id, t2.id;\n@@ -110,10 +110,10 @@ SELECT DISTINCT t1.id FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toLowCardi\n SELECT DISTINCT t1.id FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toNullable(toLowCardinality(t1.key2 != ''));\n \n SELECT '--';\n-SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND e; \n+SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND e;\n -- `e + 1` is UInt16\n SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND e + 1; -- { serverError 403 }\n-SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toUInt8(e + 1); \n+SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toUInt8(e + 1);\n \n SELECT '--';\n SELECT t1.id, t1.key, t1.key2, t2.id, t2.key, t2.key2  FROM t1 FULL JOIN t2 ON t1.id == t2.id AND t2.key == t2.key2 AND t1.key == t1.key2 ORDER BY t1.id, t2.id;\n",
  "problem_statement": "Merge join:  reference binding to null pointer of type 'DB::ColumnWithTypeAndName'\nhttps://clickhouse-test-reports.s3.yandex.net/0/2178ed21df53fc60bb039acb5ad668378db2a2ca/fuzzer_ubsan/report.html#fail1\r\n\r\n```\r\n2021.09.06 14:56:03.814818 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Debug> executeQuery: (from [::1]:39686) SELECT count(NULL) = -9223372036854775807 FROM (SELECT [NULL, NULL, NULL, NULL, NULL], [NULL, NULL, NULL, NULL, '102.5', NULL], count('10485.77'), [NULL, NULL, NULL, 10.000100135803223], '92233720368547758.07', [NULL, NULL, NULL]) AS js1 ALL RIGHT JOIN (SELECT number AS s FROM numbers(257, 2)) AS js2 USING (s)\r\n2021.09.06 14:56:03.815385 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n2021.09.06 14:56:03.815542 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Trace> ContextAccess (default): Access granted: CREATE TEMPORARY TABLE ON *.*\r\n2021.09.06 14:56:03.816234 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n2021.09.06 14:56:03.816793 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.09.06 14:56:03.817200 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one\r\n2021.09.06 14:56:03.817305 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.09.06 14:56:03.817340 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2021.09.06 14:56:03.817366 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Debug> JoiningTransform: Before join block: ''\r\n2021.09.06 14:56:03.817382 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Debug> JoiningTransform: After join block: ''\r\n2021.09.06 14:56:03.817607 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Debug> JoiningTransform: Before join block: ''\r\n2021.09.06 14:56:03.817630 [ 50 ] {4726dace-8168-48b6-85b1-4ce890c88790} <Debug> JoiningTransform: After join block: ''\r\n\r\n../contrib/libcxx/include/vector:1550:12: runtime error: reference binding to null pointer of type 'DB::ColumnWithTypeAndName'\r\n\r\n    #0 0x1a703df4 in DB::Block::getByPosition(unsigned long) (/workspace/clickhouse+0x1a703df4)\r\n    #1 0x1e956cf6 in DB::NotJoinedBlocks::NotJoinedBlocks(std::__1::unique_ptr<DB::NotJoinedBlocks::RightColumnsFiller, std::__1::default_delete<DB::NotJoinedBlocks::RightColumnsFiller> >, DB::Block const&, unsigned long, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/join_common.cpp:535:46\r\n    #2 0x1e70b9eb in std::__1::__shared_ptr_emplace<DB::NotJoinedBlocks, std::__1::allocator<DB::NotJoinedBlocks> >::__shared_ptr_emplace<std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >(std::__1::allocator<DB::NotJoinedBlocks>, std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >&&, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2594:9\r\n    #3 0x1e70b814 in std::__1::shared_ptr<DB::NotJoinedBlocks> std::__1::allocate_shared<DB::NotJoinedBlocks, std::__1::allocator<DB::NotJoinedBlocks>, std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void>(std::__1::allocator<DB::NotJoinedBlocks> const&, std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >&&, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3360:55\r\n    #4 0x1e6f2978 in std::__1::shared_ptr<DB::NotJoinedBlocks> std::__1::make_shared<DB::NotJoinedBlocks, std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void>(std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >&&, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3369:12\r\n    #5 0x1e6f2978 in DB::MergeJoin::getNonJoinedBlocks(DB::Block const&, unsigned long) const obj-x86_64-linux-gnu/../src/Interpreters/MergeJoin.cpp:1098:16\r\n    #6 0x1f8b4b8e in DB::JoiningTransform::work() obj-x86_64-linux-gnu/../src/Processors/Transforms/JoiningTransform.cpp:126:39\r\n    #7 0x1f5e2cf8 in DB::executeJob(DB::IProcessor*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:88:20\r\n    #8 0x1f5e2be6 in DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:105:13\r\n    #9 0x1f5e2be6 in decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #10 0x1f5e1533 in std::__1::__function::__policy_func<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221:16\r\n    #11 0x1f5e1533 in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #12 0x1f5e1533 in DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:597:17\r\n    #13 0x1f5dfde9 in DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:485:5\r\n    #14 0x1f5dfde9 in DB::PipelineExecutor::executeImpl(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:824:9\r\n    #15 0x1f5df899 in DB::PipelineExecutor::execute(unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:407:9\r\n    #16 0x1f5f39c3 in DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:80:24\r\n    #17 0x1f5f3906 in DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:107:13\r\n    #18 0x1f5f3906 in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682:1\r\n    #19 0x1f5f37b1 in decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1415:1\r\n    #20 0x1f5f37b1 in decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&) obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:1424:1\r\n    #21 0x1f5f37b1 in ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()::operator()() obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:182:13\r\n    #22 0x1f5f37b1 in decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #23 0x10642e7e in std::__1::function<void ()>::operator()() const obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560:12\r\n    #24 0x10642e7e in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:270:17\r\n    #25 0x10646635 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()::operator()() const obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:136:73\r\n    #26 0x10646635 in decltype(std::__1::forward<void>(fp)(std::__1::forward<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(fp0)...)) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...) obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676:1\r\n    #27 0x10646635 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>&, std::__1::__tuple_indices<>) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:280:5\r\n    #28 0x10646635 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) obj-x86_64-linux-gnu/../contrib/libcxx/include/thread:291:5\r\n    #29 0x7f356ecc4608 in start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477:8\r\n    #30 0x7f356ebeb292 in clone /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../contrib/libcxx/include/vector:1550:12 in \r\n2021.09.06 14:56:05.109415 [ 44 ] {} <Trace> BaseDaemon: Received signal -3\r\n2021.09.06 14:56:05.109595 [ 282 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.09.06 14:56:05.109700 [ 282 ] {} <Fatal> BaseDaemon: (version 21.10.1.8007 (official build), build id: 34020B13AD6896E807BA1EA7A153DC42C638DC25) (from thread 272) (query_id: 4726dace-8168-48b6-85b1-4ce890c88790) Received signal Unknown signal (-3)\r\n2021.09.06 14:56:05.109768 [ 282 ] {} <Fatal> BaseDaemon: Sanitizer trap.\r\n2021.09.06 14:56:05.109851 [ 282 ] {} <Fatal> BaseDaemon: Stack trace: 0x1060ed05 0x1d6fd136 0x105ce896 0x105da0bf 0x1a703df5 0x1e956cf7 0x1e70b9ec 0x1e70b815 0x1e6f2979 0x1f8b4b8f 0x1f5e2cf9 0x1f5e2be7 0x1f5e1534 0x1f5dfdea 0x1f5df89a 0x1f5f39c4 0x1f5f3907 0x1f5f37b2 0x10642e7f 0x10646636 0x7f356ecc4609 0x7f356ebeb293\r\n2021.09.06 14:56:05.127880 [ 282 ] {} <Fatal> BaseDaemon: 0.1. inlined from ./obj-x86_64-linux-gnu/../src/Common/StackTrace.cpp:304: StackTrace::tryCapture()\r\n2021.09.06 14:56:05.127921 [ 282 ] {} <Fatal> BaseDaemon: 0. ../src/Common/StackTrace.cpp:265: StackTrace::StackTrace() @ 0x1060ed05 in /workspace/clickhouse\r\n2021.09.06 14:56:05.192116 [ 282 ] {} <Fatal> BaseDaemon: 1. ./obj-x86_64-linux-gnu/../base/daemon/BaseDaemon.cpp:396: sanitizerDeathCallback() @ 0x1d6fd136 in /workspace/clickhouse\r\n2021.09.06 14:56:06.287402 [ 282 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0x105ce896 in /workspace/clickhouse\r\n2021.09.06 14:56:07.355057 [ 282 ] {} <Fatal> BaseDaemon: 3. ? @ 0x105da0bf in /workspace/clickhouse\r\n2021.09.06 14:56:08.446230 [ 282 ] {} <Fatal> BaseDaemon: 4. ? @ 0x1a703df5 in /workspace/clickhouse\r\n2021.09.06 14:56:08.483781 [ 282 ] {} <Fatal> BaseDaemon: 5. ./obj-x86_64-linux-gnu/../src/Interpreters/join_common.cpp:535: DB::NotJoinedBlocks::NotJoinedBlocks(std::__1::unique_ptr<DB::NotJoinedBlocks::RightColumnsFiller, std::__1::default_delete<DB::NotJoinedBlocks::RightColumnsFiller> >, DB::Block const&, unsigned long, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&) @ 0x1e956cf7 in /workspace/clickhouse\r\n2021.09.06 14:56:08.542803 [ 97 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 667\r\n2021.09.06 14:56:08.559602 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 4.64 TiB.\r\n2021.09.06 14:56:08.565451 [ 97 ] {} <Trace> system.metric_log (952770a8-5da4-40f3-9527-70a85da470f3): Renaming temporary part tmp_insert_202109_90_90_0 to 202109_90_90_0.\r\n2021.09.06 14:56:08.566531 [ 97 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 667\r\n2021.09.06 14:56:08.571766 [ 282 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2598: std::__1::__shared_ptr_emplace<DB::NotJoinedBlocks, std::__1::allocator<DB::NotJoinedBlocks> >::__shared_ptr_emplace<std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >(std::__1::allocator<DB::NotJoinedBlocks>, std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >&&, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&&) @ 0x1e70b9ec in /workspace/clickhouse\r\n2021.09.06 14:56:08.653642 [ 282 ] {} <Fatal> BaseDaemon: 7.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/utilities.h:68: std::__1::__allocation_guard<std::__1::allocator<std::__1::__shared_ptr_emplace<DB::NotJoinedBlocks, std::__1::allocator<DB::NotJoinedBlocks> > > >::__release_ptr()\r\n2021.09.06 14:56:08.653690 [ 282 ] {} <Fatal> BaseDaemon: 7. ../contrib/libcxx/include/memory:3361: std::__1::shared_ptr<DB::NotJoinedBlocks> std::__1::allocate_shared<DB::NotJoinedBlocks, std::__1::allocator<DB::NotJoinedBlocks>, std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void>(std::__1::allocator<DB::NotJoinedBlocks> const&, std::__1::unique_ptr<DB::NotJoinedMerge, std::__1::default_delete<DB::NotJoinedMerge> >&&, DB::Block const&, unsigned long&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&&) @ 0x1e70b815 in /workspace/clickhouse\r\n2021.09.06 14:56:08.726801 [ 282 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Interpreters/MergeJoin.cpp:0: DB::MergeJoin::getNonJoinedBlocks(DB::Block const&, unsigned long) const @ 0x1e6f2979 in /workspace/clickhouse\r\n2021.09.06 14:56:08.755215 [ 282 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Processors/Transforms/JoiningTransform.cpp:126: DB::JoiningTransform::work() @ 0x1f8b4b8f in /workspace/clickhouse\r\n2021.09.06 14:56:08.831935 [ 282 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:96: DB::executeJob(DB::IProcessor*) @ 0x1f5e2cf9 in /workspace/clickhouse\r\n2021.09.06 14:56:08.907366 [ 282 ] {} <Fatal> BaseDaemon: 11.1. inlined from ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:108: operator()\r\n2021.09.06 14:56:08.907404 [ 282 ] {} <Fatal> BaseDaemon: 11. ../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&>(DB::PipelineExecutor::addJob(DB::ExecutingGraph::Node*)::$_0&) @ 0x1f5e2be7 in /workspace/clickhouse\r\n2021.09.06 14:56:08.979469 [ 282 ] {} <Fatal> BaseDaemon: 12.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:0: std::__1::__function::__policy_func<void ()>::operator()() const\r\n2021.09.06 14:56:08.979520 [ 282 ] {} <Fatal> BaseDaemon: 12.2. inlined from ../contrib/libcxx/include/functional:2560: std::__1::function<void ()>::operator()() const\r\n2021.09.06 14:56:08.979542 [ 282 ] {} <Fatal> BaseDaemon: 12. ../src/Processors/Executors/PipelineExecutor.cpp:597: DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x1f5e1534 in /workspace/clickhouse\r\n2021.09.06 14:56:09.000124 [ 245 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 2.93 GiB, peak 2.94 GiB, will set to 2.97 GiB (RSS), difference: 37.14 MiB\r\n2021.09.06 14:56:09.046631 [ 282 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:0: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long)\r\n2021.09.06 14:56:09.046675 [ 282 ] {} <Fatal> BaseDaemon: 13. ../src/Processors/Executors/PipelineExecutor.cpp:824: DB::PipelineExecutor::executeImpl(unsigned long) @ 0x1f5dfdea in /workspace/clickhouse\r\n2021.09.06 14:56:09.117606 [ 282 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:410: DB::PipelineExecutor::execute(unsigned long) @ 0x1f5df89a in /workspace/clickhouse\r\n2021.09.06 14:56:09.155877 [ 282 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:0: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0x1f5f39c4 in /workspace/clickhouse\r\n2021.09.06 14:56:09.193868 [ 282 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3682: decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) @ 0x1f5f3907 in /workspace/clickhouse\r\n2021.09.06 14:56:09.231592 [ 282 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/tuple:0: operator()\r\n2021.09.06 14:56:09.231639 [ 282 ] {} <Fatal> BaseDaemon: 17. ../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) @ 0x1f5f37b2 in /workspace/clickhouse\r\n2021.09.06 14:56:09.245904 [ 282 ] {} <Fatal> BaseDaemon: 18.1. inlined from ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2533: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2021.09.06 14:56:09.245933 [ 282 ] {} <Fatal> BaseDaemon: 18. ../src/Common/ThreadPool.cpp:273: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x10642e7f in /workspace/clickhouse\r\n2021.09.06 14:56:09.261592 [ 282 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../src/Common/ThreadPool.cpp:0: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0x10646636 in /workspace/clickhouse\r\n2021.09.06 14:56:09.261658 [ 282 ] {} <Fatal> BaseDaemon: 20. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2021.09.06 14:56:09.261766 [ 282 ] {} <Fatal> BaseDaemon: 21. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.09.06 14:56:09.507425 [ 282 ] {} <Fatal> BaseDaemon: Checksum of the binary: D0CDFD0A8557841B736D34977B3C3698, integrity check passed.\r\n```\n",
  "hints_text": "@vdimir Maybe you can take a look?",
  "created_at": "2021-09-13T13:36:33Z"
}