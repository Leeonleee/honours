{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 65838,
  "instance_id": "ClickHouse__ClickHouse-65838",
  "issue_numbers": [
    "65516"
  ],
  "base_commit": "19816401c4b1a3a74c3fcfd0ed6dfde4f405fcf9",
  "patch": "diff --git a/src/Functions/bitShiftLeft.cpp b/src/Functions/bitShiftLeft.cpp\nindex c366a1ecb44b..d561430d51f7 100644\n--- a/src/Functions/bitShiftLeft.cpp\n+++ b/src/Functions/bitShiftLeft.cpp\n@@ -5,6 +5,7 @@ namespace DB\n {\n namespace ErrorCodes\n {\n+    extern const int ARGUMENT_OUT_OF_BOUND;\n     extern const int NOT_IMPLEMENTED;\n     extern const int LOGICAL_ERROR;\n }\n@@ -24,6 +25,8 @@ struct BitShiftLeftImpl\n     {\n         if constexpr (is_big_int_v<B>)\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"BitShiftLeft is not implemented for big integers as second argument\");\n+        else if (b < 0 || static_cast<UInt256>(b) > 8 * sizeof(A))\n+            throw Exception(ErrorCodes::ARGUMENT_OUT_OF_BOUND, \"The number of shift positions needs to be a non-negative value and less or equal to the bit width of the value to shift\");\n         else if constexpr (is_big_int_v<A>)\n             return static_cast<Result>(a) << static_cast<UInt32>(b);\n         else\n@@ -37,9 +40,12 @@ struct BitShiftLeftImpl\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"BitShiftLeft is not implemented for big integers as second argument\");\n         else\n         {\n-            UInt8 word_size = 8;\n-            /// To prevent overflow\n-            if (static_cast<double>(b) >= (static_cast<double>(end - pos) * word_size) || b < 0)\n+            const UInt8 word_size = 8 * sizeof(*pos);\n+            size_t n = end - pos;\n+            const UInt128 bit_limit = static_cast<UInt128>(word_size) * n;\n+            if (b < 0 || static_cast<decltype(bit_limit)>(b) > bit_limit)\n+                throw Exception(ErrorCodes::ARGUMENT_OUT_OF_BOUND, \"The number of shift positions needs to be a non-negative value and less or equal to the bit width of the value to shift\");\n+            else if (b == bit_limit)\n             {\n                 // insert default value\n                 out_vec.push_back(0);\n@@ -102,10 +108,12 @@ struct BitShiftLeftImpl\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"BitShiftLeft is not implemented for big integers as second argument\");\n         else\n         {\n-            UInt8 word_size = 8;\n+            const UInt8 word_size = 8;\n             size_t n = end - pos;\n-            /// To prevent overflow\n-            if (static_cast<double>(b) >= (static_cast<double>(n) * word_size) || b < 0)\n+            const UInt128 bit_limit = static_cast<UInt128>(word_size) * n;\n+            if (b < 0 || static_cast<decltype(bit_limit)>(b) > bit_limit)\n+                throw Exception(ErrorCodes::ARGUMENT_OUT_OF_BOUND, \"The number of shift positions needs to be a non-negative value and less or equal to the bit width of the value to shift\");\n+            else if (b == bit_limit)\n             {\n                 // insert default value\n                 out_vec.resize_fill(out_vec.size() + n);\ndiff --git a/src/Functions/bitShiftRight.cpp b/src/Functions/bitShiftRight.cpp\nindex 1c37cd3bf4c5..05b8581c792d 100644\n--- a/src/Functions/bitShiftRight.cpp\n+++ b/src/Functions/bitShiftRight.cpp\n@@ -6,6 +6,7 @@ namespace DB\n {\n namespace ErrorCodes\n {\n+    extern const int ARGUMENT_OUT_OF_BOUND;\n     extern const int NOT_IMPLEMENTED;\n     extern const int LOGICAL_ERROR;\n }\n@@ -25,6 +26,8 @@ struct BitShiftRightImpl\n     {\n         if constexpr (is_big_int_v<B>)\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"BitShiftRight is not implemented for big integers as second argument\");\n+        else if (b < 0 || static_cast<UInt256>(b) > 8 * sizeof(A))\n+            throw Exception(ErrorCodes::ARGUMENT_OUT_OF_BOUND, \"The number of shift positions needs to be a non-negative value and less or equal to the bit width of the value to shift\");\n         else if constexpr (is_big_int_v<A>)\n             return static_cast<Result>(a) >> static_cast<UInt32>(b);\n         else\n@@ -53,9 +56,12 @@ struct BitShiftRightImpl\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"BitShiftRight is not implemented for big integers as second argument\");\n         else\n         {\n-            UInt8 word_size = 8;\n-            /// To prevent overflow\n-            if (static_cast<double>(b) >= (static_cast<double>(end - pos) * word_size) || b < 0)\n+            const UInt8 word_size = 8;\n+            size_t n = end - pos;\n+            const UInt128 bit_limit = static_cast<UInt128>(word_size) * n;\n+            if (b < 0 || static_cast<decltype(bit_limit)>(b) > bit_limit)\n+                throw Exception(ErrorCodes::ARGUMENT_OUT_OF_BOUND, \"The number of shift positions needs to be a non-negative value and less or equal to the bit width of the value to shift\");\n+            else if (b == bit_limit)\n             {\n                 /// insert default value\n                 out_vec.push_back(0);\n@@ -90,10 +96,12 @@ struct BitShiftRightImpl\n             throw Exception(ErrorCodes::NOT_IMPLEMENTED, \"BitShiftRight is not implemented for big integers as second argument\");\n         else\n         {\n-            UInt8 word_size = 8;\n+            const UInt8 word_size = 8;\n             size_t n = end - pos;\n-            /// To prevent overflow\n-            if (static_cast<double>(b) >= (static_cast<double>(n) * word_size) || b < 0)\n+            const UInt128 bit_limit = static_cast<UInt128>(word_size) * n;\n+            if (b < 0 || static_cast<decltype(bit_limit)>(b) > bit_limit)\n+                throw Exception(ErrorCodes::ARGUMENT_OUT_OF_BOUND, \"The number of shift positions needs to be a non-negative value and less or equal to the bit width of the value to shift\");\n+            else if (b == bit_limit)\n             {\n                 // insert default value\n                 out_vec.resize_fill(out_vec.size() + n);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.reference b/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.reference\nindex e6a2b2b6aafc..ab832478da08 100644\n--- a/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.reference\n+++ b/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.reference\n@@ -41,8 +41,6 @@ String ConstConst\n 38\tHello\t00000001\n 39\tHello\t00000000\n 40\tHello\t\n-41\tHello\t\n-42\tHello\t\n FixedString ConstConst\n 1\n 0\tHello\\0\\0\\0\\0\\0\t01001000011001010110110001101100011011110000000000000000000000000000000000000000\n@@ -92,10 +90,8 @@ FixedString ConstConst\n 78\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000001\n 79\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 80\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n-81\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n \n String VectorVector\n--1\tHello\t\n 0\tHello\t0100100001100101011011000110110001101111\n 1\tHello\t0010010000110010101101100011011000110111\n 7\tHello\t0000000010010000110010101101100011011000\n@@ -112,8 +108,6 @@ String VectorVector\n 33\tHello\t00100100\n 39\tHello\t00000000\n 40\tHello\t\n-41\tHello\t\n-42\tHello\t\n 7\tHel\t000000001001000011001010\n 8\tHel\t0100100001100101\n 9\tHel\t0010010000110010\n@@ -125,7 +119,6 @@ String VectorVector\n 9\tHel\t0010010000110010\n \n FixedString VectorVector\n--1\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 0\tHello\\0\\0\\0\\0\\0\t01001000011001010110110001101100011011110000000000000000000000000000000000000000\n 1\tHello\\0\\0\\0\\0\\0\t00100100001100101011011000110110001101111000000000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n@@ -142,8 +135,6 @@ FixedString VectorVector\n 33\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000001001000011001010110110001101100011011110000000\n 39\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000001001000011001010110110001101100011011110\n 40\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000100100001100101011011000110110001101111\n-41\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000010010000110010101101100011011000110111\n-42\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000001001000011001010110110001101100011011\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000100100001100101011011000000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000010010000110010101101100000000000000000000000000000000000000000000000000\n 9\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000001001000011001010110110000000000000000000000000000000000000000000000000\n@@ -171,9 +162,6 @@ String VectorConst\n 7\tHello\t0000000010010000110010101101100011011000\n 7\tHello\t0000000010010000110010101101100011011000\n 7\tHello\t0000000010010000110010101101100011011000\n-7\tHello\t0000000010010000110010101101100011011000\n-7\tHello\t0000000010010000110010101101100011011000\n-7\tHello\t0000000010010000110010101101100011011000\n 7\tHel\t000000001001000011001010\n 7\tHel\t000000001001000011001010\n 7\tHel\t000000001001000011001010\n@@ -193,9 +181,6 @@ String VectorConst\n 8\tHello\t01001000011001010110110001101100\n 8\tHello\t01001000011001010110110001101100\n 8\tHello\t01001000011001010110110001101100\n-8\tHello\t01001000011001010110110001101100\n-8\tHello\t01001000011001010110110001101100\n-8\tHello\t01001000011001010110110001101100\n 8\tHel\t0100100001100101\n 8\tHel\t0100100001100101\n 8\tHel\t0100100001100101\n@@ -217,9 +202,6 @@ FixedString VectorConst\n 7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n-7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n-7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n-7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000100100001100101011011000000000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000100100001100101011011000000000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000100100001100101011011000000000000000000000000000000000000000000000000000\n@@ -239,15 +221,11 @@ FixedString VectorConst\n 8\tHello\\0\\0\\0\\0\\0\t00000000010010000110010101101100011011000110111100000000000000000000000000000000\n 8\tHello\\0\\0\\0\\0\\0\t00000000010010000110010101101100011011000110111100000000000000000000000000000000\n 8\tHello\\0\\0\\0\\0\\0\t00000000010010000110010101101100011011000110111100000000000000000000000000000000\n-8\tHello\\0\\0\\0\\0\\0\t00000000010010000110010101101100011011000110111100000000000000000000000000000000\n-8\tHello\\0\\0\\0\\0\\0\t00000000010010000110010101101100011011000110111100000000000000000000000000000000\n-8\tHello\\0\\0\\0\\0\\0\t00000000010010000110010101101100011011000110111100000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000010010000110010101101100000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000010010000110010101101100000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000010010000110010101101100000000000000000000000000000000000000000000000000\n \n String ConstVector\n--1\tHello\t\n 0\tHello\t0100100001100101011011000110110001101111\n 1\tHello\t0010010000110010101101100011011000110111\n 7\tHello\t0000000010010000110010101101100011011000\n@@ -264,12 +242,9 @@ String ConstVector\n 33\tHello\t00100100\n 39\tHello\t00000000\n 40\tHello\t\n-41\tHello\t\n-42\tHello\t\n 7\tHello\t0000000010010000110010101101100011011000\n 8\tHello\t01001000011001010110110001101100\n 9\tHello\t00100100001100101011011000110110\n--1\tHel\t\n 0\tHel\t010010000110010101101100\n 1\tHel\t001001000011001010110110\n 7\tHel\t000000001001000011001010\n@@ -280,20 +255,11 @@ String ConstVector\n 17\tHel\t00100100\n 23\tHel\t00000000\n 24\tHel\t\n-25\tHel\t\n-31\tHel\t\n-32\tHel\t\n-33\tHel\t\n-39\tHel\t\n-40\tHel\t\n-41\tHel\t\n-42\tHel\t\n 7\tHel\t000000001001000011001010\n 8\tHel\t0100100001100101\n 9\tHel\t0010010000110010\n \n FixedString ConstVector\n--1\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 0\tHello\\0\\0\\0\\0\\0\t01001000011001010110110001101100011011110000000000000000000000000000000000000000\n 1\tHello\\0\\0\\0\\0\\0\t00100100001100101011011000110110001101111000000000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n@@ -310,12 +276,9 @@ FixedString ConstVector\n 33\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000001001000011001010110110001101100011011110000000\n 39\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000001001000011001010110110001101100011011110\n 40\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000100100001100101011011000110110001101111\n-41\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000010010000110010101101100011011000110111\n-42\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000001001000011001010110110001101100011011\n 7\tHello\\0\\0\\0\\0\\0\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n 8\tHello\\0\\0\\0\\0\\0\t00000000010010000110010101101100011011000110111100000000000000000000000000000000\n 9\tHello\\0\\0\\0\\0\\0\t00000000001001000011001010110110001101100011011110000000000000000000000000000000\n--1\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 0\tHel\\0\\0\\0\\0\\0\\0\\0\t01001000011001010110110000000000000000000000000000000000000000000000000000000000\n 1\tHel\\0\\0\\0\\0\\0\\0\\0\t00100100001100101011011000000000000000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000100100001100101011011000000000000000000000000000000000000000000000000000\n@@ -332,8 +295,6 @@ FixedString ConstVector\n 33\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000001001000011001010110110000000000000000000000000\n 39\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000001001000011001010110110000000000000000000\n 40\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000100100001100101011011000000000000000000\n-41\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000010010000110010101101100000000000000000\n-42\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000001001000011001010110110000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000100100001100101011011000000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000010010000110010101101100000000000000000000000000000000000000000000000000\n 9\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000001001000011001010110110000000000000000000000000000000000000000000000000\ndiff --git a/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql b/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql\nindex 0ee04e408bae..40fccbc89e6e 100644\n--- a/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql\n+++ b/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql\n@@ -41,8 +41,6 @@ SELECT 37,'Hello',bin(bitShiftRight('Hello', 37));\n SELECT 38,'Hello',bin(bitShiftRight('Hello', 38));\n SELECT 39,'Hello',bin(bitShiftRight('Hello', 39));\n SELECT 40,'Hello',bin(bitShiftRight('Hello', 40));\n-SELECT 41,'Hello',bin(bitShiftRight('Hello', 41));\n-SELECT 42,'Hello',bin(bitShiftRight('Hello', 42));\n \n SELECT 'FixedString ConstConst';\n SELECT bin(toFixedString('Hello', 10)) == bin(bitShiftRight(toFixedString('Hello', 10), 0));\n@@ -93,40 +91,39 @@ SELECT 77,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 1\n SELECT 78,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 78));\n SELECT 79,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 79));\n SELECT 80,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 80));\n-SELECT 81,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 81));\n \n DROP TABLE IF EXISTS test_bit_shift_right_string_integer;\n \n CREATE TABLE test_bit_shift_right_string_integer (str String, fixedStr FixedString(10), id Int64) engine=Log;\n \n-INSERT INTO test_bit_shift_right_string_integer VALUES('Hello','Hello',-1)('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hello','Hello',41),('Hello','Hello',42),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);\n+INSERT INTO test_bit_shift_right_string_integer VALUES('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);\n \n-SELECT bin(bitShiftRight('Hello', 42));  --A blank line\n+SELECT bin(bitShiftRight('Hello', 40));  --A blank line\n SELECT 'String VectorVector';\n SELECT id as shift_right_bit,str as arg,bin(bitShiftRight(str, id)) as string_res FROM test_bit_shift_right_string_integer;\n SELECT id as shift_right_bit,str as arg,bin(bitShiftRight(str, id)) as string_res FROM test_bit_shift_right_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));\n \n-SELECT bin(bitShiftRight('Hello', 42));\n+SELECT bin(bitShiftRight('Hello', 40));\n SELECT 'FixedString VectorVector';\n SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, id)) as fixed_string_res FROM test_bit_shift_right_string_integer;\n SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, id)) as fixed_string_res FROM test_bit_shift_right_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));\n \n-SELECT bin(bitShiftRight('Hello', 42));  --A blank line\n+SELECT bin(bitShiftRight('Hello', 40));  --A blank line\n SELECT 'String VectorConst';\n SELECT 7 as shift_right_bit,str as arg,bin(bitShiftRight(str, 7)) as string_res FROM test_bit_shift_right_string_integer;\n SELECT 8 as shift_right_bit,str as arg,bin(bitShiftRight(str, 8)) as string_res FROM test_bit_shift_right_string_integer;\n \n-SELECT bin(bitShiftRight('Hello', 42));  --A blank line\n+SELECT bin(bitShiftRight('Hello', 40));  --A blank line\n SELECT 'FixedString VectorConst';\n SELECT 7 as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, 7)) as fixed_string_res FROM test_bit_shift_right_string_integer;\n SELECT 8 as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, 8)) as fixed_string_res FROM test_bit_shift_right_string_integer;\n \n-SELECT bin(bitShiftRight('Hello', 42));  --A blank line\n+SELECT bin(bitShiftRight('Hello', 40));  --A blank line\n SELECT 'String ConstVector';\n SELECT id as shift_right_bit,'Hello' as arg,bin(bitShiftRight('Hello', id)) as string_res FROM test_bit_shift_right_string_integer;\n-SELECT id as shift_right_bit,'Hel' as arg,bin(bitShiftRight('Hel', id)) as string_res FROM test_bit_shift_right_string_integer;\n+SELECT id as shift_right_bit,'Hel' as arg,bin(bitShiftRight('Hel', id)) as string_res FROM test_bit_shift_right_string_integer WHERE id <= 8 * 3;\n \n-SELECT bin(bitShiftRight('Hello', 42));  --A blank line\n+SELECT bin(bitShiftRight('Hello', 40));  --A blank line\n SELECT 'FixedString ConstVector';\n SELECT id as shift_right_bit,toFixedString('Hello', 10) as arg,bin(bitShiftRight(toFixedString('Hello', 10), id)) as fixed_string_res FROM test_bit_shift_right_string_integer;\n SELECT id as shift_right_bit,toFixedString('Hel', 10) as arg,bin(bitShiftRight(toFixedString('Hel', 10), id)) as fixed_string_res FROM test_bit_shift_right_string_integer;\ndiff --git a/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.reference b/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.reference\nindex ff5a09c0d481..a20c44bbb9af 100644\n--- a/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.reference\n+++ b/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.reference\n@@ -41,8 +41,6 @@ String ConstConst\n 38\tHello\t00010010000110010101101100011011000110111100000000000000000000000000000000000000\n 39\tHello\t00100100001100101011011000110110001101111000000000000000000000000000000000000000\n 40\tHello\t\n-41\tHello\t\n-42\tHello\t\n FixedString ConstConst\n 1\n 0\tHello\\0\\0\\0\\0\\0\t01001000011001010110110001101100011011110000000000000000000000000000000000000000\n@@ -92,10 +90,8 @@ FixedString ConstConst\n 78\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 79\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 80\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n-81\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n \n String VectorVector\n--1\tHello\t\n 0\tHello\t0100100001100101011011000110110001101111\n 1\tHello\t000000001001000011001010110110001101100011011110\n 7\tHello\t001001000011001010110110001101100011011110000000\n@@ -112,8 +108,6 @@ String VectorVector\n 33\tHello\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n 39\tHello\t00100100001100101011011000110110001101111000000000000000000000000000000000000000\n 40\tHello\t\n-41\tHello\t\n-42\tHello\t\n 7\tHel\t00100100001100101011011000000000\n 8\tHel\t01001000011001010110110000000000\n 9\tHel\t0000000010010000110010101101100000000000\n@@ -125,7 +119,6 @@ String VectorVector\n 9\tHel\t0000000010010000110010101101100000000000\n \n FixedString VectorVector\n--1\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 0\tHello\\0\\0\\0\\0\\0\t01001000011001010110110001101100011011110000000000000000000000000000000000000000\n 1\tHello\\0\\0\\0\\0\\0\t10010000110010101101100011011000110111100000000000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n@@ -142,8 +135,6 @@ FixedString VectorVector\n 33\tHello\\0\\0\\0\\0\\0\t11011110000000000000000000000000000000000000000000000000000000000000000000000000\n 39\tHello\\0\\0\\0\\0\\0\t10000000000000000000000000000000000000000000000000000000000000000000000000000000\n 40\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n-41\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n-42\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00110010101101100000000000000000000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t01100101011011000000000000000000000000000000000000000000000000000000000000000000\n 9\tHel\\0\\0\\0\\0\\0\\0\\0\t11001010110110000000000000000000000000000000000000000000000000000000000000000000\n@@ -171,9 +162,6 @@ String VectorConst\n 7\tHello\t001001000011001010110110001101100011011110000000\n 7\tHello\t001001000011001010110110001101100011011110000000\n 7\tHello\t001001000011001010110110001101100011011110000000\n-7\tHello\t001001000011001010110110001101100011011110000000\n-7\tHello\t001001000011001010110110001101100011011110000000\n-7\tHello\t001001000011001010110110001101100011011110000000\n 7\tHel\t00100100001100101011011000000000\n 7\tHel\t00100100001100101011011000000000\n 7\tHel\t00100100001100101011011000000000\n@@ -193,9 +181,6 @@ String VectorConst\n 8\tHello\t010010000110010101101100011011000110111100000000\n 8\tHello\t010010000110010101101100011011000110111100000000\n 8\tHello\t010010000110010101101100011011000110111100000000\n-8\tHello\t010010000110010101101100011011000110111100000000\n-8\tHello\t010010000110010101101100011011000110111100000000\n-8\tHello\t010010000110010101101100011011000110111100000000\n 8\tHel\t01001000011001010110110000000000\n 8\tHel\t01001000011001010110110000000000\n 8\tHel\t01001000011001010110110000000000\n@@ -217,9 +202,6 @@ FixedString VectorConst\n 7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n-7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n-7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n-7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00110010101101100000000000000000000000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00110010101101100000000000000000000000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00110010101101100000000000000000000000000000000000000000000000000000000000000000\n@@ -239,15 +221,11 @@ FixedString VectorConst\n 8\tHello\\0\\0\\0\\0\\0\t01100101011011000110110001101111000000000000000000000000000000000000000000000000\n 8\tHello\\0\\0\\0\\0\\0\t01100101011011000110110001101111000000000000000000000000000000000000000000000000\n 8\tHello\\0\\0\\0\\0\\0\t01100101011011000110110001101111000000000000000000000000000000000000000000000000\n-8\tHello\\0\\0\\0\\0\\0\t01100101011011000110110001101111000000000000000000000000000000000000000000000000\n-8\tHello\\0\\0\\0\\0\\0\t01100101011011000110110001101111000000000000000000000000000000000000000000000000\n-8\tHello\\0\\0\\0\\0\\0\t01100101011011000110110001101111000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t01100101011011000000000000000000000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t01100101011011000000000000000000000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t01100101011011000000000000000000000000000000000000000000000000000000000000000000\n \n String ConstVector\n--1\tHello\t\n 0\tHello\t0100100001100101011011000110110001101111\n 1\tHello\t000000001001000011001010110110001101100011011110\n 7\tHello\t001001000011001010110110001101100011011110000000\n@@ -264,12 +242,9 @@ String ConstVector\n 33\tHello\t00000000100100001100101011011000110110001101111000000000000000000000000000000000\n 39\tHello\t00100100001100101011011000110110001101111000000000000000000000000000000000000000\n 40\tHello\t\n-41\tHello\t\n-42\tHello\t\n 7\tHello\t001001000011001010110110001101100011011110000000\n 8\tHello\t010010000110010101101100011011000110111100000000\n 9\tHello\t00000000100100001100101011011000110110001101111000000000\n--1\tHel\t\n 0\tHel\t010010000110010101101100\n 1\tHel\t00000000100100001100101011011000\n 7\tHel\t00100100001100101011011000000000\n@@ -280,20 +255,11 @@ String ConstVector\n 17\tHel\t000000001001000011001010110110000000000000000000\n 23\tHel\t001001000011001010110110000000000000000000000000\n 24\tHel\t\n-25\tHel\t\n-31\tHel\t\n-32\tHel\t\n-33\tHel\t\n-39\tHel\t\n-40\tHel\t\n-41\tHel\t\n-42\tHel\t\n 7\tHel\t00100100001100101011011000000000\n 8\tHel\t01001000011001010110110000000000\n 9\tHel\t0000000010010000110010101101100000000000\n \n FixedString ConstVector\n--1\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 0\tHello\\0\\0\\0\\0\\0\t01001000011001010110110001101100011011110000000000000000000000000000000000000000\n 1\tHello\\0\\0\\0\\0\\0\t10010000110010101101100011011000110111100000000000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n@@ -310,12 +276,9 @@ FixedString ConstVector\n 33\tHello\\0\\0\\0\\0\\0\t11011110000000000000000000000000000000000000000000000000000000000000000000000000\n 39\tHello\\0\\0\\0\\0\\0\t10000000000000000000000000000000000000000000000000000000000000000000000000000000\n 40\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n-41\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n-42\tHello\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 7\tHello\\0\\0\\0\\0\\0\t00110010101101100011011000110111100000000000000000000000000000000000000000000000\n 8\tHello\\0\\0\\0\\0\\0\t01100101011011000110110001101111000000000000000000000000000000000000000000000000\n 9\tHello\\0\\0\\0\\0\\0\t11001010110110001101100011011110000000000000000000000000000000000000000000000000\n--1\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 0\tHel\\0\\0\\0\\0\\0\\0\\0\t01001000011001010110110000000000000000000000000000000000000000000000000000000000\n 1\tHel\\0\\0\\0\\0\\0\\0\\0\t10010000110010101101100000000000000000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00110010101101100000000000000000000000000000000000000000000000000000000000000000\n@@ -332,8 +295,6 @@ FixedString ConstVector\n 33\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 39\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 40\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n-41\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n-42\tHel\\0\\0\\0\\0\\0\\0\\0\t00000000000000000000000000000000000000000000000000000000000000000000000000000000\n 7\tHel\\0\\0\\0\\0\\0\\0\\0\t00110010101101100000000000000000000000000000000000000000000000000000000000000000\n 8\tHel\\0\\0\\0\\0\\0\\0\\0\t01100101011011000000000000000000000000000000000000000000000000000000000000000000\n 9\tHel\\0\\0\\0\\0\\0\\0\\0\t11001010110110000000000000000000000000000000000000000000000000000000000000000000\ndiff --git a/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql b/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql\nindex 5c7a9901daea..a8e66eda2811 100644\n--- a/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql\n+++ b/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql\n@@ -41,8 +41,6 @@ SELECT 37,'Hello',bin(bitShiftLeft('Hello', 37));\n SELECT 38,'Hello',bin(bitShiftLeft('Hello', 38));\n SELECT 39,'Hello',bin(bitShiftLeft('Hello', 39));\n SELECT 40,'Hello',bin(bitShiftLeft('Hello', 40));\n-SELECT 41,'Hello',bin(bitShiftLeft('Hello', 41));\n-SELECT 42,'Hello',bin(bitShiftLeft('Hello', 42));\n \n SELECT 'FixedString ConstConst';\n SELECT bin(toFixedString('Hello', 10)) == bin(bitShiftLeft(toFixedString('Hello', 10), 0));\n@@ -93,40 +91,39 @@ SELECT 77,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10\n SELECT 78,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 78));\n SELECT 79,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 79));\n SELECT 80,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 80));\n-SELECT 81,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 81));\n \n DROP TABLE IF EXISTS test_bit_shift_left_string_integer;\n \n CREATE TABLE test_bit_shift_left_string_integer (str String, fixedStr FixedString(10), id Int64) engine=Log;\n \n-INSERT INTO test_bit_shift_left_string_integer VALUES('Hello','Hello',-1)('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hello','Hello',41),('Hello','Hello',42),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);\n+INSERT INTO test_bit_shift_left_string_integer VALUES('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);\n \n-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line\n+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line\n SELECT 'String VectorVector';\n SELECT id as shift_right_bit,str as arg,bin(bitShiftLeft(str, id)) as string_res FROM test_bit_shift_left_string_integer;\n SELECT id as shift_right_bit,str as arg,bin(bitShiftLeft(str, id)) as string_res FROM test_bit_shift_left_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));\n \n-SELECT bin(bitShiftLeft('Hello', 42));\n+SELECT bin(bitShiftLeft('Hello', 40));\n SELECT 'FixedString VectorVector';\n SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, id)) as fixed_string_res FROM test_bit_shift_left_string_integer;\n SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, id)) as fixed_string_res FROM test_bit_shift_left_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));\n \n-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line\n+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line\n SELECT 'String VectorConst';\n SELECT 7 as shift_right_bit,str as arg,bin(bitShiftLeft(str, 7)) as string_res FROM test_bit_shift_left_string_integer;\n SELECT 8 as shift_right_bit,str as arg,bin(bitShiftLeft(str, 8)) as string_res FROM test_bit_shift_left_string_integer;\n \n-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line\n+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line\n SELECT 'FixedString VectorConst';\n SELECT 7 as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, 7)) as fixed_string_res FROM test_bit_shift_left_string_integer;\n SELECT 8 as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, 8)) as fixed_string_res FROM test_bit_shift_left_string_integer;\n \n-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line\n+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line\n SELECT 'String ConstVector';\n SELECT id as shift_right_bit,'Hello' as arg,bin(bitShiftLeft('Hello', id)) as string_res FROM test_bit_shift_left_string_integer;\n-SELECT id as shift_right_bit,'Hel' as arg,bin(bitShiftLeft('Hel', id)) as string_res FROM test_bit_shift_left_string_integer;\n+SELECT id as shift_right_bit,'Hel' as arg,bin(bitShiftLeft('Hel', id)) as string_res FROM test_bit_shift_left_string_integer WHERE id <= 8 * 3;\n \n-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line\n+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line\n SELECT 'FixedString ConstVector';\n SELECT id as shift_right_bit,toFixedString('Hello', 10) as arg,bin(bitShiftLeft(toFixedString('Hello', 10), id)) as fixed_string_res FROM test_bit_shift_left_string_integer;\n SELECT id as shift_right_bit,toFixedString('Hel', 10) as arg,bin(bitShiftLeft(toFixedString('Hel', 10), id)) as fixed_string_res FROM test_bit_shift_left_string_integer;\ndiff --git a/tests/queries/0_stateless/02366_kql_func_binary.reference b/tests/queries/0_stateless/02366_kql_func_binary.reference\nindex 6276cd6d8675..360c1aa9899d 100644\n--- a/tests/queries/0_stateless/02366_kql_func_binary.reference\n+++ b/tests/queries/0_stateless/02366_kql_func_binary.reference\n@@ -1,7 +1,4 @@\n  -- binary functions\n 4\t7\n-1\n-1\n-1\n 7\t3\n 1\ndiff --git a/tests/queries/0_stateless/02366_kql_func_binary.sql b/tests/queries/0_stateless/02366_kql_func_binary.sql\nindex 824022b564ce..687f3afb5ee5 100644\n--- a/tests/queries/0_stateless/02366_kql_func_binary.sql\n+++ b/tests/queries/0_stateless/02366_kql_func_binary.sql\n@@ -1,8 +1,5 @@\n set dialect='kusto';\n print ' -- binary functions';\n print binary_and(4,7), binary_or(4,7);\n-print binary_shift_left(1, 1) == binary_shift_left(1, 65);\n-print binary_shift_right(2, 1) == binary_shift_right(2, 65);\n-print binary_shift_right(binary_shift_left(1, 65), 65) == 1;\n print binary_xor(2, 5), bitset_count_ones(42);\n print bitset_count_ones(binary_shift_left(binary_and(4,7), 1));\ndiff --git a/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql b/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql\nindex 6b2961f05555..91e8624057c4 100644\n--- a/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql\n+++ b/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql\n@@ -10,7 +10,7 @@ DROP TABLE IF EXISTS t1;\n CREATE TABLE t0 (vkey UInt32, pkey UInt32, c0 UInt32) engine = TinyLog;\n CREATE TABLE t1 (vkey UInt32) ENGINE = AggregatingMergeTree  ORDER BY vkey;\n INSERT INTO t0 VALUES (15, 25000, 58);\n-SELECT ref_5.pkey AS c_2_c2392_6 FROM t0 AS ref_5 WHERE 'J[' < multiIf(ref_5.pkey IN ( SELECT 1 ), bitShiftLeft(multiIf(ref_5.c0 > NULL, '1', ')'), 40), NULL);\n+SELECT ref_5.pkey AS c_2_c2392_6 FROM t0 AS ref_5 WHERE 'J[' < multiIf(ref_5.pkey IN ( SELECT 1 ), bitShiftLeft(multiIf(ref_5.c0 > NULL, '1', ')'), 40), NULL); -- { serverError ARGUMENT_OUT_OF_BOUND }\n DROP TABLE t0;\n DROP TABLE t1;\n \ndiff --git a/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.reference b/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.reference\nnew file mode 100644\nindex 000000000000..33b8cd6ee260\n--- /dev/null\n+++ b/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.reference\n@@ -0,0 +1,3 @@\n+-- bitShiftRight\n+-- bitShiftLeft\n+OK\ndiff --git a/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.sql b/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.sql\nnew file mode 100644\nindex 000000000000..aec017536739\n--- /dev/null\n+++ b/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.sql\n@@ -0,0 +1,17 @@\n+SELECT '-- bitShiftRight';\n+SELECT bitShiftRight(1, -1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftRight(toUInt8(1), 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftRight('hola', -1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftRight('hola', 4 * 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftRight(toFixedString('hola', 8), -1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftRight(toFixedString('hola', 8),  8 * 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+\n+SELECT '-- bitShiftLeft';\n+SELECT bitShiftLeft(1, -1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftLeft(toUInt8(1), 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftLeft('hola', -1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftLeft('hola', 4 * 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftLeft(toFixedString('hola', 8), -1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+SELECT bitShiftLeft(toFixedString('hola', 8),  8 * 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }\n+\n+SELECT 'OK';\n\\ No newline at end of file\n",
  "problem_statement": "`bitShiftLeft` may produce unexpected result.\n**Describe what's wrong**\r\n`bitShiftLeft` produces unexpected result.\r\n\r\n**How to reproduce**\r\n\r\n* Which ClickHouse server version to use: `24.3.3.102`\r\n* Which interface to use, if it matters: `MySQL Shell`\r\n* Non-default settings, if any: `distributed_product_mode='allow'`\r\n\r\n* init database:\r\n```sql\r\ncreate database ch_main;\r\nuse ch_main;\r\n\r\n-- sql #1\r\ncreate table t_hwi130st4 ( \r\n  c_wpg Int32 ,\r\n  c_s String ,\r\n  c_i8 String ,\r\n  c_seahk2u Float64 ,\r\n  c_b Float64 ,\r\n  c_w9_4ap Int32 primary key ,\r\n  );\r\n\r\n\r\n-- sql #3\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap) values \r\n  (-1149739257, 'oqo0b9wn0y', 'uwiw', 50.62, 1.9, -56238719), \r\n  (2, 'x', 'yi4n6vrr', 76.98, 9223372036854775807.8, -3), \r\n  (11686210, 'mlp50m', 'tc17pov2', 4294967294.0, 93.15, -1271189987), \r\n  (-1403535781, 'ss75f', 'zf', 3.98, 56.36, 1445090706);\r\n\r\n-- sql #21\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap) values \r\n  (-4, 'k3ab', 'vsi9mlt2f', -0.1, 99.68, -838905824), \r\n  (21797751, 'yiw', 'e707iszq', 256.5, -65537.5, 1545255954), \r\n  (-1173571010, 'u9', 'yh_dsb95d', -4294967295.8, -4294967295.1, -86953426), \r\n  (1084934805, 'tod', 'a52o13ea4', 43.49, -4294967294.9, 1338049738);\r\n\r\n\r\n-- sql #22\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap) values \r\n  (-676988243, 'g', 'fy5bz', 17.61, 96.85, -528458811), \r\n  (-25, 'h6mcbk8', 'pp', 97.23, -18446744073709551614.9, 5), \r\n  (1671090888, 'v945', 'kw', 44.4, 17.83, -1314342888), \r\n  (65536, 'v0zewjo49u', 'askk_1h', 72.48, 81.15, 2);\r\n\r\n\r\n-- sql #23\r\nalter table t_hwi130st4 add column c_skwq8 String;\r\n\r\n-- sql #25\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap, c_skwq8) values \r\n  (-2040837324, 'si8shj', 'b', 41.20, 3.10, 1291544549, 'kx68agni4'), \r\n  (-310404151, '__nc8rsl', 'tqosx0s', 32767.6, 29.14, 752873682, 'v971pfad'), \r\n  (3, 'rdj', 'p5w', 32769.6, -9223372036854775809.1, -486995628, 'hiqsow'), \r\n  (-6, 'gbs780nv', 'u8ojaqgpa', 4.44, 129.0, 1746224505, 't1tzo4w538');\r\n\r\n\r\n-- sql #26\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap, c_skwq8) values \r\n  (-1580788152, 'e', 'w6i', -9223372036854775809.2, 13.32, 962706574, 'tjl7k5r'), \r\n  (3, 'j', 'ix', 88.10, 89.77, -610474587, 'mh_'), \r\n  (1897548408, 'jb', 'ddr9kbf', 54.21, 76.36, -5, 'ditpajx'), \r\n  (441043873, 'wvi16h', 'r', 92.8, 30.88, 2029856608, 'pb4');\r\n\r\n\r\n-- sql #27\r\ninsert into t_hwi130st4 (c_wpg, c_s, c_i8, c_seahk2u, c_b, c_w9_4ap, c_skwq8) values \r\n  (16, 'o6z', 'aujtujgdon', 30.87, 22.11, 259350534, 'ql'), \r\n  (1669987147, 'i4n40ete9', 'kv155wtf', 35.47, 68.80, -1976235388, 'rihep_f57'), \r\n  (-1000436932, 'kkpa29zk_6', 'ksckscqhr5', 9223372036854775807.9, 75.97, 1706844447, 'fsj'), \r\n  (950656369, 'x73x', 'hg938x95r', 70.39, 49.36, -1951482829, 'lbvo843i');\r\n\r\n```\r\n\r\n* Queries to run that lead to an unexpected result\r\n```sql\r\nSELECT\r\n  ref_4.c_w9_4ap,\r\n  bitShiftLeft(ref_4.c_w9_4ap, -2122704019) as c3\r\nFROM t_hwi130st4 as ref_4\r\norder by 1,2\r\n;\r\n```\r\n\r\n**Expected behavior**\r\nprevious SQL produces:\r\n```\r\nmysql> SELECT\r\n    ->   ref_4.c_w9_4ap,\r\n    ->   bitShiftLeft(ref_4.c_w9_4ap, -2122704019) as c3\r\n    -> FROM t_hwi130st4 as ref_4\r\n    -> order by 1,2\r\n    -> ;\r\n+-------------+------+\r\n| c_w9_4ap    | c3   |\r\n+-------------+------+\r\n| -1976235388 |    0 |\r\n| -1951482829 |    0 |\r\n| -1314342888 |    0 |\r\n| -1271189987 |    0 |\r\n|  -838905824 |    0 |\r\n|  -610474587 |    0 |\r\n|  -528458811 |    0 |\r\n|  -486995628 |    0 |\r\n|   -86953426 |    0 |\r\n|   -56238719 |    0 |\r\n|          -5 |    0 |\r\n|          -3 |    0 |\r\n|           2 |    0 |\r\n|           5 |    0 |\r\n|   259350534 |    0 |\r\n|   752873682 |    0 |\r\n|   962706574 |    0 |\r\n|  1291544549 |    0 |\r\n|  1338049738 |    0 |\r\n|  1445090706 |    0 |\r\n|  1545255954 |    0 |\r\n|  1706844447 |    0 |\r\n|  1746224505 |    0 |\r\n|  2029856608 |    0 |\r\n+-------------+------+\r\n24 rows in set (0.00 sec)\r\nRead 24 rows, 96.00 B in 0.001344 sec., 17857 rows/sec., 69.75 KiB/sec.\r\n```\r\n\r\nWhen using `bitShiftLeft` in a simple select statement:\r\n```\r\nmysql> select bitShiftLeft(cast(2 as Int32), -2122704019), bitShiftLeft(cast(2029856608 as Int32), -2122704019);\r\n+---------------------------------------------+------------------------------------------------------+\r\n| bitShiftLeft(CAST(2, 'Int32'), -2122704019) | bitShiftLeft(CAST(2029856608, 'Int32'), -2122704019) |\r\n+---------------------------------------------+------------------------------------------------------+\r\n|                                       16384 |                                          -1528037376 |\r\n+---------------------------------------------+------------------------------------------------------+\r\n1 row in set (1.80 sec)\r\nRead 1 rows, 1.00 B in 1.802078 sec., 0 rows/sec., 0.55 B/sec.\r\n```\r\nThe results of two queries do not match.\r\n\r\n**Additional context**\r\ndocker compose config:\r\n```\r\nversion: '3.8'\r\nservices:\r\n  clickhouse-01:\r\n    image: \"clickhouse/clickhouse-server:${CHVER:-latest}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-01\r\n    hostname: clickhouse-01\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.1\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-01/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml\r\n      - ${PWD}/fs/volumes/clickhouse-01/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml\r\n    depends_on:\r\n      - clickhouse-keeper-01\r\n      - clickhouse-keeper-02\r\n      - clickhouse-keeper-03\r\n  clickhouse-02:\r\n    image: \"clickhouse/clickhouse-server:${CHVER:-latest}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-02\r\n    hostname: clickhouse-02\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.2\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-02/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml\r\n      - ${PWD}/fs/volumes/clickhouse-02/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml\r\n    depends_on:\r\n      - clickhouse-keeper-01\r\n      - clickhouse-keeper-02\r\n      - clickhouse-keeper-03\r\n  clickhouse-keeper-01:\r\n    image: \"clickhouse/clickhouse-keeper:${CHKVER:-latest-alpine}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-keeper-01\r\n    hostname: clickhouse-keeper-01\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.5\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-keeper-01/etc/clickhouse-keeper/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml\r\n\r\n  clickhouse-keeper-02:\r\n    image: \"clickhouse/clickhouse-keeper:${CHKVER:-latest-alpine}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-keeper-02\r\n    hostname: clickhouse-keeper-02\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.6\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-keeper-02/etc/clickhouse-keeper/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml\r\n\r\n  clickhouse-keeper-03:\r\n    image: \"clickhouse/clickhouse-keeper:${CHKVER:-latest-alpine}\"\r\n    user: \"101:101\"\r\n    container_name: clickhouse-keeper-03\r\n    hostname: clickhouse-keeper-03\r\n    networks:\r\n      cluster_2S_1R:\r\n        ipv4_address: 10.0.7.7\r\n    volumes:\r\n      - ${PWD}/fs/volumes/clickhouse-keeper-03/etc/clickhouse-keeper/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml\r\n\r\nnetworks:\r\n  cluster_2S_1R:\r\n    driver: bridge\r\n    ipam:\r\n      config:\r\n        - subnet: 10.0.7.0/24\r\n          gateway: 10.0.7.254\r\n```\r\n\r\nconfig.xml\r\n```xml\r\n<clickhouse replace=\"true\">\r\n    <logger>\r\n        <level>debug</level>\r\n        <log>/var/log/clickhouse-server/clickhouse-server.log</log>\r\n        <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>\r\n        <size>1000M</size>\r\n        <count>3</count>\r\n    </logger>\r\n    <display_name>cluster_2S_1R node 1</display_name>\r\n    <listen_host>0.0.0.0</listen_host>\r\n    <http_port>8123</http_port>\r\n    <tcp_port>9000</tcp_port>\r\n    <mysql_port>9004</mysql_port>\r\n    <postgresql_port>9005</postgresql_port>\r\n    <user_directories>\r\n        <users_xml>\r\n            <path>users.xml</path>\r\n        </users_xml>\r\n        <local_directory>\r\n            <path>/var/lib/clickhouse/access/</path>\r\n        </local_directory>\r\n    </user_directories>\r\n    <distributed_ddl>\r\n        <path>/clickhouse/task_queue/ddl</path>\r\n    </distributed_ddl>\r\n    <remote_servers>\r\n        <default>\r\n            <shard>\r\n                <replica>\r\n                    <host>clickhouse-01</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n            </shard>\r\n            <shard>\r\n                <replica>\r\n                    <host>clickhouse-02</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n            </shard>\r\n        </default>\r\n    </remote_servers>\r\n    <zookeeper>\r\n        <node>\r\n            <host>clickhouse-keeper-01</host>\r\n            <port>9181</port>\r\n        </node>\r\n        <node>\r\n            <host>clickhouse-keeper-02</host>\r\n            <port>9181</port>\r\n        </node>\r\n        <node>\r\n            <host>clickhouse-keeper-03</host>\r\n            <port>9181</port>\r\n        </node>\r\n    </zookeeper>\r\n    <macros>\r\n        <shard>01</shard>\r\n        <replica>01</replica>\r\n    </macros>\r\n</clickhouse>\r\n```\r\nusers.xml\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<clickhouse replace=\"true\">\r\n    <profiles>\r\n        <default>\r\n            <max_memory_usage>10000000000</max_memory_usage>\r\n            <use_uncompressed_cache>0</use_uncompressed_cache>\r\n            <load_balancing>in_order</load_balancing>\r\n            <log_queries>1</log_queries>\r\n            <distributed_product_mode>allow</distributed_product_mode>\r\n        </default>\r\n    </profiles>\r\n    <users>\r\n        <default>\r\n            <access_management>1</access_management>\r\n            <profile>default</profile>\r\n            <networks>\r\n                <ip>::/0</ip>\r\n            </networks>\r\n            <password></password>\r\n            <quota>default</quota>\r\n            <access_management>1</access_management>\r\n            <named_collection_control>1</named_collection_control>\r\n            <show_named_collections>1</show_named_collections>\r\n            <show_named_collections_secrets>1</show_named_collections_secrets>\r\n        </default>\r\n    </users>\r\n    <quotas>\r\n        <default>\r\n            <interval>\r\n                <duration>3600</duration>\r\n                <queries>0</queries>\r\n                <errors>0</errors>\r\n                <result_rows>0</result_rows>\r\n                <read_rows>0</read_rows>\r\n                <execution_time>0</execution_time>\r\n            </interval>\r\n        </default>\r\n    </quotas>\r\n</clickhouse>\r\n```\r\n\r\n#### about us\r\nWe are the BASS team from the School of Cyber Science and Technology at Beihang University. Our main focus is on system software security, operating systems, and program analysis research, as well as the development of automated program testing frameworks for detecting software defects. Using our self-developed database vulnerability testing tool, we have identified the potential above-mentioned vulnerability that may lead to database logic error.\n",
  "hints_text": "",
  "created_at": "2024-06-28T15:23:40Z"
}