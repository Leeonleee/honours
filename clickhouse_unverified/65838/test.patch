diff --git a/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.reference b/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.reference
index e6a2b2b6aafc..ab832478da08 100644
--- a/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.reference
+++ b/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.reference
@@ -41,8 +41,6 @@ String ConstConst
 38	Hello	00000001
 39	Hello	00000000
 40	Hello	
-41	Hello	
-42	Hello	
 FixedString ConstConst
 1
 0	Hello\0\0\0\0\0	01001000011001010110110001101100011011110000000000000000000000000000000000000000
@@ -92,10 +90,8 @@ FixedString ConstConst
 78	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000001
 79	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 80	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
-81	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 
 String VectorVector
--1	Hello	
 0	Hello	0100100001100101011011000110110001101111
 1	Hello	0010010000110010101101100011011000110111
 7	Hello	0000000010010000110010101101100011011000
@@ -112,8 +108,6 @@ String VectorVector
 33	Hello	00100100
 39	Hello	00000000
 40	Hello	
-41	Hello	
-42	Hello	
 7	Hel	000000001001000011001010
 8	Hel	0100100001100101
 9	Hel	0010010000110010
@@ -125,7 +119,6 @@ String VectorVector
 9	Hel	0010010000110010
 
 FixedString VectorVector
--1	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 0	Hello\0\0\0\0\0	01001000011001010110110001101100011011110000000000000000000000000000000000000000
 1	Hello\0\0\0\0\0	00100100001100101011011000110110001101111000000000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
@@ -142,8 +135,6 @@ FixedString VectorVector
 33	Hello\0\0\0\0\0	00000000000000000000000000000000001001000011001010110110001101100011011110000000
 39	Hello\0\0\0\0\0	00000000000000000000000000000000000000001001000011001010110110001101100011011110
 40	Hello\0\0\0\0\0	00000000000000000000000000000000000000000100100001100101011011000110110001101111
-41	Hello\0\0\0\0\0	00000000000000000000000000000000000000000010010000110010101101100011011000110111
-42	Hello\0\0\0\0\0	00000000000000000000000000000000000000000001001000011001010110110001101100011011
 7	Hel\0\0\0\0\0\0\0	00000000100100001100101011011000000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	00000000010010000110010101101100000000000000000000000000000000000000000000000000
 9	Hel\0\0\0\0\0\0\0	00000000001001000011001010110110000000000000000000000000000000000000000000000000
@@ -171,9 +162,6 @@ String VectorConst
 7	Hello	0000000010010000110010101101100011011000
 7	Hello	0000000010010000110010101101100011011000
 7	Hello	0000000010010000110010101101100011011000
-7	Hello	0000000010010000110010101101100011011000
-7	Hello	0000000010010000110010101101100011011000
-7	Hello	0000000010010000110010101101100011011000
 7	Hel	000000001001000011001010
 7	Hel	000000001001000011001010
 7	Hel	000000001001000011001010
@@ -193,9 +181,6 @@ String VectorConst
 8	Hello	01001000011001010110110001101100
 8	Hello	01001000011001010110110001101100
 8	Hello	01001000011001010110110001101100
-8	Hello	01001000011001010110110001101100
-8	Hello	01001000011001010110110001101100
-8	Hello	01001000011001010110110001101100
 8	Hel	0100100001100101
 8	Hel	0100100001100101
 8	Hel	0100100001100101
@@ -217,9 +202,6 @@ FixedString VectorConst
 7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
-7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
-7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
-7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00000000100100001100101011011000000000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00000000100100001100101011011000000000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00000000100100001100101011011000000000000000000000000000000000000000000000000000
@@ -239,15 +221,11 @@ FixedString VectorConst
 8	Hello\0\0\0\0\0	00000000010010000110010101101100011011000110111100000000000000000000000000000000
 8	Hello\0\0\0\0\0	00000000010010000110010101101100011011000110111100000000000000000000000000000000
 8	Hello\0\0\0\0\0	00000000010010000110010101101100011011000110111100000000000000000000000000000000
-8	Hello\0\0\0\0\0	00000000010010000110010101101100011011000110111100000000000000000000000000000000
-8	Hello\0\0\0\0\0	00000000010010000110010101101100011011000110111100000000000000000000000000000000
-8	Hello\0\0\0\0\0	00000000010010000110010101101100011011000110111100000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	00000000010010000110010101101100000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	00000000010010000110010101101100000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	00000000010010000110010101101100000000000000000000000000000000000000000000000000
 
 String ConstVector
--1	Hello	
 0	Hello	0100100001100101011011000110110001101111
 1	Hello	0010010000110010101101100011011000110111
 7	Hello	0000000010010000110010101101100011011000
@@ -264,12 +242,9 @@ String ConstVector
 33	Hello	00100100
 39	Hello	00000000
 40	Hello	
-41	Hello	
-42	Hello	
 7	Hello	0000000010010000110010101101100011011000
 8	Hello	01001000011001010110110001101100
 9	Hello	00100100001100101011011000110110
--1	Hel	
 0	Hel	010010000110010101101100
 1	Hel	001001000011001010110110
 7	Hel	000000001001000011001010
@@ -280,20 +255,11 @@ String ConstVector
 17	Hel	00100100
 23	Hel	00000000
 24	Hel	
-25	Hel	
-31	Hel	
-32	Hel	
-33	Hel	
-39	Hel	
-40	Hel	
-41	Hel	
-42	Hel	
 7	Hel	000000001001000011001010
 8	Hel	0100100001100101
 9	Hel	0010010000110010
 
 FixedString ConstVector
--1	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 0	Hello\0\0\0\0\0	01001000011001010110110001101100011011110000000000000000000000000000000000000000
 1	Hello\0\0\0\0\0	00100100001100101011011000110110001101111000000000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
@@ -310,12 +276,9 @@ FixedString ConstVector
 33	Hello\0\0\0\0\0	00000000000000000000000000000000001001000011001010110110001101100011011110000000
 39	Hello\0\0\0\0\0	00000000000000000000000000000000000000001001000011001010110110001101100011011110
 40	Hello\0\0\0\0\0	00000000000000000000000000000000000000000100100001100101011011000110110001101111
-41	Hello\0\0\0\0\0	00000000000000000000000000000000000000000010010000110010101101100011011000110111
-42	Hello\0\0\0\0\0	00000000000000000000000000000000000000000001001000011001010110110001101100011011
 7	Hello\0\0\0\0\0	00000000100100001100101011011000110110001101111000000000000000000000000000000000
 8	Hello\0\0\0\0\0	00000000010010000110010101101100011011000110111100000000000000000000000000000000
 9	Hello\0\0\0\0\0	00000000001001000011001010110110001101100011011110000000000000000000000000000000
--1	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 0	Hel\0\0\0\0\0\0\0	01001000011001010110110000000000000000000000000000000000000000000000000000000000
 1	Hel\0\0\0\0\0\0\0	00100100001100101011011000000000000000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00000000100100001100101011011000000000000000000000000000000000000000000000000000
@@ -332,8 +295,6 @@ FixedString ConstVector
 33	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000001001000011001010110110000000000000000000000000
 39	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000001001000011001010110110000000000000000000
 40	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000100100001100101011011000000000000000000
-41	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000010010000110010101101100000000000000000
-42	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000001001000011001010110110000000000000000
 7	Hel\0\0\0\0\0\0\0	00000000100100001100101011011000000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	00000000010010000110010101101100000000000000000000000000000000000000000000000000
 9	Hel\0\0\0\0\0\0\0	00000000001001000011001010110110000000000000000000000000000000000000000000000000
diff --git a/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql b/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql
index 0ee04e408bae..40fccbc89e6e 100644
--- a/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql
+++ b/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql
@@ -41,8 +41,6 @@ SELECT 37,'Hello',bin(bitShiftRight('Hello', 37));
 SELECT 38,'Hello',bin(bitShiftRight('Hello', 38));
 SELECT 39,'Hello',bin(bitShiftRight('Hello', 39));
 SELECT 40,'Hello',bin(bitShiftRight('Hello', 40));
-SELECT 41,'Hello',bin(bitShiftRight('Hello', 41));
-SELECT 42,'Hello',bin(bitShiftRight('Hello', 42));
 
 SELECT 'FixedString ConstConst';
 SELECT bin(toFixedString('Hello', 10)) == bin(bitShiftRight(toFixedString('Hello', 10), 0));
@@ -93,40 +91,39 @@ SELECT 77,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 1
 SELECT 78,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 78));
 SELECT 79,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 79));
 SELECT 80,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 80));
-SELECT 81,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 81));
 
 DROP TABLE IF EXISTS test_bit_shift_right_string_integer;
 
 CREATE TABLE test_bit_shift_right_string_integer (str String, fixedStr FixedString(10), id Int64) engine=Log;
 
-INSERT INTO test_bit_shift_right_string_integer VALUES('Hello','Hello',-1)('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hello','Hello',41),('Hello','Hello',42),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);
+INSERT INTO test_bit_shift_right_string_integer VALUES('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);
 
-SELECT bin(bitShiftRight('Hello', 42));  --A blank line
+SELECT bin(bitShiftRight('Hello', 40));  --A blank line
 SELECT 'String VectorVector';
 SELECT id as shift_right_bit,str as arg,bin(bitShiftRight(str, id)) as string_res FROM test_bit_shift_right_string_integer;
 SELECT id as shift_right_bit,str as arg,bin(bitShiftRight(str, id)) as string_res FROM test_bit_shift_right_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));
 
-SELECT bin(bitShiftRight('Hello', 42));
+SELECT bin(bitShiftRight('Hello', 40));
 SELECT 'FixedString VectorVector';
 SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, id)) as fixed_string_res FROM test_bit_shift_right_string_integer;
 SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, id)) as fixed_string_res FROM test_bit_shift_right_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));
 
-SELECT bin(bitShiftRight('Hello', 42));  --A blank line
+SELECT bin(bitShiftRight('Hello', 40));  --A blank line
 SELECT 'String VectorConst';
 SELECT 7 as shift_right_bit,str as arg,bin(bitShiftRight(str, 7)) as string_res FROM test_bit_shift_right_string_integer;
 SELECT 8 as shift_right_bit,str as arg,bin(bitShiftRight(str, 8)) as string_res FROM test_bit_shift_right_string_integer;
 
-SELECT bin(bitShiftRight('Hello', 42));  --A blank line
+SELECT bin(bitShiftRight('Hello', 40));  --A blank line
 SELECT 'FixedString VectorConst';
 SELECT 7 as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, 7)) as fixed_string_res FROM test_bit_shift_right_string_integer;
 SELECT 8 as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, 8)) as fixed_string_res FROM test_bit_shift_right_string_integer;
 
-SELECT bin(bitShiftRight('Hello', 42));  --A blank line
+SELECT bin(bitShiftRight('Hello', 40));  --A blank line
 SELECT 'String ConstVector';
 SELECT id as shift_right_bit,'Hello' as arg,bin(bitShiftRight('Hello', id)) as string_res FROM test_bit_shift_right_string_integer;
-SELECT id as shift_right_bit,'Hel' as arg,bin(bitShiftRight('Hel', id)) as string_res FROM test_bit_shift_right_string_integer;
+SELECT id as shift_right_bit,'Hel' as arg,bin(bitShiftRight('Hel', id)) as string_res FROM test_bit_shift_right_string_integer WHERE id <= 8 * 3;
 
-SELECT bin(bitShiftRight('Hello', 42));  --A blank line
+SELECT bin(bitShiftRight('Hello', 40));  --A blank line
 SELECT 'FixedString ConstVector';
 SELECT id as shift_right_bit,toFixedString('Hello', 10) as arg,bin(bitShiftRight(toFixedString('Hello', 10), id)) as fixed_string_res FROM test_bit_shift_right_string_integer;
 SELECT id as shift_right_bit,toFixedString('Hel', 10) as arg,bin(bitShiftRight(toFixedString('Hel', 10), id)) as fixed_string_res FROM test_bit_shift_right_string_integer;
diff --git a/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.reference b/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.reference
index ff5a09c0d481..a20c44bbb9af 100644
--- a/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.reference
+++ b/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.reference
@@ -41,8 +41,6 @@ String ConstConst
 38	Hello	00010010000110010101101100011011000110111100000000000000000000000000000000000000
 39	Hello	00100100001100101011011000110110001101111000000000000000000000000000000000000000
 40	Hello	
-41	Hello	
-42	Hello	
 FixedString ConstConst
 1
 0	Hello\0\0\0\0\0	01001000011001010110110001101100011011110000000000000000000000000000000000000000
@@ -92,10 +90,8 @@ FixedString ConstConst
 78	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 79	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 80	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
-81	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 
 String VectorVector
--1	Hello	
 0	Hello	0100100001100101011011000110110001101111
 1	Hello	000000001001000011001010110110001101100011011110
 7	Hello	001001000011001010110110001101100011011110000000
@@ -112,8 +108,6 @@ String VectorVector
 33	Hello	00000000100100001100101011011000110110001101111000000000000000000000000000000000
 39	Hello	00100100001100101011011000110110001101111000000000000000000000000000000000000000
 40	Hello	
-41	Hello	
-42	Hello	
 7	Hel	00100100001100101011011000000000
 8	Hel	01001000011001010110110000000000
 9	Hel	0000000010010000110010101101100000000000
@@ -125,7 +119,6 @@ String VectorVector
 9	Hel	0000000010010000110010101101100000000000
 
 FixedString VectorVector
--1	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 0	Hello\0\0\0\0\0	01001000011001010110110001101100011011110000000000000000000000000000000000000000
 1	Hello\0\0\0\0\0	10010000110010101101100011011000110111100000000000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
@@ -142,8 +135,6 @@ FixedString VectorVector
 33	Hello\0\0\0\0\0	11011110000000000000000000000000000000000000000000000000000000000000000000000000
 39	Hello\0\0\0\0\0	10000000000000000000000000000000000000000000000000000000000000000000000000000000
 40	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
-41	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
-42	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00110010101101100000000000000000000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	01100101011011000000000000000000000000000000000000000000000000000000000000000000
 9	Hel\0\0\0\0\0\0\0	11001010110110000000000000000000000000000000000000000000000000000000000000000000
@@ -171,9 +162,6 @@ String VectorConst
 7	Hello	001001000011001010110110001101100011011110000000
 7	Hello	001001000011001010110110001101100011011110000000
 7	Hello	001001000011001010110110001101100011011110000000
-7	Hello	001001000011001010110110001101100011011110000000
-7	Hello	001001000011001010110110001101100011011110000000
-7	Hello	001001000011001010110110001101100011011110000000
 7	Hel	00100100001100101011011000000000
 7	Hel	00100100001100101011011000000000
 7	Hel	00100100001100101011011000000000
@@ -193,9 +181,6 @@ String VectorConst
 8	Hello	010010000110010101101100011011000110111100000000
 8	Hello	010010000110010101101100011011000110111100000000
 8	Hello	010010000110010101101100011011000110111100000000
-8	Hello	010010000110010101101100011011000110111100000000
-8	Hello	010010000110010101101100011011000110111100000000
-8	Hello	010010000110010101101100011011000110111100000000
 8	Hel	01001000011001010110110000000000
 8	Hel	01001000011001010110110000000000
 8	Hel	01001000011001010110110000000000
@@ -217,9 +202,6 @@ FixedString VectorConst
 7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
-7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
-7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
-7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00110010101101100000000000000000000000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00110010101101100000000000000000000000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00110010101101100000000000000000000000000000000000000000000000000000000000000000
@@ -239,15 +221,11 @@ FixedString VectorConst
 8	Hello\0\0\0\0\0	01100101011011000110110001101111000000000000000000000000000000000000000000000000
 8	Hello\0\0\0\0\0	01100101011011000110110001101111000000000000000000000000000000000000000000000000
 8	Hello\0\0\0\0\0	01100101011011000110110001101111000000000000000000000000000000000000000000000000
-8	Hello\0\0\0\0\0	01100101011011000110110001101111000000000000000000000000000000000000000000000000
-8	Hello\0\0\0\0\0	01100101011011000110110001101111000000000000000000000000000000000000000000000000
-8	Hello\0\0\0\0\0	01100101011011000110110001101111000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	01100101011011000000000000000000000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	01100101011011000000000000000000000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	01100101011011000000000000000000000000000000000000000000000000000000000000000000
 
 String ConstVector
--1	Hello	
 0	Hello	0100100001100101011011000110110001101111
 1	Hello	000000001001000011001010110110001101100011011110
 7	Hello	001001000011001010110110001101100011011110000000
@@ -264,12 +242,9 @@ String ConstVector
 33	Hello	00000000100100001100101011011000110110001101111000000000000000000000000000000000
 39	Hello	00100100001100101011011000110110001101111000000000000000000000000000000000000000
 40	Hello	
-41	Hello	
-42	Hello	
 7	Hello	001001000011001010110110001101100011011110000000
 8	Hello	010010000110010101101100011011000110111100000000
 9	Hello	00000000100100001100101011011000110110001101111000000000
--1	Hel	
 0	Hel	010010000110010101101100
 1	Hel	00000000100100001100101011011000
 7	Hel	00100100001100101011011000000000
@@ -280,20 +255,11 @@ String ConstVector
 17	Hel	000000001001000011001010110110000000000000000000
 23	Hel	001001000011001010110110000000000000000000000000
 24	Hel	
-25	Hel	
-31	Hel	
-32	Hel	
-33	Hel	
-39	Hel	
-40	Hel	
-41	Hel	
-42	Hel	
 7	Hel	00100100001100101011011000000000
 8	Hel	01001000011001010110110000000000
 9	Hel	0000000010010000110010101101100000000000
 
 FixedString ConstVector
--1	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 0	Hello\0\0\0\0\0	01001000011001010110110001101100011011110000000000000000000000000000000000000000
 1	Hello\0\0\0\0\0	10010000110010101101100011011000110111100000000000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
@@ -310,12 +276,9 @@ FixedString ConstVector
 33	Hello\0\0\0\0\0	11011110000000000000000000000000000000000000000000000000000000000000000000000000
 39	Hello\0\0\0\0\0	10000000000000000000000000000000000000000000000000000000000000000000000000000000
 40	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
-41	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
-42	Hello\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 7	Hello\0\0\0\0\0	00110010101101100011011000110111100000000000000000000000000000000000000000000000
 8	Hello\0\0\0\0\0	01100101011011000110110001101111000000000000000000000000000000000000000000000000
 9	Hello\0\0\0\0\0	11001010110110001101100011011110000000000000000000000000000000000000000000000000
--1	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 0	Hel\0\0\0\0\0\0\0	01001000011001010110110000000000000000000000000000000000000000000000000000000000
 1	Hel\0\0\0\0\0\0\0	10010000110010101101100000000000000000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00110010101101100000000000000000000000000000000000000000000000000000000000000000
@@ -332,8 +295,6 @@ FixedString ConstVector
 33	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 39	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 40	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
-41	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
-42	Hel\0\0\0\0\0\0\0	00000000000000000000000000000000000000000000000000000000000000000000000000000000
 7	Hel\0\0\0\0\0\0\0	00110010101101100000000000000000000000000000000000000000000000000000000000000000
 8	Hel\0\0\0\0\0\0\0	01100101011011000000000000000000000000000000000000000000000000000000000000000000
 9	Hel\0\0\0\0\0\0\0	11001010110110000000000000000000000000000000000000000000000000000000000000000000
diff --git a/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql b/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql
index 5c7a9901daea..a8e66eda2811 100644
--- a/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql
+++ b/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql
@@ -41,8 +41,6 @@ SELECT 37,'Hello',bin(bitShiftLeft('Hello', 37));
 SELECT 38,'Hello',bin(bitShiftLeft('Hello', 38));
 SELECT 39,'Hello',bin(bitShiftLeft('Hello', 39));
 SELECT 40,'Hello',bin(bitShiftLeft('Hello', 40));
-SELECT 41,'Hello',bin(bitShiftLeft('Hello', 41));
-SELECT 42,'Hello',bin(bitShiftLeft('Hello', 42));
 
 SELECT 'FixedString ConstConst';
 SELECT bin(toFixedString('Hello', 10)) == bin(bitShiftLeft(toFixedString('Hello', 10), 0));
@@ -93,40 +91,39 @@ SELECT 77,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10
 SELECT 78,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 78));
 SELECT 79,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 79));
 SELECT 80,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 80));
-SELECT 81,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 81));
 
 DROP TABLE IF EXISTS test_bit_shift_left_string_integer;
 
 CREATE TABLE test_bit_shift_left_string_integer (str String, fixedStr FixedString(10), id Int64) engine=Log;
 
-INSERT INTO test_bit_shift_left_string_integer VALUES('Hello','Hello',-1)('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hello','Hello',41),('Hello','Hello',42),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);
+INSERT INTO test_bit_shift_left_string_integer VALUES('Hello','Hello',0),('Hello','Hello',1),('Hello','Hello',7),('Hello','Hello',8),('Hello','Hello',9),('Hello','Hello',15),('Hello','Hello',16),('Hello','Hello',17),('Hello','Hello',23),('Hello','Hello',24),('Hello','Hello',25),('Hello','Hello',31),('Hello','Hello',32),('Hello','Hello',33),('Hello','Hello',39),('Hello','Hello',40),('Hel','Hel',7),('Hel','Hel',8),('Hel','Hel',9);
 
-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line
+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line
 SELECT 'String VectorVector';
 SELECT id as shift_right_bit,str as arg,bin(bitShiftLeft(str, id)) as string_res FROM test_bit_shift_left_string_integer;
 SELECT id as shift_right_bit,str as arg,bin(bitShiftLeft(str, id)) as string_res FROM test_bit_shift_left_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));
 
-SELECT bin(bitShiftLeft('Hello', 42));
+SELECT bin(bitShiftLeft('Hello', 40));
 SELECT 'FixedString VectorVector';
 SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, id)) as fixed_string_res FROM test_bit_shift_left_string_integer;
 SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, id)) as fixed_string_res FROM test_bit_shift_left_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));
 
-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line
+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line
 SELECT 'String VectorConst';
 SELECT 7 as shift_right_bit,str as arg,bin(bitShiftLeft(str, 7)) as string_res FROM test_bit_shift_left_string_integer;
 SELECT 8 as shift_right_bit,str as arg,bin(bitShiftLeft(str, 8)) as string_res FROM test_bit_shift_left_string_integer;
 
-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line
+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line
 SELECT 'FixedString VectorConst';
 SELECT 7 as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, 7)) as fixed_string_res FROM test_bit_shift_left_string_integer;
 SELECT 8 as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, 8)) as fixed_string_res FROM test_bit_shift_left_string_integer;
 
-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line
+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line
 SELECT 'String ConstVector';
 SELECT id as shift_right_bit,'Hello' as arg,bin(bitShiftLeft('Hello', id)) as string_res FROM test_bit_shift_left_string_integer;
-SELECT id as shift_right_bit,'Hel' as arg,bin(bitShiftLeft('Hel', id)) as string_res FROM test_bit_shift_left_string_integer;
+SELECT id as shift_right_bit,'Hel' as arg,bin(bitShiftLeft('Hel', id)) as string_res FROM test_bit_shift_left_string_integer WHERE id <= 8 * 3;
 
-SELECT bin(bitShiftLeft('Hello', 42));  --A blank line
+SELECT bin(bitShiftLeft('Hello', 40));  --A blank line
 SELECT 'FixedString ConstVector';
 SELECT id as shift_right_bit,toFixedString('Hello', 10) as arg,bin(bitShiftLeft(toFixedString('Hello', 10), id)) as fixed_string_res FROM test_bit_shift_left_string_integer;
 SELECT id as shift_right_bit,toFixedString('Hel', 10) as arg,bin(bitShiftLeft(toFixedString('Hel', 10), id)) as fixed_string_res FROM test_bit_shift_left_string_integer;
diff --git a/tests/queries/0_stateless/02366_kql_func_binary.reference b/tests/queries/0_stateless/02366_kql_func_binary.reference
index 6276cd6d8675..360c1aa9899d 100644
--- a/tests/queries/0_stateless/02366_kql_func_binary.reference
+++ b/tests/queries/0_stateless/02366_kql_func_binary.reference
@@ -1,7 +1,4 @@
  -- binary functions
 4	7
-1
-1
-1
 7	3
 1
diff --git a/tests/queries/0_stateless/02366_kql_func_binary.sql b/tests/queries/0_stateless/02366_kql_func_binary.sql
index 824022b564ce..687f3afb5ee5 100644
--- a/tests/queries/0_stateless/02366_kql_func_binary.sql
+++ b/tests/queries/0_stateless/02366_kql_func_binary.sql
@@ -1,8 +1,5 @@
 set dialect='kusto';
 print ' -- binary functions';
 print binary_and(4,7), binary_or(4,7);
-print binary_shift_left(1, 1) == binary_shift_left(1, 65);
-print binary_shift_right(2, 1) == binary_shift_right(2, 65);
-print binary_shift_right(binary_shift_left(1, 65), 65) == 1;
 print binary_xor(2, 5), bitset_count_ones(42);
 print bitset_count_ones(binary_shift_left(binary_and(4,7), 1));
diff --git a/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql b/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql
index 6b2961f05555..91e8624057c4 100644
--- a/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql
+++ b/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql
@@ -10,7 +10,7 @@ DROP TABLE IF EXISTS t1;
 CREATE TABLE t0 (vkey UInt32, pkey UInt32, c0 UInt32) engine = TinyLog;
 CREATE TABLE t1 (vkey UInt32) ENGINE = AggregatingMergeTree  ORDER BY vkey;
 INSERT INTO t0 VALUES (15, 25000, 58);
-SELECT ref_5.pkey AS c_2_c2392_6 FROM t0 AS ref_5 WHERE 'J[' < multiIf(ref_5.pkey IN ( SELECT 1 ), bitShiftLeft(multiIf(ref_5.c0 > NULL, '1', ')'), 40), NULL);
+SELECT ref_5.pkey AS c_2_c2392_6 FROM t0 AS ref_5 WHERE 'J[' < multiIf(ref_5.pkey IN ( SELECT 1 ), bitShiftLeft(multiIf(ref_5.c0 > NULL, '1', ')'), 40), NULL); -- { serverError ARGUMENT_OUT_OF_BOUND }
 DROP TABLE t0;
 DROP TABLE t1;
 
diff --git a/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.reference b/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.reference
new file mode 100644
index 000000000000..33b8cd6ee260
--- /dev/null
+++ b/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.reference
@@ -0,0 +1,3 @@
+-- bitShiftRight
+-- bitShiftLeft
+OK
diff --git a/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.sql b/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.sql
new file mode 100644
index 000000000000..aec017536739
--- /dev/null
+++ b/tests/queries/0_stateless/03198_bit_shift_throws_error_for_out_of_bounds.sql
@@ -0,0 +1,17 @@
+SELECT '-- bitShiftRight';
+SELECT bitShiftRight(1, -1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftRight(toUInt8(1), 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftRight('hola', -1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftRight('hola', 4 * 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftRight(toFixedString('hola', 8), -1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftRight(toFixedString('hola', 8),  8 * 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+
+SELECT '-- bitShiftLeft';
+SELECT bitShiftLeft(1, -1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftLeft(toUInt8(1), 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftLeft('hola', -1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftLeft('hola', 4 * 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftLeft(toFixedString('hola', 8), -1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+SELECT bitShiftLeft(toFixedString('hola', 8),  8 * 8 + 1); -- { serverError ARGUMENT_OUT_OF_BOUND }
+
+SELECT 'OK';
\ No newline at end of file
