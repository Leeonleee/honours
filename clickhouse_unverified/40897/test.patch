diff --git a/tests/fuzz/all.dict b/tests/fuzz/all.dict
index dff62cd68a74..a147878da9b7 100644
--- a/tests/fuzz/all.dict
+++ b/tests/fuzz/all.dict
@@ -763,7 +763,6 @@
 "MINUTE"
 "MM"
 "mod"
-"modelEvaluate"
 "MODIFY"
 "MODIFY COLUMN"
 "MODIFY ORDER BY"
diff --git a/tests/fuzz/dictionaries/functions.dict b/tests/fuzz/dictionaries/functions.dict
index cbcad3c05da8..b90697f0c3de 100644
--- a/tests/fuzz/dictionaries/functions.dict
+++ b/tests/fuzz/dictionaries/functions.dict
@@ -469,7 +469,6 @@
 "subtractSeconds"
 "alphaTokens"
 "negate"
-"modelEvaluate"
 "file"
 "roundAge"
 "MACStringToOUI"
diff --git a/tests/integration/test_catboost_model_config_reload/__init__.py b/tests/integration/test_catboost_evaluate/__init__.py
similarity index 100%
rename from tests/integration/test_catboost_model_config_reload/__init__.py
rename to tests/integration/test_catboost_evaluate/__init__.py
diff --git a/tests/integration/test_catboost_evaluate/config/models_config.xml b/tests/integration/test_catboost_evaluate/config/models_config.xml
new file mode 100644
index 000000000000..f63df06ee264
--- /dev/null
+++ b/tests/integration/test_catboost_evaluate/config/models_config.xml
@@ -0,0 +1,3 @@
+<clickhouse>
+    <catboost_lib_path>/etc/clickhouse-server/model/libcatboostmodel.so</catboost_lib_path>
+</clickhouse>
diff --git a/tests/integration/test_catboost_evaluate/model/amazon_model.bin b/tests/integration/test_catboost_evaluate/model/amazon_model.bin
new file mode 100644
index 000000000000..4a37fbec3101
Binary files /dev/null and b/tests/integration/test_catboost_evaluate/model/amazon_model.bin differ
diff --git a/tests/integration/test_catboost_model_config_reload/model/libcatboostmodel.so b/tests/integration/test_catboost_evaluate/model/libcatboostmodel.so
similarity index 100%
rename from tests/integration/test_catboost_model_config_reload/model/libcatboostmodel.so
rename to tests/integration/test_catboost_evaluate/model/libcatboostmodel.so
diff --git a/tests/integration/test_catboost_model_config_reload/model/model.bin b/tests/integration/test_catboost_evaluate/model/simple_model.bin
similarity index 100%
rename from tests/integration/test_catboost_model_config_reload/model/model.bin
rename to tests/integration/test_catboost_evaluate/model/simple_model.bin
diff --git a/tests/integration/test_catboost_evaluate/test.py b/tests/integration/test_catboost_evaluate/test.py
new file mode 100644
index 000000000000..a0915977ab6c
--- /dev/null
+++ b/tests/integration/test_catboost_evaluate/test.py
@@ -0,0 +1,402 @@
+import os
+import sys
+import time
+
+import pytest
+
+sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
+
+from helpers.cluster import ClickHouseCluster
+
+cluster = ClickHouseCluster(__file__)
+
+instance = cluster.add_instance(
+    "instance", stay_alive=True, main_configs=["config/models_config.xml"]
+)
+
+
+@pytest.fixture(scope="module")
+def ch_cluster():
+    try:
+        cluster.start()
+
+        os.system(
+            "docker cp {local} {cont_id}:{dist}".format(
+                local=os.path.join(SCRIPT_DIR, "model/."),
+                cont_id=instance.docker_id,
+                dist="/etc/clickhouse-server/model",
+            )
+        )
+        instance.restart_clickhouse()
+
+        yield cluster
+
+    finally:
+        cluster.shutdown()
+
+
+# ---------------------------------------------------------------------------
+# simple_model.bin has 2 float features and 9 categorical features
+
+
+def testConstantFeatures(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    expected = "-1.930268705869267
"
+    assert result == expected
+
+
+def testNonConstantFeatures(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    instance.query("DROP TABLE IF EXISTS T;")
+    instance.query(
+        "CREATE TABLE T(ID UInt32, F1 Float32, F2 Float32, F3 UInt32, F4 UInt32, F5 UInt32, F6 UInt32, F7 UInt32, F8 UInt32, F9 Float32, F10 Float32, F11 Float32) ENGINE MergeTree ORDER BY ID;"
+    )
+    instance.query("INSERT INTO T VALUES(0, 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);")
+
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11) from T;"
+    )
+    expected = "-1.930268705869267
"
+    assert result == expected
+
+    instance.query("DROP TABLE IF EXISTS T;")
+
+
+def testModelPathIsNotAConstString(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    err = instance.query_and_get_error(
+        "select catboostEvaluate(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    assert (
+        "Illegal type UInt8 of first argument of function catboostEvaluate, expected a string"
+        in err
+    )
+
+    instance.query("DROP TABLE IF EXISTS T;")
+    instance.query("CREATE TABLE T(ID UInt32, A String) ENGINE MergeTree ORDER BY ID")
+    instance.query("INSERT INTO T VALUES(0, 'test');")
+    err = instance.query_and_get_error(
+        "select catboostEvaluate(A, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) FROM T;"
+    )
+    assert (
+        "First argument of function catboostEvaluate must be a constant string" in err
+    )
+    instance.query("DROP TABLE IF EXISTS T;")
+
+
+def testWrongNumberOfFeatureArguments(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    err = instance.query_and_get_error(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin');"
+    )
+    assert "Function catboostEvaluate expects at least 2 arguments" in err
+
+    err = instance.query_and_get_error(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1, 2);"
+    )
+    assert (
+        "Number of columns is different with number of features: columns size 2 float features size 2 + cat features size 9"
+        in err
+    )
+
+
+def testFloatFeatureMustBeNumeric(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    err = instance.query_and_get_error(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 'a', 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    assert "Column 1 should be numeric to make float feature" in err
+
+
+def testCategoricalFeatureMustBeNumericOrString(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    err = instance.query_and_get_error(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, tuple(8), 9, 10, 11);"
+    )
+    assert "Column 7 should be numeric or string" in err
+
+
+def testOnLowCardinalityFeatures(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    # same but on domain-compressed data
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', toLowCardinality(1.0), toLowCardinality(2.0), toLowCardinality(3), toLowCardinality(4), toLowCardinality(5), toLowCardinality(6), toLowCardinality(7), toLowCardinality(8), toLowCardinality(9), toLowCardinality(10), toLowCardinality(11));"
+    )
+    expected = "-1.930268705869267
"
+    assert result == expected
+
+
+def testOnNullableFeatures(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', toNullable(1.0), toNullable(2.0), toNullable(3), toNullable(4), toNullable(5), toNullable(6), toNullable(7), toNullable(8), toNullable(9), toNullable(10), toNullable(11));"
+    )
+    expected = "-1.930268705869267
"
+    assert result == expected
+
+    # Actual NULLs are disallowed
+    err = instance.query_and_get_error(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL));"
+    )
+    assert "Column 0 should be numeric to make float feature" in err
+
+
+def testInvalidLibraryPath(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    # temporarily move library elsewhere
+    instance.exec_in_container(
+        [
+            "bash",
+            "-c",
+            "mv /etc/clickhouse-server/model/libcatboostmodel.so /etc/clickhouse-server/model/nonexistant.so",
+        ]
+    )
+
+    err = instance.query_and_get_error(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    assert (
+        "Can't load library /etc/clickhouse-server/model/libcatboostmodel.so: file doesn't exist"
+        in err
+    )
+
+    # restore
+    instance.exec_in_container(
+        [
+            "bash",
+            "-c",
+            "mv /etc/clickhouse-server/model/nonexistant.so /etc/clickhouse-server/model/libcatboostmodel.so",
+        ]
+    )
+
+
+def testInvalidModelPath(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    err = instance.query_and_get_error(
+        "select catboostEvaluate('', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    assert "Can't load model : file doesn't exist" in err
+
+    err = instance.query_and_get_error(
+        "select catboostEvaluate('model_non_existant.bin', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    assert "Can't load model model_non_existant.bin: file doesn't exist" in err
+
+
+def testRecoveryAfterCrash(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    expected = "-1.930268705869267
"
+    assert result == expected
+
+    instance.exec_in_container(
+        ["bash", "-c", "kill -9 `pidof clickhouse-library-bridge`"], user="root"
+    )
+
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    assert result == expected
+
+
+# ---------------------------------------------------------------------------
+# amazon_model.bin has 0 float features and 9 categorical features
+
+
+def testAmazonModelSingleRow(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/amazon_model.bin', 1, 2, 3, 4, 5, 6, 7, 8, 9);"
+    )
+    expected = "0.7774665009089274
"
+    assert result == expected
+
+
+def testAmazonModelManyRows(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    result = instance.query("drop table if exists amazon")
+
+    result = instance.query(
+        "create table amazon ( DATE Date materialized today(), ACTION UInt8, RESOURCE UInt32, MGR_ID UInt32, ROLE_ROLLUP_1 UInt32, ROLE_ROLLUP_2 UInt32, ROLE_DEPTNAME UInt32, ROLE_TITLE UInt32, ROLE_FAMILY_DESC UInt32, ROLE_FAMILY UInt32, ROLE_CODE UInt32) engine = MergeTree order by DATE"
+    )
+
+    result = instance.query(
+        "insert into amazon select number % 256, number, number, number, number, number, number, number, number, number from numbers(7500)"
+    )
+
+    # First compute prediction, then as a very crude way to fingerprint and compare the result: sum and floor
+    # (the focus is to test that the exchange of large result sets between the server and the bridge works)
+    result = instance.query(
+        "SELECT floor(sum(catboostEvaluate('/etc/clickhouse-server/model/amazon_model.bin', RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTNAME, ROLE_TITLE, ROLE_FAMILY_DESC, ROLE_FAMILY, ROLE_CODE))) FROM amazon"
+    )
+
+    expected = "5834
"
+    assert result == expected
+
+    result = instance.query("drop table if exists amazon")
+
+
+def testModelUpdate(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    query = "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+
+    result = instance.query(query)
+    expected = "-1.930268705869267
"
+    assert result == expected
+
+    # simulate an update of the model: temporarily move the amazon model in place of the simple model
+    instance.exec_in_container(
+        [
+            "bash",
+            "-c",
+            "mv /etc/clickhouse-server/model/simple_model.bin /etc/clickhouse-server/model/simple_model.bin.bak",
+        ]
+    )
+    instance.exec_in_container(
+        [
+            "bash",
+            "-c",
+            "mv /etc/clickhouse-server/model/amazon_model.bin /etc/clickhouse-server/model/simple_model.bin",
+        ]
+    )
+
+    # unload simple model
+    result = instance.query(
+        "system reload model '/etc/clickhouse-server/model/simple_model.bin'"
+    )
+
+    # load the simple-model-camouflaged amazon model
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1, 2, 3, 4, 5, 6, 7, 8, 9);"
+    )
+    expected = "0.7774665009089274
"
+    assert result == expected
+
+    # restore
+    instance.exec_in_container(
+        [
+            "bash",
+            "-c",
+            "mv /etc/clickhouse-server/model/simple_model.bin /etc/clickhouse-server/model/amazon_model.bin",
+        ]
+    )
+    instance.exec_in_container(
+        [
+            "bash",
+            "-c",
+            "mv /etc/clickhouse-server/model/simple_model.bin.bak /etc/clickhouse-server/model/simple_model.bin",
+        ]
+    )
+
+
+def testSystemModelsAndModelRefresh(ch_cluster):
+    if instance.is_built_with_memory_sanitizer():
+        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
+
+    result = instance.query("system reload models")
+
+    # check model system view
+    result = instance.query("select * from system.models")
+    expected = ""
+    assert result == expected
+
+    # load simple model
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
+    )
+    expected = "-1.930268705869267
"
+    assert result == expected
+
+    # check model system view with one model loaded
+    result = instance.query("select * from system.models")
+    assert result.count("
") == 1
+    expected = "/etc/clickhouse-server/model/simple_model.bin"
+    assert expected in result
+
+    # load amazon model
+    result = instance.query(
+        "select catboostEvaluate('/etc/clickhouse-server/model/amazon_model.bin', 1, 2, 3, 4, 5, 6, 7, 8, 9);"
+    )
+    expected = "0.7774665009089274
"
+    assert result == expected
+
+    # check model system view with one model loaded
+    result = instance.query("select * from system.models")
+    assert result.count("
") == 2
+    expected = "/etc/clickhouse-server/model/simple_model.bin"
+    assert expected in result
+    expected = "/etc/clickhouse-server/model/amazon_model.bin"
+    assert expected in result
+
+    # unload simple model
+    result = instance.query(
+        "system reload model '/etc/clickhouse-server/model/simple_model.bin'"
+    )
+
+    # check model system view, it should not display the removed model
+    result = instance.query("select * from system.models")
+    assert result.count("
") == 1
+    expected = "/etc/clickhouse-server/model/amazon_model.bin"
+    assert expected in result
diff --git a/tests/integration/test_catboost_model_config_reload/config/catboost_lib.xml b/tests/integration/test_catboost_model_config_reload/config/catboost_lib.xml
deleted file mode 100644
index 7aa06cc99ff3..000000000000
--- a/tests/integration/test_catboost_model_config_reload/config/catboost_lib.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<clickhouse>
-    <catboost_dynamic_library_path>/etc/clickhouse-server/model/libcatboostmodel.so</catboost_dynamic_library_path>
-</clickhouse>
diff --git a/tests/integration/test_catboost_model_config_reload/config/models_config.xml b/tests/integration/test_catboost_model_config_reload/config/models_config.xml
deleted file mode 100644
index 3cbf717bb677..000000000000
--- a/tests/integration/test_catboost_model_config_reload/config/models_config.xml
+++ /dev/null
@@ -1,2 +0,0 @@
-<clickhouse>
-</clickhouse>
diff --git a/tests/integration/test_catboost_model_config_reload/model/model_config.xml b/tests/integration/test_catboost_model_config_reload/model/model_config.xml
deleted file mode 100644
index af9778097fa8..000000000000
--- a/tests/integration/test_catboost_model_config_reload/model/model_config.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<models>
-    <model>
-        <type>catboost</type>
-        <name>model1</name>
-        <path>/etc/clickhouse-server/model/model.bin</path>
-        <lifetime>0</lifetime>
-    </model>
-</models>
diff --git a/tests/integration/test_catboost_model_config_reload/model/model_config2.xml b/tests/integration/test_catboost_model_config_reload/model/model_config2.xml
deleted file mode 100644
index b81120ec9003..000000000000
--- a/tests/integration/test_catboost_model_config_reload/model/model_config2.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<models>
-    <model>
-        <type>catboost</type>
-        <name>model2</name>
-        <path>/etc/clickhouse-server/model/model.bin</path>
-        <lifetime>0</lifetime>
-    </model>
-</models>
diff --git a/tests/integration/test_catboost_model_config_reload/test.py b/tests/integration/test_catboost_model_config_reload/test.py
deleted file mode 100644
index c12c28e23382..000000000000
--- a/tests/integration/test_catboost_model_config_reload/test.py
+++ /dev/null
@@ -1,77 +0,0 @@
-import os
-import sys
-import time
-
-import pytest
-
-sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
-SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
-
-from helpers.cluster import ClickHouseCluster
-
-cluster = ClickHouseCluster(__file__)
-node = cluster.add_instance(
-    "node",
-    stay_alive=True,
-    main_configs=["config/models_config.xml", "config/catboost_lib.xml"],
-)
-
-
-def copy_file_to_container(local_path, dist_path, container_id):
-    os.system(
-        "docker cp {local} {cont_id}:{dist}".format(
-            local=local_path, cont_id=container_id, dist=dist_path
-        )
-    )
-
-
-config = """<clickhouse>
-    <models_config>/etc/clickhouse-server/model/{model_config}</models_config>
-</clickhouse>"""
-
-
-@pytest.fixture(scope="module")
-def started_cluster():
-    try:
-        cluster.start()
-
-        copy_file_to_container(
-            os.path.join(SCRIPT_DIR, "model/."),
-            "/etc/clickhouse-server/model",
-            node.docker_id,
-        )
-        node.restart_clickhouse()
-
-        yield cluster
-
-    finally:
-        cluster.shutdown()
-
-
-def change_config(model_config):
-    node.replace_config(
-        "/etc/clickhouse-server/config.d/models_config.xml",
-        config.format(model_config=model_config),
-    )
-    node.query("SYSTEM RELOAD CONFIG;")
-
-
-def test(started_cluster):
-    if node.is_built_with_memory_sanitizer():
-        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
-
-    # Set config with the path to the first model.
-    change_config("model_config.xml")
-
-    node.query("SELECT modelEvaluate('model1', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);")
-
-    # Change path to the second model in config.
-    change_config("model_config2.xml")
-
-    # Check that the new model is loaded.
-    node.query("SELECT modelEvaluate('model2', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);")
-
-    # Check that the old model was unloaded.
-    node.query_and_get_error(
-        "SELECT modelEvaluate('model1', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);"
-    )
diff --git a/tests/integration/test_catboost_model_first_evaluate/__init__.py b/tests/integration/test_catboost_model_first_evaluate/__init__.py
deleted file mode 100644
index e69de29bb2d1..000000000000
diff --git a/tests/integration/test_catboost_model_first_evaluate/config/models_config.xml b/tests/integration/test_catboost_model_first_evaluate/config/models_config.xml
deleted file mode 100644
index 26f5c4d57f67..000000000000
--- a/tests/integration/test_catboost_model_first_evaluate/config/models_config.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<clickhouse>
-    <catboost_dynamic_library_path>/etc/clickhouse-server/model/libcatboostmodel.so</catboost_dynamic_library_path>
-    <models_config>/etc/clickhouse-server/model/model_config.xml</models_config>
-</clickhouse>
diff --git a/tests/integration/test_catboost_model_first_evaluate/model/libcatboostmodel.so b/tests/integration/test_catboost_model_first_evaluate/model/libcatboostmodel.so
deleted file mode 100755
index 388d9f887b46..000000000000
Binary files a/tests/integration/test_catboost_model_first_evaluate/model/libcatboostmodel.so and /dev/null differ
diff --git a/tests/integration/test_catboost_model_first_evaluate/model/model.bin b/tests/integration/test_catboost_model_first_evaluate/model/model.bin
deleted file mode 100644
index 118e099d1760..000000000000
Binary files a/tests/integration/test_catboost_model_first_evaluate/model/model.bin and /dev/null differ
diff --git a/tests/integration/test_catboost_model_first_evaluate/model/model_config.xml b/tests/integration/test_catboost_model_first_evaluate/model/model_config.xml
deleted file mode 100644
index 2c328167a943..000000000000
--- a/tests/integration/test_catboost_model_first_evaluate/model/model_config.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<models>
-    <model>
-        <type>catboost</type>
-        <name>titanic</name>
-        <path>/etc/clickhouse-server/model/model.bin</path>
-        <lifetime>0</lifetime>
-    </model>
-</models>
diff --git a/tests/integration/test_catboost_model_first_evaluate/test.py b/tests/integration/test_catboost_model_first_evaluate/test.py
deleted file mode 100644
index b15f481c0e9f..000000000000
--- a/tests/integration/test_catboost_model_first_evaluate/test.py
+++ /dev/null
@@ -1,48 +0,0 @@
-import os
-import sys
-import time
-
-import pytest
-
-sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
-SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
-
-from helpers.cluster import ClickHouseCluster
-
-cluster = ClickHouseCluster(__file__)
-node = cluster.add_instance(
-    "node", stay_alive=True, main_configs=["config/models_config.xml"]
-)
-
-
-def copy_file_to_container(local_path, dist_path, container_id):
-    os.system(
-        "docker cp {local} {cont_id}:{dist}".format(
-            local=local_path, cont_id=container_id, dist=dist_path
-        )
-    )
-
-
-@pytest.fixture(scope="module")
-def started_cluster():
-    try:
-        cluster.start()
-
-        copy_file_to_container(
-            os.path.join(SCRIPT_DIR, "model/."),
-            "/etc/clickhouse-server/model",
-            node.docker_id,
-        )
-        node.restart_clickhouse()
-
-        yield cluster
-
-    finally:
-        cluster.shutdown()
-
-
-def test(started_cluster):
-    if node.is_built_with_memory_sanitizer():
-        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
-
-    node.query("select modelEvaluate('titanic', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);")
diff --git a/tests/integration/test_catboost_model_reload/__init__.py b/tests/integration/test_catboost_model_reload/__init__.py
deleted file mode 100644
index e69de29bb2d1..000000000000
diff --git a/tests/integration/test_catboost_model_reload/config/catboost_lib.xml b/tests/integration/test_catboost_model_reload/config/catboost_lib.xml
deleted file mode 100644
index 7aa06cc99ff3..000000000000
--- a/tests/integration/test_catboost_model_reload/config/catboost_lib.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<clickhouse>
-    <catboost_dynamic_library_path>/etc/clickhouse-server/model/libcatboostmodel.so</catboost_dynamic_library_path>
-</clickhouse>
diff --git a/tests/integration/test_catboost_model_reload/config/models_config.xml b/tests/integration/test_catboost_model_reload/config/models_config.xml
deleted file mode 100644
index 84378df0e8f8..000000000000
--- a/tests/integration/test_catboost_model_reload/config/models_config.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<clickhouse>
-    <models_config>/etc/clickhouse-server/model/model_config.xml</models_config>
-</clickhouse>
diff --git a/tests/integration/test_catboost_model_reload/model/conjunction.cbm b/tests/integration/test_catboost_model_reload/model/conjunction.cbm
deleted file mode 100644
index 7b75fb5f8866..000000000000
Binary files a/tests/integration/test_catboost_model_reload/model/conjunction.cbm and /dev/null differ
diff --git a/tests/integration/test_catboost_model_reload/model/disjunction.cbm b/tests/integration/test_catboost_model_reload/model/disjunction.cbm
deleted file mode 100644
index 8145c24637fc..000000000000
Binary files a/tests/integration/test_catboost_model_reload/model/disjunction.cbm and /dev/null differ
diff --git a/tests/integration/test_catboost_model_reload/model/libcatboostmodel.so b/tests/integration/test_catboost_model_reload/model/libcatboostmodel.so
deleted file mode 100755
index 388d9f887b46..000000000000
Binary files a/tests/integration/test_catboost_model_reload/model/libcatboostmodel.so and /dev/null differ
diff --git a/tests/integration/test_catboost_model_reload/model/model_config.xml b/tests/integration/test_catboost_model_reload/model/model_config.xml
deleted file mode 100644
index 7cbda165ce90..000000000000
--- a/tests/integration/test_catboost_model_reload/model/model_config.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<models>
-    <model>
-        <type>catboost</type>
-        <name>model</name>
-        <path>/etc/clickhouse-server/model/model.cbm</path>
-        <lifetime>0</lifetime>
-    </model>
-</models>
diff --git a/tests/integration/test_catboost_model_reload/test.py b/tests/integration/test_catboost_model_reload/test.py
deleted file mode 100644
index 3bf7ca18cddf..000000000000
--- a/tests/integration/test_catboost_model_reload/test.py
+++ /dev/null
@@ -1,132 +0,0 @@
-import os
-import sys
-import time
-
-import pytest
-
-sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
-SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
-
-from helpers.cluster import ClickHouseCluster
-
-cluster = ClickHouseCluster(__file__)
-node = cluster.add_instance(
-    "node",
-    stay_alive=True,
-    main_configs=["config/models_config.xml", "config/catboost_lib.xml"],
-)
-
-
-def copy_file_to_container(local_path, dist_path, container_id):
-    os.system(
-        "docker cp {local} {cont_id}:{dist}".format(
-            local=local_path, cont_id=container_id, dist=dist_path
-        )
-    )
-
-
-@pytest.fixture(scope="module")
-def started_cluster():
-    try:
-        cluster.start()
-
-        copy_file_to_container(
-            os.path.join(SCRIPT_DIR, "model/."),
-            "/etc/clickhouse-server/model",
-            node.docker_id,
-        )
-        node.query("CREATE TABLE binary (x UInt64, y UInt64) ENGINE = TinyLog()")
-        node.query("INSERT INTO binary VALUES (1, 1), (1, 0), (0, 1), (0, 0)")
-
-        node.restart_clickhouse()
-
-        yield cluster
-
-    finally:
-        cluster.shutdown()
-
-
-def test_model_reload(started_cluster):
-    if node.is_built_with_memory_sanitizer():
-        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
-
-    node.exec_in_container(
-        ["bash", "-c", "rm -f /etc/clickhouse-server/model/model.cbm"]
-    )
-    node.exec_in_container(
-        [
-            "bash",
-            "-c",
-            "ln /etc/clickhouse-server/model/conjunction.cbm /etc/clickhouse-server/model/model.cbm",
-        ]
-    )
-    node.query("SYSTEM RELOAD MODEL model")
-
-    result = node.query(
-        """
-        WITH modelEvaluate('model', toFloat64(x), toFloat64(y)) as prediction, exp(prediction) / (1 + exp(prediction)) as probability
-        SELECT if(probability > 0.5, 1, 0) FROM binary;
-        """
-    )
-    assert result == "1
0
0
0
"
-
-    node.exec_in_container(["bash", "-c", "rm /etc/clickhouse-server/model/model.cbm"])
-    node.exec_in_container(
-        [
-            "bash",
-            "-c",
-            "ln /etc/clickhouse-server/model/disjunction.cbm /etc/clickhouse-server/model/model.cbm",
-        ]
-    )
-    node.query("SYSTEM RELOAD MODEL model")
-
-    result = node.query(
-        """
-        WITH modelEvaluate('model', toFloat64(x), toFloat64(y)) as prediction, exp(prediction) / (1 + exp(prediction)) as probability
-        SELECT if(probability > 0.5, 1, 0) FROM binary;
-        """
-    )
-    assert result == "1
1
1
0
"
-
-
-def test_models_reload(started_cluster):
-    if node.is_built_with_memory_sanitizer():
-        pytest.skip("Memory Sanitizer cannot work with third-party shared libraries")
-
-    node.exec_in_container(
-        ["bash", "-c", "rm -f /etc/clickhouse-server/model/model.cbm"]
-    )
-    node.exec_in_container(
-        [
-            "bash",
-            "-c",
-            "ln /etc/clickhouse-server/model/conjunction.cbm /etc/clickhouse-server/model/model.cbm",
-        ]
-    )
-    node.query("SYSTEM RELOAD MODELS")
-
-    result = node.query(
-        """
-        WITH modelEvaluate('model', toFloat64(x), toFloat64(y)) as prediction, exp(prediction) / (1 + exp(prediction)) as probability
-        SELECT if(probability > 0.5, 1, 0) FROM binary;
-        """
-    )
-    assert result == "1
0
0
0
"
-
-    node.exec_in_container(["bash", "-c", "rm /etc/clickhouse-server/model/model.cbm"])
-    node.exec_in_container(
-        [
-            "bash",
-            "-c",
-            "ln /etc/clickhouse-server/model/disjunction.cbm /etc/clickhouse-server/model/model.cbm",
-        ]
-    )
-    node.query("SYSTEM RELOAD MODELS")
-
-    result = node.query(
-        """
-        WITH modelEvaluate('model', toFloat64(x), toFloat64(y)) as prediction, exp(prediction) / (1 + exp(prediction)) as probability
-        SELECT if(probability > 0.5, 1, 0) FROM binary;
-        """
-    )
-    assert result == "1
1
1
0
"
diff --git a/tests/queries/0_stateless/01161_all_system_tables.sh b/tests/queries/0_stateless/01161_all_system_tables.sh
index 9988c1f36252..1d886374c072 100755
--- a/tests/queries/0_stateless/01161_all_system_tables.sh
+++ b/tests/queries/0_stateless/01161_all_system_tables.sh
@@ -16,7 +16,7 @@ function run_selects()
 {
     thread_num=$1
     readarray -t tables_arr < <(${CLICKHOUSE_CLIENT} -q "SELECT database || '.' || name FROM system.tables
-    WHERE database in ('system', 'information_schema', 'INFORMATION_SCHEMA') and name!='zookeeper' and name!='merge_tree_metadata_cache'
+    WHERE database in ('system', 'information_schema', 'INFORMATION_SCHEMA') and name!='zookeeper' and name!='merge_tree_metadata_cache' and name!='models'
     AND sipHash64(name || toString($RAND)) % $THREADS = $thread_num")
 
     for t in "${tables_arr[@]}"
diff --git a/tests/queries/0_stateless/02117_show_create_table_system.reference b/tests/queries/0_stateless/02117_show_create_table_system.reference
index 9e2f676bb55a..d087bb556223 100644
--- a/tests/queries/0_stateless/02117_show_create_table_system.reference
+++ b/tests/queries/0_stateless/02117_show_create_table_system.reference
@@ -364,18 +364,6 @@ CREATE TABLE system.metrics
 )
 ENGINE = SystemMetrics
 COMMENT 'SYSTEM TABLE is built on the fly.'
-CREATE TABLE system.models
-(
-    `name` String,
-    `status` Enum8('NOT_LOADED' = 0, 'LOADED' = 1, 'FAILED' = 2, 'LOADING' = 3, 'FAILED_AND_RELOADING' = 4, 'LOADED_AND_RELOADING' = 5, 'NOT_EXIST' = 6),
-    `origin` String,
-    `type` String,
-    `loading_start_time` DateTime,
-    `loading_duration` Float32,
-    `last_exception` String
-)
-ENGINE = SystemModels
-COMMENT 'SYSTEM TABLE is built on the fly.'
 CREATE TABLE system.mutations
 (
     `database` String,
diff --git a/tests/queries/0_stateless/02117_show_create_table_system.sql b/tests/queries/0_stateless/02117_show_create_table_system.sql
index 9a5726a0780d..8b75ed60eecd 100644
--- a/tests/queries/0_stateless/02117_show_create_table_system.sql
+++ b/tests/queries/0_stateless/02117_show_create_table_system.sql
@@ -45,7 +45,6 @@ show create table macros format TSVRaw;
 show create table merge_tree_settings format TSVRaw;
 show create table merges format TSVRaw;
 show create table metrics format TSVRaw;
-show create table models format TSVRaw;
 show create table mutations format TSVRaw;
 show create table numbers format TSVRaw;
 show create table numbers_mt format TSVRaw;
diff --git a/tests/queries/0_stateless/02413_model_evaluate_smoke.reference b/tests/queries/0_stateless/02413_model_evaluate_smoke.reference
deleted file mode 100644
index e69de29bb2d1..000000000000
diff --git a/tests/queries/0_stateless/02413_model_evaluate_smoke.sql b/tests/queries/0_stateless/02413_model_evaluate_smoke.sql
deleted file mode 100644
index 3b20067abfe7..000000000000
--- a/tests/queries/0_stateless/02413_model_evaluate_smoke.sql
+++ /dev/null
@@ -1,2 +0,0 @@
--- This model does not exist:
-SELECT modelEvaluate('hello', 1, 2, 3); -- { serverError 36 }
diff --git a/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference b/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference
index cbd92d0e8f4f..6e0e41f11b8c 100644
--- a/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference
+++ b/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference
@@ -192,6 +192,7 @@ caseWithExpr
 caseWithExpression
 caseWithoutExpr
 caseWithoutExpression
+catboostEvaluate
 cbrt
 ceil
 char
@@ -475,7 +476,6 @@ min2
 minSampleSizeContinous
 minSampleSizeConversion
 minus
-modelEvaluate
 modulo
 moduloLegacy
 moduloOrZero
