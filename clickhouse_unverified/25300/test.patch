diff --git a/tests/queries/0_stateless/01532_execute_merges_on_single_replica.sql b/tests/queries/0_stateless/01532_execute_merges_on_single_replica.sql
index 2fa89ed3464c..69369321d262 100644
--- a/tests/queries/0_stateless/01532_execute_merges_on_single_replica.sql
+++ b/tests/queries/0_stateless/01532_execute_merges_on_single_replica.sql
@@ -115,7 +115,7 @@ SELECT
     arraySort(groupArrayIf(table, event_type = 'MergeParts')) AS mergers,
     arraySort(groupArrayIf(table, event_type = 'DownloadPart')) AS fetchers
 FROM system.part_log
-WHERE (event_time > (now() - 40))
+WHERE (event_time > (now() - 120))
   AND (table LIKE 'execute\\_on\\_single\\_replica\\_r%')
   AND (part_name NOT LIKE '%\\_0')
   AND (database = currentDatabase())
diff --git a/tests/queries/0_stateless/01913_summing_mt_and_simple_agg_function_with_lc.reference b/tests/queries/0_stateless/01913_summing_mt_and_simple_agg_function_with_lc.reference
new file mode 100644
index 000000000000..b9a964c80d0f
--- /dev/null
+++ b/tests/queries/0_stateless/01913_summing_mt_and_simple_agg_function_with_lc.reference
@@ -0,0 +1,2 @@
+1	x
+1	y
diff --git a/tests/queries/0_stateless/01913_summing_mt_and_simple_agg_function_with_lc.sql b/tests/queries/0_stateless/01913_summing_mt_and_simple_agg_function_with_lc.sql
new file mode 100644
index 000000000000..f4785c963125
--- /dev/null
+++ b/tests/queries/0_stateless/01913_summing_mt_and_simple_agg_function_with_lc.sql
@@ -0,0 +1,21 @@
+drop table if exists smta;
+
+CREATE TABLE smta
+(
+    `k` Int64,
+    `a` AggregateFunction(max, Int64),
+    `city` SimpleAggregateFunction(max, LowCardinality(String))
+)
+ENGINE = SummingMergeTree
+ORDER BY k;
+
+insert into smta(k, city) values (1, 'x');
+
+select k, city from smta;
+
+insert into smta(k, city) values (1, 'y');
+optimize table smta;
+
+select k, city from smta;
+
+drop table if exists smta;
