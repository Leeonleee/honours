diff --git a/tests/queries/0_stateless/01246_extractAllGroups.reference b/tests/queries/0_stateless/01246_extractAllGroups.reference
new file mode 100644
index 000000000000..b3d61c3b8416
--- /dev/null
+++ b/tests/queries/0_stateless/01246_extractAllGroups.reference
@@ -0,0 +1,23 @@
+0 groups, zero matches
+[]
+1 group, multiple matches, String and FixedString
+[['hello','world']]
+[['hello','world']]
+[['hello','world']]
+[['hello','world']]
+[['hello','world']]
+[['hello','world']]
+mutiple groups, multiple matches
+[['abc','def','ghi','"jkl mno"'],['111','222','333','"444 foo bar"']]
+big match
+0	1	0	[]
+260	1	1	[156]
+520	1	3	[156,156,156]
+lots of matches
+0	1	0	0
+260	1	260	260
+520	1	520	520
+lots of groups
+0	100	0	[]
+260	100	2	[1,1]
+520	100	5	[1,1,1,1,1]
diff --git a/tests/queries/0_stateless/01246_extractAllGroups.sql b/tests/queries/0_stateless/01246_extractAllGroups.sql
new file mode 100644
index 000000000000..c199aeafc4af
--- /dev/null
+++ b/tests/queries/0_stateless/01246_extractAllGroups.sql
@@ -0,0 +1,51 @@
+-- error cases
+SELECT extractAllGroups();  --{serverError 42} not enough arguments
+SELECT extractAllGroups('hello');  --{serverError 42} not enough arguments
+SELECT extractAllGroups('hello', 123);  --{serverError 43} invalid argument type
+SELECT extractAllGroups(123, 'world');  --{serverError 43}  invalid argument type
+SELECT extractAllGroups('hello world', '((('); --{serverError 427}  invalid re
+SELECT extractAllGroups('hello world', materialize('\\w+')); --{serverError 44} non-cons needle
+
+SELECT '0 groups, zero matches';
+SELECT extractAllGroups('hello world', '\\w+');
+
+SELECT '1 group, multiple matches, String and FixedString';
+SELECT extractAllGroups('hello world', '(\\w+)');
+SELECT extractAllGroups('hello world', CAST('(\\w+)' as FixedString(5)));
+SELECT extractAllGroups(CAST('hello world' AS FixedString(12)), '(\\w+)');
+SELECT extractAllGroups(CAST('hello world' AS FixedString(12)), CAST('(\\w+)' as FixedString(5)));
+SELECT extractAllGroups(materialize(CAST('hello world' AS FixedString(12))), '(\\w+)');
+SELECT extractAllGroups(materialize(CAST('hello world' AS FixedString(12))), CAST('(\\w+)' as FixedString(5)));
+
+SELECT 'mutiple groups, multiple matches';
+SELECT extractAllGroups('abc=111, def=222, ghi=333 "jkl mno"="444 foo bar"', '("[^"]+"|\\w+)=("[^"]+"|\\w+)');
+
+SELECT 'big match';
+SELECT
+	length(haystack), length(matches), length(matches[1]), arrayMap((x) -> length(x), matches[1])
+FROM (
+	SELECT
+		repeat('abcdefghijklmnopqrstuvwxyz', number * 10) AS haystack,
+		extractAllGroups(haystack, '(abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz)') AS matches
+	FROM numbers(3)
+);
+
+SELECT 'lots of matches';
+SELECT
+	length(haystack), length(matches), length(matches[1]), arrayReduce('sum', arrayMap((x) -> length(x), matches[1]))
+FROM (
+	SELECT
+		repeat('abcdefghijklmnopqrstuvwxyz', number * 10) AS haystack,
+		extractAllGroups(haystack, '(\\w)') AS matches
+	FROM numbers(3)
+);
+
+SELECT 'lots of groups';
+SELECT
+	length(haystack), length(matches), length(matches[1]), arrayMap((x) -> length(x), matches[1])
+FROM (
+	SELECT
+		repeat('abcdefghijklmnopqrstuvwxyz', number * 10) AS haystack,
+		extractAllGroups(haystack, repeat('(\\w)', 100)) AS matches
+	FROM numbers(3)
+);
