You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Syntax Error query exception when number of reused parameters >=2 in Union
### Company or project name

Thread originally started in [JS Driver issue](https://github.com/ClickHouse/clickhouse-js/issues/447#issuecomment-3132186445). 

## TLDR
When a query has more than two parameters that are duplicated across a union the following exception is thrown:

```
SELECT
    {`$1`:String} AS x,
    {`$2`:String} AS y
UNION ALL
SELECT
    {`$1`:String} AS x,
    {`$2`:String} AS y
```

Syntax Error Exception

```
... Expected substitution name (identifier). 
 type: "SYNTAX_ERROR",
 code: "62"
```

### Debugging
```
$ cat foo.mjs
import { createClient } from '@clickhouse/client'

const client = createClient({
  url: process.env.CLICKHOUSE_HOST ?? 'http://localhost:8123/',
  username: process.env.CLICKHOUSE_USER ?? 'default',
  password: process.env.CLICKHOUSE_PASSWORD ?? '',
})

const params = {
	$1: 'bc92f73c-1d2e-4839-b369-1987b44e2b90',
	$2: 1749955122,
};

const resultSet = await client.query({
  query: "SELECT {$1:String} AS x, {$1:String} AS y, {$2:Int32} AS z UNION ALL SELECT {$1:String} AS x, {$1:String} AS y, {$2:Int32} AS z",
  format: 'JSONEachRow', query_params: params
})
const dataset = await resultSet.json()
console.log(dataset)
$ node foo.mjs
node:internal/process/esm_loader:40
      internalBinding('errors').triggerUncaughtException(
                                ^

ClickHouseError: Syntax error: failed at position 9 ($1:String} AS x, {$1:String} AS y, {$2:Int32} AS z UNION ALL SELECT {$1:String} AS x, {$) (line 1, col 9): $1:String} AS x, {$1:String} AS y, {$2:Int32} AS z UNION ALL SELECT {$1:String} AS x, {$1:String} AS y, {$2:Int32} AS z
FORMAT JSONEachRow. Expected substitution name (identifier).
    at parseError (/node_modules/@clickhouse/client-common/dist/error/error.js:38:16)
    at ClientRequest.onResponse (/node_modules/@clickhouse/client/dist/connection/node_base_connection.js:443:107)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
  code: '62',
  type: 'SYNTAX_ERROR'
}
```

Seems to be an issue with multiple parameters in the query when and error handling in the client. The CLI raises the same exception

<img width="1731" height="687" alt="Image" src="https://github.com/user-attachments/assets/a407e558-b9e1-4aa8-8c2b-660ac551a25f" />

It will however allow duplicates if there is a different parameter in the union:

```
$ cat foo.mjs
import { createClient } from '@clickhouse/client'

const client = createClient({
  url: process.env.CLICKHOUSE_HOST ?? 'http://localhost:8123/',
  username: process.env.CLICKHOUSE_USER ?? 'default',
  password: process.env.CLICKHOUSE_PASSWORD ?? '',
})

const params = {
	$1: 'bc92f73c-1d2e-4839-b369-1987b44e2b90',
	$2: 1749955122,
};

const resultSet = await client.query({
  query: "SELECT {$1:String} AS x UNION ALL SELECT {$1:String} AS x",
  format: 'JSONEachRow', query_params: params
})
const dataset = await resultSet.json()
console.log(dataset)
$ node foo.mjs
[
  { x: 'bc92f73c-1d2e-4839-b369-1987b44e2b90' },
  { x: 'bc92f73c-1d2e-4839-b369-1987b44e2b90' }
]
```

and this is ok:

<img width="1158" height="506" alt="Image" src="https://github.com/user-attachments/assets/322e4c2b-79d0-4279-9b58-c2802d9f5b08" />

but CLI doesn't like when you use any parameter more than once:

<img width="1473" height="207" alt="Image" src="https://github.com/user-attachments/assets/dc6a9d4d-e29e-4c96-ba80-c68accea8510" />

but with a foo parameter, it is ok ü§î 

```
SELECT
    {`$1`:String} AS x,
    {foo:String} AS y
UNION ALL
SELECT
    {`$1`:String} AS x,
    {`$1`:String} AS y

Query id: f43a09a2-8208-4285-9c4d-f854ef2c62db

   ‚îå‚îÄx‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄy‚îÄ‚îÄ‚îÄ‚îÄ‚îê
1. ‚îÇ Mark ‚îÇ 2    ‚îÇ
2. ‚îÇ Mark ‚îÇ Mark ‚îÇ
   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

### Describe the unexpected behaviour

reuse of the same parameter in queries e.g.



### Which ClickHouse versions are affected?

CH Cloud version: 25.4

### How to reproduce

```
SELECT
    {`$1`:String} AS x,
    {`$2`:String} AS y
UNION ALL
SELECT
    {`$1`:String} AS x,
    {`$2`:String} AS y
```

### Expected behavior

_No response_

### Error message and/or stacktrace

... Expected substitution name (identifier). 
 type: "SYNTAX_ERROR",
 code: "62"

### Additional context

related to https://github.com/ClickHouse/clickhouse-js/issues/447
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
