{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 57273,
  "instance_id": "ClickHouse__ClickHouse-57273",
  "issue_numbers": [
    "56879"
  ],
  "base_commit": "b38469ddf8b408c02896667f7207cbfcc489896f",
  "patch": "diff --git a/src/Client/ClientBase.cpp b/src/Client/ClientBase.cpp\nindex 9607e989bed0..c9fe038d3b12 100644\n--- a/src/Client/ClientBase.cpp\n+++ b/src/Client/ClientBase.cpp\n@@ -2861,7 +2861,7 @@ void ClientBase::init(int argc, char ** argv)\n \n         (\"interactive\", \"Process queries-file or --query query and start interactive mode\")\n         (\"pager\", po::value<std::string>(), \"Pipe all output into this command (less or similar)\")\n-        (\"max_memory_usage_in_client\", po::value<int>(), \"Set memory limit in client/local server\")\n+        (\"max_memory_usage_in_client\", po::value<std::string>(), \"Set memory limit in client/local server\")\n     ;\n \n     addOptions(options_description);\n@@ -2996,10 +2996,12 @@ void ClientBase::init(int argc, char ** argv)\n     clearPasswordFromCommandLine(argc, argv);\n \n     /// Limit on total memory usage\n-    size_t max_client_memory_usage = config().getInt64(\"max_memory_usage_in_client\", 0 /*default value*/);\n-    if (max_client_memory_usage != 0)\n+    std::string max_client_memory_usage = config().getString(\"max_memory_usage_in_client\", \"0\" /*default value*/);\n+    if (max_client_memory_usage != \"0\")\n     {\n-        total_memory_tracker.setHardLimit(max_client_memory_usage);\n+        UInt64 max_client_memory_usage_int = parseWithSizeSuffix<UInt64>(max_client_memory_usage.c_str(), max_client_memory_usage.length());\n+\n+        total_memory_tracker.setHardLimit(max_client_memory_usage_int);\n         total_memory_tracker.setDescription(\"(total)\");\n         total_memory_tracker.setMetric(CurrentMetrics::MemoryTracking);\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02003_memory_limit_in_client.reference b/tests/queries/0_stateless/02003_memory_limit_in_client.reference\nindex 541b3a18e90c..fae767357c6b 100644\n--- a/tests/queries/0_stateless/02003_memory_limit_in_client.reference\n+++ b/tests/queries/0_stateless/02003_memory_limit_in_client.reference\n@@ -1,1 +1,13 @@\n 60000\n+60000\n+60000\n+60000\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\ndiff --git a/tests/queries/0_stateless/02003_memory_limit_in_client.sh b/tests/queries/0_stateless/02003_memory_limit_in_client.sh\nindex 4017c3771a61..96028f4847ad 100755\n--- a/tests/queries/0_stateless/02003_memory_limit_in_client.sh\n+++ b/tests/queries/0_stateless/02003_memory_limit_in_client.sh\n@@ -6,3 +6,19 @@ CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n \n $CLICKHOUSE_CLIENT --max_memory_usage_in_client=1 -n -q \"SELECT arrayMap(x -> range(x), range(number)) FROM numbers(1000) -- { clientError MEMORY_LIMIT_EXCEEDED }\"\n $CLICKHOUSE_CLIENT --max_memory_usage_in_client=0 -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\"\n+\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='5K' -n -q \"SELECT arrayMap(x -> range(x), range(number)) FROM numbers(1000) -- { clientError MEMORY_LIMIT_EXCEEDED }\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='5k' -n -q \"SELECT arrayMap(x -> range(x), range(number)) FROM numbers(1000) -- { clientError MEMORY_LIMIT_EXCEEDED }\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='1M' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='23G' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='11T' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\"\n+\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='2P' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_INPUT_ASSERTION_FAILED\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='2.1p' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_INPUT_ASSERTION_FAILED\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='10E' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_INPUT_ASSERTION_FAILED\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='10.2e' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_INPUT_ASSERTION_FAILED\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='-1.1T' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_NUMBER\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='-1' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_NUMBER\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='1m' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_INPUT_ASSERTION_FAILED\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='14g' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_INPUT_ASSERTION_FAILED\"\n+$CLICKHOUSE_CLIENT --max_memory_usage_in_client='11t' -n -q \"SELECT * FROM (SELECT * FROM system.numbers LIMIT 600000) as num WHERE num.number=60000\" 2>&1 | grep -c -F \"CANNOT_PARSE_INPUT_ASSERTION_FAILED\"\n",
  "problem_statement": "The `max_memory_usage_in_client` command line option should support a string value with a suffix (K, M, G, etc).\n\n",
  "hints_text": "",
  "created_at": "2023-11-27T18:27:45Z"
}