You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
netloc: std::length_error
Found by `sql-fuzzy` test:

```
SELECT netloc('<\'[%UzO'); 



2020.08.03 22:00:49.106572 [ 27424 ] {e3706a47-572b-4e9b-a5f7-2707a822520e} <Error> executeQuery: std::exception. Code: 1001, type: std::length_error, e.what() = basic_string (version 20.7.1.4266) (from [::1]:58798) (in query: SELECT netloc('<\'[%UzO'); ), Stack trace (when copying this message, always include the lines below):

0. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/exception:129: std::exception::capture() @ 0x17a5a258 in /usr/bin/clickhouse
1. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/exception:109: std::exception::exception() @ 0x17a5a225 in /usr/bin/clickhouse
2. /build/obj-x86_64-linux-gnu/../contrib/libcxx/src/support/runtime/stdexcept_default.ipp:24: std::logic_error::logic_error(char const*) @ 0x251f01a0 in /usr/bin/clickhouse
3. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/stdexcept:153: std::length_error::length_error(char const*) @ 0x17a32137 in /usr/bin/clickhouse
4. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/stdexcept:251: std::__1::__throw_length_error(char const*) @ 0x17a320c9 in /usr/bin/clickhouse
5. ? @ 0x17a31d9b in /usr/bin/clickhouse
6. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/string:1783: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long) @ 0x17a34445 in /usr/bin/clickhouse
7. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/string:1822: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(char const*, unsigned long) @ 0x17a6e69c in /usr/bin/clickhouse
8. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:643: std::__1::enable_if<(sizeof (char8_t)) == (1), void>::type DB::Field::create<char8_t>(char8_t const*, unsigned long) @ 0x1f4f033f in /usr/bin/clickhouse
9. /build/obj-x86_64-linux-gnu/../src/Core/Field.h:312: DB::Field::Field<char8_t>(char8_t const*, unsigned long) @ 0x1f4f0305 in /usr/bin/clickhouse
10. /build/obj-x86_64-linux-gnu/../src/Columns/ColumnString.h:83: DB::ColumnString::operator[](unsigned long) const @ 0x1f52018f in /usr/bin/clickhouse
11. /build/obj-x86_64-linux-gnu/../src/Columns/ColumnConst.h:246: DB::ColumnConst::getField() const @ 0x18a30099 in /usr/bin/clickhouse
12. /build/obj-x86_64-linux-gnu/../src/Core/Block.cpp:502: bool DB::checkBlockStructure<bool>(DB::Block const&, DB::Block const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e798776 in /usr/bin/clickhouse
13. /build/obj-x86_64-linux-gnu/../src/Core/Block.cpp:517: DB::blocksHaveEqualStructure(DB::Block const&, DB::Block const&) @ 0x1e797ca1 in /usr/bin/clickhouse
14. /build/obj-x86_64-linux-gnu/../src/Processors/QueryPlan/QueryPlan.cpp:118: DB::QueryPlan::addStep(std::__1::unique_ptr<DB::IQueryPlanStep, std::__1::default_delete<DB::IQueryPlanStep> >) @ 0x2015d727 in /usr/bin/clickhouse
15. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1641: DB::InterpreterSelectQuery::executeProjection(DB::QueryPlan&, std::__1::shared_ptr<DB::ExpressionActions> const&) @ 0x1effe7df in /usr/bin/clickhouse
16. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1012: DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x1eff6485 in /usr/bin/clickhouse
17. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:472: DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x1eff3d96 in /usr/bin/clickhouse
18. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:183: DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x1f2c0ab8 in /usr/bin/clickhouse
19. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:206: DB::InterpreterSelectWithUnionQuery::execute() @ 0x1f2c0d86 in /usr/bin/clickhouse
20. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:386: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x1f47ccd7 in /usr/bin/clickhouse
21. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:655: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x1f47bcca in /usr/bin/clickhouse
22. /build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:253: DB::TCPHandler::runImpl() @ 0x1fd69bd6 in /usr/bin/clickhouse
23. /build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1213: DB::TCPHandler::run() @ 0x1fd71068 in /usr/bin/clickhouse
24. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x23934d7c in /usr/bin/clickhouse
25. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:114: Poco::Net::TCPServerDispatcher::run() @ 0x2393558c in /usr/bin/clickhouse
26. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x23a77393 in /usr/bin/clickhouse
27. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x23a742cd in /usr/bin/clickhouse
28. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x23a73158 in /usr/bin/clickhouse
29. start_thread @ 0x9669 in /usr/lib/x86_64-linux-gnu/libpthread-2.30.so
30. __clone @ 0x1222b3 in /usr/lib/x86_64-linux-gnu/libc-2.30.so
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
