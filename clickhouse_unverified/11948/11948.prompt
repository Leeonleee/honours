You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Options to turn on fsync on write for some cases.
This feature was ordered by Yandex Cloud.

On decent SSD we can simply fsync every written data part. On slower devices we can support sync of large enough parts in background.

Note that data parts are 100% immutable (in versions 20.3+). If data part was written it's never modified.

1. MergeTree settings to do fsync of data part after background merge of sufficient size:
`min_rows_to_sync_after_merge`
`min_compressed_bytes_to_sync_after_merge`

Note that we also have a setting `min_merge_bytes_to_use_direct_io` but it's only loosely related because it doesn't sync metadata.

2. MergeTree settings to do fsync of data part after fetching from replica:
`min_rows_to_sync_after_fetch`
`min_compressed_bytes_to_sync_after_fetch`

Maybe we should introduce a setting `min_fetch_bytes_to_use_direct_io` and set it to the same default value as `min_merge_bytes_to_use_direct_io`.

3. Sync of merged data part on removal of any of source data parts.
`min_rows_to_sync_before_removing_source`
`min_compressed_bytes_to_sync_before_removing_source`

4. Sync on INSERT. 
The most dangerous option - simply issue fsync for every part files before returning from INSERT.
For ReplicatedMergeTree this step should be done after writing temporary data part on disk. And then, after renaming the directory, additional fsync command should be issued for directory.

5. Options to control sync of directories. It may be or may not be needed depending on filesystem.

References: http://danluu.com/file-consistency/
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
