{
  "repo": "duckdb/duckdb",
  "pull_number": 5158,
  "instance_id": "duckdb__duckdb-5158",
  "issue_numbers": [
    "5149"
  ],
  "base_commit": "80ef5caa5b372f9dd9baeb860a5f024abe96f492",
  "patch": "diff --git a/src/planner/binder/expression/bind_columnref_expression.cpp b/src/planner/binder/expression/bind_columnref_expression.cpp\nindex 3b2d9b9f688f..6f00cde39e08 100644\n--- a/src/planner/binder/expression/bind_columnref_expression.cpp\n+++ b/src/planner/binder/expression/bind_columnref_expression.cpp\n@@ -88,6 +88,7 @@ void ExpressionBinder::QualifyColumnNames(unique_ptr<ParsedExpression> &expr) {\n \t\t\tif (!expr->alias.empty()) {\n \t\t\t\tnew_expr->alias = expr->alias;\n \t\t\t}\n+\t\t\tnew_expr->query_location = colref.query_location;\n \t\t\texpr = move(new_expr);\n \t\t}\n \t\tbreak;\n@@ -258,6 +259,7 @@ BindResult ExpressionBinder::BindExpression(ColumnRefExpression &colref_p, idx_t\n \tif (!expr) {\n \t\treturn BindResult(binder.FormatError(colref_p, error_message));\n \t}\n+\texpr->query_location = colref_p.query_location;\n \n \t// a generated column returns a generated expression, a struct on a column returns a struct extract\n \tif (expr->type != ExpressionType::COLUMN_REF) {\ndiff --git a/src/planner/binder/query_node/bind_select_node.cpp b/src/planner/binder/query_node/bind_select_node.cpp\nindex 9c1e0682c0ab..c080dc0263f7 100644\n--- a/src/planner/binder/query_node/bind_select_node.cpp\n+++ b/src/planner/binder/query_node/bind_select_node.cpp\n@@ -474,10 +474,12 @@ unique_ptr<BoundQueryNode> Binder::BindNode(SelectNode &statement) {\n \t\t} else if (statement.aggregate_handling == AggregateHandling::STANDARD_HANDLING) {\n \t\t\tif (select_binder.HasBoundColumns()) {\n \t\t\t\tauto &bound_columns = select_binder.GetBoundColumns();\n-\t\t\t\tthrow BinderException(\n-\t\t\t\t    FormatError(bound_columns[0].query_location,\n-\t\t\t\t                \"column \\\"%s\\\" must appear in the GROUP BY clause or be used in an aggregate function\",\n-\t\t\t\t                bound_columns[0].name));\n+\t\t\t\tstring error;\n+\t\t\t\terror = \"column \\\"%s\\\" must appear in the GROUP BY clause or must be part of an aggregate function.\";\n+\t\t\t\terror += \"\\nEither add it to the GROUP BY list, or use \\\"ANY_VALUE(%s)\\\" if the exact value of \\\"%s\\\" \"\n+\t\t\t\t         \"is not important.\";\n+\t\t\t\tthrow BinderException(FormatError(bound_columns[0].query_location, error, bound_columns[0].name,\n+\t\t\t\t                                  bound_columns[0].name, bound_columns[0].name));\n \t\t\t}\n \t\t}\n \t}\n",
  "test_patch": "diff --git a/test/sql/error/aggregate_order_by.test b/test/sql/error/aggregate_order_by.test\nnew file mode 100644\nindex 000000000000..cea97b0e4e9c\n--- /dev/null\n+++ b/test/sql/error/aggregate_order_by.test\n@@ -0,0 +1,16 @@\n+# name: test/sql/error/aggregate_order_by.test\n+# description: Use non-aggregated column in the ORDER BY clause\n+# group: [error]\n+\n+statement ok\n+CREATE TABLE lists_tbl AS SELECT i%20 as groups, i AS l FROM range(1000) tmp(i);\n+\n+statement error\n+SELECT COUNT(DISTINCT l) FROM lists_tbl group by groups order by l limit 10;\n+----\n+GROUP BY clause\n+\n+statement error\n+SELECT DISTINCT ON(l) COUNT(DISTINCT l) FROM lists_tbl group by groups;\n+----\n+GROUP BY clause\n",
  "problem_statement": "ORDER BY on problematic column error message needs improvement\n### What happens?\r\n\r\nWhen ordering by a column that is used in an aggregate function, a Binder error is thrown that suggests this should be possible.\r\n```sql\r\nSELECT COUNT(DISTINCT l) FROM lists_tbl group by groups order by l limit 10;\r\n================================================================================\r\nBinder Error: column \"l\" must appear in the GROUP BY clause or be used in an aggregate function\r\n```\r\n\r\nEither this is a bug and this should be possible - or the error message needs improvement, which I suspect is the actual problem.\r\nProbably the error message should read:\r\n```\r\nBinder Error: column \"l\" must appear in the GROUP BY clause or be the result of an aggregate function\r\n```\r\n\r\n\r\n### To Reproduce\r\n\r\n```sql\r\nstatement ok\r\nCREATE TABLE lists_tbl AS SELECT i%20 as groups, [x + i for x in range(5)] AS l FROM range(1000000) tmp(i);\r\n\r\nstatement ok\r\nSELECT COUNT(DISTINCT l) FROM lists_tbl group by groups order by l limit 10;\r\n```\r\n\r\n### OS:\r\n\r\nMacOS\r\n\r\n### DuckDB Version:\r\n\r\nmaster\r\n\r\n### DuckDB Client:\r\n\r\nunittest/cli\r\n\r\n### Full Name:\r\n\r\nThijs Bruineman\r\n\r\n### Affiliation:\r\n\r\nDuckDB Labs\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "",
  "created_at": "2022-11-01T13:07:19Z"
}