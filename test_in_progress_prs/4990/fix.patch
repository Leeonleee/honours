diff --git a/tools/jdbc/src/main/java/org/duckdb/DuckDBConnection.java b/tools/jdbc/src/main/java/org/duckdb/DuckDBConnection.java
index fae4b86c22b0..5dc510b57393 100644
--- a/tools/jdbc/src/main/java/org/duckdb/DuckDBConnection.java
+++ b/tools/jdbc/src/main/java/org/duckdb/DuckDBConnection.java
@@ -35,6 +35,7 @@ public DuckDBConnection(DuckDBDatabase db) throws SQLException {
 		conn_ref = DuckDBNative.duckdb_jdbc_connect(db.db_ref);
 		DuckDBNative.duckdb_jdbc_set_auto_commit(conn_ref, true);
 		this.db = db;
+		db.incrementConnections();
 	}
 	
 	public Statement createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability)
@@ -99,6 +100,7 @@ public synchronized void close() throws SQLException {
 		if (conn_ref != null) {
 			DuckDBNative.duckdb_jdbc_disconnect(conn_ref);
 			conn_ref = null;
+			db.maybeShutdown();
 		}
 		db = null;
 	}
diff --git a/tools/jdbc/src/main/java/org/duckdb/DuckDBDatabase.java b/tools/jdbc/src/main/java/org/duckdb/DuckDBDatabase.java
index 0d018c595af4..02e95a80a280 100644
--- a/tools/jdbc/src/main/java/org/duckdb/DuckDBDatabase.java
+++ b/tools/jdbc/src/main/java/org/duckdb/DuckDBDatabase.java
@@ -4,11 +4,13 @@
 import java.nio.charset.StandardCharsets;
 import java.sql.SQLException;
 import java.util.Properties;
+import java.util.concurrent.atomic.AtomicInteger;
 
 public class DuckDBDatabase {
 
 	protected String url;
 	protected boolean read_only;
+	private AtomicInteger connections;
 
 	public DuckDBDatabase(String url, boolean read_only, Properties props) throws SQLException {
 		if (!url.startsWith("jdbc:duckdb")) {
@@ -21,6 +23,7 @@ public DuckDBDatabase(String url, boolean read_only, Properties props) throws SQ
 		}
 		this.read_only = read_only;
 		db_ref = DuckDBNative.duckdb_jdbc_startup(db_dir.getBytes(StandardCharsets.UTF_8), read_only, props);
+		connections = new AtomicInteger();
 	}
 
 	public void shutdown() {
@@ -39,4 +42,16 @@ protected synchronized void finalize() throws Throwable {
 
 	protected ByteBuffer db_ref;
 
+	void incrementConnections() {
+		this.connections.incrementAndGet();
+	}
+	void maybeShutdown() {
+		if (this.connections.decrementAndGet() == 0) {
+			this.shutdown();
+		}
+	}
+
+	public boolean isShutdown() {
+		return db_ref == null;
+	}
 }
