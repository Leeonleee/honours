diff --git a/data/csv/issue5077.csv b/data/csv/issue5077.csv
new file mode 100644
index 000000000000..01f89ba24360
--- /dev/null
+++ b/data/csv/issue5077.csv
@@ -0,0 +1,1 @@
+a,bc,d,e
\ No newline at end of file
diff --git a/data/csv/issue5077_aligned.csv b/data/csv/issue5077_aligned.csv
new file mode 100644
index 000000000000..69dd1bb7f04d
--- /dev/null
+++ b/data/csv/issue5077_aligned.csv
@@ -0,0 +1,1 @@
+a,bd,e,f
\ No newline at end of file
diff --git a/data/csv/lineitem-carriage.csv b/data/csv/lineitem-carriage.csv
new file mode 100644
index 000000000000..7d3b9e7fe818
--- /dev/null
+++ b/data/csv/lineitem-carriage.csv
@@ -0,0 +1,1 @@
+l_orderkey|l_partkey|l_suppkey|l_linenumber|l_quantity|l_extendedprice|l_discount|l_tax|l_returnflag|l_linestatus|l_shipdate|l_commitdate|l_receiptdate|l_shipinstruct|l_shipmode|l_comment1|1552|93|1|17|24710.35|0.04|0.02|N|O|1996-03-13|1996-02-12|1996-03-22|DELIVER IN PERSON|TRUCK|egular courts above the1|674|75|2|36|56688.12|0.09|0.06|N|O|1996-04-12|1996-02-28|1996-04-20|TAKE BACK RETURN|MAIL|ly final dependencies: slyly bold1|637|38|3|8|12301.04|0.10|0.02|N|O|1996-01-29|1996-03-05|1996-01-31|TAKE BACK RETURN|REG AIR|riously. regular, express dep1|22|48|4|28|25816.56|0.09|0.06|N|O|1996-04-21|1996-03-30|1996-05-16|NONE|AIR|lites. fluffily even de1|241|23|5|24|27389.76|0.10|0.04|N|O|1996-03-30|1996-03-14|1996-04-01|NONE|FOB| pending foxes. slyly re1|157|10|6|32|33828.80|0.07|0.02|N|O|1996-01-30|1996-02-07|1996-02-03|DELIVER IN PERSON|MAIL|arefully slyly ex2|1062|33|1|38|36596.28|0.00|0.05|N|O|1997-01-28|1997-01-14|1997-02-02|TAKE BACK RETURN|RAIL|ven requests. deposits breach a3|43|19|1|45|42436.80|0.06|0.00|R|F|1994-02-02|1994-01-04|1994-02-23|NONE|AIR|ongside of the furiously brave acco3|191|70|2|49|53468.31|0.10|0.00|R|F|1993-11-09|1993-12-20|1993-11-24|TAKE BACK RETURN|RAIL| unusual accounts. eve3|1285|60|3|27|32029.56|0.06|0.07|A|F|1994-01-16|1993-11-22|1994-01-23|DELIVER IN PERSON|SHIP|nal foxes wake.
\ No newline at end of file
diff --git a/src/common/types/date.cpp b/src/common/types/date.cpp
index a0ba5f06a106..20ee08f90c87 100644
--- a/src/common/types/date.cpp
+++ b/src/common/types/date.cpp
@@ -198,6 +198,9 @@ static bool TryConvertDateSpecial(const char *buf, idx_t len, idx_t &pos, const
 			return false;
 		}
 	}
+	if (*special) {
+		return false;
+	}
 	pos = p;
 	return true;
 }
diff --git a/src/execution/operator/persistent/buffered_csv_reader.cpp b/src/execution/operator/persistent/buffered_csv_reader.cpp
index 74e7810e522f..8555042b4b6f 100644
--- a/src/execution/operator/persistent/buffered_csv_reader.cpp
+++ b/src/execution/operator/persistent/buffered_csv_reader.cpp
@@ -217,15 +217,31 @@ struct CSVFileHandle {
 	}
 
 	string ReadLine() {
+		bool carriage_return = false;
 		string result;
 		char buffer[1];
 		while (true) {
-			idx_t tuples_read = Read(buffer, 1);
-			if (tuples_read == 0 || buffer[0] == '
') {
+			idx_t bytes_read = Read(buffer, 1);
+			if (bytes_read == 0) {
+				return result;
+			}
+			if (carriage_return) {
+				if (buffer[0] != '
') {
+					if (!file_handle->CanSeek()) {
+						throw BinderException(
+						    "Carriage return newlines not supported when reading CSV files in which we cannot seek");
+					}
+					file_handle->Seek(file_handle->SeekPosition() - 1);
+					return result;
+				}
+			}
+			if (buffer[0] == '
') {
 				return result;
 			}
 			if (buffer[0] != '\r') {
 				result += buffer[0];
+			} else {
+				carriage_return = true;
 			}
 		}
 	}
