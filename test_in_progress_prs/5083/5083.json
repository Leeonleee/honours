{
  "repo": "duckdb/duckdb",
  "pull_number": 5083,
  "instance_id": "duckdb__duckdb-5083",
  "issue_numbers": [
    "5077",
    "5077"
  ],
  "base_commit": "8ecd292bafce4b856c54ee88744d6c79ab33c8ee",
  "patch": "diff --git a/data/csv/issue5077.csv b/data/csv/issue5077.csv\nnew file mode 100644\nindex 000000000000..01f89ba24360\n--- /dev/null\n+++ b/data/csv/issue5077.csv\n@@ -0,0 +1,1 @@\n+a,b\rc,d,e\n\\ No newline at end of file\ndiff --git a/data/csv/issue5077_aligned.csv b/data/csv/issue5077_aligned.csv\nnew file mode 100644\nindex 000000000000..69dd1bb7f04d\n--- /dev/null\n+++ b/data/csv/issue5077_aligned.csv\n@@ -0,0 +1,1 @@\n+a,b\rd,e,f\n\\ No newline at end of file\ndiff --git a/data/csv/lineitem-carriage.csv b/data/csv/lineitem-carriage.csv\nnew file mode 100644\nindex 000000000000..7d3b9e7fe818\n--- /dev/null\n+++ b/data/csv/lineitem-carriage.csv\n@@ -0,0 +1,1 @@\n+l_orderkey|l_partkey|l_suppkey|l_linenumber|l_quantity|l_extendedprice|l_discount|l_tax|l_returnflag|l_linestatus|l_shipdate|l_commitdate|l_receiptdate|l_shipinstruct|l_shipmode|l_comment\r1|1552|93|1|17|24710.35|0.04|0.02|N|O|1996-03-13|1996-02-12|1996-03-22|DELIVER IN PERSON|TRUCK|egular courts above the\r1|674|75|2|36|56688.12|0.09|0.06|N|O|1996-04-12|1996-02-28|1996-04-20|TAKE BACK RETURN|MAIL|ly final dependencies: slyly bold\r1|637|38|3|8|12301.04|0.10|0.02|N|O|1996-01-29|1996-03-05|1996-01-31|TAKE BACK RETURN|REG AIR|riously. regular, express dep\r1|22|48|4|28|25816.56|0.09|0.06|N|O|1996-04-21|1996-03-30|1996-05-16|NONE|AIR|lites. fluffily even de\r1|241|23|5|24|27389.76|0.10|0.04|N|O|1996-03-30|1996-03-14|1996-04-01|NONE|FOB| pending foxes. slyly re\r1|157|10|6|32|33828.80|0.07|0.02|N|O|1996-01-30|1996-02-07|1996-02-03|DELIVER IN PERSON|MAIL|arefully slyly ex\r2|1062|33|1|38|36596.28|0.00|0.05|N|O|1997-01-28|1997-01-14|1997-02-02|TAKE BACK RETURN|RAIL|ven requests. deposits breach a\r3|43|19|1|45|42436.80|0.06|0.00|R|F|1994-02-02|1994-01-04|1994-02-23|NONE|AIR|ongside of the furiously brave acco\r3|191|70|2|49|53468.31|0.10|0.00|R|F|1993-11-09|1993-12-20|1993-11-24|TAKE BACK RETURN|RAIL| unusual accounts. eve\r3|1285|60|3|27|32029.56|0.06|0.07|A|F|1994-01-16|1993-11-22|1994-01-23|DELIVER IN PERSON|SHIP|nal foxes wake.\r\n\\ No newline at end of file\ndiff --git a/src/common/types/date.cpp b/src/common/types/date.cpp\nindex a0ba5f06a106..20ee08f90c87 100644\n--- a/src/common/types/date.cpp\n+++ b/src/common/types/date.cpp\n@@ -198,6 +198,9 @@ static bool TryConvertDateSpecial(const char *buf, idx_t len, idx_t &pos, const\n \t\t\treturn false;\n \t\t}\n \t}\n+\tif (*special) {\n+\t\treturn false;\n+\t}\n \tpos = p;\n \treturn true;\n }\ndiff --git a/src/execution/operator/persistent/buffered_csv_reader.cpp b/src/execution/operator/persistent/buffered_csv_reader.cpp\nindex 74e7810e522f..8555042b4b6f 100644\n--- a/src/execution/operator/persistent/buffered_csv_reader.cpp\n+++ b/src/execution/operator/persistent/buffered_csv_reader.cpp\n@@ -217,15 +217,31 @@ struct CSVFileHandle {\n \t}\n \n \tstring ReadLine() {\n+\t\tbool carriage_return = false;\n \t\tstring result;\n \t\tchar buffer[1];\n \t\twhile (true) {\n-\t\t\tidx_t tuples_read = Read(buffer, 1);\n-\t\t\tif (tuples_read == 0 || buffer[0] == '\\n') {\n+\t\t\tidx_t bytes_read = Read(buffer, 1);\n+\t\t\tif (bytes_read == 0) {\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t\tif (carriage_return) {\n+\t\t\t\tif (buffer[0] != '\\n') {\n+\t\t\t\t\tif (!file_handle->CanSeek()) {\n+\t\t\t\t\t\tthrow BinderException(\n+\t\t\t\t\t\t    \"Carriage return newlines not supported when reading CSV files in which we cannot seek\");\n+\t\t\t\t\t}\n+\t\t\t\t\tfile_handle->Seek(file_handle->SeekPosition() - 1);\n+\t\t\t\t\treturn result;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (buffer[0] == '\\n') {\n \t\t\t\treturn result;\n \t\t\t}\n \t\t\tif (buffer[0] != '\\r') {\n \t\t\t\tresult += buffer[0];\n+\t\t\t} else {\n+\t\t\t\tcarriage_return = true;\n \t\t\t}\n \t\t}\n \t}\n",
  "test_patch": "diff --git a/test/sql/copy/csv/test_issue5077.test b/test/sql/copy/csv/test_issue5077.test\nnew file mode 100644\nindex 000000000000..baead9f368e5\n--- /dev/null\n+++ b/test/sql/copy/csv/test_issue5077.test\n@@ -0,0 +1,27 @@\n+# name: test/sql/copy/csv/test_issue5077.test\n+# description: Issue #5077: Segfault on malformed CSV with variable length rows and carriage return newlines\n+# group: [csv]\n+\n+query III\n+select * from 'data/csv/issue5077_aligned.csv'\n+----\n+d\te\tfalse\n+\n+query III\n+select * from 'data/csv/issue5077.csv'\n+----\n+c\td\te\n+\n+query IIIIIIIIIIIIIIII\n+select * from 'data/csv/lineitem-carriage.csv';\n+----\n+1\t1552\t93\t1\t17\t24710.35\t0.04\t0.02\tN\tO\t1996-03-13\t1996-02-12\t1996-03-22\tDELIVER IN PERSON\tTRUCK\tegular courts above the\n+1\t674\t75\t2\t36\t56688.12\t0.09\t0.06\tN\tO\t1996-04-12\t1996-02-28\t1996-04-20\tTAKE BACK RETURN\tMAIL\tly final dependencies: slyly bold\n+1\t637\t38\t3\t8\t12301.04\t0.1\t0.02\tN\tO\t1996-01-29\t1996-03-05\t1996-01-31\tTAKE BACK RETURN\tREG AIR\triously. regular, express dep\n+1\t22\t48\t4\t28\t25816.56\t0.09\t0.06\tN\tO\t1996-04-21\t1996-03-30\t1996-05-16\tNONE\tAIR\tlites. fluffily even de\n+1\t241\t23\t5\t24\t27389.76\t0.1\t0.04\tN\tO\t1996-03-30\t1996-03-14\t1996-04-01\tNONE\tFOB\t pending foxes. slyly re\n+1\t157\t10\t6\t32\t33828.8\t0.07\t0.02\tN\tO\t1996-01-30\t1996-02-07\t1996-02-03\tDELIVER IN PERSON\tMAIL\tarefully slyly ex\n+2\t1062\t33\t1\t38\t36596.28\t0.0\t0.05\tN\tO\t1997-01-28\t1997-01-14\t1997-02-02\tTAKE BACK RETURN\tRAIL\tven requests. deposits breach a\n+3\t43\t19\t1\t45\t42436.8\t0.06\t0.0\tR\tF\t1994-02-02\t1994-01-04\t1994-02-23\tNONE\tAIR\tongside of the furiously brave acco\n+3\t191\t70\t2\t49\t53468.31\t0.1\t0.0\tR\tF\t1993-11-09\t1993-12-20\t1993-11-24\tTAKE BACK RETURN\tRAIL\t unusual accounts. eve\n+3\t1285\t60\t3\t27\t32029.56\t0.06\t0.07\tA\tF\t1994-01-16\t1993-11-22\t1994-01-23\tDELIVER IN PERSON\tSHIP\tnal foxes wake.\ndiff --git a/test/sql/types/timestamp/test_infinite_time.test b/test/sql/types/timestamp/test_infinite_time.test\nindex 0d568c2b499a..5acde46c59c1 100644\n--- a/test/sql/types/timestamp/test_infinite_time.test\n+++ b/test/sql/types/timestamp/test_infinite_time.test\n@@ -315,3 +315,15 @@ select\n   subtract(\n     timestamp '1970-01-01',\n     cast('-infinity' as timestamp))\n+\n+statement error\n+SELECT 'e'::TIMESTAMP\n+\n+statement error\n+SELECT 'e'::DATE\n+\n+statement error\n+SELECT 'i'::TIMESTAMP\n+\n+statement error\n+SELECT 'i'::DATE\n",
  "problem_statement": "Segfault on malformed CSV with variable length rows and carriage return newlines\n### What happens?\n\nWe're seeing DuckDB fail with a segmentation fault when ingesting a CSV that has both:\r\n\r\n- variable length rows\r\n- carriage return newlines (`\\r`)\r\n\r\nI apologize for submitting such a ridiculous bug report, but we've actually encountered such a CSV in the wild.\n\n### To Reproduce\n\nThis succeeds:\r\n\r\n```bash\r\n$ echo -n \"a,b\\nc,d,e\" > foo.csv\r\n$ duckdb -c \"select * from 'foo.csv'\"\r\n```\r\n\r\nThis segfaults:\r\n\r\n```bash\r\n$ echo -n \"a,b\\rc,d,e\" > foo.csv\r\n$ duckdb -c \"select * from 'foo.csv'\"\r\n```\n\n### OS:\n\nmacOS 12.5.1\n\n### DuckDB Version:\n\nv0.5.1\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nBenjamin Egelund-M\u00fcller\n\n### Affiliation:\n\nRill Data\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\nSegfault on malformed CSV with variable length rows and carriage return newlines\n### What happens?\n\nWe're seeing DuckDB fail with a segmentation fault when ingesting a CSV that has both:\r\n\r\n- variable length rows\r\n- carriage return newlines (`\\r`)\r\n\r\nI apologize for submitting such a ridiculous bug report, but we've actually encountered such a CSV in the wild.\n\n### To Reproduce\n\nThis succeeds:\r\n\r\n```bash\r\n$ echo -n \"a,b\\nc,d,e\" > foo.csv\r\n$ duckdb -c \"select * from 'foo.csv'\"\r\n```\r\n\r\nThis segfaults:\r\n\r\n```bash\r\n$ echo -n \"a,b\\rc,d,e\" > foo.csv\r\n$ duckdb -c \"select * from 'foo.csv'\"\r\n```\n\n### OS:\n\nmacOS 12.5.1\n\n### DuckDB Version:\n\nv0.5.1\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nBenjamin Egelund-M\u00fcller\n\n### Affiliation:\n\nRill Data\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "In debug mode this trips an assertion \r\n\r\n```\r\nError: INTERNAL Error: Assertion triggered in file \"/Users/hannes/source/duckdb/src/common/types/data_chunk.cpp\" on line 77: index < size()\r\n```\r\n\r\nStack trace\r\n\r\n```\r\n    frame #1: 0x000000010553fddc duckdb`duckdb::DuckDBAssertInternal(condition=false, condition_name=\"index < size()\", file=\"/Users/hannes/source/duckdb/src/common/types/data_chunk.cpp\", linenr=77) at assert.cpp:10:2\r\n    frame #2: 0x0000000104be2d3c duckdb`duckdb::DataChunk::GetValue(this=0x000000016fdf0000, col_idx=0, index=0) const at data_chunk.cpp:77:2\r\n    frame #3: 0x0000000106544160 duckdb`duckdb::BufferedCSVReader::DetectHeader(this=0x0000000119017480, best_sql_types_candidates=size=0, best_header_row=0x000000016fdf0000) at buffered_csv_reader.cpp:1175:38\r\n    frame #4: 0x0000000106527dd8 duckdb`duckdb::BufferedCSVReader::SniffCSV(this=0x0000000119017480, requested_types=size=0) at buffered_csv_reader.cpp:1357:2\r\n    frame #5: 0x0000000106524c98 duckdb`duckdb::BufferedCSVReader::Initialize(this=0x0000000119017480, requested_types=size=0) at buffered_csv_reader.cpp:527:15\r\n```\nIn debug mode this trips an assertion \r\n\r\n```\r\nError: INTERNAL Error: Assertion triggered in file \"/Users/hannes/source/duckdb/src/common/types/data_chunk.cpp\" on line 77: index < size()\r\n```\r\n\r\nStack trace\r\n\r\n```\r\n    frame #1: 0x000000010553fddc duckdb`duckdb::DuckDBAssertInternal(condition=false, condition_name=\"index < size()\", file=\"/Users/hannes/source/duckdb/src/common/types/data_chunk.cpp\", linenr=77) at assert.cpp:10:2\r\n    frame #2: 0x0000000104be2d3c duckdb`duckdb::DataChunk::GetValue(this=0x000000016fdf0000, col_idx=0, index=0) const at data_chunk.cpp:77:2\r\n    frame #3: 0x0000000106544160 duckdb`duckdb::BufferedCSVReader::DetectHeader(this=0x0000000119017480, best_sql_types_candidates=size=0, best_header_row=0x000000016fdf0000) at buffered_csv_reader.cpp:1175:38\r\n    frame #4: 0x0000000106527dd8 duckdb`duckdb::BufferedCSVReader::SniffCSV(this=0x0000000119017480, requested_types=size=0) at buffered_csv_reader.cpp:1357:2\r\n    frame #5: 0x0000000106524c98 duckdb`duckdb::BufferedCSVReader::Initialize(this=0x0000000119017480, requested_types=size=0) at buffered_csv_reader.cpp:527:15\r\n```",
  "created_at": "2022-10-25T09:52:25Z"
}