{
  "repo": "duckdb/duckdb",
  "pull_number": 14308,
  "instance_id": "duckdb__duckdb-14308",
  "issue_numbers": [
    "14249"
  ],
  "base_commit": "7919e4abc5597dc4fbeb5a19dff19ff69b5c4113",
  "patch": "diff --git a/src/core_functions/aggregate/distributive/skew.cpp b/src/core_functions/aggregate/distributive/skew.cpp\nindex 0dcb87db9b0c..ef42dce44d08 100644\n--- a/src/core_functions/aggregate/distributive/skew.cpp\n+++ b/src/core_functions/aggregate/distributive/skew.cpp\n@@ -62,7 +62,7 @@ struct SkewnessOperation {\n \t\t}\n \t\tdouble div = std::sqrt(p);\n \t\tif (div == 0) {\n-\t\t\ttarget = NAN;\n+\t\t\tfinalize_data.ReturnNull();\n \t\t\treturn;\n \t\t}\n \t\tdouble temp1 = std::sqrt(n * (n - 1)) / (n - 2);\ndiff --git a/src/core_functions/aggregate/regression/regr_intercept.cpp b/src/core_functions/aggregate/regression/regr_intercept.cpp\nindex 7f741d22c8e7..a3a117456ad3 100644\n--- a/src/core_functions/aggregate/regression/regr_intercept.cpp\n+++ b/src/core_functions/aggregate/regression/regr_intercept.cpp\n@@ -45,10 +45,6 @@ struct RegrInterceptOperation {\n \t\t\treturn;\n \t\t}\n \t\tRegrSlopeOperation::Finalize<T, RegrSlopeState>(state.slope, target, finalize_data);\n-\t\tif (Value::IsNan(target)) {\n-\t\t\tfinalize_data.ReturnNull();\n-\t\t\treturn;\n-\t\t}\n \t\tauto x_avg = state.sum_x / state.count;\n \t\tauto y_avg = state.sum_y / state.count;\n \t\ttarget = y_avg - target * x_avg;\ndiff --git a/src/include/duckdb/core_functions/aggregate/algebraic/corr.hpp b/src/include/duckdb/core_functions/aggregate/algebraic/corr.hpp\nindex 63cd80fabf2e..0d595b11aa7a 100644\n--- a/src/include/duckdb/core_functions/aggregate/algebraic/corr.hpp\n+++ b/src/include/duckdb/core_functions/aggregate/algebraic/corr.hpp\n@@ -58,7 +58,11 @@ struct CorrOperation {\n \t\t\tif (!Value::DoubleIsFinite(std_y)) {\n \t\t\t\tthrow OutOfRangeException(\"STDDEV_POP for Y is out of range!\");\n \t\t\t}\n-\t\t\ttarget = std_x * std_y != 0 ? cov / (std_x * std_y) : NAN;\n+\t\t\tif (std_x * std_y == 0) {\n+\t\t\t\tfinalize_data.ReturnNull();\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\ttarget = cov / (std_x * std_y);\n \t\t}\n \t}\n \ndiff --git a/src/include/duckdb/core_functions/aggregate/regression/regr_slope.hpp b/src/include/duckdb/core_functions/aggregate/regression/regr_slope.hpp\nindex be397d417605..7010504190a6 100644\n--- a/src/include/duckdb/core_functions/aggregate/regression/regr_slope.hpp\n+++ b/src/include/duckdb/core_functions/aggregate/regression/regr_slope.hpp\n@@ -46,7 +46,11 @@ struct RegrSlopeOperation {\n \t\t\tif (!Value::DoubleIsFinite(var_pop)) {\n \t\t\t\tthrow OutOfRangeException(\"VARPOP is out of range!\");\n \t\t\t}\n-\t\t\ttarget = var_pop != 0 ? cov / var_pop : NAN;\n+\t\t\tif (var_pop == 0) {\n+\t\t\t\tfinalize_data.ReturnNull();\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\ttarget = cov / var_pop;\n \t\t}\n \t}\n \n",
  "test_patch": "diff --git a/test/sql/aggregate/aggregates/test_corr.test b/test/sql/aggregate/aggregates/test_corr.test\nindex 4504f2c570b8..8b391312e384 100644\n--- a/test/sql/aggregate/aggregates/test_corr.test\n+++ b/test/sql/aggregate/aggregates/test_corr.test\n@@ -18,7 +18,7 @@ NULL\n query I\n select corr(1,1)\n ----\n-NAN\n+NULL\n \n statement error\n select corr(*)\ndiff --git a/test/sql/aggregate/aggregates/test_regression.test b/test/sql/aggregate/aggregates/test_regression.test\nindex 4a807c063446..196526459df6 100644\n--- a/test/sql/aggregate/aggregates/test_regression.test\n+++ b/test/sql/aggregate/aggregates/test_regression.test\n@@ -72,7 +72,7 @@ NULL\n query I\n select regr_slope(1,1)\n ----\n-NAN\n+NULL\n \n statement error\n select regr_slope(*)\ndiff --git a/test/sql/aggregate/aggregates/test_skewness.test b/test/sql/aggregate/aggregates/test_skewness.test\nindex 3a21a4673269..ad3cf4c8a352 100644\n--- a/test/sql/aggregate/aggregates/test_skewness.test\n+++ b/test/sql/aggregate/aggregates/test_skewness.test\n@@ -28,7 +28,7 @@ select skewness(*)\n query I\n select skewness (10) from range (5)\n ----\n-NAN\n+NULL\n \n #Empty Table\n query I\ndiff --git a/test/sql/function/list/aggregates/skewness.test b/test/sql/function/list/aggregates/skewness.test\nindex 5be729491cc1..70d75e65ce26 100644\n--- a/test/sql/function/list/aggregates/skewness.test\n+++ b/test/sql/function/list/aggregates/skewness.test\n@@ -19,11 +19,6 @@ CREATE TABLE skew AS SELECT LIST(10) AS i FROM range(5) t1(i)\n query I\n select list_skewness (i) from skew\n ----\n-NAN\n-\n-query I\n-select list_skewness ([1,2])\n-----\n NULL\n \n # out of range\n",
  "problem_statement": "`corr(x, y)` with constant columns should return `NaN`, not `NULL`\n### What happens?\r\n\r\nThe `corr` aggregate should return `NaN` when a column is constant, not `NULL`, same as `0 / 0` returns `NaN` not `NULL` anymore since v1.1.\r\n\r\nEDIT: can't check right now but it should be verified if the same issue exists for `regr_slope`\r\n\r\n\r\n\r\n### To Reproduce\r\n\r\n```sql\r\nSELECT \r\n    corr(x, x)\r\nFROM\r\n    (SELECT 1 AS x UNION ALL SELECT 1 AS x);\r\n````\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 corr(x, x) \u2502\r\n\u2502   double   \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502       NULL \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n### OS:\r\n\r\nLinux\r\n\r\n### DuckDB Version:\r\n\r\n1.1.0\r\n\r\n### DuckDB Client:\r\n\r\nPython\r\n\r\n### Hardware:\r\n\r\nx64\r\n\r\n### Full Name:\r\n\r\nSoeren Wolfers\r\n\r\n### Affiliation:\r\n\r\nG-Research\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a nightly build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nNot applicable - the reproduction does not require a data set\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "",
  "created_at": "2024-10-10T05:57:05Z",
  "modified_files": [
    "src/core_functions/aggregate/distributive/skew.cpp",
    "src/core_functions/aggregate/regression/regr_intercept.cpp",
    "src/include/duckdb/core_functions/aggregate/algebraic/corr.hpp",
    "src/include/duckdb/core_functions/aggregate/regression/regr_slope.hpp"
  ],
  "modified_test_files": [
    "test/sql/aggregate/aggregates/test_corr.test",
    "test/sql/aggregate/aggregates/test_regression.test",
    "test/sql/aggregate/aggregates/test_skewness.test",
    "test/sql/function/list/aggregates/skewness.test"
  ]
}