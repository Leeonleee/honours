You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Named windows should respect scope
### What happens?

Initially raised in https://github.com/duckdb/duckdb/discussions/5607.

Named windows are accessible globally, not just in the CTE that they're used in, and as such window names must also be globally unique. I expected that they would be local to usage (CTE or subquery).

### To Reproduce

This example shows the requirement for global uniqueness, failing because `my_window` was declared twice.

```sql
CREATE TABLE a (id INT);

WITH
  cte_a AS (
    SELECT *
    FROM a
    WINDOW my_window AS ()
  ),
  cte_b AS (
    SELECT *
    FROM a
    WINDOW my_window AS ()
  )

SELECT *
FROM cte_a CROSS JOIN cte_b;
```

This example shows global availability, using a named window from one CTE in another.

```sql
CREATE TABLE a (id INT);

WITH
  cte_a AS (
    SELECT *
    FROM a
    WINDOW my_window AS ()
  ),
  cte_b AS (
    SELECT *, COUNT(*) OVER my_window AS n_rows,
    FROM a
  )

SELECT *
FROM cte_a CROSS JOIN cte_b;
```

### OS:

Ubuntu 22.04.1 LTS

### DuckDB Version:

v0.6.0 2213f9c946

### DuckDB Client:

DuckDB CLI

### Full Name:

Liam O'Boyle

### Affiliation:

Not using DuckDB in a work context (at the moment), but I am employed by https://github.com/raywhite.

### Have you tried this on the latest `master` branch?

- [X] I agree

### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?

- [X] I agree
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
