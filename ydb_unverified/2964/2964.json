{
  "repo": "ydb-platform/ydb",
  "pull_number": 2964,
  "instance_id": "ydb-platform__ydb-2964",
  "issue_numbers": [
    "2523"
  ],
  "base_commit": "ea6a93e9283ce3cd1a6a40034985b4ecdd92e839",
  "patch": "diff --git a/ydb/core/kqp/host/kqp_host.cpp b/ydb/core/kqp/host/kqp_host.cpp\nindex 3064e13a12ef..bc13af0cccc6 100644\n--- a/ydb/core/kqp/host/kqp_host.cpp\n+++ b/ydb/core/kqp/host/kqp_host.cpp\n@@ -1814,6 +1814,8 @@ class TKqpHost : public IKqpHost {\n                 || settingName == \"Warning\"\n                 || settingName == \"UseBlocks\"\n                 || settingName == \"BlockEngine\"\n+                || settingName == \"FilterPushdownOverJoinOptionalSide\"\n+                || settingName == \"DisableFilterPushdownOverJoinOptionalSide\"\n                 ;\n         };\n         auto configProvider = CreateConfigProvider(*TypesCtx, gatewaysConfig, {}, allowSettings);\ndiff --git a/ydb/core/kqp/ut/common/kqp_ut_common.cpp b/ydb/core/kqp/ut/common/kqp_ut_common.cpp\nindex 3542a52a2cdc..eeb915236757 100644\n--- a/ydb/core/kqp/ut/common/kqp_ut_common.cpp\n+++ b/ydb/core/kqp/ut/common/kqp_ut_common.cpp\n@@ -495,7 +495,6 @@ void TKikimrRunner::Initialize(const TKikimrSettings& settings) {\n     // --test-param KQP_LOG_FLAT_TX_SCHEMESHARD=debug\n     SetupLogLevelFromTestParam(NKikimrServices::FLAT_TX_SCHEMESHARD);\n     SetupLogLevelFromTestParam(NKikimrServices::KQP_YQL);\n-    SetupLogLevelFromTestParam(NKikimrServices::KQP_YQL);\n     SetupLogLevelFromTestParam(NKikimrServices::TX_DATASHARD);\n     SetupLogLevelFromTestParam(NKikimrServices::TX_COORDINATOR);\n     SetupLogLevelFromTestParam(NKikimrServices::KQP_COMPUTE);\ndiff --git a/ydb/core/kqp/ut/join/kqp_index_lookup_join_ut.cpp b/ydb/core/kqp/ut/join/kqp_index_lookup_join_ut.cpp\nindex 51937df2ee43..c659b1b0564f 100644\n--- a/ydb/core/kqp/ut/join/kqp_index_lookup_join_ut.cpp\n+++ b/ydb/core/kqp/ut/join/kqp_index_lookup_join_ut.cpp\n@@ -528,7 +528,7 @@ Y_UNIT_TEST_TWIN(LeftJoinSkipNullFilter, StreamLookup) {\n             LEFT JOIN `/Root/Right` AS r\n                 ON l.Fk = r.Key\n             WHERE r.Value IS NOT NULL\n-            ORDER BY l.Value\n+            ORDER BY l.Value, r.Value\n         )\",\n         R\"([\n             [[\"Value1\"];[\"Value21\"]];\ndiff --git a/ydb/core/kqp/ut/join/kqp_join_ut.cpp b/ydb/core/kqp/ut/join/kqp_join_ut.cpp\nindex be6099e51a26..1360d4df206c 100644\n--- a/ydb/core/kqp/ut/join/kqp_join_ut.cpp\n+++ b/ydb/core/kqp/ut/join/kqp_join_ut.cpp\n@@ -89,9 +89,55 @@ static void CreateSampleTables(TSession session) {\n             (\"Name1\", 1001),\n             (\"Name2\", 1002),\n             (\"Name4\", 1004);\n+\n     )\", TTxControl::BeginTx().CommitTx()).GetValueSync().IsSuccess());\n }\n \n+\n+static void CreateLeftJoinSampleTables(TSession session) {\n+    auto res = session.ExecuteSchemeQuery(R\"(\n+        CREATE TABLE `/Root/Join1_1` (\n+            Key1 Int32,\n+            Key2 String,\n+            Fk1 String,\n+            Value String,\n+            PRIMARY KEY (Key1, Key2)\n+        );\n+        CREATE TABLE `/Root/Join1_2` (\n+            Key String,\n+            Value Int32,\n+            PRIMARY KEY (Key)\n+        );\n+\n+        CREATE TABLE `/Root/Join1_3` (\n+            Key String, Value Int32, PRIMARY KEY (Key)\n+        )\n+    )\").ExtractValueSync();\n+    UNIT_ASSERT_C(res.IsSuccess(), res.GetIssues().ToString());\n+\n+    auto res2 = session.ExecuteDataQuery(R\"(\n+        REPLACE INTO `/Root/Join1_1` (Key1, Key2, Fk1, Value) VALUES\n+            (101, \"One\",    NULL,   \"no_right_key_1\"),\n+            (102, \"Two\",   NULL,   \"no_right_key_2\"),\n+            (103, \"Three\", \"Name1\", \"Value1\"),\n+            (104, \"One\", \"Name2\", \"Value2\"),\n+            (104, \"Two\", \"Name2\", \"Value3\"),\n+            (105, \"One\", \"Name3\", \"no_right_key_3\"),\n+            (106, \"One\", \"Name4\", NULL),\n+            (106, \"Two\", \"Name4\", \"Value4\");\n+\n+        REPLACE INTO `/Root/Join1_2` (Key, Value) VALUES\n+            (\"Name1\", 1001),\n+            (\"Name2\", 1002),\n+            (\"Name4\", NULL);\n+\n+        REPLACE INTO `/Root/Join1_3` (Key, Value) VALUES\n+            (\"Name2\", 12345);\n+\n+    )\", TTxControl::BeginTx().CommitTx()).ExtractValueSync();\n+    UNIT_ASSERT_C(res2.IsSuccess(), res2.GetIssues().ToString());\n+}\n+\n static void CreateRightSemiJoinSampleTables(TSession& session) {\n     UNIT_ASSERT(session.ExecuteSchemeQuery(R\"(\n         CREATE TABLE `/Root/RSJ_SimpleKey_1` (\n@@ -453,6 +499,157 @@ Y_UNIT_TEST_SUITE(KqpJoin) {\n             FormatResultSetYson(result.GetResultSet(0)));\n     }\n \n+    Y_UNIT_TEST(LeftJoinPushdownPredicate_Simple) {\n+        TKikimrRunner kikimr;\n+        auto db = kikimr.GetTableClient();\n+        auto session = db.CreateSession().GetValueSync().GetSession();\n+\n+        CreateSampleTables(session);\n+\n+        auto result = session.ExecuteDataQuery(Q_(R\"(\n+            PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+            SELECT t2.*, t3.Key, t3.Value FROM `/Root/Join1_2` AS t2\n+            LEFT JOIN `/Root/Join1_3` AS t3\n+            ON t2.Fk3 = t3.Key\n+            WHERE t3.Value == 1004;\n+        )\"), TTxControl::BeginTx().CommitTx()).ExtractValueSync();\n+        UNIT_ASSERT_C(result.IsSuccess(), result.GetIssues().ToString());\n+        CompareYson(\n+            R\"([\n+                [[\"Name4\"];[105];[\"Two\"];[\"Value28\"];[\"Name4\"];[1004]]\n+            ])\",\n+            FormatResultSetYson(result.GetResultSet(0))\n+        );\n+    }\n+\n+    Y_UNIT_TEST(LeftJoinPushdownPredicate_NoPushdown) {\n+        TKikimrRunner kikimr;\n+        auto db = kikimr.GetTableClient();\n+        auto session = db.CreateSession().GetValueSync().GetSession();\n+\n+        CreateLeftJoinSampleTables(session);\n+\n+        auto result = session.ExecuteDataQuery(Q_(R\"(\n+            PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+            SELECT t1.Key1, t1.Key2, t1.Fk1, t1.Value, t2.Key, t2.Value FROM `/Root/Join1_2` AS t2\n+            RIGHT JOIN `/Root/Join1_1` AS t1\n+            ON t2.Key = t1.Fk1\n+            WHERE t1.Key1 > 104\n+            ORDER BY t1.Key1, t1.Key2;\n+        )\"), TTxControl::BeginTx().CommitTx()).ExtractValueSync();\n+        UNIT_ASSERT_C(result.IsSuccess(), result.GetIssues().ToString());\n+        CompareYson(\n+            R\"([\n+                [[105];[\"One\"];[\"Name3\"];[\"no_right_key_3\"];#;#];\n+                [[106];[\"One\"];[\"Name4\"];#;[\"Name4\"];#];\n+                [[106];[\"Two\"];[\"Name4\"];[\"Value4\"];[\"Name4\"];#]\n+            ])\",\n+            FormatResultSetYson(result.GetResultSet(0))\n+        );\n+    }\n+\n+    Y_UNIT_TEST(LeftJoinPushdownPredicate_Nulls) {\n+        TKikimrRunner kikimr;\n+        auto db = kikimr.GetTableClient();\n+        auto session = db.CreateSession().GetValueSync().GetSession();\n+\n+        CreateLeftJoinSampleTables(session);\n+        {\n+            auto result = session.ExecuteDataQuery(Q_(R\"(\n+                PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+                SELECT t1.Key1, t1.Key2, t1.Fk1, t1.Value, t2.Key, t2.Value FROM `/Root/Join1_1` AS t1\n+                LEFT JOIN `/Root/Join1_2` AS t2\n+                ON t1.Fk1 = t2.Key\n+                WHERE t2.Value > 1001\n+                ORDER BY t1.Value;\n+            )\"), TTxControl::BeginTx().CommitTx()).ExtractValueSync();\n+            UNIT_ASSERT_C(result.IsSuccess(), result.GetIssues().ToString());\n+            CompareYson(\n+                R\"([\n+                    [[104];[\"One\"];[\"Name2\"];[\"Value2\"];[\"Name2\"];[1002]];\n+                    [[104];[\"Two\"];[\"Name2\"];[\"Value3\"];[\"Name2\"];[1002]]\n+                ])\",\n+                FormatResultSetYson(result.GetResultSet(0))\n+            );\n+        }\n+        {\n+            auto result = session.ExecuteDataQuery(Q_(R\"(\n+                SELECT t1.Fk1, t1.Key1, t1.Key2, t1.Value, t2.Key, t2.Value FROM `/Root/Join1_1` AS t1\n+                LEFT JOIN `/Root/Join1_2` AS t2\n+                ON t1.Fk1 = t2.Key\n+                WHERE t2.Value IS NULL\n+                ORDER BY t1.Key1, t1.Key2;\n+            )\"), TTxControl::BeginTx().CommitTx()).ExtractValueSync();\n+            UNIT_ASSERT_C(result.IsSuccess(), result.GetIssues().ToString());\n+            CompareYson(\n+                R\"([\n+                    [#;[101];[\"One\"];[\"no_right_key_1\"];#;#];\n+                    [#;[102];[\"Two\"];[\"no_right_key_2\"];#;#];\n+                    [[\"Name3\"];[105];[\"One\"];[\"no_right_key_3\"];#;#];\n+                    [[\"Name4\"];[106];[\"One\"];#;[\"Name4\"];#];\n+                    [[\"Name4\"];[106];[\"Two\"];[\"Value4\"];[\"Name4\"];#]\n+                ])\",\n+                FormatResultSetYson(result.GetResultSet(0))\n+            );\n+        }\n+    }\n+\n+     Y_UNIT_TEST(LeftJoinPushdownPredicate_NestedJoin) {\n+        TKikimrRunner kikimr;\n+        auto db = kikimr.GetTableClient();\n+        auto session = db.CreateSession().GetValueSync().GetSession();\n+\n+        CreateLeftJoinSampleTables(session);\n+        {\n+            auto result = session.ExecuteDataQuery(Q_(R\"(\n+                PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+                SELECT t1.Key1, t1.Key2, t1.Fk1, t1.Value, t2.Key, t2.Value, t3.Key, t3.Value\n+                \n+                FROM `/Root/Join1_1` AS t1\n+                LEFT JOIN `/Root/Join1_2` AS t2\n+                ON t1.Fk1 = t2.Key\n+                INNER JOIN `/Root/Join1_3` AS t3\n+                ON t1.Fk1 = t3.Key\n+\n+                WHERE t2.Value > 1001;\n+            )\"), TTxControl::BeginTx().CommitTx()).ExtractValueSync();\n+            UNIT_ASSERT_C(result.IsSuccess(), result.GetIssues().ToString());\n+            CompareYson(\n+                R\"([\n+                    [[104];[\"One\"];[\"Name2\"];[\"Value2\"];[\"Name2\"];[1002];[\"Name2\"];[12345]];\n+                    [[104];[\"Two\"];[\"Name2\"];[\"Value3\"];[\"Name2\"];[1002];[\"Name2\"];[12345]]\n+                ])\",\n+                FormatResultSetYson(result.GetResultSet(0))\n+            );\n+        }\n+        {\n+            auto result = session.ExecuteDataQuery(Q_(R\"(\n+                PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+                SELECT t1.Key1, t1.Key2, t1.Fk1, t1.Value, t2.Key, t2.Value, t3.Key, t3.Value\n+\n+                FROM `/Root/Join1_1` AS t1\n+                CROSS JOIN `/Root/Join1_3` AS t3\n+                LEFT JOIN `/Root/Join1_2` AS t2\n+                ON t1.Fk1 = t2.Key\n+                \n+                WHERE t2.Value > 1001;\n+            )\"), TTxControl::BeginTx().CommitTx()).ExtractValueSync();\n+            UNIT_ASSERT_C(result.IsSuccess(), result.GetIssues().ToString());\n+            CompareYson(\n+                R\"([\n+                    [[104];[\"One\"];[\"Name2\"];[\"Value2\"];[\"Name2\"];[1002];[\"Name2\"];[12345]];\n+                    [[104];[\"Two\"];[\"Name2\"];[\"Value3\"];[\"Name2\"];[1002];[\"Name2\"];[12345]]\n+                ])\",\n+                FormatResultSetYson(result.GetResultSet(0))\n+            );\n+        }\n+    }\n+\n     // join on not key column => Full Scan\n     Y_UNIT_TEST(RightSemiJoin_FullScan) {\n         TKikimrRunner kikimr(SyntaxV1Settings());\n@@ -1333,12 +1530,12 @@ Y_UNIT_TEST_SUITE(KqpJoin) {\n             auto result = session.ExecuteDataQuery(R\"(\n                 --!syntax_v1\n \n-                REPLACE INTO left (Key, Value) VALUES \n+                REPLACE INTO left (Key, Value) VALUES\n                     (1, 10),\n                     (2, 20),\n                     (3, 30);\n \n-                REPLACE INTO right (Key, Value) VALUES \n+                REPLACE INTO right (Key, Value) VALUES\n                     (1, 10),\n                     (2, 200),\n                     (3, 300),\n@@ -1346,7 +1543,7 @@ Y_UNIT_TEST_SUITE(KqpJoin) {\n             )\", TTxControl::BeginTx().CommitTx()).ExtractValueSync();\n             UNIT_ASSERT_VALUES_EQUAL(result.GetStatus(), EStatus::SUCCESS);\n         }\n-        \n+\n         {\n             auto result = session.ExecuteDataQuery(R\"(\n                 --!syntax_v1\ndiff --git a/ydb/library/yql/core/common_opt/yql_co_finalizers.cpp b/ydb/library/yql/core/common_opt/yql_co_finalizers.cpp\nindex 83a6c47c96f6..a7365e8472d2 100644\n--- a/ydb/library/yql/core/common_opt/yql_co_finalizers.cpp\n+++ b/ydb/library/yql/core/common_opt/yql_co_finalizers.cpp\n@@ -23,7 +23,7 @@ IGraphTransformer::TStatus MultiUsageFlatMapOverJoin(const TExprNode::TPtr& node\n     for (auto parent : it->second) {\n         if (auto maybeFlatMap = TMaybeNode<TCoFlatMapBase>(parent)) {\n             auto flatMap = maybeFlatMap.Cast();\n-            auto newParent = FlatMapOverEquiJoin(flatMap, ctx, *optCtx.ParentsMap, true);\n+            auto newParent = FlatMapOverEquiJoin(flatMap, ctx, *optCtx.ParentsMap, true, optCtx.Types->FilterPushdownOverJoinOptionalSide);\n             if (!newParent.Raw()) {\n                 return IGraphTransformer::TStatus::Error;\n             }\ndiff --git a/ydb/library/yql/core/common_opt/yql_co_flow2.cpp b/ydb/library/yql/core/common_opt/yql_co_flow2.cpp\nindex 32e19059bb6c..a0e04b88960a 100644\n--- a/ydb/library/yql/core/common_opt/yql_co_flow2.cpp\n+++ b/ydb/library/yql/core/common_opt/yql_co_flow2.cpp\n@@ -1111,7 +1111,7 @@ void RegisterCoFlowCallables2(TCallableOptimizerMap& map) {\n         TCoFlatMapBase self(node);\n         if (optCtx.IsSingleUsage(self.Input().Ref())) {\n             if (self.Input().Ref().IsCallable(\"EquiJoin\")) {\n-                auto ret = FlatMapOverEquiJoin(self, ctx, *optCtx.ParentsMap, false);\n+                auto ret = FlatMapOverEquiJoin(self, ctx, *optCtx.ParentsMap, false, optCtx.Types->FilterPushdownOverJoinOptionalSide);\n                 if (!ret.Raw()) {\n                     return nullptr;\n                 }\ndiff --git a/ydb/library/yql/core/common_opt/yql_flatmap_over_join.cpp b/ydb/library/yql/core/common_opt/yql_flatmap_over_join.cpp\nindex 031fc6b40287..8c0c540c7005 100644\n--- a/ydb/library/yql/core/common_opt/yql_flatmap_over_join.cpp\n+++ b/ydb/library/yql/core/common_opt/yql_flatmap_over_join.cpp\n@@ -2,6 +2,7 @@\n #include \"yql_co.h\"\n \n #include <ydb/library/yql/core/yql_expr_optimize.h>\n+#include <ydb/library/yql/core/yql_expr_type_annotation.h>\n #include <ydb/library/yql/core/yql_join.h>\n #include <ydb/library/yql/core/yql_opt_utils.h>\n \n@@ -123,6 +124,81 @@ bool IsRequiredAndFilteredSide(const TExprNode::TPtr& joinTree, const TJoinLabel\n     return isFiltered.Defined() && *isFiltered;\n }\n \n+TExprNode::TPtr ApplyJoinPredicate(const TExprNode::TPtr& predicate, const TExprNode::TPtr& filterInput, \n+    const TExprNode::TPtr& args, const TJoinLabels& labels, const THashMap<ui32, THashMap<TString, TString>>& aliasedKeys,\n+    const TMap<TStringBuf, TVector<TStringBuf>>& renameMap, bool onlyKeys, \n+    ui32 firstCandidate, ui32 inputIndex, bool ordered, bool substituteWithNulls, TExprContext& ctx\n+) {\n+    return ctx.Builder(predicate->Pos())\n+    .Callable(ordered ? \"OrderedFilter\" : \"Filter\")\n+        .Add(0, filterInput)\n+        .Lambda(1)\n+            .Param(\"row\")\n+            .ApplyPartial(args, predicate).With(0)\n+                .Callable(\"AsStruct\")\n+                    .Do([&](TExprNodeBuilder& parent) -> TExprNodeBuilder& {\n+                        ui32 index = 0;\n+                        const auto& label = labels.Inputs[inputIndex];\n+                        for (auto column : label.EnumerateAllColumns()) {\n+                            TVector<TString> targetColumns;\n+                            targetColumns.push_back(column);\n+                            if (onlyKeys && inputIndex != firstCandidate) {\n+                                if (auto aliasedKey = aliasedKeys.at(inputIndex).FindPtr(column)) {\n+                                    targetColumns[0] = *aliasedKey;\n+                                } else {\n+                                    continue;\n+                                }\n+                            }\n+\n+                            TStringBuf part1;\n+                            TStringBuf part2;\n+                            SplitTableName(column, part1, part2);\n+                            auto memberName = label.MemberName(part1, part2);\n+                            auto memberType = label.FindColumn(part1, part2);\n+                            Y_ENSURE(memberType);\n+                            const TTypeAnnotationNode* optMemberType = ((*memberType)->IsOptionalOrNull()) ? *memberType : ctx.MakeType<TOptionalExprType>(*memberType);\n+\n+                            if (auto renamed = renameMap.FindPtr(targetColumns[0])) {\n+                                if (renamed->empty()) {\n+                                    continue;\n+                                }\n+\n+                                targetColumns.clear();\n+                                for (auto& r : *renamed) {\n+                                    targetColumns.push_back(TString(r));\n+                                }\n+                            }\n+\n+                            for (auto targetColumn : targetColumns) {\n+                                if (substituteWithNulls) {\n+                                    auto typeNode = ExpandType(predicate->Pos(), *optMemberType, ctx);\n+                                    parent.List(index++)\n+                                        .Atom(0, targetColumn)\n+                                        .Callable(1, \"Nothing\")\n+                                            .Add(0, typeNode)\n+                                        .Seal()\n+                                    .Seal();\n+                                } else {\n+                                    parent.List(index++)\n+                                        .Atom(0, targetColumn)\n+                                        .Callable(1, \"Member\")\n+                                            .Arg(0, \"row\")\n+                                            .Atom(1, memberName)\n+                                        .Seal()\n+                                    .Seal();\n+                                }\n+                            }\n+                        }\n+\n+                        return parent;\n+                    })\n+                .Seal()\n+            .Done().Seal()\n+        .Seal()\n+    .Seal()\n+    .Build();\n+}\n+\n TExprNode::TPtr SingleInputPredicatePushdownOverEquiJoin(TExprNode::TPtr equiJoin, TExprNode::TPtr predicate,\n     const TSet<TStringBuf>& usedFields, TExprNode::TPtr args, const TJoinLabels& labels,\n     ui32 firstCandidate, const TMap<TStringBuf, TVector<TStringBuf>>& renameMap, bool ordered, TExprContext& ctx)\n@@ -207,62 +283,11 @@ TExprNode::TPtr SingleInputPredicatePushdownOverEquiJoin(TExprNode::TPtr equiJoi\n         }\n \n         // then apply predicate\n-        newInput = ctx.Builder(predicate->Pos())\n-            .Callable(ordered ? \"OrderedFilter\" : \"Filter\")\n-                .Add(0, newInput)\n-                .Lambda(1)\n-                    .Param(\"row\")\n-                    .ApplyPartial(args, predicate).With(0)\n-                        .Callable(\"AsStruct\")\n-                            .Do([&](TExprNodeBuilder& parent) -> TExprNodeBuilder& {\n-                                ui32 index = 0;\n-                                const auto& label = labels.Inputs[inputIndex];\n-                                for (auto column : label.EnumerateAllColumns()) {\n-                                    TVector<TString> targetColumns;\n-                                    targetColumns.push_back(column);\n-                                    if (onlyKeys && inputIndex != firstCandidate) {\n-                                        if (auto aliasedKey = aliasedKeys[inputIndex].FindPtr(column)) {\n-                                            targetColumns[0] = *aliasedKey;\n-                                        } else {\n-                                            continue;\n-                                        }\n-                                    }\n-\n-                                    TStringBuf part1;\n-                                    TStringBuf part2;\n-                                    SplitTableName(column, part1, part2);\n-                                    auto memberName = label.MemberName(part1, part2);\n-\n-                                    if (auto renamed = renameMap.FindPtr(targetColumns[0])) {\n-                                        if (renamed->empty()) {\n-                                            continue;\n-                                        }\n-\n-                                        targetColumns.clear();\n-                                        for (auto& r : *renamed) {\n-                                            targetColumns.push_back(TString(r));\n-                                        }\n-                                    }\n-\n-                                    for (auto targetColumn : targetColumns) {\n-                                        parent.List(index++)\n-                                                .Atom(0, targetColumn)\n-                                                .Callable(1, \"Member\")\n-                                                    .Arg(0, \"row\")\n-                                                    .Atom(1, memberName)\n-                                                .Seal()\n-                                            .Seal();\n-                                    }\n-                                }\n-\n-                                return parent;\n-                            })\n-                        .Seal()\n-                    .Done().Seal()\n-                .Seal()\n-            .Seal()\n-            .Build();\n-\n+        newInput = ApplyJoinPredicate(\n+            predicate, /*filterInput=*/newInput, args, labels, aliasedKeys, renameMap, onlyKeys,\n+            firstCandidate, inputIndex, ordered, /*substituteWithNulls=*/false, ctx\n+        );\n+        \n         // then return reassembled join\n         ret->ChildRef(inputIndex) = ctx.ShallowCopy(*ret->Child(inputIndex));\n         ret->Child(inputIndex)->ChildRef(0) = newInput;\n@@ -271,6 +296,304 @@ TExprNode::TPtr SingleInputPredicatePushdownOverEquiJoin(TExprNode::TPtr equiJoi\n     return ret;\n }\n \n+void CountLabelsInputUsage(TExprNode::TPtr joinTree, THashMap<TString, int>& counters) {\n+    if (joinTree->IsAtom()) {\n+        counters[joinTree->Content()]++;\n+    } else {\n+        CountLabelsInputUsage(joinTree->ChildPtr(1), counters);\n+        CountLabelsInputUsage(joinTree->ChildPtr(2), counters);\n+    }\n+}\n+\n+// returns the path to join child\n+std::pair<TExprNode::TPtr, TExprNode::TPtr> IsRightSideForLeftJoin(\n+    const TExprNode::TPtr& joinTree, const TJoinLabels& labels, ui32 inputIndex, const TExprNode::TPtr& parent = nullptr\n+) {\n+    auto joinType = joinTree->Child(0)->Content();\n+    auto left = joinTree->ChildPtr(1);\n+    auto right = joinTree->ChildPtr(2);\n+    if (joinType == \"Inner\" || joinType == \"Left\" || joinType == \"LeftOnly\" || joinType == \"LeftSemi\" || joinType == \"RightSemi\" || joinType == \"Cross\") {\n+        if (!left->IsAtom()) {\n+            auto x = IsRightSideForLeftJoin(left, labels, inputIndex, joinTree);\n+            if (x.first) {\n+                return x;\n+            }\n+        }\n+    }\n+\n+    if (joinType == \"Inner\" || joinType == \"Right\" || joinType == \"RightOnly\" || joinType == \"RightSemi\" || joinType == \"LeftSemi\" || joinType == \"Cross\" || joinType == \"Left\") {\n+        if (!right->IsAtom()) {\n+            auto x = IsRightSideForLeftJoin(right, labels, inputIndex, joinTree);\n+            if (x.first) {\n+                return x;\n+            }\n+        } else if (joinType == \"Left\") {\n+            auto table = right->Content();\n+            if (*labels.FindInputIndex(table) == inputIndex) {\n+                return {joinTree, parent};\n+            }\n+        }\n+    }\n+\n+    return {nullptr, nullptr};\n+}\n+\n+TExprNode::TPtr FilterPushdownOverJoinOptionalSide(TExprNode::TPtr equiJoin, TExprNode::TPtr predicate,\n+    const TSet<TStringBuf>& usedFields, TExprNode::TPtr args, const TJoinLabels& labels,\n+    ui32 inputIndex, const TMap<TStringBuf, TVector<TStringBuf>>& renameMap, bool ordered, TExprContext& ctx,\n+    const TPositionHandle& pos)\n+{\n+    auto inputsCount = equiJoin->ChildrenSize() - 2;\n+    auto joinTree = equiJoin->Child(inputsCount);\n+    \n+    if (!IsRightSideForLeftJoin(joinTree, labels, inputIndex).first) {\n+        return equiJoin;\n+    }\n+\n+    YQL_ENSURE(args->ChildrenSize() == 1);\n+    YQL_ENSURE(args->Head().IsArgument());\n+    if (HasDependsOn(predicate, args->HeadPtr())) {\n+        return equiJoin;\n+    }\n+\n+    const bool isStrict = IsStrict(predicate);\n+    if (!isStrict/* && IsRequiredAndFilteredSide(joinTree, labels, firstCandidate)*/) {\n+        return equiJoin;\n+    }\n+\n+    TMap<TString, TSet<TString>> aliases;\n+    GatherKeyAliases(joinTree, aliases, labels);\n+    MakeTransitiveClosure(aliases);\n+\n+    // check whether some used fields are not aliased\n+    bool onlyKeys = true;\n+    for (auto& x : usedFields) {\n+        if (!aliases.contains(TString(x))) {\n+            onlyKeys = false;\n+            break;\n+        }\n+    }\n+\n+    if (onlyKeys) {\n+        return equiJoin;\n+    }\n+\n+    THashMap<TString, TExprNode::TPtr> equiJoinLabels;  \n+    for (size_t i = 0; i < equiJoin->ChildrenSize() - 2; i++) {\n+        auto label = equiJoin->Child(i);\n+        equiJoinLabels.emplace(label->Child(1)->Content(), label->ChildPtr(0));\n+    }\n+\n+    THashMap<TString, int> joinLabelCounters;\n+    CountLabelsInputUsage(joinTree, joinLabelCounters);\n+\n+    auto [leftJoinTree, parentJoinPtr] = IsRightSideForLeftJoin(joinTree, labels, inputIndex);\n+    YQL_ENSURE(leftJoinTree);\n+    joinLabelCounters[leftJoinTree->Child(1)->Content()]--;\n+    joinLabelCounters[leftJoinTree->Child(2)->Content()]--;\n+\n+    auto leftJoinSettings = equiJoin->ChildPtr(equiJoin->ChildrenSize() - 1);\n+\n+    auto innerJoinTree = ctx.ChangeChild(*leftJoinTree, 0, ctx.NewAtom(leftJoinTree->Pos(), \"Inner\"));\n+    auto leftOnlyJoinTree = ctx.ChangeChild(*leftJoinTree, 0, ctx.NewAtom(leftJoinTree->Pos(), \"LeftOnly\"));\n+\n+    THashMap<TString, int> leftSideJoinLabels;\n+    CountLabelsInputUsage(leftJoinTree->Child(1), leftSideJoinLabels);\n+\n+    YQL_ENSURE(leftJoinTree->Child(2)->IsAtom());\n+    auto rightSideInput = equiJoinLabels.at(leftJoinTree->Child(2)->Content());\n+\n+    // skip null key columns\n+    TSet<TString> optionalKeyColumns;\n+    GatherOptionalKeyColumns(joinTree, labels, inputIndex, optionalKeyColumns);\n+    rightSideInput = FilterOutNullJoinColumns(predicate->Pos(),\n+        rightSideInput, labels.Inputs[inputIndex], optionalKeyColumns, ctx);\n+\n+    // then apply predicate\n+    auto filteredInput = ApplyJoinPredicate(\n+        predicate, /*filterInput=*/rightSideInput, args, labels, {}, renameMap, onlyKeys,\n+        inputIndex, inputIndex, ordered, /*substituteWithNulls=*/false, ctx\n+    );\n+\n+    // then create unionall of two joins.\n+    //firstly, join same labels with inner join:\n+\n+    size_t i = 0;\n+    auto innerJoin = ctx.Builder(pos)\n+        .Callable(\"EquiJoin\")\n+            .Do([&](TExprNodeBuilder& parent) -> TExprNodeBuilder& {\n+                for (const auto& [labelName, _] : leftSideJoinLabels) {\n+                    parent.List(i++)\n+                        .Add(0, equiJoinLabels.at(labelName))\n+                        .Atom(1, labelName)\n+                    .Seal();\n+                }\n+                return parent;\n+            })\n+            .List(i++)\n+                .Add(0, filteredInput)\n+                .Atom(1, innerJoinTree->ChildRef(2)->Content())\n+            .Seal()\n+            .Add(i++, innerJoinTree)\n+            .Add(i++, leftJoinSettings)\n+        .Seal()\n+    .Build();\n+\n+    //then, do leftOnly join:\n+\n+    i = 0;\n+    auto leftOnlyJoin = ctx.Builder(pos)\n+        .Callable(\"EquiJoin\")\n+            .Do([&](TExprNodeBuilder& parent) -> TExprNodeBuilder& {\n+                for (const auto& [labelName, _] : leftSideJoinLabels) {\n+                    parent.List(i++)\n+                        .Add(0, equiJoinLabels.at(labelName))\n+                        .Atom(1, labelName)\n+                    .Seal();\n+                }\n+                return parent;\n+            })\n+            .List(i++)\n+                .Add(0, rightSideInput)\n+                .Atom(1, leftOnlyJoinTree->ChildRef(2)->Content())\n+            .Seal()\n+            .Add(i++, leftOnlyJoinTree)\n+            .Add(i++, leftJoinSettings)\n+        .Seal()\n+    .Build();\n+\n+\n+    //extend left only join with nulls as left part and apply same predicate\n+    auto nullPredicateFilter = ApplyJoinPredicate(\n+        predicate, /*filterInput=*/leftOnlyJoin, args, labels, {}, renameMap, onlyKeys,\n+        inputIndex, inputIndex, ordered, /*substituteWithNulls=*/true, ctx\n+    );\n+\n+    //then unite the results;\n+    auto unionAll = ctx.Builder(pos)\n+        .Callable(\"UnionAll\")\n+            .Add(0, innerJoin)\n+            .Add(1, nullPredicateFilter)\n+        .Seal()\n+        .Build();\n+\n+    if (!parentJoinPtr) {\n+        return unionAll;\n+    }\n+\n+    THashSet <TString> joinColumns;\n+    for (const auto& [labelName, _] : leftSideJoinLabels) {\n+        auto tableName = labels.FindInputIndex(labelName);\n+        YQL_ENSURE(tableName);\n+        for (auto column : labels.Inputs[*tableName].EnumerateAllColumns()) {\n+            joinColumns.emplace(std::move(column));\n+        }\n+    }    \n+    auto rightSideTableName = labels.FindInputIndex(innerJoinTree->Child(2)->Content());\n+    YQL_ENSURE(rightSideTableName);\n+    for (auto column : labels.Inputs[*rightSideTableName].EnumerateAllColumns()) {\n+        joinColumns.emplace(std::move(column));\n+    }\n+\n+    auto newJoinLabel = ctx.Builder(pos)\n+        .Atom(\"__yql_right_side_pushdown_input_label\")\n+    .Build();\n+\n+\n+    TExprNode::TPtr remJoinKeys;\n+    bool changedLeftSide = false;\n+    if (leftJoinTree == parentJoinPtr->ChildPtr(1)) {\n+        changedLeftSide = true;\n+        remJoinKeys = parentJoinPtr->ChildPtr(3);\n+    } else {\n+        remJoinKeys = parentJoinPtr->ChildPtr(4);\n+    }\n+\n+    TExprNode::TListType newKeys;\n+    newKeys.reserve(remJoinKeys->ChildrenSize());\n+\n+    for (ui32 i = 0; i < remJoinKeys->ChildrenSize(); i += 2) {\n+        auto table = remJoinKeys->ChildPtr(i);\n+        auto column = remJoinKeys->ChildPtr(i + 1);\n+\n+        YQL_ENSURE(table->IsAtom());\n+        YQL_ENSURE(column->IsAtom());\n+\n+        auto fcn = FullColumnName(table->Content(), column->Content());\n+\n+        if (joinColumns.contains(fcn)) {\n+        newKeys.push_back(newJoinLabel);\n+        newKeys.push_back(ctx.NewAtom(column->Pos(), fcn));\n+        } else {\n+            newKeys.push_back(table);\n+            newKeys.push_back(column);\n+        } \n+    }\n+\n+    auto newKeysList = ctx.NewList(remJoinKeys->Pos(), std::move(newKeys));\n+\n+    auto newParentJoin = ctx.Builder(joinTree->Pos())\n+        .List()\n+            .Add(0, parentJoinPtr->ChildPtr(0))\n+            .Add(1, changedLeftSide ? newJoinLabel : parentJoinPtr->ChildPtr(1))\n+            .Add(2, !changedLeftSide ? newJoinLabel : parentJoinPtr->ChildPtr(2))\n+            .Add(3, changedLeftSide ? newKeysList : parentJoinPtr->ChildPtr(3))\n+            .Add(4, !changedLeftSide ? newKeysList : parentJoinPtr->ChildPtr(4))\n+            .Add(5, parentJoinPtr->ChildPtr(5))\n+        .Seal()\n+        .Build();\n+\n+    auto newJoinTree = ctx.ReplaceNode(std::move(joinTree), *parentJoinPtr, newParentJoin);\n+\n+    i = 0;\n+    auto newJoinSettings = ctx.Builder(pos)\n+        .List()\n+            .Do([&](TExprNodeBuilder& parent) -> TExprNodeBuilder& {\n+                for (const auto& child : equiJoin->TailPtr()->ChildrenList()) {\n+                    parent.Add(i++, child);\n+                }\n+                return parent;\n+            })\n+            .Do([&](TExprNodeBuilder& parent) -> TExprNodeBuilder& {\n+                for (const auto& column : joinColumns) {\n+                    parent.List(i++)\n+                        .Atom(0, \"rename\")\n+                        .Atom(1, FullColumnName(\"__yql_right_side_pushdown_input_label\", column))\n+                        .Atom(2, column)\n+                    .Seal();\n+                }\n+                return parent;\n+            })\n+        .Seal()\n+    .Build();\n+\n+    i = 0;\n+    auto newEquiJoin = ctx.Builder(pos)\n+        .Callable(\"EquiJoin\")\n+        .Do([&](TExprNodeBuilder& parent) -> TExprNodeBuilder& {\n+            for (const auto& label : joinLabelCounters) {\n+                if (label.second > 0) {\n+                    auto equiJoinInput = equiJoinLabels.at(TString(label.first));\n+                    parent.List(i++)\n+                        .Add(0, equiJoinInput)\n+                        .Atom(1, label.first)\n+                    .Seal();\n+                }\n+            }\n+            return parent;\n+        })\n+        .List(i++)\n+            .Add(0, unionAll)\n+            .Add(1, newJoinLabel)\n+        .Seal()\n+        .Add(i++, newJoinTree)\n+        .Add(i++, newJoinSettings)\n+        .Seal()\n+    .Build();\n+\n+    return newEquiJoin;\n+}\n+\n class TJoinTreeRebuilder {\n public:\n     TJoinTreeRebuilder(TExprNode::TPtr joinTree, TStringBuf label1, TStringBuf column1, TStringBuf label2, TStringBuf column2,\n@@ -581,8 +904,15 @@ TExprNode::TPtr DecayCrossJoinIntoInner(TExprNode::TPtr equiJoin, const TExprNod\n \n } // namespace\n \n-TExprBase FlatMapOverEquiJoin(const TCoFlatMapBase& node, TExprContext& ctx, const TParentsMap& parentsMap, bool multiUsage) {\n+TExprBase FlatMapOverEquiJoin(\n+    const TCoFlatMapBase& node, \n+    TExprContext& ctx, \n+    const TParentsMap& parentsMap, \n+    bool multiUsage, \n+    bool filterPushdownOverJoinOptionalSide\n+) {\n     auto equiJoin = node.Input();\n+\n     auto structType = equiJoin.Ref().GetTypeAnn()->Cast<TListExprType>()->GetItemType()\n         ->Cast<TStructExprType>();\n     if (structType->GetSize() == 0) {\n@@ -737,6 +1067,16 @@ TExprBase FlatMapOverEquiJoin(const TCoFlatMapBase& node, TExprContext& ctx, con\n                     ret = newJoin;\n                     extraPredicate = FuseAndTerms(node.Pos(), andTerms, andTerm, isPg, ctx);\n                     break;\n+                } else if (filterPushdownOverJoinOptionalSide) {\n+                    auto twoJoins = FilterPushdownOverJoinOptionalSide(equiJoin.Ptr(), andTerm, usedFields,\n+                        node.Lambda().Args().Ptr(), labels, *inputs.begin(), renameMap, ordered, ctx, node.Pos());\n+                    if (twoJoins != equiJoin.Ptr()) {\n+                        YQL_CLOG(DEBUG, Core) << \"RightSidePredicatePushdownOverLeftJoin\";\n+                        ret = twoJoins;\n+                        extraPredicate = FuseAndTerms(node.Pos(), andTerms, andTerm, isPg, ctx);\n+                        break;\n+                    }\n+                    \n                 }\n             }\n \ndiff --git a/ydb/library/yql/core/common_opt/yql_flatmap_over_join.h b/ydb/library/yql/core/common_opt/yql_flatmap_over_join.h\nindex 59777bf5337d..c6696ce68cb3 100644\n--- a/ydb/library/yql/core/common_opt/yql_flatmap_over_join.h\n+++ b/ydb/library/yql/core/common_opt/yql_flatmap_over_join.h\n@@ -9,6 +9,11 @@\n \n namespace NYql {\n \n-NNodes::TExprBase FlatMapOverEquiJoin(const NNodes::TCoFlatMapBase& node, TExprContext& ctx, const TParentsMap& parentsMap, bool multiUsage);\n+NNodes::TExprBase FlatMapOverEquiJoin(\n+    const NNodes::TCoFlatMapBase& node, \n+    TExprContext& ctx, \n+    const TParentsMap& parentsMap, \n+    bool multiUsage,\n+    bool filterPushdownOverJoinOptionalSide);\n \n } // NYql\ndiff --git a/ydb/library/yql/core/yql_join.cpp b/ydb/library/yql/core/yql_join.cpp\nindex 4fcb4af4d672..544cd1fadf8f 100644\n--- a/ydb/library/yql/core/yql_join.cpp\n+++ b/ydb/library/yql/core/yql_join.cpp\n@@ -1152,7 +1152,7 @@ std::pair<bool, bool> IsRequiredSide(const TExprNode::TPtr& joinTree, const TJoi\n         else {\n             auto table = right->Content();\n             if (*labels.FindInputIndex(table) == inputIndex) {\n-                return{ true, joinType == \"Inner\" || joinType == \"RightSemi\" };\n+                return{ true, joinType == \"Inner\" || joinType == \"RightSemi\"};\n             }\n         }\n     }\ndiff --git a/ydb/library/yql/core/yql_type_annotation.h b/ydb/library/yql/core/yql_type_annotation.h\nindex f17a3abaa537..711c618d2041 100644\n--- a/ydb/library/yql/core/yql_type_annotation.h\n+++ b/ydb/library/yql/core/yql_type_annotation.h\n@@ -252,6 +252,7 @@ struct TTypeAnnotationContext: public TThrRefBase {\n     ui32 EvaluateParallelForLimit = 5000;\n     ui32 EvaluateOrderByColumnLimit = 100;\n     bool PullUpFlatMapOverJoin = true;\n+    bool FilterPushdownOverJoinOptionalSide = false;\n     bool DeprecatedSQL = false;\n     THashMap<std::tuple<TString, TString, const TTypeAnnotationNode*>, TUdfCachedInfo> UdfTypeCache; // (name,typecfg,type)->info\n     bool UseTableMetaFromGraph = false;\ndiff --git a/ydb/library/yql/providers/config/yql_config_provider.cpp b/ydb/library/yql/providers/config/yql_config_provider.cpp\nindex c8bbe68aa170..c471f6fc0f01 100644\n--- a/ydb/library/yql/providers/config/yql_config_provider.cpp\n+++ b/ydb/library/yql/providers/config/yql_config_provider.cpp\n@@ -674,6 +674,13 @@ namespace {\n                 }\n \n                 Types.PullUpFlatMapOverJoin = (name == \"PullUpFlatMapOverJoin\");\n+            } else if (name == \"DisableFilterPushdownOverJoinOptionalSide\" || name == \"FilterPushdownOverJoinOptionalSide\") {\n+                if (args.size() != 0) {\n+                    ctx.AddError(TIssue(pos, TStringBuilder() << \"Expected no arguments, but got \" << args.size()));\n+                    return false;\n+                }\n+\n+                Types.FilterPushdownOverJoinOptionalSide = (name == \"FilterPushdownOverJoinOptionalSide\");\n             }\n             else if (name == \"SQL\") {\n                 if (args.size() > 1) {\ndiff --git a/ydb/library/yql/sql/v1/context.cpp b/ydb/library/yql/sql/v1/context.cpp\nindex f34c24982b6e..295665cd085c 100644\n--- a/ydb/library/yql/sql/v1/context.cpp\n+++ b/ydb/library/yql/sql/v1/context.cpp\n@@ -44,6 +44,7 @@ THashMap<TStringBuf, TPragmaField> CTX_PRAGMA_FIELDS = {\n     {\"AnsiOptionalAs\", &TContext::AnsiOptionalAs},\n     {\"WarnOnAnsiAliasShadowing\", &TContext::WarnOnAnsiAliasShadowing},\n     {\"PullUpFlatMapOverJoin\", &TContext::PragmaPullUpFlatMapOverJoin},\n+    {\"FilterPushdownOverJoinOptionalSide\", &TContext::FilterPushdownOverJoinOptionalSide},\n     {\"DqEngineEnable\", &TContext::DqEngineEnable},\n     {\"DqEngineForce\", &TContext::DqEngineForce},\n     {\"RegexUseRe2\", &TContext::PragmaRegexUseRe2},\ndiff --git a/ydb/library/yql/sql/v1/context.h b/ydb/library/yql/sql/v1/context.h\nindex 75f98569ab97..bb788470d94a 100644\n--- a/ydb/library/yql/sql/v1/context.h\n+++ b/ydb/library/yql/sql/v1/context.h\n@@ -262,6 +262,7 @@ namespace NSQLTranslationV1 {\n         bool PragmaYsonStrict = true;\n         bool PragmaRegexUseRe2 = true;\n         bool PragmaPullUpFlatMapOverJoin = true;\n+        bool FilterPushdownOverJoinOptionalSide = false;\n         bool WarnUnnamedColumns = false;\n         bool DiscoveryMode = false;\n         bool EnableSystemColumns = true;\ndiff --git a/ydb/library/yql/sql/v1/query.cpp b/ydb/library/yql/sql/v1/query.cpp\nindex efbf77bbbce4..e8e92e3bfa64 100644\n--- a/ydb/library/yql/sql/v1/query.cpp\n+++ b/ydb/library/yql/sql/v1/query.cpp\n@@ -2744,6 +2744,11 @@ class TYqlProgramNode: public TAstListNode {\n                         BuildQuotedAtom(Pos, \"DisablePullUpFlatMapOverJoin\"))));\n                 }\n \n+                if (ctx.FilterPushdownOverJoinOptionalSide) {\n+                    Add(Y(\"let\", \"world\", Y(TString(ConfigureName), \"world\", configSource,\n+                        BuildQuotedAtom(Pos, \"FilterPushdownOverJoinOptionalSide\"))));\n+                }\n+\n                 if (ctx.DiscoveryMode) {\n                     Add(Y(\"let\", \"world\", Y(TString(ConfigureName), \"world\", configSource,\n                         BuildQuotedAtom(Pos, \"DiscoveryMode\"))));\ndiff --git a/ydb/library/yql/sql/v1/sql_query.cpp b/ydb/library/yql/sql/v1/sql_query.cpp\nindex b4b110a9019b..4cdc20727fd6 100644\n--- a/ydb/library/yql/sql/v1/sql_query.cpp\n+++ b/ydb/library/yql/sql/v1/sql_query.cpp\n@@ -2192,6 +2192,12 @@ TNodePtr TSqlQuery::PragmaStatement(const TRule_pragma_stmt& stmt, bool& success\n         } else if (normalizedPragma == \"disablepullupflatmapoverjoin\") {\n             Ctx.PragmaPullUpFlatMapOverJoin = false;\n             Ctx.IncrementMonCounter(\"sql_pragma\", \"DisablePullUpFlatMapOverJoin\");\n+        } else if (normalizedPragma == \"filterpushdownoverjoinoptionalside\") {\n+            Ctx.FilterPushdownOverJoinOptionalSide = true;\n+            Ctx.IncrementMonCounter(\"sql_pragma\", \"FilterPushdownOverJoinOptionalSide\");\n+        } else if (normalizedPragma == \"disablefilterpushdownoverjoinoptionalside\") {\n+            Ctx.FilterPushdownOverJoinOptionalSide = false;\n+            Ctx.IncrementMonCounter(\"sql_pragma\", \"DisableFilterPushdownOverJoinOptionalSide\");\n         } else if (normalizedPragma == \"allowunnamedcolumns\") {\n             Ctx.WarnUnnamedColumns = false;\n             Ctx.IncrementMonCounter(\"sql_pragma\", \"AllowUnnamedColumns\");\n",
  "test_patch": "diff --git a/ydb/library/yql/tests/sql/dq_file/part14/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part14/canondata/result.json\nindex dd61f913f589..b3460ad5a1c6 100644\n--- a/ydb/library/yql/tests/sql/dq_file/part14/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/dq_file/part14/canondata/result.json\n@@ -1381,6 +1381,28 @@\n             \"uri\": \"file://test.test_join-join_no_correlation_in_order_by-off-Results_/extracted\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_null--Analyze]\": [\n+        {\n+            \"checksum\": \"c612d479811edaece339bc7cfce2e1a2\",\n+            \"size\": 9199,\n+            \"uri\": \"https://{canondata_backend}/1871182/035cffc2aba7adbed541caae65e59e0ddf49b527/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Analyze_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_null--Debug]\": [\n+        {\n+            \"checksum\": \"50cb81c55fdf24947a6c8eb59c4c2082\",\n+            \"size\": 5503,\n+            \"uri\": \"https://{canondata_backend}/1871182/035cffc2aba7adbed541caae65e59e0ddf49b527/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_null--Plan]\": [\n+        {\n+            \"checksum\": \"c612d479811edaece339bc7cfce2e1a2\",\n+            \"size\": 9199,\n+            \"uri\": \"https://{canondata_backend}/1871182/035cffc2aba7adbed541caae65e59e0ddf49b527/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_null--Results]\": [],\n     \"test.test[join-left_trivial-off-Analyze]\": [\n         {\n             \"checksum\": \"10661b133a91c19b84d6674fed7c889a\",\ndiff --git a/ydb/library/yql/tests/sql/dq_file/part17/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part17/canondata/result.json\nindex 717eb7a6245a..051162fe87f7 100644\n--- a/ydb/library/yql/tests/sql/dq_file/part17/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/dq_file/part17/canondata/result.json\n@@ -1172,6 +1172,28 @@\n             \"uri\": \"https://{canondata_backend}/1809005/867a928da4f0d2fb398d2c33bb67d6d401827633/resource.tar.gz#test.test_join-inner_with_order-off-Results_/results.txt\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Analyze]\": [\n+        {\n+            \"checksum\": \"4883c24e70e4fec9a8015044d9a106c5\",\n+            \"size\": 9911,\n+            \"uri\": \"https://{canondata_backend}/1937367/bc1ddd52a5c80a7e52dc1d8a7570c5b38a712194/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Analyze_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Debug]\": [\n+        {\n+            \"checksum\": \"a1ebc62e060ad76dde67c9f88115ee0a\",\n+            \"size\": 5435,\n+            \"uri\": \"https://{canondata_backend}/1937367/bc1ddd52a5c80a7e52dc1d8a7570c5b38a712194/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Plan]\": [\n+        {\n+            \"checksum\": \"4883c24e70e4fec9a8015044d9a106c5\",\n+            \"size\": 9911,\n+            \"uri\": \"https://{canondata_backend}/1937367/bc1ddd52a5c80a7e52dc1d8a7570c5b38a712194/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Results]\": [],\n     \"test.test[join-mapjoin_on_complex_type_optional_left_only_single--Analyze]\": [\n         {\n             \"checksum\": \"6970f7b7684876431e22e213d283ac29\",\ndiff --git a/ydb/library/yql/tests/sql/dq_file/part3/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part3/canondata/result.json\nindex b2d84ca0ef02..91b19b4e031a 100644\n--- a/ydb/library/yql/tests/sql/dq_file/part3/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/dq_file/part3/canondata/result.json\n@@ -1076,6 +1076,28 @@\n         }\n     ],\n     \"test.test[join-join_comp_inmem--Results]\": [],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Analyze]\": [\n+        {\n+            \"checksum\": \"6d20b4c63dfa58eadb411edddce2e71f\",\n+            \"size\": 9863,\n+            \"uri\": \"https://{canondata_backend}/1889210/5799676c8b21a8a6ab9a23a98cfcb11d1e8db6cf/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Analyze_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Debug]\": [\n+        {\n+            \"checksum\": \"4a0785ff0e12b9c3938d32ab1666f877\",\n+            \"size\": 4746,\n+            \"uri\": \"https://{canondata_backend}/1889210/5799676c8b21a8a6ab9a23a98cfcb11d1e8db6cf/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Plan]\": [\n+        {\n+            \"checksum\": \"6d20b4c63dfa58eadb411edddce2e71f\",\n+            \"size\": 9863,\n+            \"uri\": \"https://{canondata_backend}/1889210/5799676c8b21a8a6ab9a23a98cfcb11d1e8db6cf/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Results]\": [],\n     \"test.test[join-left_only_semi_and_other-off-Analyze]\": [\n         {\n             \"checksum\": \"26a7dce4af25adb8ec0a40b452b85976\",\ndiff --git a/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json\nindex cf6816d157e7..fb3c3a842551 100644\n--- a/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json\n@@ -1269,6 +1269,28 @@\n             \"uri\": \"file://test.test_join-join_without_correlation_names--Results_/extracted\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Analyze]\": [\n+        {\n+            \"checksum\": \"4dc692a6090fec1e0fcd74b62fea8c9f\",\n+            \"size\": 7278,\n+            \"uri\": \"https://{canondata_backend}/995452/bdcc1c962e2cb216859f83be46f0797cbc65b816/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Analyze_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Debug]\": [\n+        {\n+            \"checksum\": \"0ac1c189e323ef65a6ddcb45f5a9feb2\",\n+            \"size\": 3675,\n+            \"uri\": \"https://{canondata_backend}/995452/bdcc1c962e2cb216859f83be46f0797cbc65b816/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Plan]\": [\n+        {\n+            \"checksum\": \"4dc692a6090fec1e0fcd74b62fea8c9f\",\n+            \"size\": 7278,\n+            \"uri\": \"https://{canondata_backend}/995452/bdcc1c962e2cb216859f83be46f0797cbc65b816/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Results]\": [],\n     \"test.test[join-lookupjoin_with_cache-off-Analyze]\": [\n         {\n             \"checksum\": \"0a52d2686415327ccb290e0b4fd3bb87\",\ndiff --git a/ydb/library/yql/tests/sql/dq_file/part5/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part5/canondata/result.json\nindex 07b5e1b7b32a..6aeec8c37c49 100644\n--- a/ydb/library/yql/tests/sql/dq_file/part5/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/dq_file/part5/canondata/result.json\n@@ -1528,6 +1528,28 @@\n         }\n     ],\n     \"test.test[join-left_join_null_column--Results]\": [],\n+    \"test.test[join-left_join_right_pushdown_simple--Analyze]\": [\n+        {\n+            \"checksum\": \"60536b1d78bcc3f1bf330ec865bdc40e\",\n+            \"size\": 6469,\n+            \"uri\": \"https://{canondata_backend}/1784826/1d88e578beafe01d6bba5ff3a3b2fecf2c6033c8/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Analyze_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_simple--Debug]\": [\n+        {\n+            \"checksum\": \"5a119c16914592c95e4956102e038bac\",\n+            \"size\": 2576,\n+            \"uri\": \"https://{canondata_backend}/1784826/1d88e578beafe01d6bba5ff3a3b2fecf2c6033c8/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_simple--Plan]\": [\n+        {\n+            \"checksum\": \"60536b1d78bcc3f1bf330ec865bdc40e\",\n+            \"size\": 6469,\n+            \"uri\": \"https://{canondata_backend}/1784826/1d88e578beafe01d6bba5ff3a3b2fecf2c6033c8/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_simple--Results]\": [],\n     \"test.test[join-lookupjoin_bug7646_subst--Analyze]\": [\n         {\n             \"checksum\": \"afa9c5bf748b3d380562ffc9ea2d42ae\",\ndiff --git a/ydb/library/yql/tests/sql/hybrid_file/part0/canondata/result.json b/ydb/library/yql/tests/sql/hybrid_file/part0/canondata/result.json\nindex 7ad238007cc1..847aaff412e0 100644\n--- a/ydb/library/yql/tests/sql/hybrid_file/part0/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/hybrid_file/part0/canondata/result.json\n@@ -1287,6 +1287,20 @@\n             \"uri\": \"https://{canondata_backend}/1937367/7890620b546312cfd9cbc4ee46166efc1a36450c/resource.tar.gz#test.test_join-join_without_correlation_and_struct_access--Plan_/plan.txt\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Debug]\": [\n+        {\n+            \"checksum\": \"98434a360ca44cdece78c2cca98c39c9\",\n+            \"size\": 8603,\n+            \"uri\": \"https://{canondata_backend}/1775319/3b44e895c72b145fbb42791c71ac67e92b04da1e/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Plan]\": [\n+        {\n+            \"checksum\": \"4aa32511da03157eac326961da592a0c\",\n+            \"size\": 13134,\n+            \"uri\": \"https://{canondata_backend}/1775319/3b44e895c72b145fbb42791c71ac67e92b04da1e/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Plan_/plan.txt\"\n+        }\n+    ],\n     \"test.test[join-lookupjoin_bug7646_subst--Debug]\": [\n         {\n             \"checksum\": \"9403ac6e176cb63335ef22a868d24bf3\",\ndiff --git a/ydb/library/yql/tests/sql/hybrid_file/part10/canondata/result.json b/ydb/library/yql/tests/sql/hybrid_file/part10/canondata/result.json\nindex 782192a49d4d..ea366ba1da37 100644\n--- a/ydb/library/yql/tests/sql/hybrid_file/part10/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/hybrid_file/part10/canondata/result.json\n@@ -1315,6 +1315,20 @@\n             \"uri\": \"https://{canondata_backend}/1923547/14c0d60ad63ffaedb974b51b52039901f095b5c5/resource.tar.gz#test.test_join-left_cast_to_string--Plan_/plan.txt\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_null--Debug]\": [\n+        {\n+            \"checksum\": \"11489a58abcbb9409c145e4213713010\",\n+            \"size\": 9174,\n+            \"uri\": \"https://{canondata_backend}/1937367/3ef9cc8a4e0d288b6b9042eaffa1d05a694c9890/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_null--Plan]\": [\n+        {\n+            \"checksum\": \"5c98282623024c748419934471adcc64\",\n+            \"size\": 12301,\n+            \"uri\": \"https://{canondata_backend}/1937367/3ef9cc8a4e0d288b6b9042eaffa1d05a694c9890/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Plan_/plan.txt\"\n+        }\n+    ],\n     \"test.test[join-left_only_with_other--Debug]\": [\n         {\n             \"checksum\": \"fb925958c8f15acf6c461c900db460c0\",\ndiff --git a/ydb/library/yql/tests/sql/hybrid_file/part4/canondata/result.json b/ydb/library/yql/tests/sql/hybrid_file/part4/canondata/result.json\nindex 42841cfd1a27..35654b31a6e1 100644\n--- a/ydb/library/yql/tests/sql/hybrid_file/part4/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/hybrid_file/part4/canondata/result.json\n@@ -1203,6 +1203,20 @@\n             \"uri\": \"https://{canondata_backend}/1931696/8382830b676a61af36d1344910d51cd1bf39f3ef/resource.tar.gz#test.test_join-equi_join_two_mult_keys--Plan_/plan.txt\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Debug]\": [\n+        {\n+            \"checksum\": \"7c5dd95456fe1aa5cdb13d2e2a329456\",\n+            \"size\": 9466,\n+            \"uri\": \"https://{canondata_backend}/1889210/b9d99810b5aa874f24a7724b667bc80ecaf06a9b/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Plan]\": [\n+        {\n+            \"checksum\": \"0ec78f38bf44afc858cb5909b97ad0bd\",\n+            \"size\": 9944,\n+            \"uri\": \"https://{canondata_backend}/1889210/b9d99810b5aa874f24a7724b667bc80ecaf06a9b/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Plan_/plan.txt\"\n+        }\n+    ],\n     \"test.test[join-left_semi_with_other--Debug]\": [\n         {\n             \"checksum\": \"16229a3e5a3002c44ac4f38996ee8743\",\ndiff --git a/ydb/library/yql/tests/sql/hybrid_file/part6/canondata/result.json b/ydb/library/yql/tests/sql/hybrid_file/part6/canondata/result.json\nindex e02cd14e0c91..e98cbdb6833c 100644\n--- a/ydb/library/yql/tests/sql/hybrid_file/part6/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/hybrid_file/part6/canondata/result.json\n@@ -1287,6 +1287,34 @@\n             \"uri\": \"https://{canondata_backend}/1031349/201452dd8c883b2adcbf46cb075c912d25efe67e/resource.tar.gz#test.test_join-join_key_cmp_udf--Plan_/plan.txt\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Debug]\": [\n+        {\n+            \"checksum\": \"cac2ef14ff7bb6fda44e16bf92684037\",\n+            \"size\": 8053,\n+            \"uri\": \"https://{canondata_backend}/1889210/9134d9e30423bbc1dffa9f6443fbc36d9fb3203d/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Plan]\": [\n+        {\n+            \"checksum\": \"77af63713e7259dddfa3c7bed1c21eb3\",\n+            \"size\": 9330,\n+            \"uri\": \"https://{canondata_backend}/1889210/9134d9e30423bbc1dffa9f6443fbc36d9fb3203d/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_simple--Debug]\": [\n+        {\n+            \"checksum\": \"78c63de5575407756833fc89bcb6a1b6\",\n+            \"size\": 4121,\n+            \"uri\": \"https://{canondata_backend}/1889210/9134d9e30423bbc1dffa9f6443fbc36d9fb3203d/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Debug_/opt.yql_patched\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_simple--Plan]\": [\n+        {\n+            \"checksum\": \"77b2644b1451351e381bbbaac5f6c905\",\n+            \"size\": 6617,\n+            \"uri\": \"https://{canondata_backend}/1889210/9134d9e30423bbc1dffa9f6443fbc36d9fb3203d/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Plan_/plan.txt\"\n+        }\n+    ],\n     \"test.test[join-left_join_with_self_aggr--Debug]\": [\n         {\n             \"checksum\": \"1d5c4d3ae1cfd6f755d9f9bdabb48bb5\",\ndiff --git a/ydb/library/yql/tests/sql/sql2yql/canondata/result.json b/ydb/library/yql/tests/sql/sql2yql/canondata/result.json\nindex 8078522d627b..d99510968467 100644\n--- a/ydb/library/yql/tests/sql/sql2yql/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/sql2yql/canondata/result.json\n@@ -8063,6 +8063,41 @@\n             \"uri\": \"https://{canondata_backend}/1924537/1ab444909086b08bd4fe21c5a43f5e183c647e0a/resource.tar.gz#test_sql2yql.test_join-left_join_null_column_/sql.yql\"\n         }\n     ],\n+    \"test_sql2yql.test[join-left_join_right_pushdown_nested_left]\": [\n+        {\n+            \"checksum\": \"469debe145964a01898be300d70ed85e\",\n+            \"size\": 2858,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql2yql.test_join-left_join_right_pushdown_nested_left_/sql.yql\"\n+        }\n+    ],\n+    \"test_sql2yql.test[join-left_join_right_pushdown_nested_right]\": [\n+        {\n+            \"checksum\": \"8cd6ad5bcca532b8e70b63e0d27d993d\",\n+            \"size\": 2834,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql2yql.test_join-left_join_right_pushdown_nested_right_/sql.yql\"\n+        }\n+    ],\n+    \"test_sql2yql.test[join-left_join_right_pushdown_no_opt]\": [\n+        {\n+            \"checksum\": \"94826bac701dae8632d31948ca6cf76f\",\n+            \"size\": 2586,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql2yql.test_join-left_join_right_pushdown_no_opt_/sql.yql\"\n+        }\n+    ],\n+    \"test_sql2yql.test[join-left_join_right_pushdown_null]\": [\n+        {\n+            \"checksum\": \"8da95818d3fe5667e6021b84de184e1b\",\n+            \"size\": 2580,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql2yql.test_join-left_join_right_pushdown_null_/sql.yql\"\n+        }\n+    ],\n+    \"test_sql2yql.test[join-left_join_right_pushdown_simple]\": [\n+        {\n+            \"checksum\": \"71f0484c045f69fe61bfccfa88538f46\",\n+            \"size\": 1628,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql2yql.test_join-left_join_right_pushdown_simple_/sql.yql\"\n+        }\n+    ],\n     \"test_sql2yql.test[join-left_join_with_self_aggr]\": [\n         {\n             \"checksum\": \"d724581f1ce71d5523e1df50c8883073\",\n@@ -26571,6 +26606,41 @@\n             \"uri\": \"https://{canondata_backend}/1880306/64654158d6bfb1289c66c626a8162239289559d0/resource.tar.gz#test_sql_format.test_join-left_join_null_column_/formatted.sql\"\n         }\n     ],\n+    \"test_sql_format.test[join-left_join_right_pushdown_nested_left]\": [\n+        {\n+            \"checksum\": \"776b40301cb4655b410722d76bbdc773\",\n+            \"size\": 298,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql_format.test_join-left_join_right_pushdown_nested_left_/formatted.sql\"\n+        }\n+    ],\n+    \"test_sql_format.test[join-left_join_right_pushdown_nested_right]\": [\n+        {\n+            \"checksum\": \"541e77738ddb1f1ce9fbe7775ebd4c8d\",\n+            \"size\": 279,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql_format.test_join-left_join_right_pushdown_nested_right_/formatted.sql\"\n+        }\n+    ],\n+    \"test_sql_format.test[join-left_join_right_pushdown_no_opt]\": [\n+        {\n+            \"checksum\": \"04db1a41e025750e06f939339c021c47\",\n+            \"size\": 264,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql_format.test_join-left_join_right_pushdown_no_opt_/formatted.sql\"\n+        }\n+    ],\n+    \"test_sql_format.test[join-left_join_right_pushdown_null]\": [\n+        {\n+            \"checksum\": \"13b54d7aeb77ba7eb6f043304269a5a5\",\n+            \"size\": 266,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql_format.test_join-left_join_right_pushdown_null_/formatted.sql\"\n+        }\n+    ],\n+    \"test_sql_format.test[join-left_join_right_pushdown_simple]\": [\n+        {\n+            \"checksum\": \"bc6735e207c21ee82676c81d631bdb7a\",\n+            \"size\": 190,\n+            \"uri\": \"https://{canondata_backend}/1942415/c55dba912834dcbf5fba9b2e00273cf3e18db77a/resource.tar.gz#test_sql_format.test_join-left_join_right_pushdown_simple_/formatted.sql\"\n+        }\n+    ],\n     \"test_sql_format.test[join-left_join_with_self_aggr]\": [\n         {\n             \"checksum\": \"6aa9fc1693ffa2c7f71db01d85fd5d52\",\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_input1.txt b/ydb/library/yql/tests/sql/suites/join/left_join_input1.txt\nnew file mode 100644\nindex 000000000000..ff0c12e814d8\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_input1.txt\n@@ -0,0 +1,8 @@\n+{\"Key1\"=101;\"Key2\"=\"One\";\"Fk1\"=#;\"Value\"=\"no_right_key_1\"};\n+{\"Key1\"=102;\"Key2\"=\"Two\";\"Fk1\"=#;\"Value\"=\"no_right_key_2\"};\n+{\"Key1\"=103;\"Key2\"=\"Three\";\"Fk1\"=\"Name1\";\"Value\"=\"Value1\"};\n+{\"Key1\"=104;\"Key2\"=\"One\";\"Fk1\"=\"Name2\";\"Value\"=\"Value2\"};\n+{\"Key1\"=104;\"Key2\"=\"Two\";\"Fk1\"=\"Name2\";\"Value\"=\"Value3\"};\n+{\"Key1\"=105;\"Key2\"=\"One\";\"Fk1\"=\"Name3\";\"Value\"=\"no_right_key_3\"};\n+{\"Key1\"=106;\"Key2\"=\"One\";\"Fk1\"=\"Name4\";\"Value\"=#};\n+{\"Key1\"=106;\"Key2\"=\"Two\";\"Fk1\"=\"Name4\";\"Value\"=\"Value4\"};\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_input1.txt.attr b/ydb/library/yql/tests/sql/suites/join/left_join_input1.txt.attr\nnew file mode 100644\nindex 000000000000..4f113053bc1c\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_input1.txt.attr\n@@ -0,0 +1,10 @@\n+{\n+    \"_yql_row_spec\"={\n+        \"Type\"=[\"StructType\";[\n+            [\"Key1\";[\"OptionalType\";[\"DataType\";\"Int32\"]]];\n+            [\"Key2\";[\"OptionalType\";[\"DataType\";\"String\"]]];\n+            [\"Fk1\";[\"OptionalType\";[\"DataType\";\"String\"]]];\n+            [\"Value\";[\"OptionalType\";[\"DataType\";\"String\"]]]]\n+        ];\n+    };\n+}\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_input2.txt b/ydb/library/yql/tests/sql/suites/join/left_join_input2.txt\nnew file mode 100644\nindex 000000000000..94730fa38c5b\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_input2.txt\n@@ -0,0 +1,3 @@\n+{\"Key\"=\"Name1\";\"Value\"=1001};\n+{\"Key\"=\"Name2\";\"Value\"=1002};\n+{\"Key\"=\"Name4\";\"Value\"=#};\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_input2.txt.attr b/ydb/library/yql/tests/sql/suites/join/left_join_input2.txt.attr\nnew file mode 100644\nindex 000000000000..be5e16e2ca8c\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_input2.txt.attr\n@@ -0,0 +1,8 @@\n+{\n+    \"_yql_row_spec\"={\n+        \"Type\"=[\"StructType\";[\n+            [\"Key\";[\"DataType\";\"String\"]];\n+            [\"Value\";[\"OptionalType\";[\"DataType\";\"Int32\"]]]]\n+        ];\n+    }\n+}\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_input3.txt b/ydb/library/yql/tests/sql/suites/join/left_join_input3.txt\nnew file mode 100644\nindex 000000000000..596c900d7dac\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_input3.txt\n@@ -0,0 +1,1 @@\n+{\"Key\"=\"Name2\";\"Value\"=12345};\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_input3.txt.attr b/ydb/library/yql/tests/sql/suites/join/left_join_input3.txt.attr\nnew file mode 100644\nindex 000000000000..be5e16e2ca8c\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_input3.txt.attr\n@@ -0,0 +1,8 @@\n+{\n+    \"_yql_row_spec\"={\n+        \"Type\"=[\"StructType\";[\n+            [\"Key\";[\"DataType\";\"String\"]];\n+            [\"Value\";[\"OptionalType\";[\"DataType\";\"Int32\"]]]]\n+        ];\n+    }\n+}\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_left.cfg b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_left.cfg\nnew file mode 100644\nindex 000000000000..a0d2d24b7fea\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_left.cfg\n@@ -0,0 +1,3 @@\n+in Input1 left_join_input1.txt\n+in Input2 left_join_input2.txt\n+in Input3 left_join_input3.txt\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_left.sql b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_left.sql\nnew file mode 100644\nindex 000000000000..da815ce13b7c\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_left.sql\n@@ -0,0 +1,11 @@\n+PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+SELECT t1.Key1, t1.Key2, t1.Fk1, t1.Value, t2.Key, t2.Value, t3.Value\n+\n+FROM plato.Input1 AS t1\n+LEFT JOIN plato.Input2 AS t2\n+ON t1.Fk1 = t2.Key\n+INNER JOIN plato.Input3 as t3\n+ON t1.Fk1 = t3.Key\n+\n+WHERE t2.Value > 1001;\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_right.cfg b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_right.cfg\nnew file mode 100644\nindex 000000000000..a0d2d24b7fea\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_right.cfg\n@@ -0,0 +1,3 @@\n+in Input1 left_join_input1.txt\n+in Input2 left_join_input2.txt\n+in Input3 left_join_input3.txt\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_right.sql b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_right.sql\nnew file mode 100644\nindex 000000000000..fe7fdeea48ca\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_nested_right.sql\n@@ -0,0 +1,10 @@\n+PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+SELECT t1.Key1, t1.Key2, t1.Fk1, t1.Value, t2.Key, t2.Value, t3.Value\n+\n+FROM plato.Input1 AS t1\n+CROSS JOIN plato.Input3 AS t3\n+LEFT JOIN plato.Input2 AS t2\n+ON t1.Fk1 = t2.Key\n+\n+WHERE t2.Value > 1001;\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_no_opt.cfg b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_no_opt.cfg\nnew file mode 100644\nindex 000000000000..a0d2d24b7fea\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_no_opt.cfg\n@@ -0,0 +1,3 @@\n+in Input1 left_join_input1.txt\n+in Input2 left_join_input2.txt\n+in Input3 left_join_input3.txt\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_no_opt.sql b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_no_opt.sql\nnew file mode 100644\nindex 000000000000..de596ae77b00\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_no_opt.sql\n@@ -0,0 +1,7 @@\n+PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+SELECT t1.Key1, t1.Key2, t1.Fk1, t1.Value, t2.Key, t2.Value FROM plato.Input2 AS t2\n+RIGHT JOIN plato.Input1 AS t1\n+ON t2.Key = t1.Fk1\n+WHERE t1.Key1 > 104\n+ORDER BY t1.Key1, t1.Key2;\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_null.cfg b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_null.cfg\nnew file mode 100644\nindex 000000000000..a0d2d24b7fea\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_null.cfg\n@@ -0,0 +1,3 @@\n+in Input1 left_join_input1.txt\n+in Input2 left_join_input2.txt\n+in Input3 left_join_input3.txt\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_null.sql b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_null.sql\nnew file mode 100644\nindex 000000000000..ec45c754b4cf\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_null.sql\n@@ -0,0 +1,7 @@\n+PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+SELECT t1.Key1, t1.Key2, t1.Fk1, t1.Value, t2.Key, t2.Value FROM plato.Input1 AS t1\n+LEFT JOIN plato.Input2 AS t2\n+ON t1.Fk1 = t2.Key\n+WHERE t2.Value IS NULL\n+ORDER BY t1.Key1, t1.Key2;\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_simple.cfg b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_simple.cfg\nnew file mode 100644\nindex 000000000000..5ffa9b00c020\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_simple.cfg\n@@ -0,0 +1,5 @@\n+in Input input.txt\n+in Input1 input1.txt\n+in Input2 input2.txt\n+in Input3 input3.txt\n+in Input4 input4.txt\ndiff --git a/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_simple.sql b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_simple.sql\nnew file mode 100644\nindex 000000000000..e1c15a8d523e\n--- /dev/null\n+++ b/ydb/library/yql/tests/sql/suites/join/left_join_right_pushdown_simple.sql\n@@ -0,0 +1,9 @@\n+PRAGMA DisableSimpleColumns;\n+PRAGMA FilterPushdownOverJoinOptionalSide;\n+\n+use plato;\n+SELECT *\n+FROM Input2 AS a\n+LEFT JOIN Input3 AS b\n+ON a.value == b.value\n+WHERE b.value >= \"ddd\";\ndiff --git a/ydb/library/yql/tests/sql/yt_native_file/part14/canondata/result.json b/ydb/library/yql/tests/sql/yt_native_file/part14/canondata/result.json\nindex 289226bde27e..5dbb526eee97 100644\n--- a/ydb/library/yql/tests/sql/yt_native_file/part14/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/yt_native_file/part14/canondata/result.json\n@@ -1518,6 +1518,27 @@\n             \"uri\": \"file://test.test_join-join_no_correlation_in_order_by--Results_/extracted\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_null--Debug]\": [\n+        {\n+            \"checksum\": \"d9596a4a9c895a4ec8ff9413898a715d\",\n+            \"size\": 7675,\n+            \"uri\": \"https://{canondata_backend}/1781765/9a473ce6effd6b7221a7888928eb2bee7c613b47/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Debug_/opt.yql\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_null--Plan]\": [\n+        {\n+            \"checksum\": \"cf9d51b3eba8741dc5eaf6741438c010\",\n+            \"size\": 12980,\n+            \"uri\": \"https://{canondata_backend}/1781765/9a473ce6effd6b7221a7888928eb2bee7c613b47/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_null--Results]\": [\n+        {\n+            \"checksum\": \"0955630e0ca49ec1ff0043295bb22de6\",\n+            \"size\": 4948,\n+            \"uri\": \"https://{canondata_backend}/1781765/9a473ce6effd6b7221a7888928eb2bee7c613b47/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Results_/results.txt\"\n+        }\n+    ],\n     \"test.test[join-mapjoin_with_anonymous--Debug]\": [\n         {\n             \"checksum\": \"4bc6ea503944fdf6ccd0243ecc561537\",\ndiff --git a/ydb/library/yql/tests/sql/yt_native_file/part17/canondata/result.json b/ydb/library/yql/tests/sql/yt_native_file/part17/canondata/result.json\nindex d1e1e3aa19e3..fbf7433c7106 100644\n--- a/ydb/library/yql/tests/sql/yt_native_file/part17/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/yt_native_file/part17/canondata/result.json\n@@ -1089,6 +1089,27 @@\n             \"uri\": \"file://test.test_insert_monotonic-truncate_fail--Results_/extracted\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Debug]\": [\n+        {\n+            \"checksum\": \"55f1f3e2f886283179717038d73860a4\",\n+            \"size\": 8861,\n+            \"uri\": \"https://{canondata_backend}/1942278/5eee0724b54e71ecc1267310c6ec2840ee9df422/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Debug_/opt.yql\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Plan]\": [\n+        {\n+            \"checksum\": \"0ebdf2c7ec5a8304a8d9006a25c21d32\",\n+            \"size\": 12233,\n+            \"uri\": \"https://{canondata_backend}/1942278/5eee0724b54e71ecc1267310c6ec2840ee9df422/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_left--Results]\": [\n+        {\n+            \"checksum\": \"b7042fa27e5d4eee580a1d463746ae70\",\n+            \"size\": 4489,\n+            \"uri\": \"https://{canondata_backend}/1942278/5eee0724b54e71ecc1267310c6ec2840ee9df422/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Results_/results.txt\"\n+        }\n+    ],\n     \"test.test[join-mapjoin_on_complex_type_optional_left_only_single--Debug]\": [\n         {\n             \"checksum\": \"ae910ff083d368994e21e0d881f5a654\",\ndiff --git a/ydb/library/yql/tests/sql/yt_native_file/part3/canondata/result.json b/ydb/library/yql/tests/sql/yt_native_file/part3/canondata/result.json\nindex bc826f3a9664..8961678f0a5e 100644\n--- a/ydb/library/yql/tests/sql/yt_native_file/part3/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/yt_native_file/part3/canondata/result.json\n@@ -994,6 +994,27 @@\n             \"uri\": \"https://{canondata_backend}/1903885/df64cdedb0510382ad3c412404939d20ce178ef2/resource.tar.gz#test.test_join-join_comp_inmem--Results_/results.txt\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Debug]\": [\n+        {\n+            \"checksum\": \"a6b68bcfc6c1d21b7dcca62bf0fdb924\",\n+            \"size\": 7999,\n+            \"uri\": \"https://{canondata_backend}/1784826/ab7f9c9bf0394709bda791408ef12d1df09897c5/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Debug_/opt.yql\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Plan]\": [\n+        {\n+            \"checksum\": \"04d005637d6ba7d653765c1b3ba7b66e\",\n+            \"size\": 11727,\n+            \"uri\": \"https://{canondata_backend}/1784826/ab7f9c9bf0394709bda791408ef12d1df09897c5/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_nested_right--Results]\": [\n+        {\n+            \"checksum\": \"b7042fa27e5d4eee580a1d463746ae70\",\n+            \"size\": 4489,\n+            \"uri\": \"https://{canondata_backend}/1784826/ab7f9c9bf0394709bda791408ef12d1df09897c5/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Results_/results.txt\"\n+        }\n+    ],\n     \"test.test[join-lookupjoin_inner_2o--Debug]\": [\n         {\n             \"checksum\": \"876d605791af1a7c1d3f7c915387053b\",\ndiff --git a/ydb/library/yql/tests/sql/yt_native_file/part4/canondata/result.json b/ydb/library/yql/tests/sql/yt_native_file/part4/canondata/result.json\nindex 353714f51020..9375023ecd45 100644\n--- a/ydb/library/yql/tests/sql/yt_native_file/part4/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/yt_native_file/part4/canondata/result.json\n@@ -1008,6 +1008,27 @@\n             \"uri\": \"file://test.test_join-join_without_correlation_names--Results_/extracted\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Debug]\": [\n+        {\n+            \"checksum\": \"885bbcc99fd84d8636ef415b8fe11f9a\",\n+            \"size\": 6523,\n+            \"uri\": \"https://{canondata_backend}/1775319/e1746de31533c59524df36fe1d4afc82a371452c/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Debug_/opt.yql\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Plan]\": [\n+        {\n+            \"checksum\": \"8d15ebcbb3908551e1729cbfd0e2f434\",\n+            \"size\": 9685,\n+            \"uri\": \"https://{canondata_backend}/1775319/e1746de31533c59524df36fe1d4afc82a371452c/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_no_opt--Results]\": [\n+        {\n+            \"checksum\": \"727268422aa8c4cac6ca099721aa6ec3\",\n+            \"size\": 4154,\n+            \"uri\": \"https://{canondata_backend}/1775319/e1746de31533c59524df36fe1d4afc82a371452c/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Results_/results.txt\"\n+        }\n+    ],\n     \"test.test[join-mapjoin_dup_key--Debug]\": [\n         {\n             \"checksum\": \"e2230ba5f2799dbc46ebd1e3b1272f01\",\ndiff --git a/ydb/library/yql/tests/sql/yt_native_file/part5/canondata/result.json b/ydb/library/yql/tests/sql/yt_native_file/part5/canondata/result.json\nindex 92740e616a8f..fffa98f82b53 100644\n--- a/ydb/library/yql/tests/sql/yt_native_file/part5/canondata/result.json\n+++ b/ydb/library/yql/tests/sql/yt_native_file/part5/canondata/result.json\n@@ -1605,6 +1605,27 @@\n             \"uri\": \"https://{canondata_backend}/1937001/8fe07ef7cc25307b581b0025d7d9b94b09d1f7b7/resource.tar.gz#test.test_join-left_join_null_column--Results_/results.txt\"\n         }\n     ],\n+    \"test.test[join-left_join_right_pushdown_simple--Debug]\": [\n+        {\n+            \"checksum\": \"fb2deb29e181775df85b8a6e376b6737\",\n+            \"size\": 4058,\n+            \"uri\": \"https://{canondata_backend}/1871182/e13cdc3a13a276452794aec990179dc752dbf5fa/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Debug_/opt.yql\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_simple--Plan]\": [\n+        {\n+            \"checksum\": \"8e334990d4af46b9011c5b7838553ba4\",\n+            \"size\": 6617,\n+            \"uri\": \"https://{canondata_backend}/1871182/e13cdc3a13a276452794aec990179dc752dbf5fa/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Plan_/plan.txt\"\n+        }\n+    ],\n+    \"test.test[join-left_join_right_pushdown_simple--Results]\": [\n+        {\n+            \"checksum\": \"eafcf6081800759a74bce4d7c2ff35e3\",\n+            \"size\": 3532,\n+            \"uri\": \"https://{canondata_backend}/1871182/e13cdc3a13a276452794aec990179dc752dbf5fa/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Results_/results.txt\"\n+        }\n+    ],\n     \"test.test[join-lookupjoin_bug7646_subst--Debug]\": [\n         {\n             \"checksum\": \"976b3c5201f801c256191f9375b78692\",\n",
  "problem_statement": "[[TPC-DS]]: YQL-17364: tpcds-49 \u041d\u0435\u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043b\u0430\u043d \u043f\u043e\u0434\u0437\u0430\u043f\u0440\u043e\u0441\u0430 (\u043d\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043f\u0435\u0440\u0435\u0434 \u0434\u0436\u043e\u0439\u043d\u043e\u043c)\n\n",
  "hints_text": "**Problem type:** yt\r\n**Username:** @psushin\r\n**Url:** https://yql-test.yandex-team.ru/Operations/6572edd3074f35528d6c9847\r\n**Timestamp:** Fri Dec 08 2023 13:21:38 GMT+0300 (Moscow Standard Time)\r\n**User description:** <[\u0425\u043e\u0442\u0438\u043c \u0438\u0437\u0431\u0430\u0432\u0438\u0442\u044c\u0441\u044f \u043e\u0442 full-scan \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b]>\r\n        \r\n<{Query text\r\n%%(yql)\r\n\r\n\r\n\r\n-- START PARAMETERS\r\nuse ada;\r\npragma TablePathPrefix = \"home/tpcds/3Tb\";\r\npragma CostBasedOptimizer=\"Native\";\r\n\r\npragma yt.OperationSpec='{time_limit=3600000}';\r\npragma yt.MaxReplicationFactorToFuseOperations=\"30\";\r\npragma CompactGroupBy;\r\n-- END PARAMETERS\r\n\r\n\r\n\r\n\r\n-- START COMMON HEADER\r\npragma TablePathPrefix = \"home/tpcds/3Tb\";\r\npragma yt.TemporaryPrimaryMedium = \"ssd_blobs_tpcds_bench\";\r\npragma yt.PublishedPrimaryMedium = \"ssd_blobs_tpcds_bench\";\r\npragma yt.IntermediateDataMedium = \"ssd_blobs_tpcds_bench\";\r\npragma yt.Pool = \"tpcds\";\r\npragma yt.SchedulingTagFilter = \"%true\";\r\npragma yt.QueryCacheMode = \"disable\";\r\n--pragma dq.WorkerFilter='ClusterName: \"ada\"';\r\n--pragma DqEngine=\"auto\";\r\npragma yt.HybridDqExecution = \"true\";\r\npragma yt.AutoMerge = \"disabled\";\r\npragma yt.DataSizePerJob = \"16M\";\r\npragma yt.DataSizePerMapJob = \"24M\";\r\n--pragma yt.DataSizePerSortJob = \"1G\";\r\npragma yt.DataSizePerPartition = \"64M\";\r\npragma AnsiOptionalAs;\r\npragma AnsiInForEmptyOrNullableItemsCollections;\r\npragma yt.MapJoinLimit = \"33554432\";\r\n-- END COMMON HEADER\r\n\r\n-- NB: Subquerys\r\n-- start query 1 in stream 0 using template query49.tpl and seed 1819994127\r\n\r\n\tselect *\r\n \t\tfrom\r\n \t\t web_sales ws left join web_returns wr on (ws.ws_order_number = wr.wr_order_number \r\n         and\tws.ws_item_sk = wr.wr_item_sk)\r\n                 cross join date_dim\r\n \t\twhere\r\n \t\t\twr.wr_return_amt > 10000\r\n \t\t\tand ws.ws_net_profit > 1\r\n                         and ws.ws_net_paid > 0\r\n                         and ws.ws_quantity > 0\r\n                         and ws_sold_date_sk = d_date_sk\r\n                         and d_year = 2000\r\n                         and d_moy = 12\r\n\r\n \t\r\n%%}>\r\n<{Debug info\r\n##>> 2023-12-08 13:21:03.406    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=DATA,EXEC_STATISTICS,PLAN,PROGRESS,AST&version=1000000&columns_preset=false 200   47803##\r\n##<< 2023-12-08 13:21:03.567##\r\n//Response data//\r\n%%(json) {\r\n  \"ast\": \"(\\n(let $1 (DataSource '\\\"yt\\\" '\\\"$all\\\"))\\n(let $2 (YtConfigure! world $1 '\\\"Attr\\\" '\\\"operationspec\\\" '\\\"{time_limit=3600000}\\\"))\\n(let $3 (YtConfigure! $2 $1 '\\\"Attr\\\" '\\\"maxreplicationfactortofuseoperations\\\" '\\\"30\\\"))\\n(let $4 '\\\"ssd_blobs_tpcds_bench\\\")\\n(let $5 (YtConfigure! $3 $1 '\\\"Attr\\\" '\\\"temporaryprimarymedium\\\" $4))\\n(let $6 (YtConfigure! $5 $1 '\\\"Attr\\\" '\\\"publishedprimarymedium\\\" $4))\\n(let $7 (YtConfigure! $6 $1 '\\\"Attr\\\" '\\\"intermediatedatamedium\\\" $4))\\n(let $8 (YtConfigure! $7 $1 '\\\"Attr\\\" '\\\"pool\\\" '\\\"tpcds\\\"))\\n(let $9 (YtConfigure! $8 $1 '\\\"Attr\\\" '\\\"schedulingtagfilter\\\" '\\\"%true\\\"))\\n(let $10 (YtConfigure! $9 $1 '\\\"Attr\\\" '\\\"querycachemode\\\" '\\\"disable\\\"))\\n(let $11 (YtConfigure! $10 $1 '\\\"Attr\\\" '\\\"hybriddqexecution\\\" 'true))\\n(let $12 (YtConfigure! $11 $1 '\\\"Attr\\\" '\\\"automerge\\\" '\\\"disabled\\\"))\\n(let $13 (YtConfigure! $12 $1 '\\\"Attr\\\" '\\\"datasizeperjob\\\" '\\\"16M\\\"))\\n(let $14 (YtConfigure! $13 $1 '\\\"Attr\\\" '\\\"datasizepermapjob\\\" '\\\"24M\\\"))\\n(let $15 (YtConfigure! $14 $1 '\\\"Attr\\\" '\\\"datasizeperpartition\\\" '\\\"64M\\\"))\\n(let $16 (YtConfigure! $15 $1 '\\\"Attr\\\" '\\\"mapjoinlimit\\\" '\\\"33554432\\\"))\\n(let $17 (DataSource '\\\"config\\\"))\\n(let $18 (Configure! world $17 '\\\"DqEngine\\\" '\\\"auto\\\"))\\n(let $19 (Configure! $18 $17 '\\\"CostBasedOptimizer\\\" '\\\"native\\\"))\\n(let $20 (DataSink 'result))\\n(let $21 (DataSink '\\\"yt\\\" '\\\"ada\\\"))\\n(let $22 '('NativeYtTypeFlags '0))\\n(let $23 '('StrictSchema '1))\\n(let $24 '('UniqueKeys '0))\\n(let $25 '@@[\\\"StructType\\\";[[\\\"d_current_day\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_month\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_quarter\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_week\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Date\\\"]]];[\\\"d_date_id\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_day_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_dow\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_first_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_following_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_fy_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_last_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_month_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_moy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_qoy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_quarter_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_lq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_ly\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_weekend\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_account_credit\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_fee\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_item_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_net_loss\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_order_number\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reason_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_cash\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_refunded_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_amt\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_amt_inc_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_quantity\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_ship_cost\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_returned_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returned_time_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reversed_charge\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_web_page_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_hdemo_sk\\\";[\\\"OptionalType\\\";\r\n...%%\r\n\r\n##>> 2023-12-08 13:21:03.396    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=DATA,EXEC_STATISTICS,PLAN,PROGRESS,AST&version=999999&columns_preset=false 200   47803##\r\n##<< 2023-12-08 13:21:03.548##\r\n//Response data//\r\n%%(json) {\r\n  \"ast\": \"(\\n(let $1 (DataSource '\\\"yt\\\" '\\\"$all\\\"))\\n(let $2 (YtConfigure! world $1 '\\\"Attr\\\" '\\\"operationspec\\\" '\\\"{time_limit=3600000}\\\"))\\n(let $3 (YtConfigure! $2 $1 '\\\"Attr\\\" '\\\"maxreplicationfactortofuseoperations\\\" '\\\"30\\\"))\\n(let $4 '\\\"ssd_blobs_tpcds_bench\\\")\\n(let $5 (YtConfigure! $3 $1 '\\\"Attr\\\" '\\\"temporaryprimarymedium\\\" $4))\\n(let $6 (YtConfigure! $5 $1 '\\\"Attr\\\" '\\\"publishedprimarymedium\\\" $4))\\n(let $7 (YtConfigure! $6 $1 '\\\"Attr\\\" '\\\"intermediatedatamedium\\\" $4))\\n(let $8 (YtConfigure! $7 $1 '\\\"Attr\\\" '\\\"pool\\\" '\\\"tpcds\\\"))\\n(let $9 (YtConfigure! $8 $1 '\\\"Attr\\\" '\\\"schedulingtagfilter\\\" '\\\"%true\\\"))\\n(let $10 (YtConfigure! $9 $1 '\\\"Attr\\\" '\\\"querycachemode\\\" '\\\"disable\\\"))\\n(let $11 (YtConfigure! $10 $1 '\\\"Attr\\\" '\\\"hybriddqexecution\\\" 'true))\\n(let $12 (YtConfigure! $11 $1 '\\\"Attr\\\" '\\\"automerge\\\" '\\\"disabled\\\"))\\n(let $13 (YtConfigure! $12 $1 '\\\"Attr\\\" '\\\"datasizeperjob\\\" '\\\"16M\\\"))\\n(let $14 (YtConfigure! $13 $1 '\\\"Attr\\\" '\\\"datasizepermapjob\\\" '\\\"24M\\\"))\\n(let $15 (YtConfigure! $14 $1 '\\\"Attr\\\" '\\\"datasizeperpartition\\\" '\\\"64M\\\"))\\n(let $16 (YtConfigure! $15 $1 '\\\"Attr\\\" '\\\"mapjoinlimit\\\" '\\\"33554432\\\"))\\n(let $17 (DataSource '\\\"config\\\"))\\n(let $18 (Configure! world $17 '\\\"DqEngine\\\" '\\\"auto\\\"))\\n(let $19 (Configure! $18 $17 '\\\"CostBasedOptimizer\\\" '\\\"native\\\"))\\n(let $20 (DataSink 'result))\\n(let $21 (DataSink '\\\"yt\\\" '\\\"ada\\\"))\\n(let $22 '('NativeYtTypeFlags '0))\\n(let $23 '('StrictSchema '1))\\n(let $24 '('UniqueKeys '0))\\n(let $25 '@@[\\\"StructType\\\";[[\\\"d_current_day\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_month\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_quarter\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_week\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Date\\\"]]];[\\\"d_date_id\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_day_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_dow\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_first_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_following_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_fy_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_last_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_month_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_moy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_qoy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_quarter_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_lq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_ly\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_weekend\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_account_credit\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_fee\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_item_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_net_loss\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_order_number\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reason_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_cash\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_refunded_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_amt\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_amt_inc_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_quantity\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_ship_cost\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_returned_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returned_time_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reversed_charge\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_web_page_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_hdemo_sk\\\";[\\\"OptionalType\\\";\r\n...%%\r\n\r\n##>> 2023-12-08 13:21:03.395    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847?version=1000000 200   2429##\r\n##<< 2023-12-08 13:21:03.551##\r\n//Response data//\r\n%%(json) {\r\n  \"clusterType\": \"UNKNOWN\",\r\n  \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n  \"execMode\": \"RUN\",\r\n  \"externalQueryIds\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n  \"queryData\": {\r\n    \"attributes\": {\r\n      \"user_agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.1064 YaBrowser/23.9.1.1064 (beta) Yowser/2.5 Safari/537.36\"\r\n    },\r\n    \"clusterType\": \"UNKNOWN\",\r\n    \"content\": \"\\n\\n\\n-- START PARAMETERS\\nuse ada;\\npragma TablePathPrefix = \\\"home/tpcds/3Tb\\\";\\npragma CostBasedOptimizer=\\\"Native\\\";\\n\\npragma yt.OperationSpec='{time_limit=3600000}';\\npragma yt.MaxReplicationFactorToFuseOperations=\\\"30\\\";\\npragma CompactGroupBy;\\n-- END PARAMETERS\\n\\n\\n\\n\\n-- START COMMON HEADER\\npragma TablePathPrefix = \\\"home/tpcds/3Tb\\\";\\npragma yt.TemporaryPrimaryMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.PublishedPrimaryMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.IntermediateDataMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.Pool = \\\"tpcds\\\";\\npragma yt.SchedulingTagFilter = \\\"%true\\\";\\npragma yt.QueryCacheMode = \\\"disable\\\";\\n--pragma dq.WorkerFilter='ClusterName: \\\"ada\\\"';\\n--pragma DqEngine=\\\"auto\\\";\\npragma yt.HybridDqExecution = \\\"true\\\";\\npragma yt.AutoMerge = \\\"disabled\\\";\\npragma yt.DataSizePerJob = \\\"16M\\\";\\npragma yt.DataSizePerMapJob = \\\"24M\\\";\\n--pragma yt.DataSizePerSortJob = \\\"1G\\\";\\npragma yt.DataSizePerPartition = \\\"64M\\\";\\npragma AnsiOptionalAs;\\npragma AnsiInForEmptyOrNullableItemsCollections;\\npragma yt.MapJoinLimit = \\\"33554432\\\";\\n-- END COMMON HEADER\\n\\n-- NB: Subquerys\\n-- start query 1 in stream 0 using template query49.tpl and seed 1819994127\\n\\n\\tselect *\\n \\t\\tfrom\\n \\t\\t web_sales ws left join web_returns wr on (ws.ws_order_number = wr.wr_order_number \\n         and\\tws.ws_item_sk = wr.wr_item_sk)\\n                 cross join date_dim\\n \\t\\twhere\\n \\t\\t\\twr.wr_return_amt > 10000\\n \\t\\t\\tand ws.ws_net_profit > 1\\n                         and ws.ws_net_paid > 0\\n                         and ws.ws_quantity > 0\\n                         and ws_sold_date_sk = d_date_sk\\n                         and d_year = 2000\\n                         and d_moy = 12\\n\\n \\t\",\r\n    \"files\": [],\r\n    \"parameters\": {},\r\n    \"type\": \"SQLv1\"\r\n  },\r\n  \"queryType\": \"SQLv1\",\r\n  \"status\": \"ABORTED\",\r\n  \"updatedAt\": \"2023-12-08T10:21:00.696Z\",\r\n  \"username\": \"psushin\",\r\n  \"version\": 1000000,\r\n  \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n  \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n  \"workerPid\": \"861219\",\r\n  \"workerVersion\": \"13048753\"\r\n}%%\r\n\r\n##>> 2023-12-08 13:21:03.216    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=&columns_preset=false 200   400##\r\n##<< 2023-12-08 13:21:03.395##\r\n//Response data//\r\n%%(json) {\r\n  \"errors\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"issues\": [\r\n    {\r\n      \"code\": 1070,\r\n      \"column\": 0,\r\n      \"file\": \"<main>\",\r\n      \"issues\": [\r\n        {\r\n          \"code\": 0,\r\n          \"column\": 0,\r\n          \"file\": \"<main>\",\r\n          \"issues\": [],\r\n          \"message\": \"DQ cannot execute the query. Cause: unsupported yt pragma: operationspec\",\r\n          \"row\": 0,\r\n          \"severity\": \"S_INFO\"\r\n        }\r\n      ],\r\n      \"message\": \"Optimization\",\r\n      \"row\": 0,\r\n      \"severity\": \"S_INFO\"\r\n    }\r\n  ],\r\n  \"status\": \"ABORTED\",\r\n  \"updatedAt\": \"2023-12-08T10:21:00.664Z\",\r\n  \"version\": 1000000\r\n}%%\r\n\r\n##>> 2023-12-08 13:21:01.288    GET https://yql-api-test.yandex-team.ru/api/v2/operations?project_service_slug=psushin&page_size=50&sort=-createdAt&page=0&filters=(username%3Dpsushin) 200   23934##\r\n##<< 2023-12-08 13:21:01.466##\r\n//Response data//\r\n%%(json) {\r\n  \"page\": {\r\n    \"count\": 2,\r\n    \"current\": 0,\r\n    \"next\": 1\r\n  },\r\n  \"result\": [\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572edd3074f35528d6c9847\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ABORTED\",\r\n      \"updatedAt\": \"2023-12-08T10:21:00.696Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n      \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n      \"workerPid\": \"861219\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:20.290Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda87543d45a39ed9366\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ABORTED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:53.003Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"241554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:17.165Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda57543d45a39ed9355\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:18.185Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"591881\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:46.294Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed86074f35528d6c9778\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:18:47.391Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"590834\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:38.958Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed7e7543d45a39ed92e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:39.692Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test01.search.yandex.net\",\r\n      \"workerId\": \"83d38b4b-b006ffed-ecbf3042-da205ff3\",\r\n      \"workerPid\": \"689554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:29.235Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed757543d45a39ed92c7\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:30.013Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test04.search.yandex.net\",\r\n      \"workerId\": \"dbfd9c86-b594da57-6dede183-3d364e46\",\r\n      \"workerPid\": \"947935\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T09:51:12.251Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572e710074f35528d6c8682\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-49\",\r\n      \"updatedAt\": \"2023-12-08T10:02:27.527Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"170780\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:19:48.836Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637e34ced8c52a70f77897\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-7\",\r\n      \"updatedAt\": \"2023-11-26T17:28:42.704Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"cd7e9331-587d0fee-fa09ea24-c9766bf9\",\r\n      \"workerPid\": \"743831\",\r\n      \"workerVersion\": \"12966812\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:17:58.794Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637dc6ced8c52a70f777e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-11\",\r\n      \"updatedAt\": \"2023-11-26T17:41:17.751Z\",\r\n      \"username\r\n...%%\r\n\r\n##>> 2023-12-08 13:20:59.257    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=DATA,EXEC_STATISTICS,PLAN,PROGRESS,AST&version=999999&columns_preset=false 200   44373##\r\n##<< 2023-12-08 13:20:59.419##\r\n//Response data//\r\n%%(json) {\r\n  \"ast\": \"(\\n(let $1 (DataSource '\\\"yt\\\" '\\\"$all\\\"))\\n(let $2 (YtConfigure! world $1 '\\\"Attr\\\" '\\\"operationspec\\\" '\\\"{time_limit=3600000}\\\"))\\n(let $3 (YtConfigure! $2 $1 '\\\"Attr\\\" '\\\"maxreplicationfactortofuseoperations\\\" '\\\"30\\\"))\\n(let $4 '\\\"ssd_blobs_tpcds_bench\\\")\\n(let $5 (YtConfigure! $3 $1 '\\\"Attr\\\" '\\\"temporaryprimarymedium\\\" $4))\\n(let $6 (YtConfigure! $5 $1 '\\\"Attr\\\" '\\\"publishedprimarymedium\\\" $4))\\n(let $7 (YtConfigure! $6 $1 '\\\"Attr\\\" '\\\"intermediatedatamedium\\\" $4))\\n(let $8 (YtConfigure! $7 $1 '\\\"Attr\\\" '\\\"pool\\\" '\\\"tpcds\\\"))\\n(let $9 (YtConfigure! $8 $1 '\\\"Attr\\\" '\\\"schedulingtagfilter\\\" '\\\"%true\\\"))\\n(let $10 (YtConfigure! $9 $1 '\\\"Attr\\\" '\\\"querycachemode\\\" '\\\"disable\\\"))\\n(let $11 (YtConfigure! $10 $1 '\\\"Attr\\\" '\\\"hybriddqexecution\\\" 'true))\\n(let $12 (YtConfigure! $11 $1 '\\\"Attr\\\" '\\\"automerge\\\" '\\\"disabled\\\"))\\n(let $13 (YtConfigure! $12 $1 '\\\"Attr\\\" '\\\"datasizeperjob\\\" '\\\"16M\\\"))\\n(let $14 (YtConfigure! $13 $1 '\\\"Attr\\\" '\\\"datasizepermapjob\\\" '\\\"24M\\\"))\\n(let $15 (YtConfigure! $14 $1 '\\\"Attr\\\" '\\\"datasizeperpartition\\\" '\\\"64M\\\"))\\n(let $16 (YtConfigure! $15 $1 '\\\"Attr\\\" '\\\"mapjoinlimit\\\" '\\\"33554432\\\"))\\n(let $17 (DataSource '\\\"config\\\"))\\n(let $18 (Configure! world $17 '\\\"DqEngine\\\" '\\\"auto\\\"))\\n(let $19 (Configure! $18 $17 '\\\"CostBasedOptimizer\\\" '\\\"native\\\"))\\n(let $20 (DataSink 'result))\\n(let $21 (DataSink '\\\"yt\\\" '\\\"ada\\\"))\\n(let $22 '('NativeYtTypeFlags '0))\\n(let $23 '('StrictSchema '1))\\n(let $24 '('UniqueKeys '0))\\n(let $25 '@@[\\\"StructType\\\";[[\\\"d_current_day\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_month\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_quarter\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_week\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Date\\\"]]];[\\\"d_date_id\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_day_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_dow\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_first_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_following_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_fy_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_last_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_month_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_moy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_qoy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_quarter_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_lq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_ly\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_weekend\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_account_credit\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_fee\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_item_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_net_loss\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_order_number\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reason_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_cash\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_refunded_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_amt\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_amt_inc_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_quantity\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_ship_cost\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_returned_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returned_time_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reversed_charge\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_web_page_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_hdemo_sk\\\";[\\\"OptionalType\\\";\r\n...%%\r\n\r\n##>> 2023-12-08 13:20:59.249    GET https://yql-api-test.yandex-team.ru/api/v2/operations?project_service_slug=psushin&page_size=50&sort=-createdAt&page=0&filters=(username%3Dpsushin) 200   23933##\r\n##<< 2023-12-08 13:20:59.430##\r\n//Response data//\r\n%%(json) {\r\n  \"page\": {\r\n    \"count\": 2,\r\n    \"current\": 0,\r\n    \"next\": 1\r\n  },\r\n  \"result\": [\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572edd3074f35528d6c9847\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ABORTED\",\r\n      \"updatedAt\": \"2023-12-08T10:20:59.194Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 999999,\r\n      \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n      \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n      \"workerPid\": \"861219\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:20.290Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda87543d45a39ed9366\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ABORTED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:53.003Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"241554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:17.165Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda57543d45a39ed9355\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:18.185Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"591881\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:46.294Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed86074f35528d6c9778\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:18:47.391Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"590834\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:38.958Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed7e7543d45a39ed92e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:39.692Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test01.search.yandex.net\",\r\n      \"workerId\": \"83d38b4b-b006ffed-ecbf3042-da205ff3\",\r\n      \"workerPid\": \"689554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:29.235Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed757543d45a39ed92c7\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:30.013Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test04.search.yandex.net\",\r\n      \"workerId\": \"dbfd9c86-b594da57-6dede183-3d364e46\",\r\n      \"workerPid\": \"947935\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T09:51:12.251Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572e710074f35528d6c8682\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-49\",\r\n      \"updatedAt\": \"2023-12-08T10:02:27.527Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"170780\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:19:48.836Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637e34ced8c52a70f77897\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-7\",\r\n      \"updatedAt\": \"2023-11-26T17:28:42.704Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"cd7e9331-587d0fee-fa09ea24-c9766bf9\",\r\n      \"workerPid\": \"743831\",\r\n      \"workerVersion\": \"12966812\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:17:58.794Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637dc6ced8c52a70f777e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-11\",\r\n      \"updatedAt\": \"2023-11-26T17:41:17.751Z\",\r\n      \"username\"\r\n...%%\r\n\r\n##>> 2023-12-08 13:20:59.249    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847?version=3 200   2428##\r\n##<< 2023-12-08 13:20:59.435##\r\n//Response data//\r\n%%(json) {\r\n  \"clusterType\": \"UNKNOWN\",\r\n  \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n  \"execMode\": \"RUN\",\r\n  \"externalQueryIds\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n  \"queryData\": {\r\n    \"attributes\": {\r\n      \"user_agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.1064 YaBrowser/23.9.1.1064 (beta) Yowser/2.5 Safari/537.36\"\r\n    },\r\n    \"clusterType\": \"UNKNOWN\",\r\n    \"content\": \"\\n\\n\\n-- START PARAMETERS\\nuse ada;\\npragma TablePathPrefix = \\\"home/tpcds/3Tb\\\";\\npragma CostBasedOptimizer=\\\"Native\\\";\\n\\npragma yt.OperationSpec='{time_limit=3600000}';\\npragma yt.MaxReplicationFactorToFuseOperations=\\\"30\\\";\\npragma CompactGroupBy;\\n-- END PARAMETERS\\n\\n\\n\\n\\n-- START COMMON HEADER\\npragma TablePathPrefix = \\\"home/tpcds/3Tb\\\";\\npragma yt.TemporaryPrimaryMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.PublishedPrimaryMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.IntermediateDataMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.Pool = \\\"tpcds\\\";\\npragma yt.SchedulingTagFilter = \\\"%true\\\";\\npragma yt.QueryCacheMode = \\\"disable\\\";\\n--pragma dq.WorkerFilter='ClusterName: \\\"ada\\\"';\\n--pragma DqEngine=\\\"auto\\\";\\npragma yt.HybridDqExecution = \\\"true\\\";\\npragma yt.AutoMerge = \\\"disabled\\\";\\npragma yt.DataSizePerJob = \\\"16M\\\";\\npragma yt.DataSizePerMapJob = \\\"24M\\\";\\n--pragma yt.DataSizePerSortJob = \\\"1G\\\";\\npragma yt.DataSizePerPartition = \\\"64M\\\";\\npragma AnsiOptionalAs;\\npragma AnsiInForEmptyOrNullableItemsCollections;\\npragma yt.MapJoinLimit = \\\"33554432\\\";\\n-- END COMMON HEADER\\n\\n-- NB: Subquerys\\n-- start query 1 in stream 0 using template query49.tpl and seed 1819994127\\n\\n\\tselect *\\n \\t\\tfrom\\n \\t\\t web_sales ws left join web_returns wr on (ws.ws_order_number = wr.wr_order_number \\n         and\\tws.ws_item_sk = wr.wr_item_sk)\\n                 cross join date_dim\\n \\t\\twhere\\n \\t\\t\\twr.wr_return_amt > 10000\\n \\t\\t\\tand ws.ws_net_profit > 1\\n                         and ws.ws_net_paid > 0\\n                         and ws.ws_quantity > 0\\n                         and ws_sold_date_sk = d_date_sk\\n                         and d_year = 2000\\n                         and d_moy = 12\\n\\n \\t\",\r\n    \"files\": [],\r\n    \"parameters\": {},\r\n    \"type\": \"SQLv1\"\r\n  },\r\n  \"queryType\": \"SQLv1\",\r\n  \"status\": \"ABORTED\",\r\n  \"updatedAt\": \"2023-12-08T10:20:59.194Z\",\r\n  \"username\": \"psushin\",\r\n  \"version\": 999999,\r\n  \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n  \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n  \"workerPid\": \"861219\",\r\n  \"workerVersion\": \"13048753\"\r\n}%%\r\n\r\n##>> 2023-12-08 13:20:58.983    POST https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847 200   432##\r\n##<< 2023-12-08 13:20:59.248##\r\n//Request data//\r\n%%(json) {\r\n  \"action\": \"ABORT\"\r\n}%%\r\n//Response data//\r\n%%(json) {\r\n  \"clusterType\": \"UNKNOWN\",\r\n  \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n  \"execMode\": \"RUN\",\r\n  \"externalQueryIds\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n  \"queryType\": \"SQLv1\",\r\n  \"status\": \"ABORTED\",\r\n  \"updatedAt\": \"2023-12-08T10:20:59.194621Z\",\r\n  \"username\": \"psushin\",\r\n  \"version\": 999999,\r\n  \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n  \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n  \"workerPid\": \"861219\",\r\n  \"workerVersion\": \"13048753\"\r\n}%%\r\n\r\n##>> 2023-12-08 13:20:33.233    GET https://yql-api-test.yandex-team.ru/api/v2/operations?project_service_slug=psushin&page_size=50&sort=-createdAt&page=0&filters=(status%3DPENDING%7Cstatus%3DRUNNING%7Cstatus%3DABORTING),(username%3Dpsushin) 200   468##\r\n##<< 2023-12-08 13:20:33.478##\r\n//Response data//\r\n%%(json) {\r\n  \"page\": {\r\n    \"count\": 1,\r\n    \"current\": 0\r\n  },\r\n  \"result\": [\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572edd3074f35528d6c9847\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"RUNNING\",\r\n      \"updatedAt\": \"2023-12-08T10:20:04.881Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 3,\r\n      \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n      \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n      \"workerPid\": \"861219\",\r\n      \"workerVersion\": \"13048753\"\r\n    }\r\n  ]\r\n}%%\r\n\r\n##>> 2023-12-08 13:20:33.215    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=&columns_preset=false 200   394##\r\n##<< 2023-12-08 13:20:33.366##\r\n//Response data//\r\n%%(json) {\r\n  \"errors\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"issues\": [\r\n    {\r\n      \"code\": 1070,\r\n      \"column\": 0,\r\n      \"file\": \"<main>\",\r\n      \"issues\": [\r\n        {\r\n          \"code\": 0,\r\n          \"column\": 0,\r\n          \"file\": \"<main>\",\r\n          \"issues\": [],\r\n          \"message\": \"DQ cannot execute the query. Cause: unsupported yt pragma: operationspec\",\r\n          \"row\": 0,\r\n          \"severity\": \"S_INFO\"\r\n        }\r\n      ],\r\n      \"message\": \"Optimization\",\r\n      \"row\": 0,\r\n      \"severity\": \"S_INFO\"\r\n    }\r\n  ],\r\n  \"status\": \"RUNNING\",\r\n  \"updatedAt\": \"2023-12-08T10:20:04.845Z\",\r\n  \"version\": 3\r\n}%%\r\n\r\n##>> 2023-12-08 13:20:04.887    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=DATA,EXEC_STATISTICS,PLAN,PROGRESS,AST&version=3&columns_preset=false 200   44368##\r\n##<< 2023-12-08 13:20:05.047##\r\n//Response data//\r\n%%(json) {\r\n  \"ast\": \"(\\n(let $1 (DataSource '\\\"yt\\\" '\\\"$all\\\"))\\n(let $2 (YtConfigure! world $1 '\\\"Attr\\\" '\\\"operationspec\\\" '\\\"{time_limit=3600000}\\\"))\\n(let $3 (YtConfigure! $2 $1 '\\\"Attr\\\" '\\\"maxreplicationfactortofuseoperations\\\" '\\\"30\\\"))\\n(let $4 '\\\"ssd_blobs_tpcds_bench\\\")\\n(let $5 (YtConfigure! $3 $1 '\\\"Attr\\\" '\\\"temporaryprimarymedium\\\" $4))\\n(let $6 (YtConfigure! $5 $1 '\\\"Attr\\\" '\\\"publishedprimarymedium\\\" $4))\\n(let $7 (YtConfigure! $6 $1 '\\\"Attr\\\" '\\\"intermediatedatamedium\\\" $4))\\n(let $8 (YtConfigure! $7 $1 '\\\"Attr\\\" '\\\"pool\\\" '\\\"tpcds\\\"))\\n(let $9 (YtConfigure! $8 $1 '\\\"Attr\\\" '\\\"schedulingtagfilter\\\" '\\\"%true\\\"))\\n(let $10 (YtConfigure! $9 $1 '\\\"Attr\\\" '\\\"querycachemode\\\" '\\\"disable\\\"))\\n(let $11 (YtConfigure! $10 $1 '\\\"Attr\\\" '\\\"hybriddqexecution\\\" 'true))\\n(let $12 (YtConfigure! $11 $1 '\\\"Attr\\\" '\\\"automerge\\\" '\\\"disabled\\\"))\\n(let $13 (YtConfigure! $12 $1 '\\\"Attr\\\" '\\\"datasizeperjob\\\" '\\\"16M\\\"))\\n(let $14 (YtConfigure! $13 $1 '\\\"Attr\\\" '\\\"datasizepermapjob\\\" '\\\"24M\\\"))\\n(let $15 (YtConfigure! $14 $1 '\\\"Attr\\\" '\\\"datasizeperpartition\\\" '\\\"64M\\\"))\\n(let $16 (YtConfigure! $15 $1 '\\\"Attr\\\" '\\\"mapjoinlimit\\\" '\\\"33554432\\\"))\\n(let $17 (DataSource '\\\"config\\\"))\\n(let $18 (Configure! world $17 '\\\"DqEngine\\\" '\\\"auto\\\"))\\n(let $19 (Configure! $18 $17 '\\\"CostBasedOptimizer\\\" '\\\"native\\\"))\\n(let $20 (DataSink 'result))\\n(let $21 (DataSink '\\\"yt\\\" '\\\"ada\\\"))\\n(let $22 '('NativeYtTypeFlags '0))\\n(let $23 '('StrictSchema '1))\\n(let $24 '('UniqueKeys '0))\\n(let $25 '@@[\\\"StructType\\\";[[\\\"d_current_day\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_month\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_quarter\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_week\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Date\\\"]]];[\\\"d_date_id\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_day_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_dow\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_first_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_following_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_fy_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_last_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_month_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_moy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_qoy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_quarter_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_lq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_ly\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_weekend\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_account_credit\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_fee\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_item_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_net_loss\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_order_number\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reason_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_cash\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_refunded_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_amt\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_amt_inc_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_quantity\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_ship_cost\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_returned_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returned_time_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reversed_charge\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_web_page_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_hdemo_sk\\\";[\\\"OptionalType\\\";\r\n...%%\r\n\r\n##>> 2023-12-08 13:20:04.880    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=DATA,EXEC_STATISTICS,PLAN,PROGRESS,AST&version=2&columns_preset=false 200   44368##\r\n##<< 2023-12-08 13:20:05.045##\r\n//Response data//\r\n%%(json) {\r\n  \"ast\": \"(\\n(let $1 (DataSource '\\\"yt\\\" '\\\"$all\\\"))\\n(let $2 (YtConfigure! world $1 '\\\"Attr\\\" '\\\"operationspec\\\" '\\\"{time_limit=3600000}\\\"))\\n(let $3 (YtConfigure! $2 $1 '\\\"Attr\\\" '\\\"maxreplicationfactortofuseoperations\\\" '\\\"30\\\"))\\n(let $4 '\\\"ssd_blobs_tpcds_bench\\\")\\n(let $5 (YtConfigure! $3 $1 '\\\"Attr\\\" '\\\"temporaryprimarymedium\\\" $4))\\n(let $6 (YtConfigure! $5 $1 '\\\"Attr\\\" '\\\"publishedprimarymedium\\\" $4))\\n(let $7 (YtConfigure! $6 $1 '\\\"Attr\\\" '\\\"intermediatedatamedium\\\" $4))\\n(let $8 (YtConfigure! $7 $1 '\\\"Attr\\\" '\\\"pool\\\" '\\\"tpcds\\\"))\\n(let $9 (YtConfigure! $8 $1 '\\\"Attr\\\" '\\\"schedulingtagfilter\\\" '\\\"%true\\\"))\\n(let $10 (YtConfigure! $9 $1 '\\\"Attr\\\" '\\\"querycachemode\\\" '\\\"disable\\\"))\\n(let $11 (YtConfigure! $10 $1 '\\\"Attr\\\" '\\\"hybriddqexecution\\\" 'true))\\n(let $12 (YtConfigure! $11 $1 '\\\"Attr\\\" '\\\"automerge\\\" '\\\"disabled\\\"))\\n(let $13 (YtConfigure! $12 $1 '\\\"Attr\\\" '\\\"datasizeperjob\\\" '\\\"16M\\\"))\\n(let $14 (YtConfigure! $13 $1 '\\\"Attr\\\" '\\\"datasizepermapjob\\\" '\\\"24M\\\"))\\n(let $15 (YtConfigure! $14 $1 '\\\"Attr\\\" '\\\"datasizeperpartition\\\" '\\\"64M\\\"))\\n(let $16 (YtConfigure! $15 $1 '\\\"Attr\\\" '\\\"mapjoinlimit\\\" '\\\"33554432\\\"))\\n(let $17 (DataSource '\\\"config\\\"))\\n(let $18 (Configure! world $17 '\\\"DqEngine\\\" '\\\"auto\\\"))\\n(let $19 (Configure! $18 $17 '\\\"CostBasedOptimizer\\\" '\\\"native\\\"))\\n(let $20 (DataSink 'result))\\n(let $21 (DataSink '\\\"yt\\\" '\\\"ada\\\"))\\n(let $22 '('NativeYtTypeFlags '0))\\n(let $23 '('StrictSchema '1))\\n(let $24 '('UniqueKeys '0))\\n(let $25 '@@[\\\"StructType\\\";[[\\\"d_current_day\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_month\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_quarter\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_week\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_current_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Date\\\"]]];[\\\"d_date_id\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_day_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_dow\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_first_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_following_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_fy_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_fy_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_holiday\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_last_dom\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_month_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_moy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_qoy\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_quarter_name\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_quarter_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_lq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_same_day_ly\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_week_seq\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"d_weekend\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"String\\\"]]];[\\\"d_year\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_account_credit\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_fee\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_item_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_net_loss\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_order_number\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reason_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_cash\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_refunded_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_refunded_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_amt\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_amt_inc_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_quantity\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_return_ship_cost\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_return_tax\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_returned_date_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returned_time_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_returning_hdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"wr_reversed_charge\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Float\\\"]]];[\\\"wr_web_page_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_addr_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_cdemo_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_customer_sk\\\";[\\\"OptionalType\\\";[\\\"DataType\\\";\\\"Int64\\\"]]];[\\\"ws_bill_hdemo_sk\\\";[\\\"OptionalType\\\";\r\n...%%\r\n\r\n##>> 2023-12-08 13:20:04.879    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847?version=3 200   2423##\r\n##<< 2023-12-08 13:20:05.054##\r\n//Response data//\r\n%%(json) {\r\n  \"clusterType\": \"UNKNOWN\",\r\n  \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n  \"execMode\": \"RUN\",\r\n  \"externalQueryIds\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n  \"queryData\": {\r\n    \"attributes\": {\r\n      \"user_agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.1064 YaBrowser/23.9.1.1064 (beta) Yowser/2.5 Safari/537.36\"\r\n    },\r\n    \"clusterType\": \"UNKNOWN\",\r\n    \"content\": \"\\n\\n\\n-- START PARAMETERS\\nuse ada;\\npragma TablePathPrefix = \\\"home/tpcds/3Tb\\\";\\npragma CostBasedOptimizer=\\\"Native\\\";\\n\\npragma yt.OperationSpec='{time_limit=3600000}';\\npragma yt.MaxReplicationFactorToFuseOperations=\\\"30\\\";\\npragma CompactGroupBy;\\n-- END PARAMETERS\\n\\n\\n\\n\\n-- START COMMON HEADER\\npragma TablePathPrefix = \\\"home/tpcds/3Tb\\\";\\npragma yt.TemporaryPrimaryMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.PublishedPrimaryMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.IntermediateDataMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.Pool = \\\"tpcds\\\";\\npragma yt.SchedulingTagFilter = \\\"%true\\\";\\npragma yt.QueryCacheMode = \\\"disable\\\";\\n--pragma dq.WorkerFilter='ClusterName: \\\"ada\\\"';\\n--pragma DqEngine=\\\"auto\\\";\\npragma yt.HybridDqExecution = \\\"true\\\";\\npragma yt.AutoMerge = \\\"disabled\\\";\\npragma yt.DataSizePerJob = \\\"16M\\\";\\npragma yt.DataSizePerMapJob = \\\"24M\\\";\\n--pragma yt.DataSizePerSortJob = \\\"1G\\\";\\npragma yt.DataSizePerPartition = \\\"64M\\\";\\npragma AnsiOptionalAs;\\npragma AnsiInForEmptyOrNullableItemsCollections;\\npragma yt.MapJoinLimit = \\\"33554432\\\";\\n-- END COMMON HEADER\\n\\n-- NB: Subquerys\\n-- start query 1 in stream 0 using template query49.tpl and seed 1819994127\\n\\n\\tselect *\\n \\t\\tfrom\\n \\t\\t web_sales ws left join web_returns wr on (ws.ws_order_number = wr.wr_order_number \\n         and\\tws.ws_item_sk = wr.wr_item_sk)\\n                 cross join date_dim\\n \\t\\twhere\\n \\t\\t\\twr.wr_return_amt > 10000\\n \\t\\t\\tand ws.ws_net_profit > 1\\n                         and ws.ws_net_paid > 0\\n                         and ws.ws_quantity > 0\\n                         and ws_sold_date_sk = d_date_sk\\n                         and d_year = 2000\\n                         and d_moy = 12\\n\\n \\t\",\r\n    \"files\": [],\r\n    \"parameters\": {},\r\n    \"type\": \"SQLv1\"\r\n  },\r\n  \"queryType\": \"SQLv1\",\r\n  \"status\": \"RUNNING\",\r\n  \"updatedAt\": \"2023-12-08T10:20:04.881Z\",\r\n  \"username\": \"psushin\",\r\n  \"version\": 3,\r\n  \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n  \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n  \"workerPid\": \"861219\",\r\n  \"workerVersion\": \"13048753\"\r\n}%%\r\n\r\n##>> 2023-12-08 13:20:04.224    GET https://yql-api-test.yandex-team.ru/api/v2/operations?project_service_slug=psushin&page_size=50&sort=-createdAt&page=0&filters=(username%3Dpsushin) 200   23928##\r\n##<< 2023-12-08 13:20:04.513##\r\n//Response data//\r\n%%(json) {\r\n  \"page\": {\r\n    \"count\": 2,\r\n    \"current\": 0,\r\n    \"next\": 1\r\n  },\r\n  \"result\": [\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572edd3074f35528d6c9847\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"RUNNING\",\r\n      \"updatedAt\": \"2023-12-08T10:20:03.654Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 2,\r\n      \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n      \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n      \"workerPid\": \"861219\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:20.290Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda87543d45a39ed9366\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ABORTED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:53.003Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"241554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:17.165Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda57543d45a39ed9355\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:18.185Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"591881\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:46.294Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed86074f35528d6c9778\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:18:47.391Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"590834\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:38.958Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed7e7543d45a39ed92e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:39.692Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test01.search.yandex.net\",\r\n      \"workerId\": \"83d38b4b-b006ffed-ecbf3042-da205ff3\",\r\n      \"workerPid\": \"689554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:29.235Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed757543d45a39ed92c7\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:30.013Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test04.search.yandex.net\",\r\n      \"workerId\": \"dbfd9c86-b594da57-6dede183-3d364e46\",\r\n      \"workerPid\": \"947935\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T09:51:12.251Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572e710074f35528d6c8682\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-49\",\r\n      \"updatedAt\": \"2023-12-08T10:02:27.527Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"170780\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:19:48.836Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637e34ced8c52a70f77897\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-7\",\r\n      \"updatedAt\": \"2023-11-26T17:28:42.704Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"cd7e9331-587d0fee-fa09ea24-c9766bf9\",\r\n      \"workerPid\": \"743831\",\r\n      \"workerVersion\": \"12966812\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:17:58.794Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637dc6ced8c52a70f777e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-11\",\r\n      \"updatedAt\": \"2023-11-26T17:41:17.751Z\",\r\n      \"username\": \"ps\r\n...%%\r\n\r\n##>> 2023-12-08 13:20:04.208    GET https://yql-api-test.yandex-team.ru/api/v2/operations?project_service_slug=psushin&page_size=50&sort=-createdAt&page=0&filters=(username%3Dpsushin) 200   23928##\r\n##<< 2023-12-08 13:20:04.361##\r\n//Response data//\r\n%%(json) {\r\n  \"page\": {\r\n    \"count\": 2,\r\n    \"current\": 0,\r\n    \"next\": 1\r\n  },\r\n  \"result\": [\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572edd3074f35528d6c9847\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"RUNNING\",\r\n      \"updatedAt\": \"2023-12-08T10:20:03.654Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 2,\r\n      \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n      \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n      \"workerPid\": \"861219\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:20.290Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda87543d45a39ed9366\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ABORTED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:53.003Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"241554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:17.165Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda57543d45a39ed9355\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:18.185Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"591881\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:46.294Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed86074f35528d6c9778\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:18:47.391Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"590834\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:38.958Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed7e7543d45a39ed92e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:39.692Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test01.search.yandex.net\",\r\n      \"workerId\": \"83d38b4b-b006ffed-ecbf3042-da205ff3\",\r\n      \"workerPid\": \"689554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:29.235Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed757543d45a39ed92c7\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:30.013Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test04.search.yandex.net\",\r\n      \"workerId\": \"dbfd9c86-b594da57-6dede183-3d364e46\",\r\n      \"workerPid\": \"947935\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T09:51:12.251Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572e710074f35528d6c8682\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-49\",\r\n      \"updatedAt\": \"2023-12-08T10:02:27.527Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"170780\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:19:48.836Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637e34ced8c52a70f77897\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-7\",\r\n      \"updatedAt\": \"2023-11-26T17:28:42.704Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"cd7e9331-587d0fee-fa09ea24-c9766bf9\",\r\n      \"workerPid\": \"743831\",\r\n      \"workerVersion\": \"12966812\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:17:58.794Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637dc6ced8c52a70f777e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-11\",\r\n      \"updatedAt\": \"2023-11-26T17:41:17.751Z\",\r\n      \"username\": \"ps\r\n...%%\r\n\r\n##>> 2023-12-08 13:20:04.062    GET https://yql-api-test.yandex-team.ru/api/v2/operations?project_service_slug=psushin&page_size=50&sort=-createdAt&page=0&filters=(username%3Dpsushin) 200   23928##\r\n##<< 2023-12-08 13:20:04.217##\r\n//Response data//\r\n%%(json) {\r\n  \"page\": {\r\n    \"count\": 2,\r\n    \"current\": 0,\r\n    \"next\": 1\r\n  },\r\n  \"result\": [\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572edd3074f35528d6c9847\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"RUNNING\",\r\n      \"updatedAt\": \"2023-12-08T10:20:03.654Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 2,\r\n      \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n      \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n      \"workerPid\": \"861219\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:20.290Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda87543d45a39ed9366\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ABORTED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:53.003Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"241554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:19:17.165Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572eda57543d45a39ed9355\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:19:18.185Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"591881\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:46.294Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed86074f35528d6c9778\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"updatedAt\": \"2023-12-08T10:18:47.391Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"kikimr0002.search.yandex.net\",\r\n      \"workerId\": \"c94d28c1-624f4680-6fa1c5f1-c763d0f0\",\r\n      \"workerPid\": \"590834\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:38.958Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed7e7543d45a39ed92e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:39.692Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test01.search.yandex.net\",\r\n      \"workerId\": \"83d38b4b-b006ffed-ecbf3042-da205ff3\",\r\n      \"workerPid\": \"689554\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T10:18:29.235Z\",\r\n      \"execMode\": \"VALIDATE\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572ed757543d45a39ed92c7\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"ERROR\",\r\n      \"updatedAt\": \"2023-12-08T10:18:30.013Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test04.search.yandex.net\",\r\n      \"workerId\": \"dbfd9c86-b594da57-6dede183-3d364e46\",\r\n      \"workerPid\": \"947935\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-12-08T09:51:12.251Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"6572e710074f35528d6c8682\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-49\",\r\n      \"updatedAt\": \"2023-12-08T10:02:27.527Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"5c552805-b714de48-ceeed83a-4c5fd849\",\r\n      \"workerPid\": \"170780\",\r\n      \"workerVersion\": \"13048753\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:19:48.836Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637e34ced8c52a70f77897\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-7\",\r\n      \"updatedAt\": \"2023-11-26T17:28:42.704Z\",\r\n      \"username\": \"psushin\",\r\n      \"version\": 1000000,\r\n      \"workerHost\": \"yql-front-test03.search.yandex.net\",\r\n      \"workerId\": \"cd7e9331-587d0fee-fa09ea24-c9766bf9\",\r\n      \"workerPid\": \"743831\",\r\n      \"workerVersion\": \"12966812\"\r\n    },\r\n    {\r\n      \"clusterType\": \"UNKNOWN\",\r\n      \"createdAt\": \"2023-11-26T17:17:58.794Z\",\r\n      \"execMode\": \"RUN\",\r\n      \"externalQueryIds\": [],\r\n      \"id\": \"65637dc6ced8c52a70f777e4\",\r\n      \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n      \"queryType\": \"SQLv1\",\r\n      \"status\": \"COMPLETED\",\r\n      \"title\": \"[YQL] YT benchmark tpcds-11\",\r\n      \"updatedAt\": \"2023-11-26T17:41:17.751Z\",\r\n      \"username\": \"ps\r\n...%%\r\n\r\n##>> 2023-12-08 13:20:03.725    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=DATA,EXEC_STATISTICS,PLAN,PROGRESS,AST&version=2&columns_preset=false 200   127##\r\n##<< 2023-12-08 13:20:03.881##\r\n//Response data//\r\n%%(json) {\r\n  \"errors\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"issues\": [],\r\n  \"status\": \"RUNNING\",\r\n  \"updatedAt\": \"2023-12-08T10:20:03.625Z\",\r\n  \"version\": 2\r\n}%%\r\n\r\n##>> 2023-12-08 13:20:03.713    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847/results?filters=DATA,EXEC_STATISTICS,PLAN,PROGRESS,AST&version=1&columns_preset=false 200   127##\r\n##<< 2023-12-08 13:20:03.873##\r\n//Response data//\r\n%%(json) {\r\n  \"errors\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"issues\": [],\r\n  \"status\": \"RUNNING\",\r\n  \"updatedAt\": \"2023-12-08T10:20:03.625Z\",\r\n  \"version\": 2\r\n}%%\r\n\r\n##>> 2023-12-08 13:20:03.706    GET https://yql-api-test.yandex-team.ru/api/v2/operations/6572edd3074f35528d6c9847?version=1 200   2423##\r\n##<< 2023-12-08 13:20:03.872##\r\n//Response data//\r\n%%(json) {\r\n  \"clusterType\": \"UNKNOWN\",\r\n  \"createdAt\": \"2023-12-08T10:20:03.002Z\",\r\n  \"execMode\": \"RUN\",\r\n  \"externalQueryIds\": [],\r\n  \"id\": \"6572edd3074f35528d6c9847\",\r\n  \"projectId\": \"6001d201dd0e49e90533b83a\",\r\n  \"queryData\": {\r\n    \"attributes\": {\r\n      \"user_agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.1064 YaBrowser/23.9.1.1064 (beta) Yowser/2.5 Safari/537.36\"\r\n    },\r\n    \"clusterType\": \"UNKNOWN\",\r\n    \"content\": \"\\n\\n\\n-- START PARAMETERS\\nuse ada;\\npragma TablePathPrefix = \\\"home/tpcds/3Tb\\\";\\npragma CostBasedOptimizer=\\\"Native\\\";\\n\\npragma yt.OperationSpec='{time_limit=3600000}';\\npragma yt.MaxReplicationFactorToFuseOperations=\\\"30\\\";\\npragma CompactGroupBy;\\n-- END PARAMETERS\\n\\n\\n\\n\\n-- START COMMON HEADER\\npragma TablePathPrefix = \\\"home/tpcds/3Tb\\\";\\npragma yt.TemporaryPrimaryMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.PublishedPrimaryMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.IntermediateDataMedium = \\\"ssd_blobs_tpcds_bench\\\";\\npragma yt.Pool = \\\"tpcds\\\";\\npragma yt.SchedulingTagFilter = \\\"%true\\\";\\npragma yt.QueryCacheMode = \\\"disable\\\";\\n--pragma dq.WorkerFilter='ClusterName: \\\"ada\\\"';\\n--pragma DqEngine=\\\"auto\\\";\\npragma yt.HybridDqExecution = \\\"true\\\";\\npragma yt.AutoMerge = \\\"disabled\\\";\\npragma yt.DataSizePerJob = \\\"16M\\\";\\npragma yt.DataSizePerMapJob = \\\"24M\\\";\\n--pragma yt.DataSizePerSortJob = \\\"1G\\\";\\npragma yt.DataSizePerPartition = \\\"64M\\\";\\npragma AnsiOptionalAs;\\npragma AnsiInForEmptyOrNullableItemsCollections;\\npragma yt.MapJoinLimit = \\\"33554432\\\";\\n-- END COMMON HEADER\\n\\n-- NB: Subquerys\\n-- start query 1 in stream 0 using template query49.tpl and seed 1819994127\\n\\n\\tselect *\\n \\t\\tfrom\\n \\t\\t web_sales ws left join web_returns wr on (ws.ws_order_number = wr.wr_order_number \\n         and\\tws.ws_item_sk = wr.wr_item_sk)\\n                 cross join date_dim\\n \\t\\twhere\\n \\t\\t\\twr.wr_return_amt > 10000\\n \\t\\t\\tand ws.ws_net_profit > 1\\n                         and ws.ws_net_paid > 0\\n                         and ws.ws_quantity > 0\\n                         and ws_sold_date_sk = d_date_sk\\n                         and d_year = 2000\\n                         and d_moy = 12\\n\\n \\t\",\r\n    \"files\": [],\r\n    \"parameters\": {},\r\n    \"type\": \"SQLv1\"\r\n  },\r\n  \"queryType\": \"SQLv1\",\r\n  \"status\": \"RUNNING\",\r\n  \"updatedAt\": \"2023-12-08T10:20:03.654Z\",\r\n  \"username\": \"psushin\",\r\n  \"version\": 2,\r\n  \"workerHost\": \"kikimr0005.search.yandex.net\",\r\n  \"workerId\": \"bc166f56-18848ff-c4638de8-8574f33\",\r\n  \"workerPid\": \"861219\",\r\n  \"workerVersion\": \"13048753\"\r\n}%%\r\n}>\r\n<{Additional info\r\n%%(json){\r\n  \"version\": \"0cf2ff096c80a6192b9050d5697b04f09ae3ec3b\",\r\n  \"requestId\": \"1702029720312231-16706068908272401021\",\r\n  \"url\": \"https://yql-test.yandex-team.ru/Operations/6572edd3074f35528d6c9847\",\r\n  \"language\": \"en\",\r\n  \"widowSize\": {\r\n    \"width\": 1850,\r\n    \"height\": 1053\r\n  },\r\n  \"screenSize\": {\r\n    \"width\": 1920,\r\n    \"height\": 1080\r\n  },\r\n  \"userAgent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.1064 YaBrowser/23.9.1.1064 (beta) Yowser/2.5 Safari/537.36\",\r\n  \"userAgentData\": {\r\n    \"architecture\": \"x86\",\r\n    \"bitness\": \"64\",\r\n    \"brands\": [\r\n      {\r\n        \"brand\": \"Chromium\",\r\n        \"version\": \"116\"\r\n      },\r\n      {\r\n        \"brand\": \"Not)A;Brand\",\r\n        \"version\": \"24\"\r\n      },\r\n      {\r\n        \"brand\": \"YaBrowser\",\r\n        \"version\": \"23\"\r\n      }\r\n    ],\r\n    \"mobile\": false,\r\n    \"model\": \"\",\r\n    \"platform\": \"Linux\",\r\n    \"platformVersion\": \"6.2.0\",\r\n    \"uaFullVersion\": \"23.9.1.1064\"\r\n  }\r\n}%%}>\n```\r\n(\r\n(let $1 (DataSource '\"yt\" '\"$all\"))\r\n(let $2 (YtConfigure! world $1 '\"Attr\" '\"operationspec\" '\"{time_limit=3600000}\"))\r\n(let $3 (YtConfigure! $2 $1 '\"Attr\" '\"maxreplicationfactortofuseoperations\" '\"30\"))\r\n(let $4 (YtConfigure! $3 $1 '\"Attr\" '\"pool\" '\"tpcds\"))\r\n(let $5 (YtConfigure! $4 $1 '\"Attr\" '\"schedulingtagfilter\" '\"%true\"))\r\n(let $6 (YtConfigure! $5 $1 '\"Attr\" '\"querycachemode\" '\"disable\"))\r\n(let $7 (YtConfigure! $6 $1 '\"Attr\" '\"hybriddqexecution\" '\"true\"))\r\n(let $8 (YtConfigure! $7 $1 '\"Attr\" '\"automerge\" '\"disabled\"))\r\n(let $9 (YtConfigure! $8 $1 '\"Attr\" '\"datasizeperjob\" '\"16M\"))\r\n(let $10 (YtConfigure! $9 $1 '\"Attr\" '\"datasizepermapjob\" '\"24M\"))\r\n(let $11 (YtConfigure! $10 $1 '\"Attr\" '\"datasizeperpartition\" '\"64M\"))\r\n(let $12 (YtConfigure! $11 $1 '\"Attr\" '\"mapjoinlimit\" '\"33554432\"))\r\n(let $13 (Configure! world (DataSource '\"config\") '\"CostBasedOptimizer\" '\"native\"))\r\n(let $14 (DataSink 'result))\r\n(let $15 (DataSource '\"yt\" '\"dirac\"))\r\n(let $16 '('NativeYtTypeFlags '16))\r\n(let $17 '('StrictSchema '1))\r\n(let $18 '('UniqueKeys '0))\r\n(let $19 '@@[\"StructType\";[[\"ws_sold_date_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_sold_time_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_date_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_item_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_bill_customer_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_bill_cdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_bill_hdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_bill_addr_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_customer_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_cdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_hdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_addr_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_web_page_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_web_site_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_mode_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_warehouse_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_promo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_order_number\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_quantity\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_wholesale_cost\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_list_price\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_sales_price\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_discount_amt\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_sales_price\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_wholesale_cost\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_list_price\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_coupon_amt\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_ship_cost\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_paid\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_paid_inc_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_paid_inc_ship\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_paid_inc_ship_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_profit\";[\"OptionalType\";[\"DataType\";\"Float\"]]]]]@@)\r\n(let $20 (YqlRowSpec $16 $17 $18 '('Type $19)))\r\n(let $21 (YtMeta '('CanWrite '1) '('DoesExist '1) '('YqlCompatibleScheme '1) '('InferredScheme '0) '('IsDynamic '0)))\r\n(let $22 '('ChunkCount '\"1000\"))\r\n(let $23 '('ModifyTime '\"1707907334\"))\r\n(let $24 '('Revision '\"7481833077937\"))\r\n(let $25 (YtStat '('Id '\"6cd-bde8-13440191-b4afb85b\") '('RecordsCount '\"2211809044\") '('DataSize '\"603695506444\") $22 $23 $24))\r\n(let $26 (YtTable '\"home/tpcds/3Tb/web_sales\" $20 $21 $25 '() (Void) (Void) '\"dirac\"))\r\n(let $27 '('('\"syscolumns\" '('\"path\" '\"record\"))))\r\n(let $28 '\"ws_bill_customer_sk\")\r\n(let $29 '\"ws_ext_discount_amt\")\r\n(let $30 '\"ws_ext_list_price\")\r\n(let $31 '\"ws_ext_sales_price\")\r\n(let $32 '\"ws_ext_wholesale_cost\")\r\n(let $33 '\"ws_net_paid_inc_ship\")\r\n(let $34 '\"ws_net_paid_inc_ship_tax\")\r\n(let $35 '\"ws_net_paid_inc_tax\")\r\n(let $36 '\"ws_ship_customer_sk\")\r\n(let $37 '\"ws_wholesale_cost\")\r\n(let $38 '('\"ws_bill_addr_sk\" '\"ws_bill_cdemo_sk\" $28 '\"ws_bill_hdemo_sk\" '\"ws_coupon_amt\" $29 $30 $31 '\"ws_ext_ship_cost\" '\"ws_ext_tax\" $32 '\"ws_item_sk\" '\"ws_list_price\" '\"ws_net_paid\" $33 $34 $35 '\"ws_net_profit\" '\"ws_order_number\" '\"ws_promo_sk\" '\"ws_quantity\" '\"ws_sales_price\" '\"ws_ship_addr_sk\" '\"ws_ship_cdemo_sk\" $36 '\"ws_ship_date_sk\" '\"ws_ship_hdemo_sk\" '\"ws_ship_mode_sk\" '\"ws_sold_date_sk\" '\"ws_sold_time_sk\" '\"ws_warehouse_sk\" '\"ws_web_page_sk\" '\"ws_web_site_sk\" $37))\r\n(let $39 (Bool 'false))\r\n(let $40 '@@[\"StructType\";[[\"wr_returned_date_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returned_time_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_item_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_refunded_customer_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_refunded_cdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_refunded_hdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_refunded_addr_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returning_customer_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returning_cdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returning_hdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returning_addr_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_web_page_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_reason_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_order_number\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_return_quantity\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_return_amt\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_return_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_return_amt_inc_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_fee\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_return_ship_cost\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_refunded_cash\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_reversed_charge\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_account_credit\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_net_loss\";[\"OptionalType\";[\"DataType\";\"Float\"]]]]]@@)\r\n(let $41 (YqlRowSpec $16 $17 $18 '('Type $40)))\r\n(let $42 (YtStat '('Id '\"6cd-bdec-13440191-2de00700\") '('RecordsCount '\"221188884\") '('DataSize '\"40937892044\") $22 $23 $24))\r\n(let $43 (YtTable '\"home/tpcds/3Tb/web_returns\" $41 $21 $42 '() (Void) (Void) '\"dirac\"))\r\n(let $44 '\"wr_account_credit\")\r\n(let $45 '\"wr_refunded_addr_sk\")\r\n(let $46 '\"wr_refunded_cdemo_sk\")\r\n(let $47 '\"wr_refunded_customer_sk\")\r\n(let $48 '\"wr_refunded_hdemo_sk\")\r\n(let $49 '\"wr_return_amt_inc_tax\")\r\n(let $50 '\"wr_return_quantity\")\r\n(let $51 '\"wr_return_ship_cost\")\r\n(let $52 '\"wr_returned_date_sk\")\r\n(let $53 '\"wr_returned_time_sk\")\r\n(let $54 '\"wr_returning_addr_sk\")\r\n(let $55 '\"wr_returning_cdemo_sk\")\r\n(let $56 '\"wr_returning_customer_sk\")\r\n(let $57 '\"wr_returning_hdemo_sk\")\r\n(let $58 '\"wr_reversed_charge\")\r\n(let $59 '($44 '\"wr_fee\" '\"wr_item_sk\" '\"wr_net_loss\" '\"wr_order_number\" '\"wr_reason_sk\" $45 '\"wr_refunded_cash\" $46 $47 $48 '\"wr_return_amt\" $49 $50 $51 '\"wr_return_tax\" $52 $53 $54 $55 $56 $57 $58 '\"wr_web_page_sk\"))\r\n(let $60 '@@[\"StructType\";[[\"d_date_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_date_id\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_date\";[\"OptionalType\";[\"DataType\";\"Date\"]]];[\"d_month_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_week_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_quarter_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_year\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_dow\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_moy\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_dom\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_qoy\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_fy_year\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_fy_quarter_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_fy_week_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_day_name\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_quarter_name\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_holiday\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_weekend\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_following_holiday\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_first_dom\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_last_dom\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_same_day_ly\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_same_day_lq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_current_day\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_current_week\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_current_month\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_current_quarter\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_current_year\";[\"OptionalType\";[\"DataType\";\"String\"]]]]]@@)\r\n(let $61 (YqlRowSpec '('NativeYtTypeFlags '2) $17 $18 '('Type $60)))\r\n(let $62 (YtStat '('Id '\"6cd-be05-13440191-b0161bf0\") '('RecordsCount '\"73049\") '('DataSize '\"12720962\") '('ChunkCount '1) $23 $24))\r\n(let $63 (YtTable '\"home/tpcds/3Tb/date_dim\" $61 $21 $62 '() (Void) (Void) '\"dirac\"))\r\n(let $64 '\"d_current_quarter\")\r\n(let $65 '\"d_following_holiday\")\r\n(let $66 '('\"d_current_day\" '\"d_current_month\" $64 '\"d_current_week\" '\"d_current_year\" '\"d_date\" '\"d_date_id\" '\"d_date_sk\" '\"d_day_name\" '\"d_dom\" '\"d_dow\" '\"d_first_dom\" $65 '\"d_fy_quarter_seq\" '\"d_fy_week_seq\" '\"d_fy_year\" '\"d_holiday\" '\"d_last_dom\" '\"d_month_seq\" '\"d_moy\" '\"d_qoy\" '\"d_quarter_name\" '\"d_quarter_seq\" '\"d_same_day_lq\" '\"d_same_day_ly\" '\"d_week_seq\" '\"d_weekend\" '\"d_year\"))\r\n(let $67 '('\"ws\" '\"ws_order_number\" '\"ws\" '\"ws_item_sk\"))\r\n(let $68 '('\"wr\" '\"wr_order_number\" '\"wr\" '\"wr_item_sk\"))\r\n(let $69 '('Left '\"ws\" '\"wr\" $67 $68 '()))\r\n(let $70 '('Cross $69 '\"date_dim\" '() '() '()))\r\n(let $71 (EquiJoin '((OrderedFlatMap (ExtractMembers (Right! (YtReadTable! $12 $15 '((YtSection '((YtPath $26 (Void) (Void) (Void))) $27)))) $38) (lambda '($73) (OptionalIf (Coalesce (> (Member $73 '\"ws_net_profit\") (Int32 '1)) $39) $73))) '\"ws\") '((ExtractMembers (Right! (YtReadTable! $12 $15 '((YtSection '((YtPath $43 (Void) (Void) (Void))) $27)))) $59) '\"wr\") '((ExtractMembers (Right! (YtReadTable! $12 $15 '((YtSection '((YtPath $63 (Void) (Void) (Void))) $27)))) $66) '\"date_dim\") $70 '()))\r\n(let $72 (ResWrite! (Sync! $12 $13) $14 (Key) (Unordered (OrderedFlatMap $71 (lambda '($74) (block '(\r\n  (let $75 (Member $74 '\"wr.wr_return_amt\"))\r\n  (let $76 (Member $74 '\"ws.ws_net_paid\"))\r\n  (let $77 (Int32 '0))\r\n  (let $78 (Member $74 '\"ws.ws_quantity\"))\r\n  (let $79 (Member $74 '\"ws.ws_sold_date_sk\"))\r\n  (let $80 (Member $74 '\"date_dim.d_date_sk\"))\r\n  (let $81 (Member $74 '\"date_dim.d_year\"))\r\n  (let $82 (Member $74 '\"date_dim.d_moy\"))\r\n  (let $83 (And (Coalesce (> $75 (Int32 '\"10000\")) $39) (Coalesce (> $76 $77) $39) (Coalesce (> $78 $77) $39) (Coalesce (== $79 $80) $39) (Coalesce (== $81 (Int32 '\"2000\")) $39) (Coalesce (== $82 (Int32 '\"12\")) $39)))\r\n  (let $84 (AsStruct '('\"d_current_day\" (Member $74 '\"date_dim.d_current_day\")) '('\"d_current_month\" (Member $74 '\"date_dim.d_current_month\")) '($64 (Member $74 '\"date_dim.d_current_quarter\")) '('\"d_current_week\" (Member $74 '\"date_dim.d_current_week\")) '('\"d_current_year\" (Member $74 '\"date_dim.d_current_year\")) '('\"d_date\" (Member $74 '\"date_dim.d_date\")) '('\"d_date_id\" (Member $74 '\"date_dim.d_date_id\")) '('\"d_date_sk\" $80) '('\"d_day_name\" (Member $74 '\"date_dim.d_day_name\")) '('\"d_dom\" (Member $74 '\"date_dim.d_dom\")) '('\"d_dow\" (Member $74 '\"date_dim.d_dow\")) '('\"d_first_dom\" (Member $74 '\"date_dim.d_first_dom\")) '($65 (Member $74 '\"date_dim.d_following_holiday\")) '('\"d_fy_quarter_seq\" (Member $74 '\"date_dim.d_fy_quarter_seq\")) '('\"d_fy_week_seq\" (Member $74 '\"date_dim.d_fy_week_seq\")) '('\"d_fy_year\" (Member $74 '\"date_dim.d_fy_year\")) '('\"d_holiday\" (Member $74 '\"date_dim.d_holiday\")) '('\"d_last_dom\" (Member $74 '\"date_dim.d_last_dom\")) '('\"d_month_seq\" (Member $74 '\"date_dim.d_month_seq\")) '('\"d_moy\" $82) '('\"d_qoy\" (Member $74 '\"date_dim.d_qoy\")) '('\"d_quarter_name\" (Member $74 '\"date_dim.d_quarter_name\")) '('\"d_quarter_seq\" (Member $74 '\"date_dim.d_quarter_seq\")) '('\"d_same_day_lq\" (Member $74 '\"date_dim.d_same_day_lq\")) '('\"d_same_day_ly\" (Member $74 '\"date_dim.d_same_day_ly\")) '('\"d_week_seq\" (Member $74 '\"date_dim.d_week_seq\")) '('\"d_weekend\" (Member $74 '\"date_dim.d_weekend\")) '('\"d_year\" $81) '($44 (Member $74 '\"wr.wr_account_credit\")) '('\"wr_fee\" (Member $74 '\"wr.wr_fee\")) '('\"wr_item_sk\" (Member $74 '\"wr.wr_item_sk\")) '('\"wr_net_loss\" (Member $74 '\"wr.wr_net_loss\")) '('\"wr_order_number\" (Member $74 '\"wr.wr_order_number\")) '('\"wr_reason_sk\" (Member $74 '\"wr.wr_reason_sk\")) '($45 (Member $74 '\"wr.wr_refunded_addr_sk\")) '('\"wr_refunded_cash\" (Member $74 '\"wr.wr_refunded_cash\")) '($46 (Member $74 '\"wr.wr_refunded_cdemo_sk\")) '($47 (Member $74 '\"wr.wr_refunded_customer_sk\")) '($48 (Member $74 '\"wr.wr_refunded_hdemo_sk\")) '('\"wr_return_amt\" $75) '($49 (Member $74 '\"wr.wr_return_amt_inc_tax\")) '($50 (Member $74 '\"wr.wr_return_quantity\")) '($51 (Member $74 '\"wr.wr_return_ship_cost\")) '('\"wr_return_tax\" (Member $74 '\"wr.wr_return_tax\")) '($52 (Member $74 '\"wr.wr_returned_date_sk\")) '($53 (Member $74 '\"wr.wr_returned_time_sk\")) '($54 (Member $74 '\"wr.wr_returning_addr_sk\")) '($55 (Member $74 '\"wr.wr_returning_cdemo_sk\")) '($56 (Member $74 '\"wr.wr_returning_customer_sk\")) '($57 (Member $74 '\"wr.wr_returning_hdemo_sk\")) '($58 (Member $74 '\"wr.wr_reversed_charge\")) '('\"wr_web_page_sk\" (Member $74 '\"wr.wr_web_page_sk\")) '('\"ws_bill_addr_sk\" (Member $74 '\"ws.ws_bill_addr_sk\")) '('\"ws_bill_cdemo_sk\" (Member $74 '\"ws.ws_bill_cdemo_sk\")) '($28 (Member $74 '\"ws.ws_bill_customer_sk\")) '('\"ws_bill_hdemo_sk\" (Member $74 '\"ws.ws_bill_hdemo_sk\")) '('\"ws_coupon_amt\" (Member $74 '\"ws.ws_coupon_amt\")) '($29 (Member $74 '\"ws.ws_ext_discount_amt\")) '($30 (Member $74 '\"ws.ws_ext_list_price\")) '($31 (Member $74 '\"ws.ws_ext_sales_price\")) '('\"ws_ext_ship_cost\" (Member $74 '\"ws.ws_ext_ship_cost\")) '('\"ws_ext_tax\" (Member $74 '\"ws.ws_ext_tax\")) '($32 (Member $74 '\"ws.ws_ext_wholesale_cost\")) '('\"ws_item_sk\" (Member $74 '\"ws.ws_item_sk\")) '('\"ws_list_price\" (Member $74 '\"ws.ws_list_price\")) '('\"ws_net_paid\" $76) '($33 (Member $74 '\"ws.ws_net_paid_inc_ship\")) '($34 (Member $74 '\"ws.ws_net_paid_inc_ship_tax\")) '($35 (Member $74 '\"ws.ws_net_paid_inc_tax\")) '('\"ws_net_profit\" (Member $74 '\"ws.ws_net_profit\")) '('\"ws_order_number\" (Member $74 '\"ws.ws_order_number\")) '('\"ws_promo_sk\" (Member $74 '\"ws.ws_promo_sk\")) '('\"ws_quantity\" $78) '('\"ws_sales_price\" (Member $74 '\"ws.ws_sales_price\")) '('\"ws_ship_addr_sk\" (Member $74 '\"ws.ws_ship_addr_sk\")) '('\"ws_ship_cdemo_sk\" (Member $74 '\"ws.ws_ship_cdemo_sk\")) '($36 (Member $74 '\"ws.ws_ship_customer_sk\")) '('\"ws_ship_date_sk\" (Member $74 '\"ws.ws_ship_date_sk\")) '('\"ws_ship_hdemo_sk\" (Member $74 '\"ws.ws_ship_hdemo_sk\")) '('\"ws_ship_mode_sk\" (Member $74 '\"ws.ws_ship_mode_sk\")) '('\"ws_sold_date_sk\" $79) '('\"ws_sold_time_sk\" (Member $74 '\"ws.ws_sold_time_sk\")) '('\"ws_warehouse_sk\" (Member $74 '\"ws.ws_warehouse_sk\")) '('\"ws_web_page_sk\" (Member $74 '\"ws.ws_web_page_sk\")) '('\"ws_web_site_sk\" (Member $74 '\"ws.ws_web_site_sk\")) '($37 (Member $74 '\"ws.ws_wholesale_cost\"))))\r\n  (return (OptionalIf $83 $84))\r\n))))) '('('type) '('autoref))))\r\n(return (Commit! (Commit! $72 $14) (DataSink '\"yt\" '\"dirac\") '('('\"epoch\" '1))))\r\n)\r\n\r\n2024-03-06 15:03:41.816 DEBUG mrrun(pid=2454930, tid=0x00007F0865BF7D80) [core] yql_flatmap_over_join.cpp:736: {8705dd46-8c5b9f07-1c12db31-3ff5fc3} SingleInputPredicatePushdownOverEquiJoin\r\n2024-03-06 15:03:41.817 DEBUG mrrun(pid=2454930, tid=0x00007F0865BF7D80) [core] yql_co_flow2.cpp:1120: {8705dd46-8c5b9f07-1c12db31-3ff5fc3} OrderedFlatMapOverEquiJoin\r\n2024-03-06 15:03:41.838 TRACE mrrun(pid=2454930, tid=0x00007F0865BF7D80) [core] yql_out_transformers.cpp:59: {8705dd46-8c5b9f07-1c12db31-3ff5fc3} OptimizedExpr:\r\n(\r\n(let $1 (DataSource '\"yt\" '\"$all\"))\r\n(let $2 (YtConfigure! world $1 '\"Attr\" '\"operationspec\" '\"{time_limit=3600000}\"))\r\n(let $3 (YtConfigure! $2 $1 '\"Attr\" '\"maxreplicationfactortofuseoperations\" '\"30\"))\r\n(let $4 (YtConfigure! $3 $1 '\"Attr\" '\"pool\" '\"tpcds\"))\r\n(let $5 (YtConfigure! $4 $1 '\"Attr\" '\"schedulingtagfilter\" '\"%true\"))\r\n(let $6 (YtConfigure! $5 $1 '\"Attr\" '\"querycachemode\" '\"disable\"))\r\n(let $7 (YtConfigure! $6 $1 '\"Attr\" '\"hybriddqexecution\" '\"true\"))\r\n(let $8 (YtConfigure! $7 $1 '\"Attr\" '\"automerge\" '\"disabled\"))\r\n(let $9 (YtConfigure! $8 $1 '\"Attr\" '\"datasizeperjob\" '\"16M\"))\r\n(let $10 (YtConfigure! $9 $1 '\"Attr\" '\"datasizepermapjob\" '\"24M\"))\r\n(let $11 (YtConfigure! $10 $1 '\"Attr\" '\"datasizeperpartition\" '\"64M\"))\r\n(let $12 (YtConfigure! $11 $1 '\"Attr\" '\"mapjoinlimit\" '\"33554432\"))\r\n(let $13 (Configure! world (DataSource '\"config\") '\"CostBasedOptimizer\" '\"native\"))\r\n(let $14 (DataSink 'result))\r\n(let $15 (DataSource '\"yt\" '\"dirac\"))\r\n(let $16 '('NativeYtTypeFlags '16))\r\n(let $17 '('StrictSchema '1))\r\n(let $18 '('UniqueKeys '0))\r\n(let $19 '@@[\"StructType\";[[\"ws_sold_date_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_sold_time_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_date_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_item_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_bill_customer_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_bill_cdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_bill_hdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_bill_addr_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_customer_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_cdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_hdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_addr_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_web_page_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_web_site_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_ship_mode_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_warehouse_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_promo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_order_number\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_quantity\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"ws_wholesale_cost\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_list_price\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_sales_price\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_discount_amt\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_sales_price\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_wholesale_cost\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_list_price\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_coupon_amt\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_ext_ship_cost\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_paid\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_paid_inc_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_paid_inc_ship\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_paid_inc_ship_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"ws_net_profit\";[\"OptionalType\";[\"DataType\";\"Float\"]]]]]@@)\r\n(let $20 (YqlRowSpec $16 $17 $18 '('Type $19)))\r\n(let $21 (YtMeta '('CanWrite '1) '('DoesExist '1) '('YqlCompatibleScheme '1) '('InferredScheme '0) '('IsDynamic '0)))\r\n(let $22 '('ChunkCount '\"1000\"))\r\n(let $23 '('ModifyTime '\"1707907334\"))\r\n(let $24 '('Revision '\"7481833077937\"))\r\n(let $25 (YtStat '('Id '\"6cd-bde8-13440191-b4afb85b\") '('RecordsCount '\"2211809044\") '('DataSize '\"603695506444\") $22 $23 $24))\r\n(let $26 (YtTable '\"home/tpcds/3Tb/web_sales\" $20 $21 $25 '() (Void) (Void) '\"dirac\"))\r\n(let $27 '('('\"syscolumns\" '('\"path\" '\"record\"))))\r\n(let $28 '\"ws_bill_customer_sk\")\r\n(let $29 '\"ws_ext_discount_amt\")\r\n(let $30 '\"ws_ext_list_price\")\r\n(let $31 '\"ws_ext_sales_price\")\r\n(let $32 '\"ws_ext_wholesale_cost\")\r\n(let $33 '\"ws_net_paid_inc_ship\")\r\n(let $34 '\"ws_net_paid_inc_ship_tax\")\r\n(let $35 '\"ws_net_paid_inc_tax\")\r\n(let $36 '\"ws_ship_customer_sk\")\r\n(let $37 '\"ws_wholesale_cost\")\r\n(let $38 '('\"ws_bill_addr_sk\" '\"ws_bill_cdemo_sk\" $28 '\"ws_bill_hdemo_sk\" '\"ws_coupon_amt\" $29 $30 $31 '\"ws_ext_ship_cost\" '\"ws_ext_tax\" $32 '\"ws_item_sk\" '\"ws_list_price\" '\"ws_net_paid\" $33 $34 $35 '\"ws_net_profit\" '\"ws_order_number\" '\"ws_promo_sk\" '\"ws_quantity\" '\"ws_sales_price\" '\"ws_ship_addr_sk\" '\"ws_ship_cdemo_sk\" $36 '\"ws_ship_date_sk\" '\"ws_ship_hdemo_sk\" '\"ws_ship_mode_sk\" '\"ws_sold_date_sk\" '\"ws_sold_time_sk\" '\"ws_warehouse_sk\" '\"ws_web_page_sk\" '\"ws_web_site_sk\" $37))\r\n(let $39 (Bool 'false))\r\n(let $40 '\"ws.ws_bill_addr_sk\")\r\n(let $41 '\"ws.ws_bill_cdemo_sk\")\r\n(let $42 '\"ws.ws_bill_customer_sk\")\r\n(let $43 '\"ws.ws_bill_hdemo_sk\")\r\n(let $44 '\"ws.ws_ext_discount_amt\")\r\n(let $45 '\"ws.ws_ext_list_price\")\r\n(let $46 '\"ws.ws_ext_sales_price\")\r\n(let $47 '\"ws.ws_ext_ship_cost\")\r\n(let $48 '\"ws.ws_ext_wholesale_cost\")\r\n(let $49 '\"ws.ws_net_paid_inc_ship\")\r\n(let $50 '\"ws.ws_net_paid_inc_ship_tax\")\r\n(let $51 '\"ws.ws_net_paid_inc_tax\")\r\n(let $52 '\"ws.ws_order_number\")\r\n(let $53 '\"ws.ws_sales_price\")\r\n(let $54 '\"ws.ws_ship_addr_sk\")\r\n(let $55 '\"ws.ws_ship_cdemo_sk\")\r\n(let $56 '\"ws.ws_ship_customer_sk\")\r\n(let $57 '\"ws.ws_ship_date_sk\")\r\n(let $58 '\"ws.ws_ship_hdemo_sk\")\r\n(let $59 '\"ws.ws_ship_mode_sk\")\r\n(let $60 '\"ws.ws_sold_date_sk\")\r\n(let $61 '\"ws.ws_sold_time_sk\")\r\n(let $62 '\"ws.ws_warehouse_sk\")\r\n(let $63 '\"ws.ws_web_page_sk\")\r\n(let $64 '\"ws.ws_web_site_sk\")\r\n(let $65 '\"ws.ws_wholesale_cost\")\r\n(let $66 (Int32 '0))\r\n(let $67 '@@[\"StructType\";[[\"wr_returned_date_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returned_time_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_item_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_refunded_customer_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_refunded_cdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_refunded_hdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_refunded_addr_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returning_customer_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returning_cdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returning_hdemo_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_returning_addr_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_web_page_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_reason_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_order_number\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_return_quantity\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"wr_return_amt\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_return_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_return_amt_inc_tax\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_fee\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_return_ship_cost\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_refunded_cash\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_reversed_charge\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_account_credit\";[\"OptionalType\";[\"DataType\";\"Float\"]]];[\"wr_net_loss\";[\"OptionalType\";[\"DataType\";\"Float\"]]]]]@@)\r\n(let $68 (YqlRowSpec $16 $17 $18 '('Type $67)))\r\n(let $69 (YtStat '('Id '\"6cd-bdec-13440191-2de00700\") '('RecordsCount '\"221188884\") '('DataSize '\"40937892044\") $22 $23 $24))\r\n(let $70 (YtTable '\"home/tpcds/3Tb/web_returns\" $68 $21 $69 '() (Void) (Void) '\"dirac\"))\r\n(let $71 '\"wr_account_credit\")\r\n(let $72 '\"wr_refunded_addr_sk\")\r\n(let $73 '\"wr_refunded_cdemo_sk\")\r\n(let $74 '\"wr_refunded_customer_sk\")\r\n(let $75 '\"wr_refunded_hdemo_sk\")\r\n(let $76 '\"wr_return_amt_inc_tax\")\r\n(let $77 '\"wr_return_quantity\")\r\n(let $78 '\"wr_return_ship_cost\")\r\n(let $79 '\"wr_returned_date_sk\")\r\n(let $80 '\"wr_returned_time_sk\")\r\n(let $81 '\"wr_returning_addr_sk\")\r\n(let $82 '\"wr_returning_cdemo_sk\")\r\n(let $83 '\"wr_returning_customer_sk\")\r\n(let $84 '\"wr_returning_hdemo_sk\")\r\n(let $85 '\"wr_reversed_charge\")\r\n(let $86 '($71 '\"wr_fee\" '\"wr_item_sk\" '\"wr_net_loss\" '\"wr_order_number\" '\"wr_reason_sk\" $72 '\"wr_refunded_cash\" $73 $74 $75 '\"wr_return_amt\" $76 $77 $78 '\"wr_return_tax\" $79 $80 $81 $82 $83 $84 $85 '\"wr_web_page_sk\"))\r\n(let $87 '@@[\"StructType\";[[\"d_date_sk\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_date_id\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_date\";[\"OptionalType\";[\"DataType\";\"Date\"]]];[\"d_month_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_week_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_quarter_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_year\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_dow\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_moy\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_dom\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_qoy\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_fy_year\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_fy_quarter_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_fy_week_seq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_day_name\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_quarter_name\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_holiday\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_weekend\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_following_holiday\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_first_dom\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_last_dom\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_same_day_ly\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_same_day_lq\";[\"OptionalType\";[\"DataType\";\"Int64\"]]];[\"d_current_day\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_current_week\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_current_month\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_current_quarter\";[\"OptionalType\";[\"DataType\";\"String\"]]];[\"d_current_year\";[\"OptionalType\";[\"DataType\";\"String\"]]]]]@@)\r\n(let $88 (YqlRowSpec '('NativeYtTypeFlags '2) $17 $18 '('Type $87)))\r\n(let $89 (YtStat '('Id '\"6cd-be05-13440191-b0161bf0\") '('RecordsCount '\"73049\") '('DataSize '\"12720962\") '('ChunkCount '1) $23 $24))\r\n(let $90 (YtTable '\"home/tpcds/3Tb/date_dim\" $88 $21 $89 '() (Void) (Void) '\"dirac\"))\r\n(let $91 '\"d_current_quarter\")\r\n(let $92 '\"d_following_holiday\")\r\n(let $93 '('\"d_current_day\" '\"d_current_month\" $91 '\"d_current_week\" '\"d_current_year\" '\"d_date\" '\"d_date_id\" '\"d_date_sk\" '\"d_day_name\" '\"d_dom\" '\"d_dow\" '\"d_first_dom\" $92 '\"d_fy_quarter_seq\" '\"d_fy_week_seq\" '\"d_fy_year\" '\"d_holiday\" '\"d_last_dom\" '\"d_month_seq\" '\"d_moy\" '\"d_qoy\" '\"d_quarter_name\" '\"d_quarter_seq\" '\"d_same_day_lq\" '\"d_same_day_ly\" '\"d_week_seq\" '\"d_weekend\" '\"d_year\"))\r\n(let $94 '('\"ws\" '\"ws_order_number\" '\"ws\" '\"ws_item_sk\"))\r\n(let $95 '('\"wr\" '\"wr_order_number\" '\"wr\" '\"wr_item_sk\"))\r\n(let $96 '('Left '\"ws\" '\"wr\" $94 $95 '()))\r\n(let $97 '('Cross $96 '\"date_dim\" '() '() '()))\r\n(let $98 (EquiJoin '((OrderedFilter (OrderedFlatMap (ExtractMembers (Right! (YtReadTable! $12 $15 '((YtSection '((YtPath $26 (Void) (Void) (Void))) $27)))) $38) (lambda '($101) (OptionalIf (Coalesce (> (Member $101 '\"ws_net_profit\") (Int32 '1)) $39) $101))) (lambda '($102) (block '(\r\n  (let $103 (AsStruct '($40 (Member $102 '\"ws_bill_addr_sk\")) '($41 (Member $102 '\"ws_bill_cdemo_sk\")) '($42 (Member $102 $28)) '($43 (Member $102 '\"ws_bill_hdemo_sk\")) '('\"ws.ws_coupon_amt\" (Member $102 '\"ws_coupon_amt\")) '($44 (Member $102 $29)) '($45 (Member $102 $30)) '($46 (Member $102 $31)) '($47 (Member $102 '\"ws_ext_ship_cost\")) '('\"ws.ws_ext_tax\" (Member $102 '\"ws_ext_tax\")) '($48 (Member $102 $32)) '('\"ws.ws_item_sk\" (Member $102 '\"ws_item_sk\")) '('\"ws.ws_list_price\" (Member $102 '\"ws_list_price\")) '('\"ws.ws_net_paid\" (Member $102 '\"ws_net_paid\")) '($49 (Member $102 $33)) '($50 (Member $102 $34)) '($51 (Member $102 $35)) '('\"ws.ws_net_profit\" (Member $102 '\"ws_net_profit\")) '($52 (Member $102 '\"ws_order_number\")) '('\"ws.ws_promo_sk\" (Member $102 '\"ws_promo_sk\")) '('\"ws.ws_quantity\" (Member $102 '\"ws_quantity\")) '($53 (Member $102 '\"ws_sales_price\")) '($54 (Member $102 '\"ws_ship_addr_sk\")) '($55 (Member $102 '\"ws_ship_cdemo_sk\")) '($56 (Member $102 $36)) '($57 (Member $102 '\"ws_ship_date_sk\")) '($58 (Member $102 '\"ws_ship_hdemo_sk\")) '($59 (Member $102 '\"ws_ship_mode_sk\")) '($60 (Member $102 '\"ws_sold_date_sk\")) '($61 (Member $102 '\"ws_sold_time_sk\")) '($62 (Member $102 '\"ws_warehouse_sk\")) '($63 (Member $102 '\"ws_web_page_sk\")) '($64 (Member $102 '\"ws_web_site_sk\")) '($65 (Member $102 $37))))\r\n  (return (Coalesce (> (Member $103 '\"ws.ws_net_paid\") $66) $39))\r\n)))) '\"ws\") '((ExtractMembers (Right! (YtReadTable! $12 $15 '((YtSection '((YtPath $70 (Void) (Void) (Void))) $27)))) $86) '\"wr\") '((ExtractMembers (Right! (YtReadTable! $12 $15 '((YtSection '((YtPath $90 (Void) (Void) (Void))) $27)))) $93) '\"date_dim\") $97 '()))\r\n(let $99 '\"date_dim.d_date_sk\")\r\n(let $100 (ResWrite! (Sync! $12 $13) $14 (Key) (Unordered (OrderedMap (OrderedFilter $98 (lambda '($104) (And (And (And (And (Coalesce (> (Member $104 '\"wr.wr_return_amt\") (Int32 '\"10000\")) $39) (Coalesce (> (Member $104 '\"ws.ws_quantity\") $66) $39)) (Coalesce (== (Member $104 $60) (Member $104 $99)) $39)) (Coalesce (== (Member $104 '\"date_dim.d_year\") (Int32 '\"2000\")) $39)) (Coalesce (== (Member $104 '\"date_dim.d_moy\") (Int32 '\"12\")) $39)))) (lambda '($105) (AsStruct '('\"d_current_day\" (Member $105 '\"date_dim.d_current_day\")) '('\"d_current_month\" (Member $105 '\"date_dim.d_current_month\")) '($91 (Member $105 '\"date_dim.d_current_quarter\")) '('\"d_current_week\" (Member $105 '\"date_dim.d_current_week\")) '('\"d_current_year\" (Member $105 '\"date_dim.d_current_year\")) '('\"d_date\" (Member $105 '\"date_dim.d_date\")) '('\"d_date_id\" (Member $105 '\"date_dim.d_date_id\")) '('\"d_date_sk\" (Member $105 $99)) '('\"d_day_name\" (Member $105 '\"date_dim.d_day_name\")) '('\"d_dom\" (Member $105 '\"date_dim.d_dom\")) '('\"d_dow\" (Member $105 '\"date_dim.d_dow\")) '('\"d_first_dom\" (Member $105 '\"date_dim.d_first_dom\")) '($92 (Member $105 '\"date_dim.d_following_holiday\")) '('\"d_fy_quarter_seq\" (Member $105 '\"date_dim.d_fy_quarter_seq\")) '('\"d_fy_week_seq\" (Member $105 '\"date_dim.d_fy_week_seq\")) '('\"d_fy_year\" (Member $105 '\"date_dim.d_fy_year\")) '('\"d_holiday\" (Member $105 '\"date_dim.d_holiday\")) '('\"d_last_dom\" (Member $105 '\"date_dim.d_last_dom\")) '('\"d_month_seq\" (Member $105 '\"date_dim.d_month_seq\")) '('\"d_moy\" (Member $105 '\"date_dim.d_moy\")) '('\"d_qoy\" (Member $105 '\"date_dim.d_qoy\")) '('\"d_quarter_name\" (Member $105 '\"date_dim.d_quarter_name\")) '('\"d_quarter_seq\" (Member $105 '\"date_dim.d_quarter_seq\")) '('\"d_same_day_lq\" (Member $105 '\"date_dim.d_same_day_lq\")) '('\"d_same_day_ly\" (Member $105 '\"date_dim.d_same_day_ly\")) '('\"d_week_seq\" (Member $105 '\"date_dim.d_week_seq\")) '('\"d_weekend\" (Member $105 '\"date_dim.d_weekend\")) '('\"d_year\" (Member $105 '\"date_dim.d_year\")) '($71 (Member $105 '\"wr.wr_account_credit\")) '('\"wr_fee\" (Member $105 '\"wr.wr_fee\")) '('\"wr_item_sk\" (Member $105 '\"wr.wr_item_sk\")) '('\"wr_net_loss\" (Member $105 '\"wr.wr_net_loss\")) '('\"wr_order_number\" (Member $105 '\"wr.wr_order_number\")) '('\"wr_reason_sk\" (Member $105 '\"wr.wr_reason_sk\")) '($72 (Member $105 '\"wr.wr_refunded_addr_sk\")) '('\"wr_refunded_cash\" (Member $105 '\"wr.wr_refunded_cash\")) '($73 (Member $105 '\"wr.wr_refunded_cdemo_sk\")) '($74 (Member $105 '\"wr.wr_refunded_customer_sk\")) '($75 (Member $105 '\"wr.wr_refunded_hdemo_sk\")) '('\"wr_return_amt\" (Member $105 '\"wr.wr_return_amt\")) '($76 (Member $105 '\"wr.wr_return_amt_inc_tax\")) '($77 (Member $105 '\"wr.wr_return_quantity\")) '($78 (Member $105 '\"wr.wr_return_ship_cost\")) '('\"wr_return_tax\" (Member $105 '\"wr.wr_return_tax\")) '($79 (Member $105 '\"wr.wr_returned_date_sk\")) '($80 (Member $105 '\"wr.wr_returned_time_sk\")) '($81 (Member $105 '\"wr.wr_returning_addr_sk\")) '($82 (Member $105 '\"wr.wr_returning_cdemo_sk\")) '($83 (Member $105 '\"wr.wr_returning_customer_sk\")) '($84 (Member $105 '\"wr.wr_returning_hdemo_sk\")) '($85 (Member $105 '\"wr.wr_reversed_charge\")) '('\"wr_web_page_sk\" (Member $105 '\"wr.wr_web_page_sk\")) '('\"ws_bill_addr_sk\" (Member $105 $40)) '('\"ws_bill_cdemo_sk\" (Member $105 $41)) '($28 (Member $105 $42)) '('\"ws_bill_hdemo_sk\" (Member $105 $43)) '('\"ws_coupon_amt\" (Member $105 '\"ws.ws_coupon_amt\")) '($29 (Member $105 $44)) '($30 (Member $105 $45)) '($31 (Member $105 $46)) '('\"ws_ext_ship_cost\" (Member $105 $47)) '('\"ws_ext_tax\" (Member $105 '\"ws.ws_ext_tax\")) '($32 (Member $105 $48)) '('\"ws_item_sk\" (Member $105 '\"ws.ws_item_sk\")) '('\"ws_list_price\" (Member $105 '\"ws.ws_list_price\")) '('\"ws_net_paid\" (Member $105 '\"ws.ws_net_paid\")) '($33 (Member $105 $49)) '($34 (Member $105 $50)) '($35 (Member $105 $51)) '('\"ws_net_profit\" (Member $105 '\"ws.ws_net_profit\")) '('\"ws_order_number\" (Member $105 $52)) '('\"ws_promo_sk\" (Member $105 '\"ws.ws_promo_sk\")) '('\"ws_quantity\" (Member $105 '\"ws.ws_quantity\")) '('\"ws_sales_price\" (Member $105 $53)) '('\"ws_ship_addr_sk\" (Member $105 $54)) '('\"ws_ship_cdemo_sk\" (Member $105 $55)) '($36 (Member $105 $56)) '('\"ws_ship_date_sk\" (Member $105 $57)) '('\"ws_ship_hdemo_sk\" (Member $105 $58)) '('\"ws_ship_mode_sk\" (Member $105 $59)) '('\"ws_sold_date_sk\" (Member $105 $60)) '('\"ws_sold_time_sk\" (Member $105 $61)) '('\"ws_warehouse_sk\" (Member $105 $62)) '('\"ws_web_page_sk\" (Member $105 $63)) '('\"ws_web_site_sk\" (Member $105 $64)) '($37 (Member $105 $65)))))) '('('type) '('autoref))))\r\n(return (Commit! (Commit! $100 $14) (DataSink '\"yt\" '\"dirac\") '('('\"epoch\" '1))))\r\n)\r\n```\nmrrun log: https://gist.github.com/qrort/15a681a6564a9e25f32bfe608c8636ed'\nrowcount: 3601932372 (x1.5 \u043e\u0442 \u0432\u0441\u0435\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 hive)\n\n![\u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435](https://github.com/ydb-platform/ydb/assets/31865255/67127cd3-87b8-4ca2-a272-1951537e3dab)\n\n\u0412\u0438\u0436\u0443 \u0442\u043e\u043b\u044c\u043a\u043e, \u0447\u0442\u043e `wr.wr_return_amt > 10000` \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0434\u0436\u043e\u0439\u043d\u0430, \u0430 \u043d\u0435 \u0434\u043e \u043d\u0435\u0433\u043e. \u0414\u0440\u0443\u0433\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u043d\u0435 \u0432\u0438\u0434\u043d\u043e.\n\u0418, \u0432\u0438\u0434\u0438\u043c\u043e, \u044d\u0442\u043e \u0432\u0430\u0436\u043d\u0430\u044f \u0448\u0442\u0443\u043a\u0430, \u0442\u0430\u043a \u043a\u0430\u043a \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0442\u0430\u043a\u0430\u044f:\n```\nName    Rows    Compressed    Uncompressed    Data    Weight    Slices\nEstimated input\t29 088 987\t2.68 GiB\t4.09 GiB\t12.58 GiB\t245\t\ninput -> map\t29 088 987\t18.60 GiB\t27.32 GiB\t13.23 GiB\t1 715\t\nmap -> output\t57 101\t10.27 MiB\t10.57 MiB\t34.53 MiB\t575\t\n```\n\u0414\u0430, \u0442\u0443\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043d\u0435 \u043f\u0443\u0448\u0434\u0430\u0443\u043d\u0438\u0442\u0441\u044f \u0444\u0438\u043b\u044c\u0442\u0440 \u043d\u0430 \u043f\u0440\u0430\u0432\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443 left join. \u0423 \u043d\u0430\u0441 \u0442\u0430\u043a\u043e\u0433\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043d\u0435\u0442 - \u043c\u044b \u0443\u043c\u0435\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0443\u0448\u0434\u0430\u0443\u043d\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u043c \u0441\u043a\u0432\u043e\u0437\u044c inner join \u0438\u043b\u0438 \u043d\u0430 \u043b\u0435\u0432\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443 left join.\r\n\r\n\u041d\u0430\u043f\u0438\u0448\u0443 \u0437\u0434\u0435\u0441\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u0440\u043e\u0431\u0440\u043e\u0441\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430 \u043d\u0430 \u043f\u0440\u0430\u0432\u0443\u044e \u0447\u0430\u0441\u0442\u044c left join.\r\n\r\n\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0437\u0430\u043f\u0440\u043e\u0441\r\n\r\n```select * from a left join b on (a.key1 = b.key1 ...) where p(b)```\r\n\u0417\u0434\u0435\u0441\u044c p(b) - \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442, \u0437\u0430\u0432\u0438\u0441\u044f\u0449\u0438\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0442 \u043f\u0440\u0430\u0432\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b.\r\n\r\n\u0414\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0432\u0438\u0434\u0435\r\n```\r\nselect * from (\r\n   <\u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u0447\u043a\u0438 \u043b\u0435\u0432\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0435\u0441\u0442\u044c \u043a\u043b\u044e\u0447\u0438 \u0441\u043f\u0440\u0430\u0432\u0430>\r\n   union all\r\n   <\u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u0447\u043a\u0438 \u043b\u0435\u0432\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0439 \u0441\u043f\u0440\u0430\u0432\u0430>\r\n) where p(b)\r\n```\r\n\r\n\u042d\u0442\u043e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u0435\u043d\r\n```\r\nselect * from (\r\n    select * from a inner join b on (a.key1 = b.key1 ...) \r\n    union all\r\n    select * from a left only join b on (a.key1 = b.key1 ...)\r\n) where p(b)\r\n```\r\n\r\n\u0427\u0442\u043e \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e\r\n```\r\nselect * from (\r\n    select * from a inner join (select <\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e \u0432\u0441\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c> from b where p(b)) as b on (a.key1 = b.key1 ...)  \r\n    union all\r\n    select * from a left only join b on (a.key1 = b.key1 ...) where p2\r\n)\r\n```\r\n\u0417\u0434\u0435\u0441\u044c p2 - \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0437\u0430\u043c\u0435\u043d\u043e\u0439 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0432 p(b) \u043d\u0430 null (\u0442.\u0435. \u044d\u0442\u043e \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0430)\r\n\r\n\r\n\r\n\r\n\u0412 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0447\u0442\u043e \u0432\u0442\u043e\u0440\u0430\u044f \u0447\u0430\u0441\u0442\u044c union all \u043f\u0440\u043e\u043f\u0430\u0434\u0430\u0435\u0442. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442 \u0438\u043c\u0435\u0435\u0442 \u0432\u0438\u0434 ```(x > 0 ?? false)```, \u0442\u043e \u0438\u043c\u0435\u0435\u043c\r\n\r\n```\r\nselect * from (\r\n    select * from a inner join (select ... Just(x) as x from b  where (b.x > 0 ?? false)) as b on (a.key1 = b.key1 ...)\r\n    union all\r\n    select * from a left only join b on (a.key1 = b.key1 ...) where (null > x ?? false)\r\n)\r\n```\r\n\u0438\u043b\u0438 \r\n\r\n```\r\nselect * from (\r\n    select * from a inner join (select ... Just(x) as x from b   where (b.x > 0 ?? false)) as b on (a.key1 = b.key1 ...)\r\n    union all\r\n    select * from a left only join b on (a.key1 = b.key1 ...) where false\r\n)\r\n```\r\n\u0438\u043b\u0438 \r\n```\r\nselect * from a inner join (select ... Just(x) as x from b where (b.x > 0 ?? false)) as b on (a.key1 = b.key1 ...) \r\n```\r\n\r\n\r\n\u041d\u043e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u0430 ```not exist(b.x)``` \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f\r\n```\r\nselect * from (\r\n    select * from a inner join (select ... Just(x) as x from b where (not exists(b.x))) as b on (a.key1 = b.key1 ...)\r\n    union all\r\n    select * from a left only join b on (a.key1 = b.key1 ...) where (not exists (null))\r\n)\r\n```\r\n\u0438\u043b\u0438\r\n```\r\nselect * from (\r\n    select * from a inner join (select ... Just(x) as x from b) as b on (a.key1 = b.key1 ...)  where (not true)\r\n    union all\r\n    select * from a left only join b on (a.key1 = b.key1 ...) where (not exists (null))\r\n)\r\n```\r\n\r\n\u0438\u043b\u0438\r\n```\r\nselect * from a left only join b on (a.key1 = b.key1 ...)\r\n```\r\n\nSummary:\r\n\r\n\u0417\u0430\u043f\u0440\u043e\u0441\r\n```select * from a left join b on (a.key1 = b.key1 ...) where p(b)```\r\n\u0417\u0434\u0435\u0441\u044c p(b) - \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442, \u0437\u0430\u0432\u0438\u0441\u044f\u0449\u0438\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0442 \u043f\u0440\u0430\u0432\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b.\r\n\r\n\u0422\u0430\u043a\u043e\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0432\u0438\u0434\u0435\r\n```\r\nselect * from (\r\n    select * from a inner join (\r\n        select * from (\r\n            select <\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e \u0432\u0441\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c> from b\r\n        ) where p(b)\r\n    ) as b on (a.key1 = b.key1 ...)  \r\n    union all\r\n    select * from a left only join b on (a.key1 = b.key1 ...) where p2\r\n)\r\n```\r\n\u0417\u0434\u0435\u0441\u044c p2 - \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0437\u0430\u043c\u0435\u043d\u043e\u0439 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0432 p(b) \u043d\u0430 null (\u0442.\u0435. \u044d\u0442\u043e \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0430)\nunmodified subquery:\r\n```\r\nselect *\r\n\tfrom\r\n\t web_sales ws cross join date_dim left join web_returns wr on (ws.ws_order_number = wr.wr_order_number \r\n     and\tws.ws_item_sk = wr.wr_item_sk)\r\n\twhere\r\n\t\twr.wr_return_amt > 10000\r\n\t\tand ws.ws_net_profit > 1\r\n                     and ws.ws_net_paid > 0\r\n                     and ws.ws_quantity > 0\r\n                     and ws_sold_date_sk = d_date_sk\r\n                     and d_year = 2000\r\n                     and d_moy = 12\r\n```\r\nrowcount: 3601932372, time: 00:18:14\r\n\r\nwr filter:\r\n```\r\n$filtered = select * from web_returns where wr_return_amt > 10000;\r\n\r\nselect *\r\n\tfrom\r\n\t web_sales ws cross join date_dim left join $filtered wr on (ws.ws_order_number = wr.wr_order_number \r\n     and\tws.ws_item_sk = wr.wr_item_sk)\r\n\twhere\r\n\t    ws.ws_net_profit > 1\r\n                     and ws.ws_net_paid > 0\r\n                     and ws.ws_quantity > 0\r\n                     and ws_sold_date_sk = d_date_sk\r\n                     and d_year = 2000\r\n                     and d_moy = 12;\r\n```\r\nrow_count: 3295331031, time: 00:13:05",
  "created_at": "2024-03-19T17:02:34Z"
}