{
  "repo": "ydb-platform/ydb",
  "pull_number": 13766,
  "instance_id": "ydb-platform__ydb-13766",
  "issue_numbers": [
    "7901"
  ],
  "base_commit": "38d0188089614eb44f02811c93c24f34434e50f1",
  "patch": "diff --git a/ydb/core/tx/columnshard/blobs_action/bs/gc.cpp b/ydb/core/tx/columnshard/blobs_action/bs/gc.cpp\nindex a72c6fb413de..0dd30b5be84e 100644\n--- a/ydb/core/tx/columnshard/blobs_action/bs/gc.cpp\n+++ b/ydb/core/tx/columnshard/blobs_action/bs/gc.cpp\n@@ -45,7 +45,9 @@ TGCTask::TGCTask(const TString& storageId, TGCListsByGroup&& listsByGroupId, con\n }\n \n void TGCTask::OnGCResult(TEvBlobStorage::TEvCollectGarbageResult::TPtr ev) {\n-    AFL_VERIFY(ev->Get()->Status == NKikimrProto::OK)(\"status\", ev->Get()->Status)(\"details\", ev->Get()->ToString())(\"action_id\", GetActionGuid());\n+    if (ev->Get()->Status != NKikimrProto::OK) {\n+        Failures++;\n+    }\n     TBlobAddress bAddress(ev->Cookie, ev->Get()->Channel);\n     auto itGroup = ListsByGroupId.find(bAddress);\n     AFL_VERIFY(itGroup != ListsByGroupId.end())(\"address\", bAddress.DebugString());\n@@ -59,8 +61,14 @@ static TAtomicCounter PerGenerationCounter = 1;\n std::unique_ptr<TEvBlobStorage::TEvCollectGarbage> TGCTask::BuildRequest(const TBlobAddress& address) const {\n     auto it = ListsByGroupId.find(address);\n     AFL_VERIFY(it != ListsByGroupId.end());\n-    AFL_VERIFY(++it->second.RequestsCount < 10)(\"event\", \"build_gc_request\")(\"address\", address.DebugString())(\"current_gen\", CurrentGen)(\"gen\", CollectGenStepInFlight)\n-        (\"count\", it->second.RequestsCount);\n+    if (++it->second.RequestsCount >= TGCLists::RequestsLimit) {\n+         AFL_CRIT(NKikimrServices::TX_COLUMNSHARD_BLOBS_BS)\n+             (\"event\", \"build_gc_request\")\n+             (\"address\", address.DebugString())(\"current_gen\", CurrentGen)\n+             (\"gen\", CollectGenStepInFlight)\n+             (\"count\", it->second.RequestsCount);\n+         return nullptr;\n+     }\n     AFL_DEBUG(NKikimrServices::TX_COLUMNSHARD_BLOBS_BS)(\"event\", \"build_gc_request\")(\"address\", address.DebugString())(\"current_gen\", CurrentGen)(\"gen\", CollectGenStepInFlight)\n         (\"count\", it->second.RequestsCount);\n     auto result = std::make_unique<TEvBlobStorage::TEvCollectGarbage>(\ndiff --git a/ydb/core/tx/columnshard/blobs_action/bs/gc.h b/ydb/core/tx/columnshard/blobs_action/bs/gc.h\nindex 5471fc04c0dd..70b872ddb634 100644\n--- a/ydb/core/tx/columnshard/blobs_action/bs/gc.h\n+++ b/ydb/core/tx/columnshard/blobs_action/bs/gc.h\n@@ -17,6 +17,8 @@ class TGCTask: public IBlobsGCAction {\n         THashSet<TLogoBlobID> KeepList;\n         THashSet<TLogoBlobID> DontKeepList;\n         mutable ui32 RequestsCount = 0;\n+        \n+        constexpr static ui32 RequestsLimit = 10;\n     };\n     using TGCListsByGroup = THashMap<TBlobAddress, TGCLists>;\n private:\n@@ -26,6 +28,7 @@ class TGCTask: public IBlobsGCAction {\n     const ui64 CurrentGen;\n     std::deque<TUnifiedBlobId> KeepsToErase;\n     std::shared_ptr<TBlobManager> Manager;\n+    size_t Failures = 0;\n protected:\n     virtual void RemoveBlobIdFromDB(const TTabletId tabletId, const TUnifiedBlobId& blobId, TBlobManagerDb& dbBlobs) override;\n     virtual void DoOnExecuteTxAfterCleaning(NColumnShard::TColumnShard& self, TBlobManagerDb& dbBlobs) override;\n@@ -54,6 +57,10 @@ class TGCTask: public IBlobsGCAction {\n         return ListsByGroupId.empty();\n     }\n \n+    bool HasFailures() const {\n+        return Failures != 0;\n+    }\n+\n     void OnGCResult(TEvBlobStorage::TEvCollectGarbageResult::TPtr ev);\n \n     std::unique_ptr<TEvBlobStorage::TEvCollectGarbage> BuildRequest(const TBlobAddress& address) const;\ndiff --git a/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.cpp b/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.cpp\nindex b198114d0be7..8667060928a7 100644\n--- a/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.cpp\n+++ b/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.cpp\n@@ -1,9 +1,11 @@\n #include \"gc_actor.h\"\n #include <ydb/core/tx/columnshard/columnshard_private_events.h>\n+#include <ydb/core/tx/columnshard/hooks/abstract/abstract.h>\n \n namespace NKikimr::NOlap::NBlobOperations::NBlobStorage {\n \n void TGarbageCollectionActor::Handle(TEvBlobStorage::TEvCollectGarbageResult::TPtr& ev) {\n+    NYDBTest::TControllers::GetColumnShardController()->OnCollectGarbageResult(ev);\n     ACFL_DEBUG(\"actor\", \"TEvCollectGarbageResult\");\n     if (ev->Get()->Status == NKikimrProto::BLOCKED) {\n         auto g = PassAwayGuard();\n@@ -14,7 +16,13 @@ void TGarbageCollectionActor::Handle(TEvBlobStorage::TEvCollectGarbageResult::TP\n         CheckFinished();\n     } else {\n         ACFL_ERROR()(\"event\", \"GC_ERROR\")(\"details\", ev->Get()->Print(true));\n-        SendToBSProxy(NActors::TActivationContext::AsActorContext(), ev->Cookie, GCTask->BuildRequest(TBlobAddress(ev->Cookie, ev->Get()->Channel)).release(), ev->Cookie);\n+        auto request = GCTask->BuildRequest(TBlobAddress(ev->Cookie, ev->Get()->Channel));\n+        if (request) {\n+            SendToBSProxy(NActors::TActivationContext::AsActorContext(), ev->Cookie, request.release(), ev->Cookie);\n+        } else {\n+            GCTask->OnGCResult(ev);\n+            CheckFinished();\n+        }\n     }\n }\n \n@@ -22,7 +30,11 @@ void TGarbageCollectionActor::CheckFinished() {\n     if (SharedRemovingFinished && GCTask->IsFinished()) {\n         auto g = PassAwayGuard();\n         ACFL_DEBUG(\"actor\", \"TGarbageCollectionActor\")(\"event\", \"finished\");\n-        TActorContext::AsActorContext().Send(TabletActorId, std::make_unique<NColumnShard::TEvPrivate::TEvGarbageCollectionFinished>(GCTask));\n+        if (GCTask->HasFailures()) {\n+            Send(TabletActorId, new TEvents::TEvPoison);\n+        } else {\n+            TActorContext::AsActorContext().Send(TabletActorId, std::make_unique<NColumnShard::TEvPrivate::TEvGarbageCollectionFinished>(GCTask));\n+        }\n     }\n }\n \ndiff --git a/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.h b/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.h\nindex 006c4ceb4bfc..4dee1e4f4e79 100644\n--- a/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.h\n+++ b/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.h\n@@ -12,6 +12,7 @@ class TGarbageCollectionActor: public TSharedBlobsCollectionActor<TGarbageCollec\n     using TBase = TSharedBlobsCollectionActor<TGarbageCollectionActor>;\n     const NActors::TActorId TabletActorId;\n     std::shared_ptr<TGCTask> GCTask;\n+\n     void Handle(TEvBlobStorage::TEvCollectGarbageResult::TPtr& ev);\n     void CheckFinished();\n \n@@ -41,7 +42,7 @@ class TGarbageCollectionActor: public TSharedBlobsCollectionActor<TGarbageCollec\n         AFL_DEBUG(NKikimrServices::TX_COLUMNSHARD_BLOBS_BS)(\"actor\", \"TGarbageCollectionActor\")(\"event\", \"starting\")(\"action_id\", GCTask->GetActionGuid());\n         for (auto&& i : GCTask->GetListsByGroupId()) {\n             auto request = GCTask->BuildRequest(i.first);\n-            AFL_VERIFY(request);\n+            AFL_VERIFY(request); // Cannot fail on the first time\n             SendToBSProxy(ctx, i.first.GetGroupId(), request.release(), i.first.GetGroupId());\n         }\n         TBase::Bootstrap(ctx);\ndiff --git a/ydb/core/tx/columnshard/hooks/abstract/abstract.h b/ydb/core/tx/columnshard/hooks/abstract/abstract.h\nindex 1c8d70a9444d..76ae364e13ce 100644\n--- a/ydb/core/tx/columnshard/hooks/abstract/abstract.h\n+++ b/ydb/core/tx/columnshard/hooks/abstract/abstract.h\n@@ -89,6 +89,8 @@ class ICSController {\n     }\n     virtual void DoOnDataSharingStarted(const ui64 /*tabletId*/, const TString& /*sessionId*/) {\n     }\n+    virtual void DoOnCollectGarbageResult(TEvBlobStorage::TEvCollectGarbageResult::TPtr& /*result*/) {\n+    }\n \n     virtual TDuration DoGetUsedSnapshotLivetime(const TDuration defaultValue) const {\n         return defaultValue;\n@@ -267,6 +269,10 @@ class ICSController {\n         DoOnAfterGCAction(shard, action);\n     }\n \n+    void OnCollectGarbageResult(TEvBlobStorage::TEvCollectGarbageResult::TPtr& result) {\n+        DoOnCollectGarbageResult(result);\n+    }\n+\n     bool OnAfterFilterAssembling(const std::shared_ptr<arrow::RecordBatch>& batch) {\n         return DoOnAfterFilterAssembling(batch);\n     }\ndiff --git a/ydb/core/tx/columnshard/ut_rw/ut_columnshard_read_write.cpp b/ydb/core/tx/columnshard/ut_rw/ut_columnshard_read_write.cpp\nindex 6dc0c82ed5ff..374dfe23da6c 100644\n--- a/ydb/core/tx/columnshard/ut_rw/ut_columnshard_read_write.cpp\n+++ b/ydb/core/tx/columnshard/ut_rw/ut_columnshard_read_write.cpp\n@@ -2421,9 +2421,10 @@ Y_UNIT_TEST_SUITE(TColumnShardTestReadWrite) {\n         }\n     }\n \n+    template<typename Controller>\n     void TestCompactionGC() {\n         TTestBasicRuntime runtime;\n-        auto csDefaultControllerGuard = NKikimr::NYDBTest::TControllers::RegisterCSControllerGuard<TDefaultTestsController>();\n+        auto csDefaultControllerGuard = NKikimr::NYDBTest::TControllers::RegisterCSControllerGuard<Controller>();\n         csDefaultControllerGuard->DisableBackground(NKikimr::NYDBTest::ICSController::EBackground::Indexation);\n         csDefaultControllerGuard->SetOverridePeriodicWakeupActivationPeriod(TDuration::Seconds(1));\n         csDefaultControllerGuard->SetOverrideBlobSplitSettings(NOlap::NSplitter::TSplitSettings());\n@@ -2687,7 +2688,11 @@ Y_UNIT_TEST_SUITE(TColumnShardTestReadWrite) {\n     }\n \n     Y_UNIT_TEST(CompactionGC) {\n-        TestCompactionGC();\n+        TestCompactionGC<TDefaultTestsController>();\n+    }\n+\n+    Y_UNIT_TEST(CompactionGCFailingBs) {\n+        TestCompactionGC<NOlap::TFailingBSController>();\n     }\n \n     Y_UNIT_TEST(PortionInfoSize) {\n",
  "test_patch": "diff --git a/ydb/core/tx/columnshard/test_helper/controllers.h b/ydb/core/tx/columnshard/test_helper/controllers.h\nindex 281058322ac7..97f0eb571741 100644\n--- a/ydb/core/tx/columnshard/test_helper/controllers.h\n+++ b/ydb/core/tx/columnshard/test_helper/controllers.h\n@@ -2,6 +2,7 @@\n #include <ydb/core/testlib/basics/runtime.h>\n #include <ydb/core/tx/columnshard/hooks/testing/controller.h>\n #include <ydb/core/tx/tiering/manager.h>\n+#include <ydb/core/tx/columnshard/blobs_action/bs/address.h>\n \n namespace NKikimr::NOlap {\n \n@@ -72,4 +73,22 @@ class TWaitCompactionController: public NYDBTest::NColumnShard::TController {\n     }\n };\n \n+class TFailingBSController: public NKikimr::NYDBTest::NColumnShard::TController {\n+    void DoOnCollectGarbageResult(TEvBlobStorage::TEvCollectGarbageResult::TPtr& result) override {\n+        NBlobOperations::NBlobStorage::TBlobAddress group(result->Cookie, result->Get()->Channel);\n+        if (!FailingGroup.has_value()) {\n+            FailingGroup = group;\n+        }\n+        if (group == FailingGroup.value() && FailsCount < 15) {\n+            Cerr << \"Dropped EvCollectGarbageResult\" << Endl;\n+            result->Get()->Status = NKikimrProto::ERROR;\n+            FailsCount++;\n+        }\n+    }\n+\n+private:\n+    std::optional<NBlobOperations::NBlobStorage::TBlobAddress> FailingGroup = std::nullopt;\n+    size_t FailsCount = 0;\n+};\n+\n }\n",
  "problem_statement": "Change VERIFY BuildRequest to KILL_TABLET\n```\r\nVERIFY failed (2024-08-16T12:53:32.890340+0300): action_id=34ea0688-5bb511ef-9d455037-e1d78fd8;tablet_id=72075186224039667;verification=++it->second.RequestsCount < 10;fline=gc.cpp:62;event=build_gc_request;address=g=2181038085;c=2;;current_gen=1;gen=1:0;count=10;\r\n  ydb/library/actors/core/log.cpp:744\r\n  ~TVerifyFormattedRecordWriter(): requirement false f\r\n0. /home/kruall/rya-wd/ydb/util/system/yassert.cpp:83: NPrivate::InternalPanicImpl(int, char const*, char const*, int, int, int, TBasicStringBuf<char, std::__y1::char_traits<char>>, char const*, unsigned long) @ 0xDABE3EC\r\n1. /home/kruall/rya-wd/ydb/util/system/yassert.cpp:55: NPrivate::Panic(NPrivate::TStaticBuf const&, int, char const*, char const*, char const*, ...) @ 0xDAB95EB\r\n2. /home/kruall/rya-wd/ydb/ydb/library/actors/core/log.cpp:744: NActors::TVerifyFormattedRecordWriter::~TVerifyFormattedRecordWriter() @ 0xE60E0A4\r\n3. /home/kruall/rya-wd/ydb/ydb/core/tx/columnshard/blobs_action/bs/gc.cpp:62: NKikimr::NOlap::NBlobOperations::NBlobStorage::TGCTask::BuildRequest(NKikimr::NOlap::NBlobOperations::NBlobStorage::TBlobAddress const&) const @ 0x14F01BCA\r\n4. /home/kruall/rya-wd/ydb/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.cpp:17: NKikimr::NOlap::NBlobOperations::NBlobStorage::TGarbageCollectionActor::Handle(TAutoPtr<NActors::TEventHandle<NKikimr::TEvBlobStorage::TEvCollectGarbageResult>, TDelete>&) @ 0x14F13366\r\n5. /home/kruall/rya-wd/ydb/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.h:34: NKikimr::NOlap::NBlobOperations::NBlobStorage::TGarbageCollectionActor::StateWork(TAutoPtr<NActors::IEventHandle, TDelete>&) @ 0x14EFEAD9\r\n6. /home/kruall/rya-wd/ydb/ydb/library/actors/core/executor_thread.cpp:251: NActors::TGenericExecutorThread::TProcessingResult NActors::TGenericExecutorThread::Execute<NActors::TMailboxTable::THTSwapMailbox>(NActors::TMailboxTable::THTSwapMailbox*, unsigned int, bool) @ 0xE5F12B3\r\n7. /home/kruall/rya-wd/ydb/ydb/library/actors/core/executor_thread.cpp:439: NActors::TGenericExecutorThread::ProcessExecutorPool(NActors::IExecutorPool*)::$_0::operator()(unsigned int, bool) const @ 0xE5E9741\r\n8. /home/kruall/rya-wd/ydb/ydb/library/actors/core/executor_thread.cpp:492: NActors::TGenericExecutorThread::ProcessExecutorPool(NActors::IExecutorPool*) @ 0xE5E9139\r\n9. /home/kruall/rya-wd/ydb/ydb/library/actors/core/executor_thread.cpp:523: NActors::TExecutorThread::ThreadProc() @ 0xE5E9ED6\r\n10. /home/kruall/rya-wd/ydb/util/system/thread.cpp:244: (anonymous namespace)::TPosixThread::ThreadProxy(void*) @ 0xDAC2629\r\n11. ??:0: ?? @ 0x7FEAAF149608\r\n12. ??:0: ?? @ 0x7FEAAF069352\r\n```\r\n\r\nhttps://github.com/ydb-platform/ydb/blob/main/ydb/core/tx/columnshard/blobs_action/bs/gc.cpp#L62\r\n\r\nCurrently, in case of issues with blob storage, verification triggers and the entire process fails. We need to switch to terminating only the tablet.\r\n\r\nIf we're already experiencing problems with blob storage, then killing the node and restarting all tablets on it might exacerbate the situation.\r\nIt's better to reduce the impact radius to a single tablet.\r\n\n",
  "hints_text": "I have the same problem \r\n\r\n```\r\nmaxim-yurchuk@vla5-2570:/Berkanavt/kikimr_31003/logs$ cat kikimr.start.13.gz | gzip --d\r\nJan 14 00:05:54 vla5-2570 kikimr_31003[3869885]: VERIFY failed (2025-01-14T00:05:54.910827+0300): action_id=dfedc02-d1f211ef-9e84f3c3-3de25b8b;tablet_id=72075186229319608;verification=++it->second.RequestsCount < 10;fline=gc.cpp:62;event=build_gc_request;address=g=2181038081;c=21;;current_gen=1;gen=1:0;count=10;\r\nJan 14 00:05:54 vla5-2570 kikimr_31003[3869885]:   ydb/library/actors/core/log.cpp:754\r\nJan 14 00:05:54 vla5-2570 kikimr_31003[3869885]:   ~TVerifyFormattedRecordWriter(): requirement false failed\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 0. /-S/util/system/yassert.cpp:83: NPrivate::InternalPanicImpl(int, char const*, char const*, int, int, int, TBasicStringBuf<char, std::__y1::char_traits<char>>, char const*, unsigned long) @ 0x9A80EDB\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 1. /-S/util/system/yassert.cpp:55: NPrivate::Panic(NPrivate::TStaticBuf const&, int, char const*, char const*, char const*, ...) @ 0x9A7A98C\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 2. /-S/ydb/library/actors/core/log.cpp:754: NActors::TVerifyFormattedRecordWriter::~TVerifyFormattedRecordWriter() @ 0xA812CE3\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 3. /-S/ydb/core/tx/columnshard/blobs_action/bs/gc.cpp:62: NKikimr::NOlap::NBlobOperations::NBlobStorage::TGCTask::BuildRequest(NKikimr::NOlap::NBlobOperations::NBlobStorage::TBlobAddress const&) const @ 0x1256055C\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 4. /-S/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.cpp:17: NKikimr::NOlap::NBlobOperations::NBlobStorage::TGarbageCollectionActor::Handle(TAutoPtr<NActors::TEventHandle<NKikimr::TEvBlobStorage::TEvCollectGarbageResult>, TDelete>&) @ 0x125712CE\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 5. /-S/ydb/core/tx/columnshard/blobs_action/bs/gc_actor.h:34: NKikimr::NOlap::NBlobOperations::NBlobStorage::TGarbageCollectionActor::StateWork(TAutoPtr<NActors::IEventHandle, TDelete>&) @ 0x1255D65E\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 6. /-S/ydb/library/actors/core/executor_thread.cpp:281: NActors::TGenericExecutorThread::Execute(NActors::TMailbox*, bool) @ 0xA804C93\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 7. /-S/ydb/library/actors/core/executor_thread.cpp:475: NActors::TGenericExecutorThread::ProcessExecutorPool(NActors::IExecutorPool*)::$_0::operator()(NActors::TMailbox*, bool) const @ 0xA808780\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 8. /-S/ydb/library/actors/core/executor_thread.cpp:529: NActors::TGenericExecutorThread::ProcessExecutorPool(NActors::IExecutorPool*) @ 0xA8082D2\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 9. /-S/ydb/library/actors/core/executor_thread.cpp:560: NActors::TExecutorThread::ThreadProc() @ 0xA808F2E\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 10. /-S/util/system/thread.cpp:244: (anonymous namespace)::TPosixThread::ThreadProxy(void*) @ 0x9A84FBC\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 11. ??:0: ?? @ 0x7FDDBF0A5608\r\nJan 14 00:05:56 vla5-2570 kikimr_31003[3869885]: 12. ??:0: ?? @ 0x7FDDBEFC5352\r\nJan 14 00:05:58 vla5-2570 kikimr_31003[371544]: GRPCs port is not defined.\r\nJan 14 00:05:58 vla5-2570 kikimr_31003[371544]: Determined node ID: 0\r\nJan 14 00:05:58 vla5-2570 kikimr_31003[371544]: Trying to register dynamic node to vla5-2569.search.yandex.net:2135\r\nJan 14 00:05:59 vla5-2570 kikimr_31003[371544]: Registration error: Status: TRANSPORT_UNAVAILABLE\r\nJan 14 00:05:59 vla5-2570 kikimr_31003[371544]: Issues:\r\nJan 14 00:05:59 vla5-2570 kikimr_31003[371544]: <main>: Error: GRpc error: (14): failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2a02:6b8:c34:14:0:1517:eb1e:f456%5D:2135: Failed to connect to remote host: Connection refused\r\nJan 14 00:05:59 vla5-2570 kikimr_31003[371544]: <main>: Error: Grpc error response on endpoint vla5-2569.search.yandex.net:2135\r\nJan 14 00:05:59 vla5-2570 kikimr_31003[371544]: Trying to register dynamic node to vla5-2566.search.yandex.net:2135\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: Registration error: Status: TRANSPORT_UNAVAILABLE\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: Issues:\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: <main>: Error: GRpc error: (14): recvmsg:Connection reset by peer\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: <main>: Error: Grpc error response on endpoint vla5-2566.search.yandex.net:2135\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: Trying to register dynamic node to vla5-2568.search.yandex.net:2135\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: Success. Registered as 50005\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: Node name:\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: Trying to get configs from vla5-2570.search.yandex.net:2135\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: Success.\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: configured\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: Starting Kikimr r-1 built by maxim-yurchuk\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: UDFsDir is not specified, no dynamic UDFs will be loaded.\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: 2025-01-14T00:06:06.798512+03:00 371544 15038761320904901870 INFO ua_0 created, uri [[fd53::1]:16400]\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: GRpc memory quota was set but disabled due to issues with grpc quoter, to enable it use EnableGRpcMemoryQuota option\r\nJan 14 00:06:06 vla5-2570 kikimr_31003[371544]: 2025-01-14T00:06:06.883837+03:00 371544 17193755286649186654 INFO ua_0/0 grpc call initialized, session_id [706f5fac-739c7f25-a4adc398-fdce3d30], last_seq_no [0]\r\n```\r\n\r\nVersion: https://github.com/ydb-platform/ydb/commit/d425a70c0e5b9a4e55b009c87d2acb1c2c813a12\nrepeated in http://ydb-sas-testing-0000.search.yandex.net:8765/monitoring/cluster/nodes\nversion https://github.com/ydb-platform/ydb/commit/7e240c68ad5a0e513d2126df4c8fe531e2577ba3\n2025-01-14 16:47:55.000\nprio:high \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0441\u0442\u043e\u043f\u043f\u0438\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441 \u043d\u0435\u043c\u0435\u0437\u0438\u0441\u043e\u043c",
  "created_at": "2025-01-23T15:11:30Z"
}