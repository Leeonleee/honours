{
  "repo": "ydb-platform/ydb",
  "pull_number": 15258,
  "instance_id": "ydb-platform__ydb-15258",
  "issue_numbers": [
    "14992"
  ],
  "base_commit": "94077e57fc7c2931c5f12393bbda79f31a22b3e2",
  "patch": "diff --git a/ydb/core/tablet/node_whiteboard.cpp b/ydb/core/tablet/node_whiteboard.cpp\nindex c76877ae4af5..0a0b8db4a15a 100644\n--- a/ydb/core/tablet/node_whiteboard.cpp\n+++ b/ydb/core/tablet/node_whiteboard.cpp\n@@ -721,6 +721,9 @@ class TNodeWhiteboardService : public TActorBootstrapped<TNodeWhiteboardService>\n         auto& endpoint = *SystemStateInfo.AddEndpoints();\n         endpoint.SetName(ev->Get()->Name);\n         endpoint.SetAddress(ev->Get()->Address);\n+        std::sort(SystemStateInfo.MutableEndpoints()->begin(), SystemStateInfo.MutableEndpoints()->end(), [](const auto& a, const auto& b) {\n+            return a.GetName() < b.GetName();\n+        });\n         SystemStateInfo.SetChangeTime(ctx.Now().MilliSeconds());\n     }\n \ndiff --git a/ydb/core/viewer/viewer_nodes.h b/ydb/core/viewer/viewer_nodes.h\nindex dcdcf547592d..afb35a9ec61e 100644\n--- a/ydb/core/viewer/viewer_nodes.h\n+++ b/ydb/core/viewer/viewer_nodes.h\n@@ -206,7 +206,7 @@ class TJsonNodes : public TViewerPipeClient {\n         bool HasDisks = false;\n         bool GotDatabaseFromDatabaseBoardInfo = false;\n         bool GotDatabaseFromResourceBoardInfo = false;\n-        int UptimeSeconds = 0;\n+        std::optional<int> UptimeSeconds = 0;\n         ui32 Connections = 0;\n         ui64 SendThroughput = 0;\n         ui64 ReceiveThroughput = 0;\n@@ -460,11 +460,19 @@ class TJsonNodes : public TViewerPipeClient {\n             return TInstant::MilliSeconds(SystemState.GetDisconnectTime());\n         }\n \n-        int GetUptimeSeconds(TInstant now) const {\n+        std::optional<int> GetUptimeSeconds(TInstant now) const {\n             if (Disconnected) {\n-                return static_cast<int>(GetDisconnectTime().Seconds()) - static_cast<int>(now.Seconds()); // negative for disconnected nodes\n+                if (SystemState.HasDisconnectTime()) {\n+                    return static_cast<int>(GetDisconnectTime().Seconds()) - static_cast<int>(now.Seconds()); // negative for disconnected nodes\n+                } else {\n+                    return std::nullopt;\n+                }\n             } else {\n-                return static_cast<int>(now.Seconds()) - static_cast<int>(GetStartTime().Seconds());\n+                if (SystemState.HasStartTime()) {\n+                    return static_cast<int>(now.Seconds()) - static_cast<int>(GetStartTime().Seconds());\n+                } else {\n+                    return std::nullopt;\n+                }\n             }\n         }\n \n@@ -538,39 +546,42 @@ class TJsonNodes : public TViewerPipeClient {\n         }\n \n         TString GetUptimeForGroup() const {\n-            if (!Disconnected && UptimeSeconds >= 0) {\n-                if (UptimeSeconds < 60 * 10) {\n-                    return \"up <10m\";\n-                }\n-                if (UptimeSeconds < 60 * 60) {\n-                    return \"up <1h\";\n-                }\n-                if (UptimeSeconds < 60 * 60 * 24) {\n-                    return \"up <24h\";\n-                }\n-                if (UptimeSeconds < 60 * 60 * 24 * 7) {\n-                    return \"up 24h+\";\n-                }\n-                return \"up 1 week+\";\n-            } else {\n-                if (SystemState.HasDisconnectTime()) {\n-                    if (UptimeSeconds > -60 * 10) {\n+            if (UptimeSeconds) {\n+                if (*UptimeSeconds >= 0) {\n+                    if (*UptimeSeconds < 60 * 10) {\n+                        return \"up <10m\";\n+                    }\n+                    if (*UptimeSeconds < 60 * 60) {\n+                        return \"up <1h\";\n+                    }\n+                    if (*UptimeSeconds < 60 * 60 * 24) {\n+                        return \"up <24h\";\n+                    }\n+                    if (*UptimeSeconds < 60 * 60 * 24 * 7) {\n+                        return \"up 24h+\";\n+                    }\n+                    return \"up 1 week+\";\n+                } else {\n+                    if (*UptimeSeconds > -60 * 10) {\n                         return \"down <10m\";\n                     }\n-                    if (UptimeSeconds > -60 * 60) {\n+                    if (*UptimeSeconds > -60 * 60) {\n                         return \"down <1h\";\n                     }\n-                    if (UptimeSeconds > -60 * 60 * 24) {\n+                    if (*UptimeSeconds > -60 * 60 * 24) {\n                         return \"down <24h\";\n                     }\n-                    if (UptimeSeconds > -60 * 60 * 24 * 7) {\n+                    if (*UptimeSeconds > -60 * 60 * 24 * 7) {\n                         return \"down 24h+\";\n                     }\n                     return \"down 1 week+\";\n-                } else {\n-                    return \"disconnected\";\n                 }\n             }\n+            if (Disconnected) {\n+                return \"disconnected\";\n+            } else {\n+                return \"unknown\";\n+            }\n         }\n \n         TString GetVersionForGroup() const {\n@@ -682,7 +693,7 @@ class TJsonNodes : public TViewerPipeClient {\n                 case ENodeFields::Missing:\n                     return MissingDisks;\n                 case ENodeFields::Uptime:\n-                    return UptimeSeconds;\n+                    return UptimeSeconds.value_or(0);\n                 case ENodeFields::SystemState:\n                     return static_cast<int>(GetOverall());\n                 case ENodeFields::ConnectStatus:\n@@ -937,6 +948,9 @@ class TJsonNodes : public TViewerPipeClient {\n             FilterGroup = params.Get(\"filter_group\");\n             FilterGroupBy = ParseENodeFields(params.Get(\"filter_group_by\"));\n             FieldsRequired.set(+FilterGroupBy);\n+            if (FilterGroupBy == ENodeFields::Uptime) {\n+                FieldsRequired.set(+ENodeFields::DisconnectTime);\n+            }\n         }\n \n         OffloadMerge = FromStringWithDefault<bool>(params.Get(\"offload_merge\"), OffloadMerge);\n@@ -1034,6 +1048,9 @@ class TJsonNodes : public TViewerPipeClient {\n             NeedGroup = true;\n             GroupBy = ParseENodeFields(group);\n             FieldsRequired.set(+GroupBy);\n+            if (GroupBy == ENodeFields::Uptime) {\n+                FieldsRequired.set(+ENodeFields::DisconnectTime);\n+            }\n             NeedSort = false;\n             NeedLimit = false;\n         }\n@@ -1094,7 +1111,7 @@ class TJsonNodes : public TViewerPipeClient {\n         TIntrusivePtr<TDomainsInfo> domains = AppData()->DomainsInfo;\n         auto* domain = domains->GetDomain();\n         DomainPath = \"/\" + domain->Name;\n-        if (ProblemNodesOnly || GroupBy == ENodeFields::Uptime) {\n+        if (ProblemNodesOnly || FieldsRequired.test(+ENodeFields::Uptime) || FieldsRequired.test(+ENodeFields::DisconnectTime)) {\n             FieldsRequired.set(+ENodeFields::SystemState);\n             TTabletId rootHiveId = domains->GetHive();\n             HivesToAsk.push_back(rootHiveId);\n@@ -1294,7 +1311,7 @@ class TJsonNodes : public TViewerPipeClient {\n             if (UptimeSeconds > 0 && FieldsAvailable.test(+ENodeFields::SystemState)) {\n                 TNodeView nodeView;\n                 for (TNode* node : NodeView) {\n-                    if (node->UptimeSeconds < UptimeSeconds) {\n+                    if (node->UptimeSeconds.value_or(0) < UptimeSeconds) {\n                         nodeView.push_back(node);\n                     }\n                 }\n@@ -1446,7 +1463,7 @@ class TJsonNodes : public TViewerPipeClient {\n                     NeedSort = false;\n                     break;\n                 case ENodeFields::Uptime:\n-                    SortCollection(NodeView, [](const TNode* node) { return node->UptimeSeconds; }, ReverseSort);\n+                    SortCollection(NodeView, [](const TNode* node) { return node->UptimeSeconds.value_or(0); }, ReverseSort);\n                     NeedSort = false;\n                     break;\n                 case ENodeFields::Memory:\n@@ -3126,7 +3143,7 @@ class TJsonNodes : public TViewerPipeClient {\n                     jsonNode.SetDatabase(node->Database);\n                 }\n                 if (node->UptimeSeconds) {\n-                    jsonNode.SetUptimeSeconds(node->UptimeSeconds);\n+                    jsonNode.SetUptimeSeconds(*(node->UptimeSeconds));\n                 }\n                 if (node->Disconnected) {\n                     jsonNode.SetDisconnected(node->Disconnected);\n",
  "test_patch": "diff --git a/ydb/core/viewer/tests/canondata/result.json b/ydb/core/viewer/tests/canondata/result.json\nindex af422fd482df..f0859e110725 100644\n--- a/ydb/core/viewer/tests/canondata/result.json\n+++ b/ydb/core/viewer/tests/canondata/result.json\n@@ -2972,6 +2972,242 @@\n             \"TotalNodes\": \"1\"\n         }\n     },\n+    \"test.test_viewer_nodes_issue_14992\": {\n+        \"response_group\": {\n+            \"FieldsAvailable\": \"0000000110111110111111100000111\",\n+            \"FieldsRequired\": \"0000000001000000010000000000101\",\n+            \"FoundNodes\": \"3\",\n+            \"MaximumDisksPerNode\": \"1\",\n+            \"Nodes\": [\n+                {\n+                    \"CpuUsage\": \"not-zero-number\",\n+                    \"DiskSpaceUsage\": \"not-zero-number\",\n+                    \"NodeId\": 1,\n+                    \"SystemState\": {\n+                        \"ChangeTime\": \"not-zero-number-text\",\n+                        \"CoresTotal\": \"not-zero-number\",\n+                        \"CoresUsed\": \"not-zero-number\",\n+                        \"Endpoints\": [\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"grpc\"\n+                            },\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"http-mon\"\n+                            },\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"ic\"\n+                            }\n+                        ],\n+                        \"Host\": \"text\",\n+                        \"LoadAverage\": \"not-empty-array\",\n+                        \"Location\": {\n+                            \"DataCenter\": \"1\",\n+                            \"Rack\": \"1\",\n+                            \"Unit\": \"1\"\n+                        },\n+                        \"MaxDiskUsage\": \"not-zero-number\",\n+                        \"MemoryLimit\": \"not-zero-number-text\",\n+                        \"NodeId\": 1,\n+                        \"NumberOfCpus\": \"not-zero-number\",\n+                        \"PoolStats\": [\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"System\",\n+                                \"Threads\": 2,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"User\",\n+                                \"Threads\": 3,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"Batch\",\n+                                \"Threads\": 2,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"IO\",\n+                                \"Threads\": 1,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"IC\",\n+                                \"Threads\": 1,\n+                                \"Usage\": \"number\"\n+                            }\n+                        ],\n+                        \"Roles\": \"not-empty-array\",\n+                        \"StartTime\": \"not-zero-number-text\",\n+                        \"SystemState\": \"Green\",\n+                        \"TotalSessions\": 0\n+                    },\n+                    \"UptimeSeconds\": \"number\"\n+                },\n+                {\n+                    \"CpuUsage\": \"not-zero-number\",\n+                    \"Database\": \"/Root/shared_db\",\n+                    \"NodeId\": 50001,\n+                    \"SystemState\": {\n+                        \"ChangeTime\": \"not-zero-number-text\",\n+                        \"CoresTotal\": \"not-zero-number\",\n+                        \"CoresUsed\": \"not-zero-number\",\n+                        \"Endpoints\": [\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"grpc\"\n+                            },\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"http-mon\"\n+                            },\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"ic\"\n+                            }\n+                        ],\n+                        \"Host\": \"text\",\n+                        \"LoadAverage\": \"not-empty-array\",\n+                        \"Location\": {},\n+                        \"MemoryLimit\": \"not-zero-number-text\",\n+                        \"NodeId\": 50001,\n+                        \"NumberOfCpus\": \"not-zero-number\",\n+                        \"PoolStats\": [\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"System\",\n+                                \"Threads\": 2,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"User\",\n+                                \"Threads\": 3,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"Batch\",\n+                                \"Threads\": 2,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"IO\",\n+                                \"Threads\": 1,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"IC\",\n+                                \"Threads\": 1,\n+                                \"Usage\": \"number\"\n+                            }\n+                        ],\n+                        \"Roles\": \"not-empty-array\",\n+                        \"StartTime\": \"not-zero-number-text\",\n+                        \"SystemState\": \"Green\",\n+                        \"Tenants\": [\n+                            \"/Root/shared_db\"\n+                        ],\n+                        \"TotalSessions\": 0\n+                    },\n+                    \"UptimeSeconds\": \"number\"\n+                },\n+                {\n+                    \"CpuUsage\": \"not-zero-number\",\n+                    \"Database\": \"/Root/dedicated_db\",\n+                    \"NodeId\": 50000,\n+                    \"SystemState\": {\n+                        \"ChangeTime\": \"not-zero-number-text\",\n+                        \"CoresTotal\": \"not-zero-number\",\n+                        \"CoresUsed\": \"not-zero-number\",\n+                        \"Endpoints\": [\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"grpc\"\n+                            },\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"http-mon\"\n+                            },\n+                            {\n+                                \"Address\": \"text\",\n+                                \"Name\": \"ic\"\n+                            }\n+                        ],\n+                        \"Host\": \"text\",\n+                        \"LoadAverage\": \"not-empty-array\",\n+                        \"Location\": {},\n+                        \"MemoryLimit\": \"not-zero-number-text\",\n+                        \"NodeId\": 50000,\n+                        \"NumberOfCpus\": \"not-zero-number\",\n+                        \"PoolStats\": [\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"System\",\n+                                \"Threads\": 2,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"User\",\n+                                \"Threads\": 3,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"Batch\",\n+                                \"Threads\": 2,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"IO\",\n+                                \"Threads\": 1,\n+                                \"Usage\": \"number\"\n+                            },\n+                            {\n+                                \"Limit\": \"not-zero-number\",\n+                                \"Name\": \"IC\",\n+                                \"Threads\": 1,\n+                                \"Usage\": \"number\"\n+                            }\n+                        ],\n+                        \"Roles\": \"not-empty-array\",\n+                        \"StartTime\": \"not-zero-number-text\",\n+                        \"SystemState\": \"Green\",\n+                        \"Tenants\": [\n+                            \"/Root/dedicated_db\"\n+                        ],\n+                        \"TotalSessions\": 0\n+                    },\n+                    \"UptimeSeconds\": \"number\"\n+                }\n+            ],\n+            \"TotalNodes\": \"3\"\n+        },\n+        \"response_group_by\": {\n+            \"FieldsAvailable\": \"0000000110111110111111100000111\",\n+            \"FieldsRequired\": \"0000000001000000010000000000101\",\n+            \"FoundNodes\": \"3\",\n+            \"MaximumDisksPerNode\": \"1\",\n+            \"NodeGroups\": [\n+                {\n+                    \"GroupName\": \"up <10m\",\n+                    \"NodeCount\": \"3\"\n+                }\n+            ],\n+            \"TotalNodes\": \"3\"\n+        }\n+    },\n     \"test.test_viewer_pdiskinfo\": {\n         \"PDiskStateInfo\": [\n             {\ndiff --git a/ydb/core/viewer/tests/test.py b/ydb/core/viewer/tests/test.py\nindex 8107183f21eb..cb30c55b7330 100644\n--- a/ydb/core/viewer/tests/test.py\n+++ b/ydb/core/viewer/tests/test.py\n@@ -431,9 +431,6 @@ def test_viewer_nodes():\n     result = get_viewer_db_normalized(\"/viewer/nodes\", {\n         'fields_required': 'all'\n     })\n-    for name in databases:\n-        for node in result[name]['Nodes']:\n-            node['SystemState']['Endpoints'].sort(key=lambda x: x['Name'])\n     return result\n \n \n@@ -445,8 +442,6 @@ def test_storage_groups():\n \n def test_viewer_sysinfo():\n     result = get_viewer_normalized(\"/viewer/sysinfo\")\n-    for node in result['SystemStateInfo']:\n-        node['Endpoints'].sort(key=lambda x: x['Name'])\n     return result\n \n \n@@ -560,3 +555,18 @@ def test_pqrb_tablet():\n                                           'PathId',\n                                           'SchemeShard'\n                                           ])\n+\n+\n+def test_viewer_nodes_issue_14992():\n+    response_group_by = get_viewer_normalized(\"/viewer/nodes\", {\n+        'group': 'Uptime'\n+    })\n+    response_group = get_viewer_normalized(\"/viewer/nodes\", {\n+        'filter_group_by': 'Uptime',\n+        'filter_group' : response_group_by['NodeGroups'][0]['GroupName'],\n+    })\n+    result = {\n+        'response_group_by': response_group_by,\n+        'response_group': response_group,\n+    }\n+    return result\n",
  "problem_statement": "[`viewer/nodes`]: empty nodes groups for disconnected nodes\nIf there is nodes with no `DisconnectTime`, their `UptimeSeconds` is calculated from 1970. They are counted in nodes groups, but are not displayed, when you request nodes with this group filter\n\n![Image](https://github.com/user-attachments/assets/5d70e3d3-8ff6-48a2-bd22-a2a55d70e7cd)\n\n![Image](https://github.com/user-attachments/assets/3b2b5a86-6c00-41ee-8c32-dd95415d6dfb)\n",
  "hints_text": "",
  "created_at": "2025-03-03T13:20:55Z",
  "modified_files": [
    "ydb/core/tablet/node_whiteboard.cpp",
    "ydb/core/viewer/viewer_nodes.h"
  ],
  "modified_test_files": [
    "ydb/core/viewer/tests/canondata/result.json",
    "ydb/core/viewer/tests/test.py"
  ]
}