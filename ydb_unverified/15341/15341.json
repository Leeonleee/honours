{
  "repo": "ydb-platform/ydb",
  "pull_number": 15341,
  "instance_id": "ydb-platform__ydb-15341",
  "issue_numbers": [
    "14827"
  ],
  "base_commit": "b0f93181472ba7233bb35dacad86733845ab5dbb",
  "patch": "diff --git a/ydb/core/viewer/json_handlers_viewer.cpp b/ydb/core/viewer/json_handlers_viewer.cpp\nindex aa39185ef068..b53294538da1 100644\n--- a/ydb/core/viewer/json_handlers_viewer.cpp\n+++ b/ydb/core/viewer/json_handlers_viewer.cpp\n@@ -246,7 +246,7 @@ void InitViewerHealthCheckJsonHandler(TJsonHandlers& handlers) {\n }\n \n void InitViewerNodesJsonHandler(TJsonHandlers& handlers) {\n-    handlers.AddHandler(\"/viewer/nodes\", new TJsonHandler<TJsonNodes>(TJsonNodes::GetSwagger()), 14);\n+    handlers.AddHandler(\"/viewer/nodes\", new TJsonHandler<TJsonNodes>(TJsonNodes::GetSwagger()), 15);\n }\n \n void InitViewerACLJsonHandler(TJsonHandlers &jsonHandlers) {\ndiff --git a/ydb/core/viewer/protos/viewer.proto b/ydb/core/viewer/protos/viewer.proto\nindex dff4b2d4cbc2..e878aa227bd0 100644\n--- a/ydb/core/viewer/protos/viewer.proto\n+++ b/ydb/core/viewer/protos/viewer.proto\n@@ -561,6 +561,12 @@ message TNodeInfo {\n     repeated NKikimrWhiteboard.TNodeStateInfo ReversePeers = 55;\n }\n \n+message TNodeBatch {\n+    repeated uint32 NodesToAskFor = 1;\n+    repeated uint32 NodesToAskAbout = 2;\n+    optional bool HasStaticNodes = 3;\n+}\n+\n message TNodesInfo {\n     uint32 Version = 1;\n     optional uint64 TotalNodes = 2;\n@@ -578,6 +584,7 @@ message TNodesInfo {\n     optional uint64 MaximumSlotsPerDisk = 51;\n     optional bool NoDC = 60;\n     optional bool NoRack = 61;\n+    repeated TNodeBatch OriginalNodeBatches = 62;\n }\n \n enum ENodeType {\ndiff --git a/ydb/core/viewer/viewer_nodes.h b/ydb/core/viewer/viewer_nodes.h\nindex afb35a9ec61e..affed74cddd7 100644\n--- a/ydb/core/viewer/viewer_nodes.h\n+++ b/ydb/core/viewer/viewer_nodes.h\n@@ -181,6 +181,7 @@ class TJsonNodes : public TViewerPipeClient {\n     ui32 SpaceUsageProblem = 90; // %\n     bool OffloadMerge = true;\n     size_t OffloadMergeAttempts = 2;\n+    size_t OffloadMergeBatchSize = 200;\n \n     using TGroupSortKey = std::variant<TString, ui64, float, int>;\n \n@@ -748,6 +749,8 @@ class TJsonNodes : public TViewerPipeClient {\n     std::vector<TNodeGroup> NodeGroups;\n     std::unordered_map<TNodeId, TNode*> NodesByNodeId;\n     std::unordered_map<TNodeId, TNodeBatch> NodeBatches;\n+    std::vector<TNodeBatch> OriginalNodeBatches;\n+    bool DumpOriginalNodeBatches = false;\n \n     TFieldsType FieldsRequired;\n     TFieldsType FieldsAvailable;\n@@ -953,8 +956,10 @@ class TJsonNodes : public TViewerPipeClient {\n             }\n         }\n \n-        OffloadMerge = FromStringWithDefault<bool>(params.Get(\"offload_merge\"), OffloadMerge);\n-        OffloadMergeAttempts = FromStringWithDefault<bool>(params.Get(\"offload_merge_attempts\"), OffloadMergeAttempts);\n+        OffloadMerge = FromStringWithDefault(params.Get(\"offload_merge\"), OffloadMerge);\n+        OffloadMergeAttempts = FromStringWithDefault(params.Get(\"offload_merge_attempts\"), OffloadMergeAttempts);\n+        OffloadMergeBatchSize = FromStringWithDefault(params.Get(\"offload_merge_batch_size\"), OffloadMergeBatchSize);\n+        DumpOriginalNodeBatches = FromStringWithDefault(params.Get(\"dump_original_node_batches\"), DumpOriginalNodeBatches);\n         Direct = FromStringWithDefault<bool>(params.Get(\"direct\"), Direct);\n         TString filterStoragePool = params.Get(\"pool\");\n         if (filterStoragePool.empty()) {\n@@ -1078,6 +1083,9 @@ class TJsonNodes : public TViewerPipeClient {\n             request->Record.AddFieldsRequired(-1);\n             NodeStateResponse = MakeWhiteboardRequest(TActivationContext::ActorSystem()->NodeId, request.release());\n         }\n+        if (!FilterDatabase && OffloadMerge && FieldsNeeded(FieldsSystemState)) {\n+            FieldsRequired.set(+ENodeFields::SubDomainKey);\n+        }\n         if (!FilterStoragePools.empty() || !FilterGroupIds.empty()) {\n             FilterDatabase = false; // we disable database filter if we're filtering by pool or group\n         }\n@@ -1571,8 +1579,6 @@ class TJsonNodes : public TViewerPipeClient {\n         ApplyLimit();\n     }\n \n-    static constexpr size_t BATCH_SIZE = 200;\n-\n     void BuildCandidates(TNodeBatch& batch, std::vector<TNode*>& candidates) {\n         auto itCandidate = candidates.begin();\n         for (; itCandidate != candidates.end() && batch.NodesToAskFor.size() < OffloadMergeAttempts; ++itCandidate) {\n@@ -1591,9 +1597,9 @@ class TJsonNodes : public TViewerPipeClient {\n         std::sort(candidates.begin(), candidates.end(), [](TNode* a, TNode* b) {\n             return a->GetCandidateScore() > b->GetCandidateScore();\n         });\n-        while (nodeBatch.NodesToAskAbout.size() > BATCH_SIZE) {\n+        while (nodeBatch.NodesToAskAbout.size() > OffloadMergeBatchSize) {\n             TNodeBatch newBatch;\n-            size_t splitSize = std::min(BATCH_SIZE, nodeBatch.NodesToAskAbout.size() / 2);\n+            size_t splitSize = std::min(OffloadMergeBatchSize, nodeBatch.NodesToAskAbout.size() / 2);\n             newBatch.NodesToAskAbout.reserve(splitSize);\n             for (size_t i = 0; i < splitSize; ++i) {\n                 newBatch.NodesToAskAbout.push_back(nodeBatch.NodesToAskAbout.back());\n@@ -2105,6 +2111,9 @@ class TJsonNodes : public TViewerPipeClient {\n                 FieldsRequired.set(+ENodeFields::SystemState);\n             }\n             std::vector<TNodeBatch> batches = BatchNodes(NodeView);\n+            if (DumpOriginalNodeBatches) {\n+                OriginalNodeBatches = batches;\n+            }\n             if (FilterPeerRole == EPeerRole::Static || FilterPeerRole == EPeerRole::Other) {\n                 for (TNodeBatch& batch : batches) {\n                     batch.FieldsRequested.set(+ENodeFields::Peers);\n@@ -3101,6 +3110,16 @@ class TJsonNodes : public TViewerPipeClient {\n         AddEvent(\"ReplyAndPassAway\");\n         ApplyEverything();\n         NKikimrViewer::TNodesInfo json;\n+        for (const auto& batch : OriginalNodeBatches) {\n+            auto* jsonBatch = json.AddOriginalNodeBatches();\n+            for (const auto& node : batch.NodesToAskFor) {\n+                jsonBatch->AddNodesToAskFor(node->GetNodeId());\n+            }\n+            for (const auto& node : batch.NodesToAskAbout) {\n+                jsonBatch->AddNodesToAskAbout(node->GetNodeId());\n+            }\n+            jsonBatch->SetHasStaticNodes(batch.HasStaticNodes);\n+        }\n         json.SetVersion(Viewer->GetCapabilityVersion(\"/viewer/nodes\"));\n         json.SetFieldsAvailable(FieldsAvailable.to_string());\n         json.SetFieldsRequired(FieldsRequired.to_string());\n",
  "test_patch": "diff --git a/ydb/core/viewer/tests/canondata/result.json b/ydb/core/viewer/tests/canondata/result.json\nindex f0859e110725..2a5258215a77 100644\n--- a/ydb/core/viewer/tests/canondata/result.json\n+++ b/ydb/core/viewer/tests/canondata/result.json\n@@ -2975,7 +2975,7 @@\n     \"test.test_viewer_nodes_issue_14992\": {\n         \"response_group\": {\n             \"FieldsAvailable\": \"0000000110111110111111100000111\",\n-            \"FieldsRequired\": \"0000000001000000010000000000101\",\n+            \"FieldsRequired\": \"0000000001100000010000000000101\",\n             \"FoundNodes\": \"3\",\n             \"MaximumDisksPerNode\": \"1\",\n             \"Nodes\": [\n@@ -3196,7 +3196,7 @@\n         },\n         \"response_group_by\": {\n             \"FieldsAvailable\": \"0000000110111110111111100000111\",\n-            \"FieldsRequired\": \"0000000001000000010000000000101\",\n+            \"FieldsRequired\": \"0000000001100000010000000000101\",\n             \"FoundNodes\": \"3\",\n             \"MaximumDisksPerNode\": \"1\",\n             \"NodeGroups\": [\n",
  "problem_statement": "unstable version numbers in /viewer/nodes handler\n![Image](https://github.com/user-attachments/assets/b0202c2c-b0f9-4b44-aaea-967cc5b8162c)\n\n![Image](https://github.com/user-attachments/assets/c2c5864d-392f-4bb6-be25-4010ebf32766)\n\n![Image](https://github.com/user-attachments/assets/a623983e-b06b-43c7-83b0-a585b74adc6d)\n",
  "hints_text": "trace: https://nda.ya.ru/t/enGZYcu37C8rVL\nit seems that adding SubDomainKey to fields_required helps better organize request batches and somehow solves the problem.",
  "created_at": "2025-03-05T05:18:50Z"
}