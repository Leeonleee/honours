{
  "repo": "ydb-platform/ydb",
  "pull_number": 16161,
  "instance_id": "ydb-platform__ydb-16161",
  "issue_numbers": [
    "14183"
  ],
  "base_commit": "7fb1600dfe816714720b22cab61d7477edeb2b05",
  "patch": "diff --git a/ydb/core/viewer/json_local_rpc.h b/ydb/core/viewer/json_local_rpc.h\nindex 59c25ef62f64..7da7a195a77d 100644\n--- a/ydb/core/viewer/json_local_rpc.h\n+++ b/ydb/core/viewer/json_local_rpc.h\n@@ -130,8 +130,7 @@ class TJsonLocalRpc : public TViewerPipeClient {\n                 return false;\n             }\n         }\n-        const auto& params(Event->Get()->Request.GetParams());\n-        Params2Proto(params, request);\n+        Params2Proto(Params, request);\n         if (!ValidateRequest(request)) {\n             return false;\n         }\ndiff --git a/ydb/core/viewer/operation_list.h b/ydb/core/viewer/operation_list.h\nindex 201cc21b3150..a84ce33acd90 100644\n--- a/ydb/core/viewer/operation_list.h\n+++ b/ydb/core/viewer/operation_list.h\n@@ -23,6 +23,27 @@ class TOperationList : public TOperationListRpc {\n         AllowedMethods = {HTTP_METHOD_GET};\n     }\n \n+    bool ValidateRequest(Ydb::Operations::ListOperationsRequest& request) override {\n+        if (!TBase::ValidateRequest(request)) {\n+            return false;\n+        }\n+        ui64 offset = FromStringWithDefault<ui64>(Params.Get(\"offset\"), 0);\n+        ui64 limit = FromStringWithDefault<ui64>(Params.Get(\"limit\"), 0);\n+        if (offset >= 0 && limit > 0) {\n+            if (offset % limit != 0) {\n+                ReplyAndPassAway(GetHTTPBADREQUEST(\"text/plain\", \"offset must be a multiple of limit\"));\n+                return false;\n+            }\n+            if (limit > 100) {\n+                ReplyAndPassAway(GetHTTPBADREQUEST(\"text/plain\", \"limit must be less than or equal to 100\"));\n+                return false;\n+            }\n+            request.set_page_size(limit);\n+            request.set_page_token(std::to_string(offset / limit + 1));\n+        }\n+        return true;\n+    }\n+\n     static YAML::Node GetSwagger() {\n         YAML::Node node = YAML::Load(R\"___(\n             get:\n@@ -42,7 +63,8 @@ class TOperationList : public TOperationListRpc {\n                         kind:\n                           * `ss/backgrounds`\n                           * `export`\n-                          * `import`\n+                          * `import/S3`\n+                          * `import/YT`\n                           * `buildindex`\n                           * `scriptexec`\n                     required: true\n@@ -57,6 +79,16 @@ class TOperationList : public TOperationListRpc {\n                     description: page token\n                     required: false\n                     type: string\n+                  - name: offset\n+                    in: query\n+                    description: offset. must be a multiple of limit\n+                    required: false\n+                    type: integer\n+                  - name: limit\n+                    in: query\n+                    description: limit. must be less than or equal to 100\n+                    required: false\n+                    type: integer\n                 responses:\n                     200:\n                         description: OK\n",
  "test_patch": "diff --git a/ydb/core/viewer/tests/canondata/result.json b/ydb/core/viewer/tests/canondata/result.json\nindex e04934d68e3f..b2bab0a640d7 100644\n--- a/ydb/core/viewer/tests/canondata/result.json\n+++ b/ydb/core/viewer/tests/canondata/result.json\n@@ -3,6 +3,18 @@\n         \"status_code\": 200,\n         \"text\": \"1\\n\"\n     },\n+    \"test.test_operations_list\": {\n+        \"next_page_token\": \"1\",\n+        \"status\": \"SUCCESS\"\n+    },\n+    \"test.test_operations_list_page\": {\n+        \"next_page_token\": \"1\",\n+        \"status\": \"SUCCESS\"\n+    },\n+    \"test.test_operations_list_page_bad\": {\n+        \"status_code\": 400,\n+        \"text\": \"offset must be a multiple of limit\"\n+    },\n     \"test.test_pqrb_tablet\": {\n         \"response_create_topic\": {\n             \"version\": \"not-zero-number\"\n@@ -506,6 +518,142 @@\n         ],\n         \"TotalGroups\": 5\n     },\n+    \"test.test_topic_data\": {\n+        \"response_compressed\": {\n+            \"EndOffset\": 21,\n+            \"Messages\": [\n+                {\n+                    \"Codec\": 1,\n+                    \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTA=\",\n+                    \"Offset\": 11,\n+                    \"OriginalSize\": 20,\n+                    \"SeqNo\": 12,\n+                    \"StorageSize\": 38\n+                },\n+                {\n+                    \"Codec\": 1,\n+                    \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTE=\",\n+                    \"Offset\": 12,\n+                    \"OriginalSize\": 20,\n+                    \"SeqNo\": 13,\n+                    \"StorageSize\": 38\n+                },\n+                {\n+                    \"Codec\": 1,\n+                    \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTI=\",\n+                    \"Offset\": 13,\n+                    \"OriginalSize\": 20,\n+                    \"SeqNo\": 14,\n+                    \"StorageSize\": 38\n+                },\n+                {\n+                    \"Codec\": 1,\n+                    \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTM=\",\n+                    \"Offset\": 14,\n+                    \"OriginalSize\": 20,\n+                    \"SeqNo\": 15,\n+                    \"StorageSize\": 38\n+                },\n+                {\n+                    \"Codec\": 1,\n+                    \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTQ=\",\n+                    \"Offset\": 15,\n+                    \"OriginalSize\": 20,\n+                    \"SeqNo\": 16,\n+                    \"StorageSize\": 38\n+                }\n+            ],\n+            \"StartOffset\": 0,\n+            \"Truncated\": true\n+        },\n+        \"response_metadata\": {\n+            \"EndOffset\": 21,\n+            \"Messages\": [\n+                {\n+                    \"Codec\": 1,\n+                    \"Message\": \"bWVzc2FnZV93aXRoX21ldGE=\",\n+                    \"MessageMetadata\": [\n+                        {\n+                            \"Key\": \"key1\",\n+                            \"Value\": \"value1\"\n+                        },\n+                        {\n+                            \"Key\": \"key2\",\n+                            \"Value\": \"value2\"\n+                        }\n+                    ],\n+                    \"Offset\": 10,\n+                    \"OriginalSize\": 17,\n+                    \"SeqNo\": 11,\n+                    \"StorageSize\": 37\n+                }\n+            ],\n+            \"StartOffset\": 0,\n+            \"Truncated\": true\n+        },\n+        \"response_not_truncated\": {\n+            \"EndOffset\": 21,\n+            \"Messages\": [\n+                {\n+                    \"Codec\": 1,\n+                    \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTk=\",\n+                    \"Offset\": 20,\n+                    \"OriginalSize\": 20,\n+                    \"SeqNo\": 21,\n+                    \"StorageSize\": 38\n+                }\n+            ],\n+            \"StartOffset\": 0,\n+            \"Truncated\": false\n+        },\n+        \"response_read\": {\n+            \"EndOffset\": 21,\n+            \"Messages\": [\n+                {\n+                    \"Codec\": 0,\n+                    \"Message\": \"bWVzc2FnZS0w\",\n+                    \"Offset\": 0,\n+                    \"OriginalSize\": 9,\n+                    \"SeqNo\": 1,\n+                    \"StorageSize\": 9\n+                },\n+                {\n+                    \"Codec\": 0,\n+                    \"Message\": \"bWVzc2FnZS0x\",\n+                    \"Offset\": 1,\n+                    \"OriginalSize\": 9,\n+                    \"SeqNo\": 2,\n+                    \"StorageSize\": 9\n+                },\n+                {\n+                    \"Codec\": 0,\n+                    \"Message\": \"bWVzc2FnZS0y\",\n+                    \"Offset\": 2,\n+                    \"OriginalSize\": 9,\n+                    \"SeqNo\": 3,\n+                    \"StorageSize\": 9\n+                },\n+                {\n+                    \"Codec\": 0,\n+                    \"Message\": \"bWVzc2FnZS0z\",\n+                    \"Offset\": 3,\n+                    \"OriginalSize\": 9,\n+                    \"SeqNo\": 4,\n+                    \"StorageSize\": 9\n+                },\n+                {\n+                    \"Codec\": 0,\n+                    \"Message\": \"bWVzc2FnZS00\",\n+                    \"Offset\": 4,\n+                    \"OriginalSize\": 9,\n+                    \"SeqNo\": 5,\n+                    \"StorageSize\": 9\n+                }\n+            ],\n+            \"StartOffset\": 0,\n+            \"Truncated\": true\n+        }\n+    },\n     \"test.test_viewer_acl\": {\n         \"/Root\": {\n             \"Common\": {\n@@ -4943,75 +5091,5 @@\n     },\n     \"test.test_wait_for_cluster_ready\": {\n         \"wait_good\": true\n-    },\n-    \"test.test_topic_data\": {\n-        \"response_read\": {\n-            \"Messages\": [\n-                {\n-                    \"Codec\": 0, \"StorageSize\": 9, \"SeqNo\": 1, \"Message\": \"bWVzc2FnZS0w\", \"OriginalSize\": 9, \"Offset\": 0\n-                },\n-                {\n-                    \"Codec\": 0, \"StorageSize\": 9, \"SeqNo\": 2, \"Message\": \"bWVzc2FnZS0x\", \"OriginalSize\": 9, \"Offset\": 1\n-                },\n-                {\n-                    \"Codec\": 0, \"StorageSize\": 9, \"SeqNo\": 3, \"Message\": \"bWVzc2FnZS0y\", \"OriginalSize\": 9, \"Offset\": 2\n-                },\n-                {\n-                    \"Codec\": 0, \"StorageSize\": 9, \"SeqNo\": 4, \"Message\": \"bWVzc2FnZS0z\", \"OriginalSize\": 9, \"Offset\": 3\n-                },\n-                {\n-                    \"Codec\": 0, \"StorageSize\": 9, \"SeqNo\": 5, \"Message\": \"bWVzc2FnZS00\", \"OriginalSize\": 9, \"Offset\": 4\n-                }\n-            ],\n-            \"StartOffset\": 0,\n-            \"EndOffset\": 21,\n-            \"Truncated\": true\n-        },\n-        \"response_metadata\": {\n-            \"Messages\": [\n-                {\n-                    \"Codec\": 1, \"StorageSize\": 37, \"SeqNo\": 11,\n-                    \"MessageMetadata\": [\n-                        {\"Value\": \"value1\", \"Key\": \"key1\"},\n-                        {\"Value\": \"value2\", \"Key\": \"key2\"}],\n-                    \"Message\": \"bWVzc2FnZV93aXRoX21ldGE=\", \"OriginalSize\": 17, \"Offset\": 10\n-                }\n-            ],\n-            \"StartOffset\": 0,\n-            \"EndOffset\": 21,\n-            \"Truncated\": true\n-        },\n-        \"response_compressed\": {\n-            \"Messages\": [\n-                {\n-                    \"Codec\": 1, \"StorageSize\": 38, \"SeqNo\": 12, \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTA=\", \"OriginalSize\": 20, \"Offset\": 11\n-                },\n-                {\n-                    \"Codec\": 1, \"StorageSize\": 38, \"SeqNo\": 13, \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTE=\", \"OriginalSize\": 20, \"Offset\": 12\n-                },\n-                {\n-                    \"Codec\": 1, \"StorageSize\": 38, \"SeqNo\": 14, \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTI=\", \"OriginalSize\": 20, \"Offset\": 13\n-                },\n-                {\n-                    \"Codec\": 1, \"StorageSize\": 38, \"SeqNo\": 15, \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTM=\", \"OriginalSize\": 20, \"Offset\": 14\n-                },\n-                {\n-                    \"Codec\": 1, \"StorageSize\": 38, \"SeqNo\": 16, \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTQ=\", \"OriginalSize\": 20, \"Offset\": 15\n-                }\n-            ],\n-            \"StartOffset\": 0,\n-            \"EndOffset\": 21,\n-            \"Truncated\": true\n-        },\n-        \"response_not_truncated\": {\n-            \"Messages\": [\n-                {\n-                    \"Codec\": 1, \"StorageSize\": 38, \"SeqNo\": 21, \"Message\": \"Y29tcHJlc3NlZC1tZXNzYWdlLTk=\",  \"OriginalSize\": 20, \"Offset\": 20\n-                }\n-            ],\n-            \"StartOffset\": 0,\n-            \"EndOffset\": 21,\n-            \"Truncated\": false\n-        }\n     }\n }\ndiff --git a/ydb/core/viewer/tests/test.py b/ydb/core/viewer/tests/test.py\nindex 761802164e4e..6eb849b74ec0 100644\n--- a/ydb/core/viewer/tests/test.py\n+++ b/ydb/core/viewer/tests/test.py\n@@ -577,6 +577,31 @@ def test_viewer_nodes_issue_14992():\n     return result\n \n \n+def test_operations_list():\n+    return get_viewer_normalized(\"/operation/list\", {\n+        'database': dedicated_db,\n+        'kind': 'import/s3'\n+    })\n+\n+\n+def test_operations_list_page():\n+    return get_viewer_normalized(\"/operation/list\", {\n+        'database': dedicated_db,\n+        'kind': 'import/s3',\n+        'offset': 50,\n+        'limit': 50\n+    })\n+\n+\n+def test_operations_list_page_bad():\n+    return get_viewer_normalized(\"/operation/list\", {\n+        'database': dedicated_db,\n+        'kind': 'import/s3',\n+        'offset': 10,\n+        'limit': 50\n+    })\n+\n+\n def test_topic_data():\n     grpc_port = cluster.nodes[1].grpc_port\n \n",
  "problem_statement": "implement paging in operation-list handler\n\n",
  "hints_text": "",
  "created_at": "2025-03-24T15:21:28Z",
  "modified_files": [
    "ydb/core/viewer/json_local_rpc.h",
    "ydb/core/viewer/operation_list.h"
  ],
  "modified_test_files": [
    "ydb/core/viewer/tests/canondata/result.json",
    "ydb/core/viewer/tests/test.py"
  ]
}