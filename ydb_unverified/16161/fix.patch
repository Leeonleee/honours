diff --git a/ydb/core/viewer/json_local_rpc.h b/ydb/core/viewer/json_local_rpc.h
index 59c25ef62f64..7da7a195a77d 100644
--- a/ydb/core/viewer/json_local_rpc.h
+++ b/ydb/core/viewer/json_local_rpc.h
@@ -130,8 +130,7 @@ class TJsonLocalRpc : public TViewerPipeClient {
                 return false;
             }
         }
-        const auto& params(Event->Get()->Request.GetParams());
-        Params2Proto(params, request);
+        Params2Proto(Params, request);
         if (!ValidateRequest(request)) {
             return false;
         }
diff --git a/ydb/core/viewer/operation_list.h b/ydb/core/viewer/operation_list.h
index 201cc21b3150..a84ce33acd90 100644
--- a/ydb/core/viewer/operation_list.h
+++ b/ydb/core/viewer/operation_list.h
@@ -23,6 +23,27 @@ class TOperationList : public TOperationListRpc {
         AllowedMethods = {HTTP_METHOD_GET};
     }
 
+    bool ValidateRequest(Ydb::Operations::ListOperationsRequest& request) override {
+        if (!TBase::ValidateRequest(request)) {
+            return false;
+        }
+        ui64 offset = FromStringWithDefault<ui64>(Params.Get("offset"), 0);
+        ui64 limit = FromStringWithDefault<ui64>(Params.Get("limit"), 0);
+        if (offset >= 0 && limit > 0) {
+            if (offset % limit != 0) {
+                ReplyAndPassAway(GetHTTPBADREQUEST("text/plain", "offset must be a multiple of limit"));
+                return false;
+            }
+            if (limit > 100) {
+                ReplyAndPassAway(GetHTTPBADREQUEST("text/plain", "limit must be less than or equal to 100"));
+                return false;
+            }
+            request.set_page_size(limit);
+            request.set_page_token(std::to_string(offset / limit + 1));
+        }
+        return true;
+    }
+
     static YAML::Node GetSwagger() {
         YAML::Node node = YAML::Load(R"___(
             get:
@@ -42,7 +63,8 @@ class TOperationList : public TOperationListRpc {
                         kind:
                           * `ss/backgrounds`
                           * `export`
-                          * `import`
+                          * `import/S3`
+                          * `import/YT`
                           * `buildindex`
                           * `scriptexec`
                     required: true
@@ -57,6 +79,16 @@ class TOperationList : public TOperationListRpc {
                     description: page token
                     required: false
                     type: string
+                  - name: offset
+                    in: query
+                    description: offset. must be a multiple of limit
+                    required: false
+                    type: integer
+                  - name: limit
+                    in: query
+                    description: limit. must be less than or equal to 100
+                    required: false
+                    type: integer
                 responses:
                     200:
                         description: OK
