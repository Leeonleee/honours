{
  "repo": "ydb-platform/ydb",
  "pull_number": 9817,
  "instance_id": "ydb-platform__ydb-9817",
  "issue_numbers": [
    "2582"
  ],
  "base_commit": "7d208c76420539a7e44f2393c66e7d0444744517",
  "patch": "diff --git a/build/conf/a.yaml b/build/conf/a.yaml\nindex e15f1892c69d..cde8d7dc68e6 100644\n--- a/build/conf/a.yaml\n+++ b/build/conf/a.yaml\n@@ -7,7 +7,7 @@ arcanum:\n         requirements:\n           - system: arcanum\n             type: merge_time_fits\n-            alias: Merge time intervals (YMAKE-1194)\n+            alias: Merge is forbidden from 11:00 to 20:00 MSK (YMAKE-1194)\n             data:\n                 merge_intervals_utc:\n                   # 20:00..11:00 MSK\ndiff --git a/build/conf/go.conf b/build/conf/go.conf\nindex c75e3ec324ea..23dc650cb531 100644\n--- a/build/conf/go.conf\n+++ b/build/conf/go.conf\n@@ -816,6 +816,7 @@ module GO_LIBRARY: _GO_BASE_UNIT {\n     SET(MODULE_TYPE LIBRARY)\n     SET(PEERDIR_TAGS GO GO_PROTO GO_FBS __EMPTY__ RESOURCE_LIB PACKAGE_UNION)\n \n+    _MAKEFILE_INCLUDE_LIKE_DEPS+=.yo.snapshot.json\n     MODULE_SUFFIX=.a\n }\n \ndiff --git a/build/conf/java.conf b/build/conf/java.conf\nindex ed38d79a3125..7b9e2f93d893 100644\n--- a/build/conf/java.conf\n+++ b/build/conf/java.conf\n@@ -472,7 +472,7 @@ when($JDK_VERSION == \"8\") {\n }\n \n # tag:java-specific\n-JDK_LATEST_VERSION=22\n+JDK_LATEST_VERSION=23\n JDK_LATEST_PEERDIR=build/platform/java/jdk/jdk${JDK_LATEST_VERSION}\n \n # tag:java-specific\n@@ -1074,6 +1074,13 @@ module JAR_LIBRARY: _COMPILABLE_JAR_BASE {\n         when($WITH_KOTLINC_PLUGIN_SERIALIZATION) {\n             KOTLINC_OPTS_VALUE+=-Xplugin=${KOTLIN_COMPILER_RESOURCE_GLOBAL}/plugins/kotlin-serialization-plugin.jar\n         }\n+        when($WITH_KOTLINC_PLUGIN_DETEKT) {\n+            KOTLINC_OPTS_VALUE+=-Xplugin=${tool:\"devtools/detekt-compiler-plugin\"}\n+            KOTLINC_OPTS_VALUE+=-P plugin:detekt-compiler-plugin:report=xml:${BINDIR}/misc/detekt-report.xml\n+            # If there are no kt sources, the report won't be generated, however the file must be always present.\n+            ALL_KT_COMMANDS+=&& $YMAKE_PYTHON ${input:\"build/scripts/touch.py\"} ${BINDIR}/misc/detekt-report.xml\n+            ALL_KT_COMMANDS+=&& $FS_TOOLS copy ${BINDIR}/misc/detekt-report.xml ${output;noauto:\"detekt-report.xml\"}\n+        }\n         # Must be in sync with KT_CLASSES_DIR!\n         # There are problems in JDK13 with abs paths in classpath baked into jar file manifest. Using relative path\n         # here assumes that jar file with classpath for javac located in the $ARCADIA_BUILD_ROOT\n@@ -1147,6 +1154,11 @@ module JAR_LIBRARY: _COMPILABLE_JAR_BASE {\n         JAVAC_OPTS+=$ERROR_PRONE_JDK16PLUS_ADD_OPENS\n     }\n \n+    when($ERROR_PRONE_VALUE && $JDK_REAL_VERSION == \"23\") {\n+        JAVAC_FLAGS_VALUE+=$ERROR_PRONE_JDK16PLUS_ADD_OPENS\n+        JAVAC_OPTS+=$ERROR_PRONE_JDK16PLUS_ADD_OPENS\n+    }\n+\n     when($ERROR_PRONE_VALUE && $ERROR_PRONE_VERSION == \"2.7.1\") {\n         JAVAC_FLAGS_VALUE+=$ERROR_PRONE_2_7_1_FORCED_OPTS\n         JAVAC_OPTS+=$ERROR_PRONE_2_7_1_FORCED_OPTS\n@@ -1165,6 +1177,7 @@ module JAR_LIBRARY: _COMPILABLE_JAR_BASE {\n     ENABLE(YMAKE_JAVA_TEST)\n     _ADD_KOTLIN_STYLE_CHECKS($(BUILD_ROOT)/$MODDIR/all-kt-sources.txt REQUIREMENTS cpu:2)\n     _ADD_JAVA_STYLE_CHECKS($(BUILD_ROOT)/$MODDIR/lint-java.srclst::$(SOURCE_ROOT))\n+    _ADD_DETEKT_REPORT_CHECK($(BUILD_ROOT)/$MODDIR/detekt-report.xml)\n     _ADD_CLASSPATH_CLASH_CHECK()\n     JAVA_MODULE()\n }\n@@ -1284,7 +1297,10 @@ JAVA_SWIG_DELIM=JAVA_SWIG_DELIM\n JDK_REAL_VERSION=\n JDK_VERSION=\n \n-when ($JDK_VERSION == \"22\") {\n+when ($JDK_VERSION == \"23\") {\n+    JDK_REAL_VERSION=23\n+}\n+elsewhen ($JDK_VERSION == \"22\") {\n     JDK_REAL_VERSION=22\n }\n elsewhen ($JDK_VERSION == \"21\") {\n@@ -1312,6 +1328,9 @@ when ($USE_SYSTEM_JDK) {\n     JDK_RESOURCE_PEERDIR=\n }\n otherwise {\n+    when ($JDK_REAL_VERSION == \"23\") {\n+        JDK_RESOURCE_PEERDIR=build/platform/java/jdk/jdk23 build/platform/java/jdk/jdk17\n+    }\n     when ($JDK_REAL_VERSION == \"22\") {\n         JDK_RESOURCE_PEERDIR=build/platform/java/jdk/jdk22 build/platform/java/jdk/jdk17\n     }\n@@ -1331,6 +1350,9 @@ otherwise {\n }\n \n # tag:java-specific\n+when ($JDK_REAL_VERSION == \"23\") {\n+    UBERJAR_RESOURCE_PEERDIR=build/platform/java/uberjar/uberjar23\n+}\n when ($JDK_REAL_VERSION == \"22\") {\n     UBERJAR_RESOURCE_PEERDIR=build/platform/java/uberjar/uberjar22\n }\n@@ -1353,6 +1375,9 @@ when ($USE_SYSTEM_JDK) {\n     JDK_RESOURCE=$USE_SYSTEM_JDK\n }\n otherwise {\n+    when ($JDK_REAL_VERSION == \"23\") {\n+        JDK_RESOURCE=$JDK23_RESOURCE_GLOBAL\n+    }\n     when ($JDK_REAL_VERSION == \"22\") {\n         JDK_RESOURCE=$JDK22_RESOURCE_GLOBAL\n     }\n@@ -1398,6 +1423,11 @@ when (!$USE_SYSTEM_ERROR_PRONE) {\n         ERROR_PRONE_PEERDIR=build/platform/java/error_prone/2.30.0\n         ERROR_PRONE_RESOURCE=$ERROR_PRONE_2_30_0_RESOURCE_GLOBAL\n     }\n+    elsewhen ($JDK_REAL_VERSION == \"23\") {\n+        ERROR_PRONE_VERSION=2.30.0\n+        ERROR_PRONE_PEERDIR=build/platform/java/error_prone/2.30.0\n+        ERROR_PRONE_RESOURCE=$ERROR_PRONE_2_30_0_RESOURCE_GLOBAL\n+    }\n     otherwise {\n         ERROR_PRONE_VERSION=2.7.1\n         ERROR_PRONE_PEERDIR=build/platform/java/error_prone\n@@ -1415,6 +1445,9 @@ when ($USE_SYSTEM_UBERJAR) {\n     UBERJAR_RESOURCE=$USE_SYSTEM_UBERJAR\n }\n otherwise {\n+    when ($JDK_REAL_VERSION == \"23\") {\n+        UBERJAR_RESOURCE=$UBERJAR23_RESOURCE_GLOBAL\n+    }\n     when ($JDK_REAL_VERSION == \"22\") {\n         UBERJAR_RESOURCE=$UBERJAR22_RESOURCE_GLOBAL\n     }\n@@ -1433,6 +1466,9 @@ otherwise {\n }\n \n # tag:java-specific\n+when ($JDK_REAL_VERSION == \"23\") {\n+    WITH_JDK_RESOURCE=$WITH_JDK23_RESOURCE_GLOBAL\n+}\n when ($JDK_REAL_VERSION == \"22\") {\n     WITH_JDK_RESOURCE=$WITH_JDK22_RESOURCE_GLOBAL\n }\n@@ -1937,12 +1973,26 @@ macro WITH_KOTLINC_SERIALIZATION() {\n     SET(_WITH_KOTLINC_PLUGIN_SERIALIZATION_SEM && with_kotlinc_plugin_serialization)\n }\n \n+# tag:kotlin-specific\n+WITH_KOTLINC_PLUGIN_DETEKT=\n+_WITH_KOTLINC_PLUGIN_DETEKT_SEM=\n+### @usage: WITH_KOTLINC_DETEKT(-flags)\n+###\n+### Enable detekt kotlin compiler plugin https://detekt.dev/docs/gettingstarted/compilerplugin/\n+macro WITH_KOTLINC_DETEKT(Options...) {\n+    SET_APPEND(KOTLINC_OPTS_VALUE ${pre=-P plugin\\:detekt-compiler-plugin\\::Options})\n+    SET(WITH_KOTLINC_PLUGIN_DETEKT yes)\n+    SET(_WITH_KOTLINC_PLUGIN_DETEKT_SEM && with_kotlinc_plugin_detekt)\n+}\n+\n+\n # tag:kotlin-specific\n ### Also search for _KAPT_OPTS and change version there\n _KOTLIN_VERSION=1.9.24\n KOTLIN_VERSION=1.9.24\n KOTLIN_BOM_FILE=${ARCADIA_ROOT}/contrib/java/org/jetbrains/kotlin/kotlin-bom/1.9.24/ya.dependency_management.inc\n GROOVY_VERSION=3.0.5\n+DETEKT_VERSION=1.23.7\n \n _KOTLIN_SEM= \\\n     ${_WITH_KOTLIN_SEM} \\\n@@ -1950,7 +2000,8 @@ _KOTLIN_SEM= \\\n     ${_WITH_KOTLINC_PLUGIN_ALLOPEN_SEM} \\\n     ${_WITH_KOTLINC_PLUGIN_LOMBOK_SEM} \\\n     ${_WITH_KOTLINC_PLUGIN_NOARG_SEM} \\\n-    ${_WITH_KOTLINC_PLUGIN_SERIALIZATION_SEM}\n+    ${_WITH_KOTLINC_PLUGIN_SERIALIZATION_SEM} \\\n+    ${_WITH_KOTLINC_PLUGIN_DETEKT_SEM}\n \n \n _JAVA_PROTO_GRPC_SEM=\n@@ -2083,6 +2134,11 @@ elsewhen ($JDK_REAL_VERSION == \"22\") {\n     # see also devtools/ya/jbuild/gen/actions/idea.py\n     KOTLIN_JVM_TARGET=21\n }\n+elsewhen ($JDK_REAL_VERSION == \"23\") {\n+    # remove when kotlin starts supporting jdk21 bytecode\n+    # see also devtools/ya/jbuild/gen/actions/idea.py\n+    KOTLIN_JVM_TARGET=21\n+}\n otherwise {\n     KOTLIN_JVM_TARGET=$JDK_REAL_VERSION\n }\ndiff --git a/build/conf/linkers/ld.conf b/build/conf/linkers/ld.conf\nindex eca74c3a7dc4..bab91a3ea34b 100644\n--- a/build/conf/linkers/ld.conf\n+++ b/build/conf/linkers/ld.conf\n@@ -141,9 +141,8 @@ when ($TIME_TRACE_GRANULARITY && $TIME_TRACE_GRANULARITY != \"\") {\n _LINKER_TIME_TRACE_FLAG=\n when (($TIME_TRACE == \"yes\" || $LINKER_TIME_TRACE == \"yes\") && $_DEFAULT_LINKER_ID == \"lld\") {\n     _LINKER_TIME_TRACE_FLAG=\\\n-        -Wl,--time-trace \\\n-        -Wl,--time-trace-granularity=$_LINKER_TIME_TRACE_GRANULARITY \\\n-        -Wl,--time-trace-file=${rootrel;output;pre=$MODULE_PREFIX;suf=$MODULE_SUFFIX.time_trace.json:REALPRJNAME}\n+        -Wl,--time-trace=${rootrel;output;pre=$MODULE_PREFIX;suf=$MODULE_SUFFIX.time_trace.json:REALPRJNAME} \\\n+        -Wl,--time-trace-granularity=$_LINKER_TIME_TRACE_GRANULARITY\n }\n \n _EXE_FLAGS=\\\ndiff --git a/build/conf/linkers/msvc_linker.conf b/build/conf/linkers/msvc_linker.conf\nindex b2cdfa4cb71e..7bba3060ad78 100644\n--- a/build/conf/linkers/msvc_linker.conf\n+++ b/build/conf/linkers/msvc_linker.conf\n@@ -1,5 +1,5 @@\n-LINK_EXE_CMD=${_WINE_LINK_PREFIX} ${_MSVC_LINK_OLD}\n-LINK_LIB_CMD=${_WINE_LIB_PREFIX} ${_MSVC_LIB_OLD}\n+LINK_EXE_CMD=${_WINE_LINK_PREFIX} ${_MSVC_LINK}\n+LINK_LIB_CMD=${_WINE_LIB_PREFIX} ${_MSVC_LIB}\n \n _MSVC_ARCH=\n when ($ARCH_I386 == \"yes\" || $ARCH_I686 == \"yes\") {\n@@ -46,9 +46,9 @@ when (!$NO_DEBUGINFO || $NO_DEBUGINFO == \"no\" || $NO_DEBUGINFO == \"0\") {\n _FLAGS_COMMON_LIBPATHS=\n when ($IDE_MSVS != \"yes\") {\n     _FLAGS_COMMON_LIBPATHS=\\\n-        /LIBPATH:\\\"${quo:_MSVC_TC_KIT_LIBS}/um/$_MSVC_ARCH\\\" \\\n-        /LIBPATH:\\\"${quo:_MSVC_TC_KIT_LIBS}/ucrt/$_MSVC_ARCH\\\" \\\n-        /LIBPATH:\\\"${quo:_MSVC_TC_VC_ROOT}/lib/$_MSVC_ARCH\\\"\n+        /LIBPATH:\\\"\"${_MSVC_TC_KIT_LIBS}/um/$_MSVC_ARCH\"\\\" \\\n+        /LIBPATH:\\\"\"${_MSVC_TC_KIT_LIBS}/ucrt/$_MSVC_ARCH\"\\\" \\\n+        /LIBPATH:\\\"\"${_MSVC_TC_VC_ROOT}/lib/$_MSVC_ARCH\"\\\"\n }\n \n _FLAGS_COMMON =/NOLOGO /ERRORREPORT:PROMPT /SUBSYSTEM:CONSOLE /TLBID:1 $MSVC_DYNAMICBASE /NXCOMPAT\n@@ -107,7 +107,7 @@ OBJADDE_LIB_GLOBAL=\n \n LINK_EXE_FLAGS=$LINK_EXE_FLAGS_PER_TYPE\n LINK_EXE_VFS_FLAGS=\n-when ($_UNDER_WINE_LINK != \"yes\") {\n+when ($_UNDER_WINE_LINK != \"yes\" && $USE_MSVC_LINKER != \"yes\") {\n     LINK_EXE_VFS_FLAGS=/vfsoverlay:${BINDIR}/vfsoverlay.yaml\n }\n LINK_EXE_FLAGS+=${LINK_EXE_VFS_FLAGS}\n@@ -118,7 +118,7 @@ GENERATE_COMMON_LIB_VFS_CMD=\\\n     ${_FLAGS_COMMON_LIBPATHS}\n \n GENERATE_COMMON_LIB_VFS=\n-when ($_UNDER_WINE_LINK != \"yes\") {\n+when ($_UNDER_WINE_LINK != \"yes\" && $USE_MSVC_LINKER != \"yes\") {\n     GENERATE_COMMON_LIB_VFS=${GENERATE_COMMON_LIB_VFS_CMD}\n }\n \ndiff --git a/build/conf/python.conf b/build/conf/python.conf\nindex ec03c9bebfdb..eaa2c402c091 100644\n--- a/build/conf/python.conf\n+++ b/build/conf/python.conf\n@@ -179,9 +179,10 @@ macro NO_YMAKE_PYTHON3() {\n     SET(YMAKE_PYTHON3_PEERDIR)\n }\n \n+PYTHON_LINTERS_DEFAULT_CONFIGS=build/config/tests/py_style/default_configs.json\n+\n FLAKE_EXTRA_PARAMS=\n FLAKE_MIGRATIONS_CONFIG=\n-FLAKE_CONFIG_FILES=build/config/tests/flake8/flake8.conf $FLAKE_MIGRATIONS_CONFIG\n when ($DISABLE_FLAKE8_MIGRATIONS == \"yes\") {\n     FLAKE_EXTRA_PARAMS=\"DISABLE_FLAKE8_MIGRATIONS=yes\"\n }\n@@ -265,24 +266,38 @@ multimodule PY3_PROGRAM {\n     }\n }\n \n+# tag:python-specific tag:internal\n+### @usage: _ADD_PY_LINTER_CHECK(NAME name LINTER linter [DEPENDS deps] CONFIGS configs_file [GLOBAL_RESOURCES gr] [FILE_PROCESSING_TIME fpt] [EXTRA_PARAMS params] [PROJECT_TO_CONFIG_MAP pcm] [FLAKE_MIGRATIONS_CONFIG fmc] [CUSTOM_CONFIG cc])\n+###\n+### Triggers respective plugin\n+macro _ADD_PY_LINTER_CHECK(Args...) {\n+    SET_APPEND(_MAKEFILE_INCLUDE_LIKE_DEPS ${ARCADIA_ROOT}/${PYTHON_LINTERS_DEFAULT_CONFIGS})\n+}\n+\n+# tag:python-specific tag:internal\n+### @usage: STYLE_DUMMY()\n+###\n+### Not an actual linter, used for dummy linter demonstration\n+macro STYLE_DUMMY() {\n+    _ADD_PY_LINTER_CHECK(NAME dummy_linter LINTER tools/dummy_linter/dummy_linter CONFIGS $PYTHON_LINTERS_DEFAULT_CONFIGS)\n+}\n+\n # tag:python-specific tag:test\n ### @usage: STYLE_PYTHON([pyproject])\n ###\n ### Check python3 sources for style issues using black.\n-BLACK_CONFIG_FILES=\n macro STYLE_PYTHON(pyproject...) {\n-    BLACK_CONFIG_FILES=$pyproject build/config/tests/py_style/config.toml\n-    _ADD_PY_LINTER_CHECK(NAME black LINTER tools/black_linter/black_linter FILE_PROCESSING_TIME $BLACK_FILE_PROCESSING_TIME CONFIGS $BLACK_CONFIG_FILES)\n+    _ADD_PY_LINTER_CHECK(NAME black LINTER tools/black_linter/black_linter FILE_PROCESSING_TIME $BLACK_FILE_PROCESSING_TIME CONFIGS $PYTHON_LINTERS_DEFAULT_CONFIGS CUSTOM_CONFIG $pyproject)\n }\n \n # tag:python-specific tag:test\n ### @usage: STYLE_RUFF()\n ###\n ### Check python3 sources for style issues using ruff.\n-RUFF_CONFIG_PATHS_FILE=build/config/tests/ruff/ruff_config_paths.json\n+RUFF_PROJECT_TO_CONFIG_MAP=build/config/tests/ruff/ruff_config_paths.json\n macro STYLE_RUFF() {\n-    SET_APPEND(_MAKEFILE_INCLUDE_LIKE_DEPS ${ARCADIA_ROOT}/${RUFF_CONFIG_PATHS_FILE})\n-    _ADD_PY_LINTER_CHECK(NAME ruff LINTER tools/ruff_linter/bin/ruff_linter GLOBAL_RESOURCES build/external_resources/ruff CONFIGS $RUFF_CONFIG_PATHS_FILE)\n+    SET_APPEND(_MAKEFILE_INCLUDE_LIKE_DEPS ${ARCADIA_ROOT}/${RUFF_PROJECT_TO_CONFIG_MAP})\n+    _ADD_PY_LINTER_CHECK(NAME ruff LINTER tools/ruff_linter/bin/ruff_linter GLOBAL_RESOURCES build/external_resources/ruff CONFIGS $PYTHON_LINTERS_DEFAULT_CONFIGS PROJECT_TO_CONFIG_MAP $RUFF_PROJECT_TO_CONFIG_MAP)\n }\n \n # tag:python-specific tag:test\n@@ -290,7 +305,7 @@ macro STYLE_RUFF() {\n ###\n ### Check python3 sources for style issues using flake8.\n macro STYLE_FLAKE8() {\n-    _ADD_PY_LINTER_CHECK(NAME flake8 LINTER tools/flake8_linter/flake8_linter GLOBAL_RESOURCES build/external_resources/flake8_py3 FILE_PROCESSING_TIME $FLAKE8_FILE_PROCESSING_TIME CONFIGS $FLAKE_CONFIG_FILES EXTRA_PARAMS $FLAKE_EXTRA_PARAMS)\n+    _ADD_PY_LINTER_CHECK(NAME flake8 LINTER tools/flake8_linter/flake8_linter GLOBAL_RESOURCES build/external_resources/flake8_py3 FILE_PROCESSING_TIME $FLAKE8_FILE_PROCESSING_TIME CONFIGS $PYTHON_LINTERS_DEFAULT_CONFIGS FLAKE_MIGRATIONS_CONFIG $FLAKE_MIGRATIONS_CONFIG EXTRA_PARAMS $FLAKE_EXTRA_PARAMS)\n }\n \n # tag:python-specific tag:test\n@@ -298,7 +313,7 @@ macro STYLE_FLAKE8() {\n ###\n ### Check python3 sources for style issues using flake8.\n macro STYLE_PY2_FLAKE8() {\n-    _ADD_PY_LINTER_CHECK(NAME py2_flake8 LINTER tools/flake8_linter/flake8_linter GLOBAL_RESOURCES build/external_resources/flake8_py2 FILE_PROCESSING_TIME $FLAKE8_FILE_PROCESSING_TIME CONFIGS $FLAKE_CONFIG_FILES EXTRA_PARAMS $FLAKE_EXTRA_PARAMS)\n+    _ADD_PY_LINTER_CHECK(NAME py2_flake8 LINTER tools/flake8_linter/flake8_linter GLOBAL_RESOURCES build/external_resources/flake8_py2 FILE_PROCESSING_TIME $FLAKE8_FILE_PROCESSING_TIME CONFIGS $PYTHON_LINTERS_DEFAULT_CONFIGS FLAKE_MIGRATIONS_CONFIG $FLAKE_MIGRATIONS_CONFIG EXTRA_PARAMS $FLAKE_EXTRA_PARAMS)\n }\n \n # tag:python-specific tag:test\ndiff --git a/build/conf/settings.conf b/build/conf/settings.conf\nindex c77ca51561f9..880f89940c10 100644\n--- a/build/conf/settings.conf\n+++ b/build/conf/settings.conf\n@@ -14,14 +14,11 @@ FORCE_RESOLVE_MACRO_INCLS=yes\n ENABLE_RERESOLVE_FOR_GENERATED_FILES=yes\n REPORT_ALL_DUPSRC=yes\n DEPS_CACHE_CONTROL_UIDS_CACHE=yes\n-INCLUDE_BLACKLIST_TO_CONF_HASH=no\n-INCLUDE_ISOLATED_PROJECTS_TO_CONF_HASH=no\n-USE_GRAND_BYPASS=no\n USE_GLOBAL_CMD=yes\n YMAKE_USE_NEW_UIDS=yes\n-USE_GRAPH_CHANGES_PREDICTOR=yes\n PIC_NO_PIE=no\n FAIL_PY2=no\n+MAIN_OUTPUT_AS_EXTRA=no\n \n when ($YMAKE_USE_OLD_UIDS == \"yes\") {\n     YMAKE_USE_NEW_UIDS=no\n@@ -32,7 +29,6 @@ when ($OS_WINDOWS == \"yes\") {\n }\n \n when ($AUTOCHECK == \"yes\") {\n-    USE_GRAPH_CHANGES_PREDICTOR=no\n     PIC_NO_PIE=yes\n }\n \ndiff --git a/build/export_generators/cmake/cmake/conan-profiles/android.arm64.profile b/build/export_generators/cmake/cmake/conan-profiles/android.arm64.profile\nindex 6147d9922507..0f08282c7779 100644\n--- a/build/export_generators/cmake/cmake/conan-profiles/android.arm64.profile\n+++ b/build/export_generators/cmake/cmake/conan-profiles/android.arm64.profile\n@@ -11,5 +11,3 @@ os.api_level=21\n [tool_requires]\n android-ndk/r25\n [options]\n-[env]\n-\ndiff --git a/build/export_generators/cmake/cmake/conan-profiles/android.armv7.profile b/build/export_generators/cmake/cmake/conan-profiles/android.armv7.profile\nindex 57d8f55785d9..9419ed1ba8af 100644\n--- a/build/export_generators/cmake/cmake/conan-profiles/android.armv7.profile\n+++ b/build/export_generators/cmake/cmake/conan-profiles/android.armv7.profile\n@@ -11,5 +11,3 @@ os.api_level=21\n [tool_requires]\n android-ndk/r25\n [options]\n-[env]\n-\ndiff --git a/build/export_generators/cmake/cmake/conan-profiles/android.x86.profile b/build/export_generators/cmake/cmake/conan-profiles/android.x86.profile\nindex d8b73b992c28..101b70af7660 100644\n--- a/build/export_generators/cmake/cmake/conan-profiles/android.x86.profile\n+++ b/build/export_generators/cmake/cmake/conan-profiles/android.x86.profile\n@@ -11,5 +11,3 @@ os.api_level=21\n [tool_requires]\n android-ndk/r25\n [options]\n-[env]\n-\ndiff --git a/build/export_generators/cmake/cmake/conan-profiles/android.x86_64.profile b/build/export_generators/cmake/cmake/conan-profiles/android.x86_64.profile\nindex 50ad337afaee..7cb2b0c90790 100644\n--- a/build/export_generators/cmake/cmake/conan-profiles/android.x86_64.profile\n+++ b/build/export_generators/cmake/cmake/conan-profiles/android.x86_64.profile\n@@ -11,5 +11,3 @@ os.api_level=21\n [tool_requires]\n android-ndk/r25\n [options]\n-[env]\n-\ndiff --git a/build/export_generators/cmake/cmake/conan-profiles/linux.aarch64.profile b/build/export_generators/cmake/cmake/conan-profiles/linux.aarch64.profile\nindex 6945b1d777db..533bfbdd1ec5 100644\n--- a/build/export_generators/cmake/cmake/conan-profiles/linux.aarch64.profile\n+++ b/build/export_generators/cmake/cmake/conan-profiles/linux.aarch64.profile\n@@ -1,6 +1,6 @@\n-include(default)\n+{% set target_host = 'aarch64-linux-gnu' %}\n \n-target_host=aarch64-linux-gnu\n+include(default)\n \n [settings]\n arch=armv8\n@@ -12,17 +12,18 @@ compiler.cppstd=20\n os=Linux\n [options]\n \n-[env]\n-CONAN_CMAKE_FIND_ROOT_PATH=/usr/$target_host\n-CONAN_CMAKE_SYSROOT=/usr/$target_host\n-SYSROOT=/usr/$target_host\n-CC=$target_host-gcc\n-CXX=$target_host-g++\n-CXXFLAGS=\"-I/usr/$target_host/include/\"\n-CFLAGS=\"-I/usr/$target_host/include/\"\n-CHOST=$target_host\n-AR=$target_host-ar\n-AS=$target_host-as\n-RANLIB=$target_host-ranlib\n-LD=$target_host-ld\n-STRIP=$target_host-strip\n+[buildenv]\n+PATH=+(path)/usr/{{target_host}}/bin\n+CONAN_CMAKE_FIND_ROOT_PATH=/usr/{{target_host}}\n+CONAN_CMAKE_SYSROOT=/usr/{{target_host}}\n+SYSROOT=/usr/{{target_host}}\n+CC={{target_host}}-gcc\n+CXX={{target_host}}-g++\n+CXXFLAGS=-I/usr/{{target_host}}/include/\n+CFLAGS=-I/usr/{{target_host}}/include/\n+CHOST={{target_host}}\n+AR={{target_host}}-ar\n+AS={{target_host}}-as\n+RANLIB={{target_host}}-ranlib\n+LD={{target_host}}-ld\n+STRIP={{target_host}}-strip\ndiff --git a/build/export_generators/cmake/cmake/conan-profiles/linux.ppc64le.profile b/build/export_generators/cmake/cmake/conan-profiles/linux.ppc64le.profile\nindex 5ecd24d6cec8..e688123b0034 100644\n--- a/build/export_generators/cmake/cmake/conan-profiles/linux.ppc64le.profile\n+++ b/build/export_generators/cmake/cmake/conan-profiles/linux.ppc64le.profile\n@@ -1,6 +1,6 @@\n-include(default)\n+{% set target_host = 'powerpc64le-linux-gnu' %}\n \n-target_host=powerpc64le-linux-gnu\n+include(default)\n \n [settings]\n arch=ppc64le\n@@ -12,17 +12,18 @@ compiler.cppstd=20\n os=Linux\n [options]\n \n-[env]\n-CONAN_CMAKE_FIND_ROOT_PATH=/usr/$target_host\n-CONAN_CMAKE_SYSROOT=/usr/$target_host\n-SYSROOT=/usr/$target_host\n-CC=$target_host-gcc\n-CXX=$target_host-g++\n-CXXFLAGS=\"-I/usr/$target_host/include/\"\n-CFLAGS=\"-I/usr/$target_host/include/\"\n-CHOST=$target_host\n-AR=$target_host-ar\n-AS=$target_host-as\n-RANLIB=$target_host-ranlib\n-LD=$target_host-ld\n-STRIP=$target_host-strip\n+[buildenv]\n+PATH=+(path)/usr/{{target_host}}/bin\n+CONAN_CMAKE_FIND_ROOT_PATH=/usr/{{target_host}}\n+CONAN_CMAKE_SYSROOT=/usr/{{target_host}}\n+SYSROOT=/usr/{{target_host}}\n+CC={{target_host}}-gcc\n+CXX={{target_host}}-g++\n+CXXFLAGS=-I/usr/{{target_host}}/include/\n+CFLAGS=-I/usr/{{target_host}}/include/\n+CHOST={{target_host}}\n+AR={{target_host}}-ar\n+AS={{target_host}}-as\n+RANLIB={{target_host}}-ranlib\n+LD={{target_host}}-ld\n+STRIP={{target_host}}-strip\ndiff --git a/build/export_generators/cmake/cmake/conan-profiles/macos.arm64.profile b/build/export_generators/cmake/cmake/conan-profiles/macos.arm64.profile\nindex 52ba46ab977d..f215fd15929f 100644\n--- a/build/export_generators/cmake/cmake/conan-profiles/macos.arm64.profile\n+++ b/build/export_generators/cmake/cmake/conan-profiles/macos.arm64.profile\n@@ -8,4 +8,3 @@ compiler.version=14\n compiler.cppstd=20\n os=Macos\n [options]\n-[env]\ndiff --git a/build/export_generators/cmake/cmake/conan-profiles/macos.x86_64.profile b/build/export_generators/cmake/cmake/conan-profiles/macos.x86_64.profile\nindex 3370b885481f..a741d197e1bc 100644\n--- a/build/export_generators/cmake/cmake/conan-profiles/macos.x86_64.profile\n+++ b/build/export_generators/cmake/cmake/conan-profiles/macos.x86_64.profile\n@@ -8,4 +8,3 @@ compiler.version=14\n compiler.cppstd=20\n os=Macos\n [options]\n-[env]\ndiff --git a/build/external_resources/ymake/public.resources.json b/build/external_resources/ymake/public.resources.json\nindex a4331a44f90d..8e38b4a9ce4f 100644\n--- a/build/external_resources/ymake/public.resources.json\n+++ b/build/external_resources/ymake/public.resources.json\n@@ -1,19 +1,19 @@\n {\n     \"by_platform\": {\n         \"darwin\": {\n-            \"uri\": \"sbr:7095381929\"\n+            \"uri\": \"sbr:7129654082\"\n         },\n         \"darwin-arm64\": {\n-            \"uri\": \"sbr:7095381018\"\n+            \"uri\": \"sbr:7129653224\"\n         },\n         \"linux\": {\n-            \"uri\": \"sbr:7095384078\"\n+            \"uri\": \"sbr:7129655749\"\n         },\n         \"linux-aarch64\": {\n-            \"uri\": \"sbr:7095380204\"\n+            \"uri\": \"sbr:7129652122\"\n         },\n         \"win32-clang-cl\": {\n-            \"uri\": \"sbr:7095382771\"\n+            \"uri\": \"sbr:7129654809\"\n         }\n     }\n }\ndiff --git a/build/external_resources/ymake/resources.json b/build/external_resources/ymake/resources.json\nindex 4e758b6909c9..88af24512222 100644\n--- a/build/external_resources/ymake/resources.json\n+++ b/build/external_resources/ymake/resources.json\n@@ -1,19 +1,19 @@\n {\n     \"by_platform\": {\n         \"darwin\": {\n-            \"uri\": \"sbr:7095368415\"\n+            \"uri\": \"sbr:7129644338\"\n         },\n         \"darwin-arm64\": {\n-            \"uri\": \"sbr:7095367498\"\n+            \"uri\": \"sbr:7129644098\"\n         },\n         \"linux\": {\n-            \"uri\": \"sbr:7095370400\"\n+            \"uri\": \"sbr:7129644725\"\n         },\n         \"linux-aarch64\": {\n-            \"uri\": \"sbr:7095366278\"\n+            \"uri\": \"sbr:7129643797\"\n         },\n         \"win32-clang-cl\": {\n-            \"uri\": \"sbr:7095369426\"\n+            \"uri\": \"sbr:7129644525\"\n         }\n     }\n }\ndiff --git a/build/mapping.conf.json b/build/mapping.conf.json\nindex d2e418a62acd..09a1a2e8bcea 100644\n--- a/build/mapping.conf.json\n+++ b/build/mapping.conf.json\n@@ -398,6 +398,8 @@\n         \"7017113894\": \"https://devtools-registry.s3.yandex.net/7017113894\",\n         \"7083801854\": \"https://devtools-registry.s3.yandex.net/7083801854\",\n         \"7083802536\": \"https://devtools-registry.s3.yandex.net/7083802536\",\n+        \"7120328912\": \"https://devtools-registry.s3.yandex.net/7120328912\",\n+        \"7120353733\": \"https://devtools-registry.s3.yandex.net/7120353733\",\n         \"5486731632\": \"https://devtools-registry.s3.yandex.net/5486731632\",\n         \"5514350352\": \"https://devtools-registry.s3.yandex.net/5514350352\",\n         \"5514360398\": \"https://devtools-registry.s3.yandex.net/5514360398\",\n@@ -547,6 +549,7 @@\n         \"7070261862\": \"https://devtools-registry.s3.yandex.net/7070261862\",\n         \"7083582755\": \"https://devtools-registry.s3.yandex.net/7083582755\",\n         \"7095381929\": \"https://devtools-registry.s3.yandex.net/7095381929\",\n+        \"7129654082\": \"https://devtools-registry.s3.yandex.net/7129654082\",\n         \"5766171800\": \"https://devtools-registry.s3.yandex.net/5766171800\",\n         \"5805430761\": \"https://devtools-registry.s3.yandex.net/5805430761\",\n         \"5829025456\": \"https://devtools-registry.s3.yandex.net/5829025456\",\n@@ -586,6 +589,7 @@\n         \"7070261345\": \"https://devtools-registry.s3.yandex.net/7070261345\",\n         \"7083581957\": \"https://devtools-registry.s3.yandex.net/7083581957\",\n         \"7095381018\": \"https://devtools-registry.s3.yandex.net/7095381018\",\n+        \"7129653224\": \"https://devtools-registry.s3.yandex.net/7129653224\",\n         \"5766173070\": \"https://devtools-registry.s3.yandex.net/5766173070\",\n         \"5805432830\": \"https://devtools-registry.s3.yandex.net/5805432830\",\n         \"5829031598\": \"https://devtools-registry.s3.yandex.net/5829031598\",\n@@ -625,6 +629,7 @@\n         \"7070262933\": \"https://devtools-registry.s3.yandex.net/7070262933\",\n         \"7083584557\": \"https://devtools-registry.s3.yandex.net/7083584557\",\n         \"7095384078\": \"https://devtools-registry.s3.yandex.net/7095384078\",\n+        \"7129655749\": \"https://devtools-registry.s3.yandex.net/7129655749\",\n         \"5766171341\": \"https://devtools-registry.s3.yandex.net/5766171341\",\n         \"5805430188\": \"https://devtools-registry.s3.yandex.net/5805430188\",\n         \"5829023352\": \"https://devtools-registry.s3.yandex.net/5829023352\",\n@@ -664,6 +669,7 @@\n         \"7070260816\": \"https://devtools-registry.s3.yandex.net/7070260816\",\n         \"7083581112\": \"https://devtools-registry.s3.yandex.net/7083581112\",\n         \"7095380204\": \"https://devtools-registry.s3.yandex.net/7095380204\",\n+        \"7129652122\": \"https://devtools-registry.s3.yandex.net/7129652122\",\n         \"5766172695\": \"https://devtools-registry.s3.yandex.net/5766172695\",\n         \"5805432230\": \"https://devtools-registry.s3.yandex.net/5805432230\",\n         \"5829029743\": \"https://devtools-registry.s3.yandex.net/5829029743\",\n@@ -703,6 +709,7 @@\n         \"7070262364\": \"https://devtools-registry.s3.yandex.net/7070262364\",\n         \"7083583698\": \"https://devtools-registry.s3.yandex.net/7083583698\",\n         \"7095382771\": \"https://devtools-registry.s3.yandex.net/7095382771\",\n+        \"7129654809\": \"https://devtools-registry.s3.yandex.net/7129654809\",\n         \"4307890075\": \"https://devtools-registry.s3.yandex.net/4307890075\",\n         \"5517245192\": \"https://devtools-registry.s3.yandex.net/5517245192\",\n         \"4307901240\": \"https://devtools-registry.s3.yandex.net/4307901240\",\n@@ -740,6 +747,7 @@\n         \"6941864137\": \"https://devtools-registry.s3.yandex.net/6941864137\",\n         \"6956612793\": \"https://devtools-registry.s3.yandex.net/6956612793\",\n         \"6957908969\": \"https://devtools-registry.s3.yandex.net/6957908969\",\n+        \"7101981380\": \"https://devtools-registry.s3.yandex.net/7101981380\",\n         \"5776379446\": \"https://devtools-registry.s3.yandex.net/5776379446\",\n         \"5777100597\": \"https://devtools-registry.s3.yandex.net/5777100597\",\n         \"5909067709\": \"https://devtools-registry.s3.yandex.net/5909067709\",\n@@ -750,6 +758,7 @@\n         \"6941861330\": \"https://devtools-registry.s3.yandex.net/6941861330\",\n         \"6956611400\": \"https://devtools-registry.s3.yandex.net/6956611400\",\n         \"6957906780\": \"https://devtools-registry.s3.yandex.net/6957906780\",\n+        \"7101978818\": \"https://devtools-registry.s3.yandex.net/7101978818\",\n         \"5776375952\": \"https://devtools-registry.s3.yandex.net/5776375952\",\n         \"5777098178\": \"https://devtools-registry.s3.yandex.net/5777098178\",\n         \"5909065014\": \"https://devtools-registry.s3.yandex.net/5909065014\",\n@@ -760,6 +769,7 @@\n         \"6941857195\": \"https://devtools-registry.s3.yandex.net/6941857195\",\n         \"6956608703\": \"https://devtools-registry.s3.yandex.net/6956608703\",\n         \"6957901545\": \"https://devtools-registry.s3.yandex.net/6957901545\",\n+        \"7101973818\": \"https://devtools-registry.s3.yandex.net/7101973818\",\n         \"5776374505\": \"https://devtools-registry.s3.yandex.net/5776374505\",\n         \"5777096988\": \"https://devtools-registry.s3.yandex.net/5777096988\",\n         \"5909063641\": \"https://devtools-registry.s3.yandex.net/5909063641\",\n@@ -770,6 +780,7 @@\n         \"6941855347\": \"https://devtools-registry.s3.yandex.net/6941855347\",\n         \"6956607525\": \"https://devtools-registry.s3.yandex.net/6956607525\",\n         \"6957899481\": \"https://devtools-registry.s3.yandex.net/6957899481\",\n+        \"7101971416\": \"https://devtools-registry.s3.yandex.net/7101971416\",\n         \"5776377955\": \"https://devtools-registry.s3.yandex.net/5776377955\",\n         \"5777099502\": \"https://devtools-registry.s3.yandex.net/5777099502\",\n         \"5909066324\": \"https://devtools-registry.s3.yandex.net/5909066324\",\n@@ -780,6 +791,7 @@\n         \"6941859166\": \"https://devtools-registry.s3.yandex.net/6941859166\",\n         \"6956610092\": \"https://devtools-registry.s3.yandex.net/6956610092\",\n         \"6957903888\": \"https://devtools-registry.s3.yandex.net/6957903888\",\n+        \"7101976574\": \"https://devtools-registry.s3.yandex.net/7101976574\",\n         \"6391354461\": \"https://devtools-registry.s3.yandex.net/6391354461\",\n         \"6990868751\": \"https://devtools-registry.s3.yandex.net/6990868751\",\n         \"6990860705\": \"https://devtools-registry.s3.yandex.net/6990860705\",\n@@ -1277,6 +1289,8 @@\n         \"7017113894\": \"devtools/ya/test/programs/test_tool/bin/test_tool for linux\",\n         \"7083801854\": \"devtools/ya/test/programs/test_tool/bin/test_tool for linux\",\n         \"7083802536\": \"devtools/ya/test/programs/test_tool/bin/test_tool for linux\",\n+        \"7120328912\": \"devtools/ya/test/programs/test_tool/bin/test_tool for linux\",\n+        \"7120353733\": \"devtools/ya/test/programs/test_tool/bin/test_tool for linux\",\n         \"5486731632\": \"devtools/ya/test/programs/test_tool/bin3/test_tool3 for linux\",\n         \"5514350352\": \"devtools/ya/test/programs/test_tool/bin3/test_tool3 for linux\",\n         \"5514360398\": \"devtools/ya/test/programs/test_tool/bin3/test_tool3 for linux\",\n@@ -1426,6 +1440,7 @@\n         \"7070261862\": \"devtools/ymake/bin/ymake for darwin\",\n         \"7083582755\": \"devtools/ymake/bin/ymake for darwin\",\n         \"7095381929\": \"devtools/ymake/bin/ymake for darwin\",\n+        \"7129654082\": \"devtools/ymake/bin/ymake for darwin\",\n         \"5766171800\": \"devtools/ymake/bin/ymake for darwin-arm64\",\n         \"5805430761\": \"devtools/ymake/bin/ymake for darwin-arm64\",\n         \"5829025456\": \"devtools/ymake/bin/ymake for darwin-arm64\",\n@@ -1465,6 +1480,7 @@\n         \"7070261345\": \"devtools/ymake/bin/ymake for darwin-arm64\",\n         \"7083581957\": \"devtools/ymake/bin/ymake for darwin-arm64\",\n         \"7095381018\": \"devtools/ymake/bin/ymake for darwin-arm64\",\n+        \"7129653224\": \"devtools/ymake/bin/ymake for darwin-arm64\",\n         \"5766173070\": \"devtools/ymake/bin/ymake for linux\",\n         \"5805432830\": \"devtools/ymake/bin/ymake for linux\",\n         \"5829031598\": \"devtools/ymake/bin/ymake for linux\",\n@@ -1504,6 +1520,7 @@\n         \"7070262933\": \"devtools/ymake/bin/ymake for linux\",\n         \"7083584557\": \"devtools/ymake/bin/ymake for linux\",\n         \"7095384078\": \"devtools/ymake/bin/ymake for linux\",\n+        \"7129655749\": \"devtools/ymake/bin/ymake for linux\",\n         \"5766171341\": \"devtools/ymake/bin/ymake for linux-aarch64\",\n         \"5805430188\": \"devtools/ymake/bin/ymake for linux-aarch64\",\n         \"5829023352\": \"devtools/ymake/bin/ymake for linux-aarch64\",\n@@ -1543,6 +1560,7 @@\n         \"7070260816\": \"devtools/ymake/bin/ymake for linux-aarch64\",\n         \"7083581112\": \"devtools/ymake/bin/ymake for linux-aarch64\",\n         \"7095380204\": \"devtools/ymake/bin/ymake for linux-aarch64\",\n+        \"7129652122\": \"devtools/ymake/bin/ymake for linux-aarch64\",\n         \"5766172695\": \"devtools/ymake/bin/ymake for win32-clang-cl\",\n         \"5805432230\": \"devtools/ymake/bin/ymake for win32-clang-cl\",\n         \"5829029743\": \"devtools/ymake/bin/ymake for win32-clang-cl\",\n@@ -1582,6 +1600,7 @@\n         \"7070262364\": \"devtools/ymake/bin/ymake for win32-clang-cl\",\n         \"7083583698\": \"devtools/ymake/bin/ymake for win32-clang-cl\",\n         \"7095382771\": \"devtools/ymake/bin/ymake for win32-clang-cl\",\n+        \"7129654809\": \"devtools/ymake/bin/ymake for win32-clang-cl\",\n         \"4307890075\": \"flake8_linter for linux\",\n         \"5517245192\": \"flake8_linter for linux\",\n         \"4307901240\": \"flake8_linter for linux-aarch64\",\n@@ -1619,6 +1638,7 @@\n         \"6941864137\": \"none-none-none-result_resources/jdk-darwin-aarch64.yandex.tgz\",\n         \"6956612793\": \"none-none-none-result_resources/jdk-darwin-aarch64.yandex.tgz\",\n         \"6957908969\": \"none-none-none-result_resources/jdk-darwin-aarch64.yandex.tgz\",\n+        \"7101981380\": \"none-none-none-result_resources/jdk-darwin-aarch64.yandex.tgz\",\n         \"5776379446\": \"none-none-none-result_resources/jdk-darwin-x86_64.yandex.tgz\",\n         \"5777100597\": \"none-none-none-result_resources/jdk-darwin-x86_64.yandex.tgz\",\n         \"5909067709\": \"none-none-none-result_resources/jdk-darwin-x86_64.yandex.tgz\",\n@@ -1629,6 +1649,7 @@\n         \"6941861330\": \"none-none-none-result_resources/jdk-darwin-x86_64.yandex.tgz\",\n         \"6956611400\": \"none-none-none-result_resources/jdk-darwin-x86_64.yandex.tgz\",\n         \"6957906780\": \"none-none-none-result_resources/jdk-darwin-x86_64.yandex.tgz\",\n+        \"7101978818\": \"none-none-none-result_resources/jdk-darwin-x86_64.yandex.tgz\",\n         \"5776375952\": \"none-none-none-result_resources/jdk-linux-aarch64.yandex.tgz\",\n         \"5777098178\": \"none-none-none-result_resources/jdk-linux-aarch64.yandex.tgz\",\n         \"5909065014\": \"none-none-none-result_resources/jdk-linux-aarch64.yandex.tgz\",\n@@ -1639,6 +1660,7 @@\n         \"6941857195\": \"none-none-none-result_resources/jdk-linux-aarch64.yandex.tgz\",\n         \"6956608703\": \"none-none-none-result_resources/jdk-linux-aarch64.yandex.tgz\",\n         \"6957901545\": \"none-none-none-result_resources/jdk-linux-aarch64.yandex.tgz\",\n+        \"7101973818\": \"none-none-none-result_resources/jdk-linux-aarch64.yandex.tgz\",\n         \"5776374505\": \"none-none-none-result_resources/jdk-linux-x86_64.yandex.tgz\",\n         \"5777096988\": \"none-none-none-result_resources/jdk-linux-x86_64.yandex.tgz\",\n         \"5909063641\": \"none-none-none-result_resources/jdk-linux-x86_64.yandex.tgz\",\n@@ -1649,6 +1671,7 @@\n         \"6941855347\": \"none-none-none-result_resources/jdk-linux-x86_64.yandex.tgz\",\n         \"6956607525\": \"none-none-none-result_resources/jdk-linux-x86_64.yandex.tgz\",\n         \"6957899481\": \"none-none-none-result_resources/jdk-linux-x86_64.yandex.tgz\",\n+        \"7101971416\": \"none-none-none-result_resources/jdk-linux-x86_64.yandex.tgz\",\n         \"5776377955\": \"none-none-none-result_resources/jdk-windows-amd64.yandex.tgz\",\n         \"5777099502\": \"none-none-none-result_resources/jdk-windows-amd64.yandex.tgz\",\n         \"5909066324\": \"none-none-none-result_resources/jdk-windows-amd64.yandex.tgz\",\n@@ -1659,6 +1682,7 @@\n         \"6941859166\": \"none-none-none-result_resources/jdk-windows-amd64.yandex.tgz\",\n         \"6956610092\": \"none-none-none-result_resources/jdk-windows-amd64.yandex.tgz\",\n         \"6957903888\": \"none-none-none-result_resources/jdk-windows-amd64.yandex.tgz\",\n+        \"7101976574\": \"none-none-none-result_resources/jdk-windows-amd64.yandex.tgz\",\n         \"6391354461\": \"none-none-none-result_resources/protoc-linux-x86_64.tgz\",\n         \"6990868751\": \"none-none-none-sandbox/backup/3527d100-e2d0-4b0e-bb7a-905010853d98/yfm-docs.tar\",\n         \"6990860705\": \"none-none-none-sandbox/backup/d386643e-58f8-43e1-8760-341d73801df8/yfm-docs.tar\",\ndiff --git a/build/platform/java/jdk/ya.make b/build/platform/java/jdk/ya.make\nindex 983dfbba1515..a978c6690087 100644\n--- a/build/platform/java/jdk/ya.make\n+++ b/build/platform/java/jdk/ya.make\n@@ -3,6 +3,9 @@ RESOURCES_LIBRARY()\n # Add new JDK to build/plugins/java.py (2 times)\n IF(USE_SYSTEM_JDK)\n     MESSAGE(WARNING DEFAULT_JDK are disabled)\n+ELSEIF(JDK_REAL_VERSION == \"23\")\n+    DECLARE_EXTERNAL_HOST_RESOURCES_BUNDLE_BY_JSON(JDK_DEFAULT jdk23/jdk.json)\n+    SET_RESOURCE_URI_FROM_JSON(WITH_JDK_URI jdk23/jdk.json)\n ELSEIF(JDK_REAL_VERSION == \"22\")\n     DECLARE_EXTERNAL_HOST_RESOURCES_BUNDLE_BY_JSON(JDK_DEFAULT jdk22/jdk.json)\n     SET_RESOURCE_URI_FROM_JSON(WITH_JDK_URI jdk22/jdk.json)\ndiff --git a/build/platform/lld/lld14.json b/build/platform/lld/lld14.json\ndeleted file mode 100644\nindex d5638f45811d..000000000000\n--- a/build/platform/lld/lld14.json\n+++ /dev/null\n@@ -1,17 +0,0 @@\n-{\n-    \"by_platform\": {\n-        \"darwin-arm64\": {\n-            \"uri\": \"sbr:6683655545\"\n-        },\n-        \"darwin-x86_64\": {\n-            \"uri\": \"sbr:6683694178\"\n-        },\n-        \"linux-aarch64\": {\n-            \"uri\": \"sbr:6683720769\"\n-        },\n-        \"linux-x86_64\": {\n-            \"uri\": \"sbr:6683733162\"\n-        }\n-    }\n-}\n-\ndiff --git a/build/platform/lld/ya.make b/build/platform/lld/ya.make\nindex 7ea02fc2ec24..b3459211f2a7 100644\n--- a/build/platform/lld/ya.make\n+++ b/build/platform/lld/ya.make\n@@ -5,12 +5,8 @@ DEFAULT(LLD_VERSION ${CLANG_VER})\n TOOLCHAIN(lld)\n VERSION(${LLD_VERSION})\n \n-IF (LLD_VERSION == 14)\n-    DECLARE_EXTERNAL_HOST_RESOURCES_BUNDLE_BY_JSON(LLD_ROOT lld14.json)\n-ELSE()\n-    # fallback on latest version\n-    DECLARE_EXTERNAL_HOST_RESOURCES_BUNDLE_BY_JSON(LLD_ROOT lld16.json)\n-ENDIF()\n+# lld16 is the only supported version at the time\n+DECLARE_EXTERNAL_HOST_RESOURCES_BUNDLE_BY_JSON(LLD_ROOT lld16.json)\n \n IF (OS_ANDROID)\n     # Use LLD shipped with Android NDK.\n@@ -52,8 +48,6 @@ ELSEIF (OS_DARWIN OR OS_IOS)\n         LDFLAGS(\n             -fuse-ld=${LLD_ROOT_RESOURCE_GLOBAL}/bin/ld64.lld\n         )\n-    ELSEIF (XCODE)\n-        LDFLAGS(-DYA_XCODE)\n     ELSE()\n         LDFLAGS(\n             -fuse-ld=lld\ndiff --git a/build/plugins/_common.py b/build/plugins/_common.py\nindex a2b19b5b3d48..e40798aaf865 100644\n--- a/build/plugins/_common.py\n+++ b/build/plugins/_common.py\n@@ -22,6 +22,20 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n+def cache_by_second_arg(func):\n+    result = {}\n+\n+    def wrapper(arg0, arg1, *args, **kwargs):\n+        try:\n+            return result[arg1]\n+        except KeyError:\n+            result[arg1] = func(arg0, arg1, *args, **kwargs)\n+\n+        return result[arg1]\n+\n+    return wrapper\n+\n+\n def pathid(path):\n     return six.ensure_str(base64.b32encode(hashlib.md5(six.ensure_binary(path)).digest()).lower().strip(b'='))\n \ndiff --git a/build/plugins/_dart_fields.py b/build/plugins/_dart_fields.py\nindex 51349aa4aed6..34f13579a2b6 100644\n--- a/build/plugins/_dart_fields.py\n+++ b/build/plugins/_dart_fields.py\n@@ -259,13 +259,28 @@ def _get_ts_test_data_dirs(unit):\n     )\n \n \n-@_common.lazy\n+@_common.cache_by_second_arg\n def get_linter_configs(unit, config_paths):\n     rel_config_path = _common.rootrel_arc_src(config_paths, unit)\n     arc_config_path = unit.resolve_arc_path(rel_config_path)\n     abs_config_path = unit.resolve(arc_config_path)\n     with open(abs_config_path, 'r') as fd:\n-        return list(json.load(fd).values())\n+        return json.load(fd)\n+\n+\n+def _reference_group_var(varname: str, extensions: list[str] | None = None) -> str:\n+    if extensions is None:\n+        return f'\"${{join=\\\\;:{varname}}}\"'\n+\n+    return serialize_list(f'${{ext={ext};join=\\\\;:{varname}}}' for ext in extensions)\n+\n+\n+def assert_file_exists(unit, path):\n+    path = unit.resolve(SOURCE_ROOT_SHORT + path)\n+    if not os.path.exists(path):\n+        message = 'File {} is not found'.format(path)\n+        ymake.report_configure_error(message)\n+        raise DartValueError()\n \n \n class AndroidApkTestActivity:\n@@ -552,25 +567,56 @@ class LintConfigs:\n     KEY = 'LINT-CONFIGS'\n \n     @classmethod\n-    def value(cls, unit, flat_args, spec_args):\n+    def python_configs(cls, unit, flat_args, spec_args):\n         resolved_configs = []\n-        configs = spec_args.get('CONFIGS', [])\n-        for cfg in configs:\n-            filename = unit.resolve(SOURCE_ROOT_SHORT + cfg)\n-            if not os.path.exists(filename):\n-                message = 'Configuration file {} is not found'.format(filename)\n-                raise DartValueError(message)\n-            resolved_configs.append(cfg)\n-            if os.path.splitext(filename)[-1] == '.json':\n-                cfgs = get_linter_configs(unit, cfg)\n-                for c in cfgs:\n-                    filename = unit.resolve(SOURCE_ROOT_SHORT + c)\n-                    if not os.path.exists(filename):\n-                        message = 'Configuration file {} is not found'.format(filename)\n-                        raise DartValueError(message)\n-                    resolved_configs.append(c)\n+\n+        project_to_config_map = spec_args.get('PROJECT_TO_CONFIG_MAP', [])\n+        if project_to_config_map:\n+            # ruff, TODO rewrite once custom configs migrated to autoincludes scheme\n+            project_to_config_map = project_to_config_map[0]\n+            assert_file_exists(unit, project_to_config_map)\n+            resolved_configs.append(project_to_config_map)\n+            cfgs = get_linter_configs(unit, project_to_config_map).values()\n+            for c in cfgs:\n+                assert_file_exists(unit, c)\n+                resolved_configs.append(c)\n+            return {cls.KEY: serialize_list(resolved_configs)}\n+\n+        custom_config = spec_args.get('CUSTOM_CONFIG', [])\n+        if custom_config:\n+            # black if custom config is passed\n+            # TODO rewrite once custom configs migrated to autoincludes scheme\n+            custom_config = custom_config[0]\n+            assert_file_exists(unit, custom_config)\n+            resolved_configs.append(custom_config)\n+            return {cls.KEY: serialize_list(resolved_configs)}\n+\n+        config = spec_args['CONFIGS'][0]\n+        # black without custom config or flake8, using default configs file\n+        assert_file_exists(unit, config)\n+        name = spec_args['NAME'][0]\n+        cfg = get_linter_configs(unit, config)[name]\n+        assert_file_exists(unit, cfg)\n+        resolved_configs.append(cfg)\n+        if name in ('flake8', 'py2_flake8'):\n+            resolved_configs.extend(spec_args.get('FLAKE_MIGRATIONS_CONFIG', []))\n         return {cls.KEY: serialize_list(resolved_configs)}\n \n+    @classmethod\n+    def cpp_configs(cls, unit, flat_args, spec_args):\n+        custom_config = spec_args.get('CUSTOM_CONFIG')\n+        if custom_config:\n+            config = custom_config[0]\n+            assert_file_exists(unit, config)\n+        else:\n+            # file with default configs\n+            config = spec_args.get('CONFIGS')[0]\n+            assert_file_exists(unit, config)\n+            name = spec_args['NAME'][0]\n+            config = get_linter_configs(unit, config)[name]\n+            assert_file_exists(unit, config)\n+        return {cls.KEY: serialize_list([config])}\n+\n \n class LintExtraParams:\n     KEY = 'LINT-EXTRA-PARAMS'\n@@ -581,7 +627,8 @@ def from_macro_args(cls, unit, flat_args, spec_args):\n         for arg in extra_params:\n             if '=' not in arg:\n                 message = 'Wrong EXTRA_PARAMS value: \"{}\". Values must have format \"name=value\".'.format(arg)\n-                raise DartValueError(message)\n+                ymake.report_configure_error(message)\n+                raise DartValueError()\n         return {cls.KEY: serialize_list(extra_params)}\n \n \n@@ -600,7 +647,8 @@ class LintName:\n     def value(cls, unit, flat_args, spec_args):\n         lint_name = spec_args['NAME'][0]\n         if lint_name in ('flake8', 'py2_flake8') and (unit.get('DISABLE_FLAKE8') or 'no') == 'yes':\n-            raise DartValueError('Flake8 linting is disabled by `DISABLE_FLAKE8`')\n+            unit.message(['INFO', 'Flake8 linting is disabled by `DISABLE_FLAKE8`'])\n+            raise DartValueError()\n         return {cls.KEY: lint_name}\n \n \n@@ -1144,6 +1192,11 @@ def py_linter_files(cls, unit, flat_args, spec_args):\n         test_files = serialize_list(test_files)\n         return {cls.KEY: test_files, cls.KEY2: test_files}\n \n+    @classmethod\n+    def cpp_linter_files(cls, unit, flat_args, spec_args):\n+        files_dart = _reference_group_var(\"ALL_SRCS\", consts.STYLE_CPP_ALL_EXTS)\n+        return {cls.KEY: files_dart, cls.KEY2: files_dart}\n+\n \n class TestEnv:\n     KEY = 'TEST-ENV'\ndiff --git a/build/plugins/a.yaml b/build/plugins/a.yaml\nindex 3c652e093aba..48447c2fc301 100644\n--- a/build/plugins/a.yaml\n+++ b/build/plugins/a.yaml\n@@ -7,7 +7,7 @@ arcanum:\n         requirements:\n           - system: arcanum\n             type: merge_time_fits\n-            alias: Merge time intervals (YMAKE-1194)\n+            alias: Merge is forbidden from 11:00 to 20:00 MSK (YMAKE-1194)\n             data:\n                 merge_intervals_utc:\n                   # 20:00..11:00 MSK\ndiff --git a/build/plugins/java.py b/build/plugins/java.py\nindex 60d70919b495..b6565ce0826f 100644\n--- a/build/plugins/java.py\n+++ b/build/plugins/java.py\n@@ -102,6 +102,7 @@ def onjava_module(unit, *args):\n         '20',\n         '21',\n         '22',\n+        '23',\n     ):\n         data['ENABLE_PREVIEW'] = extract_macro_calls(unit, 'ENABLE_PREVIEW_VALUE', args_delim)\n \n@@ -231,6 +232,11 @@ def on_add_classpath_clash_check(unit, *args):\n         unit.onjava_test_deps(jdeps_val)\n \n \n+def on_add_detekt_report_check(unit, *args):\n+    if unit.get('WITH_KOTLIN_VALUE') == 'yes' and unit.get('WITH_KOTLINC_PLUGIN_DETEKT') == 'yes':\n+        unit.onadd_check(['detekt.report'] + list(args))\n+\n+\n # Ymake java modules related macroses\n \n \n@@ -373,6 +379,7 @@ def on_jdk_version_macro_check(unit, *args):\n         '20',\n         '21',\n         '22',\n+        '23',\n     )\n     if jdk_version not in available_versions:\n         ymake.report_configure_error(\ndiff --git a/build/plugins/nots.py b/build/plugins/nots.py\nindex 625b1af5bfa7..6dcff79bf7c7 100644\n--- a/build/plugins/nots.py\n+++ b/build/plugins/nots.py\n@@ -603,6 +603,8 @@ def _setup_stylelint(unit):\n     if not test_files:\n         return\n \n+    unit.on_peerdir_ts_resource(\"stylelint\")\n+\n     from lib.nots.package_manager import constants\n \n     recipes_value = unit.get(\"TEST_RECIPES_VALUE\")\ndiff --git a/build/plugins/res.py b/build/plugins/res.py\nindex 24c183ad7fab..8dcea72d4872 100644\n--- a/build/plugins/res.py\n+++ b/build/plugins/res.py\n@@ -13,7 +13,7 @@ def remove_prefix(text, prefix):\n \n def onresource_files(unit, *args):\n     \"\"\"\n-    @usage: RESOURCE_FILES([PREFIX {prefix}] [STRIP prefix_to_strip] {path})\n+    @usage: RESOURCE_FILES([DONT_COMPRESS] [PREFIX {prefix}] [STRIP prefix_to_strip] {path})\n \n     This macro expands into\n     RESOURCE(DONT_PARSE {path} resfs/file/{prefix}{path}\n@@ -26,8 +26,7 @@ def onresource_files(unit, *args):\n     resfs/file/{key} stores any value whose source was a file on a filesystem.\n     resfs/src/resfs/file/{key} must store its path.\n \n-    DONT_PARSE disables parsing for source code files (determined by extension)\n-               Please don't abuse: use separate DONT_PARSE macro call only for files subject to parsing\n+    DONT_COMPRESS allows optionally disable resource compression on platforms where it is supported\n \n     This form is for use from other plugins:\n     RESOURCE_FILES([DEST {dest}] {path}) expands into RESOURCE({path} resfs/file/{dest})\n@@ -43,9 +42,14 @@ def onresource_files(unit, *args):\n         # GO_RESOURCE currently doesn't support DONT_PARSE\n         res.append('DONT_PARSE')\n \n+    if args and not unit.enabled('_GO_MODULE') and 'DONT_COMPRESS' in args:\n+        res.append('DONT_COMPRESS')\n+\n     args = iter(args)\n     for arg in args:\n-        if arg == 'PREFIX':\n+        if arg == 'DONT_COMPRESS':\n+            pass\n+        elif arg == 'PREFIX':\n             prefix, dest = next(args), None\n         elif arg == 'DEST':\n             dest, prefix = next(args), None\n@@ -58,7 +62,7 @@ def onresource_files(unit, *args):\n             )\n             if key in res:\n                 unit.message(\n-                    ['warn', \"Dublicated resource file {} in RESOURCE_FILES() macro. Skipped it.\".format(path)]\n+                    ['warn', \"Duplicated resource file {} in RESOURCE_FILES() macro. Skipped it.\".format(path)]\n                 )\n                 continue\n             src = 'resfs/src/{}={}'.format(key, rootrel_arc_src(path, unit))\n@@ -106,8 +110,15 @@ def on_ya_conf_json(unit, conf_file):\n     with open(conf_abs_path) as f:\n         conf = json.load(f)\n     formulas = set()\n-    for bottle_name, bottle in conf['bottles'].items():\n-        formula = bottle['formula']\n+\n+    def _iter_bottles(config):\n+        if \"simple_tools\" in config:\n+            for name, info in config[\"simple_tools\"].items():\n+                yield name, f\"build/external_resources/{info.get('resource', name)}/resources.json\"\n+        for name, bottle in config[\"bottles\"].items():\n+            yield name, bottle[\"formula\"]\n+\n+    for bottle_name, formula in _iter_bottles(conf):\n         if isinstance(formula, six.string_types):\n             if formula.startswith(valid_dirs):\n                 abs_path = unit.resolve('$S/' + formula)\ndiff --git a/build/scripts/build_catboost.py b/build/scripts/build_catboost.py\nindex 81d4e795a04b..6455bb59bb18 100755\n--- a/build/scripts/build_catboost.py\n+++ b/build/scripts/build_catboost.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n import os\n import shutil\n@@ -45,7 +46,7 @@ def run(self, cbmodel, cbname, cb_cpp_path):\n class BuildCb(BuildCbBase):\n     def run(self, argv):\n         if len(argv) < 5:\n-            print >> sys.stderr, \"BuildCb.Run(<ARCADIA_ROOT> <archiver> <mninfo> <mnname> <cppOutput> [params...])\"\n+            print(\"BuildCb.Run(<ARCADIA_ROOT> <archiver> <mninfo> <mnname> <cppOutput> [params...])\", file=sys.stderr)\n             sys.exit(1)\n \n         self.SrcRoot = argv[0]\n@@ -64,7 +65,7 @@ def build_cb_f(argv):\n \n if __name__ == '__main__':\n     if len(sys.argv) < 2:\n-        print >> sys.stderr, \"Usage: build_cb.py <funcName> <args...>\"\n+        print(\"Usage: build_cb.py <funcName> <args...>\", file=sys.stderr)\n         sys.exit(1)\n \n     if sys.argv[2:]:\ndiff --git a/build/scripts/clang_tidy.py b/build/scripts/clang_tidy.py\nindex bbb223b2067a..c7636b8bf22e 100644\n--- a/build/scripts/clang_tidy.py\n+++ b/build/scripts/clang_tidy.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import argparse\n import json\n import os\ndiff --git a/build/scripts/collect_java_srcs.py b/build/scripts/collect_java_srcs.py\ndeleted file mode 100644\nindex f361f271d1da..000000000000\n--- a/build/scripts/collect_java_srcs.py\n+++ /dev/null\n@@ -1,51 +0,0 @@\n-import os\n-import sys\n-import contextlib\n-import tarfile\n-import zipfile\n-\n-\n-if __name__ == '__main__':\n-    build_root = sys.argv[1]\n-    root = os.path.normpath(sys.argv[2])\n-    dest = os.path.normpath(sys.argv[3])\n-    srcs = sys.argv[4:]\n-\n-    for src in srcs:\n-        src = os.path.normpath(src)\n-        if src.endswith('.java') or src.endswith('.kt'):\n-            src_rel_path = os.path.relpath(src, root)\n-\n-            if os.path.join(root, src_rel_path) == src:\n-                # Inside root\n-                dst = os.path.join(dest, src_rel_path)\n-\n-            else:\n-                # Outside root\n-                print('External src file \"{}\" is outside of srcdir {}, ignore'.format(\n-                    os.path.relpath(src, build_root),\n-                    os.path.relpath(root, build_root),\n-                )\n-                continue\n-\n-            if os.path.exists(dst):\n-                print >> sys.stderr, 'Duplicate external src file {}, choice is undefined'.format(\n-                    os.path.relpath(dst, root)\n-                )\n-\n-            else:\n-                destdir = os.path.dirname(dst)\n-                if destdir and not os.path.exists(destdir):\n-                    os.makedirs(destdir)\n-                os.rename(src, dst)\n-\n-        elif src.endswith('.jsr'):\n-            with contextlib.closing(tarfile.open(src, 'r')) as tf:\n-                tf.extractall(dst)\n-\n-        elif src.endswith('-sources.jar'):\n-            with zipfile.ZipFile(src) as zf:\n-                zf.extractall(dst)\n-\n-        else:\n-            print >> sys.stderr, 'Unrecognized file type', os.path.relpath(src, build_root)\ndiff --git a/build/scripts/compile_cuda.py b/build/scripts/compile_cuda.py\nindex 9660300069d9..8e08d17ad259 100644\n--- a/build/scripts/compile_cuda.py\n+++ b/build/scripts/compile_cuda.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n import subprocess\n import os\n@@ -60,7 +61,7 @@ def main():\n \n     executable = command[0]\n     if not os.path.exists(executable):\n-        print >> sys.stderr, '{} not found'.format(executable)\n+        print('{} not found'.format(executable), file=sys.stderr)\n         sys.exit(1)\n \n     if is_clang(command):\ndiff --git a/build/scripts/configure_file.py b/build/scripts/configure_file.py\nindex 5ab7467391d6..257593dc9b48 100755\n--- a/build/scripts/configure_file.py\n+++ b/build/scripts/configure_file.py\n@@ -1,5 +1,6 @@\n #!/usr/bin/env python2.7\n \n+from __future__ import print_function\n import sys\n import os.path\n import re\ndiff --git a/build/scripts/coverage-info.py b/build/scripts/coverage-info.py\nindex ddc5f275f8bb..114e8f4b034e 100644\n--- a/build/scripts/coverage-info.py\n+++ b/build/scripts/coverage-info.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import argparse\n import os\n import sys\n@@ -72,12 +73,12 @@ def print_stat(da, fnda, teamcity_stat_output):\n     func_total = len(fnda.values())\n     func_coverage = 100.0 * func_hit / func_total if func_total else 0\n \n-    print >> sys.stderr, '[[imp]]Lines[[rst]]     {: >16} {: >16} {: >16.1f}%'.format(\n+    print('[[imp]]Lines[[rst]]     {: >16} {: >16} {: >16.1f}%'.format(\n         lines_hit, lines_total, lines_coverage\n-    )\n-    print >> sys.stderr, '[[imp]]Functions[[rst]] {: >16} {: >16} {: >16.1f}%'.format(\n+    ), file=sys.stderr)\n+    print('[[imp]]Functions[[rst]] {: >16} {: >16} {: >16.1f}%'.format(\n         func_hit, func_total, func_coverage\n-    )\n+    ), file=sys.stderr)\n \n     if teamcity_stat_output:\n         with open(teamcity_stat_output, 'w') as tc_file:\n@@ -119,7 +120,7 @@ def combine_info_files(lcov, files, out_file):\n         for trace in chunk:\n             assert os.path.exists(trace), \"Trace file does not exist: {} (cwd={})\".format(trace, os.getcwd())\n             combine_cmd += [\"-a\", os.path.abspath(trace)]\n-        print >> sys.stderr, '## lcov', ' '.join(combine_cmd[1:])\n+        print('## lcov', ' '.join(combine_cmd[1:]), file=sys.stderr)\n         out_file_tmp = \"combined.tmp\"\n         with open(out_file_tmp, \"w\") as stdout:\n             subprocess.check_call(combine_cmd, stdout=stdout)\n@@ -157,7 +158,7 @@ def update_stat_global(src_file, line, fnda, da):\n \n \n def gen_info_global(cmd, cov_info, probe_path, update_stat, lcov_args):\n-    print >> sys.stderr, '## geninfo', ' '.join(cmd)\n+    print('## geninfo', ' '.join(cmd), file=sys.stderr)\n     subprocess.check_call(cmd)\n     if recast(cov_info + '.tmp', cov_info, probe_path, update_stat):\n         lcov_args.append(cov_info)\n@@ -297,7 +298,7 @@ def gen_info(cmd, cov_info):\n             output_dir,\n             output_trace,\n         ]\n-        print >> sys.stderr, '## genhtml', ' '.join(cmd)\n+        print('## genhtml', ' '.join(cmd), file=sys.stderr)\n         subprocess.check_call(cmd)\n         if lcov_cobertura:\n             gen_cobertura(lcov_cobertura, gcov_report, output_trace)\ndiff --git a/build/scripts/create_jcoverage_report.py b/build/scripts/create_jcoverage_report.py\nindex f24827d8ae9e..0dd75bb0a854 100644\n--- a/build/scripts/create_jcoverage_report.py\n+++ b/build/scripts/create_jcoverage_report.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import argparse\n import tarfile\n import zipfile\n@@ -77,12 +78,12 @@ def main(\n                 else:\n                     continue\n \n-                entry.filename = entry.filename.encode('utf-8')\n+                entry.filename = entry.filename\n                 jf.extract(entry, dest)\n     timer.step(\"Jar files extracted\")\n \n     if not agent_disposition:\n-        print >> sys.stderr, 'Can\\'t find jacoco agent. Will not generate html report for java coverage.'\n+        print('Can\\'t find jacoco agent. Will not generate html report for java coverage.', file=sys.stderr)\n \n     if tar_output:\n         report_dir = 'java.report.temp'\ndiff --git a/build/scripts/custom_link_green_mysql.py b/build/scripts/custom_link_green_mysql.py\nindex f754135b8f53..1ebff0adf744 100644\n--- a/build/scripts/custom_link_green_mysql.py\n+++ b/build/scripts/custom_link_green_mysql.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import os\n import shutil\n import subprocess\n@@ -91,7 +92,7 @@ def get_tool(name):\n         name = os.path.basename(sys.argv[0])\n         command = ' '.join(args)\n         message = '{name} failed: {error}\\nCommand line: {command}'\n-        print >> sys.stderr, message.format(**locals())\n+        print(message.format(**locals()), file=sys.stderr)\n \n \n if __name__ == '__main__':\ndiff --git a/build/scripts/decimal_md5.py b/build/scripts/decimal_md5.py\nindex 684d39e7674f..2a125cca60f4 100644\n--- a/build/scripts/decimal_md5.py\n+++ b/build/scripts/decimal_md5.py\n@@ -1,6 +1,7 @@\n #!/usr/bin/env python\n # -*- coding: utf-8 -*-\n \n+from __future__ import print_function\n import hashlib\n import struct\n import sys\n@@ -20,9 +21,9 @@ def ensure_paths_exist(paths):\n         if not os.path.exists(path)\n     )\n     if bad_paths:\n-        print >> sys.stderr, \"decimal_md5 inputs do not exist:\"\n+        print(\"decimal_md5 inputs do not exist:\", file=sys.stderr)\n         for path in bad_paths:\n-            print >> sys.stderr, path\n+            print(path, file=sys.stderr)\n         sys.exit(1)\n \n \ndiff --git a/build/scripts/error.py b/build/scripts/error.py\nindex 9911ee7cc128..0681e4867984 100644\n--- a/build/scripts/error.py\n+++ b/build/scripts/error.py\n@@ -63,14 +63,17 @@ def is_temporary_error(exc):\n         logger.debug(\"Getaddrinfo exception: %s\", exc)\n         return True\n \n-    import urllib2\n+    try:\n+        import urllib2\n+        import httplib\n+    except ImportError:\n+        import urllib.request as urllib2\n+        import http.client as httplib\n \n     if isinstance(exc, urllib2.HTTPError) and exc.code in (429,):\n         logger.debug(\"urllib2.HTTPError: %s\", exc)\n         return True\n \n-    import httplib\n-\n     if isinstance(exc, httplib.IncompleteRead):\n         logger.debug(\"IncompleteRead exception: %s\", exc)\n         return True\ndiff --git a/build/scripts/f2c.py b/build/scripts/f2c.py\nindex 878580e4d467..fc1c1d0f8a13 100644\n--- a/build/scripts/f2c.py\n+++ b/build/scripts/f2c.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n import subprocess\n import argparse\n@@ -49,11 +50,11 @@ def mkdir_p(directory):\n     ret = p.wait()\n \n     if ret:\n-        print >> sys.stderr, 'f2c failed: %s, %s' % (stderr, ret)\n+        print('f2c failed: %s, %s' % (stderr, ret), file=sys.stderr)\n         sys.exit(ret)\n \n     if 'Error' in stderr:\n-        print >> sys.stderr, stderr\n+        print(stderr, file=sys.stderr)\n \n     with open(args.output, 'w') as f:\n         f.write(header)\ndiff --git a/build/scripts/fetch_from.py b/build/scripts/fetch_from.py\nindex ca3e7b3684b7..bd27d75d8ef4 100755\n--- a/build/scripts/fetch_from.py\n+++ b/build/scripts/fetch_from.py\n@@ -1,3 +1,5 @@\n+from __future__ import print_function\n+\n import datetime as dt\n import errno\n import hashlib\n@@ -11,7 +13,15 @@\n import string\n import sys\n import tarfile\n-import urllib2\n+\n+try:\n+    # Python 2\n+    import urllib2 as urllib_request\n+    from urllib2 import HTTPError, URLError\n+except (ImportError, ModuleNotFoundError):\n+    # Python 3\n+    import urllib.request as urllib_request\n+    from urllib.error import HTTPError, URLError\n \n import retry\n \n@@ -122,12 +132,12 @@ def makedirs(path):\n \n def is_temporary(e):\n     def is_broken(e):\n-        return isinstance(e, urllib2.HTTPError) and e.code in (410, 404)\n+        return isinstance(e, HTTPError) and e.code in (410, 404)\n \n     if is_broken(e):\n         return False\n \n-    if isinstance(e, (BadChecksumFetchError, IncompleteFetchError, urllib2.URLError, socket.error)):\n+    if isinstance(e, (BadChecksumFetchError, IncompleteFetchError, URLError, socket.error)):\n         return True\n \n     import error\n@@ -147,7 +157,7 @@ def inner():\n             'value': json.dumps(value),\n         }\n \n-        urllib2.urlopen(\n+        urllib_request.urlopen(\n             'https://back-snowden.qloud.yandex-team.ru/report/add',\n             json.dumps(\n                 [\n@@ -198,8 +208,8 @@ def git_like_hash_with_size(filepath):\n             file_size += len(block)\n             sha.update(block)\n \n-    sha.update('\\0')\n-    sha.update(str(file_size))\n+    sha.update(b'\\0')\n+    sha.update(str(file_size).encode('utf-8'))\n \n     return sha.hexdigest(), file_size\n \n@@ -213,9 +223,9 @@ def printer(chunk):\n         now = dt.datetime.now()\n         if last_stamp[0] + dt.timedelta(seconds=10) < now:\n             if size:\n-                print >> sys.stderr, \"##status##{} - [[imp]]{:.1f}%[[rst]]\".format(\n+                print(\"##status##{} - [[imp]]{:.1f}%[[rst]]\".format(\n                     display_name, 100.0 * sz[0] / size if size else 0\n-                )\n+                ), file=sys.stderr)\n             last_stamp[0] = now\n \n     return printer\n@@ -225,9 +235,9 @@ def fetch_url(url, unpack, resource_file_name, expected_md5=None, expected_sha1=\n     logging.info('Downloading from url %s name %s and expected md5 %s', url, resource_file_name, expected_md5)\n     tmp_file_name = uniq_string_generator()\n \n-    request = urllib2.Request(url, headers={'User-Agent': make_user_agent()})\n-    req = retry.retry_func(lambda: urllib2.urlopen(request, timeout=30), tries=tries, delay=5, backoff=1.57079)\n-    logging.debug('Headers: %s', req.headers.headers)\n+    request = urllib_request.Request(url, headers={'User-Agent': make_user_agent()})\n+    req = retry.retry_func(lambda: urllib_request.urlopen(request, timeout=30), tries=tries, delay=5, backoff=1.57079)\n+    logging.debug('Headers: %s', req.headers)\n     expected_file_size = int(req.headers.get('Content-Length', 0))\n     real_md5 = hashlib.md5()\n     real_sha1 = hashlib.sha1()\n@@ -244,8 +254,8 @@ def fetch_url(url, unpack, resource_file_name, expected_md5=None, expected_sha1=\n \n     real_md5 = real_md5.hexdigest()\n     real_file_size = os.path.getsize(tmp_file_name)\n-    real_sha1.update('\\0')\n-    real_sha1.update(str(real_file_size))\n+    real_sha1.update(b'\\0')\n+    real_sha1.update(str(real_file_size).encode('utf-8'))\n     real_sha1 = real_sha1.hexdigest()\n \n     if unpack:\ndiff --git a/build/scripts/fetch_from_archive.py b/build/scripts/fetch_from_archive.py\nindex e7bbe23362c7..3214b78dc843 100644\n--- a/build/scripts/fetch_from_archive.py\n+++ b/build/scripts/fetch_from_archive.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import os\n import sys\n import logging\n@@ -30,7 +31,7 @@ def main(args):\n         main(args)\n     except Exception as e:\n         logging.exception(e)\n-        print >> sys.stderr, open(args.abs_log_path).read()\n+        print(open(args.abs_log_path).read(), file=sys.stderr)\n         sys.stderr.flush()\n \n         import error\ndiff --git a/build/scripts/fetch_from_mds.py b/build/scripts/fetch_from_mds.py\nindex 3fd264ebb150..559cf8350dd6 100644\n--- a/build/scripts/fetch_from_mds.py\n+++ b/build/scripts/fetch_from_mds.py\n@@ -1,3 +1,6 @@\n+from __future__ import print_function\n+from __future__ import print_function\n+\n import os\n import sys\n import logging\n@@ -43,7 +46,7 @@ def main(args):\n         main(args)\n     except Exception as e:\n         logging.exception(e)\n-        print >> sys.stderr, open(args.abs_log_path).read()\n+        print(open(args.abs_log_path).read(), file=sys.stderr)\n         sys.stderr.flush()\n \n         import error\ndiff --git a/build/scripts/fetch_from_npm.py b/build/scripts/fetch_from_npm.py\nindex 3941b59d436c..d8f0c41f26ab 100644\n--- a/build/scripts/fetch_from_npm.py\n+++ b/build/scripts/fetch_from_npm.py\n@@ -1,3 +1,5 @@\n+from __future__ import print_function\n+from future.utils import raise_\n import os\n import sys\n import time\n@@ -66,7 +68,7 @@ def fetch(tarball_url, sky_id, integrity, integrity_algorithm, file_name, tries=\n             time.sleep(i)\n \n     if exc_info:\n-        raise exc_info[0], exc_info[1], exc_info[2]\n+        raise_(exc_info[0], exc_info[1], exc_info[2])\n \n     return fetched_file\n \n@@ -104,7 +106,7 @@ def main(args):\n         main(args)\n     except Exception as e:\n         logging.exception(e)\n-        print >>sys.stderr, open(args.abs_log_path).read()\n+        print(open(args.abs_log_path).read(), file=sys.stderr)\n         sys.stderr.flush()\n \n         import error\ndiff --git a/build/scripts/fetch_from_sandbox.py b/build/scripts/fetch_from_sandbox.py\nindex 6af180b4b0ff..a8f0fc5997e3 100755\n--- a/build/scripts/fetch_from_sandbox.py\n+++ b/build/scripts/fetch_from_sandbox.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import itertools\n import json\n import logging\n@@ -210,7 +211,10 @@ def iter_tries():\n             time.sleep(i)\n     else:\n         if exc_info:\n-            raise exc_info[0], exc_info[1], exc_info[2]\n+            if sys.version_info[0] == 2:\n+                raise exc_info[0], exc_info[1], exc_info[2]\n+            else:\n+                raise exc_info[1].with_traceback(exc_info[2])\n         else:\n             raise Exception(\"No available protocol and/or server to fetch resource\")\n \n@@ -265,7 +269,7 @@ def main(args):\n         main(args)\n     except Exception as e:\n         logging.exception(e)\n-        print >>sys.stderr, open(args.abs_log_path).read()\n+        print(open(args.abs_log_path).read(), file=sys.stderr)\n         sys.stderr.flush()\n \n         import error\ndiff --git a/build/scripts/gen_java_codenav_entry.py b/build/scripts/gen_java_codenav_entry.py\nindex 2959dc484356..0429fc5398c6 100644\n--- a/build/scripts/gen_java_codenav_entry.py\n+++ b/build/scripts/gen_java_codenav_entry.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import argparse\n import datetime\n import os\n@@ -20,23 +21,23 @@ def just_do_it(java, kythe, kythe_to_proto, out_name, binding_only, kindexes):\n     open(temp_out_name, 'w').close()\n     start = datetime.datetime.now()\n     for kindex in kindex_inputs:\n-        print >> sys.stderr, '[INFO] Processing:', kindex\n+        print('[INFO] Processing:', kindex, file=sys.stderr)\n         indexer_start = datetime.datetime.now()\n         p = subprocess.Popen(\n             [java, '-jar', os.path.join(kythe, 'indexers/java_indexer.jar'), kindex], stdout=subprocess.PIPE\n         )\n         indexer_out, _ = p.communicate()\n-        print >> sys.stderr, '[INFO] Indexer execution time:', (\n+        print('[INFO] Indexer execution time:', (\n             datetime.datetime.now() - indexer_start\n-        ).total_seconds(), 'seconds'\n+        ).total_seconds(), 'seconds', file=sys.stderr)\n         if p.returncode:\n             raise Exception('java_indexer failed with exit code {}'.format(p.returncode))\n         dedup_start = datetime.datetime.now()\n         p = subprocess.Popen([os.path.join(kythe, 'tools/dedup_stream')], stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n         dedup_out, _ = p.communicate(indexer_out)\n-        print >> sys.stderr, '[INFO] Dedup execution time:', (\n+        print('[INFO] Dedup execution time:', (\n             datetime.datetime.now() - dedup_start\n-        ).total_seconds(), 'seconds'\n+        ).total_seconds(), 'seconds', file=sys.stderr)\n         if p.returncode:\n             raise Exception('dedup_stream failed with exit code {}'.format(p.returncode))\n         entrystream_start = datetime.datetime.now()\n@@ -48,18 +49,18 @@ def just_do_it(java, kythe, kythe_to_proto, out_name, binding_only, kindexes):\n         p.communicate(dedup_out)\n         if p.returncode:\n             raise Exception('entrystream failed with exit code {}'.format(p.returncode))\n-        print >> sys.stderr, '[INFO] Entrystream execution time:', (\n+        print('[INFO] Entrystream execution time:', (\n             datetime.datetime.now() - entrystream_start\n-        ).total_seconds(), 'seconds'\n+        ).total_seconds(), 'seconds', file=sys.stderr)\n     preprocess_start = datetime.datetime.now()\n     subprocess.check_call(\n         [kythe_to_proto, '--preprocess-entry', '--entries', temp_out_name, '--out', out_name]\n         + (['--only-binding-data'] if binding_only else [])\n     )\n-    print >> sys.stderr, '[INFO] Preprocessing execution time:', (\n+    print('[INFO] Preprocessing execution time:', (\n         datetime.datetime.now() - preprocess_start\n-    ).total_seconds(), 'seconds'\n-    print >> sys.stderr, '[INFO] Total execution time:', (datetime.datetime.now() - start).total_seconds(), 'seconds'\n+    ).total_seconds(), 'seconds', file=sys.stderr)\n+    print('[INFO] Total execution time:', (datetime.datetime.now() - start).total_seconds(), 'seconds', file=sys.stderr)\n \n \n if __name__ == '__main__':\ndiff --git a/build/scripts/gen_py3_reg.py b/build/scripts/gen_py3_reg.py\nindex ff6bf0de56db..ee6c6baf9b1e 100644\n--- a/build/scripts/gen_py3_reg.py\n+++ b/build/scripts/gen_py3_reg.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n \n template = '''\n@@ -24,8 +25,8 @@ def mangle(name):\n \n if __name__ == '__main__':\n     if len(sys.argv) != 3:\n-        print >> sys.stderr, 'Usage: <path/to/gen_py_reg.py> <python_module_name> <output_file>'\n-        print >> sys.stderr, 'Passed: ' + ' '.join(sys.argv)\n+        print('Usage: <path/to/gen_py_reg.py> <python_module_name> <output_file>', file=sys.stderr)\n+        print('Passed: ' + ' '.join(sys.argv), file=sys.stderr)\n         sys.exit(1)\n \n     with open(sys.argv[2], 'w') as f:\ndiff --git a/build/scripts/gen_py_reg.py b/build/scripts/gen_py_reg.py\nindex 0f38dfffe358..be5241896472 100644\n--- a/build/scripts/gen_py_reg.py\n+++ b/build/scripts/gen_py_reg.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n \n template = '''\n@@ -22,8 +23,8 @@ def mangle(name):\n \n if __name__ == '__main__':\n     if len(sys.argv) != 3:\n-        print >> sys.stderr, 'Usage: <path/to/gen_py_reg.py> <python_module_name> <output_file>'\n-        print >> sys.stderr, 'Passed: ' + ' '.join(sys.argv)\n+        print('Usage: <path/to/gen_py_reg.py> <python_module_name> <output_file>', file=sys.stderr)\n+        print('Passed: ' + ' '.join(sys.argv), file=sys.stderr)\n         sys.exit(1)\n \n     with open(sys.argv[2], 'w') as f:\ndiff --git a/build/scripts/go_tool.py b/build/scripts/go_tool.py\nindex 39d55df4d30f..f1dbc9731e3f 100644\n--- a/build/scripts/go_tool.py\n+++ b/build/scripts/go_tool.py\n@@ -75,8 +75,14 @@ def preprocess_args(args):\n     args.output_root = os.path.normpath(args.output_root)\n     args.import_map = {}\n     args.module_map = {}\n+\n+    def is_valid_cgo_peer(peer):\n+        if peer.endswith('.fake.pkg') or peer.endswith('.fake'):\n+            return False\n+        return True\n+\n     if args.cgo_peers:\n-        args.cgo_peers = [x for x in args.cgo_peers if not x.endswith('.fake.pkg')]\n+        args.cgo_peers = list(filter(is_valid_cgo_peer, args.cgo_peers))\n \n     srcs = []\n     for f in args.srcs:\ndiff --git a/build/scripts/ios_wrapper.py b/build/scripts/ios_wrapper.py\nindex eeb0a78d26cb..f8bdcce0a2ba 100644\n--- a/build/scripts/ios_wrapper.py\n+++ b/build/scripts/ios_wrapper.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import errno\n import json\n import os\n@@ -49,13 +50,13 @@ def just_do_it(args):\n         elif i.endswith('.strings_tar'):\n             strings.append(i)\n         else:\n-            print >> sys.stderr, 'Unknown input:', i, 'ignoring'\n+            print('Unknown input:', i, 'ignoring', file=sys.stderr)\n     if not plists:\n         raise Exception(\"Can't find plist files\")\n     if not plists[0].endswith('.plist'):\n-        print >> sys.stderr, \"Main plist file can be defined incorretly\"\n+        print(\"Main plist file can be defined incorretly\", file=sys.stderr)\n     if not storyboards:\n-        print >> sys.stderr, \"Storyboards list are empty\"\n+        print(\"Storyboards list are empty\", file=sys.stderr)\n     if len(signs) > 1:\n         raise Exception(\"Too many .xcent files\")\n     app_dir = os.path.join(module_dir, app_name + '.app')\ndiff --git a/build/scripts/link_dyn_lib.py b/build/scripts/link_dyn_lib.py\nindex 72937544b638..3e62f4c407c0 100644\n--- a/build/scripts/link_dyn_lib.py\n+++ b/build/scripts/link_dyn_lib.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n import os\n import subprocess\n@@ -264,8 +265,8 @@ def parse_args():\n     thinlto_cache.postprocess(opts)\n \n     if proc.returncode:\n-        print >> sys.stderr, 'linker has failed with retcode:', proc.returncode\n-        print >> sys.stderr, 'linker command:', shlex_join(cmd)\n+        print('linker has failed with retcode:', proc.returncode, file=sys.stderr)\n+        print('linker command:', shlex_join(cmd), file=sys.stderr)\n         sys.exit(proc.returncode)\n \n     if opts.fix_elf:\n@@ -274,8 +275,8 @@ def parse_args():\n         proc.communicate()\n \n         if proc.returncode:\n-            print >> sys.stderr, 'fix_elf has failed with retcode:', proc.returncode\n-            print >> sys.stderr, 'fix_elf command:', shlex_join(cmd)\n+            print('fix_elf has failed with retcode:', proc.returncode, file=sys.stderr)\n+            print('fix_elf command:', shlex_join(cmd), file=sys.stderr)\n             sys.exit(proc.returncode)\n \n     if opts.soname and opts.soname != opts.target:\ndiff --git a/build/scripts/link_fat_obj.py b/build/scripts/link_fat_obj.py\nindex ea143ec90230..aeafea58c4c9 100644\n--- a/build/scripts/link_fat_obj.py\n+++ b/build/scripts/link_fat_obj.py\n@@ -76,13 +76,8 @@ def main():\n     linker = groups['linker']\n     archiver = groups['archiver']\n \n-    if 'YA_XCODE' in str(sys.argv):\n-        no_pie = '-Wl,-no_pie'\n-    else:\n-        no_pie = '-Wl,-no-pie'\n-\n     do_link = (\n-        linker + ['-o', obj_output, '-Wl,-r', '-nodefaultlibs', '-nostartfiles', no_pie] + global_srcs + auto_input\n+        linker + ['-o', obj_output, '-Wl,-r', '-nodefaultlibs', '-nostartfiles', '-Wl,-no-pie'] + global_srcs + auto_input\n     )\n     do_archive = archiver + [lib_output] + peers\n     do_globals = None\ndiff --git a/build/scripts/list.py b/build/scripts/list.py\nindex 7c3b2ae69504..5c8390c52c9d 100644\n--- a/build/scripts/list.py\n+++ b/build/scripts/list.py\n@@ -1,4 +1,5 @@\n-import sys\r\n-\r\n-if __name__ == \"__main__\":\r\n-    print(' '.join(sys.argv[1:]))\r\n+from __future__ import print_function\n+import sys\n+\n+if __name__ == \"__main__\":\n+    print(' '.join(sys.argv[1:]))\ndiff --git a/build/scripts/mkver.py b/build/scripts/mkver.py\nindex 7bdbb8851426..2101032770cc 100755\n--- a/build/scripts/mkver.py\n+++ b/build/scripts/mkver.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n \n if __name__ == '__main__':\ndiff --git a/build/scripts/pack_ios.py b/build/scripts/pack_ios.py\nindex 350220be7b64..3ecd18f18860 100644\n--- a/build/scripts/pack_ios.py\n+++ b/build/scripts/pack_ios.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import argparse\n import os\n import shutil\n@@ -15,7 +16,7 @@ def just_do_it():\n     args = parser.parse_args()\n     app_tar = [p for p in args.peers if p.endswith('.ios.interface')]\n     if not app_tar:\n-        print >> sys.stderr, 'No one IOS_INTERFACE module found'\n+        print('No one IOS_INTERFACE module found', file=sys.stderr)\n         shutil.copyfile(args.binary, os.path.join(args.temp_dir, 'bin'))\n         if os.path.exists(args.target):\n             os.remove(args.target)\n@@ -27,7 +28,7 @@ def just_do_it():\n     if len(app_tar) > 1:\n         app_tar = [p for p in args.peers if not p.endswith('.default.ios.interface')]\n     if len(app_tar) > 1:\n-        print >> sys.stderr, 'Many IOS_INTERFACE modules found, {} will be used'.format(app_tar[-1])\n+        print('Many IOS_INTERFACE modules found, {} will be used'.format(app_tar[-1]), file=sys.stderr)\n     app_tar = app_tar[-1]\n     with tarfile.open(app_tar) as tf:\n         tf.extractall(args.temp_dir)\ndiff --git a/build/scripts/pack_jcoverage_resources.py b/build/scripts/pack_jcoverage_resources.py\nindex 5881d9015358..6ed3b1320dfd 100644\n--- a/build/scripts/pack_jcoverage_resources.py\n+++ b/build/scripts/pack_jcoverage_resources.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n import tarfile\n import os\n@@ -11,7 +12,7 @@ def main(args):\n     res = subprocess.call(args[args.index('-end') + 1 :])\n \n     if not os.path.exists(report_file):\n-        print >> sys.stderr, 'Can\\'t find jacoco exec file'\n+        print('Can\\'t find jacoco exec file', file=sys.stderr)\n         return res\n \n     with tarfile.open(output_file, 'w') as outf:\ndiff --git a/build/scripts/python_yndexer.py b/build/scripts/python_yndexer.py\nindex 3180665387d4..276ed20a2792 100644\n--- a/build/scripts/python_yndexer.py\n+++ b/build/scripts/python_yndexer.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import os\n import sys\n import threading\n@@ -49,5 +50,5 @@ def wait(self, timeout):\n     result = process.wait(timeout=timeout)\n \n     if result != 0:\n-        print >> sys.stderr, 'Yndexing process finished with code', result\n+        print('Yndexing process finished with code', result, file=sys.stderr)\n         touch(output_file)\ndiff --git a/build/scripts/run_ios_simulator.py b/build/scripts/run_ios_simulator.py\nindex b69ef81ccb63..576ef9cee33a 100644\n--- a/build/scripts/run_ios_simulator.py\n+++ b/build/scripts/run_ios_simulator.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import argparse\n import json\n import os\n@@ -55,7 +56,7 @@ def action_spawn(simctl, profiles, device_dir, name, args):\n def action_kill(simctl, profiles, device_dir, name):\n     device = filter(lambda x: x[\"name\"] == name, get_all_devices(simctl, profiles, device_dir))\n     if not device:\n-        print >> sys.stderr, \"Device named {} not found; do nothing\".format(name)\n+        print(\"Device named {} not found; do nothing\".format(name), file=sys.stderr)\n         return\n     if len(device) > 1:\n         raise Exception(\"Can't remove: too many devices named {}:\\n{}\".format(name, '\\n'.join(i for i in device)))\ndiff --git a/build/scripts/run_msvc_wine.py b/build/scripts/run_msvc_wine.py\nindex 38ffa1ffb0f7..3a498d7388fd 100644\n--- a/build/scripts/run_msvc_wine.py\n+++ b/build/scripts/run_msvc_wine.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n import os\n import re\n@@ -41,7 +42,7 @@ def run_subprocess_with_timeout(timeout, args):\n             stdout, stderr = p.communicate(timeout=timeout)\n             return p, stdout, stderr\n         except subprocess.TimeoutExpired as e:\n-            print >> sys.stderr, 'timeout running {0}, error {1}, delay {2} seconds'.format(args, str(e), delay)\n+            print('timeout running {0}, error {1}, delay {2} seconds'.format(args, str(e), delay), file=sys.stderr)\n             if p is not None:\n                 try:\n                     p.kill()\n@@ -93,7 +94,7 @@ def call_wine_cmd_once(wine, cmd, env, mode):\n             error = e\n \n     if error is not None:\n-        print >> sys.stderr, 'Output {} already exists and we have failed to remove it: {}'.format(output, error)\n+        print('Output {} already exists and we have failed to remove it: {}'.format(output, error), file=sys.stderr)\n \n     # print >>sys.stderr, cmd, env, wine\n \n@@ -164,7 +165,7 @@ def filter_lines():\n     stdout_and_stderr = '\\n'.join(filter_lines()).strip()\n \n     if stdout_and_stderr:\n-        print >> sys.stderr, stdout_and_stderr\n+        print(stdout_and_stderr, file=sys.stderr)\n \n     return return_code\n \n@@ -175,7 +176,7 @@ def prepare_vc(fr, to):\n         to_p = os.path.join(to, p)\n \n         if not os.path.exists(to_p):\n-            print >> sys.stderr, 'install %s -> %s' % (fr_p, to_p)\n+            print('install %s -> %s' % (fr_p, to_p), file=sys.stderr)\n \n             os.link(fr_p, to_p)\n \n@@ -196,7 +197,7 @@ def run_slave():\n         try:\n             return call_wine_cmd_once([wine], args['cmd'], args['env'], args['mode'])\n         except Exception as e:\n-            print >> sys.stderr, '%s, will retry in %s' % (str(e), tout)\n+            print('%s, will retry in %s' % (str(e), tout), file=sys.stderr)\n \n             time.sleep(tout)\n             tout = min(2 * tout, 4)\n@@ -508,7 +509,7 @@ def print_err_log(log):\n             return\n         if mode == 'cxx':\n             log = colorize(log)\n-        print >> sys.stderr, log\n+        print(log, file=sys.stderr)\n \n     tout = 200\n \n@@ -517,26 +518,26 @@ def print_err_log(log):\n \n         if rc in (-signal.SIGALRM, signal.SIGALRM):\n             print_err_log(out)\n-            print >> sys.stderr, '##append_tag##time out'\n+            print('##append_tag##time out', file=sys.stderr)\n         elif out and ' stack overflow ' in out:\n-            print >> sys.stderr, '##append_tag##stack overflow'\n+            print('##append_tag##stack overflow', file=sys.stderr)\n         elif out and 'recvmsg: Connection reset by peer' in out:\n-            print >> sys.stderr, '##append_tag##wine gone'\n+            print('##append_tag##wine gone', file=sys.stderr)\n         elif out and 'D8037' in out:\n-            print >> sys.stderr, '##append_tag##repair wine'\n+            print('##append_tag##repair wine', file=sys.stderr)\n \n             try:\n                 os.unlink(os.path.join(os.environ['WINEPREFIX'], '.update-timestamp'))\n             except Exception as e:\n-                print >> sys.stderr, e\n+                print(e, file=sys.stderr)\n \n         else:\n             print_err_log(out)\n \n             # non-zero return code - bad, return it immediately\n             if rc:\n-                print >> sys.stderr, '##win_cmd##' + ' '.join(cmd)\n-                print >> sys.stderr, '##args##' + ' '.join(free_args)\n+                print('##win_cmd##' + ' '.join(cmd), file=sys.stderr)\n+                print('##args##' + ' '.join(free_args), file=sys.stderr)\n                 return rc\n \n             # check for output existence(if we expect it!) and real length\n@@ -545,7 +546,7 @@ def print_err_log(log):\n                     return 0\n                 else:\n                     # retry!\n-                    print >> sys.stderr, '##append_tag##no output'\n+                    print('##append_tag##no output', file=sys.stderr)\n             else:\n                 return 0\n \n@@ -575,7 +576,7 @@ def main():\n     except KeyboardInterrupt:\n         sys.exit(4)\n     except Exception as e:\n-        print >> sys.stderr, str(e)\n+        print(str(e), file=sys.stderr)\n \n         sys.exit(3)\n \ndiff --git a/build/scripts/symlink.py b/build/scripts/symlink.py\nindex 9636bf39293b..a19891df40a1 100755\n--- a/build/scripts/symlink.py\n+++ b/build/scripts/symlink.py\n@@ -1,5 +1,6 @@\n #!/usr/bin/env python\n \n+from __future__ import print_function\n import sys\n import os\n import platform\n@@ -8,7 +9,7 @@\n \n def symlink():\n     if len(sys.argv) < 3:\n-        print >> sys.stderr, \"Usage: symlink.py <source> <target>\"\n+        print(\"Usage: symlink.py <source> <target>\", file=sys.stderr)\n         sys.exit(1)\n \n     source = sys.argv[1]\ndiff --git a/build/scripts/with_crash_on_timeout.py b/build/scripts/with_crash_on_timeout.py\nindex bde864ed29ca..915ed51c516c 100644\n--- a/build/scripts/with_crash_on_timeout.py\n+++ b/build/scripts/with_crash_on_timeout.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n # TODO prettyboy remove after ya-bin release\n \n import os\n@@ -13,7 +14,7 @@ def main(args):\n     with open(meta_path) as f:\n         meta_info = json.loads(f.read())\n         if meta_info[\"exit_code\"] == timeout_code:\n-            print >> sys.stderr, meta_info[\"project\"], 'crashed by timeout, use --test-disable-timeout option'\n+            print(meta_info[\"project\"], 'crashed by timeout, use --test-disable-timeout option', file=sys.stderr)\n             return 1\n     return 0\n \ndiff --git a/build/scripts/yndexer.py b/build/scripts/yndexer.py\nindex c8127de711dd..4e766e0fc866 100644\n--- a/build/scripts/yndexer.py\n+++ b/build/scripts/yndexer.py\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n import sys\n import subprocess\n import threading\n@@ -86,5 +87,5 @@ def wait(self, timeout):\n     result = process.wait(timeout=timeout)\n \n     if result != 0:\n-        print >> sys.stderr, 'Yndexing process finished with code', result\n+        print('Yndexing process finished with code', result, file=sys.stderr)\n         touch(output_file)\ndiff --git a/build/ymake.core.conf b/build/ymake.core.conf\nindex 388705f63dd2..0916dddbbab1 100644\n--- a/build/ymake.core.conf\n+++ b/build/ymake.core.conf\n@@ -133,6 +133,8 @@ when ($USE_PREBUILT_TOOLS == \"yes\") {\n     }\n }\n \n+CPP_LINTERS_DEFAULT_CONFIGS=build/config/tests/cpp_style/default_configs.json\n+\n ### @usage: FUNCTION_ORDERING_FILE(VAR_NAME)\n ###\n ### Select file for function reordering. Works only with lld linker.\n@@ -3029,22 +3031,22 @@ macro _SRC(\"rodata\", SRC, SRCFLAGS...) {\n     .SEM=target_rodata_sources PRIVATE ${input:SRC} ${hide;output;suf=${OBJ_SUF}.o:SRC} ${hide;input:\"build/scripts/rodata2cpp.py\"} && target_macroses-ITEM && target_macroses-macro target_rodata_sources && target_macroses-args PRIVATE ${input:SRC} ${hide;output;suf=${OBJ_SUF}.o:SRC} ${hide;input:\"build/scripts/rodata2cpp.py\"}\n }\n \n-macro _SRS_S_ASM(SRC, SRCFLAGS...) {\n-    .CMD=$C_COMPILER $C_FLAGS_PLATFORM $CFLAGS $SFLAGS $SRCFLAGS -c -o ${output;suf=.o:SRC} ${input:SRC} $TOOLCHAIN_ENV ${pre=-I:_C__INCLUDE}\n+macro _SRC_S_ASM(SRC, SRCFLAGS...) {\n+    .CMD=$C_COMPILER $C_FLAGS_PLATFORM $CFLAGS $SFLAGS $SRCFLAGS -c -o ${output;suf=.o:SRC} ${input:SRC} $TOOLCHAIN_ENV ${pre=-I:_C__INCLUDE} ${hide;kv:\"p AS\"} ${hide;kv:\"pc light-green\"}\n     .SEM=target_sources PRIVATE ${input:SRC} ${hide;output;suf=${OBJ_SUF}.o:SRC} $_ADD_EXTRA_FLAGS($SRCFLAGS) && target_options-privates-ITEM && target_options-privates-option target_sources && target_options-privates-args ${input:SRC} ${hide;output;suf=${OBJ_SUF}.o:SRC} && add_language ASM && project_languages ASM\n }\n \n # tag:src-processing\n macro _SRC(\"S\", SRC, SRCFLAGS...) {\n-    .CMD=$_SRS_S_ASM($SRC $SRCFLAGS)\n-    .SEM=$_SRS_S_ASM($SRC, $SRCFLAGS)\n+    .CMD=$_SRC_S_ASM($SRC $SRCFLAGS)\n+    .SEM=$_SRC_S_ASM($SRC, $SRCFLAGS)\n     .STRUCT_CMD=yes\n }\n \n # tag:src-processing\n macro _SRC(\"s\", SRC, SRCFLAGS...) {\n-    .CMD=$_SRS_S_ASM($SRC $SRCFLAGS)\n-    .SEM=$_SRS_S_ASM($SRC, $SRCFLAGS)\n+    .CMD=$_SRC_S_ASM($SRC $SRCFLAGS)\n+    .SEM=$_SRC_S_ASM($SRC, $SRCFLAGS)\n     .STRUCT_CMD=yes\n }\n \n@@ -3272,7 +3274,6 @@ when ($IDE_MSVS_CALL == \"yes\") {\n     NVCC_CFLAGS+=/Fd$(TEMP)\n }\n \n-NVCC_STD_VER=17\n when ($MSVC == \"yes\") {\n     NVCC_STD=/std:c++${NVCC_STD_VER}\n }\n@@ -4934,7 +4935,7 @@ NASM_FLAGS=\n \n # tag:nasm-specific\n macro _SRC_nasm_helper(SRC, SRCFLAGS...) {\n-    .CMD=${NASM_RESOURCE_GLOBAL}/bin/nasm -f ${_YASM_FMT_VALUE}${HARDWARE_ARCH} -D ${pre=_;suf=_:HARDWARE_TYPE} $NASM_FLAGS ${pre=-I :_ASM__INCLUDE} $SRCFLAGS -o ${output;noext;suf=${OBJECT_SUF}:SRC} ${SRC}\n+    .CMD=${NASM_RESOURCE_GLOBAL}/bin/nasm -f ${_YASM_FMT_VALUE}${HARDWARE_ARCH} -D ${pre=_;suf=_:HARDWARE_TYPE} $NASM_FLAGS ${pre=-I :_ASM__INCLUDE} $SRCFLAGS -o ${output;noext;suf=${OBJECT_SUF}:SRC} ${SRC} ${hide;kv:\"p AS\"} ${hide;kv:\"pc light-green\"}\n }\n \n # tag:nasm-specific\n@@ -5671,6 +5672,7 @@ when ($CUDA11) {\n     CUDA_VERSION=11.4\n     CUDNN_VERSION=8.0.5\n     TENSORRT_VERSION=7\n+    NVCC_STD_VER=17\n }\n \n when ($CUDA12) {\n@@ -5678,6 +5680,7 @@ when ($CUDA12) {\n     CUDNN_VERSION=8.6.0\n     TENSORRT_VERSION=8\n     CUDA_ARCHITECTURES=\n+    NVCC_STD_VER=20\n }\n \n when ($TENSORFLOW_WITH_CUDA) {\n@@ -5830,33 +5833,30 @@ macro YA_CONF_JSON(File) {\n }\n \n # tag:internal\n-# Don't use directly - wrap with custom macros\n-macro ADD_LINTER_CHECK(CheckName, Linter, DEPENDS[], EXCLUDE[], FILES[], CONFIGS[]) {\n-    SET(_FILES_VAR uniq_${hash:VAR_SALT})\n-    _GLOB($_FILES_VAR $FILES EXCLUDE $EXCLUDE)\n-    _ADD_LINTER_CHECK($CheckName $Linter ${pre=DEPENDS :DEPENDS} FILES $$_FILES_VAR CONFIGS $CONFIGS)\n-}\n-\n-# tag:internal\n-# Draft. Don't use.\n-macro _CPP_STYLE(EXCLUDE[], Files...) {\n-    ADD_LINTER_CHECK(cpp_style tools/cpp_style_checker/cpp_style_checker DEPENDS contrib/libs/clang16/tools/clang-format EXCLUDE $EXCLUDE FILES $Files CONFIGS devtools/ya/handlers/style/style_config)\n+### @usage: _STYLE_CPP([CONFIG])\n+###\n+### Proxy. Don't use. Call _ADD_CPP_LINTER_CHECK directly if you need a new macro, see STYLE_CPP\n+macro _STYLE_CPP(CONFIG...) {\n+    _ADD_CPP_LINTER_CHECK(NAME clang_format LINTER tools/cpp_style_checker/cpp_style_checker DEPENDS contrib/libs/clang16/tools/clang-format CONFIGS $CPP_LINTERS_DEFAULT_CONFIGS CUSTOM_CONFIG $CONFIG)\n }\n \n # tag:internal\n-# A convenient proxy\n-macro _STYLE_CPP(CONFIG) {\n+### @usage: _ADD_CPP_LINTER_CHECK(NAME name LINTER linter [DEPENDS deps] CONFIGS configs_file [GLOBAL_RESOURCES gr] [FILE_PROCESSING_TIME fpt] [EXTRA_PARAMS params] [CUSTOM_CONFIG cc])\n+###\n+### Triggers respective plugin\n+macro _ADD_CPP_LINTER_CHECK(Args...) {\n     SET(USE_ALL_SRCS yes)\n     HEADERS(.)\n-    _ADD_LINTER_CHECK(cpp_style tools/cpp_style_checker/cpp_style_checker DEPENDS contrib/libs/clang16/tools/clang-format CONFIGS $CONFIG)\n+    SET_APPEND(_MAKEFILE_INCLUDE_LIKE_DEPS $CPP_LINTERS_DEFAULT_CONFIGS)\n }\n \n-#tag:test\n+# tag:test\n ### @usage STYLE_CPP()\n ###\n ### Run 'ya tool clang-format' test on all cpp sources and headers of the current module\n macro STYLE_CPP() {\n-  _STYLE_CPP(\"build/config/tests/cpp_style/config.clang-format\")\n+    .ALLOWED_IN_COMMON=yes\n+    _ADD_CPP_LINTER_CHECK(NAME clang_format LINTER tools/cpp_style_checker/cpp_style_checker DEPENDS contrib/libs/clang16/tools/clang-format CONFIGS $CPP_LINTERS_DEFAULT_CONFIGS)\n }\n \n ### @usage: HEADERS([Dir1 Dir2 ...])\ndiff --git a/build/ymake_conf.py b/build/ymake_conf.py\nindex 670ff243378f..6e53ddf856c4 100755\n--- a/build/ymake_conf.py\n+++ b/build/ymake_conf.py\n@@ -2175,11 +2175,7 @@ def print_linker(self):\n         linker_lib = self.tc.lib\n \n         emit('_MSVC_LIB', '\"{}\"'.format(linker_lib))\n-        emit('_MSVC_LIB_OLD_UNQUOTED', linker_lib)\n-        emit('_MSVC_LIB_OLD', '${quo:_MSVC_LIB_OLD_UNQUOTED}')\n         emit('_MSVC_LINK', '\"{}\"'.format(linker))\n-        emit('_MSVC_LINK_OLD_UNQUOTED', linker)\n-        emit('_MSVC_LINK_OLD', '${quo:_MSVC_LINK_OLD_UNQUOTED}')\n \n         if self.build.is_release:\n             emit('LINK_EXE_FLAGS_PER_TYPE', '$LINK_EXE_FLAGS_RELEASE')\n@@ -2425,6 +2421,13 @@ def print_variables(self):\n         emit('NVCC_ENV', '${env:_NVCC_ENV}')\n         emit('_NVCC_ENV', 'PATH=$CUDA_ROOT/nvvm/bin:$CUDA_ROOT/bin')\n \n+        if self.cuda_version.value.startswith('10.'):\n+            emit('NVCC_STD_VER', '17')\n+        elif self.cuda_version.value.startswith('11.'):\n+            emit('NVCC_STD_VER', '17')\n+        else:\n+            emit('NVCC_STD_VER', '20')\n+\n     def print_macros(self):\n         mtime = ' '\n         custom_pid = ' '\n@@ -2453,7 +2456,7 @@ def have_cuda_in_arcadia(self):\n             if not self.cuda_version.from_user:\n                 return False\n \n-        if self.cuda_version.value in ('11.4', '11.8', '12.1', '12.2'):\n+        if self.cuda_version.value in ('11.4', '11.8', '12.1', '12.2', '12.6'):\n             return True\n         elif self.cuda_version.value in ('10.2', '11.4.19') and target.is_linux_armv8:\n             return True\ndiff --git a/contrib/libs/croaring/include/roaring/memory.h b/contrib/libs/croaring/include/roaring/memory.h\nindex ad9a64f5e22b..6ec3d348dcf2 100644\n--- a/contrib/libs/croaring/include/roaring/memory.h\n+++ b/contrib/libs/croaring/include/roaring/memory.h\n@@ -1,12 +1,12 @@\n #ifndef INCLUDE_ROARING_MEMORY_H_\n #define INCLUDE_ROARING_MEMORY_H_\n \n+#include <stddef.h>  // for size_t\n+\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n \n-#include <stddef.h>  // for size_t\n-\n typedef void* (*roaring_malloc_p)(size_t);\n typedef void* (*roaring_realloc_p)(void*, size_t);\n typedef void* (*roaring_calloc_p)(size_t, size_t);\ndiff --git a/contrib/libs/croaring/include/roaring/portability.h b/contrib/libs/croaring/include/roaring/portability.h\nindex 5aebe193c9c3..897feedbf8b9 100644\n--- a/contrib/libs/croaring/include/roaring/portability.h\n+++ b/contrib/libs/croaring/include/roaring/portability.h\n@@ -585,6 +585,8 @@ static inline uint32_t croaring_refcount_get(const croaring_refcount_t *val) {\n \n #if defined(__GNUC__) || defined(__clang__)\n #define CROARING_DEPRECATED __attribute__((deprecated))\n+#elif defined(_MSC_VER)\n+#define CROARING_DEPRECATED __declspec(deprecated)\n #else\n #define CROARING_DEPRECATED\n #endif  // defined(__GNUC__) || defined(__clang__)\ndiff --git a/contrib/libs/croaring/include/roaring/roaring64.h b/contrib/libs/croaring/include/roaring/roaring64.h\nindex c71bccb91790..fd89feb5e08b 100644\n--- a/contrib/libs/croaring/include/roaring/roaring64.h\n+++ b/contrib/libs/croaring/include/roaring/roaring64.h\n@@ -1,6 +1,7 @@\n #ifndef ROARING64_H\n #define ROARING64_H\n \n+#include <roaring.h>\n #include <stdbool.h>\n #include <stddef.h>\n #include <stdint.h>\n@@ -92,6 +93,14 @@ roaring64_bitmap_t *roaring64_bitmap_of_ptr(size_t n_args,\n         &((const uint64_t[]){0, __VA_ARGS__})[1])\n #endif\n \n+/**\n+ * Create a new bitmap by moving containers from a 32 bit roaring bitmap.\n+ *\n+ * After calling this function, the original bitmap will be empty, and the\n+ * returned bitmap will contain all the values from the original bitmap.\n+ */\n+roaring64_bitmap_t *roaring64_bitmap_move_from_roaring32(roaring_bitmap_t *r);\n+\n /**\n  * Create a new bitmap containing all the values in [min, max) that are at a\n  * distance k*step from min.\ndiff --git a/contrib/libs/croaring/include/roaring/roaring_version.h b/contrib/libs/croaring/include/roaring/roaring_version.h\nindex 3f7519449e53..0d136bbbd3d4 100644\n--- a/contrib/libs/croaring/include/roaring/roaring_version.h\n+++ b/contrib/libs/croaring/include/roaring/roaring_version.h\n@@ -2,11 +2,11 @@\n // /include/roaring/roaring_version.h automatically generated by release.py, do not change by hand\n #ifndef ROARING_INCLUDE_ROARING_VERSION\n #define ROARING_INCLUDE_ROARING_VERSION\n-#define ROARING_VERSION \"4.1.1\"\n+#define ROARING_VERSION \"4.1.2\"\n enum {\n     ROARING_VERSION_MAJOR = 4,\n     ROARING_VERSION_MINOR = 1,\n-    ROARING_VERSION_REVISION = 1\n+    ROARING_VERSION_REVISION = 2\n };\n #endif // ROARING_INCLUDE_ROARING_VERSION\n // clang-format on\n\\ No newline at end of file\ndiff --git a/contrib/libs/croaring/src/roaring64.c b/contrib/libs/croaring/src/roaring64.c\nindex d41507b3c4dd..e63d3d965ca0 100644\n--- a/contrib/libs/croaring/src/roaring64.c\n+++ b/contrib/libs/croaring/src/roaring64.c\n@@ -178,6 +178,43 @@ roaring64_bitmap_t *roaring64_bitmap_copy(const roaring64_bitmap_t *r) {\n     return result;\n }\n \n+/**\n+ * Steal the containers from a 32-bit bitmap and insert them into a 64-bit\n+ * bitmap (with an offset)\n+ *\n+ * After calling this function, the original bitmap will be empty, and the\n+ * returned bitmap will contain all the values from the original bitmap.\n+ */\n+static void move_from_roaring32_offset(roaring64_bitmap_t *dst,\n+                                       roaring_bitmap_t *src,\n+                                       uint32_t high_bits) {\n+    uint64_t key_base = ((uint64_t)high_bits) << 32;\n+    uint32_t r32_size = ra_get_size(&src->high_low_container);\n+    for (uint32_t i = 0; i < r32_size; ++i) {\n+        uint16_t key = ra_get_key_at_index(&src->high_low_container, i);\n+        uint8_t typecode;\n+        container_t *container = ra_get_container_at_index(\n+            &src->high_low_container, (uint16_t)i, &typecode);\n+\n+        uint8_t high48[ART_KEY_BYTES];\n+        uint64_t high48_bits = key_base | ((uint64_t)key << 16);\n+        split_key(high48_bits, high48);\n+        leaf_t *leaf = create_leaf(container, typecode);\n+        art_insert(&dst->art, high48, (art_val_t *)leaf);\n+    }\n+    // We stole all the containers, so leave behind a size of zero\n+    src->high_low_container.size = 0;\n+}\n+\n+roaring64_bitmap_t *roaring64_bitmap_move_from_roaring32(\n+    roaring_bitmap_t *bitmap32) {\n+    roaring64_bitmap_t *result = roaring64_bitmap_create();\n+\n+    move_from_roaring32_offset(result, bitmap32, 0);\n+\n+    return result;\n+}\n+\n roaring64_bitmap_t *roaring64_bitmap_from_range(uint64_t min, uint64_t max,\n                                                 uint64_t step) {\n     if (step == 0 || max <= min) {\n@@ -1947,22 +1984,8 @@ roaring64_bitmap_t *roaring64_bitmap_portable_deserialize_safe(\n         read_bytes += bitmap32_size;\n \n         // Insert all containers of the 32-bit bitmap into the 64-bit bitmap.\n-        uint32_t r32_size = ra_get_size(&bitmap32->high_low_container);\n-        for (size_t i = 0; i < r32_size; ++i) {\n-            uint16_t key16 =\n-                ra_get_key_at_index(&bitmap32->high_low_container, (uint16_t)i);\n-            uint8_t typecode;\n-            container_t *container = ra_get_container_at_index(\n-                &bitmap32->high_low_container, (uint16_t)i, &typecode);\n-\n-            uint64_t high48_bits =\n-                (((uint64_t)high32) << 32) | (((uint64_t)key16) << 16);\n-            uint8_t high48[ART_KEY_BYTES];\n-            split_key(high48_bits, high48);\n-            leaf_t *leaf = create_leaf(container, typecode);\n-            art_insert(&r->art, high48, (art_val_t *)leaf);\n-        }\n-        roaring_bitmap_free_without_containers(bitmap32);\n+        move_from_roaring32_offset(r, bitmap32, high32);\n+        roaring_bitmap_free(bitmap32);\n     }\n     return r;\n }\ndiff --git a/contrib/libs/croaring/ya.make b/contrib/libs/croaring/ya.make\nindex f6a661c0b793..55acab567343 100644\n--- a/contrib/libs/croaring/ya.make\n+++ b/contrib/libs/croaring/ya.make\n@@ -10,9 +10,9 @@ LICENSE(\n \n LICENSE_TEXTS(.yandex_meta/licenses.list.txt)\n \n-VERSION(4.1.1)\n+VERSION(4.1.2)\n \n-ORIGINAL_SOURCE(https://github.com/RoaringBitmap/CRoaring/archive/v4.1.1.tar.gz)\n+ORIGINAL_SOURCE(https://github.com/RoaringBitmap/CRoaring/archive/v4.1.2.tar.gz)\n \n ADDINCL(\n     GLOBAL contrib/libs/croaring/include\ndiff --git a/contrib/libs/cxxsupp/libcxx/include/__iterator/reverse_iterator.h b/contrib/libs/cxxsupp/libcxx/include/__iterator/reverse_iterator.h\nindex beb10f7f4f23..60969e175149 100644\n--- a/contrib/libs/cxxsupp/libcxx/include/__iterator/reverse_iterator.h\n+++ b/contrib/libs/cxxsupp/libcxx/include/__iterator/reverse_iterator.h\n@@ -144,7 +144,7 @@ _LIBCPP_SUPPRESS_DEPRECATED_POP\n     _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_SINCE_CXX17\n     reference operator*() const {_Iter __tmp = current; return *--__tmp;}\n \n-#if _LIBCPP_STD_VER >= 20\n+#if (_LIBCPP_STD_VER >= 20) && !defined(__NVCC__)\n     _LIBCPP_INLINE_VISIBILITY\n     constexpr pointer operator->() const\n       requires is_pointer_v<_Iter> || requires(const _Iter __i) { __i.operator->(); }\ndiff --git a/contrib/libs/cxxsupp/libcxxrt/exception.cc b/contrib/libs/cxxsupp/libcxxrt/exception.cc\nindex 6f8c223b34d9..2fe90c3e1c65 100644\n--- a/contrib/libs/cxxsupp/libcxxrt/exception.cc\n+++ b/contrib/libs/cxxsupp/libcxxrt/exception.cc\n@@ -282,7 +282,7 @@ namespace std\n {\n \t// Forward declaration of standard library terminate() function used to\n \t// abort execution.\n-\tvoid terminate(void) _LIBCXXRT_NOEXCEPT;\n+\t[[noreturn]] void terminate(void) _LIBCXXRT_NOEXCEPT;\n }\n \n using namespace ABI_NAMESPACE;\n@@ -1636,7 +1636,7 @@ namespace std\n \t * Terminates the program, calling a custom terminate implementation if\n \t * required.\n \t */\n-\tvoid terminate() _LIBCXXRT_NOEXCEPT\n+\t[[noreturn]] void terminate() _LIBCXXRT_NOEXCEPT\n \t{\n \t\tstatic __cxa_thread_info *info = thread_info();\n \t\tif (0 != info && 0 != info->terminateHandler)\ndiff --git a/contrib/libs/cxxsupp/libcxxrt/ya.make b/contrib/libs/cxxsupp/libcxxrt/ya.make\nindex a3632f35d440..bb32702ba564 100644\n--- a/contrib/libs/cxxsupp/libcxxrt/ya.make\n+++ b/contrib/libs/cxxsupp/libcxxrt/ya.make\n@@ -11,9 +11,9 @@ LICENSE(\n \n LICENSE_TEXTS(.yandex_meta/licenses.list.txt)\n \n-VERSION(2024-08-06)\n+VERSION(2024-09-24)\n \n-ORIGINAL_SOURCE(https://github.com/libcxxrt/libcxxrt/archive/7a3ef57f64be0f2f2a156af011adfbe76c7dce74.tar.gz)\n+ORIGINAL_SOURCE(https://github.com/libcxxrt/libcxxrt/archive/40e4fa2049930412a2c43cdf0c39b6b5aa735341.tar.gz)\n \n ADDINCL(\n     contrib/libs/cxxsupp/libcxxrt\ndiff --git a/contrib/libs/protobuf/src/google/protobuf/extension_set.h b/contrib/libs/protobuf/src/google/protobuf/extension_set.h\nindex c17bf4dc8a6f..a68db9efc1f6 100644\n--- a/contrib/libs/protobuf/src/google/protobuf/extension_set.h\n+++ b/contrib/libs/protobuf/src/google/protobuf/extension_set.h\n@@ -1564,4 +1564,5 @@ void LinkExtensionReflection(\n }  // namespace google\n \n #include \"google/protobuf/port_undef.inc\"\n+\n #endif  // GOOGLE_PROTOBUF_EXTENSION_SET_H__\ndiff --git a/contrib/libs/protobuf/src/google/protobuf/json/internal/parser.cc b/contrib/libs/protobuf/src/google/protobuf/json/internal/parser.cc\nindex 0da57a1f0560..3bacf60c3b25 100644\n--- a/contrib/libs/protobuf/src/google/protobuf/json/internal/parser.cc\n+++ b/contrib/libs/protobuf/src/google/protobuf/json/internal/parser.cc\n@@ -972,11 +972,9 @@ y_absl::Status ParseFieldMask(JsonLexer& lex, const Desc<Traits>& desc,\n     // Assume approximately six-letter words, so add one extra space for an\n     // underscore for every six bytes.\n     snake_path.reserve(path.size() * 7 / 6);\n-\n-    // Port from protobuf 21.x for entity/ugc (TODO remove?).\n+    // Port from protobuf 21.x\n     bool is_quoted = false;\n     bool is_escaping = false;\n-\n     for (char c : path) {\n       // Outputs quoted string as-is.\n       if (is_quoted) {\ndiff --git a/contrib/libs/protobuf/ya.make b/contrib/libs/protobuf/ya.make\nindex ef458741f3b7..e72de69ce992 100644\n--- a/contrib/libs/protobuf/ya.make\n+++ b/contrib/libs/protobuf/ya.make\n@@ -43,9 +43,9 @@ ENDIF()\n \n PEERDIR(\n     contrib/libs/zlib\n-    library/cpp/sanitizer/include\n-    contrib/restricted/abseil-cpp-tstring/y_absl/status\n     contrib/restricted/abseil-cpp-tstring/y_absl/log\n+    contrib/restricted/abseil-cpp-tstring/y_absl/status\n+    library/cpp/sanitizer/include\n )\n \n ADDINCL(\ndiff --git a/contrib/python/cffi/py3/.dist-info/METADATA b/contrib/python/cffi/py3/.dist-info/METADATA\nindex a0d90a31e922..60b0779f6883 100644\n--- a/contrib/python/cffi/py3/.dist-info/METADATA\n+++ b/contrib/python/cffi/py3/.dist-info/METADATA\n@@ -1,6 +1,6 @@\n Metadata-Version: 2.1\n Name: cffi\n-Version: 1.17.0\n+Version: 1.17.1\n Summary: Foreign Function Interface for Python calling C code.\n Home-page: http://cffi.readthedocs.org\n Author: Armin Rigo, Maciej Fijalkowski\ndiff --git a/contrib/python/cffi/py3/c/_cffi_backend.c b/contrib/python/cffi/py3/c/_cffi_backend.c\nindex aa4ec48ba97d..4ba773a1753e 100644\n--- a/contrib/python/cffi/py3/c/_cffi_backend.c\n+++ b/contrib/python/cffi/py3/c/_cffi_backend.c\n@@ -2,7 +2,7 @@\n #include <Python.h>\n #include \"structmember.h\"\n \n-#define CFFI_VERSION  \"1.17.0\"\n+#define CFFI_VERSION  \"1.17.1\"\n \n #ifdef MS_WIN32\n #include <windows.h>\ndiff --git a/contrib/python/cffi/py3/cffi/__init__.py b/contrib/python/cffi/py3/cffi/__init__.py\nindex deeacc57cde8..2e35a38c9ce0 100644\n--- a/contrib/python/cffi/py3/cffi/__init__.py\n+++ b/contrib/python/cffi/py3/cffi/__init__.py\n@@ -5,8 +5,8 @@\n from .error import CDefError, FFIError, VerificationError, VerificationMissing\n from .error import PkgConfigError\n \n-__version__ = \"1.17.0\"\n-__version_info__ = (1, 17, 0)\n+__version__ = \"1.17.1\"\n+__version_info__ = (1, 17, 1)\n \n # The verifier module file names are based on the CRC32 of a string that\n # contains the following version number.  It may be older than __version__\ndiff --git a/contrib/python/cffi/py3/cffi/_embedding.h b/contrib/python/cffi/py3/cffi/_embedding.h\nindex 0eeeea831df3..94d8b30a9e3c 100644\n--- a/contrib/python/cffi/py3/cffi/_embedding.h\n+++ b/contrib/python/cffi/py3/cffi/_embedding.h\n@@ -225,7 +225,7 @@ static int _cffi_initialize_python(void)\n \n         if (f != NULL && f != Py_None) {\n             PyFile_WriteString(\"\\nFrom: \" _CFFI_MODULE_NAME\n-                               \"\\ncompiled with cffi version: 1.17.0\"\n+                               \"\\ncompiled with cffi version: 1.17.1\"\n                                \"\\n_cffi_backend module: \", f);\n             modules = PyImport_GetModuleDict();\n             mod = PyDict_GetItemString(modules, \"_cffi_backend\");\ndiff --git a/contrib/python/cffi/py3/cffi/_shimmed_dist_utils.py b/contrib/python/cffi/py3/cffi/_shimmed_dist_utils.py\nindex 611bf40f40ff..c3d23128189f 100644\n--- a/contrib/python/cffi/py3/cffi/_shimmed_dist_utils.py\n+++ b/contrib/python/cffi/py3/cffi/_shimmed_dist_utils.py\n@@ -30,7 +30,11 @@\n     from distutils.log import set_threshold, set_verbosity\n \n     if sys.platform == 'win32':\n-        from distutils.msvc9compiler import MSVCCompiler\n+        try:\n+            # FUTURE: msvc9compiler module was removed in setuptools 74; consider removing, as it's only used by an ancient patch in `recompiler`\n+            from distutils.msvc9compiler import MSVCCompiler\n+        except ImportError:\n+            MSVCCompiler = None\n except Exception as ex:\n     if sys.version_info >= (3, 12):\n         raise Exception(\"This CFFI feature requires setuptools on Python >= 3.12. Please install the setuptools package.\") from ex\ndiff --git a/contrib/python/cffi/py3/cffi/api.py b/contrib/python/cffi/py3/cffi/api.py\nindex edeb7928107c..5a474f3da928 100644\n--- a/contrib/python/cffi/py3/cffi/api.py\n+++ b/contrib/python/cffi/py3/cffi/api.py\n@@ -693,7 +693,8 @@ def emit_c_code(self, filename):\n             raise TypeError(\"emit_c_code() is only for C extension modules, \"\n                             \"not for dlopen()-style pure Python modules\")\n         recompile(self, module_name, source,\n-                  c_file=filename, call_c_compiler=False, **kwds)\n+                  c_file=filename, call_c_compiler=False,\n+                  uses_ffiplatform=False, **kwds)\n \n     def emit_python_code(self, filename):\n         from .recompiler import recompile\n@@ -705,7 +706,8 @@ def emit_python_code(self, filename):\n             raise TypeError(\"emit_python_code() is only for dlopen()-style \"\n                             \"pure Python modules, not for C extension modules\")\n         recompile(self, module_name, source,\n-                  c_file=filename, call_c_compiler=False, **kwds)\n+                  c_file=filename, call_c_compiler=False,\n+                  uses_ffiplatform=False, **kwds)\n \n     def compile(self, tmpdir='.', verbose=0, target=None, debug=None):\n         \"\"\"The 'target' argument gives the final file name of the\ndiff --git a/contrib/python/cffi/py3/cffi/recompiler.py b/contrib/python/cffi/py3/cffi/recompiler.py\nindex dd22b21c2ca2..c236807fe81f 100644\n--- a/contrib/python/cffi/py3/cffi/recompiler.py\n+++ b/contrib/python/cffi/py3/cffi/recompiler.py\n@@ -1417,6 +1417,10 @@ def write(self, s):\n                 s = s.encode('ascii')\n             super(NativeIO, self).write(s)\n \n+def _is_file_like(maybefile):\n+    # compare to xml.etree.ElementTree._get_writer\n+    return hasattr(maybefile, 'write')\n+\n def _make_c_or_py_source(ffi, module_name, preamble, target_file, verbose):\n     if verbose:\n         print(\"generating %s\" % (target_file,))\n@@ -1424,6 +1428,9 @@ def _make_c_or_py_source(ffi, module_name, preamble, target_file, verbose):\n                             target_is_python=(preamble is None))\n     recompiler.collect_type_table()\n     recompiler.collect_step_tables()\n+    if _is_file_like(target_file):\n+        recompiler.write_source_to_f(target_file, preamble)\n+        return True\n     f = NativeIO()\n     recompiler.write_source_to_f(f, preamble)\n     output = f.getvalue()\n@@ -1481,9 +1488,12 @@ def _unpatch_meths(patchlist):\n def _patch_for_embedding(patchlist):\n     if sys.platform == 'win32':\n         # we must not remove the manifest when building for embedding!\n+        # FUTURE: this module was removed in setuptools 74; this is likely dead code and should be removed,\n+        #  since the toolchain it supports (VS2005-2008) is also long dead.\n         from cffi._shimmed_dist_utils import MSVCCompiler\n-        _patch_meth(patchlist, MSVCCompiler, '_remove_visual_c_ref',\n-                    lambda self, manifest_file: manifest_file)\n+        if MSVCCompiler is not None:\n+            _patch_meth(patchlist, MSVCCompiler, '_remove_visual_c_ref',\n+                        lambda self, manifest_file: manifest_file)\n \n     if sys.platform == 'darwin':\n         # we must not make a '-bundle', but a '-dynamiclib' instead\n@@ -1517,12 +1527,16 @@ def _patch_for_target(patchlist, target):\n \n def recompile(ffi, module_name, preamble, tmpdir='.', call_c_compiler=True,\n               c_file=None, source_extension='.c', extradir=None,\n-              compiler_verbose=1, target=None, debug=None, **kwds):\n+              compiler_verbose=1, target=None, debug=None,\n+              uses_ffiplatform=True, **kwds):\n     if not isinstance(module_name, str):\n         module_name = module_name.encode('ascii')\n     if ffi._windows_unicode:\n         ffi._apply_windows_unicode(kwds)\n     if preamble is not None:\n+        if call_c_compiler and _is_file_like(c_file):\n+            raise TypeError(\"Writing to file-like objects is not supported \"\n+                            \"with call_c_compiler=True\")\n         embedding = (ffi._embedding is not None)\n         if embedding:\n             ffi._apply_embedding_fix(kwds)\n@@ -1541,7 +1555,10 @@ def recompile(ffi, module_name, preamble, tmpdir='.', call_c_compiler=True,\n             else:\n                 target = '*'\n         #\n-        ext = ffiplatform.get_extension(ext_c_file, module_name, **kwds)\n+        if uses_ffiplatform:\n+            ext = ffiplatform.get_extension(ext_c_file, module_name, **kwds)\n+        else:\n+            ext = None\n         updated = make_c_source(ffi, module_name, preamble, c_file,\n                                 verbose=compiler_verbose)\n         if call_c_compiler:\ndiff --git a/contrib/python/cffi/py3/ya.make b/contrib/python/cffi/py3/ya.make\nindex 30e438d17e22..90ddf448de46 100644\n--- a/contrib/python/cffi/py3/ya.make\n+++ b/contrib/python/cffi/py3/ya.make\n@@ -2,7 +2,7 @@\n \n PY3_LIBRARY()\n \n-VERSION(1.17.0)\n+VERSION(1.17.1)\n \n LICENSE(MIT)\n \ndiff --git a/contrib/python/executing/.dist-info/METADATA b/contrib/python/executing/.dist-info/METADATA\nindex b598e4907d63..45ff9aa88138 100644\n--- a/contrib/python/executing/.dist-info/METADATA\n+++ b/contrib/python/executing/.dist-info/METADATA\n@@ -1,6 +1,6 @@\n Metadata-Version: 2.1\n Name: executing\n-Version: 2.0.1\n+Version: 2.1.0\n Summary: Get the currently executing AST node of a frame, and other information\n Home-page: https://github.com/alexmojaki/executing\n Author: Alex Hall\n@@ -9,25 +9,23 @@ License: MIT\n Classifier: License :: OSI Approved :: MIT License\n Classifier: Programming Language :: Python\n Classifier: Programming Language :: Python :: 3\n-Classifier: Programming Language :: Python :: 3.5\n-Classifier: Programming Language :: Python :: 3.6\n-Classifier: Programming Language :: Python :: 3.7\n Classifier: Programming Language :: Python :: 3.8\n Classifier: Programming Language :: Python :: 3.9\n Classifier: Programming Language :: Python :: 3.10\n Classifier: Programming Language :: Python :: 3.11\n Classifier: Programming Language :: Python :: 3.12\n-Requires-Python: >=3.5\n+Classifier: Programming Language :: Python :: 3.13\n+Requires-Python: >=3.8\n Description-Content-Type: text/markdown\n License-File: LICENSE.txt\n Provides-Extra: tests\n-Requires-Dist: asttokens >=2.1.0 ; extra == 'tests'\n-Requires-Dist: ipython ; extra == 'tests'\n-Requires-Dist: pytest ; extra == 'tests'\n-Requires-Dist: coverage ; extra == 'tests'\n-Requires-Dist: coverage-enable-subprocess ; extra == 'tests'\n-Requires-Dist: littleutils ; extra == 'tests'\n-Requires-Dist: rich ; (python_version >= \"3.11\") and extra == 'tests'\n+Requires-Dist: asttokens>=2.1.0; extra == \"tests\"\n+Requires-Dist: ipython; extra == \"tests\"\n+Requires-Dist: pytest; extra == \"tests\"\n+Requires-Dist: coverage; extra == \"tests\"\n+Requires-Dist: coverage-enable-subprocess; extra == \"tests\"\n+Requires-Dist: littleutils; extra == \"tests\"\n+Requires-Dist: rich; python_version >= \"3.11\" and extra == \"tests\"\n \n # executing\n \ndiff --git a/contrib/python/executing/executing/_position_node_finder.py b/contrib/python/executing/executing/_position_node_finder.py\nindex 8ca21a67bd57..7a814150da6d 100644\n--- a/contrib/python/executing/executing/_position_node_finder.py\n+++ b/contrib/python/executing/executing/_position_node_finder.py\n@@ -72,7 +72,7 @@ def mangled_name(node: EnhancedAST) -> str:\n \n @lru_cache(128) # pragma: no mutate\n def get_instructions(code: CodeType) -> list[dis.Instruction]:\n-    return list(dis.get_instructions(code, show_caches=True))\n+    return list(dis.get_instructions(code))\n \n \n types_cmp_issue_fix = (\n@@ -114,7 +114,7 @@ class PositionNodeFinder(object):\n     \"\"\"\n \n     def __init__(self, frame: FrameType, stmts: Set[EnhancedAST], tree: ast.Module, lasti: int, source: Source):\n-        self.bc_list = get_instructions(frame.f_code)\n+        self.bc_dict={bc.offset:bc for bc in get_instructions(frame.f_code) }\n \n         self.source = source\n         self.decorator: Optional[EnhancedAST] = None\n@@ -141,7 +141,7 @@ def __init__(self, frame: FrameType, stmts: Set[EnhancedAST], tree: ast.Module,\n                 # we ignore here the start position and try to find the ast-node just by end position and expected node type\n                 # This is save, because there can only be one attribute ending at a specific point in the source code.\n                 typ = (ast.Attribute,)\n-            elif self.opname(lasti) == \"CALL\":\n+            elif self.opname(lasti) in (\"CALL\", \"CALL_KW\"):\n                 # A CALL instruction can be a method call, in which case the lineno and col_offset gets changed by the compiler.\n                 # Therefore we ignoring here this attributes and searchnig for a Call-node only by end_col_offset and end_lineno.\n                 # This is save, because there can only be one method ending at a specific point in the source code.\n@@ -156,13 +156,18 @@ def __init__(self, frame: FrameType, stmts: Set[EnhancedAST], tree: ast.Module,\n                 typ=typ,\n             )\n \n-        self.known_issues(self.result, self.instruction(lasti))\n+        instruction = self.instruction(lasti)\n+        assert instruction is not None\n+\n+        self.result = self.fix_result(self.result, instruction)\n+\n+        self.known_issues(self.result, instruction)\n \n         self.test_for_decorator(self.result, lasti)\n \n         # verify\n         if self.decorator is None:\n-            self.verify(self.result, self.instruction(lasti))\n+            self.verify(self.result, instruction)\n         else: \n             assert_(self.decorator in self.result.decorator_list)\n \n@@ -213,6 +218,32 @@ def test_for_decorator(self, node: EnhancedAST, index: int) -> None:\n                 if sys.version_info < (3, 12):\n                     index += 4\n \n+    def fix_result(\n+        self, node: EnhancedAST, instruction: dis.Instruction\n+    ) -> EnhancedAST:\n+        if (\n+            sys.version_info >= (3, 12, 5)\n+            and instruction.opname in (\"GET_ITER\", \"FOR_ITER\")\n+            and isinstance(node.parent, ast.For)\n+            and node is node.parent.iter\n+        ):\n+            # node positions have changed in 3.12.5\n+            # https://github.com/python/cpython/issues/93691\n+            # `for` calls __iter__ and __next__ during execution, the calling\n+            # expression of these calls was the ast.For node since cpython 3.11 (see test_iter).\n+            # cpython 3.12.5 changed this to the `iter` node of the loop, to make tracebacks easier to read.\n+            # This keeps backward compatibility with older executing versions.\n+\n+            # there are also cases like:\n+            #\n+            # for a in iter(l): pass\n+            #\n+            # where `iter(l)` would be otherwise the resulting node for the `iter()` call and the __iter__ call of the for implementation.\n+            # keeping the old behaviour makes it possible to distinguish both cases.\n+\n+            return node.parent\n+        return node\n+\n     def known_issues(self, node: EnhancedAST, instruction: dis.Instruction) -> None:\n         if instruction.opname in (\"COMPARE_OP\", \"IS_OP\", \"CONTAINS_OP\") and isinstance(\n             node, types_cmp_issue\n@@ -324,6 +355,35 @@ def known_issues(self, node: EnhancedAST, instruction: dis.Instruction) -> None:\n         ):\n             raise KnownIssue(\"exception generation maps to condition\")\n \n+        if sys.version_info >= (3, 13):\n+            if instruction.opname in (\n+                \"STORE_FAST_STORE_FAST\",\n+                \"STORE_FAST_LOAD_FAST\",\n+                \"LOAD_FAST_LOAD_FAST\",\n+            ):\n+                raise KnownIssue(f\"can not map {instruction.opname} to two ast nodes\")\n+\n+            if instruction.opname == \"LOAD_FAST\" and instruction.argval == \"__class__\":\n+                # example:\n+                #   class T:\n+                #       def a():\n+                #           super()\n+                #       some_node  # <- there is a LOAD_FAST for this node because we use super()\n+\n+                raise KnownIssue(\n+                    f\"loading of __class__ is accociated with a random node at the end of a class if you use super()\"\n+                )\n+\n+            if (\n+                instruction.opname == \"COMPARE_OP\"\n+                and isinstance(node, ast.UnaryOp)\n+                and isinstance(node.operand,ast.Compare)\n+                and isinstance(node.op, ast.Not)\n+            ):\n+                # work around for \n+                # https://github.com/python/cpython/issues/114671\n+                self.result = node.operand\n+\n     @staticmethod\n     def is_except_cleanup(inst: dis.Instruction, node: EnhancedAST) -> bool:\n         if inst.opname not in (\n@@ -703,6 +763,52 @@ def node_match(node_type: Union[Type, Tuple[Type, ...]], **kwargs: Any) -> bool:\n             if node_match(ast.FormattedValue) and inst_match(\"FORMAT_VALUE\"):\n                 return\n \n+        if sys.version_info >= (3, 13):\n+\n+            if inst_match(\"NOP\"):\n+                return\n+\n+            if inst_match(\"TO_BOOL\") and node_match(ast.BoolOp):\n+                return\n+\n+            if inst_match(\"CALL_KW\") and node_match((ast.Call, ast.ClassDef)):\n+                return\n+\n+            if inst_match(\"LOAD_FAST\", argval=\".type_params\"):\n+                return\n+\n+            if inst_match(\"LOAD_FAST\", argval=\"__classdict__\"):\n+                return\n+\n+            if inst_match(\"LOAD_FAST\") and node_match(\n+                (\n+                    ast.FunctionDef,\n+                    ast.ClassDef,\n+                    ast.TypeAlias,\n+                    ast.TypeVar,\n+                    ast.Lambda,\n+                    ast.AsyncFunctionDef,\n+                )\n+            ):\n+                # These are loads for closure variables.\n+                # It is difficult to check that this is actually closure variable, see:\n+                # https://github.com/alexmojaki/executing/pull/80#discussion_r1716027317\n+                return\n+\n+            if (\n+                inst_match(\"LOAD_FAST\")\n+                and node_match(ast.TypeAlias)\n+                and node.name.id == instruction.argval\n+            ):\n+                return\n+\n+            if inst_match(\"STORE_NAME\",argval=\"__static_attributes__\"):\n+                # the node is the first node in the body\n+                return\n+\n+            if inst_match(\"LOAD_FAST\") and isinstance(node.parent,ast.TypeVar):\n+                return\n+\n \n         # old verifier\n \n@@ -771,11 +877,14 @@ def node_match(node_type: Union[Type, Tuple[Type, ...]], **kwargs: Any) -> bool:\n \n         raise VerifierFailure(title, node, instruction)\n \n-    def instruction(self, index: int) -> dis.Instruction:\n-        return self.bc_list[index // 2]\n+    def instruction(self, index: int) -> Optional[dis.Instruction]:\n+        return self.bc_dict.get(index,None)\n \n     def opname(self, index: int) -> str:\n-        return self.instruction(index).opname\n+        i=self.instruction(index)\n+        if i is None:\n+            return \"CACHE\"\n+        return i.opname\n \n     extra_node_types=()\n     if sys.version_info >= (3,12):\n@@ -798,7 +907,10 @@ def find_node(\n             *extra_node_types,\n         ),\n     ) -> EnhancedAST:\n-        position = self.instruction(index).positions\n+        instruction = self.instruction(index)\n+        assert instruction is not None\n+\n+        position = instruction.positions\n         assert position is not None and position.lineno is not None\n \n         return only(\ndiff --git a/contrib/python/executing/executing/executing.py b/contrib/python/executing/executing/executing.py\nindex 7727c42232d5..5cf117e18c55 100644\n--- a/contrib/python/executing/executing/executing.py\n+++ b/contrib/python/executing/executing/executing.py\n@@ -273,16 +273,15 @@ def executing(cls, frame_or_tb):\n                             node_finder = NodeFinder(frame, stmts, tree, lasti, source)\n                             node = node_finder.result\n                             decorator = node_finder.decorator\n+\n+                    if node:\n+                        new_stmts = {statement_containing_node(node)}\n+                        assert_(new_stmts <= stmts)\n+                        stmts = new_stmts\n                 except Exception:\n                     if TESTING:\n                         raise\n \n-                assert stmts is not None\n-                if node:\n-                    new_stmts = {statement_containing_node(node)}\n-                    assert_(new_stmts <= stmts)\n-                    stmts = new_stmts\n-\n             executing_cache[key] = args = source, node, stmts, decorator\n \n         return Executing(frame, *args)\ndiff --git a/contrib/python/executing/executing/version.py b/contrib/python/executing/executing/version.py\nindex 9d909dcc3cc4..b15121b0fec4 100644\n--- a/contrib/python/executing/executing/version.py\n+++ b/contrib/python/executing/executing/version.py\n@@ -1,1 +1,1 @@\n-__version__ = '2.0.1'\n\\ No newline at end of file\n+__version__ = '2.1.0'\n\\ No newline at end of file\ndiff --git a/contrib/python/executing/ya.make b/contrib/python/executing/ya.make\nindex b6765022820f..b437b26981c1 100644\n--- a/contrib/python/executing/ya.make\n+++ b/contrib/python/executing/ya.make\n@@ -2,7 +2,7 @@\n \n PY3_LIBRARY()\n \n-VERSION(2.0.1)\n+VERSION(2.1.0)\n \n LICENSE(MIT)\n \ndiff --git a/contrib/python/hypothesis/py3/.dist-info/METADATA b/contrib/python/hypothesis/py3/.dist-info/METADATA\nindex d1e09fb0ef6a..b78a2eeab381 100644\n--- a/contrib/python/hypothesis/py3/.dist-info/METADATA\n+++ b/contrib/python/hypothesis/py3/.dist-info/METADATA\n@@ -1,6 +1,6 @@\n Metadata-Version: 2.1\n Name: hypothesis\n-Version: 6.111.2\n+Version: 6.112.0\n Summary: A library for property-based testing\n Home-page: https://hypothesis.works\n Author: David R. MacIver and Zac Hatfield-Dodds\ndiff --git a/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/data.py b/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/data.py\nindex 18f3bd9b8a48..0f4f1138f346 100644\n--- a/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/data.py\n+++ b/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/data.py\n@@ -111,11 +111,12 @@ class FloatKWargs(TypedDict):\n class StringKWargs(TypedDict):\n     intervals: IntervalSet\n     min_size: int\n-    max_size: Optional[int]\n+    max_size: int\n \n \n class BytesKWargs(TypedDict):\n-    size: int\n+    min_size: int\n+    max_size: int\n \n \n class BooleanKWargs(TypedDict):\n@@ -206,7 +207,7 @@ def structural_coverage(label: int) -> StructuralCoverageTag:\n FLOAT_INIT_LOGIC_CACHE = LRUCache(4096)\n POOLED_KWARGS_CACHE = LRUCache(4096)\n \n-DRAW_STRING_DEFAULT_MAX_SIZE = 10**10  # \"arbitrarily large\"\n+COLLECTION_DEFAULT_MAX_SIZE = 10**10  # \"arbitrarily large\"\n \n \n class Example:\n@@ -1036,7 +1037,7 @@ def trivial(self):\n             return self.value == (minimal_char * self.kwargs[\"min_size\"])\n         if self.ir_type == \"bytes\":\n             # smallest size and all-zero value.\n-            return len(self.value) == self.kwargs[\"size\"] and not any(self.value)\n+            return len(self.value) == self.kwargs[\"min_size\"] and not any(self.value)\n \n         raise NotImplementedError(f\"unhandled ir_type {self.ir_type}\")\n \n@@ -1095,7 +1096,9 @@ def ir_value_permitted(value, ir_type, kwargs):\n             return False\n         return all(ord(c) in kwargs[\"intervals\"] for c in value)\n     elif ir_type == \"bytes\":\n-        return len(value) == kwargs[\"size\"]\n+        if len(value) < kwargs[\"min_size\"]:\n+            return False\n+        return kwargs[\"max_size\"] is None or len(value) <= kwargs[\"max_size\"]\n     elif ir_type == \"boolean\":\n         if kwargs[\"p\"] <= 2 ** (-64):\n             return value is False\n@@ -1314,7 +1317,7 @@ def draw_string(\n         intervals: IntervalSet,\n         *,\n         min_size: int = 0,\n-        max_size: Optional[int] = None,\n+        max_size: int = COLLECTION_DEFAULT_MAX_SIZE,\n         forced: Optional[str] = None,\n         fake_forced: bool = False,\n     ) -> str:\n@@ -1322,7 +1325,12 @@ def draw_string(\n \n     @abc.abstractmethod\n     def draw_bytes(\n-        self, size: int, *, forced: Optional[bytes] = None, fake_forced: bool = False\n+        self,\n+        min_size: int = 0,\n+        max_size: int = COLLECTION_DEFAULT_MAX_SIZE,\n+        *,\n+        forced: Optional[bytes] = None,\n+        fake_forced: bool = False,\n     ) -> bytes:\n         raise NotImplementedError\n \n@@ -1606,14 +1614,10 @@ def draw_string(\n         intervals: IntervalSet,\n         *,\n         min_size: int = 0,\n-        max_size: Optional[int] = None,\n+        max_size: int = COLLECTION_DEFAULT_MAX_SIZE,\n         forced: Optional[str] = None,\n         fake_forced: bool = False,\n     ) -> str:\n-        if max_size is None:\n-            max_size = DRAW_STRING_DEFAULT_MAX_SIZE\n-\n-        assert forced is None or min_size <= len(forced) <= max_size\n         assert self._cd is not None\n \n         average_size = min(\n@@ -1663,17 +1667,40 @@ def draw_string(\n         return \"\".join(chars)\n \n     def draw_bytes(\n-        self, size: int, *, forced: Optional[bytes] = None, fake_forced: bool = False\n+        self,\n+        min_size: int = 0,\n+        max_size: int = COLLECTION_DEFAULT_MAX_SIZE,\n+        *,\n+        forced: Optional[bytes] = None,\n+        fake_forced: bool = False,\n     ) -> bytes:\n-        forced_i = None\n-        if forced is not None:\n-            forced_i = int_from_bytes(forced)\n-            size = len(forced)\n-\n         assert self._cd is not None\n-        return self._cd.draw_bits(\n-            8 * size, forced=forced_i, fake_forced=fake_forced\n-        ).to_bytes(size, \"big\")\n+\n+        buf = bytearray()\n+        average_size = min(\n+            max(min_size * 2, min_size + 5),\n+            0.5 * (min_size + max_size),\n+        )\n+        elements = many(\n+            self._cd,\n+            min_size=min_size,\n+            max_size=max_size,\n+            average_size=average_size,\n+            forced=None if forced is None else len(forced),\n+            fake_forced=fake_forced,\n+            observe=False,\n+        )\n+        while elements.more():\n+            forced_i: Optional[int] = None\n+            if forced is not None:\n+                # implicit conversion from bytes to int by indexing here\n+                forced_i = forced[elements.count - 1]\n+\n+            buf += self._cd.draw_bits(\n+                8, forced=forced_i, fake_forced=fake_forced\n+            ).to_bytes(1, \"big\")\n+\n+        return bytes(buf)\n \n     def _draw_float(\n         self,\n@@ -2216,12 +2243,13 @@ def draw_string(\n         intervals: IntervalSet,\n         *,\n         min_size: int = 0,\n-        max_size: Optional[int] = None,\n+        max_size: int = COLLECTION_DEFAULT_MAX_SIZE,\n         forced: Optional[str] = None,\n         fake_forced: bool = False,\n         observe: bool = True,\n     ) -> str:\n-        assert forced is None or min_size <= len(forced)\n+        assert forced is None or min_size <= len(forced) <= max_size\n+        assert min_size >= 0\n \n         kwargs: StringKWargs = self._pooled_kwargs(\n             \"string\",\n@@ -2255,17 +2283,19 @@ def draw_string(\n \n     def draw_bytes(\n         self,\n-        # TODO move to min_size and max_size here.\n-        size: int,\n+        min_size: int = 0,\n+        max_size: int = COLLECTION_DEFAULT_MAX_SIZE,\n         *,\n         forced: Optional[bytes] = None,\n         fake_forced: bool = False,\n         observe: bool = True,\n     ) -> bytes:\n-        assert forced is None or len(forced) == size\n-        assert size >= 0\n+        assert forced is None or min_size <= len(forced) <= max_size\n+        assert min_size >= 0\n \n-        kwargs: BytesKWargs = self._pooled_kwargs(\"bytes\", {\"size\": size})\n+        kwargs: BytesKWargs = self._pooled_kwargs(\n+            \"bytes\", {\"min_size\": min_size, \"max_size\": max_size}\n+        )\n \n         if self.ir_tree_nodes is not None and observe:\n             node_value = self._pop_ir_tree_node(\"bytes\", kwargs, forced=forced)\ndiff --git a/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/datatree.py b/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/datatree.py\nindex 60c1610bc319..87a0c988c889 100644\n--- a/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/datatree.py\n+++ b/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/datatree.py\n@@ -146,9 +146,31 @@ def _repr_pretty_(self, p, cycle):\n MAX_CHILDREN_EFFECTIVELY_INFINITE = 100_000\n \n \n-def compute_max_children(ir_type, kwargs):\n-    from hypothesis.internal.conjecture.data import DRAW_STRING_DEFAULT_MAX_SIZE\n+def _count_distinct_strings(*, alphabet_size, min_size, max_size):\n+    # We want to estimate if we're going to have more children than\n+    # MAX_CHILDREN_EFFECTIVELY_INFINITE, without computing a potentially\n+    # extremely expensive pow. We'll check if the number of strings in\n+    # the largest string size alone is enough to put us over this limit.\n+    # We'll also employ a trick of estimating against log, which is cheaper\n+    # than computing a pow.\n+    #\n+    # x = max_size\n+    # y = alphabet_size\n+    # n = MAX_CHILDREN_EFFECTIVELY_INFINITE\n+    #\n+    #     x**y > n\n+    # <=> log(x**y)  > log(n)\n+    # <=> y * log(x) > log(n)\n+    definitely_too_large = max_size * math.log(alphabet_size) > math.log(\n+        MAX_CHILDREN_EFFECTIVELY_INFINITE\n+    )\n+    if definitely_too_large:\n+        return MAX_CHILDREN_EFFECTIVELY_INFINITE\n \n+    return sum(alphabet_size**k for k in range(min_size, max_size + 1))\n+\n+\n+def compute_max_children(ir_type, kwargs):\n     if ir_type == \"integer\":\n         min_value = kwargs[\"min_value\"]\n         max_value = kwargs[\"max_value\"]\n@@ -178,50 +200,27 @@ def compute_max_children(ir_type, kwargs):\n             return 1\n         return 2\n     elif ir_type == \"bytes\":\n-        return 2 ** (8 * kwargs[\"size\"])\n+        return _count_distinct_strings(\n+            alphabet_size=2**8, min_size=kwargs[\"min_size\"], max_size=kwargs[\"max_size\"]\n+        )\n     elif ir_type == \"string\":\n         min_size = kwargs[\"min_size\"]\n         max_size = kwargs[\"max_size\"]\n         intervals = kwargs[\"intervals\"]\n \n-        if max_size is None:\n-            max_size = DRAW_STRING_DEFAULT_MAX_SIZE\n-\n         if len(intervals) == 0:\n             # Special-case the empty alphabet to avoid an error in math.log(0).\n             # Only possibility is the empty string.\n             return 1\n \n-        # We want to estimate if we're going to have more children than\n-        # MAX_CHILDREN_EFFECTIVELY_INFINITE, without computing a potentially\n-        # extremely expensive pow. We'll check if the number of strings in\n-        # the largest string size alone is enough to put us over this limit.\n-        # We'll also employ a trick of estimating against log, which is cheaper\n-        # than computing a pow.\n-        #\n-        # x = max_size\n-        # y = len(intervals)\n-        # n = MAX_CHILDREN_EFFECTIVELY_INFINITE\n-        #\n-        #     x**y > n\n-        # <=> log(x**y)  > log(n)\n-        # <=> y * log(x) > log(n)\n-\n-        # avoid math.log(1) == 0 and incorrectly failing the below estimate,\n-        # even when we definitely are too large.\n-        if len(intervals) == 1:\n-            definitely_too_large = max_size > MAX_CHILDREN_EFFECTIVELY_INFINITE\n-        else:\n-            definitely_too_large = max_size * math.log(len(intervals)) > math.log(\n-                MAX_CHILDREN_EFFECTIVELY_INFINITE\n-            )\n-\n-        if definitely_too_large:\n+        # avoid math.log(1) == 0 and incorrectly failing our effectively_infinite\n+        # estimate, even when we definitely are too large.\n+        if len(intervals) == 1 and max_size > MAX_CHILDREN_EFFECTIVELY_INFINITE:\n             return MAX_CHILDREN_EFFECTIVELY_INFINITE\n \n-        # number of strings of length k, for each k in [min_size, max_size].\n-        return sum(len(intervals) ** k for k in range(min_size, max_size + 1))\n-\n+        return _count_distinct_strings(\n+            alphabet_size=len(intervals), min_size=min_size, max_size=max_size\n+        )\n     elif ir_type == \"float\":\n         min_value = kwargs[\"min_value\"]\n         max_value = kwargs[\"max_value\"]\n@@ -306,8 +305,8 @@ def all_children(ir_type, kwargs):\n         else:\n             yield from [False, True]\n     if ir_type == \"bytes\":\n-        size = kwargs[\"size\"]\n-        yield from (int_to_bytes(i, size) for i in range(2 ** (8 * size)))\n+        for size in range(kwargs[\"min_size\"], kwargs[\"max_size\"] + 1):\n+            yield from (int_to_bytes(i, size) for i in range(2 ** (8 * size)))\n     if ir_type == \"string\":\n         min_size = kwargs[\"min_size\"]\n         max_size = kwargs[\"max_size\"]\ndiff --git a/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinker.py b/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinker.py\nindex 3be703a18e6a..d1084e4cdd40 100644\n--- a/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinker.py\n+++ b/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinker.py\n@@ -1075,10 +1075,9 @@ def try_shrinking_nodes(self, nodes, n):\n                 return False  # pragma: no cover\n \n             if node.ir_type in {\"string\", \"bytes\"}:\n-                size_kwarg = \"min_size\" if node.ir_type == \"string\" else \"size\"\n                 # if the size *increased*, we would have to guess what to pad with\n                 # in order to try fixing up this attempt. Just give up.\n-                if node.kwargs[size_kwarg] <= attempt_kwargs[size_kwarg]:\n+                if node.kwargs[\"min_size\"] <= attempt_kwargs[\"min_size\"]:\n                     return False\n                 # the size decreased in our attempt. Try again, but replace with\n                 # the min_size that we would have gotten, and truncate the value\n@@ -1089,7 +1088,7 @@ def try_shrinking_nodes(self, nodes, n):\n                         initial_attempt[node.index].copy(\n                             with_kwargs=attempt_kwargs,\n                             with_value=initial_attempt[node.index].value[\n-                                : attempt_kwargs[size_kwarg]\n+                                : attempt_kwargs[\"min_size\"]\n                             ],\n                         )\n                     ]\ndiff --git a/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinking/bytes.py b/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinking/bytes.py\nindex 3ba75a2719b8..7fbc26fd248f 100644\n--- a/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinking/bytes.py\n+++ b/contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinking/bytes.py\n@@ -8,17 +8,16 @@\n # v. 2.0. If a copy of the MPL was not distributed with this file, You can\n # obtain one at https://mozilla.org/MPL/2.0/.\n \n-from hypothesis.internal.compat import int_from_bytes, int_to_bytes\n+from hypothesis.internal.conjecture.shrinking.collection import Collection\n from hypothesis.internal.conjecture.shrinking.integer import Integer\n \n \n-class Bytes(Integer):\n+class Bytes(Collection):\n     def __init__(self, initial, predicate, **kwargs):\n-        # shrink by interpreting the bytes as an integer.\n-        # move to Collection.shrink when we support variable-size bytes,\n-        # because b'\\x00\\x02' could shrink to either b'\\x00\\x01' or b'\\x02'.\n         super().__init__(\n-            int_from_bytes(initial),\n-            lambda n: predicate(int_to_bytes(n, len(initial))),\n+            # implicit conversion from bytes to list of integers here\n+            list(initial),\n+            lambda val: predicate(bytes(val)),\n+            ElementShrinker=Integer,\n             **kwargs,\n         )\ndiff --git a/contrib/python/hypothesis/py3/hypothesis/strategies/_internal/strings.py b/contrib/python/hypothesis/py3/hypothesis/strategies/_internal/strings.py\nindex b6e6dd8deb38..53d81b739495 100644\n--- a/contrib/python/hypothesis/py3/hypothesis/strategies/_internal/strings.py\n+++ b/contrib/python/hypothesis/py3/hypothesis/strategies/_internal/strings.py\n@@ -12,15 +12,16 @@\n import re\n import warnings\n from functools import lru_cache, partial\n+from typing import Optional\n \n from hypothesis.errors import HypothesisWarning, InvalidArgument\n from hypothesis.internal import charmap\n+from hypothesis.internal.conjecture.data import COLLECTION_DEFAULT_MAX_SIZE\n from hypothesis.internal.filtering import max_len, min_len\n from hypothesis.internal.intervalsets import IntervalSet\n from hypothesis.internal.reflection import get_pretty_function_description\n from hypothesis.strategies._internal.collections import ListStrategy\n from hypothesis.strategies._internal.lazy import unwrap_strategies\n-from hypothesis.strategies._internal.numbers import IntegersStrategy\n from hypothesis.strategies._internal.strategies import (\n     OneOfStrategy,\n     SampledFromStrategy,\n@@ -158,7 +159,13 @@ def do_draw(self, data):\n         elems = unwrap_strategies(self.element_strategy)\n         if isinstance(elems, OneCharStringStrategy):\n             return data.draw_string(\n-                elems.intervals, min_size=self.min_size, max_size=self.max_size\n+                elems.intervals,\n+                min_size=self.min_size,\n+                max_size=(\n+                    COLLECTION_DEFAULT_MAX_SIZE\n+                    if self.max_size == float(\"inf\")\n+                    else self.max_size\n+                ),\n             )\n         return \"\".join(super().do_draw(data))\n \n@@ -224,9 +231,13 @@ def _string_filter_rewrite(self, kind, condition):\n             stacklevel=2,\n         )\n \n-    elems = unwrap_strategies(self.element_strategy)\n     if (\n-        (kind is bytes or isinstance(elems, OneCharStringStrategy))\n+        (\n+            kind is bytes\n+            or isinstance(\n+                unwrap_strategies(self.element_strategy), OneCharStringStrategy\n+            )\n+        )\n         and isinstance(pattern := getattr(condition, \"__self__\", None), re.Pattern)\n         and isinstance(pattern.pattern, kind)\n     ):\n@@ -331,15 +342,15 @@ def _identifier_characters():\n     return id_start, id_continue\n \n \n-class BytesStrategy(ListStrategy):\n-    def __init__(self, min_size, max_size):\n-        super().__init__(IntegersStrategy(0, 255), min_size=min_size, max_size=max_size)\n+class BytesStrategy(SearchStrategy):\n+    def __init__(self, min_size: int, max_size: Optional[int]):\n+        self.min_size = min_size\n+        self.max_size = (\n+            max_size if max_size is not None else COLLECTION_DEFAULT_MAX_SIZE\n+        )\n \n     def do_draw(self, data):\n-        # TODO: refactor the underlying provider to support variable-length bytes\n-        if self.min_size == self.max_size:\n-            return bytes(data.draw_bytes(self.min_size))\n-        return bytes(super().do_draw(data))\n+        return data.draw_bytes(self.min_size, self.max_size)\n \n     _nonempty_filters = (\n         *ListStrategy._nonempty_filters,\n@@ -353,4 +364,4 @@ def do_draw(self, data):\n     def filter(self, condition):\n         if (new := _string_filter_rewrite(self, bytes, condition)) is not None:\n             return new\n-        return super().filter(condition)\n+        return ListStrategy.filter(self, condition)\ndiff --git a/contrib/python/hypothesis/py3/hypothesis/version.py b/contrib/python/hypothesis/py3/hypothesis/version.py\nindex af1b866e64ee..2c69dd8977a7 100644\n--- a/contrib/python/hypothesis/py3/hypothesis/version.py\n+++ b/contrib/python/hypothesis/py3/hypothesis/version.py\n@@ -8,5 +8,5 @@\n # v. 2.0. If a copy of the MPL was not distributed with this file, You can\n # obtain one at https://mozilla.org/MPL/2.0/.\n \n-__version_info__ = (6, 111, 2)\n+__version_info__ = (6, 112, 0)\n __version__ = \".\".join(map(str, __version_info__))\ndiff --git a/contrib/python/hypothesis/py3/ya.make b/contrib/python/hypothesis/py3/ya.make\nindex f7183e57f135..ce520eaa5f5a 100644\n--- a/contrib/python/hypothesis/py3/ya.make\n+++ b/contrib/python/hypothesis/py3/ya.make\n@@ -2,7 +2,7 @@\n \n PY3_LIBRARY()\n \n-VERSION(6.111.2)\n+VERSION(6.112.0)\n \n LICENSE(MPL-2.0)\n \ndiff --git a/contrib/python/more-itertools/py3/.dist-info/METADATA b/contrib/python/more-itertools/py3/.dist-info/METADATA\nindex c346b408809d..a06c9b0a570f 100644\n--- a/contrib/python/more-itertools/py3/.dist-info/METADATA\n+++ b/contrib/python/more-itertools/py3/.dist-info/METADATA\n@@ -1,6 +1,6 @@\n Metadata-Version: 2.1\n Name: more-itertools\n-Version: 10.4.0\n+Version: 10.5.0\n Summary: More routines for operating on iterables, beyond itertools\n Keywords: itertools,iterator,iteration,filter,peek,peekable,chunk,chunked\n Author-email: Erik Rose <erikrose@grinchcentral.com>\ndiff --git a/contrib/python/more-itertools/py3/more_itertools/__init__.py b/contrib/python/more-itertools/py3/more_itertools/__init__.py\nindex 2e2fcbbe7b33..583fb5745782 100644\n--- a/contrib/python/more-itertools/py3/more_itertools/__init__.py\n+++ b/contrib/python/more-itertools/py3/more_itertools/__init__.py\n@@ -3,4 +3,4 @@\n from .more import *  # noqa\n from .recipes import *  # noqa\n \n-__version__ = '10.4.0'\n+__version__ = '10.5.0'\ndiff --git a/contrib/python/more-itertools/py3/more_itertools/more.py b/contrib/python/more-itertools/py3/more_itertools/more.py\nindex 3bf2c76b7654..64fab2618584 100644\n--- a/contrib/python/more-itertools/py3/more_itertools/more.py\n+++ b/contrib/python/more-itertools/py3/more_itertools/more.py\n@@ -3017,7 +3017,7 @@ def circular_shifts(iterable, steps=1):\n     n = len(buffer)\n     n //= math.gcd(n, steps)\n \n-    for __ in repeat(None, n):\n+    for _ in repeat(None, n):\n         buffer.rotate(steps)\n         yield tuple(buffer)\n \ndiff --git a/contrib/python/more-itertools/py3/more_itertools/more.pyi b/contrib/python/more-itertools/py3/more_itertools/more.pyi\nindex f1a155dce7d8..66e6938e1345 100644\n--- a/contrib/python/more-itertools/py3/more_itertools/more.pyi\n+++ b/contrib/python/more-itertools/py3/more_itertools/more.pyi\n@@ -3,8 +3,8 @@\n from __future__ import annotations\n \n import sys\n+import types\n \n-from types import TracebackType\n from typing import (\n     Any,\n     Callable,\n@@ -42,7 +42,7 @@ _Raisable = BaseException | Type[BaseException]\n \n # The type of isinstance's second argument (from typeshed builtins)\n if sys.version_info >= (3, 10):\n-    _ClassInfo = type | UnionType | tuple[_ClassInfo, ...]\n+    _ClassInfo = type | types.UnionType | tuple[_ClassInfo, ...]\n else:\n     _ClassInfo = type | tuple[_ClassInfo, ...]\n \n@@ -619,7 +619,7 @@ class callback_iter(Generic[_T], Iterator[_T]):\n         self,\n         exc_type: Type[BaseException] | None,\n         exc_value: BaseException | None,\n-        traceback: TracebackType | None,\n+        traceback: types.TracebackType | None,\n     ) -> bool | None: ...\n     def __iter__(self) -> callback_iter[_T]: ...\n     def __next__(self) -> _T: ...\ndiff --git a/contrib/python/more-itertools/py3/more_itertools/recipes.py b/contrib/python/more-itertools/py3/more_itertools/recipes.py\nindex a21a1f5d88dc..67f76fa899ef 100644\n--- a/contrib/python/more-itertools/py3/more_itertools/recipes.py\n+++ b/contrib/python/more-itertools/py3/more_itertools/recipes.py\n@@ -218,7 +218,12 @@ def all_equal(iterable, key=None):\n         True\n \n     \"\"\"\n-    return len(list(islice(groupby(iterable, key), 2))) <= 1\n+    iterator = groupby(iterable, key)\n+    for first in iterator:\n+        for second in iterator:\n+            return False\n+        return True\n+    return True\n \n \n def quantify(iterable, pred=bool):\ndiff --git a/contrib/python/more-itertools/py3/ya.make b/contrib/python/more-itertools/py3/ya.make\nindex ee8f86bc1420..45df93175b64 100644\n--- a/contrib/python/more-itertools/py3/ya.make\n+++ b/contrib/python/more-itertools/py3/ya.make\n@@ -2,7 +2,7 @@\n \n PY3_LIBRARY()\n \n-VERSION(10.4.0)\n+VERSION(10.5.0)\n \n LICENSE(MIT)\n \ndiff --git a/contrib/python/types-protobuf/.dist-info/METADATA b/contrib/python/types-protobuf/.dist-info/METADATA\nindex c7742acc49e5..ce1d526999cc 100644\n--- a/contrib/python/types-protobuf/.dist-info/METADATA\n+++ b/contrib/python/types-protobuf/.dist-info/METADATA\n@@ -1,9 +1,9 @@\n Metadata-Version: 2.1\n Name: types-protobuf\n-Version: 5.27.0.20240626\n+Version: 5.27.0.20240907\n Summary: Typing stubs for protobuf\n Home-page: https://github.com/python/typeshed\n-License: Apache-2.0 license\n+License: Apache-2.0\n Project-URL: GitHub, https://github.com/python/typeshed\n Project-URL: Changes, https://github.com/typeshed-internal/stub_uploader/blob/main/data/changelogs/protobuf.md\n Project-URL: Issue tracker, https://github.com/python/typeshed/issues\n@@ -38,6 +38,7 @@ If you find that annotations are missing, feel free to contribute and help compl\n \n \n See https://github.com/python/typeshed/blob/main/README.md for more details.\n-This package was generated from typeshed commit `b13bb947c3f7a000d4d4ec6ad2868726a289b2b4` and was tested\n-with mypy 1.10.0, pyright 1.1.369, and\n+This package was generated from typeshed commit\n+[`e8e9291c76f50c3bcde79e7bb61060f5c24c054e`](https://github.com/python/typeshed/commit/e8e9291c76f50c3bcde79e7bb61060f5c24c054e) and was tested\n+with mypy 1.11.1, pyright 1.1.379, and\n pytype 2024.4.11.\ndiff --git a/contrib/python/types-protobuf/google-stubs/protobuf/internal/containers.pyi b/contrib/python/types-protobuf/google-stubs/protobuf/internal/containers.pyi\nindex 30a37353c125..aaa970439216 100644\n--- a/contrib/python/types-protobuf/google-stubs/protobuf/internal/containers.pyi\n+++ b/contrib/python/types-protobuf/google-stubs/protobuf/internal/containers.pyi\n@@ -33,7 +33,7 @@ class RepeatedScalarFieldContainer(BaseContainer[_ScalarV]):\n     def append(self, value: _ScalarV) -> None: ...\n     def insert(self, key: int, value: _ScalarV) -> None: ...\n     def extend(self, elem_seq: Iterable[_ScalarV] | None) -> None: ...\n-    def MergeFrom(self: _M, other: _M) -> None: ...\n+    def MergeFrom(self: _M, other: _M | Iterable[_ScalarV]) -> None: ...\n     def remove(self, elem: _ScalarV) -> None: ...\n     def pop(self, key: int = -1) -> _ScalarV: ...\n     @overload\n@@ -49,7 +49,7 @@ class RepeatedCompositeFieldContainer(BaseContainer[_MessageV]):\n     def append(self, value: _MessageV) -> None: ...\n     def insert(self, key: int, value: _MessageV) -> None: ...\n     def extend(self, elem_seq: Iterable[_MessageV]) -> None: ...\n-    def MergeFrom(self: _M, other: _M) -> None: ...\n+    def MergeFrom(self: _M, other: _M | Iterable[_MessageV]) -> None: ...\n     def remove(self, elem: _MessageV) -> None: ...\n     def pop(self, key: int = -1) -> _MessageV: ...\n     def __delitem__(self, key: int | slice) -> None: ...\ndiff --git a/contrib/python/types-protobuf/ya.make b/contrib/python/types-protobuf/ya.make\nindex a4a8846b2c36..f2e94d656ade 100644\n--- a/contrib/python/types-protobuf/ya.make\n+++ b/contrib/python/types-protobuf/ya.make\n@@ -2,7 +2,7 @@\n \n PY3_LIBRARY()\n \n-VERSION(5.27.0.20240626)\n+VERSION(5.27.0.20240907)\n \n LICENSE(Apache-2.0)\n \ndiff --git a/contrib/python/ydb/py3/.dist-info/METADATA b/contrib/python/ydb/py3/.dist-info/METADATA\nindex db2f0036b392..7c7c7cdbafdb 100644\n--- a/contrib/python/ydb/py3/.dist-info/METADATA\n+++ b/contrib/python/ydb/py3/.dist-info/METADATA\n@@ -1,6 +1,6 @@\n Metadata-Version: 2.1\n Name: ydb\n-Version: 3.17.1\n+Version: 3.17.2\n Summary: YDB Python SDK\n Home-page: http://github.com/ydb-platform/ydb-python-sdk\n Author: Yandex LLC\ndiff --git a/contrib/python/ydb/py3/ya.make b/contrib/python/ydb/py3/ya.make\nindex c1ab6d44721b..b3e9929330db 100644\n--- a/contrib/python/ydb/py3/ya.make\n+++ b/contrib/python/ydb/py3/ya.make\n@@ -2,7 +2,7 @@\n \n PY3_LIBRARY()\n \n-VERSION(3.17.1)\n+VERSION(3.17.2)\n \n LICENSE(Apache-2.0)\n \ndiff --git a/contrib/python/ydb/py3/ydb/table.py b/contrib/python/ydb/py3/ydb/table.py\nindex cfcffb17af3f..01f5e52b6aec 100644\n--- a/contrib/python/ydb/py3/ydb/table.py\n+++ b/contrib/python/ydb/py3/ydb/table.py\n@@ -290,6 +290,7 @@ def __init__(self, name):\n         self._pb.name = name\n         self.name = name\n         self.index_columns = []\n+        self.data_columns = []\n         # output only.\n         self.status = None\n \n@@ -307,6 +308,12 @@ def with_index_columns(self, *columns):\n             self.index_columns.append(column)\n         return self\n \n+    def with_data_columns(self, *columns):\n+        for column in columns:\n+            self._pb.data_columns.append(column)\n+            self.data_columns.append(column)\n+        return self\n+\n     def to_pb(self):\n         return self._pb\n \ndiff --git a/contrib/python/ydb/py3/ydb/ydb_version.py b/contrib/python/ydb/py3/ydb/ydb_version.py\nindex b0ef9f368d23..1115cbbcb9f4 100644\n--- a/contrib/python/ydb/py3/ydb/ydb_version.py\n+++ b/contrib/python/ydb/py3/ydb/ydb_version.py\n@@ -1,1 +1,1 @@\n-VERSION = \"3.17.1\"\n+VERSION = \"3.17.2\"\ndiff --git a/contrib/restricted/abseil-cpp-tstring/y_absl/debugging/ya.make b/contrib/restricted/abseil-cpp-tstring/y_absl/debugging/ya.make\nindex b4b026744905..b8fee8b0708c 100644\n--- a/contrib/restricted/abseil-cpp-tstring/y_absl/debugging/ya.make\n+++ b/contrib/restricted/abseil-cpp-tstring/y_absl/debugging/ya.make\n@@ -19,21 +19,21 @@ ADDINCL(\n \n NO_COMPILER_WARNINGS()\n \n-IF(NOT Y_ABSL_DONT_USE_DEBUG)\n-SRCS(\n-    failure_signal_handler.cc\n-    internal/address_is_readable.cc\n-    internal/decode_rust_punycode.cc\n-    internal/demangle.cc\n-    internal/demangle_rust.cc\n-    internal/elf_mem_image.cc\n-    internal/examine_stack.cc\n-    internal/utf8_for_code_point.cc\n-    internal/vdso_support.cc\n-    leak_check.cc\n-    stacktrace.cc\n-    symbolize.cc\n-)\n+IF (NOT Y_ABSL_DONT_USE_DEBUG)\n+    SRCS(\n+        failure_signal_handler.cc\n+        internal/address_is_readable.cc\n+        internal/decode_rust_punycode.cc\n+        internal/demangle.cc\n+        internal/demangle_rust.cc\n+        internal/elf_mem_image.cc\n+        internal/examine_stack.cc\n+        internal/utf8_for_code_point.cc\n+        internal/vdso_support.cc\n+        leak_check.cc\n+        stacktrace.cc\n+        symbolize.cc\n+    )\n ENDIF()\n \n END()\ndiff --git a/contrib/restricted/abseil-cpp-tstring/y_absl/log/ya.make b/contrib/restricted/abseil-cpp-tstring/y_absl/log/ya.make\nindex 74000ae8eefd..746cf7a0cdf9 100644\n--- a/contrib/restricted/abseil-cpp-tstring/y_absl/log/ya.make\n+++ b/contrib/restricted/abseil-cpp-tstring/y_absl/log/ya.make\n@@ -32,8 +32,10 @@ ENDIF()\n \n NO_COMPILER_WARNINGS()\n \n-IF(Y_ABSL_DONT_USE_DEBUG)\n-    CFLAGS(-DY_ABSL_DONT_USE_DEBUG_LIBRARY=1)\n+IF (Y_ABSL_DONT_USE_DEBUG)\n+    CFLAGS(\n+        -DY_ABSL_DONT_USE_DEBUG_LIBRARY=1\n+    )\n ENDIF()\n \n SRCS(\ndiff --git a/contrib/restricted/abseil-cpp-tstring/y_absl/strings/internal/resize_uninitialized.h b/contrib/restricted/abseil-cpp-tstring/y_absl/strings/internal/resize_uninitialized.h\nindex 984562257dbf..8451cc504bb4 100644\n--- a/contrib/restricted/abseil-cpp-tstring/y_absl/strings/internal/resize_uninitialized.h\n+++ b/contrib/restricted/abseil-cpp-tstring/y_absl/strings/internal/resize_uninitialized.h\n@@ -49,6 +49,16 @@ struct ResizeUninitializedTraits<\n   }\n };\n \n+template <typename string_type>\n+struct ResizeUninitializedTraits<\n+    string_type, y_absl::void_t<decltype(std::declval<string_type&>()\n+                                           .ReserveAndResize(237))> > {\n+  using HasMember = std::true_type;\n+  static void Resize(string_type* s, size_t new_size) {\n+    s->ReserveAndResize(new_size);\n+  }\n+};\n+\n // Returns true if the TString implementation supports a resize where\n // the new characters added to the TString are left untouched.\n //\n@@ -98,6 +108,15 @@ struct AppendUninitializedTraits<\n   }\n };\n \n+template <typename string_type>\n+struct AppendUninitializedTraits<\n+    string_type, y_absl::void_t<decltype(std::declval<string_type&>()\n+                                           .ReserveAndResize(237))> > {\n+  static void Append(string_type* s, size_t n) {\n+    s->ReserveAndResize(s->size() + n);\n+  }\n+};\n+\n // Like STLStringResizeUninitialized(str, new_size), except guaranteed to use\n // exponential growth so that the amortized complexity of increasing the string\n // size by a small amount is O(1), in contrast to O(str->size()) in the case of\ndiff --git a/contrib/restricted/abseil-cpp-tstring/y_absl/strings/ya.make b/contrib/restricted/abseil-cpp-tstring/y_absl/strings/ya.make\nindex 74d25c05f589..a2d57d8f2045 100644\n--- a/contrib/restricted/abseil-cpp-tstring/y_absl/strings/ya.make\n+++ b/contrib/restricted/abseil-cpp-tstring/y_absl/strings/ya.make\n@@ -19,12 +19,14 @@ ADDINCL(\n \n NO_COMPILER_WARNINGS()\n \n-SRCDIR(contrib/restricted/abseil-cpp-tstring/y_absl)\n-\n-IF(Y_ABSL_DONT_USE_DEBUG)\n-    CFLAGS(-DY_ABSL_DONT_USE_DEBUG_LIBRARY=1)\n+IF (Y_ABSL_DONT_USE_DEBUG)\n+    CFLAGS(\n+        -DY_ABSL_DONT_USE_DEBUG_LIBRARY=1\n+    )\n ENDIF()\n \n+SRCDIR(contrib/restricted/abseil-cpp-tstring/y_absl)\n+\n SRCS(\n     crc/crc32c.cc\n     crc/internal/cpu_detect.cc\ndiff --git a/contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/mutex.cc b/contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/mutex.cc\nindex 8fb7c97e3939..ac0cd0514148 100644\n--- a/contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/mutex.cc\n+++ b/contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/mutex.cc\n@@ -434,14 +434,10 @@ static SynchEvent* GetSynchEvent(const void* addr) {\n // if event recording is on\n static void PostSynchEvent(void* obj, int ev) {\n   SynchEvent* e = GetSynchEvent(obj);\n-#ifdef Y_ABSL_DONT_USE_DEBUG_LIBRARY\n-  constexpr bool DONT_COLLECT_STACK_TRACE = 1;\n-#else\n-  constexpr bool DONT_COLLECT_STACK_TRACE = 0;\n-#endif\n+#ifndef Y_ABSL_DONT_USE_DEBUG_LIBRARY\n   // logging is on if event recording is on and either there's no event struct,\n   // or it explicitly says to log\n-  if ((e == nullptr || e->log) && !DONT_COLLECT_STACK_TRACE) {\n+  if (e == nullptr || e->log) {\n     void* pcs[40];\n     int n = y_absl::GetStackTrace(pcs, Y_ABSL_ARRAYSIZE(pcs), 1);\n     // A buffer with enough space for the ASCII for all the PCs, even on a\n@@ -460,6 +456,7 @@ static void PostSynchEvent(void* obj, int ev) {\n     Y_ABSL_RAW_LOG(INFO, \"%s%p %s %s\", event_properties[ev].msg, obj,\n                  (e == nullptr ? \"\" : e->name), buffer);\n   }\n+#endif\n   const int flags = event_properties[ev].flags;\n   if ((flags & SYNCH_F_LCK) != 0 && e != nullptr && e->invariant != nullptr) {\n     // Calling the invariant as is causes problems under ThreadSanitizer.\n@@ -1325,6 +1322,7 @@ static inline void DebugOnlyLockLeave(Mutex* mu) {\n \n static char* StackString(void** pcs, int n, char* buf, int maxlen,\n                          bool symbolize) {\n+#ifndef Y_ABSL_DONT_USE_DEBUG_LIBRARY\n   static constexpr int kSymLen = 200;\n   char sym[kSymLen];\n   int len = 0;\n@@ -1344,12 +1342,21 @@ static char* StackString(void** pcs, int n, char* buf, int maxlen,\n     len += strlen(&buf[len]);\n   }\n   return buf;\n+#else\n+  buf[0] = 0;\n+  return buf;\n+#endif\n }\n \n static char* CurrentStackString(char* buf, int maxlen, bool symbolize) {\n+#ifndef Y_ABSL_DONT_USE_DEBUG_LIBRARY\n   void* pcs[40];\n   return StackString(pcs, y_absl::GetStackTrace(pcs, Y_ABSL_ARRAYSIZE(pcs), 2), buf,\n                      maxlen, symbolize);\n+#else\n+  buf[0] = 0;\n+  return buf;\n+#endif\n }\n \n namespace {\n@@ -1375,7 +1382,11 @@ struct ScopedDeadlockReportBuffers {\n \n // Helper to pass to GraphCycles::UpdateStackTrace.\n int GetStack(void** stack, int max_depth) {\n+#ifndef Y_ABSL_DONT_USE_DEBUG_LIBRARY\n   return y_absl::GetStackTrace(stack, max_depth, 3);\n+#else\n+  return 0;\n+#endif\n }\n }  // anonymous namespace\n \ndiff --git a/contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/ya.make b/contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/ya.make\nindex a4eee05708c8..82ecd4b5ff96 100644\n--- a/contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/ya.make\n+++ b/contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/ya.make\n@@ -20,12 +20,14 @@ ADDINCL(\n     GLOBAL contrib/restricted/abseil-cpp-tstring\n )\n \n-IF(Y_ABSL_DONT_USE_DEBUG)\n-    CFLAGS(-DY_ABSL_DONT_USE_DEBUG_LIBRARY=1)\n-ENDIF()\n-\n NO_COMPILER_WARNINGS()\n \n+IF (Y_ABSL_DONT_USE_DEBUG)\n+    CFLAGS(\n+        -DY_ABSL_DONT_USE_DEBUG_LIBRARY=1\n+    )\n+ENDIF()\n+\n SRCS(\n     barrier.cc\n     blocking_counter.cc\ndiff --git a/contrib/restricted/boost/asio/include/boost/asio/detail/config.hpp b/contrib/restricted/boost/asio/include/boost/asio/detail/config.hpp\nindex 3e810c89f774..8e831973218d 100644\n--- a/contrib/restricted/boost/asio/include/boost/asio/detail/config.hpp\n+++ b/contrib/restricted/boost/asio/include/boost/asio/detail/config.hpp\n@@ -583,7 +583,9 @@\n \n #if defined(BOOST_ASIO_HAS_ALIGNOF)\n # define BOOST_ASIO_ALIGNOF(T) alignof(T)\n-# if defined(__GNUC__)\n+# if defined(__STDCPP_DEFAULT_NEW_ALIGNMENT__)\n+#  define BOOST_ASIO_DEFAULT_ALIGN __STDCPP_DEFAULT_NEW_ALIGNMENT__\n+# elif defined(__GNUC__)\n #  if ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 9)) || (__GNUC__ > 4)\n #   define BOOST_ASIO_DEFAULT_ALIGN alignof(std::max_align_t)\n #  else // ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 9)) || (__GNUC__ > 4)\n@@ -603,9 +605,11 @@\n #  if (__cplusplus >= 201703)\n #   if defined(__clang__)\n #    if defined(BOOST_ASIO_HAS_CLANG_LIBCXX)\n-#     if (_LIBCPP_STD_VER > 14) && defined(_LIBCPP_HAS_ALIGNED_ALLOC)\n+#     if (_LIBCPP_STD_VER > 14) && defined(_LIBCPP_HAS_ALIGNED_ALLOC) \\\n+        && !defined(_LIBCPP_MSVCRT) && !defined(__MINGW32__)\n #      define BOOST_ASIO_HAS_STD_ALIGNED_ALLOC 1\n #     endif // (_LIBCPP_STD_VER > 14) && defined(_LIBCPP_HAS_ALIGNED_ALLOC)\n+            //   && !defined(_LIBCPP_MSVCRT) && !defined(__MINGW32__)\n #    elif defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)\n #     define BOOST_ASIO_HAS_STD_ALIGNED_ALLOC 1\n #    endif // defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)\n@@ -1471,6 +1475,13 @@\n # endif // !defined(BOOST_ASIO_HAS_TIMERFD)\n #endif // defined(__linux__)\n \n+// Linux: io_uring is used instead of epoll.\n+#if !defined(BOOST_ASIO_HAS_IO_URING_AS_DEFAULT)\n+# if !defined(BOOST_ASIO_HAS_EPOLL) && defined(BOOST_ASIO_HAS_IO_URING)\n+#  define BOOST_ASIO_HAS_IO_URING_AS_DEFAULT 1\n+# endif // !defined(BOOST_ASIO_HAS_EPOLL) && defined(BOOST_ASIO_HAS_IO_URING)\n+#endif // !defined(BOOST_ASIO_HAS_IO_URING_AS_DEFAULT)\n+\n // Mac OS X, FreeBSD, NetBSD, OpenBSD: kqueue.\n #if (defined(__MACH__) && defined(__APPLE__)) \\\n   || defined(__FreeBSD__) \\\n@@ -1572,6 +1583,34 @@\n # endif // !defined(BOOST_ASIO_DISABLE_LOCAL_SOCKETS)\n #endif // !defined(BOOST_ASIO_HAS_LOCAL_SOCKETS)\n \n+// Files.\n+#if !defined(BOOST_ASIO_HAS_FILE)\n+# if !defined(BOOST_ASIO_DISABLE_FILE)\n+#  if defined(BOOST_ASIO_HAS_WINDOWS_RANDOM_ACCESS_HANDLE)\n+#   define BOOST_ASIO_HAS_FILE 1\n+#  elif defined(BOOST_ASIO_HAS_IO_URING)\n+#   define BOOST_ASIO_HAS_FILE 1\n+#  endif // defined(BOOST_ASIO_HAS_IO_URING)\n+# endif // !defined(BOOST_ASIO_DISABLE_FILE)\n+#endif // !defined(BOOST_ASIO_HAS_FILE)\n+\n+// Pipes.\n+#if !defined(BOOST_ASIO_HAS_PIPE)\n+# if defined(BOOST_ASIO_HAS_IOCP) \\\n+  || !defined(BOOST_ASIO_WINDOWS) \\\n+  && !defined(BOOST_ASIO_WINDOWS_RUNTIME) \\\n+  && !defined(__CYGWIN__)\n+#  if !defined(__SYMBIAN32__)\n+#   if !defined(BOOST_ASIO_DISABLE_PIPE)\n+#    define BOOST_ASIO_HAS_PIPE 1\n+#   endif // !defined(BOOST_ASIO_DISABLE_PIPE)\n+#  endif // !defined(__SYMBIAN32__)\n+# endif // defined(BOOST_ASIO_HAS_IOCP)\n+        //   || !defined(BOOST_ASIO_WINDOWS)\n+        //   && !defined(BOOST_ASIO_WINDOWS_RUNTIME)\n+        //   && !defined(__CYGWIN__)\n+#endif // !defined(BOOST_ASIO_HAS_PIPE)\n+\n // Can use sigaction() instead of signal().\n #if !defined(BOOST_ASIO_HAS_SIGACTION)\n # if !defined(BOOST_ASIO_DISABLE_SIGACTION)\ndiff --git a/contrib/restricted/boost/asio/include/boost/asio/detail/is_buffer_sequence.hpp b/contrib/restricted/boost/asio/include/boost/asio/detail/is_buffer_sequence.hpp\nindex 53d33ad445a0..402e6801991f 100644\n--- a/contrib/restricted/boost/asio/include/boost/asio/detail/is_buffer_sequence.hpp\n+++ b/contrib/restricted/boost/asio/include/boost/asio/detail/is_buffer_sequence.hpp\n@@ -25,6 +25,8 @@ namespace asio {\n \n class mutable_buffer;\n class const_buffer;\n+class mutable_registered_buffer;\n+class const_registered_buffer;\n \n namespace detail {\n \n@@ -259,6 +261,30 @@ struct is_buffer_sequence<const_buffer, mutable_buffer>\n {\n };\n \n+template <>\n+struct is_buffer_sequence<mutable_registered_buffer, mutable_buffer>\n+  : true_type\n+{\n+};\n+\n+template <>\n+struct is_buffer_sequence<mutable_registered_buffer, const_buffer>\n+  : true_type\n+{\n+};\n+\n+template <>\n+struct is_buffer_sequence<const_registered_buffer, const_buffer>\n+  : true_type\n+{\n+};\n+\n+template <>\n+struct is_buffer_sequence<const_registered_buffer, mutable_buffer>\n+  : false_type\n+{\n+};\n+\n template <typename T>\n struct is_dynamic_buffer_class_v1\n   : integral_constant<bool,\ndiff --git a/contrib/restricted/boost/asio/include/boost/asio/detail/pop_options.hpp b/contrib/restricted/boost/asio/include/boost/asio/detail/pop_options.hpp\nindex c34eb983b4b6..89008ccdb99a 100644\n--- a/contrib/restricted/boost/asio/include/boost/asio/detail/pop_options.hpp\n+++ b/contrib/restricted/boost/asio/include/boost/asio/detail/pop_options.hpp\n@@ -146,4 +146,8 @@\n #  endif\n # endif\n \n+# pragma pop_macro (\"emit\")\n+# pragma pop_macro (\"signal\")\n+# pragma pop_macro (\"slot\")\n+\n #endif\ndiff --git a/contrib/restricted/boost/asio/include/boost/asio/detail/push_options.hpp b/contrib/restricted/boost/asio/include/boost/asio/detail/push_options.hpp\nindex 1a709cb1d44f..020e97be440f 100644\n--- a/contrib/restricted/boost/asio/include/boost/asio/detail/push_options.hpp\n+++ b/contrib/restricted/boost/asio/include/boost/asio/detail/push_options.hpp\n@@ -169,6 +169,7 @@\n # pragma warning (disable:4127)\n # pragma warning (disable:4180)\n # pragma warning (disable:4244)\n+# pragma warning (disable:4265)\n # pragma warning (disable:4355)\n # pragma warning (disable:4510)\n # pragma warning (disable:4512)\ndiff --git a/contrib/restricted/boost/asio/ya.make b/contrib/restricted/boost/asio/ya.make\nindex 58792d235015..3a2909b01646 100644\n--- a/contrib/restricted/boost/asio/ya.make\n+++ b/contrib/restricted/boost/asio/ya.make\n@@ -9,9 +9,9 @@ LICENSE(\n \n LICENSE_TEXTS(.yandex_meta/licenses.list.txt)\n \n-VERSION(1.77.0)\n+VERSION(1.78.0)\n \n-ORIGINAL_SOURCE(https://github.com/boostorg/asio/archive/boost-1.77.0.tar.gz)\n+ORIGINAL_SOURCE(https://github.com/boostorg/asio/archive/boost-1.78.0.tar.gz)\n \n PEERDIR(\n     contrib/libs/openssl\n@@ -37,4 +37,8 @@ ADDINCL(\n     GLOBAL contrib/restricted/boost/asio/include\n )\n \n+NO_COMPILER_WARNINGS()\n+\n+NO_UTIL()\n+\n END()\ndiff --git a/contrib/restricted/fast_float/README.md b/contrib/restricted/fast_float/README.md\nindex 9c2e188fa948..316f813e3a75 100644\n--- a/contrib/restricted/fast_float/README.md\n+++ b/contrib/restricted/fast_float/README.md\n@@ -144,6 +144,51 @@ print the number 22250738585072012 three times:\n   std::cout << \"parsed the number \"<< i << std::endl;\n ```\n \n+## Behavior of result_out_of_range\n+\n+When parsing floating-point values, the numbers can sometimes be too small (e.g., `1e-1000`) or\n+too large (e.g., `1e1000`). The C language established the precedent that these small values are out of range.\n+In such cases, it is customary to parse small values to zero and large\n+values to infinity. That is the behaviour of the C language (e.g., `stdtod`). That is the behaviour followed by the fast_float library.\n+\n+\n+\n+Specifically, we follow Jonathan Wakely's interpretation of the standard:\n+\n+> In any case, the resulting value is one of at most two floating-point values closest to the value of the string matching the pattern.\n+\n+It is also the approach taken by the [Microsoft C++ library](https://github.com/microsoft/STL/blob/62205ab155d093e71dd9588a78f02c5396c3c14b/tests/std/tests/P0067R5_charconv/test.cpp#L943-L946).\n+\n+Hence, we have the following examples:\n+\n+```cpp\n+  double result = -1;\n+  std::string str = \"3e-1000\";\n+  auto r = fast_float::from_chars(str.data(), str.data() + str.size(), result);\n+  // r.ec == std::errc::result_out_of_range\n+  // r.ptr == str.data() + 7\n+  // result == 0\n+```\n+\n+\n+```cpp\n+  double result = -1;\n+  std::string str = \"3e1000\";\n+  auto r = fast_float::from_chars(str.data(), str.data() + str.size(), result);\n+  // r.ec == std::errc::result_out_of_range\n+  // r.ptr == str.data() + 6\n+  // result == std::numeric_limits<double>::infinity()\n+```\n+\n+Users who wish for the value to be left unmodified given `std::errc::result_out_of_range` may do so by adding two lines of code:\n+\n+```cpp\n+  double old_result = result; // make copy\n+  auto r = fast_float::from_chars(start, end, result);\n+  if(r.ec == std::errc::result_out_of_range) { result = old_result; }\n+```\n+\n+\n ## C++20: compile-time evaluation (constexpr)\n \n In C++20, you may use `fast_float::from_chars` to parse strings\n@@ -290,6 +335,7 @@ int main() {\n The fast_float library is part of:\n \n - GCC (as of version 12): the `from_chars` function in GCC relies on fast_float.\n+- [Chromium](https://github.com/Chromium/Chromium), the engine behind Google Chrome and Microsoft Edge,\n - [WebKit](https://github.com/WebKit/WebKit), the engine behind Safari (Apple's web browser)\n - [DuckDB](https://duckdb.org)\n - [Apache Arrow](https://github.com/apache/arrow/pull/8494) where it multiplied the number parsing speed by two or three times\n@@ -369,6 +415,16 @@ target_link_libraries(myprogram PUBLIC fast_float)\n \n You should change the `GIT_TAG` line so that you recover the version you wish to use.\n \n+You may also use [CPM](https://github.com/cpm-cmake/CPM.cmake), like so:\n+\n+```\n+CPMAddPackage(\n+    NAME fast_float\n+    GITHUB_REPOSITORY \"fastfloat/fast_float\"\n+    GIT_TAG v6.1.4)\n+```\n+\n+\n ## Using as single header\n \n The script `script/amalgamate.py` may be used to generate a single header\n@@ -379,7 +435,13 @@ the command line help.\n \n You may directly download automatically generated single-header files:\n \n-https://github.com/fastfloat/fast_float/releases/download/v6.1.4/fast_float.h\n+https://github.com/fastfloat/fast_float/releases/download/v6.1.5/fast_float.h\n+\n+## Packages\n+\n+- The fast_float library is part of the [Conan package manager](https://conan.io/center/recipes/fast_float).\n+- It is part of the [brew package manager](https://formulae.brew.sh/formula/fast_float).\n+- Some Linux distribution like Fedora include fast_float (e.g., as `fast_float-devel`).\n \n ## RFC 7159\n \ndiff --git a/contrib/restricted/fast_float/include/fast_float/bigint.h b/contrib/restricted/fast_float/include/fast_float/bigint.h\nindex 92c3d5b1920c..03a5caa4a532 100644\n--- a/contrib/restricted/fast_float/include/fast_float/bigint.h\n+++ b/contrib/restricted/fast_float/include/fast_float/bigint.h\n@@ -404,12 +404,16 @@ template <typename = void> struct pow5_tables {\n #endif\n };\n \n+#if FASTFLOAT_DETAIL_MUST_DEFINE_CONSTEXPR_VARIABLE\n+\n template <typename T> constexpr uint32_t pow5_tables<T>::large_step;\n \n template <typename T> constexpr uint64_t pow5_tables<T>::small_power_of_5[];\n \n template <typename T> constexpr limb pow5_tables<T>::large_power_of_5[];\n \n+#endif\n+\n // big integer type. implements a small subset of big integer\n // arithmetic, using simple algorithms since asymptotically\n // faster algorithms are slower for a small number of limbs.\ndiff --git a/contrib/restricted/fast_float/include/fast_float/constexpr_feature_detect.h b/contrib/restricted/fast_float/include/fast_float/constexpr_feature_detect.h\nindex 18daf409419b..7624beafcacf 100644\n--- a/contrib/restricted/fast_float/include/fast_float/constexpr_feature_detect.h\n+++ b/contrib/restricted/fast_float/include/fast_float/constexpr_feature_detect.h\n@@ -37,4 +37,10 @@\n #define FASTFLOAT_IS_CONSTEXPR 0\n #endif\n \n+#if __cplusplus >= 201703L || (defined(_MSVC_LANG) && _MSVC_LANG >= 201703L)\n+#define FASTFLOAT_DETAIL_MUST_DEFINE_CONSTEXPR_VARIABLE 0\n+#else\n+#define FASTFLOAT_DETAIL_MUST_DEFINE_CONSTEXPR_VARIABLE 1\n+#endif\n+\n #endif // FASTFLOAT_CONSTEXPR_FEATURE_DETECT_H\ndiff --git a/contrib/restricted/fast_float/include/fast_float/fast_table.h b/contrib/restricted/fast_float/include/fast_float/fast_table.h\nindex 097e27b14b73..69f9b2c9245f 100644\n--- a/contrib/restricted/fast_float/include/fast_float/fast_table.h\n+++ b/contrib/restricted/fast_float/include/fast_float/fast_table.h\n@@ -693,10 +693,14 @@ template <class unused = void> struct powers_template {\n   };\n };\n \n+#if FASTFLOAT_DETAIL_MUST_DEFINE_CONSTEXPR_VARIABLE\n+\n template <class unused>\n constexpr uint64_t\n     powers_template<unused>::power_of_five_128[number_of_entries];\n \n+#endif\n+\n using powers = powers_template<>;\n \n } // namespace fast_float\ndiff --git a/contrib/restricted/fast_float/include/fast_float/float_common.h b/contrib/restricted/fast_float/include/fast_float/float_common.h\nindex 909765450def..82ab7b0c6b4c 100644\n--- a/contrib/restricted/fast_float/include/fast_float/float_common.h\n+++ b/contrib/restricted/fast_float/include/fast_float/float_common.h\n@@ -343,7 +343,8 @@ full_multiplication(uint64_t a, uint64_t b) {\n   // But MinGW on ARM64 doesn't have native support for 64-bit multiplications\n   answer.high = __umulh(a, b);\n   answer.low = a * b;\n-#elif defined(FASTFLOAT_32BIT) || (defined(_WIN64) && !defined(__clang__))\n+#elif defined(FASTFLOAT_32BIT) ||                                              \\\n+    (defined(_WIN64) && !defined(__clang__) && !defined(_M_ARM64))\n   answer.low = _umul128(a, b, &answer.high); // _umul128 not available on ARM64\n #elif defined(FASTFLOAT_64BIT) && defined(__SIZEOF_INT128__)\n   __uint128_t r = ((__uint128_t)a) * b;\n@@ -442,12 +443,16 @@ template <typename U> struct binary_format_lookup_tables<double, U> {\n                           constant_55555 * 5 * 5 * 5 * 5)};\n };\n \n+#if FASTFLOAT_DETAIL_MUST_DEFINE_CONSTEXPR_VARIABLE\n+\n template <typename U>\n constexpr double binary_format_lookup_tables<double, U>::powers_of_ten[];\n \n template <typename U>\n constexpr uint64_t binary_format_lookup_tables<double, U>::max_mantissa[];\n \n+#endif\n+\n template <typename U> struct binary_format_lookup_tables<float, U> {\n   static constexpr float powers_of_ten[] = {1e0f, 1e1f, 1e2f, 1e3f, 1e4f, 1e5f,\n                                             1e6f, 1e7f, 1e8f, 1e9f, 1e10f};\n@@ -469,12 +474,16 @@ template <typename U> struct binary_format_lookup_tables<float, U> {\n       0x1000000 / (constant_55555 * constant_55555 * 5)};\n };\n \n+#if FASTFLOAT_DETAIL_MUST_DEFINE_CONSTEXPR_VARIABLE\n+\n template <typename U>\n constexpr float binary_format_lookup_tables<float, U>::powers_of_ten[];\n \n template <typename U>\n constexpr uint64_t binary_format_lookup_tables<float, U>::max_mantissa[];\n \n+#endif\n+\n template <>\n inline constexpr int binary_format<double>::min_exponent_fast_path() {\n #if (FLT_EVAL_METHOD != 1) && (FLT_EVAL_METHOD != 0)\n@@ -677,8 +686,12 @@ template <typename = void> struct space_lut {\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n };\n \n+#if FASTFLOAT_DETAIL_MUST_DEFINE_CONSTEXPR_VARIABLE\n+\n template <typename T> constexpr bool space_lut<T>::value[];\n \n+#endif\n+\n inline constexpr bool is_space(uint8_t c) { return space_lut<>::value[c]; }\n #endif\n \n@@ -759,12 +772,16 @@ template <typename = void> struct int_luts {\n       3379220508056640625,     4738381338321616896};\n };\n \n+#if FASTFLOAT_DETAIL_MUST_DEFINE_CONSTEXPR_VARIABLE\n+\n template <typename T> constexpr uint8_t int_luts<T>::chdigit[];\n \n template <typename T> constexpr size_t int_luts<T>::maxdigits_u64[];\n \n template <typename T> constexpr uint64_t int_luts<T>::min_safe_u64[];\n \n+#endif\n+\n template <typename UC>\n fastfloat_really_inline constexpr uint8_t ch_to_digit(UC c) {\n   return int_luts<>::chdigit[static_cast<unsigned char>(c)];\ndiff --git a/contrib/restricted/fast_float/ya.make b/contrib/restricted/fast_float/ya.make\nindex 2149e7dfee6b..92f9329ca013 100644\n--- a/contrib/restricted/fast_float/ya.make\n+++ b/contrib/restricted/fast_float/ya.make\n@@ -10,9 +10,9 @@ LICENSE(\n \n LICENSE_TEXTS(.yandex_meta/licenses.list.txt)\n \n-VERSION(6.1.4)\n+VERSION(6.1.5)\n \n-ORIGINAL_SOURCE(https://github.com/fastfloat/fast_float/archive/v6.1.4.tar.gz)\n+ORIGINAL_SOURCE(https://github.com/fastfloat/fast_float/archive/v6.1.5.tar.gz)\n \n NO_COMPILER_WARNINGS()\n \ndiff --git a/library/cpp/lwtrace/trace.cpp b/library/cpp/lwtrace/trace.cpp\nindex 76e64a3025df..691ffc3a7ae7 100644\n--- a/library/cpp/lwtrace/trace.cpp\n+++ b/library/cpp/lwtrace/trace.cpp\n@@ -246,7 +246,7 @@ namespace NLWTrace {\n     class TReceiver: public TOperand<T, OT_VARIABLE> {\n     public:\n         TReceiver(TSession::TTraceVariables& traceVariables, const TString& name)\n-            : TOperand<T, OT_VARIABLE>(traceVariables, name, nullptr, 0)\n+            : TOperand<T, OT_VARIABLE>(traceVariables, name, {}, 0)\n         {\n         }\n     };\ndiff --git a/library/cpp/netliba/socket/protocols.h b/library/cpp/netliba/socket/protocols.h\nindex ec6896ab9b87..e364c3368a2b 100644\n--- a/library/cpp/netliba/socket/protocols.h\n+++ b/library/cpp/netliba/socket/protocols.h\n@@ -18,12 +18,15 @@ namespace NNetlibaSocket {\n             ACK_CANCELED,\n             ACK_RESEND_NOSHMEM,\n \n-            PING,\n-            PONG,\n+            PING,  // 10\n+            PONG,  // 11\n             PONG_IB,\n \n             KILL,\n \n+            XS_PING, // 14\n+            XS_PONG, // 15\n+\n             CMD_END,\n         };\n     }\ndiff --git a/library/cpp/tld/tlds-alpha-by-domain.txt b/library/cpp/tld/tlds-alpha-by-domain.txt\nindex 100d6aaa1750..dde82486ef82 100644\n--- a/library/cpp/tld/tlds-alpha-by-domain.txt\n+++ b/library/cpp/tld/tlds-alpha-by-domain.txt\n@@ -1,4 +1,4 @@\n-# Version 2024091600, Last Updated Mon Sep 16 07:07:02 2024 UTC\n+# Version 2024092200, Last Updated Sun Sep 22 07:07:01 2024 UTC\n AAA\n AARP\n ABB\ndiff --git a/library/cpp/xml/document/xml-document.cpp b/library/cpp/xml/document/xml-document.cpp\nindex 18a554d73213..25c0ed6a17ef 100644\n--- a/library/cpp/xml/document/xml-document.cpp\n+++ b/library/cpp/xml/document/xml-document.cpp\n@@ -304,6 +304,7 @@ namespace NXml {\n         xmlNode* nodePtr = GetPtr();\n         xmlUnlinkNode(nodePtr);\n         xmlFreeNode(nodePtr);\n+        NodePointer = nullptr;\n     }\n \n     static int XmlWriteToOstream(void* context, const char* buffer, int len) {\ndiff --git a/library/cpp/yt/error/origin_attributes.h b/library/cpp/yt/error/origin_attributes.h\nindex 05815c1e38ee..d98782469b87 100644\n--- a/library/cpp/yt/error/origin_attributes.h\n+++ b/library/cpp/yt/error/origin_attributes.h\n@@ -41,7 +41,7 @@ struct TOriginAttributes\n     static constexpr size_t ExtensionDataByteSizeCap = 64;\n     using TErasedExtensionData = TErasedStorage<ExtensionDataByteSizeCap>;\n \n-    TProcessId Pid;\n+    TProcessId Pid = 0;\n \n     NThreading::TThreadId Tid;\n     TThreadName ThreadName;\ndiff --git a/library/cpp/yt/memory/atomic_intrusive_ptr-inl.h b/library/cpp/yt/memory/atomic_intrusive_ptr-inl.h\nindex 21cd8b94120b..37a73c2c24ee 100644\n--- a/library/cpp/yt/memory/atomic_intrusive_ptr-inl.h\n+++ b/library/cpp/yt/memory/atomic_intrusive_ptr-inl.h\n@@ -15,36 +15,114 @@ template <class T>\n TAtomicIntrusivePtr<T>::TAtomicIntrusivePtr(std::nullptr_t)\n { }\n \n+template <class T>\n+TAtomicIntrusivePtr<T>& TAtomicIntrusivePtr<T>::operator=(TIntrusivePtr<T> other)\n+{\n+    Store(std::move(other));\n+    return *this;\n+}\n+\n+template <class T>\n+TAtomicIntrusivePtr<T>& TAtomicIntrusivePtr<T>::operator=(std::nullptr_t)\n+{\n+    Reset();\n+    return *this;\n+}\n+\n+template <class T>\n+TAtomicIntrusivePtr<T>::operator bool() const\n+{\n+    return Get();\n+}\n+\n+#ifdef _lsan_enabled_\n+\n template <class T>\n TAtomicIntrusivePtr<T>::TAtomicIntrusivePtr(TIntrusivePtr<T> other)\n-    : Ptr_(AcquireObject(other.Release(), true))\n+    : Ptr_(std::move(other))\n { }\n \n template <class T>\n TAtomicIntrusivePtr<T>::TAtomicIntrusivePtr(TAtomicIntrusivePtr&& other)\n-    : Ptr_(other.Ptr_.load(std::memory_order::relaxed))\n+    : Ptr_(std::move(other))\n+{ }\n+\n+template <class T>\n+TAtomicIntrusivePtr<T>::~TAtomicIntrusivePtr() = default;\n+\n+template <class T>\n+TIntrusivePtr<T> TAtomicIntrusivePtr<T>::Acquire() const\n {\n-    other.Ptr_.store(nullptr, std::memory_order::relaxed);\n+    auto guard = Guard(Lock_);\n+    return Ptr_;\n }\n \n template <class T>\n-TAtomicIntrusivePtr<T>::~TAtomicIntrusivePtr()\n+TIntrusivePtr<T> TAtomicIntrusivePtr<T>::Exchange(TIntrusivePtr<T> other)\n {\n-    ReleaseObject(Ptr_.load());\n+    auto guard = Guard(Lock_);\n+    Ptr_.Swap(other);\n+    return other;\n }\n \n template <class T>\n-TAtomicIntrusivePtr<T>& TAtomicIntrusivePtr<T>::operator=(TIntrusivePtr<T> other)\n+void TAtomicIntrusivePtr<T>::Store(TIntrusivePtr<T> other)\n {\n-    Store(std::move(other));\n-    return *this;\n+    Exchange(std::move(other));\n }\n \n template <class T>\n-TAtomicIntrusivePtr<T>& TAtomicIntrusivePtr<T>::operator=(std::nullptr_t)\n+void TAtomicIntrusivePtr<T>::Reset()\n {\n-    Reset();\n-    return *this;\n+    Exchange(nullptr);\n+}\n+\n+template <class T>\n+bool TAtomicIntrusivePtr<T>::CompareAndSwap(TRawPtr& comparePtr, T* target)\n+{\n+    auto guard = Guard(Lock_);\n+    if (Ptr_.Get() != comparePtr) {\n+        comparePtr = Ptr_.Get();\n+        return false;\n+    }\n+    auto targetPtr = TIntrusivePtr<T>(target, /*addReference*/ false);\n+    Ptr_.Swap(targetPtr);\n+    guard.Release();\n+    // targetPtr will die here.\n+    return true;\n+}\n+\n+template <class T>\n+bool TAtomicIntrusivePtr<T>::CompareAndSwap(TRawPtr& comparePtr, TIntrusivePtr<T> target)\n+{\n+    return CompareAndSwap(comparePtr, target.Release());\n+}\n+\n+template <class T>\n+typename TAtomicIntrusivePtr<T>::TRawPtr TAtomicIntrusivePtr<T>::Get() const\n+{\n+    auto guard = Guard(Lock_);\n+    return Ptr_.Get();\n+}\n+\n+#else\n+\n+template <class T>\n+TAtomicIntrusivePtr<T>::TAtomicIntrusivePtr(TIntrusivePtr<T> other)\n+    : Ptr_(AcquireObject(other.Release(), /*consumeRef*/ true))\n+{ }\n+\n+template <class T>\n+TAtomicIntrusivePtr<T>::TAtomicIntrusivePtr(TAtomicIntrusivePtr&& other)\n+    : Ptr_(other.Ptr_.load(std::memory_order::relaxed))\n+{\n+    other.Ptr_.store(nullptr, std::memory_order::relaxed);\n+}\n+\n+template <class T>\n+TAtomicIntrusivePtr<T>::~TAtomicIntrusivePtr()\n+{\n+    ReleaseObject(Ptr_.load());\n }\n \n template <class T>\n@@ -100,7 +178,7 @@ TIntrusivePtr<T> TAtomicIntrusivePtr<T>::Acquire() const\n template <class T>\n TIntrusivePtr<T> TAtomicIntrusivePtr<T>::Exchange(TIntrusivePtr<T> other)\n {\n-    auto [obj, localRefs] = TTaggedPtr<T>::Unpack(Ptr_.exchange(AcquireObject(other.Release(), true)));\n+    auto [obj, localRefs] = TTaggedPtr<T>::Unpack(Ptr_.exchange(AcquireObject(other.Release(), /*consumeRef*/ true)));\n     DoRelease(obj, localRefs + 1);\n     return TIntrusivePtr<T>(obj, false);\n }\n@@ -108,7 +186,7 @@ TIntrusivePtr<T> TAtomicIntrusivePtr<T>::Exchange(TIntrusivePtr<T> other)\n template <class T>\n void TAtomicIntrusivePtr<T>::Store(TIntrusivePtr<T> other)\n {\n-    ReleaseObject(Ptr_.exchange(AcquireObject(other.Release(), true)));\n+    ReleaseObject(Ptr_.exchange(AcquireObject(other.Release(), /*consumeRef*/ true)));\n }\n \n template <class T>\n@@ -120,7 +198,7 @@ void TAtomicIntrusivePtr<T>::Reset()\n template <class T>\n bool TAtomicIntrusivePtr<T>::CompareAndSwap(TRawPtr& comparePtr, T* target)\n {\n-    auto* targetPtr = AcquireObject(target, false);\n+    auto* targetPtr = AcquireObject(target, /*consumeRef*/ false);\n \n     auto currentPtr = Ptr_.load();\n     if (UnpackPointer<T>(currentPtr).Ptr == comparePtr && Ptr_.compare_exchange_strong(currentPtr, targetPtr)) {\n@@ -138,7 +216,7 @@ template <class T>\n bool TAtomicIntrusivePtr<T>::CompareAndSwap(TRawPtr& comparePtr, TIntrusivePtr<T> target)\n {\n     // TODO(lukyan): Make helper for packed owning ptr?\n-    auto targetPtr = AcquireObject(target.Release(), true);\n+    auto targetPtr = AcquireObject(target.Release(), /*consumeRef*/ true);\n \n     auto currentPtr = Ptr_.load();\n     if (TTaggedPtr<T>::Unpack(currentPtr).Ptr == comparePtr && Ptr_.compare_exchange_strong(currentPtr, targetPtr)) {\n@@ -158,17 +236,11 @@ typename TAtomicIntrusivePtr<T>::TRawPtr TAtomicIntrusivePtr<T>::Get() const\n     return TTaggedPtr<void>::Unpack(Ptr_.load()).Ptr;\n }\n \n-template <class T>\n-TAtomicIntrusivePtr<T>::operator bool() const\n-{\n-    return Get();\n-}\n-\n template <class T>\n TPackedPtr TAtomicIntrusivePtr<T>::AcquireObject(T* obj, bool consumeRef)\n {\n     if (obj) {\n-        Ref(obj, static_cast<int>(ReservedRefCount - consumeRef));\n+        Ref(obj, ReservedRefCount - static_cast<int>(consumeRef));\n     }\n \n     return TTaggedPtr(obj).Pack();\n@@ -185,10 +257,12 @@ template <class T>\n void TAtomicIntrusivePtr<T>::DoRelease(T* obj, int refs)\n {\n     if (obj) {\n-        Unref(obj, static_cast<int>(ReservedRefCount - refs));\n+        Unref(obj, ReservedRefCount - refs);\n     }\n }\n \n+#endif\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n template <class T>\ndiff --git a/library/cpp/yt/memory/atomic_intrusive_ptr.h b/library/cpp/yt/memory/atomic_intrusive_ptr.h\nindex ae0a307182db..91d220f7a955 100644\n--- a/library/cpp/yt/memory/atomic_intrusive_ptr.h\n+++ b/library/cpp/yt/memory/atomic_intrusive_ptr.h\n@@ -2,17 +2,20 @@\n \n #include \"intrusive_ptr.h\"\n \n-namespace NYT {\n-\n-////////////////////////////////////////////////////////////////////////////////\n+#include <util/system/compiler.h>\n \n-// Atomic ptr based on https://github.com/facebook/folly/blob/main/folly/concurrency/AtomicSharedPtr.h\n+#ifdef _lsan_enabled_\n+#include <util/system/spinlock.h>\n+#endif\n \n-// Operators * and -> for TAtomicIntrusivePtr are useless because it is not safe to work with atomic ptr such way\n-// Safe usage is to convert to TIntrusivePtr.\n+namespace NYT {\n \n-// Max TAtomicIntrusivePtr count per object is (2**16 = 2**32 / 2**16).\n+////////////////////////////////////////////////////////////////////////////////\n \n+//! Atomic pointer with split reference counting.\n+/*\n+ *  \\see https://github.com/facebook/folly/blob/main/folly/concurrency/AtomicSharedPtr.h\n+*/\n template <class T>\n class TAtomicIntrusivePtr\n {\n@@ -39,7 +42,7 @@ class TAtomicIntrusivePtr\n     bool CompareAndSwap(TRawPtr& comparePtr, T* target);\n     bool CompareAndSwap(TRawPtr& comparePtr, TIntrusivePtr<T> target);\n \n-    // Result is suitable only for comparison. Not dereference.\n+    //! Result is only suitable for comparison, not dereference.\n     TRawPtr Get() const;\n \n     explicit operator bool() const;\n@@ -57,6 +60,10 @@ class TAtomicIntrusivePtr\n     template <class U>\n     friend bool operator!=(const TIntrusivePtr<U>& lhs, const TAtomicIntrusivePtr<U>& rhs);\n \n+#ifdef _lsan_enabled_\n+    ::TSpinLock Lock_;\n+    TIntrusivePtr<T> Ptr_;\n+#else\n     // Keeps packed pointer (localRefCount, objectPtr).\n     // Atomic ptr holds N references, where N = ReservedRefCount - localRefCount.\n     // LocalRefCount is incremented in Acquire method.\n@@ -68,11 +75,10 @@ class TAtomicIntrusivePtr\n     constexpr static int ReservedRefCount = (1 << CounterBits) - 1;\n \n     // Consume ref if ownership is transferred.\n-    // AcquireObject(ptr.Release(), true)\n-    // AcquireObject(ptr.Get(), false)\n     static TPackedPtr AcquireObject(T* obj, bool consumeRef = false);\n     static void ReleaseObject(TPackedPtr packedPtr);\n     static void DoRelease(T* obj, int refs);\n+#endif\n };\n \n ////////////////////////////////////////////////////////////////////////////////\ndiff --git a/library/cpp/yt/memory/blob.cpp b/library/cpp/yt/memory/blob.cpp\nindex 9c17cffad00d..260cfb698b7d 100644\n--- a/library/cpp/yt/memory/blob.cpp\n+++ b/library/cpp/yt/memory/blob.cpp\n@@ -14,7 +14,7 @@ static constexpr double BlobCapacityMultiplier = 1.5;\n TBlob::TBlob(\n     TRefCountedTypeCookie tagCookie,\n     size_t size,\n-    bool initiailizeStorage,\n+    bool initializeStorage,\n     bool pageAligned)\n     : PageAligned_(pageAligned)\n {\n@@ -24,7 +24,7 @@ TBlob::TBlob(\n     } else {\n         Allocate(std::max(size, InitialBlobCapacity));\n         Size_ = size;\n-        if (initiailizeStorage) {\n+        if (initializeStorage) {\n             ::memset(Begin_, 0, Size_);\n         }\n     }\ndiff --git a/library/cpp/yt/memory/blob.h b/library/cpp/yt/memory/blob.h\nindex 42cab83017bd..a14ac742b299 100644\n--- a/library/cpp/yt/memory/blob.h\n+++ b/library/cpp/yt/memory/blob.h\n@@ -26,7 +26,7 @@ class TBlob\n     explicit TBlob(\n         TRefCountedTypeCookie tagCookie = GetRefCountedTypeCookie<TDefaultBlobTag>(),\n         size_t size = 0,\n-        bool initiailizeStorage = true,\n+        bool initializeStorage = true,\n         bool pageAligned = false);\n \n     //! Copies a chunk of memory into a new instance.\ndiff --git a/library/cpp/yt/memory/chunked_memory_pool.cpp b/library/cpp/yt/memory/chunked_memory_pool.cpp\nindex a10a6fe724ff..d8673f5d6c3d 100644\n--- a/library/cpp/yt/memory/chunked_memory_pool.cpp\n+++ b/library/cpp/yt/memory/chunked_memory_pool.cpp\n@@ -15,6 +15,8 @@ TAllocationHolder::TAllocationHolder(TMutableRef ref, TRefCountedTypeCookie cook\n         TRefCountedTrackerFacade::AllocateTagInstance(Cookie_);\n         TRefCountedTrackerFacade::AllocateSpace(Cookie_, Ref_.Size());\n     }\n+#else\n+    Y_UNUSED(cookie);\n #endif\n }\n \ndiff --git a/library/cpp/yt/memory/ref.cpp b/library/cpp/yt/memory/ref.cpp\nindex c01094846ee1..4d02ef6875be 100644\n--- a/library/cpp/yt/memory/ref.cpp\n+++ b/library/cpp/yt/memory/ref.cpp\n@@ -59,6 +59,8 @@ class TStringHolder\n #ifdef YT_ENABLE_REF_COUNTED_TRACKING\n         TRefCountedTrackerFacade::AllocateTagInstance(Cookie_);\n         TRefCountedTrackerFacade::AllocateSpace(Cookie_, String_.length());\n+#else\n+        Y_UNUSED(cookie);\n #endif\n     }\n     ~TStringHolder()\n@@ -119,7 +121,11 @@ class TAllocationHolderBase\n         TRefCountedTypeCookie cookie)\n     {\n         Size_ = size;\n+#ifdef YT_ENABLE_REF_COUNTED_TRACKING\n         Cookie_ = cookie;\n+#else\n+        Y_UNUSED(cookie);\n+#endif\n         if (options.InitializeStorage) {\n             ::memset(static_cast<TDerived*>(this)->GetBegin(), 0, Size_);\n         }\ndiff --git a/library/cpp/yt/memory/ref_counted-inl.h b/library/cpp/yt/memory/ref_counted-inl.h\nindex f86f634ffd7f..6c20db8c41b6 100644\n--- a/library/cpp/yt/memory/ref_counted-inl.h\n+++ b/library/cpp/yt/memory/ref_counted-inl.h\n@@ -90,7 +90,7 @@ Y_FORCE_INLINE void DestroyRefCountedImpl(T* obj)\n         return;\n     }\n \n-    YT_ASSERT(offset < std::numeric_limits<ui16>::max());\n+    YT_ASSERT(offset < (1ULL << PackedPtrTagBits));\n \n     auto* vTablePtr = reinterpret_cast<TPackedPtr*>(basePtr);\n     *vTablePtr = TTaggedPtr<void(void*, ui16)>(&NYT::NDetail::TMemoryReleaser<T>::Do, offset).Pack();\n@@ -182,8 +182,24 @@ Y_FORCE_INLINE int TRefCounter::GetRefCount() const noexcept\n \n Y_FORCE_INLINE void TRefCounter::Ref(int n) const noexcept\n {\n+    YT_ASSERT(n >= 0);\n+\n     // It is safe to use relaxed here, since new reference is always created from another live reference.\n-    StrongCount_.fetch_add(n, std::memory_order::relaxed);\n+    auto value = StrongCount_.fetch_add(n, std::memory_order::relaxed);\n+    YT_ASSERT(value > 0);\n+    YT_ASSERT(value <= std::numeric_limits<TRefCount>::max() - n);\n+\n+    YT_ASSERT(WeakCount_.load(std::memory_order::relaxed) > 0);\n+}\n+\n+Y_FORCE_INLINE void TRefCounter::DangerousRef(int n) const noexcept\n+{\n+    YT_ASSERT(n >= 0);\n+\n+    // Relaxed is fine as per lukyan@, the caller guarantees object liveness.\n+    auto value = StrongCount_.fetch_add(n, std::memory_order::relaxed);\n+    YT_ASSERT(value >= 0);\n+    YT_ASSERT(value <= std::numeric_limits<TRefCount>::max() - n);\n \n     YT_ASSERT(WeakCount_.load(std::memory_order::relaxed) > 0);\n }\n@@ -191,6 +207,7 @@ Y_FORCE_INLINE void TRefCounter::Ref(int n) const noexcept\n Y_FORCE_INLINE bool TRefCounter::TryRef() const noexcept\n {\n     auto value = StrongCount_.load(std::memory_order::relaxed);\n+    YT_ASSERT(value >= 0 && value < std::numeric_limits<TRefCount>::max());\n     YT_ASSERT(WeakCount_.load(std::memory_order::relaxed) > 0);\n \n     while (value != 0 && !StrongCount_.compare_exchange_weak(value, value + 1));\n@@ -199,6 +216,8 @@ Y_FORCE_INLINE bool TRefCounter::TryRef() const noexcept\n \n Y_FORCE_INLINE bool TRefCounter::Unref(int n) const\n {\n+    YT_ASSERT(n >= 0);\n+\n     // We must properly synchronize last access to object with it destruction.\n     // Otherwise compiler might reorder access to object past this decrement.\n     //\ndiff --git a/library/cpp/yt/memory/ref_counted.h b/library/cpp/yt/memory/ref_counted.h\nindex 6ef546de0df7..6abef3bf053e 100644\n--- a/library/cpp/yt/memory/ref_counted.h\n+++ b/library/cpp/yt/memory/ref_counted.h\n@@ -40,8 +40,13 @@ class TRefCounter\n     int GetRefCount() const noexcept;\n \n     //! Increments the strong reference counter.\n+    //! The current strong RC must be positive.\n     void Ref(int n = 1) const noexcept;\n \n+    //! Increments the strong reference counter.\n+    //! The current strong RC may be zero.\n+    void DangerousRef(int n = 1) const noexcept;\n+\n     //! Increments the strong reference counter if it is not null.\n     bool TryRef() const noexcept;\n \n@@ -58,8 +63,10 @@ class TRefCounter\n     bool WeakUnref() const;\n \n private:\n-    mutable std::atomic<int> StrongCount_ = 1;\n-    mutable std::atomic<int> WeakCount_ = 1;\n+    // NB: Must we 64 bit as TAtomicIntrusivePtr grabs refs in 64K batches.\n+    using TRefCount = i64;\n+    mutable std::atomic<TRefCount> StrongCount_ = 1;\n+    mutable std::atomic<TRefCount> WeakCount_ = 1;\n };\n \n ////////////////////////////////////////////////////////////////////////////////\ndiff --git a/library/cpp/yt/misc/port.h b/library/cpp/yt/misc/port.h\nindex fe1c5e96de93..fd7df53855b6 100644\n--- a/library/cpp/yt/misc/port.h\n+++ b/library/cpp/yt/misc/port.h\n@@ -7,9 +7,11 @@\n     #error YT requires 64-bit platform\n #endif\n \n-// This define enables tracking of reference-counted objects to provide\n-// various insightful information on memory usage and object creation patterns.\n-#define YT_ENABLE_REF_COUNTED_TRACKING\n+#ifndef YT_DISABLE_REF_COUNTED_TRACKING\n+    // This define enables tracking of reference-counted objects to provide\n+    // various insightful information on memory usage and object creation patterns.\n+    #define YT_ENABLE_REF_COUNTED_TRACKING\n+#endif\n \n // This define enables logging with TRACE level. You can still disable trace logging\n // for particular TU by discarding this macro identifier.\ndiff --git a/library/cpp/yt/misc/source_location.cpp b/library/cpp/yt/misc/source_location.cpp\nindex 598126f5a71a..8d22d43636c2 100644\n--- a/library/cpp/yt/misc/source_location.cpp\n+++ b/library/cpp/yt/misc/source_location.cpp\n@@ -1,32 +1,11 @@\n #include \"source_location.h\"\n \n-#include <library/cpp/yt/string/format.h>\n-\n #include <string.h>\n \n namespace NYT {\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-#ifdef __cpp_lib_source_location\n-\n-void FormatValue(TStringBuilderBase* builder, const std::source_location& location, TStringBuf /*spec*/)\n-{\n-    if (location.file_name() != nullptr) {\n-        builder->AppendFormat(\n-            \"%v:%v:%v\",\n-            location.file_name(),\n-            location.line(),\n-            location.column());\n-    } else {\n-        builder->AppendString(\"<unknown>\");\n-    }\n-}\n-\n-#endif // __cpp_lib_source_location\n-\n-////////////////////////////////////////////////////////////////////////////////\n-\n const char* TSourceLocation::GetFileName() const\n {\n     return FileName_;\n@@ -70,18 +49,6 @@ bool TSourceLocation::operator==(const TSourceLocation& other) const\n         Line_ == other.Line_;\n }\n \n-void FormatValue(TStringBuilderBase* builder, const TSourceLocation& location, TStringBuf /*spec*/)\n-{\n-    if (location.GetFileName() != nullptr) {\n-        builder->AppendFormat(\n-            \"%v:%v\",\n-            location.GetFileName(),\n-            location.GetLine());\n-    } else {\n-        builder->AppendString(\"<unknown>\");\n-    }\n-}\n-\n ////////////////////////////////////////////////////////////////////////////////\n \n } // namespace NYT\ndiff --git a/library/cpp/yt/misc/source_location.h b/library/cpp/yt/misc/source_location.h\nindex 286527887ae1..7a4750226200 100644\n--- a/library/cpp/yt/misc/source_location.h\n+++ b/library/cpp/yt/misc/source_location.h\n@@ -10,15 +10,6 @@ namespace NYT {\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-class TStringBuilderBase;\n-\n-// TODO(dgolear): Drop when LLVM-14 is eradicated.\n-#ifdef __cpp_lib_source_location\n-void FormatValue(TStringBuilderBase* builder, const std::source_location& location, TStringBuf /*spec*/);\n-#endif // __cpp_lib_source_location\n-\n-////////////////////////////////////////////////////////////////////////////////\n-\n class TSourceLocation\n {\n public:\n@@ -47,8 +38,6 @@ class TSourceLocation\n #define YT_CURRENT_SOURCE_LOCATION ::NYT::TSourceLocation(__FILE__, __LINE__)\n #endif // __cpp_lib_source_location\n \n-void FormatValue(TStringBuilderBase* builder, const TSourceLocation& location, TStringBuf spec);\n-\n ////////////////////////////////////////////////////////////////////////////////\n \n } // namespace NYT\ndiff --git a/library/cpp/yt/misc/variant-inl.h b/library/cpp/yt/misc/variant-inl.h\ndeleted file mode 100644\nindex 4b0e04c92c7f..000000000000\n--- a/library/cpp/yt/misc/variant-inl.h\n+++ /dev/null\n@@ -1,50 +0,0 @@\n-#ifndef VARIANT_INL_H_\n-#error \"Direct inclusion of this file is not allowed, include variant.h\"\n-// For the sake of sane code completion.\n-#include \"variant.h\"\n-#endif\n-\n-#include <type_traits>\n-\n-namespace NYT {\n-\n-////////////////////////////////////////////////////////////////////////////////\n-\n-namespace NDetail {\n-\n-template <size_t Index, class... Ts>\n-struct TVariantFormatter;\n-\n-template <size_t Index>\n-struct TVariantFormatter<Index>\n-{\n-    template <class TVariant>\n-    static void Do(TStringBuilderBase* /*builder*/, const TVariant& /*variant*/, TStringBuf /*spec*/)\n-    { }\n-};\n-\n-template <size_t Index, class T, class... Ts>\n-struct TVariantFormatter<Index, T, Ts...>\n-{\n-    template <class TVariant>\n-    static void Do(TStringBuilderBase* builder, const TVariant& variant, TStringBuf spec)\n-    {\n-        if (variant.index() == Index) {\n-            FormatValue(builder, std::get<Index>(variant), spec);\n-        } else {\n-            TVariantFormatter<Index + 1, Ts...>::Do(builder, variant, spec);\n-        }\n-    }\n-};\n-\n-} // namespace NDetail\n-\n-template <class... Ts>\n-void FormatValue(TStringBuilderBase* builder, const std::variant<Ts...>& variant, TStringBuf spec)\n-{\n-    NDetail::TVariantFormatter<0, Ts...>::Do(builder, variant, spec);\n-}\n-\n-////////////////////////////////////////////////////////////////////////////////\n-\n-} // namespace NYT\ndiff --git a/library/cpp/yt/misc/variant.cpp b/library/cpp/yt/misc/variant.cpp\ndeleted file mode 100644\nindex df78563d0c9c..000000000000\n--- a/library/cpp/yt/misc/variant.cpp\n+++ /dev/null\n@@ -1,16 +0,0 @@\n-#include \"variant.h\"\n-\n-#include <library/cpp/yt/string/string_builder.h>\n-\n-namespace NYT {\n-\n-////////////////////////////////////////////////////////////////////////////////\n-\n-void FormatValue(TStringBuilderBase* builder, const std::monostate&, TStringBuf /*spec*/)\n-{\n-    builder->AppendString(TStringBuf(\"<monostate>\"));\n-}\n-\n-////////////////////////////////////////////////////////////////////////////////\n-\n-} // namespace NYT\ndiff --git a/library/cpp/yt/misc/variant.h b/library/cpp/yt/misc/variant.h\nindex 9e8e12208970..7cc3d8ddda10 100644\n--- a/library/cpp/yt/misc/variant.h\n+++ b/library/cpp/yt/misc/variant.h\n@@ -7,15 +7,6 @@ namespace NYT {\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-class TStringBuilderBase;\n-\n-template <class... Ts>\n-void FormatValue(TStringBuilderBase* builder, const std::variant<Ts...>& variant, TStringBuf spec);\n-\n-void FormatValue(TStringBuilderBase* builder, const std::monostate&, TStringBuf /*spec*/);\n-\n-////////////////////////////////////////////////////////////////////////////////\n-\n //! A concise way of creating a functor with an overloaded operator().\n /*!\n  *  Very useful for std::visit-ing variants. For example:\n@@ -50,7 +41,3 @@ auto Visit(T&& variant, U&&... visitorOverloads)\n ////////////////////////////////////////////////////////////////////////////////\n \n } // namespace NYT\n-\n-#define VARIANT_INL_H_\n-#include \"variant-inl.h\"\n-#undef VARIANT_INL_H_\ndiff --git a/library/cpp/yt/misc/ya.make b/library/cpp/yt/misc/ya.make\nindex 841930aaa24f..3135887e95e0 100644\n--- a/library/cpp/yt/misc/ya.make\n+++ b/library/cpp/yt/misc/ya.make\n@@ -6,7 +6,6 @@ SRCS(\n     guid.cpp\n     source_location.cpp\n     thread_name.cpp\n-    variant.cpp\n )\n \n PEERDIR(\ndiff --git a/library/cpp/yt/string/format-inl.h b/library/cpp/yt/string/format-inl.h\nindex 67c8affa6e4b..188a699a3d69 100644\n--- a/library/cpp/yt/string/format-inl.h\n+++ b/library/cpp/yt/string/format-inl.h\n@@ -16,7 +16,7 @@\n \n #include <library/cpp/yt/misc/concepts.h>\n #include <library/cpp/yt/misc/enum.h>\n-#include <library/cpp/yt/misc/wrapper_traits.h>\n+#include <library/cpp/yt/misc/source_location.h>\n \n #include <util/generic/maybe.h>\n \n@@ -30,6 +30,10 @@\n     #include <filesystem>\n #endif\n \n+#ifdef __cpp_lib_source_location\n+#include <source_location>\n+#endif // __cpp_lib_source_location\n+\n namespace NYT {\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -592,6 +596,58 @@ inline void FormatValue(TStringBuilderBase* builder, const std::filesystem::path\n }\n #endif\n \n+#ifdef __cpp_lib_source_location\n+// std::source_location\n+inline void FormatValue(TStringBuilderBase* builder, const std::source_location& location, TStringBuf /*spec*/)\n+{\n+    if (location.file_name() != nullptr) {\n+        builder->AppendFormat(\n+            \"%v:%v:%v\",\n+            location.file_name(),\n+            location.line(),\n+            location.column());\n+    } else {\n+        builder->AppendString(\"<unknown>\");\n+    }\n+}\n+#endif // __cpp_lib_source_location\n+\n+// TSourceLocation\n+inline void FormatValue(TStringBuilderBase* builder, const TSourceLocation& location, TStringBuf /*spec*/)\n+{\n+    if (location.GetFileName() != nullptr) {\n+        builder->AppendFormat(\n+            \"%v:%v\",\n+            location.GetFileName(),\n+            location.GetLine());\n+    } else {\n+        builder->AppendString(\"<unknown>\");\n+    }\n+}\n+\n+// std::monostate\n+inline void FormatValue(TStringBuilderBase* builder, const std::monostate&, TStringBuf /*spec*/)\n+{\n+    builder->AppendString(TStringBuf(\"<monostate>\"));\n+}\n+\n+// std::variant\n+template <class... Ts>\n+    requires (CFormattable<Ts> && ...)\n+void FormatValue(TStringBuilderBase* builder, const std::variant<Ts...>& variant, TStringBuf spec)\n+{\n+    [&] <size_t... Ids> (std::index_sequence<Ids...>) {\n+        ([&] {\n+            if (variant.index() == Ids) {\n+                FormatValue(builder, std::get<Ids>(variant), spec);\n+                return false;\n+            }\n+\n+            return true;\n+        } () && ...);\n+    } (std::index_sequence_for<Ts...>());\n+}\n+\n // char\n inline void FormatValue(TStringBuilderBase* builder, char value, TStringBuf spec)\n {\ndiff --git a/util/folder/path.cpp b/util/folder/path.cpp\nindex 940f6dffe0df..321776cb0c8f 100644\n--- a/util/folder/path.cpp\n+++ b/util/folder/path.cpp\n@@ -406,8 +406,7 @@ void TFsPath::DeleteIfExists() const {\n         return;\n     }\n \n-    ::unlink(this->c_str());\n-    ::rmdir(this->c_str());\n+    NFs::Remove(GetPath());\n     if (Exists()) {\n         ythrow TIoException() << \"failed to delete \" << Path_;\n     }\n@@ -441,7 +440,7 @@ void TFsPath::ForceDelete() const {\n         return;\n     }\n \n-    TFileStat stat(GetPath().c_str(), true);\n+    TFileStat stat(GetPath(), true);\n     if (stat.IsNull()) {\n         const int err = LastSystemError();\n #ifdef _win_\n@@ -455,19 +454,15 @@ void TFsPath::ForceDelete() const {\n         }\n     }\n \n-    bool succ;\n     if (stat.IsDir()) {\n         TVector<TFsPath> children;\n         List(children);\n         for (auto& i : children) {\n             i.ForceDelete();\n         }\n-        succ = ::rmdir(this->c_str()) == 0;\n-    } else {\n-        succ = ::unlink(this->c_str()) == 0;\n     }\n \n-    if (!succ && LastSystemError()) {\n+    if (!NFs::Remove(GetPath())) {\n         ythrow TIoException() << \"failed to delete \" << Path_;\n     }\n }\ndiff --git a/util/folder/path_ut.cpp b/util/folder/path_ut.cpp\nindex 0fbcac826376..f73bd7f57a4b 100644\n--- a/util/folder/path_ut.cpp\n+++ b/util/folder/path_ut.cpp\n@@ -663,7 +663,7 @@ Y_UNIT_TEST_SUITE(TFsPathTests) {\n     };\n #endif\n \n-    Y_UNIT_TEST(TestForceDeleteErrorUnlink) {\n+    Y_UNIT_TEST(TestForceDeleteErrorRemove) {\n         TTempDir tempDir;\n \n         const TFsPath testDir = TFsPath(tempDir()).Child(\"dir\");\n@@ -680,14 +680,17 @@ Y_UNIT_TEST_SUITE(TFsPathTests) {\n         Y_DEFER {\n             Chmod(testFile.c_str(), MODE0777);\n         };\n+        // Checks that dir/file with readonly attribute will be deleted\n+        // on Windows\n+        UNIT_ASSERT_NO_EXCEPTION(testFile.ForceDelete());\n #else\n         Chmod(testDir.c_str(), S_IRUSR | S_IXUSR);\n         Y_DEFER {\n             Chmod(testDir.c_str(), MODE0777);\n         };\n+        UNIT_ASSERT_EXCEPTION_CONTAINS(testFile.ForceDelete(), TIoException,\n+                                       \"failed to delete\");\n #endif\n-\n-        UNIT_ASSERT_EXCEPTION_CONTAINS(testFile.ForceDelete(), TIoException, \"failed to delete\");\n     }\n \n     Y_UNIT_TEST(TestForceDeleteErrorRmdir) {\ndiff --git a/util/generic/maybe.h b/util/generic/maybe.h\nindex 46468e51662f..ceaf4d66f0c2 100644\n--- a/util/generic/maybe.h\n+++ b/util/generic/maybe.h\n@@ -20,7 +20,7 @@ namespace NMaybe {\n     };\n } // namespace NMaybe\n \n-struct TNothing {\n+struct [[nodiscard]] TNothing {\n     explicit constexpr TNothing(int) noexcept {\n     }\n };\ndiff --git a/util/generic/string.h b/util/generic/string.h\nindex b71bb72304d5..3476f71b6819 100644\n--- a/util/generic/string.h\n+++ b/util/generic/string.h\n@@ -861,7 +861,8 @@ class TBasicString: public TStringBase<TBasicString<TCharType, TTraits>, TCharTy\n         return this->ConstRef();\n     }\n \n-    operator TStringType&() {\n+    template <typename T, typename = std::enable_if_t<std::is_same_v<T, TStringType>>>\n+    operator T&() & {\n         return this->MutRef();\n     }\n \ndiff --git a/util/generic/string_ut.cpp b/util/generic/string_ut.cpp\nindex bfd86bb07e98..01c7a011881f 100644\n--- a/util/generic/string_ut.cpp\n+++ b/util/generic/string_ut.cpp\n@@ -1243,4 +1243,16 @@ Y_UNIT_TEST_SUITE(Interop) {\n     Y_UNIT_TEST(TestTemp) {\n         UNIT_ASSERT_VALUES_EQUAL(\"x\" + ConstRef(TString(\"y\")), \"xy\");\n     }\n+\n+    static void ComparePointers(const std::string& s, const void* expected, TStringBuf descr) {\n+        UNIT_ASSERT_VALUES_EQUAL_C(static_cast<const void*>(s.c_str()), expected, descr);\n+    }\n+\n+    Y_UNIT_TEST(TestConstShared) {\n+        TString s(600, 'a');\n+        const void* stringStart = s.c_str();\n+        ComparePointers(s, stringStart, \"unique\");\n+        TString shared{s};\n+        ComparePointers(s, stringStart, \"shared\"); // converting a TString to a `const std::string&` should not cause data cloning\n+    }\n } // Y_UNIT_TEST_SUITE(Interop)\ndiff --git a/vendor/github.com/spf13/cobra/.yo.snapshot.json b/vendor/github.com/spf13/cobra/.yo.snapshot.json\nnew file mode 100644\nindex 000000000000..595b4ffca54d\n--- /dev/null\n+++ b/vendor/github.com/spf13/cobra/.yo.snapshot.json\n@@ -0,0 +1,75 @@\n+{\n+\t\"Version\": \"v1.8.1\",\n+\t\"GoVersion\": \"1.15\",\n+\t\"Sum\": \"h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\",\n+\t\"Packages\": {\n+\t\t\"github.com/spf13/cobra\": {\n+\t\t\t\"Imports\": [\n+\t\t\t\t\"bytes\",\n+\t\t\t\t\"context\",\n+\t\t\t\t\"errors\",\n+\t\t\t\t\"fmt\",\n+\t\t\t\t\"github.com/inconshreveable/mousetrap\",\n+\t\t\t\t\"github.com/spf13/pflag\",\n+\t\t\t\t\"io\",\n+\t\t\t\t\"os\",\n+\t\t\t\t\"path/filepath\",\n+\t\t\t\t\"reflect\",\n+\t\t\t\t\"regexp\",\n+\t\t\t\t\"sort\",\n+\t\t\t\t\"strconv\",\n+\t\t\t\t\"strings\",\n+\t\t\t\t\"sync\",\n+\t\t\t\t\"text/template\",\n+\t\t\t\t\"time\",\n+\t\t\t\t\"unicode\"\n+\t\t\t],\n+\t\t\t\"TestImports\": [\n+\t\t\t\t\"bytes\",\n+\t\t\t\t\"context\",\n+\t\t\t\t\"errors\",\n+\t\t\t\t\"fmt\",\n+\t\t\t\t\"github.com/spf13/pflag\",\n+\t\t\t\t\"io\",\n+\t\t\t\t\"os\",\n+\t\t\t\t\"os/exec\",\n+\t\t\t\t\"path/filepath\",\n+\t\t\t\t\"reflect\",\n+\t\t\t\t\"regexp\",\n+\t\t\t\t\"strings\",\n+\t\t\t\t\"sync\",\n+\t\t\t\t\"testing\",\n+\t\t\t\t\"text/template\"\n+\t\t\t]\n+\t\t},\n+\t\t\"github.com/spf13/cobra/doc\": {\n+\t\t\t\"Imports\": [\n+\t\t\t\t\"bytes\",\n+\t\t\t\t\"fmt\",\n+\t\t\t\t\"github.com/cpuguy83/go-md2man/v2/md2man\",\n+\t\t\t\t\"github.com/spf13/cobra\",\n+\t\t\t\t\"github.com/spf13/pflag\",\n+\t\t\t\t\"gopkg.in/yaml.v3\",\n+\t\t\t\t\"io\",\n+\t\t\t\t\"os\",\n+\t\t\t\t\"path/filepath\",\n+\t\t\t\t\"sort\",\n+\t\t\t\t\"strconv\",\n+\t\t\t\t\"strings\",\n+\t\t\t\t\"time\"\n+\t\t\t],\n+\t\t\t\"TestImports\": [\n+\t\t\t\t\"bufio\",\n+\t\t\t\t\"bytes\",\n+\t\t\t\t\"fmt\",\n+\t\t\t\t\"github.com/spf13/cobra\",\n+\t\t\t\t\"github.com/spf13/cobra/doc\",\n+\t\t\t\t\"io/ioutil\",\n+\t\t\t\t\"os\",\n+\t\t\t\t\"path/filepath\",\n+\t\t\t\t\"strings\",\n+\t\t\t\t\"testing\"\n+\t\t\t]\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file\ndiff --git a/vendor/github.com/spf13/pflag/.yo.snapshot.json b/vendor/github.com/spf13/pflag/.yo.snapshot.json\nnew file mode 100644\nindex 000000000000..40b89fd3973b\n--- /dev/null\n+++ b/vendor/github.com/spf13/pflag/.yo.snapshot.json\n@@ -0,0 +1,44 @@\n+{\n+\t\"Version\": \"v1.0.6-0.20201009195203-85dd5c8bc61c\",\n+\t\"GoVersion\": \"1.12\",\n+\t\"Sum\": \"h1:zqmyTlQyufRC65JnImJ6H1Sf7BDj8bG31EV919NVEQc=\",\n+\t\"Packages\": {\n+\t\t\"github.com/spf13/pflag\": {\n+\t\t\t\"Imports\": [\n+\t\t\t\t\"bytes\",\n+\t\t\t\t\"encoding/base64\",\n+\t\t\t\t\"encoding/csv\",\n+\t\t\t\t\"encoding/hex\",\n+\t\t\t\t\"errors\",\n+\t\t\t\t\"flag\",\n+\t\t\t\t\"fmt\",\n+\t\t\t\t\"io\",\n+\t\t\t\t\"net\",\n+\t\t\t\t\"os\",\n+\t\t\t\t\"reflect\",\n+\t\t\t\t\"sort\",\n+\t\t\t\t\"strconv\",\n+\t\t\t\t\"strings\",\n+\t\t\t\t\"time\"\n+\t\t\t],\n+\t\t\t\"TestImports\": [\n+\t\t\t\t\"bytes\",\n+\t\t\t\t\"encoding/base64\",\n+\t\t\t\t\"encoding/csv\",\n+\t\t\t\t\"flag\",\n+\t\t\t\t\"fmt\",\n+\t\t\t\t\"github.com/spf13/pflag\",\n+\t\t\t\t\"io\",\n+\t\t\t\t\"io/ioutil\",\n+\t\t\t\t\"net\",\n+\t\t\t\t\"os\",\n+\t\t\t\t\"reflect\",\n+\t\t\t\t\"sort\",\n+\t\t\t\t\"strconv\",\n+\t\t\t\t\"strings\",\n+\t\t\t\t\"testing\",\n+\t\t\t\t\"time\"\n+\t\t\t]\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file\ndiff --git a/ya b/ya\nindex bb807c4e53b0..1b22c8f5bc5c 100755\n--- a/ya\n+++ b/ya\n@@ -39,33 +39,33 @@ REGISTRY_ENDPOINT = os.environ.get(\"YA_REGISTRY_ENDPOINT\", \"https://devtools-reg\n PLATFORM_MAP = {\n     \"data\": {\n         \"darwin\": {\n-            \"md5\": \"0d542fef71e6428ade85f0da9f52cb5a\",\n+            \"md5\": \"30824e0eea5c1de99cad870142f16922\",\n             \"urls\": [\n-                f\"{REGISTRY_ENDPOINT}/7083801705\"\n+                f\"{REGISTRY_ENDPOINT}/7120326728\"\n             ]\n         },\n         \"darwin-arm64\": {\n-            \"md5\": \"22390e745628eb3cf06f1bf7af30687c\",\n+            \"md5\": \"36b8d3ae595d998a6156e60fa3064d1d\",\n             \"urls\": [\n-                f\"{REGISTRY_ENDPOINT}/7083801096\"\n+                f\"{REGISTRY_ENDPOINT}/7120326401\"\n             ]\n         },\n         \"linux-aarch64\": {\n-            \"md5\": \"8e8d1e623d0b7e90edf87c572dfa435a\",\n+            \"md5\": \"4a05a464bcfe750c20c6cbb117bbc0fa\",\n             \"urls\": [\n-                f\"{REGISTRY_ENDPOINT}/7083800513\"\n+                f\"{REGISTRY_ENDPOINT}/7120325932\"\n             ]\n         },\n         \"win32-clang-cl\": {\n-            \"md5\": \"687a54f15098a398a5cdc2c4a7133e65\",\n+            \"md5\": \"df49f4b133b8948eef46e65b7b0adf32\",\n             \"urls\": [\n-                f\"{REGISTRY_ENDPOINT}/7083802244\"\n+                f\"{REGISTRY_ENDPOINT}/7120327156\"\n             ]\n         },\n         \"linux\": {\n-            \"md5\": \"8ed590932df65eb577f76f543ee53a78\",\n+            \"md5\": \"fb7ae3201abf5b7891e20be90c955a35\",\n             \"urls\": [\n-                f\"{REGISTRY_ENDPOINT}/7083802745\"\n+                f\"{REGISTRY_ENDPOINT}/7120327554\"\n             ]\n         }\n     }\ndiff --git a/ydb/ci/rightlib.txt b/ydb/ci/rightlib.txt\nindex 227ed569e449..eb5cfad9c399 100644\n--- a/ydb/ci/rightlib.txt\n+++ b/ydb/ci/rightlib.txt\n@@ -1,1 +1,1 @@\n-83fef1d88a43b7b54799dc70720adb5dbd2c9288\n+47e779420bb80722978c1ffd518245bffd886a50\ndiff --git a/yt/cpp/mapreduce/interface/common.cpp b/yt/cpp/mapreduce/interface/common.cpp\nindex 831762fa953b..966be8341f48 100644\n--- a/yt/cpp/mapreduce/interface/common.cpp\n+++ b/yt/cpp/mapreduce/interface/common.cpp\n@@ -348,6 +348,7 @@ TColumnSchema& TColumnSchema::Type(const NTi::TTypePtr& type) &\n {\n     Y_ABORT_UNLESS(type.Get(), \"Cannot create column schema with nullptr type\");\n     TypeV3_ = type;\n+    RawTypeV3_ = {};\n     return *this;\n }\n \n@@ -355,6 +356,7 @@ TColumnSchema TColumnSchema::Type(const NTi::TTypePtr& type) &&\n {\n     Y_ABORT_UNLESS(type.Get(), \"Cannot create column schema with nullptr type\");\n     TypeV3_ = type;\n+    RawTypeV3_ = {};\n     return *this;\n }\n \n@@ -388,6 +390,25 @@ TColumnSchema TColumnSchema::Type(EValueType type, bool required) &&\n     return Type(ToTypeV3(type, required));\n }\n \n+const TMaybe<TNode>& TColumnSchema::RawTypeV3() const\n+{\n+    return RawTypeV3_;\n+}\n+\n+TColumnSchema& TColumnSchema::RawTypeV3(TNode rawTypeV3) &\n+{\n+    RawTypeV3_ = std::move(rawTypeV3);\n+    TypeV3_ = nullptr;\n+    return *this;\n+}\n+\n+TColumnSchema TColumnSchema::RawTypeV3(TNode rawTypeV3) &&\n+{\n+    RawTypeV3_ = std::move(rawTypeV3);\n+    TypeV3_ = nullptr;\n+    return *this;\n+}\n+\n bool operator==(const TColumnSchema& lhs, const TColumnSchema& rhs)\n {\n     return\ndiff --git a/yt/cpp/mapreduce/interface/common.h b/yt/cpp/mapreduce/interface/common.h\nindex 557f4ea6c496..d8365c32c08a 100644\n--- a/yt/cpp/mapreduce/interface/common.h\n+++ b/yt/cpp/mapreduce/interface/common.h\n@@ -649,11 +649,6 @@ class TColumnSchema\n     NTi::TTypePtr TypeV3() const;\n     /// @}\n \n-    ///\n-    /// @brief Raw yson representation of column type\n-    /// @deprecated Prefer to use `TypeV3` methods.\n-    FLUENT_FIELD_OPTION_ENCAPSULATED(TNode, RawTypeV3);\n-\n     /// Column sort order\n     FLUENT_FIELD_OPTION_ENCAPSULATED(ESortOrder, SortOrder);\n \n@@ -696,10 +691,21 @@ class TColumnSchema\n     TColumnSchema Type(EValueType type, bool required) &&;\n     /// @}\n \n+    ///\n+    /// @{\n+    ///\n+    /// @brief Raw yson representation of column type\n+    /// @deprecated Prefer to use `TypeV3` methods.\n+    const TMaybe<TNode>& RawTypeV3() const;\n+    TColumnSchema& RawTypeV3(TNode rawTypeV3)&;\n+    TColumnSchema RawTypeV3(TNode rawTypeV3)&&;\n+    /// @}\n+\n+\n private:\n     friend void Deserialize(TColumnSchema& columnSchema, const TNode& node);\n     NTi::TTypePtr TypeV3_;\n-    bool Required_ = false;\n+    TMaybe<TNode> RawTypeV3_;\n };\n \n /// Equality check checks all fields of column schema.\ndiff --git a/yt/cpp/mapreduce/interface/ut/common_ut.cpp b/yt/cpp/mapreduce/interface/ut/common_ut.cpp\nindex 85122a97ec65..196ef738398d 100644\n--- a/yt/cpp/mapreduce/interface/ut/common_ut.cpp\n+++ b/yt/cpp/mapreduce/interface/ut/common_ut.cpp\n@@ -351,3 +351,13 @@ TEST(TCommonTest, TableSchemaEquality)\n     other.UniqueKeys(false);\n     ASSERT_SERIALIZABLES_NE(other, schema);\n }\n+\n+TEST(TCommonTest, ModificationLoadedSchema)\n+{\n+    auto schema = TTableSchema::FromNode(NodeFromYsonString(R\"\"\"(\n+        [{name=foo;type_v3=string}]\n+    )\"\"\"));\n+    schema.MutableColumns()[0].Type(VT_INT64, true);\n+\n+    ASSERT_EQ(schema.ToNode()[0][\"type\"].AsString(), \"int64\");\n+}\ndiff --git a/yt/yt/client/api/client_common.h b/yt/yt/client/api/client_common.h\nindex 873be58c0c2b..a5569fb074a7 100644\n--- a/yt/yt/client/api/client_common.h\n+++ b/yt/yt/client/api/client_common.h\n@@ -144,6 +144,8 @@ struct TSelectRowsOptionsBase\n     ui64 RangeExpansionLimit = 200000;\n     //! Limits maximum parallel subqueries.\n     int MaxSubqueries = std::numeric_limits<int>::max();\n+    //! Limits parallel subqueries by row count.\n+    ui64 MinRowCountPerSubquery = 100'000;\n     //! Path in Cypress with UDFs.\n     std::optional<TString> UdfRegistryPath;\n     //! If |true| then logging is more verbose.\ndiff --git a/yt/yt/client/api/public.h b/yt/yt/client/api/public.h\nindex 847a60ebe563..be710a04ce55 100644\n--- a/yt/yt/client/api/public.h\n+++ b/yt/yt/client/api/public.h\n@@ -203,8 +203,8 @@ inline const TString BannedAttributeName(\"banned\");\n inline const TString RoleAttributeName(\"role\");\n inline const TString AddressesAttributeName(\"addresses\");\n inline const TString BalancersAttributeName(\"balancers\");\n-inline const TString DefaultRpcProxyRole(\"default\");\n-inline const TString DefaultHttpProxyRole(\"data\");\n+inline const std::string DefaultRpcProxyRole(\"default\");\n+inline const std::string DefaultHttpProxyRole(\"data\");\n inline const TString JournalPayloadKey(\"payload\");\n inline const TString HunkPayloadKey(\"payload\");\n \ndiff --git a/yt/yt/client/api/rpc_proxy/client_impl.cpp b/yt/yt/client/api/rpc_proxy/client_impl.cpp\nindex cc9e09338166..b9e4944381c5 100644\n--- a/yt/yt/client/api/rpc_proxy/client_impl.cpp\n+++ b/yt/yt/client/api/rpc_proxy/client_impl.cpp\n@@ -471,19 +471,27 @@ TFuture<void> TClient::AlterTableReplica(\n     if (options.Enabled) {\n         req->set_enabled(*options.Enabled);\n     }\n+\n     if (options.Mode) {\n         req->set_mode(static_cast<NProto::ETableReplicaMode>(*options.Mode));\n     }\n+\n     if (options.PreserveTimestamps) {\n         req->set_preserve_timestamps(*options.PreserveTimestamps);\n     }\n+\n     if (options.Atomicity) {\n         req->set_atomicity(static_cast<NProto::EAtomicity>(*options.Atomicity));\n     }\n+\n     if (options.EnableReplicatedTableTracker) {\n         req->set_enable_replicated_table_tracker(*options.EnableReplicatedTableTracker);\n     }\n \n+    if (options.ReplicaPath) {\n+        req->set_replica_path(*options.ReplicaPath);\n+    }\n+\n     ToProto(req->mutable_mutating_options(), options);\n \n     return req->Invoke().As<void>();\ndiff --git a/yt/yt/client/api/rpc_proxy/row_batch_reader.cpp b/yt/yt/client/api/rpc_proxy/row_batch_reader.cpp\nnew file mode 100644\nindex 000000000000..22223f69450a\n--- /dev/null\n+++ b/yt/yt/client/api/rpc_proxy/row_batch_reader.cpp\n@@ -0,0 +1,156 @@\n+#include \"row_batch_reader.h\"\n+#include \"helpers.h\"\n+#include \"row_stream.h\"\n+#include \"wire_row_stream.h\"\n+\n+#include <yt/yt/client/table_client/name_table.h>\n+\n+#include <yt_proto/yt/client/api/rpc_proxy/proto/api_service.pb.h>\n+\n+namespace NYT::NApi::NRpcProxy {\n+\n+using namespace NConcurrency;\n+using namespace NTableClient;\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+TRowBatchReader::TRowBatchReader(\n+    IAsyncZeroCopyInputStreamPtr underlying,\n+    bool isStreamWithStatistics)\n+    : Underlying_(std::move(underlying))\n+    , Decoder_(CreateWireRowStreamDecoder(NameTable_))\n+    , IsStreamWithStatistics_(isStreamWithStatistics)\n+{\n+    YT_VERIFY(Underlying_);\n+\n+    RowsFuture_ = GetRows();\n+    ReadyEvent_.TrySetFrom(RowsFuture_);\n+}\n+\n+IUnversionedRowBatchPtr TRowBatchReader::Read(const TRowBatchReadOptions& options)\n+{\n+    StoredRows_.clear();\n+\n+    if (!ReadyEvent_.IsSet() || !ReadyEvent_.Get().IsOK()) {\n+        return CreateEmptyUnversionedRowBatch();\n+    }\n+\n+    if (!Finished_) {\n+        ReadyEvent_ = NewPromise<void>();\n+    }\n+\n+    std::vector<TUnversionedRow> rows;\n+    rows.reserve(options.MaxRowsPerRead);\n+    i64 dataWeight = 0;\n+\n+    while (RowsFuture_ &&\n+        RowsFuture_.IsSet() &&\n+        RowsFuture_.Get().IsOK() &&\n+        !Finished_ &&\n+        std::ssize(rows) < options.MaxRowsPerRead &&\n+        dataWeight < options.MaxDataWeightPerRead)\n+    {\n+        const auto& currentRows = RowsFuture_.Get().Value();\n+\n+        if (currentRows.Empty()) {\n+            ReadyEvent_.Set();\n+            Finished_ = true;\n+            continue;\n+        }\n+\n+        while (CurrentRowsOffset_ < std::ssize(currentRows) &&\n+            std::ssize(rows) < options.MaxRowsPerRead &&\n+            dataWeight < options.MaxDataWeightPerRead)\n+        {\n+            auto row = currentRows[CurrentRowsOffset_++];\n+            rows.push_back(row);\n+            dataWeight += GetDataWeight(row);\n+        }\n+\n+        StoredRows_.push_back(currentRows);\n+\n+        if (CurrentRowsOffset_ == std::ssize(currentRows)) {\n+            RowsFuture_ = GetRows();\n+            CurrentRowsOffset_ = 0;\n+        }\n+    }\n+\n+    RowCount_ += rows.size();\n+    DataWeight_ += dataWeight;\n+\n+    ReadyEvent_.TrySetFrom(RowsFuture_);\n+    return rows.empty()\n+        ? nullptr\n+        : CreateBatchFromUnversionedRows(MakeSharedRange(std::move(rows), MakeStrong(this)));\n+}\n+\n+TFuture<void> TRowBatchReader::GetReadyEvent() const\n+{\n+    return ReadyEvent_;\n+}\n+\n+const TNameTablePtr& TRowBatchReader::GetNameTable() const\n+{\n+    return NameTable_;\n+}\n+\n+TFuture<TSharedRange<TUnversionedRow>> TRowBatchReader::GetRows()\n+{\n+    return Underlying_->Read()\n+        .Apply(BIND([this, weakThis = MakeWeak(this)](const TSharedRef& block) {\n+            auto this_ = weakThis.Lock();\n+            if (!this_) {\n+                THROW_ERROR_EXCEPTION(NYT::EErrorCode::Canceled, \"Reader destroyed\");\n+            }\n+\n+            NProto::TRowsetDescriptor descriptor;\n+            NProto::TRowsetStatistics statistics;\n+            auto payloadRef = DeserializeRowStreamBlockEnvelope(\n+                block,\n+                &descriptor,\n+                IsStreamWithStatistics_ ? &statistics : nullptr);\n+\n+            ValidateRowsetDescriptor(\n+                descriptor,\n+                CurrentWireFormatVersion,\n+                NProto::RK_UNVERSIONED,\n+                NProto::ERowsetFormat::RF_YT_WIRE);\n+\n+            if (descriptor.rowset_format() != NApi::NRpcProxy::NProto::RF_YT_WIRE) {\n+                THROW_ERROR_EXCEPTION(\n+                    \"Unsupported rowset format %Qv\",\n+                    NApi::NRpcProxy::NProto::ERowsetFormat_Name(descriptor.rowset_format()));\n+            }\n+\n+            auto batch = Decoder_->Decode(payloadRef, descriptor);\n+            auto rows = batch->MaterializeRows();\n+\n+            if (IsStreamWithStatistics_) {\n+                ApplyStatistics(statistics);\n+            }\n+\n+            if (rows.Empty()) {\n+                return ExpectEndOfStream(Underlying_).Apply(BIND([=] {\n+                    return std::move(rows);\n+                }));\n+            }\n+            return MakeFuture(std::move(rows));\n+        }));\n+}\n+\n+void TRowBatchReader::ApplyStatistics(const NProto::TRowsetStatistics& /*statistics*/)\n+{\n+}\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+IRowBatchReaderPtr CreateRowBatchReader(\n+    IAsyncZeroCopyInputStreamPtr inputStream,\n+    bool isStreamWithStatistics)\n+{\n+    return New<TRowBatchReader>(std::move(inputStream), isStreamWithStatistics);\n+}\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+} // namespace NYT::NApi::NRpcProxy\ndiff --git a/yt/yt/client/api/rpc_proxy/row_batch_reader.h b/yt/yt/client/api/rpc_proxy/row_batch_reader.h\nnew file mode 100644\nindex 000000000000..b7e30c02b64e\n--- /dev/null\n+++ b/yt/yt/client/api/rpc_proxy/row_batch_reader.h\n@@ -0,0 +1,58 @@\n+#pragma once\n+\n+#include <yt/yt/client/api/row_batch_reader.h>\n+#include <yt/yt/client/api/rpc_proxy/public.h>\n+\n+#include <yt/yt_proto/yt/client/api/rpc_proxy/proto/api_service.pb.h>\n+\n+namespace NYT::NApi::NRpcProxy {\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+class TRowBatchReader\n+    : public virtual IRowBatchReader\n+{\n+public:\n+    TRowBatchReader(\n+        NConcurrency::IAsyncZeroCopyInputStreamPtr underlying,\n+        bool isStreamWithStatistics);\n+\n+    NTableClient::IUnversionedRowBatchPtr Read(const NTableClient::TRowBatchReadOptions& options) override;\n+\n+    TFuture<void> GetReadyEvent() const override;\n+\n+    const NTableClient::TNameTablePtr& GetNameTable() const override;\n+\n+protected:\n+    i64 RowCount_ = 0;\n+    i64 DataWeight_ = 0;\n+\n+    virtual void ApplyStatistics(const NProto::TRowsetStatistics& statistics);\n+\n+private:\n+    const NConcurrency::IAsyncZeroCopyInputStreamPtr Underlying_;\n+    const NTableClient::TNameTablePtr NameTable_ = New<NTableClient::TNameTable>();\n+    const IRowStreamDecoderPtr Decoder_;\n+\n+    TFuture<TSharedRange<NTableClient::TUnversionedRow>> RowsFuture_;\n+    TPromise<void> ReadyEvent_ = NewPromise<void>();\n+\n+    std::vector<TSharedRange<NTableClient::TUnversionedRow>> StoredRows_;\n+\n+    bool Finished_ = false;\n+    i64 CurrentRowsOffset_ = 0;\n+\n+    const bool IsStreamWithStatistics_;\n+\n+    TFuture<TSharedRange<NTableClient::TUnversionedRow>> GetRows();\n+};\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+IRowBatchReaderPtr CreateRowBatchReader(\n+    NConcurrency::IAsyncZeroCopyInputStreamPtr inputStream,\n+    bool isStreamWithStatistics);\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+} // namespace NYT::NApi::NRpcProxy\ndiff --git a/yt/yt/client/api/rpc_proxy/row_batch_writer.cpp b/yt/yt/client/api/rpc_proxy/row_batch_writer.cpp\nnew file mode 100644\nindex 000000000000..7d1cbe5a4dea\n--- /dev/null\n+++ b/yt/yt/client/api/rpc_proxy/row_batch_writer.cpp\n@@ -0,0 +1,68 @@\n+#include \"row_batch_writer.h\"\n+#include \"row_stream.h\"\n+#include \"wire_row_stream.h\"\n+\n+#include <yt/yt/client/table_client/name_table.h>\n+#include <yt/yt/client/table_client/row_batch.h>\n+\n+#include <yt/yt/core/concurrency/async_stream.h>\n+\n+namespace NYT::NApi::NRpcProxy {\n+\n+using namespace NConcurrency;\n+using namespace NTableClient;\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+TRowBatchWriter::TRowBatchWriter(IAsyncZeroCopyOutputStreamPtr underlying)\n+    : Underlying_(std::move(underlying))\n+    , Encoder_(CreateWireRowStreamEncoder(NameTable_))\n+{\n+    YT_VERIFY(Underlying_);\n+    NameTable_->SetEnableColumnNameValidation();\n+}\n+\n+bool TRowBatchWriter::Write(TRange<TUnversionedRow> rows)\n+{\n+    YT_VERIFY(!Closed_);\n+    YT_VERIFY(ReadyEvent_.IsSet() && ReadyEvent_.Get().IsOK());\n+\n+    auto batch = CreateBatchFromUnversionedRows(TSharedRange<TUnversionedRow>(rows, nullptr));\n+\n+    auto block = Encoder_->Encode(batch, nullptr);\n+\n+    ReadyEvent_ = NewPromise<void>();\n+    ReadyEvent_.TrySetFrom(Underlying_->Write(std::move(block)));\n+\n+    return ReadyEvent_.IsSet() && ReadyEvent_.Get().IsOK();\n+}\n+\n+TFuture<void> TRowBatchWriter::GetReadyEvent()\n+{\n+    return ReadyEvent_;\n+}\n+\n+TFuture<void> TRowBatchWriter::Close()\n+{\n+    YT_VERIFY(!Closed_);\n+    Closed_ = true;\n+\n+    return Underlying_->Close();\n+}\n+\n+const TNameTablePtr& TRowBatchWriter::GetNameTable() const\n+{\n+    return NameTable_;\n+}\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+IRowBatchWriterPtr CreateRowBatchWriter(\n+    IAsyncZeroCopyOutputStreamPtr outputStream)\n+{\n+    return New<TRowBatchWriter>(std::move(outputStream));\n+}\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+} // namespace NYT::NApi::NRpcProxy\ndiff --git a/yt/yt/client/api/rpc_proxy/row_batch_writer.h b/yt/yt/client/api/rpc_proxy/row_batch_writer.h\nnew file mode 100644\nindex 000000000000..1476f08ca662\n--- /dev/null\n+++ b/yt/yt/client/api/rpc_proxy/row_batch_writer.h\n@@ -0,0 +1,41 @@\n+#pragma once\n+\n+#include \"public.h\"\n+\n+#include <yt/yt/client/api/row_batch_writer.h>\n+\n+namespace NYT::NApi::NRpcProxy {\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+class TRowBatchWriter\n+    : public virtual IRowBatchWriter\n+{\n+public:\n+    explicit TRowBatchWriter(NConcurrency::IAsyncZeroCopyOutputStreamPtr underlying);\n+\n+    bool Write(TRange<NTableClient::TUnversionedRow> rows) override;\n+\n+    TFuture<void> GetReadyEvent() override;\n+\n+    TFuture<void> Close() override;\n+\n+    const NTableClient::TNameTablePtr& GetNameTable() const override;\n+\n+private:\n+    const NConcurrency::IAsyncZeroCopyOutputStreamPtr Underlying_;\n+    const NTableClient::TNameTablePtr NameTable_ = New<NTableClient::TNameTable>();\n+    const IRowStreamEncoderPtr Encoder_;\n+\n+    TPromise<void> ReadyEvent_ = MakePromise<void>(TError());\n+    bool Closed_ = false;\n+};\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+IRowBatchWriterPtr CreateRowBatchWriter(\n+    NConcurrency::IAsyncZeroCopyOutputStreamPtr outputStream);\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+} // namespace NYT::NApi::NRpcProxy\ndiff --git a/yt/yt/client/api/rpc_proxy/table_reader.cpp b/yt/yt/client/api/rpc_proxy/table_reader.cpp\nindex 7bf5238da319..bb1f571332bc 100644\n--- a/yt/yt/client/api/rpc_proxy/table_reader.cpp\n+++ b/yt/yt/client/api/rpc_proxy/table_reader.cpp\n@@ -1,20 +1,12 @@\n #include \"table_reader.h\"\n+#include \"row_batch_reader.h\"\n #include \"helpers.h\"\n-#include \"row_stream.h\"\n-#include \"wire_row_stream.h\"\n \n-#include <yt/yt/client/api/rowset.h>\n #include <yt/yt/client/api/table_reader.h>\n+#include <yt/yt/client/table_client/schema.h>\n \n #include <yt/yt_proto/yt/client/chunk_client/proto/data_statistics.pb.h>\n \n-#include <yt/yt/client/table_client/name_table.h>\n-#include <yt/yt/client/table_client/unversioned_reader.h>\n-#include <yt/yt/client/table_client/unversioned_row.h>\n-#include <yt/yt/client/table_client/row_batch.h>\n-\n-#include <yt/yt/core/rpc/stream.h>\n-\n namespace NYT::NApi::NRpcProxy {\n \n using namespace NConcurrency;\n@@ -23,7 +15,8 @@ using namespace NTableClient;\n ////////////////////////////////////////////////////////////////////////////////\n \n class TTableReader\n-    : public ITableReader\n+    : public TRowBatchReader\n+    , public ITableReader\n {\n public:\n     TTableReader(\n@@ -31,19 +24,13 @@ class TTableReader\n         i64 startRowIndex,\n         const std::vector<TString>& omittedInaccessibleColumns,\n         TTableSchemaPtr schema,\n-        const NApi::NRpcProxy::NProto::TRowsetStatistics& statistics)\n-        : Underlying_(std::move(underlying))\n+        const NProto::TRowsetStatistics& statistics)\n+        : TRowBatchReader(std::move(underlying), /*isStreamWithStatistics*/ true)\n         , StartRowIndex_(startRowIndex)\n         , TableSchema_(std::move(schema))\n         , OmittedInaccessibleColumns_(omittedInaccessibleColumns)\n-        , Decoder_(CreateWireRowStreamDecoder(NameTable_))\n     {\n-        YT_VERIFY(Underlying_);\n-\n-        ApplyReaderStatistics(statistics);\n-\n-        RowsWithStatisticsFuture_ = GetRowsWithStatistics();\n-        ReadyEvent_.TrySetFrom(RowsWithStatisticsFuture_);\n+        ApplyStatistics(statistics);\n     }\n \n     i64 GetStartRowIndex() const override\n@@ -65,76 +52,6 @@ class TTableReader\n         return dataStatistics;\n     }\n \n-    TFuture<void> GetReadyEvent() const override\n-    {\n-        return ReadyEvent_;\n-    }\n-\n-    IUnversionedRowBatchPtr Read(const TRowBatchReadOptions& options) override\n-    {\n-        StoredRows_.clear();\n-\n-        if (!ReadyEvent_.IsSet() || !ReadyEvent_.Get().IsOK()) {\n-            return CreateEmptyUnversionedRowBatch();\n-        }\n-\n-        if (!Finished_) {\n-            ReadyEvent_ = NewPromise<void>();\n-        }\n-\n-        std::vector<TUnversionedRow> rows;\n-        rows.reserve(options.MaxRowsPerRead);\n-        i64 dataWeight = 0;\n-\n-        while (RowsWithStatisticsFuture_ &&\n-               RowsWithStatisticsFuture_.IsSet() &&\n-               RowsWithStatisticsFuture_.Get().IsOK() &&\n-               !Finished_ &&\n-               std::ssize(rows) < options.MaxRowsPerRead &&\n-               dataWeight < options.MaxDataWeightPerRead)\n-        {\n-            const auto& currentRows = RowsWithStatisticsFuture_.Get().Value().Rows;\n-            const auto& currentStatistics = RowsWithStatisticsFuture_.Get().Value().Statistics;\n-\n-            if (currentRows.Empty()) {\n-                ReadyEvent_.Set();\n-                Finished_ = true;\n-                ApplyReaderStatistics(currentStatistics);\n-                continue;\n-            }\n-\n-            while (CurrentRowsOffset_ < std::ssize(currentRows) &&\n-                   std::ssize(rows) < options.MaxRowsPerRead &&\n-                   dataWeight < options.MaxDataWeightPerRead)\n-            {\n-                auto row = currentRows[CurrentRowsOffset_++];\n-                rows.push_back(row);\n-                dataWeight += GetDataWeight(row);\n-            }\n-\n-            StoredRows_.push_back(currentRows);\n-            ApplyReaderStatistics(currentStatistics);\n-\n-            if (CurrentRowsOffset_ == std::ssize(currentRows)) {\n-                RowsWithStatisticsFuture_ = GetRowsWithStatistics();\n-                CurrentRowsOffset_ = 0;\n-            }\n-        }\n-\n-        RowCount_ += rows.size();\n-        DataWeight_ += dataWeight;\n-\n-        ReadyEvent_.TrySetFrom(RowsWithStatisticsFuture_);\n-        return rows.empty()\n-            ? nullptr\n-            : CreateBatchFromUnversionedRows(MakeSharedRange(std::move(rows), MakeStrong(this)));\n-    }\n-\n-    const TNameTablePtr& GetNameTable() const override\n-    {\n-        return NameTable_;\n-    }\n-\n     const TTableSchemaPtr& GetTableSchema() const override\n     {\n         return TableSchema_;\n@@ -146,86 +63,18 @@ class TTableReader\n     }\n \n private:\n-    struct TRowsWithStatistics\n-    {\n-        TSharedRange<TUnversionedRow> Rows;\n-        NApi::NRpcProxy::NProto::TRowsetStatistics Statistics;\n-    };\n-\n-    const IAsyncZeroCopyInputStreamPtr Underlying_;\n     const i64 StartRowIndex_;\n     const TTableSchemaPtr TableSchema_;\n     const std::vector<TString> OmittedInaccessibleColumns_;\n \n-    const TNameTablePtr NameTable_ = New<TNameTable>();\n-    const IRowStreamDecoderPtr Decoder_;\n-\n     NChunkClient::NProto::TDataStatistics DataStatistics_;\n     i64 TotalRowCount_;\n \n-    i64 RowCount_ = 0;\n-    i64 DataWeight_ = 0;\n-\n-    TNameTableToSchemaIdMapping IdMapping_;\n-\n-    TPromise<void> ReadyEvent_ = NewPromise<void>();\n-\n-    std::vector<TSharedRange<TUnversionedRow>> StoredRows_;\n-    TFuture<TRowsWithStatistics> RowsWithStatisticsFuture_;\n-    i64 CurrentRowsOffset_ = 0;\n-\n-    bool Finished_ = false;\n-\n-    void ApplyReaderStatistics(const NApi::NRpcProxy::NProto::TRowsetStatistics& statistics)\n+    void ApplyStatistics(const NProto::TRowsetStatistics& statistics) override\n     {\n         TotalRowCount_ = statistics.total_row_count();\n         DataStatistics_ = statistics.data_statistics();\n     }\n-\n-    TFuture<TRowsWithStatistics> GetRowsWithStatistics()\n-    {\n-        return Underlying_->Read()\n-            .Apply(BIND([this, weakThis = MakeWeak(this)] (const TSharedRef& block) {\n-                auto this_ = weakThis.Lock();\n-                if (!this_) {\n-                    THROW_ERROR_EXCEPTION(NYT::EErrorCode::Canceled, \"Reader destroyed\");\n-                }\n-\n-                NApi::NRpcProxy::NProto::TRowsetDescriptor descriptor;\n-                NApi::NRpcProxy::NProto::TRowsetStatistics statistics;\n-                auto payloadRef = DeserializeRowStreamBlockEnvelope(block, &descriptor, &statistics);\n-\n-                ValidateRowsetDescriptor(\n-                    descriptor,\n-                    NApi::NRpcProxy::CurrentWireFormatVersion,\n-                    NApi::NRpcProxy::NProto::RK_UNVERSIONED,\n-                    NApi::NRpcProxy::NProto::ERowsetFormat::RF_YT_WIRE);\n-\n-                auto decoder = GetOrCreateDecoder(descriptor.rowset_format());\n-                auto batch = decoder->Decode(payloadRef, descriptor);\n-                auto rows = batch->MaterializeRows();\n-                auto rowsWithStatistics = TRowsWithStatistics{\n-                    std::move(rows),\n-                    std::move(statistics)\n-                };\n-\n-                if (rowsWithStatistics.Rows.Empty()) {\n-                    return ExpectEndOfStream(Underlying_).Apply(BIND([=] {\n-                        return std::move(rowsWithStatistics);\n-                    }));\n-                }\n-                return MakeFuture(std::move(rowsWithStatistics));\n-            }));\n-    }\n-\n-    IRowStreamDecoderPtr GetOrCreateDecoder(NApi::NRpcProxy::NProto::ERowsetFormat format)\n-    {\n-        if (format != NApi::NRpcProxy::NProto::RF_YT_WIRE) {\n-            THROW_ERROR_EXCEPTION(\"Unsupported rowset format %Qv\",\n-                NApi::NRpcProxy::NProto::ERowsetFormat_Name(format));\n-        }\n-        return Decoder_;\n-    }\n };\n \n TFuture<ITableReaderPtr> CreateTableReader(IAsyncZeroCopyInputStreamPtr inputStream)\ndiff --git a/yt/yt/client/api/rpc_proxy/table_writer.cpp b/yt/yt/client/api/rpc_proxy/table_writer.cpp\nindex 31197018f600..d957c6702342 100644\n--- a/yt/yt/client/api/rpc_proxy/table_writer.cpp\n+++ b/yt/yt/client/api/rpc_proxy/table_writer.cpp\n@@ -1,15 +1,8 @@\n #include \"table_writer.h\"\n-#include \"helpers.h\"\n-#include \"row_stream.h\"\n-#include \"wire_row_stream.h\"\n+#include \"row_batch_writer.h\"\n \n #include <yt/yt/client/api/table_writer.h>\n-\n-#include <yt/yt/client/table_client/name_table.h>\n #include <yt/yt/client/table_client/schema.h>\n-#include <yt/yt/client/table_client/row_batch.h>\n-\n-#include <yt/yt/core/rpc/stream.h>\n \n namespace NYT::NApi::NRpcProxy {\n \n@@ -19,51 +12,16 @@ using namespace NTableClient;\n ////////////////////////////////////////////////////////////////////////////////\n \n class TTableWriter\n-    : public ITableWriter\n+    : public TRowBatchWriter\n+    , public ITableWriter\n {\n public:\n     TTableWriter(\n         IAsyncZeroCopyOutputStreamPtr underlying,\n         TTableSchemaPtr schema)\n-        : Underlying_(std::move(underlying))\n+        : TRowBatchWriter(std::move(underlying))\n         , Schema_(std::move(schema))\n-        , Encoder_(CreateWireRowStreamEncoder(NameTable_))\n     {\n-        YT_VERIFY(Underlying_);\n-        NameTable_->SetEnableColumnNameValidation();\n-    }\n-\n-    bool Write(TRange<TUnversionedRow> rows) override\n-    {\n-        YT_VERIFY(!Closed_);\n-        YT_VERIFY(ReadyEvent_.IsSet() && ReadyEvent_.Get().IsOK());\n-\n-        auto batch = CreateBatchFromUnversionedRows(TSharedRange<TUnversionedRow>(rows, nullptr));\n-\n-        auto block = Encoder_->Encode(batch, nullptr);\n-\n-        ReadyEvent_ = NewPromise<void>();\n-        ReadyEvent_.TrySetFrom(Underlying_->Write(std::move(block)));\n-\n-        return ReadyEvent_.IsSet() && ReadyEvent_.Get().IsOK();\n-    }\n-\n-    TFuture<void> GetReadyEvent() override\n-    {\n-        return ReadyEvent_;\n-    }\n-\n-    TFuture<void> Close() override\n-    {\n-        YT_VERIFY(!Closed_);\n-        Closed_ = true;\n-\n-        return Underlying_->Close();\n-    }\n-\n-    const TNameTablePtr& GetNameTable() const override\n-    {\n-        return NameTable_;\n     }\n \n     const TTableSchemaPtr& GetSchema() const override\n@@ -72,14 +30,7 @@ class TTableWriter\n     }\n \n private:\n-    const IAsyncZeroCopyOutputStreamPtr Underlying_;\n     const TTableSchemaPtr Schema_;\n-\n-    const TNameTablePtr NameTable_ = New<TNameTable>();\n-    const IRowStreamEncoderPtr Encoder_;\n-\n-    TPromise<void> ReadyEvent_ = MakePromise<void>(TError());\n-    bool Closed_ = false;\n };\n \n ITableWriterPtr CreateTableWriter(\ndiff --git a/yt/yt/client/api/shuffle_client.h b/yt/yt/client/api/shuffle_client.h\nindex eb07ccc6d2bf..d7972cd680b6 100644\n--- a/yt/yt/client/api/shuffle_client.h\n+++ b/yt/yt/client/api/shuffle_client.h\n@@ -9,7 +9,7 @@ namespace NYT::NApi {\n struct TShuffleHandle\n     : public NYTree::TYsonStruct\n {\n-    TGuid TransactionId;\n+    NObjectClient::TTransactionId TransactionId;\n     TString CoordinatorAddress;\n     TString Account;\n     int PartitionCount;\ndiff --git a/yt/yt/client/api/table_client.h b/yt/yt/client/api/table_client.h\nindex f577d4a4b4a4..581412eba7c0 100644\n--- a/yt/yt/client/api/table_client.h\n+++ b/yt/yt/client/api/table_client.h\n@@ -135,6 +135,7 @@ struct TAlterTableReplicaOptions\n     std::optional<bool> PreserveTimestamps;\n     std::optional<NTransactionClient::EAtomicity> Atomicity;\n     std::optional<bool> EnableReplicatedTableTracker;\n+    std::optional<TString> ReplicaPath;\n };\n \n struct TGetTablePivotKeysOptions\ndiff --git a/yt/yt/client/api/table_reader.h b/yt/yt/client/api/table_reader.h\nindex 927f8dcb9f32..b26e970657e0 100644\n--- a/yt/yt/client/api/table_reader.h\n+++ b/yt/yt/client/api/table_reader.h\n@@ -10,7 +10,7 @@ namespace NYT::NApi {\n ////////////////////////////////////////////////////////////////////////////////\n \n struct ITableReader\n-    : public IRowBatchReader\n+    : public virtual IRowBatchReader\n {\n     //! Returns the starting row index within the table.\n     virtual i64 GetStartRowIndex() const = 0;\ndiff --git a/yt/yt/client/api/table_writer.h b/yt/yt/client/api/table_writer.h\nindex fd22dbd1a06e..f4d42c3c78e0 100644\n--- a/yt/yt/client/api/table_writer.h\n+++ b/yt/yt/client/api/table_writer.h\n@@ -8,7 +8,7 @@ namespace NYT::NApi {\n ////////////////////////////////////////////////////////////////////////////////\n \n struct ITableWriter\n-    : public IRowBatchWriter\n+    : public virtual IRowBatchWriter\n {\n     //! Returns the schema to be used for constructing rows.\n     virtual const NTableClient::TTableSchemaPtr& GetSchema() const = 0;\ndiff --git a/yt/yt/client/driver/command-inl.h b/yt/yt/client/driver/command-inl.h\nindex a27f748e7151..4b595a57dfa9 100644\n--- a/yt/yt/client/driver/command-inl.h\n+++ b/yt/yt/client/driver/command-inl.h\n@@ -392,6 +392,14 @@ void TSelectRowsCommandBase<\n         .GreaterThan(0)\n         .Optional(/*init*/ false);\n \n+    registrar.template ParameterWithUniversalAccessor<ui64>(\n+        \"min_row_count_per_subquery\",\n+        [] (TThis* command) -> auto& {\n+            return command->Options.MinRowCountPerSubquery;\n+        })\n+        .GreaterThan(0)\n+        .Optional(/*init*/ false);\n+\n     registrar.template ParameterWithUniversalAccessor<std::optional<TString>>(\n         \"udf_registry_path\",\n         [] (TThis* command) -> auto& {\ndiff --git a/yt/yt/client/driver/proxy_discovery_cache.cpp b/yt/yt/client/driver/proxy_discovery_cache.cpp\nindex 772f526231d7..a17894a93e53 100644\n--- a/yt/yt/client/driver/proxy_discovery_cache.cpp\n+++ b/yt/yt/client/driver/proxy_discovery_cache.cpp\n@@ -133,7 +133,7 @@ class TProxyDiscoveryCache\n                     continue;\n                 }\n \n-                if (proxyNode->Attributes().Get<TString>(RoleAttributeName, DefaultRpcProxyRole) != request.Role) {\n+                if (proxyNode->Attributes().Get<std::string>(RoleAttributeName, DefaultRpcProxyRole) != request.Role) {\n                     continue;\n                 }\n \ndiff --git a/yt/yt/client/driver/table_commands.cpp b/yt/yt/client/driver/table_commands.cpp\nindex 9b5d7cae49ea..0ff27ef95f8c 100644\n--- a/yt/yt/client/driver/table_commands.cpp\n+++ b/yt/yt/client/driver/table_commands.cpp\n@@ -1564,6 +1564,14 @@ void TAlterTableReplicaCommand::Register(TRegistrar registrar)\n             return command->Options.EnableReplicatedTableTracker;\n         })\n         .Optional(/*init*/ false);\n+\n+    registrar.ParameterWithUniversalAccessor<std::optional<TString>>(\n+        \"replica_path\",\n+        [] (TThis* command) -> auto& {\n+            return command->Options.ReplicaPath;\n+        })\n+        .Optional(/*init*/ false);\n+\n }\n \n void TAlterTableReplicaCommand::DoExecute(ICommandContextPtr context)\ndiff --git a/yt/yt/client/node_tracker_client/node_directory.cpp b/yt/yt/client/node_tracker_client/node_directory.cpp\nindex 0ef4ee456184..7d377febbca2 100644\n--- a/yt/yt/client/node_tracker_client/node_directory.cpp\n+++ b/yt/yt/client/node_tracker_client/node_directory.cpp\n@@ -58,9 +58,9 @@ namespace {\n constexpr int TypicalTagCount = 16;\n \n // Cf. YT-10645\n-TCompactVector<TStringBuf, TypicalTagCount> GetSortedTags(const std::vector<TString>& tags)\n+TCompactVector<std::string, TypicalTagCount> GetSortedTags(const std::vector<std::string>& tags)\n {\n-    TCompactVector<TStringBuf, TypicalTagCount> result;\n+    TCompactVector<std::string, TypicalTagCount> result;\n     result.reserve(tags.size());\n     for (const auto& tag : tags) {\n         result.push_back(tag);\n@@ -94,7 +94,7 @@ TNodeDescriptor::TNodeDescriptor(\n     const std::optional<std::string>& host,\n     const std::optional<std::string>& rack,\n     const std::optional<std::string>& dc,\n-    const std::vector<TString>& tags,\n+    const std::vector<std::string>& tags,\n     std::optional<TInstant> lastSeenTime)\n     : Addresses_(std::move(addresses))\n     , DefaultAddress_(NNodeTrackerClient::GetDefaultAddress(Addresses_))\n@@ -145,7 +145,7 @@ const std::optional<std::string>& TNodeDescriptor::GetDataCenter() const\n     return DataCenter_;\n }\n \n-const std::vector<TString>& TNodeDescriptor::GetTags() const\n+const std::vector<std::string>& TNodeDescriptor::GetTags() const\n {\n     return Tags_;\n }\n@@ -380,7 +380,7 @@ void FromProto(NNodeTrackerClient::TNodeDescriptor* descriptor, const NNodeTrack\n         protoDescriptor.has_host() ? std::make_optional(protoDescriptor.host()) : std::nullopt,\n         protoDescriptor.has_rack() ? std::make_optional(protoDescriptor.rack()) : std::nullopt,\n         protoDescriptor.has_data_center() ? std::make_optional(protoDescriptor.data_center()) : std::nullopt,\n-        FromProto<std::vector<TString>>(protoDescriptor.tags()),\n+        FromProto<std::vector<std::string>>(protoDescriptor.tags()),\n         protoDescriptor.has_last_seen_time() ? std::make_optional(FromProto<TInstant>(protoDescriptor.last_seen_time())) : std::nullopt);\n }\n \n@@ -434,7 +434,7 @@ bool operator == (const TNodeDescriptor& lhs, const NProto::TNodeDescriptor& rhs\n     }\n \n     const auto& lhsTags = lhs.GetTags();\n-    auto rhsTags = FromProto<std::vector<TString>>(rhs.tags());\n+    auto rhsTags = FromProto<std::vector<std::string>>(rhs.tags());\n     if (GetSortedTags(lhsTags) != GetSortedTags(rhsTags)) {\n         return false;\n     }\ndiff --git a/yt/yt/client/node_tracker_client/node_directory.h b/yt/yt/client/node_tracker_client/node_directory.h\nindex f8ebc1ba0c25..eafef00686f4 100644\n--- a/yt/yt/client/node_tracker_client/node_directory.h\n+++ b/yt/yt/client/node_tracker_client/node_directory.h\n@@ -35,7 +35,7 @@ class TNodeDescriptor\n         const std::optional<std::string>& host = {},\n         const std::optional<std::string>& rack = {},\n         const std::optional<std::string>& dc = {},\n-        const std::vector<TString>& tags = {},\n+        const std::vector<std::string>& tags = {},\n         std::optional<TInstant> lastSeenTime = {});\n \n     TNodeDescriptor& operator=(const TNodeDescriptor& other) = default;\n@@ -55,7 +55,7 @@ class TNodeDescriptor\n     const std::optional<std::string>& GetRack() const;\n     const std::optional<std::string>& GetDataCenter() const;\n \n-    const std::vector<TString>& GetTags() const;\n+    const std::vector<std::string>& GetTags() const;\n \n     //! GetLastSeenTime returns last instant when node was seen online on some master.\n     /*!\n@@ -76,7 +76,7 @@ class TNodeDescriptor\n     std::optional<std::string> Host_;\n     std::optional<std::string> Rack_;\n     std::optional<std::string> DataCenter_;\n-    std::vector<TString> Tags_;\n+    std::vector<std::string> Tags_;\n \n     // Not persisted.\n     mutable TCopyableAtomic<TCpuInstant> LastSeenTime_;\ndiff --git a/yt/yt/client/object_client/helpers-inl.h b/yt/yt/client/object_client/helpers-inl.h\nindex 1aaa08b25136..9d487edb19c3 100644\n--- a/yt/yt/client/object_client/helpers-inl.h\n+++ b/yt/yt/client/object_client/helpers-inl.h\n@@ -123,14 +123,14 @@ inline TObjectId MakeSequoiaId(\n inline TObjectId MakeWellKnownId(\n     EObjectType type,\n     TCellTag cellTag,\n-    ui64 counter /*= 0xffffffffffffffff*/)\n+    ui64 counter)\n {\n     YT_VERIFY(counter & WellKnownCounterMask);\n     return MakeId(\n         type,\n         cellTag,\n         counter,\n-        static_cast<ui32>(cellTag.Underlying() * 901517) ^ 0x140a8383);\n+        static_cast<ui32>(static_cast<ui32>(cellTag.Underlying()) * 901517ULL ^ 0x140a8383ULL));\n }\n \n inline TObjectId MakeSchemaObjectId(\ndiff --git a/yt/yt/client/query_client/query_builder.cpp b/yt/yt/client/query_client/query_builder.cpp\nindex 0c2100e8998b..4cdce715966d 100644\n--- a/yt/yt/client/query_client/query_builder.cpp\n+++ b/yt/yt/client/query_client/query_builder.cpp\n@@ -67,6 +67,11 @@ void TQueryBuilder::AddGroupByExpression(TString expression, TString alias)\n     });\n }\n \n+void TQueryBuilder::SetWithTotals(EWithTotalsMode withTotalsMode)\n+{\n+    WithTotalsMode_ = withTotalsMode;\n+}\n+\n void TQueryBuilder::AddHavingConjunct(TString expression)\n {\n     HavingConjuncts_.push_back(std::move(expression));\n@@ -151,6 +156,10 @@ TString TQueryBuilder::Build()\n         parts.push_back(JoinSeq(\", \", GroupByEntries_));\n     }\n \n+    if (WithTotalsMode_ == EWithTotalsMode::BeforeHaving) {\n+        parts.push_back(\"WITH TOTALS\");\n+    }\n+\n     if (!HavingConjuncts_.empty()) {\n         if (GroupByEntries_.empty()) {\n             THROW_ERROR_EXCEPTION(\"Having without group by is not valid\");\n@@ -159,6 +168,10 @@ TString TQueryBuilder::Build()\n         parts.push_back(JoinSeq(\" AND \", Parenthesize(HavingConjuncts_)));\n     }\n \n+    if (WithTotalsMode_ == EWithTotalsMode::AfterHaving) {\n+        parts.push_back(\"WITH TOTALS\");\n+    }\n+\n     if (!OrderByEntries_.empty()) {\n         parts.push_back(\"ORDER BY\");\n         parts.push_back(JoinSeq(\", \", OrderByEntries_));\ndiff --git a/yt/yt/client/query_client/query_builder.h b/yt/yt/client/query_client/query_builder.h\nindex ab509d970c12..56ec58458ab3 100644\n--- a/yt/yt/client/query_client/query_builder.h\n+++ b/yt/yt/client/query_client/query_builder.h\n@@ -18,6 +18,12 @@ DEFINE_ENUM(ETableJoinType,\n     (Left)\n );\n \n+DEFINE_ENUM(EWithTotalsMode,\n+    (None)\n+    (BeforeHaving)\n+    (AfterHaving)\n+);\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n class TQueryBuilder\n@@ -34,6 +40,8 @@ class TQueryBuilder\n     void AddGroupByExpression(TString expression);\n     void AddGroupByExpression(TString expression, TString alias);\n \n+    void SetWithTotals(EWithTotalsMode withTotalsMode);\n+\n     void AddHavingConjunct(TString expression);\n \n     void AddOrderByExpression(TString expression);\n@@ -76,6 +84,7 @@ class TQueryBuilder\n     std::vector<TString> WhereConjuncts_;\n     std::vector<TOrderByEntry> OrderByEntries_;\n     std::vector<TEntryWithAlias> GroupByEntries_;\n+    EWithTotalsMode WithTotalsMode_ = EWithTotalsMode::None;\n     std::vector<TString> HavingConjuncts_;\n     std::vector<TJoinEntry> JoinEntries_;\n     std::optional<i64> Limit_;\ndiff --git a/yt/yt/client/scheduler/public.h b/yt/yt/client/scheduler/public.h\nindex d07e8469dfc1..d92ae73f78e8 100644\n--- a/yt/yt/client/scheduler/public.h\n+++ b/yt/yt/client/scheduler/public.h\n@@ -133,6 +133,7 @@ DEFINE_ENUM(EAbortReason,\n     ((UnresolvedNodeId)                ( 53))\n     ((RootVolumePreparationFailed)     ( 54))\n     ((InterruptionFailed)              ( 55))\n+    ((OperationIncarnationChanged)     ( 56))\n     ((SchedulingFirst)                 (100))\n     ((SchedulingTimeout)               (101))\n     ((SchedulingResourceOvercommit)    (102))\ndiff --git a/yt/yt/client/table_client/adapters.cpp b/yt/yt/client/table_client/adapters.cpp\nindex 0309bbbc4836..43ac145369eb 100644\n--- a/yt/yt/client/table_client/adapters.cpp\n+++ b/yt/yt/client/table_client/adapters.cpp\n@@ -1,4 +1,5 @@\n #include \"adapters.h\"\n+#include \"private.h\"\n \n #include \"row_batch.h\"\n \n@@ -21,7 +22,7 @@ using NProfiling::TWallTimer;\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-YT_DEFINE_GLOBAL(const NLogging::TLogger, Logger, \"TableClientAdapters\");\n+static constexpr auto& Logger = TableClientLogger;\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/client/table_client/check_schema_compatibility.cpp b/yt/yt/client/table_client/check_schema_compatibility.cpp\nindex a2297bf05dd9..d2fd29b903ca 100644\n--- a/yt/yt/client/table_client/check_schema_compatibility.cpp\n+++ b/yt/yt/client/table_client/check_schema_compatibility.cpp\n@@ -2,6 +2,7 @@\n #include \"logical_type.h\"\n #include \"schema.h\"\n #include \"comparator.h\"\n+#include \"versioned_io_options.h\"\n \n #include <yt/yt/client/complex_types/check_type_compatibility.h>\n \n@@ -27,6 +28,14 @@ std::pair<ESchemaCompatibility, TError> CheckTableSchemaCompatibilityImpl(\n \n         for (const auto& inputColumn : inputSchema.Columns()) {\n             if (!outputSchema.FindColumn(inputColumn.Name())) {\n+                if (options.AllowTimestampColumns) {\n+                    if (auto originalColumnName = GetTimestampColumnOriginalNameOrNull(inputColumn.Name())) {\n+                        if (outputSchema.FindColumn(*originalColumnName)) {\n+                            continue;\n+                        }\n+                    }\n+                }\n+\n                 return {\n                     ESchemaCompatibility::Incompatible,\n                     TError(\"Column %v is found in input schema but is missing in output schema\",\ndiff --git a/yt/yt/client/table_client/check_schema_compatibility.h b/yt/yt/client/table_client/check_schema_compatibility.h\nindex 2fbb823ff0d3..78ebb088cce5 100644\n--- a/yt/yt/client/table_client/check_schema_compatibility.h\n+++ b/yt/yt/client/table_client/check_schema_compatibility.h\n@@ -11,6 +11,7 @@ struct TTableSchemaCompatibilityOptions\n     bool IgnoreSortOrder = false;\n     bool ForbidExtraComputedColumns = true;\n     bool IgnoreStableNamesDifference = false;\n+    bool AllowTimestampColumns = false;\n };\n \n // Validates that values from table with inputSchema also match outputSchema.\ndiff --git a/yt/yt/client/table_client/comparator.cpp b/yt/yt/client/table_client/comparator.cpp\nindex a6037004f36b..3e18b6384827 100644\n--- a/yt/yt/client/table_client/comparator.cpp\n+++ b/yt/yt/client/table_client/comparator.cpp\n@@ -1,6 +1,7 @@\n #include \"comparator.h\"\n \n #include \"key_bound.h\"\n+#include \"private.h\"\n #include \"serialize.h\"\n \n #include <yt/yt/core/logging/log.h>\n@@ -15,7 +16,7 @@ using namespace NYson;\n using namespace NYTree;\n \n //! Used only for YT_LOG_FATAL below.\n-YT_DEFINE_GLOBAL(const NLogging::TLogger, Logger, \"TableClientComparator\");\n+static constexpr auto& Logger = TableClientLogger;\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/client/table_client/composite_compare.cpp b/yt/yt/client/table_client/composite_compare.cpp\nindex b41b0cfe0e91..168a311a9958 100644\n--- a/yt/yt/client/table_client/composite_compare.cpp\n+++ b/yt/yt/client/table_client/composite_compare.cpp\n@@ -1,5 +1,7 @@\n #include \"composite_compare.h\"\n \n+#include \"private.h\"\n+\n #include <yt/yt/client/table_client/row_base.h>\n \n #include <yt/yt/core/yson/pull_parser.h>\n@@ -20,7 +22,7 @@ using namespace NYson;\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-YT_DEFINE_GLOBAL(const NLogging::TLogger, Logger, \"YsonCompositeCompare\");\n+static constexpr auto& Logger = TableClientLogger;\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/client/table_client/config.cpp b/yt/yt/client/table_client/config.cpp\nindex a58057288074..96ff8b5af62e 100644\n--- a/yt/yt/client/table_client/config.cpp\n+++ b/yt/yt/client/table_client/config.cpp\n@@ -467,6 +467,8 @@ void TChunkWriterOptions::Register(TRegistrar registrar)\n \n     registrar.Parameter(\"schema_modification\", &TThis::SchemaModification)\n         .Default(ETableSchemaModification::None);\n+    registrar.Parameter(\"versioned_write_options\", &TThis::VersionedWriteOptions)\n+        .Default();\n     registrar.Parameter(\"max_heavy_columns\", &TThis::MaxHeavyColumns)\n         .Default(0);\n \ndiff --git a/yt/yt/client/table_client/config.h b/yt/yt/client/table_client/config.h\nindex e1bc37043d65..a8accf974bd8 100644\n--- a/yt/yt/client/table_client/config.h\n+++ b/yt/yt/client/table_client/config.h\n@@ -1,6 +1,7 @@\n #pragma once\n \n #include \"public.h\"\n+#include \"versioned_io_options.h\"\n \n #include <yt/yt/client/chunk_client/config.h>\n \n@@ -433,6 +434,8 @@ class TChunkWriterOptions\n \n     ETableSchemaModification SchemaModification;\n \n+    TVersionedWriteOptions VersionedWriteOptions;\n+\n     EOptimizeFor OptimizeFor;\n     std::optional<NChunkClient::EChunkFormat> ChunkFormat;\n     NChunkClient::EChunkFormat GetEffectiveChunkFormat(bool versioned) const;\ndiff --git a/yt/yt/client/table_client/key.cpp b/yt/yt/client/table_client/key.cpp\nindex 7ba78aa88ed0..fc693f865a72 100644\n--- a/yt/yt/client/table_client/key.cpp\n+++ b/yt/yt/client/table_client/key.cpp\n@@ -1,5 +1,6 @@\n #include \"key.h\"\n \n+#include \"private.h\"\n #include \"serialize.h\"\n \n #include <yt/yt/core/ytree/fluent.h>\n@@ -12,8 +13,8 @@ using namespace NYson;\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-//! Used only for YT_LOG_FATAL below.\n-YT_DEFINE_GLOBAL(const NLogging::TLogger, Logger, \"TableClientKey\");\n+//! Used only for YT_LOG_FATAL below in debug mode.\n+[[maybe_unused]] static constexpr auto& Logger = TableClientLogger;\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/client/table_client/key_bound.cpp b/yt/yt/client/table_client/key_bound.cpp\nindex e02b894afd97..e666e0d532f7 100644\n--- a/yt/yt/client/table_client/key_bound.cpp\n+++ b/yt/yt/client/table_client/key_bound.cpp\n@@ -1,6 +1,7 @@\n #include \"key_bound.h\"\n \n #include \"helpers.h\"\n+#include \"private.h\"\n #include \"row_buffer.h\"\n #include \"serialize.h\"\n \n@@ -15,7 +16,7 @@ using namespace NLogging;\n ////////////////////////////////////////////////////////////////////////////////\n \n //! Used only for YT_LOG_FATAL below.\n-YT_DEFINE_GLOBAL(const NLogging::TLogger, Logger, \"TableClientKey\");\n+[[maybe_unused]] static constexpr auto& Logger = TableClientLogger;\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/client/table_client/private.h b/yt/yt/client/table_client/private.h\nnew file mode 100644\nindex 000000000000..56efb8438755\n--- /dev/null\n+++ b/yt/yt/client/table_client/private.h\n@@ -0,0 +1,15 @@\n+#pragma once\n+\n+#include \"public.h\"\n+\n+#include <yt/yt/core/logging/log.h>\n+\n+namespace NYT::NTableClient {\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+YT_DEFINE_GLOBAL(const NLogging::TLogger, TableClientLogger, \"TableClient\");\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n+} // namespace NYT::NTableClient\ndiff --git a/yt/yt/client/table_client/public.h b/yt/yt/client/table_client/public.h\nindex 45a241afffbf..e52eaecf4817 100644\n--- a/yt/yt/client/table_client/public.h\n+++ b/yt/yt/client/table_client/public.h\n@@ -47,6 +47,7 @@ class TColumnMetaExt;\n class TVersionedRowDigestExt;\n class TCompressionDictionaryExt;\n class TVersionedReadOptions;\n+class TVersionedWriteOptions;\n \n } // namespace NProto\n \n@@ -443,6 +444,7 @@ static_assert(sizeof(TDynamicTableKeyMask) * 8 == MaxKeyColumnCountInDynamicTabl\n using TUUComparerSignature = int(const TUnversionedValue*, const TUnversionedValue*, int);\n \n struct TVersionedReadOptions;\n+struct TVersionedWriteOptions;\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/client/table_client/schema.cpp b/yt/yt/client/table_client/schema.cpp\nindex ac530ed7585e..f3762d095180 100644\n--- a/yt/yt/client/table_client/schema.cpp\n+++ b/yt/yt/client/table_client/schema.cpp\n@@ -4,6 +4,7 @@\n #include \"comparator.h\"\n #include \"logical_type.h\"\n #include \"unversioned_row.h\"\n+#include \"versioned_io_options.h\"\n \n #include <optional>\n \n@@ -518,7 +519,11 @@ TColumnStableName TTableSchema::TNameMapping::NameToStableName(TStringBuf name)\n     auto* column = Schema_.FindColumn(name);\n     if (!column) {\n         if (Schema_.GetStrict()) {\n-            THROW_ERROR_EXCEPTION(\"No column with name %Qv in strict schema\", name);\n+            if (auto originalColumnName = GetTimestampColumnOriginalNameOrNull(name);\n+                !originalColumnName || !Schema_.FindColumn(*originalColumnName))\n+            {\n+                THROW_ERROR_EXCEPTION(\"No column with name %Qv in strict schema\", name);\n+            }\n         }\n         return TColumnStableName(TString(name));\n     }\ndiff --git a/yt/yt/client/table_client/versioned_io_options.cpp b/yt/yt/client/table_client/versioned_io_options.cpp\nindex 69bd8fcefff8..7a067d8a9639 100644\n--- a/yt/yt/client/table_client/versioned_io_options.cpp\n+++ b/yt/yt/client/table_client/versioned_io_options.cpp\n@@ -12,6 +12,12 @@ void TVersionedReadOptions::Register(TRegistrar registrar)\n         .Default(EVersionedIOMode::Default);\n }\n \n+void TVersionedWriteOptions::Register(TRegistrar registrar)\n+{\n+    registrar.Parameter(\"write_mode\", &TThis::WriteMode)\n+        .Default(EVersionedIOMode::Default);\n+}\n+\n void ToProto(\n     NProto::TVersionedReadOptions* protoOptions,\n     const TVersionedReadOptions& options)\n@@ -26,6 +32,20 @@ void FromProto(\n     options->ReadMode = CheckedEnumCast<EVersionedIOMode>(protoOptions.read_mode());\n }\n \n+void ToProto(\n+    NProto::TVersionedWriteOptions* protoOptions,\n+    const NTableClient::TVersionedWriteOptions& options)\n+{\n+    protoOptions->set_write_mode(static_cast<i32>(options.WriteMode));\n+}\n+\n+void FromProto(\n+    NTableClient::TVersionedWriteOptions* options,\n+    const NProto::TVersionedWriteOptions& protoOptions)\n+{\n+    options->WriteMode = CheckedEnumCast<EVersionedIOMode>(protoOptions.write_mode());\n+}\n+\n std::optional<TString> GetTimestampColumnOriginalNameOrNull(TStringBuf name)\n {\n     auto prefixEnd = name.begin() + ssize(TimestampColumnPrefix);\ndiff --git a/yt/yt/client/table_client/versioned_io_options.h b/yt/yt/client/table_client/versioned_io_options.h\nindex 6e1f2f7a7bd5..219c97a064ad 100644\n--- a/yt/yt/client/table_client/versioned_io_options.h\n+++ b/yt/yt/client/table_client/versioned_io_options.h\n@@ -23,6 +23,16 @@ struct TVersionedReadOptions\n     static void Register(TRegistrar registrar);\n };\n \n+struct TVersionedWriteOptions\n+    : public NYTree::TYsonStructLite\n+{\n+    EVersionedIOMode WriteMode;\n+\n+    REGISTER_YSON_STRUCT_LITE(TVersionedWriteOptions);\n+\n+    static void Register(TRegistrar registrar);\n+};\n+\n void ToProto(\n     NProto::TVersionedReadOptions* protoOptions,\n     const NTableClient::TVersionedReadOptions& options);\n@@ -31,6 +41,14 @@ void FromProto(\n     NTableClient::TVersionedReadOptions* options,\n     const NProto::TVersionedReadOptions& protoOptions);\n \n+void ToProto(\n+    NProto::TVersionedWriteOptions* protoOptions,\n+    const NTableClient::TVersionedWriteOptions& options);\n+\n+void FromProto(\n+    NTableClient::TVersionedWriteOptions* options,\n+    const NProto::TVersionedWriteOptions& protoOptions);\n+\n std::optional<TString> GetTimestampColumnOriginalNameOrNull(TStringBuf name);\n \n ////////////////////////////////////////////////////////////////////////////////\ndiff --git a/yt/yt/client/table_client/wire_protocol.cpp b/yt/yt/client/table_client/wire_protocol.cpp\nindex c4b11c926bc1..d473573986a3 100644\n--- a/yt/yt/client/table_client/wire_protocol.cpp\n+++ b/yt/yt/client/table_client/wire_protocol.cpp\n@@ -1,5 +1,7 @@\n #include \"wire_protocol.h\"\n \n+#include \"private.h\"\n+\n #include <yt/yt_proto/yt/client/table_chunk_format/proto/chunk_meta.pb.h>\n #include <yt/yt/client/table_client/row_buffer.h>\n #include <yt/yt/client/table_client/schema.h>\n@@ -36,7 +38,7 @@ using NCrypto::TMD5Hash;\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-const static NLogging::TLogger Logger(\"WireProtocol\");\n+static constexpr auto& Logger = TableClientLogger;\n \n struct TWireProtocolWriterTag\n { };\ndiff --git a/yt/yt/client/ya.make b/yt/yt/client/ya.make\nindex ec0e33b3a897..a0cc4caf88f0 100644\n--- a/yt/yt/client/ya.make\n+++ b/yt/yt/client/ya.make\n@@ -51,7 +51,9 @@ SRCS(\n     api/rpc_proxy/timestamp_provider.cpp\n     api/rpc_proxy/transaction.cpp\n     api/rpc_proxy/transaction_impl.cpp\n+    api/rpc_proxy/row_batch_reader.cpp\n     api/rpc_proxy/row_stream.cpp\n+    api/rpc_proxy/row_batch_writer.cpp\n     api/rpc_proxy/wire_row_stream.cpp\n \n     bundle_controller_client/bundle_controller_client.cpp\ndiff --git a/yt/yt/client/ypath/rich.cpp b/yt/yt/client/ypath/rich.cpp\nindex b275c2ea04a0..ddd386df64db 100644\n--- a/yt/yt/client/ypath/rich.cpp\n+++ b/yt/yt/client/ypath/rich.cpp\n@@ -686,6 +686,11 @@ TVersionedReadOptions TRichYPath::GetVersionedReadOptions() const\n     return GetAttribute(*this, \"versioned_read_options\", TVersionedReadOptions());\n }\n \n+TVersionedWriteOptions TRichYPath::GetVersionedWriteOptions() const\n+{\n+    return GetAttribute(*this, \"versioned_write_options\", TVersionedWriteOptions());\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n TString ConvertToString(const TRichYPath& path, EYsonFormat ysonFormat)\n@@ -787,6 +792,7 @@ const std::vector<TString>& GetWellKnownRichYPathAttributes()\n         \"create\",\n         \"read_via_exec_node\",\n         \"versioned_read_options\",\n+        \"versioned_write_options\",\n     };\n     return WellKnownAttributes;\n }\ndiff --git a/yt/yt/client/ypath/rich.h b/yt/yt/client/ypath/rich.h\nindex 0e483b48386f..b6d7d60ccf1b 100644\n--- a/yt/yt/client/ypath/rich.h\n+++ b/yt/yt/client/ypath/rich.h\n@@ -170,6 +170,9 @@ class TRichYPath\n     // \"versioned_read_options\"\n     NTableClient::TVersionedReadOptions GetVersionedReadOptions() const;\n \n+    // \"versioned_write_options\"\n+    NTableClient::TVersionedWriteOptions GetVersionedWriteOptions() const;\n+\n private:\n     TYPath Path_;\n     NYTree::IAttributeDictionaryPtr Attributes_;\ndiff --git a/yt/yt/core/bus/tcp/connection.cpp b/yt/yt/core/bus/tcp/connection.cpp\nindex b71fbb9363ba..83faf6cb42b5 100644\n--- a/yt/yt/core/bus/tcp/connection.cpp\n+++ b/yt/yt/core/bus/tcp/connection.cpp\n@@ -621,18 +621,18 @@ void TTcpConnection::ConnectSocket(const TNetworkAddress& address)\n     DialerSession_->Dial();\n }\n \n-void TTcpConnection::OnDialerFinished(const TErrorOr<SOCKET>& socketOrError)\n+void TTcpConnection::OnDialerFinished(const TErrorOr<TFileDescriptor>& fdOrError)\n {\n     YT_LOG_DEBUG(\"Dialer finished\");\n \n     DialerSession_.Reset();\n \n-    if (!socketOrError.IsOK()) {\n+    if (!fdOrError.IsOK()) {\n         Abort(TError(\n             NBus::EErrorCode::TransportError,\n             \"Error connecting to %v\",\n             EndpointDescription_)\n-            << socketOrError);\n+            << fdOrError);\n         return;\n     }\n \n@@ -643,7 +643,7 @@ void TTcpConnection::OnDialerFinished(const TErrorOr<SOCKET>& socketOrError)\n             return;\n         }\n \n-        Socket_ = socketOrError.Value();\n+        Socket_ = fdOrError.Value();\n \n         auto tosLevel = TosLevel_.load();\n         if (tosLevel != DefaultTosLevel) {\ndiff --git a/yt/yt/core/bus/tcp/connection.h b/yt/yt/core/bus/tcp/connection.h\nindex d5d631f3b228..2948d20b6764 100644\n--- a/yt/yt/core/bus/tcp/connection.h\n+++ b/yt/yt/core/bus/tcp/connection.h\n@@ -297,7 +297,7 @@ class TTcpConnection\n     int GetSocketPort();\n \n     void ConnectSocket(const NNet::TNetworkAddress& address);\n-    void OnDialerFinished(const TErrorOr<SOCKET>& socketOrError);\n+    void OnDialerFinished(const TErrorOr<TFileDescriptor>& fdOrError);\n \n     void ResolveAddress();\n     void OnAddressResolveFinished(const TErrorOr<NNet::TNetworkAddress>& result);\ndiff --git a/yt/yt/core/concurrency/fiber_scheduler_thread.cpp b/yt/yt/core/concurrency/fiber_scheduler_thread.cpp\nindex 1add139c3fe4..4c1509d8cab1 100644\n--- a/yt/yt/core/concurrency/fiber_scheduler_thread.cpp\n+++ b/yt/yt/core/concurrency/fiber_scheduler_thread.cpp\n@@ -1091,13 +1091,13 @@ YT_DEFINE_THREAD_LOCAL(TFiberId, CurrentFiberId);\n \n TFiberId GetCurrentFiberId()\n {\n-    NYT::NOrigin::EnableOriginOverrides();\n+    NYT::NDetail::EnableErrorOriginOverrides();\n     return CurrentFiberId();\n }\n \n void SetCurrentFiberId(TFiberId id)\n {\n-    NYT::NOrigin::EnableOriginOverrides();\n+    NYT::NDetail::EnableErrorOriginOverrides();\n     CurrentFiberId() = id;\n }\n \ndiff --git a/yt/yt/core/concurrency/new_fair_share_thread_pool.cpp b/yt/yt/core/concurrency/new_fair_share_thread_pool.cpp\nindex d27a14605994..343718848667 100644\n--- a/yt/yt/core/concurrency/new_fair_share_thread_pool.cpp\n+++ b/yt/yt/core/concurrency/new_fair_share_thread_pool.cpp\n@@ -443,11 +443,11 @@ class TBucketMapping\n         }\n \n         // Detach under lock.\n-        auto* poolDangerousPtr = bucket->Pool.Release();\n+        auto* rawPool = bucket->Pool.Release();\n \n         // Do not want use NewWithDeleter and keep pointer to TTwoLevelFairShareQueue in each execution pool.\n-        if (NYT::GetRefCounter(poolDangerousPtr)->Unref(1)) {\n-            auto poolsToRemove = DetachPool(poolDangerousPtr);\n+        if (NYT::GetRefCounter(rawPool)->Unref(1)) {\n+            auto poolsToRemove = DetachPool(rawPool);\n             guard.Release();\n \n             while (poolsToRemove.GetSize() > 0) {\n@@ -466,19 +466,21 @@ class TBucketMapping\n         if (!inserted) {\n             YT_ASSERT(mappingIt->second->PoolName == poolName);\n \n-            auto* pool = mappingIt->second;\n+            auto* rawPool = mappingIt->second;\n             // If RetainPoolQueue_ contains only one element its LinkedListNode will be null.\n             // Determine that pool is in RetainPoolQueue_ by checking its ref count.\n-            if (NYT::GetRefCounter(pool)->GetRefCount() == 0) {\n-                RetainPoolQueue_.Remove(pool);\n-                pool->LinkedListNode = {};\n+            if (NYT::GetRefCounter(rawPool)->GetRefCount() == 0) {\n+                RetainPoolQueue_.Remove(rawPool);\n+                rawPool->LinkedListNode = {};\n \n-                YT_LOG_TRACE(\"Restoring pool (PoolName: %v)\", pool->PoolName);\n+                YT_LOG_TRACE(\"Restoring pool (PoolName: %v)\", rawPool->PoolName);\n             }\n \n-            YT_LOG_TRACE(\"Reusing pool (PoolName: %v)\", pool->PoolName);\n+            YT_LOG_TRACE(\"Reusing pool (PoolName: %v)\", rawPool->PoolName);\n \n-            return pool;\n+            // NB: Strong RC could be zero, see above.\n+            NYT::GetRefCounter(rawPool)->DangerousRef();\n+            return TExecutionPoolPtr(rawPool, /*addReference*/ false);\n         } else {\n             YT_LOG_TRACE(\"Creating pool (PoolName: %v)\", poolName);\n             auto pool = New<TExecutionPool>(poolName, GetPoolProfiler(poolName));\ndiff --git a/yt/yt/core/crypto/tls.cpp b/yt/yt/core/crypto/tls.cpp\nindex ee3d1399b623..38779e21a4c3 100644\n--- a/yt/yt/core/crypto/tls.cpp\n+++ b/yt/yt/core/crypto/tls.cpp\n@@ -57,7 +57,7 @@ constexpr auto TlsBufferSize = 1_MB;\n struct TSslContextImpl\n     : public TRefCounted\n {\n-    SSL_CTX* Ctx = nullptr;\n+    SSL_CTX* Context = nullptr;\n \n     TSslContextImpl()\n     {\n@@ -66,36 +66,36 @@ struct TSslContextImpl\n \n     ~TSslContextImpl()\n     {\n-        if (Ctx) {\n-            SSL_CTX_free(Ctx);\n+        if (Context) {\n+            SSL_CTX_free(Context);\n         }\n-        if (ActiveCtx_) {\n-            SSL_CTX_free(ActiveCtx_);\n+        if (ActiveContext_) {\n+            SSL_CTX_free(ActiveContext_);\n         }\n     }\n \n     void Reset()\n     {\n-        if (Ctx) {\n-            SSL_CTX_free(Ctx);\n+        if (Context) {\n+            SSL_CTX_free(Context);\n         }\n #if OPENSSL_VERSION_NUMBER >= 0x10100000L\n-        Ctx = SSL_CTX_new(TLS_method());\n-        if (!Ctx) {\n+        Context = SSL_CTX_new(TLS_method());\n+        if (!Context) {\n             THROW_ERROR_EXCEPTION(\"SSL_CTX_new(TLS_method()) failed\")\n                 << GetSslErrors();\n         }\n-        if (SSL_CTX_set_min_proto_version(Ctx, TLS1_2_VERSION) == 0) {\n+        if (SSL_CTX_set_min_proto_version(Context, TLS1_2_VERSION) == 0) {\n             THROW_ERROR_EXCEPTION(\"SSL_CTX_set_min_proto_version failed\")\n                 << GetSslErrors();\n         }\n-        if (SSL_CTX_set_max_proto_version(Ctx, TLS1_2_VERSION) == 0) {\n+        if (SSL_CTX_set_max_proto_version(Context, TLS1_2_VERSION) == 0) {\n             THROW_ERROR_EXCEPTION(\"SSL_CTX_set_max_proto_version failed\")\n                 << GetSslErrors();\n         }\n #else\n         Ctx = SSL_CTX_new(TLSv1_2_method());\n-        if (!Ctx) {\n+        if (!Context) {\n             THROW_ERROR_EXCEPTION(\"SSL_CTX_new(TLSv1_2_method()) failed\")\n                 << GetSslErrors();\n         }\n@@ -104,17 +104,17 @@ struct TSslContextImpl\n \n     void Commit(TInstant time)\n     {\n-        SSL_CTX* oldCtx;\n-        YT_ASSERT(Ctx);\n+        SSL_CTX* oldContext;\n+        YT_ASSERT(Context);\n         {\n             auto guard = WriterGuard(Lock_);\n-            oldCtx = ActiveCtx_;\n-            ActiveCtx_ = Ctx;\n-            Ctx = nullptr;\n+            oldContext = ActiveContext_;\n+            ActiveContext_ = Context;\n+            Context = nullptr;\n             CommitTime_ = time;\n         }\n-        if (oldCtx) {\n-            SSL_CTX_free(oldCtx);\n+        if (oldContext) {\n+            SSL_CTX_free(oldContext);\n         }\n     }\n \n@@ -127,19 +127,19 @@ struct TSslContextImpl\n     SSL* NewSsl()\n     {\n         auto guard = ReaderGuard(Lock_);\n-        YT_ASSERT(ActiveCtx_);\n-        return SSL_new(ActiveCtx_);\n+        YT_ASSERT(ActiveContext_);\n+        return SSL_new(ActiveContext_);\n     }\n \n     bool IsActive(const SSL* ssl)\n     {\n         auto guard = ReaderGuard(Lock_);\n-        return SSL_get_SSL_CTX(ssl) == ActiveCtx_;\n+        return SSL_get_SSL_CTX(ssl) == ActiveContext_;\n     }\n \n private:\n     YT_DECLARE_SPIN_LOCK(NThreading::TReaderWriterSpinLock, Lock_);\n-    SSL_CTX* ActiveCtx_ = nullptr;\n+    SSL_CTX* ActiveContext_ = nullptr;\n     TInstant CommitTime_;\n };\n \n@@ -155,14 +155,14 @@ class TTlsConnection\n {\n public:\n     TTlsConnection(\n-        TSslContextImplPtr ctx,\n+        TSslContextImplPtr context,\n         IPollerPtr poller,\n         IConnectionPtr connection)\n-        : Ctx_(std::move(ctx))\n+        : Context_(std::move(context))\n         , Invoker_(CreateSerializedInvoker(poller->GetInvoker(), \"crypto_tls_connection\"))\n         , Underlying_(std::move(connection))\n     {\n-        Ssl_ = Ctx_->NewSsl();\n+        Ssl_ = Context_->NewSsl();\n         if (!Ssl_) {\n             THROW_ERROR_EXCEPTION(\"SSL_new failed\")\n                 << GetSslErrors();\n@@ -229,14 +229,19 @@ class TTlsConnection\n         return Underlying_->GetWriteByteCount();\n     }\n \n-    const TNetworkAddress& LocalAddress() const override\n+    TConnectionId GetId() const override\n+    {\n+        return Underlying_->GetId();\n+    }\n+\n+    const TNetworkAddress& GetLocalAddress() const override\n     {\n-        return Underlying_->LocalAddress();\n+        return Underlying_->GetLocalAddress();\n     }\n \n-    const TNetworkAddress& RemoteAddress() const override\n+    const TNetworkAddress& GetRemoteAddress() const override\n     {\n-        return Underlying_->RemoteAddress();\n+        return Underlying_->GetRemoteAddress();\n     }\n \n     TConnectionStatistics GetWriteStatistics() const override\n@@ -356,7 +361,7 @@ class TTlsConnection\n     }\n \n private:\n-    const TSslContextImplPtr Ctx_;\n+    const TSslContextImplPtr Context_;\n     const IInvokerPtr Invoker_;\n     const IConnectionPtr Underlying_;\n \n@@ -570,18 +575,18 @@ class TTlsDialer\n         TSslContextImplPtr ctx,\n         IDialerPtr dialer,\n         IPollerPtr poller)\n-        : Ctx_(std::move(ctx))\n+        : Context_(std::move(ctx))\n         , Underlying_(std::move(dialer))\n         , Poller_(std::move(poller))\n     { }\n \n-    TFuture<IConnectionPtr> Dial(const TNetworkAddress& remote, TDialerContextPtr context) override\n+    TFuture<IConnectionPtr> Dial(const TNetworkAddress& remoteAddress, TDialerContextPtr context) override\n     {\n-        return Underlying_->Dial(remote)\n-            .Apply(BIND([ctx = Ctx_, poller = Poller_, context = std::move(context)] (const IConnectionPtr& underlying) -> IConnectionPtr {\n+        return Underlying_->Dial(remoteAddress)\n+            .Apply(BIND([ctx = Context_, poller = Poller_, context = std::move(context)] (const IConnectionPtr& underlying) -> IConnectionPtr {\n                 auto connection = New<TTlsConnection>(ctx, poller, underlying);\n-                if (context != nullptr && context->Host != std::nullopt) {\n-                    connection->SetHost(*(context->Host));\n+                if (context && context->Host) {\n+                    connection->SetHost(*context->Host);\n                 }\n                 connection->StartClient();\n                 return connection;\n@@ -589,7 +594,7 @@ class TTlsDialer\n     }\n \n private:\n-    const TSslContextImplPtr Ctx_;\n+    const TSslContextImplPtr Context_;\n     const IDialerPtr Underlying_;\n     const IPollerPtr Poller_;\n };\n@@ -658,12 +663,12 @@ TInstant TSslContext::GetCommitTime() const\n \n void TSslContext::UseBuiltinOpenSslX509Store()\n {\n-    SSL_CTX_set_cert_store(Impl_->Ctx, GetBuiltinOpenSslX509Store().Release());\n+    SSL_CTX_set_cert_store(Impl_->Context, GetBuiltinOpenSslX509Store().Release());\n }\n \n void TSslContext::SetCipherList(const TString& list)\n {\n-    if (SSL_CTX_set_cipher_list(Impl_->Ctx, list.data()) == 0) {\n+    if (SSL_CTX_set_cipher_list(Impl_->Context, list.data()) == 0) {\n         THROW_ERROR_EXCEPTION(\"SSL_CTX_set_cipher_list failed\")\n             << TErrorAttribute(\"cipher_list\", list)\n             << GetSslErrors();\n@@ -672,7 +677,7 @@ void TSslContext::SetCipherList(const TString& list)\n \n void TSslContext::AddCertificateFromFile(const TString& path)\n {\n-    if (SSL_CTX_use_certificate_file(Impl_->Ctx, path.c_str(), SSL_FILETYPE_PEM) != 1) {\n+    if (SSL_CTX_use_certificate_file(Impl_->Context, path.c_str(), SSL_FILETYPE_PEM) != 1) {\n         THROW_ERROR_EXCEPTION(\"SSL_CTX_use_certificate_file failed\")\n             << TErrorAttribute(\"path\", path)\n             << GetSslErrors();\n@@ -681,7 +686,7 @@ void TSslContext::AddCertificateFromFile(const TString& path)\n \n void TSslContext::AddCertificateChainFromFile(const TString& path)\n {\n-    if (SSL_CTX_use_certificate_chain_file(Impl_->Ctx, path.c_str()) != 1) {\n+    if (SSL_CTX_use_certificate_chain_file(Impl_->Context, path.c_str()) != 1) {\n         THROW_ERROR_EXCEPTION(\"SSL_CTX_use_certificate_chain_file failed\")\n             << TErrorAttribute(\"path\", path)\n             << GetSslErrors();\n@@ -690,7 +695,7 @@ void TSslContext::AddCertificateChainFromFile(const TString& path)\n \n void TSslContext::AddPrivateKeyFromFile(const TString& path)\n {\n-    if (SSL_CTX_use_PrivateKey_file(Impl_->Ctx, path.c_str(), SSL_FILETYPE_PEM) != 1) {\n+    if (SSL_CTX_use_PrivateKey_file(Impl_->Context, path.c_str(), SSL_FILETYPE_PEM) != 1) {\n         THROW_ERROR_EXCEPTION(\"SSL_CTX_use_PrivateKey_file failed\")\n             << TErrorAttribute(\"path\", path)\n             << GetSslErrors();\n@@ -714,12 +719,12 @@ void TSslContext::AddCertificateChain(const TString& certificateChain)\n         X509_free(certificateObject);\n     });\n \n-    if (SSL_CTX_use_certificate(Impl_->Ctx, certificateObject) != 1) {\n+    if (SSL_CTX_use_certificate(Impl_->Context, certificateObject) != 1) {\n         THROW_ERROR_EXCEPTION(\"SSL_CTX_use_certificate failed\")\n             << GetSslErrors();\n     }\n \n-    SSL_CTX_clear_chain_certs(Impl_->Ctx);\n+    SSL_CTX_clear_chain_certs(Impl_->Context);\n     while (true) {\n         auto chainCertificateObject = PEM_read_bio_X509(bio, nullptr, nullptr, nullptr);\n         if (!chainCertificateObject) {\n@@ -733,7 +738,7 @@ void TSslContext::AddCertificateChain(const TString& certificateChain)\n                 << GetSslErrors();\n         }\n \n-        int result = SSL_CTX_add0_chain_cert(Impl_->Ctx, chainCertificateObject);\n+        int result = SSL_CTX_add0_chain_cert(Impl_->Context, chainCertificateObject);\n         if (!result) {\n             X509_free(chainCertificateObject);\n             THROW_ERROR_EXCEPTION(\"SSL_CTX_add0_chain_cert\")\n@@ -759,7 +764,7 @@ void TSslContext::AddCertificate(const TString& certificate)\n         X509_free(certificateObject);\n     });\n \n-    if (SSL_CTX_use_certificate(Impl_->Ctx, certificateObject) != 1) {\n+    if (SSL_CTX_use_certificate(Impl_->Context, certificateObject) != 1) {\n         THROW_ERROR_EXCEPTION(\"SSL_CTX_use_certificate failed\")\n             << GetSslErrors();\n     }\n@@ -782,7 +787,7 @@ void TSslContext::AddPrivateKey(const TString& privateKey)\n         EVP_PKEY_free(privateKeyObject);\n     });\n \n-    if (SSL_CTX_use_PrivateKey(Impl_->Ctx, privateKeyObject) != 1) {\n+    if (SSL_CTX_use_PrivateKey(Impl_->Context, privateKeyObject) != 1) {\n         THROW_ERROR_EXCEPTION(\"SSL_CTX_use_PrivateKey failed\")\n             << GetSslErrors();\n     }\ndiff --git a/yt/yt/core/http/client.cpp b/yt/yt/core/http/client.cpp\nindex dc7bf3077df7..d21358b2c66a 100644\n--- a/yt/yt/core/http/client.cpp\n+++ b/yt/yt/core/http/client.cpp\n@@ -12,6 +12,7 @@\n #include <yt/yt/core/net/connection.h>\n \n #include <yt/yt/core/concurrency/poller.h>\n+\n #include <util/string/cast.h>\n \n namespace NYT::NHttp {\n@@ -26,13 +27,13 @@ class TClient\n {\n public:\n     TClient(\n-        const TClientConfigPtr& config,\n-        const IDialerPtr& dialer,\n-        const IInvokerPtr& invoker)\n-        : Config_(config)\n-        , Dialer_(dialer)\n-        , Invoker_(invoker)\n-        , ConnectionPool_(New<TConnectionPool>(dialer, config, invoker))\n+        TClientConfigPtr config,\n+        IDialerPtr dialer,\n+        IInvokerPtr invoker)\n+        : Config_(std::move(config))\n+        , Dialer_(std::move(dialer))\n+        , Invoker_(std::move(invoker))\n+        , ConnectionPool_(New<TConnectionPool>(Dialer_, Config_, Invoker_))\n     { }\n \n     TFuture<IResponsePtr> Get(\n@@ -109,7 +110,7 @@ class TClient\n     const TClientConfigPtr Config_;\n     const IDialerPtr Dialer_;\n     const IInvokerPtr Invoker_;\n-    TConnectionPoolPtr ConnectionPool_;\n+    const TConnectionPoolPtr ConnectionPool_;\n \n     static int GetDefaultPort(const TUrlRef& parsedUrl)\n     {\n@@ -125,9 +126,8 @@ class TClient\n         auto host = parsedUrl.Host;\n         TNetworkAddress address;\n \n-        auto tryIP = TNetworkAddress::TryParse(host);\n-        if (tryIP.IsOK()) {\n-            address = tryIP.Value();\n+        if (auto ipOrError = TNetworkAddress::TryParse(host); ipOrError.IsOK()) {\n+            address = ipOrError.Value();\n         } else {\n             auto asyncAddress = TAddressResolver::Get()->Resolve(ToString(host));\n             address = WaitFor(asyncAddress)\n@@ -137,15 +137,17 @@ class TClient\n         return TNetworkAddress(address, parsedUrl.Port.value_or(GetDefaultPort(parsedUrl)));\n     }\n \n-    std::pair<THttpOutputPtr, THttpInputPtr> OpenHttp(const TUrlRef& urlRef)\n+    std::pair<THttpOutputPtr, THttpInputPtr> Connect(const TUrlRef& urlRef)\n     {\n         auto context = New<TDialerContext>();\n         context->Host = urlRef.Host;\n+\n         auto address = GetAddress(urlRef);\n \n         // TODO(aleexfi): Enable connection pool by default\n         if (Config_->MaxIdleConnections == 0) {\n-            auto connection = WaitFor(Dialer_->Dial(address, std::move(context))).ValueOrThrow();\n+            auto connection = WaitFor(Dialer_->Dial(address, std::move(context)))\n+                .ValueOrThrow();\n \n             auto input = New<THttpInput>(\n                 connection,\n@@ -161,9 +163,10 @@ class TClient\n \n             return {std::move(output), std::move(input)};\n         } else {\n-            auto connection = WaitFor(ConnectionPool_->Connect(address, std::move(context))).ValueOrThrow();\n+            auto connection = WaitFor(ConnectionPool_->Connect(address, std::move(context)))\n+                .ValueOrThrow();\n \n-            auto reuseSharedState = New<NDetail::TReusableConnectionState>(connection, ConnectionPool_);\n+            auto reusableState = New<NDetail::TReusableConnectionState>(connection, ConnectionPool_);\n \n             auto input = New<NDetail::TConnectionReuseWrapper<THttpInput>>(\n                 connection,\n@@ -171,13 +174,13 @@ class TClient\n                 Invoker_,\n                 EMessageType::Response,\n                 Config_);\n-            input->SetReusableState(reuseSharedState);\n+            input->SetReusableState(reusableState);\n \n             auto output = New<NDetail::TConnectionReuseWrapper<THttpOutput>>(\n                 connection,\n                 EMessageType::Request,\n                 Config_);\n-            output->SetReusableState(reuseSharedState);\n+            output->SetReusableState(reusableState);\n \n             return {std::move(output), std::move(input)};\n         }\n@@ -186,7 +189,7 @@ class TClient\n     template <typename T>\n     TFuture<T> WrapError(const TString& url, TCallback<T()> action)\n     {\n-        return BIND([=, this_ = MakeStrong(this)] {\n+        return BIND([=, this_ = MakeStrong(this), action = std::move(action)] {\n             try {\n                 return action();\n             } catch (const std::exception& ex) {\n@@ -223,7 +226,7 @@ class TClient\n                 // Waits for response headers internally.\n                 Response_->GetStatusCode();\n \n-                return IResponsePtr{Response_};\n+                return IResponsePtr(Response_);\n             }));\n         }\n \n@@ -238,10 +241,10 @@ class TClient\n         }\n \n     private:\n-        THttpOutputPtr Request_;\n-        THttpInputPtr Response_;\n-        TIntrusivePtr<TClient> Client_;\n-        TString Url_;\n+        const THttpOutputPtr Request_;\n+        const THttpInputPtr Response_;\n+        const TIntrusivePtr<TClient> Client_;\n+        const TString Url_;\n     };\n \n     std::pair<THttpOutputPtr, THttpInputPtr> StartAndWriteHeaders(\n@@ -254,7 +257,7 @@ class TClient\n \n         auto urlRef = ParseUrl(url);\n \n-        std::tie(request, response) = OpenHttp(urlRef);\n+        std::tie(request, response) = Connect(urlRef);\n \n         request->SetHost(urlRef.Host, urlRef.PortStr);\n         if (headers) {\n@@ -276,7 +279,7 @@ class TClient\n     {\n         return WrapError(url, BIND([=, this, this_ = MakeStrong(this)] {\n             auto [request, response] = StartAndWriteHeaders(method, url, headers);\n-            return IActiveRequestPtr{New<TActiveRequest>(request, response, this_, url)};\n+            return IActiveRequestPtr(New<TActiveRequest>(request, response, this_, url));\n         }));\n     }\n \n@@ -297,34 +300,44 @@ class TClient\n                 .ThrowOnError();\n         }\n \n+        if (Config_->IgnoreContinueResponses) {\n+            while (response->GetStatusCode() == EStatusCode::Continue) {\n+                response->Reset();\n+            }\n+        }\n+\n         // Waits for response headers internally.\n         auto redirectUrl = response->TryGetRedirectUrl();\n         if (redirectUrl && redirectCount < Config_->MaxRedirectCount) {\n             return DoRequest(method, *redirectUrl, body, headers, redirectCount + 1);\n         }\n \n-        return IResponsePtr(response);\n+        return response;\n     }\n };\n \n ////////////////////////////////////////////////////////////////////////////////\n \n IClientPtr CreateClient(\n-    const TClientConfigPtr& config,\n-    const IDialerPtr& dialer,\n-    const IInvokerPtr& invoker)\n+    TClientConfigPtr config,\n+    IDialerPtr dialer,\n+    IInvokerPtr invoker)\n {\n-    return New<TClient>(config, dialer, invoker);\n+    return New<TClient>(\n+        std::move(config),\n+        std::move(dialer),\n+        std::move(invoker));\n }\n \n IClientPtr CreateClient(\n-    const TClientConfigPtr& config,\n-    const IPollerPtr& poller)\n+    TClientConfigPtr config,\n+    IPollerPtr poller)\n {\n+    auto invoker = poller->GetInvoker();\n     return CreateClient(\n-        config,\n-        CreateDialer(New<TDialerConfig>(), poller, HttpLogger()),\n-        poller->GetInvoker());\n+        std::move(config),\n+        CreateDialer(New<TDialerConfig>(), std::move(poller), HttpLogger()),\n+        std::move(invoker));\n }\n \n ////////////////////////////////////////////////////////////////////////////////\ndiff --git a/yt/yt/core/http/client.h b/yt/yt/core/http/client.h\nindex a75df31142e2..274576263321 100644\n--- a/yt/yt/core/http/client.h\n+++ b/yt/yt/core/http/client.h\n@@ -78,12 +78,12 @@ DEFINE_REFCOUNTED_TYPE(IClient)\n ////////////////////////////////////////////////////////////////////////////////\n \n IClientPtr CreateClient(\n-    const TClientConfigPtr& config,\n-    const NNet::IDialerPtr& dialer,\n-    const IInvokerPtr& invoker);\n+    TClientConfigPtr config,\n+    NNet::IDialerPtr dialer,\n+    IInvokerPtr invoker);\n IClientPtr CreateClient(\n-    const TClientConfigPtr& config,\n-    const NConcurrency::IPollerPtr& poller);\n+    TClientConfigPtr config,\n+    NConcurrency::IPollerPtr poller);\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/core/http/config.cpp b/yt/yt/core/http/config.cpp\nindex c43ea1fe9db3..2fb5b909aa21 100644\n--- a/yt/yt/core/http/config.cpp\n+++ b/yt/yt/core/http/config.cpp\n@@ -14,6 +14,9 @@ void THttpIOConfig::Register(TRegistrar registrar)\n     registrar.Parameter(\"max_redirect_count\", &TThis::MaxRedirectCount)\n         .Default(0);\n \n+    registrar.Parameter(\"ignore_continue_responses\", &TThis::IgnoreContinueResponses)\n+        .Default(false);\n+\n     registrar.Parameter(\"connection_idle_timeout\", &TThis::ConnectionIdleTimeout)\n         .Default(TDuration::Minutes(5));\n \ndiff --git a/yt/yt/core/http/config.h b/yt/yt/core/http/config.h\nindex ba3826e2260c..41ca0a1cda63 100644\n--- a/yt/yt/core/http/config.h\n+++ b/yt/yt/core/http/config.h\n@@ -18,6 +18,8 @@ class THttpIOConfig\n \n     int MaxRedirectCount;\n \n+    bool IgnoreContinueResponses;\n+\n     TDuration ConnectionIdleTimeout;\n \n     TDuration HeaderReadTimeout;\ndiff --git a/yt/yt/core/http/connection_pool.cpp b/yt/yt/core/http/connection_pool.cpp\nindex a14891164c1f..24dc08d5b239 100644\n--- a/yt/yt/core/http/connection_pool.cpp\n+++ b/yt/yt/core/http/connection_pool.cpp\n@@ -1,5 +1,7 @@\n #include \"connection_pool.h\"\n \n+#include \"private.h\"\n+\n #include <yt/yt/core/concurrency/periodic_executor.h>\n \n #include <yt/yt/core/net/connection.h>\n@@ -11,6 +13,10 @@ using namespace NConcurrency;\n \n ////////////////////////////////////////////////////////////////////////////////\n \n+static constexpr auto& Logger = HttpLogger;\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n TDuration TIdleConnection::GetIdleTime() const\n {\n     return TInstant::Now() - InsertionTime;\n@@ -56,7 +62,11 @@ TFuture<IConnectionPtr> TConnectionPool::Connect(\n \n         while (auto item = Connections_.Extract(address)) {\n             if (item->GetIdleTime() < Config_->ConnectionIdleTimeout && item->IsOK()) {\n-                return MakeFuture<IConnectionPtr>(std::move(item->Connection));\n+                auto&& connection = item->Connection;\n+                YT_LOG_DEBUG(\"Connection is extracted from cache (Address: %v, ConnectionId: %v)\",\n+                    address,\n+                    connection->GetId());\n+                return MakeFuture<IConnectionPtr>(std::move(connection));\n             }\n         }\n     }\n@@ -66,21 +76,28 @@ TFuture<IConnectionPtr> TConnectionPool::Connect(\n \n void TConnectionPool::Release(const IConnectionPtr& connection)\n {\n+    YT_LOG_DEBUG(\"Connection is put to cache (Address: %v, ConnectionId: %v)\",\n+        connection->GetRemoteAddress(),\n+        connection->GetId());\n+\n     auto guard = Guard(SpinLock_);\n-    Connections_.Insert(connection->RemoteAddress(), {connection, TInstant::Now()});\n+    Connections_.Insert(connection->GetRemoteAddress(), {connection, TInstant::Now()});\n }\n \n void TConnectionPool::DropExpiredConnections()\n {\n     auto guard = Guard(SpinLock_);\n \n-    TMultiLruCache<TNetworkAddress, TIdleConnection> validConnections(\n-        Config_->MaxIdleConnections);\n+    decltype(Connections_) validConnections(Config_->MaxIdleConnections);\n \n     while (Connections_.GetSize() > 0) {\n         auto idleConnection = Connections_.Pop();\n         if (idleConnection.GetIdleTime() < Config_->ConnectionIdleTimeout && idleConnection.IsOK()) {\n-            validConnections.Insert(idleConnection.Connection->RemoteAddress(), idleConnection);\n+            validConnections.Insert(idleConnection.Connection->GetRemoteAddress(), idleConnection);\n+        } else {\n+            YT_LOG_DEBUG(\"Connection expired from cache (Address: %v, ConnectionId: %v)\",\n+                idleConnection.Connection->GetRemoteAddress(),\n+                idleConnection.Connection->GetId());\n         }\n     }\n \ndiff --git a/yt/yt/core/http/connection_reuse_helpers.h b/yt/yt/core/http/connection_reuse_helpers.h\nindex bb3762bb6d61..5d7039ebad8b 100644\n--- a/yt/yt/core/http/connection_reuse_helpers.h\n+++ b/yt/yt/core/http/connection_reuse_helpers.h\n@@ -1,6 +1,6 @@\n #pragma once\n \n-#include \"public.h\"\n+#include \"private.h\"\n \n #include <yt/yt/core/net/public.h>\n \n@@ -9,7 +9,7 @@ namespace NYT::NHttp::NDetail {\n ////////////////////////////////////////////////////////////////////////////////\n \n //! Responsible for returning the connection to the owning pool\n-//! if it could be reused\n+//! if it could be reused.\n struct TReusableConnectionState final\n {\n     std::atomic<bool> Reusable = true;\n@@ -20,10 +20,12 @@ struct TReusableConnectionState final\n     ~TReusableConnectionState();\n };\n \n-using TReusableConnectionStatePtr = TIntrusivePtr<TReusableConnectionState>;\n+DEFINE_REFCOUNTED_TYPE(TReusableConnectionState)\n+\n+////////////////////////////////////////////////////////////////////////////////\n \n //! Reports to the shared state whether the connection could be reused\n-//! (by calling T::IsSafeToReuse() in the destructor)\n+//! (by calling T::IsSafeToReuse() in the destructor).\n template <class T>\n class TConnectionReuseWrapper\n     : public T\ndiff --git a/yt/yt/core/http/helpers.cpp b/yt/yt/core/http/helpers.cpp\nindex 96a9c6724501..e5bead9511b7 100644\n--- a/yt/yt/core/http/helpers.cpp\n+++ b/yt/yt/core/http/helpers.cpp\n@@ -413,7 +413,7 @@ bool TryParseTraceParent(const TString& traceParent, NTracing::TSpanContext& spa\n     // Now we have exactly three parts: traceId-spanId-options.\n \n     // Parse trace context.\n-    if (!TGuid::FromStringHex32(parts[0], &spanContext.TraceId)) {\n+    if (!NTracing::TTraceId::FromStringHex32(parts[0], &spanContext.TraceId)) {\n         return false;\n     }\n \ndiff --git a/yt/yt/core/http/http.h b/yt/yt/core/http/http.h\nindex afd6c061f61f..0de762c235e4 100644\n--- a/yt/yt/core/http/http.h\n+++ b/yt/yt/core/http/http.h\n@@ -233,8 +233,9 @@ struct IRequest\n \n     virtual const NNet::TNetworkAddress& GetRemoteAddress() const = 0;\n \n-    virtual TGuid GetConnectionId() const = 0;\n-    virtual TGuid GetRequestId() const = 0;\n+    virtual TConnectionId GetConnectionId() const = 0;\n+    virtual TRequestId GetRequestId() const = 0;\n+\n     virtual i64 GetReadByteCount() const = 0;\n     virtual TInstant GetStartTime() const = 0;\n \ndiff --git a/yt/yt/core/http/mock/http.h b/yt/yt/core/http/mock/http.h\nindex 27e62e561fb1..84ee0356ea84 100644\n--- a/yt/yt/core/http/mock/http.h\n+++ b/yt/yt/core/http/mock/http.h\n@@ -21,8 +21,8 @@ class TRequestMock\n     MOCK_METHOD(const TUrlRef&, GetUrl, (), (override));\n     MOCK_METHOD(const THeadersPtr&, GetHeaders, (), (override));\n     MOCK_METHOD(const NNet::TNetworkAddress&, GetRemoteAddress, (), (const, override));\n-    MOCK_METHOD(TGuid, GetConnectionId, (), (const, override));\n-    MOCK_METHOD(TGuid, GetRequestId, (), (const, override));\n+    MOCK_METHOD(TConnectionId, GetConnectionId, (), (const, override));\n+    MOCK_METHOD(TRequestId, GetRequestId, (), (const, override));\n     MOCK_METHOD(i64, GetReadByteCount, (), (const, override));\n     MOCK_METHOD(TInstant, GetStartTime, (), (const, override));\n     MOCK_METHOD(int, GetPort, (), (const, override));\ndiff --git a/yt/yt/core/http/private.h b/yt/yt/core/http/private.h\nindex 691d022bbd9d..a1563033503d 100644\n--- a/yt/yt/core/http/private.h\n+++ b/yt/yt/core/http/private.h\n@@ -20,4 +20,12 @@ DECLARE_REFCOUNTED_CLASS(THttpOutput)\n \n ////////////////////////////////////////////////////////////////////////////////\n \n+namespace NDetail {\n+\n+DECLARE_REFCOUNTED_STRUCT(TReusableConnectionState)\n+\n+} // namespace NDetail\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n } // namespace NYT::NHttp\ndiff --git a/yt/yt/core/http/public.h b/yt/yt/core/http/public.h\nindex 74f0e8d29d62..b904f89675c2 100644\n--- a/yt/yt/core/http/public.h\n+++ b/yt/yt/core/http/public.h\n@@ -33,6 +33,8 @@ DECLARE_REFCOUNTED_CLASS(TSharedRefOutputStream)\n ////////////////////////////////////////////////////////////////////////////////\n \n using TContentEncoding = TString;\n+using TConnectionId = TGuid;\n+using TRequestId = TGuid;\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/core/http/server.cpp b/yt/yt/core/http/server.cpp\nindex 746480330719..ae7df4b62040 100644\n--- a/yt/yt/core/http/server.cpp\n+++ b/yt/yt/core/http/server.cpp\n@@ -165,20 +165,19 @@ class TServer\n             ConnectionsDropped_.Increment();\n             ActiveConnections_--;\n             YT_LOG_WARNING(\"Server is over max active connection limit (RemoteAddress: %v)\",\n-                connection->RemoteAddress());\n+                connection->GetRemoteAddress());\n             return;\n         }\n         ConnectionsActive_.Update(count);\n         ConnectionsAccepted_.Increment();\n \n-        auto connectionId = TGuid::Create();\n         YT_LOG_DEBUG(\"Connection accepted (ConnectionId: %v, RemoteAddress: %v, LocalAddress: %v)\",\n-            connectionId,\n-            connection->RemoteAddress(),\n-            connection->LocalAddress());\n+            connection->GetId(),\n+            connection->GetRemoteAddress(),\n+            connection->GetLocalAddress());\n \n         Invoker_->Invoke(\n-            BIND(&TServer::HandleConnection, MakeStrong(this), std::move(connection), connectionId));\n+            BIND(&TServer::HandleConnection, MakeStrong(this), std::move(connection)));\n     }\n \n     bool HandleRequest(const THttpInputPtr& request, const THttpOutputPtr& response)\n@@ -271,10 +270,10 @@ class TServer\n         return true;\n     }\n \n-    void HandleConnection(const IConnectionPtr& connection, TGuid connectionId)\n+    void HandleConnection(const IConnectionPtr& connection)\n     {\n         try {\n-            connection->SubscribePeerDisconnect(BIND([config = Config_, canceler = GetCurrentFiberCanceler(), connectionId = connectionId] {\n+            connection->SubscribePeerDisconnect(BIND([config = Config_, canceler = GetCurrentFiberCanceler(), connectionId = connection->GetId()] {\n                 YT_LOG_DEBUG(\"Client closed TCP socket (ConnectionId: %v)\", connectionId);\n \n                 if (config->CancelFiberOnConnectionClose.value_or(false)) {\n@@ -291,17 +290,17 @@ class TServer\n                 connection->SetNoDelay();\n             }\n \n-            DoHandleConnection(connection, connectionId);\n+            DoHandleConnection(connection);\n         } catch (const std::exception& ex) {\n-            YT_LOG_ERROR(ex, \"Unhandled exception (ConnectionId: %v)\", connectionId);\n+            YT_LOG_ERROR(ex, \"Unhandled exception (ConnectionId: %v)\", connection->GetId());\n         }\n     }\n \n-    void DoHandleConnection(const IConnectionPtr& connection, TGuid connectionId)\n+    void DoHandleConnection(const IConnectionPtr& connection)\n     {\n         auto request = New<THttpInput>(\n             connection,\n-            connection->RemoteAddress(),\n+            connection->GetRemoteAddress(),\n             GetCurrentInvoker(),\n             EMessageType::Request,\n             Config_);\n@@ -317,11 +316,8 @@ class TServer\n             EMessageType::Response,\n             Config_);\n \n-        request->SetConnectionId(connectionId);\n-        response->SetConnectionId(connectionId);\n-\n         while (true) {\n-            auto requestId = TGuid::Create();\n+            auto requestId = TRequestId::Create();\n             request->SetRequestId(requestId);\n             response->SetRequestId(requestId);\n \n@@ -332,7 +328,7 @@ class TServer\n \n             auto logDrop = [&] (auto reason) {\n                 YT_LOG_DEBUG(\"Dropping HTTP connection (ConnectionId: %v, Reason: %v)\",\n-                    connectionId,\n+                    connection->GetId(),\n                     reason);\n             };\n \n@@ -381,10 +377,10 @@ class TServer\n         auto connectionResult = WaitFor(connection->Close());\n         if (connectionResult.IsOK()) {\n             YT_LOG_DEBUG(\"HTTP connection closed (ConnectionId: %v)\",\n-                connectionId);\n+                connection->GetId());\n         } else {\n             YT_LOG_DEBUG(connectionResult, \"Error closing HTTP connection (ConnectionId: %v)\",\n-                connectionId);\n+                connection->GetId());\n         }\n     }\n };\ndiff --git a/yt/yt/core/http/stream.cpp b/yt/yt/core/http/stream.cpp\nindex db16ffdf53aa..632e035a4c9e 100644\n--- a/yt/yt/core/http/stream.cpp\n+++ b/yt/yt/core/http/stream.cpp\n@@ -295,22 +295,17 @@ const TNetworkAddress& THttpInput::GetRemoteAddress() const\n     return RemoteAddress_;\n }\n \n-TGuid THttpInput::GetConnectionId() const\n+TConnectionId THttpInput::GetConnectionId() const\n {\n-    return ConnectionId_;\n+    return Connection_->GetId();\n }\n \n-void THttpInput::SetConnectionId(TGuid connectionId)\n-{\n-    ConnectionId_ = connectionId;\n-}\n-\n-TGuid THttpInput::GetRequestId() const\n+TRequestId THttpInput::GetRequestId() const\n {\n     return RequestId_;\n }\n \n-void THttpInput::SetRequestId(TGuid requestId)\n+void THttpInput::SetRequestId(TRequestId requestId)\n {\n     RequestId_ = requestId;\n }\n@@ -633,12 +628,7 @@ void THttpOutput::Reset()\n     Trailers_.Reset();\n }\n \n-void THttpOutput::SetConnectionId(TGuid connectionId)\n-{\n-    ConnectionId_ = connectionId;\n-}\n-\n-void THttpOutput::SetRequestId(TGuid requestId)\n+void THttpOutput::SetRequestId(TRequestId requestId)\n {\n     RequestId_ = requestId;\n }\ndiff --git a/yt/yt/core/http/stream.h b/yt/yt/core/http/stream.h\nindex b01da702f16b..9efcea7f7a05 100644\n--- a/yt/yt/core/http/stream.h\n+++ b/yt/yt/core/http/stream.h\n@@ -105,11 +105,10 @@ class THttpInput\n \n     const NNet::TNetworkAddress& GetRemoteAddress() const override;\n \n-    TGuid GetConnectionId() const override;\n-    void SetConnectionId(TGuid connectionId);\n+    TConnectionId GetConnectionId() const override;\n \n-    TGuid GetRequestId() const override;\n-    void SetRequestId(TGuid requestId);\n+    TRequestId GetRequestId() const override;\n+    void SetRequestId(TRequestId requestId);\n \n     i64 GetReadByteCount() const override;\n \n@@ -149,8 +148,7 @@ class THttpInput\n     THeadersPtr Headers_;\n \n     // Debug.\n-    TGuid ConnectionId_;\n-    TGuid RequestId_;\n+    TRequestId RequestId_;\n     i64 StartByteCount_ = 0;\n     NNet::TConnectionStatistics StartStatistics_;\n     TInstant LastProgressLogTime_;\n@@ -215,8 +213,7 @@ class THttpOutput\n     bool IsSafeToReuse() const;\n     void Reset();\n \n-    void SetConnectionId(TGuid connectionId);\n-    void SetRequestId(TGuid requestId);\n+    void SetRequestId(TRequestId requestId);\n \n     i64 GetWriteByteCount() const override;\n \n@@ -228,8 +225,7 @@ class THttpOutput\n     TClosure OnWriteFinish_;\n \n     //! Debugging.\n-    TGuid ConnectionId_;\n-    TGuid RequestId_;\n+    TRequestId RequestId_;\n     i64 StartByteCount_ = 0;\n     NNet::TConnectionStatistics StartStatistics_;\n     bool HeadersLogged_ = false;\ndiff --git a/yt/yt/core/misc/arithmetic_formula.cpp b/yt/yt/core/misc/arithmetic_formula.cpp\nindex 8fe147ef65af..143e3de8f609 100644\n--- a/yt/yt/core/misc/arithmetic_formula.cpp\n+++ b/yt/yt/core/misc/arithmetic_formula.cpp\n@@ -42,7 +42,7 @@ bool IsSymbolAllowedInName(char c, EEvaluationContext context, bool isFirst)\n     return false;\n }\n \n-void ValidateFormulaVariable(const TString& variable, EEvaluationContext context)\n+void ValidateFormulaVariable(const std::string& variable, EEvaluationContext context)\n {\n     if (variable.empty()) {\n         THROW_ERROR_EXCEPTION(\"Variable should not be empty\");\n@@ -67,12 +67,12 @@ void ValidateFormulaVariable(const TString& variable, EEvaluationContext context\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-void ValidateArithmeticFormulaVariable(const TString& variable)\n+void ValidateArithmeticFormulaVariable(const std::string& variable)\n {\n     ValidateFormulaVariable(variable, EEvaluationContext::Arithmetic);\n }\n \n-void ValidateBooleanFormulaVariable(const TString& variable)\n+void ValidateBooleanFormulaVariable(const std::string& variable)\n {\n     ValidateFormulaVariable(variable, EEvaluationContext::Boolean);\n }\n@@ -81,12 +81,12 @@ void ValidateBooleanFormulaVariable(const TString& variable)\n \n namespace {\n \n-void ThrowError(const TString& formula, int position, const TString& message, EEvaluationContext evaluationContext)\n+void ThrowError(const std::string& formula, int position, const std::string& message, EEvaluationContext evaluationContext)\n {\n     const static int maxContextSize = 30;\n \n     int contextStart = std::max(0, position - maxContextSize / 2);\n-    TString context = formula.substr(contextStart, maxContextSize);\n+    std::string context = formula.substr(contextStart, maxContextSize);\n     int contextPosition = std::min(position, maxContextSize / 2);\n \n     TStringBuilder builder;\n@@ -154,7 +154,7 @@ struct TFormulaToken\n {\n     EFormulaTokenType Type;\n     int Position;\n-    TString Name;\n+    std::string Name;\n     i64 Number = 0;\n };\n \n@@ -171,11 +171,11 @@ class TGenericFormulaImpl\n     : public TRefCounted\n {\n public:\n-    DEFINE_BYVAL_RO_PROPERTY(TString, Formula);\n+    DEFINE_BYVAL_RO_PROPERTY(std::string, Formula);\n     DEFINE_BYVAL_RO_PROPERTY(size_t, Hash);\n \n public:\n-    TGenericFormulaImpl(const TString& formula, size_t hash, std::vector<TFormulaToken> parsedFormula);\n+    TGenericFormulaImpl(const std::string& formula, size_t hash, std::vector<TFormulaToken> parsedFormula);\n \n     bool operator==(const TGenericFormulaImpl& other) const;\n \n@@ -183,31 +183,31 @@ class TGenericFormulaImpl\n \n     int Size() const;\n \n-    i64 Eval(const THashMap<TString, i64>& values, EEvaluationContext context) const;\n+    i64 Eval(const THashMap<std::string, i64>& values, EEvaluationContext context) const;\n \n-    THashSet<TString> GetVariables() const;\n+    THashSet<std::string> GetVariables() const;\n \n private:\n     std::vector<TFormulaToken> ParsedFormula_;\n \n-    static std::vector<TFormulaToken> Tokenize(const TString& formula, EEvaluationContext context);\n+    static std::vector<TFormulaToken> Tokenize(const std::string& formula, EEvaluationContext context);\n     static std::vector<TFormulaToken> Parse(\n-        const TString& formula,\n+        const std::string& formula,\n         const std::vector<TFormulaToken>& tokens,\n         EEvaluationContext context);\n     static size_t CalculateHash(const std::vector<TFormulaToken>& tokens);\n     static void CheckTypeConsistency(\n-        const TString& formula,\n+        const std::string& formula,\n         const std::vector<TFormulaToken>& tokens,\n         EEvaluationContext context);\n \n-    friend TIntrusivePtr<TGenericFormulaImpl> MakeGenericFormulaImpl(const TString& formula, EEvaluationContext context);\n+    friend TIntrusivePtr<TGenericFormulaImpl> MakeGenericFormulaImpl(const std::string& formula, EEvaluationContext context);\n };\n \n ////////////////////////////////////////////////////////////////////////////////\n \n TGenericFormulaImpl::TGenericFormulaImpl(\n-    const TString& formula,\n+    const std::string& formula,\n     size_t hash,\n     std::vector<TFormulaToken> parsedFormula)\n     : Formula_(formula)\n@@ -234,9 +234,9 @@ int TGenericFormulaImpl::Size() const\n     return ParsedFormula_.size();\n }\n \n-i64 TGenericFormulaImpl::Eval(const THashMap<TString, i64>& values, EEvaluationContext context) const\n+i64 TGenericFormulaImpl::Eval(const THashMap<std::string, i64>& values, EEvaluationContext context) const\n {\n-    auto variableValue = [&] (const TString& var) -> i64 {\n+    auto variableValue = [&] (const std::string& var) -> i64 {\n         auto iter = values.find(var);\n         if (iter == values.end()) {\n             if (context == EEvaluationContext::Boolean) {\n@@ -389,9 +389,9 @@ i64 TGenericFormulaImpl::Eval(const THashMap<TString, i64>& values, EEvaluationC\n #undef APPLY_BINARY_OP\n }\n \n-THashSet<TString> TGenericFormulaImpl::GetVariables() const\n+THashSet<std::string> TGenericFormulaImpl::GetVariables() const\n {\n-    THashSet<TString> variables;\n+    THashSet<std::string> variables;\n     for (const auto& token : ParsedFormula_) {\n         if (token.Type == EFormulaTokenType::Variable) {\n             variables.insert(token.Name);\n@@ -400,12 +400,12 @@ THashSet<TString> TGenericFormulaImpl::GetVariables() const\n     return variables;\n }\n \n-std::vector<TFormulaToken> TGenericFormulaImpl::Tokenize(const TString& formula, EEvaluationContext context)\n+std::vector<TFormulaToken> TGenericFormulaImpl::Tokenize(const std::string& formula, EEvaluationContext context)\n {\n     std::vector<TFormulaToken> result;\n     size_t pos = 0;\n \n-    auto throwError = [&] (int position, const TString& message) {\n+    auto throwError = [&] (int position, const std::string& message) {\n         ThrowError(formula, position, message, context);\n     };\n \n@@ -526,7 +526,7 @@ std::vector<TFormulaToken> TGenericFormulaImpl::Tokenize(const TString& formula,\n     };\n \n     auto extractVariable = [&] {\n-        TString name;\n+        std::string name;\n         while (pos < formula.size() && IsSymbolAllowedInName(formula[pos], context, /*isFirst*/ name.empty())) {\n             name += formula[pos++];\n         }\n@@ -595,7 +595,7 @@ std::vector<TFormulaToken> TGenericFormulaImpl::Tokenize(const TString& formula,\n }\n \n std::vector<TFormulaToken> TGenericFormulaImpl::Parse(\n-    const TString& formula,\n+    const std::string& formula,\n     const std::vector<TFormulaToken>& tokens,\n     EEvaluationContext context)\n {\n@@ -607,7 +607,7 @@ std::vector<TFormulaToken> TGenericFormulaImpl::Parse(\n         return result;\n     }\n \n-    auto throwError = [&] (int position, const TString& message) {\n+    auto throwError = [&] (int position, const std::string& message) {\n         ThrowError(formula, position, message, context);\n     };\n \n@@ -712,7 +712,7 @@ size_t TGenericFormulaImpl::CalculateHash(const std::vector<TFormulaToken>& toke\n }\n \n void TGenericFormulaImpl::CheckTypeConsistency(\n-    const TString& formula,\n+    const std::string& formula,\n     const std::vector<TFormulaToken>& tokens,\n     EEvaluationContext context)\n {\n@@ -775,7 +775,7 @@ void TGenericFormulaImpl::CheckTypeConsistency(\n     }\n }\n \n-TIntrusivePtr<TGenericFormulaImpl> MakeGenericFormulaImpl(const TString& formula, EEvaluationContext context)\n+TIntrusivePtr<TGenericFormulaImpl> MakeGenericFormulaImpl(const std::string& formula, EEvaluationContext context)\n {\n     auto tokens = TGenericFormulaImpl::Tokenize(formula, context);\n     auto parsed = TGenericFormulaImpl::Parse(formula, tokens, context);\n@@ -786,7 +786,7 @@ TIntrusivePtr<TGenericFormulaImpl> MakeGenericFormulaImpl(const TString& formula\n ////////////////////////////////////////////////////////////////////////////////\n \n TArithmeticFormula::TArithmeticFormula()\n-    : Impl_(MakeGenericFormulaImpl(TString(), EEvaluationContext::Arithmetic))\n+    : Impl_(MakeGenericFormulaImpl(std::string(), EEvaluationContext::Arithmetic))\n { }\n \n TArithmeticFormula::TArithmeticFormula(TIntrusivePtr<TGenericFormulaImpl> impl)\n@@ -819,22 +819,22 @@ size_t TArithmeticFormula::GetHash() const\n     return Impl_->GetHash();\n }\n \n-TString TArithmeticFormula::GetFormula() const\n+std::string TArithmeticFormula::GetFormula() const\n {\n     return Impl_->GetFormula();\n }\n \n-i64 TArithmeticFormula::Eval(const THashMap<TString, i64>& values) const\n+i64 TArithmeticFormula::Eval(const THashMap<std::string, i64>& values) const\n {\n     return Impl_->Eval(values, EEvaluationContext::Arithmetic);\n }\n \n-THashSet<TString> TArithmeticFormula::GetVariables() const\n+THashSet<std::string> TArithmeticFormula::GetVariables() const\n {\n     return Impl_->GetVariables();\n }\n \n-TArithmeticFormula MakeArithmeticFormula(const TString& formula)\n+TArithmeticFormula MakeArithmeticFormula(const std::string& formula)\n {\n     auto impl = MakeGenericFormulaImpl(formula, EEvaluationContext::Arithmetic);\n     return TArithmeticFormula(std::move(impl));\n@@ -860,13 +860,13 @@ void TArithmeticFormula::Save(TStreamSaveContext& context) const\n void TArithmeticFormula::Load(TStreamLoadContext& context)\n {\n     using NYT::Load;\n-    auto formula = Load<TString>(context);\n+    auto formula = Load<std::string>(context);\n     Impl_ = MakeGenericFormulaImpl(formula, EEvaluationContext::Arithmetic);\n }\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-TBooleanFormulaTags::TBooleanFormulaTags(THashSet<TString> tags)\n+TBooleanFormulaTags::TBooleanFormulaTags(THashSet<std::string> tags)\n     : Tags_(std::move(tags))\n {\n     for (const auto& key: Tags_) {\n@@ -874,7 +874,7 @@ TBooleanFormulaTags::TBooleanFormulaTags(THashSet<TString> tags)\n     }\n }\n \n-const THashSet<TString>& TBooleanFormulaTags::GetSourceTags() const\n+const THashSet<std::string>& TBooleanFormulaTags::GetSourceTags() const\n {\n     return Tags_;\n }\n@@ -888,7 +888,7 @@ void TBooleanFormulaTags::Save(TStreamSaveContext& context) const\n void TBooleanFormulaTags::Load(TStreamLoadContext& context)\n {\n     using NYT::Load;\n-    *this = TBooleanFormulaTags(Load<THashSet<TString>>(context));\n+    *this = TBooleanFormulaTags(Load<THashSet<std::string>>(context));\n }\n \n bool TBooleanFormulaTags::operator==(const TBooleanFormulaTags& other) const\n@@ -904,7 +904,7 @@ void Serialize(const TBooleanFormulaTags& tags, NYson::IYsonConsumer* consumer)\n \n void Deserialize(TBooleanFormulaTags& tags, NYTree::INodePtr node)\n {\n-    tags = TBooleanFormulaTags(ConvertTo<THashSet<TString>>(node));\n+    tags = TBooleanFormulaTags(ConvertTo<THashSet<std::string>>(node));\n }\n \n void FormatValue(TStringBuilderBase* builder, const TBooleanFormulaTags& tags, TStringBuf /*spec*/)\n@@ -915,7 +915,7 @@ void FormatValue(TStringBuilderBase* builder, const TBooleanFormulaTags& tags, T\n ////////////////////////////////////////////////////////////////////////////////\n \n TBooleanFormula::TBooleanFormula()\n-    : Impl_(MakeGenericFormulaImpl(TString(), EEvaluationContext::Boolean))\n+    : Impl_(MakeGenericFormulaImpl(std::string(), EEvaluationContext::Boolean))\n { }\n \n TBooleanFormula::TBooleanFormula(TIntrusivePtr<TGenericFormulaImpl> impl)\n@@ -948,23 +948,23 @@ size_t TBooleanFormula::GetHash() const\n     return Impl_->GetHash();\n }\n \n-TString TBooleanFormula::GetFormula() const\n+std::string TBooleanFormula::GetFormula() const\n {\n     return Impl_->GetFormula();\n }\n \n-bool TBooleanFormula::IsSatisfiedBy(const std::vector<TString>& value) const\n+bool TBooleanFormula::IsSatisfiedBy(const std::vector<std::string>& value) const\n {\n-    THashMap<TString, i64> values;\n+    THashMap<std::string, i64> values;\n     for (const auto& key: value) {\n         values[key] = 1;\n     }\n     return Impl_->Eval(values, EEvaluationContext::Boolean);\n }\n \n-bool TBooleanFormula::IsSatisfiedBy(const THashSet<TString>& value) const\n+bool TBooleanFormula::IsSatisfiedBy(const THashSet<std::string>& value) const\n {\n-    return IsSatisfiedBy(std::vector<TString>(value.begin(), value.end()));\n+    return IsSatisfiedBy(std::vector<std::string>(value.begin(), value.end()));\n }\n \n bool TBooleanFormula::IsSatisfiedBy(const TBooleanFormulaTags& tags) const\n@@ -972,7 +972,7 @@ bool TBooleanFormula::IsSatisfiedBy(const TBooleanFormulaTags& tags) const\n     return Impl_->Eval(tags.PreparedTags_, EEvaluationContext::Boolean);\n }\n \n-TBooleanFormula MakeBooleanFormula(const TString& formula)\n+TBooleanFormula MakeBooleanFormula(const std::string& formula)\n {\n     auto impl = MakeGenericFormulaImpl(formula, EEvaluationContext::Boolean);\n     return TBooleanFormula(std::move(impl));\n@@ -1020,7 +1020,7 @@ void Deserialize(TBooleanFormula& booleanFormula, TYsonPullParserCursor* cursor)\n {\n     MaybeSkipAttributes(cursor);\n     EnsureYsonToken(\"TBooleanFormula\", *cursor, EYsonItemType::StringValue);\n-    booleanFormula = MakeBooleanFormula(ExtractTo<TString>(cursor));\n+    booleanFormula = MakeBooleanFormula(ExtractTo<std::string>(cursor));\n }\n \n void TBooleanFormula::Save(TStreamSaveContext& context) const\n@@ -1032,7 +1032,7 @@ void TBooleanFormula::Save(TStreamSaveContext& context) const\n void TBooleanFormula::Load(TStreamLoadContext& context)\n {\n     using NYT::Load;\n-    auto formula = Load<TString>(context);\n+    auto formula = Load<std::string>(context);\n     Impl_ = MakeGenericFormulaImpl(formula, EEvaluationContext::Boolean);\n }\n \n@@ -1070,7 +1070,7 @@ size_t TTimeFormula::GetHash() const\n     return Formula_.GetHash();\n }\n \n-TString TTimeFormula::GetFormula() const\n+std::string TTimeFormula::GetFormula() const\n {\n     return Formula_.GetFormula();\n }\n@@ -1088,9 +1088,9 @@ TTimeFormula::TTimeFormula(TArithmeticFormula&& arithmeticFormula)\n     : Formula_(std::move(arithmeticFormula))\n { }\n \n-TTimeFormula MakeTimeFormula(const TString& formula)\n+TTimeFormula MakeTimeFormula(const std::string& formula)\n {\n-    const static THashSet<TString> allowedVariables{\"minutes\", \"hours\"};\n+    const static THashSet<std::string> allowedVariables{\"minutes\", \"hours\"};\n \n     auto arithmeticFormula = MakeArithmeticFormula(formula);\n \n@@ -1119,7 +1119,7 @@ void Deserialize(TTimeFormula& timeFormula, TYsonPullParserCursor* cursor)\n {\n     MaybeSkipAttributes(cursor);\n     EnsureYsonToken(\"TTimeFormula\", *cursor, EYsonItemType::StringValue);\n-    timeFormula = MakeTimeFormula(ExtractTo<TString>(cursor));\n+    timeFormula = MakeTimeFormula(ExtractTo<std::string>(cursor));\n }\n \n void TTimeFormula::Save(TStreamSaveContext& context) const\ndiff --git a/yt/yt/core/misc/arithmetic_formula.h b/yt/yt/core/misc/arithmetic_formula.h\nindex ddc15d9deff8..fdb2bcfc001d 100644\n--- a/yt/yt/core/misc/arithmetic_formula.h\n+++ b/yt/yt/core/misc/arithmetic_formula.h\n@@ -12,10 +12,10 @@ namespace NYT {\n ////////////////////////////////////////////////////////////////////////////////\n \n //! Validates that a string is a correct arithmetic formula variable name.\n-void ValidateArithmeticFormulaVariable(const TString& variable);\n+void ValidateArithmeticFormulaVariable(const std::string& variable);\n \n //! Validates that a string is a correct boolean formula variable name.\n-void ValidateBooleanFormulaVariable(const TString& variable);\n+void ValidateBooleanFormulaVariable(const std::string& variable);\n \n ////////////////////////////////////////////////////////////////////////////////\n \n@@ -47,13 +47,13 @@ class TArithmeticFormula\n     size_t GetHash() const;\n \n     //! Returns a human-readable representation of the formula.\n-    TString GetFormula() const;\n+    std::string GetFormula() const;\n \n     //! Evaluate the formula given values of variables.\n-    i64 Eval(const THashMap<TString, i64>& values) const;\n+    i64 Eval(const THashMap<std::string, i64>& values) const;\n \n     //! Returns the list of variables used in the formula.\n-    THashSet<TString> GetVariables() const;\n+    THashSet<std::string> GetVariables() const;\n \n     void Save(TStreamSaveContext& context) const;\n     void Load(TStreamLoadContext& context);\n@@ -63,11 +63,11 @@ class TArithmeticFormula\n \n     explicit TArithmeticFormula(TIntrusivePtr<TGenericFormulaImpl> impl);\n \n-    friend TArithmeticFormula MakeArithmeticFormula(const TString& formula);\n+    friend TArithmeticFormula MakeArithmeticFormula(const std::string& formula);\n };\n \n //! Parse string and return arithmetic formula.\n-TArithmeticFormula MakeArithmeticFormula(const TString& formula);\n+TArithmeticFormula MakeArithmeticFormula(const std::string& formula);\n \n void Serialize(const TArithmeticFormula& arithmeticFormula, NYson::IYsonConsumer* consumer);\n void Deserialize(TArithmeticFormula& arithmeticFormula, NYTree::INodePtr node);\n@@ -78,9 +78,9 @@ class TBooleanFormulaTags\n {\n public:\n     TBooleanFormulaTags() = default;\n-    explicit TBooleanFormulaTags(THashSet<TString> tags);\n+    explicit TBooleanFormulaTags(THashSet<std::string> tags);\n \n-    const THashSet<TString>& GetSourceTags() const;\n+    const THashSet<std::string>& GetSourceTags() const;\n \n     void Save(TStreamSaveContext& context) const;\n     void Load(TStreamLoadContext& context);\n@@ -88,8 +88,8 @@ class TBooleanFormulaTags\n     bool operator==(const TBooleanFormulaTags& other) const;\n \n private:\n-    THashSet<TString> Tags_;\n-    THashMap<TString, i64> PreparedTags_;\n+    THashSet<std::string> Tags_;\n+    THashMap<std::string, i64> PreparedTags_;\n \n     friend class TBooleanFormula;\n };\n@@ -123,11 +123,11 @@ class TBooleanFormula\n     size_t GetHash() const;\n \n     //! Returns a human-readable representation of the formula.\n-    TString GetFormula() const;\n+    std::string GetFormula() const;\n \n     //! Check that a given set of true-variables satisfies the formula.\n-    bool IsSatisfiedBy(const std::vector<TString>& value) const;\n-    bool IsSatisfiedBy(const THashSet<TString>& value) const;\n+    bool IsSatisfiedBy(const std::vector<std::string>& value) const;\n+    bool IsSatisfiedBy(const THashSet<std::string>& value) const;\n     bool IsSatisfiedBy(const TBooleanFormulaTags& tags) const;\n \n     void Save(TStreamSaveContext& context) const;\n@@ -138,11 +138,11 @@ class TBooleanFormula\n \n     explicit TBooleanFormula(TIntrusivePtr<TGenericFormulaImpl> impl);\n \n-    friend TBooleanFormula MakeBooleanFormula(const TString& formula);\n+    friend TBooleanFormula MakeBooleanFormula(const std::string& formula);\n };\n \n //! Parse string and return boolean formula.\n-TBooleanFormula MakeBooleanFormula(const TString& formula);\n+TBooleanFormula MakeBooleanFormula(const std::string& formula);\n \n //! Make conjunction, disjunction and negation of formulas.\n TBooleanFormula operator&(const TBooleanFormula& lhs, const TBooleanFormula& rhs);\n@@ -179,7 +179,7 @@ class TTimeFormula\n     size_t GetHash() const;\n \n     //! Returns a human-readable representation of the formula.\n-    TString GetFormula() const;\n+    std::string GetFormula() const;\n \n     //! Check that given time satisfies the formula.\n     bool IsSatisfiedBy(TInstant time) const;\n@@ -192,11 +192,11 @@ class TTimeFormula\n \n     explicit TTimeFormula(TArithmeticFormula&& arithmeticFormula);\n \n-    friend TTimeFormula MakeTimeFormula(const TString& formula);\n+    friend TTimeFormula MakeTimeFormula(const std::string& formula);\n };\n \n //! Parse string and return time formula.\n-TTimeFormula MakeTimeFormula(const TString& formula);\n+TTimeFormula MakeTimeFormula(const std::string& formula);\n \n void Serialize(const TTimeFormula& timeFormula, NYson::IYsonConsumer* consumer);\n void Deserialize(TTimeFormula& timeFormula, NYTree::INodePtr node);\ndiff --git a/yt/yt/core/misc/atomic_object-inl.h b/yt/yt/core/misc/atomic_object-inl.h\nindex f75722cb3200..1e76cbf5ab28 100644\n--- a/yt/yt/core/misc/atomic_object-inl.h\n+++ b/yt/yt/core/misc/atomic_object-inl.h\n@@ -54,13 +54,21 @@ bool TAtomicObject<T>::CompareExchange(T& expected, const T& desired)\n }\n \n template <class T>\n-template <class F>\n+template <CInvocable<void(T&)> F>\n void TAtomicObject<T>::Transform(const F& func)\n {\n     auto guard = WriterGuard(Spinlock_);\n     func(Object_);\n }\n \n+template <class T>\n+template <class R, CInvocable<R(const T&)> F>\n+R TAtomicObject<T>::Read(const F& func) const\n+{\n+    auto guard = ReaderGuard(Spinlock_);\n+    return func(Object_);\n+}\n+\n template <class T>\n T TAtomicObject<T>::Load() const\n {\ndiff --git a/yt/yt/core/misc/atomic_object.h b/yt/yt/core/misc/atomic_object.h\nindex d75e9cfd7ddf..91ef9278b085 100644\n--- a/yt/yt/core/misc/atomic_object.h\n+++ b/yt/yt/core/misc/atomic_object.h\n@@ -2,6 +2,8 @@\n \n #include <library/cpp/yt/threading/rw_spin_lock.h>\n \n+#include <library/cpp/yt/misc/concepts.h>\n+\n namespace NYT {\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -30,9 +32,13 @@ class TAtomicObject\n     bool CompareExchange(T& expected, const T& desired);\n \n     //! Atomically transforms the value with function #func.\n-    template <class F>\n+    template <CInvocable<void(T&)> F>\n     void Transform(const F& func);\n \n+    //! Atomicaly reads the value with function #func.\n+    template <class R = void, CInvocable<R(const T&)> F>\n+    R Read(const F& func) const;\n+\n     T Load() const;\n \n private:\ndiff --git a/yt/yt/core/misc/error.cpp b/yt/yt/core/misc/error.cpp\nindex c707ddc2e0f7..cc5fcbf7a4e7 100644\n--- a/yt/yt/core/misc/error.cpp\n+++ b/yt/yt/core/misc/error.cpp\n@@ -34,7 +34,7 @@ constexpr TStringBuf OriginalErrorDepthAttribute = \"original_error_depth\";\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-namespace NOrigin {\n+namespace NDetail {\n \n namespace {\n \n@@ -72,8 +72,6 @@ void TryExtractHost(const TOriginAttributes& attributes)\n     attributes.Host = name;\n }\n \n-} // namespace\n-\n ////////////////////////////////////////////////////////////////////////////////\n \n bool HasHost(const TOriginAttributes& attributes) noexcept\n@@ -187,9 +185,11 @@ TOriginAttributes ExtractFromDictionaryOverride(const NYTree::IAttributeDictiona\n     return result;\n }\n \n+} // namespace\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n-void EnableOriginOverrides()\n+void EnableErrorOriginOverrides()\n {\n     static NGlobal::TVariable<std::byte> getExtensionDataOverride{\n         NYT::NDetail::GetExtensionDataTag,\n@@ -214,14 +214,14 @@ void EnableOriginOverrides()\n     extractFromDictionaryOverride.Get();\n }\n \n-} // namespace NOrigin\n+} // namespace NDetail\n \n ////////////////////////////////////////////////////////////////////////////////\n \n bool HasHost(const TError& error) noexcept\n {\n     if (auto* attributes = error.MutableOriginAttributes()) {\n-        return NOrigin::HasHost(*attributes);\n+        return NYT::NDetail::HasHost(*attributes);\n     }\n     return false;\n }\n@@ -229,7 +229,7 @@ bool HasHost(const TError& error) noexcept\n TStringBuf GetHost(const TError& error) noexcept\n {\n     if (auto* attributes = error.MutableOriginAttributes()) {\n-        return NOrigin::GetHost(*attributes);\n+        return NYT::NDetail::GetHost(*attributes);\n     }\n     return {};\n }\n@@ -237,7 +237,7 @@ TStringBuf GetHost(const TError& error) noexcept\n NConcurrency::TFiberId GetFid(const TError& error) noexcept\n {\n     if (auto* attributes = error.MutableOriginAttributes()) {\n-        return NOrigin::GetFid(*attributes);\n+        return NYT::NDetail::GetFid(*attributes);\n     }\n     return NConcurrency::InvalidFiberId;\n }\n@@ -245,7 +245,7 @@ NConcurrency::TFiberId GetFid(const TError& error) noexcept\n bool HasTracingAttributes(const TError& error) noexcept\n {\n     if (auto* attributes = error.MutableOriginAttributes()) {\n-        return NOrigin::HasTracingAttributes(*attributes);\n+        return NYT::NDetail::HasTracingAttributes(*attributes);\n     }\n     return false;\n }\n@@ -253,7 +253,7 @@ bool HasTracingAttributes(const TError& error) noexcept\n NTracing::TTraceId GetTraceId(const TError& error) noexcept\n {\n     if (auto* attributes = error.MutableOriginAttributes()) {\n-        return NOrigin::GetTraceId(*attributes);\n+        return NYT::NDetail::GetTraceId(*attributes);\n     }\n     return NTracing::InvalidTraceId;\n }\n@@ -261,7 +261,7 @@ NTracing::TTraceId GetTraceId(const TError& error) noexcept\n NTracing::TSpanId GetSpanId(const TError& error) noexcept\n {\n     if (auto* attributes = error.MutableOriginAttributes()) {\n-        return NOrigin::GetSpanId(*attributes);\n+        return NYT::NDetail::GetSpanId(*attributes);\n     }\n     return NTracing::InvalidSpanId;\n }\n@@ -274,7 +274,7 @@ void SetTracingAttributes(TError* error, const NTracing::TTracingAttributes& att\n         return;\n     }\n \n-    NOrigin::UpdateTracingAttributes(originAttributes, attributes);\n+    NYT::NDetail::UpdateTracingAttributes(originAttributes, attributes);\n }\n \n ////////////////////////////////////////////////////////////////////////////////\ndiff --git a/yt/yt/core/misc/error.h b/yt/yt/core/misc/error.h\nindex 18c984803da0..f3c773da3386 100644\n--- a/yt/yt/core/misc/error.h\n+++ b/yt/yt/core/misc/error.h\n@@ -17,11 +17,11 @@ namespace NYT {\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-namespace NOrigin {\n+namespace NDetail {\n \n-void EnableOriginOverrides();\n+void EnableErrorOriginOverrides();\n \n-} // namespace NOrigin\n+} // namespace NDetail\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/core/misc/id_generator.h b/yt/yt/core/misc/id_generator.h\nindex 8fc1eff48b89..8e0bd71554e6 100644\n--- a/yt/yt/core/misc/id_generator.h\n+++ b/yt/yt/core/misc/id_generator.h\n@@ -21,7 +21,6 @@ class TIdGenerator\n \n private:\n     std::atomic<ui64> Current_ = 0;\n-\n };\n \n ////////////////////////////////////////////////////////////////////////////////\ndiff --git a/yt/yt/core/net/connection.cpp b/yt/yt/core/net/connection.cpp\nindex c18c6195c497..fa0c88d4d294 100644\n--- a/yt/yt/core/net/connection.cpp\n+++ b/yt/yt/core/net/connection.cpp\n@@ -628,8 +628,7 @@ class TFDConnectionImpl\n \n     TFuture<void> Close()\n     {\n-        auto error = TError(\"Connection closed\")\n-            << TErrorAttribute(\"connection\", Name_);\n+        auto error = AnnotateError(TError(\"Connection closed\"));\n         return AbortIO(error);\n     }\n \n@@ -665,12 +664,17 @@ class TFDConnectionImpl\n         return future;\n     }\n \n-    const TNetworkAddress& LocalAddress() const\n+    TConnectionId GetId() const\n+    {\n+        return Id_;\n+    }\n+\n+    const TNetworkAddress& GetLocalAddress() const\n     {\n         return LocalAddress_;\n     }\n \n-    const TNetworkAddress& RemoteAddress() const\n+    const TNetworkAddress& GetRemoteAddress() const\n     {\n         return RemoteAddress_;\n     }\n@@ -746,7 +750,8 @@ class TFDConnectionImpl\n     }\n \n private:\n-    const TString Name_;\n+    const TConnectionId Id_ = TConnectionId::Create();\n+    const TString Endpoint_;\n     const TString LoggingTag_;\n     const TNetworkAddress LocalAddress_;\n     const TNetworkAddress RemoteAddress_;\n@@ -768,7 +773,8 @@ class TFDConnectionImpl\n         TString filePath,\n         const IPollerPtr& poller,\n         bool useDeliveryFence)\n-        : Name_(Format(\"File{%v}\", filePath))\n+        : Endpoint_(Format(\"File{%v}\", filePath))\n+        , LoggingTag_(Format(\"ConnectionId: %v %v\", Id_, Endpoint_))\n         , FD_(fd)\n         , Poller_(std::move(poller))\n         , UseDeliveryFence_(useDeliveryFence)\n@@ -780,8 +786,8 @@ class TFDConnectionImpl\n         const TNetworkAddress& localAddress,\n         const TNetworkAddress& remoteAddress,\n         IPollerPtr poller)\n-        : Name_(Format(\"FD{%v<->%v}\", localAddress, remoteAddress))\n-        , LoggingTag_(Format(\"ConnectionId: %v\", Name_))\n+        : Endpoint_(Format(\"FD{%v<->%v}\", localAddress, remoteAddress))\n+        , LoggingTag_(Format(\"ConnectionId: %v %v\", Id_, Endpoint_))\n         , LocalAddress_(localAddress)\n         , RemoteAddress_(remoteAddress)\n         , FD_(fd)\n@@ -894,6 +900,13 @@ class TFDConnectionImpl\n     TDelayedExecutorCookie ReadTimeoutCookie_;\n     TDelayedExecutorCookie WriteTimeoutCookie_;\n \n+    TError AnnotateError(const TError& error) const\n+    {\n+        return error\n+            << TErrorAttribute(\"connection_id\", Id_)\n+            << TErrorAttribute(\"connection_endpoint\", Endpoint_);\n+    }\n+\n     TFuture<void> DoWrite(const TSharedRef& data)\n     {\n         auto write = std::make_unique<TWriteOperation>(data);\n@@ -959,8 +972,7 @@ class TFDConnectionImpl\n \n             if (error.IsOK()) {\n                 if (direction->Operation) {\n-                    THROW_ERROR_EXCEPTION(\"Another IO operation is in progress\")\n-                        << TErrorAttribute(\"connection\", Name_);\n+                    THROW_ERROR(AnnotateError(TError(\"Another IO operation is in progress\")));\n                 }\n \n                 YT_VERIFY(!direction->Running);\n@@ -1010,7 +1022,7 @@ class TFDConnectionImpl\n         if (result.IsOK()) {\n             direction->BytesTransferred += result.Value().ByteCount;\n         } else {\n-            result = result << TErrorAttribute(\"connection\", Name_);\n+            result = AnnotateError(result);\n         }\n \n         bool needUnregister = false;\n@@ -1154,14 +1166,19 @@ class TFDConnection\n         YT_UNUSED_FUTURE(Impl_->Abort(TError(\"Connection is abandoned\")));\n     }\n \n-    const TNetworkAddress& LocalAddress() const override\n+    TConnectionId GetId() const override\n+    {\n+        return Impl_->GetId();\n+    }\n+\n+    const TNetworkAddress& GetLocalAddress() const override\n     {\n-        return Impl_->LocalAddress();\n+        return Impl_->GetLocalAddress();\n     }\n \n-    const TNetworkAddress& RemoteAddress() const override\n+    const TNetworkAddress& GetRemoteAddress() const override\n     {\n-        return Impl_->RemoteAddress();\n+        return Impl_->GetRemoteAddress();\n     }\n \n     int GetHandle() const override\ndiff --git a/yt/yt/core/net/connection.h b/yt/yt/core/net/connection.h\nindex 24b28872d5e6..894b74822203 100644\n--- a/yt/yt/core/net/connection.h\n+++ b/yt/yt/core/net/connection.h\n@@ -68,8 +68,10 @@ struct IConnection\n     : public IConnectionReader\n     , public IConnectionWriter\n {\n-    virtual const TNetworkAddress& LocalAddress() const = 0;\n-    virtual const TNetworkAddress& RemoteAddress() const = 0;\n+    virtual TConnectionId GetId() const = 0;\n+\n+    virtual const TNetworkAddress& GetLocalAddress() const = 0;\n+    virtual const TNetworkAddress& GetRemoteAddress() const = 0;\n \n     // Returns true if connection is not is failed state and has no\n     // active IO operations.\ndiff --git a/yt/yt/core/net/dialer.cpp b/yt/yt/core/net/dialer.cpp\nindex d21b9b014020..5bc8d3db92d2 100644\n--- a/yt/yt/core/net/dialer.cpp\n+++ b/yt/yt/core/net/dialer.cpp\n@@ -1,6 +1,7 @@\n #include \"dialer.h\"\n #include \"connection.h\"\n #include \"config.h\"\n+#include \"private.h\"\n \n #include <yt/yt/core/concurrency/pollable_detail.h>\n \n@@ -15,6 +16,10 @@ using namespace NConcurrency;\n \n ////////////////////////////////////////////////////////////////////////////////\n \n+static constexpr auto& Logger = NetLogger;\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n class TDialSession\n     : public TRefCounted\n {\n@@ -23,48 +28,55 @@ class TDialSession\n         const TNetworkAddress& remoteAddress,\n         const IAsyncDialerPtr& asyncDialer,\n         IPollerPtr poller)\n-        : Name_(Format(\"dialer[%v]\", remoteAddress))\n-        , RemoteAddress_(remoteAddress)\n+        : RemoteAddress_(remoteAddress)\n         , Poller_(std::move(poller))\n         , Session_(asyncDialer->CreateSession(\n             remoteAddress,\n             BIND(&TDialSession::OnDialerFinished, MakeWeak(this))))\n+    { }\n+\n+    TFuture<IConnectionPtr> Run()\n     {\n+        YT_LOG_DEBUG(\"Dial started (Address: %v)\",\n+            RemoteAddress_);\n+\n         Session_->Dial();\n \n         Promise_.OnCanceled(BIND([this, this_ = MakeStrong(this)] (const TError& error) {\n             Promise_.TrySet(TError(NYT::EErrorCode::Canceled, \"Dial canceled\")\n-                << TErrorAttribute(\"dialer\", Name_)\n+                << TErrorAttribute(\"remote_address\", ToString(RemoteAddress_))\n                 << error);\n         }));\n-    }\n \n-    TFuture<IConnectionPtr> GetFuture() const\n-    {\n         return Promise_.ToFuture();\n     }\n \n private:\n-    const TString Name_;\n     const TNetworkAddress RemoteAddress_;\n     const IPollerPtr Poller_;\n     const IAsyncDialerSessionPtr Session_;\n \n     const TPromise<IConnectionPtr> Promise_ = NewPromise<IConnectionPtr>();\n \n-    void OnDialerFinished(const TErrorOr<SOCKET>& socketOrError)\n+    void OnDialerFinished(const TErrorOr<TFileDescriptor>& fdOrError)\n     {\n-        if (socketOrError.IsOK()) {\n-            auto socket = socketOrError.Value();\n-            Promise_.TrySet(CreateConnectionFromFD(\n-                socket,\n-                GetSocketName(socket),\n-                RemoteAddress_,\n-                Poller_));\n-        } else {\n-            Promise_.TrySet(socketOrError\n-                << TErrorAttribute(\"dialer\", Name_));\n+        if (!fdOrError.IsOK()) {\n+            Promise_.TrySet(TError(\"Dial failed\")\n+                << TErrorAttribute(\"remote_address\", ToString(RemoteAddress_))\n+                << fdOrError);\n+            return;\n         }\n+\n+        auto socket = fdOrError.Value();\n+        YT_LOG_DEBUG(\"Dial completed (Address: %v, FD: %v)\",\n+            RemoteAddress_,\n+            socket);\n+\n+        Promise_.TrySet(CreateConnectionFromFD(\n+            socket,\n+            GetSocketName(socket),\n+            RemoteAddress_,\n+            Poller_));\n     }\n };\n \n@@ -86,14 +98,14 @@ class TDialer\n     { }\n \n     TFuture<IConnectionPtr> Dial(\n-        const TNetworkAddress& remote,\n+        const TNetworkAddress& remoteAddress,\n         TDialerContextPtr /*context*/) override\n     {\n         auto session = New<TDialSession>(\n-            remote,\n+            remoteAddress,\n             AsyncDialer_,\n             Poller_);\n-        return session->GetFuture();\n+        return session->Run();\n     }\n \n private:\ndiff --git a/yt/yt/core/net/dialer.h b/yt/yt/core/net/dialer.h\nindex b48c782cf5ef..ac145d28a8d3 100644\n--- a/yt/yt/core/net/dialer.h\n+++ b/yt/yt/core/net/dialer.h\n@@ -4,6 +4,8 @@\n \n #include <yt/yt/core/net/address.h>\n \n+#include <yt/yt/core/misc/proc.h>\n+\n #include <library/cpp/yt/logging/public.h>\n \n #include <library/cpp/yt/memory/ref.h>\n@@ -14,8 +16,7 @@ namespace NYT::NNet {\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-struct TDialerContext\n-    : public TRefCounted\n+struct TDialerContext final\n {\n     //! Host is used for TlsDialer.\n     std::optional<TString> Host;\n@@ -24,12 +25,11 @@ struct TDialerContext\n DEFINE_REFCOUNTED_TYPE(TDialerContext)\n \n //! Dialer establishes connection to a (resolved) network address.\n-\n struct IDialer\n     : public virtual TRefCounted\n {\n     virtual TFuture<IConnectionPtr> Dial(\n-        const TNetworkAddress& remote,\n+        const TNetworkAddress& remoteAddress,\n         TDialerContextPtr context = nullptr) = 0;\n };\n \n@@ -43,7 +43,7 @@ IDialerPtr CreateDialer(\n ////////////////////////////////////////////////////////////////////////////////\n \n //! Async dialer notifies caller via callback for better performance.\n-using TAsyncDialerCallback = TCallback<void(const TErrorOr<SOCKET>&)>;\n+using TAsyncDialerCallback = TCallback<void(const TErrorOr<TFileDescriptor>&)>;\n \n //! Dialer session interface.\n //! Caller should hold a reference to a session until callback is called.\ndiff --git a/yt/yt/core/net/local_address.cpp b/yt/yt/core/net/local_address.cpp\nindex 03aa4e6650c4..541b152cdbfb 100644\n--- a/yt/yt/core/net/local_address.cpp\n+++ b/yt/yt/core/net/local_address.cpp\n@@ -50,7 +50,7 @@ std::atomic<bool> IPv6Enabled_ = false;\n \n const char* ReadLocalHostName() noexcept\n {\n-    NYT::NOrigin::EnableOriginOverrides();\n+    NYT::NDetail::EnableErrorOriginOverrides();\n     // Writer-side imposes AcqRel ordering, so all preceding writes must be visible.\n     char* ptr = LocalHostNamePtr.load(std::memory_order::relaxed);\n     return ptr ? ptr : LocalHostNameData;\n@@ -86,7 +86,7 @@ void GuardedWriteString(std::atomic<char*>& storage, char* initial, TStringBuf s\n \n void WriteLocalHostName(TStringBuf hostName) noexcept\n {\n-    NYT::NOrigin::EnableOriginOverrides();\n+    NYT::NDetail::EnableErrorOriginOverrides();\n \n     static NThreading::TForkAwareSpinLock Lock;\n     auto guard = Guard(Lock);\ndiff --git a/yt/yt/core/net/public.h b/yt/yt/core/net/public.h\nindex b28a2f65d21c..fde7eea47a62 100644\n--- a/yt/yt/core/net/public.h\n+++ b/yt/yt/core/net/public.h\n@@ -12,6 +12,8 @@ class TNetworkAddress;\n class TIP6Address;\n class TIP6Network;\n \n+using TConnectionId = TGuid;\n+\n DECLARE_REFCOUNTED_STRUCT(IConnection)\n DECLARE_REFCOUNTED_STRUCT(IPacketConnection)\n DECLARE_REFCOUNTED_STRUCT(IConnectionReader)\ndiff --git a/yt/yt/core/rpc/grpc/helpers.cpp b/yt/yt/core/rpc/grpc/helpers.cpp\nindex a42d958a1127..bfe01bf540d6 100644\n--- a/yt/yt/core/rpc/grpc/helpers.cpp\n+++ b/yt/yt/core/rpc/grpc/helpers.cpp\n@@ -42,6 +42,11 @@ TGprString MakeGprString(char* str)\n     return TGprString(str, gpr_free);\n }\n \n+TX509Ptr MakeX509Ptr(X509* cert)\n+{\n+    return TX509Ptr(cert, X509_free);\n+}\n+\n TStringBuf ToStringBuf(const grpc_slice& slice)\n {\n     return TStringBuf(\n@@ -522,25 +527,21 @@ TGrpcServerCredentialsPtr LoadServerCredentials(const TServerCredentialsConfigPt\n         nullptr));\n }\n \n-std::optional<TString> ParseIssuerFromX509(TStringBuf x509String)\n+TX509Ptr ParsePemCertToX509(TStringBuf pemCert)\n {\n     auto* bio = BIO_new(BIO_s_mem());\n     auto bioGuard = Finally([&] {\n         BIO_free(bio);\n     });\n \n-    BIO_write(bio, x509String.data(), x509String.length());\n-\n-    auto* x509 = PEM_read_bio_X509(bio, nullptr, nullptr, nullptr);\n-    auto x509Guard = Finally([&] {\n-        X509_free(x509);\n-    });\n+    BIO_write(bio, pemCert.data(), pemCert.length());\n \n-    if (!x509) {\n-        return std::nullopt;\n-    }\n+    return MakeX509Ptr(PEM_read_bio_X509(bio, nullptr, nullptr, nullptr));\n+}\n \n-    auto* issuerName = X509_get_issuer_name(x509);\n+std::optional<TString> ParseIssuerFromX509(const TX509Ptr& pemCertX509)\n+{\n+    auto* issuerName = X509_get_issuer_name(pemCertX509.get());\n \n     std::array<char, 1024> buf;\n     auto* issuerString = X509_NAME_oneline(issuerName, buf.data(), buf.size());\n@@ -551,6 +552,29 @@ std::optional<TString> ParseIssuerFromX509(TStringBuf x509String)\n     return TString(issuerString);\n }\n \n+std::optional<TString> ParseSerialNumberFromX509(const TX509Ptr& pemCertX509)\n+{\n+    ASN1_STRING* serialNumber = X509_get_serialNumber(pemCertX509.get());\n+    if (!serialNumber) {\n+        return std::nullopt;\n+    }\n+    BIGNUM* bn = ASN1_INTEGER_to_BN(serialNumber, nullptr);\n+    auto bnGuard = Finally([&] {\n+        BN_free(bn);\n+    });\n+    if (!bn) {\n+        return std::nullopt;\n+    }\n+    char* hexSerialNumber = BN_bn2hex(bn);\n+    auto serialNumberGuard = Finally([&] {\n+        OPENSSL_free(hexSerialNumber);\n+    });\n+    if (!hexSerialNumber) {\n+        return std::nullopt;\n+    }\n+    return TString(hexSerialNumber);\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n TGuardedGrpcCompletionQueue::TGuardedGrpcCompletionQueue(TGrpcCompletionQueuePtr completionQueue)\ndiff --git a/yt/yt/core/rpc/grpc/helpers.h b/yt/yt/core/rpc/grpc/helpers.h\nindex 8c3d2ec565b4..b6b775c483ec 100644\n--- a/yt/yt/core/rpc/grpc/helpers.h\n+++ b/yt/yt/core/rpc/grpc/helpers.h\n@@ -16,6 +16,8 @@\n #include <contrib/libs/grpc/include/grpc/impl/codegen/grpc_types.h>\n #include <contrib/libs/grpc/include/grpc/byte_buffer_reader.h>\n \n+typedef struct x509_st X509;\n+\n namespace NYT::NRpc::NGrpc {\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -23,6 +25,9 @@ namespace NYT::NRpc::NGrpc {\n using TGprString = std::unique_ptr<char, void(*)(void*)>;\n TGprString MakeGprString(char* str);\n \n+using TX509Ptr = std::unique_ptr<X509, void(*)(X509*)>;\n+TX509Ptr MakeX509Ptr(X509* cert);\n+\n TStringBuf ToStringBuf(const grpc_slice& slice);\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -289,7 +294,9 @@ TError DeserializeError(TStringBuf serializedError);\n TGrpcPemKeyCertPair LoadPemKeyCertPair(const TSslPemKeyCertPairConfigPtr& config);\n TGrpcChannelCredentialsPtr LoadChannelCredentials(const TChannelCredentialsConfigPtr& config);\n TGrpcServerCredentialsPtr LoadServerCredentials(const TServerCredentialsConfigPtr& config);\n-std::optional<TString> ParseIssuerFromX509(TStringBuf x509String);\n+TX509Ptr ParsePemCertToX509(TStringBuf pemCert);\n+std::optional<TString> ParseIssuerFromX509(const TX509Ptr& pemCertX509);\n+std::optional<TString> ParseSerialNumberFromX509(const TX509Ptr& pemCertX509);\n \n ////////////////////////////////////////////////////////////////////////////////\n \ndiff --git a/yt/yt/core/rpc/grpc/proto/grpc.proto b/yt/yt/core/rpc/grpc/proto/grpc.proto\nindex 6ec01e35f981..cde26cec757b 100644\n--- a/yt/yt/core/rpc/grpc/proto/grpc.proto\n+++ b/yt/yt/core/rpc/grpc/proto/grpc.proto\n@@ -13,6 +13,7 @@ message TSslCredentialsExt\n \n     optional string peer_identity = 1;\n     optional string issuer = 2;\n+    optional string serial_number = 3;\n }\n \n ////////////////////////////////////////////////////////////////////////////////\ndiff --git a/yt/yt/core/rpc/grpc/server.cpp b/yt/yt/core/rpc/grpc/server.cpp\nindex bb693aea8914..c90f488740b4 100644\n--- a/yt/yt/core/rpc/grpc/server.cpp\n+++ b/yt/yt/core/rpc/grpc/server.cpp\n@@ -779,7 +779,7 @@ class TServer\n             std::optional<NGrpc::NProto::TSslCredentialsExt> sslCredentialsExtension;\n \n             ParsePeerIdentity(authContext, &sslCredentialsExtension);\n-            ParseIssuer(authContext, &sslCredentialsExtension);\n+            ParseIssuerAndSerialNumber(authContext, &sslCredentialsExtension);\n \n             return sslCredentialsExtension;\n         }\n@@ -803,7 +803,7 @@ class TServer\n             (*sslCredentialsExtension)->set_peer_identity(TString(peerIdentityProperty->value, peerIdentityProperty->value_length));\n         }\n \n-        static void ParseIssuer(const TGrpcAuthContextPtr& authContext, std::optional<NGrpc::NProto::TSslCredentialsExt>* sslCredentialsExtension)\n+        static void ParseIssuerAndSerialNumber(const TGrpcAuthContextPtr& authContext, std::optional<NGrpc::NProto::TSslCredentialsExt>* sslCredentialsExtension)\n         {\n             const char* peerIdentityPropertyName = grpc_auth_context_peer_identity_property_name(authContext.Unwrap());\n             if (!peerIdentityPropertyName) {\n@@ -816,15 +816,23 @@ class TServer\n                 return;\n             }\n \n-            auto issuer = ParseIssuerFromX509(TStringBuf(pemCertProperty->value, pemCertProperty->value_length));\n-            if (!issuer) {\n+            auto pemCertX509 = ParsePemCertToX509(TStringBuf(pemCertProperty->value, pemCertProperty->value_length));\n+            if (!pemCertX509) {\n                 return;\n             }\n \n-            if (!sslCredentialsExtension->has_value()) {\n-                sslCredentialsExtension->emplace();\n+            if (auto issuer = ParseIssuerFromX509(pemCertX509)) {\n+                if (!sslCredentialsExtension->has_value()) {\n+                    sslCredentialsExtension->emplace();\n+                }\n+                (*sslCredentialsExtension)->set_issuer(std::move(*issuer));\n+            }\n+            if (auto serialNumber = ParseSerialNumberFromX509(pemCertX509)) {\n+                if (!sslCredentialsExtension->has_value()) {\n+                    sslCredentialsExtension->emplace();\n+                }\n+                (*sslCredentialsExtension)->set_serial_number(std::move(*serialNumber));\n             }\n-            (*sslCredentialsExtension)->set_issuer(std::move(*issuer));\n         }\n \n         void ParseTimeout()\ndiff --git a/yt/yt/core/threading/thread.cpp b/yt/yt/core/threading/thread.cpp\nindex e3222f83363a..389cd88237f7 100644\n--- a/yt/yt/core/threading/thread.cpp\n+++ b/yt/yt/core/threading/thread.cpp\n@@ -295,10 +295,10 @@ YT_PREVENT_TLS_CACHING void TThread::ConfigureSignalHandlerStack()\n \n     // The size of of the custom stack to be provided for signal handlers.\n     constexpr size_t SignalHandlerStackSize = 16_KB;\n-    thread_local std::unique_ptr<char[]> Stack = std::make_unique<char[]>(SignalHandlerStackSize);\n+    SignalHandlerStack_ = std::make_unique<char[]>(SignalHandlerStackSize);\n \n     stack_t stack{\n-        .ss_sp = Stack.get(),\n+        .ss_sp = SignalHandlerStack_.get(),\n         .ss_flags = 0,\n         .ss_size = SignalHandlerStackSize,\n     };\ndiff --git a/yt/yt/core/threading/thread.h b/yt/yt/core/threading/thread.h\nindex ac9c9885ecb2..83f40a2e410c 100644\n--- a/yt/yt/core/threading/thread.h\n+++ b/yt/yt/core/threading/thread.h\n@@ -75,6 +75,7 @@ class TThread\n \n     TThreadId ThreadId_ = InvalidThreadId;\n     ::TThread UnderlyingThread_;\n+    std::unique_ptr<char[]> SignalHandlerStack_;\n \n     void SetThreadPriority();\n     void ConfigureSignalHandlerStack();\ndiff --git a/yt/yt/core/tracing/trace_context.cpp b/yt/yt/core/tracing/trace_context.cpp\nindex 1e3006b60b82..b65e537a9236 100644\n--- a/yt/yt/core/tracing/trace_context.cpp\n+++ b/yt/yt/core/tracing/trace_context.cpp\n@@ -115,7 +115,7 @@ namespace NDetail {\n thread_local TTraceContext *CurrentTraceContextData{};\n YT_PREVENT_TLS_CACHING TTraceContext*& CurrentTraceContext()\n {\n-    NYT::NOrigin::EnableOriginOverrides();\n+    NYT::NDetail::EnableErrorOriginOverrides();\n     asm volatile(\"\");\n     return CurrentTraceContextData;\n }\ndiff --git a/yt/yt/core/ytree/attribute_consumer.cpp b/yt/yt/core/ytree/attribute_consumer.cpp\nindex 7e28cb13f9c0..5fbe929182d5 100644\n--- a/yt/yt/core/ytree/attribute_consumer.cpp\n+++ b/yt/yt/core/ytree/attribute_consumer.cpp\n@@ -9,23 +9,26 @@ using namespace NYson;\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-TAttributeConsumer::TAttributeConsumer(IAttributeDictionary* attributes)\n-    : Attributes(attributes)\n+TAttributeConsumer::TAttributeConsumer(IAttributeDictionary* attributes, std::optional<THashSet<TString>> keyWhitelist)\n+    : Attributes_(attributes)\n+    , KeyWhitelist_(std::move(keyWhitelist))\n { }\n \n IAttributeDictionary* TAttributeConsumer::GetAttributes() const\n {\n-    return Attributes;\n+    return Attributes_;\n }\n \n void TAttributeConsumer::OnMyKeyedItem(TStringBuf key)\n {\n-    Writer.reset(new TBufferedBinaryYsonWriter(&Output));\n-    Forward(Writer.get(), [this, key = TString(key)] {\n-        Writer->Flush();\n-        Writer.reset();\n-        Attributes->SetYson(key, TYsonString(Output.Str()));\n-        Output.clear();\n+    Writer_.reset(new TBufferedBinaryYsonWriter(&Output_));\n+    Forward(Writer_.get(), [this, key = TString(key)] {\n+        Writer_->Flush();\n+        Writer_.reset();\n+        if (!KeyWhitelist_ || KeyWhitelist_->contains(key)) {\n+            Attributes_->SetYson(key, TYsonString(Output_.Str()));\n+        }\n+        Output_.clear();\n     });\n }\n \ndiff --git a/yt/yt/core/ytree/attribute_consumer.h b/yt/yt/core/ytree/attribute_consumer.h\nindex cbcaf031d29a..4c1fd206df6e 100644\n--- a/yt/yt/core/ytree/attribute_consumer.h\n+++ b/yt/yt/core/ytree/attribute_consumer.h\n@@ -14,7 +14,7 @@ class TAttributeConsumer\n     : public NYson::TForwardingYsonConsumer\n {\n public:\n-    explicit TAttributeConsumer(IAttributeDictionary* attributes);\n+    explicit TAttributeConsumer(IAttributeDictionary* attributes, std::optional<THashSet<TString>> keyWhitelist = {});\n     IAttributeDictionary* GetAttributes() const;\n \n protected:\n@@ -33,10 +33,12 @@ class TAttributeConsumer\n     void OnMyEndAttributes()override;\n \n private:\n-    IAttributeDictionary* const Attributes;\n+    IAttributeDictionary* const Attributes_;\n \n-    TStringStream Output;\n-    std::unique_ptr<NYson::TBufferedBinaryYsonWriter> Writer;\n+    const std::optional<THashSet<TString>> KeyWhitelist_;\n+\n+    TStringStream Output_;\n+    std::unique_ptr<NYson::TBufferedBinaryYsonWriter> Writer_;\n \n     void ThrowMapExpected();\n \ndiff --git a/yt/yt/core/ytree/virtual-inl.h b/yt/yt/core/ytree/virtual-inl.h\nindex d3cf97993065..6b24ab8306b7 100644\n--- a/yt/yt/core/ytree/virtual-inl.h\n+++ b/yt/yt/core/ytree/virtual-inl.h\n@@ -44,13 +44,13 @@ class TCollectionBoundMapService\n         return 0;\n     }\n \n-    std::vector<TString> GetKeys(i64 limit) const override\n+    std::vector<std::string> GetKeys(i64 limit) const override\n     {\n-        std::vector<TString> keys;\n+        std::vector<std::string> keys;\n         if (auto collection = Collection_.lock()) {\n             keys.reserve(limit);\n             for (const auto& [key, value] : *collection) {\n-                if (static_cast<i64>(keys.size()) >= limit) {\n+                if (std::ssize(keys) >= limit) {\n                     break;\n                 }\n                 keys.emplace_back(TConversionTraits::ConvertKeyToString(key));\n@@ -59,7 +59,7 @@ class TCollectionBoundMapService\n         return keys;\n     }\n \n-    IYPathServicePtr FindItemService(TStringBuf key) const override\n+    IYPathServicePtr FindItemService(const std::string& key) const override\n     {\n         if (auto collection = Collection_.lock()) {\n             auto it = collection->find(TConversionTraits::ConvertStringToKey(key));\ndiff --git a/yt/yt/core/ytree/virtual.cpp b/yt/yt/core/ytree/virtual.cpp\nindex 4cff5fa7bbc8..32292e5df434 100644\n--- a/yt/yt/core/ytree/virtual.cpp\n+++ b/yt/yt/core/ytree/virtual.cpp\n@@ -168,6 +168,11 @@ void TVirtualMapBase::GetSelf(\n         attributeFilter,\n         limit);\n \n+    if (limit < 0) {\n+        THROW_ERROR_EXCEPTION(\"Limit is negative\")\n+            << TErrorAttribute(\"limit\", limit);\n+    }\n+\n     auto keys = GetKeys(limit);\n     i64 size = GetSize();\n \n@@ -248,6 +253,11 @@ void TVirtualMapBase::ListSelf(\n         attributeFilter,\n         limit);\n \n+    if (limit < 0) {\n+        THROW_ERROR_EXCEPTION(\"Limit is negative\")\n+            << TErrorAttribute(\"limit\", limit);\n+    }\n+\n     auto keys = GetKeys(limit);\n     i64 size = GetSize();\n \n@@ -358,15 +368,14 @@ class TCompositeMapService::TImpl\n     : public TRefCounted\n {\n public:\n-    std::vector<TString> GetKeys(i64 limit) const\n+    std::vector<std::string> GetKeys(i64 limit) const\n     {\n-        std::vector<TString> keys;\n-        int index = 0;\n-        auto it = Services_.begin();\n-        while (it != Services_.end() && index < limit) {\n-            keys.push_back(it->first);\n-            ++it;\n-            ++index;\n+        std::vector<std::string> keys;\n+        for (const auto& [key, _] : Services_) {\n+            if (std::ssize(keys) >= limit) {\n+                break;\n+            }\n+            keys.push_back(key);\n         }\n         return keys;\n     }\n@@ -376,7 +385,7 @@ class TCompositeMapService::TImpl\n         return Services_.size();\n     }\n \n-    IYPathServicePtr FindItemService(TStringBuf key) const\n+    IYPathServicePtr FindItemService(const std::string& key) const\n     {\n         auto it = Services_.find(key);\n         return it != Services_.end() ? it->second : nullptr;\n@@ -423,7 +432,7 @@ TCompositeMapService::TCompositeMapService()\n \n TCompositeMapService::~TCompositeMapService() = default;\n \n-std::vector<TString> TCompositeMapService::GetKeys(i64 limit) const\n+std::vector<std::string> TCompositeMapService::GetKeys(i64 limit) const\n {\n     return Impl_->GetKeys(limit);\n }\n@@ -433,7 +442,7 @@ i64 TCompositeMapService::GetSize() const\n     return Impl_->GetSize();\n }\n \n-IYPathServicePtr TCompositeMapService::FindItemService(TStringBuf key) const\n+IYPathServicePtr TCompositeMapService::FindItemService(const std::string& key) const\n {\n     return Impl_->FindItemService(key);\n }\ndiff --git a/yt/yt/core/ytree/virtual.h b/yt/yt/core/ytree/virtual.h\nindex 0ed73bc9ad22..a94b3cd9ee26 100644\n--- a/yt/yt/core/ytree/virtual.h\n+++ b/yt/yt/core/ytree/virtual.h\n@@ -31,11 +31,11 @@ class TVirtualMapBase\n \n     virtual std::optional<TVirtualCompositeNodeReadOffloadParams> GetReadOffloadParams() const;\n \n-    virtual std::vector<TString> GetKeys(i64 limit = std::numeric_limits<i64>::max()) const = 0;\n+    virtual std::vector<std::string> GetKeys(i64 limit = std::numeric_limits<i64>::max()) const = 0;\n \n     virtual i64 GetSize() const = 0;\n \n-    virtual IYPathServicePtr FindItemService(TStringBuf key) const = 0;\n+    virtual IYPathServicePtr FindItemService(const std::string& key) const = 0;\n \n     bool DoInvoke(const IYPathServiceContextPtr& context) override;\n \n@@ -74,9 +74,9 @@ class TCompositeMapService\n     TCompositeMapService();\n     ~TCompositeMapService();\n \n-    std::vector<TString> GetKeys(i64 limit = std::numeric_limits<i64>::max()) const override;\n+    std::vector<std::string> GetKeys(i64 limit = std::numeric_limits<i64>::max()) const override;\n     i64 GetSize() const override;\n-    IYPathServicePtr FindItemService(TStringBuf key) const override;\n+    IYPathServicePtr FindItemService(const std::string& key) const override;\n     void ListSystemAttributes(std::vector<TAttributeDescriptor>* descriptors) override;\n     bool GetBuiltinAttribute(TInternedAttributeKey key, NYson::IYsonConsumer* consumer) override;\n \ndiff --git a/yt/yt/core/ytree/yson_schema-inl.h b/yt/yt/core/ytree/yson_schema-inl.h\nindex 821048f19f28..2f7b98912a8b 100644\n--- a/yt/yt/core/ytree/yson_schema-inl.h\n+++ b/yt/yt/core/ytree/yson_schema-inl.h\n@@ -89,6 +89,21 @@ void WriteSchema(const T&, NYson::IYsonConsumer* consumer)\n         .EndMap();\n }\n \n+template <CYsonStructDerived T>\n+void WriteSchemaForNull(NYson::IYsonConsumer* consumer)\n+{\n+    if constexpr (std::is_same_v<T, TYsonStruct>) {\n+       // It is not allowed to instantiate object of type `TYsonStruct`.\n+       BuildYsonFluently(consumer)\n+            .BeginMap()\n+                .Item(\"type_name\").Value(\"struct\")\n+                .Item(\"members\").BeginList().EndList()\n+            .EndMap();\n+    } else {\n+         New<T>()->WriteSchema(consumer);\n+    }\n+}\n+\n template <CYsonStructDerived T>\n void WriteSchema(const NYT::TIntrusivePtr<T>& value, NYson::IYsonConsumer* consumer)\n {\n@@ -96,7 +111,11 @@ void WriteSchema(const NYT::TIntrusivePtr<T>& value, NYson::IYsonConsumer* consu\n         .BeginMap()\n             .Item(\"type_name\").Value(\"optional\")\n             .Item(\"item\").Do([&] (auto fluent) {\n-                (value ? value : New<T>())->WriteSchema(fluent.GetConsumer());\n+                if (value) {\n+                    value->WriteSchema(fluent.GetConsumer());\n+                } else {\n+                    WriteSchemaForNull<T>(fluent.GetConsumer());\n+                }\n             })\n         .EndMap();\n }\ndiff --git a/yt/yt/library/profiling/solomon/sensor.h b/yt/yt/library/profiling/solomon/sensor.h\nindex 3ac491ef5990..c81055ea149d 100644\n--- a/yt/yt/library/profiling/solomon/sensor.h\n+++ b/yt/yt/library/profiling/solomon/sensor.h\n@@ -62,7 +62,7 @@ class TSimpleCounter\n     std::atomic<i64> Value_ = 0;\n };\n \n-static_assert(sizeof(TSimpleCounter) == 24);\n+static_assert(sizeof(TSimpleCounter) == 32);\n \n ////////////////////////////////////////////////////////////////////////////////\n \n@@ -75,10 +75,10 @@ class TSimpleTimeCounter\n     TDuration GetValue() override;\n \n private:\n-    std::atomic<TDuration::TValue> Value_{0};\n+    std::atomic<TDuration::TValue> Value_ = 0;\n };\n \n-static_assert(sizeof(TSimpleTimeCounter) == 24);\n+static_assert(sizeof(TSimpleTimeCounter) == 32);\n \n ////////////////////////////////////////////////////////////////////////////////\n \n@@ -108,7 +108,7 @@ class THistogram\n     , public IHistogramImpl\n {\n public:\n-    THistogram(const TSensorOptions& options);\n+    explicit THistogram(const TSensorOptions& options);\n \n     void Record(TDuration value) override;\n \ndiff --git a/yt/yt_proto/yt/client/api/rpc_proxy/proto/api_service.proto b/yt/yt_proto/yt/client/api/rpc_proxy/proto/api_service.proto\nindex 784f7c7da032..54321bcc9642 100644\n--- a/yt/yt_proto/yt/client/api/rpc_proxy/proto/api_service.proto\n+++ b/yt/yt_proto/yt/client/api/rpc_proxy/proto/api_service.proto\n@@ -638,6 +638,7 @@ message TReqSelectRows\n     optional int32 execution_backend = 23; // EExecutionBackend\n     optional NYT.NTableClient.NProto.TVersionedReadOptions versioned_read_options = 25;\n     optional bool use_lookup_cache = 26;\n+    optional int64 min_row_count_per_subquery = 27;\n \n     optional TSuppressableAccessTrackingOptions suppressable_access_tracking_options = 104;\n \n@@ -836,6 +837,7 @@ message TReqExplainQuery\n     optional string execution_pool = 11;\n     optional bool new_range_inference = 12;\n     optional int32 syntax_version = 13 [default = 1];\n+    optional int64 min_row_count_per_subquery = 14;\n }\n \n message TRspExplainQuery\n@@ -1986,6 +1988,7 @@ message TReqAlterTableReplica\n     optional bool preserve_timestamps = 4;\n     optional EAtomicity atomicity = 5;\n     optional bool enable_replicated_table_tracker = 6;\n+    optional string replica_path = 7;\n \n     optional TMutatingOptions mutating_options = 100;\n }\ndiff --git a/yt/yt_proto/yt/client/table_client/proto/versioned_io_options.proto b/yt/yt_proto/yt/client/table_client/proto/versioned_io_options.proto\nindex 53e1ada19e58..9172331d81c4 100644\n--- a/yt/yt_proto/yt/client/table_client/proto/versioned_io_options.proto\n+++ b/yt/yt_proto/yt/client/table_client/proto/versioned_io_options.proto\n@@ -9,4 +9,9 @@ message TVersionedReadOptions\n     required int32 read_mode = 1; // EVersionedIOMode\n }\n \n+message TVersionedWriteOptions\n+{\n+    required int32 write_mode = 1; // EVersionedIOMode\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n",
  "test_patch": "diff --git a/build/config/tests/py_style/config_paths.json b/build/config/tests/py_style/config_paths.json\ndeleted file mode 100644\nindex 7b3c51669b84..000000000000\n--- a/build/config/tests/py_style/config_paths.json\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-{\n-    \"\": \"build/config/tests/py_style/config.toml\",\n-    \"devtools/contrib/piglet/template_generator/\": \"maps/infra/pyproject.toml\",\n-    \"devtools/dwh/intrasearch/utils/\": \"devtools/dwh/pyproject.toml\",\n-    \"devtools/rnd/\": \"devtools/rnd/pyproject.toml\",\n-    \"devtools/yamaker/\": \"devtools/yamaker/pyproject.toml\",\n-    \"dj/services/arcanum/\": \"dj/services/arcanum/pyproject.toml\",\n-    \"intranet/search/\": \"intranet/search/pyproject.toml\",\n-    \"maps/\": \"maps/infra/pyproject.toml\",\n-    \"ml/tensorflow/models/userbert/pipeline/multipart/data/\": \"ml/tensorflow/models/userbert/pipeline/multipart/data/pyproject.toml\",\n-    \"partner/python/\": \"partner/python/pyproject.toml\"\n-}\ndiff --git a/build/config/tests/py_style/default_configs.json b/build/config/tests/py_style/default_configs.json\nnew file mode 100644\nindex 000000000000..1c8f2ab58517\n--- /dev/null\n+++ b/build/config/tests/py_style/default_configs.json\n@@ -0,0 +1,6 @@\n+{\n+    \"flake8\": \"build/config/tests/flake8/flake8.conf\",\n+    \"py2_flake8\": \"build/config/tests/flake8/flake8.conf\",\n+    \"black\": \"build/config/tests/py_style/config.toml\",\n+    \"dummy_linter\": \"build/config/tests/py_style/dummy_linter_config.json\"\n+}\ndiff --git a/build/config/tests/py_style/dummy_linter_config.json b/build/config/tests/py_style/dummy_linter_config.json\nnew file mode 100644\nindex 000000000000..0967ef424bce\n--- /dev/null\n+++ b/build/config/tests/py_style/dummy_linter_config.json\n@@ -0,0 +1,1 @@\n+{}\ndiff --git a/build/config/tests/py_style/ya.make b/build/config/tests/py_style/ya.make\nindex 37dcd2ec82ed..6a6a2875588a 100644\n--- a/build/config/tests/py_style/ya.make\n+++ b/build/config/tests/py_style/ya.make\n@@ -2,7 +2,6 @@ LIBRARY()\n \n RESOURCE_FILES(\n     config.toml\n-    config_paths.json\n )\n \n END()\ndiff --git a/build/platform/test_tool/host.ya.make.inc b/build/platform/test_tool/host.ya.make.inc\nindex f44f5f2df2c1..69a66014eb1c 100644\n--- a/build/platform/test_tool/host.ya.make.inc\n+++ b/build/platform/test_tool/host.ya.make.inc\n@@ -1,12 +1,12 @@\n IF (HOST_OS_DARWIN AND HOST_ARCH_X86_64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083800804)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120352053)\n ELSEIF (HOST_OS_DARWIN AND HOST_ARCH_ARM64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083799383)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120351367)\n ELSEIF (HOST_OS_LINUX AND HOST_ARCH_X86_64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083802536)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120353733)\n ELSEIF (HOST_OS_LINUX AND HOST_ARCH_AARCH64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083798661)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120350948)\n ELSEIF (HOST_OS_WINDOWS AND HOST_ARCH_X86_64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083801684)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120352672)\n \n ENDIF()\ndiff --git a/build/platform/test_tool/host_os.ya.make.inc b/build/platform/test_tool/host_os.ya.make.inc\nindex 43fc98f8c790..f82b95639d6f 100644\n--- a/build/platform/test_tool/host_os.ya.make.inc\n+++ b/build/platform/test_tool/host_os.ya.make.inc\n@@ -1,12 +1,12 @@\n IF (HOST_OS_DARWIN AND HOST_ARCH_X86_64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083800164)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120327883)\n ELSEIF (HOST_OS_DARWIN AND HOST_ARCH_ARM64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083799217)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120327375)\n ELSEIF (HOST_OS_LINUX AND HOST_ARCH_X86_64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083801854)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120328912)\n ELSEIF (HOST_OS_LINUX AND HOST_ARCH_AARCH64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083798603)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120326904)\n ELSEIF (HOST_OS_WINDOWS AND HOST_ARCH_X86_64)\n-    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7083801030)\n+    DECLARE_EXTERNAL_RESOURCE(TEST_TOOL_HOST sbr:7120328512)\n \n ENDIF()\ndiff --git a/build/plugins/ytest.py b/build/plugins/ytest.py\nindex 6b1a77e23580..f24ba674a0c4 100644\n--- a/build/plugins/ytest.py\n+++ b/build/plugins/ytest.py\n@@ -24,7 +24,6 @@\n     serialize_list,\n     get_unit_list_variable,\n     deserialize_list,\n-    prepare_env,\n     create_dart_record,\n )\n \n@@ -99,6 +98,19 @@\n     df.UseArcadiaPython.value,\n )\n \n+LINTER_FIELDS_BASE = (\n+    df.LintName.value,\n+    df.LintExtraParams.from_macro_args,\n+    df.TestName.name_from_macro_args,\n+    df.TestedProjectName.unit_name,\n+    df.SourceFolderPath.normalized,\n+    df.TestEnv.value,\n+    df.UseArcadiaPython.value,\n+    df.LintFileProcessingTime.from_macro_args,\n+    df.Linter.value,\n+    df.CustomDependencies.depends_with_linter,\n+)\n+\n tidy_config_map = None\n \n \n@@ -397,13 +409,6 @@ def dump_test(unit, kw):\n     return data\n \n \n-def reference_group_var(varname: str, extensions: list[str] | None = None) -> str:\n-    if extensions is None:\n-        return f'\"${{join=\\\\;:{varname}}}\"'\n-\n-    return serialize_list(f'${{ext={ext};join=\\\\;:{varname}}}' for ext in extensions)\n-\n-\n def count_entries(x):\n     # see (de)serialize_list\n     assert x is None or isinstance(x, str), type(x)\n@@ -693,6 +698,39 @@ def govet(fields, unit, *args):\n         unit.set_property([\"DART_DATA\", data])\n \n \n+@df.with_fields(\n+    CHECK_FIELDS_BASE\n+    + (\n+        df.TestedProjectName.normalized_basename,\n+        df.SourceFolderPath.normalized,\n+        df.TestFiles.flat_args_wo_first,\n+        df.ModuleLang.value,\n+    )\n+)\n+def detekt_report(fields, unit, *args):\n+    flat_args, spec_args = _common.sort_by_keywords(\n+        {\n+            \"DEPENDS\": -1,\n+            \"TIMEOUT\": 1,\n+            \"DATA\": -1,\n+            \"TAG\": -1,\n+            \"REQUIREMENTS\": -1,\n+            \"FORK_MODE\": 1,\n+            \"SPLIT_FACTOR\": 1,\n+            \"FORK_SUBTESTS\": 0,\n+            \"FORK_TESTS\": 0,\n+            \"SIZE\": 1,\n+        },\n+        args,\n+    )\n+\n+    dart_record = create_dart_record(fields, unit, flat_args, spec_args)\n+\n+    data = dump_test(unit, dart_record)\n+    if data:\n+        unit.set_property([\"DART_DATA\", data])\n+\n+\n def onadd_check(unit, *args):\n     if unit.get(\"TIDY\") == \"yes\":\n         # graph changed for clang_tidy tests\n@@ -727,6 +765,8 @@ def onadd_check(unit, *args):\n         gofmt(unit, *args)\n     elif check_type == \"govet\":\n         govet(unit, *args)\n+    elif check_type == \"detekt.report\":\n+        detekt_report(unit, *args)\n \n \n def on_register_no_check_imports(unit):\n@@ -950,32 +990,14 @@ def onsetup_run_python(unit):\n         unit.ondepends('contrib/tools/python')\n \n \n-@_common.lazy\n-def get_linter_configs(unit, config_paths):\n-    rel_config_path = _common.rootrel_arc_src(config_paths, unit)\n-    arc_config_path = unit.resolve_arc_path(rel_config_path)\n-    abs_config_path = unit.resolve(arc_config_path)\n-    with open(abs_config_path, 'r') as fd:\n-        return list(json.load(fd).values())\n-\n-\n @df.with_fields(\n     (\n-        df.LintName.value,\n-        df.TestFiles.py_linter_files,\n-        df.LintConfigs.value,\n-        df.LintExtraParams.from_macro_args,\n-        df.TestName.name_from_macro_args,\n-        df.TestedProjectName.unit_name,\n-        df.SourceFolderPath.normalized,\n-        df.TestEnv.value,\n-        df.UseArcadiaPython.value,\n-        df.LintFileProcessingTime.from_macro_args,\n-        df.Linter.value,\n-        df.CustomDependencies.depends_with_linter,\n+        df.TestFiles.cpp_linter_files,\n+        df.LintConfigs.cpp_configs,\n     )\n+    + LINTER_FIELDS_BASE\n )\n-def on_add_py_linter_check(fields, unit, *args):\n+def on_add_cpp_linter_check(fields, unit, *args):\n     if unit.get(\"TIDY\") == \"yes\":\n         return\n \n@@ -988,8 +1010,8 @@ def on_add_py_linter_check(fields, unit, *args):\n         \"NAME\": 1,\n         \"LINTER\": 1,\n         \"DEPENDS\": unlimited,\n-        \"FILES\": unlimited,\n-        \"CONFIGS\": unlimited,\n+        \"CONFIGS\": 1,\n+        \"CUSTOM_CONFIG\": 1,\n         \"GLOBAL_RESOURCES\": unlimited,\n         \"FILE_PROCESSING_TIME\": 1,\n         \"EXTRA_PARAMS\": unlimited,\n@@ -1012,91 +1034,48 @@ def on_add_py_linter_check(fields, unit, *args):\n         unit.set_property([\"DART_DATA\", data])\n \n \n-def on_add_linter_check(unit, *args):\n+@df.with_fields(\n+    (\n+        df.TestFiles.py_linter_files,\n+        df.LintConfigs.python_configs,\n+    )\n+    + LINTER_FIELDS_BASE\n+)\n+def on_add_py_linter_check(fields, unit, *args):\n     if unit.get(\"TIDY\") == \"yes\":\n         return\n-    source_root_from_prefix = '${ARCADIA_ROOT}/'\n-    source_root_to_prefix = '$S/'\n-    unlimited = -1\n \n     no_lint_value = _common.get_no_lint_value(unit)\n     if no_lint_value in (\"none\", \"none_internal\"):\n         return\n \n+    unlimited = -1\n     keywords = {\n+        \"NAME\": 1,\n+        \"LINTER\": 1,\n         \"DEPENDS\": unlimited,\n-        \"FILES\": unlimited,\n-        \"CONFIGS\": unlimited,\n+        \"CONFIGS\": 1,\n         \"GLOBAL_RESOURCES\": unlimited,\n         \"FILE_PROCESSING_TIME\": 1,\n         \"EXTRA_PARAMS\": unlimited,\n+        \"PROJECT_TO_CONFIG_MAP\": 1,\n+        \"FLAKE_MIGRATIONS_CONFIG\": 1,\n+        \"CUSTOM_CONFIG\": 1,\n     }\n-    flat_args, spec_args = _common.sort_by_keywords(keywords, args)\n-    if len(flat_args) != 2:\n-        unit.message(['ERROR', '_ADD_LINTER_CHECK params: expected 2 free parameters'])\n-        return\n-\n-    configs = []\n-    for cfg in spec_args.get('CONFIGS', []):\n-        filename = unit.resolve(source_root_to_prefix + cfg)\n-        if not os.path.exists(filename):\n-            unit.message(['ERROR', 'Configuration file {} is not found'.format(filename)])\n-            return\n-        configs.append(cfg)\n-    deps = []\n-\n-    lint_name, linter = flat_args\n-    deps.append(os.path.dirname(linter))\n-\n-    test_files = []\n-    for path in spec_args.get('FILES', []):\n-        if path.startswith(source_root_from_prefix):\n-            test_files.append(path.replace(source_root_from_prefix, source_root_to_prefix, 1))\n-        elif path.startswith(source_root_to_prefix):\n-            test_files.append(path)\n-\n-    if lint_name == 'cpp_style':\n-        files_dart = reference_group_var(\"ALL_SRCS\", consts.STYLE_CPP_ALL_EXTS)\n-    else:\n-        if not test_files:\n-            unit.message(['WARN', 'No files to lint for {}'.format(lint_name)])\n-            return\n-        files_dart = serialize_list(test_files)\n-\n-    for arg in spec_args.get('EXTRA_PARAMS', []):\n-        if '=' not in arg:\n-            unit.message(['WARN', 'Wrong EXTRA_PARAMS value: \"{}\". Values must have format \"name=value\".'.format(arg)])\n-            return\n-\n-    deps += spec_args.get('DEPENDS', [])\n-\n-    for dep in deps:\n-        unit.ondepends(dep)\n+    _, spec_args = _common.sort_by_keywords(keywords, args)\n \n-    for resource in spec_args.get('GLOBAL_RESOURCES', []):\n+    global_resources = spec_args.get('GLOBAL_RESOURCES', [])\n+    for resource in global_resources:\n         unit.onpeerdir(resource)\n+    try:\n+        dart_record = create_dart_record(fields, unit, (), spec_args)\n+    except df.DartValueError as e:\n+        if msg := str(e):\n+            unit.message(['WARN', msg])\n+        return\n+    dart_record[df.ScriptRelPath.KEY] = 'custom_lint'\n \n-    test_record = {\n-        'TEST-NAME': lint_name,\n-        'SCRIPT-REL-PATH': 'custom_lint',\n-        'TESTED-PROJECT-NAME': unit.name(),\n-        'SOURCE-FOLDER-PATH': _common.get_norm_unit_path(unit),\n-        'CUSTOM-DEPENDENCIES': \" \".join(deps),\n-        'TEST-ENV': prepare_env(unit.get(\"TEST_ENV_VALUE\")),\n-        'USE_ARCADIA_PYTHON': unit.get('USE_ARCADIA_PYTHON') or '',\n-        # TODO remove FILES, see DEVTOOLS-7052\n-        'FILES': files_dart,\n-        'TEST-FILES': files_dart,\n-        # Linter specific parameters\n-        # TODO Add configs to DATA. See YMAKE-427\n-        'LINT-CONFIGS': serialize_list(configs),\n-        'LINT-NAME': lint_name,\n-        'LINT-FILE-PROCESSING-TIME': spec_args.get('FILE_PROCESSING_TIME', [''])[0],\n-        'LINT-EXTRA-PARAMS': serialize_list(spec_args.get('EXTRA_PARAMS', [])),\n-        'LINTER': linter,\n-    }\n-\n-    data = dump_test(unit, test_record)\n+    data = dump_test(unit, dart_record)\n     if data:\n         unit.set_property([\"DART_DATA\", data])\n \ndiff --git a/contrib/python/more-itertools/py3/tests/test_recipes.py b/contrib/python/more-itertools/py3/tests/test_recipes.py\nindex d3762d49dbef..684a6fcd0b1f 100644\n--- a/contrib/python/more-itertools/py3/tests/test_recipes.py\n+++ b/contrib/python/more-itertools/py3/tests/test_recipes.py\n@@ -2,11 +2,12 @@\n from doctest import DocTestSuite\n from fractions import Fraction\n from functools import reduce\n-from itertools import combinations, count, permutations\n+from itertools import combinations, count, groupby, permutations\n from operator import mul\n from math import factorial\n from sys import version_info\n from unittest import TestCase, skipIf\n+from unittest.mock import patch\n \n import more_itertools as mi\n \n@@ -158,6 +159,22 @@ def test_key(self):\n         self.assertTrue(mi.all_equal('4\u0664\u0ed4\uff14\u09ea', key=int))\n         self.assertFalse(mi.all_equal('Abc', key=str.casefold))\n \n+    @patch('more_itertools.recipes.groupby', autospec=True)\n+    def test_groupby_calls(self, mock_groupby):\n+        next_count = 0\n+\n+        class _groupby(groupby):\n+            def __next__(true_self):\n+                nonlocal next_count\n+                next_count += 1\n+                return super().__next__()\n+\n+        mock_groupby.side_effect = _groupby\n+        iterable = iter('aaaaa')\n+        self.assertTrue(mi.all_equal(iterable))\n+        self.assertEqual(list(iterable), [])\n+        self.assertEqual(next_count, 2)\n+\n \n class QuantifyTests(TestCase):\n     \"\"\"Tests for ``quantify()``\"\"\"\ndiff --git a/library/cpp/yt/memory/unittests/atomic_intrusive_ptr_ut.cpp b/library/cpp/yt/memory/unittests/atomic_intrusive_ptr_ut.cpp\nindex 68489fcdf7cb..47db5325e1aa 100644\n--- a/library/cpp/yt/memory/unittests/atomic_intrusive_ptr_ut.cpp\n+++ b/library/cpp/yt/memory/unittests/atomic_intrusive_ptr_ut.cpp\n@@ -3,12 +3,17 @@\n #include <library/cpp/yt/memory/new.h>\n #include <library/cpp/yt/memory/ref_counted.h>\n #include <library/cpp/yt/memory/atomic_intrusive_ptr.h>\n+#include <library/cpp/yt/memory/leaky_singleton.h>\n+\n+#include <util/system/compiler.h>\n \n namespace NYT {\n namespace {\n \n ////////////////////////////////////////////////////////////////////////////////\n \n+#ifndef _lsan_enabled_\n+\n using ::testing::IsNull;\n using ::testing::NotNull;\n using ::testing::InSequence;\n@@ -168,16 +173,25 @@ class TObjectWithFullRC\n \n ////////////////////////////////////////////////////////////////////////////////\n \n-TEST(TAtomicPtrTest, Empty)\n+TEST(TIntrusiveAtomicPtrTest, Empty)\n {\n     TIntricateObjectPtr emptyPointer;\n     EXPECT_EQ(nullptr, emptyPointer.Get());\n }\n \n-// Reserved ref count.\n-constexpr int RRC = 65535;\n+constexpr int ReservedRefCount = 65535;\n \n-TEST(TAtomicPtrTest, Basic)\n+TEST(TIntrusiveAtomicPtrTest, Reset)\n+{\n+    TIntricateObject object;\n+    TIntricateObjectPtr owningPointer(&object);\n+    TAtomicIntrusivePtr<TIntricateObject> atomicPointer(owningPointer);\n+    atomicPointer.Reset();\n+    EXPECT_EQ(nullptr, atomicPointer.Get());\n+    EXPECT_THAT(object, HasRefCounts(1 + ReservedRefCount, ReservedRefCount, 0));\n+}\n+\n+TEST(TIntrusiveAtomicPtrTest, Basic)\n {\n     TIntricateObject object;\n \n@@ -196,27 +210,27 @@ TEST(TAtomicPtrTest, Basic)\n         TIntricateObjectPtr owningPointer(&object);\n         TAtomicIntrusivePtr<TIntricateObject> atomicPointer(owningPointer);\n \n-        EXPECT_THAT(object, HasRefCounts(2 + RRC, 1, 1));\n+        EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 1, 1));\n         EXPECT_EQ(&object, owningPointer.Get());\n \n \n         auto p1 = atomicPointer.Acquire();\n \n-        EXPECT_THAT(object, HasRefCounts(2 + RRC, 1, 1));\n+        EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 1, 1));\n \n         p1.Reset();\n \n-        EXPECT_THAT(object, HasRefCounts(2 + RRC, 2, 1));\n+        EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 2, 1));\n \n         owningPointer.Reset();\n \n-        EXPECT_THAT(object, HasRefCounts(2 + RRC, 3, 1));\n+        EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 3, 1));\n     }\n \n-    EXPECT_THAT(object, HasRefCounts(2 + RRC, 2 + RRC, 2));\n+    EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 2 + ReservedRefCount, 2));\n }\n \n-TEST(TAtomicPtrTest, BasicConst)\n+TEST(TIntrusiveAtomicPtrTest, BasicConst)\n {\n     const TIntricateObject object;\n \n@@ -235,86 +249,86 @@ TEST(TAtomicPtrTest, BasicConst)\n         TConstIntricateObjectPtr owningPointer(&object);\n         TAtomicIntrusivePtr<const TIntricateObject> atomicPointer(owningPointer);\n \n-        EXPECT_THAT(object, HasRefCounts(2 + RRC, 1, 1));\n+        EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 1, 1));\n         EXPECT_EQ(&object, owningPointer.Get());\n \n \n         auto p1 = atomicPointer.Acquire();\n \n-        EXPECT_THAT(object, HasRefCounts(2 + RRC, 1, 1));\n+        EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 1, 1));\n \n         p1.Reset();\n \n-        EXPECT_THAT(object, HasRefCounts(2 + RRC, 2, 1));\n+        EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 2, 1));\n \n         owningPointer.Reset();\n \n-        EXPECT_THAT(object, HasRefCounts(2 + RRC, 3, 1));\n+        EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 3, 1));\n     }\n \n-    EXPECT_THAT(object, HasRefCounts(2 + RRC, 2 + RRC, 2));\n+    EXPECT_THAT(object, HasRefCounts(2 + ReservedRefCount, 2 + ReservedRefCount, 2));\n }\n \n-TEST(TAtomicPtrTest, Acquire)\n+TEST(TIntrusiveAtomicPtrTest, Acquire)\n {\n     TIntricateObject object;\n     {\n         TAtomicIntrusivePtr<TIntricateObject> atomicPtr{TIntricateObjectPtr(&object)};\n-        EXPECT_THAT(object, HasRefCounts(RRC, 0, 0));\n+        EXPECT_THAT(object, HasRefCounts(ReservedRefCount, 0, 0));\n \n-        for (int i = 0; i < RRC / 2; ++i) {\n+        for (int i = 0; i < ReservedRefCount / 2; ++i) {\n             {\n                 auto tmp = atomicPtr.Acquire();\n-                EXPECT_THAT(object, HasRefCounts(RRC, i, 0));\n+                EXPECT_THAT(object, HasRefCounts(ReservedRefCount, i, 0));\n             }\n-            EXPECT_THAT(object, HasRefCounts(RRC, i + 1, 0));\n+            EXPECT_THAT(object, HasRefCounts(ReservedRefCount, i + 1, 0));\n         }\n \n         {\n             auto tmp = atomicPtr.Acquire();\n-            EXPECT_THAT(object, HasRefCounts(RRC + RRC / 2, RRC / 2, 0));\n+            EXPECT_THAT(object, HasRefCounts(ReservedRefCount + ReservedRefCount / 2, ReservedRefCount / 2, 0));\n         }\n \n-        EXPECT_THAT(object, HasRefCounts(RRC + RRC / 2, RRC / 2 + 1, 0));\n+        EXPECT_THAT(object, HasRefCounts(ReservedRefCount + ReservedRefCount / 2, ReservedRefCount / 2 + 1, 0));\n     }\n \n-    EXPECT_THAT(object, HasRefCounts(RRC + RRC / 2, RRC + RRC / 2, 1));\n+    EXPECT_THAT(object, HasRefCounts(ReservedRefCount + ReservedRefCount / 2, ReservedRefCount + ReservedRefCount / 2, 1));\n }\n \n-TEST(TAtomicPtrTest, AcquireConst)\n+TEST(TIntrusiveAtomicPtrTest, AcquireConst)\n {\n     const TIntricateObject object;\n     {\n         TAtomicIntrusivePtr<const TIntricateObject> atomicPtr{TConstIntricateObjectPtr(&object)};\n-        EXPECT_THAT(object, HasRefCounts(RRC, 0, 0));\n+        EXPECT_THAT(object, HasRefCounts(ReservedRefCount, 0, 0));\n \n-        for (int i = 0; i < RRC / 2; ++i) {\n+        for (int i = 0; i < ReservedRefCount / 2; ++i) {\n             {\n                 auto tmp = atomicPtr.Acquire();\n-                EXPECT_THAT(object, HasRefCounts(RRC, i, 0));\n+                EXPECT_THAT(object, HasRefCounts(ReservedRefCount, i, 0));\n             }\n-            EXPECT_THAT(object, HasRefCounts(RRC, i + 1, 0));\n+            EXPECT_THAT(object, HasRefCounts(ReservedRefCount, i + 1, 0));\n         }\n \n         {\n             auto tmp = atomicPtr.Acquire();\n-            EXPECT_THAT(object, HasRefCounts(RRC + RRC / 2, RRC / 2, 0));\n+            EXPECT_THAT(object, HasRefCounts(ReservedRefCount + ReservedRefCount / 2, ReservedRefCount / 2, 0));\n         }\n \n-        EXPECT_THAT(object, HasRefCounts(RRC + RRC / 2, RRC / 2 + 1, 0));\n+        EXPECT_THAT(object, HasRefCounts(ReservedRefCount + ReservedRefCount / 2, ReservedRefCount / 2 + 1, 0));\n     }\n \n-    EXPECT_THAT(object, HasRefCounts(RRC + RRC / 2, RRC + RRC / 2, 1));\n+    EXPECT_THAT(object, HasRefCounts(ReservedRefCount + ReservedRefCount / 2, ReservedRefCount + ReservedRefCount / 2, 1));\n }\n \n-TEST(TAtomicPtrTest, CAS)\n+TEST(TIntrusiveAtomicPtrTest, CAS)\n {\n     TIntricateObject o1;\n     TIntricateObject o2;\n     {\n \n         TAtomicIntrusivePtr<TIntricateObject> atomicPtr{TIntricateObjectPtr(&o1)};\n-        EXPECT_THAT(o1, HasRefCounts(RRC, 0, 0));\n+        EXPECT_THAT(o1, HasRefCounts(ReservedRefCount, 0, 0));\n \n         TIntricateObjectPtr p2(&o2);\n         EXPECT_THAT(o2, HasRefCounts(1, 0, 0));\n@@ -323,28 +337,28 @@ TEST(TAtomicPtrTest, CAS)\n         EXPECT_TRUE(atomicPtr.CompareAndSwap(rawPtr, std::move(p2)));\n         EXPECT_EQ(rawPtr, &o1);\n \n-        EXPECT_THAT(o1, HasRefCounts(RRC, RRC, 1));\n-        EXPECT_THAT(o2, HasRefCounts(RRC, 0, 0));\n+        EXPECT_THAT(o1, HasRefCounts(ReservedRefCount, ReservedRefCount, 1));\n+        EXPECT_THAT(o2, HasRefCounts(ReservedRefCount, 0, 0));\n \n         rawPtr = nullptr;\n         EXPECT_FALSE(atomicPtr.CompareAndSwap(rawPtr, TIntricateObjectPtr(&o1)));\n         EXPECT_EQ(rawPtr, &o2);\n \n-        EXPECT_THAT(o1, HasRefCounts(2 * RRC, 2 * RRC, 2));\n-        EXPECT_THAT(o2, HasRefCounts(RRC, 0, 0));\n+        EXPECT_THAT(o1, HasRefCounts(2 * ReservedRefCount, 2 * ReservedRefCount, 2));\n+        EXPECT_THAT(o2, HasRefCounts(ReservedRefCount, 0, 0));\n     }\n \n-    EXPECT_THAT(o2, HasRefCounts(RRC, RRC, 1));\n+    EXPECT_THAT(o2, HasRefCounts(ReservedRefCount, ReservedRefCount, 1));\n }\n \n-TEST(TAtomicPtrTest, CASConst)\n+TEST(TIntrusiveAtomicPtrTest, CASConst)\n {\n     const TIntricateObject o1;\n     const TIntricateObject o2;\n     {\n \n         TAtomicIntrusivePtr<const TIntricateObject> atomicPtr{TConstIntricateObjectPtr(&o1)};\n-        EXPECT_THAT(o1, HasRefCounts(RRC, 0, 0));\n+        EXPECT_THAT(o1, HasRefCounts(ReservedRefCount, 0, 0));\n \n         TConstIntricateObjectPtr p2(&o2);\n         EXPECT_THAT(o2, HasRefCounts(1, 0, 0));\n@@ -353,20 +367,45 @@ TEST(TAtomicPtrTest, CASConst)\n         EXPECT_TRUE(atomicPtr.CompareAndSwap(rawPtr, std::move(p2)));\n         EXPECT_EQ(rawPtr, &o1);\n \n-        EXPECT_THAT(o1, HasRefCounts(RRC, RRC, 1));\n-        EXPECT_THAT(o2, HasRefCounts(RRC, 0, 0));\n+        EXPECT_THAT(o1, HasRefCounts(ReservedRefCount, ReservedRefCount, 1));\n+        EXPECT_THAT(o2, HasRefCounts(ReservedRefCount, 0, 0));\n \n         rawPtr = nullptr;\n         EXPECT_FALSE(atomicPtr.CompareAndSwap(rawPtr, TConstIntricateObjectPtr(&o1)));\n         EXPECT_EQ(rawPtr, &o2);\n \n-        EXPECT_THAT(o1, HasRefCounts(2 * RRC, 2 * RRC, 2));\n-        EXPECT_THAT(o2, HasRefCounts(RRC, 0, 0));\n+        EXPECT_THAT(o1, HasRefCounts(2 * ReservedRefCount, 2 * ReservedRefCount, 2));\n+        EXPECT_THAT(o2, HasRefCounts(ReservedRefCount, 0, 0));\n     }\n \n-    EXPECT_THAT(o2, HasRefCounts(RRC, RRC, 1));\n+    EXPECT_THAT(o2, HasRefCounts(ReservedRefCount, ReservedRefCount, 1));\n }\n \n+TEST(TIntrusiveAtomicPtrTest, LSan)\n+{\n+    struct S final\n+    { };\n+\n+    struct TSingleton\n+    {\n+        TSingleton()\n+        {\n+            for (auto& ptr : Ptrs) {\n+                ptr.Store(New<S>());\n+                // Clobber pointer bits to prevent LSan from tracing the pointer.\n+                ptr.Acquire();\n+            }\n+        }\n+\n+        // LSan has some issues detecting leaks when just one allocation is made.\n+        std::array<TAtomicIntrusivePtr<S>, 100> Ptrs;\n+    };\n+\n+    LeakySingleton<TSingleton>();\n+}\n+\n+#endif\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n } // namespace\ndiff --git a/library/cpp/yt/string/unittests/format_ut.cpp b/library/cpp/yt/string/unittests/format_ut.cpp\nindex aa820fd5afa0..ac3be99ad97b 100644\n--- a/library/cpp/yt/string/unittests/format_ut.cpp\n+++ b/library/cpp/yt/string/unittests/format_ut.cpp\n@@ -78,6 +78,7 @@ static_assert(CFormattable<TInstant>);\n struct TUnformattable\n { };\n static_assert(!CFormattable<TUnformattable>);\n+static_assert(!CFormattable<std::variant<TUnformattable>>);\n \n static_assert(CFormattable<TWithCustomFlags>);\n \ndiff --git a/yt/yt/client/unittests/connection_ut.cpp b/yt/yt/client/unittests/connection_ut.cpp\nindex 336d1a5b6d0c..8e9a0dc10eee 100644\n--- a/yt/yt/client/unittests/connection_ut.cpp\n+++ b/yt/yt/client/unittests/connection_ut.cpp\n@@ -23,13 +23,13 @@ TEST_F(TProxyUrlTest, ParseProxyUrlAliasingRules)\n TEST_F(TProxyUrlTest, ApplyProxyUrlAliasingRules)\n {\n     {\n-        TString url = \"markov\";\n+        std::string url = \"markov\";\n         ApplyProxyUrlAliasingRules(url, THashMap<std::string, std::string>({{\"primary\", \"localhost:12345\"}}));\n         ASSERT_EQ(url, \"markov\");\n     }\n     // See ENV in ya.make\n     {\n-        TString url = \"primary\";\n+        std::string url = \"primary\";\n         ApplyProxyUrlAliasingRules(url, THashMap<std::string, std::string>({{\"primary\", \"localhost:12345\"}}));\n         ASSERT_EQ(url, \"localhost:12345\");\n     }\ndiff --git a/yt/yt/client/unittests/query_builder_ut.cpp b/yt/yt/client/unittests/query_builder_ut.cpp\nindex 2a6313c49583..687f95d5c068 100644\n--- a/yt/yt/client/unittests/query_builder_ut.cpp\n+++ b/yt/yt/client/unittests/query_builder_ut.cpp\n@@ -27,6 +27,8 @@ TEST(TQueryBuilderTest, Simple)\n     b.AddGroupByExpression(\"x + y * z\", \"group_expr\");\n     b.AddGroupByExpression(\"x - 1\");\n \n+    b.SetWithTotals(EWithTotalsMode::BeforeHaving);\n+\n     b.AddHavingConjunct(\"group_expr > 42\");\n     b.AddHavingConjunct(\"group_expr < 420\");\n \n@@ -46,6 +48,7 @@ TEST(TQueryBuilderTest, Simple)\n         \"LEFT JOIN [table2] AS [lookup2] ON (idx) = (lookup2.idx) \"\n         \"WHERE (x > y_alias) AND (y = 177 OR y % 2 = 0) \"\n         \"GROUP BY (x + y * z) AS group_expr, (x - 1) \"\n+        \"WITH TOTALS \"\n         \"HAVING (group_expr > 42) AND (group_expr < 420) \"\n         \"ORDER BY (z) ASC, (x) DESC, (x + y) DESC, (z - y_alias) \"\n         \"LIMIT 43\");\n@@ -62,6 +65,23 @@ TEST(TQueryBuilderTest, SourceAlias)\n         \"FROM [//t] AS t_alias\");\n }\n \n+TEST(TQueryBuilderTest, TotalsAfterHaving)\n+{\n+    TQueryBuilder b;\n+    b.AddSelectExpression(\"x\");\n+    b.SetSource(\"//t\");\n+    b.AddGroupByExpression(\"x - 1\");\n+    b.SetWithTotals(EWithTotalsMode::AfterHaving);\n+    b.AddHavingConjunct(\"group_expr > 42\");\n+\n+    EXPECT_EQ(b.Build(),\n+        \"(x) \"\n+        \"FROM [//t] \"\n+        \"GROUP BY (x - 1) \"\n+        \"HAVING (group_expr > 42) \"\n+        \"WITH TOTALS\");\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n } // namespace\ndiff --git a/yt/yt/core/http/unittests/http_ut.cpp b/yt/yt/core/http/unittests/http_ut.cpp\nindex e5bc967d7309..cda7dea65f85 100644\n--- a/yt/yt/core/http/unittests/http_ut.cpp\n+++ b/yt/yt/core/http/unittests/http_ut.cpp\n@@ -159,6 +159,11 @@ struct TFakeConnection\n     TString Input;\n     TString Output;\n \n+    TConnectionId GetId() const override\n+    {\n+        return {};\n+    }\n+\n     bool SetNoDelay() override\n     {\n         return true;\n@@ -216,12 +221,12 @@ struct TFakeConnection\n         THROW_ERROR_EXCEPTION(\"Not implemented\");\n     }\n \n-    const TNetworkAddress& LocalAddress() const override\n+    const TNetworkAddress& GetLocalAddress() const override\n     {\n         THROW_ERROR_EXCEPTION(\"Not implemented\");\n     }\n \n-    const TNetworkAddress& RemoteAddress() const override\n+    const TNetworkAddress& GetRemoteAddress() const override\n     {\n         THROW_ERROR_EXCEPTION(\"Not implemented\");\n     }\n@@ -1149,7 +1154,7 @@ TEST_P(THttpServerTest, ConnectionKeepAlive)\n \n         auto response = New<THttpInput>(\n             connection,\n-            connection->RemoteAddress(),\n+            connection->GetRemoteAddress(),\n             Poller->GetInvoker(),\n             EMessageType::Response,\n             New<THttpIOConfig>());\n@@ -1183,7 +1188,7 @@ TEST_P(THttpServerTest, ConnectionKeepAlive)\n \n         auto response = New<THttpInput>(\n             connection,\n-            connection->RemoteAddress(),\n+            connection->GetRemoteAddress(),\n             Poller->GetInvoker(),\n             EMessageType::Response,\n             New<THttpIOConfig>());\ndiff --git a/yt/yt/core/misc/unittests/boolean_formula_ut.cpp b/yt/yt/core/misc/unittests/boolean_formula_ut.cpp\nindex 0bae531297b3..94e43cbf2d55 100644\n--- a/yt/yt/core/misc/unittests/boolean_formula_ut.cpp\n+++ b/yt/yt/core/misc/unittests/boolean_formula_ut.cpp\n@@ -12,8 +12,9 @@ class TBooleanFormulaTest\n     : public ::testing::Test\n     , public ::testing::WithParamInterface<std::tuple<\n         const char*,\n-        std::vector<TString>,\n-        bool>>\n+        std::vector<std::string>,\n+        bool\n+    >>\n { };\n \n TEST_P(TBooleanFormulaTest, Test)\n@@ -35,31 +36,31 @@ INSTANTIATE_TEST_SUITE_P(\n     TBooleanFormulaTest,\n     TBooleanFormulaTest,\n     ::testing::Values(\n-        std::tuple(\"\", std::vector<TString>{}, true),\n-        std::tuple(\"\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"a\", std::vector<TString>{\"b\"}, false),\n-        std::tuple(\"!a\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"b\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"a|b\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"a & b\", std::vector<TString>{\"b\"}, false),\n-        std::tuple(\"(b)\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"a|(a|b)\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"(a|b)&(!a&b)\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"a&b\", std::vector<TString>{\"a\", \"b\"}, true),\n-        std::tuple(\"(a|c)&(b|c)\", std::vector<TString>{\"a\", \"b\"}, true),\n-        std::tuple(\"(a|b)&c\", std::vector<TString>{\"a\", \"b\"}, false),\n-        std::tuple(\"a|b|c\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"!a & b & !c\", std::vector<TString>{\"b\"}, true),\n-        std::tuple(\"var-1 | !var/2\", std::vector<TString>{\"var-1\"}, true),\n-        std::tuple(\"var-1 | !var/2\", std::vector<TString>{\"var/2\"}, false),\n-        std::tuple(\"var-1 | !var/2\", std::vector<TString>{}, true),\n-        std::tuple(\"!in-\", std::vector<TString>{}, true),\n-        std::tuple(\"in/|x\", std::vector<TString>{\"in/\"}, true),\n-        std::tuple(\"%true\", std::vector<TString>{\"\"}, true),\n-        std::tuple(\"%false\", std::vector<TString>{\"false\"}, false),\n-        std::tuple(\"%true|%false\", std::vector<TString>{\"\"}, true),\n-        std::tuple(\"a.b.c-d.e:1234\", std::vector<TString>{\"a.b.c-d.e:1234\"}, true),\n-        std::tuple(\"!a.b.c-d.e:1234\", std::vector<TString>{\"a.b.c-d.e:1234\"}, false)\n+        std::tuple(\"\", std::vector<std::string>{}, true),\n+        std::tuple(\"\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"a\", std::vector<std::string>{\"b\"}, false),\n+        std::tuple(\"!a\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"b\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"a|b\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"a & b\", std::vector<std::string>{\"b\"}, false),\n+        std::tuple(\"(b)\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"a|(a|b)\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"(a|b)&(!a&b)\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"a&b\", std::vector<std::string>{\"a\", \"b\"}, true),\n+        std::tuple(\"(a|c)&(b|c)\", std::vector<std::string>{\"a\", \"b\"}, true),\n+        std::tuple(\"(a|b)&c\", std::vector<std::string>{\"a\", \"b\"}, false),\n+        std::tuple(\"a|b|c\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"!a & b & !c\", std::vector<std::string>{\"b\"}, true),\n+        std::tuple(\"var-1 | !var/2\", std::vector<std::string>{\"var-1\"}, true),\n+        std::tuple(\"var-1 | !var/2\", std::vector<std::string>{\"var/2\"}, false),\n+        std::tuple(\"var-1 | !var/2\", std::vector<std::string>{}, true),\n+        std::tuple(\"!in-\", std::vector<std::string>{}, true),\n+        std::tuple(\"in/|x\", std::vector<std::string>{\"in/\"}, true),\n+        std::tuple(\"%true\", std::vector<std::string>{\"\"}, true),\n+        std::tuple(\"%false\", std::vector<std::string>{\"false\"}, false),\n+        std::tuple(\"%true|%false\", std::vector<std::string>{\"\"}, true),\n+        std::tuple(\"a.b.c-d.e:1234\", std::vector<std::string>{\"a.b.c-d.e:1234\"}, true),\n+        std::tuple(\"!a.b.c-d.e:1234\", std::vector<std::string>{\"a.b.c-d.e:1234\"}, false)\n ));\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -165,7 +166,7 @@ TEST(TBooleanFormulaTest, ExternalOperators)\n     auto aOrB = formulaA | formulaB;\n     auto notA = !formulaA;\n \n-    for (auto vars : std::vector<std::vector<TString>>{{}, {\"a\"}, {\"b\"}, {\"a\", \"b\"}}) {\n+    for (auto vars : std::vector<std::vector<std::string>>{{}, {\"a\"}, {\"b\"}, {\"a\", \"b\"}}) {\n         bool resA = formulaA.IsSatisfiedBy(vars);\n         bool resB = formulaB.IsSatisfiedBy(vars);\n \n@@ -175,25 +176,25 @@ TEST(TBooleanFormulaTest, ExternalOperators)\n     }\n \n     EXPECT_FALSE((!MakeBooleanFormula(\"a | b\"))\n-        .IsSatisfiedBy(std::vector<TString>{\"b\"}));\n+        .IsSatisfiedBy(std::vector<std::string>{\"b\"}));\n \n     EXPECT_EQ((formulaA & formulaB).GetFormula(), \"(a) & (b)\");\n     EXPECT_EQ((formulaA | formulaB).GetFormula(), \"(a) | (b)\");\n     EXPECT_EQ((!formulaA).GetFormula(), \"!(a)\");\n \n     auto empty = MakeBooleanFormula(\"\");\n-    EXPECT_TRUE(empty.IsSatisfiedBy(THashSet<TString>{}));\n-    EXPECT_FALSE((!empty).IsSatisfiedBy(THashSet<TString>{}));\n-    EXPECT_TRUE((empty | !empty).IsSatisfiedBy(THashSet<TString>{}));\n-\n-    EXPECT_TRUE((empty | formulaA).IsSatisfiedBy(THashSet<TString>{}));\n-    EXPECT_TRUE((empty | formulaA).IsSatisfiedBy(THashSet<TString>{\"a\"}));\n-    EXPECT_TRUE((formulaA | empty).IsSatisfiedBy(THashSet<TString>{}));\n-    EXPECT_TRUE((formulaA | empty).IsSatisfiedBy(THashSet<TString>{\"a\"}));\n-    EXPECT_FALSE((empty & formulaA).IsSatisfiedBy(THashSet<TString>{}));\n-    EXPECT_TRUE((empty & formulaA).IsSatisfiedBy(THashSet<TString>{\"a\"}));\n-    EXPECT_FALSE((formulaA & empty).IsSatisfiedBy(THashSet<TString>{}));\n-    EXPECT_TRUE((formulaA & empty).IsSatisfiedBy(THashSet<TString>{\"a\"}));\n+    EXPECT_TRUE(empty.IsSatisfiedBy(THashSet<std::string>{}));\n+    EXPECT_FALSE((!empty).IsSatisfiedBy(THashSet<std::string>{}));\n+    EXPECT_TRUE((empty | !empty).IsSatisfiedBy(THashSet<std::string>{}));\n+\n+    EXPECT_TRUE((empty | formulaA).IsSatisfiedBy(THashSet<std::string>{}));\n+    EXPECT_TRUE((empty | formulaA).IsSatisfiedBy(THashSet<std::string>{\"a\"}));\n+    EXPECT_TRUE((formulaA | empty).IsSatisfiedBy(THashSet<std::string>{}));\n+    EXPECT_TRUE((formulaA | empty).IsSatisfiedBy(THashSet<std::string>{\"a\"}));\n+    EXPECT_FALSE((empty & formulaA).IsSatisfiedBy(THashSet<std::string>{}));\n+    EXPECT_TRUE((empty & formulaA).IsSatisfiedBy(THashSet<std::string>{\"a\"}));\n+    EXPECT_FALSE((formulaA & empty).IsSatisfiedBy(THashSet<std::string>{}));\n+    EXPECT_TRUE((formulaA & empty).IsSatisfiedBy(THashSet<std::string>{\"a\"}));\n }\n \n ////////////////////////////////////////////////////////////////////////////////\ndiff --git a/yt/yt/core/rpc/unittests/lib/test_service.cpp b/yt/yt/core/rpc/unittests/lib/test_service.cpp\nindex f0994b55e367..afd60131da13 100644\n--- a/yt/yt/core/rpc/unittests/lib/test_service.cpp\n+++ b/yt/yt/core/rpc/unittests/lib/test_service.cpp\n@@ -20,6 +20,10 @@ using namespace NConcurrency;\n \n ////////////////////////////////////////////////////////////////////////////////\n \n+YT_DEFINE_GLOBAL(std::unique_ptr<NThreading::TEvent>, Latch_);\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n class TTestService\n     : public ITestService\n     , public TServiceBase\n@@ -54,6 +58,10 @@ class TTestService\n             .SetQueueSizeLimit(20)\n             .SetConcurrencyByteLimit(10_MB)\n             .SetQueueByteSizeLimit(20_MB));\n+        RegisterMethod(RPC_SERVICE_METHOD_DESC(LatchedCall)\n+            .SetCancelable(true)\n+            .SetConcurrencyLimit(10)\n+            .SetQueueSizeLimit(20));\n         RegisterMethod(RPC_SERVICE_METHOD_DESC(SlowCanceledCall)\n             .SetCancelable(true));\n         RegisterMethod(RPC_SERVICE_METHOD_DESC(RequestBytesThrottledCall));\n@@ -166,6 +174,15 @@ class TTestService\n         context->Reply();\n     }\n \n+    DECLARE_RPC_SERVICE_METHOD(NTestRpc, LatchedCall)\n+    {\n+        context->SetRequestInfo();\n+        if (request->wait_on_latch()) {\n+            Latch_()->Wait();\n+        }\n+        context->Reply();\n+    }\n+\n     DECLARE_RPC_SERVICE_METHOD(NTestRpc, SlowCanceledCall)\n     {\n         try {\n@@ -396,4 +413,29 @@ ITestServicePtr CreateTestService(\n \n ////////////////////////////////////////////////////////////////////////////////\n \n+void ReleaseLatchedCalls()\n+{\n+    if (!Latch_()) {\n+        return;\n+    }\n+\n+    Latch_()->NotifyAll();\n+}\n+\n+void MaybeInitLatch()\n+{\n+    if (!Latch_()) {\n+        Latch_() = std::make_unique<NThreading::TEvent>();\n+    }\n+}\n+\n+void ResetLatch()\n+{\n+    if (Latch_()) {\n+        Latch_().reset();\n+    }\n+}\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n } // namespace NYT::NRpc\ndiff --git a/yt/yt/core/rpc/unittests/lib/test_service.h b/yt/yt/core/rpc/unittests/lib/test_service.h\nindex 3bc224eee8a3..bfb9ebd149d6 100644\n--- a/yt/yt/core/rpc/unittests/lib/test_service.h\n+++ b/yt/yt/core/rpc/unittests/lib/test_service.h\n@@ -33,6 +33,7 @@ class TTestProxy\n     DEFINE_RPC_PROXY_METHOD(NTestRpc, NotRegistered);\n     DEFINE_RPC_PROXY_METHOD(NTestRpc, SlowCall);\n     DEFINE_RPC_PROXY_METHOD(NTestRpc, SlowCanceledCall);\n+    DEFINE_RPC_PROXY_METHOD(NTestRpc, LatchedCall);\n     DEFINE_RPC_PROXY_METHOD(NTestRpc, NoReply);\n     DEFINE_RPC_PROXY_METHOD(NTestRpc, FlakyCall);\n     DEFINE_RPC_PROXY_METHOD(NTestRpc, RequireCoolFeature);\n@@ -75,4 +76,10 @@ ITestServicePtr CreateTestService(\n \n ////////////////////////////////////////////////////////////////////////////////\n \n+void ReleaseLatchedCalls();\n+void MaybeInitLatch();\n+void ResetLatch();\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n } // namespace NYT::NRpc\ndiff --git a/yt/yt/core/rpc/unittests/lib/test_service.proto b/yt/yt/core/rpc/unittests/lib/test_service.proto\nindex 8ef02ef1f5d2..d126bea68f7c 100644\n--- a/yt/yt/core/rpc/unittests/lib/test_service.proto\n+++ b/yt/yt/core/rpc/unittests/lib/test_service.proto\n@@ -130,6 +130,17 @@ message TRspSlowCanceledCall\n \n ////////////////////////////////////////////////////////////////////////////////\n \n+message TReqLatchedCall\n+{\n+    optional bool wait_on_latch = 1 [default = true];\n+}\n+\n+message TRspLatchedCall\n+{\n+}\n+\n+////////////////////////////////////////////////////////////////////////////////\n+\n message TReqRequestBytesThrottledCall\n {\n }\ndiff --git a/yt/yt/core/rpc/unittests/rpc_ut.cpp b/yt/yt/core/rpc/unittests/rpc_ut.cpp\nindex 6b67d5f11721..146a3cad28ef 100644\n--- a/yt/yt/core/rpc/unittests/rpc_ut.cpp\n+++ b/yt/yt/core/rpc/unittests/rpc_ut.cpp\n@@ -787,6 +787,8 @@ TYPED_TEST(TRpcTest, SlowCall)\n \n TYPED_TEST(TRpcTest, RequestQueueSizeLimit)\n {\n+    MaybeInitLatch();\n+\n     std::vector<TFuture<void>> futures;\n     std::vector<TTestProxy> proxies;\n \n@@ -798,7 +800,7 @@ TYPED_TEST(TRpcTest, RequestQueueSizeLimit)\n     }\n \n     for (int i = 0; i <= 30; ++i) {\n-        auto req = proxies[i].SlowCall();\n+        auto req = proxies[i].LatchedCall();\n         futures.push_back(req->Invoke().AsVoid());\n     }\n \n@@ -806,11 +808,14 @@ TYPED_TEST(TRpcTest, RequestQueueSizeLimit)\n     {\n         TTestProxy proxy(this->CreateChannel());\n         proxy.SetDefaultTimeout(TDuration::Seconds(60.0));\n-        auto req = proxy.SlowCall();\n+        auto req = proxy.LatchedCall();\n         EXPECT_EQ(NRpc::EErrorCode::RequestQueueSizeLimitExceeded, req->Invoke().Get().GetCode());\n     }\n+    ReleaseLatchedCalls();\n \n     EXPECT_TRUE(AllSucceeded(std::move(futures)).Get().IsOK());\n+\n+    ResetLatch();\n }\n \n TYPED_TEST(TNotGrpcTest, RequesMemoryPressureException)\n@@ -968,19 +973,15 @@ TYPED_TEST(TNotGrpcTest, RequestQueueByteSizeLimit)\n \n TYPED_TEST(TRpcTest, ConcurrencyLimit)\n {\n-    auto shared_counter = std::make_shared<std::atomic<int>>(0);\n+    MaybeInitLatch();\n \n     std::vector<TFuture<void>> futures;\n     for (int i = 0; i < 10; ++i) {\n         TTestProxy proxy(this->CreateChannel());\n         proxy.SetDefaultTimeout(TDuration::Seconds(10.0));\n-        auto req = proxy.SlowCall();\n+        auto req = proxy.LatchedCall();\n         futures.push_back(\n-            req->Invoke()\n-                .AsVoid()\n-                .Apply(BIND([counter = shared_counter] {\n-                    counter->fetch_add(1);\n-                })));\n+            req->Invoke().AsVoid());\n     }\n \n     Sleep(TDuration::MilliSeconds(200));\n@@ -988,18 +989,21 @@ TYPED_TEST(TRpcTest, ConcurrencyLimit)\n     TFuture<void> backlogFuture;\n     {\n         TTestProxy proxy(this->CreateChannel());\n-        auto req = proxy.SlowCall();\n+        auto req = proxy.LatchedCall();\n+        req->set_wait_on_latch(false);\n         backlogFuture =\n-            req->Invoke()\n-                .AsVoid()\n-                .Apply(BIND([counter = shared_counter] {\n-                    EXPECT_EQ(counter->load(), 10);\n-                }));\n+            req->Invoke().AsVoid();\n     }\n \n+    Sleep(TDuration::Seconds(2));\n+    EXPECT_FALSE(backlogFuture.IsSet());\n+    ReleaseLatchedCalls();\n+\n     EXPECT_TRUE(AllSucceeded(std::move(futures)).Get().IsOK());\n \n     EXPECT_TRUE(backlogFuture.Get().IsOK());\n+\n+    ResetLatch();\n }\n \n TYPED_TEST(TRpcTest, NoReply)\ndiff --git a/yt/yt/core/ytree/unittests/yson_schema_ut.cpp b/yt/yt/core/ytree/unittests/yson_schema_ut.cpp\nindex 220e38975a64..88df8268a290 100644\n--- a/yt/yt/core/ytree/unittests/yson_schema_ut.cpp\n+++ b/yt/yt/core/ytree/unittests/yson_schema_ut.cpp\n@@ -157,6 +157,20 @@ struct TTestStructWithCustomType\n     }\n };\n \n+struct TTestStructWithUndefinedType\n+    : public TYsonStruct\n+{\n+    NYT::NYTree::TYsonStructPtr UndefinedTypeField;\n+\n+    REGISTER_YSON_STRUCT(TTestStructWithUndefinedType);\n+\n+    static void Register(TRegistrar registrar)\n+    {\n+        registrar.Parameter(\"undefined_type_field\", &TThis::UndefinedTypeField)\n+            .Optional();\n+    }\n+};\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n void CheckSchema(const TYsonStructPtr& ysonStruct, TStringBuf expected)\n@@ -236,6 +250,30 @@ TEST(TYsonStructSchemaTest, TestYsonStructWithCustomType)\n             ]})\");\n }\n \n+TEST(TYsonStructSchemaTest, TestYsonStructWithUndefinedType)\n+{\n+    auto ysonStruct = New<TTestStructWithUndefinedType>();\n+    CheckSchema(\n+        ysonStruct,\n+        R\"({type_name=\"struct\";\n+            members=[\n+                {\n+                    name=\"undefined_type_field\";\n+                    type={type_name=\"optional\";item={type_name=\"struct\";members=[];};};\n+                };\n+            ]})\");\n+    ysonStruct->UndefinedTypeField = New<TTestSubStruct>();\n+    CheckSchema(\n+        ysonStruct,\n+        R\"({type_name=\"struct\";\n+            members=[\n+                {\n+                    name=\"undefined_type_field\";\n+                    type={type_name=\"optional\";item={type_name=\"struct\";members=[{name=\"my_uint\";type=\"uint32\";}]}};\n+                };\n+            ]})\");\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n \n } // namespace\n",
  "problem_statement": "Queries Generator: Add YtSaurus support\n### Changelog entry <!-- a user-readable short description of changes introduced in this PR -->\r\n\r\n...\r\n\r\n### Changelog category <!-- remove all except one -->\r\n\r\n* Not for changelog (changelog entry is not required)\r\n\r\n### Additional information\r\n\r\n...\r\n\n",
  "hints_text": "<!-- status pr=2582, preset=linux-x86_64-release-cmake14, run=5194 -->\n:white_circle: `2024-03-09 17:22:39 UTC` Pre-commit [check](https://github.com/ydb-platform/ydb/actions/runs/8216075517/job/22470226126) for 49e4b0df281adaf06798a0aedbbda8a69b1e5318 has started.\n:white_circle: `2024-03-09 17:22:41 UTC` Build **linux-x86_64-release-cmake14** is running...\n:green_circle: `2024-03-09 17:25:51 UTC` Build successful.\n<!-- status pr=2582, preset=linux-x86_64-relwithdebinfo, run=5194 -->\n:white_circle: `2024-03-09 17:22:50 UTC` Pre-commit [check](https://github.com/ydb-platform/ydb/actions/runs/8216075517/job/22470225961) for 49e4b0df281adaf06798a0aedbbda8a69b1e5318 has started.\n:white_circle: `2024-03-09 17:22:52 UTC` Build **linux-x86_64-relwithdebinfo** is running...\n:green_circle: `2024-03-09 17:24:09 UTC` Build successful.\n:white_circle: `2024-03-09 17:24:22 UTC` Tests are running...\n:red_circle: `2024-03-09 18:57:54 UTC` Some tests failed, follow the links below.\n\n[Test history](https://nebius.testmo.net/automation/runs/view/17505)\n| TESTS | PASSED | ERRORS | FAILED | SKIPPED | MUTED<sup>[?](https://github.com/ydb-platform/ydb/tree/main/.github/config/muted_ya.txt \"All mute rules are defined here\")</sup> |\n| ---: | ---: | ---: | ---: | ---: | ---: |\n| [68291](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64/summary/ya-test.html) | [57330](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64/summary/ya-test.html#PASS) | 0 | [9](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64/summary/ya-test.html#FAIL) | [10933](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64/summary/ya-test.html#SKIP) | [19](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64/summary/ya-test.html#MUTE) |\n<!-- status pr=2582, preset=linux-x86_64-release-asan, run=5194 -->\n:white_circle: `2024-03-09 17:22:55 UTC` Pre-commit [check](https://github.com/ydb-platform/ydb/actions/runs/8216075517/job/22470226037) for 49e4b0df281adaf06798a0aedbbda8a69b1e5318 has started.\n:white_circle: `2024-03-09 17:22:57 UTC` Build **linux-x86_64-release-asan** is running...\n:green_circle: `2024-03-09 17:24:15 UTC` Build successful.\n:white_circle: `2024-03-09 17:24:27 UTC` Tests are running...\n:red_circle: `2024-03-09 19:22:40 UTC` Some tests failed, follow the links below.\n\n[Test history](https://nebius.testmo.net/automation/runs/view/17506)\n| TESTS | PASSED | ERRORS | FAILED | SKIPPED | MUTED<sup>[?](https://github.com/ydb-platform/ydb/tree/main/.github/config/muted_ya.txt \"All mute rules are defined here\")</sup> |\n| ---: | ---: | ---: | ---: | ---: | ---: |\n| [15010](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64-asan/summary/ya-test.html) | [14427](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64-asan/summary/ya-test.html#PASS) | 0 | [71](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64-asan/summary/ya-test.html#FAIL) | [485](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64-asan/summary/ya-test.html#SKIP) | [27](https://storage.yandexcloud.net/ydb-gh-logs/ydb-platform/ydb/PR-check/8216075517/ya-x86-64-asan/summary/ya-test.html#MUTE) |",
  "created_at": "2024-09-26T14:44:48Z",
  "modified_files": [
    "build/conf/a.yaml",
    "build/conf/go.conf",
    "build/conf/java.conf",
    "build/conf/linkers/ld.conf",
    "build/conf/linkers/msvc_linker.conf",
    "build/conf/python.conf",
    "build/conf/settings.conf",
    "build/export_generators/cmake/cmake/conan-profiles/android.arm64.profile",
    "build/export_generators/cmake/cmake/conan-profiles/android.armv7.profile",
    "build/export_generators/cmake/cmake/conan-profiles/android.x86.profile",
    "build/export_generators/cmake/cmake/conan-profiles/android.x86_64.profile",
    "build/export_generators/cmake/cmake/conan-profiles/linux.aarch64.profile",
    "build/export_generators/cmake/cmake/conan-profiles/linux.ppc64le.profile",
    "build/export_generators/cmake/cmake/conan-profiles/macos.arm64.profile",
    "build/export_generators/cmake/cmake/conan-profiles/macos.x86_64.profile",
    "build/external_resources/ymake/public.resources.json",
    "build/external_resources/ymake/resources.json",
    "build/mapping.conf.json",
    "build/platform/java/jdk/ya.make",
    "build/platform/lld/lld14.json",
    "build/platform/lld/ya.make",
    "build/plugins/_common.py",
    "build/plugins/_dart_fields.py",
    "build/plugins/a.yaml",
    "build/plugins/java.py",
    "build/plugins/nots.py",
    "build/plugins/res.py",
    "build/scripts/build_catboost.py",
    "build/scripts/clang_tidy.py",
    "build/scripts/collect_java_srcs.py",
    "build/scripts/compile_cuda.py",
    "build/scripts/configure_file.py",
    "build/scripts/coverage-info.py",
    "build/scripts/create_jcoverage_report.py",
    "build/scripts/custom_link_green_mysql.py",
    "build/scripts/decimal_md5.py",
    "build/scripts/error.py",
    "build/scripts/f2c.py",
    "build/scripts/fetch_from.py",
    "build/scripts/fetch_from_archive.py",
    "build/scripts/fetch_from_mds.py",
    "build/scripts/fetch_from_npm.py",
    "build/scripts/fetch_from_sandbox.py",
    "build/scripts/gen_java_codenav_entry.py",
    "build/scripts/gen_py3_reg.py",
    "build/scripts/gen_py_reg.py",
    "build/scripts/go_tool.py",
    "build/scripts/ios_wrapper.py",
    "build/scripts/link_dyn_lib.py",
    "build/scripts/link_fat_obj.py",
    "build/scripts/list.py",
    "build/scripts/mkver.py",
    "build/scripts/pack_ios.py",
    "build/scripts/pack_jcoverage_resources.py",
    "build/scripts/python_yndexer.py",
    "build/scripts/run_ios_simulator.py",
    "build/scripts/run_msvc_wine.py",
    "build/scripts/symlink.py",
    "build/scripts/with_crash_on_timeout.py",
    "build/scripts/yndexer.py",
    "build/ymake.core.conf",
    "build/ymake_conf.py",
    "contrib/libs/croaring/include/roaring/memory.h",
    "contrib/libs/croaring/include/roaring/portability.h",
    "contrib/libs/croaring/include/roaring/roaring64.h",
    "contrib/libs/croaring/include/roaring/roaring_version.h",
    "contrib/libs/croaring/src/roaring64.c",
    "contrib/libs/croaring/ya.make",
    "contrib/libs/cxxsupp/libcxx/include/__iterator/reverse_iterator.h",
    "contrib/libs/cxxsupp/libcxxrt/exception.cc",
    "contrib/libs/cxxsupp/libcxxrt/ya.make",
    "contrib/libs/protobuf/src/google/protobuf/extension_set.h",
    "contrib/libs/protobuf/src/google/protobuf/json/internal/parser.cc",
    "contrib/libs/protobuf/ya.make",
    "contrib/python/cffi/py3/.dist-info/METADATA",
    "contrib/python/cffi/py3/c/_cffi_backend.c",
    "contrib/python/cffi/py3/cffi/__init__.py",
    "contrib/python/cffi/py3/cffi/_embedding.h",
    "contrib/python/cffi/py3/cffi/_shimmed_dist_utils.py",
    "contrib/python/cffi/py3/cffi/api.py",
    "contrib/python/cffi/py3/cffi/recompiler.py",
    "contrib/python/cffi/py3/ya.make",
    "contrib/python/executing/.dist-info/METADATA",
    "contrib/python/executing/executing/_position_node_finder.py",
    "contrib/python/executing/executing/executing.py",
    "contrib/python/executing/executing/version.py",
    "contrib/python/executing/ya.make",
    "contrib/python/hypothesis/py3/.dist-info/METADATA",
    "contrib/python/hypothesis/py3/hypothesis/internal/conjecture/data.py",
    "contrib/python/hypothesis/py3/hypothesis/internal/conjecture/datatree.py",
    "contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinker.py",
    "contrib/python/hypothesis/py3/hypothesis/internal/conjecture/shrinking/bytes.py",
    "contrib/python/hypothesis/py3/hypothesis/strategies/_internal/strings.py",
    "contrib/python/hypothesis/py3/hypothesis/version.py",
    "contrib/python/hypothesis/py3/ya.make",
    "contrib/python/more-itertools/py3/.dist-info/METADATA",
    "contrib/python/more-itertools/py3/more_itertools/__init__.py",
    "contrib/python/more-itertools/py3/more_itertools/more.py",
    "contrib/python/more-itertools/py3/more_itertools/more.pyi",
    "contrib/python/more-itertools/py3/more_itertools/recipes.py",
    "contrib/python/more-itertools/py3/ya.make",
    "contrib/python/types-protobuf/.dist-info/METADATA",
    "contrib/python/types-protobuf/google-stubs/protobuf/internal/containers.pyi",
    "contrib/python/types-protobuf/ya.make",
    "contrib/python/ydb/py3/.dist-info/METADATA",
    "contrib/python/ydb/py3/ya.make",
    "contrib/python/ydb/py3/ydb/table.py",
    "contrib/python/ydb/py3/ydb/ydb_version.py",
    "contrib/restricted/abseil-cpp-tstring/y_absl/debugging/ya.make",
    "contrib/restricted/abseil-cpp-tstring/y_absl/log/ya.make",
    "contrib/restricted/abseil-cpp-tstring/y_absl/strings/internal/resize_uninitialized.h",
    "contrib/restricted/abseil-cpp-tstring/y_absl/strings/ya.make",
    "contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/mutex.cc",
    "contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/ya.make",
    "contrib/restricted/boost/asio/include/boost/asio/detail/config.hpp",
    "contrib/restricted/boost/asio/include/boost/asio/detail/is_buffer_sequence.hpp",
    "contrib/restricted/boost/asio/include/boost/asio/detail/pop_options.hpp",
    "contrib/restricted/boost/asio/include/boost/asio/detail/push_options.hpp",
    "contrib/restricted/boost/asio/ya.make",
    "contrib/restricted/fast_float/README.md",
    "contrib/restricted/fast_float/include/fast_float/bigint.h",
    "contrib/restricted/fast_float/include/fast_float/constexpr_feature_detect.h",
    "contrib/restricted/fast_float/include/fast_float/fast_table.h",
    "contrib/restricted/fast_float/include/fast_float/float_common.h",
    "contrib/restricted/fast_float/ya.make",
    "library/cpp/lwtrace/trace.cpp",
    "library/cpp/netliba/socket/protocols.h",
    "library/cpp/tld/tlds-alpha-by-domain.txt",
    "library/cpp/xml/document/xml-document.cpp",
    "library/cpp/yt/error/origin_attributes.h",
    "library/cpp/yt/memory/atomic_intrusive_ptr-inl.h",
    "library/cpp/yt/memory/atomic_intrusive_ptr.h",
    "library/cpp/yt/memory/blob.cpp",
    "library/cpp/yt/memory/blob.h",
    "library/cpp/yt/memory/chunked_memory_pool.cpp",
    "library/cpp/yt/memory/ref.cpp",
    "library/cpp/yt/memory/ref_counted-inl.h",
    "library/cpp/yt/memory/ref_counted.h",
    "library/cpp/yt/misc/port.h",
    "library/cpp/yt/misc/source_location.cpp",
    "library/cpp/yt/misc/source_location.h",
    "library/cpp/yt/misc/variant-inl.h",
    "library/cpp/yt/misc/variant.cpp",
    "library/cpp/yt/misc/variant.h",
    "library/cpp/yt/misc/ya.make",
    "library/cpp/yt/string/format-inl.h",
    "util/folder/path.cpp",
    "util/folder/path_ut.cpp",
    "util/generic/maybe.h",
    "util/generic/string.h",
    "util/generic/string_ut.cpp",
    "b/vendor/github.com/spf13/cobra/.yo.snapshot.json",
    "b/vendor/github.com/spf13/pflag/.yo.snapshot.json",
    "ya",
    "ydb/ci/rightlib.txt",
    "yt/cpp/mapreduce/interface/common.cpp",
    "yt/cpp/mapreduce/interface/common.h",
    "yt/cpp/mapreduce/interface/ut/common_ut.cpp",
    "yt/yt/client/api/client_common.h",
    "yt/yt/client/api/public.h",
    "yt/yt/client/api/rpc_proxy/client_impl.cpp",
    "b/yt/yt/client/api/rpc_proxy/row_batch_reader.cpp",
    "b/yt/yt/client/api/rpc_proxy/row_batch_reader.h",
    "b/yt/yt/client/api/rpc_proxy/row_batch_writer.cpp",
    "b/yt/yt/client/api/rpc_proxy/row_batch_writer.h",
    "yt/yt/client/api/rpc_proxy/table_reader.cpp",
    "yt/yt/client/api/rpc_proxy/table_writer.cpp",
    "yt/yt/client/api/shuffle_client.h",
    "yt/yt/client/api/table_client.h",
    "yt/yt/client/api/table_reader.h",
    "yt/yt/client/api/table_writer.h",
    "yt/yt/client/driver/command-inl.h",
    "yt/yt/client/driver/proxy_discovery_cache.cpp",
    "yt/yt/client/driver/table_commands.cpp",
    "yt/yt/client/node_tracker_client/node_directory.cpp",
    "yt/yt/client/node_tracker_client/node_directory.h",
    "yt/yt/client/object_client/helpers-inl.h",
    "yt/yt/client/query_client/query_builder.cpp",
    "yt/yt/client/query_client/query_builder.h",
    "yt/yt/client/scheduler/public.h",
    "yt/yt/client/table_client/adapters.cpp",
    "yt/yt/client/table_client/check_schema_compatibility.cpp",
    "yt/yt/client/table_client/check_schema_compatibility.h",
    "yt/yt/client/table_client/comparator.cpp",
    "yt/yt/client/table_client/composite_compare.cpp",
    "yt/yt/client/table_client/config.cpp",
    "yt/yt/client/table_client/config.h",
    "yt/yt/client/table_client/key.cpp",
    "yt/yt/client/table_client/key_bound.cpp",
    "b/yt/yt/client/table_client/private.h",
    "yt/yt/client/table_client/public.h",
    "yt/yt/client/table_client/schema.cpp",
    "yt/yt/client/table_client/versioned_io_options.cpp",
    "yt/yt/client/table_client/versioned_io_options.h",
    "yt/yt/client/table_client/wire_protocol.cpp",
    "yt/yt/client/ya.make",
    "yt/yt/client/ypath/rich.cpp",
    "yt/yt/client/ypath/rich.h",
    "yt/yt/core/bus/tcp/connection.cpp",
    "yt/yt/core/bus/tcp/connection.h",
    "yt/yt/core/concurrency/fiber_scheduler_thread.cpp",
    "yt/yt/core/concurrency/new_fair_share_thread_pool.cpp",
    "yt/yt/core/crypto/tls.cpp",
    "yt/yt/core/http/client.cpp",
    "yt/yt/core/http/client.h",
    "yt/yt/core/http/config.cpp",
    "yt/yt/core/http/config.h",
    "yt/yt/core/http/connection_pool.cpp",
    "yt/yt/core/http/connection_reuse_helpers.h",
    "yt/yt/core/http/helpers.cpp",
    "yt/yt/core/http/http.h",
    "yt/yt/core/http/mock/http.h",
    "yt/yt/core/http/private.h",
    "yt/yt/core/http/public.h",
    "yt/yt/core/http/server.cpp",
    "yt/yt/core/http/stream.cpp",
    "yt/yt/core/http/stream.h",
    "yt/yt/core/misc/arithmetic_formula.cpp",
    "yt/yt/core/misc/arithmetic_formula.h",
    "yt/yt/core/misc/atomic_object-inl.h",
    "yt/yt/core/misc/atomic_object.h",
    "yt/yt/core/misc/error.cpp",
    "yt/yt/core/misc/error.h",
    "yt/yt/core/misc/id_generator.h",
    "yt/yt/core/net/connection.cpp",
    "yt/yt/core/net/connection.h",
    "yt/yt/core/net/dialer.cpp",
    "yt/yt/core/net/dialer.h",
    "yt/yt/core/net/local_address.cpp",
    "yt/yt/core/net/public.h",
    "yt/yt/core/rpc/grpc/helpers.cpp",
    "yt/yt/core/rpc/grpc/helpers.h",
    "yt/yt/core/rpc/grpc/proto/grpc.proto",
    "yt/yt/core/rpc/grpc/server.cpp",
    "yt/yt/core/threading/thread.cpp",
    "yt/yt/core/threading/thread.h",
    "yt/yt/core/tracing/trace_context.cpp",
    "yt/yt/core/ytree/attribute_consumer.cpp",
    "yt/yt/core/ytree/attribute_consumer.h",
    "yt/yt/core/ytree/virtual-inl.h",
    "yt/yt/core/ytree/virtual.cpp",
    "yt/yt/core/ytree/virtual.h",
    "yt/yt/core/ytree/yson_schema-inl.h",
    "yt/yt/library/profiling/solomon/sensor.h",
    "yt/yt_proto/yt/client/api/rpc_proxy/proto/api_service.proto",
    "yt/yt_proto/yt/client/table_client/proto/versioned_io_options.proto"
  ],
  "modified_test_files": [
    "build/config/tests/py_style/config_paths.json",
    "b/build/config/tests/py_style/default_configs.json",
    "b/build/config/tests/py_style/dummy_linter_config.json",
    "build/config/tests/py_style/ya.make",
    "build/platform/test_tool/host.ya.make.inc",
    "build/platform/test_tool/host_os.ya.make.inc",
    "build/plugins/ytest.py",
    "contrib/python/more-itertools/py3/tests/test_recipes.py",
    "library/cpp/yt/memory/unittests/atomic_intrusive_ptr_ut.cpp",
    "library/cpp/yt/string/unittests/format_ut.cpp",
    "yt/yt/client/unittests/connection_ut.cpp",
    "yt/yt/client/unittests/query_builder_ut.cpp",
    "yt/yt/core/http/unittests/http_ut.cpp",
    "yt/yt/core/misc/unittests/boolean_formula_ut.cpp",
    "yt/yt/core/rpc/unittests/lib/test_service.cpp",
    "yt/yt/core/rpc/unittests/lib/test_service.h",
    "yt/yt/core/rpc/unittests/lib/test_service.proto",
    "yt/yt/core/rpc/unittests/rpc_ut.cpp",
    "yt/yt/core/ytree/unittests/yson_schema_ut.cpp"
  ]
}