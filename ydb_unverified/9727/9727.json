{
  "repo": "ydb-platform/ydb",
  "pull_number": 9727,
  "instance_id": "ydb-platform__ydb-9727",
  "issue_numbers": [
    "9643"
  ],
  "base_commit": "d2299da9f48ef613fd735c4e69f6d91e5a4d7bb7",
  "patch": "diff --git a/ydb/ci/scripts/retry.sh b/ydb/ci/scripts/retry.sh\nnew file mode 100755\nindex 000000000000..ff30302284c7\n--- /dev/null\n+++ b/ydb/ci/scripts/retry.sh\n@@ -0,0 +1,67 @@\n+#!/usr/bin/env bash\n+\n+usage() {\n+  echo \"$0 -r [max_attempts] -t [timeout] -s [sleep] -- cmd\"\n+}\n+if [ $# -lt 2 ]; then\n+  usage\n+  exit 1\n+fi\n+\n+max_attempts=0\n+timeout=1800\n+sleep_time=30\n+\n+while getopts 'r:t:s:' opt; do\n+  case \"$opt\" in\n+    r)\n+      max_attempts=$OPTARG\n+      ;;\n+    t)\n+      timeout=$OPTARG\n+      ;;\n+    s)\n+      sleep_time=$OPTARG\n+      ;;\n+    *)\n+      usage\n+      exit 1\n+      ;;\n+  esac\n+done\n+\n+\n+shift $((OPTIND - 2))\n+\n+if [[ \"$1\" == \"--\" ]]; then\n+  shift  # Shift past the double dash\n+else\n+  echo \"Error: Missing -- before command\"\n+  exit 1\n+fi\n+\n+attempt_num=1\n+start_time=$(date +%s)\n+\n+while true; do\n+  elapsed=$(($(date +%s) - start_time))\n+\n+  if [ \"$max_attempts\" -ne 0 ] && [ \"$attempt_num\" -ge \"$max_attempts\" ]; then\n+    echo \"maximum attempts reached, exit\" >&2\n+    exit 10\n+  fi\n+\n+  if [ \"$timeout\" -ne 0 ] && [ $elapsed -ge \"$timeout\" ]; then\n+    echo \"timeout reached, exit\" >&2\n+    exit 11\n+  fi\n+\n+  if \"$@\"; then\n+    exit\n+  else\n+    attempt_num=$(( attempt_num + 1 ))\n+    if [ \"$sleep_time\" != \"0\" ]; then\n+      sleep \"$sleep_time\"\n+    fi\n+  fi\n+done\n\\ No newline at end of file\n",
  "test_patch": "diff --git a/.github/actions/test_ya/action.yml b/.github/actions/test_ya/action.yml\nindex bc9b9a36423b..98016fb53dd9 100644\n--- a/.github/actions/test_ya/action.yml\n+++ b/.github/actions/test_ya/action.yml\n@@ -101,7 +101,9 @@ runs:\n       shell: bash\n       run: |\n         set -x\n-\n+        \n+        echo \"$(pwd)/ydb/ci/scripts\" >> $GITHUB_PATH\n+        \n         export TMP_DIR=$(pwd)/tmp\n         rm -rf $TMP_DIR\n         mkdir -p $TMP_DIR\n@@ -345,7 +347,7 @@ runs:\n             TESTMO_TOKEN=${{ inputs.testman_token }} testmo automation:resources:add-link --name build --url \"$TESTMO_RUN_URL\" --resources $CURRENT_PUBLIC_DIR/testmo.json\n             TESTMO_TOKEN=${{ inputs.testman_token }} testmo automation:resources:add-field --name git-sha --type string --value \"${GITHUB_SHA:0:7}\" --resources $CURRENT_PUBLIC_DIR/testmo.json\n             TESTMO_RUN_ID=$(\n-              TESTMO_TOKEN=${{ inputs.testman_token }} testmo automation:run:create --instance \"https://$TESTMO_PROXY_ADDR\" --project-id ${{ inputs.testman_project_id }} \\\n+              TESTMO_TOKEN=${{ inputs.testman_token }} retry.sh -- testmo automation:run:create --instance \"https://$TESTMO_PROXY_ADDR\" --project-id ${{ inputs.testman_project_id }} \\\n                 --name \"$TESTMO_RUN_NAME\" --source \"$TESTMO_SOURCE\" --resources $CURRENT_PUBLIC_DIR/testmo.json \\\n                 --tags \"$TESTMO_BRANCH_TAG\" --tags \"$TESTMO_EXTRA_TAG\"\n             )\n@@ -459,11 +461,11 @@ runs:\n             # archive unitest reports (transformed)\n             tar -C $TESTMO_JUNIT_REPORT_PARTS/.. -czf $PUBLIC_DIR/junit_parts.xml.tar.gz $(basename $TESTMO_JUNIT_REPORT_PARTS)\n             \n-            TESTMO_TOKEN=${{ inputs.testman_token }} testmo automation:run:submit-thread \\\n+            TESTMO_TOKEN=${{ inputs.testman_token }} retry.sh -- testmo automation:run:submit-thread \\\n               --instance \"https://$TESTMO_PROXY_ADDR\" --run-id \"$TESTMO_RUN_ID\" \\\n               --results \"$TESTMO_JUNIT_REPORT_PARTS/*.xml\"\n \n-            TESTMO_TOKEN=${{ inputs.testman_token }} testmo automation:run:complete --instance \"https://$TESTMO_PROXY_ADDR\" --run-id $TESTMO_RUN_ID || true\n+            TESTMO_TOKEN=${{ inputs.testman_token }} retry.sh -- testmo automation:run:complete --instance \"https://$TESTMO_PROXY_ADDR\" --run-id $TESTMO_RUN_ID || true\n             echo \"runid=\" >> $GITHUB_OUTPUT\n           fi\n \n@@ -500,7 +502,7 @@ runs:\n       shell: bash\n       run: |\n         if [ ${{ steps.build.outputs.runid }} ]; then\n-          TESTMO_TOKEN=${{ inputs.testman_token }} testmo automation:run:complete --instance \"https://$TESTMO_PROXY_ADDR\" --run-id ${{ steps.build.outputs.runid }} || true\n+          TESTMO_TOKEN=${{ inputs.testman_token }} retry.sh -- testmo automation:run:complete --instance \"https://$TESTMO_PROXY_ADDR\" --run-id ${{ steps.build.outputs.runid }} || true\n         fi\n         if [ ${{ inputs.testman_token }} ]; then\n           kill $TESTMO_PROXY_PID\ndiff --git a/ydb/ci/testmo-proxy/testmo-proxy.py b/ydb/ci/testmo-proxy/testmo-proxy.py\nindex 8999368d15ee..b60e403a984b 100755\n--- a/ydb/ci/testmo-proxy/testmo-proxy.py\n+++ b/ydb/ci/testmo-proxy/testmo-proxy.py\n@@ -15,10 +15,10 @@ class Handler(http.server.BaseHTTPRequestHandler):\n     error_message_format = '{\"status\":\"error\", \"code\":\"%(code)d\", \"message\": \"%(message)s\"}\\n'\n \n     # noinspection PyMissingConstructor\n-    def __init__(self, target_url: str, timeout: Tuple[int, int], max_reqest_time: int):\n+    def __init__(self, target_url: str, timeout: Tuple[int, int], max_request_time: int):\n         self._target_url = target_url\n         self._timeout = timeout\n-        self._max_request_time = max_reqest_time\n+        self._max_request_time = max_request_time\n \n     def __call__(self, *args, **kwargs):\n         super().__init__(*args, **kwargs)\n",
  "problem_statement": "Add retries in testmo interaction\nWe have a lot of problems in PR checks with testmo, so we have to add retries (up to 30 minutes)\n",
  "hints_text": "",
  "created_at": "2024-09-24T16:51:01Z",
  "modified_files": [
    "b/ydb/ci/scripts/retry.sh"
  ],
  "modified_test_files": [
    ".github/actions/test_ya/action.yml",
    "ydb/ci/testmo-proxy/testmo-proxy.py"
  ]
}