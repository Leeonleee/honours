diff --git a/ydb/core/viewer/pdisk_restart.h b/ydb/core/viewer/pdisk_restart.h
index 4822249a75e7..4b29a0eb6398 100644
--- a/ydb/core/viewer/pdisk_restart.h
+++ b/ydb/core/viewer/pdisk_restart.h
@@ -114,7 +114,6 @@ class TJsonPDiskRestart : public TViewerPipeClient {
                     description: pdisk identifier
                     required: true
                     type: integer
-                    required: true
                   - name: timeout
                     in: query
                     description: timeout in ms
diff --git a/ydb/core/viewer/viewer_nodes.h b/ydb/core/viewer/viewer_nodes.h
index ae5ca08619c6..98a5c3d68f9d 100644
--- a/ydb/core/viewer/viewer_nodes.h
+++ b/ydb/core/viewer/viewer_nodes.h
@@ -154,7 +154,6 @@ class TJsonNodes : public TViewerPipeClient {
         Pools,
         Groups,
         VSlots,
-        DoneOrError,
     };
 
     enum class EPeerRole {
@@ -1111,10 +1110,11 @@ class TJsonNodes : public TViewerPipeClient {
             GroupsResponse = MakeCachedRequestBSControllerGroups();
             VSlotsResponse = MakeCachedRequestBSControllerVSlots();
             FilterStorageStage = EFilterStorageStage::Pools;
-        } else if (!FilterGroupIds.empty()) {
+        } else if (!FilterGroupIds.empty() || FieldsRequired.test(+ENodeFields::VDisks)) {
             VSlotsResponse = MakeCachedRequestBSControllerVSlots();
             FilterStorageStage = EFilterStorageStage::VSlots;
         }
+
         if (With != EWith::Everything) {
             PDisksResponse = MakeCachedRequestBSControllerPDisks();
         }
@@ -1134,11 +1134,6 @@ class TJsonNodes : public TViewerPipeClient {
                 PDisksResponse = MakeCachedRequestBSControllerPDisks();
             }
         }
-        if (FieldsRequired.test(+ENodeFields::VDisks)) {
-            if (!VSlotsResponse) {
-                VSlotsResponse = MakeCachedRequestBSControllerVSlots();
-            }
-        }
         if (FieldsNeeded(FieldsHiveNodeStat) && !FilterDatabase && !FilterPath) {
             TTabletId rootHiveId = domains->GetHive();
             HivesToAsk.push_back(rootHiveId);
@@ -1170,11 +1165,11 @@ class TJsonNodes : public TViewerPipeClient {
     }
 
     bool PreFilterDone() const {
-        return !FilterDatabase && FilterStorageStage == EFilterStorageStage::None && FilterPeerRole != EPeerRole::Static  && FilterPeerRole != EPeerRole::Other;
+        return (!PDisksResponse || PDisksProcessed) && !FilterDatabase && FilterPeerRole != EPeerRole::Static && FilterPeerRole != EPeerRole::Other;
     }
 
     bool FilterDone() const {
-        return PreFilterDone() && !NeedFilter;
+        return PreFilterDone() && FilterStorageStage == EFilterStorageStage::None && !NeedFilter;
     }
 
     void ApplyFilter() {
@@ -1228,6 +1223,9 @@ class TJsonNodes : public TViewerPipeClient {
         if (FilterStorageStage != EFilterStorageStage::None) {
             return;
         }
+        if (PDisksResponse && !PDisksProcessed) {
+            return;
+        }
         if (FilterPeerRole == EPeerRole::Static || FilterPeerRole == EPeerRole::Other) {
             return;
         }
@@ -2037,7 +2035,7 @@ class TJsonNodes : public TViewerPipeClient {
                 FilterStorageStage = EFilterStorageStage::Groups;
             } else {
                 AddProblem("bsc-storage-pools-no-data");
-                FilterStorageStage = EFilterStorageStage::DoneOrError;
+                FilterStorageStage = EFilterStorageStage::None;
             }
             StoragePoolsResponse.reset();
         }
@@ -2054,10 +2052,10 @@ class TJsonNodes : public TViewerPipeClient {
                 FilterStorageStage = EFilterStorageStage::VSlots;
             } else {
                 AddProblem("bsc-storage-groups-no-data");
-                FilterStorageStage = EFilterStorageStage::DoneOrError;
+                FilterStorageStage = EFilterStorageStage::None;
             }
         }
-        if ((FilterStorageStage == EFilterStorageStage::VSlots || FilterStorageStage == EFilterStorageStage::None) && VSlotsResponse && VSlotsResponse->IsDone()) {
+        if (FilterStorageStage == EFilterStorageStage::VSlots && VSlotsResponse && VSlotsResponse->IsDone()) {
             if (VSlotsResponse->IsOk()) {
                 std::unordered_set<TNodeId> prevFilterNodeIds = std::move(FilterNodeIds);
                 std::unordered_map<std::pair<TNodeId, ui32>, std::size_t> slotsPerDisk;
@@ -2066,28 +2064,22 @@ class TJsonNodes : public TViewerPipeClient {
                         if (prevFilterNodeIds.empty() || prevFilterNodeIds.count(slotEntry.GetKey().GetNodeId()) > 0) {
                             FilterNodeIds.insert(slotEntry.GetKey().GetNodeId());
                         }
-                        TNode* node = FindNode(slotEntry.GetKey().GetNodeId());
-                        if (node) {
-                            node->SysViewVDisks.emplace_back(slotEntry);
-                            node->HasDisks = true;
-                        }
-                    } else {
-                        TNode* node = FindNode(slotEntry.GetKey().GetNodeId());
-                        if (node) {
-                            node->HasDisks = true;
-                        }
+                    }
+                    TNode* node = FindNode(slotEntry.GetKey().GetNodeId());
+                    if (node) {
+                        node->SysViewVDisks.emplace_back(slotEntry);
+                        node->HasDisks = true;
                     }
                     auto& slots = slotsPerDisk[{slotEntry.GetKey().GetNodeId(), slotEntry.GetKey().GetPDiskId()}];
                     ++slots;
                     MaximumSlotsPerDisk = std::max(MaximumSlotsPerDisk.value_or(0), slots);
                 }
                 FieldsAvailable.set(+ENodeFields::HasDisks);
-                FilterStorageStage = EFilterStorageStage::DoneOrError;
-                ApplyEverything();
             } else {
                 AddProblem("bsc-storage-slots-no-data");
-                FilterStorageStage = EFilterStorageStage::DoneOrError;
             }
+            FilterStorageStage = EFilterStorageStage::None;
+            ApplyEverything();
         }
         if (PDisksResponse && PDisksResponse->IsDone() && !PDisksProcessed) {
             if (PDisksResponse->IsOk()) {
@@ -2112,6 +2104,7 @@ class TJsonNodes : public TViewerPipeClient {
                 AddProblem("bsc-pdisks-no-data");
             }
             PDisksProcessed = true;
+            ApplyEverything();
         }
 
         if (!TimeToAskWhiteboard()) {
