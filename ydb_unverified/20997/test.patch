diff --git a/yql/essentials/tests/sql/minirun/part4/canondata/result.json b/yql/essentials/tests/sql/minirun/part4/canondata/result.json
index b2ba2b1602eb..d69f46521596 100644
--- a/yql/essentials/tests/sql/minirun/part4/canondata/result.json
+++ b/yql/essentials/tests/sql/minirun/part4/canondata/result.json
@@ -314,6 +314,27 @@
             "uri": "https://{canondata_backend}/1936842/397d19bc034685a9103c63c079eb706022471c35/resource.tar.gz#test.test_blocks-agg_by_key-default.txt-Results_/results.txt"
         }
     ],
+    "test.test[blocks-agg_with_long_keys-default.txt-Debug]": [
+        {
+            "checksum": "7c4a660fbbc90bdd8f4dd41a3c661bf5",
+            "size": 1144,
+            "uri": "https://{canondata_backend}/1942173/aec80438f8fc63ab8d93cee4a56261df6843c1f3/resource.tar.gz#test.test_blocks-agg_with_long_keys-default.txt-Debug_/opt.yql"
+        }
+    ],
+    "test.test[blocks-agg_with_long_keys-default.txt-Peephole]": [
+        {
+            "checksum": "c8f494b293f588852db9bb9a43439a45",
+            "size": 1738,
+            "uri": "https://{canondata_backend}/1942173/aec80438f8fc63ab8d93cee4a56261df6843c1f3/resource.tar.gz#test.test_blocks-agg_with_long_keys-default.txt-Peephole_/opt.yql"
+        }
+    ],
+    "test.test[blocks-agg_with_long_keys-default.txt-Results]": [
+        {
+            "checksum": "57c5aab96cb792f5f669cfb9a119550a",
+            "size": 84929,
+            "uri": "https://{canondata_backend}/1942173/aec80438f8fc63ab8d93cee4a56261df6843c1f3/resource.tar.gz#test.test_blocks-agg_with_long_keys-default.txt-Results_/results.txt"
+        }
+    ],
     "test.test[blocks-or_opt_scalar-default.txt-Debug]": [
         {
             "checksum": "48438c52974cf1f5de5ed35df99e54b5",
diff --git a/yql/essentials/tests/sql/minirun/part6/canondata/result.json b/yql/essentials/tests/sql/minirun/part6/canondata/result.json
index d2ab457a4bbe..68dbb001a7ee 100644
--- a/yql/essentials/tests/sql/minirun/part6/canondata/result.json
+++ b/yql/essentials/tests/sql/minirun/part6/canondata/result.json
@@ -296,6 +296,27 @@
             "uri": "file://test.test_bitcast_implicit-mod_bitcast-default.txt-Results_/extracted"
         }
     ],
+    "test.test[blocks-agg_with_optional_string_keys-default.txt-Debug]": [
+        {
+            "checksum": "c4c01814bb43ce233a32b92dbde44870",
+            "size": 1114,
+            "uri": "https://{canondata_backend}/1881367/91257b77defd2cabf8041b14bff63c8d29b9acc0/resource.tar.gz#test.test_blocks-agg_with_optional_string_keys-default.txt-Debug_/opt.yql"
+        }
+    ],
+    "test.test[blocks-agg_with_optional_string_keys-default.txt-Peephole]": [
+        {
+            "checksum": "746a1d389eb41491e1275c5323df00bf",
+            "size": 1547,
+            "uri": "https://{canondata_backend}/1881367/91257b77defd2cabf8041b14bff63c8d29b9acc0/resource.tar.gz#test.test_blocks-agg_with_optional_string_keys-default.txt-Peephole_/opt.yql"
+        }
+    ],
+    "test.test[blocks-agg_with_optional_string_keys-default.txt-Results]": [
+        {
+            "checksum": "bddaea9e12611287fc78163411a25cdc",
+            "size": 73787,
+            "uri": "https://{canondata_backend}/1881367/91257b77defd2cabf8041b14bff63c8d29b9acc0/resource.tar.gz#test.test_blocks-agg_with_optional_string_keys-default.txt-Results_/results.txt"
+        }
+    ],
     "test.test[blocks-coalesce_scalar-default.txt-Debug]": [
         {
             "checksum": "5ee084040bec68362ce741c283ddead6",
diff --git a/yql/essentials/tests/sql/minirun/part8/canondata/result.json b/yql/essentials/tests/sql/minirun/part8/canondata/result.json
index 5d7a2cdb444b..7b70fbcd95d8 100644
--- a/yql/essentials/tests/sql/minirun/part8/canondata/result.json
+++ b/yql/essentials/tests/sql/minirun/part8/canondata/result.json
@@ -394,6 +394,27 @@
             "uri": "https://{canondata_backend}/1130705/a25045513209436069d9f9a29831b732c13e1675/resource.tar.gz#test.test_blocks-agg_singular_type_value-default.txt-Results_/results.txt"
         }
     ],
+    "test.test[blocks-agg_with_optional_short_keys-default.txt-Debug]": [
+        {
+            "checksum": "169d1c9b335c178ff63d1f4858a7b237",
+            "size": 1067,
+            "uri": "https://{canondata_backend}/1937367/01b34a497b7b8ca6a58c91f8a4e3d26eac6fc1dd/resource.tar.gz#test.test_blocks-agg_with_optional_short_keys-default.txt-Debug_/opt.yql"
+        }
+    ],
+    "test.test[blocks-agg_with_optional_short_keys-default.txt-Peephole]": [
+        {
+            "checksum": "922eb78f0602be1324327c4e1d615df7",
+            "size": 1500,
+            "uri": "https://{canondata_backend}/1937367/01b34a497b7b8ca6a58c91f8a4e3d26eac6fc1dd/resource.tar.gz#test.test_blocks-agg_with_optional_short_keys-default.txt-Peephole_/opt.yql"
+        }
+    ],
+    "test.test[blocks-agg_with_optional_short_keys-default.txt-Results]": [
+        {
+            "checksum": "8bc94ce2c4b3fae8ee00c3d9b1f1a922",
+            "size": 73786,
+            "uri": "https://{canondata_backend}/1937367/01b34a497b7b8ca6a58c91f8a4e3d26eac6fc1dd/resource.tar.gz#test.test_blocks-agg_with_optional_short_keys-default.txt-Results_/results.txt"
+        }
+    ],
     "test.test[blocks-and_scalar-default.txt-Debug]": [
         {
             "checksum": "e5ccc5c53756e09ded8e82b6d662e5e9",
diff --git a/yql/essentials/tests/sql/sql2yql/canondata/result.json b/yql/essentials/tests/sql/sql2yql/canondata/result.json
index a890589df161..86d786d5b994 100644
--- a/yql/essentials/tests/sql/sql2yql/canondata/result.json
+++ b/yql/essentials/tests/sql/sql2yql/canondata/result.json
@@ -1420,6 +1420,27 @@
             "uri": "https://{canondata_backend}/1781765/0dce37dc71c65fe553d73ed7cf98a62bdee9ddee/resource.tar.gz#test_sql2yql.test_blocks-agg_singular_type_value_optional_/sql.yql"
         }
     ],
+    "test_sql2yql.test[blocks-agg_with_long_keys]": [
+        {
+            "checksum": "9e33943a7d53d564dcd74254699f5e40",
+            "size": 2268,
+            "uri": "https://{canondata_backend}/1881367/d038dca8eefe1a3deb4de9ce8bf77e4ff93a0ee8/resource.tar.gz#test_sql2yql.test_blocks-agg_with_long_keys_/sql.yql"
+        }
+    ],
+    "test_sql2yql.test[blocks-agg_with_optional_short_keys]": [
+        {
+            "checksum": "d86c09153425549662c29e059055313a",
+            "size": 1833,
+            "uri": "https://{canondata_backend}/1917492/6861dabe163fc1019f5ab349e6b1256e5319ed13/resource.tar.gz#test_sql2yql.test_blocks-agg_with_optional_short_keys_/sql.yql"
+        }
+    ],
+    "test_sql2yql.test[blocks-agg_with_optional_string_keys]": [
+        {
+            "checksum": "bb039e048c5409c0403a0fad71eb7fc5",
+            "size": 1863,
+            "uri": "https://{canondata_backend}/1881367/d038dca8eefe1a3deb4de9ce8bf77e4ff93a0ee8/resource.tar.gz#test_sql2yql.test_blocks-agg_with_optional_string_keys_/sql.yql"
+        }
+    ],
     "test_sql2yql.test[blocks-and]": [
         {
             "checksum": "e22a52b51ef20174c3b832acb09df01b",
@@ -8371,6 +8392,21 @@
             "uri": "file://test_sql_format.test_blocks-agg_singular_type_value_optional_/formatted.sql"
         }
     ],
+    "test_sql_format.test[blocks-agg_with_long_keys]": [
+        {
+            "uri": "file://test_sql_format.test_blocks-agg_with_long_keys_/formatted.sql"
+        }
+    ],
+    "test_sql_format.test[blocks-agg_with_optional_short_keys]": [
+        {
+            "uri": "file://test_sql_format.test_blocks-agg_with_optional_short_keys_/formatted.sql"
+        }
+    ],
+    "test_sql_format.test[blocks-agg_with_optional_string_keys]": [
+        {
+            "uri": "file://test_sql_format.test_blocks-agg_with_optional_string_keys_/formatted.sql"
+        }
+    ],
     "test_sql_format.test[blocks-and]": [
         {
             "uri": "file://test_sql_format.test_blocks-and_/formatted.sql"
diff --git a/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_long_keys_/formatted.sql b/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_long_keys_/formatted.sql
new file mode 100644
index 000000000000..d99382d13c85
--- /dev/null
+++ b/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_long_keys_/formatted.sql
@@ -0,0 +1,30 @@
+PRAGMA config.flags('PeepholeFlags', 'UseAggPhases');
+
+$src = ListMap(
+    ListFromRange(CAST(0 AS Int64), CAST(500 AS Int64)), ($keyVal) -> {
+        RETURN <|
+            k1: $keyVal,
+            k2: $keyVal + 1,
+            k3: $keyVal + 2,
+            v: $keyVal
+        |>;
+    }
+);
+
+SELECT
+    k1,
+    k2,
+    k3,
+    sum(v) AS s
+FROM
+    as_table($src)
+GROUP BY
+    k1,
+    k2,
+    k3
+ORDER BY
+    k1,
+    k2,
+    k3,
+    s
+;
diff --git a/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_optional_short_keys_/formatted.sql b/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_optional_short_keys_/formatted.sql
new file mode 100644
index 000000000000..55cbd221ce68
--- /dev/null
+++ b/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_optional_short_keys_/formatted.sql
@@ -0,0 +1,22 @@
+PRAGMA config.flags('PeepholeFlags', 'UseAggPhases');
+
+$src = ListMap(
+    ListFromRange(CAST(0 AS Int64), CAST(500 AS Int64)), ($x) -> {
+        RETURN <|
+            k: if($x % 10 == 0, NULL, $x),
+            v: $x
+        |>;
+    }
+);
+
+SELECT
+    k,
+    sum(v) AS s
+FROM
+    as_table($src)
+GROUP BY
+    k
+ORDER BY
+    k,
+    s
+;
diff --git a/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_optional_string_keys_/formatted.sql b/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_optional_string_keys_/formatted.sql
new file mode 100644
index 000000000000..684223df1cdc
--- /dev/null
+++ b/yql/essentials/tests/sql/sql2yql/canondata/test_sql_format.test_blocks-agg_with_optional_string_keys_/formatted.sql
@@ -0,0 +1,22 @@
+PRAGMA config.flags('PeepholeFlags', 'UseAggPhases');
+
+$src = ListMap(
+    ListFromRange(CAST(0 AS Int64), CAST(500 AS Int64)), ($x) -> {
+        RETURN <|
+            k: if($x % 10 == 0, NULL, CAST($x AS String)),
+            v: $x
+        |>;
+    }
+);
+
+SELECT
+    k,
+    sum(v) AS s
+FROM
+    as_table($src)
+GROUP BY
+    k
+ORDER BY
+    k,
+    s
+;
diff --git a/yql/essentials/tests/sql/suites/blocks/agg_with_long_keys.sql b/yql/essentials/tests/sql/suites/blocks/agg_with_long_keys.sql
new file mode 100644
index 000000000000..9f23b66e0522
--- /dev/null
+++ b/yql/essentials/tests/sql/suites/blocks/agg_with_long_keys.sql
@@ -0,0 +1,13 @@
+pragma config.flags("PeepholeFlags","UseAggPhases");
+
+$src = ListMap(ListFromRange(cast (0 as Int64), cast(500 as Int64)), ($keyVal) -> {
+    return <|
+        k1: $keyVal,
+        k2: $keyVal + 1,
+        k3: $keyVal + 2,
+        v: $keyVal
+    |>;
+});
+
+select k1, k2, k3, sum(v) as s from as_table($src) group by k1, k2, k3 order by k1, k2, k3, s;
+
diff --git a/yql/essentials/tests/sql/suites/blocks/agg_with_optional_short_keys.sql b/yql/essentials/tests/sql/suites/blocks/agg_with_optional_short_keys.sql
new file mode 100644
index 000000000000..a2e36fa528e5
--- /dev/null
+++ b/yql/essentials/tests/sql/suites/blocks/agg_with_optional_short_keys.sql
@@ -0,0 +1,11 @@
+pragma config.flags("PeepholeFlags","UseAggPhases");
+
+$src = ListMap(ListFromRange(cast (0 as Int64), cast(500 as Int64)), ($x) -> {
+    return <|
+        k: if ($x % 10 == 0, NULL, $x),
+        v: $x
+    |>;
+});
+
+select k, sum(v) as s from as_table($src) group by k order by k, s;
+
diff --git a/yql/essentials/tests/sql/suites/blocks/agg_with_optional_string_keys.sql b/yql/essentials/tests/sql/suites/blocks/agg_with_optional_string_keys.sql
new file mode 100644
index 000000000000..85b11d3abef9
--- /dev/null
+++ b/yql/essentials/tests/sql/suites/blocks/agg_with_optional_string_keys.sql
@@ -0,0 +1,11 @@
+pragma config.flags("PeepholeFlags","UseAggPhases");
+
+$src = ListMap(ListFromRange(cast (0 as Int64), cast(500 as Int64)), ($x) -> {
+    return <|
+        k: if ($x % 10 == 0, NULL, cast ($x as String)),
+        v: $x
+    |>;
+});
+
+select k, sum(v) as s from as_table($src) group by k order by k, s;
+
