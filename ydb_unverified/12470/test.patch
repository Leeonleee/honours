diff --git a/.github/actions/test_ya/action.yml b/.github/actions/test_ya/action.yml
index e91fdcad8e2f..95c183ce852b 100644
--- a/.github/actions/test_ya/action.yml
+++ b/.github/actions/test_ya/action.yml
@@ -103,7 +103,7 @@ runs:
           debug)
             TESTMO_SOURCE="ya-${ARCH}-debug"
             ;;
-          release-*)
+          release*)
             TESTMO_SOURCE="ya-${ARCH}-${BUILD_PRESET/release-/}"
             ;;
           *)
@@ -180,6 +180,9 @@ runs:
           relwithdebinfo)
             params+=(--build "relwithdebinfo")
             ;;
+          release)
+            params+=(--build "release")
+            ;;
           release-asan)
             params+=(
               --build "release" --sanitize="address"
diff --git a/ydb/core/blobstorage/ut_blobstorage/blob_depot_test_env.h b/ydb/core/blobstorage/ut_blobstorage/blob_depot_test_env.h
index f7b66f589a75..bdc6b0e0a534 100644
--- a/ydb/core/blobstorage/ut_blobstorage/blob_depot_test_env.h
+++ b/ydb/core/blobstorage/ut_blobstorage/blob_depot_test_env.h
@@ -75,29 +75,6 @@ struct TTabletInfo {
 
 using TBSState = std::map<ui64, TTabletInfo>;
 
-struct TIntervals {
-    std::vector<ui32> Borders; // [0; x_1) [x_1; x_2) ... [x_n-1; x_n)
-
-    TIntervals(std::vector<ui32> borders) {
-        Borders = borders;
-        for (ui32 i = 1; i < Borders.size(); ++i) {
-            Borders[i] += Borders[i - 1];
-        }
-    }
-
-    ui32 GetInterval(ui32 x) {
-        for (ui32 i = 0; i < Borders.size(); ++i) {
-            if (x < Borders[i]) {
-                return i;
-            }
-        }
-        return Borders.size();
-    }
-    ui32 UpperLimit() {
-        return Borders[Borders.size() - 1];
-    }
-};
-
 struct TEvArgs {
     enum EEventType : ui32 {
         PUT,
@@ -181,6 +158,7 @@ struct TEvRangeArgs : public TEvArgs {
 };
 
 struct TBlobDepotTestEnvironment {
+    ui64 RandomSeed;
     TMersenne<ui32> Mt;
     TMersenne<ui64> Mt64;
 
@@ -191,7 +169,8 @@ struct TBlobDepotTestEnvironment {
 
     TBlobDepotTestEnvironment(ui32 seed = 0, ui32 numGroups = 1, ui32 nodeCount = 8,
             TBlobStorageGroupType erasure = TBlobStorageGroupType::ErasureMirror3of4)
-        : Mt(seed)
+        : RandomSeed(seed)
+        , Mt(seed)
         , Mt64(seed) {
         Cerr << "Mersenne random seed " << seed << Endl;
         ConfigureEnvironment(numGroups, Env, RegularGroups, BlobDepot, nodeCount, erasure);
diff --git a/ydb/core/blobstorage/ut_blobstorage/blob_depot_test_functions.cpp b/ydb/core/blobstorage/ut_blobstorage/blob_depot_test_functions.cpp
index 1cdbeb9b7cd3..ec56f7a91d6a 100644
--- a/ydb/core/blobstorage/ut_blobstorage/blob_depot_test_functions.cpp
+++ b/ydb/core/blobstorage/ut_blobstorage/blob_depot_test_functions.cpp
@@ -1,4 +1,5 @@
 #include <ydb/core/blobstorage/ut_blobstorage/lib/env.h>
+#include <ydb/core/blobstorage/ut_blobstorage/lib/common.h>
 #include <ydb/core/blob_depot/events.h>
 
 #include <algorithm>
@@ -460,14 +461,18 @@ void TestVerifiedRandom(TBlobDepotTestEnvironment& tenv, ui32 nodeCount, ui64 ta
         COLLECT_GARBAGE_HARD,
         COLLECT_GARBAGE_SOFT,
         RESTART_BLOB_DEPOT,
+        __COUNT__,
     };
 
     std::vector<std::string> actionName = {
         "ALTER", "PUT", "GET", "MULTIGET", "RANGE", "BLOCK", "DISCOVER", "COLLECT_GARBAGE_HARD", "COLLECT_GARBAGE_SOFT", "RESTART_BLOB_DEPOT"
     };
 
-    std::vector<ui32> probs = probabilities;
-    TIntervals act(probs);
+    TWeightedRandom<ui32> act(tenv.RandomSeed + 0xABCD);
+    Y_ABORT_UNLESS(probabilities.size() == EActions::__COUNT__);
+    for (ui32 i = 0; i < probabilities.size(); ++i) {
+        act.AddValue(i, probabilities[i]);
+    }
 
     std::vector<ui64> tablets = {tabletId0, tabletId0 + 1, tabletId0 + 2};
     std::vector<ui32> tabletGen = {1, 1, 1};
@@ -508,7 +513,7 @@ void TestVerifiedRandom(TBlobDepotTestEnvironment& tenv, ui32 nodeCount, ui64 ta
         ui32 hardCollectGen = state[tabletId].Channels[channel].HardCollectGen;
         ui32 hardCollectStep = state[tabletId].Channels[channel].HardCollectStep;
 
-        ui32 action = act.GetInterval(tenv.Rand(act.UpperLimit()));
+        ui32 action = act.GetRandom();
         // Cerr << "iteration# " << iteration << " action# " << actionName[action] << " timer# " << timer.Passed() << Endl;
         switch (action) {
         case EActions::ALTER:
@@ -689,13 +694,13 @@ void TestVerifiedRandom(TBlobDepotTestEnvironment& tenv, ui32 nodeCount, ui64 ta
             break;
 
         default:
-            UNIT_FAIL("TIntervals failed");
+            UNIT_FAIL("Unknown action# " << action);
         }
     }
 }
 
 void TestLoadPutAndGet(TBlobDepotTestEnvironment& tenv, ui64 tabletId, ui32 groupId, ui32 blobsNum, ui32 maxBlobSize,
-        ui32 readsNum, bool decommit, ui32 timeLimitSec, std::vector<ui32> probablities) {
+        ui32 readsNum, bool decommit, ui32 timeLimitSec, std::vector<ui32> probabilities) {
     enum EActions {
         GET,
         MULTIGET,
@@ -703,9 +708,14 @@ void TestLoadPutAndGet(TBlobDepotTestEnvironment& tenv, ui64 tabletId, ui32 grou
         DISCOVER,
         CATCH_ALL,
         RESTART_BLOB_DEPOT,
+        __COUNT__,
     };
-    std::vector<ui32> probs = probablities;
-    TIntervals act(probs);
+    
+    TWeightedRandom<ui32> act(tenv.RandomSeed + 0xABCD);
+    Y_ABORT_UNLESS(probabilities.size() == EActions::__COUNT__);
+    for (ui32 i = 0; i < probabilities.size(); ++i) {
+        act.AddValue(i, probabilities[i]);
+    }
 
     std::vector<TBlobInfo> blobs;
     std::map<TLogoBlobID, TBlobInfo*> mappedBlobs;
@@ -748,7 +758,7 @@ void TestLoadPutAndGet(TBlobDepotTestEnvironment& tenv, ui64 tabletId, ui32 grou
     THPTimer timer;
 
     for (ui32 iteration = 0; iteration < readsNum; ++iteration) {
-        ui32 action = act.GetInterval(tenv.Rand(act.UpperLimit()));
+        ui32 action = act.GetRandom();
         if (iteration == readsNum - 1) { // Catch all results on the last iteration
             action = EActions::CATCH_ALL;
         }
@@ -875,7 +885,7 @@ void TestLoadPutAndGet(TBlobDepotTestEnvironment& tenv, ui64 tabletId, ui32 grou
             break;
 
         default:
-            UNIT_FAIL("TIntervals failed");
+            UNIT_FAIL("Unknown action# " << action);
         }
     }
 }
diff --git a/ydb/core/kqp/ut/join/data/queries/test_join_hint1.sql b/ydb/core/kqp/ut/join/data/queries/test_join_hint1.sql
new file mode 100644
index 000000000000..c5900a1aa1ea
--- /dev/null
+++ b/ydb/core/kqp/ut/join/data/queries/test_join_hint1.sql
@@ -0,0 +1,12 @@
+PRAGMA ydb.OptimizerHints = 
+'
+    JoinType(R S Shuffle) 
+    Rows(R # 1) 
+    Rows(R S # 10e6)
+';
+
+SELECT *
+FROM `/Root/R` as R
+    INNER JOIN
+        `/Root/S` as S
+    ON R.id = S.id
\ No newline at end of file
diff --git a/ydb/core/kqp/ut/join/data/queries/test_join_hint2.sql b/ydb/core/kqp/ut/join/data/queries/test_join_hint2.sql
new file mode 100644
index 000000000000..9621162506ce
--- /dev/null
+++ b/ydb/core/kqp/ut/join/data/queries/test_join_hint2.sql
@@ -0,0 +1,17 @@
+PRAGMA ydb.OptimizerHints = 'Rows(R S # 1)';
+
+
+SELECT *
+FROM `/Root/R` as R
+    INNER JOIN
+        `/Root/S` as S
+    ON R.id = S.id
+    INNER JOIN
+        `/Root/T` as T
+    ON S.id = T.id
+    INNER JOIN
+        `/Root/U` as U
+    ON T.id = U.id
+    INNER JOIN
+        `/Root/V` as V
+    ON U.id = V.id
diff --git a/ydb/core/tablet_flat/test/libs/exec/runner.h b/ydb/core/tablet_flat/test/libs/exec/runner.h
index b2b53302f15e..81a023864507 100644
--- a/ydb/core/tablet_flat/test/libs/exec/runner.h
+++ b/ydb/core/tablet_flat/test/libs/exec/runner.h
@@ -183,7 +183,7 @@ namespace NFake {
             { /*_ Shared page collection cache service, used by executor */
                 auto config = MakeHolder<TSharedPageCacheConfig>();
 
-                config->CacheConfig = new TCacheCacheConfig(conf.Shared, nullptr, nullptr, nullptr);
+                config->LimitBytes = conf.Shared;
                 config->TotalAsyncQueueInFlyLimit = conf.AsyncQueue;
                 config->TotalScanQueueInFlyLimit = conf.ScanQueue;
                 config->Counters = MakeIntrusive<TSharedPageCacheCounters>(Env.GetDynamicCounters());
diff --git a/ydb/core/testlib/actors/block_events.h b/ydb/core/testlib/actors/block_events.h
index f54d525cf6cb..f8ca0c37e5d0 100644
--- a/ydb/core/testlib/actors/block_events.h
+++ b/ydb/core/testlib/actors/block_events.h
@@ -86,5 +86,4 @@ namespace NActors {
         bool Stopped = false;
     };
 
-
 } // namespace NActors
diff --git a/ydb/core/testlib/actors/test_runtime.h b/ydb/core/testlib/actors/test_runtime.h
index d57fcada8d28..f3a403dcdf3d 100644
--- a/ydb/core/testlib/actors/test_runtime.h
+++ b/ydb/core/testlib/actors/test_runtime.h
@@ -103,6 +103,7 @@ namespace NActors {
                 this->DispatchEvents(options, simTimeout);
 
                 Y_ABORT_UNLESS(condition(), "Timeout while waiting for %s", description.c_str());
+                Cerr << "... waiting for " << description << " (done)" << Endl;
             }
         }
 
diff --git a/ydb/core/testlib/actors/test_runtime_ut.cpp b/ydb/core/testlib/actors/test_runtime_ut.cpp
index 54cde3af42fd..24cd2457e06a 100644
--- a/ydb/core/testlib/actors/test_runtime_ut.cpp
+++ b/ydb/core/testlib/actors/test_runtime_ut.cpp
@@ -1,5 +1,6 @@
 #include <ydb/core/testlib/actors/test_runtime.h>
 #include <ydb/core/testlib/actors/block_events.h>
+#include <ydb/core/testlib/actors/wait_events.h>
 #include <ydb/core/base/appdata.h>
 #include <ydb/library/actors/core/event_local.h>
 #include <ydb/library/actors/core/events.h>
@@ -826,6 +827,65 @@ Y_UNIT_TEST_SUITE(TActorTest) {
         UNIT_ASSERT_VALUES_EQUAL(values.at(1), 4);
         UNIT_ASSERT_VALUES_EQUAL(values.at(2), 7);
     }
+
+    Y_UNIT_TEST(TestWaitForFirstEvent) {
+        enum EEv {
+            EvTrigger = EventSpaceBegin(TEvents::ES_PRIVATE)
+        };
+
+        struct TEvTrigger : public TEventLocal<TEvTrigger, EvTrigger> {
+            int Value;
+
+            TEvTrigger(int value)
+                : Value(value)
+            {}
+        };
+
+        class TSourceActor : public TActorBootstrapped<TSourceActor> {
+        public:
+            TSourceActor(const TActorId& target)
+                : Target(target)
+            {}
+
+            void Bootstrap() {
+                Become(&TThis::StateWork);
+                Schedule(TDuration::Seconds(1), new TEvents::TEvWakeup);
+            }
+
+        private:
+            STFUNC(StateWork) {
+                switch (ev->GetTypeRewrite()) {
+                    hFunc(TEvents::TEvWakeup, Handle);
+                }
+            }
+
+            void Handle(TEvents::TEvWakeup::TPtr&) {
+                Send(Target, new TEvTrigger(++Counter));
+                Schedule(TDuration::Seconds(1), new TEvents::TEvWakeup);
+            }
+
+        private:
+            TActorId Target;
+            int Counter = 0;
+        };
+
+        TTestActorRuntime runtime;
+        runtime.Initialize(MakeEgg());
+
+        TActorId target = runtime.AllocateEdgeActor();
+
+        TActorId actorId = runtime.Register(new TSourceActor(target));
+        runtime.EnableScheduleForActor(actorId);
+
+        {
+            TWaitForFirstEvent<TEvTrigger> waiter(runtime);
+            waiter.Wait();
+        }
+        {
+            TWaitForFirstEvent<TEvTrigger> waiter(runtime, [](const TEvTrigger::TPtr& ev){ return ev->Get()->Value == 10; });
+            waiter.Wait();
+        }
+    }    
 }
 
 }
diff --git a/ydb/core/testlib/actors/wait_events.cpp b/ydb/core/testlib/actors/wait_events.cpp
new file mode 100644
index 000000000000..d085c37468ee
--- /dev/null
+++ b/ydb/core/testlib/actors/wait_events.cpp
@@ -0,0 +1,1 @@
+#include "wait_events.h"
diff --git a/ydb/core/testlib/actors/wait_events.h b/ydb/core/testlib/actors/wait_events.h
new file mode 100644
index 000000000000..8982952ee5f9
--- /dev/null
+++ b/ydb/core/testlib/actors/wait_events.h
@@ -0,0 +1,48 @@
+#include "test_runtime.h"
+
+#include <functional>
+
+namespace NActors {
+
+    /**
+     * Easy wait for a first event under the test actor runtime
+     *
+     */
+    template<class TEvType>
+    class TWaitForFirstEvent {
+    public:
+        TWaitForFirstEvent(TTestActorRuntime& runtime, std::function<bool(const typename TEvType::TPtr&)> condition = {})
+            : Runtime(runtime)
+            , Condition(std::move(condition))
+            , Holder(Runtime.AddObserver<TEvType>(
+                [this](typename TEvType::TPtr& ev) {
+                    if (EventSeen)
+                        return;
+                    if (Condition && !Condition(ev))
+                        return;
+                    EventSeen = true;
+                }))
+        {}
+
+        /**
+         * Wait for a first event
+         */
+        void Wait() {
+            Runtime.WaitFor(TypeName<TEvType>(), [&]{ return EventSeen; });
+        }
+
+        /**
+         * Stops waiting and remove event observer
+         */
+        void Stop() {
+            Holder.Remove();
+        }
+
+    private:
+        TTestActorRuntime& Runtime;
+        std::function<bool(const typename TEvType::TPtr&)> Condition;
+        TTestActorRuntime::TEventObserverHolder Holder;
+        bool EventSeen = false;
+    };
+
+} // namespace NActors
diff --git a/ydb/core/testlib/actors/ya.make b/ydb/core/testlib/actors/ya.make
index 9c7caacf445d..1c51d6746a47 100644
--- a/ydb/core/testlib/actors/ya.make
+++ b/ydb/core/testlib/actors/ya.make
@@ -5,6 +5,8 @@ SRCS(
     block_events.h
     test_runtime.cpp
     test_runtime.h
+    wait_events.cpp
+    wait_events.h
 )
 
 PEERDIR(
diff --git a/ydb/core/testlib/basics/feature_flags.h b/ydb/core/testlib/basics/feature_flags.h
index 04395a54f3fd..31a2b855d6e4 100644
--- a/ydb/core/testlib/basics/feature_flags.h
+++ b/ydb/core/testlib/basics/feature_flags.h
@@ -64,6 +64,7 @@ class TTestFeatureFlagsHolder {
     FEATURE_FLAG_SETTER(EnableChangefeedsOnIndexTables)
     FEATURE_FLAG_SETTER(EnablePgSyntax)
     FEATURE_FLAG_SETTER(EnableTieringInColumnShard)
+    FEATURE_FLAG_SETTER(EnableMetadataObjectsOnServerless)
     FEATURE_FLAG_SETTER(EnableOlapCompression)
 
 #undef FEATURE_FLAG_SETTER
diff --git a/ydb/core/testlib/basics/services.cpp b/ydb/core/testlib/basics/services.cpp
index 80d526f7815e..d3a6c70f0293 100644
--- a/ydb/core/testlib/basics/services.cpp
+++ b/ydb/core/testlib/basics/services.cpp
@@ -30,7 +30,7 @@
 #include <ydb/core/tx/scheme_board/cache.h>
 #include <ydb/core/tx/columnshard/blob_cache.h>
 #include <ydb/core/sys_view/service/sysview_service.h>
-#include <ydb/core/statistics/stat_service.h>
+#include <ydb/core/statistics/service/service.h>
 
 #include <util/system/env.h>
 
@@ -157,15 +157,15 @@ namespace NPDisk {
 
     void SetupSharedPageCache(TTestActorRuntime& runtime, ui32 nodeIndex, NFake::TCaches caches)
     {
-        auto pageCollectionCacheConfig = MakeHolder<TSharedPageCacheConfig>();
-        pageCollectionCacheConfig->CacheConfig = new TCacheCacheConfig(caches.Shared, nullptr, nullptr, nullptr);
-        pageCollectionCacheConfig->TotalAsyncQueueInFlyLimit = caches.AsyncQueue;
-        pageCollectionCacheConfig->TotalScanQueueInFlyLimit = caches.ScanQueue;
-        pageCollectionCacheConfig->Counters = MakeIntrusive<TSharedPageCacheCounters>(runtime.GetDynamicCounters(nodeIndex));
+        auto sharedCacheConfig = MakeHolder<TSharedPageCacheConfig>();
+        sharedCacheConfig->LimitBytes = caches.Shared;
+        sharedCacheConfig->TotalAsyncQueueInFlyLimit = caches.AsyncQueue;
+        sharedCacheConfig->TotalScanQueueInFlyLimit = caches.ScanQueue;
+        sharedCacheConfig->Counters = MakeIntrusive<TSharedPageCacheCounters>(runtime.GetDynamicCounters(nodeIndex));
 
         runtime.AddLocalService(MakeSharedPageCacheId(0),
             TActorSetupCmd(
-                CreateSharedPageCache(std::move(pageCollectionCacheConfig), runtime.GetMemObserver(nodeIndex)),
+                CreateSharedPageCache(std::move(sharedCacheConfig), runtime.GetMemObserver(nodeIndex)),
                 TMailboxType::ReadAsFilled,
                 0),
             nodeIndex);
diff --git a/ydb/core/testlib/basics/ya.make b/ydb/core/testlib/basics/ya.make
index 642640447975..67fef3796fbc 100644
--- a/ydb/core/testlib/basics/ya.make
+++ b/ydb/core/testlib/basics/ya.make
@@ -21,6 +21,7 @@ PEERDIR(
     ydb/core/mind
     ydb/core/node_whiteboard
     ydb/core/quoter
+    ydb/core/statistics/service
     ydb/core/tablet_flat
     ydb/core/testlib/actors
     ydb/core/tx/columnshard
diff --git a/ydb/library/actors/testlib/test_runtime.cpp b/ydb/library/actors/testlib/test_runtime.cpp
index 12c63197c658..d448287d5c04 100644
--- a/ydb/library/actors/testlib/test_runtime.cpp
+++ b/ydb/library/actors/testlib/test_runtime.cpp
@@ -1166,6 +1166,26 @@ namespace NActors {
             tempEdgeEventsCaptor.Reset(new TTempEdgeEventsCaptor(*this));
         }
 
+        auto checkStopConditions = [&](bool perMessage = false) -> bool {
+            // Note: too many tests expect unrelated messages to be
+            // processed before simulation is stopped.
+            if (!perMessage) {
+                if (localContext.FinalEventFound) {
+                    return true;
+                }
+
+                if (!localContext.FoundNonEmptyMailboxes.empty()) {
+                    return true;
+                }
+            }
+
+            if (options.CustomFinalCondition && options.CustomFinalCondition()) {
+                return true;
+            }
+
+            return false;
+        };
+
         TEventMailBoxList& currentMailboxes = useRestrictedMailboxes ? restrictedMailboxes : Mailboxes;
         while (!currentMailboxes.empty()) {
             bool hasProgress = true;
@@ -1195,7 +1215,8 @@ namespace NActors {
                     isEmpty = true;
                     auto mboxIt = startWithMboxIt;
                     TDeque<TEventMailboxId> suspectedBoxes;
-                    while (true) {
+                    bool stopCondition = false;
+                    while (!stopCondition) {
                         auto& mbox = *mboxIt;
                         bool isIgnored = true;
                         if (!mbox.second->IsEmpty()) {
@@ -1264,6 +1285,9 @@ namespace NActors {
                                         case EEventAction::PROCESS:
                                             UpdateFinalEventsStatsForEachContext(*ev);
                                             SendInternal(ev.Release(), mbox.first.NodeId - FirstNodeId, false);
+                                            if (checkStopConditions(/* perMessage */ true)) {
+                                                stopCondition = true;
+                                            }
                                             break;
                                         case EEventAction::DROP:
                                             // do nothing
@@ -1305,19 +1329,17 @@ namespace NActors {
                             currentMailboxes.erase(it);
                         }
                     }
+
+                    if (stopCondition) {
+                        return true;
+                    }
                 }
             }
 
-            if (localContext.FinalEventFound) {
+            if (checkStopConditions()) {
                 return true;
             }
 
-            if (!localContext.FoundNonEmptyMailboxes.empty())
-                return true;
-
-            if (options.CustomFinalCondition && options.CustomFinalCondition())
-                return true;
-
             if (options.FinalEvents.empty()) {
                 for (auto& mbox : currentMailboxes) {
                     if (!mbox.second->IsActive(TInstant::MicroSeconds(CurrentTimestamp)))
diff --git a/ydb/library/testlib/service_mocks/ldap_mock/ldap_message_processor.cpp b/ydb/library/testlib/service_mocks/ldap_mock/ldap_message_processor.cpp
index 5e3069ce936f..9e49abda4a0e 100644
--- a/ydb/library/testlib/service_mocks/ldap_mock/ldap_message_processor.cpp
+++ b/ydb/library/testlib/service_mocks/ldap_mock/ldap_message_processor.cpp
@@ -160,6 +160,7 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
 
     if (length == 0) {
         responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        Cerr << "LDAP_MOCK: ExtendedRequest, protocol error, length 1 is zero" << Endl;
         return {responseOpData};
     }
 
@@ -170,6 +171,8 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
     EStatus status = EStatus::PROTOCOL_ERROR;
     if (oidValue == LDAP_EXOP_START_TLS) {
         status = EStatus::SUCCESS;
+    } else {
+        Cerr << "LDAP_MOCK: ExtendedRequest, protocol error, oidValue != LDAP_EXOP_START_TLS" << Endl;
     }
 
     responseOpData.Data = CreateExtendedResponse({.Status = status}, oidValue, "");
@@ -187,18 +190,21 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
 
     if (length == 0) {
         responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        Cerr << "LDAP_MOCK: BindRequest, protocol error, length 1 is zero" << Endl;
         return {responseOpData};
     }
 
     int version = GetInt();
     if (version > 127) {
         responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        Cerr << "LDAP_MOCK: BindRequest, protocol error, version > 127" << Endl;
         return {responseOpData};
     }
 
     unsigned char elementType = GetByte();
     if (elementType != EElementType::STRING) {
         responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        Cerr << "LDAP_MOCK: BindRequest, protocol error, login is not a string" << Endl;
         return {responseOpData};
     }
 
@@ -216,6 +222,7 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
 
     if (it == responses.end()) {
         responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        Cerr << "LDAP_MOCK: BindRequest, protocol error, unexpected request, not matched any of provided to mock" << Endl;
         return {responseOpData};
     }
 
@@ -231,14 +238,16 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
 
     size_t length = GetLength();
     if (length == 0) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "length 1 is zero"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, length 1 is zero" << Endl;
         return {responseOpData};
     }
 
     // Extract BaseDn
     unsigned char elementType = GetByte();
     if (elementType != EElementType::STRING) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "BaseDn is not a string type"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, BaseDn is not a string type" << Endl;
         return {responseOpData};
     }
 
@@ -247,12 +256,14 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
     // Extract scope
     elementType = GetByte();
     if (elementType != EElementType::ENUMERATED) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "Scope is not an enum type"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, Scope is not an enum type" << Endl;
         return {responseOpData};
     }
     length = GetLength();
     if (length == 0) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "length 2 is zero"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, length 2 is zero" << Endl;
         return {responseOpData};
     }
     requestInfo.Scope = GetByte();
@@ -260,12 +271,14 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
     // Extract derefAliases
     elementType = GetByte();
     if (elementType != EElementType::ENUMERATED) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "DerefAliases is not en enum"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, DerefAliases is not en enum" << Endl;
         return {responseOpData};
     }
     length = GetLength();
     if (length == 0) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "length 3 is zero"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, length 3 is zero" << Endl;
         return {responseOpData};
     }
     requestInfo.DerefAliases = GetByte();
@@ -281,12 +294,14 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
     // Extract typesOnly
     elementType = GetByte();
     if (elementType != EElementType::BOOL) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "TypesOnly is not bool"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, TypesOnly is not bool" << Endl;
         return {responseOpData};
     }
     length = GetLength();
     if (length == 0) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "length 4 is zero"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, length 4 is zero" << Endl;
         return {responseOpData};
     }
     requestInfo.TypesOnly = GetByte();
@@ -296,7 +311,8 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
     // Extract Attributes
     elementType = GetByte();
     if (elementType != EElementType::SEQUENCE) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "Attributes is not a sequence"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, Attributes is not a sequence" << Endl;
         return {responseOpData};
     }
     length = GetLength();
@@ -304,7 +320,8 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
     while (ReadBytes < limit) {
         elementType = GetByte();
         if (elementType != EElementType::STRING) {
-            responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+            responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "Attribute is not a string"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, Attribute is not a string" << Endl;
             return {responseOpData};
         }
         requestInfo.Attributes.push_back(GetString());
@@ -316,7 +333,8 @@ std::vector<TLdapRequestProcessor::TProtocolOpData> TLdapRequestProcessor::Proce
     });
 
     if (it == responses.end()) {
-        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR});
+        responseOpData.Data = CreateResponse({.Status = EStatus::PROTOCOL_ERROR, .DiagnosticMsg = "unexpected request, not matched any of provided to mock"});
+        Cerr << "LDAP_MOCK: SearchRequest, protocol error, unexpected request, not matched any of provided to mock" << Endl;
         return {responseOpData};
     }
 
diff --git a/ydb/library/yql/tests/sql/dq_file/part0/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part0/canondata/result.json
index 09145edffa3e..129986fc39db 100644
--- a/ydb/library/yql/tests/sql/dq_file/part0/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part0/canondata/result.json
@@ -376,9 +376,9 @@
     ],
     "test.test[aggregate-group_by_ru_join_qualified-default.txt-Debug]": [
         {
-            "checksum": "272ec39ebf5a17f62026a33e2a2934cb",
-            "size": 6253,
-            "uri": "https://{canondata_backend}/1937027/de4be6db5a9d9653a2d7cf00ba5ccfe48c1b3a99/resource.tar.gz#test.test_aggregate-group_by_ru_join_qualified-default.txt-Debug_/opt.yql_patched"
+            "checksum": "ce88db3b4db16f8b52732b13ccb9c654",
+            "size": 6326,
+            "uri": "https://{canondata_backend}/1924537/435b3ac583db04c7fee418a89b1f7da98bd4b6d3/resource.tar.gz#test.test_aggregate-group_by_ru_join_qualified-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_join_qualified-default.txt-Plan]": [
@@ -990,9 +990,9 @@
     ],
     "test.test[in-in_sorted--Debug]": [
         {
-            "checksum": "6413adc7b83cc0bfcde62b4b59651ad9",
-            "size": 2465,
-            "uri": "https://{canondata_backend}/1937027/de4be6db5a9d9653a2d7cf00ba5ccfe48c1b3a99/resource.tar.gz#test.test_in-in_sorted--Debug_/opt.yql_patched"
+            "checksum": "5cb0631da792be62f55162f63b863b97",
+            "size": 2490,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_in-in_sorted--Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_sorted--Plan]": [
@@ -1194,9 +1194,9 @@
     ],
     "test.test[join-anyjoin_common_nodup--Debug]": [
         {
-            "checksum": "0ce1dc055d6a000617901875069267eb",
-            "size": 5181,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-anyjoin_common_nodup--Debug_/opt.yql_patched"
+            "checksum": "d5271a4a37fe4b88eef7b833ee2517db",
+            "size": 5223,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-anyjoin_common_nodup--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-anyjoin_common_nodup--Plan]": [
@@ -1244,9 +1244,9 @@
     ],
     "test.test[join-equi_join_three_asterisk_eval--Debug]": [
         {
-            "checksum": "64879c8a5d85625ee6c84eeb7538eae3",
-            "size": 4462,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-equi_join_three_asterisk_eval--Debug_/opt.yql_patched"
+            "checksum": "085ee658ac973a07ab54553ea66086a7",
+            "size": 4489,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-equi_join_three_asterisk_eval--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_three_asterisk_eval--Plan]": [
@@ -1266,9 +1266,9 @@
     ],
     "test.test[join-equi_join_two_mult_keys--Debug]": [
         {
-            "checksum": "acfdc144cb5d0bbcd68ff71d3156af98",
-            "size": 2371,
-            "uri": "https://{canondata_backend}/1689644/bb7a5ebb839768b3371fdb6466d95c49c7caa5bc/resource.tar.gz#test.test_join-equi_join_two_mult_keys--Debug_/opt.yql_patched"
+            "checksum": "078acbf124a50c969a0103107578fddd",
+            "size": 2411,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-equi_join_two_mult_keys--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_two_mult_keys--Plan]": [
@@ -1288,9 +1288,9 @@
     ],
     "test.test[join-equi_join_two_mult_keys-off-Debug]": [
         {
-            "checksum": "a1d174bf7e99e5fe6337bfeb287a128c",
-            "size": 2233,
-            "uri": "https://{canondata_backend}/1689644/bb7a5ebb839768b3371fdb6466d95c49c7caa5bc/resource.tar.gz#test.test_join-equi_join_two_mult_keys-off-Debug_/opt.yql_patched"
+            "checksum": "5fe7699f84e1a248e4063aaac5252701",
+            "size": 2241,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-equi_join_two_mult_keys-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_two_mult_keys-off-Plan]": [
@@ -1316,9 +1316,9 @@
     ],
     "test.test[join-flatten_columns1--Debug]": [
         {
-            "checksum": "2459a63383ac0832156b17d04839ee3f",
-            "size": 2887,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-flatten_columns1--Debug_/opt.yql_patched"
+            "checksum": "12b929238355b428c4de5af58c077020",
+            "size": 2908,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-flatten_columns1--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-flatten_columns1--Plan]": [
@@ -1338,9 +1338,9 @@
     ],
     "test.test[join-flatten_columns1-off-Debug]": [
         {
-            "checksum": "3091ffd5285f41da83d0cd2958242157",
-            "size": 2698,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-flatten_columns1-off-Debug_/opt.yql_patched"
+            "checksum": "a2bf644cf9fdb3ecc352cbc21aab02d0",
+            "size": 2697,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-flatten_columns1-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-flatten_columns1-off-Plan]": [
@@ -1366,9 +1366,9 @@
     ],
     "test.test[join-full_join-off-Debug]": [
         {
-            "checksum": "39db9feb52b533779fab4e8e705d1306",
-            "size": 3038,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-full_join-off-Debug_/opt.yql_patched"
+            "checksum": "82721b8e331637881d1847a8a110a60f",
+            "size": 3029,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-full_join-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_join-off-Plan]": [
@@ -1394,9 +1394,9 @@
     ],
     "test.test[join-inner_with_select--Debug]": [
         {
-            "checksum": "552a0e4ea591df3d21795b45f8e8f626",
-            "size": 2837,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-inner_with_select--Debug_/opt.yql_patched"
+            "checksum": "caa90fffb39fe515f7d215192d0a48cb",
+            "size": 2865,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-inner_with_select--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_with_select--Plan]": [
@@ -1416,9 +1416,9 @@
     ],
     "test.test[join-join_key_cmp_udf--Debug]": [
         {
-            "checksum": "6b331e6812849d51bd72da97a7c7c156",
-            "size": 2971,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-join_key_cmp_udf--Debug_/opt.yql_patched"
+            "checksum": "8adef039f3f5d22b192798cd58db1724",
+            "size": 2981,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-join_key_cmp_udf--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_key_cmp_udf--Plan]": [
@@ -1438,9 +1438,9 @@
     ],
     "test.test[join-left_all--Debug]": [
         {
-            "checksum": "2d2a405d2a994ea6b6bef9b8b1599ca6",
-            "size": 2379,
-            "uri": "https://{canondata_backend}/1689644/bb7a5ebb839768b3371fdb6466d95c49c7caa5bc/resource.tar.gz#test.test_join-left_all--Debug_/opt.yql_patched"
+            "checksum": "bb3afbeba49b41a2d0f60d50c81a2713",
+            "size": 2399,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-left_all--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_all--Plan]": [
@@ -1460,9 +1460,9 @@
     ],
     "test.test[join-lookupjoin_not_selected-off-Debug]": [
         {
-            "checksum": "dd6677f286ea690453bf167f3843705c",
-            "size": 2890,
-            "uri": "https://{canondata_backend}/1689644/bb7a5ebb839768b3371fdb6466d95c49c7caa5bc/resource.tar.gz#test.test_join-lookupjoin_not_selected-off-Debug_/opt.yql_patched"
+            "checksum": "b9d2cb21d253f4207a1d7d42eb839b2e",
+            "size": 2894,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-lookupjoin_not_selected-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_not_selected-off-Plan]": [
@@ -1491,9 +1491,9 @@
     ],
     "test.test[join-mergejoin_force_align3-off-Debug]": [
         {
-            "checksum": "17fe7eed2317c1e169baf9f9b66ed280",
-            "size": 4053,
-            "uri": "https://{canondata_backend}/1689644/bb7a5ebb839768b3371fdb6466d95c49c7caa5bc/resource.tar.gz#test.test_join-mergejoin_force_align3-off-Debug_/opt.yql_patched"
+            "checksum": "51835e164adebf5e3826ae436cd08d26",
+            "size": 4051,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-mergejoin_force_align3-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_force_align3-off-Plan]": [
@@ -1519,9 +1519,9 @@
     ],
     "test.test[join-mergejoin_force_per_link-off-Debug]": [
         {
-            "checksum": "9a40e68152739a5fcf5caaf3963afa7b",
-            "size": 3391,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-mergejoin_force_per_link-off-Debug_/opt.yql_patched"
+            "checksum": "81a4bd1043d1af649157c7952d3d911a",
+            "size": 3409,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-mergejoin_force_per_link-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_force_per_link-off-Plan]": [
@@ -1547,9 +1547,9 @@
     ],
     "test.test[join-mergejoin_narrows_output_sort-off-Debug]": [
         {
-            "checksum": "186276ff0bbf7870ab40b9d106d1929d",
-            "size": 4538,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-mergejoin_narrows_output_sort-off-Debug_/opt.yql_patched"
+            "checksum": "06775caea284add41b6e15842d9eb343",
+            "size": 4548,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-mergejoin_narrows_output_sort-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_narrows_output_sort-off-Plan]": [
@@ -1597,9 +1597,9 @@
     ],
     "test.test[join-premap_common_inner_filter-off-Debug]": [
         {
-            "checksum": "2caa105d9a5e61181d965d88be379995",
-            "size": 2805,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-premap_common_inner_filter-off-Debug_/opt.yql_patched"
+            "checksum": "4156d7124a9f4cb8c7823eb2fcd255c8",
+            "size": 2799,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-premap_common_inner_filter-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_inner_filter-off-Plan]": [
@@ -1647,9 +1647,9 @@
     ],
     "test.test[join-pullup_exclusion--Debug]": [
         {
-            "checksum": "36740c5e0c22743f51700a165c40d645",
-            "size": 3703,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-pullup_exclusion--Debug_/opt.yql_patched"
+            "checksum": "565c2289c7cdda6d9e12e8630957b208",
+            "size": 3719,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-pullup_exclusion--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_exclusion--Plan]": [
@@ -1669,9 +1669,9 @@
     ],
     "test.test[join-pullup_inner-off-Debug]": [
         {
-            "checksum": "06df01614c0cc2fe51a8e078df782714",
-            "size": 2721,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_join-pullup_inner-off-Debug_/opt.yql_patched"
+            "checksum": "9d5f0927f562ea1c028c70fbf1f5e49d",
+            "size": 2715,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-pullup_inner-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_inner-off-Plan]": [
@@ -1700,9 +1700,9 @@
     ],
     "test.test[join-yql-14829_left-off-Debug]": [
         {
-            "checksum": "53a02498c05e446c895842b0bdbc42f7",
-            "size": 5856,
-            "uri": "https://{canondata_backend}/1689644/bb7a5ebb839768b3371fdb6466d95c49c7caa5bc/resource.tar.gz#test.test_join-yql-14829_left-off-Debug_/opt.yql_patched"
+            "checksum": "809cdf3b1c315c4eca5ca7ed73412cf6",
+            "size": 5866,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_join-yql-14829_left-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-14829_left-off-Plan]": [
@@ -2622,9 +2622,9 @@
     ],
     "test.test[pg-tpch-q05-default.txt-Debug]": [
         {
-            "checksum": "1503b12c21cbe005e88e6e147457b5b2",
-            "size": 14977,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_pg-tpch-q05-default.txt-Debug_/opt.yql_patched"
+            "checksum": "1b1037dff3bea5e1d8505bc5a1f592f9",
+            "size": 15018,
+            "uri": "https://{canondata_backend}/1903885/6c9c0a088205fc4d8727c537e045c6fb7c1b497c/resource.tar.gz#test.test_pg-tpch-q05-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q05-default.txt-Plan]": [
@@ -2776,9 +2776,9 @@
     ],
     "test.test[sampling-bind_join_right-default.txt-Debug]": [
         {
-            "checksum": "568b2843649e230bd07bb79e282f045d",
-            "size": 2483,
-            "uri": "https://{canondata_backend}/1689644/bb7a5ebb839768b3371fdb6466d95c49c7caa5bc/resource.tar.gz#test.test_sampling-bind_join_right-default.txt-Debug_/opt.yql_patched"
+            "checksum": "f7c4ce51ca2522cb66fc086dd63eabee",
+            "size": 2507,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_sampling-bind_join_right-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-bind_join_right-default.txt-Plan]": [
@@ -3077,9 +3077,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_coalesce_without_left_semi_1-default.txt-Debug]": [
         {
-            "checksum": "745699f8b092422291c51fa68f149e5f",
-            "size": 2360,
-            "uri": "https://{canondata_backend}/1871182/4d40c08aee85fb231923402132a00b2ae47137cc/resource.tar.gz#test.test_simple_columns-simple_columns_join_coalesce_without_left_semi_1-default.txt-Debug_/opt.yql_patched"
+            "checksum": "c66bf354c09f772c7278eed89f10115c",
+            "size": 2378,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_simple_columns-simple_columns_join_coalesce_without_left_semi_1-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_coalesce_without_left_semi_1-default.txt-Plan]": [
@@ -3121,9 +3121,9 @@
     ],
     "test.test[tpch-q13-default.txt-Debug]": [
         {
-            "checksum": "8cd5e47a66eba272d82d9880088138f6",
-            "size": 7138,
-            "uri": "https://{canondata_backend}/212715/2e75ebcaab6ea23aae1ed39a602e4ad780c354ab/resource.tar.gz#test.test_tpch-q13-default.txt-Debug_/opt.yql_patched"
+            "checksum": "d63a4440675f263392ba2cf4caa0585a",
+            "size": 7153,
+            "uri": "https://{canondata_backend}/1936273/8ea0dd0bb7dcfcb9060145c85aba7872eea15de5/resource.tar.gz#test.test_tpch-q13-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q13-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part1/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part1/canondata/result.json
index 0897e152a706..d8396ac8365b 100644
--- a/ydb/library/yql/tests/sql/dq_file/part1/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part1/canondata/result.json
@@ -452,9 +452,9 @@
     ],
     "test.test[aggregate-group_by_gs_duo--Debug]": [
         {
-            "checksum": "25b53d13ad1aaa9594a636741e68d3ea",
-            "size": 4031,
-            "uri": "https://{canondata_backend}/1937027/591a1ceca790d81eaf524a7a3e730722b0d7bdb7/resource.tar.gz#test.test_aggregate-group_by_gs_duo--Debug_/opt.yql_patched"
+            "checksum": "59257d703f2930e08d3b7f69094f53c9",
+            "size": 4083,
+            "uri": "https://{canondata_backend}/1130705/223d79eda7e49588c54267c8b7c488154ed801c9/resource.tar.gz#test.test_aggregate-group_by_gs_duo--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_duo--Plan]": [
@@ -474,9 +474,9 @@
     ],
     "test.test[aggregate-group_by_gs_flatten-default.txt-Debug]": [
         {
-            "checksum": "49cd9fa336a5fec980795d60d46618cc",
-            "size": 3857,
-            "uri": "https://{canondata_backend}/1871102/093ef1237a5eb90e2e1f6670f45824dd7aa652e1/resource.tar.gz#test.test_aggregate-group_by_gs_flatten-default.txt-Debug_/opt.yql_patched"
+            "checksum": "78c0e51be35dd604e8e44b570af2881b",
+            "size": 3909,
+            "uri": "https://{canondata_backend}/1937424/0a7fa81182305af7b414a8e11e361266a61bc724/resource.tar.gz#test.test_aggregate-group_by_gs_flatten-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_flatten-default.txt-Plan]": [
@@ -496,9 +496,9 @@
     ],
     "test.test[aggregate-group_by_ru_join_simple--Debug]": [
         {
-            "checksum": "9571d35aa29a9d3ee358bf0f0a41eb15",
-            "size": 5841,
-            "uri": "https://{canondata_backend}/1871102/093ef1237a5eb90e2e1f6670f45824dd7aa652e1/resource.tar.gz#test.test_aggregate-group_by_ru_join_simple--Debug_/opt.yql_patched"
+            "checksum": "8091f4227f492e86b7a87449851aae3b",
+            "size": 5916,
+            "uri": "https://{canondata_backend}/1817427/c9d5452335f1bec2244311087380ff1cb48cc606/resource.tar.gz#test.test_aggregate-group_by_ru_join_simple--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_join_simple--Plan]": [
@@ -978,9 +978,9 @@
     ],
     "test.test[expr-double_join_with_list_from_range--Debug]": [
         {
-            "checksum": "b3db6051555cc4f7d724f381bd6eaa8f",
-            "size": 2804,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_expr-double_join_with_list_from_range--Debug_/opt.yql_patched"
+            "checksum": "693223543d7c62c73a3b8952901efdaf",
+            "size": 2803,
+            "uri": "https://{canondata_backend}/1937492/31087c071b969ea75eb59570bea0f09cbff39e8c/resource.tar.gz#test.test_expr-double_join_with_list_from_range--Debug_/opt.yql_patched"
         }
     ],
     "test.test[expr-double_join_with_list_from_range--Plan]": [
@@ -1139,9 +1139,9 @@
     ],
     "test.test[hor_join-out_sampling--Debug]": [
         {
-            "checksum": "a7a731afc7145a0cee7006d262255061",
-            "size": 5549,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_hor_join-out_sampling--Debug_/opt.yql_patched"
+            "checksum": "8606ab607900ab1c285f8ba104e78a82",
+            "size": 5612,
+            "uri": "https://{canondata_backend}/1880306/b2c00ff823e390f0263acf2dbb68c876e0b31abd/resource.tar.gz#test.test_hor_join-out_sampling--Debug_/opt.yql_patched"
         }
     ],
     "test.test[hor_join-out_sampling--Plan]": [
@@ -1316,9 +1316,9 @@
     ],
     "test.test[join-convert_key--Debug]": [
         {
-            "checksum": "ac6cdd5b13d998b98ed84a41ef5b9172",
-            "size": 2991,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_join-convert_key--Debug_/opt.yql_patched"
+            "checksum": "578c7209fc76c6592f1543f1913a1bcd",
+            "size": 3013,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-convert_key--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-convert_key--Plan]": [
@@ -1338,9 +1338,9 @@
     ],
     "test.test[join-convert_key-off-Debug]": [
         {
-            "checksum": "abea3cc9e67cb04cbf1e989a916e776a",
-            "size": 2455,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_join-convert_key-off-Debug_/opt.yql_patched"
+            "checksum": "722e81adfcd40aaaa0942e7de9ad8919",
+            "size": 2462,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-convert_key-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-convert_key-off-Plan]": [
@@ -1366,9 +1366,9 @@
     ],
     "test.test[join-join_with_duplicate_keys_on_sorted-off-Debug]": [
         {
-            "checksum": "cf9071239f93b72ca31ccde94f3c2c24",
-            "size": 3224,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-join_with_duplicate_keys_on_sorted-off-Debug_/opt.yql_patched"
+            "checksum": "2a78638168abc58fcdf1fa3070c420f0",
+            "size": 3250,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-join_with_duplicate_keys_on_sorted-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_with_duplicate_keys_on_sorted-off-Plan]": [
@@ -1397,9 +1397,9 @@
     ],
     "test.test[join-join_without_correlation_and_dict_access--Debug]": [
         {
-            "checksum": "50bf7b6c15bf74a90cc30c497310beba",
-            "size": 4272,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-join_without_correlation_and_dict_access--Debug_/opt.yql_patched"
+            "checksum": "9e975625f1dd6eeb4e86400140ed5916",
+            "size": 4295,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-join_without_correlation_and_dict_access--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_without_correlation_and_dict_access--Plan]": [
@@ -1426,9 +1426,9 @@
     ],
     "test.test[join-join_without_correlation_and_dict_access-off-Debug]": [
         {
-            "checksum": "4774970de4a36a54e87ff3419af8bfcc",
-            "size": 3718,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-join_without_correlation_and_dict_access-off-Debug_/opt.yql_patched"
+            "checksum": "a081cc33fb9f0bb056a96ddee7d939ad",
+            "size": 3738,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-join_without_correlation_and_dict_access-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_without_correlation_and_dict_access-off-Plan]": [
@@ -1457,9 +1457,9 @@
     ],
     "test.test[join-left_join_null_column-off-Debug]": [
         {
-            "checksum": "caec46d2422053a772d83323cad11214",
-            "size": 2113,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-left_join_null_column-off-Debug_/opt.yql_patched"
+            "checksum": "49e6a2529d5d13b0b9d0da4074534d4a",
+            "size": 2117,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-left_join_null_column-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_join_null_column-off-Plan]": [
@@ -1488,9 +1488,9 @@
     ],
     "test.test[join-lookupjoin_bug7646_subst-off-Debug]": [
         {
-            "checksum": "103233baafa4196cfc43733d9daf2339",
-            "size": 5804,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_join-lookupjoin_bug7646_subst-off-Debug_/opt.yql_patched"
+            "checksum": "80f96e322ce4197cc94f5357dc221b20",
+            "size": 5815,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-lookupjoin_bug7646_subst-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_bug7646_subst-off-Plan]": [
@@ -1516,9 +1516,9 @@
     ],
     "test.test[join-lookupjoin_inner_1o2o--Debug]": [
         {
-            "checksum": "f39b142625c84e4037cd122cc7815545",
-            "size": 4120,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_join-lookupjoin_inner_1o2o--Debug_/opt.yql_patched"
+            "checksum": "17937991149d4dbb3747ad5d561b4586",
+            "size": 4154,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-lookupjoin_inner_1o2o--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner_1o2o--Plan]": [
@@ -1538,9 +1538,9 @@
     ],
     "test.test[join-mapjoin_early_rewrite-off-Debug]": [
         {
-            "checksum": "3621856563d2d26a919c9ac1de8e7ec7",
-            "size": 2580,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-mapjoin_early_rewrite-off-Debug_/opt.yql_patched"
+            "checksum": "36bf39e140d41063087b180f8f0cfdfa",
+            "size": 2582,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-mapjoin_early_rewrite-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_early_rewrite-off-Plan]": [
@@ -1566,9 +1566,9 @@
     ],
     "test.test[join-mergejoin_with_different_key_names-off-Debug]": [
         {
-            "checksum": "814b7e11f7020902ed2f76b480d5b2f7",
-            "size": 5167,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-mergejoin_with_different_key_names-off-Debug_/opt.yql_patched"
+            "checksum": "0113fba98bd9ee3c8f3cf5406b40e5f2",
+            "size": 5193,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-mergejoin_with_different_key_names-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_different_key_names-off-Plan]": [
@@ -1594,9 +1594,9 @@
     ],
     "test.test[join-mergejoin_with_table_range-off-Debug]": [
         {
-            "checksum": "48da308897659a5a3fda0ec9da8eb95d",
-            "size": 3031,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-mergejoin_with_table_range-off-Debug_/opt.yql_patched"
+            "checksum": "17e69e1d1ec7f65ab666229d756eb1df",
+            "size": 3047,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-mergejoin_with_table_range-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_table_range-off-Plan]": [
@@ -1622,9 +1622,9 @@
     ],
     "test.test[join-nopushdown_filter_with_depends_on--Debug]": [
         {
-            "checksum": "2aec55e11669027bd97ce399e9ca79aa",
-            "size": 2720,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-nopushdown_filter_with_depends_on--Debug_/opt.yql_patched"
+            "checksum": "3e96a7571375a28328d11b8108ddc0e1",
+            "size": 2734,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-nopushdown_filter_with_depends_on--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-nopushdown_filter_with_depends_on--Plan]": [
@@ -1643,9 +1643,9 @@
     ],
     "test.test[join-premap_map_semi--Debug]": [
         {
-            "checksum": "ed8cdddb2502fad654ab0edd85d09d71",
+            "checksum": "6d25f943212280d46685ce83f44fb319",
             "size": 3280,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-premap_map_semi--Debug_/opt.yql_patched"
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-premap_map_semi--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_map_semi--Plan]": [
@@ -1665,9 +1665,9 @@
     ],
     "test.test[join-pullup_context_dep--Debug]": [
         {
-            "checksum": "824e0c71abe08241398393b5a46ca92f",
-            "size": 2986,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-pullup_context_dep--Debug_/opt.yql_patched"
+            "checksum": "912a04d50b51f4d7e8c56f048c24a9b6",
+            "size": 3002,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-pullup_context_dep--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_context_dep--Plan]": [
@@ -1687,9 +1687,9 @@
     ],
     "test.test[join-simple_columns_partial-off-Debug]": [
         {
-            "checksum": "f8d56827fbff7c43ceb34fb1290ca52b",
-            "size": 4231,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_join-simple_columns_partial-off-Debug_/opt.yql_patched"
+            "checksum": "fb5931d5e4bd6ee2710d9f187e4a5d21",
+            "size": 4265,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-simple_columns_partial-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-simple_columns_partial-off-Plan]": [
@@ -1715,9 +1715,9 @@
     ],
     "test.test[join-split_to_list_as_key-off-Debug]": [
         {
-            "checksum": "bd97fafbada42e19dadddc47c2a227e5",
-            "size": 3252,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_join-split_to_list_as_key-off-Debug_/opt.yql_patched"
+            "checksum": "e2cadd78673b4636258f4e1e37b0dd12",
+            "size": 3261,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_join-split_to_list_as_key-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-split_to_list_as_key-off-Plan]": [
@@ -2425,9 +2425,9 @@
     ],
     "test.test[pg-tpch-q17-default.txt-Debug]": [
         {
-            "checksum": "e8527b988a9cc6abe5b30644500c96a9",
-            "size": 12782,
-            "uri": "https://{canondata_backend}/1031349/2509d6f19c7d08d2f97888cb86cd1f893cd619db/resource.tar.gz#test.test_pg-tpch-q17-default.txt-Debug_/opt.yql_patched"
+            "checksum": "c3dd68345b9670f399baeab1caf6c001",
+            "size": 12860,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_pg-tpch-q17-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q17-default.txt-Plan]": [
@@ -2447,9 +2447,9 @@
     ],
     "test.test[pg-tpch-q22-default.txt-Debug]": [
         {
-            "checksum": "6c8a685a6ddac197b5c4729aadaeaddd",
-            "size": 12561,
-            "uri": "https://{canondata_backend}/1903885/9c646d893756f8f6a633ac2a2027ef874f86cf92/resource.tar.gz#test.test_pg-tpch-q22-default.txt-Debug_/opt.yql_patched"
+            "checksum": "887c733dbb7fff78b7a31c2119e08130",
+            "size": 12647,
+            "uri": "https://{canondata_backend}/1937150/ada84f9d693b3fd476e8c136d4ac0c0ff177279b/resource.tar.gz#test.test_pg-tpch-q22-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q22-default.txt-Plan]": [
@@ -2581,9 +2581,9 @@
     ],
     "test.test[sampling-join_right_sample-default.txt-Debug]": [
         {
-            "checksum": "3b28a7d2f502ac3f898f0998969b6f1d",
-            "size": 2214,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_sampling-join_right_sample-default.txt-Debug_/opt.yql_patched"
+            "checksum": "e3260ea8a442694467c76a9d107154ff",
+            "size": 2230,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_sampling-join_right_sample-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-join_right_sample-default.txt-Plan]": [
@@ -2602,9 +2602,9 @@
     ],
     "test.test[sampling-orderedjoin_left_sample-default.txt-Debug]": [
         {
-            "checksum": "cde473753f045e37f86e3b911e1eac6f",
-            "size": 2319,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_sampling-orderedjoin_left_sample-default.txt-Debug_/opt.yql_patched"
+            "checksum": "5ef019535c5fcab8adcadd5ba52f2d24",
+            "size": 2335,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_sampling-orderedjoin_left_sample-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-orderedjoin_left_sample-default.txt-Plan]": [
@@ -2838,9 +2838,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_subreq_same_key-default.txt-Debug]": [
         {
-            "checksum": "1967fa00f2c757086f28bf0771646232",
-            "size": 2786,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_same_key-default.txt-Debug_/opt.yql_patched"
+            "checksum": "54b74d76f1cc8d9490f0261c0b754f2e",
+            "size": 2834,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_same_key-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_subreq_same_key-default.txt-Plan]": [
@@ -2859,21 +2859,21 @@
         {
             "checksum": "e77b4f2fcc974f91b5ac44b39809c374",
             "size": 4356,
-            "uri": "https://{canondata_backend}/1781765/a90279cc9a67c5059fc23ab2db51011dafb37555/resource.tar.gz#test.test_stream_lookup_join-lookup_join-default.txt-Analyze_/plan.txt"
+            "uri": "https://{canondata_backend}/1597364/a4a11f25f9a25c3aeb4b614333c373013ce0dbe0/resource.tar.gz#test.test_stream_lookup_join-lookup_join-default.txt-Analyze_/plan.txt"
         }
     ],
     "test.test[stream_lookup_join-lookup_join-default.txt-Debug]": [
         {
-            "checksum": "46f15d067c08d4bbd22caec7989e9697",
-            "size": 2720,
-            "uri": "https://{canondata_backend}/1781765/a90279cc9a67c5059fc23ab2db51011dafb37555/resource.tar.gz#test.test_stream_lookup_join-lookup_join-default.txt-Debug_/opt.yql_patched"
+            "checksum": "8051343667373980bb5e7dc16dea7601",
+            "size": 2724,
+            "uri": "https://{canondata_backend}/1597364/a4a11f25f9a25c3aeb4b614333c373013ce0dbe0/resource.tar.gz#test.test_stream_lookup_join-lookup_join-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[stream_lookup_join-lookup_join-default.txt-Plan]": [
         {
             "checksum": "e77b4f2fcc974f91b5ac44b39809c374",
             "size": 4356,
-            "uri": "https://{canondata_backend}/1781765/a90279cc9a67c5059fc23ab2db51011dafb37555/resource.tar.gz#test.test_stream_lookup_join-lookup_join-default.txt-Plan_/plan.txt"
+            "uri": "https://{canondata_backend}/1597364/a4a11f25f9a25c3aeb4b614333c373013ce0dbe0/resource.tar.gz#test.test_stream_lookup_join-lookup_join-default.txt-Plan_/plan.txt"
         }
     ],
     "test.test[stream_lookup_join-lookup_join-default.txt-Results]": [
@@ -2914,9 +2914,9 @@
     ],
     "test.test[table_range-range_with_view--Debug]": [
         {
-            "checksum": "8c3ab9a7d76fc314c4d5be392e075ad7",
-            "size": 3947,
-            "uri": "https://{canondata_backend}/1917492/1ed6d08398686e90568735860251083949d84e4e/resource.tar.gz#test.test_table_range-range_with_view--Debug_/opt.yql_patched"
+            "checksum": "5b6927fd57b28a292fc0a17afefdf28a",
+            "size": 3982,
+            "uri": "https://{canondata_backend}/1871102/a14717a3c8c558cf8fefe6d46cd5b04ed47ccc80/resource.tar.gz#test.test_table_range-range_with_view--Debug_/opt.yql_patched"
         }
     ],
     "test.test[table_range-range_with_view--Plan]": [
@@ -2936,9 +2936,9 @@
     ],
     "test.test[tpch-q12-default.txt-Debug]": [
         {
-            "checksum": "d9a5d2d92048d3758427858599f3ef33",
-            "size": 6764,
-            "uri": "https://{canondata_backend}/1924537/f2f8ec82f021dbf4a5216de80284759c6b6f6a8d/resource.tar.gz#test.test_tpch-q12-default.txt-Debug_/opt.yql_patched"
+            "checksum": "a4a2bf06e21276f088f341e02fd8d331",
+            "size": 6779,
+            "uri": "https://{canondata_backend}/1931696/8efbe84ad728243c3e1c1cdb30d3b3f31d345567/resource.tar.gz#test.test_tpch-q12-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q12-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part10/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part10/canondata/result.json
index 638f73aa00b1..752b0176f516 100644
--- a/ydb/library/yql/tests/sql/dq_file/part10/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part10/canondata/result.json
@@ -303,9 +303,9 @@
     ],
     "test.test[aggregate-group_by_mul_gs_ru--Debug]": [
         {
-            "checksum": "0638146b59bc226b8388bd56d7b4313f",
-            "size": 6072,
-            "uri": "https://{canondata_backend}/1923547/320f607d9e9c19a93a835d3183938f1fba6dd52c/resource.tar.gz#test.test_aggregate-group_by_mul_gs_ru--Debug_/opt.yql_patched"
+            "checksum": "ea41d7d534054a215601887475a08f36",
+            "size": 6129,
+            "uri": "https://{canondata_backend}/1773845/c255bb2163f40b1ca08f81b23e10624ae1969605/resource.tar.gz#test.test_aggregate-group_by_mul_gs_ru--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_mul_gs_ru--Plan]": [
@@ -340,23 +340,23 @@
     "test.test[aggregate-percentiles_ungrouped--Results]": [],
     "test.test[aggregate-subquery_aggregation--Analyze]": [
         {
-            "checksum": "9dec3798de4c88e1f79c01259fea4c30",
-            "size": 6627,
-            "uri": "https://{canondata_backend}/1600758/32cfdeb8c6377a2e7e62c6c4adbb95f25af7669b/resource.tar.gz#test.test_aggregate-subquery_aggregation--Analyze_/plan.txt"
+            "checksum": "49fb64ebed43ca080f30a0b8387033c3",
+            "size": 6149,
+            "uri": "https://{canondata_backend}/1773845/27425423327af8b10415a6bbb80a5aec7c55b13f/resource.tar.gz#test.test_aggregate-subquery_aggregation--Analyze_/plan.txt"
         }
     ],
     "test.test[aggregate-subquery_aggregation--Debug]": [
         {
-            "checksum": "be5464a62cb392e7ba87b2cce10d0a26",
-            "size": 3147,
-            "uri": "https://{canondata_backend}/937458/3ce9d3f90d17a09aa182a1ae8e08f2f065219fab/resource.tar.gz#test.test_aggregate-subquery_aggregation--Debug_/opt.yql_patched"
+            "checksum": "9ebd4251fdeffd3409adc7fd7de958e7",
+            "size": 3531,
+            "uri": "https://{canondata_backend}/1923547/3423d2190488ae10821f2c300e70cd1b3ed9fc6d/resource.tar.gz#test.test_aggregate-subquery_aggregation--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-subquery_aggregation--Plan]": [
         {
-            "checksum": "9dec3798de4c88e1f79c01259fea4c30",
-            "size": 6627,
-            "uri": "https://{canondata_backend}/1600758/32cfdeb8c6377a2e7e62c6c4adbb95f25af7669b/resource.tar.gz#test.test_aggregate-subquery_aggregation--Plan_/plan.txt"
+            "checksum": "49fb64ebed43ca080f30a0b8387033c3",
+            "size": 6149,
+            "uri": "https://{canondata_backend}/1781765/e399fc9631f4d96fcb5c717860c01dc3564d9b6c/resource.tar.gz#test.test_aggregate-subquery_aggregation--Plan_/plan.txt"
         }
     ],
     "test.test[aggregate-subquery_aggregation--Results]": [],
@@ -1027,9 +1027,9 @@
     ],
     "test.test[flatten_by-flatten_with_join--Debug]": [
         {
-            "checksum": "cea610983d24d84d06889cfaa64985ab",
-            "size": 4030,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_flatten_by-flatten_with_join--Debug_/opt.yql_patched"
+            "checksum": "af7fded6c71dceefa6b8fd861b2ac8e3",
+            "size": 4049,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_flatten_by-flatten_with_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[flatten_by-flatten_with_join--Plan]": [
@@ -1097,9 +1097,9 @@
     ],
     "test.test[in-in_sorted_by_tuple--Debug]": [
         {
-            "checksum": "8ea6ef4b55e6a9ac3a47b1ad51362e85",
-            "size": 6179,
-            "uri": "https://{canondata_backend}/1031349/6c70521322fc43f752ef6b89f8667fefd006af8b/resource.tar.gz#test.test_in-in_sorted_by_tuple--Debug_/opt.yql_patched"
+            "checksum": "25eac6930d6256ef93f7c557aa32f2ce",
+            "size": 6188,
+            "uri": "https://{canondata_backend}/1923547/9b592402cd0b362fd0d6fa97573b2d5e8102c60a/resource.tar.gz#test.test_in-in_sorted_by_tuple--Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_sorted_by_tuple--Plan]": [
@@ -1200,9 +1200,9 @@
     ],
     "test.test[join-equi_join_three_asterisk--Debug]": [
         {
-            "checksum": "35f13a37d65e6faf90b582fb4f0ecf97",
-            "size": 4059,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-equi_join_three_asterisk--Debug_/opt.yql_patched"
+            "checksum": "ad38a48a5e6047a2adc7b3006e5eef6b",
+            "size": 4100,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-equi_join_three_asterisk--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_three_asterisk--Plan]": [
@@ -1222,9 +1222,9 @@
     ],
     "test.test[join-equi_join_three_asterisk-off-Debug]": [
         {
-            "checksum": "a9ea335e60dc1488fc40a46a9cf6167c",
-            "size": 3478,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-equi_join_three_asterisk-off-Debug_/opt.yql_patched"
+            "checksum": "f2bc48b8d69fe5db5e5ad4cc72226746",
+            "size": 3456,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-equi_join_three_asterisk-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_three_asterisk-off-Plan]": [
@@ -1250,9 +1250,9 @@
     ],
     "test.test[join-inner_all-off-Debug]": [
         {
-            "checksum": "20ff895465366791ead6a7813a80a172",
-            "size": 2184,
-            "uri": "https://{canondata_backend}/1031349/6c70521322fc43f752ef6b89f8667fefd006af8b/resource.tar.gz#test.test_join-inner_all-off-Debug_/opt.yql_patched"
+            "checksum": "2cddce29844a50ac03c37304802f6977",
+            "size": 2156,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-inner_all-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_all-off-Plan]": [
@@ -1286,9 +1286,9 @@
     ],
     "test.test[join-join_without_correlation_and_struct_access--Debug]": [
         {
-            "checksum": "2a77bd557da7223bdae0c7e8da89b396",
-            "size": 3541,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-join_without_correlation_and_struct_access--Debug_/opt.yql_patched"
+            "checksum": "d282992c35b16433f5168d934a8a1905",
+            "size": 3550,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-join_without_correlation_and_struct_access--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_without_correlation_and_struct_access--Plan]": [
@@ -1312,9 +1312,9 @@
     ],
     "test.test[join-left_trivial--Debug]": [
         {
-            "checksum": "95a0be0a9559653066b2fce0edeab0e6",
-            "size": 2634,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-left_trivial--Debug_/opt.yql_patched"
+            "checksum": "1370b47093f1fae9684cb93dc2610255",
+            "size": 2660,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-left_trivial--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_trivial--Plan]": [
@@ -1334,9 +1334,9 @@
     ],
     "test.test[join-lookupjoin_inner_1o-off-Debug]": [
         {
-            "checksum": "2f2f093af80ee709d7c652dae96db442",
-            "size": 3056,
-            "uri": "https://{canondata_backend}/1031349/6c70521322fc43f752ef6b89f8667fefd006af8b/resource.tar.gz#test.test_join-lookupjoin_inner_1o-off-Debug_/opt.yql_patched"
+            "checksum": "00f4cda02493526087df9acd41082911",
+            "size": 3088,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-lookupjoin_inner_1o-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner_1o-off-Plan]": [
@@ -1362,9 +1362,9 @@
     ],
     "test.test[join-mapjoin_sharded-default.txt-Debug]": [
         {
-            "checksum": "bb19774a92ed5f0d838ccc6dfc1d73d4",
-            "size": 2593,
-            "uri": "https://{canondata_backend}/1937027/260442135926ff6c9957da5c2478f83f49087cc4/resource.tar.gz#test.test_join-mapjoin_sharded-default.txt-Debug_/opt.yql_patched"
+            "checksum": "44c79eef33f99d75c6e81d1276c74a4e",
+            "size": 2602,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-mapjoin_sharded-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_sharded-default.txt-Plan]": [
@@ -1384,9 +1384,9 @@
     ],
     "test.test[join-mergejoin_big_primary--Debug]": [
         {
-            "checksum": "913a4fbb331572f446be1fff23de9bad",
-            "size": 3491,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-mergejoin_big_primary--Debug_/opt.yql_patched"
+            "checksum": "401b801277fb17689fe99cce05e6fcd3",
+            "size": 3477,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-mergejoin_big_primary--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_big_primary--Plan]": [
@@ -1409,9 +1409,9 @@
     ],
     "test.test[join-mergejoin_force_align1-off-Debug]": [
         {
-            "checksum": "713337cc434828489eca45e7605bdf96",
-            "size": 6697,
-            "uri": "https://{canondata_backend}/1031349/6c70521322fc43f752ef6b89f8667fefd006af8b/resource.tar.gz#test.test_join-mergejoin_force_align1-off-Debug_/opt.yql_patched"
+            "checksum": "fed24253f6cc007385d13fab65badd6c",
+            "size": 6705,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-mergejoin_force_align1-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_force_align1-off-Plan]": [
@@ -1437,9 +1437,9 @@
     ],
     "test.test[join-pullup_left--Debug]": [
         {
-            "checksum": "5d4d7ef6d423889b57f1229c4e7dd9ac",
-            "size": 3133,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-pullup_left--Debug_/opt.yql_patched"
+            "checksum": "fa6cd4b139729c44b3ebd0ac608492e7",
+            "size": 3149,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-pullup_left--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_left--Plan]": [
@@ -1459,9 +1459,9 @@
     ],
     "test.test[join-pullup_left-off-Debug]": [
         {
-            "checksum": "0e4a59bd6870cdba711343fcfc46d4d3",
-            "size": 3027,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-pullup_left-off-Debug_/opt.yql_patched"
+            "checksum": "c0328befd4172eab1408fbf2db488ee3",
+            "size": 3021,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-pullup_left-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_left-off-Plan]": [
@@ -1487,9 +1487,9 @@
     ],
     "test.test[join-pullup_renaming--Debug]": [
         {
-            "checksum": "b15310dd84f175ec7427c8e2f330e891",
-            "size": 3252,
-            "uri": "https://{canondata_backend}/1946324/be96ad9cdb7bebb78c68ecc4a7b291982b0e9f1e/resource.tar.gz#test.test_join-pullup_renaming--Debug_/opt.yql_patched"
+            "checksum": "3b4397973690db630b007765ef94087d",
+            "size": 3296,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-pullup_renaming--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_renaming--Plan]": [
@@ -1509,9 +1509,9 @@
     ],
     "test.test[join-pullup_renaming-off-Debug]": [
         {
-            "checksum": "d485fd5d28ab0132249fb98c11b46614",
-            "size": 3174,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-pullup_renaming-off-Debug_/opt.yql_patched"
+            "checksum": "9a2e1010d60af444cd3c61ab27bfe745",
+            "size": 3222,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-pullup_renaming-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_renaming-off-Plan]": [
@@ -1537,9 +1537,9 @@
     ],
     "test.test[join-right_trivial--Debug]": [
         {
-            "checksum": "49cc9373f453ac6dcaf3d934fa26815d",
-            "size": 2963,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-right_trivial--Debug_/opt.yql_patched"
+            "checksum": "af38365ad5a957ed1b10db1d8c589523",
+            "size": 2989,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-right_trivial--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-right_trivial--Plan]": [
@@ -1559,9 +1559,9 @@
     ],
     "test.test[join-star_join_inners_vk_sorted--Debug]": [
         {
-            "checksum": "842425e803ee8fdfbf39e106664aa4a9",
-            "size": 6411,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_join-star_join_inners_vk_sorted--Debug_/opt.yql_patched"
+            "checksum": "a53351dd42e2ebd68f1b82963253912c",
+            "size": 6418,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-star_join_inners_vk_sorted--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_inners_vk_sorted--Plan]": [
@@ -1584,9 +1584,9 @@
     ],
     "test.test[join-yql-14829_leftonly-off-Debug]": [
         {
-            "checksum": "0500ada14dc9457fd050ccd09f722efd",
-            "size": 4755,
-            "uri": "https://{canondata_backend}/1031349/6c70521322fc43f752ef6b89f8667fefd006af8b/resource.tar.gz#test.test_join-yql-14829_leftonly-off-Debug_/opt.yql_patched"
+            "checksum": "161bdc79d000f81f59cbacd43c549bf1",
+            "size": 4781,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-yql-14829_leftonly-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-14829_leftonly-off-Plan]": [
@@ -1612,9 +1612,9 @@
     ],
     "test.test[join-yql-4275-off-Debug]": [
         {
-            "checksum": "6e8f40f77e17e3d34524608318e2551f",
-            "size": 2269,
-            "uri": "https://{canondata_backend}/1031349/6c70521322fc43f752ef6b89f8667fefd006af8b/resource.tar.gz#test.test_join-yql-4275-off-Debug_/opt.yql_patched"
+            "checksum": "a803064c16f0e0a48cb119ee029b8ab9",
+            "size": 2289,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_join-yql-4275-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-4275-off-Plan]": [
@@ -1864,9 +1864,9 @@
     ],
     "test.test[pg-aggregate_combine--Debug]": [
         {
-            "checksum": "9fa29a162f8152ed7a7959ce4ec57f6e",
-            "size": 3715,
-            "uri": "https://{canondata_backend}/995452/59cb21feb51bcd4aaf002804abbfbb4a05ffe65f/resource.tar.gz#test.test_pg-aggregate_combine--Debug_/opt.yql_patched"
+            "checksum": "e50861c99c37ca8ce4bdd20148fa0753",
+            "size": 3750,
+            "uri": "https://{canondata_backend}/1903280/f275d6f071715007b59c0fcf1ce9a3d4eafb9599/resource.tar.gz#test.test_pg-aggregate_combine--Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-aggregate_combine--Plan]": [
@@ -2260,9 +2260,9 @@
     ],
     "test.test[pg-tpch-q03-default.txt-Debug]": [
         {
-            "checksum": "e29261548e03cc2f0206438849341d48",
-            "size": 10403,
-            "uri": "https://{canondata_backend}/1773845/6b405142992a5c77db0614b3fc396504b6ca928a/resource.tar.gz#test.test_pg-tpch-q03-default.txt-Debug_/opt.yql_patched"
+            "checksum": "9d8110d455acccb5b20c95b9bd440954",
+            "size": 10386,
+            "uri": "https://{canondata_backend}/1931696/3b66a4b8ee9789607df97fd1b710d3ca890dd9b2/resource.tar.gz#test.test_pg-tpch-q03-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q03-default.txt-Plan]": [
@@ -2760,9 +2760,9 @@
     ],
     "test.test[window-win_func_over_group_by_list_names--Debug]": [
         {
-            "checksum": "93272f345d0939b83721190ea5597f30",
-            "size": 8213,
-            "uri": "https://{canondata_backend}/1923547/320f607d9e9c19a93a835d3183938f1fba6dd52c/resource.tar.gz#test.test_window-win_func_over_group_by_list_names--Debug_/opt.yql_patched"
+            "checksum": "a18ba714975de5a61f001dc9c971bd68",
+            "size": 8248,
+            "uri": "https://{canondata_backend}/1871182/0dad491c929525221cf344b9f6f54cd14f2ce4f0/resource.tar.gz#test.test_window-win_func_over_group_by_list_names--Debug_/opt.yql_patched"
         }
     ],
     "test.test[window-win_func_over_group_by_list_names--Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part11/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part11/canondata/result.json
index 6084c66651a7..df4c04a53094 100644
--- a/ydb/library/yql/tests/sql/dq_file/part11/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part11/canondata/result.json
@@ -300,9 +300,9 @@
     ],
     "test.test[aggregate-group_by_expr_only_join--Debug]": [
         {
-            "checksum": "d37afd4b23ea87460590c3e3ec526be0",
-            "size": 3384,
-            "uri": "https://{canondata_backend}/1942173/5dda369a5c566435d55e882d65f0212fa3dfb906/resource.tar.gz#test.test_aggregate-group_by_expr_only_join--Debug_/opt.yql_patched"
+            "checksum": "624474ec7bbb1e5dc661400cacc95efe",
+            "size": 3433,
+            "uri": "https://{canondata_backend}/1130705/868ff3a15d881fd30a076f428e6c4dbcfce68902/resource.tar.gz#test.test_aggregate-group_by_expr_only_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_expr_only_join--Plan]": [
@@ -322,9 +322,9 @@
     ],
     "test.test[aggregate-group_by_gs_few_empty--Debug]": [
         {
-            "checksum": "0ac1e3214471087b86a97fa21e69c3a2",
-            "size": 6528,
-            "uri": "https://{canondata_backend}/1936947/a99026e839b7e22714c2a9a81971a3b5e3ed1eb4/resource.tar.gz#test.test_aggregate-group_by_gs_few_empty--Debug_/opt.yql_patched"
+            "checksum": "3bbb4eb639e235c657a648557ce521ce",
+            "size": 6580,
+            "uri": "https://{canondata_backend}/1937367/e5d3b4a217429148a8315cf4e228d45b21f861fe/resource.tar.gz#test.test_aggregate-group_by_gs_few_empty--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_few_empty--Plan]": [
@@ -344,9 +344,9 @@
     ],
     "test.test[aggregate-group_by_gs_simp--Debug]": [
         {
-            "checksum": "f97f89c53ae93b6a6c7b9912e3950550",
-            "size": 5421,
-            "uri": "https://{canondata_backend}/1936947/a99026e839b7e22714c2a9a81971a3b5e3ed1eb4/resource.tar.gz#test.test_aggregate-group_by_gs_simp--Debug_/opt.yql_patched"
+            "checksum": "873e07e43b5b691bd8457dc9da486ff2",
+            "size": 5474,
+            "uri": "https://{canondata_backend}/1937367/e2a772964cf46b8a14a828d48a136378216522b9/resource.tar.gz#test.test_aggregate-group_by_gs_simp--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_simp--Plan]": [
@@ -366,9 +366,9 @@
     ],
     "test.test[aggregate-group_by_rollup_grouping--Debug]": [
         {
-            "checksum": "1bc4644b215619613368c778f07fa578",
-            "size": 7107,
-            "uri": "https://{canondata_backend}/1903280/419b5c18140d44a17c33d80899398c8647846b33/resource.tar.gz#test.test_aggregate-group_by_rollup_grouping--Debug_/opt.yql_patched"
+            "checksum": "c24d41f35785c78d23a30c634eacb1f8",
+            "size": 7167,
+            "uri": "https://{canondata_backend}/1773845/e1901cc86dc30911ad22db641ffb6fe66c04423b/resource.tar.gz#test.test_aggregate-group_by_rollup_grouping--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_grouping--Plan]": [
@@ -388,9 +388,9 @@
     ],
     "test.test[aggregate-having_distinct_expr--Debug]": [
         {
-            "checksum": "6a45904e076ad4dbbe5a94c52b69c43f",
-            "size": 3276,
-            "uri": "https://{canondata_backend}/1942173/5dda369a5c566435d55e882d65f0212fa3dfb906/resource.tar.gz#test.test_aggregate-having_distinct_expr--Debug_/opt.yql_patched"
+            "checksum": "4bdc0046de46875ae83dcdda879b5ba7",
+            "size": 3311,
+            "uri": "https://{canondata_backend}/1847551/155e040f6efb509114e481612c26cc3259caa89d/resource.tar.gz#test.test_aggregate-having_distinct_expr--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-having_distinct_expr--Plan]": [
@@ -762,9 +762,9 @@
     ],
     "test.test[distinct-distinct_and_join--Debug]": [
         {
-            "checksum": "ced76ed3b8ea032d6fd83e5924fff0f9",
-            "size": 2871,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_distinct-distinct_and_join--Debug_/opt.yql_patched"
+            "checksum": "058786a4c8255e30e15dcf9af6b8b8e8",
+            "size": 2866,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_distinct-distinct_and_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[distinct-distinct_and_join--Plan]": [
@@ -1101,9 +1101,9 @@
     ],
     "test.test[join-bush_dis_in--Debug]": [
         {
-            "checksum": "d605fe7605bbf4b77811feb075d18dd7",
-            "size": 6223,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-bush_dis_in--Debug_/opt.yql_patched"
+            "checksum": "11204d7a46f6e0c96fe889d4d952cc6b",
+            "size": 6238,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-bush_dis_in--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_dis_in--Plan]": [
@@ -1123,9 +1123,9 @@
     ],
     "test.test[join-bush_dis_in-off-Debug]": [
         {
-            "checksum": "9287ac36a478251f443d4ce8d5724259",
-            "size": 5372,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-bush_dis_in-off-Debug_/opt.yql_patched"
+            "checksum": "ade15d8d0b3ab26882446caf66e232a1",
+            "size": 5365,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-bush_dis_in-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_dis_in-off-Plan]": [
@@ -1151,9 +1151,9 @@
     ],
     "test.test[join-bush_in_in-off-Debug]": [
         {
-            "checksum": "8e23e09d6b2dba2ce3fdf4d3fcb2622b",
-            "size": 4192,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-bush_in_in-off-Debug_/opt.yql_patched"
+            "checksum": "3122c3d8b25511ba9f363cd2eb484c86",
+            "size": 4167,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-bush_in_in-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_in_in-off-Plan]": [
@@ -1179,9 +1179,9 @@
     ],
     "test.test[join-count_bans-off-Debug]": [
         {
-            "checksum": "25bb480492e9afd8e7b7d1857f47ae95",
-            "size": 4740,
-            "uri": "https://{canondata_backend}/1937429/7495c8355df97f85fa824cc601aaf3eb891c07d7/resource.tar.gz#test.test_join-count_bans-off-Debug_/opt.yql_patched"
+            "checksum": "4986038614ce1d813aa2fc2659965808",
+            "size": 4763,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-count_bans-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-count_bans-off-Plan]": [
@@ -1207,9 +1207,9 @@
     ],
     "test.test[join-flatten_columns2--Debug]": [
         {
-            "checksum": "2efd03fbcce99b67d13b9ea2ba183771",
-            "size": 2863,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-flatten_columns2--Debug_/opt.yql_patched"
+            "checksum": "3838f21edfde7128ed62510c85b07ea7",
+            "size": 2879,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-flatten_columns2--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-flatten_columns2--Plan]": [
@@ -1229,9 +1229,9 @@
     ],
     "test.test[join-grace_join1-grace-Debug]": [
         {
-            "checksum": "37926dc92dabf494a6318b00a17451d4",
-            "size": 3007,
-            "uri": "https://{canondata_backend}/1942173/5dda369a5c566435d55e882d65f0212fa3dfb906/resource.tar.gz#test.test_join-grace_join1-grace-Debug_/opt.yql_patched"
+            "checksum": "165ad19f4b1871013e061a22fb7d8e70",
+            "size": 3043,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-grace_join1-grace-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-grace_join1-grace-Plan]": [
@@ -1279,9 +1279,9 @@
     ],
     "test.test[join-inner_all_right--Debug]": [
         {
-            "checksum": "689a6d2ac05dbe83ef2cb1f743043a27",
-            "size": 2401,
-            "uri": "https://{canondata_backend}/1942173/5dda369a5c566435d55e882d65f0212fa3dfb906/resource.tar.gz#test.test_join-inner_all_right--Debug_/opt.yql_patched"
+            "checksum": "99e9995d0df97819f29092151f53500c",
+            "size": 2421,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-inner_all_right--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_all_right--Plan]": [
@@ -1301,9 +1301,9 @@
     ],
     "test.test[join-inner_grouped_by_expr-off-Debug]": [
         {
-            "checksum": "2467c2f4ded5d11bc1594eb40772325f",
-            "size": 3466,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-inner_grouped_by_expr-off-Debug_/opt.yql_patched"
+            "checksum": "3c21278be3d2cf09c12547c2e28e6593",
+            "size": 3478,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-inner_grouped_by_expr-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_grouped_by_expr-off-Plan]": [
@@ -1357,9 +1357,9 @@
     ],
     "test.test[join-left_only_with_other--Debug]": [
         {
-            "checksum": "d211d844d62513f70833f075db46ffe7",
-            "size": 3624,
-            "uri": "https://{canondata_backend}/1942173/5dda369a5c566435d55e882d65f0212fa3dfb906/resource.tar.gz#test.test_join-left_only_with_other--Debug_/opt.yql_patched"
+            "checksum": "7fd629809f87c3cc3182f4ec608f9329",
+            "size": 3658,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-left_only_with_other--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_only_with_other--Plan]": [
@@ -1379,9 +1379,9 @@
     ],
     "test.test[join-mapjoin_early_rewrite_star--Debug]": [
         {
-            "checksum": "4a2e44688402ea2368a8938594321c06",
-            "size": 3001,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-mapjoin_early_rewrite_star--Debug_/opt.yql_patched"
+            "checksum": "84565151160f644ecc225f1477d59860",
+            "size": 3018,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-mapjoin_early_rewrite_star--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_early_rewrite_star--Plan]": [
@@ -1423,9 +1423,9 @@
     ],
     "test.test[join-mergejoin_saves_output_sort_cross--Debug]": [
         {
-            "checksum": "39de66d436c603f2e57b8af6ad9517fd",
-            "size": 4539,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-mergejoin_saves_output_sort_cross--Debug_/opt.yql_patched"
+            "checksum": "b6e62f8e97766e90796b4ee63e690606",
+            "size": 4553,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-mergejoin_saves_output_sort_cross--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_saves_output_sort_cross--Plan]": [
@@ -1445,9 +1445,9 @@
     ],
     "test.test[join-mergejoin_saves_output_sort_nested--Debug]": [
         {
-            "checksum": "7013f381a0f5b6fc8c4266604b99fa54",
-            "size": 6028,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-mergejoin_saves_output_sort_nested--Debug_/opt.yql_patched"
+            "checksum": "484689bfd724ff1a5770f22f79b44981",
+            "size": 6091,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-mergejoin_saves_output_sort_nested--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_saves_output_sort_nested--Plan]": [
@@ -1467,9 +1467,9 @@
     ],
     "test.test[join-premap_common_multiparents-off-Debug]": [
         {
-            "checksum": "d09b2a7be6f73151ed74aec7b00bd214",
-            "size": 4122,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-premap_common_multiparents-off-Debug_/opt.yql_patched"
+            "checksum": "31faa84b5cd0c2c7d2012446fa1f954a",
+            "size": 4146,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-premap_common_multiparents-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_multiparents-off-Plan]": [
@@ -1495,9 +1495,9 @@
     ],
     "test.test[join-premap_common_semi--Debug]": [
         {
-            "checksum": "a36f83d03671470d01904b85ffb480ec",
-            "size": 2632,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-premap_common_semi--Debug_/opt.yql_patched"
+            "checksum": "da2e03ca5c779dbb0a9018a181252b5a",
+            "size": 2648,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-premap_common_semi--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_semi--Plan]": [
@@ -1517,9 +1517,9 @@
     ],
     "test.test[join-premap_common_semi-off-Debug]": [
         {
-            "checksum": "8814d2beaf36cf123e4ac94d42c822dc",
-            "size": 2574,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-premap_common_semi-off-Debug_/opt.yql_patched"
+            "checksum": "f62d222305a620f2e92e2b8dad7ffec4",
+            "size": 2576,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-premap_common_semi-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_semi-off-Plan]": [
@@ -1545,9 +1545,9 @@
     ],
     "test.test[join-selfjoin_on_sorted--Debug]": [
         {
-            "checksum": "98f68445986357c92bca4c775bc268ad",
-            "size": 2109,
-            "uri": "https://{canondata_backend}/1942173/5dda369a5c566435d55e882d65f0212fa3dfb906/resource.tar.gz#test.test_join-selfjoin_on_sorted--Debug_/opt.yql_patched"
+            "checksum": "5773abd41eb04b9751939a7a0b9483c8",
+            "size": 2127,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-selfjoin_on_sorted--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-selfjoin_on_sorted--Plan]": [
@@ -1567,9 +1567,9 @@
     ],
     "test.test[join-star_join_inners_premap--Debug]": [
         {
-            "checksum": "ad2480f19da8f155ad58d27df49c23e9",
-            "size": 6708,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-star_join_inners_premap--Debug_/opt.yql_patched"
+            "checksum": "cc5092c4d3e08e7997ea3f9575eca46f",
+            "size": 6773,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-star_join_inners_premap--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_inners_premap--Plan]": [
@@ -1589,9 +1589,9 @@
     ],
     "test.test[join-star_join_inners_premap-off-Debug]": [
         {
-            "checksum": "c9036b9e1f730e1d2671402128a91fb5",
-            "size": 6337,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_join-star_join_inners_premap-off-Debug_/opt.yql_patched"
+            "checksum": "d1852c83e267a995af0935887b0045ce",
+            "size": 6398,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_join-star_join_inners_premap-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_inners_premap-off-Plan]": [
@@ -2170,9 +2170,9 @@
     ],
     "test.test[pg-tpch-q02-default.txt-Debug]": [
         {
-            "checksum": "1f59bfdd0ea5e16cdb07c01ad46ef8b8",
-            "size": 20448,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_pg-tpch-q02-default.txt-Debug_/opt.yql_patched"
+            "checksum": "8dbf1d176e9ea79a36296d6f6defa276",
+            "size": 20583,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_pg-tpch-q02-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q02-default.txt-Plan]": [
@@ -2192,9 +2192,9 @@
     ],
     "test.test[pg-tpch-q19-default.txt-Debug]": [
         {
-            "checksum": "c311d05ae42d0c310da872ea7fd47674",
-            "size": 9185,
-            "uri": "https://{canondata_backend}/1925821/866c0a138d66f2b94fefbdf776dcfcfca7b8c8af/resource.tar.gz#test.test_pg-tpch-q19-default.txt-Debug_/opt.yql_patched"
+            "checksum": "6e2fada272b91f4a2dab97b8eef9215d",
+            "size": 9181,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_pg-tpch-q19-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q19-default.txt-Plan]": [
@@ -2547,9 +2547,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_coalesce_without_left_semi_2-default.txt-Debug]": [
         {
-            "checksum": "745699f8b092422291c51fa68f149e5f",
-            "size": 2360,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_simple_columns-simple_columns_join_coalesce_without_left_semi_2-default.txt-Debug_/opt.yql_patched"
+            "checksum": "c66bf354c09f772c7278eed89f10115c",
+            "size": 2378,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_simple_columns-simple_columns_join_coalesce_without_left_semi_2-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_coalesce_without_left_semi_2-default.txt-Plan]": [
@@ -2577,9 +2577,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_without_resolve_dublicates_mult-default.txt-Debug]": [
         {
-            "checksum": "66e0fe56bdee75af1e4e6a2cb793100f",
-            "size": 3279,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_simple_columns-simple_columns_join_without_resolve_dublicates_mult-default.txt-Debug_/opt.yql_patched"
+            "checksum": "f25b9ec6619da2ecea3118fcef8c7b2b",
+            "size": 3276,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_simple_columns-simple_columns_join_without_resolve_dublicates_mult-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_without_resolve_dublicates_mult-default.txt-Plan]": [
@@ -2654,9 +2654,9 @@
     ],
     "test.test[tpch-q4-default.txt-Debug]": [
         {
-            "checksum": "2655791444f7c9a6a874b3770b0acbef",
-            "size": 6541,
-            "uri": "https://{canondata_backend}/1784117/27b0e0d4174a9b20aa647497437aba160563b297/resource.tar.gz#test.test_tpch-q4-default.txt-Debug_/opt.yql_patched"
+            "checksum": "fa97974f3e4f836f43084b7b51457555",
+            "size": 6558,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_tpch-q4-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q4-default.txt-Plan]": [
@@ -2764,9 +2764,9 @@
     ],
     "test.test[weak_field-weak_field_join_where--Debug]": [
         {
-            "checksum": "375d00aa24f330d62ca8bf3025a5111b",
-            "size": 4743,
-            "uri": "https://{canondata_backend}/1031349/5baef42837a5c7e8f75ff06754ea8ff7be02b259/resource.tar.gz#test.test_weak_field-weak_field_join_where--Debug_/opt.yql_patched"
+            "checksum": "441889a55f7d00f27e0d990365b52ca7",
+            "size": 4763,
+            "uri": "https://{canondata_backend}/1936273/640ea425b9d5a6140c315077f2a83bba387482d8/resource.tar.gz#test.test_weak_field-weak_field_join_where--Debug_/opt.yql_patched"
         }
     ],
     "test.test[weak_field-weak_field_join_where--Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part12/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part12/canondata/result.json
index 475cd2c9e80b..89f710a03a5a 100644
--- a/ydb/library/yql/tests/sql/dq_file/part12/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part12/canondata/result.json
@@ -272,9 +272,9 @@
     ],
     "test.test[aggregate-group_by_rollup_grouping_hum--Debug]": [
         {
-            "checksum": "6f56ba8703599d31b777058eed994bf0",
-            "size": 7947,
-            "uri": "https://{canondata_backend}/1777230/915011f8f5c826c23aaf0fd2e67aa8d2fb1f93cd/resource.tar.gz#test.test_aggregate-group_by_rollup_grouping_hum--Debug_/opt.yql_patched"
+            "checksum": "0fa3ad8c20368a624649240306680c0e",
+            "size": 8006,
+            "uri": "https://{canondata_backend}/1847551/cea98224a0242fa122932bfd335599c5107ce35b/resource.tar.gz#test.test_aggregate-group_by_rollup_grouping_hum--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_grouping_hum--Plan]": [
@@ -294,9 +294,9 @@
     ],
     "test.test[ansi_idents-join_using-default.txt-Debug]": [
         {
-            "checksum": "c1757f1535665739e25f97e9311c7f15",
-            "size": 3186,
-            "uri": "https://{canondata_backend}/1936842/636e5b20baf2cf59d9f38821f96eeb0a152b1897/resource.tar.gz#test.test_ansi_idents-join_using-default.txt-Debug_/opt.yql_patched"
+            "checksum": "df2616747d1903c6504e86d4557dc72a",
+            "size": 3202,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_ansi_idents-join_using-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[ansi_idents-join_using-default.txt-Plan]": [
@@ -1294,9 +1294,9 @@
     ],
     "test.test[in-in_with_table_of_tuples-default.txt-Debug]": [
         {
-            "checksum": "7947fe3903607ffa3808f2bd0a0e6b95",
-            "size": 4447,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_in-in_with_table_of_tuples-default.txt-Debug_/opt.yql_patched"
+            "checksum": "65e2f54b38642a1a393208857d884cbc",
+            "size": 4481,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_in-in_with_table_of_tuples-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_with_table_of_tuples-default.txt-Plan]": [
@@ -1411,9 +1411,9 @@
     ],
     "test.test[join-aggr_diff_order-default.txt-Debug]": [
         {
-            "checksum": "2b71a16ab5af39a146025de75c3facbd",
-            "size": 2898,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_join-aggr_diff_order-default.txt-Debug_/opt.yql_patched"
+            "checksum": "35746115ba55be06d97960a6a4d5c785",
+            "size": 2940,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-aggr_diff_order-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-aggr_diff_order-default.txt-Plan]": [
@@ -1433,9 +1433,9 @@
     ],
     "test.test[join-from_in_front_join--Debug]": [
         {
-            "checksum": "b87455ce6c8d6e483a381d3536b98c9f",
-            "size": 2461,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_join-from_in_front_join--Debug_/opt.yql_patched"
+            "checksum": "4a949fe4abf896a9b7f54f6babaf8b9a",
+            "size": 2487,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-from_in_front_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-from_in_front_join--Plan]": [
@@ -1455,9 +1455,9 @@
     ],
     "test.test[join-full_equal_not_null-off-Debug]": [
         {
-            "checksum": "410f8f3299551411f96dab2b7e1f55f5",
-            "size": 3244,
-            "uri": "https://{canondata_backend}/1936842/636e5b20baf2cf59d9f38821f96eeb0a152b1897/resource.tar.gz#test.test_join-full_equal_not_null-off-Debug_/opt.yql_patched"
+            "checksum": "201cfb9ab7a027bc8854e8e10a1253dc",
+            "size": 3230,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-full_equal_not_null-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_equal_not_null-off-Plan]": [
@@ -1483,9 +1483,9 @@
     ],
     "test.test[join-full_trivial_udf_call--Debug]": [
         {
-            "checksum": "929579af3373f6e0c7e821aff7eeb244",
-            "size": 3379,
-            "uri": "https://{canondata_backend}/1777230/6431aa7a9bca8c0bbec39851d33696aac03b1a14/resource.tar.gz#test.test_join-full_trivial_udf_call--Debug_/opt.yql_patched"
+            "checksum": "76093f7f451f1d9d22246a91bbdc2baa",
+            "size": 3405,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-full_trivial_udf_call--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_trivial_udf_call--Plan]": [
@@ -1505,9 +1505,9 @@
     ],
     "test.test[join-full_trivial_udf_call-off-Debug]": [
         {
-            "checksum": "69f8398e5b93b43fdf34bd467fd03ba7",
-            "size": 3389,
-            "uri": "https://{canondata_backend}/1777230/6431aa7a9bca8c0bbec39851d33696aac03b1a14/resource.tar.gz#test.test_join-full_trivial_udf_call-off-Debug_/opt.yql_patched"
+            "checksum": "28574d66f7dad0804760cbf45ecae99c",
+            "size": 3415,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-full_trivial_udf_call-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_trivial_udf_call-off-Plan]": [
@@ -1533,9 +1533,9 @@
     ],
     "test.test[join-grace_join1--Debug]": [
         {
-            "checksum": "c370e8d2b4688fe2090f5e1e96dd32c1",
-            "size": 2919,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_join-grace_join1--Debug_/opt.yql_patched"
+            "checksum": "ea3dc84dc71242594e9334b283d848cd",
+            "size": 2955,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-grace_join1--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-grace_join1--Plan]": [
@@ -1583,9 +1583,9 @@
     ],
     "test.test[join-join_key_cmp_udf-off-Debug]": [
         {
-            "checksum": "ba80ce2fb3a7b95175389a10b75e5c20",
-            "size": 2638,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_join-join_key_cmp_udf-off-Debug_/opt.yql_patched"
+            "checksum": "02b5a5966a1139ba3a3129632a746f42",
+            "size": 2649,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-join_key_cmp_udf-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_key_cmp_udf-off-Plan]": [
@@ -1611,9 +1611,9 @@
     ],
     "test.test[join-left_all-off-Debug]": [
         {
-            "checksum": "019b7cb0005625df89832a431831b241",
-            "size": 2183,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_join-left_all-off-Debug_/opt.yql_patched"
+            "checksum": "614490e340e5ec6ff975c2fda4825980",
+            "size": 2155,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-left_all-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_all-off-Plan]": [
@@ -1639,9 +1639,9 @@
     ],
     "test.test[join-lookupjoin_inner--Debug]": [
         {
-            "checksum": "ab3e4b441a5cefc49b93e4b5cf964fa7",
-            "size": 3169,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_join-lookupjoin_inner--Debug_/opt.yql_patched"
+            "checksum": "a3a008003870612b64f77f4ef1953f4f",
+            "size": 3199,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-lookupjoin_inner--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner--Plan]": [
@@ -1661,9 +1661,9 @@
     ],
     "test.test[join-lookupjoin_semi_1o2o--Debug]": [
         {
-            "checksum": "121c6f8c6e88c850d4a4130381e11633",
-            "size": 3823,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_join-lookupjoin_semi_1o2o--Debug_/opt.yql_patched"
+            "checksum": "761064a76d6eb5e1f9e6b3bf6494c011",
+            "size": 3825,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-lookupjoin_semi_1o2o--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi_1o2o--Plan]": [
@@ -1686,9 +1686,9 @@
     ],
     "test.test[join-lookupjoin_with_cache--Debug]": [
         {
-            "checksum": "d8add0e21ebacc6c5959b6322702c540",
-            "size": 4800,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_join-lookupjoin_with_cache--Debug_/opt.yql_patched"
+            "checksum": "27088d7344c11c9686ba654480576b1d",
+            "size": 4816,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-lookupjoin_with_cache--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_with_cache--Plan]": [
@@ -1708,9 +1708,9 @@
     ],
     "test.test[join-mapjoin_early_rewrite_sequence--Debug]": [
         {
-            "checksum": "0ae92115a6f080a195942a5c25c2096f",
-            "size": 4895,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_join-mapjoin_early_rewrite_sequence--Debug_/opt.yql_patched"
+            "checksum": "40f651523716fa79f06d4b85d77ad9c5",
+            "size": 4905,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-mapjoin_early_rewrite_sequence--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_early_rewrite_sequence--Plan]": [
@@ -1730,9 +1730,9 @@
     ],
     "test.test[join-mapjoin_early_rewrite_sequence-off-Debug]": [
         {
-            "checksum": "aa48ba06ba2891010539cc959c16034f",
-            "size": 4127,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_join-mapjoin_early_rewrite_sequence-off-Debug_/opt.yql_patched"
+            "checksum": "538681da43ce6e4ec3ebea324a201e4a",
+            "size": 4112,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-mapjoin_early_rewrite_sequence-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_early_rewrite_sequence-off-Plan]": [
@@ -1758,9 +1758,9 @@
     ],
     "test.test[join-mergejoin_saves_output_sort--Debug]": [
         {
-            "checksum": "075e2c732cbc7ba3509e363e5e21536c",
-            "size": 9838,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_join-mergejoin_saves_output_sort--Debug_/opt.yql_patched"
+            "checksum": "96dd4f3083f8fb95a1fe6ba1e6f66f3a",
+            "size": 9881,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-mergejoin_saves_output_sort--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_saves_output_sort--Plan]": [
@@ -1780,9 +1780,9 @@
     ],
     "test.test[join-mergejoin_with_different_key_names_nonsorted--Debug]": [
         {
-            "checksum": "8f2d1476beffc8e6e8d1d379dc86d9ea",
-            "size": 3671,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nonsorted--Debug_/opt.yql_patched"
+            "checksum": "7ed803aae8de32fd437e060b2381a94d",
+            "size": 3697,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nonsorted--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_different_key_names_nonsorted--Plan]": [
@@ -1802,9 +1802,9 @@
     ],
     "test.test[join-star_join_mirror-off-Debug]": [
         {
-            "checksum": "522cd4255c99c184375bea5f336f755d",
-            "size": 7441,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_join-star_join_mirror-off-Debug_/opt.yql_patched"
+            "checksum": "2e1302131c56704eac302e8ea835dfa6",
+            "size": 7531,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-star_join_mirror-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_mirror-off-Plan]": [
@@ -1830,9 +1830,9 @@
     ],
     "test.test[join-yql-12022-off-Debug]": [
         {
-            "checksum": "06f6033cf6acd9229b860703bc5d20e2",
-            "size": 1978,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_join-yql-12022-off-Debug_/opt.yql_patched"
+            "checksum": "ebc3874671a6dd8c1b82418fbba5f336",
+            "size": 1973,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_join-yql-12022-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-12022-off-Plan]": [
@@ -2063,9 +2063,9 @@
     ],
     "test.test[optimizers-yql-2582_limit_for_join_input--Debug]": [
         {
-            "checksum": "f0277f4c095965ba5ac8a9ececb0fa76",
-            "size": 3335,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_optimizers-yql-2582_limit_for_join_input--Debug_/opt.yql_patched"
+            "checksum": "e0f0c6ae74290eeee8ebab298784dc6c",
+            "size": 3351,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_optimizers-yql-2582_limit_for_join_input--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-yql-2582_limit_for_join_input--Plan]": [
@@ -2310,9 +2310,9 @@
     ],
     "test.test[pg-join_using_tables1-default.txt-Debug]": [
         {
-            "checksum": "c4279aa9c6d0e3f1c85036fa287f72db",
-            "size": 2333,
-            "uri": "https://{canondata_backend}/1936273/ad3717b195ca16459f341d5ab440a7fc0685a6bb/resource.tar.gz#test.test_pg-join_using_tables1-default.txt-Debug_/opt.yql_patched"
+            "checksum": "77e53af166821025640e9a08124df556",
+            "size": 2351,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_pg-join_using_tables1-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-join_using_tables1-default.txt-Plan]": [
@@ -2838,9 +2838,9 @@
     ],
     "test.test[pg-tpch-q12-default.txt-Debug]": [
         {
-            "checksum": "6b2a557909360d686cb42cff341ee6cb",
-            "size": 8286,
-            "uri": "https://{canondata_backend}/1931696/bd85f9162ce16e90dcd72c36d5db0a32dc3b7973/resource.tar.gz#test.test_pg-tpch-q12-default.txt-Debug_/opt.yql_patched"
+            "checksum": "0cba1d5cb55b1e38ee956ec4335ad562",
+            "size": 8319,
+            "uri": "https://{canondata_backend}/1937150/0e405e71b6db1ea5ac683d7aa86fab7fc3bc2f91/resource.tar.gz#test.test_pg-tpch-q12-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q12-default.txt-Plan]": [
@@ -2860,9 +2860,9 @@
     ],
     "test.test[pg-tpch-q16-default.txt-Debug]": [
         {
-            "checksum": "0c889dbbe3e6b8c23d01191a889cc2d5",
-            "size": 11518,
-            "uri": "https://{canondata_backend}/1931696/bd85f9162ce16e90dcd72c36d5db0a32dc3b7973/resource.tar.gz#test.test_pg-tpch-q16-default.txt-Debug_/opt.yql_patched"
+            "checksum": "c0a6af4c997d706a81fe06e5b3359d6a",
+            "size": 11563,
+            "uri": "https://{canondata_backend}/1942278/c55aab0e2fa55c1a618538101f229f9f5347d7e6/resource.tar.gz#test.test_pg-tpch-q16-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q16-default.txt-Plan]": [
@@ -3101,9 +3101,9 @@
     ],
     "test.test[sampling-mapjoin_left_sample-default.txt-Debug]": [
         {
-            "checksum": "de4da5dc29ab33b6339c4078dad2c3a5",
-            "size": 2314,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_sampling-mapjoin_left_sample-default.txt-Debug_/opt.yql_patched"
+            "checksum": "d4b56b9df4c2bdba6c2eaf76a9411681",
+            "size": 2330,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_sampling-mapjoin_left_sample-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-mapjoin_left_sample-default.txt-Plan]": [
@@ -3349,9 +3349,9 @@
     ],
     "test.test[select-trivial_having-default.txt-Debug]": [
         {
-            "checksum": "1cfeecb75ebfcbc6dd730c75edbb7b8f",
-            "size": 2380,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_select-trivial_having-default.txt-Debug_/opt.yql_patched"
+            "checksum": "36e41a7925a3f6f19fda9f5efced4017",
+            "size": 2415,
+            "uri": "https://{canondata_backend}/1784117/b9574b141cedb261a8563a97d9a372d9277da2ce/resource.tar.gz#test.test_select-trivial_having-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[select-trivial_having-default.txt-Plan]": [
@@ -3437,9 +3437,9 @@
     ],
     "test.test[tpch-q17-default.txt-Debug]": [
         {
-            "checksum": "98a2da4c8334acb4f604dedc71c63bf0",
-            "size": 7451,
-            "uri": "https://{canondata_backend}/1942173/50b4ae48e906d86b27ee0b68ed5a08b5ad6bf50e/resource.tar.gz#test.test_tpch-q17-default.txt-Debug_/opt.yql_patched"
+            "checksum": "defafd6f9612cbc308bd2320730c9dff",
+            "size": 7495,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_tpch-q17-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q17-default.txt-Plan]": [
@@ -3459,9 +3459,9 @@
     ],
     "test.test[tpch-q22-default.txt-Debug]": [
         {
-            "checksum": "b99a031adbe798581f39db3701434b43",
-            "size": 7650,
-            "uri": "https://{canondata_backend}/1936842/636e5b20baf2cf59d9f38821f96eeb0a152b1897/resource.tar.gz#test.test_tpch-q22-default.txt-Debug_/opt.yql_patched"
+            "checksum": "e48f4c1339dfe4b108a7995845641707",
+            "size": 7679,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_tpch-q22-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q22-default.txt-Plan]": [
@@ -3481,9 +3481,9 @@
     ],
     "test.test[tpch-q3-default.txt-Debug]": [
         {
-            "checksum": "5e89a9dd328163491222996474f96fa0",
-            "size": 8937,
-            "uri": "https://{canondata_backend}/937458/119b93f58d275f3cb1cc5fb636cc9ed84a96da9e/resource.tar.gz#test.test_tpch-q3-default.txt-Debug_/opt.yql_patched"
+            "checksum": "d6e266b3f88d8ef61db77efbc3abc5ef",
+            "size": 8963,
+            "uri": "https://{canondata_backend}/1942415/b6b41eb77627490bfce387dccb1eea7766e2bb71/resource.tar.gz#test.test_tpch-q3-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q3-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part13/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part13/canondata/result.json
index 0d30e130cbff..c21387780b14 100644
--- a/ydb/library/yql/tests/sql/dq_file/part13/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part13/canondata/result.json
@@ -297,9 +297,9 @@
     ],
     "test.test[aggregate-group_by_gs_flatten_columns-default.txt-Debug]": [
         {
-            "checksum": "b6dc4cebc2a2d3c9213e4fd6ca2237c0",
-            "size": 4044,
-            "uri": "https://{canondata_backend}/1946324/e871328b5487b9b2c440f1dd14b427a10459f3e7/resource.tar.gz#test.test_aggregate-group_by_gs_flatten_columns-default.txt-Debug_/opt.yql_patched"
+            "checksum": "5c2ce1d7d4e6df05a04c23fcfb7ae23e",
+            "size": 4096,
+            "uri": "https://{canondata_backend}/1923547/45484b99c033020b648870c9707d8e325a2db399/resource.tar.gz#test.test_aggregate-group_by_gs_flatten_columns-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_flatten_columns-default.txt-Plan]": [
@@ -347,9 +347,9 @@
     ],
     "test.test[aggregate-group_by_rollup_duo--Debug]": [
         {
-            "checksum": "76e92c8e5426e3591ceef5287ec16f90",
-            "size": 5431,
-            "uri": "https://{canondata_backend}/1936997/93899b3de50fae3f9677baacc98094a7a629590a/resource.tar.gz#test.test_aggregate-group_by_rollup_duo--Debug_/opt.yql_patched"
+            "checksum": "992877925fc779de4a52be671e977582",
+            "size": 5485,
+            "uri": "https://{canondata_backend}/1871102/3fcf32ea5c486527b20a5dea1db1e9ccf2e36a61/resource.tar.gz#test.test_aggregate-group_by_rollup_duo--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_duo--Plan]": [
@@ -369,9 +369,9 @@
     ],
     "test.test[aggregate-group_by_ru_with_select_distinct--Debug]": [
         {
-            "checksum": "4808ad562e2399291f99c9803027468f",
-            "size": 3337,
-            "uri": "https://{canondata_backend}/1924537/36fe336db7de347902767b13c1e0d63cf42757cd/resource.tar.gz#test.test_aggregate-group_by_ru_with_select_distinct--Debug_/opt.yql_patched"
+            "checksum": "960048221203aedc00af6f3a504bcbdc",
+            "size": 3425,
+            "uri": "https://{canondata_backend}/1775059/34e3c4f18af78c5b08d1779bfd2babe42d60869d/resource.tar.gz#test.test_aggregate-group_by_ru_with_select_distinct--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_with_select_distinct--Plan]": [
@@ -640,9 +640,9 @@
     ],
     "test.test[dq-dq_replicate_ok-default.txt-Debug]": [
         {
-            "checksum": "ff1a4f4a469760d70199f021a8762373",
-            "size": 3228,
-            "uri": "https://{canondata_backend}/1936842/0049c952a1bcb0ee8c00f8d262e8ccbc9a964444/resource.tar.gz#test.test_dq-dq_replicate_ok-default.txt-Debug_/opt.yql_patched"
+            "checksum": "35116c36ee83610ad04b16310fe91c46",
+            "size": 3263,
+            "uri": "https://{canondata_backend}/1871002/87af0e803663459b2fc0b931b22ed73d40f91575/resource.tar.gz#test.test_dq-dq_replicate_ok-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[dq-dq_replicate_ok-default.txt-Plan]": [
@@ -1136,9 +1136,9 @@
     ],
     "test.test[join-bush_dis_in_in_in--Debug]": [
         {
-            "checksum": "5b10b81a0d1664caf262219b4eac2ebe",
-            "size": 8105,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-bush_dis_in_in_in--Debug_/opt.yql_patched"
+            "checksum": "70a23a64b2013a871be7ea92983fa0d7",
+            "size": 8150,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-bush_dis_in_in_in--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_dis_in_in_in--Plan]": [
@@ -1158,9 +1158,9 @@
     ],
     "test.test[join-bush_dis_in_in_in-off-Debug]": [
         {
-            "checksum": "4dfb6de94756f53a461879b6e31063ca",
-            "size": 5481,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-bush_dis_in_in_in-off-Debug_/opt.yql_patched"
+            "checksum": "5a43d901e6d7a43daeb17e9e849cb944",
+            "size": 5531,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-bush_dis_in_in_in-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_dis_in_in_in-off-Plan]": [
@@ -1214,9 +1214,9 @@
     ],
     "test.test[join-inner_with_order--Debug]": [
         {
-            "checksum": "b8294da0f950c2edff43643292b3557f",
-            "size": 2795,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-inner_with_order--Debug_/opt.yql_patched"
+            "checksum": "de056dec53b1f932dbaf5e02802f45ed",
+            "size": 2821,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-inner_with_order--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_with_order--Plan]": [
@@ -1236,9 +1236,9 @@
     ],
     "test.test[join-join_with_duplicate_keys_on_sorted--Debug]": [
         {
-            "checksum": "30fb1b2f329921730348b365b49d6a77",
-            "size": 3395,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-join_with_duplicate_keys_on_sorted--Debug_/opt.yql_patched"
+            "checksum": "934025b0a3a51093f8ced5e8a0ec9fd9",
+            "size": 3418,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-join_with_duplicate_keys_on_sorted--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_with_duplicate_keys_on_sorted--Plan]": [
@@ -1280,9 +1280,9 @@
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_semi_single--Debug]": [
         {
-            "checksum": "1938f21c09ef3bf47d6675590879fa12",
-            "size": 2500,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_semi_single--Debug_/opt.yql_patched"
+            "checksum": "47d57926dd25a8182d8510fe14e18119",
+            "size": 2540,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_semi_single--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_semi_single--Plan]": [
@@ -1305,9 +1305,9 @@
     ],
     "test.test[join-mapjoin_opt_vs_2xopt--Debug]": [
         {
-            "checksum": "6b001971196c7f985cd13a9db927a8a4",
-            "size": 4677,
-            "uri": "https://{canondata_backend}/1925821/301359f830853bb29d8dc6bedf12ccc575fd3fd8/resource.tar.gz#test.test_join-mapjoin_opt_vs_2xopt--Debug_/opt.yql_patched"
+            "checksum": "58039f1c83657ef97519e3562ba6699d",
+            "size": 4689,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-mapjoin_opt_vs_2xopt--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_opt_vs_2xopt--Plan]": [
@@ -1327,9 +1327,9 @@
     ],
     "test.test[join-mergejoin_big_primary_unique--Debug]": [
         {
-            "checksum": "a351572ce896a4bcd8c1c4887eb07bc9",
-            "size": 3257,
-            "uri": "https://{canondata_backend}/1925821/301359f830853bb29d8dc6bedf12ccc575fd3fd8/resource.tar.gz#test.test_join-mergejoin_big_primary_unique--Debug_/opt.yql_patched"
+            "checksum": "2ba89bbadbd449ee26b9a32b3d0b2211",
+            "size": 3287,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-mergejoin_big_primary_unique--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_big_primary_unique--Plan]": [
@@ -1349,9 +1349,9 @@
     ],
     "test.test[join-mergejoin_with_table_range--Debug]": [
         {
-            "checksum": "1048315d40c9e6a4e80dec017b2af119",
-            "size": 3132,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-mergejoin_with_table_range--Debug_/opt.yql_patched"
+            "checksum": "2a5133cce16709825ca61c693563dbc1",
+            "size": 3150,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-mergejoin_with_table_range--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_table_range--Plan]": [
@@ -1371,9 +1371,9 @@
     ],
     "test.test[join-nopushdown_filter_over_inner--Debug]": [
         {
-            "checksum": "c58c01431e795406c8c367dd072a7ac8",
-            "size": 2672,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-nopushdown_filter_over_inner--Debug_/opt.yql_patched"
+            "checksum": "263392df75fd3a813ebf9c22ea49a2d8",
+            "size": 2688,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-nopushdown_filter_over_inner--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-nopushdown_filter_over_inner--Plan]": [
@@ -1393,9 +1393,9 @@
     ],
     "test.test[join-nopushdown_filter_over_inner-off-Debug]": [
         {
-            "checksum": "8afa7c967e903af25a6258b2925e3bb8",
-            "size": 2488,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-nopushdown_filter_over_inner-off-Debug_/opt.yql_patched"
+            "checksum": "8df3dd263cc082bc0ba02a5bbfe4d9cb",
+            "size": 2482,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-nopushdown_filter_over_inner-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-nopushdown_filter_over_inner-off-Plan]": [
@@ -1421,9 +1421,9 @@
     ],
     "test.test[join-premap_common_left_cross--Debug]": [
         {
-            "checksum": "91f9b5e32388fd74b079f2e45dae106b",
-            "size": 3866,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_join-premap_common_left_cross--Debug_/opt.yql_patched"
+            "checksum": "10d6a3cfdf677dcb1bb81a61be07aae1",
+            "size": 3899,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-premap_common_left_cross--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_left_cross--Plan]": [
@@ -1443,9 +1443,9 @@
     ],
     "test.test[join-star_join--Debug]": [
         {
-            "checksum": "71bb003b309fe0ddec128b71ffa35fa5",
-            "size": 9457,
-            "uri": "https://{canondata_backend}/1937492/d5b1a2d27ea37db26c50f883a518c6eb457f4ba4/resource.tar.gz#test.test_join-star_join--Debug_/opt.yql_patched"
+            "checksum": "4a6a911d5099029f27481262dc20e69c",
+            "size": 9533,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-star_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join--Plan]": [
@@ -1465,9 +1465,9 @@
     ],
     "test.test[join-star_join_multi--Debug]": [
         {
-            "checksum": "0882fc319d36db7a204a1965a12b2594",
-            "size": 13838,
-            "uri": "https://{canondata_backend}/1937492/d5b1a2d27ea37db26c50f883a518c6eb457f4ba4/resource.tar.gz#test.test_join-star_join_multi--Debug_/opt.yql_patched"
+            "checksum": "a768b64388e54d80ad4f3c741665e289",
+            "size": 13997,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-star_join_multi--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_multi--Plan]": [
@@ -1487,9 +1487,9 @@
     ],
     "test.test[join-yql-10654_pullup_with_sys_columns-off-Debug]": [
         {
-            "checksum": "49dac251239a4b29666a03e107a25b6c",
-            "size": 2585,
-            "uri": "https://{canondata_backend}/1937492/d5b1a2d27ea37db26c50f883a518c6eb457f4ba4/resource.tar.gz#test.test_join-yql-10654_pullup_with_sys_columns-off-Debug_/opt.yql_patched"
+            "checksum": "88a48ab3896eecc97eb55f0bb3f0ad9e",
+            "size": 2579,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_join-yql-10654_pullup_with_sys_columns-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-10654_pullup_with_sys_columns-off-Plan]": [
@@ -1787,9 +1787,9 @@
     ],
     "test.test[pg-aggregate_minus_zero--Debug]": [
         {
-            "checksum": "fcb73f959fec7a9ed07627915c534d5e",
-            "size": 3129,
-            "uri": "https://{canondata_backend}/1903280/2010996c42ed76fd6d1e7bedccdf6026ec5a5fdb/resource.tar.gz#test.test_pg-aggregate_minus_zero--Debug_/opt.yql_patched"
+            "checksum": "dcab7563006ab8666b45c33ecb72bad2",
+            "size": 3164,
+            "uri": "https://{canondata_backend}/1923547/b752d090106a138d94de874b3e8b115ee6aa3c61/resource.tar.gz#test.test_pg-aggregate_minus_zero--Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-aggregate_minus_zero--Plan]": [
@@ -2276,9 +2276,9 @@
     ],
     "test.test[pg-tpch-q13-default.txt-Debug]": [
         {
-            "checksum": "10d71fa88d9f5777cfcc0c87d6da69c5",
-            "size": 8887,
-            "uri": "https://{canondata_backend}/1937367/a2db7f6870cc304340d95468ee66167dfb2f1c6b/resource.tar.gz#test.test_pg-tpch-q13-default.txt-Debug_/opt.yql_patched"
+            "checksum": "f4cd33c81869dc46d10e192831eb7a61",
+            "size": 8947,
+            "uri": "https://{canondata_backend}/1923547/3f2874a2af3dc92454f155e96d4a4c91f2fbb16d/resource.tar.gz#test.test_pg-tpch-q13-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q13-default.txt-Plan]": [
@@ -2474,9 +2474,9 @@
     ],
     "test.test[sampling-subquery_mapjoin-default.txt-Debug]": [
         {
-            "checksum": "ec423085fa76ef7c4fe6ce8e934c516b",
-            "size": 2478,
-            "uri": "https://{canondata_backend}/1925821/301359f830853bb29d8dc6bedf12ccc575fd3fd8/resource.tar.gz#test.test_sampling-subquery_mapjoin-default.txt-Debug_/opt.yql_patched"
+            "checksum": "fb95984b88b7095b1c30bd4efc1758f2",
+            "size": 2496,
+            "uri": "https://{canondata_backend}/1931696/baaf97fef703e42cdaefa73847e109a1450b5b99/resource.tar.gz#test.test_sampling-subquery_mapjoin-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-subquery_mapjoin-default.txt-Plan]": [
@@ -2978,9 +2978,9 @@
     ],
     "test.test[window-win_func_over_group_by_list_names_order_prefix--Debug]": [
         {
-            "checksum": "d08e7e7b15a07c3b90bf5c42b0398cae",
-            "size": 8116,
-            "uri": "https://{canondata_backend}/1946324/e871328b5487b9b2c440f1dd14b427a10459f3e7/resource.tar.gz#test.test_window-win_func_over_group_by_list_names_order_prefix--Debug_/opt.yql_patched"
+            "checksum": "f27e3bd65da12d156812818f8f3007ec",
+            "size": 8151,
+            "uri": "https://{canondata_backend}/1784826/19728bd1f1bdea5d0605d9a498ec2970c5f3e92a/resource.tar.gz#test.test_window-win_func_over_group_by_list_names_order_prefix--Debug_/opt.yql_patched"
         }
     ],
     "test.test[window-win_func_over_group_by_list_names_order_prefix--Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part14/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part14/canondata/result.json
index ffcd7c161ccd..a62ccd85e215 100644
--- a/ydb/library/yql/tests/sql/dq_file/part14/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part14/canondata/result.json
@@ -284,9 +284,9 @@
     ],
     "test.test[aggregate-group_by_cube_expr_trio--Debug]": [
         {
-            "checksum": "286329169f0fff5035fb80c4c27045cd",
-            "size": 6977,
-            "uri": "https://{canondata_backend}/1777230/b8c638a79c26a4c14c582731ad5b06fe98478bb4/resource.tar.gz#test.test_aggregate-group_by_cube_expr_trio--Debug_/opt.yql_patched"
+            "checksum": "17691e421b8446c9f5e8d1e1e3367214",
+            "size": 7033,
+            "uri": "https://{canondata_backend}/1847551/0c915a458dc980cf235b6b87ce642ec9efee9e93/resource.tar.gz#test.test_aggregate-group_by_cube_expr_trio--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_cube_expr_trio--Plan]": [
@@ -350,9 +350,9 @@
     ],
     "test.test[aggregate-group_by_ru_join_simple_fs_multiusage--Debug]": [
         {
-            "checksum": "334ec2a5c8fb12e0e404dcb0da4a36d1",
-            "size": 5940,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_aggregate-group_by_ru_join_simple_fs_multiusage--Debug_/opt.yql_patched"
+            "checksum": "40c120a2482c758ea695dcf009e7cab4",
+            "size": 6014,
+            "uri": "https://{canondata_backend}/1937150/28c16a1eb7a8543dba701afbdce5ac2e805d7dae/resource.tar.gz#test.test_aggregate-group_by_ru_join_simple_fs_multiusage--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_join_simple_fs_multiusage--Plan]": [
@@ -1196,9 +1196,9 @@
     ],
     "test.test[hor_join-empty_out_hor_join-default.txt-Debug]": [
         {
-            "checksum": "56ffbe8e5c55caa1f8f55738fddc784c",
-            "size": 3086,
-            "uri": "https://{canondata_backend}/1777230/b8c638a79c26a4c14c582731ad5b06fe98478bb4/resource.tar.gz#test.test_hor_join-empty_out_hor_join-default.txt-Debug_/opt.yql_patched"
+            "checksum": "e475bbc392cba96d700981f3d64093d0",
+            "size": 3139,
+            "uri": "https://{canondata_backend}/1871182/e02f7cf2d403eeff46ab74696026e36be4ded9a9/resource.tar.gz#test.test_hor_join-empty_out_hor_join-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[hor_join-empty_out_hor_join-default.txt-Plan]": [
@@ -1240,9 +1240,9 @@
     ],
     "test.test[in-in_ansi_join--Debug]": [
         {
-            "checksum": "dc68867e89e25cd9f5b1858d139fa4b1",
-            "size": 14429,
-            "uri": "https://{canondata_backend}/1916746/7ac33c22f7ccc1bbb75817f71b16f88ef4af4e60/resource.tar.gz#test.test_in-in_ansi_join--Debug_/opt.yql_patched"
+            "checksum": "e8c78f3fe5d9c81340002c22067dad55",
+            "size": 14502,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_in-in_ansi_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_ansi_join--Plan]": [
@@ -1321,9 +1321,9 @@
     ],
     "test.test[join-anyjoin_common_nodata_keys--Debug]": [
         {
-            "checksum": "09c4ac50b66936b6522b660a3dc50dd9",
-            "size": 4852,
-            "uri": "https://{canondata_backend}/1923547/e4e818b787fc28bd7492f949b98701f356713fca/resource.tar.gz#test.test_join-anyjoin_common_nodata_keys--Debug_/opt.yql_patched"
+            "checksum": "39d96a91321fa9c31d263c632e3f9161",
+            "size": 4910,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-anyjoin_common_nodata_keys--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-anyjoin_common_nodata_keys--Plan]": [
@@ -1343,9 +1343,9 @@
     ],
     "test.test[join-bush_dis_in_in--Debug]": [
         {
-            "checksum": "eb01d3161c9e5ba8dd52ec307d610c08",
-            "size": 6121,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-bush_dis_in_in--Debug_/opt.yql_patched"
+            "checksum": "50ece4bdf06e9eb5139766a044d50738",
+            "size": 6140,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-bush_dis_in_in--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_dis_in_in--Plan]": [
@@ -1365,9 +1365,9 @@
     ],
     "test.test[join-full_equal_null-off-Debug]": [
         {
-            "checksum": "3308a08cd32997cc40e5fee41d4582e9",
-            "size": 3240,
-            "uri": "https://{canondata_backend}/1130705/eac262cda27c06132baae4257bc3accb70d14812/resource.tar.gz#test.test_join-full_equal_null-off-Debug_/opt.yql_patched"
+            "checksum": "6cc696edcdda80792d68eef9007587ac",
+            "size": 3226,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-full_equal_null-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_equal_null-off-Plan]": [
@@ -1396,9 +1396,9 @@
     ],
     "test.test[join-join_no_correlation_in_order_by--Debug]": [
         {
-            "checksum": "45ad5c0396d59a25f910ca66f4cdc8fc",
-            "size": 2644,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-join_no_correlation_in_order_by--Debug_/opt.yql_patched"
+            "checksum": "7cfbffa5ecbc90e3c8e8145b1e040ba8",
+            "size": 2640,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-join_no_correlation_in_order_by--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_no_correlation_in_order_by--Plan]": [
@@ -1425,9 +1425,9 @@
     ],
     "test.test[join-join_no_correlation_in_order_by-off-Debug]": [
         {
-            "checksum": "3039b538fc77cfbf7e0718f07da89311",
-            "size": 2364,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-join_no_correlation_in_order_by-off-Debug_/opt.yql_patched"
+            "checksum": "e2a8e66cec92e6de49447312054afd77",
+            "size": 2372,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-join_no_correlation_in_order_by-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_no_correlation_in_order_by-off-Plan]": [
@@ -1456,9 +1456,9 @@
     ],
     "test.test[join-left_join_right_pushdown_null--Debug]": [
         {
-            "checksum": "50cb81c55fdf24947a6c8eb59c4c2082",
-            "size": 5503,
-            "uri": "https://{canondata_backend}/1871182/035cffc2aba7adbed541caae65e59e0ddf49b527/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Debug_/opt.yql_patched"
+            "checksum": "519614676ce781d0173539bd54c66273",
+            "size": 5549,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-left_join_right_pushdown_null--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_join_right_pushdown_null--Plan]": [
@@ -1478,9 +1478,9 @@
     ],
     "test.test[join-left_trivial-off-Debug]": [
         {
-            "checksum": "1212d9b47789d46506a11caa4a8c160a",
-            "size": 2501,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-left_trivial-off-Debug_/opt.yql_patched"
+            "checksum": "67f52acc84d9ecd4ea63f3d7787c4166",
+            "size": 2505,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-left_trivial-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_trivial-off-Plan]": [
@@ -1506,9 +1506,9 @@
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_semi_many-off-Debug]": [
         {
-            "checksum": "438ff8bd2b637d516b2490968a8965fc",
-            "size": 3534,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_semi_many-off-Debug_/opt.yql_patched"
+            "checksum": "f453763884edba53cf12abb6eee2ba36",
+            "size": 3614,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_semi_many-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_semi_many-off-Plan]": [
@@ -1537,9 +1537,9 @@
     ],
     "test.test[join-mapjoin_with_anonymous--Debug]": [
         {
-            "checksum": "1e28942e2f9d3ee053addded93dfeab5",
-            "size": 3533,
-            "uri": "https://{canondata_backend}/1923547/e4e818b787fc28bd7492f949b98701f356713fca/resource.tar.gz#test.test_join-mapjoin_with_anonymous--Debug_/opt.yql_patched"
+            "checksum": "aa049c03362640beaa5b3e16cbd6fce8",
+            "size": 3549,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-mapjoin_with_anonymous--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_with_anonymous--Plan]": [
@@ -1559,9 +1559,9 @@
     ],
     "test.test[join-mergejoin_force_one_sorted--Debug]": [
         {
-            "checksum": "5d70e8cfe8fd29fe53f9c1d303f714e0",
-            "size": 2834,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-mergejoin_force_one_sorted--Debug_/opt.yql_patched"
+            "checksum": "cae7fa5425409a6566d8a5ee3752f136",
+            "size": 2818,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-mergejoin_force_one_sorted--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_force_one_sorted--Plan]": [
@@ -1581,9 +1581,9 @@
     ],
     "test.test[join-mergejoin_with_reverse_key_order--Debug]": [
         {
-            "checksum": "9fa0163ac1511bcf1471ae2589be6aed",
-            "size": 4365,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-mergejoin_with_reverse_key_order--Debug_/opt.yql_patched"
+            "checksum": "75d5c988793cc5a6f89afebd64b98bce",
+            "size": 4419,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-mergejoin_with_reverse_key_order--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_reverse_key_order--Plan]": [
@@ -1603,9 +1603,9 @@
     ],
     "test.test[join-order_of_qualified-off-Debug]": [
         {
-            "checksum": "08f76718d8b9df1f35b5eca4243707e4",
-            "size": 2585,
-            "uri": "https://{canondata_backend}/1923547/e4e818b787fc28bd7492f949b98701f356713fca/resource.tar.gz#test.test_join-order_of_qualified-off-Debug_/opt.yql_patched"
+            "checksum": "7a0eb51f3b56dcd25b1291b2c232e399",
+            "size": 2581,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-order_of_qualified-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-order_of_qualified-off-Plan]": [
@@ -1659,9 +1659,9 @@
     ],
     "test.test[join-premap_merge_extrasort1--Debug]": [
         {
-            "checksum": "3dc66aa4e1e12ada876b3d0172842762",
-            "size": 4471,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-premap_merge_extrasort1--Debug_/opt.yql_patched"
+            "checksum": "29ee0a462d1661d5aa8b9635816a3401",
+            "size": 4525,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-premap_merge_extrasort1--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_merge_extrasort1--Plan]": [
@@ -1681,9 +1681,9 @@
     ],
     "test.test[join-premap_merge_extrasort1-off-Debug]": [
         {
-            "checksum": "c811d85992d9c064dd01a5476e5a3028",
-            "size": 3746,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-premap_merge_extrasort1-off-Debug_/opt.yql_patched"
+            "checksum": "7499a6d92e2e873d6f68d82eaa247715",
+            "size": 3800,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-premap_merge_extrasort1-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_merge_extrasort1-off-Plan]": [
@@ -1709,9 +1709,9 @@
     ],
     "test.test[join-premap_merge_inner-off-Debug]": [
         {
-            "checksum": "7ad7c0200abcd53f74d76abc9d147e0b",
-            "size": 3330,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-premap_merge_inner-off-Debug_/opt.yql_patched"
+            "checksum": "c0d8b03c76df3ffbb462843e5a0e932a",
+            "size": 3334,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-premap_merge_inner-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_merge_inner-off-Plan]": [
@@ -1759,9 +1759,9 @@
     ],
     "test.test[join-pullup_random--Debug]": [
         {
-            "checksum": "46dd081364ee388d40ee5b4a33a10194",
-            "size": 3027,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-pullup_random--Debug_/opt.yql_patched"
+            "checksum": "becaac0cfef27108f78f9f38f46185b5",
+            "size": 3043,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-pullup_random--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_random--Plan]": [
@@ -1781,9 +1781,9 @@
     ],
     "test.test[join-star_join_inners--Debug]": [
         {
-            "checksum": "77a3abfe6b7b46d5d533703f54f9d91a",
-            "size": 6340,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-star_join_inners--Debug_/opt.yql_patched"
+            "checksum": "81e628754e3fa290814e02e2d8d1c011",
+            "size": 6405,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-star_join_inners--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_inners--Plan]": [
@@ -1803,9 +1803,9 @@
     ],
     "test.test[join-star_join_inners_vk_sorted-off-Debug]": [
         {
-            "checksum": "008a92cc9d7fb0dc511296e8b10d2d37",
-            "size": 5956,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-star_join_inners_vk_sorted-off-Debug_/opt.yql_patched"
+            "checksum": "890fbf9b16572b03f2e6495fb537ba5a",
+            "size": 5969,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-star_join_inners_vk_sorted-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_inners_vk_sorted-off-Plan]": [
@@ -1836,9 +1836,9 @@
     ],
     "test.test[join-trivial_view--Debug]": [
         {
-            "checksum": "fe0ff7934118212fbcf9063960208d24",
-            "size": 2743,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-trivial_view--Debug_/opt.yql_patched"
+            "checksum": "eebeec89df94f0e55e82dcc5c7cf9264",
+            "size": 2759,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-trivial_view--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-trivial_view--Plan]": [
@@ -1858,9 +1858,9 @@
     ],
     "test.test[join-trivial_view-off-Debug]": [
         {
-            "checksum": "865d3c5c95f035b23b622a01053eab58",
-            "size": 2716,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_join-trivial_view-off-Debug_/opt.yql_patched"
+            "checksum": "af983a9a5c6d805557785654ba7e40c9",
+            "size": 2710,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_join-trivial_view-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-trivial_view-off-Plan]": [
@@ -2119,9 +2119,9 @@
     ],
     "test.test[optimizers-yql_5830_fuse_outer_with_extra_deps--Debug]": [
         {
-            "checksum": "38de3726eda1f6129bb3d20a3aebbd85",
-            "size": 3540,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_optimizers-yql_5830_fuse_outer_with_extra_deps--Debug_/opt.yql_patched"
+            "checksum": "11f6c2d042fbf600dff9a3d73c3b5822",
+            "size": 3558,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_optimizers-yql_5830_fuse_outer_with_extra_deps--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-yql_5830_fuse_outer_with_extra_deps--Plan]": [
@@ -2664,9 +2664,9 @@
     ],
     "test.test[pg-tpch-q18-default.txt-Debug]": [
         {
-            "checksum": "1246c4dee1c94df3fdea4189ab5248cb",
+            "checksum": "736db3f7371060e631eb540d754522ea",
             "size": 13265,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_pg-tpch-q18-default.txt-Debug_/opt.yql_patched"
+            "uri": "https://{canondata_backend}/1689644/56cb6d928f012a044a6a92f477a5d1230cb126f7/resource.tar.gz#test.test_pg-tpch-q18-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q18-default.txt-Plan]": [
@@ -2686,9 +2686,9 @@
     ],
     "test.test[pg-tpch-q21-default.txt-Debug]": [
         {
-            "checksum": "0a9dbfa62809cdd9ab31e4490fb45a58",
-            "size": 17510,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_pg-tpch-q21-default.txt-Debug_/opt.yql_patched"
+            "checksum": "42f8cc4ced96ef1972242ff1466b496a",
+            "size": 17548,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_pg-tpch-q21-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q21-default.txt-Plan]": [
@@ -2799,9 +2799,9 @@
     ],
     "test.test[sampling-mapjoin_right_sample-default.txt-Debug]": [
         {
-            "checksum": "a392999e0810e033c4e60679e12fbcbf",
-            "size": 2314,
-            "uri": "https://{canondata_backend}/1923547/e4e818b787fc28bd7492f949b98701f356713fca/resource.tar.gz#test.test_sampling-mapjoin_right_sample-default.txt-Debug_/opt.yql_patched"
+            "checksum": "9d048be517b0273c44d6c403d9f77234",
+            "size": 2330,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_sampling-mapjoin_right_sample-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-mapjoin_right_sample-default.txt-Plan]": [
@@ -2976,9 +2976,9 @@
     ],
     "test.test[select-discard-default.txt-Debug]": [
         {
-            "checksum": "cc9b28ffcf31c1f36bc060af09741f2f",
-            "size": 8036,
-            "uri": "https://{canondata_backend}/1777230/b8c638a79c26a4c14c582731ad5b06fe98478bb4/resource.tar.gz#test.test_select-discard-default.txt-Debug_/opt.yql_patched"
+            "checksum": "41e050db4594c943d6ea2e087509688a",
+            "size": 8143,
+            "uri": "https://{canondata_backend}/1931696/84d8870f69a0ed5ab587dcc90a72bf470f59cbb8/resource.tar.gz#test.test_select-discard-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[select-discard-default.txt-Plan]": [
@@ -3152,9 +3152,9 @@
     ],
     "test.test[tpch-q11-default.txt-Debug]": [
         {
-            "checksum": "e1c662f40817c4ea7f6eac7d648b18a4",
-            "size": 8609,
-            "uri": "https://{canondata_backend}/1777230/b8c638a79c26a4c14c582731ad5b06fe98478bb4/resource.tar.gz#test.test_tpch-q11-default.txt-Debug_/opt.yql_patched"
+            "checksum": "5818205132db06e5a70dd75361ccb6ef",
+            "size": 8676,
+            "uri": "https://{canondata_backend}/1600758/dd5b840770076286dd527fb7b5b51c5add954a15/resource.tar.gz#test.test_tpch-q11-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q11-default.txt-Plan]": [
@@ -3174,9 +3174,9 @@
     ],
     "test.test[tpch-q20-default.txt-Debug]": [
         {
-            "checksum": "64968089c3277944a06035fccbc196af",
-            "size": 11663,
-            "uri": "https://{canondata_backend}/1880306/b8a146dff266e2b5388e4e9ae22aa20c1b4fbc64/resource.tar.gz#test.test_tpch-q20-default.txt-Debug_/opt.yql_patched"
+            "checksum": "590970f3dab1631b31a22557d65a8ed1",
+            "size": 11732,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_tpch-q20-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q20-default.txt-Plan]": [
@@ -3196,9 +3196,9 @@
     ],
     "test.test[tpch-q9-default.txt-Debug]": [
         {
-            "checksum": "dcef1f89ee98c3949b45ce9b37702f84",
-            "size": 15089,
-            "uri": "https://{canondata_backend}/1777230/62026d5ecd221a8c0ee8ca8a9643da3b542aaa43/resource.tar.gz#test.test_tpch-q9-default.txt-Debug_/opt.yql_patched"
+            "checksum": "3f9b976ba4e5ecb8f6acd1fd83dc3209",
+            "size": 15152,
+            "uri": "https://{canondata_backend}/1773845/4aaca50c52fbfe0fc1a237a3c226e5e498d0a750/resource.tar.gz#test.test_tpch-q9-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q9-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part15/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part15/canondata/result.json
index 0bf42028b18b..66f009640acc 100644
--- a/ydb/library/yql/tests/sql/dq_file/part15/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part15/canondata/result.json
@@ -8,9 +8,9 @@
     ],
     "test.test[action-eval_column--Debug]": [
         {
-            "checksum": "b67b76a8cdbe6cda98a3ebe92034fab7",
-            "size": 7851,
-            "uri": "https://{canondata_backend}/1777230/8d6bc20c3c548691ed47463aed0d508dcd185ce3/resource.tar.gz#test.test_action-eval_column--Debug_/opt.yql_patched"
+            "checksum": "e7391ee24b3ee11d60d1d37a66a93345",
+            "size": 7873,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_action-eval_column--Debug_/opt.yql_patched"
         }
     ],
     "test.test[action-eval_column--Plan]": [
@@ -416,9 +416,9 @@
     ],
     "test.test[aggregate-group_by_cube_grouping_and_expr-default.txt-Debug]": [
         {
-            "checksum": "e8bf5cb7c6827564cb98e82877d2d931",
-            "size": 5268,
-            "uri": "https://{canondata_backend}/1777230/8d6bc20c3c548691ed47463aed0d508dcd185ce3/resource.tar.gz#test.test_aggregate-group_by_cube_grouping_and_expr-default.txt-Debug_/opt.yql_patched"
+            "checksum": "b29a1121295e35678097e04a6be69d1e",
+            "size": 5331,
+            "uri": "https://{canondata_backend}/1847551/5836720bd6edb7a20e88f4ea2ae09a4e4b561093/resource.tar.gz#test.test_aggregate-group_by_cube_grouping_and_expr-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_cube_grouping_and_expr-default.txt-Plan]": [
@@ -438,9 +438,9 @@
     ],
     "test.test[aggregate-group_by_cube_join_count--Debug]": [
         {
-            "checksum": "cd1030526f7d638cc3f94f72796b4ee4",
-            "size": 6808,
-            "uri": "https://{canondata_backend}/1777230/8d6bc20c3c548691ed47463aed0d508dcd185ce3/resource.tar.gz#test.test_aggregate-group_by_cube_join_count--Debug_/opt.yql_patched"
+            "checksum": "2b660a85546417936f69fb47b3f70a8c",
+            "size": 6889,
+            "uri": "https://{canondata_backend}/1599023/6b1d1e5bfb6806200cf7b045d1d0a5c785f8ce64/resource.tar.gz#test.test_aggregate-group_by_cube_join_count--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_cube_join_count--Plan]": [
@@ -460,9 +460,9 @@
     ],
     "test.test[aggregate-group_by_expr_semi_join--Debug]": [
         {
-            "checksum": "7349560b8679b81ca371e4f6f74dd853",
-            "size": 3984,
-            "uri": "https://{canondata_backend}/1777230/843d9269357cd6a968324aa591212870032c7c60/resource.tar.gz#test.test_aggregate-group_by_expr_semi_join--Debug_/opt.yql_patched"
+            "checksum": "f1314b0e14d7d64f10dd72fddcdffe34",
+            "size": 4003,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_aggregate-group_by_expr_semi_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_expr_semi_join--Plan]": [
@@ -482,9 +482,9 @@
     ],
     "test.test[aggregate-group_by_ru_join_star-default.txt-Debug]": [
         {
-            "checksum": "37bbadce7e86970015485b90bc3d6175",
-            "size": 3779,
-            "uri": "https://{canondata_backend}/1777230/8d6bc20c3c548691ed47463aed0d508dcd185ce3/resource.tar.gz#test.test_aggregate-group_by_ru_join_star-default.txt-Debug_/opt.yql_patched"
+            "checksum": "bfc59d33705bb7a2a54873e86a41baaa",
+            "size": 3852,
+            "uri": "https://{canondata_backend}/1889210/bb0c0a0adac57f0ecc091e7093fb3f5bc2de0c19/resource.tar.gz#test.test_aggregate-group_by_ru_join_star-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_join_star-default.txt-Plan]": [
@@ -504,9 +504,9 @@
     ],
     "test.test[aggregate-group_by_ru_with_window_func--Debug]": [
         {
-            "checksum": "8b9927290f5ebf82c428cbd684bd128b",
-            "size": 3737,
-            "uri": "https://{canondata_backend}/1916746/8af1fb7747dc5b2dccf47bca5be44479c7ae6621/resource.tar.gz#test.test_aggregate-group_by_ru_with_window_func--Debug_/opt.yql_patched"
+            "checksum": "86f3ff358eb385a0af0c6c099e82b162",
+            "size": 3825,
+            "uri": "https://{canondata_backend}/1600758/6536c12aedebd96c5fc71915b4cfc72252cfa630/resource.tar.gz#test.test_aggregate-group_by_ru_with_window_func--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_with_window_func--Plan]": [
@@ -790,9 +790,9 @@
     ],
     "test.test[distinct-distinct_join-default.txt-Debug]": [
         {
-            "checksum": "58e5de0a79e9712d8c47cd91f162321e",
-            "size": 2611,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_distinct-distinct_join-default.txt-Debug_/opt.yql_patched"
+            "checksum": "5cbabd5e546072676f4384ccdeb902c4",
+            "size": 2609,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_distinct-distinct_join-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[distinct-distinct_join-default.txt-Plan]": [
@@ -1029,9 +1029,9 @@
     ],
     "test.test[join-bush_in_in--Debug]": [
         {
-            "checksum": "7b91f2a00980559b2b31d606feefbe08",
-            "size": 5477,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_join-bush_in_in--Debug_/opt.yql_patched"
+            "checksum": "cd93787ea4f82e644cd65c02bb00b929",
+            "size": 5496,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-bush_in_in--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_in_in--Plan]": [
@@ -1051,9 +1051,9 @@
     ],
     "test.test[join-grace_join1-map-Debug]": [
         {
-            "checksum": "4c4d19099ea38396c8286e0da09b2e89",
-            "size": 3159,
-            "uri": "https://{canondata_backend}/1925842/a4b71373097359ba466e2713f3de746df8a53ab1/resource.tar.gz#test.test_join-grace_join1-map-Debug_/opt.yql_patched"
+            "checksum": "a38b67eea8213a45d29f2b7916ab770b",
+            "size": 3195,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-grace_join1-map-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-grace_join1-map-Plan]": [
@@ -1163,9 +1163,9 @@
     ],
     "test.test[join-inner_grouped_by_expr--Debug]": [
         {
-            "checksum": "36edfd6f5b48b2208f99117d3e492717",
-            "size": 3483,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_join-inner_grouped_by_expr--Debug_/opt.yql_patched"
+            "checksum": "72047c93d3f7f7aec3ab3afb79279fc7",
+            "size": 3509,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-inner_grouped_by_expr--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_grouped_by_expr--Plan]": [
@@ -1188,9 +1188,9 @@
     ],
     "test.test[join-join_semi_correlation_in_order_by--Debug]": [
         {
-            "checksum": "45ad5c0396d59a25f910ca66f4cdc8fc",
-            "size": 2644,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_join-join_semi_correlation_in_order_by--Debug_/opt.yql_patched"
+            "checksum": "7cfbffa5ecbc90e3c8e8145b1e040ba8",
+            "size": 2640,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-join_semi_correlation_in_order_by--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_semi_correlation_in_order_by--Plan]": [
@@ -1214,9 +1214,9 @@
     ],
     "test.test[join-lookupjoin_inner_2o-off-Debug]": [
         {
-            "checksum": "21051b4a13b7bcd06da819a538c7eaef",
-            "size": 3056,
-            "uri": "https://{canondata_backend}/1925842/a4b71373097359ba466e2713f3de746df8a53ab1/resource.tar.gz#test.test_join-lookupjoin_inner_2o-off-Debug_/opt.yql_patched"
+            "checksum": "0bd5d85bdcd3dfb4b1114ed537c9a1a7",
+            "size": 3088,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-lookupjoin_inner_2o-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner_2o-off-Plan]": [
@@ -1242,9 +1242,9 @@
     ],
     "test.test[join-lookupjoin_inner_empty_subq--Debug]": [
         {
-            "checksum": "7bb730958eaebb4fadce0ddcb13d446b",
-            "size": 3359,
-            "uri": "https://{canondata_backend}/1925842/a4b71373097359ba466e2713f3de746df8a53ab1/resource.tar.gz#test.test_join-lookupjoin_inner_empty_subq--Debug_/opt.yql_patched"
+            "checksum": "1133f27acb3453ad33474fd00e1c724c",
+            "size": 3345,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-lookupjoin_inner_empty_subq--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner_empty_subq--Plan]": [
@@ -1264,9 +1264,9 @@
     ],
     "test.test[join-lookupjoin_semi--Debug]": [
         {
-            "checksum": "0e2b428e588c066c6666e08dc1d21ee8",
+            "checksum": "b0f702b8bfec9b79f734e872c46f96e9",
             "size": 3143,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_join-lookupjoin_semi--Debug_/opt.yql_patched"
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-lookupjoin_semi--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi--Plan]": [
@@ -1286,9 +1286,9 @@
     ],
     "test.test[join-lookupjoin_semi_1o-off-Debug]": [
         {
-            "checksum": "722b18969d7293310d4cc2a3bfead421",
-            "size": 3138,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_join-lookupjoin_semi_1o-off-Debug_/opt.yql_patched"
+            "checksum": "493574888cdabbb66632878c5e8a712d",
+            "size": 3122,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-lookupjoin_semi_1o-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi_1o-off-Plan]": [
@@ -1342,9 +1342,9 @@
     ],
     "test.test[join-opt_on_opt_side_with_group--Debug]": [
         {
-            "checksum": "2c01f315a8c414eac600dceb8899b1d9",
-            "size": 3842,
-            "uri": "https://{canondata_backend}/1889210/7f3c41a1a9a952dcc8b95a828e079ca0b5c57243/resource.tar.gz#test.test_join-opt_on_opt_side_with_group--Debug_/opt.yql_patched"
+            "checksum": "e082fa918345b9e3b6a3463473c2b414",
+            "size": 3858,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-opt_on_opt_side_with_group--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-opt_on_opt_side_with_group--Plan]": [
@@ -1364,9 +1364,9 @@
     ],
     "test.test[join-opt_on_opt_side_with_group-off-Debug]": [
         {
-            "checksum": "192d68bffe09ca235c219d01e14f944d",
-            "size": 3847,
-            "uri": "https://{canondata_backend}/1889210/7f3c41a1a9a952dcc8b95a828e079ca0b5c57243/resource.tar.gz#test.test_join-opt_on_opt_side_with_group-off-Debug_/opt.yql_patched"
+            "checksum": "56184077528e9b40d0e7c3169713098a",
+            "size": 3863,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-opt_on_opt_side_with_group-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-opt_on_opt_side_with_group-off-Plan]": [
@@ -1395,9 +1395,9 @@
     ],
     "test.test[join-premap_merge_with_remap-off-Debug]": [
         {
-            "checksum": "9f3074a442a2ff744c4be07a792e45f9",
-            "size": 7095,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_join-premap_merge_with_remap-off-Debug_/opt.yql_patched"
+            "checksum": "bfc0715690074eb53a329d0bf85da659",
+            "size": 7149,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-premap_merge_with_remap-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_merge_with_remap-off-Plan]": [
@@ -1423,9 +1423,9 @@
     ],
     "test.test[join-pushdown_filter_over_inner_with_assume_strict-off-Debug]": [
         {
-            "checksum": "bb84dae56d19c44cef733224f0047bb9",
-            "size": 2536,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_join-pushdown_filter_over_inner_with_assume_strict-off-Debug_/opt.yql_patched"
+            "checksum": "1b22780484542e82dbff3c76b597c509",
+            "size": 2530,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-pushdown_filter_over_inner_with_assume_strict-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pushdown_filter_over_inner_with_assume_strict-off-Plan]": [
@@ -1451,9 +1451,9 @@
     ],
     "test.test[join-star_join_semionly--Debug]": [
         {
-            "checksum": "a66e2413ce301ff6a812b36dbbccb1eb",
-            "size": 4677,
-            "uri": "https://{canondata_backend}/1942100/e137fd991c9f3857dfbc144867f53c199fe00560/resource.tar.gz#test.test_join-star_join_semionly--Debug_/opt.yql_patched"
+            "checksum": "c3b08e6039b00f02166aed18ac660eff",
+            "size": 4693,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_join-star_join_semionly--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_semionly--Plan]": [
@@ -1664,9 +1664,9 @@
     ],
     "test.test[optimizers-yql-6038_direct_row--Debug]": [
         {
-            "checksum": "4797c6d065d6e29c28118e9771ad7b4d",
-            "size": 4791,
-            "uri": "https://{canondata_backend}/1777230/8d6bc20c3c548691ed47463aed0d508dcd185ce3/resource.tar.gz#test.test_optimizers-yql-6038_direct_row--Debug_/opt.yql_patched"
+            "checksum": "0ea73bccac835542d590878218a2cbf2",
+            "size": 4813,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_optimizers-yql-6038_direct_row--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-yql-6038_direct_row--Plan]": [
@@ -2302,23 +2302,23 @@
     "test.test[pg-tpch-q06-default.txt-Results]": [],
     "test.test[pg-tpch-q11-default.txt-Analyze]": [
         {
-            "checksum": "b7dac2c41dd84112e0bebb14c5527bdd",
-            "size": 15506,
-            "uri": "https://{canondata_backend}/212715/17fecc70dc3d82af132727a3aa20d5edbdd4d7dd/resource.tar.gz#test.test_pg-tpch-q11-default.txt-Analyze_/plan.txt"
+            "checksum": "d925fa20a9243269d72fd62951392b7e",
+            "size": 14875,
+            "uri": "https://{canondata_backend}/1814674/5f3c7350d8e72ada6a702e29e5f3bfddaa73df08/resource.tar.gz#test.test_pg-tpch-q11-default.txt-Analyze_/plan.txt"
         }
     ],
     "test.test[pg-tpch-q11-default.txt-Debug]": [
         {
-            "checksum": "7af1431a9adc6e43112614de62d95f05",
-            "size": 10925,
-            "uri": "https://{canondata_backend}/1777230/8d6bc20c3c548691ed47463aed0d508dcd185ce3/resource.tar.gz#test.test_pg-tpch-q11-default.txt-Debug_/opt.yql_patched"
+            "checksum": "2bed4f0772b70e6e544dd5602659ba43",
+            "size": 12018,
+            "uri": "https://{canondata_backend}/1946324/c19334a8bb1758dfb02761e1ce101dc42cf675fa/resource.tar.gz#test.test_pg-tpch-q11-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q11-default.txt-Plan]": [
         {
-            "checksum": "b7dac2c41dd84112e0bebb14c5527bdd",
-            "size": 15506,
-            "uri": "https://{canondata_backend}/1777230/8d6bc20c3c548691ed47463aed0d508dcd185ce3/resource.tar.gz#test.test_pg-tpch-q11-default.txt-Plan_/plan.txt"
+            "checksum": "d925fa20a9243269d72fd62951392b7e",
+            "size": 14875,
+            "uri": "https://{canondata_backend}/1130705/acc206ee45aa5b7f7e78d232059c9535f249dda0/resource.tar.gz#test.test_pg-tpch-q11-default.txt-Plan_/plan.txt"
         }
     ],
     "test.test[pg-tpch-q11-default.txt-Results]": [],
@@ -2651,9 +2651,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_without_resolve_dublicates-default.txt-Debug]": [
         {
-            "checksum": "efb32b2fff70f99f1caf7b19e5f270eb",
-            "size": 3238,
-            "uri": "https://{canondata_backend}/1777230/843d9269357cd6a968324aa591212870032c7c60/resource.tar.gz#test.test_simple_columns-simple_columns_join_without_resolve_dublicates-default.txt-Debug_/opt.yql_patched"
+            "checksum": "b154c7a8b0264196ed17744bb6c163b0",
+            "size": 3250,
+            "uri": "https://{canondata_backend}/1942100/21245e81d28b28ef09d03385075d39472fbb3dba/resource.tar.gz#test.test_simple_columns-simple_columns_join_without_resolve_dublicates-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_without_resolve_dublicates-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part16/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part16/canondata/result.json
index d9c5cc84b2bb..7e59fa4cded5 100644
--- a/ydb/library/yql/tests/sql/dq_file/part16/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part16/canondata/result.json
@@ -262,9 +262,9 @@
     ],
     "test.test[aggregate-group_by_column_alias_reuse_for_join--Debug]": [
         {
-            "checksum": "32a4aea6661c24df31f4937404c495a8",
-            "size": 3477,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_aggregate-group_by_column_alias_reuse_for_join--Debug_/opt.yql_patched"
+            "checksum": "937cd1633f0aa33cda646b3fc8b19d6e",
+            "size": 3468,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_aggregate-group_by_column_alias_reuse_for_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_column_alias_reuse_for_join--Plan]": [
@@ -312,9 +312,9 @@
     ],
     "test.test[aggregate-group_by_mul_gs_expr_and_column--Debug]": [
         {
-            "checksum": "c8865311fd357cef6557d884d5dd042c",
-            "size": 4576,
-            "uri": "https://{canondata_backend}/1937492/8cdefcd6d0d86a9eaa2af7a5c2ce6fe8014c7ac2/resource.tar.gz#test.test_aggregate-group_by_mul_gs_expr_and_column--Debug_/opt.yql_patched"
+            "checksum": "83bd986a36702e60beb6441068da6ef3",
+            "size": 4628,
+            "uri": "https://{canondata_backend}/1130705/984266b47af8d517834a10674242c9e900f41724/resource.tar.gz#test.test_aggregate-group_by_mul_gs_expr_and_column--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_mul_gs_expr_and_column--Plan]": [
@@ -449,9 +449,9 @@
     ],
     "test.test[bigdate-table_common_type-default.txt-Debug]": [
         {
-            "checksum": "df9fc5d168fbe2790e7c254b745c15e1",
-            "size": 7289,
-            "uri": "https://{canondata_backend}/1600758/4f71a10f67b6e33415a0e548a197be96b9261557/resource.tar.gz#test.test_bigdate-table_common_type-default.txt-Debug_/opt.yql_patched"
+            "checksum": "75212c556e8a770363c1aac694ee0b94",
+            "size": 7353,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_bigdate-table_common_type-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[bigdate-table_common_type-default.txt-Plan]": [
@@ -904,9 +904,9 @@
     ],
     "test.test[in-yql-10038-default.txt-Debug]": [
         {
-            "checksum": "f05cc75b51ecd48b882f8947f2bccece",
-            "size": 2799,
-            "uri": "https://{canondata_backend}/1937367/518bbcf510ad7a43c5e77746bafd21ed0e3fdc6e/resource.tar.gz#test.test_in-yql-10038-default.txt-Debug_/opt.yql_patched"
+            "checksum": "592d7a72481b45d009e4638071d8bb7f",
+            "size": 2816,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_in-yql-10038-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-yql-10038-default.txt-Plan]": [
@@ -970,9 +970,9 @@
     ],
     "test.test[join-anyjoin_common_nodup-off-Debug]": [
         {
-            "checksum": "699c9bd886e7562c66751ddf03274281",
-            "size": 5824,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-anyjoin_common_nodup-off-Debug_/opt.yql_patched"
+            "checksum": "799da9a0916154620c078e5ec18cdd7e",
+            "size": 5838,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-anyjoin_common_nodup-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-anyjoin_common_nodup-off-Plan]": [
@@ -998,9 +998,9 @@
     ],
     "test.test[join-bush_in--Debug]": [
         {
-            "checksum": "aa4d5bfe406adb84f9b12f1629852647",
-            "size": 5429,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-bush_in--Debug_/opt.yql_patched"
+            "checksum": "34de07fb237b2791f92f68ab6a271ab4",
+            "size": 5446,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-bush_in--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_in--Plan]": [
@@ -1020,9 +1020,9 @@
     ],
     "test.test[join-bush_in-off-Debug]": [
         {
-            "checksum": "72bab6d740d9db3f319220ad8f83ae73",
-            "size": 4612,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-bush_in-off-Debug_/opt.yql_patched"
+            "checksum": "170924f2f2e024d8219942335901d595",
+            "size": 4605,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-bush_in-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_in-off-Plan]": [
@@ -1048,9 +1048,9 @@
     ],
     "test.test[join-equi_join_three_asterisk_eval-off-Debug]": [
         {
-            "checksum": "064b4909c6ab09b4863d82814f559de8",
-            "size": 3801,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-equi_join_three_asterisk_eval-off-Debug_/opt.yql_patched"
+            "checksum": "f2bb39b9776e4635e59ca4997a87f5fc",
+            "size": 3768,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-equi_join_three_asterisk_eval-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_three_asterisk_eval-off-Plan]": [
@@ -1076,9 +1076,9 @@
     ],
     "test.test[join-full_equal_not_null--Debug]": [
         {
-            "checksum": "9613ef5581eec7bdaccb7790a8840a14",
-            "size": 3081,
-            "uri": "https://{canondata_backend}/1889210/42721ab3d5715670a72e6833a318f3255e230d6a/resource.tar.gz#test.test_join-full_equal_not_null--Debug_/opt.yql_patched"
+            "checksum": "f0d282693ebc1a06dd7516cb7f728b56",
+            "size": 3069,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-full_equal_not_null--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_equal_not_null--Plan]": [
@@ -1098,9 +1098,9 @@
     ],
     "test.test[join-full_join--Debug]": [
         {
-            "checksum": "9f0a110eb1984fffcb4038bae936b529",
-            "size": 3033,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-full_join--Debug_/opt.yql_patched"
+            "checksum": "58197d44e4a36e502c79f03fb9b7d069",
+            "size": 3024,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-full_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_join--Plan]": [
@@ -1120,9 +1120,9 @@
     ],
     "test.test[join-join_comp_map_table--Debug]": [
         {
-            "checksum": "4ba150b4e9502d21f9db24bb4e2429de",
-            "size": 7083,
-            "uri": "https://{canondata_backend}/1937367/518bbcf510ad7a43c5e77746bafd21ed0e3fdc6e/resource.tar.gz#test.test_join-join_comp_map_table--Debug_/opt.yql_patched"
+            "checksum": "b020707095f1f456a256f3cfe1fbcf37",
+            "size": 7140,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-join_comp_map_table--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_comp_map_table--Plan]": [
@@ -1142,9 +1142,9 @@
     ],
     "test.test[join-join_comp_map_table-off-Debug]": [
         {
-            "checksum": "b51e70652153816544ccccb0910ca40f",
-            "size": 6004,
-            "uri": "https://{canondata_backend}/1937367/518bbcf510ad7a43c5e77746bafd21ed0e3fdc6e/resource.tar.gz#test.test_join-join_comp_map_table-off-Debug_/opt.yql_patched"
+            "checksum": "26ba059fabd3c377eb12931f87503611",
+            "size": 6033,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-join_comp_map_table-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_comp_map_table-off-Plan]": [
@@ -1173,9 +1173,9 @@
     ],
     "test.test[join-join_without_correlation_names-off-Debug]": [
         {
-            "checksum": "60547f017887b802d198652297d260f5",
-            "size": 2690,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-join_without_correlation_names-off-Debug_/opt.yql_patched"
+            "checksum": "f699071145643c868434bda20a69b49c",
+            "size": 2698,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-join_without_correlation_names-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_without_correlation_names-off-Plan]": [
@@ -1204,9 +1204,9 @@
     ],
     "test.test[join-lookupjoin_not_selected--Debug]": [
         {
-            "checksum": "218b7a4d88cf66fc66159f58fb0cf0d1",
-            "size": 3207,
-            "uri": "https://{canondata_backend}/1937367/518bbcf510ad7a43c5e77746bafd21ed0e3fdc6e/resource.tar.gz#test.test_join-lookupjoin_not_selected--Debug_/opt.yql_patched"
+            "checksum": "05f68a17e0ceec164a08376a0f0817a1",
+            "size": 3193,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-lookupjoin_not_selected--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_not_selected--Plan]": [
@@ -1226,9 +1226,9 @@
     ],
     "test.test[join-mapjoin_on_very_complex_type--Debug]": [
         {
-            "checksum": "0914e9248f54f2178964e849d93a5d9c",
-            "size": 3141,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-mapjoin_on_very_complex_type--Debug_/opt.yql_patched"
+            "checksum": "3358e1f9e861a307e9032e63e7ddeb01",
+            "size": 3181,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-mapjoin_on_very_complex_type--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_very_complex_type--Plan]": [
@@ -1248,9 +1248,9 @@
     ],
     "test.test[join-mergejoin_choose_primary-off-Debug]": [
         {
-            "checksum": "60184c99936c0342f39458164bffe3e6",
-            "size": 3134,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-mergejoin_choose_primary-off-Debug_/opt.yql_patched"
+            "checksum": "354f9d07438b91b4b33138c6beefabab",
+            "size": 3138,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-mergejoin_choose_primary-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_choose_primary-off-Plan]": [
@@ -1276,9 +1276,9 @@
     ],
     "test.test[join-mergejoin_force_no_sorted--Debug]": [
         {
-            "checksum": "9d6eecd2709911f5c02cd94d747a59fd",
-            "size": 2534,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-mergejoin_force_no_sorted--Debug_/opt.yql_patched"
+            "checksum": "07533fc4736c17fb7f009900d36b7dfa",
+            "size": 2518,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-mergejoin_force_no_sorted--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_force_no_sorted--Plan]": [
@@ -1298,9 +1298,9 @@
     ],
     "test.test[join-mergejoin_force_no_sorted-off-Debug]": [
         {
-            "checksum": "8d10ee7c05f6e6067cdbcf4c139bbe61",
-            "size": 2582,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-mergejoin_force_no_sorted-off-Debug_/opt.yql_patched"
+            "checksum": "c02947ef158cbf73f956346e4098c6fc",
+            "size": 2606,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-mergejoin_force_no_sorted-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_force_no_sorted-off-Plan]": [
@@ -1326,9 +1326,9 @@
     ],
     "test.test[join-mergejoin_left_null_column--Debug]": [
         {
-            "checksum": "b0945e124cd6da6beb417c45549112f5",
-            "size": 2415,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-mergejoin_left_null_column--Debug_/opt.yql_patched"
+            "checksum": "93fb7f17cf9ba824a896c26908ba8ae8",
+            "size": 2419,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-mergejoin_left_null_column--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_left_null_column--Plan]": [
@@ -1348,9 +1348,9 @@
     ],
     "test.test[join-mergejoin_left_null_column-off-Debug]": [
         {
-            "checksum": "ad14893b09a5c95419e920dc2e50fce2",
-            "size": 2500,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-mergejoin_left_null_column-off-Debug_/opt.yql_patched"
+            "checksum": "f23a28ea65cc05ed8dbf1dd6236f78b0",
+            "size": 2504,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-mergejoin_left_null_column-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_left_null_column-off-Plan]": [
@@ -1376,9 +1376,9 @@
     ],
     "test.test[join-mergejoin_with_different_key_names_nested--Debug]": [
         {
-            "checksum": "957e848c82f19687505b8877e4cacbd0",
-            "size": 4659,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nested--Debug_/opt.yql_patched"
+            "checksum": "3897f4319836ba6c9c3d49ff7a98cb96",
+            "size": 4687,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nested--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_different_key_names_nested--Plan]": [
@@ -1398,9 +1398,9 @@
     ],
     "test.test[join-mergejoin_with_different_key_names_nonsorted-off-Debug]": [
         {
-            "checksum": "4ae0ed8859cb03c003373a16a0e0f64f",
-            "size": 3293,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nonsorted-off-Debug_/opt.yql_patched"
+            "checksum": "e778f5d3ecd8c8f117cebd9cfc68d7cb",
+            "size": 3321,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nonsorted-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_different_key_names_nonsorted-off-Plan]": [
@@ -1426,9 +1426,9 @@
     ],
     "test.test[join-no_empty_join_for_dyn-off-Debug]": [
         {
-            "checksum": "f15180ee112132e406364d076db063bf",
-            "size": 2462,
-            "uri": "https://{canondata_backend}/1937367/518bbcf510ad7a43c5e77746bafd21ed0e3fdc6e/resource.tar.gz#test.test_join-no_empty_join_for_dyn-off-Debug_/opt.yql_patched"
+            "checksum": "01bbb2fd39eee5db445472f09be5814e",
+            "size": 2478,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-no_empty_join_for_dyn-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-no_empty_join_for_dyn-off-Plan]": [
@@ -1454,9 +1454,9 @@
     ],
     "test.test[join-premap_common_inner-off-Debug]": [
         {
-            "checksum": "859e6e0ae771bc95ddd6c807ebe59aa7",
-            "size": 2686,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-premap_common_inner-off-Debug_/opt.yql_patched"
+            "checksum": "ad7317d9fc6e3544b5350c06a643cf61",
+            "size": 2680,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-premap_common_inner-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_inner-off-Plan]": [
@@ -1482,9 +1482,9 @@
     ],
     "test.test[join-premap_context_dep--Debug]": [
         {
-            "checksum": "3c457781de0d03cea912b9703ae878ff",
-            "size": 3070,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-premap_context_dep--Debug_/opt.yql_patched"
+            "checksum": "3323bed6c6d427bb1c2f14e5a9b9c560",
+            "size": 3086,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-premap_context_dep--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_context_dep--Plan]": [
@@ -1504,9 +1504,9 @@
     ],
     "test.test[join-premap_context_dep-off-Debug]": [
         {
-            "checksum": "b0eb3809b7b086e2ac98c021d57fc7e2",
-            "size": 2890,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-premap_context_dep-off-Debug_/opt.yql_patched"
+            "checksum": "a67f3cfa6b6ef9bbe953a15cb71308d1",
+            "size": 2884,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-premap_context_dep-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_context_dep-off-Plan]": [
@@ -1560,9 +1560,9 @@
     ],
     "test.test[join-pullup_left_semi-off-Debug]": [
         {
-            "checksum": "daa826d0dc08ef1b791e48caa110565c",
-            "size": 2557,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-pullup_left_semi-off-Debug_/opt.yql_patched"
+            "checksum": "e9dbbddfc763d653bf74ba44b59c9a68",
+            "size": 2559,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-pullup_left_semi-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_left_semi-off-Plan]": [
@@ -1588,9 +1588,9 @@
     ],
     "test.test[join-pushdown_filter_over_left--Debug]": [
         {
-            "checksum": "24eadd14b576ae37ad220991c33761fa",
-            "size": 2669,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-pushdown_filter_over_left--Debug_/opt.yql_patched"
+            "checksum": "61f7b148062872da0fbc40f53e30e055",
+            "size": 2685,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-pushdown_filter_over_left--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pushdown_filter_over_left--Plan]": [
@@ -1610,9 +1610,9 @@
     ],
     "test.test[join-star_join_mirror--Debug]": [
         {
-            "checksum": "4a7f752cc1725dd5fa448fcee897df4a",
-            "size": 9393,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-star_join_mirror--Debug_/opt.yql_patched"
+            "checksum": "5e7b3b2c6f40dfcbf80fc6c327f7314b",
+            "size": 9459,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-star_join_mirror--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_mirror--Plan]": [
@@ -1632,9 +1632,9 @@
     ],
     "test.test[join-star_join_semionly_premap--Debug]": [
         {
-            "checksum": "461c9cf1e4cb6e63f1b0ad5cf4f5f74d",
-            "size": 5007,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-star_join_semionly_premap--Debug_/opt.yql_patched"
+            "checksum": "b302b39bbd715acbb6fee3cb8574d3ee",
+            "size": 5023,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-star_join_semionly_premap--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_semionly_premap--Plan]": [
@@ -1654,9 +1654,9 @@
     ],
     "test.test[join-star_join_semionly_premap-off-Debug]": [
         {
-            "checksum": "b1cab118579e866a2e380ce9e5a49369",
-            "size": 4459,
-            "uri": "https://{canondata_backend}/1031349/d6f6fbd690e2387ef546b9d231ad34955cbea3f2/resource.tar.gz#test.test_join-star_join_semionly_premap-off-Debug_/opt.yql_patched"
+            "checksum": "1aa408be1463b8ea0f9539a8f565d0ce",
+            "size": 4461,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-star_join_semionly_premap-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_semionly_premap-off-Plan]": [
@@ -1682,9 +1682,9 @@
     ],
     "test.test[join-yql-12022--Debug]": [
         {
-            "checksum": "9096ff3f28a0fd945b243dcbfe38b639",
-            "size": 1922,
-            "uri": "https://{canondata_backend}/1937367/518bbcf510ad7a43c5e77746bafd21ed0e3fdc6e/resource.tar.gz#test.test_join-yql-12022--Debug_/opt.yql_patched"
+            "checksum": "e51abaedd319d1a2d64d3a13c343ffcb",
+            "size": 1945,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-yql-12022--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-12022--Plan]": [
@@ -1707,9 +1707,9 @@
     ],
     "test.test[join-yql-14829_left--Debug]": [
         {
-            "checksum": "a6644cf89ba19dd24fc437070cd0ac8c",
-            "size": 4903,
-            "uri": "https://{canondata_backend}/1937367/518bbcf510ad7a43c5e77746bafd21ed0e3fdc6e/resource.tar.gz#test.test_join-yql-14829_left--Debug_/opt.yql_patched"
+            "checksum": "4528ea3e166b74e5097e2567c0722f17",
+            "size": 4886,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-yql-14829_left--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-14829_left--Plan]": [
@@ -1729,9 +1729,9 @@
     ],
     "test.test[join-yql_465--Debug]": [
         {
-            "checksum": "2c9362f8f6412c9e562fd85098add890",
-            "size": 2448,
-            "uri": "https://{canondata_backend}/1937367/518bbcf510ad7a43c5e77746bafd21ed0e3fdc6e/resource.tar.gz#test.test_join-yql_465--Debug_/opt.yql_patched"
+            "checksum": "d3c81e9e138f9dbdccc40798a54becbf",
+            "size": 2464,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_join-yql_465--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql_465--Plan]": [
@@ -2643,9 +2643,9 @@
     ],
     "test.test[tpch-q7-default.txt-Debug]": [
         {
-            "checksum": "9c36bb62ddc989500e6162b12b2b83ee",
-            "size": 13820,
-            "uri": "https://{canondata_backend}/1880306/881d1135ff5eb1be4e84ddd070874584645717ea/resource.tar.gz#test.test_tpch-q7-default.txt-Debug_/opt.yql_patched"
+            "checksum": "0b9b1561895054f3b536f360bc8a6267",
+            "size": 13861,
+            "uri": "https://{canondata_backend}/1942100/deb1f289b9c40e713d0d9f614e8c3a720d26b7b2/resource.tar.gz#test.test_tpch-q7-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q7-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part17/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part17/canondata/result.json
index 7bcfcf2f5fc9..6f68ac37d3d2 100644
--- a/ydb/library/yql/tests/sql/dq_file/part17/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part17/canondata/result.json
@@ -420,9 +420,9 @@
     ],
     "test.test[aggregate-group_by_ru_join_agg--Debug]": [
         {
-            "checksum": "91f8e15e06dad2cda22febfbdf97d98b",
-            "size": 6100,
-            "uri": "https://{canondata_backend}/1899731/d7118ad96c050279cfcfe95a4f9577de9c404054/resource.tar.gz#test.test_aggregate-group_by_ru_join_agg--Debug_/opt.yql_patched"
+            "checksum": "310156d4e22408fd37fc19e6160ad3fc",
+            "size": 6175,
+            "uri": "https://{canondata_backend}/1925842/cdbda15640e6186d6a55e022cf27805bb41951ca/resource.tar.gz#test.test_aggregate-group_by_ru_join_agg--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_join_agg--Plan]": [
@@ -718,9 +718,9 @@
     ],
     "test.test[csee-yql-7237--Debug]": [
         {
-            "checksum": "bd26ea237230317fed827e547aad0d60",
-            "size": 5269,
-            "uri": "https://{canondata_backend}/1931696/bd23f2602b9ebbb7cd7a6085fa771927b4dc81e9/resource.tar.gz#test.test_csee-yql-7237--Debug_/opt.yql_patched"
+            "checksum": "d259e9d9f542189642d65c36c51ee74e",
+            "size": 5310,
+            "uri": "https://{canondata_backend}/1925842/bf44abaff14fdc233f3e96010fd1617ed0eb9d56/resource.tar.gz#test.test_csee-yql-7237--Debug_/opt.yql_patched"
         }
     ],
     "test.test[csee-yql-7237--Plan]": [
@@ -755,23 +755,23 @@
     "test.test[dq-blacklisted_pragmas--Results]": [],
     "test.test[dq-join_cbo_native_3_tables--Analyze]": [
         {
-            "checksum": "94e6af2e865eab35e76cc9963452ad0d",
-            "size": 13889,
-            "uri": "https://{canondata_backend}/1924537/25b076e867ef14e000e544c6dba85dd8ef6e3620/resource.tar.gz#test.test_dq-join_cbo_native_3_tables--Analyze_/plan.txt"
+            "checksum": "90555f07378f801872485e6ac96dfd73",
+            "size": 12314,
+            "uri": "https://{canondata_backend}/1942278/d3f67196e7e0096e289743f5dbfd5dc2f990f9e6/resource.tar.gz#test.test_dq-join_cbo_native_3_tables--Analyze_/plan.txt"
         }
     ],
     "test.test[dq-join_cbo_native_3_tables--Debug]": [
         {
-            "checksum": "3c08870f1e21f80ad8c472110e5c3f5d",
-            "size": 5289,
-            "uri": "https://{canondata_backend}/1924537/25b076e867ef14e000e544c6dba85dd8ef6e3620/resource.tar.gz#test.test_dq-join_cbo_native_3_tables--Debug_/opt.yql_patched"
+            "checksum": "91570a2f667516ba1f3f28642698441f",
+            "size": 4802,
+            "uri": "https://{canondata_backend}/1847551/6ea0f0d238a8a57c98cf719da4e87036e3ffdde6/resource.tar.gz#test.test_dq-join_cbo_native_3_tables--Debug_/opt.yql_patched"
         }
     ],
     "test.test[dq-join_cbo_native_3_tables--Plan]": [
         {
-            "checksum": "94e6af2e865eab35e76cc9963452ad0d",
-            "size": 13889,
-            "uri": "https://{canondata_backend}/1924537/25b076e867ef14e000e544c6dba85dd8ef6e3620/resource.tar.gz#test.test_dq-join_cbo_native_3_tables--Plan_/plan.txt"
+            "checksum": "90555f07378f801872485e6ac96dfd73",
+            "size": 12314,
+            "uri": "https://{canondata_backend}/1942278/d3f67196e7e0096e289743f5dbfd5dc2f990f9e6/resource.tar.gz#test.test_dq-join_cbo_native_3_tables--Plan_/plan.txt"
         }
     ],
     "test.test[dq-join_cbo_native_3_tables--Results]": [
@@ -1126,9 +1126,9 @@
     ],
     "test.test[in-yql-14677-default.txt-Debug]": [
         {
-            "checksum": "bc1f4cba4402360f9c7573cddd273353",
-            "size": 2372,
-            "uri": "https://{canondata_backend}/1942173/e32f1de19c4f2770a6f215d1dc22bc97e318bf22/resource.tar.gz#test.test_in-yql-14677-default.txt-Debug_/opt.yql_patched"
+            "checksum": "6edc609b59930df18bb3e710c2f6179a",
+            "size": 2397,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_in-yql-14677-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-yql-14677-default.txt-Plan]": [
@@ -1175,9 +1175,9 @@
     ],
     "test.test[join-inner_with_order-off-Debug]": [
         {
-            "checksum": "ea0eee88b769a650bda535d9b936046f",
-            "size": 2724,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_join-inner_with_order-off-Debug_/opt.yql_patched"
+            "checksum": "ffa0217d4eb4605985715ce40498da73",
+            "size": 2728,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-inner_with_order-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_with_order-off-Plan]": [
@@ -1203,9 +1203,9 @@
     ],
     "test.test[join-left_join_right_pushdown_nested_left--Debug]": [
         {
-            "checksum": "a1ebc62e060ad76dde67c9f88115ee0a",
-            "size": 5435,
-            "uri": "https://{canondata_backend}/1937367/bc1ddd52a5c80a7e52dc1d8a7570c5b38a712194/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Debug_/opt.yql_patched"
+            "checksum": "92e2b9411273c077837f88528cd37d12",
+            "size": 5453,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_left--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_join_right_pushdown_nested_left--Plan]": [
@@ -1225,9 +1225,9 @@
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_only_single--Debug]": [
         {
-            "checksum": "ff1e4628cf8acc2be068594b7b1b0466",
-            "size": 2500,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_only_single--Debug_/opt.yql_patched"
+            "checksum": "484227a10750b3b73071fb246576338b",
+            "size": 2540,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_only_single--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_only_single--Plan]": [
@@ -1247,9 +1247,9 @@
     ],
     "test.test[join-mapjoin_on_tablerecord-off-Debug]": [
         {
-            "checksum": "e38509884a4ec8d00413e76d5ede8582",
-            "size": 3372,
-            "uri": "https://{canondata_backend}/1942173/e32f1de19c4f2770a6f215d1dc22bc97e318bf22/resource.tar.gz#test.test_join-mapjoin_on_tablerecord-off-Debug_/opt.yql_patched"
+            "checksum": "1258762200ee19116947205d671439a6",
+            "size": 3400,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-mapjoin_on_tablerecord-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_tablerecord-off-Plan]": [
@@ -1278,9 +1278,9 @@
     ],
     "test.test[join-mapjoin_opt_vs_2xopt-off-Debug]": [
         {
-            "checksum": "c22ad24243c61e225f39712f23617960",
-            "size": 4070,
-            "uri": "https://{canondata_backend}/1942173/e32f1de19c4f2770a6f215d1dc22bc97e318bf22/resource.tar.gz#test.test_join-mapjoin_opt_vs_2xopt-off-Debug_/opt.yql_patched"
+            "checksum": "36541f404ae5f90ba17a48b62a02fb1c",
+            "size": 4076,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-mapjoin_opt_vs_2xopt-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_opt_vs_2xopt-off-Plan]": [
@@ -1306,9 +1306,9 @@
     ],
     "test.test[join-mapjoin_partial_uniq_keys--Debug]": [
         {
-            "checksum": "d96e2ffd08f6212a6cfc8f283accf5e8",
-            "size": 3262,
-            "uri": "https://{canondata_backend}/1931696/bd23f2602b9ebbb7cd7a6085fa771927b4dc81e9/resource.tar.gz#test.test_join-mapjoin_partial_uniq_keys--Debug_/opt.yql_patched"
+            "checksum": "635849e570c12193c59c7b5c33d0b2bb",
+            "size": 3280,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-mapjoin_partial_uniq_keys--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_partial_uniq_keys--Plan]": [
@@ -1328,9 +1328,9 @@
     ],
     "test.test[join-mergejoin_big_primary_unique-off-Debug]": [
         {
-            "checksum": "10a601581a6ba808b44afc4232f0e0c0",
-            "size": 3046,
-            "uri": "https://{canondata_backend}/1942173/e32f1de19c4f2770a6f215d1dc22bc97e318bf22/resource.tar.gz#test.test_join-mergejoin_big_primary_unique-off-Debug_/opt.yql_patched"
+            "checksum": "d33d3852a1a99b7f52cfcc80872ab0a5",
+            "size": 3080,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-mergejoin_big_primary_unique-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_big_primary_unique-off-Plan]": [
@@ -1356,9 +1356,9 @@
     ],
     "test.test[join-mergejoin_choose_primary_with_retry--Debug]": [
         {
-            "checksum": "acefc147d9b3f7f202c9466bddc9d59a",
-            "size": 3555,
-            "uri": "https://{canondata_backend}/1942100/2af4e4b4fdba37b11e481ee71a1d7bf5f7f785c0/resource.tar.gz#test.test_join-mergejoin_choose_primary_with_retry--Debug_/opt.yql_patched"
+            "checksum": "84af02bd369b9fd90fb4ce832254c831",
+            "size": 3541,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-mergejoin_choose_primary_with_retry--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_choose_primary_with_retry--Plan]": [
@@ -1378,9 +1378,9 @@
     ],
     "test.test[join-mergejoin_choose_primary_with_retry-off-Debug]": [
         {
-            "checksum": "6f4a7f5464bcc1b1f23df500be8e8153",
-            "size": 3207,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_join-mergejoin_choose_primary_with_retry-off-Debug_/opt.yql_patched"
+            "checksum": "09c1370d213160b183f606b9e5b25eed",
+            "size": 3211,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-mergejoin_choose_primary_with_retry-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_choose_primary_with_retry-off-Plan]": [
@@ -1406,9 +1406,9 @@
     ],
     "test.test[join-premap_common_left_cross-off-Debug]": [
         {
-            "checksum": "0b3ffe38538e44417bd78cf60794a2ab",
-            "size": 3536,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_join-premap_common_left_cross-off-Debug_/opt.yql_patched"
+            "checksum": "8d5ab2e502a916fcdff1d912fafe007f",
+            "size": 3574,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-premap_common_left_cross-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_left_cross-off-Plan]": [
@@ -1434,9 +1434,9 @@
     ],
     "test.test[join-premap_common_right_tablecontent-off-Debug]": [
         {
-            "checksum": "67563af642ad9c27514ab898540e27a4",
-            "size": 3944,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_join-premap_common_right_tablecontent-off-Debug_/opt.yql_patched"
+            "checksum": "f8c28592d5a37b73d9c262f16f00f2a2",
+            "size": 3960,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-premap_common_right_tablecontent-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_right_tablecontent-off-Plan]": [
@@ -1462,9 +1462,9 @@
     ],
     "test.test[join-premap_merge_extrasort2--Debug]": [
         {
-            "checksum": "090c47b00069aa9ac3c15d9540c5688e",
-            "size": 4507,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_join-premap_merge_extrasort2--Debug_/opt.yql_patched"
+            "checksum": "dda76137d2fd73788d4871d3829b03ed",
+            "size": 4561,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-premap_merge_extrasort2--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_merge_extrasort2--Plan]": [
@@ -1484,9 +1484,9 @@
     ],
     "test.test[join-star_join_multi-off-Debug]": [
         {
-            "checksum": "3429a8e18c6d4a4e79fa427a71509b32",
-            "size": 9631,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_join-star_join_multi-off-Debug_/opt.yql_patched"
+            "checksum": "8a6362360222649d69732c7759341b2c",
+            "size": 9810,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-star_join_multi-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_multi-off-Plan]": [
@@ -1512,9 +1512,9 @@
     ],
     "test.test[join-two_aggrs-default.txt-Debug]": [
         {
-            "checksum": "f785bc73f2ea327ae9054d78671b786f",
-            "size": 4045,
-            "uri": "https://{canondata_backend}/1931696/bd23f2602b9ebbb7cd7a6085fa771927b4dc81e9/resource.tar.gz#test.test_join-two_aggrs-default.txt-Debug_/opt.yql_patched"
+            "checksum": "3edfc0e61aada69a4da33f6f72f3f00f",
+            "size": 4105,
+            "uri": "https://{canondata_backend}/1937429/2f571d847455277d1442fcb7f010661e820848b9/resource.tar.gz#test.test_join-two_aggrs-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-two_aggrs-default.txt-Plan]": [
@@ -1534,9 +1534,9 @@
     ],
     "test.test[join-yql-8980-off-Debug]": [
         {
-            "checksum": "fbe09c939adfbedf06f4a867a3ae43ae",
-            "size": 2739,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_join-yql-8980-off-Debug_/opt.yql_patched"
+            "checksum": "30c615cd87e425f087802ad9e408589e",
+            "size": 2740,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_join-yql-8980-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-8980-off-Plan]": [
@@ -1563,9 +1563,9 @@
     ],
     "test.test[key_filter-lambda_with_null_filter--Debug]": [
         {
-            "checksum": "453dd461b604154790e99d0083b62cb0",
-            "size": 3159,
-            "uri": "https://{canondata_backend}/1899731/d7118ad96c050279cfcfe95a4f9577de9c404054/resource.tar.gz#test.test_key_filter-lambda_with_null_filter--Debug_/opt.yql_patched"
+            "checksum": "ce8f14d458e8348695bc888fe47cf727",
+            "size": 3186,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_key_filter-lambda_with_null_filter--Debug_/opt.yql_patched"
         }
     ],
     "test.test[key_filter-lambda_with_null_filter--Plan]": [
@@ -1607,9 +1607,9 @@
     ],
     "test.test[key_filter-multiusage--Debug]": [
         {
-            "checksum": "37412919a5aa8c713e87e7d6712e8784",
-            "size": 4030,
-            "uri": "https://{canondata_backend}/1899731/d7118ad96c050279cfcfe95a4f9577de9c404054/resource.tar.gz#test.test_key_filter-multiusage--Debug_/opt.yql_patched"
+            "checksum": "0326befc1cef4b8d2edb74390c5bacc2",
+            "size": 4056,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_key_filter-multiusage--Debug_/opt.yql_patched"
         }
     ],
     "test.test[key_filter-multiusage--Plan]": [
@@ -1761,9 +1761,9 @@
     ],
     "test.test[optimizers-yql-2582_limit_for_join_input_other--Debug]": [
         {
-            "checksum": "7cf5a4ee7c363665e0fb8783fe7584c5",
-            "size": 4034,
-            "uri": "https://{canondata_backend}/1942173/e32f1de19c4f2770a6f215d1dc22bc97e318bf22/resource.tar.gz#test.test_optimizers-yql-2582_limit_for_join_input_other--Debug_/opt.yql_patched"
+            "checksum": "f4d3ab29b5b8322af86ea7b00924df19",
+            "size": 4050,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_optimizers-yql-2582_limit_for_join_input_other--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-yql-2582_limit_for_join_input_other--Plan]": [
@@ -2617,9 +2617,9 @@
     ],
     "test.test[table_range-concat_with_view--Debug]": [
         {
-            "checksum": "8c3ab9a7d76fc314c4d5be392e075ad7",
-            "size": 3947,
-            "uri": "https://{canondata_backend}/1942173/e32f1de19c4f2770a6f215d1dc22bc97e318bf22/resource.tar.gz#test.test_table_range-concat_with_view--Debug_/opt.yql_patched"
+            "checksum": "5b6927fd57b28a292fc0a17afefdf28a",
+            "size": 3982,
+            "uri": "https://{canondata_backend}/1925842/5ebb3b5676761f341f736480110bd8ab8a78d858/resource.tar.gz#test.test_table_range-concat_with_view--Debug_/opt.yql_patched"
         }
     ],
     "test.test[table_range-concat_with_view--Plan]": [
@@ -2639,9 +2639,9 @@
     ],
     "test.test[tpch-q16-default.txt-Debug]": [
         {
-            "checksum": "d0c96236759978a7a6f11eb625e351e7",
-            "size": 9524,
-            "uri": "https://{canondata_backend}/1814674/596b6881e4e692acb2f60c77f02abe1dfca443e9/resource.tar.gz#test.test_tpch-q16-default.txt-Debug_/opt.yql_patched"
+            "checksum": "363f6af6392d9069f1fbbb139dca29ce",
+            "size": 9552,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_tpch-q16-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q16-default.txt-Plan]": [
@@ -2661,9 +2661,9 @@
     ],
     "test.test[tpch-q2-default.txt-Debug]": [
         {
-            "checksum": "59439fd16a53040491ec038675588ba3",
-            "size": 14600,
-            "uri": "https://{canondata_backend}/1899731/d7118ad96c050279cfcfe95a4f9577de9c404054/resource.tar.gz#test.test_tpch-q2-default.txt-Debug_/opt.yql_patched"
+            "checksum": "b73044f58509443d56639bb82c9efd00",
+            "size": 14695,
+            "uri": "https://{canondata_backend}/1936273/7a32049e7d34640d0891b0eccadb21c671bd9ed5/resource.tar.gz#test.test_tpch-q2-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q2-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part18/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part18/canondata/result.json
index e91ad14e3524..a804fe7db9d4 100644
--- a/ydb/library/yql/tests/sql/dq_file/part18/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part18/canondata/result.json
@@ -244,6 +244,34 @@
         }
     ],
     "test.test[aggregate-aggregate_with_deep_aggregated_column--Results]": [],
+    "test.test[aggregate-disable_blocks_with_spilling--Analyze]": [
+        {
+            "checksum": "7887cfe87307d36449cd6afe65636dd1",
+            "size": 4615,
+            "uri": "https://{canondata_backend}/1775059/60aa9c77d2376aa1beb6e616fcbdc82d0b2724be/resource.tar.gz#test.test_aggregate-disable_blocks_with_spilling--Analyze_/plan.txt"
+        }
+    ],
+    "test.test[aggregate-disable_blocks_with_spilling--Debug]": [
+        {
+            "checksum": "c3bb2f21048ee6f5a0e7846fd28f481d",
+            "size": 2423,
+            "uri": "https://{canondata_backend}/1775059/60aa9c77d2376aa1beb6e616fcbdc82d0b2724be/resource.tar.gz#test.test_aggregate-disable_blocks_with_spilling--Debug_/opt.yql_patched"
+        }
+    ],
+    "test.test[aggregate-disable_blocks_with_spilling--Plan]": [
+        {
+            "checksum": "7887cfe87307d36449cd6afe65636dd1",
+            "size": 4615,
+            "uri": "https://{canondata_backend}/1775059/60aa9c77d2376aa1beb6e616fcbdc82d0b2724be/resource.tar.gz#test.test_aggregate-disable_blocks_with_spilling--Plan_/plan.txt"
+        }
+    ],
+    "test.test[aggregate-disable_blocks_with_spilling--Results]": [
+        {
+            "checksum": "42f51df2ad014764141d891357b0b6b6",
+            "size": 915,
+            "uri": "https://{canondata_backend}/1775059/60aa9c77d2376aa1beb6e616fcbdc82d0b2724be/resource.tar.gz#test.test_aggregate-disable_blocks_with_spilling--Results_/results.txt"
+        }
+    ],
     "test.test[aggregate-group_by_column_alias_reuse-default.txt-Analyze]": [
         {
             "checksum": "bf546487bcd475b8555f2a7883d1f6a0",
@@ -1130,9 +1158,9 @@
     ],
     "test.test[join-alias_where_group-off-Debug]": [
         {
-            "checksum": "10827b0c96fd7f2b7729a58aac91e9b8",
-            "size": 3132,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-alias_where_group-off-Debug_/opt.yql_patched"
+            "checksum": "e43b3c96d99480de245a912281b194b1",
+            "size": 3130,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-alias_where_group-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-alias_where_group-off-Plan]": [
@@ -1158,9 +1186,9 @@
     ],
     "test.test[join-anyjoin_merge_nodup-off-Debug]": [
         {
-            "checksum": "2c818b219158d0b80228bf84ca52ef71",
-            "size": 5967,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-anyjoin_merge_nodup-off-Debug_/opt.yql_patched"
+            "checksum": "6aa52c8515b93540b508fae71d3a876a",
+            "size": 5981,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-anyjoin_merge_nodup-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-anyjoin_merge_nodup-off-Plan]": [
@@ -1186,9 +1214,9 @@
     ],
     "test.test[join-bush_dis_in_in-off-Debug]": [
         {
-            "checksum": "d206541fb161c6d05dfdd2519a8646e0",
-            "size": 4819,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-bush_dis_in_in-off-Debug_/opt.yql_patched"
+            "checksum": "8234d7a3d4d9ff4907c1e27557235a6c",
+            "size": 4794,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-bush_dis_in_in-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_dis_in_in-off-Plan]": [
@@ -1214,9 +1242,9 @@
     ],
     "test.test[join-force_merge_join-default.txt-Debug]": [
         {
-            "checksum": "f2ebf436abf52aa16601e46e44796615",
-            "size": 2429,
-            "uri": "https://{canondata_backend}/1130705/d9515e536cf880a45dedae2a41661295b91c6258/resource.tar.gz#test.test_join-force_merge_join-default.txt-Debug_/opt.yql_patched"
+            "checksum": "f532fb67b5254840f5a7e1cb29df9354",
+            "size": 2447,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-force_merge_join-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-force_merge_join-default.txt-Plan]": [
@@ -1236,9 +1264,9 @@
     ],
     "test.test[join-join_comp_common_table-off-Debug]": [
         {
-            "checksum": "a83f072be7ac2cb80d5a952c1efd881f",
-            "size": 8282,
-            "uri": "https://{canondata_backend}/1924537/f2f4ea63ccfe63a6b12e91ca30e0044f48ed329b/resource.tar.gz#test.test_join-join_comp_common_table-off-Debug_/opt.yql_patched"
+            "checksum": "1f88ff0891f643ced7ba3ea3baf6a1fb",
+            "size": 8337,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-join_comp_common_table-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_comp_common_table-off-Plan]": [
@@ -1269,9 +1297,9 @@
     ],
     "test.test[join-lookupjoin_semi_2o--Debug]": [
         {
-            "checksum": "4daba49f6789185c5ee3704259ff9adc",
-            "size": 3495,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-lookupjoin_semi_2o--Debug_/opt.yql_patched"
+            "checksum": "c92ccbc634163a32ba253f9f4ba5be22",
+            "size": 3497,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-lookupjoin_semi_2o--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi_2o--Plan]": [
@@ -1291,9 +1319,9 @@
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_semi_many--Debug]": [
         {
-            "checksum": "a305293681993978b45347acf9c739e3",
-            "size": 3449,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_semi_many--Debug_/opt.yql_patched"
+            "checksum": "0fe0db9751133110cd78429de774434d",
+            "size": 3529,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_semi_many--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_semi_many--Plan]": [
@@ -1313,9 +1341,9 @@
     ],
     "test.test[join-mergejoin_force_one_sorted-off-Debug]": [
         {
-            "checksum": "96a5ec63fac15e85e237769cb4cc684f",
-            "size": 2882,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-mergejoin_force_one_sorted-off-Debug_/opt.yql_patched"
+            "checksum": "b067dd97b7a363d36b9d3a84b7f81a04",
+            "size": 2906,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-mergejoin_force_one_sorted-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_force_one_sorted-off-Plan]": [
@@ -1341,9 +1369,9 @@
     ],
     "test.test[join-mergejoin_semi_to_inner--Debug]": [
         {
-            "checksum": "a8a536844cb6ad96317f6a8e5d24eeed",
-            "size": 3738,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-mergejoin_semi_to_inner--Debug_/opt.yql_patched"
+            "checksum": "96672eac4ecc0cbe5755c2787ed004ec",
+            "size": 3770,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-mergejoin_semi_to_inner--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_semi_to_inner--Plan]": [
@@ -1363,9 +1391,9 @@
     ],
     "test.test[join-mergejoin_semi_to_inner-off-Debug]": [
         {
-            "checksum": "f3f42a14bd88073e08e80ad3aae3402f",
-            "size": 3351,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-mergejoin_semi_to_inner-off-Debug_/opt.yql_patched"
+            "checksum": "94545e3ccaf7a57ebaa8f2967eff8569",
+            "size": 3385,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-mergejoin_semi_to_inner-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_semi_to_inner-off-Plan]": [
@@ -1391,9 +1419,9 @@
     ],
     "test.test[join-nested_semi_join--Debug]": [
         {
-            "checksum": "54e413027bbabb5572f41206b20a28f0",
-            "size": 2524,
-            "uri": "https://{canondata_backend}/1130705/d9515e536cf880a45dedae2a41661295b91c6258/resource.tar.gz#test.test_join-nested_semi_join--Debug_/opt.yql_patched"
+            "checksum": "a2dd27feee31c4af07736277635f9a0b",
+            "size": 2554,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-nested_semi_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-nested_semi_join--Plan]": [
@@ -1413,9 +1441,9 @@
     ],
     "test.test[join-premap_common_inner_both_sides-off-Debug]": [
         {
-            "checksum": "b9519fcf7684afb43c1574834a8e8474",
-            "size": 3088,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-premap_common_inner_both_sides-off-Debug_/opt.yql_patched"
+            "checksum": "fee73354bef93f3509889f12426ff262",
+            "size": 3082,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-premap_common_inner_both_sides-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_inner_both_sides-off-Plan]": [
@@ -1463,9 +1491,9 @@
     ],
     "test.test[join-premap_merge_inner--Debug]": [
         {
-            "checksum": "7d526bd183976bcda29b419c2d6c1e96",
-            "size": 3481,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-premap_merge_inner--Debug_/opt.yql_patched"
+            "checksum": "20eaea1921a727cb8486c11788778793",
+            "size": 3467,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-premap_merge_inner--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_merge_inner--Plan]": [
@@ -1485,9 +1513,9 @@
     ],
     "test.test[join-premap_no_premap--Debug]": [
         {
-            "checksum": "58fca7b6269d8bae10b059c5704ac63d",
-            "size": 5479,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-premap_no_premap--Debug_/opt.yql_patched"
+            "checksum": "78557df43610e9a59280d7db20244b62",
+            "size": 5526,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-premap_no_premap--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_no_premap--Plan]": [
@@ -1507,9 +1535,9 @@
     ],
     "test.test[join-premap_no_premap-off-Debug]": [
         {
-            "checksum": "4e7529720facaf67e67d10d62da02672",
-            "size": 5160,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-premap_no_premap-off-Debug_/opt.yql_patched"
+            "checksum": "0e508e165cf89c4d4548df345f9b8845",
+            "size": 5206,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-premap_no_premap-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_no_premap-off-Plan]": [
@@ -1535,9 +1563,9 @@
     ],
     "test.test[join-pullup_random-off-Debug]": [
         {
-            "checksum": "9a0dabc5f2983df573933b9de70f6fc3",
-            "size": 2902,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-pullup_random-off-Debug_/opt.yql_patched"
+            "checksum": "f0dd8fd84604750138faef8c088b30ed",
+            "size": 2896,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-pullup_random-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_random-off-Plan]": [
@@ -1563,9 +1591,9 @@
     ],
     "test.test[join-right_trivial-off-Debug]": [
         {
-            "checksum": "f9782fbbf75a31705882de2d5dfcad1a",
-            "size": 2892,
-            "uri": "https://{canondata_backend}/1946324/52216c80dd82a135143a59b93de6ed80422b3740/resource.tar.gz#test.test_join-right_trivial-off-Debug_/opt.yql_patched"
+            "checksum": "7e0551b2f86ec45dd03715d6bae71598",
+            "size": 2896,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-right_trivial-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-right_trivial-off-Plan]": [
@@ -1596,9 +1624,9 @@
     ],
     "test.test[join-yql-4275--Debug]": [
         {
-            "checksum": "5540b2c750a8cd4d9dc3b79d2ed4ba3a",
-            "size": 2768,
-            "uri": "https://{canondata_backend}/1130705/d9515e536cf880a45dedae2a41661295b91c6258/resource.tar.gz#test.test_join-yql-4275--Debug_/opt.yql_patched"
+            "checksum": "393b2686f08726b1416708251858b487",
+            "size": 2788,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_join-yql-4275--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-4275--Plan]": [
@@ -1849,9 +1877,9 @@
     ],
     "test.test[optimizers-sort_constraint_in_left--Debug]": [
         {
-            "checksum": "b1709776e175b9e244b7f9552358e74a",
-            "size": 4067,
-            "uri": "https://{canondata_backend}/1777230/00c02c2221ad7773f9cfecb5ec1bd067dbaacbc5/resource.tar.gz#test.test_optimizers-sort_constraint_in_left--Debug_/opt.yql_patched"
+            "checksum": "ddafcba99ec8f9ffc2ca1656003dacd5",
+            "size": 4102,
+            "uri": "https://{canondata_backend}/1916746/2673649875bad3e7ba633862e83892bc57334832/resource.tar.gz#test.test_optimizers-sort_constraint_in_left--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-sort_constraint_in_left--Plan]": [
@@ -1871,9 +1899,9 @@
     ],
     "test.test[optimizers-yql-5978_fill_multi_usage--Debug]": [
         {
-            "checksum": "983cba47c90d9ba6a9d68941e745ab6a",
-            "size": 4719,
-            "uri": "https://{canondata_backend}/1130705/d9515e536cf880a45dedae2a41661295b91c6258/resource.tar.gz#test.test_optimizers-yql-5978_fill_multi_usage--Debug_/opt.yql_patched"
+            "checksum": "875bafb8e1ea65c9dc9d8781133bd031",
+            "size": 4743,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_optimizers-yql-5978_fill_multi_usage--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-yql-5978_fill_multi_usage--Plan]": [
@@ -2003,9 +2031,9 @@
     ],
     "test.test[pg-join_using_tables3-default.txt-Debug]": [
         {
-            "checksum": "a9fa6cddb9efcff5eb3678b08a5b5c3c",
-            "size": 4068,
-            "uri": "https://{canondata_backend}/1777230/00c02c2221ad7773f9cfecb5ec1bd067dbaacbc5/resource.tar.gz#test.test_pg-join_using_tables3-default.txt-Debug_/opt.yql_patched"
+            "checksum": "0f764ee49dadb94e06e86c3a819ad61f",
+            "size": 4164,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_pg-join_using_tables3-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-join_using_tables3-default.txt-Plan]": [
@@ -2682,9 +2710,9 @@
     ],
     "test.test[simple_columns-simple_columns_union_all_qualified_star-default.txt-Debug]": [
         {
-            "checksum": "ca216509370f6c0d5b8fb1294f2f5d3a",
-            "size": 4302,
-            "uri": "https://{canondata_backend}/1130705/d9515e536cf880a45dedae2a41661295b91c6258/resource.tar.gz#test.test_simple_columns-simple_columns_union_all_qualified_star-default.txt-Debug_/opt.yql_patched"
+            "checksum": "a51f5839f9ccdaaec168c2accdb26438",
+            "size": 4338,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_simple_columns-simple_columns_union_all_qualified_star-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_union_all_qualified_star-default.txt-Plan]": [
@@ -2748,9 +2776,9 @@
     ],
     "test.test[tpch-q15-default.txt-Debug]": [
         {
-            "checksum": "f78a67bc852f09a3557df6e20912abc4",
-            "size": 9150,
-            "uri": "https://{canondata_backend}/1777230/00c02c2221ad7773f9cfecb5ec1bd067dbaacbc5/resource.tar.gz#test.test_tpch-q15-default.txt-Debug_/opt.yql_patched"
+            "checksum": "268401f7436c17c9427a5fba9cfe67b4",
+            "size": 9158,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_tpch-q15-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q15-default.txt-Plan]": [
@@ -2770,9 +2798,9 @@
     ],
     "test.test[tpch-q19-default.txt-Debug]": [
         {
-            "checksum": "393746828b0bc1e65fe702d35ceee2c4",
-            "size": 7210,
-            "uri": "https://{canondata_backend}/1130705/d9515e536cf880a45dedae2a41661295b91c6258/resource.tar.gz#test.test_tpch-q19-default.txt-Debug_/opt.yql_patched"
+            "checksum": "3032ad5719d8b6e90ee2e441848a2df4",
+            "size": 7223,
+            "uri": "https://{canondata_backend}/1773845/57222273edb3e600187ff62653acf03a13f24744/resource.tar.gz#test.test_tpch-q19-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q19-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part19/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part19/canondata/result.json
index 61a7443bb7eb..ff877bbc31f1 100644
--- a/ydb/library/yql/tests/sql/dq_file/part19/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part19/canondata/result.json
@@ -400,9 +400,9 @@
     ],
     "test.test[aggregate-group_by_gs_join_aliases-default.txt-Debug]": [
         {
-            "checksum": "cd7ef7f32c48a9053f64265bc279aa8f",
-            "size": 5466,
-            "uri": "https://{canondata_backend}/1689644/57f5e520abfb96651cc218a0d82eb6ee0fe38907/resource.tar.gz#test.test_aggregate-group_by_gs_join_aliases-default.txt-Debug_/opt.yql_patched"
+            "checksum": "05a809d287b7cfdc8af2ef37a6f96417",
+            "size": 5541,
+            "uri": "https://{canondata_backend}/1937429/28dc671beb94ae1c8b1b265c49c4a0f32f7f68f1/resource.tar.gz#test.test_aggregate-group_by_gs_join_aliases-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_join_aliases-default.txt-Plan]": [
@@ -422,9 +422,9 @@
     ],
     "test.test[aggregate-group_by_rollup_column_reuse--Debug]": [
         {
-            "checksum": "64b83869160e04718b08ddf7a81b1c6f",
-            "size": 5666,
-            "uri": "https://{canondata_backend}/1689644/57f5e520abfb96651cc218a0d82eb6ee0fe38907/resource.tar.gz#test.test_aggregate-group_by_rollup_column_reuse--Debug_/opt.yql_patched"
+            "checksum": "46f4e870b0e81b54be5d46294a169761",
+            "size": 5720,
+            "uri": "https://{canondata_backend}/1937429/d03442e328dca2de744539eee34693d8645faba4/resource.tar.gz#test.test_aggregate-group_by_rollup_column_reuse--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_column_reuse--Plan]": [
@@ -488,9 +488,9 @@
     ],
     "test.test[aggregate-rollup_with_dict--Debug]": [
         {
-            "checksum": "6d691609766138d06960a172da915c65",
-            "size": 4416,
-            "uri": "https://{canondata_backend}/1689644/57f5e520abfb96651cc218a0d82eb6ee0fe38907/resource.tar.gz#test.test_aggregate-rollup_with_dict--Debug_/opt.yql_patched"
+            "checksum": "a81bca6bbe1adbd873aff7caffaa9ddd",
+            "size": 4451,
+            "uri": "https://{canondata_backend}/1937429/8d4678be89a5cdafec6099b5b174e1923a6b1b84/resource.tar.gz#test.test_aggregate-rollup_with_dict--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-rollup_with_dict--Plan]": [
@@ -1074,9 +1074,9 @@
     ],
     "test.test[in-in_compact_distinct--Debug]": [
         {
-            "checksum": "a1b706381745975a68f015518a7213ea",
-            "size": 3186,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_in-in_compact_distinct--Debug_/opt.yql_patched"
+            "checksum": "53b78fc87e5bee45ccc0fa651b355738",
+            "size": 3177,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_in-in_compact_distinct--Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_compact_distinct--Plan]": [
@@ -1145,9 +1145,9 @@
     ],
     "test.test[join-equi_join_by_expr--Debug]": [
         {
-            "checksum": "79f7e8c62a2c33ac56b911196cbf3368",
-            "size": 3430,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-equi_join_by_expr--Debug_/opt.yql_patched"
+            "checksum": "60c3e6294cd7321d20a67279516caa84",
+            "size": 3448,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-equi_join_by_expr--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_by_expr--Plan]": [
@@ -1189,9 +1189,9 @@
     ],
     "test.test[join-inner_all_right-off-Debug]": [
         {
-            "checksum": "1a744ec60a73cd2f58b8123ed80ad4b7",
-            "size": 2309,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-inner_all_right-off-Debug_/opt.yql_patched"
+            "checksum": "faa23c1149c8f898952330b0380e92a8",
+            "size": 2315,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-inner_all_right-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_all_right-off-Plan]": [
@@ -1217,9 +1217,9 @@
     ],
     "test.test[join-inner_on_key_only--Debug]": [
         {
-            "checksum": "b87455ce6c8d6e483a381d3536b98c9f",
-            "size": 2461,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-inner_on_key_only--Debug_/opt.yql_patched"
+            "checksum": "4a949fe4abf896a9b7f54f6babaf8b9a",
+            "size": 2487,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-inner_on_key_only--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_on_key_only--Plan]": [
@@ -1239,9 +1239,9 @@
     ],
     "test.test[join-left_cast_to_string-off-Debug]": [
         {
-            "checksum": "67f310c7b642559cc1ac23530456bb39",
-            "size": 2707,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_join-left_cast_to_string-off-Debug_/opt.yql_patched"
+            "checksum": "d602dc26660e0ca8c057e4f580bd61ab",
+            "size": 2711,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-left_cast_to_string-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_cast_to_string-off-Plan]": [
@@ -1322,9 +1322,9 @@
     ],
     "test.test[join-left_only_semi_and_other--Debug]": [
         {
-            "checksum": "85d0433c444fd603f6efb33117f3a7cf",
-            "size": 4731,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_join-left_only_semi_and_other--Debug_/opt.yql_patched"
+            "checksum": "20b207b4d48e169ea5886059aa48eeb7",
+            "size": 4758,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-left_only_semi_and_other--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_only_semi_and_other--Plan]": [
@@ -1344,9 +1344,9 @@
     ],
     "test.test[join-left_only_with_other-off-Debug]": [
         {
-            "checksum": "a8f2336f446bb318f813514e24a7ad08",
-            "size": 2776,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-left_only_with_other-off-Debug_/opt.yql_patched"
+            "checksum": "7f0e224865a1b2990c954b57213878a7",
+            "size": 2810,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-left_only_with_other-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_only_with_other-off-Plan]": [
@@ -1375,9 +1375,9 @@
     ],
     "test.test[join-lookupjoin_bug7646_csee--Debug]": [
         {
-            "checksum": "3cac37d43a9f22ca0a0de9cc52dd0e14",
-            "size": 7233,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-lookupjoin_bug7646_csee--Debug_/opt.yql_patched"
+            "checksum": "0ff4e6cfe9bd490687d81fedea75dde6",
+            "size": 7253,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-lookupjoin_bug7646_csee--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_bug7646_csee--Plan]": [
@@ -1397,9 +1397,9 @@
     ],
     "test.test[join-lookupjoin_bug8533--Debug]": [
         {
-            "checksum": "037e814d42e6756afa7e1285860ec8b1",
-            "size": 3217,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-lookupjoin_bug8533--Debug_/opt.yql_patched"
+            "checksum": "725ec261739ea859011cc6f845cae52d",
+            "size": 3203,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-lookupjoin_bug8533--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_bug8533--Plan]": [
@@ -1419,9 +1419,9 @@
     ],
     "test.test[join-lookupjoin_bug8533-off-Debug]": [
         {
-            "checksum": "36acbf904db5ed0b1e362f254749748d",
-            "size": 3275,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-lookupjoin_bug8533-off-Debug_/opt.yql_patched"
+            "checksum": "f01a75bcd614df1c77ca8fbba505a28e",
+            "size": 3270,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-lookupjoin_bug8533-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_bug8533-off-Plan]": [
@@ -1447,9 +1447,9 @@
     ],
     "test.test[join-lookupjoin_semi-off-Debug]": [
         {
-            "checksum": "77e78b51fd0fbbe74818fabaa06330b7",
-            "size": 3024,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_join-lookupjoin_semi-off-Debug_/opt.yql_patched"
+            "checksum": "1da5106d5f93b7ac6c05d26ade8e34e2",
+            "size": 3019,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-lookupjoin_semi-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi-off-Plan]": [
@@ -1497,9 +1497,9 @@
     ],
     "test.test[join-mergejoin_saves_output_sort_cross-off-Debug]": [
         {
-            "checksum": "3266ab132f54e184d8b3056d88ac3e3a",
-            "size": 4491,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_join-mergejoin_saves_output_sort_cross-off-Debug_/opt.yql_patched"
+            "checksum": "d151637ea38138651ef1c0dafd558217",
+            "size": 4477,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-mergejoin_saves_output_sort_cross-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_saves_output_sort_cross-off-Plan]": [
@@ -1525,9 +1525,9 @@
     ],
     "test.test[join-premap_common_multiparents_no_premap--Debug]": [
         {
-            "checksum": "b68ac4e6d6b7c0a34218d9de43322e14",
-            "size": 3489,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_join-premap_common_multiparents_no_premap--Debug_/opt.yql_patched"
+            "checksum": "543e56780bf451672e456520312137f5",
+            "size": 3505,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-premap_common_multiparents_no_premap--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_multiparents_no_premap--Plan]": [
@@ -1547,9 +1547,9 @@
     ],
     "test.test[join-pullup_rownumber--Debug]": [
         {
-            "checksum": "6c15db62155db275323d29ad9736db0c",
-            "size": 3767,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_join-pullup_rownumber--Debug_/opt.yql_patched"
+            "checksum": "640e57cd494b66171624639ebce0123a",
+            "size": 3783,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-pullup_rownumber--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_rownumber--Plan]": [
@@ -1569,9 +1569,9 @@
     ],
     "test.test[join-selfjoin_on_sorted_with_rename--Debug]": [
         {
-            "checksum": "a39a103c81529e23f70237f9fc7c7d95",
-            "size": 2232,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_rename--Debug_/opt.yql_patched"
+            "checksum": "57de9407db36fdad79f84f191ee75486",
+            "size": 2250,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_rename--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-selfjoin_on_sorted_with_rename--Plan]": [
@@ -1591,9 +1591,9 @@
     ],
     "test.test[join-star_join_semionly-off-Debug]": [
         {
-            "checksum": "0d63ee9a1dae0c99180c1213a2b3c23a",
-            "size": 4194,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_join-star_join_semionly-off-Debug_/opt.yql_patched"
+            "checksum": "1674356ad83450f29c79e7c3b1a213eb",
+            "size": 4196,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-star_join_semionly-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_semionly-off-Plan]": [
@@ -1619,9 +1619,9 @@
     ],
     "test.test[join-three_equalities_paren-off-Debug]": [
         {
-            "checksum": "1e626e18d5c74397321b80149ec9ee37",
-            "size": 2284,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_join-three_equalities_paren-off-Debug_/opt.yql_patched"
+            "checksum": "164403825a16f0f47e5b328772ccaa0f",
+            "size": 2378,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_join-three_equalities_paren-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-three_equalities_paren-off-Plan]": [
@@ -1815,9 +1815,9 @@
     ],
     "test.test[optimizers-unused_columns_group_one_of_multi--Debug]": [
         {
-            "checksum": "8586e1601cc4af8fb7c6f307354f025e",
-            "size": 4250,
-            "uri": "https://{canondata_backend}/1889210/2fbf7f68942208b15ab6eb23b14b78640f078541/resource.tar.gz#test.test_optimizers-unused_columns_group_one_of_multi--Debug_/opt.yql_patched"
+            "checksum": "cf9ded228af2a2d59c007f6cb9534552",
+            "size": 4285,
+            "uri": "https://{canondata_backend}/1903280/45bea04670ac04ec37c2deab5ff4a786ae244430/resource.tar.gz#test.test_optimizers-unused_columns_group_one_of_multi--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-unused_columns_group_one_of_multi--Plan]": [
@@ -2434,9 +2434,9 @@
     ],
     "test.test[pg-tpch-q15-default.txt-Debug]": [
         {
-            "checksum": "153d691b198c6e35f6cd0fdb22028566",
-            "size": 9069,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_pg-tpch-q15-default.txt-Debug_/opt.yql_patched"
+            "checksum": "9b7a3ac6e9186de73e687e667dbd23e4",
+            "size": 9066,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_pg-tpch-q15-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q15-default.txt-Plan]": [
@@ -2823,9 +2823,9 @@
     ],
     "test.test[tpch-q18-default.txt-Debug]": [
         {
-            "checksum": "75f0f81fe43f909d79d0a8420738886a",
-            "size": 9841,
-            "uri": "https://{canondata_backend}/1871182/013efa06de0b2dafa1f19c37180aa25564edef5c/resource.tar.gz#test.test_tpch-q18-default.txt-Debug_/opt.yql_patched"
+            "checksum": "cb07b68236013d6f29c7d815b3d9913a",
+            "size": 9922,
+            "uri": "https://{canondata_backend}/1931696/175b453808baee5138a78eebd922e34fb0603ae4/resource.tar.gz#test.test_tpch-q18-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q18-default.txt-Plan]": [
@@ -2845,9 +2845,9 @@
     ],
     "test.test[tpch-q21-default.txt-Debug]": [
         {
-            "checksum": "347e6063daf89dec479f4d2436e57759",
-            "size": 11772,
-            "uri": "https://{canondata_backend}/1916746/50372851d94a84250091c501f470aca37411751a/resource.tar.gz#test.test_tpch-q21-default.txt-Debug_/opt.yql_patched"
+            "checksum": "c3c1de905c07d931b88380f6097ab049",
+            "size": 11911,
+            "uri": "https://{canondata_backend}/1942415/5f0ec6d9c04156bf00348913fc51614b979e220d/resource.tar.gz#test.test_tpch-q21-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q21-default.txt-Plan]": [
@@ -3180,9 +3180,9 @@
     ],
     "test.test[window-win_func_over_group_by_compl--Debug]": [
         {
-            "checksum": "aa0b1b5fa400fefc235a52fc4ae77cb4",
-            "size": 7515,
-            "uri": "https://{canondata_backend}/1689644/57f5e520abfb96651cc218a0d82eb6ee0fe38907/resource.tar.gz#test.test_window-win_func_over_group_by_compl--Debug_/opt.yql_patched"
+            "checksum": "c539ed09917e7c678800243c531d5926",
+            "size": 7550,
+            "uri": "https://{canondata_backend}/1784117/1ee1d854fe43f6981a4bf1da95e36e8be387e233/resource.tar.gz#test.test_window-win_func_over_group_by_compl--Debug_/opt.yql_patched"
         }
     ],
     "test.test[window-win_func_over_group_by_compl--Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part2/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part2/canondata/result.json
index 0fb1b8022a07..9cc8f40422cf 100644
--- a/ydb/library/yql/tests/sql/dq_file/part2/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part2/canondata/result.json
@@ -231,9 +231,9 @@
     ],
     "test.test[aggregate-group_by_gs_flatten_expr-default.txt-Debug]": [
         {
-            "checksum": "de14e0c1e81ca5678d67ba6ea2aea701",
-            "size": 4253,
-            "uri": "https://{canondata_backend}/1936947/79f6f05a619e566dcfd3200df680cadf79a1ceda/resource.tar.gz#test.test_aggregate-group_by_gs_flatten_expr-default.txt-Debug_/opt.yql_patched"
+            "checksum": "c2833f137482cbef45f302716a027fad",
+            "size": 4305,
+            "uri": "https://{canondata_backend}/1920236/b75e9728ed12152b2d9ddc60dd94c08dfc4796e2/resource.tar.gz#test.test_aggregate-group_by_gs_flatten_expr-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_flatten_expr-default.txt-Plan]": [
@@ -253,9 +253,9 @@
     ],
     "test.test[aggregate-group_by_rollup_column_ref--Debug]": [
         {
-            "checksum": "d5b5ee1843f9d09cd8cc6180e3bf9c10",
-            "size": 5562,
-            "uri": "https://{canondata_backend}/1936947/79f6f05a619e566dcfd3200df680cadf79a1ceda/resource.tar.gz#test.test_aggregate-group_by_rollup_column_ref--Debug_/opt.yql_patched"
+            "checksum": "cb168c91086a659cb5fdff91b51d4619",
+            "size": 5616,
+            "uri": "https://{canondata_backend}/1917492/53254226c3bcc22f2f64563cade92bbf7d103511/resource.tar.gz#test.test_aggregate-group_by_rollup_column_ref--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_column_ref--Plan]": [
@@ -275,9 +275,9 @@
     ],
     "test.test[aggregate-group_by_ru_partition_by_grouping-default.txt-Debug]": [
         {
-            "checksum": "ed88dd60c2213f296962c78fc79f8176",
-            "size": 7933,
-            "uri": "https://{canondata_backend}/1937367/6af906d8e8515951055311e09244912c4095ac7f/resource.tar.gz#test.test_aggregate-group_by_ru_partition_by_grouping-default.txt-Debug_/opt.yql_patched"
+            "checksum": "11d1fc2cfa24b26e10c896218e286158",
+            "size": 7968,
+            "uri": "https://{canondata_backend}/1903280/7cce39a9f54f953ff747437b2afbf4cd7340892a/resource.tar.gz#test.test_aggregate-group_by_ru_partition_by_grouping-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_partition_by_grouping-default.txt-Plan]": [
@@ -1160,9 +1160,9 @@
     ],
     "test.test[in-in_scalar_vector_subquery-default.txt-Debug]": [
         {
-            "checksum": "5abb7d7dd413439e1ff388821d10f32c",
-            "size": 8434,
-            "uri": "https://{canondata_backend}/1936947/79f6f05a619e566dcfd3200df680cadf79a1ceda/resource.tar.gz#test.test_in-in_scalar_vector_subquery-default.txt-Debug_/opt.yql_patched"
+            "checksum": "1b89a856c272210edfb3f6a751a8d865",
+            "size": 8484,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_in-in_scalar_vector_subquery-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_scalar_vector_subquery-default.txt-Plan]": [
@@ -1273,9 +1273,9 @@
     ],
     "test.test[join-alias_where_group--Debug]": [
         {
-            "checksum": "8fb53e58ad22667eba1e6776d32cab4a",
-            "size": 3161,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-alias_where_group--Debug_/opt.yql_patched"
+            "checksum": "60ca4df81e9cf1aad8c25432dffc514d",
+            "size": 3179,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-alias_where_group--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-alias_where_group--Plan]": [
@@ -1295,9 +1295,9 @@
     ],
     "test.test[join-anyjoin_merge_nodup--Debug]": [
         {
-            "checksum": "967903a142c4daaed33f5624b323032a",
-            "size": 5311,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-anyjoin_merge_nodup--Debug_/opt.yql_patched"
+            "checksum": "aa87bb749a20b8cfd3f6ac88c844e47d",
+            "size": 5353,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-anyjoin_merge_nodup--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-anyjoin_merge_nodup--Plan]": [
@@ -1317,9 +1317,9 @@
     ],
     "test.test[join-bush_in_in_in--Debug]": [
         {
-            "checksum": "a3bed7a1087d70ebf82ecb1dd46bfd1c",
-            "size": 7030,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_join-bush_in_in_in--Debug_/opt.yql_patched"
+            "checksum": "36dc71ef25ad752fe5b60ed46c6b8841",
+            "size": 7074,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-bush_in_in_in--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_in_in_in--Plan]": [
@@ -1339,9 +1339,9 @@
     ],
     "test.test[join-bush_in_in_in-off-Debug]": [
         {
-            "checksum": "f871d4837ac38b2fb1bca83e5fed821d",
-            "size": 4462,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_join-bush_in_in_in-off-Debug_/opt.yql_patched"
+            "checksum": "86e14f21b52f993450eeedb7a302607c",
+            "size": 4512,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-bush_in_in_in-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-bush_in_in_in-off-Plan]": [
@@ -1367,9 +1367,9 @@
     ],
     "test.test[join-full_trivial--Debug]": [
         {
-            "checksum": "c04a9bb4cdba4d7f17a978dd0795fd37",
-            "size": 2976,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-full_trivial--Debug_/opt.yql_patched"
+            "checksum": "85bef4876a2aa4ab08312bbaf4b1b65a",
+            "size": 3002,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-full_trivial--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_trivial--Plan]": [
@@ -1389,9 +1389,9 @@
     ],
     "test.test[join-full_trivial-off-Debug]": [
         {
-            "checksum": "dea863e976c0c84be492df3f8572fe52",
-            "size": 3023,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-full_trivial-off-Debug_/opt.yql_patched"
+            "checksum": "797833a9812164ebc7aa4e8428e401ad",
+            "size": 3049,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-full_trivial-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_trivial-off-Plan]": [
@@ -1417,9 +1417,9 @@
     ],
     "test.test[join-group_compact_by--Debug]": [
         {
-            "checksum": "7f421b442cffbb82117da0d7bee8d856",
-            "size": 2878,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_join-group_compact_by--Debug_/opt.yql_patched"
+            "checksum": "c2b53f29886db34b97d2fa2437e65090",
+            "size": 2920,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-group_compact_by--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-group_compact_by--Plan]": [
@@ -1439,9 +1439,9 @@
     ],
     "test.test[join-inner_all--Debug]": [
         {
-            "checksum": "41bcb3882119e6b7f060219e18668d89",
-            "size": 2380,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_join-inner_all--Debug_/opt.yql_patched"
+            "checksum": "224cd29a361b2166c366814212668305",
+            "size": 2400,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-inner_all--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_all--Plan]": [
@@ -1461,9 +1461,9 @@
     ],
     "test.test[join-join_comp_common_table--Debug]": [
         {
-            "checksum": "16c3f27aa3e6ca5b38138ca47c4a976a",
-            "size": 9520,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-join_comp_common_table--Debug_/opt.yql_patched"
+            "checksum": "efa3bfeba9b9d2980e2db61c8dd7241e",
+            "size": 9583,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-join_comp_common_table--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_comp_common_table--Plan]": [
@@ -1486,9 +1486,9 @@
     ],
     "test.test[join-join_without_column-off-Debug]": [
         {
-            "checksum": "ed7ff25b3e0abb1508a71ecc584e4699",
-            "size": 2538,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-join_without_column-off-Debug_/opt.yql_patched"
+            "checksum": "464505e9468b04174e6e848bfdc27460",
+            "size": 2551,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-join_without_column-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_without_column-off-Plan]": [
@@ -1517,9 +1517,9 @@
     ],
     "test.test[join-lookupjoin_semi_subq--Debug]": [
         {
-            "checksum": "78b7830b70a9ed49936803d0ba43c3c3",
+            "checksum": "de7745c0b8bf8b474088140567e64920",
             "size": 3372,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-lookupjoin_semi_subq--Debug_/opt.yql_patched"
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-lookupjoin_semi_subq--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi_subq--Plan]": [
@@ -1539,9 +1539,9 @@
     ],
     "test.test[join-mergejoin_big_primary-off-Debug]": [
         {
-            "checksum": "87696bc93f9258e535d17669a0188f86",
-            "size": 3214,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-mergejoin_big_primary-off-Debug_/opt.yql_patched"
+            "checksum": "d478909d142793465eb9ef6ed321c475",
+            "size": 3218,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-mergejoin_big_primary-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_big_primary-off-Plan]": [
@@ -1567,9 +1567,9 @@
     ],
     "test.test[join-mergejoin_with_reverse_key_order-off-Debug]": [
         {
-            "checksum": "91d15c83686f2024d8cecee01a5f81b2",
-            "size": 3483,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-mergejoin_with_reverse_key_order-off-Debug_/opt.yql_patched"
+            "checksum": "4407c6afc9f468d7ccd1b5b7a1d97744",
+            "size": 3537,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-mergejoin_with_reverse_key_order-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_reverse_key_order-off-Plan]": [
@@ -1595,9 +1595,9 @@
     ],
     "test.test[join-nested_semi_join-off-Debug]": [
         {
-            "checksum": "7a51b29fba8edc1de02d6f041035e898",
-            "size": 2313,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_join-nested_semi_join-off-Debug_/opt.yql_patched"
+            "checksum": "d918da7f1ee2f24908a8a4fea9d78ef0",
+            "size": 2314,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-nested_semi_join-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-nested_semi_join-off-Plan]": [
@@ -1623,9 +1623,9 @@
     ],
     "test.test[join-order_of_qualified--Debug]": [
         {
-            "checksum": "7a6c3d851b381d9f4d877409c2363a93",
-            "size": 2765,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_join-order_of_qualified--Debug_/opt.yql_patched"
+            "checksum": "bc2d8e3b10571dfb5f3029644099970a",
+            "size": 2785,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-order_of_qualified--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-order_of_qualified--Plan]": [
@@ -1645,9 +1645,9 @@
     ],
     "test.test[join-premap_common_inner_both_sides--Debug]": [
         {
-            "checksum": "9f23df914193438752f61919794bd082",
-            "size": 3165,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-premap_common_inner_both_sides--Debug_/opt.yql_patched"
+            "checksum": "ab30b77921c649e7129fcb459be121a7",
+            "size": 3181,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-premap_common_inner_both_sides--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_inner_both_sides--Plan]": [
@@ -1667,9 +1667,9 @@
     ],
     "test.test[join-pullup_null_column--Debug]": [
         {
-            "checksum": "93c383c6c059b177d7e9ea1404474a3f",
-            "size": 2979,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-pullup_null_column--Debug_/opt.yql_patched"
+            "checksum": "6a61cfaea44c2b9e96095b2f654acf84",
+            "size": 2995,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-pullup_null_column--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_null_column--Plan]": [
@@ -1689,9 +1689,9 @@
     ],
     "test.test[join-pullup_null_column-off-Debug]": [
         {
-            "checksum": "2d99c7b1e2423a681715a61c5117f4ba",
-            "size": 2884,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-pullup_null_column-off-Debug_/opt.yql_patched"
+            "checksum": "291f226f7356ae51631c9cb989fac718",
+            "size": 2900,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-pullup_null_column-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_null_column-off-Plan]": [
@@ -1717,9 +1717,9 @@
     ],
     "test.test[join-star_join_inners-off-Debug]": [
         {
-            "checksum": "0f25cb73efc218de8437ccc9a0b5cf0e",
-            "size": 5869,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_join-star_join_inners-off-Debug_/opt.yql_patched"
+            "checksum": "17faf4cd694158bd0bde73b1ce420df3",
+            "size": 5930,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-star_join_inners-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join_inners-off-Plan]": [
@@ -1748,9 +1748,9 @@
     ],
     "test.test[join-yql-14829_leftonly--Debug]": [
         {
-            "checksum": "511cc8ece03093d05f76f8efdb2c6a5b",
-            "size": 4744,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_join-yql-14829_leftonly--Debug_/opt.yql_patched"
+            "checksum": "772db6869260513f1245efaad787108e",
+            "size": 4725,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-yql-14829_leftonly--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-14829_leftonly--Plan]": [
@@ -1773,9 +1773,9 @@
     ],
     "test.test[join-yql-8125--Debug]": [
         {
-            "checksum": "0eeda0605a84ddc79b4ed0758671e2fe",
-            "size": 5972,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_join-yql-8125--Debug_/opt.yql_patched"
+            "checksum": "891f23f991a4ca294580ffe1231d61ae",
+            "size": 5997,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_join-yql-8125--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-8125--Plan]": [
@@ -2031,9 +2031,9 @@
     ],
     "test.test[pg-join_using_multiple2--Debug]": [
         {
-            "checksum": "7cd9086e8a4bac8a3fd69da0be5096f3",
-            "size": 4513,
-            "uri": "https://{canondata_backend}/1871102/b9ebc9894acf53c29fc064992cce2b807f5ab091/resource.tar.gz#test.test_pg-join_using_multiple2--Debug_/opt.yql_patched"
+            "checksum": "cc6930b936bf850a890c2d59e1936c94",
+            "size": 4541,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_pg-join_using_multiple2--Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-join_using_multiple2--Plan]": [
@@ -2405,9 +2405,9 @@
     ],
     "test.test[sampling-bind_join_left-default.txt-Debug]": [
         {
-            "checksum": "0b9d22decd3859b2ec5fd16513db2ba1",
-            "size": 2554,
-            "uri": "https://{canondata_backend}/1936273/16a5945b6fd0dd622c0f5a29d4b7818e35b19526/resource.tar.gz#test.test_sampling-bind_join_left-default.txt-Debug_/opt.yql_patched"
+            "checksum": "d3fd997dc509d17cebfd1c447a0fcc84",
+            "size": 2578,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_sampling-bind_join_left-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-bind_join_left-default.txt-Plan]": [
@@ -2830,9 +2830,9 @@
     ],
     "test.test[tpch-q5-default.txt-Debug]": [
         {
-            "checksum": "81c5a7cfba61c2c36d3093f10ebc77f6",
-            "size": 13813,
-            "uri": "https://{canondata_backend}/1924537/f64da96875f0898ddb0731c0a649ba5ae74791e1/resource.tar.gz#test.test_tpch-q5-default.txt-Debug_/opt.yql_patched"
+            "checksum": "4d0bf476138238e07294595acfbe5e09",
+            "size": 13900,
+            "uri": "https://{canondata_backend}/1599023/5ebe01f73e8e346a61b42aadb75da1a518ed1660/resource.tar.gz#test.test_tpch-q5-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q5-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part3/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part3/canondata/result.json
index 029293e0669e..2e0ba4df30d6 100644
--- a/ydb/library/yql/tests/sql/dq_file/part3/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part3/canondata/result.json
@@ -266,9 +266,9 @@
     ],
     "test.test[aggregate-group_by_gs_subselect-default.txt-Debug]": [
         {
-            "checksum": "5c59c4ff97dae61eb25049435c055898",
-            "size": 4179,
-            "uri": "https://{canondata_backend}/1937027/7e92a59557f254d8b58c96118ce2e626b197c0b1/resource.tar.gz#test.test_aggregate-group_by_gs_subselect-default.txt-Debug_/opt.yql_patched"
+            "checksum": "39d2d47db756d2b49474b5c199c4c38b",
+            "size": 4229,
+            "uri": "https://{canondata_backend}/1130705/85069899508bcd3b8be2b6d75961f8852e8ff128/resource.tar.gz#test.test_aggregate-group_by_gs_subselect-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_subselect-default.txt-Plan]": [
@@ -288,9 +288,9 @@
     ],
     "test.test[aggregate-group_by_mul_gs_gs--Debug]": [
         {
-            "checksum": "ac786ff228c9aabff4056702026f8aab",
-            "size": 7013,
-            "uri": "https://{canondata_backend}/1923547/331b1de1b2a9544651bd249eccea1d8975558c09/resource.tar.gz#test.test_aggregate-group_by_mul_gs_gs--Debug_/opt.yql_patched"
+            "checksum": "b2f65819e77ed498d1bb503eeda1d0a9",
+            "size": 7078,
+            "uri": "https://{canondata_backend}/1599023/b8ad35209f29e3ae308d0f48b10aeffda01d29c8/resource.tar.gz#test.test_aggregate-group_by_mul_gs_gs--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_mul_gs_gs--Plan]": [
@@ -310,9 +310,9 @@
     ],
     "test.test[aggregate-group_by_rollup_duo_opt--Debug]": [
         {
-            "checksum": "ba75c73258dd7e79ff2c1ec574b0a1f4",
-            "size": 5169,
-            "uri": "https://{canondata_backend}/1923547/331b1de1b2a9544651bd249eccea1d8975558c09/resource.tar.gz#test.test_aggregate-group_by_rollup_duo_opt--Debug_/opt.yql_patched"
+            "checksum": "51b1c16826e339f1620bd946cf0cec42",
+            "size": 5224,
+            "uri": "https://{canondata_backend}/1599023/2257627623f9ecc02660dc51c2da964bf24e60cf/resource.tar.gz#test.test_aggregate-group_by_rollup_duo_opt--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_duo_opt--Plan]": [
@@ -810,9 +810,9 @@
     ],
     "test.test[in-in_noansi_join--Debug]": [
         {
-            "checksum": "95b4c7da90996f585c9887892c95c41e",
-            "size": 11150,
-            "uri": "https://{canondata_backend}/1942671/be7f67eafe3b77ee44554c88bdc45c83dc69e178/resource.tar.gz#test.test_in-in_noansi_join--Debug_/opt.yql_patched"
+            "checksum": "adad8e7e4255123d45bd49da4f7fc42b",
+            "size": 11223,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_in-in_noansi_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_noansi_join--Plan]": [
@@ -912,9 +912,9 @@
     ],
     "test.test[join-count_bans--Debug]": [
         {
-            "checksum": "f1e953ca8b29119777c9d9e54695a7ae",
-            "size": 5583,
-            "uri": "https://{canondata_backend}/1871102/0f5b062694101798bb8a310f92ed9974c1a845c0/resource.tar.gz#test.test_join-count_bans--Debug_/opt.yql_patched"
+            "checksum": "fc9f002c086cb1a6a82f35dc6682a872",
+            "size": 5623,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-count_bans--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-count_bans--Plan]": [
@@ -934,9 +934,9 @@
     ],
     "test.test[join-grace_join2--Debug]": [
         {
-            "checksum": "19183560892a902b147f83ed5fae6ddd",
-            "size": 2191,
-            "uri": "https://{canondata_backend}/1880306/e5370ce7a3ad1f86353c982d49d1bf532f00bc25/resource.tar.gz#test.test_join-grace_join2--Debug_/opt.yql_patched"
+            "checksum": "e1de931982f2aae86d35d82d3aef2c16",
+            "size": 2211,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-grace_join2--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-grace_join2--Plan]": [
@@ -984,9 +984,9 @@
     ],
     "test.test[join-inner_on_key_only-off-Debug]": [
         {
-            "checksum": "770fa4353488847277c78d682a49f185",
-            "size": 2328,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-inner_on_key_only-off-Debug_/opt.yql_patched"
+            "checksum": "31d93ad24f0ae986ef1110bb2c967f3f",
+            "size": 2332,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-inner_on_key_only-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_on_key_only-off-Plan]": [
@@ -1015,9 +1015,9 @@
     ],
     "test.test[join-join_and_distinct_key--Debug]": [
         {
-            "checksum": "173ad145871d9bef126aefe9a68cf167",
-            "size": 4877,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-join_and_distinct_key--Debug_/opt.yql_patched"
+            "checksum": "ce5cc94328cae7313543134d67565798",
+            "size": 4894,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-join_and_distinct_key--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_and_distinct_key--Plan]": [
@@ -1063,9 +1063,9 @@
     ],
     "test.test[join-left_join_right_pushdown_nested_right--Debug]": [
         {
-            "checksum": "4a0785ff0e12b9c3938d32ab1666f877",
-            "size": 4746,
-            "uri": "https://{canondata_backend}/1889210/5799676c8b21a8a6ab9a23a98cfcb11d1e8db6cf/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Debug_/opt.yql_patched"
+            "checksum": "21fe4badf2a61c3e4fc10d422493298b",
+            "size": 4749,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-left_join_right_pushdown_nested_right--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_join_right_pushdown_nested_right--Plan]": [
@@ -1085,9 +1085,9 @@
     ],
     "test.test[join-left_only_semi_and_other-off-Debug]": [
         {
-            "checksum": "56e61b8e93b9e17175adb45030d60c58",
-            "size": 3611,
-            "uri": "https://{canondata_backend}/1942173/7c77a27f1a6a7f952a7fad5a820ff16b2b90fda4/resource.tar.gz#test.test_join-left_only_semi_and_other-off-Debug_/opt.yql_patched"
+            "checksum": "15645f738662df63c987108e59d2f736",
+            "size": 3652,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-left_only_semi_and_other-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_only_semi_and_other-off-Plan]": [
@@ -1113,9 +1113,9 @@
     ],
     "test.test[join-left_semi_with_other-off-Debug]": [
         {
-            "checksum": "6b7cc783b48e0ebfbf327bc95df94139",
-            "size": 3256,
-            "uri": "https://{canondata_backend}/1942173/7c77a27f1a6a7f952a7fad5a820ff16b2b90fda4/resource.tar.gz#test.test_join-left_semi_with_other-off-Debug_/opt.yql_patched"
+            "checksum": "2d2842861ef4af11dd3bfebf655fe082",
+            "size": 3297,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-left_semi_with_other-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_semi_with_other-off-Plan]": [
@@ -1144,9 +1144,9 @@
     ],
     "test.test[join-lookupjoin_bug7646_csee-off-Debug]": [
         {
-            "checksum": "e4ac944af91eb3e7aad8681ba4aa7a47",
-            "size": 5985,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-lookupjoin_bug7646_csee-off-Debug_/opt.yql_patched"
+            "checksum": "a1d1f4fa6efffc15fd7b2f50fd26f2c3",
+            "size": 5996,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-lookupjoin_bug7646_csee-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_bug7646_csee-off-Plan]": [
@@ -1172,9 +1172,9 @@
     ],
     "test.test[join-lookupjoin_inner_2o--Debug]": [
         {
-            "checksum": "69612f9c0795d57d43b2ecd0083f88d9",
-            "size": 3665,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-lookupjoin_inner_2o--Debug_/opt.yql_patched"
+            "checksum": "72d1ae641f29ebcc82d92a3e10098dee",
+            "size": 3697,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-lookupjoin_inner_2o--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner_2o--Plan]": [
@@ -1194,9 +1194,9 @@
     ],
     "test.test[join-lookupjoin_inner_empty_subq-off-Debug]": [
         {
-            "checksum": "c3c9a3db2a192908264f7da5887abd2c",
-            "size": 3042,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-lookupjoin_inner_empty_subq-off-Debug_/opt.yql_patched"
+            "checksum": "f9e23b25735660aaf455adb97173707f",
+            "size": 3046,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-lookupjoin_inner_empty_subq-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner_empty_subq-off-Plan]": [
@@ -1222,9 +1222,9 @@
     ],
     "test.test[join-opt_on_opt_side-off-Debug]": [
         {
-            "checksum": "5b7007e7069f966cf0e7cb5e1196174c",
-            "size": 2694,
-            "uri": "https://{canondata_backend}/1942173/7c77a27f1a6a7f952a7fad5a820ff16b2b90fda4/resource.tar.gz#test.test_join-opt_on_opt_side-off-Debug_/opt.yql_patched"
+            "checksum": "698d3f3855f76ac388d75ca72ed85d02",
+            "size": 2710,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-opt_on_opt_side-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-opt_on_opt_side-off-Plan]": [
@@ -1250,9 +1250,9 @@
     ],
     "test.test[join-pullup_rownumber-off-Debug]": [
         {
-            "checksum": "a91e281dd0da0e1f2a96c4bd8a450fc4",
-            "size": 3643,
-            "uri": "https://{canondata_backend}/1942173/7c77a27f1a6a7f952a7fad5a820ff16b2b90fda4/resource.tar.gz#test.test_join-pullup_rownumber-off-Debug_/opt.yql_patched"
+            "checksum": "587895f236afc5a90345361adc618a5e",
+            "size": 3637,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-pullup_rownumber-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_rownumber-off-Plan]": [
@@ -1278,9 +1278,9 @@
     ],
     "test.test[join-selfjoin_on_sorted-off-Debug]": [
         {
-            "checksum": "e25a59f800d1f2cf2dc3b9bff186e1e5",
-            "size": 1864,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-selfjoin_on_sorted-off-Debug_/opt.yql_patched"
+            "checksum": "98437f181eb3f877bc4178848b0a55d2",
+            "size": 1885,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-selfjoin_on_sorted-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-selfjoin_on_sorted-off-Plan]": [
@@ -1306,9 +1306,9 @@
     ],
     "test.test[join-selfjoin_on_sorted_with_filter--Debug]": [
         {
-            "checksum": "3cd2e2b2ea13a6be76c8927c7cfd98e0",
-            "size": 2285,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_filter--Debug_/opt.yql_patched"
+            "checksum": "6ed7b9fe997dce4184b62a995f6dfe75",
+            "size": 2303,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_filter--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-selfjoin_on_sorted_with_filter--Plan]": [
@@ -1328,9 +1328,9 @@
     ],
     "test.test[join-selfjoin_on_sorted_with_filter-off-Debug]": [
         {
-            "checksum": "9b1539be1f8680cf6f35d9e3ff881d8a",
-            "size": 2040,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_filter-off-Debug_/opt.yql_patched"
+            "checksum": "09ac671eefb6f91b3ce4557e50760da8",
+            "size": 2061,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_filter-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-selfjoin_on_sorted_with_filter-off-Plan]": [
@@ -1359,9 +1359,9 @@
     ],
     "test.test[join-selfjoin_on_sorted_with_filter-replicate-Debug]": [
         {
-            "checksum": "5d13bd670d234e8cc6261784c84e9012",
-            "size": 2195,
-            "uri": "https://{canondata_backend}/1784826/3baf99fc0c22227fef7f1b91df73370c2e22f014/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_filter-replicate-Debug_/opt.yql_patched"
+            "checksum": "d74a270369046ffb5d700039b637b821",
+            "size": 2216,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_filter-replicate-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-selfjoin_on_sorted_with_filter-replicate-Plan]": [
@@ -1387,9 +1387,9 @@
     ],
     "test.test[join-three_equalities_paren--Debug]": [
         {
-            "checksum": "47f91c0f2c404fbf7cbdb8d3e3067263",
-            "size": 2364,
-            "uri": "https://{canondata_backend}/1777230/978467ecd66b7473cbb5a78812196988c2151940/resource.tar.gz#test.test_join-three_equalities_paren--Debug_/opt.yql_patched"
+            "checksum": "d1733cbeadd4a3c1aa9b60ae06a5395a",
+            "size": 2458,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_join-three_equalities_paren--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-three_equalities_paren--Plan]": [
@@ -1976,9 +1976,9 @@
     ],
     "test.test[pg-tpch-q20-default.txt-Debug]": [
         {
-            "checksum": "9d160317d8d9665413fe838cd19f6319",
-            "size": 16625,
-            "uri": "https://{canondata_backend}/1942173/7c77a27f1a6a7f952a7fad5a820ff16b2b90fda4/resource.tar.gz#test.test_pg-tpch-q20-default.txt-Debug_/opt.yql_patched"
+            "checksum": "f61f2b98d9941a35168602be262e188a",
+            "size": 16683,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_pg-tpch-q20-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q20-default.txt-Plan]": [
@@ -2473,9 +2473,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_all-default.txt-Debug]": [
         {
-            "checksum": "dfea9f64387e04911669bd5b714923b1",
-            "size": 3187,
-            "uri": "https://{canondata_backend}/1942173/7c77a27f1a6a7f952a7fad5a820ff16b2b90fda4/resource.tar.gz#test.test_simple_columns-simple_columns_join_all-default.txt-Debug_/opt.yql_patched"
+            "checksum": "81c05942feb4476e3b30655d327ef578",
+            "size": 3199,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_simple_columns-simple_columns_join_all-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_all-default.txt-Plan]": [
@@ -2499,9 +2499,9 @@
     ],
     "test.test[tpch-q10-default.txt-Debug]": [
         {
-            "checksum": "9bb3ede9b94f841d40ec8cc7e065e157",
-            "size": 12499,
-            "uri": "https://{canondata_backend}/1942173/7c77a27f1a6a7f952a7fad5a820ff16b2b90fda4/resource.tar.gz#test.test_tpch-q10-default.txt-Debug_/opt.yql_patched"
+            "checksum": "9d45b5bb90cc72a93c8a766e7e298514",
+            "size": 12547,
+            "uri": "https://{canondata_backend}/1031349/593cf731fe784ac5bdeb5744a6013cfa7df8c284/resource.tar.gz#test.test_tpch-q10-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q10-default.txt-Plan]": [
@@ -2704,9 +2704,9 @@
     ],
     "test.test[window-win_func_over_group_by--Debug]": [
         {
-            "checksum": "7b029a85f005715959accf5ec1599fdb",
-            "size": 5122,
-            "uri": "https://{canondata_backend}/1809005/bace128d842e0e2cef93390c0800c74269352290/resource.tar.gz#test.test_window-win_func_over_group_by--Debug_/opt.yql_patched"
+            "checksum": "bbb96c3242a6663b3235bb4f06748647",
+            "size": 5157,
+            "uri": "https://{canondata_backend}/1031349/110747d194be1b3ec565c8629bddeb11bdda85c5/resource.tar.gz#test.test_window-win_func_over_group_by--Debug_/opt.yql_patched"
         }
     ],
     "test.test[window-win_func_over_group_by--Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json
index 44dcc3b8a380..cb20b9ede650 100644
--- a/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json
@@ -321,9 +321,9 @@
     ],
     "test.test[aggregate-group_by_gs_with_rollup--Debug]": [
         {
-            "checksum": "5b153496b7f2d8c0a862d538785a0169",
-            "size": 6668,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_aggregate-group_by_gs_with_rollup--Debug_/opt.yql_patched"
+            "checksum": "ea486f54e35e838bed83cb661fa50c97",
+            "size": 6719,
+            "uri": "https://{canondata_backend}/1871102/61453f3b91b2a15fb0e2d2c6c61875e360070851/resource.tar.gz#test.test_aggregate-group_by_gs_with_rollup--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_with_rollup--Plan]": [
@@ -399,9 +399,9 @@
     ],
     "test.test[aggregate-group_by_rollup_aggr_expr--Debug]": [
         {
-            "checksum": "66366d52a0c559024f7ca2bf1b1924f0",
-            "size": 7262,
-            "uri": "https://{canondata_backend}/1871102/a3f4b73c2abee8d4bf99b0344946712ef43a9193/resource.tar.gz#test.test_aggregate-group_by_rollup_aggr_expr--Debug_/opt.yql_patched"
+            "checksum": "1a3dd2ce4733e65654f8996550c61af9",
+            "size": 7318,
+            "uri": "https://{canondata_backend}/1937027/4608fb8cff903881d29660feb5fbd40491ccea1b/resource.tar.gz#test.test_aggregate-group_by_rollup_aggr_expr--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_aggr_expr--Plan]": [
@@ -957,9 +957,9 @@
     ],
     "test.test[hor_join-row_num_per_sect--Debug]": [
         {
-            "checksum": "b367ac3fff86347fc9ffb211b28b1f0d",
-            "size": 4825,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_hor_join-row_num_per_sect--Debug_/opt.yql_patched"
+            "checksum": "517a9260501892b3957939314b1088fb",
+            "size": 4848,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_hor_join-row_num_per_sect--Debug_/opt.yql_patched"
         }
     ],
     "test.test[hor_join-row_num_per_sect--Plan]": [
@@ -1109,9 +1109,9 @@
     ],
     "test.test[join-filter_joined-off-Debug]": [
         {
-            "checksum": "b636302af94e65bc35b74dc61a2c38aa",
-            "size": 2431,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-filter_joined-off-Debug_/opt.yql_patched"
+            "checksum": "a3c091b9b1339c205b0834bac78d7416",
+            "size": 2453,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-filter_joined-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-filter_joined-off-Plan]": [
@@ -1137,9 +1137,9 @@
     ],
     "test.test[join-from_in_front_join-off-Debug]": [
         {
-            "checksum": "770fa4353488847277c78d682a49f185",
-            "size": 2328,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-from_in_front_join-off-Debug_/opt.yql_patched"
+            "checksum": "31d93ad24f0ae986ef1110bb2c967f3f",
+            "size": 2332,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-from_in_front_join-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-from_in_front_join-off-Plan]": [
@@ -1165,9 +1165,9 @@
     ],
     "test.test[join-grace_join1-off-Debug]": [
         {
-            "checksum": "66d957319d50b0ff3921b1018b5c6401",
-            "size": 2819,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-grace_join1-off-Debug_/opt.yql_patched"
+            "checksum": "6324c64df01d3ea0f800ceb46a80ff1a",
+            "size": 2826,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-grace_join1-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-grace_join1-off-Plan]": [
@@ -1221,9 +1221,9 @@
     ],
     "test.test[join-inner_trivial--Debug]": [
         {
-            "checksum": "b87455ce6c8d6e483a381d3536b98c9f",
-            "size": 2461,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-inner_trivial--Debug_/opt.yql_patched"
+            "checksum": "4a949fe4abf896a9b7f54f6babaf8b9a",
+            "size": 2487,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-inner_trivial--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_trivial--Plan]": [
@@ -1243,9 +1243,9 @@
     ],
     "test.test[join-inner_trivial-off-Debug]": [
         {
-            "checksum": "770fa4353488847277c78d682a49f185",
-            "size": 2328,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-inner_trivial-off-Debug_/opt.yql_patched"
+            "checksum": "31d93ad24f0ae986ef1110bb2c967f3f",
+            "size": 2332,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-inner_trivial-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_trivial-off-Plan]": [
@@ -1274,9 +1274,9 @@
     ],
     "test.test[join-join_without_correlation_names--Debug]": [
         {
-            "checksum": "3e9d9382ccb9276888cc0929fef316ca",
-            "size": 2851,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-join_without_correlation_names--Debug_/opt.yql_patched"
+            "checksum": "71ffe2f41bfa311152a89a61b7deabb1",
+            "size": 2847,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-join_without_correlation_names--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_without_correlation_names--Plan]": [
@@ -1300,9 +1300,9 @@
     ],
     "test.test[join-left_join_right_pushdown_no_opt--Debug]": [
         {
-            "checksum": "0ac1c189e323ef65a6ddcb45f5a9feb2",
-            "size": 3675,
-            "uri": "https://{canondata_backend}/995452/bdcc1c962e2cb216859f83be46f0797cbc65b816/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Debug_/opt.yql_patched"
+            "checksum": "af057e1df65749cf7dfdbe30ae605713",
+            "size": 3673,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_join_right_pushdown_no_opt--Plan]": [
@@ -1325,9 +1325,9 @@
     ],
     "test.test[join-lookupjoin_with_cache-off-Debug]": [
         {
-            "checksum": "6d162e5ad4b3b3bad064ac2b86afc683",
-            "size": 4613,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-lookupjoin_with_cache-off-Debug_/opt.yql_patched"
+            "checksum": "afadd5daad41e51bcf433f1b22288c86",
+            "size": 4629,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-lookupjoin_with_cache-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_with_cache-off-Plan]": [
@@ -1353,9 +1353,9 @@
     ],
     "test.test[join-mapjoin_dup_key--Debug]": [
         {
-            "checksum": "8631939c5b8156b444c7a70d71241190",
-            "size": 2508,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-mapjoin_dup_key--Debug_/opt.yql_patched"
+            "checksum": "6ddc5db7c381f78626e099b6ca61664e",
+            "size": 2517,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-mapjoin_dup_key--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_dup_key--Plan]": [
@@ -1375,9 +1375,9 @@
     ],
     "test.test[join-mapjoin_dup_key-off-Debug]": [
         {
-            "checksum": "ef6abb2f6bbac8382d254c22467dc3de",
-            "size": 2348,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-mapjoin_dup_key-off-Debug_/opt.yql_patched"
+            "checksum": "f34024793376d030f9cc74fd21a4a310",
+            "size": 2356,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-mapjoin_dup_key-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_dup_key-off-Plan]": [
@@ -1403,9 +1403,9 @@
     ],
     "test.test[join-mergejoin_any_no_join_reduce-off-Debug]": [
         {
-            "checksum": "c9d03c5da827b78e284ef8d938340341",
-            "size": 2168,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-mergejoin_any_no_join_reduce-off-Debug_/opt.yql_patched"
+            "checksum": "b553d69243c5bbfd080b0db42943300e",
+            "size": 2207,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-mergejoin_any_no_join_reduce-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_any_no_join_reduce-off-Plan]": [
@@ -1431,9 +1431,9 @@
     ],
     "test.test[join-mergejoin_narrows_output_sort--Debug]": [
         {
-            "checksum": "b018118dccada1234ad5848a6ff57b4b",
-            "size": 5737,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_narrows_output_sort--Debug_/opt.yql_patched"
+            "checksum": "79d825a437e38430e276ca505db5b142",
+            "size": 5755,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-mergejoin_narrows_output_sort--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_narrows_output_sort--Plan]": [
@@ -1453,9 +1453,9 @@
     ],
     "test.test[join-mergejoin_saves_output_sort-off-Debug]": [
         {
-            "checksum": "a9868bec6bc72bf97ae346f13828c1ea",
-            "size": 9565,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_saves_output_sort-off-Debug_/opt.yql_patched"
+            "checksum": "c0fc0bb700bf885eb957b25d9f47fde3",
+            "size": 9608,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-mergejoin_saves_output_sort-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_saves_output_sort-off-Plan]": [
@@ -1503,9 +1503,9 @@
     ],
     "test.test[join-mergejoin_with_different_key_names_nested-off-Debug]": [
         {
-            "checksum": "2890c347bf75428a6486a6f073ee3d5a",
-            "size": 4286,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nested-off-Debug_/opt.yql_patched"
+            "checksum": "cb3ef9d528dc02f97bd1a5ecc6c7f963",
+            "size": 4328,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nested-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_different_key_names_nested-off-Plan]": [
@@ -1531,9 +1531,9 @@
     ],
     "test.test[join-mergejoin_with_different_key_names_norename--Debug]": [
         {
-            "checksum": "003e95a491f990454ec6731b3eabd613",
-            "size": 5626,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename--Debug_/opt.yql_patched"
+            "checksum": "845608a60b11642348d10afb29ad239d",
+            "size": 5677,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_different_key_names_norename--Plan]": [
@@ -1553,9 +1553,9 @@
     ],
     "test.test[join-mergejoin_with_different_key_names_norename-off-Debug]": [
         {
-            "checksum": "907fc0669df961d84cdd6e8bdf64b9e0",
-            "size": 5170,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename-off-Debug_/opt.yql_patched"
+            "checksum": "b6cf27835a99747d0dc58a6709bc51ff",
+            "size": 5196,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_different_key_names_norename-off-Plan]": [
@@ -1581,9 +1581,9 @@
     ],
     "test.test[join-pullup_exclusion-off-Debug]": [
         {
-            "checksum": "1c886943c403a2f5b22932631e0fa1c5",
-            "size": 3596,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-pullup_exclusion-off-Debug_/opt.yql_patched"
+            "checksum": "488a6fc3e46a60cc43857b565435a3ca",
+            "size": 3612,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-pullup_exclusion-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_exclusion-off-Plan]": [
@@ -1609,9 +1609,9 @@
     ],
     "test.test[join-pullup_inner--Debug]": [
         {
-            "checksum": "4afc5c76383b9f74dc521484a374740e",
-            "size": 2827,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-pullup_inner--Debug_/opt.yql_patched"
+            "checksum": "31d4241fade596626abd779b05ad41fa",
+            "size": 2843,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-pullup_inner--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_inner--Plan]": [
@@ -1631,9 +1631,9 @@
     ],
     "test.test[join-three_equalities--Debug]": [
         {
-            "checksum": "e6135c9e2f53dd0658139f6739172210",
-            "size": 3699,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-three_equalities--Debug_/opt.yql_patched"
+            "checksum": "7657afc49968b39931f6c4612233c960",
+            "size": 3747,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_join-three_equalities--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-three_equalities--Plan]": [
@@ -1820,9 +1820,9 @@
     ],
     "test.test[optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Debug]": [
         {
-            "checksum": "7519c46adfdbd946c069599cc67864df",
-            "size": 14802,
-            "uri": "https://{canondata_backend}/1889210/12a5d5a4658cc8076f89deb914f7f1f0f6ad647f/resource.tar.gz#test.test_optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Debug_/opt.yql_patched"
+            "checksum": "a0ef0943fe79bc1c0de40935257d84c4",
+            "size": 14771,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Plan]": [
@@ -1871,9 +1871,9 @@
     ],
     "test.test[optimizers-yql-8953_logical_fuse_with_table_props--Debug]": [
         {
-            "checksum": "df81654bc258b3a04795f7928a2f02b7",
-            "size": 3896,
-            "uri": "https://{canondata_backend}/1889210/97759537b96117d0b783b60421791e318b61fc40/resource.tar.gz#test.test_optimizers-yql-8953_logical_fuse_with_table_props--Debug_/opt.yql_patched"
+            "checksum": "1887847b798f6ee89f31bedc55d03c90",
+            "size": 3931,
+            "uri": "https://{canondata_backend}/1925842/834d93a5fe5fd54aa84f6328cbfc56994ae169c9/resource.tar.gz#test.test_optimizers-yql-8953_logical_fuse_with_table_props--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-yql-8953_logical_fuse_with_table_props--Plan]": [
@@ -2435,9 +2435,9 @@
     ],
     "test.test[pg-tpch-q09-default.txt-Debug]": [
         {
-            "checksum": "be9680a4f9cbc57e2580bc01b9591625",
-            "size": 15679,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_pg-tpch-q09-default.txt-Debug_/opt.yql_patched"
+            "checksum": "2cf1f345c46819f8a52b8f5048db9270",
+            "size": 15710,
+            "uri": "https://{canondata_backend}/1931696/ad557a9af2f482ab6e8f91faf53872856e3eaac1/resource.tar.gz#test.test_pg-tpch-q09-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q09-default.txt-Plan]": [
@@ -2790,9 +2790,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Debug]": [
         {
-            "checksum": "0418967b3e6f0e10939331651c0cd8e5",
-            "size": 3144,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Debug_/opt.yql_patched"
+            "checksum": "7cc2bea8f55822486ea03820d0c4bd6e",
+            "size": 3156,
+            "uri": "https://{canondata_backend}/1031349/f562047a0458cc3f13d0bd9bc809240f0048d755/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Plan]": [
@@ -2811,21 +2811,21 @@
         {
             "checksum": "e77b4f2fcc974f91b5ac44b39809c374",
             "size": 4356,
-            "uri": "https://{canondata_backend}/1781765/42df89988fcd33edfdab26a81def80f0820c3235/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Analyze_/plan.txt"
+            "uri": "https://{canondata_backend}/1942525/493b103fe236994f6bd102fa072d08bd1a2e5f4a/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Analyze_/plan.txt"
         }
     ],
     "test.test[stream_lookup_join-lookup_join_narrow-default.txt-Debug]": [
         {
-            "checksum": "468f6dcfbca8ea11f9e5d0ad9272cd8d",
-            "size": 2721,
-            "uri": "https://{canondata_backend}/1781765/42df89988fcd33edfdab26a81def80f0820c3235/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Debug_/opt.yql_patched"
+            "checksum": "924305e7d47b0c92d4907bbbea2782d6",
+            "size": 2725,
+            "uri": "https://{canondata_backend}/1942525/493b103fe236994f6bd102fa072d08bd1a2e5f4a/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[stream_lookup_join-lookup_join_narrow-default.txt-Plan]": [
         {
             "checksum": "e77b4f2fcc974f91b5ac44b39809c374",
             "size": 4356,
-            "uri": "https://{canondata_backend}/1781765/42df89988fcd33edfdab26a81def80f0820c3235/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Plan_/plan.txt"
+            "uri": "https://{canondata_backend}/1942525/493b103fe236994f6bd102fa072d08bd1a2e5f4a/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Plan_/plan.txt"
         }
     ],
     "test.test[stream_lookup_join-lookup_join_narrow-default.txt-Results]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json.orig b/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json.orig
deleted file mode 100644
index eb19b553d991..000000000000
--- a/ydb/library/yql/tests/sql/dq_file/part4/canondata/result.json.orig
+++ /dev/null
@@ -1,3024 +0,0 @@
-{
-    "test.test[action-evaluate_match_type-default.txt-Analyze]": [
-        {
-            "checksum": "ea20e16a8962e678b82cfadc58641d58",
-            "size": 3701,
-            "uri": "https://{canondata_backend}/1871002/99771a64b313e4ed0d87c6e59cde6bafe069ce35/resource.tar.gz#test.test_action-evaluate_match_type-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[action-evaluate_match_type-default.txt-Debug]": [
-        {
-            "checksum": "fd92283b38c71935ece09a66234c85f4",
-            "size": 1340,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_action-evaluate_match_type-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[action-evaluate_match_type-default.txt-Plan]": [
-        {
-            "checksum": "ea20e16a8962e678b82cfadc58641d58",
-            "size": 3701,
-            "uri": "https://{canondata_backend}/1817427/dd0485c09a30d742e18a0ec21502ddd405eb8be8/resource.tar.gz#test.test_action-evaluate_match_type-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[action-evaluate_match_type-default.txt-Results]": [],
-    "test.test[action-inline_action-default.txt-Analyze]": [
-        {
-            "checksum": "a48ccc9922567dfee1170d2c2df45b6e",
-            "size": 2153,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_action-inline_action-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[action-inline_action-default.txt-Debug]": [
-        {
-            "checksum": "f5e4bdb2eb3c1c17d62214435a00ab6f",
-            "size": 617,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_action-inline_action-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[action-inline_action-default.txt-Plan]": [
-        {
-            "checksum": "a48ccc9922567dfee1170d2c2df45b6e",
-            "size": 2153,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_action-inline_action-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[action-inline_action-default.txt-Results]": [],
-    "test.test[action-large_evaluate_for_fail--Debug]": [],
-    "test.test[action-large_evaluate_for_fail--Plan]": [],
-    "test.test[action-large_evaluate_for_fail--Results]": [
-        {
-            "uri": "file://test.test_action-large_evaluate_for_fail--Results_/extracted"
-        }
-    ],
-    "test.test[action-pass_action_as_param-default.txt-Analyze]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_action-pass_action_as_param-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[action-pass_action_as_param-default.txt-Debug]": [
-        {
-            "checksum": "85f646068b7bcca9ec88515aca3a1089",
-            "size": 361,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_action-pass_action_as_param-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[action-pass_action_as_param-default.txt-Plan]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_action-pass_action_as_param-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[action-pass_action_as_param-default.txt-Results]": [],
-    "test.test[action-runtime_apply_quoted_code-default.txt-Analyze]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_action-runtime_apply_quoted_code-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[action-runtime_apply_quoted_code-default.txt-Debug]": [
-        {
-            "checksum": "3a9bd2218c2b13548f56ed3256afbc68",
-            "size": 479,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_action-runtime_apply_quoted_code-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[action-runtime_apply_quoted_code-default.txt-Plan]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_action-runtime_apply_quoted_code-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[action-runtime_apply_quoted_code-default.txt-Results]": [],
-    "test.test[action-subquery_merge_nested_world-default.txt-Analyze]": [
-        {
-            "checksum": "3dbb5da9da6aa6644bd298b1538eb071",
-            "size": 3630,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_action-subquery_merge_nested_world-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[action-subquery_merge_nested_world-default.txt-Debug]": [
-        {
-            "checksum": "2f7c089774576d1a2a64c7ebef19d916",
-            "size": 1326,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_action-subquery_merge_nested_world-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[action-subquery_merge_nested_world-default.txt-Plan]": [
-        {
-            "checksum": "3dbb5da9da6aa6644bd298b1538eb071",
-            "size": 3630,
-            "uri": "https://{canondata_backend}/1937367/1aaf5198b7497ff892746fdaf479cd906eda5ef0/resource.tar.gz#test.test_action-subquery_merge_nested_world-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[action-subquery_merge_nested_world-default.txt-Results]": [],
-    "test.test[agg_phases_agg_apply-count_all_opt-default.txt-Analyze]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1937150/89c1317ed6832f17c721211f8be3858ffaac0d95/resource.tar.gz#test.test_agg_phases_agg_apply-count_all_opt-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[agg_phases_agg_apply-count_all_opt-default.txt-Debug]": [
-        {
-            "checksum": "841492e2fdb16320f27504e2d5f2a8c0",
-            "size": 1857,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_agg_phases_agg_apply-count_all_opt-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[agg_phases_agg_apply-count_all_opt-default.txt-Plan]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1937150/89c1317ed6832f17c721211f8be3858ffaac0d95/resource.tar.gz#test.test_agg_phases_agg_apply-count_all_opt-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[agg_phases_agg_apply-count_all_opt-default.txt-Results]": [],
-    "test.test[agg_phases_agg_apply-count_opt-default.txt-Analyze]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1937150/89c1317ed6832f17c721211f8be3858ffaac0d95/resource.tar.gz#test.test_agg_phases_agg_apply-count_opt-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[agg_phases_agg_apply-count_opt-default.txt-Debug]": [
-        {
-            "checksum": "8d76ee609c88f6e16823710f96c15c85",
-            "size": 1915,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_agg_phases_agg_apply-count_opt-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[agg_phases_agg_apply-count_opt-default.txt-Plan]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1937150/89c1317ed6832f17c721211f8be3858ffaac0d95/resource.tar.gz#test.test_agg_phases_agg_apply-count_opt-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[agg_phases_agg_apply-count_opt-default.txt-Results]": [],
-    "test.test[aggr_factory-count_if-default.txt-Analyze]": [
-        {
-            "checksum": "d7f4e9c46e25832887d36a691ce89ce7",
-            "size": 11735,
-            "uri": "https://{canondata_backend}/1784117/97775d5b789ed85be01925403def25d7bba5db1f/resource.tar.gz#test.test_aggr_factory-count_if-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_aggr_factory-count_if-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[aggr_factory-count_if-default.txt-Debug]": [
-        {
-            "checksum": "dc0067a14081c11a9ebf64cab3065f7b",
-            "size": 5720,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_aggr_factory-count_if-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggr_factory-count_if-default.txt-Plan]": [
-        {
-            "checksum": "9268fd05c79d07fdf6882e64123d5425",
-            "size": 11449,
-            "uri": "https://{canondata_backend}/1937027/17767c14f451959962681cf3d7fdbcfc98a6f63b/resource.tar.gz#test.test_aggr_factory-count_if-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggr_factory-count_if-default.txt-Results]": [],
-    "test.test[aggr_factory-top_by-default.txt-Analyze]": [
-        {
-            "checksum": "4d991de0af1a26c76d0d6944462bf9a8",
-            "size": 8885,
-            "uri": "https://{canondata_backend}/1937027/fb2f5e7f8384ed26549a5b12ab64879613b094df/resource.tar.gz#test.test_aggr_factory-top_by-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_aggr_factory-top_by-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[aggr_factory-top_by-default.txt-Debug]": [
-        {
-            "checksum": "ed21797d070e77abc7f4f3ace4ca8029",
-            "size": 5913,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_aggr_factory-top_by-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggr_factory-top_by-default.txt-Plan]": [
-        {
-            "checksum": "31f093af236d307d7dd905c4730f58e0",
-            "size": 9015,
-            "uri": "https://{canondata_backend}/1937027/17767c14f451959962681cf3d7fdbcfc98a6f63b/resource.tar.gz#test.test_aggr_factory-top_by-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggr_factory-top_by-default.txt-Results]": [],
-    "test.test[aggr_factory-udaf_in_udaf-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_aggr_factory-udaf_in_udaf-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggr_factory-udaf_in_udaf-default.txt-Debug]": [
-        {
-            "checksum": "a919459b014abe67d08c7d26a6c4be0b",
-            "size": 3643,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_aggr_factory-udaf_in_udaf-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggr_factory-udaf_in_udaf-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_aggr_factory-udaf_in_udaf-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggr_factory-udaf_in_udaf-default.txt-Results]": [],
-    "test.test[aggregate-aggregate_distinct_expr-default.txt-Analyze]": [
-        {
-            "checksum": "a34d889240ac768416a0131f97e0930c",
-            "size": 5453,
-            "uri": "https://{canondata_backend}/1937027/ec284f0d49e0f6e26fe5e8922028ffb903db3bc7/resource.tar.gz#test.test_aggregate-aggregate_distinct_expr-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_aggregate-aggregate_distinct_expr-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[aggregate-aggregate_distinct_expr-default.txt-Debug]": [
-        {
-            "checksum": "0956b94830f652c5141b82faa4a51d91",
-            "size": 6574,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_aggregate-aggregate_distinct_expr-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-aggregate_distinct_expr-default.txt-Plan]": [
-        {
-            "checksum": "a34d889240ac768416a0131f97e0930c",
-            "size": 5453,
-            "uri": "https://{canondata_backend}/1937027/17767c14f451959962681cf3d7fdbcfc98a6f63b/resource.tar.gz#test.test_aggregate-aggregate_distinct_expr-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-aggregate_distinct_expr-default.txt-Results]": [
-        {
-            "uri": "file://test.test_aggregate-aggregate_distinct_expr-default.txt-Results_/extracted"
-        }
-    ],
-    "test.test[aggregate-compare_tuple--Analyze]": [
-        {
-            "checksum": "32aa14e811b508405413d414f981a746",
-            "size": 5164,
-            "uri": "https://{canondata_backend}/1937001/263d267ee75572162f813e618cad51ab3a452ca0/resource.tar.gz#test.test_aggregate-compare_tuple--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-compare_tuple--Debug]": [
-        {
-            "checksum": "d5f00de045e3ba4f77f0f04142da2d3f",
-            "size": 3202,
-            "uri": "https://{canondata_backend}/1942415/6669484e62bb116018d49d82b2e465bc96b01a14/resource.tar.gz#test.test_aggregate-compare_tuple--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-compare_tuple--Plan]": [
-        {
-            "checksum": "32aa14e811b508405413d414f981a746",
-            "size": 5164,
-            "uri": "https://{canondata_backend}/1937001/263d267ee75572162f813e618cad51ab3a452ca0/resource.tar.gz#test.test_aggregate-compare_tuple--Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-compare_tuple--Results]": [],
-    "test.test[aggregate-group_by_expr_columns_reuse-default.txt-Analyze]": [
-        {
-            "checksum": "7b4ebdd0189470d85d8e9cfbc470ab12",
-            "size": 5105,
-            "uri": "https://{canondata_backend}/1925842/bac0b87c8df73e5d30ab0b57349de6b672768da8/resource.tar.gz#test.test_aggregate-group_by_expr_columns_reuse-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_aggregate-group_by_expr_columns_reuse-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[aggregate-group_by_expr_columns_reuse-default.txt-Debug]": [
-        {
-            "checksum": "19648711beea602ea8f4591445deeacf",
-            "size": 2477,
-            "uri": "https://{canondata_backend}/1925842/bac0b87c8df73e5d30ab0b57349de6b672768da8/resource.tar.gz#test.test_aggregate-group_by_expr_columns_reuse-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-group_by_expr_columns_reuse-default.txt-Plan]": [
-        {
-            "checksum": "7b4ebdd0189470d85d8e9cfbc470ab12",
-            "size": 5105,
-            "uri": "https://{canondata_backend}/1925842/bac0b87c8df73e5d30ab0b57349de6b672768da8/resource.tar.gz#test.test_aggregate-group_by_expr_columns_reuse-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_expr_columns_reuse-default.txt-Results]": [
-        {
-            "uri": "file://test.test_aggregate-group_by_expr_columns_reuse-default.txt-Results_/extracted"
-        }
-    ],
-    "test.test[aggregate-group_by_gs_with_rollup--Analyze]": [
-        {
-            "checksum": "77b61ac14f52041fd4f38e5fff15488f",
-            "size": 9750,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_aggregate-group_by_gs_with_rollup--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_gs_with_rollup--Debug]": [
-        {
-            "checksum": "5b153496b7f2d8c0a862d538785a0169",
-            "size": 6668,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_aggregate-group_by_gs_with_rollup--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-group_by_gs_with_rollup--Plan]": [
-        {
-            "checksum": "77b61ac14f52041fd4f38e5fff15488f",
-            "size": 9750,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_aggregate-group_by_gs_with_rollup--Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_gs_with_rollup--Results]": [],
-    "test.test[aggregate-group_by_hop--Analyze]": [
-        {
-            "checksum": "6b8d8b350cd52624d53da985941ef297",
-            "size": 4263,
-            "uri": "https://{canondata_backend}/1899731/061987f55a4633fbb100deb15792166741b6bddd/resource.tar.gz#test.test_aggregate-group_by_hop--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_hop--Debug]": [
-        {
-            "checksum": "0e20441ed8fea7967fde8e8d9e50e77a",
-            "size": 2993,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_aggregate-group_by_hop--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-group_by_hop--Plan]": [
-        {
-            "checksum": "6b8d8b350cd52624d53da985941ef297",
-            "size": 4263,
-            "uri": "https://{canondata_backend}/1899731/061987f55a4633fbb100deb15792166741b6bddd/resource.tar.gz#test.test_aggregate-group_by_hop--Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_hop--Results]": [
-        {
-            "checksum": "948d4a78bf9db977b10c8af8efef24b1",
-            "size": 3630,
-            "uri": "https://{canondata_backend}/1899731/d439cec3e297e3dd031f751fd90f3935129a1094/resource.tar.gz#test.test_aggregate-group_by_hop--Results_/results.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_hop_star--Analyze]": [
-        {
-            "checksum": "90d99f624f4f40b3b3307103fe1a55e6",
-            "size": 4339,
-            "uri": "https://{canondata_backend}/212715/eaa896933c4ba961bd6bc069d8f6af022f58f700/resource.tar.gz#test.test_aggregate-group_by_hop_star--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_hop_star--Debug]": [
-        {
-            "checksum": "c6f25783389a9f71e40f58669115b7c1",
-            "size": 2520,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_aggregate-group_by_hop_star--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-group_by_hop_star--Plan]": [
-        {
-            "checksum": "90d99f624f4f40b3b3307103fe1a55e6",
-            "size": 4339,
-            "uri": "https://{canondata_backend}/212715/eaa896933c4ba961bd6bc069d8f6af022f58f700/resource.tar.gz#test.test_aggregate-group_by_hop_star--Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_hop_star--Results]": [
-        {
-            "checksum": "4f26a186e58a38985039c5532a17aab6",
-            "size": 1761,
-            "uri": "https://{canondata_backend}/1899731/d439cec3e297e3dd031f751fd90f3935129a1094/resource.tar.gz#test.test_aggregate-group_by_hop_star--Results_/results.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_rollup_aggr_expr--Analyze]": [
-        {
-            "checksum": "aa140f37408b988993ce716944f1b2f0",
-            "size": 8877,
-            "uri": "https://{canondata_backend}/1937027/ec284f0d49e0f6e26fe5e8922028ffb903db3bc7/resource.tar.gz#test.test_aggregate-group_by_rollup_aggr_expr--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_rollup_aggr_expr--Debug]": [
-        {
-            "checksum": "66366d52a0c559024f7ca2bf1b1924f0",
-            "size": 7262,
-            "uri": "https://{canondata_backend}/1871102/a3f4b73c2abee8d4bf99b0344946712ef43a9193/resource.tar.gz#test.test_aggregate-group_by_rollup_aggr_expr--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-group_by_rollup_aggr_expr--Plan]": [
-        {
-            "checksum": "aa140f37408b988993ce716944f1b2f0",
-            "size": 8877,
-            "uri": "https://{canondata_backend}/1937027/17767c14f451959962681cf3d7fdbcfc98a6f63b/resource.tar.gz#test.test_aggregate-group_by_rollup_aggr_expr--Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_rollup_aggr_expr--Results]": [],
-    "test.test[aggregate-group_by_session_extended_subset--Analyze]": [
-        {
-            "checksum": "fce75ab03bfe46e70dbd0f1e8d9de792",
-            "size": 5174,
-            "uri": "https://{canondata_backend}/1942278/40ea988eaa18293a322e85a441a68b521e416660/resource.tar.gz#test.test_aggregate-group_by_session_extended_subset--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_session_extended_subset--Debug]": [
-        {
-            "checksum": "088377e7e87a4dab1eb150fd15321afd",
-            "size": 3591,
-            "uri": "https://{canondata_backend}/1937001/2a7ef44323a9583b611e77f9451ecbcf9a39cd8f/resource.tar.gz#test.test_aggregate-group_by_session_extended_subset--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-group_by_session_extended_subset--Plan]": [
-        {
-            "checksum": "fce75ab03bfe46e70dbd0f1e8d9de792",
-            "size": 5174,
-            "uri": "https://{canondata_backend}/1942278/40ea988eaa18293a322e85a441a68b521e416660/resource.tar.gz#test.test_aggregate-group_by_session_extended_subset--Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-group_by_session_extended_subset--Results]": [],
-    "test.test[aggregate-percentile_and_avg_grouped--Analyze]": [
-        {
-            "checksum": "dfeb435c40cd1a0a98c74310e1507366",
-            "size": 5134,
-            "uri": "https://{canondata_backend}/1925842/bac0b87c8df73e5d30ab0b57349de6b672768da8/resource.tar.gz#test.test_aggregate-percentile_and_avg_grouped--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-percentile_and_avg_grouped--Debug]": [
-        {
-            "checksum": "64f64798a99baca41d0e592f355f8fc5",
-            "size": 5136,
-            "uri": "https://{canondata_backend}/1942415/6669484e62bb116018d49d82b2e465bc96b01a14/resource.tar.gz#test.test_aggregate-percentile_and_avg_grouped--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-percentile_and_avg_grouped--Plan]": [
-        {
-            "checksum": "dfeb435c40cd1a0a98c74310e1507366",
-            "size": 5134,
-            "uri": "https://{canondata_backend}/1925842/bac0b87c8df73e5d30ab0b57349de6b672768da8/resource.tar.gz#test.test_aggregate-percentile_and_avg_grouped--Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-percentile_and_avg_grouped--Results]": [],
-    "test.test[aggregate-percentiles_grouped_expr--Analyze]": [
-        {
-            "checksum": "265191d2ec7093f2ccbacc9ebdb1b5d2",
-            "size": 5236,
-            "uri": "https://{canondata_backend}/1942100/7dbb0fabca371736b54699a0459fc74089bb4c57/resource.tar.gz#test.test_aggregate-percentiles_grouped_expr--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-percentiles_grouped_expr--Debug]": [
-        {
-            "checksum": "681af4607c728d89f78532bb9ee2f258",
-            "size": 5549,
-            "uri": "https://{canondata_backend}/1942100/7dbb0fabca371736b54699a0459fc74089bb4c57/resource.tar.gz#test.test_aggregate-percentiles_grouped_expr--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[aggregate-percentiles_grouped_expr--Plan]": [
-        {
-            "checksum": "265191d2ec7093f2ccbacc9ebdb1b5d2",
-            "size": 5236,
-            "uri": "https://{canondata_backend}/1942100/7dbb0fabca371736b54699a0459fc74089bb4c57/resource.tar.gz#test.test_aggregate-percentiles_grouped_expr--Plan_/plan.txt"
-        }
-    ],
-    "test.test[aggregate-percentiles_grouped_expr--Results]": [],
-    "test.test[bigdate-implicit_cast_callable-default.txt-Analyze]": [
-        {
-            "checksum": "a15582f41e9c903a4855173429134ea7",
-            "size": 11836,
-            "uri": "https://{canondata_backend}/1924537/907e79379e1e72f9d09545e57f65dee63f42dbfe/resource.tar.gz#test.test_bigdate-implicit_cast_callable-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[bigdate-implicit_cast_callable-default.txt-Debug]": [
-        {
-            "checksum": "ba33a33b31518dc67cf4243d47cef4f5",
-            "size": 7352,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_bigdate-implicit_cast_callable-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[bigdate-implicit_cast_callable-default.txt-Plan]": [
-        {
-            "checksum": "a15582f41e9c903a4855173429134ea7",
-            "size": 11836,
-            "uri": "https://{canondata_backend}/1924537/907e79379e1e72f9d09545e57f65dee63f42dbfe/resource.tar.gz#test.test_bigdate-implicit_cast_callable-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[bigdate-implicit_cast_callable-default.txt-Results]": [],
-    "test.test[bigdate-output_timestamp64-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1942100/1a3ac34e6a22249edacf19f24601f290b692c3cb/resource.tar.gz#test.test_bigdate-output_timestamp64-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[bigdate-output_timestamp64-default.txt-Debug]": [
-        {
-            "checksum": "7e67cb46e5333b15034b650d20cb4918",
-            "size": 1320,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_bigdate-output_timestamp64-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[bigdate-output_timestamp64-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1942100/1a3ac34e6a22249edacf19f24601f290b692c3cb/resource.tar.gz#test.test_bigdate-output_timestamp64-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[bigdate-output_timestamp64-default.txt-Results]": [],
-    "test.test[bigdate-table_int_cast-default.txt-Analyze]": [
-        {
-            "checksum": "a2033271dc32066ecdbdc2f5aed2b4b7",
-            "size": 12969,
-            "uri": "https://{canondata_backend}/1924537/907e79379e1e72f9d09545e57f65dee63f42dbfe/resource.tar.gz#test.test_bigdate-table_int_cast-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[bigdate-table_int_cast-default.txt-Debug]": [
-        {
-            "checksum": "1d672f23cc038dc42d14175121554c71",
-            "size": 8617,
-            "uri": "https://{canondata_backend}/1924537/907e79379e1e72f9d09545e57f65dee63f42dbfe/resource.tar.gz#test.test_bigdate-table_int_cast-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[bigdate-table_int_cast-default.txt-Plan]": [
-        {
-            "checksum": "a2033271dc32066ecdbdc2f5aed2b4b7",
-            "size": 12969,
-            "uri": "https://{canondata_backend}/1924537/907e79379e1e72f9d09545e57f65dee63f42dbfe/resource.tar.gz#test.test_bigdate-table_int_cast-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[bigdate-table_int_cast-default.txt-Results]": [],
-    "test.test[bigdate-tzstrliterals-default.txt-Analyze]": [
-        {
-            "checksum": "b2a2eb5d6b0a138ee924c128fc7738ef",
-            "size": 1331,
-            "uri": "https://{canondata_backend}/1031349/a8c086bf83c7b097d941bd5f51b9690bf204f31f/resource.tar.gz#test.test_bigdate-tzstrliterals-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[bigdate-tzstrliterals-default.txt-Debug]": [
-        {
-            "checksum": "4c04b8b43f27156cd4d3cd8797b65376",
-            "size": 2987,
-            "uri": "https://{canondata_backend}/1031349/a8c086bf83c7b097d941bd5f51b9690bf204f31f/resource.tar.gz#test.test_bigdate-tzstrliterals-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[bigdate-tzstrliterals-default.txt-Plan]": [
-        {
-            "checksum": "b2a2eb5d6b0a138ee924c128fc7738ef",
-            "size": 1331,
-            "uri": "https://{canondata_backend}/1031349/a8c086bf83c7b097d941bd5f51b9690bf204f31f/resource.tar.gz#test.test_bigdate-tzstrliterals-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[bigdate-tzstrliterals-default.txt-Results]": [],
-    "test.test[binding-tie_bad_count_fail--Debug]": [],
-    "test.test[binding-tie_bad_count_fail--Plan]": [],
-    "test.test[binding-tie_bad_count_fail--Results]": [
-        {
-            "uri": "file://test.test_binding-tie_bad_count_fail--Results_/extracted"
-        }
-    ],
-    "test.test[blocks-bitcast_block--Analyze]": [
-        {
-            "checksum": "f195daa0332f326a49d3606aa59caf5b",
-            "size": 3671,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-bitcast_block--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[blocks-bitcast_block--Debug]": [
-        {
-            "checksum": "997703ad21ba90117b56b42cfa82abf6",
-            "size": 1331,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-bitcast_block--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[blocks-bitcast_block--Plan]": [
-        {
-            "checksum": "f195daa0332f326a49d3606aa59caf5b",
-            "size": 3671,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-bitcast_block--Plan_/plan.txt"
-        }
-    ],
-    "test.test[blocks-bitcast_block--Results]": [],
-    "test.test[blocks-combine_all_min_filter_opt--Analyze]": [
-        {
-            "checksum": "4d05f39dec0aca30f992ac6208eb278c",
-            "size": 5563,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-combine_all_min_filter_opt--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[blocks-combine_all_min_filter_opt--Debug]": [
-        {
-            "checksum": "9832de3a17543aff1b3785fcfed2ebc5",
-            "size": 2477,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-combine_all_min_filter_opt--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[blocks-combine_all_min_filter_opt--Plan]": [
-        {
-            "checksum": "4d05f39dec0aca30f992ac6208eb278c",
-            "size": 5563,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-combine_all_min_filter_opt--Plan_/plan.txt"
-        }
-    ],
-    "test.test[blocks-combine_all_min_filter_opt--Results]": [],
-    "test.test[blocks-pg_to_strings--Analyze]": [
-        {
-            "checksum": "e5d3b29cdcd15779636eefda1d7c1aa9",
-            "size": 4925,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-pg_to_strings--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[blocks-pg_to_strings--Debug]": [
-        {
-            "checksum": "5343fc2cd5a4ec6b9ee1f05babb5b1f1",
-            "size": 2873,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-pg_to_strings--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[blocks-pg_to_strings--Plan]": [
-        {
-            "checksum": "e5d3b29cdcd15779636eefda1d7c1aa9",
-            "size": 4925,
-            "uri": "https://{canondata_backend}/1889210/fede666d039e0167053e2c4cfe8623cff4b33d24/resource.tar.gz#test.test_blocks-pg_to_strings--Plan_/plan.txt"
-        }
-    ],
-    "test.test[blocks-pg_to_strings--Results]": [],
-    "test.test[column_order-union_all_positional_columns_count_fail--Debug]": [],
-    "test.test[column_order-union_all_positional_columns_count_fail--Plan]": [],
-    "test.test[column_order-union_all_positional_columns_count_fail--Results]": [
-        {
-            "uri": "file://test.test_column_order-union_all_positional_columns_count_fail--Results_/extracted"
-        }
-    ],
-    "test.test[count-count_distinct_from_view_concat--Analyze]": [
-        {
-            "checksum": "0e9691d54f1a8c28b5c183b6361ad100",
-            "size": 6296,
-            "uri": "https://{canondata_backend}/1937027/ec284f0d49e0f6e26fe5e8922028ffb903db3bc7/resource.tar.gz#test.test_count-count_distinct_from_view_concat--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[count-count_distinct_from_view_concat--Debug]": [
-        {
-            "checksum": "d675644901dd50676e6bbc1cd9cb8956",
-            "size": 3617,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_count-count_distinct_from_view_concat--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[count-count_distinct_from_view_concat--Plan]": [
-        {
-            "checksum": "0e9691d54f1a8c28b5c183b6361ad100",
-            "size": 6296,
-            "uri": "https://{canondata_backend}/1937027/17767c14f451959962681cf3d7fdbcfc98a6f63b/resource.tar.gz#test.test_count-count_distinct_from_view_concat--Plan_/plan.txt"
-        }
-    ],
-    "test.test[count-count_distinct_from_view_concat--Results]": [],
-    "test.test[csee-lambda_in_l1_and_l0-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_csee-lambda_in_l1_and_l0-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[csee-lambda_in_l1_and_l0-default.txt-Debug]": [
-        {
-            "checksum": "2a983e92e81fda503055144318596bbe",
-            "size": 592,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_csee-lambda_in_l1_and_l0-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[csee-lambda_in_l1_and_l0-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_csee-lambda_in_l1_and_l0-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[csee-lambda_in_l1_and_l0-default.txt-Results]": [],
-    "test.test[datetime-date_tz_bytes-default.txt-Analyze]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_datetime-date_tz_bytes-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[datetime-date_tz_bytes-default.txt-Debug]": [
-        {
-            "checksum": "07ae1edc72a20363fd16176d765c8970",
-            "size": 1079,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_datetime-date_tz_bytes-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[datetime-date_tz_bytes-default.txt-Plan]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_datetime-date_tz_bytes-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[datetime-date_tz_bytes-default.txt-Results]": [],
-    "test.test[datetime-date_tz_table_sort_desc--Analyze]": [
-        {
-            "checksum": "77434961a6fb8abc4fef4d388c00b233",
-            "size": 7601,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_datetime-date_tz_table_sort_desc--Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_datetime-date_tz_table_sort_desc--Analyze_/extracted"
-        }
-    ],
-    "test.test[datetime-date_tz_table_sort_desc--Debug]": [
-        {
-            "checksum": "bc1c4a1be66da778f82da2978db227e8",
-            "size": 3974,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_datetime-date_tz_table_sort_desc--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[datetime-date_tz_table_sort_desc--Plan]": [
-        {
-            "checksum": "d8bd3c65d8889db8cb0bd7e1416bc47c",
-            "size": 10831,
-            "uri": "https://{canondata_backend}/1817427/dd0485c09a30d742e18a0ec21502ddd405eb8be8/resource.tar.gz#test.test_datetime-date_tz_table_sort_desc--Plan_/plan.txt"
-        }
-    ],
-    "test.test[datetime-date_tz_table_sort_desc--Results]": [],
-    "test.test[dq-truncate_local-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1773845/ab4dbe9a0023541b50ed970cdbec735405c6ed77/resource.tar.gz#test.test_dq-truncate_local-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[dq-truncate_local-default.txt-Debug]": [
-        {
-            "checksum": "79bc6d8419cfb26a1806ad93f2e21959",
-            "size": 340,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_dq-truncate_local-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[dq-truncate_local-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1773845/ab4dbe9a0023541b50ed970cdbec735405c6ed77/resource.tar.gz#test.test_dq-truncate_local-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[dq-truncate_local-default.txt-Results]": [
-        {
-            "checksum": "7a533e46e523b279384c01d89ba708c9",
-            "size": 75960,
-            "uri": "https://{canondata_backend}/1899731/d439cec3e297e3dd031f751fd90f3935129a1094/resource.tar.gz#test.test_dq-truncate_local-default.txt-Results_/results.txt"
-        }
-    ],
-    "test.test[expr-as_dict_dict_key-default.txt-Analyze]": [
-        {
-            "checksum": "b2a2eb5d6b0a138ee924c128fc7738ef",
-            "size": 1331,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_expr-as_dict_dict_key-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[expr-as_dict_dict_key-default.txt-Debug]": [
-        {
-            "checksum": "08ff827caea77b3b87338859e681cc0e",
-            "size": 1457,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_expr-as_dict_dict_key-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[expr-as_dict_dict_key-default.txt-Plan]": [
-        {
-            "checksum": "b2a2eb5d6b0a138ee924c128fc7738ef",
-            "size": 1331,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_expr-as_dict_dict_key-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[expr-as_dict_dict_key-default.txt-Results]": [],
-    "test.test[expr-int_literals_negative_typed-default.txt-Analyze]": [
-        {
-            "checksum": "8ddfa95f10135fbea51411372a704ae9",
-            "size": 5055,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_expr-int_literals_negative_typed-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[expr-int_literals_negative_typed-default.txt-Debug]": [
-        {
-            "checksum": "4f4f29ffc1443cbb130e708775caf384",
-            "size": 1987,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_expr-int_literals_negative_typed-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[expr-int_literals_negative_typed-default.txt-Plan]": [
-        {
-            "checksum": "8ddfa95f10135fbea51411372a704ae9",
-            "size": 5055,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_expr-int_literals_negative_typed-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[expr-int_literals_negative_typed-default.txt-Results]": [],
-    "test.test[expr-list_indexof-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/995452/b1f2dabe2f59f069a24ebbb0bcf5d5b69f26631e/resource.tar.gz#test.test_expr-list_indexof-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[expr-list_indexof-default.txt-Debug]": [
-        {
-            "checksum": "be12d82c66f42c178a479f33db35962b",
-            "size": 1192,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_expr-list_indexof-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[expr-list_indexof-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/995452/b1f2dabe2f59f069a24ebbb0bcf5d5b69f26631e/resource.tar.gz#test.test_expr-list_indexof-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[expr-list_indexof-default.txt-Results]": [],
-    "test.test[expr-list_to_from_tuple-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1814674/8156a7ce6ad6eceb82586ac4874de57d87023039/resource.tar.gz#test.test_expr-list_to_from_tuple-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[expr-list_to_from_tuple-default.txt-Debug]": [
-        {
-            "checksum": "3b5fcea147031dec70729f682c836501",
-            "size": 1098,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_expr-list_to_from_tuple-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[expr-list_to_from_tuple-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1814674/8156a7ce6ad6eceb82586ac4874de57d87023039/resource.tar.gz#test.test_expr-list_to_from_tuple-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[expr-list_to_from_tuple-default.txt-Results]": [],
-    "test.test[expr-non_persistable_group_by_some_fail--Debug]": [],
-    "test.test[expr-non_persistable_group_by_some_fail--Plan]": [],
-    "test.test[expr-non_persistable_group_by_some_fail--Results]": [
-        {
-            "uri": "file://test.test_expr-non_persistable_group_by_some_fail--Results_/extracted"
-        }
-    ],
-    "test.test[expr-to_hashed_set_vartuple_key-default.txt-Analyze]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_expr-to_hashed_set_vartuple_key-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[expr-to_hashed_set_vartuple_key-default.txt-Debug]": [
-        {
-            "checksum": "89133d952f0f05da9cb084985058f34f",
-            "size": 1948,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_expr-to_hashed_set_vartuple_key-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[expr-to_hashed_set_vartuple_key-default.txt-Plan]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_expr-to_hashed_set_vartuple_key-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[expr-to_hashed_set_vartuple_key-default.txt-Results]": [],
-    "test.test[expr-udaf_with_list_zip-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1871002/09c7103fe942f664e52ea9943175fcce1c927b80/resource.tar.gz#test.test_expr-udaf_with_list_zip-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[expr-udaf_with_list_zip-default.txt-Debug]": [
-        {
-            "checksum": "e817e78a6e4273d1bce9b771981a8ea8",
-            "size": 887,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_expr-udaf_with_list_zip-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[expr-udaf_with_list_zip-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1871002/09c7103fe942f664e52ea9943175fcce1c927b80/resource.tar.gz#test.test_expr-udaf_with_list_zip-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[expr-udaf_with_list_zip-default.txt-Results]": [],
-    "test.test[expr-variant_struct_comp-default.txt-Analyze]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_expr-variant_struct_comp-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[expr-variant_struct_comp-default.txt-Debug]": [
-        {
-            "checksum": "ad383a8caf92f2317be19e39bc8348cd",
-            "size": 1888,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_expr-variant_struct_comp-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[expr-variant_struct_comp-default.txt-Plan]": [
-        {
-            "checksum": "01775e7c945a56ebf0edc2d478f4f68d",
-            "size": 2567,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_expr-variant_struct_comp-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[expr-variant_struct_comp-default.txt-Results]": [],
-    "test.test[file-parse_file_in_select_as_str--Analyze]": [
-        {
-            "checksum": "d2ab88d7ed03e7cc274df0656c6ada27",
-            "size": 3700,
-            "uri": "https://{canondata_backend}/1871002/99771a64b313e4ed0d87c6e59cde6bafe069ce35/resource.tar.gz#test.test_file-parse_file_in_select_as_str--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[file-parse_file_in_select_as_str--Debug]": [
-        {
-            "checksum": "041878b220ef5dc524a86c4fabda5b6f",
-            "size": 1819,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_file-parse_file_in_select_as_str--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[file-parse_file_in_select_as_str--Plan]": [
-        {
-            "checksum": "d2ab88d7ed03e7cc274df0656c6ada27",
-            "size": 3700,
-            "uri": "https://{canondata_backend}/1817427/dd0485c09a30d742e18a0ec21502ddd405eb8be8/resource.tar.gz#test.test_file-parse_file_in_select_as_str--Plan_/plan.txt"
-        }
-    ],
-    "test.test[file-parse_file_in_select_as_str--Results]": [],
-    "test.test[hor_join-row_num_per_sect--Analyze]": [
-        {
-            "checksum": "46ea712b8bc1ed2f6acc0d96324bf919",
-            "size": 7668,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_hor_join-row_num_per_sect--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[hor_join-row_num_per_sect--Debug]": [
-        {
-            "checksum": "b367ac3fff86347fc9ffb211b28b1f0d",
-            "size": 4825,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_hor_join-row_num_per_sect--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[hor_join-row_num_per_sect--Plan]": [
-        {
-            "checksum": "46ea712b8bc1ed2f6acc0d96324bf919",
-            "size": 7668,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_hor_join-row_num_per_sect--Plan_/plan.txt"
-        }
-    ],
-    "test.test[hor_join-row_num_per_sect--Results]": [],
-    "test.test[in-in_ansi_dict1-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_in-in_ansi_dict1-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[in-in_ansi_dict1-default.txt-Debug]": [
-        {
-            "checksum": "36ff1c1eba58a50f3249e3f0112910dd",
-            "size": 751,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_in-in_ansi_dict1-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[in-in_ansi_dict1-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_in-in_ansi_dict1-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[in-in_ansi_dict1-default.txt-Results]": [],
-    "test.test[in-in_with_literal_list_of_structs_ansi-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1931696/1afb7fe05c694a846953b38edeceb5eee38c90d9/resource.tar.gz#test.test_in-in_with_literal_list_of_structs_ansi-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[in-in_with_literal_list_of_structs_ansi-default.txt-Debug]": [
-        {
-            "checksum": "a056301df6cedc4e133bcc27da45aa78",
-            "size": 396,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_in-in_with_literal_list_of_structs_ansi-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[in-in_with_literal_list_of_structs_ansi-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1931696/1afb7fe05c694a846953b38edeceb5eee38c90d9/resource.tar.gz#test.test_in-in_with_literal_list_of_structs_ansi-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[in-in_with_literal_list_of_structs_ansi-default.txt-Results]": [],
-    "test.test[in-in_with_nulls_and_optionals-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_in-in_with_nulls_and_optionals-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_in-in_with_nulls_and_optionals-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[in-in_with_nulls_and_optionals-default.txt-Debug]": [
-        {
-            "checksum": "1d71337783199b92815f1c7034b0c820",
-            "size": 1183,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_in-in_with_nulls_and_optionals-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[in-in_with_nulls_and_optionals-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_in-in_with_nulls_and_optionals-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[in-in_with_nulls_and_optionals-default.txt-Results]": [
-        {
-            "uri": "file://test.test_in-in_with_nulls_and_optionals-default.txt-Results_/extracted"
-        }
-    ],
-    "test.test[insert-append-with_read_udf_fail-Debug]": [],
-    "test.test[insert-append-with_read_udf_fail-Plan]": [],
-    "test.test[insert-append-with_read_udf_fail-Results]": [
-        {
-            "uri": "file://test.test_insert-append-with_read_udf_fail-Results_/extracted"
-        }
-    ],
-    "test.test[join-convert_check_key_mem-off-Analyze]": [
-        {
-            "checksum": "55515ae638f317612d048052be489bfd",
-            "size": 1740,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-convert_check_key_mem-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-convert_check_key_mem-off-Debug]": [
-        {
-            "checksum": "c9aa72b680d2141a1625af53c44ed525",
-            "size": 2113,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-convert_check_key_mem-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-convert_check_key_mem-off-Plan]": [
-        {
-            "checksum": "55515ae638f317612d048052be489bfd",
-            "size": 1740,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-convert_check_key_mem-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-convert_check_key_mem-off-Results]": [
-        {
-            "checksum": "68061e9d932436971825a9738af815a4",
-            "size": 4710,
-            "uri": "https://{canondata_backend}/937458/55f0812aa779206291ac8c4b283b7a80472fd1fb/resource.tar.gz#test.test_join-convert_check_key_mem-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-cross_join_with_lazy_list--Analyze]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1889210/46413869b9a6422f358888eff087d092b7ec0356/resource.tar.gz#test.test_join-cross_join_with_lazy_list--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-cross_join_with_lazy_list--Debug]": [
-        {
-            "checksum": "5f6dd61bc71de4d2f177a2e9aa65db73",
-            "size": 803,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-cross_join_with_lazy_list--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-cross_join_with_lazy_list--Plan]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1889210/46413869b9a6422f358888eff087d092b7ec0356/resource.tar.gz#test.test_join-cross_join_with_lazy_list--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-cross_join_with_lazy_list--Results]": [],
-    "test.test[join-filter_joined-off-Analyze]": [
-        {
-            "checksum": "f58e39a8ceea379720352ba9363e4c66",
-            "size": 7251,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-filter_joined-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-filter_joined-off-Debug]": [
-        {
-            "checksum": "b636302af94e65bc35b74dc61a2c38aa",
-            "size": 2431,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-filter_joined-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-filter_joined-off-Plan]": [
-        {
-            "checksum": "f58e39a8ceea379720352ba9363e4c66",
-            "size": 7251,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-filter_joined-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-filter_joined-off-Results]": [
-        {
-            "checksum": "b5f9feac8aa63eb9045e26d06cef9aff",
-            "size": 741,
-            "uri": "https://{canondata_backend}/937458/55f0812aa779206291ac8c4b283b7a80472fd1fb/resource.tar.gz#test.test_join-filter_joined-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-from_in_front_join-off-Analyze]": [
-        {
-            "checksum": "4ec7401ca90eb1b7fdd71d4329daa36e",
-            "size": 6712,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-from_in_front_join-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-from_in_front_join-off-Debug]": [
-        {
-            "checksum": "770fa4353488847277c78d682a49f185",
-            "size": 2328,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-from_in_front_join-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-from_in_front_join-off-Plan]": [
-        {
-            "checksum": "4ec7401ca90eb1b7fdd71d4329daa36e",
-            "size": 6712,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-from_in_front_join-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-from_in_front_join-off-Results]": [
-        {
-            "checksum": "f9888a277cbaa05b9390825e714967bb",
-            "size": 1437,
-            "uri": "https://{canondata_backend}/1899731/d439cec3e297e3dd031f751fd90f3935129a1094/resource.tar.gz#test.test_join-from_in_front_join-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-grace_join1-off-Analyze]": [
-        {
-            "checksum": "942b14713173e3c304116994eb76438b",
-            "size": 6968,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-grace_join1-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-grace_join1-off-Debug]": [
-        {
-            "checksum": "66d957319d50b0ff3921b1018b5c6401",
-            "size": 2819,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-grace_join1-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-grace_join1-off-Plan]": [
-        {
-            "checksum": "942b14713173e3c304116994eb76438b",
-            "size": 6968,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-grace_join1-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-grace_join1-off-Results]": [
-        {
-            "checksum": "418aa4165f8fd221135153e78bcbafc3",
-            "size": 1427,
-            "uri": "https://{canondata_backend}/1899731/d439cec3e297e3dd031f751fd90f3935129a1094/resource.tar.gz#test.test_join-grace_join1-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-inmem_with_set_key_any-off-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-inmem_with_set_key_any-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-inmem_with_set_key_any-off-Debug]": [
-        {
-            "checksum": "c2de537418fc84da5cdfe9500c5fbc70",
-            "size": 2923,
-            "uri": "https://{canondata_backend}/1937492/3cc712c3196f7027398ddcbbf6597f57ccd7dfeb/resource.tar.gz#test.test_join-inmem_with_set_key_any-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-inmem_with_set_key_any-off-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-inmem_with_set_key_any-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-inmem_with_set_key_any-off-Results]": [
-        {
-            "checksum": "1423a137c96fd7b56d4db77f42b34177",
-            "size": 9088,
-            "uri": "https://{canondata_backend}/937458/55f0812aa779206291ac8c4b283b7a80472fd1fb/resource.tar.gz#test.test_join-inmem_with_set_key_any-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-inner_trivial--Analyze]": [
-        {
-            "checksum": "00e5eb09b02b178a9f560617ab14274e",
-            "size": 6310,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-inner_trivial--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-inner_trivial--Debug]": [
-        {
-            "checksum": "b87455ce6c8d6e483a381d3536b98c9f",
-            "size": 2461,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-inner_trivial--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-inner_trivial--Plan]": [
-        {
-            "checksum": "00e5eb09b02b178a9f560617ab14274e",
-            "size": 6310,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-inner_trivial--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-inner_trivial--Results]": [],
-    "test.test[join-inner_trivial-off-Analyze]": [
-        {
-            "checksum": "4ec7401ca90eb1b7fdd71d4329daa36e",
-            "size": 6712,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-inner_trivial-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-inner_trivial-off-Debug]": [
-        {
-            "checksum": "770fa4353488847277c78d682a49f185",
-            "size": 2328,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-inner_trivial-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-inner_trivial-off-Plan]": [
-        {
-            "checksum": "4ec7401ca90eb1b7fdd71d4329daa36e",
-            "size": 6712,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-inner_trivial-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-inner_trivial-off-Results]": [
-        {
-            "checksum": "f9888a277cbaa05b9390825e714967bb",
-            "size": 1437,
-            "uri": "https://{canondata_backend}/1899731/d439cec3e297e3dd031f751fd90f3935129a1094/resource.tar.gz#test.test_join-inner_trivial-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-join_without_correlation_names--Analyze]": [
-        {
-            "checksum": "c65393938b16b05b9c178ac3cfbad6bb",
-            "size": 5266,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_join-join_without_correlation_names--Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_join-join_without_correlation_names--Analyze_/extracted"
-        }
-    ],
-    "test.test[join-join_without_correlation_names--Debug]": [
-        {
-            "checksum": "3e9d9382ccb9276888cc0929fef316ca",
-            "size": 2851,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-join_without_correlation_names--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-join_without_correlation_names--Plan]": [
-        {
-            "checksum": "c65393938b16b05b9c178ac3cfbad6bb",
-            "size": 5266,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_join-join_without_correlation_names--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-join_without_correlation_names--Results]": [
-        {
-            "uri": "file://test.test_join-join_without_correlation_names--Results_/extracted"
-        }
-    ],
-    "test.test[join-left_join_right_pushdown_no_opt--Analyze]": [
-        {
-            "checksum": "4dc692a6090fec1e0fcd74b62fea8c9f",
-            "size": 7278,
-            "uri": "https://{canondata_backend}/995452/bdcc1c962e2cb216859f83be46f0797cbc65b816/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-left_join_right_pushdown_no_opt--Debug]": [
-        {
-            "checksum": "0ac1c189e323ef65a6ddcb45f5a9feb2",
-            "size": 3675,
-            "uri": "https://{canondata_backend}/995452/bdcc1c962e2cb216859f83be46f0797cbc65b816/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-left_join_right_pushdown_no_opt--Plan]": [
-        {
-            "checksum": "4dc692a6090fec1e0fcd74b62fea8c9f",
-            "size": 7278,
-            "uri": "https://{canondata_backend}/995452/bdcc1c962e2cb216859f83be46f0797cbc65b816/resource.tar.gz#test.test_join-left_join_right_pushdown_no_opt--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-left_join_right_pushdown_no_opt--Results]": [],
-    "test.test[join-lookupjoin_with_cache-off-Analyze]": [
-        {
-            "checksum": "0a52d2686415327ccb290e0b4fd3bb87",
-            "size": 10672,
-            "uri": "https://{canondata_backend}/1031349/8ad72b2dd458e088eb333e5553dfd99dbae9e9d7/resource.tar.gz#test.test_join-lookupjoin_with_cache-off-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_join-lookupjoin_with_cache-off-Analyze_/extracted"
-        }
-    ],
-    "test.test[join-lookupjoin_with_cache-off-Debug]": [
-        {
-            "checksum": "6d162e5ad4b3b3bad064ac2b86afc683",
-            "size": 4613,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-lookupjoin_with_cache-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-lookupjoin_with_cache-off-Plan]": [
-        {
-            "checksum": "d559d5782522a86db7d1fb530578c392",
-            "size": 11518,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_join-lookupjoin_with_cache-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-lookupjoin_with_cache-off-Results]": [
-        {
-            "checksum": "20ccef5ef4dc4cfd4a9075b4b89e4dfe",
-            "size": 2606,
-            "uri": "https://{canondata_backend}/937458/55f0812aa779206291ac8c4b283b7a80472fd1fb/resource.tar.gz#test.test_join-lookupjoin_with_cache-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-mapjoin_dup_key--Analyze]": [
-        {
-            "checksum": "ac07fd0106ffc2dccf550c83d5664905",
-            "size": 6376,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mapjoin_dup_key--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mapjoin_dup_key--Debug]": [
-        {
-            "checksum": "8631939c5b8156b444c7a70d71241190",
-            "size": 2508,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-mapjoin_dup_key--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mapjoin_dup_key--Plan]": [
-        {
-            "checksum": "ac07fd0106ffc2dccf550c83d5664905",
-            "size": 6376,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mapjoin_dup_key--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mapjoin_dup_key--Results]": [],
-    "test.test[join-mapjoin_dup_key-off-Analyze]": [
-        {
-            "checksum": "dffcd159d6b320070070305271efd7c3",
-            "size": 6671,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mapjoin_dup_key-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mapjoin_dup_key-off-Debug]": [
-        {
-            "checksum": "ef6abb2f6bbac8382d254c22467dc3de",
-            "size": 2348,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-mapjoin_dup_key-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mapjoin_dup_key-off-Plan]": [
-        {
-            "checksum": "dffcd159d6b320070070305271efd7c3",
-            "size": 6671,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mapjoin_dup_key-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mapjoin_dup_key-off-Results]": [
-        {
-            "checksum": "0642e66c8877a8881e126fdecd9bd042",
-            "size": 1968,
-            "uri": "https://{canondata_backend}/1899731/d439cec3e297e3dd031f751fd90f3935129a1094/resource.tar.gz#test.test_join-mapjoin_dup_key-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-mergejoin_any_no_join_reduce-off-Analyze]": [
-        {
-            "checksum": "78aabb9923220bb4a053d56dede894fb",
-            "size": 3846,
-            "uri": "https://{canondata_backend}/1871002/99771a64b313e4ed0d87c6e59cde6bafe069ce35/resource.tar.gz#test.test_join-mergejoin_any_no_join_reduce-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_any_no_join_reduce-off-Debug]": [
-        {
-            "checksum": "c9d03c5da827b78e284ef8d938340341",
-            "size": 2168,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_join-mergejoin_any_no_join_reduce-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mergejoin_any_no_join_reduce-off-Plan]": [
-        {
-            "checksum": "78aabb9923220bb4a053d56dede894fb",
-            "size": 3846,
-            "uri": "https://{canondata_backend}/1817427/dd0485c09a30d742e18a0ec21502ddd405eb8be8/resource.tar.gz#test.test_join-mergejoin_any_no_join_reduce-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_any_no_join_reduce-off-Results]": [
-        {
-            "checksum": "d9cf7d410e96a75455ddab49dc4a4c10",
-            "size": 1418,
-            "uri": "https://{canondata_backend}/1899731/d439cec3e297e3dd031f751fd90f3935129a1094/resource.tar.gz#test.test_join-mergejoin_any_no_join_reduce-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-mergejoin_narrows_output_sort--Analyze]": [
-        {
-            "checksum": "003caa609c148690ae0bf643e78e1337",
-            "size": 10398,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mergejoin_narrows_output_sort--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_narrows_output_sort--Debug]": [
-        {
-            "checksum": "b018118dccada1234ad5848a6ff57b4b",
-            "size": 5737,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_narrows_output_sort--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mergejoin_narrows_output_sort--Plan]": [
-        {
-            "checksum": "003caa609c148690ae0bf643e78e1337",
-            "size": 10398,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mergejoin_narrows_output_sort--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_narrows_output_sort--Results]": [],
-    "test.test[join-mergejoin_saves_output_sort-off-Analyze]": [
-        {
-            "checksum": "91ba22a4bd3c7dca5758528e013e604b",
-            "size": 31487,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_join-mergejoin_saves_output_sort-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_saves_output_sort-off-Debug]": [
-        {
-            "checksum": "a9868bec6bc72bf97ae346f13828c1ea",
-            "size": 9565,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_saves_output_sort-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mergejoin_saves_output_sort-off-Plan]": [
-        {
-            "checksum": "91ba22a4bd3c7dca5758528e013e604b",
-            "size": 31487,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_join-mergejoin_saves_output_sort-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_saves_output_sort-off-Results]": [
-        {
-            "checksum": "0083ebac6099ef4c2afc862fc1b8a267",
-            "size": 23770,
-            "uri": "https://{canondata_backend}/937458/55f0812aa779206291ac8c4b283b7a80472fd1fb/resource.tar.gz#test.test_join-mergejoin_saves_output_sort-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-mergejoin_sorts_output_for_sort_nomatch--Analyze]": [
-        {
-            "checksum": "d092e178619ef080a677fa0285ad8c37",
-            "size": 6979,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mergejoin_sorts_output_for_sort_nomatch--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_sorts_output_for_sort_nomatch--Debug]": [
-        {
-            "checksum": "10d6dd1c1373bf3bdde50a15cebc70d3",
-            "size": 3242,
-            "uri": "https://{canondata_backend}/1775059/8eed37259d411fc80649c1b2311ad3abfd9ee15e/resource.tar.gz#test.test_join-mergejoin_sorts_output_for_sort_nomatch--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mergejoin_sorts_output_for_sort_nomatch--Plan]": [
-        {
-            "checksum": "d092e178619ef080a677fa0285ad8c37",
-            "size": 6979,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mergejoin_sorts_output_for_sort_nomatch--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_sorts_output_for_sort_nomatch--Results]": [],
-    "test.test[join-mergejoin_with_different_key_names_nested-off-Analyze]": [
-        {
-            "checksum": "c912cbafdd6cd91a9c112ed86393079c",
-            "size": 10384,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nested-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_nested-off-Debug]": [
-        {
-            "checksum": "2890c347bf75428a6486a6f073ee3d5a",
-            "size": 4286,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nested-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_nested-off-Plan]": [
-        {
-            "checksum": "c912cbafdd6cd91a9c112ed86393079c",
-            "size": 10384,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nested-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_nested-off-Results]": [
-        {
-            "checksum": "09200aace767f3f1741fb5deb8c8928b",
-            "size": 1252,
-            "uri": "https://{canondata_backend}/937458/55f0812aa779206291ac8c4b283b7a80472fd1fb/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_nested-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_norename--Analyze]": [
-        {
-            "checksum": "6b5af753abf37d6ecb0d39abb632ade8",
-            "size": 13907,
-            "uri": "https://{canondata_backend}/1817427/0c40572784ba0c378f9763d962c3c5e8b7787ec6/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_norename--Debug]": [
-        {
-            "checksum": "003e95a491f990454ec6731b3eabd613",
-            "size": 5626,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_norename--Plan]": [
-        {
-            "checksum": "6b5af753abf37d6ecb0d39abb632ade8",
-            "size": 13907,
-            "uri": "https://{canondata_backend}/1871002/ecb1006531e1f9b13e35feb30ba820285342f340/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_norename--Results]": [],
-    "test.test[join-mergejoin_with_different_key_names_norename-off-Analyze]": [
-        {
-            "checksum": "98da974cd2dd2ad0901bc9be645bb63d",
-            "size": 14793,
-            "uri": "https://{canondata_backend}/1817427/0c40572784ba0c378f9763d962c3c5e8b7787ec6/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_norename-off-Debug]": [
-        {
-            "checksum": "907fc0669df961d84cdd6e8bdf64b9e0",
-            "size": 5170,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_norename-off-Plan]": [
-        {
-            "checksum": "98da974cd2dd2ad0901bc9be645bb63d",
-            "size": 14793,
-            "uri": "https://{canondata_backend}/1871002/ecb1006531e1f9b13e35feb30ba820285342f340/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-mergejoin_with_different_key_names_norename-off-Results]": [
-        {
-            "checksum": "dfaeda14022b141880b815e739bfbfc1",
-            "size": 14263,
-            "uri": "https://{canondata_backend}/937458/55f0812aa779206291ac8c4b283b7a80472fd1fb/resource.tar.gz#test.test_join-mergejoin_with_different_key_names_norename-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-pullup_exclusion-off-Analyze]": [
-        {
-            "checksum": "5def318f756d0aa7c146df030b6ff4a4",
-            "size": 7841,
-            "uri": "https://{canondata_backend}/1924537/8b609a36ae618dd93dae76d33a498930f0df8908/resource.tar.gz#test.test_join-pullup_exclusion-off-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-pullup_exclusion-off-Debug]": [
-        {
-            "checksum": "1c886943c403a2f5b22932631e0fa1c5",
-            "size": 3596,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-pullup_exclusion-off-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-pullup_exclusion-off-Plan]": [
-        {
-            "checksum": "5def318f756d0aa7c146df030b6ff4a4",
-            "size": 7841,
-            "uri": "https://{canondata_backend}/1924537/8b609a36ae618dd93dae76d33a498930f0df8908/resource.tar.gz#test.test_join-pullup_exclusion-off-Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-pullup_exclusion-off-Results]": [
-        {
-            "checksum": "d53a4db7e895896428a908c46db034e9",
-            "size": 2350,
-            "uri": "https://{canondata_backend}/937458/55f0812aa779206291ac8c4b283b7a80472fd1fb/resource.tar.gz#test.test_join-pullup_exclusion-off-Results_/results.txt"
-        }
-    ],
-    "test.test[join-pullup_inner--Analyze]": [
-        {
-            "checksum": "21b1cefd30e1410fbfbfcdbe51647898",
-            "size": 7016,
-            "uri": "https://{canondata_backend}/1924537/8b609a36ae618dd93dae76d33a498930f0df8908/resource.tar.gz#test.test_join-pullup_inner--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-pullup_inner--Debug]": [
-        {
-            "checksum": "4afc5c76383b9f74dc521484a374740e",
-            "size": 2827,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-pullup_inner--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-pullup_inner--Plan]": [
-        {
-            "checksum": "21b1cefd30e1410fbfbfcdbe51647898",
-            "size": 7016,
-            "uri": "https://{canondata_backend}/1924537/8b609a36ae618dd93dae76d33a498930f0df8908/resource.tar.gz#test.test_join-pullup_inner--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-pullup_inner--Results]": [],
-    "test.test[join-three_equalities--Analyze]": [
-        {
-            "checksum": "c16bb365a2cd02dd0c2c70f40b1d92e5",
-            "size": 7603,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-three_equalities--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[join-three_equalities--Debug]": [
-        {
-            "checksum": "e6135c9e2f53dd0658139f6739172210",
-            "size": 3699,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_join-three_equalities--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[join-three_equalities--Plan]": [
-        {
-            "checksum": "c16bb365a2cd02dd0c2c70f40b1d92e5",
-            "size": 7603,
-            "uri": "https://{canondata_backend}/1900335/a5a16b7313d07b162a608c1abeab1e68e6175117/resource.tar.gz#test.test_join-three_equalities--Plan_/plan.txt"
-        }
-    ],
-    "test.test[join-three_equalities--Results]": [],
-    "test.test[json-json_exists/example--Analyze]": [
-        {
-            "checksum": "f409bcc654cc43b2b4c278d9fbd1bac1",
-            "size": 16687,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_json-json_exists_example--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[json-json_exists/example--Debug]": [
-        {
-            "checksum": "381d24935e5bcc4ce2da206d1aacb2e2",
-            "size": 5483,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_json-json_exists_example--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[json-json_exists/example--Plan]": [
-        {
-            "checksum": "f409bcc654cc43b2b4c278d9fbd1bac1",
-            "size": 16687,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_json-json_exists_example--Plan_/plan.txt"
-        }
-    ],
-    "test.test[json-json_exists/example--Results]": [],
-    "test.test[json-json_query/passing_exception--Debug]": [],
-    "test.test[json-json_query/passing_exception--Plan]": [],
-    "test.test[json-json_query/passing_exception--Results]": [
-        {
-            "uri": "file://test.test_json-json_query_passing_exception--Results_/extracted"
-        }
-    ],
-    "test.test[json-json_value/on_empty_exception--Debug]": [],
-    "test.test[json-json_value/on_empty_exception--Plan]": [],
-    "test.test[json-json_value/on_empty_exception--Results]": [],
-    "test.test[key_filter-is_null--Analyze]": [
-        {
-            "checksum": "b913ead12af51bc046e1f3344ff5134c",
-            "size": 3730,
-            "uri": "https://{canondata_backend}/1871002/99771a64b313e4ed0d87c6e59cde6bafe069ce35/resource.tar.gz#test.test_key_filter-is_null--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[key_filter-is_null--Debug]": [
-        {
-            "checksum": "a661d71cfa574b9571e411c438324efa",
-            "size": 1680,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_key_filter-is_null--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[key_filter-is_null--Plan]": [
-        {
-            "checksum": "b913ead12af51bc046e1f3344ff5134c",
-            "size": 3730,
-            "uri": "https://{canondata_backend}/1817427/dd0485c09a30d742e18a0ec21502ddd405eb8be8/resource.tar.gz#test.test_key_filter-is_null--Plan_/plan.txt"
-        }
-    ],
-    "test.test[key_filter-is_null--Results]": [],
-    "test.test[like-like_clause_no_pattern-default.txt-Analyze]": [
-        {
-            "checksum": "8bbfbd5bf38d59be1f974dae24ccffc2",
-            "size": 4282,
-            "uri": "https://{canondata_backend}/1942671/03c23723b22c7621c14256361f488cfb15ee75e3/resource.tar.gz#test.test_like-like_clause_no_pattern-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[like-like_clause_no_pattern-default.txt-Debug]": [
-        {
-            "checksum": "8e3f3feb3167f360f8820dc11345380a",
-            "size": 1720,
-            "uri": "https://{canondata_backend}/1814674/65f4d58c5b2358f2ab558af11162f9a7adab9578/resource.tar.gz#test.test_like-like_clause_no_pattern-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[like-like_clause_no_pattern-default.txt-Plan]": [
-        {
-            "checksum": "8bbfbd5bf38d59be1f974dae24ccffc2",
-            "size": 4282,
-            "uri": "https://{canondata_backend}/1130705/20757ef3a83dd8dafce4369b1fa87cb0a0ae2b28/resource.tar.gz#test.test_like-like_clause_no_pattern-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[like-like_clause_no_pattern-default.txt-Results]": [],
-    "test.test[like-like_escape-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_like-like_escape-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[like-like_escape-default.txt-Debug]": [
-        {
-            "checksum": "196ccc13f90e02b142c05794f717019a",
-            "size": 1612,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_like-like_escape-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[like-like_escape-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_like-like_escape-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[like-like_escape-default.txt-Results]": [],
-    "test.test[limit-limit_offset-default.txt-Analyze]": [
-        {
-            "checksum": "45575257ecf05b7630468a0d3e5e246f",
-            "size": 5063,
-            "uri": "https://{canondata_backend}/1942671/03c23723b22c7621c14256361f488cfb15ee75e3/resource.tar.gz#test.test_limit-limit_offset-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[limit-limit_offset-default.txt-Debug]": [
-        {
-            "checksum": "542ccdb8753dcfe9807346d6152cf8ae",
-            "size": 1758,
-            "uri": "https://{canondata_backend}/1599023/d714848e02b570470fc7f4a8a1315869ac70b513/resource.tar.gz#test.test_limit-limit_offset-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[limit-limit_offset-default.txt-Plan]": [
-        {
-            "checksum": "45575257ecf05b7630468a0d3e5e246f",
-            "size": 5063,
-            "uri": "https://{canondata_backend}/1130705/20757ef3a83dd8dafce4369b1fa87cb0a0ae2b28/resource.tar.gz#test.test_limit-limit_offset-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[limit-limit_offset-default.txt-Results]": [],
-    "test.test[optimizers-length_over_merge--Analyze]": [
-        {
-            "checksum": "212be881133a20b5b73ef1250dbeda51",
-            "size": 960,
-            "uri": "https://{canondata_backend}/1817427/0c40572784ba0c378f9763d962c3c5e8b7787ec6/resource.tar.gz#test.test_optimizers-length_over_merge--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[optimizers-length_over_merge--Debug]": [
-        {
-            "checksum": "61f1a0b279a64876139c836931eabd3c",
-            "size": 2711,
-            "uri": "https://{canondata_backend}/1871102/a3f4b73c2abee8d4bf99b0344946712ef43a9193/resource.tar.gz#test.test_optimizers-length_over_merge--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[optimizers-length_over_merge--Plan]": [
-        {
-            "checksum": "212be881133a20b5b73ef1250dbeda51",
-            "size": 960,
-            "uri": "https://{canondata_backend}/1784117/392a16b8c9d13c4b4284c3048ca355142cf1aa9e/resource.tar.gz#test.test_optimizers-length_over_merge--Plan_/plan.txt"
-        }
-    ],
-    "test.test[optimizers-length_over_merge--Results]": [],
-    "test.test[optimizers-nonselected_direct_row--Analyze]": [
-        {
-            "checksum": "21d488d1bd97edfd61f635b241042dbb",
-            "size": 4212,
-            "uri": "https://{canondata_backend}/1903280/8bd8bc14ef8f83b16c090d98fff065b7f9ded199/resource.tar.gz#test.test_optimizers-nonselected_direct_row--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[optimizers-nonselected_direct_row--Debug]": [
-        {
-            "checksum": "b7f95e731062af963418048e441045b8",
-            "size": 1948,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_optimizers-nonselected_direct_row--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[optimizers-nonselected_direct_row--Plan]": [
-        {
-            "checksum": "21d488d1bd97edfd61f635b241042dbb",
-            "size": 4212,
-            "uri": "https://{canondata_backend}/1031349/f83156e7d6ffdceda631624d3f808fe3c1b393a8/resource.tar.gz#test.test_optimizers-nonselected_direct_row--Plan_/plan.txt"
-        }
-    ],
-    "test.test[optimizers-nonselected_direct_row--Results]": [],
-    "test.test[optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Analyze]": [
-        {
-            "checksum": "bf4a2fd3e3145898a8861a0acf63c4dd",
-            "size": 30600,
-            "uri": "https://{canondata_backend}/1889210/12a5d5a4658cc8076f89deb914f7f1f0f6ad647f/resource.tar.gz#test.test_optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Debug]": [
-        {
-            "checksum": "7519c46adfdbd946c069599cc67864df",
-            "size": 14802,
-            "uri": "https://{canondata_backend}/1889210/12a5d5a4658cc8076f89deb914f7f1f0f6ad647f/resource.tar.gz#test.test_optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Plan]": [
-        {
-            "checksum": "807aedb1aebb2e9740c51aee16a20727",
-            "size": 25483,
-            "uri": "https://{canondata_backend}/1889210/12a5d5a4658cc8076f89deb914f7f1f0f6ad647f/resource.tar.gz#test.test_optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[optimizers-yql-18408_filter_multiusage_pushdown-default.txt-Results]": [],
-    "test.test[optimizers-yql-6008_limit_after_map--Analyze]": [
-        {
-            "checksum": "1b0bbba0913f01708bb7f7e3cb757bd5",
-            "size": 8568,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_optimizers-yql-6008_limit_after_map--Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_optimizers-yql-6008_limit_after_map--Analyze_/extracted"
-        }
-    ],
-    "test.test[optimizers-yql-6008_limit_after_map--Debug]": [
-        {
-            "checksum": "65e0cd9f729b28cd22bec98cb3622c87",
-            "size": 3468,
-            "uri": "https://{canondata_backend}/1781765/e2adc29b0cfedd2d07b9052970265a4b4f24285c/resource.tar.gz#test.test_optimizers-yql-6008_limit_after_map--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[optimizers-yql-6008_limit_after_map--Plan]": [
-        {
-            "checksum": "7aad5ffe6b4e797c392c58a155eb4494",
-            "size": 8690,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_optimizers-yql-6008_limit_after_map--Plan_/plan.txt"
-        }
-    ],
-    "test.test[optimizers-yql-6008_limit_after_map--Results]": [
-        {
-            "uri": "file://test.test_optimizers-yql-6008_limit_after_map--Results_/extracted"
-        }
-    ],
-    "test.test[optimizers-yql-8953_logical_fuse_with_table_props--Analyze]": [
-        {
-            "checksum": "4a821255d8e9c2c97171595dd90e130f",
-            "size": 6643,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_optimizers-yql-8953_logical_fuse_with_table_props--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[optimizers-yql-8953_logical_fuse_with_table_props--Debug]": [
-        {
-            "checksum": "df81654bc258b3a04795f7928a2f02b7",
-            "size": 3896,
-            "uri": "https://{canondata_backend}/1889210/97759537b96117d0b783b60421791e318b61fc40/resource.tar.gz#test.test_optimizers-yql-8953_logical_fuse_with_table_props--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[optimizers-yql-8953_logical_fuse_with_table_props--Plan]": [
-        {
-            "checksum": "4a821255d8e9c2c97171595dd90e130f",
-            "size": 6643,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_optimizers-yql-8953_logical_fuse_with_table_props--Plan_/plan.txt"
-        }
-    ],
-    "test.test[optimizers-yql-8953_logical_fuse_with_table_props--Results]": [],
-    "test.test[order_by-literal_complex--Analyze]": [
-        {
-            "checksum": "5d1304af7d689a64915aefebf84569b3",
-            "size": 3651,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_order_by-literal_complex--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[order_by-literal_complex--Debug]": [
-        {
-            "checksum": "693c08d9422f3afab88a4d615544a782",
-            "size": 1960,
-            "uri": "https://{canondata_backend}/1781765/e2adc29b0cfedd2d07b9052970265a4b4f24285c/resource.tar.gz#test.test_order_by-literal_complex--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[order_by-literal_complex--Plan]": [
-        {
-            "checksum": "5d1304af7d689a64915aefebf84569b3",
-            "size": 3651,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_order_by-literal_complex--Plan_/plan.txt"
-        }
-    ],
-    "test.test[order_by-literal_complex--Results]": [],
-    "test.test[order_by-order_by_expr_over_sorted_table--Analyze]": [
-        {
-            "checksum": "3dac5ad9b44367080ca2ce4643be502c",
-            "size": 4222,
-            "uri": "https://{canondata_backend}/1936947/eb45622f6e742230b1613aebb0bac678cc96fb83/resource.tar.gz#test.test_order_by-order_by_expr_over_sorted_table--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[order_by-order_by_expr_over_sorted_table--Debug]": [
-        {
-            "checksum": "87fdb09c6f964378b3b2bd8ab8b12b58",
-            "size": 2080,
-            "uri": "https://{canondata_backend}/1936947/eb45622f6e742230b1613aebb0bac678cc96fb83/resource.tar.gz#test.test_order_by-order_by_expr_over_sorted_table--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[order_by-order_by_expr_over_sorted_table--Plan]": [
-        {
-            "checksum": "3dac5ad9b44367080ca2ce4643be502c",
-            "size": 4222,
-            "uri": "https://{canondata_backend}/1936947/eb45622f6e742230b1613aebb0bac678cc96fb83/resource.tar.gz#test.test_order_by-order_by_expr_over_sorted_table--Plan_/plan.txt"
-        }
-    ],
-    "test.test[order_by-order_by_expr_over_sorted_table--Results]": [],
-    "test.test[order_by-order_by_expr_simple--Analyze]": [
-        {
-            "checksum": "6526cebe8a5a19cf43560626498ad29c",
-            "size": 4252,
-            "uri": "https://{canondata_backend}/1899731/2a0d010c88d3668b64d2eceea551d15c4ea643a5/resource.tar.gz#test.test_order_by-order_by_expr_simple--Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_order_by-order_by_expr_simple--Analyze_/extracted"
-        }
-    ],
-    "test.test[order_by-order_by_expr_simple--Debug]": [
-        {
-            "checksum": "285b3a4175e9b072edbb39a037c0176b",
-            "size": 1591,
-            "uri": "https://{canondata_backend}/1899731/2a0d010c88d3668b64d2eceea551d15c4ea643a5/resource.tar.gz#test.test_order_by-order_by_expr_simple--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[order_by-order_by_expr_simple--Plan]": [
-        {
-            "checksum": "6526cebe8a5a19cf43560626498ad29c",
-            "size": 4252,
-            "uri": "https://{canondata_backend}/1899731/2a0d010c88d3668b64d2eceea551d15c4ea643a5/resource.tar.gz#test.test_order_by-order_by_expr_simple--Plan_/plan.txt"
-        }
-    ],
-    "test.test[order_by-order_by_expr_simple--Results]": [
-        {
-            "uri": "file://test.test_order_by-order_by_expr_simple--Results_/extracted"
-        }
-    ],
-    "test.test[order_by-sort_with_take_limit--Analyze]": [
-        {
-            "checksum": "72a01c202c458a8e4bef611782656a60",
-            "size": 5534,
-            "uri": "https://{canondata_backend}/1773845/febac43c1591548874d2face922cfe7263d26e3d/resource.tar.gz#test.test_order_by-sort_with_take_limit--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[order_by-sort_with_take_limit--Debug]": [
-        {
-            "checksum": "250d58ef33e054aefc8f3267394212d4",
-            "size": 2130,
-            "uri": "https://{canondata_backend}/1781765/e2adc29b0cfedd2d07b9052970265a4b4f24285c/resource.tar.gz#test.test_order_by-sort_with_take_limit--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[order_by-sort_with_take_limit--Plan]": [
-        {
-            "checksum": "72a01c202c458a8e4bef611782656a60",
-            "size": 5534,
-            "uri": "https://{canondata_backend}/1923547/408f17dd7de3f1f4f32904831b08b3c57e38a7c7/resource.tar.gz#test.test_order_by-sort_with_take_limit--Plan_/plan.txt"
-        }
-    ],
-    "test.test[order_by-sort_with_take_limit--Results]": [],
-    "test.test[pg-all_data--Analyze]": [
-        {
-            "checksum": "c5803b9f3080a48130c30f8602733de3",
-            "size": 4575,
-            "uri": "https://{canondata_backend}/1599023/6add8cb499cc3b1dca20f22c9b17ae29fbfe727d/resource.tar.gz#test.test_pg-all_data--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-all_data--Debug]": [
-        {
-            "checksum": "8fabd9ef07df1dc7f87bf4f852b9e0bf",
-            "size": 5441,
-            "uri": "https://{canondata_backend}/1599023/6add8cb499cc3b1dca20f22c9b17ae29fbfe727d/resource.tar.gz#test.test_pg-all_data--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-all_data--Plan]": [
-        {
-            "checksum": "c5803b9f3080a48130c30f8602733de3",
-            "size": 4575,
-            "uri": "https://{canondata_backend}/1599023/6add8cb499cc3b1dca20f22c9b17ae29fbfe727d/resource.tar.gz#test.test_pg-all_data--Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-all_data--Results]": [],
-    "test.test[pg-drop_table--Analyze]": [
-        {
-            "checksum": "5ba98022094d906a6acb7cf1b61f14ed",
-            "size": 7494,
-            "uri": "https://{canondata_backend}/1130705/9726e618a91dba7201c15a2e45d93b6d8fd96178/resource.tar.gz#test.test_pg-drop_table--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-drop_table--Debug]": [
-        {
-            "checksum": "c2eb8af78ae6ffebf5028aa5de4c948e",
-            "size": 2286,
-            "uri": "https://{canondata_backend}/1781765/e2adc29b0cfedd2d07b9052970265a4b4f24285c/resource.tar.gz#test.test_pg-drop_table--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-drop_table--Plan]": [
-        {
-            "checksum": "5ba98022094d906a6acb7cf1b61f14ed",
-            "size": 7494,
-            "uri": "https://{canondata_backend}/1130705/9726e618a91dba7201c15a2e45d93b6d8fd96178/resource.tar.gz#test.test_pg-drop_table--Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-drop_table--Results]": [],
-    "test.test[pg-expr_op_array-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1600758/eca34ca0feab807128d7b13432dc1134d34cb65c/resource.tar.gz#test.test_pg-expr_op_array-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-expr_op_array-default.txt-Debug]": [
-        {
-            "checksum": "8438d0527a163379abb64d5e038f0bbb",
-            "size": 1622,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-expr_op_array-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-expr_op_array-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1600758/eca34ca0feab807128d7b13432dc1134d34cb65c/resource.tar.gz#test.test_pg-expr_op_array-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-expr_op_array-default.txt-Results]": [],
-    "test.test[pg-in_sorted-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1903280/55ee056094134146d6b228e0e2827a4a0b1bae59/resource.tar.gz#test.test_pg-in_sorted-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_pg-in_sorted-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[pg-in_sorted-default.txt-Debug]": [
-        {
-            "checksum": "d360a5ebc748c80fab84e7966672db4e",
-            "size": 383,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_pg-in_sorted-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-in_sorted-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1903280/55ee056094134146d6b228e0e2827a4a0b1bae59/resource.tar.gz#test.test_pg-in_sorted-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-in_sorted-default.txt-Results]": [
-        {
-            "uri": "file://test.test_pg-in_sorted-default.txt-Results_/extracted"
-        }
-    ],
-    "test.test[pg-join_using_table_used_order-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1600758/5edd0ab283f8fdd1cf03c1031ca810ce8554c459/resource.tar.gz#test.test_pg-join_using_table_used_order-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-join_using_table_used_order-default.txt-Debug]": [
-        {
-            "checksum": "84c32419c74f98f22181a49b6b205142",
-            "size": 1621,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-join_using_table_used_order-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-join_using_table_used_order-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1600758/5edd0ab283f8fdd1cf03c1031ca810ce8554c459/resource.tar.gz#test.test_pg-join_using_table_used_order-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-join_using_table_used_order-default.txt-Results]": [],
-    "test.test[pg-order_by_agg_input_columns_aggr-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/212715/89a4a534b98f0006d500be0545402722592e483c/resource.tar.gz#test.test_pg-order_by_agg_input_columns_aggr-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-order_by_agg_input_columns_aggr-default.txt-Debug]": [
-        {
-            "checksum": "54e993388583172be19fef042f0b2a2e",
-            "size": 1526,
-            "uri": "https://{canondata_backend}/1942278/423e9b8a01d3f9d43497e4cb2ee7041e47daf356/resource.tar.gz#test.test_pg-order_by_agg_input_columns_aggr-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-order_by_agg_input_columns_aggr-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/212715/89a4a534b98f0006d500be0545402722592e483c/resource.tar.gz#test.test_pg-order_by_agg_input_columns_aggr-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-order_by_agg_input_columns_aggr-default.txt-Results]": [],
-    "test.test[pg-order_by_input_columns_qual-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/995452/916a3abc0188ce4b46268a98f2f6487c53d8a14c/resource.tar.gz#test.test_pg-order_by_input_columns_qual-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-order_by_input_columns_qual-default.txt-Debug]": [
-        {
-            "checksum": "6fcc17d4b9d396b643f034ae4def3ea5",
-            "size": 661,
-            "uri": "https://{canondata_backend}/995452/916a3abc0188ce4b46268a98f2f6487c53d8a14c/resource.tar.gz#test.test_pg-order_by_input_columns_qual-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-order_by_input_columns_qual-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/995452/916a3abc0188ce4b46268a98f2f6487c53d8a14c/resource.tar.gz#test.test_pg-order_by_input_columns_qual-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-order_by_input_columns_qual-default.txt-Results]": [],
-    "test.test[pg-pg_interval_literal-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1931696/0e52d5b9778b2943992171dc32150f40daf8bfa5/resource.tar.gz#test.test_pg-pg_interval_literal-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-pg_interval_literal-default.txt-Debug]": [
-        {
-            "checksum": "a0ecb8f77524fe4d62db88f2476b1511",
-            "size": 808,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-pg_interval_literal-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-pg_interval_literal-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1931696/0e52d5b9778b2943992171dc32150f40daf8bfa5/resource.tar.gz#test.test_pg-pg_interval_literal-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-pg_interval_literal-default.txt-Results]": [],
-    "test.test[pg-pg_iterate-default.txt-Analyze]": [
-        {
-            "checksum": "b2a2eb5d6b0a138ee924c128fc7738ef",
-            "size": 1331,
-            "uri": "https://{canondata_backend}/1916746/21c597d64388f6c41b4782746fbaf7f1b842bcda/resource.tar.gz#test.test_pg-pg_iterate-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-pg_iterate-default.txt-Debug]": [
-        {
-            "checksum": "99296cf8319e202900db3eb7f8dc163a",
-            "size": 2202,
-            "uri": "https://{canondata_backend}/1916746/21c597d64388f6c41b4782746fbaf7f1b842bcda/resource.tar.gz#test.test_pg-pg_iterate-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-pg_iterate-default.txt-Plan]": [
-        {
-            "checksum": "b2a2eb5d6b0a138ee924c128fc7738ef",
-            "size": 1331,
-            "uri": "https://{canondata_backend}/1916746/21c597d64388f6c41b4782746fbaf7f1b842bcda/resource.tar.gz#test.test_pg-pg_iterate-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-pg_iterate-default.txt-Results]": [],
-    "test.test[pg-pg_like_opt-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1937001/504ba0e32db3717a9a770414a8a028855403e56f/resource.tar.gz#test.test_pg-pg_like_opt-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-pg_like_opt-default.txt-Debug]": [
-        {
-            "checksum": "8cbe1c4d288cd91a010850f5fc991eaf",
-            "size": 660,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-pg_like_opt-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-pg_like_opt-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1937001/504ba0e32db3717a9a770414a8a028855403e56f/resource.tar.gz#test.test_pg-pg_like_opt-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-pg_like_opt-default.txt-Results]": [],
-    "test.test[pg-select_from_columns_qstar-default.txt-Analyze]": [
-        {
-            "checksum": "fc5340bdc777120c01eb5f7df2b5c38d",
-            "size": 3742,
-            "uri": "https://{canondata_backend}/1784826/876422ee5a31dd410c0abb7a3417f21835990576/resource.tar.gz#test.test_pg-select_from_columns_qstar-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_from_columns_qstar-default.txt-Debug]": [
-        {
-            "checksum": "11129ffdc59f32858ccea74dedb0f31a",
-            "size": 1555,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-select_from_columns_qstar-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-select_from_columns_qstar-default.txt-Plan]": [
-        {
-            "checksum": "fc5340bdc777120c01eb5f7df2b5c38d",
-            "size": 3742,
-            "uri": "https://{canondata_backend}/1784826/876422ee5a31dd410c0abb7a3417f21835990576/resource.tar.gz#test.test_pg-select_from_columns_qstar-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_from_columns_qstar-default.txt-Results]": [],
-    "test.test[pg-select_intersect_all-default.txt-Analyze]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1777230/166430366a3ee35292b0a0e4ec6ba38e166ec8c5/resource.tar.gz#test.test_pg-select_intersect_all-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_intersect_all-default.txt-Debug]": [
-        {
-            "checksum": "0569d2bf1cd06848b29012bd2ffc487d",
-            "size": 1476,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-select_intersect_all-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-select_intersect_all-default.txt-Plan]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1777230/166430366a3ee35292b0a0e4ec6ba38e166ec8c5/resource.tar.gz#test.test_pg-select_intersect_all-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_intersect_all-default.txt-Results]": [],
-    "test.test[pg-select_join_full_equi_and_one-default.txt-Analyze]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1889210/2d9182e0bd6dcb9ba0a784a38b456240cb386874/resource.tar.gz#test.test_pg-select_join_full_equi_and_one-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_join_full_equi_and_one-default.txt-Debug]": [
-        {
-            "checksum": "7b59bf677636db910c99489971ccaf56",
-            "size": 2402,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-select_join_full_equi_and_one-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-select_join_full_equi_and_one-default.txt-Plan]": [
-        {
-            "checksum": "a3b64a2cf9903b3868a2dd88a18fc46e",
-            "size": 922,
-            "uri": "https://{canondata_backend}/1889210/2d9182e0bd6dcb9ba0a784a38b456240cb386874/resource.tar.gz#test.test_pg-select_join_full_equi_and_one-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_join_full_equi_and_one-default.txt-Results]": [],
-    "test.test[pg-select_subquery_scalar-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1923547/6bb261b87a2d0ef492e8f1a5fd897369c7118506/resource.tar.gz#test.test_pg-select_subquery_scalar-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_subquery_scalar-default.txt-Debug]": [
-        {
-            "checksum": "37c7ecc2c88f751afeb637f8d15fb1d8",
-            "size": 405,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-select_subquery_scalar-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-select_subquery_scalar-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1923547/6bb261b87a2d0ef492e8f1a5fd897369c7118506/resource.tar.gz#test.test_pg-select_subquery_scalar-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_subquery_scalar-default.txt-Results]": [],
-    "test.test[pg-select_unionall_self-default.txt-Analyze]": [
-        {
-            "checksum": "ed16f0eef893aa31e1308fa2553012f0",
-            "size": 4025,
-            "uri": "https://{canondata_backend}/1599023/65f04a32ef767a9d58baa3504831aac82a785d9c/resource.tar.gz#test.test_pg-select_unionall_self-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_unionall_self-default.txt-Debug]": [
-        {
-            "checksum": "bcfb237c5edf426a72ead2993cfbf5e9",
-            "size": 1424,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-select_unionall_self-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-select_unionall_self-default.txt-Plan]": [
-        {
-            "checksum": "ed16f0eef893aa31e1308fa2553012f0",
-            "size": 4025,
-            "uri": "https://{canondata_backend}/1599023/65f04a32ef767a9d58baa3504831aac82a785d9c/resource.tar.gz#test.test_pg-select_unionall_self-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-select_unionall_self-default.txt-Results]": [],
-    "test.test[pg-sublink_order_exists_corr-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1937027/d0866b9a79f4fc7bab36a1975d074abe641f546b/resource.tar.gz#test.test_pg-sublink_order_exists_corr-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-sublink_order_exists_corr-default.txt-Debug]": [
-        {
-            "checksum": "ba7f6df951e8b8908dd3a6fc3b11b886",
-            "size": 1926,
-            "uri": "https://{canondata_backend}/1899731/2a0d010c88d3668b64d2eceea551d15c4ea643a5/resource.tar.gz#test.test_pg-sublink_order_exists_corr-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-sublink_order_exists_corr-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1937027/d0866b9a79f4fc7bab36a1975d074abe641f546b/resource.tar.gz#test.test_pg-sublink_order_exists_corr-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-sublink_order_exists_corr-default.txt-Results]": [],
-    "test.test[pg-sublink_where_expr-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1817427/c76f32a844a68e74a51674b34fdd7e00e417e1e1/resource.tar.gz#test.test_pg-sublink_where_expr-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-sublink_where_expr-default.txt-Debug]": [
-        {
-            "checksum": "40955af3242c794d47aa6e5406f47ff0",
-            "size": 444,
-            "uri": "https://{canondata_backend}/995452/b8907c48ceee21fc9f22e90025a80d21b7f812d0/resource.tar.gz#test.test_pg-sublink_where_expr-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-sublink_where_expr-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1817427/c76f32a844a68e74a51674b34fdd7e00e417e1e1/resource.tar.gz#test.test_pg-sublink_where_expr-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-sublink_where_expr-default.txt-Results]": [],
-    "test.test[pg-tpcds-q10-default.txt-Analyze]": [
-        {
-            "checksum": "212be881133a20b5b73ef1250dbeda51",
-            "size": 960,
-            "uri": "https://{canondata_backend}/1942278/f85b5ff273f15c86ee649e6dcb392b4194b897cc/resource.tar.gz#test.test_pg-tpcds-q10-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-tpcds-q10-default.txt-Debug]": [
-        {
-            "checksum": "b3b804f9c6378ada36ba575099308d48",
-            "size": 1239,
-            "uri": "https://{canondata_backend}/1871102/7f5d56703d2b94fe32fa31a38a20ab8e2a4279f2/resource.tar.gz#test.test_pg-tpcds-q10-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-tpcds-q10-default.txt-Plan]": [
-        {
-            "checksum": "212be881133a20b5b73ef1250dbeda51",
-            "size": 960,
-            "uri": "https://{canondata_backend}/1942278/f85b5ff273f15c86ee649e6dcb392b4194b897cc/resource.tar.gz#test.test_pg-tpcds-q10-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-tpcds-q10-default.txt-Results]": [],
-    "test.test[pg-tpcds-q29-default.txt-Analyze]": [
-        {
-            "checksum": "212be881133a20b5b73ef1250dbeda51",
-            "size": 960,
-            "uri": "https://{canondata_backend}/1942278/f85b5ff273f15c86ee649e6dcb392b4194b897cc/resource.tar.gz#test.test_pg-tpcds-q29-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-tpcds-q29-default.txt-Debug]": [
-        {
-            "checksum": "dc580a986fc9d9d660d7d19a77b7ee09",
-            "size": 935,
-            "uri": "https://{canondata_backend}/1871102/7f5d56703d2b94fe32fa31a38a20ab8e2a4279f2/resource.tar.gz#test.test_pg-tpcds-q29-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-tpcds-q29-default.txt-Plan]": [
-        {
-            "checksum": "212be881133a20b5b73ef1250dbeda51",
-            "size": 960,
-            "uri": "https://{canondata_backend}/1942278/f85b5ff273f15c86ee649e6dcb392b4194b897cc/resource.tar.gz#test.test_pg-tpcds-q29-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-tpcds-q29-default.txt-Results]": [],
-    "test.test[pg-tpcds-q61-default.txt-Analyze]": [
-        {
-            "checksum": "212be881133a20b5b73ef1250dbeda51",
-            "size": 960,
-            "uri": "https://{canondata_backend}/1942278/f85b5ff273f15c86ee649e6dcb392b4194b897cc/resource.tar.gz#test.test_pg-tpcds-q61-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-tpcds-q61-default.txt-Debug]": [
-        {
-            "checksum": "07d277269dc4fc79c4e4ccda54773e34",
-            "size": 2596,
-            "uri": "https://{canondata_backend}/1130705/2c54111b512b354592ae02009bd206b6b4bc7a92/resource.tar.gz#test.test_pg-tpcds-q61-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-tpcds-q61-default.txt-Plan]": [
-        {
-            "checksum": "212be881133a20b5b73ef1250dbeda51",
-            "size": 960,
-            "uri": "https://{canondata_backend}/1942278/f85b5ff273f15c86ee649e6dcb392b4194b897cc/resource.tar.gz#test.test_pg-tpcds-q61-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-tpcds-q61-default.txt-Results]": [],
-    "test.test[pg-tpch-q09-default.txt-Analyze]": [
-        {
-            "checksum": "f2d52300172b26a0a218b8dacd8f9cc3",
-            "size": 19461,
-            "uri": "https://{canondata_backend}/1924537/8b609a36ae618dd93dae76d33a498930f0df8908/resource.tar.gz#test.test_pg-tpch-q09-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-tpch-q09-default.txt-Debug]": [
-        {
-            "checksum": "be9680a4f9cbc57e2580bc01b9591625",
-            "size": 15679,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_pg-tpch-q09-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-tpch-q09-default.txt-Plan]": [
-        {
-            "checksum": "f2d52300172b26a0a218b8dacd8f9cc3",
-            "size": 19461,
-            "uri": "https://{canondata_backend}/1924537/8b609a36ae618dd93dae76d33a498930f0df8908/resource.tar.gz#test.test_pg-tpch-q09-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-tpch-q09-default.txt-Results]": [],
-    "test.test[pg_catalog-pg_set_config-default.txt-Analyze]": [
-        {
-            "checksum": "4eaabd8e0d2437ccd8ba8311ee9b195d",
-            "size": 1357,
-            "uri": "https://{canondata_backend}/1937001/ceb29095b5e35ed4cc1eb104072815b0be7ac715/resource.tar.gz#test.test_pg_catalog-pg_set_config-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg_catalog-pg_set_config-default.txt-Debug]": [
-        {
-            "checksum": "dfb94a7d4f2793b26bed85f68e5454ce",
-            "size": 852,
-            "uri": "https://{canondata_backend}/1942100/7cc0999fbc2528b08c47f3289c99f1f628ae5fd4/resource.tar.gz#test.test_pg_catalog-pg_set_config-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg_catalog-pg_set_config-default.txt-Plan]": [
-        {
-            "checksum": "4eaabd8e0d2437ccd8ba8311ee9b195d",
-            "size": 1357,
-            "uri": "https://{canondata_backend}/1937001/ceb29095b5e35ed4cc1eb104072815b0be7ac715/resource.tar.gz#test.test_pg_catalog-pg_set_config-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg_catalog-pg_set_config-default.txt-Results]": [],
-    "test.test[produce-reduce_all-default.txt-Analyze]": [
-        {
-            "checksum": "9bd46d79daaa9520002fc1a9f8ead7ad",
-            "size": 3972,
-            "uri": "https://{canondata_backend}/1936273/5c7aadbc9513617ac94bd8f103a74bc39b4edfe5/resource.tar.gz#test.test_produce-reduce_all-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_produce-reduce_all-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[produce-reduce_all-default.txt-Debug]": [
-        {
-            "checksum": "7e100c1714c17e22ac9d0395c1739f4c",
-            "size": 2177,
-            "uri": "https://{canondata_backend}/1871002/6a2014c70e9b412ca99aa36a7e7375d181155757/resource.tar.gz#test.test_produce-reduce_all-default.txt-Debug_/opt.yql"
-        }
-    ],
-    "test.test[produce-reduce_all-default.txt-Plan]": [
-        {
-            "checksum": "93e95a73008f0bc189adde7ed15e3f63",
-            "size": 3972,
-            "uri": "https://{canondata_backend}/1936947/8207550781992515886b573c884a057b16fa83e3/resource.tar.gz#test.test_produce-reduce_all-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[produce-reduce_all-default.txt-Results]": [
-        {
-            "checksum": "36fe7e20767b0bd908f1668222a3178e",
-            "size": 671,
-            "uri": "https://{canondata_backend}/1031349/eb01bd7ff66ea4e3791b69ec15b5a2ac35547ace/resource.tar.gz#test.test_produce-reduce_all-default.txt-Results_/results.txt"
-        }
-    ],
-    "test.test[produce-reduce_subfields--Analyze]": [
-        {
-            "checksum": "ef3cb2242d7cb8e39d6180e17f5a8d1b",
-            "size": 4264,
-            "uri": "https://{canondata_backend}/1917492/f6af24e9333bc438fcad14a4e8bac6e6b0e07d87/resource.tar.gz#test.test_produce-reduce_subfields--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[produce-reduce_subfields--Debug]": [
-        {
-            "checksum": "7495d0e10a554a9f648857d3b4f9a891",
-            "size": 2169,
-            "uri": "https://{canondata_backend}/1031349/cb7f0d6f26f3c006a7ca4ee3cb2fee451343f519/resource.tar.gz#test.test_produce-reduce_subfields--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[produce-reduce_subfields--Plan]": [
-        {
-            "checksum": "ef3cb2242d7cb8e39d6180e17f5a8d1b",
-            "size": 4264,
-            "uri": "https://{canondata_backend}/1784117/27be18c4c655d803ac4ad0ec88e5308caa093c37/resource.tar.gz#test.test_produce-reduce_subfields--Plan_/plan.txt"
-        }
-    ],
-    "test.test[produce-reduce_subfields--Results]": [],
-    "test.test[produce-reduce_with_python-default.txt-Analyze]": [
-        {
-            "checksum": "e3c30fb055822c3b7989f4938092dd59",
-            "size": 4863,
-            "uri": "https://{canondata_backend}/1917492/f6af24e9333bc438fcad14a4e8bac6e6b0e07d87/resource.tar.gz#test.test_produce-reduce_with_python-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[produce-reduce_with_python-default.txt-Debug]": [
-        {
-            "checksum": "f26a027ce1884912d2b213289bce3738",
-            "size": 2306,
-            "uri": "https://{canondata_backend}/1031349/cb7f0d6f26f3c006a7ca4ee3cb2fee451343f519/resource.tar.gz#test.test_produce-reduce_with_python-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[produce-reduce_with_python-default.txt-Plan]": [
-        {
-            "checksum": "e3c30fb055822c3b7989f4938092dd59",
-            "size": 4863,
-            "uri": "https://{canondata_backend}/1130705/20757ef3a83dd8dafce4369b1fa87cb0a0ae2b28/resource.tar.gz#test.test_produce-reduce_with_python-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[produce-reduce_with_python-default.txt-Results]": [],
-    "test.test[sampling-bind_expr_subquery-default.txt-Analyze]": [
-        {
-            "checksum": "52153b39639de8b55659620856cfe364",
-            "size": 4232,
-            "uri": "https://{canondata_backend}/1937150/33871135ec615a5b145f2dd1de63f51229e4902b/resource.tar.gz#test.test_sampling-bind_expr_subquery-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[sampling-bind_expr_subquery-default.txt-Debug]": [
-        {
-            "checksum": "c2ab062f025fb1449fa130224a858252",
-            "size": 1504,
-            "uri": "https://{canondata_backend}/1814674/65f4d58c5b2358f2ab558af11162f9a7adab9578/resource.tar.gz#test.test_sampling-bind_expr_subquery-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[sampling-bind_expr_subquery-default.txt-Plan]": [
-        {
-            "checksum": "52153b39639de8b55659620856cfe364",
-            "size": 4232,
-            "uri": "https://{canondata_backend}/1773845/153cf0652cafcb3f7d3b789e3a4ceb4a9f7cfccf/resource.tar.gz#test.test_sampling-bind_expr_subquery-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[sampling-bind_expr_subquery-default.txt-Results]": [],
-    "test.test[sampling-sample-default.txt-Analyze]": [
-        {
-            "checksum": "e8f201d2a8a9bec0b35c5b959be1c92a",
-            "size": 4339,
-            "uri": "https://{canondata_backend}/212715/3f9199021f498ba2943fb7c0535d2ebc21914487/resource.tar.gz#test.test_sampling-sample-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[sampling-sample-default.txt-Debug]": [
-        {
-            "checksum": "57411f2988a4c046aa97eee538351d08",
-            "size": 1819,
-            "uri": "https://{canondata_backend}/212715/3f9199021f498ba2943fb7c0535d2ebc21914487/resource.tar.gz#test.test_sampling-sample-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[sampling-sample-default.txt-Plan]": [
-        {
-            "checksum": "e8f201d2a8a9bec0b35c5b959be1c92a",
-            "size": 4339,
-            "uri": "https://{canondata_backend}/212715/3f9199021f498ba2943fb7c0535d2ebc21914487/resource.tar.gz#test.test_sampling-sample-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[sampling-sample-default.txt-Results]": [],
-    "test.test[sampling-sort-default.txt-Analyze]": [
-        {
-            "checksum": "52153b39639de8b55659620856cfe364",
-            "size": 4232,
-            "uri": "https://{canondata_backend}/1942671/03c23723b22c7621c14256361f488cfb15ee75e3/resource.tar.gz#test.test_sampling-sort-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[sampling-sort-default.txt-Debug]": [
-        {
-            "checksum": "abbe4a19c934a02cb9fac3b16021cbf1",
-            "size": 1503,
-            "uri": "https://{canondata_backend}/1814674/65f4d58c5b2358f2ab558af11162f9a7adab9578/resource.tar.gz#test.test_sampling-sort-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[sampling-sort-default.txt-Plan]": [
-        {
-            "checksum": "52153b39639de8b55659620856cfe364",
-            "size": 4232,
-            "uri": "https://{canondata_backend}/1130705/20757ef3a83dd8dafce4369b1fa87cb0a0ae2b28/resource.tar.gz#test.test_sampling-sort-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[sampling-subquery_sort-default.txt-Analyze]": [
-        {
-            "checksum": "0f0658d4cb6fcef484dd34676f7939e7",
-            "size": 4280,
-            "uri": "https://{canondata_backend}/1942671/03c23723b22c7621c14256361f488cfb15ee75e3/resource.tar.gz#test.test_sampling-subquery_sort-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[sampling-subquery_sort-default.txt-Debug]": [
-        {
-            "checksum": "62b70e5928ac35354571d78552b05430",
-            "size": 1806,
-            "uri": "https://{canondata_backend}/1814674/65f4d58c5b2358f2ab558af11162f9a7adab9578/resource.tar.gz#test.test_sampling-subquery_sort-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[sampling-subquery_sort-default.txt-Plan]": [
-        {
-            "checksum": "0f0658d4cb6fcef484dd34676f7939e7",
-            "size": 4280,
-            "uri": "https://{canondata_backend}/1130705/20757ef3a83dd8dafce4369b1fa87cb0a0ae2b28/resource.tar.gz#test.test_sampling-subquery_sort-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[sampling-system_sampling--Analyze]": [
-        {
-            "checksum": "60404a525e34914520ce14827a5cd260",
-            "size": 33437,
-            "uri": "https://{canondata_backend}/1817427/93e2a35960dc2868ae1d1a162c39c2808f9cf84d/resource.tar.gz#test.test_sampling-system_sampling--Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_sampling-system_sampling--Analyze_/extracted"
-        }
-    ],
-    "test.test[sampling-system_sampling--Debug]": [
-        {
-            "checksum": "3d64570ab8d1718ea3f4abb89f140302",
-            "size": 9161,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_sampling-system_sampling--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[sampling-system_sampling--Plan]": [
-        {
-            "checksum": "75006695ecdf5446533b50d23faeac6c",
-            "size": 37163,
-            "uri": "https://{canondata_backend}/1925821/6a1d049e384919d8478e0dc1a9ff789c7f500f07/resource.tar.gz#test.test_sampling-system_sampling--Plan_/plan.txt"
-        }
-    ],
-    "test.test[schema-copy-other-Analyze]": [
-        {
-            "checksum": "088a4c504382098b21c58ac9e596fd93",
-            "size": 4906,
-            "uri": "https://{canondata_backend}/1923547/408f17dd7de3f1f4f32904831b08b3c57e38a7c7/resource.tar.gz#test.test_schema-copy-other-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[schema-copy-other-Debug]": [
-        {
-            "checksum": "7003696578309cf4112346ff562b121e",
-            "size": 2630,
-            "uri": "https://{canondata_backend}/1781765/e2adc29b0cfedd2d07b9052970265a4b4f24285c/resource.tar.gz#test.test_schema-copy-other-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[schema-copy-other-Plan]": [
-        {
-            "checksum": "088a4c504382098b21c58ac9e596fd93",
-            "size": 4906,
-            "uri": "https://{canondata_backend}/1923547/408f17dd7de3f1f4f32904831b08b3c57e38a7c7/resource.tar.gz#test.test_schema-copy-other-Plan_/plan.txt"
-        }
-    ],
-    "test.test[schema-copy-other-Results]": [],
-    "test.test[schema-copy-yamred_dsv_raw-Analyze]": [
-        {
-            "checksum": "a22a07e928d86f5a7b18a2135760f8a3",
-            "size": 5470,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_schema-copy-yamred_dsv_raw-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_schema-copy-yamred_dsv_raw-Analyze_/extracted"
-        }
-    ],
-    "test.test[schema-copy-yamred_dsv_raw-Debug]": [
-        {
-            "checksum": "741d8fdb22b6618500c43b7e730169c2",
-            "size": 1917,
-            "uri": "https://{canondata_backend}/1781765/e2adc29b0cfedd2d07b9052970265a4b4f24285c/resource.tar.gz#test.test_schema-copy-yamred_dsv_raw-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[schema-copy-yamred_dsv_raw-Plan]": [
-        {
-            "checksum": "ccd242cd805d76e67cc1a8e59179ec61",
-            "size": 4812,
-            "uri": "https://{canondata_backend}/1923547/408f17dd7de3f1f4f32904831b08b3c57e38a7c7/resource.tar.gz#test.test_schema-copy-yamred_dsv_raw-Plan_/plan.txt"
-        }
-    ],
-    "test.test[schema-copy-yamred_dsv_raw-Results]": [],
-    "test.test[schema-insert_sorted-row_spec-Analyze]": [
-        {
-            "checksum": "195e99867cd8cb54e7e7483590148dec",
-            "size": 11158,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_schema-insert_sorted-row_spec-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_schema-insert_sorted-row_spec-Analyze_/extracted"
-        }
-    ],
-    "test.test[schema-insert_sorted-row_spec-Debug]": [
-        {
-            "checksum": "66811940e669c50cf7511d7fbbed603f",
-            "size": 4227,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_schema-insert_sorted-row_spec-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[schema-insert_sorted-row_spec-Plan]": [
-        {
-            "checksum": "2df2156cc869bc0408d20293b3490029",
-            "size": 9801,
-            "uri": "https://{canondata_backend}/1781765/8e6436592f8b9b13cf17fdef98d9ba42d0973071/resource.tar.gz#test.test_schema-insert_sorted-row_spec-Plan_/plan.txt"
-        }
-    ],
-    "test.test[schema-insert_sorted-row_spec-Results]": [],
-    "test.test[schema-limit_simple--Analyze]": [
-        {
-            "checksum": "aade699a20b09b43e9ab0f9bf26b228d",
-            "size": 3569,
-            "uri": "https://{canondata_backend}/1923547/408f17dd7de3f1f4f32904831b08b3c57e38a7c7/resource.tar.gz#test.test_schema-limit_simple--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[schema-limit_simple--Debug]": [
-        {
-            "checksum": "db91246dcfd6a1f330394e5c435fa9de",
-            "size": 1427,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_schema-limit_simple--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[schema-limit_simple--Plan]": [
-        {
-            "checksum": "aade699a20b09b43e9ab0f9bf26b228d",
-            "size": 3569,
-            "uri": "https://{canondata_backend}/1923547/408f17dd7de3f1f4f32904831b08b3c57e38a7c7/resource.tar.gz#test.test_schema-limit_simple--Plan_/plan.txt"
-        }
-    ],
-    "test.test[schema-limit_simple--Results]": [],
-    "test.test[schema-select_all_inferschema--Analyze]": [
-        {
-            "checksum": "81dfd139afa2239e6b4c78e98b3203c2",
-            "size": 3724,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_schema-select_all_inferschema--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[schema-select_all_inferschema--Debug]": [
-        {
-            "checksum": "b5cab10dd89f366f8a2721b297fbb5c0",
-            "size": 1583,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_schema-select_all_inferschema--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[schema-select_all_inferschema--Plan]": [
-        {
-            "checksum": "81dfd139afa2239e6b4c78e98b3203c2",
-            "size": 3724,
-            "uri": "https://{canondata_backend}/1937367/1aaf5198b7497ff892746fdaf479cd906eda5ef0/resource.tar.gz#test.test_schema-select_all_inferschema--Plan_/plan.txt"
-        }
-    ],
-    "test.test[schema-select_all_inferschema--Results]": [],
-    "test.test[schema-select_all_inferschema_range-empty_fail-Debug]": [],
-    "test.test[schema-select_all_inferschema_range-empty_fail-Plan]": [],
-    "test.test[schema-select_all_inferschema_range-empty_fail-Results]": [
-        {
-            "uri": "file://test.test_schema-select_all_inferschema_range-empty_fail-Results_/extracted"
-        }
-    ],
-    "test.test[simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Analyze]": [
-        {
-            "checksum": "c65393938b16b05b9c178ac3cfbad6bb",
-            "size": 5266,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Debug]": [
-        {
-            "checksum": "0418967b3e6f0e10939331651c0cd8e5",
-            "size": 3144,
-            "uri": "https://{canondata_backend}/1031349/19c1b83c6617df0481dde490e324b359e5015bf9/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Plan]": [
-        {
-            "checksum": "c65393938b16b05b9c178ac3cfbad6bb",
-            "size": 5266,
-            "uri": "https://{canondata_backend}/1936947/c075b3a6b857003250f6fcdaddd6e5508fb9d58f/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Results]": [
-        {
-            "uri": "file://test.test_simple_columns-simple_columns_join_subreq_all_key_without-default.txt-Results_/extracted"
-        }
-    ],
-    "test.test[stream_lookup_join-lookup_join_narrow-default.txt-Analyze]": [
-        {
-            "checksum": "e77b4f2fcc974f91b5ac44b39809c374",
-            "size": 4356,
-            "uri": "https://{canondata_backend}/1781765/42df89988fcd33edfdab26a81def80f0820c3235/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[stream_lookup_join-lookup_join_narrow-default.txt-Debug]": [
-        {
-            "checksum": "468f6dcfbca8ea11f9e5d0ad9272cd8d",
-            "size": 2721,
-            "uri": "https://{canondata_backend}/1781765/42df89988fcd33edfdab26a81def80f0820c3235/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[stream_lookup_join-lookup_join_narrow-default.txt-Plan]": [
-        {
-            "checksum": "e77b4f2fcc974f91b5ac44b39809c374",
-            "size": 4356,
-            "uri": "https://{canondata_backend}/1781765/42df89988fcd33edfdab26a81def80f0820c3235/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[stream_lookup_join-lookup_join_narrow-default.txt-Results]": [
-        {
-            "checksum": "8ca9ff9e0f1ab51a754c54f9935f72ea",
-            "size": 14549,
-            "uri": "https://{canondata_backend}/1781765/42df89988fcd33edfdab26a81def80f0820c3235/resource.tar.gz#test.test_stream_lookup_join-lookup_join_narrow-default.txt-Results_/results.txt"
-        }
-    ],
-    "test.test[table_range-concat_sorted_with_key_diff--Analyze]": [
-        {
-            "checksum": "419ab084ac1eca7ba578bb0679dcaec1",
-            "size": 7008,
-            "uri": "https://{canondata_backend}/1942671/03c23723b22c7621c14256361f488cfb15ee75e3/resource.tar.gz#test.test_table_range-concat_sorted_with_key_diff--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[table_range-concat_sorted_with_key_diff--Debug]": [
-        {
-            "checksum": "deb63482a16382c15cf9ed7a93c12d98",
-            "size": 2826,
-            "uri": "https://{canondata_backend}/1814674/65f4d58c5b2358f2ab558af11162f9a7adab9578/resource.tar.gz#test.test_table_range-concat_sorted_with_key_diff--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[table_range-concat_sorted_with_key_diff--Plan]": [
-        {
-            "checksum": "419ab084ac1eca7ba578bb0679dcaec1",
-            "size": 7008,
-            "uri": "https://{canondata_backend}/1130705/20757ef3a83dd8dafce4369b1fa87cb0a0ae2b28/resource.tar.gz#test.test_table_range-concat_sorted_with_key_diff--Plan_/plan.txt"
-        }
-    ],
-    "test.test[table_range-concat_sorted_with_key_diff--Results]": [],
-    "test.test[table_range-each_with_non_existing-all_fail-Debug]": [],
-    "test.test[table_range-each_with_non_existing-all_fail-Plan]": [],
-    "test.test[table_range-each_with_non_existing-all_fail-Results]": [
-        {
-            "uri": "file://test.test_table_range-each_with_non_existing-all_fail-Results_/extracted"
-        }
-    ],
-    "test.test[udf-complex_return_type--Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1130705/9004be6a07264a5bf29a5f00e7ff1eb4e47458ad/resource.tar.gz#test.test_udf-complex_return_type--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[udf-complex_return_type--Debug]": [
-        {
-            "checksum": "ec42add9f08c7a5ac90f82bf6896a29a",
-            "size": 556,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_udf-complex_return_type--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[udf-complex_return_type--Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1130705/9004be6a07264a5bf29a5f00e7ff1eb4e47458ad/resource.tar.gz#test.test_udf-complex_return_type--Plan_/plan.txt"
-        }
-    ],
-    "test.test[udf-complex_return_type--Results]": [],
-    "test.test[udf-named_args--Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1817427/cd1ccdb594fb5c0d7ccd4116b70e61c92e494ff1/resource.tar.gz#test.test_udf-named_args--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[udf-named_args--Debug]": [
-        {
-            "checksum": "63ad3e69041f1eb86dc342d68d23c3a5",
-            "size": 1756,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_udf-named_args--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[udf-named_args--Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1871182/49dbac5c2482cb10e39b8801a9850d0528746393/resource.tar.gz#test.test_udf-named_args--Plan_/plan.txt"
-        }
-    ],
-    "test.test[udf-named_args--Results]": [],
-    "test.test[union-union_positional_mix-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1942415/bc58f4bafc7f7c25e28d8dc76fd80da6616f0b89/resource.tar.gz#test.test_union-union_positional_mix-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[union-union_positional_mix-default.txt-Debug]": [
-        {
-            "checksum": "e7865caa2bb2deccac96d9272dbfca2f",
-            "size": 462,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_union-union_positional_mix-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[union-union_positional_mix-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1942415/bc58f4bafc7f7c25e28d8dc76fd80da6616f0b89/resource.tar.gz#test.test_union-union_positional_mix-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[union-union_positional_mix-default.txt-Results]": [],
-    "test.test[union_all-inner_union_all_with_limits-default.txt-Analyze]": [
-        {
-            "checksum": "b1d15038fdb984e8b1c5ca3c7f219867",
-            "size": 6705,
-            "uri": "https://{canondata_backend}/1923547/408f17dd7de3f1f4f32904831b08b3c57e38a7c7/resource.tar.gz#test.test_union_all-inner_union_all_with_limits-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[union_all-inner_union_all_with_limits-default.txt-Debug]": [
-        {
-            "checksum": "294a453a3f50f2c511b23f0e0a3de534",
-            "size": 2013,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_union_all-inner_union_all_with_limits-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[union_all-inner_union_all_with_limits-default.txt-Plan]": [
-        {
-            "checksum": "b1d15038fdb984e8b1c5ca3c7f219867",
-            "size": 6705,
-            "uri": "https://{canondata_backend}/1923547/408f17dd7de3f1f4f32904831b08b3c57e38a7c7/resource.tar.gz#test.test_union_all-inner_union_all_with_limits-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[union_all-inner_union_all_with_limits-default.txt-Results]": [],
-    "test.test[weak_field-weak_field_esc_yson--Analyze]": [
-        {
-            "checksum": "a6aeac3c3d8b08c01b7fc3dca390efcb",
-            "size": 4313,
-            "uri": "https://{canondata_backend}/1942671/03c23723b22c7621c14256361f488cfb15ee75e3/resource.tar.gz#test.test_weak_field-weak_field_esc_yson--Analyze_/plan.txt"
-        }
-    ],
-    "test.test[weak_field-weak_field_esc_yson--Debug]": [
-        {
-            "checksum": "e92388fcad70a4bcee5cb34211157f93",
-            "size": 2063,
-            "uri": "https://{canondata_backend}/1871102/7b4b0482d4b48dd41de6cb20a8532e8054ae5f81/resource.tar.gz#test.test_weak_field-weak_field_esc_yson--Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[weak_field-weak_field_esc_yson--Plan]": [
-        {
-            "checksum": "a6aeac3c3d8b08c01b7fc3dca390efcb",
-            "size": 4313,
-            "uri": "https://{canondata_backend}/1130705/20757ef3a83dd8dafce4369b1fa87cb0a0ae2b28/resource.tar.gz#test.test_weak_field-weak_field_esc_yson--Plan_/plan.txt"
-        }
-    ],
-    "test.test[weak_field-weak_field_esc_yson--Results]": [],
-    "test.test[window-win_extract_members-default.txt-Analyze]": [
-        {
-            "checksum": "ada1a5937385ef95360493d66c270eaa",
-            "size": 8460,
-            "uri": "https://{canondata_backend}/1942671/03c23723b22c7621c14256361f488cfb15ee75e3/resource.tar.gz#test.test_window-win_extract_members-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[window-win_extract_members-default.txt-Debug]": [
-        {
-            "checksum": "399bee464b471c158aa5aca593485c2e",
-            "size": 4101,
-            "uri": "https://{canondata_backend}/1871102/7b4b0482d4b48dd41de6cb20a8532e8054ae5f81/resource.tar.gz#test.test_window-win_extract_members-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[window-win_extract_members-default.txt-Plan]": [
-        {
-            "checksum": "ada1a5937385ef95360493d66c270eaa",
-            "size": 8460,
-            "uri": "https://{canondata_backend}/1130705/20757ef3a83dd8dafce4369b1fa87cb0a0ae2b28/resource.tar.gz#test.test_window-win_extract_members-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[window-win_extract_members-default.txt-Results]": [],
-    "test.test[window-yql-15636-default.txt-Analyze]": [
-        {
-            "checksum": "ed583ddea0e62a3539ed46efb329b007",
-            "size": 11322,
-            "uri": "https://{canondata_backend}/1937027/fb2f5e7f8384ed26549a5b12ab64879613b094df/resource.tar.gz#test.test_window-yql-15636-default.txt-Analyze_/plan.txt"
-        },
-        {
-            "uri": "file://test.test_window-yql-15636-default.txt-Analyze_/extracted"
-        }
-    ],
-    "test.test[window-yql-15636-default.txt-Debug]": [
-        {
-            "checksum": "f313991dc5e53a7fc1a1988def2a4ffd",
-            "size": 6318,
-            "uri": "https://{canondata_backend}/1925821/76f31386bb8c24a8c6deb4852e43a6b3c032e597/resource.tar.gz#test.test_window-yql-15636-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[window-yql-15636-default.txt-Plan]": [
-        {
-            "checksum": "ec4cc20d03216a841218b60dad0e9f1e",
-            "size": 8774,
-            "uri": "https://{canondata_backend}/1937027/fb2f5e7f8384ed26549a5b12ab64879613b094df/resource.tar.gz#test.test_window-yql-15636-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[window-yql-15636-default.txt-Results]": []
-}
diff --git a/ydb/library/yql/tests/sql/dq_file/part5/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part5/canondata/result.json
index c9bce0e6d28c..b178697f9b98 100644
--- a/ydb/library/yql/tests/sql/dq_file/part5/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part5/canondata/result.json
@@ -289,9 +289,9 @@
     ],
     "test.test[aggregate-group_by_expr_with_join--Debug]": [
         {
-            "checksum": "cf21c3a8fba4969b410b297dc4185510",
-            "size": 3163,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_aggregate-group_by_expr_with_join--Debug_/opt.yql_patched"
+            "checksum": "a96deadcab301828c5f45e4e34380cf0",
+            "size": 3172,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_aggregate-group_by_expr_with_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_expr_with_join--Plan]": [
@@ -339,9 +339,9 @@
     ],
     "test.test[aggregate-group_by_mul_ru_ru--Debug]": [
         {
-            "checksum": "9cba3bd36f11cf360a6ccd255109a281",
-            "size": 13190,
-            "uri": "https://{canondata_backend}/1777230/4b5479e2ebed213e8e8d9a64aa0b5a72bb3ea4dd/resource.tar.gz#test.test_aggregate-group_by_mul_ru_ru--Debug_/opt.yql_patched"
+            "checksum": "95444261d8a55a1c6c91b36ebf9b93fb",
+            "size": 13268,
+            "uri": "https://{canondata_backend}/1899731/0bc935d3f61810d330a6462fb133ddcc4ac126c6/resource.tar.gz#test.test_aggregate-group_by_mul_ru_ru--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_mul_ru_ru--Plan]": [
@@ -1243,9 +1243,9 @@
     ],
     "test.test[in-in_compact_distinct-empty-Debug]": [
         {
-            "checksum": "acd650a3cf1fa0c3a45324690a89b37b",
-            "size": 3187,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_in-in_compact_distinct-empty-Debug_/opt.yql_patched"
+            "checksum": "f1a68a0ad13098089ffa3154aba37296",
+            "size": 3178,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_in-in_compact_distinct-empty-Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_compact_distinct-empty-Plan]": [
@@ -1321,9 +1321,9 @@
     ],
     "test.test[join-anyjoin_common_dup--Debug]": [
         {
-            "checksum": "2be9469d802ec4ea7145aa6ad12a58ef",
-            "size": 5185,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-anyjoin_common_dup--Debug_/opt.yql_patched"
+            "checksum": "6745c4de9a44af3f0724009bcf662d6d",
+            "size": 5227,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-anyjoin_common_dup--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-anyjoin_common_dup--Plan]": [
@@ -1343,9 +1343,9 @@
     ],
     "test.test[join-anyjoin_common_dup-off-Debug]": [
         {
-            "checksum": "6a9cc0931ad793927587d2f52cd06d4a",
-            "size": 5828,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-anyjoin_common_dup-off-Debug_/opt.yql_patched"
+            "checksum": "5fec9cefe14f81ebcf7b631e090a7707",
+            "size": 5842,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-anyjoin_common_dup-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-anyjoin_common_dup-off-Plan]": [
@@ -1443,9 +1443,9 @@
     ],
     "test.test[join-inner_grouped-off-Debug]": [
         {
-            "checksum": "e65b2420bd032b5d21cbb21c69e0467d",
-            "size": 3448,
-            "uri": "https://{canondata_backend}/1942100/b7c3148d85bada3dcb5f80c113a4345cbf0e421e/resource.tar.gz#test.test_join-inner_grouped-off-Debug_/opt.yql_patched"
+            "checksum": "891c35e8e792b46508f96d23150bb687",
+            "size": 3461,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-inner_grouped-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_grouped-off-Plan]": [
@@ -1471,9 +1471,9 @@
     ],
     "test.test[join-join_left_cbo--Debug]": [
         {
-            "checksum": "d1792965a95853a2b1949ba40f647ca5",
-            "size": 2747,
-            "uri": "https://{canondata_backend}/1942100/50ef34247500569eb5a4a2bd9f3afffdda4ff62e/resource.tar.gz#test.test_join-join_left_cbo--Debug_/opt.yql_patched"
+            "checksum": "8949ad1de0ed55b2f080875461989e56",
+            "size": 2765,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-join_left_cbo--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_left_cbo--Plan]": [
@@ -1493,9 +1493,9 @@
     ],
     "test.test[join-join_right_cbo--Debug]": [
         {
-            "checksum": "e6f770b871662a4dfcf845ddc66acbc2",
-            "size": 2747,
-            "uri": "https://{canondata_backend}/1942100/50ef34247500569eb5a4a2bd9f3afffdda4ff62e/resource.tar.gz#test.test_join-join_right_cbo--Debug_/opt.yql_patched"
+            "checksum": "755bcb9bb8275b695bd2194d88cedf0f",
+            "size": 2765,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-join_right_cbo--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_right_cbo--Plan]": [
@@ -1515,9 +1515,9 @@
     ],
     "test.test[join-left_join_null_column--Debug]": [
         {
-            "checksum": "62aef4ffc02573e6535bdc05f8addaf2",
-            "size": 2028,
-            "uri": "https://{canondata_backend}/1942100/b7c3148d85bada3dcb5f80c113a4345cbf0e421e/resource.tar.gz#test.test_join-left_join_null_column--Debug_/opt.yql_patched"
+            "checksum": "0473371c0978b1c57fd6f9c1a6d4357b",
+            "size": 2032,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-left_join_null_column--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_join_null_column--Plan]": [
@@ -1537,9 +1537,9 @@
     ],
     "test.test[join-left_join_right_pushdown_simple--Debug]": [
         {
-            "checksum": "5a119c16914592c95e4956102e038bac",
-            "size": 2576,
-            "uri": "https://{canondata_backend}/1784826/1d88e578beafe01d6bba5ff3a3b2fecf2c6033c8/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Debug_/opt.yql_patched"
+            "checksum": "b63c4dfcfff4b4f8fc6df96c02570b38",
+            "size": 2596,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-left_join_right_pushdown_simple--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_join_right_pushdown_simple--Plan]": [
@@ -1562,9 +1562,9 @@
     ],
     "test.test[join-lookupjoin_bug7646_subst--Debug]": [
         {
-            "checksum": "e575ca0a1b044e46d0da04aad31c6af8",
-            "size": 7142,
-            "uri": "https://{canondata_backend}/1775319/581989ddfd844cd7fb811fb9f47c5b23d36a9346/resource.tar.gz#test.test_join-lookupjoin_bug7646_subst--Debug_/opt.yql_patched"
+            "checksum": "2c353ff3d2d61d9a891e6c8b9708d8e1",
+            "size": 7162,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-lookupjoin_bug7646_subst--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_bug7646_subst--Plan]": [
@@ -1584,9 +1584,9 @@
     ],
     "test.test[join-lookupjoin_inner_1o2o-off-Debug]": [
         {
-            "checksum": "8e2d07a77c1e15de090ad64923200e83",
-            "size": 3085,
-            "uri": "https://{canondata_backend}/1775319/581989ddfd844cd7fb811fb9f47c5b23d36a9346/resource.tar.gz#test.test_join-lookupjoin_inner_1o2o-off-Debug_/opt.yql_patched"
+            "checksum": "85a230441fc5274bc20e40fb2fa47143",
+            "size": 3115,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-lookupjoin_inner_1o2o-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner_1o2o-off-Plan]": [
@@ -1612,9 +1612,9 @@
     ],
     "test.test[join-mapjoin_early_rewrite--Debug]": [
         {
-            "checksum": "95e210e552eaa78497632cef77ccde95",
-            "size": 2917,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-mapjoin_early_rewrite--Debug_/opt.yql_patched"
+            "checksum": "43d4e22da89fbde876908516b618770c",
+            "size": 2935,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-mapjoin_early_rewrite--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_early_rewrite--Plan]": [
@@ -1634,9 +1634,9 @@
     ],
     "test.test[join-mapjoin_on_complex_type_non_optional_left_only_single--Debug]": [
         {
-            "checksum": "a9f4bd3f5006d68fa22d4ad011ab8cb5",
-            "size": 2848,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-mapjoin_on_complex_type_non_optional_left_only_single--Debug_/opt.yql_patched"
+            "checksum": "59ec1c1d593446a8e99be6996f610571",
+            "size": 2888,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-mapjoin_on_complex_type_non_optional_left_only_single--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_complex_type_non_optional_left_only_single--Plan]": [
@@ -1656,9 +1656,9 @@
     ],
     "test.test[join-mapjoin_on_complex_type_non_optional_left_only_single-off-Debug]": [
         {
-            "checksum": "1216a21d5b0d733c3be6a3ef7185a35a",
-            "size": 2933,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-mapjoin_on_complex_type_non_optional_left_only_single-off-Debug_/opt.yql_patched"
+            "checksum": "cf4adb913258a3b1c7c0b032df0dcdeb",
+            "size": 2973,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-mapjoin_on_complex_type_non_optional_left_only_single-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_complex_type_non_optional_left_only_single-off-Plan]": [
@@ -1684,9 +1684,9 @@
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_semi_single-off-Debug]": [
         {
-            "checksum": "b60f9a8decf1151ef10ce57897a20921",
-            "size": 2585,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_semi_single-off-Debug_/opt.yql_patched"
+            "checksum": "71d343983b0447c2bcf839affa67cfbf",
+            "size": 2625,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_semi_single-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_semi_single-off-Plan]": [
@@ -1712,9 +1712,9 @@
     ],
     "test.test[join-mapjoin_partial_uniq_keys-off-Debug]": [
         {
-            "checksum": "2f3de55622dd28d485c0f100fe7878b4",
-            "size": 3321,
-            "uri": "https://{canondata_backend}/1871002/fd83b9fcca23643110586ceb3cb213cea846db7b/resource.tar.gz#test.test_join-mapjoin_partial_uniq_keys-off-Debug_/opt.yql_patched"
+            "checksum": "11f27b0e7d6544580cf0edb6c4a9c487",
+            "size": 3325,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-mapjoin_partial_uniq_keys-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_partial_uniq_keys-off-Plan]": [
@@ -1740,9 +1740,9 @@
     ],
     "test.test[join-mergejoin_with_different_key_names--Debug]": [
         {
-            "checksum": "605681ecc576f463cd3736a4b03e8137",
-            "size": 5623,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-mergejoin_with_different_key_names--Debug_/opt.yql_patched"
+            "checksum": "fe5d39b229a1ca3a701f61445939b844",
+            "size": 5674,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-mergejoin_with_different_key_names--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_with_different_key_names--Plan]": [
@@ -1762,9 +1762,9 @@
     ],
     "test.test[join-premap_common_right_tablecontent--Debug]": [
         {
-            "checksum": "ad2e262d443e068314365065d4b85793",
-            "size": 4070,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-premap_common_right_tablecontent--Debug_/opt.yql_patched"
+            "checksum": "0df1ecaec17f0da3571027e1b43d51de",
+            "size": 4086,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-premap_common_right_tablecontent--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_right_tablecontent--Plan]": [
@@ -1784,9 +1784,9 @@
     ],
     "test.test[join-pushdown_filter_over_inner_with_strict_udf--Debug]": [
         {
-            "checksum": "926dda62b8bdcd29038cce7de32c9bd8",
-            "size": 2999,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-pushdown_filter_over_inner_with_strict_udf--Debug_/opt.yql_patched"
+            "checksum": "b8ab7e2232fd09afe5ad573d61bef0d9",
+            "size": 3015,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-pushdown_filter_over_inner_with_strict_udf--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pushdown_filter_over_inner_with_strict_udf--Plan]": [
@@ -1806,9 +1806,9 @@
     ],
     "test.test[join-simple_columns_partial--Debug]": [
         {
-            "checksum": "e0bfdea773c8601df367ef04c3ea1400",
-            "size": 4373,
-            "uri": "https://{canondata_backend}/1775319/581989ddfd844cd7fb811fb9f47c5b23d36a9346/resource.tar.gz#test.test_join-simple_columns_partial--Debug_/opt.yql_patched"
+            "checksum": "0308188971863a91966f3fca11e913fe",
+            "size": 4421,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-simple_columns_partial--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-simple_columns_partial--Plan]": [
@@ -1828,9 +1828,9 @@
     ],
     "test.test[join-yql-10654_pullup_with_sys_columns--Debug]": [
         {
-            "checksum": "02717b964e8a286fca89b94a85f88bff",
-            "size": 2813,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-yql-10654_pullup_with_sys_columns--Debug_/opt.yql_patched"
+            "checksum": "1934bf6962698768052c471a4a904feb",
+            "size": 2831,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-yql-10654_pullup_with_sys_columns--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-10654_pullup_with_sys_columns--Plan]": [
@@ -1850,9 +1850,9 @@
     ],
     "test.test[join-yql-14847-off-Debug]": [
         {
-            "checksum": "856f7c19594a8a10e59eb45bea3c0caf",
-            "size": 3468,
-            "uri": "https://{canondata_backend}/1775319/581989ddfd844cd7fb811fb9f47c5b23d36a9346/resource.tar.gz#test.test_join-yql-14847-off-Debug_/opt.yql_patched"
+            "checksum": "b39c9dc776b446f69b5ef8b935f5ee9c",
+            "size": 3492,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-yql-14847-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-14847-off-Plan]": [
@@ -1938,9 +1938,9 @@
     ],
     "test.test[join-yql-8980--Debug]": [
         {
-            "checksum": "2ec24e57b39532f60f6dc71a74603363",
-            "size": 3743,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_join-yql-8980--Debug_/opt.yql_patched"
+            "checksum": "f1f9924d25231059a0b2ecfa169f41f1",
+            "size": 3762,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_join-yql-8980--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-8980--Plan]": [
@@ -2561,9 +2561,9 @@
     ],
     "test.test[pg-tpch-q04-default.txt-Debug]": [
         {
-            "checksum": "88355c18f13a440f21cf0f5989182a84",
-            "size": 9226,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_pg-tpch-q04-default.txt-Debug_/opt.yql_patched"
+            "checksum": "4666a7269563392f9265afabac7f77c2",
+            "size": 9294,
+            "uri": "https://{canondata_backend}/1917492/efbefb09221dc3e19769efa112dda52dbfbdaf53/resource.tar.gz#test.test_pg-tpch-q04-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q04-default.txt-Plan]": [
@@ -2839,9 +2839,9 @@
     ],
     "test.test[type_v3-mergejoin_with_sort--Debug]": [
         {
-            "checksum": "5b6e6bbf7892840309ee05ecfd5312de",
-            "size": 3077,
-            "uri": "https://{canondata_backend}/1942100/b7c3148d85bada3dcb5f80c113a4345cbf0e421e/resource.tar.gz#test.test_type_v3-mergejoin_with_sort--Debug_/opt.yql_patched"
+            "checksum": "197b0b9bf0d5b794ee49e7ec52ce7fa2",
+            "size": 3093,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_type_v3-mergejoin_with_sort--Debug_/opt.yql_patched"
         }
     ],
     "test.test[type_v3-mergejoin_with_sort--Plan]": [
@@ -2912,9 +2912,9 @@
     ],
     "test.test[weak_field-weak_field_join--Debug]": [
         {
-            "checksum": "e923d17b3b54a4ad545b576e9248b700",
-            "size": 3955,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_weak_field-weak_field_join--Debug_/opt.yql_patched"
+            "checksum": "09961e606ace12faeb9a85e5554e5273",
+            "size": 3979,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_weak_field-weak_field_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[weak_field-weak_field_join--Plan]": [
@@ -2934,9 +2934,9 @@
     ],
     "test.test[weak_field-weak_field_join_condition--Debug]": [
         {
-            "checksum": "7fcc7da8b0c103377ce20a8b15ae5019",
-            "size": 4196,
-            "uri": "https://{canondata_backend}/1871182/4317fe200ca948d942762066eed2d9a33cc59adc/resource.tar.gz#test.test_weak_field-weak_field_join_condition--Debug_/opt.yql_patched"
+            "checksum": "0f80282b5b8aea9ca4e088399ab6c4d5",
+            "size": 4216,
+            "uri": "https://{canondata_backend}/1773845/8df154f4c78ff2cb24f0eca84702e3c40b845284/resource.tar.gz#test.test_weak_field-weak_field_join_condition--Debug_/opt.yql_patched"
         }
     ],
     "test.test[weak_field-weak_field_join_condition--Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part6/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part6/canondata/result.json
index 59283b4ed939..e11aaf509650 100644
--- a/ydb/library/yql/tests/sql/dq_file/part6/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part6/canondata/result.json
@@ -259,9 +259,9 @@
     ],
     "test.test[aggregate-group_by_cube_duo--Debug]": [
         {
-            "checksum": "3cf8eaf5ce4f0c8e668f517cbb2dca3e",
-            "size": 6624,
-            "uri": "https://{canondata_backend}/1936947/2fc43e3b7bf2ac6312b395248938656a7fa50fcc/resource.tar.gz#test.test_aggregate-group_by_cube_duo--Debug_/opt.yql_patched"
+            "checksum": "9236a886d3fa78e7288be9bd8912d9d2",
+            "size": 6680,
+            "uri": "https://{canondata_backend}/1775059/0211445827e77a089557f709a929c720409a58d4/resource.tar.gz#test.test_aggregate-group_by_cube_duo--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_cube_duo--Plan]": [
@@ -281,9 +281,9 @@
     ],
     "test.test[aggregate-group_by_cube_grouping--Debug]": [
         {
-            "checksum": "2af97603ecbeb4c0e4aa6c85de640b60",
-            "size": 12278,
-            "uri": "https://{canondata_backend}/1777230/af30d016cca75b9d11b6ed54e7d270e255deb404/resource.tar.gz#test.test_aggregate-group_by_cube_grouping--Debug_/opt.yql_patched"
+            "checksum": "3add42ae160fd7a1653ae657a859a559",
+            "size": 12353,
+            "uri": "https://{canondata_backend}/1775059/e0d64b1cb8ae8bb7052270bb8eeef5ba21a3c131/resource.tar.gz#test.test_aggregate-group_by_cube_grouping--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_cube_grouping--Plan]": [
@@ -303,9 +303,9 @@
     ],
     "test.test[aggregate-group_by_rollup_udf--Debug]": [
         {
-            "checksum": "2a155992061f0284cf6d7ee6d793b893",
-            "size": 7037,
-            "uri": "https://{canondata_backend}/1936947/2fc43e3b7bf2ac6312b395248938656a7fa50fcc/resource.tar.gz#test.test_aggregate-group_by_rollup_udf--Debug_/opt.yql_patched"
+            "checksum": "a70eed5b18e68b90e50476bcc64470bd",
+            "size": 7095,
+            "uri": "https://{canondata_backend}/1784117/357d3ccdef7d0372b6d86bbe259ca7f35b60e595/resource.tar.gz#test.test_aggregate-group_by_rollup_udf--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_udf--Plan]": [
@@ -796,9 +796,9 @@
     ],
     "test.test[epochs-use_sorted_by_complex_type--Debug]": [
         {
-            "checksum": "b8ad92842200b0e27e2b58dd4534b53c",
-            "size": 5261,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_epochs-use_sorted_by_complex_type--Debug_/opt.yql_patched"
+            "checksum": "189229cc9f067077257f0ba8cbf3b3b0",
+            "size": 5296,
+            "uri": "https://{canondata_backend}/1923547/9c9bffa7195403e2170e840b06e42ba0867654f8/resource.tar.gz#test.test_epochs-use_sorted_by_complex_type--Debug_/opt.yql_patched"
         }
     ],
     "test.test[epochs-use_sorted_by_complex_type--Plan]": [
@@ -1357,9 +1357,9 @@
     ],
     "test.test[join-anyjoin_common_nodata_keys-off-Debug]": [
         {
-            "checksum": "54bb139195034d01546168b79a253199",
-            "size": 5211,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_join-anyjoin_common_nodata_keys-off-Debug_/opt.yql_patched"
+            "checksum": "73680cb4724db47ab21becf3e1b683fb",
+            "size": 5255,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-anyjoin_common_nodata_keys-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-anyjoin_common_nodata_keys-off-Plan]": [
@@ -1385,9 +1385,9 @@
     ],
     "test.test[join-equi_join_three_simple--Debug]": [
         {
-            "checksum": "62580136176741825039460dd37ebd6e",
-            "size": 3501,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_join-equi_join_three_simple--Debug_/opt.yql_patched"
+            "checksum": "49f92f474b87abafabc1861958c16c69",
+            "size": 3528,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-equi_join_three_simple--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_three_simple--Plan]": [
@@ -1407,9 +1407,9 @@
     ],
     "test.test[join-equi_join_three_simple-off-Debug]": [
         {
-            "checksum": "7bbf204c031f2d3763f6ffa5bb79d3ad",
-            "size": 2853,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_join-equi_join_three_simple-off-Debug_/opt.yql_patched"
+            "checksum": "113cd1da543061f8f97153d1868b2748",
+            "size": 2796,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-equi_join_three_simple-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_three_simple-off-Plan]": [
@@ -1435,9 +1435,9 @@
     ],
     "test.test[join-full_equal_null--Debug]": [
         {
-            "checksum": "fcd59f1fb4fadef6db7f517ac3091cb1",
-            "size": 3077,
-            "uri": "https://{canondata_backend}/995452/7d7eb4b4cb892b72a47c31068e42a9aeef5fa875/resource.tar.gz#test.test_join-full_equal_null--Debug_/opt.yql_patched"
+            "checksum": "9738775e7d786a203e52542b5d06acd8",
+            "size": 3065,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-full_equal_null--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-full_equal_null--Plan]": [
@@ -1457,9 +1457,9 @@
     ],
     "test.test[join-inner_trivial_from_concat--Debug]": [
         {
-            "checksum": "953633096e3edef8ec0a35646dc1c160",
-            "size": 2634,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_join-inner_trivial_from_concat--Debug_/opt.yql_patched"
+            "checksum": "b0b7654227dad49964b19cdef6682e05",
+            "size": 2650,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-inner_trivial_from_concat--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_trivial_from_concat--Plan]": [
@@ -1479,9 +1479,9 @@
     ],
     "test.test[join-inner_trivial_from_concat-off-Debug]": [
         {
-            "checksum": "617f685078d6bc4c308935a5e5111a82",
-            "size": 2497,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_join-inner_trivial_from_concat-off-Debug_/opt.yql_patched"
+            "checksum": "36e7505090c3d0d11df8b2cc7e21988d",
+            "size": 2491,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-inner_trivial_from_concat-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_trivial_from_concat-off-Plan]": [
@@ -1510,9 +1510,9 @@
     ],
     "test.test[join-join_without_column--Debug]": [
         {
-            "checksum": "6580057f558a4213679909d606aeb115",
-            "size": 2841,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_join-join_without_column--Debug_/opt.yql_patched"
+            "checksum": "337020d51817605155911582d3427721",
+            "size": 2853,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-join_without_column--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_without_column--Plan]": [
@@ -1539,9 +1539,9 @@
     ],
     "test.test[join-join_without_correlation_and_struct_access-off-Debug]": [
         {
-            "checksum": "70a41e9c6db2129c066d29b42b53aec0",
-            "size": 3155,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_join-join_without_correlation_and_struct_access-off-Debug_/opt.yql_patched"
+            "checksum": "e4a871b485c2f1a3f7bc996763b43adc",
+            "size": 3158,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-join_without_correlation_and_struct_access-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_without_correlation_and_struct_access-off-Plan]": [
@@ -1570,9 +1570,9 @@
     ],
     "test.test[join-lookupjoin_inner_1o--Debug]": [
         {
-            "checksum": "8a454096af74a88fd97c451294e2ab40",
-            "size": 3671,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_join-lookupjoin_inner_1o--Debug_/opt.yql_patched"
+            "checksum": "351a107508fc11892bcedacdfada695e",
+            "size": 3703,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-lookupjoin_inner_1o--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner_1o--Plan]": [
@@ -1592,9 +1592,9 @@
     ],
     "test.test[join-lookupjoin_semi_2o-off-Debug]": [
         {
-            "checksum": "860d3d99a6ad3f41fbe532d374690bb1",
-            "size": 3122,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_join-lookupjoin_semi_2o-off-Debug_/opt.yql_patched"
+            "checksum": "18b202105fdbdeffa39d118bce6a9a81",
+            "size": 3131,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-lookupjoin_semi_2o-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi_2o-off-Plan]": [
@@ -1620,9 +1620,9 @@
     ],
     "test.test[join-lookupjoin_semi_subq-off-Debug]": [
         {
-            "checksum": "17b861dbebb9d82b64290a320103f436",
-            "size": 3253,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_join-lookupjoin_semi_subq-off-Debug_/opt.yql_patched"
+            "checksum": "83a35e43ba07eaedf83a55e8a4e3cf24",
+            "size": 3248,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-lookupjoin_semi_subq-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi_subq-off-Plan]": [
@@ -1651,9 +1651,9 @@
     ],
     "test.test[join-mapjoin_with_anonymous-off-Debug]": [
         {
-            "checksum": "76449f76d7e35a97326f01ea3b4e7498",
-            "size": 3450,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_join-mapjoin_with_anonymous-off-Debug_/opt.yql_patched"
+            "checksum": "a652c387ea67d39176ede16475f8370d",
+            "size": 3420,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-mapjoin_with_anonymous-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_with_anonymous-off-Plan]": [
@@ -1679,9 +1679,9 @@
     ],
     "test.test[join-premap_map_inner--Debug]": [
         {
-            "checksum": "818b944464b39c28ed7032e9e7ef45aa",
-            "size": 3473,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_join-premap_map_inner--Debug_/opt.yql_patched"
+            "checksum": "8ccf4ec5247df7647c9b4a4d687d12ab",
+            "size": 3459,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-premap_map_inner--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_map_inner--Plan]": [
@@ -1701,9 +1701,9 @@
     ],
     "test.test[join-premap_map_inner-off-Debug]": [
         {
-            "checksum": "e8f5ed0ed26a6293d58548109878b6d7",
-            "size": 3322,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_join-premap_map_inner-off-Debug_/opt.yql_patched"
+            "checksum": "8e25a6d5b0fc182631f38f67ed111487",
+            "size": 3326,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-premap_map_inner-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_map_inner-off-Plan]": [
@@ -1760,9 +1760,9 @@
     ],
     "test.test[join-yql-8125-off-Debug]": [
         {
-            "checksum": "1ed57f06a8013bd2c9d5852f5972bcb2",
-            "size": 6042,
-            "uri": "https://{canondata_backend}/1903885/dc53b4edac607ebf3b277ca9598c7c26218fd737/resource.tar.gz#test.test_join-yql-8125-off-Debug_/opt.yql_patched"
+            "checksum": "82326c23a65e2b3d01cfc36e5530dbd8",
+            "size": 6067,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_join-yql-8125-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-8125-off-Plan]": [
@@ -2417,9 +2417,9 @@
     ],
     "test.test[pg-tpch-q07-default.txt-Debug]": [
         {
-            "checksum": "37dfdcec2130064c8de5a211a6a2f405",
-            "size": 15236,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_pg-tpch-q07-default.txt-Debug_/opt.yql_patched"
+            "checksum": "2259fabdd491e9cd8a3c7327bfb18027",
+            "size": 15307,
+            "uri": "https://{canondata_backend}/1775319/4822fc307d7eab1238a19a49bb254227c5051fce/resource.tar.gz#test.test_pg-tpch-q07-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q07-default.txt-Plan]": [
@@ -2439,9 +2439,9 @@
     ],
     "test.test[pg-tpch-q10-default.txt-Debug]": [
         {
-            "checksum": "e26844495a0ecb5d6ac018c26f979a29",
-            "size": 14393,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_pg-tpch-q10-default.txt-Debug_/opt.yql_patched"
+            "checksum": "effc0bd6074935121272db4d111ea5e0",
+            "size": 14387,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_pg-tpch-q10-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q10-default.txt-Plan]": [
@@ -2461,9 +2461,9 @@
     ],
     "test.test[pg-tpch-q14-default.txt-Debug]": [
         {
-            "checksum": "b689eb1e13c8f3bdbce1b0d786a6a3f4",
-            "size": 8349,
-            "uri": "https://{canondata_backend}/1031349/2beab0bd51f525f804474df3adc530a07847479a/resource.tar.gz#test.test_pg-tpch-q14-default.txt-Debug_/opt.yql_patched"
+            "checksum": "724100d9fd22276f0657398c984a0de8",
+            "size": 8343,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_pg-tpch-q14-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q14-default.txt-Plan]": [
@@ -2735,9 +2735,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_qualified-default.txt-Debug]": [
         {
-            "checksum": "206da1c5471e6353ed41a3a29d0d2e24",
-            "size": 3065,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_simple_columns-simple_columns_join_qualified-default.txt-Debug_/opt.yql_patched"
+            "checksum": "0a8681fdb3964a45a972d9c32fb4b74b",
+            "size": 3077,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_simple_columns-simple_columns_join_qualified-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_qualified-default.txt-Plan]": [
@@ -2764,9 +2764,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_subreq_same_key_by_all-default.txt-Debug]": [
         {
-            "checksum": "c2cd189ec429234a13dcba607713a79b",
-            "size": 2802,
-            "uri": "https://{canondata_backend}/212715/7f481604d75f86fddead511124887e2e0fa01e78/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_same_key_by_all-default.txt-Debug_/opt.yql_patched"
+            "checksum": "ca23c23900b4806356ced40ebc88d697",
+            "size": 2850,
+            "uri": "https://{canondata_backend}/1773845/3e79b21e1668f131709c246df5e9fced8d4bf38f/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_same_key_by_all-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_subreq_same_key_by_all-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part7/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part7/canondata/result.json
index 026e8cf3fd29..f4784e9a1059 100644
--- a/ydb/library/yql/tests/sql/dq_file/part7/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part7/canondata/result.json
@@ -250,9 +250,9 @@
     ],
     "test.test[aggregate-compare_by_tuple--Debug]": [
         {
-            "checksum": "e91261faf8733b739c279fa03e5eb806",
-            "size": 3545,
-            "uri": "https://{canondata_backend}/1923547/4a11bf336fd7fb8da5f5162c16271b830cef13e4/resource.tar.gz#test.test_aggregate-compare_by_tuple--Debug_/opt.yql_patched"
+            "checksum": "baef0bf57c57837e4624860775faaaa4",
+            "size": 3580,
+            "uri": "https://{canondata_backend}/1937492/caaa9a42499278fe8d2abe06fe2b17bceeb09e18/resource.tar.gz#test.test_aggregate-compare_by_tuple--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-compare_by_tuple--Plan]": [
@@ -272,9 +272,9 @@
     ],
     "test.test[aggregate-group_by_gs_grouping--Debug]": [
         {
-            "checksum": "53143a2969289e7363d37c8ab8bbb950",
-            "size": 4190,
-            "uri": "https://{canondata_backend}/1871102/680e072d487740a733846c6fb8acae02496a7035/resource.tar.gz#test.test_aggregate-group_by_gs_grouping--Debug_/opt.yql_patched"
+            "checksum": "8724627da064c332ff9d3557432a46fc",
+            "size": 4242,
+            "uri": "https://{canondata_backend}/937458/dab17048102e83ee373249c500ad7a1a9718d95c/resource.tar.gz#test.test_aggregate-group_by_gs_grouping--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_grouping--Plan]": [
@@ -294,9 +294,9 @@
     ],
     "test.test[aggregate-group_by_rollup_column_ref_same_names--Debug]": [
         {
-            "checksum": "64b83869160e04718b08ddf7a81b1c6f",
-            "size": 5666,
-            "uri": "https://{canondata_backend}/1871102/680e072d487740a733846c6fb8acae02496a7035/resource.tar.gz#test.test_aggregate-group_by_rollup_column_ref_same_names--Debug_/opt.yql_patched"
+            "checksum": "46f4e870b0e81b54be5d46294a169761",
+            "size": 5720,
+            "uri": "https://{canondata_backend}/1925842/1c73675b2ef22d3db833d7bb81e6d092b9398bca/resource.tar.gz#test.test_aggregate-group_by_rollup_column_ref_same_names--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_column_ref_same_names--Plan]": [
@@ -316,9 +316,9 @@
     ],
     "test.test[aggregate-group_by_rollup_key_check--Debug]": [
         {
-            "checksum": "2f9650ad69bc0d377c5476e54a7d408b",
-            "size": 5335,
-            "uri": "https://{canondata_backend}/1871102/680e072d487740a733846c6fb8acae02496a7035/resource.tar.gz#test.test_aggregate-group_by_rollup_key_check--Debug_/opt.yql_patched"
+            "checksum": "f783d973cc24ef82d7b55505b7a41612",
+            "size": 5389,
+            "uri": "https://{canondata_backend}/1937492/63930c59f78bd833253a0a3dd62479c8ad6cb321/resource.tar.gz#test.test_aggregate-group_by_rollup_key_check--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_key_check--Plan]": [
@@ -338,9 +338,9 @@
     ],
     "test.test[aggregate-group_by_ru_join--Debug]": [
         {
-            "checksum": "93c25b58a6eb8b88931ba99acabaa499",
-            "size": 3699,
-            "uri": "https://{canondata_backend}/1871102/680e072d487740a733846c6fb8acae02496a7035/resource.tar.gz#test.test_aggregate-group_by_ru_join--Debug_/opt.yql_patched"
+            "checksum": "8772e8bd3cac771890514d055f7dce5f",
+            "size": 3772,
+            "uri": "https://{canondata_backend}/1775319/3b8377e8fd4479a1afeb2968193880fa658d75a9/resource.tar.gz#test.test_aggregate-group_by_ru_join--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_join--Plan]": [
@@ -1156,9 +1156,9 @@
     ],
     "test.test[join-equi_join_by_expr-off-Debug]": [
         {
-            "checksum": "21e0c0fcc1877d749b2ce17f6fa546ad",
-            "size": 2916,
-            "uri": "https://{canondata_backend}/1923547/4a11bf336fd7fb8da5f5162c16271b830cef13e4/resource.tar.gz#test.test_join-equi_join_by_expr-off-Debug_/opt.yql_patched"
+            "checksum": "60b8006dab98c4b88df02494dc373020",
+            "size": 2930,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-equi_join_by_expr-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-equi_join_by_expr-off-Plan]": [
@@ -1184,9 +1184,9 @@
     ],
     "test.test[join-flatten_columns2-off-Debug]": [
         {
-            "checksum": "4d9fa57334edfcb242cf154410eaf5b4",
-            "size": 2679,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-flatten_columns2-off-Debug_/opt.yql_patched"
+            "checksum": "b28f8ef09033f550e8987ce0d062017e",
+            "size": 2673,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-flatten_columns2-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-flatten_columns2-off-Plan]": [
@@ -1215,9 +1215,9 @@
     ],
     "test.test[join-join_and_distinct_key-off-Debug]": [
         {
-            "checksum": "42fe1299781c40230d42aa89459fdf5a",
-            "size": 4520,
-            "uri": "https://{canondata_backend}/1923547/4a11bf336fd7fb8da5f5162c16271b830cef13e4/resource.tar.gz#test.test_join-join_and_distinct_key-off-Debug_/opt.yql_patched"
+            "checksum": "157bca798326ab4fd109384f934e9767",
+            "size": 4532,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-join_and_distinct_key-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_and_distinct_key-off-Plan]": [
@@ -1249,9 +1249,9 @@
     ],
     "test.test[join-join_semi_correlation_in_order_by-off-Debug]": [
         {
-            "checksum": "3039b538fc77cfbf7e0718f07da89311",
-            "size": 2364,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-join_semi_correlation_in_order_by-off-Debug_/opt.yql_patched"
+            "checksum": "e2a8e66cec92e6de49447312054afd77",
+            "size": 2372,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-join_semi_correlation_in_order_by-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_semi_correlation_in_order_by-off-Plan]": [
@@ -1280,9 +1280,9 @@
     ],
     "test.test[join-left_cast_to_string--Debug]": [
         {
-            "checksum": "a80d7d10334cea3255896af620ccd763",
-            "size": 2778,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-left_cast_to_string--Debug_/opt.yql_patched"
+            "checksum": "7669f5a34e5a96012c7dc32733da3508",
+            "size": 2804,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-left_cast_to_string--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_cast_to_string--Plan]": [
@@ -1302,9 +1302,9 @@
     ],
     "test.test[join-left_semi_with_other--Debug]": [
         {
-            "checksum": "69efb368ddc45cb6d36c404d3474fcac",
-            "size": 4077,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-left_semi_with_other--Debug_/opt.yql_patched"
+            "checksum": "a62eba6da1be1466c04d0e0f9a90bc6e",
+            "size": 4109,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-left_semi_with_other--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-left_semi_with_other--Plan]": [
@@ -1324,9 +1324,9 @@
     ],
     "test.test[join-lookupjoin_semi_1o--Debug]": [
         {
-            "checksum": "39b45e8f9a5d12587d4194d1b5ffcc22",
+            "checksum": "35e4b0c994ad6b6789c423d8ec0672a9",
             "size": 3540,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-lookupjoin_semi_1o--Debug_/opt.yql_patched"
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-lookupjoin_semi_1o--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi_1o--Plan]": [
@@ -1374,9 +1374,9 @@
     ],
     "test.test[join-mapjoin_early_rewrite_star-off-Debug]": [
         {
-            "checksum": "d245bc6c37229e5b2b2f1d0ffa0d7950",
-            "size": 2663,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-mapjoin_early_rewrite_star-off-Debug_/opt.yql_patched"
+            "checksum": "95d411f66d14e7628077c8630f737e10",
+            "size": 2664,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-mapjoin_early_rewrite_star-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_early_rewrite_star-off-Plan]": [
@@ -1402,9 +1402,9 @@
     ],
     "test.test[join-mergejoin_saves_output_sort_nested-off-Debug]": [
         {
-            "checksum": "24a47209d59fd6003333755920ce2709",
-            "size": 4814,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-mergejoin_saves_output_sort_nested-off-Debug_/opt.yql_patched"
+            "checksum": "6eb64854f37c9ca3064f349cd4d5fac7",
+            "size": 4879,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-mergejoin_saves_output_sort_nested-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_saves_output_sort_nested-off-Plan]": [
@@ -1430,9 +1430,9 @@
     ],
     "test.test[join-mergejoin_small_primary--Debug]": [
         {
-            "checksum": "cb9cc2cd23d63e065612ab3faf387db8",
-            "size": 3488,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-mergejoin_small_primary--Debug_/opt.yql_patched"
+            "checksum": "a2e375a0fe879178c087389a9a1eafe4",
+            "size": 3474,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-mergejoin_small_primary--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_small_primary--Plan]": [
@@ -1452,9 +1452,9 @@
     ],
     "test.test[join-mergejoin_small_primary-off-Debug]": [
         {
-            "checksum": "571d5faa3f00c5755c7dd9c7426ea59b",
-            "size": 3211,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-mergejoin_small_primary-off-Debug_/opt.yql_patched"
+            "checksum": "f1a30645d0d97f362a5a4713547600a1",
+            "size": 3215,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-mergejoin_small_primary-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_small_primary-off-Plan]": [
@@ -1480,9 +1480,9 @@
     ],
     "test.test[join-opt_on_opt_side--Debug]": [
         {
-            "checksum": "6ec6005ab7b1bc53864ffad0ff2eb29e",
-            "size": 2689,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-opt_on_opt_side--Debug_/opt.yql_patched"
+            "checksum": "22557d191d7702de0cfce980609148e6",
+            "size": 2705,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-opt_on_opt_side--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-opt_on_opt_side--Plan]": [
@@ -1502,9 +1502,9 @@
     ],
     "test.test[join-premap_common_multiparents--Debug]": [
         {
-            "checksum": "3940fe50466f70338236a5b7900c081e",
-            "size": 4397,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-premap_common_multiparents--Debug_/opt.yql_patched"
+            "checksum": "b12bd2c89260713c2003e28463007e74",
+            "size": 4441,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-premap_common_multiparents--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_multiparents--Plan]": [
@@ -1524,9 +1524,9 @@
     ],
     "test.test[join-premap_common_multiparents_no_premap-off-Debug]": [
         {
-            "checksum": "a0dff4d9c8caf83b45dc9b1b92d463d5",
-            "size": 3353,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-premap_common_multiparents_no_premap-off-Debug_/opt.yql_patched"
+            "checksum": "c5eea32faccb12eaaca540428dfb533f",
+            "size": 3347,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-premap_common_multiparents_no_premap-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_multiparents_no_premap-off-Plan]": [
@@ -1555,9 +1555,9 @@
     ],
     "test.test[join-premap_merge_with_remap--Debug]": [
         {
-            "checksum": "1e1e1a775d113ba8b397457748517169",
-            "size": 7126,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-premap_merge_with_remap--Debug_/opt.yql_patched"
+            "checksum": "db3f90a29627a475fd9957c3a55944cc",
+            "size": 7180,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-premap_merge_with_remap--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_merge_with_remap--Plan]": [
@@ -1577,9 +1577,9 @@
     ],
     "test.test[join-pushdown_filter_over_inner_with_assume_strict--Debug]": [
         {
-            "checksum": "61f700f52c91dd99021a5bad485115e0",
-            "size": 2720,
-            "uri": "https://{canondata_backend}/212715/a575a87b0ddb5b480fdcb6e3622436bf4a82b2a1/resource.tar.gz#test.test_join-pushdown_filter_over_inner_with_assume_strict--Debug_/opt.yql_patched"
+            "checksum": "218573029b43ba110b0f09f2bb71b53b",
+            "size": 2736,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-pushdown_filter_over_inner_with_assume_strict--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pushdown_filter_over_inner_with_assume_strict--Plan]": [
@@ -1599,9 +1599,9 @@
     ],
     "test.test[join-selfjoin_on_sorted_with_rename-off-Debug]": [
         {
-            "checksum": "a22d919decdb1b496363a1965a8bcd60",
-            "size": 2155,
-            "uri": "https://{canondata_backend}/1923547/4a11bf336fd7fb8da5f5162c16271b830cef13e4/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_rename-off-Debug_/opt.yql_patched"
+            "checksum": "72d18a1d4b770041a0b9a2fff56af3da",
+            "size": 2177,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_join-selfjoin_on_sorted_with_rename-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-selfjoin_on_sorted_with_rename-off-Plan]": [
@@ -1887,9 +1887,9 @@
     ],
     "test.test[optimizers-yql-8223_direct_row_and_skipnullmembers--Debug]": [
         {
-            "checksum": "a73f9bbd1510c2f4d37ee01e737c5a1f",
-            "size": 3786,
-            "uri": "https://{canondata_backend}/1923547/4a11bf336fd7fb8da5f5162c16271b830cef13e4/resource.tar.gz#test.test_optimizers-yql-8223_direct_row_and_skipnullmembers--Debug_/opt.yql_patched"
+            "checksum": "e2d212613cf2d246f127add785e962e6",
+            "size": 3807,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_optimizers-yql-8223_direct_row_and_skipnullmembers--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-yql-8223_direct_row_and_skipnullmembers--Plan]": [
@@ -2085,9 +2085,9 @@
     ],
     "test.test[pg-join_using_tables2-default.txt-Debug]": [
         {
-            "checksum": "1c571112de20c56a1ec63924cbcdf421",
-            "size": 2333,
-            "uri": "https://{canondata_backend}/1925842/bc33ee76e726ade051594823272684ec4117339d/resource.tar.gz#test.test_pg-join_using_tables2-default.txt-Debug_/opt.yql_patched"
+            "checksum": "eb5f61311d9d87ab23297b556be698bf",
+            "size": 2351,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_pg-join_using_tables2-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-join_using_tables2-default.txt-Plan]": [
@@ -2801,9 +2801,9 @@
     ],
     "test.test[tpch-q14-default.txt-Debug]": [
         {
-            "checksum": "85485ef745d5088a12a5570a41c73bf3",
-            "size": 6113,
-            "uri": "https://{canondata_backend}/1923547/4a11bf336fd7fb8da5f5162c16271b830cef13e4/resource.tar.gz#test.test_tpch-q14-default.txt-Debug_/opt.yql_patched"
+            "checksum": "5a538d42e34d37666fcc21c593c27b72",
+            "size": 6127,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_tpch-q14-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q14-default.txt-Plan]": [
@@ -2823,9 +2823,9 @@
     ],
     "test.test[tpch-q8-default.txt-Debug]": [
         {
-            "checksum": "cb22c1327ff91d9fa3cbd94b5842487c",
-            "size": 19230,
-            "uri": "https://{canondata_backend}/1689644/6139df48f06d115a1d5f163e031f1e5df6703b0a/resource.tar.gz#test.test_tpch-q8-default.txt-Debug_/opt.yql_patched"
+            "checksum": "6a72885bec76f87355344ab5fb5431d9",
+            "size": 19359,
+            "uri": "https://{canondata_backend}/1936273/b293975a7642b91c5614f8db12d1bd08a0069400/resource.tar.gz#test.test_tpch-q8-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[tpch-q8-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part7/canondata/test.test_match_recognize-without_order_by--Results_/extracted b/ydb/library/yql/tests/sql/dq_file/part7/canondata/test.test_match_recognize-without_order_by--Results_/extracted
deleted file mode 100644
index abd564f4a8c8..000000000000
--- a/ydb/library/yql/tests/sql/dq_file/part7/canondata/test.test_match_recognize-without_order_by--Results_/extracted
+++ /dev/null
@@ -1,5 +0,0 @@
-<tmp_path>/program.sql:<main>: Fatal: Optimization
-
-    <tmp_path>/program.sql:<main>:8:1: Fatal: ydb/library/yql/core/yql_opt_match_recognize.cpp:xxx  ExpandMatchRecognize(): requirement sortOrder->ChildrenSize() == 1 failed, message: Expect ORDER BY timestamp for MATCH_RECOGNIZE
-    	select * from (select * from AS_TABLE($data) MATCH_RECOGNIZE(
-	^
\ No newline at end of file
diff --git a/ydb/library/yql/tests/sql/dq_file/part8/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part8/canondata/result.json
index 4621e79ee44b..9792e3314956 100644
--- a/ydb/library/yql/tests/sql/dq_file/part8/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part8/canondata/result.json
@@ -377,9 +377,9 @@
     ],
     "test.test[aggregate-group_by_rollup_with_filter--Debug]": [
         {
-            "checksum": "ed571b15ab8e9fd8d94f910d0edea0a8",
-            "size": 5333,
-            "uri": "https://{canondata_backend}/1923547/995d9d96bbba94053a60009ae7ba99979f31a5bf/resource.tar.gz#test.test_aggregate-group_by_rollup_with_filter--Debug_/opt.yql_patched"
+            "checksum": "a21a86dc117dd7c1063ba939cfaf9f2b",
+            "size": 5388,
+            "uri": "https://{canondata_backend}/1925842/5d65124ba39bfe8e6fec32f860c67c97e48531b0/resource.tar.gz#test.test_aggregate-group_by_rollup_with_filter--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_with_filter--Plan]": [
@@ -399,9 +399,9 @@
     ],
     "test.test[aggregate-group_by_ru_join_grouping-default.txt-Debug]": [
         {
-            "checksum": "edbb202808df170fc017717ef025c38b",
-            "size": 6548,
-            "uri": "https://{canondata_backend}/1923547/995d9d96bbba94053a60009ae7ba99979f31a5bf/resource.tar.gz#test.test_aggregate-group_by_ru_join_grouping-default.txt-Debug_/opt.yql_patched"
+            "checksum": "a5235bf71851f3855e21f74a5b8e1f34",
+            "size": 6598,
+            "uri": "https://{canondata_backend}/1925821/5d0d0417f7a22d79e29fcb1ab2c6feb128861ec5/resource.tar.gz#test.test_aggregate-group_by_ru_join_grouping-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_ru_join_grouping-default.txt-Plan]": [
@@ -1402,9 +1402,9 @@
     ],
     "test.test[in-in_tablesource_to_equijoin--Debug]": [
         {
-            "checksum": "6de0851249e81574c9657d304a2de54e",
-            "size": 9367,
-            "uri": "https://{canondata_backend}/1923547/995d9d96bbba94053a60009ae7ba99979f31a5bf/resource.tar.gz#test.test_in-in_tablesource_to_equijoin--Debug_/opt.yql_patched"
+            "checksum": "a39d622d311f19109b3a02824678afad",
+            "size": 9528,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_in-in_tablesource_to_equijoin--Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_tablesource_to_equijoin--Plan]": [
@@ -1528,9 +1528,9 @@
     ],
     "test.test[join-filter_joined--Debug]": [
         {
-            "checksum": "ca19931eddca8f265acd15fff12c3e50",
-            "size": 2426,
-            "uri": "https://{canondata_backend}/1777230/ed7f1ae5da0c6cfe124a1de622facdf03b11ee8b/resource.tar.gz#test.test_join-filter_joined--Debug_/opt.yql_patched"
+            "checksum": "38141f43e72b8c0d380ca1c7998cf12a",
+            "size": 2448,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-filter_joined--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-filter_joined--Plan]": [
@@ -1550,9 +1550,9 @@
     ],
     "test.test[join-inner_with_select-off-Debug]": [
         {
-            "checksum": "e4f20112c164598434d5e0d7e854cd33",
-            "size": 2770,
-            "uri": "https://{canondata_backend}/1777230/ed7f1ae5da0c6cfe124a1de622facdf03b11ee8b/resource.tar.gz#test.test_join-inner_with_select-off-Debug_/opt.yql_patched"
+            "checksum": "e243d7bd88c734ea27da139a4077b9bb",
+            "size": 2776,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-inner_with_select-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_with_select-off-Plan]": [
@@ -1578,9 +1578,9 @@
     ],
     "test.test[join-lookupjoin_inner-off-Debug]": [
         {
-            "checksum": "b5b1a9864f6ff6140e3e49183235d0b8",
-            "size": 2958,
-            "uri": "https://{canondata_backend}/1777230/65685e9d54d416f54450defb84f83fe3b04456b0/resource.tar.gz#test.test_join-lookupjoin_inner-off-Debug_/opt.yql_patched"
+            "checksum": "76adfce174342c2ec93c2938de68aa56",
+            "size": 2992,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-lookupjoin_inner-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_inner-off-Plan]": [
@@ -1606,9 +1606,9 @@
     ],
     "test.test[join-lookupjoin_semi_1o2o-off-Debug]": [
         {
-            "checksum": "4f7af39330d9d05b33ef0f3e1765a464",
-            "size": 3167,
-            "uri": "https://{canondata_backend}/1777230/ed7f1ae5da0c6cfe124a1de622facdf03b11ee8b/resource.tar.gz#test.test_join-lookupjoin_semi_1o2o-off-Debug_/opt.yql_patched"
+            "checksum": "608941a78f95954ddc20c6a044ff7feb",
+            "size": 3165,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-lookupjoin_semi_1o2o-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-lookupjoin_semi_1o2o-off-Plan]": [
@@ -1634,9 +1634,9 @@
     ],
     "test.test[join-mapjoin_left_null_column--Debug]": [
         {
-            "checksum": "1945ec5c9539a2620a2801a8a1e3b2df",
-            "size": 2128,
-            "uri": "https://{canondata_backend}/1777230/ed7f1ae5da0c6cfe124a1de622facdf03b11ee8b/resource.tar.gz#test.test_join-mapjoin_left_null_column--Debug_/opt.yql_patched"
+            "checksum": "0cdfb193c42ecdab605aca8106afdaec",
+            "size": 2132,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-mapjoin_left_null_column--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_left_null_column--Plan]": [
@@ -1656,9 +1656,9 @@
     ],
     "test.test[join-mapjoin_left_null_column-off-Debug]": [
         {
-            "checksum": "6f5fb15c8777b96ebc9395ee9e586801",
-            "size": 2213,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-mapjoin_left_null_column-off-Debug_/opt.yql_patched"
+            "checksum": "36149650528bd3c1ca7423e56bf477f1",
+            "size": 2217,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-mapjoin_left_null_column-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_left_null_column-off-Plan]": [
@@ -1684,9 +1684,9 @@
     ],
     "test.test[join-mapjoin_on_very_complex_type-off-Debug]": [
         {
-            "checksum": "54d4e22f13d3145db90a5c90c91fce3d",
-            "size": 3226,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-mapjoin_on_very_complex_type-off-Debug_/opt.yql_patched"
+            "checksum": "0335b69e42a58eda41da050f0f21e3ef",
+            "size": 3266,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-mapjoin_on_very_complex_type-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_very_complex_type-off-Plan]": [
@@ -1712,9 +1712,9 @@
     ],
     "test.test[join-mergejoin_any_no_join_reduce--Debug]": [
         {
-            "checksum": "8cc5e7563e60f3cd7ab800028706ed87",
-            "size": 2083,
-            "uri": "https://{canondata_backend}/1777230/65685e9d54d416f54450defb84f83fe3b04456b0/resource.tar.gz#test.test_join-mergejoin_any_no_join_reduce--Debug_/opt.yql_patched"
+            "checksum": "f370e0520fe7624c78026af5327b301d",
+            "size": 2122,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-mergejoin_any_no_join_reduce--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_any_no_join_reduce--Plan]": [
@@ -1734,9 +1734,9 @@
     ],
     "test.test[join-mergejoin_choose_primary--Debug]": [
         {
-            "checksum": "6a9099861f1aa14d1b5e9b24077da817",
-            "size": 3411,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-mergejoin_choose_primary--Debug_/opt.yql_patched"
+            "checksum": "dbb04a4d407a00ddaf24eaf5a8ce91a6",
+            "size": 3397,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-mergejoin_choose_primary--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_choose_primary--Plan]": [
@@ -1756,9 +1756,9 @@
     ],
     "test.test[join-mergejoin_semi_composite_to_inner--Debug]": [
         {
-            "checksum": "29b65ce1384f2f2e32e43592d56e49bb",
-            "size": 7592,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-mergejoin_semi_composite_to_inner--Debug_/opt.yql_patched"
+            "checksum": "cf37465f32fc78b3576b67232ee22dd4",
+            "size": 7666,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-mergejoin_semi_composite_to_inner--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_semi_composite_to_inner--Plan]": [
@@ -1778,9 +1778,9 @@
     ],
     "test.test[join-mergejoin_semi_composite_to_inner-off-Debug]": [
         {
-            "checksum": "115a17d7f5939fcdd63f2dbb365353ae",
-            "size": 5769,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-mergejoin_semi_composite_to_inner-off-Debug_/opt.yql_patched"
+            "checksum": "e3f96fb5c45df4d260bc7666fbbb6e11",
+            "size": 5801,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-mergejoin_semi_composite_to_inner-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_semi_composite_to_inner-off-Plan]": [
@@ -1856,9 +1856,9 @@
     ],
     "test.test[join-premap_common_inner--Debug]": [
         {
-            "checksum": "6ef91266fc0927584bfcfa11297e4f0c",
-            "size": 2872,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-premap_common_inner--Debug_/opt.yql_patched"
+            "checksum": "dd79f601a292b7c2c09fab21ccc92613",
+            "size": 2888,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-premap_common_inner--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_inner--Plan]": [
@@ -1878,9 +1878,9 @@
     ],
     "test.test[join-premap_common_inner_filter--Debug]": [
         {
-            "checksum": "e453a178f393a98367c3d65ad27fd4e3",
-            "size": 2943,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-premap_common_inner_filter--Debug_/opt.yql_patched"
+            "checksum": "a8f9a7215e9894058a07a3815d813757",
+            "size": 2959,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-premap_common_inner_filter--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_common_inner_filter--Plan]": [
@@ -1900,9 +1900,9 @@
     ],
     "test.test[join-pullup_left_semi--Debug]": [
         {
-            "checksum": "eba9faaa5be18b8e6ef4e7bcfecf1e4c",
-            "size": 2627,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-pullup_left_semi--Debug_/opt.yql_patched"
+            "checksum": "793d9cf6e623b80c2b363a016fab0d9a",
+            "size": 2643,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-pullup_left_semi--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_left_semi--Plan]": [
@@ -1922,9 +1922,9 @@
     ],
     "test.test[join-pushdown_filter_over_left-off-Debug]": [
         {
-            "checksum": "b82f19647a9b2a78ad84b5815d1b7465",
-            "size": 2485,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-pushdown_filter_over_left-off-Debug_/opt.yql_patched"
+            "checksum": "78f79945a8cd92d62c5109ddff7beae1",
+            "size": 2479,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-pushdown_filter_over_left-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pushdown_filter_over_left-off-Plan]": [
@@ -1950,9 +1950,9 @@
     ],
     "test.test[join-three_equalities-off-Debug]": [
         {
-            "checksum": "317a2d6aa450e5df9ed4778194b9eba5",
-            "size": 3226,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_join-three_equalities-off-Debug_/opt.yql_patched"
+            "checksum": "3bbe175b373ed7afa13039a608cfb44f",
+            "size": 3274,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-three_equalities-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-three_equalities-off-Plan]": [
@@ -2000,9 +2000,9 @@
     ],
     "test.test[join-yql_465-off-Debug]": [
         {
-            "checksum": "01eb0bbdde55dec2a4e63dc437952b24",
-            "size": 2248,
-            "uri": "https://{canondata_backend}/1777230/65685e9d54d416f54450defb84f83fe3b04456b0/resource.tar.gz#test.test_join-yql_465-off-Debug_/opt.yql_patched"
+            "checksum": "86f189d7a8b2e8c83c933a0cfee65221",
+            "size": 2218,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_join-yql_465-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql_465-off-Plan]": [
@@ -2651,9 +2651,9 @@
     ],
     "test.test[pg-tpch-q01-default.txt-Debug]": [
         {
-            "checksum": "fccd9597f2b0ede9cd3e500e92f340ba",
-            "size": 11372,
-            "uri": "https://{canondata_backend}/212715/d4ecb16ed782ab92fb83434c6219e42fc504abe9/resource.tar.gz#test.test_pg-tpch-q01-default.txt-Debug_/opt.yql_patched"
+            "checksum": "168e1cea646413f323310cc015341f97",
+            "size": 11407,
+            "uri": "https://{canondata_backend}/1775319/171cd905ac5402be308349251477ae77481201b4/resource.tar.gz#test.test_pg-tpch-q01-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q01-default.txt-Plan]": [
@@ -2948,9 +2948,9 @@
     ],
     "test.test[simple_columns-simple_columns_join_subreq_same_key_without-default.txt-Debug]": [
         {
-            "checksum": "03fa121bfda83c092ee5ea60e5e69a9a",
-            "size": 2959,
-            "uri": "https://{canondata_backend}/1871182/6f64c40116f70a4d635a7fc8d77b59f1c2902999/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_same_key_without-default.txt-Debug_/opt.yql_patched"
+            "checksum": "e5e386f6c41aa222f46f506f5545fd87",
+            "size": 2971,
+            "uri": "https://{canondata_backend}/1936273/e97f761c072d3e8f44f6bc8a298df5508572dd64/resource.tar.gz#test.test_simple_columns-simple_columns_join_subreq_same_key_without-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[simple_columns-simple_columns_join_subreq_same_key_without-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/dq_file/part9/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part9/canondata/result.json
index 8c7c081a17b8..8b8edb5db8b2 100644
--- a/ydb/library/yql/tests/sql/dq_file/part9/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part9/canondata/result.json
@@ -278,9 +278,9 @@
     ],
     "test.test[aggregate-group_by_gs_and_having-default.txt-Debug]": [
         {
-            "checksum": "4a1478e67226b3f286ef4acba5e7bab1",
-            "size": 4805,
-            "uri": "https://{canondata_backend}/1931696/76a7bb8a2aaec831535cf7ca5b0ffb62ccdb717e/resource.tar.gz#test.test_aggregate-group_by_gs_and_having-default.txt-Debug_/opt.yql_patched"
+            "checksum": "3a69321fb54a5b53c2e98e4bbfffbc90",
+            "size": 4857,
+            "uri": "https://{canondata_backend}/1775319/ca8674d999cbbb16d2b8ee3ea7569f01aeebffef/resource.tar.gz#test.test_aggregate-group_by_gs_and_having-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_and_having-default.txt-Plan]": [
@@ -300,9 +300,9 @@
     ],
     "test.test[aggregate-group_by_gs_subselect_asterisk-default.txt-Debug]": [
         {
-            "checksum": "989c3a034a4d95b30c28a5c70de56990",
-            "size": 4177,
-            "uri": "https://{canondata_backend}/995452/7ec622aec5d016fd39433889930514dc0a6b650d/resource.tar.gz#test.test_aggregate-group_by_gs_subselect_asterisk-default.txt-Debug_/opt.yql_patched"
+            "checksum": "39d2d47db756d2b49474b5c199c4c38b",
+            "size": 4229,
+            "uri": "https://{canondata_backend}/1775059/7880e12b17712e34b83d0a19290f284c039a3892/resource.tar.gz#test.test_aggregate-group_by_gs_subselect_asterisk-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_gs_subselect_asterisk-default.txt-Plan]": [
@@ -322,9 +322,9 @@
     ],
     "test.test[aggregate-group_by_mul_gb_ru--Debug]": [
         {
-            "checksum": "e22296177388156b996f9c7d4cbeba13",
-            "size": 7205,
-            "uri": "https://{canondata_backend}/995452/7ec622aec5d016fd39433889930514dc0a6b650d/resource.tar.gz#test.test_aggregate-group_by_mul_gb_ru--Debug_/opt.yql_patched"
+            "checksum": "4eef89c55c02a52ff6a5363e05a677ab",
+            "size": 7267,
+            "uri": "https://{canondata_backend}/1775059/af971073e577c583556209f50933dfff4201794c/resource.tar.gz#test.test_aggregate-group_by_mul_gb_ru--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_mul_gb_ru--Plan]": [
@@ -344,9 +344,9 @@
     ],
     "test.test[aggregate-group_by_rollup_grouping_hum_bind--Debug]": [
         {
-            "checksum": "6f56ba8703599d31b777058eed994bf0",
-            "size": 7947,
-            "uri": "https://{canondata_backend}/995452/7ec622aec5d016fd39433889930514dc0a6b650d/resource.tar.gz#test.test_aggregate-group_by_rollup_grouping_hum_bind--Debug_/opt.yql_patched"
+            "checksum": "0fa3ad8c20368a624649240306680c0e",
+            "size": 8006,
+            "uri": "https://{canondata_backend}/1809005/eaed2cb21c41d953b2deee98fb8e34f4399b8dbc/resource.tar.gz#test.test_aggregate-group_by_rollup_grouping_hum_bind--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-group_by_rollup_grouping_hum_bind--Plan]": [
@@ -366,9 +366,9 @@
     ],
     "test.test[aggregate-list_with_fold_map--Debug]": [
         {
-            "checksum": "1e6c9744360e47f9075b1f1cc549d8ea",
-            "size": 2572,
-            "uri": "https://{canondata_backend}/1937367/1710911e4cee83432c347ca77fc35e2630f78589/resource.tar.gz#test.test_aggregate-list_with_fold_map--Debug_/opt.yql_patched"
+            "checksum": "f4a374cb0de77c173c4391757339cc24",
+            "size": 2607,
+            "uri": "https://{canondata_backend}/1920236/5181d12d98fbd8d9942aee7bad394d888116e5c2/resource.tar.gz#test.test_aggregate-list_with_fold_map--Debug_/opt.yql_patched"
         }
     ],
     "test.test[aggregate-list_with_fold_map--Plan]": [
@@ -498,9 +498,9 @@
     ],
     "test.test[blocks-group_by_complex_key--Debug]": [
         {
-            "checksum": "1241daa2f0acc468897ebf5b942e1960",
-            "size": 3256,
-            "uri": "https://{canondata_backend}/1889210/02c3d838178ec7378a674d9517d94cf16e6f7cb4/resource.tar.gz#test.test_blocks-group_by_complex_key--Debug_/opt.yql_patched"
+            "checksum": "46963505228339eaf80c52ce41c1afb1",
+            "size": 3291,
+            "uri": "https://{canondata_backend}/1773845/c2740b835a2bd143c8d121693abd92ce773d1c6b/resource.tar.gz#test.test_blocks-group_by_complex_key--Debug_/opt.yql_patched"
         }
     ],
     "test.test[blocks-group_by_complex_key--Plan]": [
@@ -1022,9 +1022,9 @@
     ],
     "test.test[in-in_immediate_subquery-default.txt-Debug]": [
         {
-            "checksum": "ad2543eb25d9eade95e6a523c2791e04",
-            "size": 3476,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_in-in_immediate_subquery-default.txt-Debug_/opt.yql_patched"
+            "checksum": "0e404ac81dc3a9e9c83fdafecccbad9c",
+            "size": 3469,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_in-in_immediate_subquery-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[in-in_immediate_subquery-default.txt-Plan]": [
@@ -1115,9 +1115,9 @@
     ],
     "test.test[join-inner_grouped--Debug]": [
         {
-            "checksum": "52aa634693ad9be4d06eff8731c300ce",
-            "size": 3467,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_join-inner_grouped--Debug_/opt.yql_patched"
+            "checksum": "18d98f6b8f7ed903b870e073428cb59b",
+            "size": 3494,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-inner_grouped--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-inner_grouped--Plan]": [
@@ -1137,9 +1137,9 @@
     ],
     "test.test[join-join_cbo_3_tables--Debug]": [
         {
-            "checksum": "9eeae6a6ae72ad4a1d0fb813144ba0b3",
-            "size": 5036,
-            "uri": "https://{canondata_backend}/1937429/6f0b11a050cc6c6080ee22988ff3362313e9fdca/resource.tar.gz#test.test_join-join_cbo_3_tables--Debug_/opt.yql_patched"
+            "checksum": "f3f01933e7d3c535215c3b42eb64f3d6",
+            "size": 5085,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-join_cbo_3_tables--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-join_cbo_3_tables--Plan]": [
@@ -1187,9 +1187,9 @@
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_only_single-off-Debug]": [
         {
-            "checksum": "c752817c25cf7a5e6ecd0c115b9213b7",
-            "size": 2585,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_only_single-off-Debug_/opt.yql_patched"
+            "checksum": "444ef3959bdbcf97c02c6cbc49415d8f",
+            "size": 2625,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-mapjoin_on_complex_type_optional_left_only_single-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mapjoin_on_complex_type_optional_left_only_single-off-Plan]": [
@@ -1218,9 +1218,9 @@
     ],
     "test.test[join-mergejoin_force_align2-off-Debug]": [
         {
-            "checksum": "b14cb6176adbe4fee3790f8aaf4e9ef7",
-            "size": 5242,
-            "uri": "https://{canondata_backend}/1937367/1710911e4cee83432c347ca77fc35e2630f78589/resource.tar.gz#test.test_join-mergejoin_force_align2-off-Debug_/opt.yql_patched"
+            "checksum": "3928b43e191e9c0d2ee51e2050c5a9e1",
+            "size": 5248,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-mergejoin_force_align2-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-mergejoin_force_align2-off-Plan]": [
@@ -1246,9 +1246,9 @@
     ],
     "test.test[join-nopushdown_filter_with_depends_on-off-Debug]": [
         {
-            "checksum": "ab69c0e470d3dea94966c4f821fdf2ef",
+            "checksum": "04760ea6ef3b1f52394af795ee9b9a1d",
             "size": 2602,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_join-nopushdown_filter_with_depends_on-off-Debug_/opt.yql_patched"
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-nopushdown_filter_with_depends_on-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-nopushdown_filter_with_depends_on-off-Plan]": [
@@ -1267,9 +1267,9 @@
     ],
     "test.test[join-premap_map_semi-off-Debug]": [
         {
-            "checksum": "fc8b924f5a14e68d529538a39b67672b",
-            "size": 3205,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_join-premap_map_semi-off-Debug_/opt.yql_patched"
+            "checksum": "0c85090a01150375583cbf19ded5f3ea",
+            "size": 3200,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-premap_map_semi-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_map_semi-off-Plan]": [
@@ -1295,9 +1295,9 @@
     ],
     "test.test[join-premap_merge_extrasort2-off-Debug]": [
         {
-            "checksum": "e98c8f45c93be4c1b1e00a273f39dd75",
-            "size": 3854,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_join-premap_merge_extrasort2-off-Debug_/opt.yql_patched"
+            "checksum": "5760ecc3af6bc0033561109f6bcb921a",
+            "size": 3908,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-premap_merge_extrasort2-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-premap_merge_extrasort2-off-Plan]": [
@@ -1323,9 +1323,9 @@
     ],
     "test.test[join-pullup_context_dep-off-Debug]": [
         {
-            "checksum": "a7e306a586694dc7389fbc7eea90e821",
-            "size": 2806,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_join-pullup_context_dep-off-Debug_/opt.yql_patched"
+            "checksum": "f89c2c8fd91bdf57773513c951324b31",
+            "size": 2800,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-pullup_context_dep-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-pullup_context_dep-off-Plan]": [
@@ -1351,9 +1351,9 @@
     ],
     "test.test[join-split_to_list_as_key--Debug]": [
         {
-            "checksum": "955b8d6249a0e7c7485214c2e48b7ab0",
-            "size": 3600,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_join-split_to_list_as_key--Debug_/opt.yql_patched"
+            "checksum": "47fc9f2d0ec533d18a2500cf0c73290d",
+            "size": 3603,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-split_to_list_as_key--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-split_to_list_as_key--Plan]": [
@@ -1373,9 +1373,9 @@
     ],
     "test.test[join-star_join-off-Debug]": [
         {
-            "checksum": "99250c34b2b25ba921c27a6434b86893",
-            "size": 7474,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_join-star_join-off-Debug_/opt.yql_patched"
+            "checksum": "0dadbd9e65a1c6e03f282ca690ec5536",
+            "size": 7551,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-star_join-off-Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-star_join-off-Plan]": [
@@ -1401,9 +1401,9 @@
     ],
     "test.test[join-yql-14847--Debug]": [
         {
-            "checksum": "b3b0b9454ecc6aebb102e678397429aa",
-            "size": 3675,
-            "uri": "https://{canondata_backend}/1937367/1710911e4cee83432c347ca77fc35e2630f78589/resource.tar.gz#test.test_join-yql-14847--Debug_/opt.yql_patched"
+            "checksum": "2d061f06d3b4d7ae5af897977d68d671",
+            "size": 3692,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_join-yql-14847--Debug_/opt.yql_patched"
         }
     ],
     "test.test[join-yql-14847--Plan]": [
@@ -1561,9 +1561,9 @@
     ],
     "test.test[optimizers-test_no_aggregate_split--Debug]": [
         {
-            "checksum": "784e398cb1cbd43f2a3d16afce6c8618",
-            "size": 4393,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_optimizers-test_no_aggregate_split--Debug_/opt.yql_patched"
+            "checksum": "7861e38b33eb6960af254850b141d0e8",
+            "size": 4435,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_optimizers-test_no_aggregate_split--Debug_/opt.yql_patched"
         }
     ],
     "test.test[optimizers-test_no_aggregate_split--Plan]": [
@@ -1678,9 +1678,9 @@
     ],
     "test.test[pg-join_using_tables4-default.txt-Debug]": [
         {
-            "checksum": "c975eab930e93351f2380d7c21db44ee",
-            "size": 3510,
-            "uri": "https://{canondata_backend}/1936273/d81f255ee5d0712542ca44dabb01842e1a996c48/resource.tar.gz#test.test_pg-join_using_tables4-default.txt-Debug_/opt.yql_patched"
+            "checksum": "04ea3e8c72e723b044352c4c337dc155",
+            "size": 3526,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_pg-join_using_tables4-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-join_using_tables4-default.txt-Plan]": [
@@ -1779,28 +1779,6 @@
         }
     ],
     "test.test[pg-range_function_multi_record-default.txt-Results]": [],
-    "test.test[pg-record_from_table_row-default.txt-Analyze]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1937429/8c415fc988c547984fa23f72063d4859ddd65412/resource.tar.gz#test.test_pg-record_from_table_row-default.txt-Analyze_/plan.txt"
-        }
-    ],
-    "test.test[pg-record_from_table_row-default.txt-Debug]": [
-        {
-            "checksum": "e240a0aee2e23c302a2d277654753356",
-            "size": 541,
-            "uri": "https://{canondata_backend}/1923547/c9f8df039ef6cb4cc282d85e6cf6b18304fcc59a/resource.tar.gz#test.test_pg-record_from_table_row-default.txt-Debug_/opt.yql_patched"
-        }
-    ],
-    "test.test[pg-record_from_table_row-default.txt-Plan]": [
-        {
-            "checksum": "b4dd508a329723c74293d80f0278c705",
-            "size": 505,
-            "uri": "https://{canondata_backend}/1937429/8c415fc988c547984fa23f72063d4859ddd65412/resource.tar.gz#test.test_pg-record_from_table_row-default.txt-Plan_/plan.txt"
-        }
-    ],
-    "test.test[pg-record_from_table_row-default.txt-Results]": [],
     "test.test[pg-select_agg_gs_cube-default.txt-Analyze]": [
         {
             "checksum": "b4dd508a329723c74293d80f0278c705",
@@ -2096,9 +2074,9 @@
     ],
     "test.test[pg-tpch-q08-default.txt-Debug]": [
         {
-            "checksum": "8575ca02544da94d374dfc8db0d3ccce",
-            "size": 20562,
-            "uri": "https://{canondata_backend}/1871182/e74dc45050363faa345feb7a557afc518d879b69/resource.tar.gz#test.test_pg-tpch-q08-default.txt-Debug_/opt.yql_patched"
+            "checksum": "35ffe4f3b62268a11b89ef00043ccf5b",
+            "size": 20637,
+            "uri": "https://{canondata_backend}/1936273/cb7c5fe42d55b43de4d71f64638d96e5d2301a14/resource.tar.gz#test.test_pg-tpch-q08-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[pg-tpch-q08-default.txt-Plan]": [
@@ -2233,9 +2211,9 @@
     ],
     "test.test[sampling-join_left_sample-default.txt-Debug]": [
         {
-            "checksum": "fabb6676816cc6b9847fbc1f6334d700",
-            "size": 2214,
-            "uri": "https://{canondata_backend}/1937367/1710911e4cee83432c347ca77fc35e2630f78589/resource.tar.gz#test.test_sampling-join_left_sample-default.txt-Debug_/opt.yql_patched"
+            "checksum": "7a66ab4048c92e314e5285f17823a8fc",
+            "size": 2230,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_sampling-join_left_sample-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-join_left_sample-default.txt-Plan]": [
@@ -2254,9 +2232,9 @@
     ],
     "test.test[sampling-orderedjoin_right_sample-default.txt-Debug]": [
         {
-            "checksum": "920fd42142804fa72334c6731f80b855",
-            "size": 2319,
-            "uri": "https://{canondata_backend}/1937367/1710911e4cee83432c347ca77fc35e2630f78589/resource.tar.gz#test.test_sampling-orderedjoin_right_sample-default.txt-Debug_/opt.yql_patched"
+            "checksum": "0e30b23c12c8784129cbcc601b475890",
+            "size": 2335,
+            "uri": "https://{canondata_backend}/1773845/7025c8692c966d9205ab1a92960e3c48ba756e3e/resource.tar.gz#test.test_sampling-orderedjoin_right_sample-default.txt-Debug_/opt.yql_patched"
         }
     ],
     "test.test[sampling-orderedjoin_right_sample-default.txt-Plan]": [
diff --git a/ydb/library/yql/tests/sql/sql2yql/canondata/result.json b/ydb/library/yql/tests/sql/sql2yql/canondata/result.json
index 8b904d662c4f..a9bef9f63aa0 100644
--- a/ydb/library/yql/tests/sql/sql2yql/canondata/result.json
+++ b/ydb/library/yql/tests/sql/sql2yql/canondata/result.json
@@ -1868,6 +1868,13 @@
             "uri": "https://{canondata_backend}/1942415/e6af6d354a98ef890e03fc9f0ff5926afc11a26b/resource.tar.gz#test_sql2yql.test_aggregate-dedup_state_keys_/sql.yql"
         }
     ],
+    "test_sql2yql.test[aggregate-disable_blocks_with_spilling]": [
+        {
+            "checksum": "e1c9df055ae7de78e0d0364ec949dec4",
+            "size": 1398,
+            "uri": "https://{canondata_backend}/1936947/cdbc6e86b3a08f513dc20af9f537f10f6b930f5d/resource.tar.gz#test_sql2yql.test_aggregate-disable_blocks_with_spilling_/sql.yql"
+        }
+    ],
     "test_sql2yql.test[aggregate-ensure_count]": [
         {
             "checksum": "680e664bf810c0f13951de38d3cf94f7",
@@ -21132,6 +21139,13 @@
             "uri": "https://{canondata_backend}/1880306/64654158d6bfb1289c66c626a8162239289559d0/resource.tar.gz#test_sql_format.test_aggregate-dedup_state_keys_/formatted.sql"
         }
     ],
+    "test_sql_format.test[aggregate-disable_blocks_with_spilling]": [
+        {
+            "checksum": "ed1c0334420d2ec08b8ccc4020e4fb6b",
+            "size": 88,
+            "uri": "https://{canondata_backend}/1920236/3d99d8b2ede4d290229a75d3c17d5a932a859473/resource.tar.gz#test_sql_format.test_aggregate-disable_blocks_with_spilling_/formatted.sql"
+        }
+    ],
     "test_sql_format.test[aggregate-ensure_count]": [
         {
             "checksum": "7a2ea2eeaf67cc395330f6718ce49635",
diff --git a/ydb/library/yql/tests/sql/suites/aggregate/disable_blocks_with_spilling.cfg b/ydb/library/yql/tests/sql/suites/aggregate/disable_blocks_with_spilling.cfg
new file mode 100644
index 000000000000..bb375970b492
--- /dev/null
+++ b/ydb/library/yql/tests/sql/suites/aggregate/disable_blocks_with_spilling.cfg
@@ -0,0 +1,5 @@
+in Input input.txt
+
+providers dq
+pragma dq.SpillingEngine="file";
+pragma dq.EnableSpillingNodes="Aggregation";
diff --git a/ydb/library/yql/tests/sql/suites/aggregate/disable_blocks_with_spilling.sql b/ydb/library/yql/tests/sql/suites/aggregate/disable_blocks_with_spilling.sql
new file mode 100644
index 000000000000..0d8671bf0b21
--- /dev/null
+++ b/ydb/library/yql/tests/sql/suites/aggregate/disable_blocks_with_spilling.sql
@@ -0,0 +1,2 @@
+pragma BlockEngine='force';
+select count(key) from plato.Input group by key;
diff --git a/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream-dq_fail.cfg b/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream-dq_fail.cfg
new file mode 100644
index 000000000000..c426164726cd
--- /dev/null
+++ b/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream-dq_fail.cfg
@@ -0,0 +1,4 @@
+xfail
+in Input1 input1.txt
+udf python3_udf
+providers dq
diff --git a/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream._sql b/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream._sql
new file mode 100644
index 000000000000..82b3767cc507
--- /dev/null
+++ b/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream._sql
@@ -0,0 +1,14 @@
+/* postgres can not */
+USE plato;
+
+$udfScript = @@
+import functools
+def Len(stream):
+    sums = [functools.reduce(lambda x,y: x + y, pair[1], 0) for pair in stream]
+    return {"sumByAllVal":functools.reduce(lambda x,y: x + y, sums, 0)}
+@@;
+
+$udf = Python3::Len(Callable<(Stream<Tuple<String,Stream<Uint32>>>)->Struct<sumByAllVal:Uint32>>, $udfScript);
+
+--INSERT INTO Output
+REDUCE Input1 ON key USING ALL $udf(cast(value as uint32) ?? 0);
diff --git a/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream.cfg b/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream.cfg
new file mode 100644
index 000000000000..13bb8734c430
--- /dev/null
+++ b/ydb/library/yql/tests/sql/suites/produce/reduce_all_with_python_input_stream.cfg
@@ -0,0 +1,3 @@
+in Input1 input1.txt
+udf python3_udf
+providers yt
diff --git a/ydb/library/yql/tests/sql/suites/produce/reduce_with_python_input_stream._sql b/ydb/library/yql/tests/sql/suites/produce/reduce_with_python_input_stream._sql
new file mode 100644
index 000000000000..f244cd5c0d8c
--- /dev/null
+++ b/ydb/library/yql/tests/sql/suites/produce/reduce_with_python_input_stream._sql
@@ -0,0 +1,14 @@
+/* postgres can not */
+USE plato;
+
+$udfScript = @@
+import functools
+def Len(key, input):
+    return {"value":functools.reduce(lambda x,y: x + 1, input, 0)}
+@@;
+
+$udf = Python::Len(Callable<(String, Stream<String>)->Struct<value:Uint32>>, $udfScript);
+
+$res = (REDUCE Input1 ON key USING $udf(value));
+
+select * from $res order by value;
diff --git a/ydb/library/yql/tests/sql/suites/produce/reduce_with_python_input_stream.cfg b/ydb/library/yql/tests/sql/suites/produce/reduce_with_python_input_stream.cfg
new file mode 100644
index 000000000000..b16f832837fc
--- /dev/null
+++ b/ydb/library/yql/tests/sql/suites/produce/reduce_with_python_input_stream.cfg
@@ -0,0 +1,2 @@
+in Input1 input1.txt
+udf python3_udf
diff --git a/ydb/tests/fq/generic/analytics/test_join.py b/ydb/tests/fq/generic/analytics/test_join.py
new file mode 100644
index 000000000000..89b1cdc93aec
--- /dev/null
+++ b/ydb/tests/fq/generic/analytics/test_join.py
@@ -0,0 +1,102 @@
+import logging
+import pytest
+
+import ydb.public.api.protos.draft.fq_pb2 as fq
+from ydb.tests.tools.fq_runner.kikimr_utils import yq_all
+
+from ydb.tests.tools.fq_runner.fq_client import FederatedQueryClient
+from ydb.tests.fq.generic.utils.settings import Settings
+from ydb.library.yql.providers.generic.connector.tests.utils.one_time_waiter import OneTimeWaiter
+from ydb.library.yql.providers.generic.connector.api.common.data_source_pb2 import EDataSourceKind
+import conftest
+
+
+one_time_waiter = OneTimeWaiter(
+    data_source_kind=EDataSourceKind.YDB,
+    docker_compose_file_path=conftest.docker_compose_file_path,
+    expected_tables=["join_table", "dummy_table"],
+)
+
+
+class TestJoinAnalytics:
+    @yq_all
+    @pytest.mark.parametrize(
+        "mvp_external_ydb_endpoint", [{"endpoint": "tests-fq-generic-analytics-ydb:2136"}], indirect=True
+    )
+    @pytest.mark.parametrize("fq_client", [{"folder_id": "my_folder"}], indirect=True)
+    @pytest.mark.parametrize("query_type", [fq.QueryContent.QueryType.ANALYTICS, fq.QueryContent.QueryType.STREAMING])
+    def test_simple(self, fq_client: FederatedQueryClient, settings: Settings, query_type):
+        table_name = "join_table"
+        ch_conn_name = f"ch_conn_{table_name}"
+        gp_conn_name = f"gp_conn_{table_name}"
+        pg_conn_name = f"pg_conn_{table_name}"
+        ydb_conn_name = f"ydb_conn_{table_name}"
+        query_name = f"query_{table_name}"
+
+        fq_client.create_clickhouse_connection(
+            name=ch_conn_name,
+            database_name=settings.clickhouse.dbname,
+            database_id="clickhouse_cluster_id",
+            login=settings.clickhouse.username,
+            password=settings.clickhouse.password,
+        )
+
+        fq_client.create_greenplum_connection(
+            name=gp_conn_name,
+            database_name=settings.greenplum.dbname,
+            database_id="greenplum_cluster_id",
+            login=settings.greenplum.username,
+            password=settings.greenplum.password,
+        )
+
+        fq_client.create_postgresql_connection(
+            name=pg_conn_name,
+            database_name=settings.postgresql.dbname,
+            database_id="postgresql_cluster_id",
+            login=settings.postgresql.username,
+            password=settings.postgresql.password,
+        )
+
+        one_time_waiter.wait()
+
+        fq_client.create_ydb_connection(
+            name=ydb_conn_name,
+            database_id=settings.ydb.dbname,
+        )
+
+        sql = Rf"""
+            SELECT pg.data AS data_pg, ch.data AS data_ch, ydb.data AS data_ydb, gp.data AS data_gp
+            FROM {pg_conn_name}.{table_name} AS pg
+            JOIN {ch_conn_name}.{table_name} AS ch
+            ON pg.id = ch.id
+            JOIN {ydb_conn_name}.{table_name} AS ydb
+            ON pg.id = ydb.id
+            JOIN {gp_conn_name}.{table_name} AS gp
+            ON pg.id = gp.id
+            ORDER BY data_pg;
+            """
+
+        query_id = fq_client.create_query(query_name, sql, type=query_type).result.query_id
+        fq_client.wait_query_status(query_id, fq.QueryMeta.COMPLETED)
+
+        data = fq_client.get_result_data(query_id)
+        result_set = data.result.result_set
+        logging.debug(str(result_set))
+        assert len(result_set.columns) == 4
+        assert result_set.columns[0].name == "data_pg"
+        assert result_set.columns[1].name == "data_ch"
+        assert result_set.columns[2].name == "data_ydb"
+        assert result_set.columns[3].name == "data_gp"
+        assert len(result_set.rows) == 3
+        assert result_set.rows[0].items[0].bytes_value == b"pg10"
+        assert result_set.rows[0].items[1].bytes_value == b"ch10"
+        assert result_set.rows[0].items[2].bytes_value == b"ydb10"
+        assert result_set.rows[0].items[3].bytes_value == b"gp10"
+        assert result_set.rows[1].items[0].bytes_value == b"pg20"
+        assert result_set.rows[1].items[1].bytes_value == b"ch20"
+        assert result_set.rows[1].items[2].bytes_value == b"ydb20"
+        assert result_set.rows[1].items[3].bytes_value == b"gp20"
+        assert result_set.rows[2].items[0].bytes_value == b"pg30"
+        assert result_set.rows[2].items[1].bytes_value == b"ch30"
+        assert result_set.rows[2].items[2].bytes_value == b"ydb30"
+        assert result_set.rows[2].items[3].bytes_value == b"gp30"
diff --git a/ydb/tests/functional/canonical/canondata/result.json b/ydb/tests/functional/canonical/canondata/result.json
index 6934b75effcf..7e82003dbd87 100644
--- a/ydb/tests/functional/canonical/canondata/result.json
+++ b/ydb/tests/functional/canonical/canondata/result.json
@@ -663,6 +663,26 @@
             "uri": "file://test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_point_range_rp.sql-result_sets_/pk_predicate_pk_predicate_point_range_rp.sql.results"
         }
     },
+    "test_sql.TestCanonicalFolder1.test_case[pk_predicate/pk_predicate_random_chars.sql-plan]": {
+        "plan": {
+            "uri": "file://test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars.sql-plan_/pk_predicate_pk_predicate_random_chars.sql.plan"
+        }
+    },
+    "test_sql.TestCanonicalFolder1.test_case[pk_predicate/pk_predicate_random_chars.sql-result_sets]": {
+        "result_sets": {
+            "uri": "file://test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars.sql-result_sets_/pk_predicate_pk_predicate_random_chars.sql.results"
+        }
+    },
+    "test_sql.TestCanonicalFolder1.test_case[pk_predicate/pk_predicate_random_chars_ranges.sql-plan]": {
+        "plan": {
+            "uri": "file://test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars_ranges.sql-plan_/pk_predicate_pk_predicate_random_chars_ranges.sql.plan"
+        }
+    },
+    "test_sql.TestCanonicalFolder1.test_case[pk_predicate/pk_predicate_random_chars_ranges.sql-result_sets]": {
+        "result_sets": {
+            "uri": "file://test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars_ranges.sql-result_sets_/pk_predicate_pk_predicate_random_chars_ranges.sql.results"
+        }
+    },
     "test_sql.TestCanonicalFolder1.test_case[pk_predicate/pk_predicate_range.sql-plan]": {
         "plan": {
             "uri": "file://test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_range.sql-plan_/pk_predicate_pk_predicate_range.sql.plan"
diff --git a/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_join_group_by_lookup.script-script_/join_group_by_lookup.script.plan b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_join_group_by_lookup.script-script_/join_group_by_lookup.script.plan
index f9c13054bfc8..17305cda032d 100644
--- a/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_join_group_by_lookup.script-script_/join_group_by_lookup.script.plan
+++ b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_join_group_by_lookup.script-script_/join_group_by_lookup.script.plan
@@ -35,7 +35,7 @@
                                         "PlanNodeType": "Connection",
                                         "Plans": [
                                             {
-                                                "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                                "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                                 "Operators": [
                                                     {
                                                         "Inputs": [
@@ -48,16 +48,25 @@
                                                         "TopSortBy": ""
                                                     },
                                                     {
-                                                        "Condition": "Group = Group",
+                                                        "Condition": "a.Group = t.Group",
                                                         "Inputs": [
                                                             {
                                                                 "ExternalPlanNodeId": 16
                                                             },
                                                             {
-                                                                "ExternalPlanNodeId": 14
+                                                                "InternalOperatorId": 2
                                                             }
                                                         ],
                                                         "Name": "LeftJoin (MapJoin)"
+                                                    },
+                                                    {
+                                                        "Inputs": [
+                                                            {
+                                                                "ExternalPlanNodeId": 14
+                                                            }
+                                                        ],
+                                                        "Name": "Filter",
+                                                        "Predicate": "Exist(item.Group)"
                                                     }
                                                 ],
                                                 "PlanNodeId": 17,
diff --git a/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_join_join_to_idx_lookup.sql-result_sets_/join_join_to_idx_lookup.sql.results b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_join_join_to_idx_lookup.sql-result_sets_/join_join_to_idx_lookup.sql.results
index c6a4019c72ba..301cdf302f94 100644
--- a/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_join_join_to_idx_lookup.sql-result_sets_/join_join_to_idx_lookup.sql.results
+++ b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_join_join_to_idx_lookup.sql-result_sets_/join_join_to_idx_lookup.sql.results
@@ -1,15 +1,19 @@
 [
     [
         {
+            "t1.Fk21": 103,
             "t3.Value": 1001
         },
         {
+            "t1.Fk21": 104,
             "t3.Value": null
         },
         {
+            "t1.Fk21": 105,
             "t3.Value": 1002
         },
         {
+            "t1.Fk21": 106,
             "t3.Value": null
         }
     ]
diff --git a/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars.sql-plan_/pk_predicate_pk_predicate_random_chars.sql.plan b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars.sql-plan_/pk_predicate_pk_predicate_random_chars.sql.plan
new file mode 100644
index 000000000000..c7e7dcd2273c
--- /dev/null
+++ b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars.sql-plan_/pk_predicate_pk_predicate_random_chars.sql.plan
@@ -0,0 +1,20 @@
+{
+    "meta": {
+        "type": "query",
+        "version": "0.2"
+    },
+    "tables": [
+        {
+            "name": "/local/base_pk_predicate_pk_predicate_random_chars_sql_plan/Input5",
+            "reads": [
+                {
+                    "columns": [
+                        "HashPassword",
+                        "Login"
+                    ],
+                    "type": "Lookup"
+                }
+            ]
+        }
+    ]
+}
\ No newline at end of file
diff --git a/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars.sql-result_sets_/pk_predicate_pk_predicate_random_chars.sql.results b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars.sql-result_sets_/pk_predicate_pk_predicate_random_chars.sql.results
new file mode 100644
index 000000000000..5825bcacc690
--- /dev/null
+++ b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars.sql-result_sets_/pk_predicate_pk_predicate_random_chars.sql.results
@@ -0,0 +1,3 @@
+[
+    []
+]
\ No newline at end of file
diff --git a/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars_ranges.sql-plan_/pk_predicate_pk_predicate_random_chars_ranges.sql.plan b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars_ranges.sql-plan_/pk_predicate_pk_predicate_random_chars_ranges.sql.plan
new file mode 100644
index 000000000000..08df07dc2a2f
--- /dev/null
+++ b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars_ranges.sql-plan_/pk_predicate_pk_predicate_random_chars_ranges.sql.plan
@@ -0,0 +1,24 @@
+{
+    "meta": {
+        "type": "query",
+        "version": "0.2"
+    },
+    "tables": [
+        {
+            "name": "/local/base_pk_predicate_pk_predicate_random_chars_ranges_sql_plan/Input5",
+            "reads": [
+                {
+                    "columns": [
+                        "HashPassword",
+                        "Login"
+                    ],
+                    "limit": "1001",
+                    "scan_by": [
+                        "HashPassword (\u00ab\u00bb, Non-UTF8 string)"
+                    ],
+                    "type": "Scan"
+                }
+            ]
+        }
+    ]
+}
\ No newline at end of file
diff --git a/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars_ranges.sql-result_sets_/pk_predicate_pk_predicate_random_chars_ranges.sql.results b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars_ranges.sql-result_sets_/pk_predicate_pk_predicate_random_chars_ranges.sql.results
new file mode 100644
index 000000000000..5825bcacc690
--- /dev/null
+++ b/ydb/tests/functional/canonical/canondata/test_sql.TestCanonicalFolder1.test_case_pk_predicate_pk_predicate_random_chars_ranges.sql-result_sets_/pk_predicate_pk_predicate_random_chars_ranges.sql.results
@@ -0,0 +1,3 @@
+[
+    []
+]
\ No newline at end of file
diff --git a/ydb/tests/functional/canonical/sql/Input5.data b/ydb/tests/functional/canonical/sql/Input5.data
new file mode 100644
index 000000000000..9c2ea2bdf56f
--- /dev/null
+++ b/ydb/tests/functional/canonical/sql/Input5.data
@@ -0,0 +1,5 @@
+[
+{"Login":"Kostya Vedernikov","HashPassword":"siditnazp"},
+{"Login":"Vitalik Gridnev","HashPassword":"ydbtopdatabase"},
+{"Login":"Pudge1000-7","HashPassword":"makaka"}
+]
diff --git a/ydb/tests/functional/canonical/sql/input5.table b/ydb/tests/functional/canonical/sql/input5.table
new file mode 100644
index 000000000000..20d9f6ef21a5
--- /dev/null
+++ b/ydb/tests/functional/canonical/sql/input5.table
@@ -0,0 +1,10 @@
+path: "/local/Input5"
+columns {
+  name: "Login"
+  type { optional_type { item { type_id: STRING } } }
+}
+columns {
+  name: "HashPassword"
+  type { optional_type { item { type_id: STRING } } }
+}
+primary_key: "HashPassword"
diff --git a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup.sql b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup.sql
index 28ee29e0beec..bea6488949b9 100644
--- a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup.sql
+++ b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup.sql
@@ -1,8 +1,9 @@
+PRAGMA ydb.OptOverrideStatistics='{"/local/base_join_join_to_idx_lookup_sql_plan/InputJoin1":{"n_rows":7},"/local/base_join_join_to_idx_lookup_sql_plan/InputJoin2":{"n_rows":9},"/local/base_join_join_to_idx_lookup_sql_plan/InputJoin3":{"n_rows":3}}';
 
-
-SELECT t3.Value FROM InputJoin1 AS t1
+SELECT t1.Fk21, t3.Value FROM InputJoin1 AS t1
 LEFT JOIN InputJoin2 AS t2
 ON t1.Fk21 == t2.Key1 AND t1.Fk22 == t2.Key2
 LEFT JOIN InputJoin3 AS t3
 ON t2.Fk3 == t3.Key
-WHERE t1.Value == "Value2" OR t1.Value == "Value3";
+WHERE t1.Value == "Value2" OR t1.Value == "Value3"
+ORDER BY t1.Fk21;
diff --git a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_equi.sql b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_equi.sql
index c5161f1b0d4d..98e10e6b3c9f 100644
--- a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_equi.sql
+++ b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_equi.sql
@@ -1,4 +1,4 @@
-
+PRAGMA ydb.OptOverrideStatistics='{"/local/base_join_join_to_idx_lookup_equi_sql_plan/InputJoin1":{"n_rows":7},"/local/base_join_join_to_idx_lookup_equi_sql_plan/InputJoin2":{"n_rows":9},"/local/base_join_join_to_idx_lookup_equi_sql_plan/InputJoin3":{"n_rows":3}}';
 PRAGMA DisableSimpleColumns;
 
 SELECT *
diff --git a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_inner.sql b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_inner.sql
index dfff110a27bd..9f9eb04d743b 100644
--- a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_inner.sql
+++ b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_inner.sql
@@ -1,4 +1,4 @@
-
+PRAGMA ydb.OptOverrideStatistics='{"/local/base_join_join_to_idx_lookup_inner_sql_plan/InputJoin1":{"n_rows":7},"/local/base_join_join_to_idx_lookup_inner_sql_plan/InputJoin2":{"n_rows":9},"/local/base_join_join_to_idx_lookup_inner_sql_plan/InputJoin3":{"n_rows":3}}';
 
 SELECT t1.Value AS Value1, t3.Value AS Value3
 FROM InputJoin1 AS t1
diff --git a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_partial_inner.sql b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_partial_inner.sql
index f5d83fcce10e..17a1eb621f2d 100644
--- a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_partial_inner.sql
+++ b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_partial_inner.sql
@@ -1,4 +1,4 @@
-
+PRAGMA ydb.OptOverrideStatistics='{"/local/base_join_join_to_idx_lookup_partial_inner_sql_plan/InputJoin1":{"n_rows":7},"/local/base_join_join_to_idx_lookup_partial_inner_sql_plan/InputJoin2":{"n_rows":9},"/local/base_join_join_to_idx_lookup_partial_inner_sql_plan/InputJoin3":{"n_rows":3}}';
 
 SELECT t1.Value AS Value1, t2.Value AS Value2, t3.Value AS Value3
 FROM InputJoin1 AS t1
diff --git a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_partial_left.sql b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_partial_left.sql
index 5f4ebfbceb05..a42d6d9460f3 100644
--- a/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_partial_left.sql
+++ b/ydb/tests/functional/canonical/sql/join/join_to_idx_lookup_partial_left.sql
@@ -1,4 +1,4 @@
-
+PRAGMA ydb.OptOverrideStatistics='{"/local/base_join_join_to_idx_lookup_partial_left_sql_plan/InputJoin1":{"n_rows":7},"/local/base_join_join_to_idx_lookup_partial_left_sql_plan/InputJoin2":{"n_rows":9},"/local/base_join_join_to_idx_lookup_partial_left_sql_plan/InputJoin3":{"n_rows":3}}';
 
 SELECT t1.Value AS Value1, t2.Value AS Value2, t3.Value AS Value3
 FROM InputJoin1 AS t1
diff --git a/ydb/tests/functional/canonical/sql/pk_predicate/pk_predicate_random_chars.sql b/ydb/tests/functional/canonical/sql/pk_predicate/pk_predicate_random_chars.sql
new file mode 100644
index 000000000000..bdeda276431e
--- /dev/null
+++ b/ydb/tests/functional/canonical/sql/pk_predicate/pk_predicate_random_chars.sql
@@ -0,0 +1,1 @@
+select * from Input5 where HashPassword == Digest::Sha256('www.supersecretpassword.com');
diff --git a/ydb/tests/functional/canonical/sql/pk_predicate/pk_predicate_random_chars_ranges.sql b/ydb/tests/functional/canonical/sql/pk_predicate/pk_predicate_random_chars_ranges.sql
new file mode 100644
index 000000000000..74449d52d8de
--- /dev/null
+++ b/ydb/tests/functional/canonical/sql/pk_predicate/pk_predicate_random_chars_ranges.sql
@@ -0,0 +1,1 @@
+select * from Input5 where HashPassword < Digest::Sha256('www.supersecretpassword.com');
diff --git a/ydb/tests/functional/canonical/test_sql.py b/ydb/tests/functional/canonical/test_sql.py
index 7863bdfe3e26..72ac67c73803 100644
--- a/ydb/tests/functional/canonical/test_sql.py
+++ b/ydb/tests/functional/canonical/test_sql.py
@@ -449,6 +449,16 @@ def compare_tables_test(self, canons, config, query_name):
                 )
             )
 
+    def remove_optimizer_estimates(self, query_plan):
+        if 'Plans' in query_plan:
+            for p in query_plan['Plans']:
+                self.remove_optimizer_estimates(p)
+        if 'Operators' in query_plan:
+            for op in query_plan['Operators']:
+                for key in ['A-Cpu', 'A-Rows', 'E-Cost', 'E-Rows', 'E-Size']:
+                    if key in op:
+                        del op[key]
+
     def run_test_case(self, query_name, kind):
         self.initialize_common(query_name, kind)
         query = self.format_query(self.read_query_text(query_name))
@@ -465,6 +475,8 @@ def run_test_case(self, query_name, kind):
                 for q in plan['queries']:
                     if 'SimplifiedPlan' in q:
                         del q['SimplifiedPlan']
+                    if 'Plan' in q:
+                        self.remove_optimizer_estimates(q['Plan'])
             canons['script_plan'] = self.canonical_plan(query_name, self.pretty_json(plan))
             self.compare_tables_test(canons, config, query_name)
         elif kind == 'plan':
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-0 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-0
index e83db242df17..db59f3f60bbc 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-0
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-0
@@ -122,90 +122,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": null,
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 106
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-1 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-1
index 897e750c37fb..5e24bd3f40de 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-1
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-1
@@ -63,8 +63,17 @@
                                         "PlanNodeType": "Connection",
                                         "Plans": [
                                             {
-                                                "Node Type": "TableFullScan",
+                                                "Node Type": "Filter-TableFullScan",
                                                 "Operators": [
+                                                    {
+                                                        "Inputs": [
+                                                            {
+                                                                "InternalOperatorId": 1
+                                                            }
+                                                        ],
+                                                        "Name": "Filter",
+                                                        "Predicate": "AdvEngineID != 0"
+                                                    },
                                                     {
                                                         "Inputs": [],
                                                         "Name": "TableFullScan",
@@ -161,129 +170,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "AdvEngineID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Int32": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 41
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 108
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-10 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-10
index 2b73fc9b9827..46c3390cba29 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-10
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-10
@@ -84,7 +84,7 @@
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "Aggregate-TableFullScan",
+                                                                                "Node Type": "Aggregate-Filter-TableFullScan",
                                                                                 "Operators": [
                                                                                     {
                                                                                         "Aggregation": "state",
@@ -96,6 +96,15 @@
                                                                                         ],
                                                                                         "Name": "Aggregate"
                                                                                     },
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 2
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "MobilePhoneModel != "
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableFullScan",
@@ -192,147 +201,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: Inc(state._yql_agg_0)}",
-                                                        "GroupBy": "item.MobilePhoneModel",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "MobilePhoneModel",
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 106
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Bytes": ""
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 107
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 35
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 106
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 0,
-                                                                                            "YqlOperationId": 12
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 107
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 35
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 10
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-11 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-11
index f220192bffc3..304bcd979137 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-11
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-11
@@ -86,7 +86,7 @@
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "Aggregate-TableFullScan",
+                                                                                "Node Type": "Aggregate-Filter-TableFullScan",
                                                                                 "Operators": [
                                                                                     {
                                                                                         "Aggregation": "state",
@@ -98,6 +98,15 @@
                                                                                         ],
                                                                                         "Name": "Aggregate"
                                                                                     },
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 2
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "MobilePhoneModel != "
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableFullScan",
@@ -198,151 +207,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: Inc(state._yql_agg_0)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "MobilePhone",
-                                                                            "MobilePhoneModel",
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 106
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Bytes": ""
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 107
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 35
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 106
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 0,
-                                                                                            "YqlOperationId": 12
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 107
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 34
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 35
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 10
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-12 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-12
index 1c7f8a39bfee..7d698c1121a3 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-12
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-12
@@ -59,8 +59,17 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "TableFullScan",
+                                                                "Node Type": "Filter-TableFullScan",
                                                                 "Operators": [
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 1
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "SearchPhrase != "
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableFullScan",
@@ -171,139 +180,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "SearchPhrase"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 40
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            },
-                                                                            {
-                                                                                "Id": 108
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-13 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-13
index 536f110df353..f4ff89ee758e 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-13
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-13
@@ -84,7 +84,7 @@
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "Aggregate-TableFullScan",
+                                                                                "Node Type": "Aggregate-Filter-TableFullScan",
                                                                                 "Operators": [
                                                                                     {
                                                                                         "Aggregation": "state",
@@ -96,6 +96,15 @@
                                                                                         ],
                                                                                         "Name": "Aggregate"
                                                                                     },
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 2
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "SearchPhrase != "
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableFullScan",
@@ -192,147 +201,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: Inc(state._yql_agg_0)}",
-                                                        "GroupBy": "item.SearchPhrase",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "SearchPhrase",
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 106
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Bytes": ""
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 107
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 40
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 106
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 0,
-                                                                                            "YqlOperationId": 12
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 107
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 40
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 10
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-14 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-14
index 81c702c23b55..7c71dabd5722 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-14
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-14
@@ -60,8 +60,17 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "TableFullScan",
+                                                                "Node Type": "Filter-TableFullScan",
                                                                 "Operators": [
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 1
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "SearchPhrase != "
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableFullScan",
@@ -179,146 +188,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "SearchEngineID",
-                                                            "SearchPhrase"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 40
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 39
-                                                                            },
-                                                                            {
-                                                                                "Id": 40
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 39
-                                                                            },
-                                                                            {
-                                                                                "Id": 40
-                                                                            },
-                                                                            {
-                                                                                "Id": 108
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-15 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-15
index bfc057c98171..8085dd21197d 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-15
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-15
@@ -134,102 +134,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "UserID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 10
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 10
-                                                                            },
-                                                                            {
-                                                                                "Id": 106
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-16 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-16
index d08b757a0299..c8bdcc9e1268 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-16
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-16
@@ -142,109 +142,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "SearchPhrase",
-                                                            "UserID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            },
-                                                                            {
-                                                                                "Id": 10
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            },
-                                                                            {
-                                                                                "Id": 10
-                                                                            },
-                                                                            {
-                                                                                "Id": 106
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-17 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-17
index a56994b072f4..8c89c77845c9 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-17
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-17
@@ -138,108 +138,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "SearchPhrase",
-                                                            "UserID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            },
-                                                                            {
-                                                                                "Id": 10
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            },
-                                                                            {
-                                                                                "Id": 10
-                                                                            },
-                                                                            {
-                                                                                "Id": 106
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-18 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-18
index eb9b55dc45ec..a41a586ae50e 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-18
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-18
@@ -132,101 +132,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "EventTime",
-                                                                    "SearchPhrase",
-                                                                    "UserID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "SsaProgram": {
-                                                                    "Command": [
-                                                                        {
-                                                                            "Projection": {
-                                                                                "Columns": [
-                                                                                    {
-                                                                                        "Id": 5
-                                                                                    },
-                                                                                    {
-                                                                                        "Id": 40
-                                                                                    },
-                                                                                    {
-                                                                                        "Id": 10
-                                                                                    }
-                                                                                ]
-                                                                            }
-                                                                        }
-                                                                    ],
-                                                                    "Version": 4
-                                                                },
-                                                                "Table": "clickbench/plans/column/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-19 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-19
index aae07eb4e3b4..dcad583632e5 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-19
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-19
@@ -35,7 +35,7 @@
                                         "PlanNodeType": "Connection",
                                         "Plans": [
                                             {
-                                                "Node Type": "Limit-TableFullScan",
+                                                "Node Type": "Limit-Filter-TableFullScan",
                                                 "Operators": [
                                                     {
                                                         "Inputs": [
@@ -46,6 +46,15 @@
                                                         "Limit": "1001",
                                                         "Name": "Limit"
                                                     },
+                                                    {
+                                                        "Inputs": [
+                                                            {
+                                                                "InternalOperatorId": 2
+                                                            }
+                                                        ],
+                                                        "Name": "Filter",
+                                                        "Predicate": "UserID == 435090932899640449"
+                                                    },
                                                     {
                                                         "Inputs": [],
                                                         "Name": "TableFullScan",
@@ -128,117 +137,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "1001",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1001",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "UserID"
-                                                        ],
-                                                        "ReadLimit": "1001",
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Sequential",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Int64": 435090932899640449
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 10
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 11
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 10
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-2 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-2
index 89c49e8cb049..d07f68c3f369 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-2
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-2
@@ -182,141 +182,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 5,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 6,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "AdvEngineID",
-                                                            "ResolutionWidth"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 21
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 107
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 21
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 109
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 41
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 107
-                                                                            },
-                                                                            {
-                                                                                "Id": 106
-                                                                            },
-                                                                            {
-                                                                                "Id": 108
-                                                                            },
-                                                                            {
-                                                                                "Id": 109
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 8
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-20 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-20
index fdcf67ca43ab..cbe327cc72b0 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-20
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-20
@@ -63,8 +63,17 @@
                                         "PlanNodeType": "Connection",
                                         "Plans": [
                                             {
-                                                "Node Type": "TableFullScan",
+                                                "Node Type": "Filter-TableFullScan",
                                                 "Operators": [
+                                                    {
+                                                        "Inputs": [
+                                                            {
+                                                                "InternalOperatorId": 1
+                                                            }
+                                                        ],
+                                                        "Name": "Filter",
+                                                        "Predicate": "string_contains"
+                                                    },
                                                     {
                                                         "Inputs": [],
                                                         "Name": "TableFullScan",
@@ -161,129 +170,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "URL"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": "google"
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 14
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 10
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 108
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-21 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-21
index a3aad98b8615..f043c5b5cc29 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-21
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-21
@@ -59,8 +59,17 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "TableFullScan",
+                                                                "Node Type": "Filter-TableFullScan",
                                                                 "Operators": [
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 1
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "string_contains"
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableFullScan",
@@ -228,196 +237,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "SearchPhrase",
-                                                            "URL"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 40
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {}
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 108
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": "google"
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 109
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 14
-                                                                                },
-                                                                                {
-                                                                                    "Id": 108
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 1,
-                                                                            "YqlOperationId": 10
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 109
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 110
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 111
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 14
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 3
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            },
-                                                                            {
-                                                                                "Id": 110
-                                                                            },
-                                                                            {
-                                                                                "Id": 111
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-22 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-22
index e0ca11709049..f12fc0050589 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-22
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-22
@@ -51,7 +51,10 @@
                                                 "PlanNodeId": 9,
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "Map",
+                                                        "KeyColumns": [
+                                                            "SearchPhrase"
+                                                        ],
+                                                        "Node Type": "HashShuffle",
                                                         "PlanNodeId": 8,
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
@@ -73,15 +76,12 @@
                                                                 "PlanNodeId": 7,
                                                                 "Plans": [
                                                                     {
-                                                                        "KeyColumns": [
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "Node Type": "HashShuffle",
+                                                                        "Node Type": "UnionAll",
                                                                         "PlanNodeId": 6,
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "Aggregate-TableFullScan",
+                                                                                "Node Type": "Aggregate-Filter-TableFullScan",
                                                                                 "Operators": [
                                                                                     {
                                                                                         "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1),_yql_agg_2: MIN(item.URL,state._yql_agg_2),_yql_agg_3: MIN(item.Title,state._yql_agg_3)}",
@@ -93,6 +93,15 @@
                                                                                         ],
                                                                                         "Name": "Aggregate"
                                                                                     },
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 2
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "string_contains And Not string_contains"
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableFullScan",
@@ -287,10 +296,7 @@
                                                                         ]
                                                                     },
                                                                     {
-                                                                        "KeyColumns": [
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "Node Type": "HashShuffle",
+                                                                        "Node Type": "UnionAll",
                                                                         "PlanNodeId": 4,
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
@@ -320,7 +326,7 @@
                                                                                         "PlanNodeType": "Connection",
                                                                                         "Plans": [
                                                                                             {
-                                                                                                "Node Type": "Aggregate-TableFullScan",
+                                                                                                "Node Type": "Aggregate-Filter-TableFullScan",
                                                                                                 "Operators": [
                                                                                                     {
                                                                                                         "Aggregation": "state",
@@ -332,6 +338,15 @@
                                                                                                         ],
                                                                                                         "Name": "Aggregate"
                                                                                                     },
+                                                                                                    {
+                                                                                                        "Inputs": [
+                                                                                                            {
+                                                                                                                "InternalOperatorId": 2
+                                                                                                            }
+                                                                                                        ],
+                                                                                                        "Name": "Filter",
+                                                                                                        "Predicate": "string_contains And Not string_contains"
+                                                                                                    },
                                                                                                     {
                                                                                                         "Inputs": [],
                                                                                                         "Name": "TableFullScan",
@@ -546,475 +561,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Union",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Union"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1),_yql_agg_2: MIN(item.URL,state._yql_agg_2),_yql_agg_3: MIN(item.Title,state._yql_agg_3)}",
-                                                                "GroupBy": "item.SearchPhrase",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "SearchPhrase",
-                                                                            "Title",
-                                                                            "URL",
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 106
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Bytes": ""
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 107
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 40
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 106
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 0,
-                                                                                            "YqlOperationId": 12
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 107
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {}
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 108
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Bytes": "Google"
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 109
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 3
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 108
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 1,
-                                                                                            "YqlOperationId": 10
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 110
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Bytes": ".google."
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 111
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 14
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 110
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 2,
-                                                                                            "YqlOperationId": 10
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 112
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 111
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 3
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 113
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 109
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 112
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 4,
-                                                                                            "YqlOperationId": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 113
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 40
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 3
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 14
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 10
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    },
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_1: Inc(state._yql_agg_1)}",
-                                                                "GroupBy": "item.SearchPhrase",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 11,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "state",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 13,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "SearchPhrase",
-                                                                                    "Title",
-                                                                                    "URL",
-                                                                                    "UserID"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "SsaProgram": {
-                                                                                    "Command": [
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 106
-                                                                                                },
-                                                                                                "Constant": {
-                                                                                                    "Bytes": ""
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 107
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 40
-                                                                                                        },
-                                                                                                        {
-                                                                                                            "Id": 106
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 0,
-                                                                                                    "YqlOperationId": 12
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Filter": {
-                                                                                                "Predicate": {
-                                                                                                    "Id": 107
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Projection": {}
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 108
-                                                                                                },
-                                                                                                "Constant": {
-                                                                                                    "Bytes": "Google"
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 109
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 3
-                                                                                                        },
-                                                                                                        {
-                                                                                                            "Id": 108
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 1,
-                                                                                                    "YqlOperationId": 10
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 110
-                                                                                                },
-                                                                                                "Constant": {
-                                                                                                    "Bytes": ".google."
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 111
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 14
-                                                                                                        },
-                                                                                                        {
-                                                                                                            "Id": 110
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 2,
-                                                                                                    "YqlOperationId": 10
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 112
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 111
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 3
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 113
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 109
-                                                                                                        },
-                                                                                                        {
-                                                                                                            "Id": 112
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 4,
-                                                                                                    "YqlOperationId": 0
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Filter": {
-                                                                                                "Predicate": {
-                                                                                                    "Id": 113
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Projection": {
-                                                                                                "Columns": [
-                                                                                                    {
-                                                                                                        "Id": 40
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 3
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 14
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 10
-                                                                                                    }
-                                                                                                ]
-                                                                                            }
-                                                                                        }
-                                                                                    ],
-                                                                                    "Version": 4
-                                                                                },
-                                                                                "Table": "clickbench/plans/column/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 14
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-23 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-23
index b245ac00b09b..b220380434b9 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-23
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-23
@@ -35,7 +35,7 @@
                                         "PlanNodeType": "Connection",
                                         "Plans": [
                                             {
-                                                "Node Type": "TopSort-TableFullScan",
+                                                "Node Type": "TopSort-Filter-TableFullScan",
                                                 "Operators": [
                                                     {
                                                         "Inputs": [
@@ -47,6 +47,15 @@
                                                         "Name": "TopSort",
                                                         "TopSortBy": "$4.EventTime"
                                                     },
+                                                    {
+                                                        "Inputs": [
+                                                            {
+                                                                "InternalOperatorId": 2
+                                                            }
+                                                        ],
+                                                        "Name": "Filter",
+                                                        "Predicate": "string_contains"
+                                                    },
                                                     {
                                                         "Inputs": [],
                                                         "Name": "TableFullScan",
@@ -547,533 +556,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$4.EventTime"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "AdvEngineID",
-                                                            "Age",
-                                                            "BrowserCountry",
-                                                            "BrowserLanguage",
-                                                            "CLID",
-                                                            "ClientEventTime",
-                                                            "ClientIP",
-                                                            "ClientTimeZone",
-                                                            "CodeVersion",
-                                                            "ConnectTiming",
-                                                            "CookieEnable",
-                                                            "CounterClass",
-                                                            "CounterID",
-                                                            "DNSTiming",
-                                                            "DontCountHits",
-                                                            "EventDate",
-                                                            "EventTime",
-                                                            "FUniqID",
-                                                            "FetchTiming",
-                                                            "FlashMajor",
-                                                            "FlashMinor",
-                                                            "FlashMinor2",
-                                                            "FromTag",
-                                                            "GoodEvent",
-                                                            "HID",
-                                                            "HTTPError",
-                                                            "HasGCLID",
-                                                            "HistoryLength",
-                                                            "HitColor",
-                                                            "IPNetworkID",
-                                                            "Income",
-                                                            "Interests",
-                                                            "IsArtifical",
-                                                            "IsDownload",
-                                                            "IsEvent",
-                                                            "IsLink",
-                                                            "IsMobile",
-                                                            "IsNotBounce",
-                                                            "IsOldCounter",
-                                                            "IsParameter",
-                                                            "IsRefresh",
-                                                            "JavaEnable",
-                                                            "JavascriptEnable",
-                                                            "LocalEventTime",
-                                                            "MobilePhone",
-                                                            "MobilePhoneModel",
-                                                            "NetMajor",
-                                                            "NetMinor",
-                                                            "OS",
-                                                            "OpenerName",
-                                                            "OpenstatAdID",
-                                                            "OpenstatCampaignID",
-                                                            "OpenstatServiceName",
-                                                            "OpenstatSourceID",
-                                                            "OriginalURL",
-                                                            "PageCharset",
-                                                            "ParamCurrency",
-                                                            "ParamCurrencyID",
-                                                            "ParamOrderID",
-                                                            "ParamPrice",
-                                                            "Params",
-                                                            "Referer",
-                                                            "RefererCategoryID",
-                                                            "RefererHash",
-                                                            "RefererRegionID",
-                                                            "RegionID",
-                                                            "RemoteIP",
-                                                            "ResolutionDepth",
-                                                            "ResolutionHeight",
-                                                            "ResolutionWidth",
-                                                            "ResponseEndTiming",
-                                                            "ResponseStartTiming",
-                                                            "Robotness",
-                                                            "SearchEngineID",
-                                                            "SearchPhrase",
-                                                            "SendTiming",
-                                                            "Sex",
-                                                            "SilverlightVersion1",
-                                                            "SilverlightVersion2",
-                                                            "SilverlightVersion3",
-                                                            "SilverlightVersion4",
-                                                            "SocialAction",
-                                                            "SocialNetwork",
-                                                            "SocialSourceNetworkID",
-                                                            "SocialSourcePage",
-                                                            "Title",
-                                                            "TraficSourceID",
-                                                            "URL",
-                                                            "URLCategoryID",
-                                                            "URLHash",
-                                                            "URLRegionID",
-                                                            "UTMCampaign",
-                                                            "UTMContent",
-                                                            "UTMMedium",
-                                                            "UTMSource",
-                                                            "UTMTerm",
-                                                            "UserAgent",
-                                                            "UserAgentMajor",
-                                                            "UserAgentMinor",
-                                                            "UserID",
-                                                            "WatchID",
-                                                            "WindowClientHeight",
-                                                            "WindowClientWidth",
-                                                            "WindowName",
-                                                            "WithHash"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": "google"
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 14
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 10
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 41
-                                                                            },
-                                                                            {
-                                                                                "Id": 66
-                                                                            },
-                                                                            {
-                                                                                "Id": 76
-                                                                            },
-                                                                            {
-                                                                                "Id": 75
-                                                                            },
-                                                                            {
-                                                                                "Id": 105
-                                                                            },
-                                                                            {
-                                                                                "Id": 46
-                                                                            },
-                                                                            {
-                                                                                "Id": 8
-                                                                            },
-                                                                            {
-                                                                                "Id": 45
-                                                                            },
-                                                                            {
-                                                                                "Id": 52
-                                                                            },
-                                                                            {
-                                                                                "Id": 82
-                                                                            },
-                                                                            {
-                                                                                "Id": 31
-                                                                            },
-                                                                            {
-                                                                                "Id": 11
-                                                                            },
-                                                                            {
-                                                                                "Id": 7
-                                                                            },
-                                                                            {
-                                                                                "Id": 81
-                                                                            },
-                                                                            {
-                                                                                "Id": 62
-                                                                            },
-                                                                            {
-                                                                                "Id": 6
-                                                                            },
-                                                                            {
-                                                                                "Id": 5
-                                                                            },
-                                                                            {
-                                                                                "Id": 56
-                                                                            },
-                                                                            {
-                                                                                "Id": 85
-                                                                            },
-                                                                            {
-                                                                                "Id": 24
-                                                                            },
-                                                                            {
-                                                                                "Id": 25
-                                                                            },
-                                                                            {
-                                                                                "Id": 26
-                                                                            },
-                                                                            {
-                                                                                "Id": 101
-                                                                            },
-                                                                            {
-                                                                                "Id": 4
-                                                                            },
-                                                                            {
-                                                                                "Id": 58
-                                                                            },
-                                                                            {
-                                                                                "Id": 79
-                                                                            },
-                                                                            {
-                                                                                "Id": 102
-                                                                            },
-                                                                            {
-                                                                                "Id": 74
-                                                                            },
-                                                                            {
-                                                                                "Id": 64
-                                                                            },
-                                                                            {
-                                                                                "Id": 37
-                                                                            },
-                                                                            {
-                                                                                "Id": 68
-                                                                            },
-                                                                            {
-                                                                                "Id": 69
-                                                                            },
-                                                                            {
-                                                                                "Id": 42
-                                                                            },
-                                                                            {
-                                                                                "Id": 54
-                                                                            },
-                                                                            {
-                                                                                "Id": 60
-                                                                            },
-                                                                            {
-                                                                                "Id": 53
-                                                                            },
-                                                                            {
-                                                                                "Id": 33
-                                                                            },
-                                                                            {
-                                                                                "Id": 55
-                                                                            },
-                                                                            {
-                                                                                "Id": 59
-                                                                            },
-                                                                            {
-                                                                                "Id": 61
-                                                                            },
-                                                                            {
-                                                                                "Id": 16
-                                                                            },
-                                                                            {
-                                                                                "Id": 2
-                                                                            },
-                                                                            {
-                                                                                "Id": 32
-                                                                            },
-                                                                            {
-                                                                                "Id": 65
-                                                                            },
-                                                                            {
-                                                                                "Id": 34
-                                                                            },
-                                                                            {
-                                                                                "Id": 35
-                                                                            },
-                                                                            {
-                                                                                "Id": 27
-                                                                            },
-                                                                            {
-                                                                                "Id": 28
-                                                                            },
-                                                                            {
-                                                                                "Id": 12
-                                                                            },
-                                                                            {
-                                                                                "Id": 73
-                                                                            },
-                                                                            {
-                                                                                "Id": 94
-                                                                            },
-                                                                            {
-                                                                                "Id": 93
-                                                                            },
-                                                                            {
-                                                                                "Id": 92
-                                                                            },
-                                                                            {
-                                                                                "Id": 95
-                                                                            },
-                                                                            {
-                                                                                "Id": 57
-                                                                            },
-                                                                            {
-                                                                                "Id": 51
-                                                                            },
-                                                                            {
-                                                                                "Id": 90
-                                                                            },
-                                                                            {
-                                                                                "Id": 91
-                                                                            },
-                                                                            {
-                                                                                "Id": 89
-                                                                            },
-                                                                            {
-                                                                                "Id": 88
-                                                                            },
-                                                                            {
-                                                                                "Id": 36
-                                                                            },
-                                                                            {
-                                                                                "Id": 15
-                                                                            },
-                                                                            {
-                                                                                "Id": 17
-                                                                            },
-                                                                            {
-                                                                                "Id": 103
-                                                                            },
-                                                                            {
-                                                                                "Id": 18
-                                                                            },
-                                                                            {
-                                                                                "Id": 9
-                                                                            },
-                                                                            {
-                                                                                "Id": 71
-                                                                            },
-                                                                            {
-                                                                                "Id": 23
-                                                                            },
-                                                                            {
-                                                                                "Id": 22
-                                                                            },
-                                                                            {
-                                                                                "Id": 21
-                                                                            },
-                                                                            {
-                                                                                "Id": 84
-                                                                            },
-                                                                            {
-                                                                                "Id": 83
-                                                                            },
-                                                                            {
-                                                                                "Id": 70
-                                                                            },
-                                                                            {
-                                                                                "Id": 39
-                                                                            },
-                                                                            {
-                                                                                "Id": 40
-                                                                            },
-                                                                            {
-                                                                                "Id": 80
-                                                                            },
-                                                                            {
-                                                                                "Id": 67
-                                                                            },
-                                                                            {
-                                                                                "Id": 47
-                                                                            },
-                                                                            {
-                                                                                "Id": 48
-                                                                            },
-                                                                            {
-                                                                                "Id": 49
-                                                                            },
-                                                                            {
-                                                                                "Id": 50
-                                                                            },
-                                                                            {
-                                                                                "Id": 78
-                                                                            },
-                                                                            {
-                                                                                "Id": 77
-                                                                            },
-                                                                            {
-                                                                                "Id": 86
-                                                                            },
-                                                                            {
-                                                                                "Id": 87
-                                                                            },
-                                                                            {
-                                                                                "Id": 3
-                                                                            },
-                                                                            {
-                                                                                "Id": 38
-                                                                            },
-                                                                            {
-                                                                                "Id": 14
-                                                                            },
-                                                                            {
-                                                                                "Id": 19
-                                                                            },
-                                                                            {
-                                                                                "Id": 104
-                                                                            },
-                                                                            {
-                                                                                "Id": 20
-                                                                            },
-                                                                            {
-                                                                                "Id": 98
-                                                                            },
-                                                                            {
-                                                                                "Id": 99
-                                                                            },
-                                                                            {
-                                                                                "Id": 97
-                                                                            },
-                                                                            {
-                                                                                "Id": 96
-                                                                            },
-                                                                            {
-                                                                                "Id": 100
-                                                                            },
-                                                                            {
-                                                                                "Id": 13
-                                                                            },
-                                                                            {
-                                                                                "Id": 29
-                                                                            },
-                                                                            {
-                                                                                "Id": 30
-                                                                            },
-                                                                            {
-                                                                                "Id": 10
-                                                                            },
-                                                                            {
-                                                                                "Id": 1
-                                                                            },
-                                                                            {
-                                                                                "Id": 44
-                                                                            },
-                                                                            {
-                                                                                "Id": 43
-                                                                            },
-                                                                            {
-                                                                                "Id": 72
-                                                                            },
-                                                                            {
-                                                                                "Id": 63
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-24 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-24
index 2b4b3b9f118c..de6a62436f48 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-24
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-24
@@ -35,7 +35,7 @@
                                         "PlanNodeType": "Connection",
                                         "Plans": [
                                             {
-                                                "Node Type": "TopSort-TableFullScan",
+                                                "Node Type": "TopSort-Filter-TableFullScan",
                                                 "Operators": [
                                                     {
                                                         "Inputs": [
@@ -47,6 +47,15 @@
                                                         "Name": "TopSort",
                                                         "TopSortBy": "$4.EventTime"
                                                     },
+                                                    {
+                                                        "Inputs": [
+                                                            {
+                                                                "InternalOperatorId": 2
+                                                            }
+                                                        ],
+                                                        "Name": "Filter",
+                                                        "Predicate": "SearchPhrase != "
+                                                    },
                                                     {
                                                         "Inputs": [],
                                                         "Name": "TableFullScan",
@@ -135,121 +144,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$4.EventTime"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "EventTime",
-                                                            "SearchPhrase"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 40
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 5
-                                                                            },
-                                                                            {
-                                                                                "Id": 40
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-25 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-25
index c69ff1a493ee..0ba179311ce1 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-25
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-25
@@ -35,7 +35,7 @@
                                         "PlanNodeType": "Connection",
                                         "Plans": [
                                             {
-                                                "Node Type": "TopSort-TableFullScan",
+                                                "Node Type": "TopSort-Filter-TableFullScan",
                                                 "Operators": [
                                                     {
                                                         "Inputs": [
@@ -47,6 +47,15 @@
                                                         "Name": "TopSort",
                                                         "TopSortBy": "$5.SearchPhrase"
                                                     },
+                                                    {
+                                                        "Inputs": [
+                                                            {
+                                                                "InternalOperatorId": 2
+                                                            }
+                                                        ],
+                                                        "Name": "Filter",
+                                                        "Predicate": "SearchPhrase != "
+                                                    },
                                                     {
                                                         "Inputs": [],
                                                         "Name": "TableFullScan",
@@ -131,117 +140,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$5.SearchPhrase"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "SearchPhrase"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 40
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 40
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-26 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-26
index d875f87b98b7..c05e66c929eb 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-26
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-26
@@ -35,7 +35,7 @@
                                         "PlanNodeType": "Connection",
                                         "Plans": [
                                             {
-                                                "Node Type": "TopSort-TableFullScan",
+                                                "Node Type": "TopSort-Filter-TableFullScan",
                                                 "Operators": [
                                                     {
                                                         "Inputs": [
@@ -47,6 +47,15 @@
                                                         "Name": "TopSort",
                                                         "TopSortBy": ""
                                                     },
+                                                    {
+                                                        "Inputs": [
+                                                            {
+                                                                "InternalOperatorId": 2
+                                                            }
+                                                        ],
+                                                        "Name": "Filter",
+                                                        "Predicate": "SearchPhrase != "
+                                                    },
                                                     {
                                                         "Inputs": [],
                                                         "Name": "TableFullScan",
@@ -136,121 +145,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": ""
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "EventTime",
-                                                            "SearchPhrase"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 40
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 5
-                                                                            },
-                                                                            {
-                                                                                "Id": 40
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-27 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-27
index 322086d4bc20..e969ab9fd2aa 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-27
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-27
@@ -74,7 +74,7 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "Aggregate-TableFullScan",
+                                                                "Node Type": "Aggregate-Filter-TableFullScan",
                                                                 "Operators": [
                                                                     {
                                                                         "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1)}",
@@ -86,6 +86,15 @@
                                                                         ],
                                                                         "Name": "Aggregate"
                                                                     },
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 2
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "URL != "
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableFullScan",
@@ -178,146 +187,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "25",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "25",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$13.l"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.Count0 > 100000"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1)}",
-                                                                "GroupBy": "item.CounterID",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "CounterID",
-                                                                            "URL"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 106
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Bytes": ""
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 107
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 14
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 106
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 0,
-                                                                                            "YqlOperationId": 12
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 107
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 7
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 14
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-28 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-28
index f84911c029d4..b18d833edf7b 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-28
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-28
@@ -77,7 +77,7 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "Aggregate-TableFullScan",
+                                                                "Node Type": "Aggregate-Filter-TableFullScan",
                                                                 "Operators": [
                                                                     {
                                                                         "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1),_yql_agg_2: MIN(item.Referer,state._yql_agg_2)}",
@@ -89,6 +89,15 @@
                                                                         ],
                                                                         "Name": "Aggregate"
                                                                     },
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 2
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "Referer != "
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableFullScan",
@@ -177,142 +186,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "25",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "25",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$23.l"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.Count0 > 100000"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1),_yql_agg_2: MIN(item.Referer,state._yql_agg_2)}",
-                                                                "GroupBy": "item.key",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "Referer"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 106
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Bytes": ""
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 107
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 15
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 106
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 0,
-                                                                                            "YqlOperationId": 12
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 107
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 15
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-29 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-29
index b0157f8eadc1..cdac0db7e9a8 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-29
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-29
@@ -127,89 +127,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 5,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 6,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 8,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "ResolutionWidth"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "SsaProgram": {
-                                                                    "Command": [
-                                                                        {
-                                                                            "Projection": {
-                                                                                "Columns": [
-                                                                                    {
-                                                                                        "Id": 21
-                                                                                    }
-                                                                                ]
-                                                                            }
-                                                                        }
-                                                                    ],
-                                                                    "Version": 4
-                                                                },
-                                                                "Table": "clickbench/plans/column/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 9
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-3 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-3
index 1b042ec18693..296aa814595c 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-3
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-3
@@ -145,113 +145,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "UserID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 10
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 107
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 10
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 107
-                                                                            },
-                                                                            {
-                                                                                "Id": 106
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-30 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-30
index cef01bba0a22..b67dd5fb5ca1 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-30
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-30
@@ -60,8 +60,17 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "TableFullScan",
+                                                                "Node Type": "Filter-TableFullScan",
                                                                 "Operators": [
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 1
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "SearchPhrase != "
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableFullScan",
@@ -230,197 +239,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "ClientIP",
-                                                            "IsRefresh",
-                                                            "ResolutionWidth",
-                                                            "SearchEngineID",
-                                                            "SearchPhrase"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 40
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 21
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 109
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 21
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 110
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 111
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 16
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 8
-                                                                            },
-                                                                            {
-                                                                                "Id": 39
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 8
-                                                                            },
-                                                                            {
-                                                                                "Id": 39
-                                                                            },
-                                                                            {
-                                                                                "Id": 109
-                                                                            },
-                                                                            {
-                                                                                "Id": 108
-                                                                            },
-                                                                            {
-                                                                                "Id": 110
-                                                                            },
-                                                                            {
-                                                                                "Id": 111
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-31 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-31
index 2dc49b273bcf..34c43822f73e 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-31
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-31
@@ -60,8 +60,17 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "TableFullScan",
+                                                                "Node Type": "Filter-TableFullScan",
                                                                 "Operators": [
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 1
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "SearchPhrase != "
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableFullScan",
@@ -230,197 +239,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "ClientIP",
-                                                            "IsRefresh",
-                                                            "ResolutionWidth",
-                                                            "SearchPhrase",
-                                                            "WatchID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 40
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 21
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 109
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 21
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 110
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 111
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 16
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 8
-                                                                            },
-                                                                            {
-                                                                                "Id": 1
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 8
-                                                                            },
-                                                                            {
-                                                                                "Id": 1
-                                                                            },
-                                                                            {
-                                                                                "Id": 109
-                                                                            },
-                                                                            {
-                                                                                "Id": 108
-                                                                            },
-                                                                            {
-                                                                                "Id": 110
-                                                                            },
-                                                                            {
-                                                                                "Id": 111
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-32 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-32
index 419e6c218a52..c6e7c9503479 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-32
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-32
@@ -192,159 +192,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "ClientIP",
-                                                            "IsRefresh",
-                                                            "ResolutionWidth",
-                                                            "WatchID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 21
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 107
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 21
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 109
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 16
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 5
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 8
-                                                                            },
-                                                                            {
-                                                                                "Id": 1
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 8
-                                                                            },
-                                                                            {
-                                                                                "Id": 1
-                                                                            },
-                                                                            {
-                                                                                "Id": 107
-                                                                            },
-                                                                            {
-                                                                                "Id": 106
-                                                                            },
-                                                                            {
-                                                                                "Id": 108
-                                                                            },
-                                                                            {
-                                                                                "Id": 109
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-33 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-33
index 3da7ae9fd6f2..7e3998ff02e5 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-33
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-33
@@ -134,102 +134,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "URL"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 14
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 14
-                                                                            },
-                                                                            {
-                                                                                "Id": 106
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-34 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-34
index b6764303856f..5309cb36fd30 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-34
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-34
@@ -142,109 +142,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "URL",
-                                                            "UserID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 14
-                                                                            },
-                                                                            {
-                                                                                "Id": 10
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 14
-                                                                            },
-                                                                            {
-                                                                                "Id": 10
-                                                                            },
-                                                                            {
-                                                                                "Id": 106
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-35 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-35
index 186817ce5a9f..fe760adf716c 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-35
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-35
@@ -125,93 +125,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "ClientIP"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "SsaProgram": {
-                                                                    "Command": [
-                                                                        {
-                                                                            "Projection": {
-                                                                                "Columns": [
-                                                                                    {
-                                                                                        "Id": 8
-                                                                                    }
-                                                                                ]
-                                                                            }
-                                                                        }
-                                                                    ],
-                                                                    "Version": 4
-                                                                },
-                                                                "Table": "clickbench/plans/column/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-36 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-36
index 8ff3b5426a03..e4c0a458ce0b 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-36
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-36
@@ -59,8 +59,17 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "TableRangeScan",
+                                                                "Node Type": "Filter-TableRangeScan",
                                                                 "Operators": [
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 1
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "DontCountHits == 0 And IsRefresh == 0 And URL != "
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableRangeScan",
@@ -275,243 +284,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableRangeScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableRangeScan",
-                                                        "ReadColumns": [
-                                                            "DontCountHits",
-                                                            "IsRefresh",
-                                                            "URL"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID [62, 62]",
-                                                            "EventDate [15887, 15917]"
-                                                        ],
-                                                        "ReadRangesExpectedSize": 1,
-                                                        "ReadRangesKeys": [
-                                                            "CounterID",
-                                                            "EventDate"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Int32": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 62
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 11
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 108
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Int32": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 109
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 16
-                                                                                },
-                                                                                {
-                                                                                    "Id": 108
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 1,
-                                                                            "YqlOperationId": 11
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 110
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 111
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 14
-                                                                                },
-                                                                                {
-                                                                                    "Id": 110
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 2,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 112
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 109
-                                                                                },
-                                                                                {
-                                                                                    "Id": 111
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 3,
-                                                                            "YqlOperationId": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 113
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 107
-                                                                                },
-                                                                                {
-                                                                                    "Id": 112
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 4,
-                                                                            "YqlOperationId": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 113
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 114
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 14
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 14
-                                                                            },
-                                                                            {
-                                                                                "Id": 114
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-37 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-37
index ed07bb8d72fb..32b96c95af45 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-37
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-37
@@ -59,8 +59,17 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "TableRangeScan",
+                                                                "Node Type": "Filter-TableRangeScan",
                                                                 "Operators": [
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 1
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "DontCountHits == 0 And IsRefresh == 0 And Title != "
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableRangeScan",
@@ -275,243 +284,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableRangeScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableRangeScan",
-                                                        "ReadColumns": [
-                                                            "DontCountHits",
-                                                            "IsRefresh",
-                                                            "Title"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID [62, 62]",
-                                                            "EventDate [15887, 15917]"
-                                                        ],
-                                                        "ReadRangesExpectedSize": 1,
-                                                        "ReadRangesKeys": [
-                                                            "CounterID",
-                                                            "EventDate"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Int32": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 62
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 11
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 108
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Int32": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 109
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 16
-                                                                                },
-                                                                                {
-                                                                                    "Id": 108
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 1,
-                                                                            "YqlOperationId": 11
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 110
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Bytes": ""
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 111
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 3
-                                                                                },
-                                                                                {
-                                                                                    "Id": 110
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 2,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 112
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 109
-                                                                                },
-                                                                                {
-                                                                                    "Id": 111
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 3,
-                                                                            "YqlOperationId": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 113
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 107
-                                                                                },
-                                                                                {
-                                                                                    "Id": 112
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 4,
-                                                                            "YqlOperationId": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 113
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 114
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 3
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 3
-                                                                            },
-                                                                            {
-                                                                                "Id": 114
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-38 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-38
index e3d91c1cb23c..4732d0053458 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-38
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-38
@@ -88,8 +88,17 @@
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "TableRangeScan",
+                                                                                "Node Type": "Filter-TableRangeScan",
                                                                                 "Operators": [
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 1
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "IsRefresh == 0 And IsLink != 0 And IsDownload == 0"
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableRangeScan",
@@ -309,268 +318,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "1000"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,1000)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,1000)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Count0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableRangeScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableRangeScan",
-                                                                        "ReadColumns": [
-                                                                            "IsDownload",
-                                                                            "IsLink",
-                                                                            "IsRefresh",
-                                                                            "URL"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID [62, 62]",
-                                                                            "EventDate [15887, 15917]"
-                                                                        ],
-                                                                        "ReadRangesExpectedSize": 1,
-                                                                        "ReadRangesKeys": [
-                                                                            "CounterID",
-                                                                            "EventDate"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 106
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Int32": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 107
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 16
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 106
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 0,
-                                                                                            "YqlOperationId": 11
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 108
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Int32": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 109
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 53
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 108
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 1,
-                                                                                            "YqlOperationId": 12
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 110
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Int32": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 111
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 54
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 110
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 2,
-                                                                                            "YqlOperationId": 11
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 112
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 109
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 111
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 3,
-                                                                                            "YqlOperationId": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 113
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 107
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 112
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 4,
-                                                                                            "YqlOperationId": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 113
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "GroupBy": {
-                                                                                        "Aggregates": [
-                                                                                            {
-                                                                                                "Column": {
-                                                                                                    "Id": 114
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Id": 2
-                                                                                                }
-                                                                                            }
-                                                                                        ],
-                                                                                        "KeyColumns": [
-                                                                                            {
-                                                                                                "Id": 14
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 14
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 114
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-39 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-39
index 11069be5733b..abe6bd94f3c0 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-39
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-39
@@ -92,7 +92,7 @@
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "Aggregate-TableRangeScan",
+                                                                                "Node Type": "Aggregate-Filter-TableRangeScan",
                                                                                 "Operators": [
                                                                                     {
                                                                                         "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
@@ -104,6 +104,15 @@
                                                                                         ],
                                                                                         "Name": "Aggregate"
                                                                                     },
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 2
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "IsRefresh == 0"
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableRangeScan",
@@ -215,173 +224,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "1000"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,1000)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,1000)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Count0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableRangeScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableRangeScan",
-                                                                                "ReadColumns": [
-                                                                                    "AdvEngineID",
-                                                                                    "IsRefresh",
-                                                                                    "Referer",
-                                                                                    "SearchEngineID",
-                                                                                    "TraficSourceID",
-                                                                                    "URL"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID [62, 62]",
-                                                                                    "EventDate [15887, 15917]"
-                                                                                ],
-                                                                                "ReadRangesExpectedSize": 1,
-                                                                                "ReadRangesKeys": [
-                                                                                    "CounterID",
-                                                                                    "EventDate"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "SsaProgram": {
-                                                                                    "Command": [
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 106
-                                                                                                },
-                                                                                                "Constant": {
-                                                                                                    "Int32": 0
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 107
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 16
-                                                                                                        },
-                                                                                                        {
-                                                                                                            "Id": 106
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 0,
-                                                                                                    "YqlOperationId": 11
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Filter": {
-                                                                                                "Predicate": {
-                                                                                                    "Id": 107
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Projection": {
-                                                                                                "Columns": [
-                                                                                                    {
-                                                                                                        "Id": 41
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 15
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 39
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 38
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 14
-                                                                                                    }
-                                                                                                ]
-                                                                                            }
-                                                                                        }
-                                                                                    ],
-                                                                                    "Version": 4
-                                                                                },
-                                                                                "Table": "clickbench/plans/column/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-4 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-4
index bd0cea24c3a2..c4040deb0a1a 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-4
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-4
@@ -146,102 +146,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "item.UserID",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 9,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 10
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 10
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-40 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-40
index 4bd63edbaacc..7885efc2e044 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-40
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-40
@@ -89,7 +89,7 @@
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "Aggregate-Filter-TableRangeScan",
+                                                                                "Node Type": "Aggregate-Filter-Filter-TableRangeScan",
                                                                                 "Operators": [
                                                                                     {
                                                                                         "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
@@ -113,6 +113,15 @@
                                                                                         "Name": "Filter",
                                                                                         "Predicate": "item.TraficSourceID == -1 Or item.TraficSourceID == 6"
                                                                                     },
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 3
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "IsRefresh == 0 And RefererHash == 3594120000172545465"
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableRangeScan",
@@ -267,228 +276,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "100"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,100)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,100)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Count0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "Filter",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "Filter",
-                                                                                "Predicate": "item.TraficSourceID == -1 Or item.TraficSourceID == 6"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10,
-                                                                        "Plans": [
-                                                                            {
-                                                                                "Node Type": "TableRangeScan",
-                                                                                "Operators": [
-                                                                                    {
-                                                                                        "Name": "TableRangeScan",
-                                                                                        "ReadColumns": [
-                                                                                            "EventDate",
-                                                                                            "IsRefresh",
-                                                                                            "RefererHash",
-                                                                                            "TraficSourceID",
-                                                                                            "URLHash"
-                                                                                        ],
-                                                                                        "ReadRanges": [
-                                                                                            "CounterID [62, 62]",
-                                                                                            "EventDate [15887, 15917]"
-                                                                                        ],
-                                                                                        "ReadRangesExpectedSize": 1,
-                                                                                        "ReadRangesKeys": [
-                                                                                            "CounterID",
-                                                                                            "EventDate"
-                                                                                        ],
-                                                                                        "Scan": "Parallel",
-                                                                                        "SsaProgram": {
-                                                                                            "Command": [
-                                                                                                {
-                                                                                                    "Assign": {
-                                                                                                        "Column": {
-                                                                                                            "Id": 106
-                                                                                                        },
-                                                                                                        "Constant": {
-                                                                                                            "Int32": 0
-                                                                                                        }
-                                                                                                    }
-                                                                                                },
-                                                                                                {
-                                                                                                    "Assign": {
-                                                                                                        "Column": {
-                                                                                                            "Id": 107
-                                                                                                        },
-                                                                                                        "Function": {
-                                                                                                            "Arguments": [
-                                                                                                                {
-                                                                                                                    "Id": 16
-                                                                                                                },
-                                                                                                                {
-                                                                                                                    "Id": 106
-                                                                                                                }
-                                                                                                            ],
-                                                                                                            "FunctionType": 2,
-                                                                                                            "KernelIdx": 0,
-                                                                                                            "YqlOperationId": 11
-                                                                                                        }
-                                                                                                    }
-                                                                                                },
-                                                                                                {
-                                                                                                    "Assign": {
-                                                                                                        "Column": {
-                                                                                                            "Id": 108
-                                                                                                        },
-                                                                                                        "Constant": {
-                                                                                                            "Int64": 3594120000172545465
-                                                                                                        }
-                                                                                                    }
-                                                                                                },
-                                                                                                {
-                                                                                                    "Assign": {
-                                                                                                        "Column": {
-                                                                                                            "Id": 109
-                                                                                                        },
-                                                                                                        "Function": {
-                                                                                                            "Arguments": [
-                                                                                                                {
-                                                                                                                    "Id": 103
-                                                                                                                },
-                                                                                                                {
-                                                                                                                    "Id": 108
-                                                                                                                }
-                                                                                                            ],
-                                                                                                            "FunctionType": 2,
-                                                                                                            "KernelIdx": 1,
-                                                                                                            "YqlOperationId": 11
-                                                                                                        }
-                                                                                                    }
-                                                                                                },
-                                                                                                {
-                                                                                                    "Assign": {
-                                                                                                        "Column": {
-                                                                                                            "Id": 110
-                                                                                                        },
-                                                                                                        "Function": {
-                                                                                                            "Arguments": [
-                                                                                                                {
-                                                                                                                    "Id": 107
-                                                                                                                },
-                                                                                                                {
-                                                                                                                    "Id": 109
-                                                                                                                }
-                                                                                                            ],
-                                                                                                            "FunctionType": 2,
-                                                                                                            "KernelIdx": 2,
-                                                                                                            "YqlOperationId": 0
-                                                                                                        }
-                                                                                                    }
-                                                                                                },
-                                                                                                {
-                                                                                                    "Filter": {
-                                                                                                        "Predicate": {
-                                                                                                            "Id": 110
-                                                                                                        }
-                                                                                                    }
-                                                                                                },
-                                                                                                {
-                                                                                                    "Projection": {
-                                                                                                        "Columns": [
-                                                                                                            {
-                                                                                                                "Id": 6
-                                                                                                            },
-                                                                                                            {
-                                                                                                                "Id": 38
-                                                                                                            },
-                                                                                                            {
-                                                                                                                "Id": 104
-                                                                                                            }
-                                                                                                        ]
-                                                                                                    }
-                                                                                                }
-                                                                                            ],
-                                                                                            "Version": 4
-                                                                                        },
-                                                                                        "Table": "clickbench/plans/column/hits"
-                                                                                    }
-                                                                                ],
-                                                                                "PlanNodeId": 11
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-41 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-41
index dd89190d205b..c550f9e5db05 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-41
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-41
@@ -89,8 +89,17 @@
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "TableRangeScan",
+                                                                                "Node Type": "Filter-TableRangeScan",
                                                                                 "Operators": [
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 1
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "IsRefresh == 0 And DontCountHits == 0 And URLHash == 2868770270353813622"
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableRangeScan",
@@ -317,275 +326,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "10000"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,10000)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,10000)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Count0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableRangeScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableRangeScan",
-                                                                        "ReadColumns": [
-                                                                            "DontCountHits",
-                                                                            "IsRefresh",
-                                                                            "URLHash",
-                                                                            "WindowClientHeight",
-                                                                            "WindowClientWidth"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID [62, 62]",
-                                                                            "EventDate [15887, 15917]"
-                                                                        ],
-                                                                        "ReadRangesExpectedSize": 1,
-                                                                        "ReadRangesKeys": [
-                                                                            "CounterID",
-                                                                            "EventDate"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 106
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Int32": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 107
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 16
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 106
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 0,
-                                                                                            "YqlOperationId": 11
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 108
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Int32": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 109
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 62
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 108
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 1,
-                                                                                            "YqlOperationId": 11
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 110
-                                                                                        },
-                                                                                        "Constant": {
-                                                                                            "Int64": 2868770270353813622
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 111
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 104
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 110
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 2,
-                                                                                            "YqlOperationId": 11
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 112
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 109
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 111
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 3,
-                                                                                            "YqlOperationId": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Assign": {
-                                                                                        "Column": {
-                                                                                            "Id": 113
-                                                                                        },
-                                                                                        "Function": {
-                                                                                            "Arguments": [
-                                                                                                {
-                                                                                                    "Id": 107
-                                                                                                },
-                                                                                                {
-                                                                                                    "Id": 112
-                                                                                                }
-                                                                                            ],
-                                                                                            "FunctionType": 2,
-                                                                                            "KernelIdx": 4,
-                                                                                            "YqlOperationId": 0
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Filter": {
-                                                                                        "Predicate": {
-                                                                                            "Id": 113
-                                                                                        }
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "GroupBy": {
-                                                                                        "Aggregates": [
-                                                                                            {
-                                                                                                "Column": {
-                                                                                                    "Id": 114
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Id": 2
-                                                                                                }
-                                                                                            }
-                                                                                        ],
-                                                                                        "KeyColumns": [
-                                                                                            {
-                                                                                                "Id": 44
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 43
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                },
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 44
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 43
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 114
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-42 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-42
index 85317e70404e..76f20aa5860a 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-42
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-42
@@ -88,7 +88,7 @@
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
                                                                             {
-                                                                                "Node Type": "Aggregate-TableRangeScan",
+                                                                                "Node Type": "Aggregate-Filter-TableRangeScan",
                                                                                 "Operators": [
                                                                                     {
                                                                                         "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
@@ -100,6 +100,15 @@
                                                                                         ],
                                                                                         "Name": "Aggregate"
                                                                                     },
+                                                                                    {
+                                                                                        "Inputs": [
+                                                                                            {
+                                                                                                "InternalOperatorId": 2
+                                                                                            }
+                                                                                        ],
+                                                                                        "Name": "Filter",
+                                                                                        "Predicate": "IsRefresh == 0 And DontCountHits == 0"
+                                                                                    },
                                                                                     {
                                                                                         "Inputs": [],
                                                                                         "Name": "TableRangeScan",
@@ -246,208 +255,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "1000"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,1000)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,1000)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Minute"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                                        "GroupBy": "item.Minute",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableRangeScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableRangeScan",
-                                                                                "ReadColumns": [
-                                                                                    "DontCountHits",
-                                                                                    "EventTime",
-                                                                                    "IsRefresh"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID [62, 62]",
-                                                                                    "EventDate [15900, 15901]"
-                                                                                ],
-                                                                                "ReadRangesExpectedSize": 1,
-                                                                                "ReadRangesKeys": [
-                                                                                    "CounterID",
-                                                                                    "EventDate"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "SsaProgram": {
-                                                                                    "Command": [
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 106
-                                                                                                },
-                                                                                                "Constant": {
-                                                                                                    "Int32": 0
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 107
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 16
-                                                                                                        },
-                                                                                                        {
-                                                                                                            "Id": 106
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 0,
-                                                                                                    "YqlOperationId": 11
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 108
-                                                                                                },
-                                                                                                "Constant": {
-                                                                                                    "Int32": 0
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 109
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 62
-                                                                                                        },
-                                                                                                        {
-                                                                                                            "Id": 108
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 1,
-                                                                                                    "YqlOperationId": 11
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Assign": {
-                                                                                                "Column": {
-                                                                                                    "Id": 110
-                                                                                                },
-                                                                                                "Function": {
-                                                                                                    "Arguments": [
-                                                                                                        {
-                                                                                                            "Id": 107
-                                                                                                        },
-                                                                                                        {
-                                                                                                            "Id": 109
-                                                                                                        }
-                                                                                                    ],
-                                                                                                    "FunctionType": 2,
-                                                                                                    "KernelIdx": 2,
-                                                                                                    "YqlOperationId": 0
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Filter": {
-                                                                                                "Predicate": {
-                                                                                                    "Id": 110
-                                                                                                }
-                                                                                            }
-                                                                                        },
-                                                                                        {
-                                                                                            "Projection": {
-                                                                                                "Columns": [
-                                                                                                    {
-                                                                                                        "Id": 5
-                                                                                                    }
-                                                                                                ]
-                                                                                            }
-                                                                                        }
-                                                                                    ],
-                                                                                    "Version": 4
-                                                                                },
-                                                                                "Table": "clickbench/plans/column/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-5 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-5
index 50fbf7910693..c10adb8c97ca 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-5
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-5
@@ -146,102 +146,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "item.SearchPhrase",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 9,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 40
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 10
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-6 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-6
index 18a6f051beca..35a168e3b755 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-6
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-6
@@ -154,113 +154,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 5,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 6,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "EventDate"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 106
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 6
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 4
-                                                                                }
-                                                                            },
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 107
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Arguments": [
-                                                                                        {
-                                                                                            "Id": 6
-                                                                                        }
-                                                                                    ],
-                                                                                    "Id": 3
-                                                                                }
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 106
-                                                                            },
-                                                                            {
-                                                                                "Id": 107
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 8
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-7 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-7
index 49b95b51d14e..5b28d5a82c2e 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-7
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-7
@@ -59,8 +59,17 @@
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
                                                             {
-                                                                "Node Type": "TableFullScan",
+                                                                "Node Type": "Filter-TableFullScan",
                                                                 "Operators": [
+                                                                    {
+                                                                        "Inputs": [
+                                                                            {
+                                                                                "InternalOperatorId": 1
+                                                                            }
+                                                                        ],
+                                                                        "Name": "Filter",
+                                                                        "Predicate": "AdvEngineID != 0"
+                                                                    },
                                                                     {
                                                                         "Inputs": [],
                                                                         "Name": "TableFullScan",
@@ -171,139 +180,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "1001",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1001",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "TableFullScan",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "TableFullScan",
-                                                        "ReadColumns": [
-                                                            "AdvEngineID"
-                                                        ],
-                                                        "ReadRanges": [
-                                                            "CounterID (-\u221e, +\u221e)",
-                                                            "EventDate (-\u221e, +\u221e)",
-                                                            "UserID (-\u221e, +\u221e)",
-                                                            "EventTime (-\u221e, +\u221e)",
-                                                            "WatchID (-\u221e, +\u221e)"
-                                                        ],
-                                                        "Scan": "Parallel",
-                                                        "SsaProgram": {
-                                                            "Command": [
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 106
-                                                                        },
-                                                                        "Constant": {
-                                                                            "Int32": 0
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Assign": {
-                                                                        "Column": {
-                                                                            "Id": 107
-                                                                        },
-                                                                        "Function": {
-                                                                            "Arguments": [
-                                                                                {
-                                                                                    "Id": 41
-                                                                                },
-                                                                                {
-                                                                                    "Id": 106
-                                                                                }
-                                                                            ],
-                                                                            "FunctionType": 2,
-                                                                            "KernelIdx": 0,
-                                                                            "YqlOperationId": 12
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Filter": {
-                                                                        "Predicate": {
-                                                                            "Id": 107
-                                                                        }
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "GroupBy": {
-                                                                        "Aggregates": [
-                                                                            {
-                                                                                "Column": {
-                                                                                    "Id": 108
-                                                                                },
-                                                                                "Function": {
-                                                                                    "Id": 2
-                                                                                }
-                                                                            }
-                                                                        ],
-                                                                        "KeyColumns": [
-                                                                            {
-                                                                                "Id": 41
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                },
-                                                                {
-                                                                    "Projection": {
-                                                                        "Columns": [
-                                                                            {
-                                                                                "Id": 41
-                                                                            },
-                                                                            {
-                                                                                "Id": 108
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                }
-                                                            ],
-                                                            "Version": 4
-                                                        },
-                                                        "Table": "clickbench/plans/column/hits"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-8 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-8
index dc29c434251c..9d3d81a80670 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-8
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-8
@@ -155,110 +155,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: Inc(state._yql_agg_0)}",
-                                                        "GroupBy": "item.RegionID",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "RegionID",
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 9
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 10
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-9 b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-9
index 7c278c11f647..69ccb503e7f2 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-9
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_column_/queries-original-plan-column-9
@@ -51,7 +51,10 @@
                                                 "PlanNodeId": 9,
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "Map",
+                                                        "KeyColumns": [
+                                                            "RegionID"
+                                                        ],
+                                                        "Node Type": "HashShuffle",
                                                         "PlanNodeId": 8,
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
@@ -73,10 +76,7 @@
                                                                 "PlanNodeId": 7,
                                                                 "Plans": [
                                                                     {
-                                                                        "KeyColumns": [
-                                                                            "RegionID"
-                                                                        ],
-                                                                        "Node Type": "HashShuffle",
+                                                                        "Node Type": "UnionAll",
                                                                         "PlanNodeId": 6,
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
@@ -144,10 +144,7 @@
                                                                         ]
                                                                     },
                                                                     {
-                                                                        "KeyColumns": [
-                                                                            "RegionID"
-                                                                        ],
-                                                                        "Node Type": "HashShuffle",
+                                                                        "Node Type": "UnionAll",
                                                                         "PlanNodeId": 4,
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
@@ -260,189 +257,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Union",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Union"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1),_yql_agg_3: SUM(item.AdvEngineID,state._yql_agg_3)}",
-                                                                "GroupBy": "item.RegionID",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "AdvEngineID",
-                                                                            "RegionID",
-                                                                            "ResolutionWidth",
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "SsaProgram": {
-                                                                            "Command": [
-                                                                                {
-                                                                                    "Projection": {
-                                                                                        "Columns": [
-                                                                                            {
-                                                                                                "Id": 41
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 9
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 21
-                                                                                            },
-                                                                                            {
-                                                                                                "Id": 10
-                                                                                            }
-                                                                                        ]
-                                                                                    }
-                                                                                }
-                                                                            ],
-                                                                            "Version": 4
-                                                                        },
-                                                                        "Table": "clickbench/plans/column/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    },
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_2: Inc(state._yql_agg_2)}",
-                                                                "GroupBy": "item.RegionID",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 11,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "state",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 13,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "AdvEngineID",
-                                                                                    "RegionID",
-                                                                                    "ResolutionWidth",
-                                                                                    "UserID"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "SsaProgram": {
-                                                                                    "Command": [
-                                                                                        {
-                                                                                            "Projection": {
-                                                                                                "Columns": [
-                                                                                                    {
-                                                                                                        "Id": 41
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 9
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 21
-                                                                                                    },
-                                                                                                    {
-                                                                                                        "Id": 10
-                                                                                                    }
-                                                                                                ]
-                                                                                            }
-                                                                                        }
-                                                                                    ],
-                                                                                    "Version": 4
-                                                                                },
-                                                                                "Table": "clickbench/plans/column/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 14
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/column/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-0 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-0
index d49724126603..0d554044e687 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-0
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-0
@@ -102,73 +102,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": null,
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-1 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-1
index 8b1f95c2cc88..1ab5d4a33d2f 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-1
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-1
@@ -109,52 +109,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-10 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-10
index 6a0493e0f7dd..a20e59a433bc 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-10
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-10
@@ -147,105 +147,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: COUNT(item.UserID,state._yql_agg_0)}",
-                                                        "GroupBy": "item.MobilePhoneModel",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Filter",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "Filter",
-                                                                        "Predicate": "item.MobilePhoneModel != \"\""
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "MobilePhoneModel",
-                                                                                    "UserID"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "clickbench/plans/row/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-11 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-11
index 7713d0fe0a7f..5bddeb2445ec 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-11
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-11
@@ -150,106 +150,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: COUNT(item.UserID,state._yql_agg_0)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Filter",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "Filter",
-                                                                        "Predicate": "item.MobilePhoneModel != \"\""
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "MobilePhone",
-                                                                                    "MobilePhoneModel",
-                                                                                    "UserID"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "clickbench/plans/row/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-12 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-12
index d4dc14a30c02..bb6ecb0a3779 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-12
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-12
@@ -117,91 +117,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "item.SearchPhrase",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Filter",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "Filter",
-                                                                "Predicate": "item.SearchPhrase != \"\""
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-13 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-13
index e92d61284417..95eec3bd2695 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-13
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-13
@@ -147,105 +147,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: COUNT(item.UserID,state._yql_agg_0)}",
-                                                        "GroupBy": "item.SearchPhrase",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Filter",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "Filter",
-                                                                        "Predicate": "item.SearchPhrase != \"\""
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "SearchPhrase",
-                                                                                    "UserID"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "clickbench/plans/row/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-14 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-14
index 2082d69f91a7..7de87cf3baf9 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-14
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-14
@@ -119,92 +119,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Filter",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "Filter",
-                                                                "Predicate": "item.SearchPhrase != \"\""
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "SearchEngineID",
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-15 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-15
index bb3eb7026c25..9007489216ab 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-15
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-15
@@ -108,79 +108,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "item.UserID",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "UserID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-16 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-16
index 1932923ad849..76326627972c 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-16
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-16
@@ -110,80 +110,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "SearchPhrase",
-                                                                    "UserID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-17 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-17
index adc4755f109e..49706d285212 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-17
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-17
@@ -106,79 +106,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "SearchPhrase",
-                                                                    "UserID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-18 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-18
index 612038d6423a..929654b1efee 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-18
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-18
@@ -112,81 +112,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "EventTime",
-                                                                    "SearchPhrase",
-                                                                    "UserID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-19 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-19
index 28b6df823a35..2832c364f6ab 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-19
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-19
@@ -85,77 +85,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "1001",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1001",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.UserID == 435090932899640449"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "UserID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 6
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-2 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-2
index ad8b7ce26a6d..27a3341cbd1b 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-2
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-2
@@ -114,76 +114,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 5,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 6,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 8,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "AdvEngineID",
-                                                                    "ResolutionWidth"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 9
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-20 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-20
index 0b0f35388fc0..872cfd35ea4f 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-20
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-20
@@ -109,52 +109,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-21 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-21
index 1f0ca8c5210a..9138f873eb5f 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-21
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-21
@@ -118,92 +118,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1),_yql_agg_1: MIN(item.URL,state._yql_agg_1)}",
-                                                        "GroupBy": "item.SearchPhrase",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Filter",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "Filter",
-                                                                "Predicate": "item.URL StringContains \"google\" And item.SearchPhrase != \"\""
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "SearchPhrase",
-                                                                            "URL"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-22 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-22
index dad70f4082e5..deb1342c6620 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-22
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-22
@@ -51,7 +51,10 @@
                                                 "PlanNodeId": 9,
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "Map",
+                                                        "KeyColumns": [
+                                                            "SearchPhrase"
+                                                        ],
+                                                        "Node Type": "HashShuffle",
                                                         "PlanNodeId": 8,
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
@@ -73,10 +76,7 @@
                                                                 "PlanNodeId": 7,
                                                                 "Plans": [
                                                                     {
-                                                                        "KeyColumns": [
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "Node Type": "HashShuffle",
+                                                                        "Node Type": "UnionAll",
                                                                         "PlanNodeId": 6,
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
@@ -130,10 +130,7 @@
                                                                         ]
                                                                     },
                                                                     {
-                                                                        "KeyColumns": [
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "Node Type": "HashShuffle",
+                                                                        "Node Type": "UnionAll",
                                                                         "PlanNodeId": 4,
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
@@ -235,167 +232,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Union",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Union"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1),_yql_agg_2: MIN(item.URL,state._yql_agg_2),_yql_agg_3: MIN(item.Title,state._yql_agg_3)}",
-                                                                "GroupBy": "item.SearchPhrase",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Filter",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "Filter",
-                                                                        "Predicate": "item.Title StringContains \"Google\" And Not item.URL StringContains \".google.\" And item.SearchPhrase != \"\""
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "SearchPhrase",
-                                                                                    "Title",
-                                                                                    "URL",
-                                                                                    "UserID"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "clickbench/plans/row/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    },
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_1: COUNT(item.UserID,state._yql_agg_1)}",
-                                                                "GroupBy": "item.SearchPhrase",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 12,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "state",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 14,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "Filter",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "Filter",
-                                                                                "Predicate": "item.Title StringContains \"Google\" And Not item.URL StringContains \".google.\" And item.SearchPhrase != \"\""
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 15,
-                                                                        "Plans": [
-                                                                            {
-                                                                                "Node Type": "TableFullScan",
-                                                                                "Operators": [
-                                                                                    {
-                                                                                        "Name": "TableFullScan",
-                                                                                        "ReadColumns": [
-                                                                                            "SearchPhrase",
-                                                                                            "Title",
-                                                                                            "URL",
-                                                                                            "UserID"
-                                                                                        ],
-                                                                                        "ReadRanges": [
-                                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                                            "UserID (-\u221e, +\u221e)",
-                                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                                        ],
-                                                                                        "Scan": "Parallel",
-                                                                                        "Table": "clickbench/plans/row/hits"
-                                                                                    }
-                                                                                ],
-                                                                                "PlanNodeId": 16
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-23 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-23
index e8ca23eff68a..fd77097b904d 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-23
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-23
@@ -193,182 +193,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$4.EventTime"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.URL StringContains \"google\""
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "AdvEngineID",
-                                                                    "Age",
-                                                                    "BrowserCountry",
-                                                                    "BrowserLanguage",
-                                                                    "CLID",
-                                                                    "ClientEventTime",
-                                                                    "ClientIP",
-                                                                    "ClientTimeZone",
-                                                                    "CodeVersion",
-                                                                    "ConnectTiming",
-                                                                    "CookieEnable",
-                                                                    "CounterClass",
-                                                                    "CounterID",
-                                                                    "DNSTiming",
-                                                                    "DontCountHits",
-                                                                    "EventDate",
-                                                                    "EventTime",
-                                                                    "FUniqID",
-                                                                    "FetchTiming",
-                                                                    "FlashMajor",
-                                                                    "FlashMinor",
-                                                                    "FlashMinor2",
-                                                                    "FromTag",
-                                                                    "GoodEvent",
-                                                                    "HID",
-                                                                    "HTTPError",
-                                                                    "HasGCLID",
-                                                                    "HistoryLength",
-                                                                    "HitColor",
-                                                                    "IPNetworkID",
-                                                                    "Income",
-                                                                    "Interests",
-                                                                    "IsArtifical",
-                                                                    "IsDownload",
-                                                                    "IsEvent",
-                                                                    "IsLink",
-                                                                    "IsMobile",
-                                                                    "IsNotBounce",
-                                                                    "IsOldCounter",
-                                                                    "IsParameter",
-                                                                    "IsRefresh",
-                                                                    "JavaEnable",
-                                                                    "JavascriptEnable",
-                                                                    "LocalEventTime",
-                                                                    "MobilePhone",
-                                                                    "MobilePhoneModel",
-                                                                    "NetMajor",
-                                                                    "NetMinor",
-                                                                    "OS",
-                                                                    "OpenerName",
-                                                                    "OpenstatAdID",
-                                                                    "OpenstatCampaignID",
-                                                                    "OpenstatServiceName",
-                                                                    "OpenstatSourceID",
-                                                                    "OriginalURL",
-                                                                    "PageCharset",
-                                                                    "ParamCurrency",
-                                                                    "ParamCurrencyID",
-                                                                    "ParamOrderID",
-                                                                    "ParamPrice",
-                                                                    "Params",
-                                                                    "Referer",
-                                                                    "RefererCategoryID",
-                                                                    "RefererHash",
-                                                                    "RefererRegionID",
-                                                                    "RegionID",
-                                                                    "RemoteIP",
-                                                                    "ResolutionDepth",
-                                                                    "ResolutionHeight",
-                                                                    "ResolutionWidth",
-                                                                    "ResponseEndTiming",
-                                                                    "ResponseStartTiming",
-                                                                    "Robotness",
-                                                                    "SearchEngineID",
-                                                                    "SearchPhrase",
-                                                                    "SendTiming",
-                                                                    "Sex",
-                                                                    "SilverlightVersion1",
-                                                                    "SilverlightVersion2",
-                                                                    "SilverlightVersion3",
-                                                                    "SilverlightVersion4",
-                                                                    "SocialAction",
-                                                                    "SocialNetwork",
-                                                                    "SocialSourceNetworkID",
-                                                                    "SocialSourcePage",
-                                                                    "Title",
-                                                                    "TraficSourceID",
-                                                                    "URL",
-                                                                    "URLCategoryID",
-                                                                    "URLHash",
-                                                                    "URLRegionID",
-                                                                    "UTMCampaign",
-                                                                    "UTMContent",
-                                                                    "UTMMedium",
-                                                                    "UTMSource",
-                                                                    "UTMTerm",
-                                                                    "UserAgent",
-                                                                    "UserAgentMajor",
-                                                                    "UserAgentMinor",
-                                                                    "UserID",
-                                                                    "WatchID",
-                                                                    "WindowClientHeight",
-                                                                    "WindowClientWidth",
-                                                                    "WindowName",
-                                                                    "WithHash"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 6
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-24 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-24
index 263f06ad0014..e82dbd32004c 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-24
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-24
@@ -90,79 +90,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$4.EventTime"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.SearchPhrase != \"\""
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "EventTime",
-                                                                    "SearchPhrase"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 6
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-25 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-25
index 0cd4a4821f2b..65c9702db69c 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-25
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-25
@@ -89,78 +89,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$5.SearchPhrase"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.SearchPhrase != \"\""
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "SearchPhrase"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 6
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-26 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-26
index 7a1c91443071..52361ea449e1 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-26
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-26
@@ -91,79 +91,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": ""
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.SearchPhrase != \"\""
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "EventTime",
-                                                                    "SearchPhrase"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 6
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-27 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-27
index aff7d87c4f11..9a63c2e4fa7c 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-27
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-27
@@ -133,104 +133,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "25",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "25",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$14.l"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.Count0 > 100000"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1)}",
-                                                                "GroupBy": "item.CounterID",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Filter",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "Filter",
-                                                                        "Predicate": "item.URL != \"\""
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "CounterID",
-                                                                                    "URL"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "clickbench/plans/row/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 9
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-28 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-28
index 03d19e2559e0..fbfb89f4ff68 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-28
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-28
@@ -138,103 +138,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "25",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "25",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "$25.l"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Filter",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Filter",
-                                                        "Predicate": "item.Count0 > 100000"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1),_yql_agg_2: MIN(item.Referer,state._yql_agg_2)}",
-                                                                "GroupBy": "item.key",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Filter",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "Filter",
-                                                                        "Predicate": "item.Referer != \"\""
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "Referer"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "clickbench/plans/row/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 9
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-29 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-29
index b8c3475d70fa..169d6ded38dc 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-29
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-29
@@ -113,75 +113,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 5,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 6,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 8,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "ResolutionWidth"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 9
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-3 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-3
index a12596aa5e69..21f547c65f0a 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-3
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-3
@@ -104,75 +104,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "UserID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-30 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-30
index f6e5e458aea8..10acea32a164 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-30
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-30
@@ -131,95 +131,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1),_yql_agg_2: SUM(item.IsRefresh,state._yql_agg_2)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Filter",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "Filter",
-                                                                "Predicate": "item.SearchPhrase != \"\""
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "ClientIP",
-                                                                            "IsRefresh",
-                                                                            "ResolutionWidth",
-                                                                            "SearchEngineID",
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-31 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-31
index 0a581e3a387a..0fd278f6afff 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-31
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-31
@@ -131,95 +131,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1),_yql_agg_2: SUM(item.IsRefresh,state._yql_agg_2)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Filter",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "Filter",
-                                                                "Predicate": "item.SearchPhrase != \"\""
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "ClientIP",
-                                                                            "IsRefresh",
-                                                                            "ResolutionWidth",
-                                                                            "SearchPhrase",
-                                                                            "WatchID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-32 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-32
index 393b3a30d134..bdb1d701955a 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-32
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-32
@@ -112,82 +112,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1),_yql_agg_2: SUM(item.IsRefresh,state._yql_agg_2)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "ClientIP",
-                                                                    "IsRefresh",
-                                                                    "ResolutionWidth",
-                                                                    "WatchID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-33 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-33
index 95c913261d6c..29379fb1a88f 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-33
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-33
@@ -108,79 +108,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "item.URL",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "URL"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-34 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-34
index 05cd0fb09af2..16c75dc46636 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-34
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-34
@@ -110,80 +110,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "URL",
-                                                                    "UserID"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-35 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-35
index d00281c26fdd..23bc26146b9d 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-35
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-35
@@ -111,79 +111,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "ClientIP"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-36 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-36
index 7e4961219e95..9a5a205fe50c 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-36
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-36
@@ -119,93 +119,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "item.URL",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Filter",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "Filter",
-                                                                "Predicate": "item.DontCountHits == 0 And item.IsRefresh == 0 And item.URL != \"\""
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableRangeScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableRangeScan",
-                                                                        "ReadColumns": [
-                                                                            "DontCountHits",
-                                                                            "IsRefresh",
-                                                                            "URL"
-                                                                        ],
-                                                                        "ReadRange": [
-                                                                            "CounterID (62)",
-                                                                            "EventDate [15887, 15917]",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-37 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-37
index 3bab4cc8fd30..45c9b8a5b7d6 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-37
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-37
@@ -119,93 +119,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "item.Title",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Filter",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "Filter",
-                                                                "Predicate": "item.DontCountHits == 0 And item.IsRefresh == 0 And item.Title != \"\""
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableRangeScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableRangeScan",
-                                                                        "ReadColumns": [
-                                                                            "DontCountHits",
-                                                                            "IsRefresh",
-                                                                            "Title"
-                                                                        ],
-                                                                        "ReadRange": [
-                                                                            "CounterID (62)",
-                                                                            "EventDate [15887, 15917]",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-38 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-38
index f292a7b00630..bcabeec4e5d2 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-38
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-38
@@ -153,118 +153,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "1000"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,1000)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,1000)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Count0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                                        "GroupBy": "item.URL",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "Filter",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "Filter",
-                                                                                "Predicate": "item.IsRefresh == 0 And item.IsLink != 0 And item.IsDownload == 0"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10,
-                                                                        "Plans": [
-                                                                            {
-                                                                                "Node Type": "TableRangeScan",
-                                                                                "Operators": [
-                                                                                    {
-                                                                                        "Name": "TableRangeScan",
-                                                                                        "ReadColumns": [
-                                                                                            "IsDownload",
-                                                                                            "IsLink",
-                                                                                            "IsRefresh",
-                                                                                            "URL"
-                                                                                        ],
-                                                                                        "ReadRange": [
-                                                                                            "CounterID (62)",
-                                                                                            "EventDate [15887, 15917]",
-                                                                                            "UserID (-\u221e, +\u221e)",
-                                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                                        ],
-                                                                                        "Scan": "Parallel",
-                                                                                        "Table": "clickbench/plans/row/hits"
-                                                                                    }
-                                                                                ],
-                                                                                "PlanNodeId": 11
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-39 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-39
index cbc99e925ca3..187fac177169 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-39
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-39
@@ -177,120 +177,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "1000"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,1000)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,1000)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Count0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "Filter",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "Filter",
-                                                                                "Predicate": "item.IsRefresh == 0"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10,
-                                                                        "Plans": [
-                                                                            {
-                                                                                "Node Type": "TableRangeScan",
-                                                                                "Operators": [
-                                                                                    {
-                                                                                        "Name": "TableRangeScan",
-                                                                                        "ReadColumns": [
-                                                                                            "AdvEngineID",
-                                                                                            "IsRefresh",
-                                                                                            "Referer",
-                                                                                            "SearchEngineID",
-                                                                                            "TraficSourceID",
-                                                                                            "URL"
-                                                                                        ],
-                                                                                        "ReadRange": [
-                                                                                            "CounterID (62)",
-                                                                                            "EventDate [15887, 15917]",
-                                                                                            "UserID (-\u221e, +\u221e)",
-                                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                                        ],
-                                                                                        "Scan": "Parallel",
-                                                                                        "Table": "clickbench/plans/row/hits"
-                                                                                    }
-                                                                                ],
-                                                                                "PlanNodeId": 11
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-4 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-4
index 6bdca171b161..3519570060c3 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-4
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-4
@@ -132,88 +132,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "item.UserID",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 9,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 10
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-40 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-40
index 278ee0c31253..760d0da8e8d7 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-40
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-40
@@ -158,119 +158,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "100"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,100)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,100)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Count0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "Filter",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "Filter",
-                                                                                "Predicate": "item.IsRefresh == 0 And If And item.RefererHash == 3594120000172545465"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10,
-                                                                        "Plans": [
-                                                                            {
-                                                                                "Node Type": "TableRangeScan",
-                                                                                "Operators": [
-                                                                                    {
-                                                                                        "Name": "TableRangeScan",
-                                                                                        "ReadColumns": [
-                                                                                            "EventDate",
-                                                                                            "IsRefresh",
-                                                                                            "RefererHash",
-                                                                                            "TraficSourceID",
-                                                                                            "URLHash"
-                                                                                        ],
-                                                                                        "ReadRange": [
-                                                                                            "CounterID (62)",
-                                                                                            "EventDate [15887, 15917]",
-                                                                                            "UserID (-\u221e, +\u221e)",
-                                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                                        ],
-                                                                                        "Scan": "Parallel",
-                                                                                        "Table": "clickbench/plans/row/hits"
-                                                                                    }
-                                                                                ],
-                                                                                "PlanNodeId": 11
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-41 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-41
index c64f0cb39115..235cd6952f88 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-41
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-41
@@ -158,119 +158,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "10000"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,10000)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,10000)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Count0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "Filter",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "Filter",
-                                                                                "Predicate": "item.IsRefresh == 0 And item.DontCountHits == 0 And item.URLHash == 2868770270353813622"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10,
-                                                                        "Plans": [
-                                                                            {
-                                                                                "Node Type": "TableRangeScan",
-                                                                                "Operators": [
-                                                                                    {
-                                                                                        "Name": "TableRangeScan",
-                                                                                        "ReadColumns": [
-                                                                                            "DontCountHits",
-                                                                                            "IsRefresh",
-                                                                                            "URLHash",
-                                                                                            "WindowClientHeight",
-                                                                                            "WindowClientWidth"
-                                                                                        ],
-                                                                                        "ReadRange": [
-                                                                                            "CounterID (62)",
-                                                                                            "EventDate [15887, 15917]",
-                                                                                            "UserID (-\u221e, +\u221e)",
-                                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                                        ],
-                                                                                        "Scan": "Parallel",
-                                                                                        "Table": "clickbench/plans/row/hits"
-                                                                                    }
-                                                                                ],
-                                                                                "PlanNodeId": 11
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-42 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-42
index d2d510f873e2..192386f6750d 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-42
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-42
@@ -152,117 +152,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Offset",
-                                        "Operators": [
-                                            {
-                                                "Name": "Offset",
-                                                "Offset": "1000"
-                                            }
-                                        ],
-                                        "PlanNodeId": 3,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Limit",
-                                                "Operators": [
-                                                    {
-                                                        "Limit": "SUM(10,1000)",
-                                                        "Name": "Limit"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 5,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TopSort",
-                                                        "Operators": [
-                                                            {
-                                                                "Limit": "SUM(10,1000)",
-                                                                "Name": "TopSort",
-                                                                "TopSortBy": "argument.Minute"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                                        "GroupBy": "item.Minute",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "Filter",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "Filter",
-                                                                                "Predicate": "item.IsRefresh == 0 And item.DontCountHits == 0"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 10,
-                                                                        "Plans": [
-                                                                            {
-                                                                                "Node Type": "TableRangeScan",
-                                                                                "Operators": [
-                                                                                    {
-                                                                                        "Name": "TableRangeScan",
-                                                                                        "ReadColumns": [
-                                                                                            "DontCountHits",
-                                                                                            "EventTime",
-                                                                                            "IsRefresh"
-                                                                                        ],
-                                                                                        "ReadRange": [
-                                                                                            "CounterID (62)",
-                                                                                            "EventDate [15900, 15901]",
-                                                                                            "UserID (-\u221e, +\u221e)",
-                                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                                        ],
-                                                                                        "Scan": "Parallel",
-                                                                                        "Table": "clickbench/plans/row/hits"
-                                                                                    }
-                                                                                ],
-                                                                                "PlanNodeId": 11
-                                                                            }
-                                                                        ]
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-5 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-5
index c408dd91fa22..adb29ce08b76 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-5
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-5
@@ -132,88 +132,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 4,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 5,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 7,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "item.SearchPhrase",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 9,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "SearchPhrase"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 10
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-6 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-6
index 9ea180ce221d..db7bdc28a5b2 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-6
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-6
@@ -113,75 +113,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet_1",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Aggregate",
-                                "Operators": [
-                                    {
-                                        "Name": "Aggregate"
-                                    }
-                                ],
-                                "PlanNodeId": 5,
-                                "Plans": [
-                                    {
-                                        "Node Type": "Limit",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1",
-                                                "Name": "Limit"
-                                            }
-                                        ],
-                                        "PlanNodeId": 6,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 8,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "TableFullScan",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "TableFullScan",
-                                                                "ReadColumns": [
-                                                                    "EventDate"
-                                                                ],
-                                                                "ReadRanges": [
-                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                    "UserID (-\u221e, +\u221e)",
-                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                ],
-                                                                "Scan": "Parallel",
-                                                                "Table": "clickbench/plans/row/hits"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 9
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-7 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-7
index 236280d0c27f..d6146c4d261c 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-7
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-7
@@ -117,91 +117,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "1001",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "1001",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: SUM(state._yql_agg_0,1)}",
-                                                        "GroupBy": "item.AdvEngineID",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Filter",
-                                                        "Operators": [
-                                                            {
-                                                                "Name": "Filter",
-                                                                "Predicate": "item.AdvEngineID != 0"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 7,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "AdvEngineID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 8
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-8 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-8
index 015c5430342b..d0277f70b3f9 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-8
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-8
@@ -138,93 +138,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Aggregate",
-                                                "Operators": [
-                                                    {
-                                                        "Aggregation": "{_yql_agg_0: COUNT(item.UserID,state._yql_agg_0)}",
-                                                        "GroupBy": "item.RegionID",
-                                                        "Name": "Aggregate"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "state",
-                                                                "GroupBy": "",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "RegionID",
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-9 b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-9
index 497314053df7..94f862d68bf5 100644
--- a/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-9
+++ b/ydb/tests/functional/clickbench/canondata/test.test_plans_row_/queries-original-plan-row-9
@@ -51,7 +51,10 @@
                                                 "PlanNodeId": 9,
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "Map",
+                                                        "KeyColumns": [
+                                                            "RegionID"
+                                                        ],
+                                                        "Node Type": "HashShuffle",
                                                         "PlanNodeId": 8,
                                                         "PlanNodeType": "Connection",
                                                         "Plans": [
@@ -73,10 +76,7 @@
                                                                 "PlanNodeId": 7,
                                                                 "Plans": [
                                                                     {
-                                                                        "KeyColumns": [
-                                                                            "RegionID"
-                                                                        ],
-                                                                        "Node Type": "HashShuffle",
+                                                                        "Node Type": "UnionAll",
                                                                         "PlanNodeId": 6,
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
@@ -121,10 +121,7 @@
                                                                         ]
                                                                     },
                                                                     {
-                                                                        "KeyColumns": [
-                                                                            "RegionID"
-                                                                        ],
-                                                                        "Node Type": "HashShuffle",
+                                                                        "Node Type": "UnionAll",
                                                                         "PlanNodeId": 4,
                                                                         "PlanNodeType": "Connection",
                                                                         "Plans": [
@@ -214,143 +211,6 @@
                     }
                 ]
             },
-            "SimplifiedPlan": {
-                "Node Type": "Query",
-                "PlanNodeId": 0,
-                "PlanNodeType": "Query",
-                "Plans": [
-                    {
-                        "Node Type": "ResultSet",
-                        "PlanNodeId": 1,
-                        "PlanNodeType": "ResultSet",
-                        "Plans": [
-                            {
-                                "Node Type": "Limit",
-                                "Operators": [
-                                    {
-                                        "Limit": "10",
-                                        "Name": "Limit"
-                                    }
-                                ],
-                                "PlanNodeId": 2,
-                                "Plans": [
-                                    {
-                                        "Node Type": "TopSort",
-                                        "Operators": [
-                                            {
-                                                "Limit": "10",
-                                                "Name": "TopSort",
-                                                "TopSortBy": "argument.Count0"
-                                            }
-                                        ],
-                                        "PlanNodeId": 4,
-                                        "Plans": [
-                                            {
-                                                "Node Type": "Union",
-                                                "Operators": [
-                                                    {
-                                                        "Name": "Union"
-                                                    }
-                                                ],
-                                                "PlanNodeId": 6,
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_1: SUM(state._yql_agg_1,1),_yql_agg_3: SUM(item.AdvEngineID,state._yql_agg_3)}",
-                                                                "GroupBy": "item.RegionID",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 8,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "TableFullScan",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Name": "TableFullScan",
-                                                                        "ReadColumns": [
-                                                                            "AdvEngineID",
-                                                                            "RegionID",
-                                                                            "ResolutionWidth",
-                                                                            "UserID"
-                                                                        ],
-                                                                        "ReadRanges": [
-                                                                            "CounterID (-\u221e, +\u221e)",
-                                                                            "EventDate (-\u221e, +\u221e)",
-                                                                            "UserID (-\u221e, +\u221e)",
-                                                                            "EventTime (-\u221e, +\u221e)",
-                                                                            "WatchID (-\u221e, +\u221e)"
-                                                                        ],
-                                                                        "Scan": "Parallel",
-                                                                        "Table": "clickbench/plans/row/hits"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 9
-                                                            }
-                                                        ]
-                                                    },
-                                                    {
-                                                        "Node Type": "Aggregate",
-                                                        "Operators": [
-                                                            {
-                                                                "Aggregation": "{_yql_agg_2: COUNT(item.UserID,state._yql_agg_2)}",
-                                                                "GroupBy": "item.RegionID",
-                                                                "Name": "Aggregate"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 11,
-                                                        "Plans": [
-                                                            {
-                                                                "Node Type": "Aggregate",
-                                                                "Operators": [
-                                                                    {
-                                                                        "Aggregation": "state",
-                                                                        "GroupBy": "",
-                                                                        "Name": "Aggregate"
-                                                                    }
-                                                                ],
-                                                                "PlanNodeId": 13,
-                                                                "Plans": [
-                                                                    {
-                                                                        "Node Type": "TableFullScan",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "AdvEngineID",
-                                                                                    "RegionID",
-                                                                                    "ResolutionWidth",
-                                                                                    "UserID"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "CounterID (-\u221e, +\u221e)",
-                                                                                    "EventDate (-\u221e, +\u221e)",
-                                                                                    "UserID (-\u221e, +\u221e)",
-                                                                                    "EventTime (-\u221e, +\u221e)",
-                                                                                    "WatchID (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "clickbench/plans/row/hits"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 14
-                                                                    }
-                                                                ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            }
-                                        ]
-                                    }
-                                ]
-                            }
-                        ]
-                    }
-                ]
-            },
             "tables": [
                 {
                     "name": "/local/clickbench/plans/row/hits",
diff --git a/ydb/tests/functional/clickbench/test.py b/ydb/tests/functional/clickbench/test.py
index 7c2a517bd36c..96be9c129450 100644
--- a/ydb/tests/functional/clickbench/test.py
+++ b/ydb/tests/functional/clickbench/test.py
@@ -74,6 +74,27 @@ def execute_scan_query(driver, yql_text, table_path):
                 break
 
 
+def remove_optimizer_estimates(query_plan):
+    if 'Plans' in query_plan:
+        for p in query_plan['Plans']:
+            remove_optimizer_estimates(p)
+    if 'Operators' in query_plan:
+        for op in query_plan['Operators']:
+            for key in ['A-Cpu', 'A-Rows', 'E-Cost', 'E-Rows', 'E-Size']:
+                if key in op:
+                    del op[key]
+
+
+def sanitize_plan(query_plan):
+    if 'queries' not in query_plan:
+        return
+    for q in query_plan['queries']:
+        if 'SimplifiedPlan' in q:
+            del q['SimplifiedPlan']
+        if 'Plan' in q:
+            remove_optimizer_estimates(q['Plan'])
+
+
 def explain_scan_query(driver, yql_text, table_path):
     yql_text = yql_text.replace("$data", table_path)
     client = ydb.ScriptingClient(driver)
@@ -81,7 +102,10 @@ def explain_scan_query(driver, yql_text, table_path):
         yql_text,
         ydb.ExplainYqlScriptSettings().with_mode(ydb.ExplainYqlScriptSettings.MODE_EXPLAIN)
     )
-    return json.loads(result.plan)
+    res = json.loads(result.plan)
+    sanitize_plan(res)
+    print(json.dumps(res))
+    return res
 
 
 def save_canonical_data(data, fname):
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_1.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_1.plan
index 2a10411b5fb2..faf2936c5f5a 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_1.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_1.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": "argument.qr.y"
                                             },
                                             {
-                                                "Condition": "_equijoin_column_0 = x",
+                                                "Condition": "qr._equijoin_column_0 = pv.x",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 28
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 26
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 26
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x)"
                                             }
                                         ],
                                         "PlanNodeId": 29,
@@ -179,19 +188,28 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "LeftJoin (MapJoin)",
+                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
-                                                "Condition": "x = x",
+                                                "Condition": "a.x = qt.x",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 1
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_2.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_2.plan
index a85fb4731cc3..e6374e1c075b 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_2.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_2.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": "argument.a.y"
                                             },
                                             {
-                                                "Condition": "x = x",
+                                                "Condition": "a.x = pv.x",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_3.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_3.plan
index 673894cf94d1..dd9f1a852156 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_3.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_3.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": "argument.pv.x"
                                             },
                                             {
-                                                "Condition": "x = x",
+                                                "Condition": "pv.x = a.x",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_4.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_4.plan
index edf4abdc2330..90ef40d7cf82 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_4.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_4.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": "argument.yy.pkyy"
                                             },
                                             {
-                                                "Condition": "_equijoin_column_0 = pkxx",
+                                                "Condition": "yy._equijoin_column_0 = xx.pkxx",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.pkxx)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_5.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_5.plan
index 3097345881e4..1f2e04ddcfe7 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_5.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_coalesce-and-join.test_/query_5.plan
@@ -24,12 +24,12 @@
                         "PlanNodeId": 9,
                         "Plans": [
                             {
-                                "Node Type": "UnionAll",
+                                "Node Type": "Merge",
                                 "PlanNodeId": 8,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -38,10 +38,11 @@
                                                     }
                                                 ],
                                                 "Limit": "1001",
-                                                "Name": "Limit"
+                                                "Name": "TopSort",
+                                                "TopSortBy": "argument.xx.pkxx"
                                             },
                                             {
-                                                "Condition": "pkxx = _equijoin_column_0",
+                                                "Condition": "xx.pkxx = Q._equijoin_column_0",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
@@ -127,6 +128,9 @@
                                             }
                                         ]
                                     }
+                                ],
+                                "SortColumns": [
+                                    "xx.pkxx (Asc)"
                                 ]
                             }
                         ]
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_2.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_2.plan
index 124399c168cd..610572c711cc 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_2.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_2.plan
@@ -53,7 +53,7 @@
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "Aggregate-LeftJoin (MapJoin)",
+                                                        "Node Type": "Aggregate-LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
                                                                 "Aggregation": "{_yql_agg_0: COUNT(item.t1.q1,state._yql_agg_0)}",
@@ -66,16 +66,25 @@
                                                                 "Name": "Aggregate"
                                                             },
                                                             {
-                                                                "Condition": "q2 = q1",
+                                                                "Condition": "t1.q2 = t2.q1",
                                                                 "Inputs": [
                                                                     {
                                                                         "ExternalPlanNodeId": 14
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 12
+                                                                        "InternalOperatorId": 2
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
+                                                            },
+                                                            {
+                                                                "Inputs": [
+                                                                    {
+                                                                        "ExternalPlanNodeId": 12
+                                                                    }
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.q1)"
                                                             }
                                                         ],
                                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_3.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_3.plan
index e86172a1a0c5..a0a1b3ffc293 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_3.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_3.plan
@@ -53,7 +53,7 @@
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "Aggregate-LeftJoin (MapJoin)",
+                                                        "Node Type": "Aggregate-LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
                                                                 "Aggregation": "{_yql_agg_0: COUNT(item.t2.q1,state._yql_agg_0)}",
@@ -66,16 +66,25 @@
                                                                 "Name": "Aggregate"
                                                             },
                                                             {
-                                                                "Condition": "q2 = q1",
+                                                                "Condition": "t1.q2 = t2.q1",
                                                                 "Inputs": [
                                                                     {
                                                                         "ExternalPlanNodeId": 14
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 12
+                                                                        "InternalOperatorId": 2
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
+                                                            },
+                                                            {
+                                                                "Inputs": [
+                                                                    {
+                                                                        "ExternalPlanNodeId": 12
+                                                                    }
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.q1)"
                                                             }
                                                         ],
                                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_4.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_4.plan
index f6421c5928e8..cf29efb91dad 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_4.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_4.plan
@@ -53,7 +53,7 @@
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "Aggregate-LeftJoin (MapJoin)",
+                                                        "Node Type": "Aggregate-LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
                                                                 "Aggregation": "{_yql_agg_0: COUNT(item.t2.q1,state._yql_agg_0)}",
@@ -66,16 +66,25 @@
                                                                 "Name": "Aggregate"
                                                             },
                                                             {
-                                                                "Condition": "q2 = q1",
+                                                                "Condition": "t1.q2 = t2.q1",
                                                                 "Inputs": [
                                                                     {
                                                                         "ExternalPlanNodeId": 8
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 6
+                                                                        "InternalOperatorId": 2
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
+                                                            },
+                                                            {
+                                                                "Inputs": [
+                                                                    {
+                                                                        "ExternalPlanNodeId": 6
+                                                                    }
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.q1)"
                                                             }
                                                         ],
                                                         "PlanNodeId": 9,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_5.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_5.plan
index ba08efdf65e5..5c8a4a6377a7 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_5.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join-group-by-with-null.test_/query_5.plan
@@ -53,21 +53,12 @@
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "Aggregate-LeftJoin (MapJoin)",
+                                                        "Node Type": "Aggregate-LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
                                                                 "Aggregation": "{_yql_agg_0: COUNT(item.t2.q1,state._yql_agg_0)}",
                                                                 "GroupBy": "item.t1.q2",
                                                                 "Inputs": [
-                                                                    {
-                                                                        "InternalOperatorId": 1
-                                                                    },
-                                                                    {
-                                                                        "InternalOperatorId": 1
-                                                                    },
-                                                                    {
-                                                                        "InternalOperatorId": 1
-                                                                    },
                                                                     {
                                                                         "InternalOperatorId": 1
                                                                     }
@@ -75,16 +66,25 @@
                                                                 "Name": "Aggregate"
                                                             },
                                                             {
-                                                                "Condition": "q2 = q1",
+                                                                "Condition": "t1.q2 = t2.q1",
                                                                 "Inputs": [
                                                                     {
                                                                         "ExternalPlanNodeId": 6
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 4
+                                                                        "InternalOperatorId": 2
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
+                                                            },
+                                                            {
+                                                                "Inputs": [
+                                                                    {
+                                                                        "ExternalPlanNodeId": 4
+                                                                    }
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.q1)"
                                                             }
                                                         ],
                                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_1.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_1.plan
index 5147d7df9342..cbe4c786017b 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_1.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_1.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "q2 = i2_1.q2",
+                                                "Condition": "i1.q2 = i2_1.q2",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i2_1.q2)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
@@ -74,13 +83,10 @@
                                                                         "Node Type": "InnerJoin (MapJoin)-Filter-TableFullScan",
                                                                         "Operators": [
                                                                             {
-                                                                                "Condition": "q1 = x",
+                                                                                "Condition": "i2_1.q1 = ss.x",
                                                                                 "Inputs": [
                                                                                     {
                                                                                         "InternalOperatorId": 1
-                                                                                    },
-                                                                                    {
-                                                                                        "Other": "ConstantExpression"
                                                                                     }
                                                                                 ],
                                                                                 "Name": "InnerJoin (MapJoin)"
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_10.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_10.plan
index 671c3b952189..c9ca97a53065 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_10.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_10.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -59,16 +59,25 @@
                                                 "Predicate": "item.b.thousand == item.a.q1 And item.a.q1 == item.b.hundred"
                                             },
                                             {
-                                                "Condition": "q1 = unique2",
+                                                "Condition": "a.q1 = b.unique2",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.unique2)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_11.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_11.plan
index b6ea50ef86d7..4c809dcd621e 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_11.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_11.plan
@@ -29,25 +29,10 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
                                                     {
                                                         "InternalOperatorId": 1
                                                     }
@@ -56,16 +41,25 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "f1 = unique2",
+                                                "Condition": "a.f1 = b.unique2",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.unique2)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_12.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_12.plan
index bf2ed0526126..0430b1cf0807 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_12.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_12.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -41,16 +41,25 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "_equijoin_column_0 = unique2",
+                                                "Condition": "b._equijoin_column_0 = c.unique2",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 12
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.unique2)"
                                             }
                                         ],
                                         "PlanNodeId": 13,
@@ -106,19 +115,28 @@
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
-                                                                "Condition": "unique1 = thousand",
+                                                                "Condition": "a.unique1 = b.thousand",
                                                                 "Inputs": [
                                                                     {
                                                                         "ExternalPlanNodeId": 10
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 8
+                                                                        "InternalOperatorId": 1
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
+                                                            },
+                                                            {
+                                                                "Inputs": [
+                                                                    {
+                                                                        "ExternalPlanNodeId": 8
+                                                                    }
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.thousand)"
                                                             }
                                                         ],
                                                         "PlanNodeId": 11,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_13.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_13.plan
index 6a0ccc4a01cb..d7a802257f45 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_13.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_13.plan
@@ -24,12 +24,12 @@
                         "PlanNodeId": 15,
                         "Plans": [
                             {
-                                "Node Type": "UnionAll",
+                                "Node Type": "Merge",
                                 "PlanNodeId": 14,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -38,19 +38,29 @@
                                                     }
                                                 ],
                                                 "Limit": "1001",
-                                                "Name": "Limit"
+                                                "Name": "TopSort",
+                                                "TopSortBy": "row.foo1_id"
                                             },
                                             {
-                                                "Condition": "join_key = foo2.f1",
+                                                "Condition": "foo1.join_key = foo3.foo2.f1",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 12
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 10
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 10
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.foo2.f1)"
                                             }
                                         ],
                                         "PlanNodeId": 13,
@@ -70,19 +80,28 @@
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                                         "Operators": [
                                                                             {
-                                                                                "Condition": "f1 = unique2",
+                                                                                "Condition": "foo2.f1 = ss2.unique2",
                                                                                 "Inputs": [
                                                                                     {
                                                                                         "ExternalPlanNodeId": 6
                                                                                     },
                                                                                     {
-                                                                                        "ExternalPlanNodeId": 4
+                                                                                        "InternalOperatorId": 1
                                                                                     }
                                                                                 ],
                                                                                 "Name": "LeftJoin (MapJoin)"
+                                                                            },
+                                                                            {
+                                                                                "Inputs": [
+                                                                                    {
+                                                                                        "ExternalPlanNodeId": 4
+                                                                                    }
+                                                                                ],
+                                                                                "Name": "Filter",
+                                                                                "Predicate": "Exist(item.unique2)"
                                                                             }
                                                                         ],
                                                                         "PlanNodeId": 7,
@@ -185,6 +204,9 @@
                                             }
                                         ]
                                     }
+                                ],
+                                "SortColumns": [
+                                    "foo1_id (Asc)"
                                 ]
                             }
                         ]
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_14.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_14.plan
index 6305b2aacd26..928c2c17e121 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_14.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_14.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -41,16 +41,25 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "id = yy_1.id",
+                                                "Condition": "xx.id = yy_1.id",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 10
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 8
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 8
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.yy_1.id)"
                                             }
                                         ],
                                         "PlanNodeId": 11,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_15.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_15.plan
index 66acad9bb50b..f51c155ac26c 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_15.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_15.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -41,16 +41,25 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "f1 = unique2",
+                                                "Condition": "a.f1 = b.unique2",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.unique2)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_2.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_2.plan
index e32606a841c2..442a0ff6c1da 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_2.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_2.plan
@@ -30,7 +30,7 @@
                                 "Plans": [
                                     {
                                         "CTE Name": "precompute_0_0",
-                                        "Node Type": "Limit-CrossJoin-InnerJoin (MapJoin)-ConstantExpr-Filter-TableFullScan-ConstantExpr",
+                                        "Node Type": "Limit-CrossJoin-InnerJoin (MapJoin)-Filter-TableFullScan-Filter-ConstantExpr-ConstantExpr",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -71,32 +71,27 @@
                                                         "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "InternalOperatorId": 6
+                                                        "InternalOperatorId": 7
                                                     }
                                                 ],
                                                 "Name": "CrossJoin"
                                             },
                                             {
-                                                "Condition": "thousand = Sum0",
+                                                "Condition": "t.thousand = b.Sum0",
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 4
+                                                        "InternalOperatorId": 3
                                                     },
                                                     {
-                                                        "InternalOperatorId": 3
+                                                        "InternalOperatorId": 5
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
                                             },
-                                            {
-                                                "Inputs": [],
-                                                "Name": "ToFlow",
-                                                "ToFlow": "precompute_0_0"
-                                            },
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 5
+                                                        "InternalOperatorId": 4
                                                     }
                                                 ],
                                                 "Name": "Filter",
@@ -116,6 +111,20 @@
                                                 "Scan": "Parallel",
                                                 "Table": "postgres_jointest/join0.test_plan/tenk1"
                                             },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "InternalOperatorId": 6
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.Sum0)"
+                                            },
+                                            {
+                                                "Inputs": [],
+                                                "Name": "ToFlow",
+                                                "ToFlow": "precompute_0_0"
+                                            },
                                             {
                                                 "Inputs": [],
                                                 "Name": "ToFlow",
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_3.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_3.plan
index 79c087524eb6..5e0a08fe8021 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_3.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_3.plan
@@ -37,7 +37,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Aggregate-InnerJoin (MapJoin)-Filter",
+                                        "Node Type": "Aggregate-InnerJoin (MapJoin)-Filter-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -48,13 +48,13 @@
                                                 "Name": "Aggregate"
                                             },
                                             {
-                                                "Condition": "hundred = thousand",
+                                                "Condition": "a.hundred = b.thousand",
                                                 "Inputs": [
                                                     {
                                                         "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
@@ -67,6 +67,15 @@
                                                 ],
                                                 "Name": "Filter",
                                                 "Predicate": "Exist(item.hundred)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.thousand)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_4.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_4.plan
index b44e5f273d19..5c9285dc900d 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_4.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_4.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -62,16 +62,25 @@
                                                 "Predicate": "Not Exist(item.b.unique2) And item.a.ten == 2 Or item.b.hundred == 3"
                                             },
                                             {
-                                                "Condition": "unique2 = tenthous",
+                                                "Condition": "a.unique2 = b.tenthous",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.tenthous)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_5.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_5.plan
index b6afa7ff6426..15d0dceeb657 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_5.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_5.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter",
+                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,13 +42,13 @@
                                                 "TopSortBy": "argument.qr.qq"
                                             },
                                             {
-                                                "Condition": "qq = unique2",
+                                                "Condition": "qr.qq = c.unique2",
                                                 "Inputs": [
                                                     {
                                                         "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
@@ -61,6 +61,15 @@
                                                 ],
                                                 "Name": "Filter",
                                                 "Predicate": "Exist(item.qq)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.unique2)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_6.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_6.plan
index 562e6a816087..ce79a6a7d6a3 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_6.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_6.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -59,16 +59,25 @@
                                                 "Predicate": "item.t1.stringu1 > item.t2.stringu2"
                                             },
                                             {
-                                                "Condition": "subq1.y1 = unique1",
+                                                "Condition": "subq1.y1 = t2.unique1",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 32
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 30
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 30
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.unique1)"
                                             }
                                         ],
                                         "PlanNodeId": 33,
@@ -194,16 +203,16 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "InnerJoin (MapJoin)-Filter",
+                                        "Node Type": "InnerJoin (MapJoin)-Filter-Filter",
                                         "Operators": [
                                             {
-                                                "Condition": "unique2 = d1",
+                                                "Condition": "t1.unique2 = subq1.d1",
                                                 "Inputs": [
                                                     {
                                                         "InternalOperatorId": 1
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 16
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
@@ -216,6 +225,15 @@
                                                 ],
                                                 "Name": "Filter",
                                                 "Predicate": "Exist(item.unique2)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 16
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.d1)"
                                             }
                                         ],
                                         "PlanNodeId": 19,
@@ -235,19 +253,28 @@
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                                         "Operators": [
                                                                             {
-                                                                                "Condition": "f1 = v1.x2",
+                                                                                "Condition": "i1.f1 = subq1.v1.x2",
                                                                                 "Inputs": [
                                                                                     {
                                                                                         "ExternalPlanNodeId": 12
                                                                                     },
                                                                                     {
-                                                                                        "ExternalPlanNodeId": 10
+                                                                                        "InternalOperatorId": 1
                                                                                     }
                                                                                 ],
                                                                                 "Name": "LeftJoin (MapJoin)"
+                                                                            },
+                                                                            {
+                                                                                "Inputs": [
+                                                                                    {
+                                                                                        "ExternalPlanNodeId": 10
+                                                                                    }
+                                                                                ],
+                                                                                "Name": "Filter",
+                                                                                "Predicate": "Exist(item.v1.x2)"
                                                                             }
                                                                         ],
                                                                         "PlanNodeId": 13,
@@ -267,19 +294,28 @@
                                                                                                 "PlanNodeType": "Connection",
                                                                                                 "Plans": [
                                                                                                     {
-                                                                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                                                                         "Operators": [
                                                                                                             {
-                                                                                                                "Condition": "x1 = y2",
+                                                                                                                "Condition": "v1.x1 = v2.y2",
                                                                                                                 "Inputs": [
                                                                                                                     {
                                                                                                                         "ExternalPlanNodeId": 6
                                                                                                                     },
                                                                                                                     {
-                                                                                                                        "ExternalPlanNodeId": 4
+                                                                                                                        "InternalOperatorId": 1
                                                                                                                     }
                                                                                                                 ],
                                                                                                                 "Name": "LeftJoin (MapJoin)"
+                                                                                                            },
+                                                                                                            {
+                                                                                                                "Inputs": [
+                                                                                                                    {
+                                                                                                                        "ExternalPlanNodeId": 4
+                                                                                                                    }
+                                                                                                                ],
+                                                                                                                "Name": "Filter",
+                                                                                                                "Predicate": "Exist(item.y2)"
                                                                                                             }
                                                                                                         ],
                                                                                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_7.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_7.plan
index 46632717b400..68b2502bc1b6 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_7.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_7.plan
@@ -37,7 +37,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Aggregate-LeftJoin (MapJoin)",
+                                        "Node Type": "Aggregate-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -48,16 +48,25 @@
                                                 "Name": "Aggregate"
                                             },
                                             {
-                                                "Condition": "hundred,ten = t2.hundred,t3.ten",
+                                                "Condition": "t1.hundred,t1.ten = t2.hundred,t3.ten",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 12
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 10
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 10
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.t2.hundred) And Exist(item.t3.ten)"
                                             }
                                         ],
                                         "PlanNodeId": 13,
@@ -77,16 +86,16 @@
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "InnerJoin (MapJoin)-Filter",
+                                                                        "Node Type": "InnerJoin (MapJoin)-Filter-Filter",
                                                                         "Operators": [
                                                                             {
-                                                                                "Condition": "thousand = unique2",
+                                                                                "Condition": "t2.thousand = t3.unique2",
                                                                                 "Inputs": [
                                                                                     {
                                                                                         "InternalOperatorId": 1
                                                                                     },
                                                                                     {
-                                                                                        "ExternalPlanNodeId": 4
+                                                                                        "InternalOperatorId": 2
                                                                                     }
                                                                                 ],
                                                                                 "Name": "InnerJoin (MapJoin)"
@@ -99,6 +108,15 @@
                                                                                 ],
                                                                                 "Name": "Filter",
                                                                                 "Predicate": "Exist(item.thousand)"
+                                                                            },
+                                                                            {
+                                                                                "Inputs": [
+                                                                                    {
+                                                                                        "ExternalPlanNodeId": 4
+                                                                                    }
+                                                                                ],
+                                                                                "Name": "Filter",
+                                                                                "Predicate": "Exist(item.unique2)"
                                                                             }
                                                                         ],
                                                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_8.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_8.plan
index cbfe5d9fd029..330b5d82d3f4 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_8.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_8.plan
@@ -37,7 +37,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Aggregate-LeftJoin (MapJoin)",
+                                        "Node Type": "Aggregate-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -48,16 +48,25 @@
                                                 "Name": "Aggregate"
                                             },
                                             {
-                                                "Condition": "hundred,ten = hundred,_equijoin_column_0",
+                                                "Condition": "t1.hundred,t1.ten = qr.hundred,qr._equijoin_column_0",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 12
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 10
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 10
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item._equijoin_column_0) And Exist(item.hundred)"
                                             }
                                         ],
                                         "PlanNodeId": 13,
@@ -77,16 +86,16 @@
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "InnerJoin (MapJoin)-Filter",
+                                                                        "Node Type": "InnerJoin (MapJoin)-Filter-Filter",
                                                                         "Operators": [
                                                                             {
-                                                                                "Condition": "thousand = unique2",
+                                                                                "Condition": "t2.thousand = t3.unique2",
                                                                                 "Inputs": [
                                                                                     {
                                                                                         "InternalOperatorId": 1
                                                                                     },
                                                                                     {
-                                                                                        "ExternalPlanNodeId": 4
+                                                                                        "InternalOperatorId": 2
                                                                                     }
                                                                                 ],
                                                                                 "Name": "InnerJoin (MapJoin)"
@@ -99,6 +108,15 @@
                                                                                 ],
                                                                                 "Name": "Filter",
                                                                                 "Predicate": "Exist(item.thousand)"
+                                                                            },
+                                                                            {
+                                                                                "Inputs": [
+                                                                                    {
+                                                                                        "ExternalPlanNodeId": 4
+                                                                                    }
+                                                                                ],
+                                                                                "Name": "Filter",
+                                                                                "Predicate": "Exist(item.unique2)"
                                                                             }
                                                                         ],
                                                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_9.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_9.plan
index da082e8251ef..7dac2bed4f77 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_9.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join0.test_/query_9.plan
@@ -29,25 +29,10 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
                                                     {
                                                         "InternalOperatorId": 1
                                                     }
@@ -57,16 +42,25 @@
                                                 "TopSortBy": "row.fault"
                                             },
                                             {
-                                                "Condition": "q2 = unique2",
+                                                "Condition": "int8_tbl.q2 = tenk1.unique2",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.unique2)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_1.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_1.plan
index 0d28f12c2934..50212d969660 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_1.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_1.plan
@@ -29,8 +29,8 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "CTE Name": "precompute_1_0",
-                                        "Node Type": "TopSort-InnerJoin (MapJoin)-ConstantExpr-Filter-TableRangeScan-ConstantExpr",
+                                        "CTE Name": "precompute_0_0",
+                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter-TableRangeScan-ConstantExpr-Filter-ConstantExpr",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -43,26 +43,21 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "t2.i = t1.i",
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 3
+                                                        "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "InternalOperatorId": 2
+                                                        "InternalOperatorId": 5
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
                                             },
-                                            {
-                                                "Inputs": [],
-                                                "Name": "ToFlow",
-                                                "ToFlow": "precompute_0_0"
-                                            },
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "Filter",
@@ -71,7 +66,7 @@
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 5
+                                                        "InternalOperatorId": 4
                                                     }
                                                 ],
                                                 "Name": "TableRangeScan",
@@ -85,6 +80,20 @@
                                                 "Inputs": [],
                                                 "Iterator": "precompute_1_0",
                                                 "Name": "Iterator"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "InternalOperatorId": 6
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
+                                            },
+                                            {
+                                                "Inputs": [],
+                                                "Name": "ToFlow",
+                                                "ToFlow": "precompute_0_0"
                                             }
                                         ],
                                         "PlanNodeId": 9,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_10.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_10.plan
index bf55ae2740b4..68c2a3641900 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_10.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_10.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J1_TBL.i = J2_TBL.i",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_13.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_13.plan
index 9bb347ebd800..5d5e1ec3689e 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_13.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_13.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -59,16 +59,25 @@
                                                 "Predicate": "item.J2_TBL.k == 1"
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J1_TBL.i = J2_TBL.i",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_14.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_14.plan
index 993d333a98ef..ce982c4ec18b 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_14.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_14.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -41,16 +41,25 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J1_TBL.i = J2_TBL.i",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_2.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_2.plan
index d57cb4d424aa..18739de82571 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_2.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_2.plan
@@ -29,8 +29,8 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "CTE Name": "precompute_1_0",
-                                        "Node Type": "TopSort-InnerJoin (MapJoin)-ConstantExpr-Filter-TableRangeScan-ConstantExpr",
+                                        "CTE Name": "precompute_0_0",
+                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter-TableRangeScan-ConstantExpr-Filter-ConstantExpr",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -43,26 +43,21 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J2_TBL.i = J1_TBL.i",
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 3
+                                                        "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "InternalOperatorId": 2
+                                                        "InternalOperatorId": 5
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
                                             },
-                                            {
-                                                "Inputs": [],
-                                                "Name": "ToFlow",
-                                                "ToFlow": "precompute_0_0"
-                                            },
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "Filter",
@@ -71,7 +66,7 @@
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 5
+                                                        "InternalOperatorId": 4
                                                     }
                                                 ],
                                                 "Name": "TableRangeScan",
@@ -85,6 +80,20 @@
                                                 "Inputs": [],
                                                 "Iterator": "precompute_1_0",
                                                 "Name": "Iterator"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "InternalOperatorId": 6
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
+                                            },
+                                            {
+                                                "Inputs": [],
+                                                "Name": "ToFlow",
+                                                "ToFlow": "precompute_0_0"
                                             }
                                         ],
                                         "PlanNodeId": 9,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_3.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_3.plan
index d57cb4d424aa..18739de82571 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_3.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_3.plan
@@ -29,8 +29,8 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "CTE Name": "precompute_1_0",
-                                        "Node Type": "TopSort-InnerJoin (MapJoin)-ConstantExpr-Filter-TableRangeScan-ConstantExpr",
+                                        "CTE Name": "precompute_0_0",
+                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter-TableRangeScan-ConstantExpr-Filter-ConstantExpr",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -43,26 +43,21 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J2_TBL.i = J1_TBL.i",
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 3
+                                                        "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "InternalOperatorId": 2
+                                                        "InternalOperatorId": 5
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
                                             },
-                                            {
-                                                "Inputs": [],
-                                                "Name": "ToFlow",
-                                                "ToFlow": "precompute_0_0"
-                                            },
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "Filter",
@@ -71,7 +66,7 @@
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 5
+                                                        "InternalOperatorId": 4
                                                     }
                                                 ],
                                                 "Name": "TableRangeScan",
@@ -85,6 +80,20 @@
                                                 "Inputs": [],
                                                 "Iterator": "precompute_1_0",
                                                 "Name": "Iterator"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "InternalOperatorId": 6
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
+                                            },
+                                            {
+                                                "Inputs": [],
+                                                "Name": "ToFlow",
+                                                "ToFlow": "precompute_0_0"
                                             }
                                         ],
                                         "PlanNodeId": 9,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_4.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_4.plan
index c17b11fc3f17..2efd4264a8ba 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_4.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_4.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter",
+                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,13 +42,13 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "j = k",
+                                                "Condition": "t1.j = t2.k",
                                                 "Inputs": [
                                                     {
                                                         "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
@@ -61,6 +61,15 @@
                                                 ],
                                                 "Name": "Filter",
                                                 "Predicate": "Exist(item.j)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.k)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_5.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_5.plan
index d57cb4d424aa..18739de82571 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_5.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_5.plan
@@ -29,8 +29,8 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "CTE Name": "precompute_1_0",
-                                        "Node Type": "TopSort-InnerJoin (MapJoin)-ConstantExpr-Filter-TableRangeScan-ConstantExpr",
+                                        "CTE Name": "precompute_0_0",
+                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter-TableRangeScan-ConstantExpr-Filter-ConstantExpr",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -43,26 +43,21 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J2_TBL.i = J1_TBL.i",
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 3
+                                                        "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "InternalOperatorId": 2
+                                                        "InternalOperatorId": 5
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
                                             },
-                                            {
-                                                "Inputs": [],
-                                                "Name": "ToFlow",
-                                                "ToFlow": "precompute_0_0"
-                                            },
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "Filter",
@@ -71,7 +66,7 @@
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 5
+                                                        "InternalOperatorId": 4
                                                     }
                                                 ],
                                                 "Name": "TableRangeScan",
@@ -85,6 +80,20 @@
                                                 "Inputs": [],
                                                 "Iterator": "precompute_1_0",
                                                 "Name": "Iterator"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "InternalOperatorId": 6
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
+                                            },
+                                            {
+                                                "Inputs": [],
+                                                "Name": "ToFlow",
+                                                "ToFlow": "precompute_0_0"
                                             }
                                         ],
                                         "PlanNodeId": 9,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_6.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_6.plan
index a29ea8ecddce..b229e1d51c7a 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_6.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_6.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter",
+                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,13 +42,13 @@
                                                 "TopSortBy": "argument.J1_TBL.i"
                                             },
                                             {
-                                                "Condition": "i = k",
+                                                "Condition": "J1_TBL.i = J2_TBL.k",
                                                 "Inputs": [
                                                     {
                                                         "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
@@ -61,6 +61,15 @@
                                                 ],
                                                 "Name": "Filter",
                                                 "Predicate": "Exist(item.i)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.k)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_7.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_7.plan
index 305986170a2c..6d7de3a01c2b 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_7.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_7.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J1_TBL.i = J2_TBL.i",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_8.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_8.plan
index 305986170a2c..6d7de3a01c2b 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_8.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_8.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J1_TBL.i = J2_TBL.i",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_9.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_9.plan
index bf55ae2740b4..68c2a3641900 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_9.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join1.test_/query_9.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "i = i",
+                                                "Condition": "J1_TBL.i = J2_TBL.i",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.i)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_10.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_10.plan
index 4d50e239bc7a..c22e5ca71d01 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_10.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_10.plan
@@ -5,7 +5,7 @@
         "Plans": [
             {
                 "Node Type": "ResultSet_2",
-                "PlanNodeId": 24,
+                "PlanNodeId": 25,
                 "PlanNodeType": "ResultSet",
                 "Plans": [
                     {
@@ -14,52 +14,25 @@
                             {
                                 "Inputs": [
                                     {
-                                        "ExternalPlanNodeId": 22
+                                        "ExternalPlanNodeId": 23
                                     }
                                 ],
                                 "Limit": "1001",
                                 "Name": "Limit"
                             }
                         ],
-                        "PlanNodeId": 23,
+                        "PlanNodeId": 24,
                         "Plans": [
                             {
                                 "Node Type": "Merge",
-                                "PlanNodeId": 22,
+                                "PlanNodeId": 23,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
                                                     {
                                                         "InternalOperatorId": 1
                                                     }
@@ -69,74 +42,73 @@
                                                 "TopSortBy": "row.x1"
                                             },
                                             {
-                                                "Condition": "x_1.x1 = x1",
+                                                "Condition": "x_1.x1 = xx.x1",
                                                 "Inputs": [
                                                     {
-                                                        "ExternalPlanNodeId": 20
+                                                        "ExternalPlanNodeId": 21
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 13
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x1)"
                                             }
                                         ],
-                                        "PlanNodeId": 21,
+                                        "PlanNodeId": 22,
                                         "Plans": [
                                             {
                                                 "Node Type": "Map",
-                                                "PlanNodeId": 20,
+                                                "PlanNodeId": 21,
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
-                                                                "Condition": "x1 = y1",
+                                                                "Condition": "x_1.x1 = y.y1",
                                                                 "Inputs": [
                                                                     {
-                                                                        "ExternalPlanNodeId": 18
+                                                                        "ExternalPlanNodeId": 19
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 16
+                                                                        "InternalOperatorId": 1
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 19,
-                                                        "Plans": [
+                                                            },
                                                             {
-                                                                "Node Type": "Map",
-                                                                "PlanNodeId": 18,
-                                                                "PlanNodeType": "Connection",
-                                                                "Plans": [
+                                                                "Inputs": [
                                                                     {
-                                                                        "CTE Name": "precompute_0_0",
-                                                                        "Node Type": "ConstantExpr",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Inputs": [],
-                                                                                "Iterator": "precompute_0_0",
-                                                                                "Name": "Iterator"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 17
+                                                                        "ExternalPlanNodeId": 17
                                                                     }
-                                                                ]
-                                                            },
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.y1)"
+                                                            }
+                                                        ],
+                                                        "PlanNodeId": 20,
+                                                        "Plans": [
                                                             {
                                                                 "Node Type": "Broadcast",
-                                                                "PlanNodeId": 16,
+                                                                "PlanNodeId": 17,
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
                                                                         "Node Type": "Collect",
-                                                                        "PlanNodeId": 15,
+                                                                        "PlanNodeId": 16,
                                                                         "Plans": [
                                                                             {
                                                                                 "Node Type": "UnionAll",
-                                                                                "PlanNodeId": 14,
+                                                                                "PlanNodeId": 15,
                                                                                 "PlanNodeType": "Connection",
                                                                                 "Plans": [
                                                                                     {
@@ -171,7 +143,7 @@
                                                                                                 "Name": "Iterator"
                                                                                             }
                                                                                         ],
-                                                                                        "PlanNodeId": 13,
+                                                                                        "PlanNodeId": 14,
                                                                                         "Tables": [
                                                                                             "postgres_jointest/join2.test_plan/y"
                                                                                         ]
@@ -181,53 +153,48 @@
                                                                         ]
                                                                     }
                                                                 ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            },
-                                            {
-                                                "Node Type": "Broadcast",
-                                                "PlanNodeId": 12,
-                                                "PlanNodeType": "Connection",
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Collect",
-                                                        "PlanNodeId": 11,
-                                                        "Plans": [
+                                                            },
                                                             {
-                                                                "Node Type": "UnionAll",
-                                                                "PlanNodeId": 10,
+                                                                "Node Type": "Map",
+                                                                "PlanNodeId": 19,
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "TableFullScan",
+                                                                        "CTE Name": "precompute_0_1",
+                                                                        "Node Type": "ConstantExpr",
                                                                         "Operators": [
                                                                             {
                                                                                 "Inputs": [],
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "x1",
-                                                                                    "x2"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "x1 (-\u221e, +\u221e)",
-                                                                                    "x2 (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "postgres_jointest/join2.test_plan/x"
+                                                                                "Iterator": "precompute_0_1",
+                                                                                "Name": "Iterator"
                                                                             }
                                                                         ],
-                                                                        "PlanNodeId": 9,
-                                                                        "Tables": [
-                                                                            "postgres_jointest/join2.test_plan/x"
-                                                                        ]
+                                                                        "PlanNodeId": 18
                                                                     }
                                                                 ]
                                                             }
                                                         ]
                                                     }
                                                 ]
+                                            },
+                                            {
+                                                "Node Type": "Broadcast",
+                                                "PlanNodeId": 13,
+                                                "PlanNodeType": "Connection",
+                                                "Plans": [
+                                                    {
+                                                        "CTE Name": "precompute_0_0",
+                                                        "Node Type": "ConstantExpr",
+                                                        "Operators": [
+                                                            {
+                                                                "Inputs": [],
+                                                                "Iterator": "precompute_0_0",
+                                                                "Name": "Iterator"
+                                                            }
+                                                        ],
+                                                        "PlanNodeId": 12
+                                                    }
+                                                ]
                                             }
                                         ]
                                     }
@@ -243,51 +210,42 @@
             {
                 "Node Type": "Precompute_1",
                 "Parent Relationship": "InitPlan",
-                "PlanNodeId": 7,
+                "PlanNodeId": 10,
                 "PlanNodeType": "Materialize",
                 "Plans": [
                     {
-                        "CTE Name": "precompute_0_0",
+                        "CTE Name": "precompute_0_1",
                         "Node Type": "Aggregate",
                         "Operators": [
                             {
-                                "Input": "precompute_0_0",
+                                "Input": "precompute_0_1",
                                 "Inputs": [],
                                 "Name": "PartitionByKey"
                             }
                         ],
-                        "PlanNodeId": 6
+                        "PlanNodeId": 9
                     }
                 ],
                 "Subplan Name": "CTE precompute_1_0"
             },
             {
-                "Node Type": "Precompute_0",
+                "Node Type": "Precompute_0_0",
                 "Parent Relationship": "InitPlan",
-                "PlanNodeId": 4,
+                "PlanNodeId": 7,
                 "PlanNodeType": "Materialize",
                 "Plans": [
                     {
                         "Node Type": "Collect",
-                        "PlanNodeId": 3,
+                        "PlanNodeId": 6,
                         "Plans": [
                             {
                                 "Node Type": "UnionAll",
-                                "PlanNodeId": 2,
+                                "PlanNodeId": 5,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Filter-TableFullScan",
+                                        "Node Type": "TableFullScan",
                                         "Operators": [
-                                            {
-                                                "Inputs": [
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    }
-                                                ],
-                                                "Name": "Filter",
-                                                "Predicate": "Exist(item.x2)"
-                                            },
                                             {
                                                 "Inputs": [],
                                                 "Name": "TableFullScan",
@@ -303,7 +261,9 @@
                                                 "Table": "postgres_jointest/join2.test_plan/x"
                                             }
                                         ],
-                                        "PlanNodeId": 1,
+                                        "Parent Relationship": "InitPlan",
+                                        "PlanNodeId": 4,
+                                        "Subplan Name": "CTE TableFullScan_5",
                                         "Tables": [
                                             "postgres_jointest/join2.test_plan/x"
                                         ]
@@ -314,6 +274,27 @@
                     }
                 ],
                 "Subplan Name": "CTE precompute_0_0"
+            },
+            {
+                "Node Type": "Precompute_0_1",
+                "Parent Relationship": "InitPlan",
+                "PlanNodeId": 3,
+                "PlanNodeType": "Materialize",
+                "Plans": [
+                    {
+                        "Node Type": "Collect",
+                        "PlanNodeId": 2,
+                        "Plans": [
+                            {
+                                "CTE Name": "TableFullScan_5",
+                                "Node Type": "UnionAll",
+                                "PlanNodeId": 1,
+                                "PlanNodeType": "Connection"
+                            }
+                        ]
+                    }
+                ],
+                "Subplan Name": "CTE precompute_0_1"
             }
         ]
     },
@@ -325,17 +306,6 @@
         {
             "name": "/Root/postgres_jointest/join2.test_plan/x",
             "reads": [
-                {
-                    "columns": [
-                        "x1",
-                        "x2"
-                    ],
-                    "scan_by": [
-                        "x1 (-\u221e, +\u221e)",
-                        "x2 (-\u221e, +\u221e)"
-                    ],
-                    "type": "FullScan"
-                },
                 {
                     "columns": [
                         "x1",
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_11.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_11.plan
index d2f15ee3d0f2..e892bfc6fcba 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_11.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_11.plan
@@ -5,7 +5,7 @@
         "Plans": [
             {
                 "Node Type": "ResultSet_2",
-                "PlanNodeId": 24,
+                "PlanNodeId": 25,
                 "PlanNodeType": "ResultSet",
                 "Plans": [
                     {
@@ -14,22 +14,22 @@
                             {
                                 "Inputs": [
                                     {
-                                        "ExternalPlanNodeId": 22
+                                        "ExternalPlanNodeId": 23
                                     }
                                 ],
                                 "Limit": "1001",
                                 "Name": "Limit"
                             }
                         ],
-                        "PlanNodeId": 23,
+                        "PlanNodeId": 24,
                         "Plans": [
                             {
                                 "Node Type": "Merge",
-                                "PlanNodeId": 22,
+                                "PlanNodeId": 23,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -78,74 +78,73 @@
                                                 "Predicate": "Exist(item.y.y2)"
                                             },
                                             {
-                                                "Condition": "x_1.x1 = x1",
+                                                "Condition": "x_1.x1 = xx.x1",
                                                 "Inputs": [
                                                     {
-                                                        "ExternalPlanNodeId": 20
+                                                        "ExternalPlanNodeId": 21
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 13
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x1)"
                                             }
                                         ],
-                                        "PlanNodeId": 21,
+                                        "PlanNodeId": 22,
                                         "Plans": [
                                             {
                                                 "Node Type": "Map",
-                                                "PlanNodeId": 20,
+                                                "PlanNodeId": 21,
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
-                                                                "Condition": "x1 = y1",
+                                                                "Condition": "x_1.x1 = y.y1",
                                                                 "Inputs": [
                                                                     {
-                                                                        "ExternalPlanNodeId": 18
+                                                                        "ExternalPlanNodeId": 19
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 16
+                                                                        "InternalOperatorId": 1
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 19,
-                                                        "Plans": [
+                                                            },
                                                             {
-                                                                "Node Type": "Map",
-                                                                "PlanNodeId": 18,
-                                                                "PlanNodeType": "Connection",
-                                                                "Plans": [
+                                                                "Inputs": [
                                                                     {
-                                                                        "CTE Name": "precompute_0_0",
-                                                                        "Node Type": "ConstantExpr",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Inputs": [],
-                                                                                "Iterator": "precompute_0_0",
-                                                                                "Name": "Iterator"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 17
+                                                                        "ExternalPlanNodeId": 17
                                                                     }
-                                                                ]
-                                                            },
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.y1)"
+                                                            }
+                                                        ],
+                                                        "PlanNodeId": 20,
+                                                        "Plans": [
                                                             {
                                                                 "Node Type": "Broadcast",
-                                                                "PlanNodeId": 16,
+                                                                "PlanNodeId": 17,
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
                                                                         "Node Type": "Collect",
-                                                                        "PlanNodeId": 15,
+                                                                        "PlanNodeId": 16,
                                                                         "Plans": [
                                                                             {
                                                                                 "Node Type": "UnionAll",
-                                                                                "PlanNodeId": 14,
+                                                                                "PlanNodeId": 15,
                                                                                 "PlanNodeType": "Connection",
                                                                                 "Plans": [
                                                                                     {
@@ -180,7 +179,7 @@
                                                                                                 "Name": "Iterator"
                                                                                             }
                                                                                         ],
-                                                                                        "PlanNodeId": 13,
+                                                                                        "PlanNodeId": 14,
                                                                                         "Tables": [
                                                                                             "postgres_jointest/join2.test_plan/y"
                                                                                         ]
@@ -190,53 +189,48 @@
                                                                         ]
                                                                     }
                                                                 ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            },
-                                            {
-                                                "Node Type": "Broadcast",
-                                                "PlanNodeId": 12,
-                                                "PlanNodeType": "Connection",
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Collect",
-                                                        "PlanNodeId": 11,
-                                                        "Plans": [
+                                                            },
                                                             {
-                                                                "Node Type": "UnionAll",
-                                                                "PlanNodeId": 10,
+                                                                "Node Type": "Map",
+                                                                "PlanNodeId": 19,
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "TableFullScan",
+                                                                        "CTE Name": "precompute_0_1",
+                                                                        "Node Type": "ConstantExpr",
                                                                         "Operators": [
                                                                             {
                                                                                 "Inputs": [],
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "x1",
-                                                                                    "x2"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "x1 (-\u221e, +\u221e)",
-                                                                                    "x2 (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "postgres_jointest/join2.test_plan/x"
+                                                                                "Iterator": "precompute_0_1",
+                                                                                "Name": "Iterator"
                                                                             }
                                                                         ],
-                                                                        "PlanNodeId": 9,
-                                                                        "Tables": [
-                                                                            "postgres_jointest/join2.test_plan/x"
-                                                                        ]
+                                                                        "PlanNodeId": 18
                                                                     }
                                                                 ]
                                                             }
                                                         ]
                                                     }
                                                 ]
+                                            },
+                                            {
+                                                "Node Type": "Broadcast",
+                                                "PlanNodeId": 13,
+                                                "PlanNodeType": "Connection",
+                                                "Plans": [
+                                                    {
+                                                        "CTE Name": "precompute_0_0",
+                                                        "Node Type": "ConstantExpr",
+                                                        "Operators": [
+                                                            {
+                                                                "Inputs": [],
+                                                                "Iterator": "precompute_0_0",
+                                                                "Name": "Iterator"
+                                                            }
+                                                        ],
+                                                        "PlanNodeId": 12
+                                                    }
+                                                ]
                                             }
                                         ]
                                     }
@@ -252,37 +246,37 @@
             {
                 "Node Type": "Precompute_1",
                 "Parent Relationship": "InitPlan",
-                "PlanNodeId": 7,
+                "PlanNodeId": 10,
                 "PlanNodeType": "Materialize",
                 "Plans": [
                     {
-                        "CTE Name": "precompute_0_0",
+                        "CTE Name": "precompute_0_1",
                         "Node Type": "Aggregate",
                         "Operators": [
                             {
-                                "Input": "precompute_0_0",
+                                "Input": "precompute_0_1",
                                 "Inputs": [],
                                 "Name": "PartitionByKey"
                             }
                         ],
-                        "PlanNodeId": 6
+                        "PlanNodeId": 9
                     }
                 ],
                 "Subplan Name": "CTE precompute_1_0"
             },
             {
-                "Node Type": "Precompute_0",
+                "Node Type": "Precompute_0_0",
                 "Parent Relationship": "InitPlan",
-                "PlanNodeId": 4,
+                "PlanNodeId": 7,
                 "PlanNodeType": "Materialize",
                 "Plans": [
                     {
                         "Node Type": "Collect",
-                        "PlanNodeId": 3,
+                        "PlanNodeId": 6,
                         "Plans": [
                             {
                                 "Node Type": "UnionAll",
-                                "PlanNodeId": 2,
+                                "PlanNodeId": 5,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
@@ -303,7 +297,9 @@
                                                 "Table": "postgres_jointest/join2.test_plan/x"
                                             }
                                         ],
-                                        "PlanNodeId": 1,
+                                        "Parent Relationship": "InitPlan",
+                                        "PlanNodeId": 4,
+                                        "Subplan Name": "CTE TableFullScan_5",
                                         "Tables": [
                                             "postgres_jointest/join2.test_plan/x"
                                         ]
@@ -314,6 +310,27 @@
                     }
                 ],
                 "Subplan Name": "CTE precompute_0_0"
+            },
+            {
+                "Node Type": "Precompute_0_1",
+                "Parent Relationship": "InitPlan",
+                "PlanNodeId": 3,
+                "PlanNodeType": "Materialize",
+                "Plans": [
+                    {
+                        "Node Type": "Collect",
+                        "PlanNodeId": 2,
+                        "Plans": [
+                            {
+                                "CTE Name": "TableFullScan_5",
+                                "Node Type": "UnionAll",
+                                "PlanNodeId": 1,
+                                "PlanNodeType": "Connection"
+                            }
+                        ]
+                    }
+                ],
+                "Subplan Name": "CTE precompute_0_1"
             }
         ]
     },
@@ -325,17 +342,6 @@
         {
             "name": "/Root/postgres_jointest/join2.test_plan/x",
             "reads": [
-                {
-                    "columns": [
-                        "x1",
-                        "x2"
-                    ],
-                    "scan_by": [
-                        "x1 (-\u221e, +\u221e)",
-                        "x2 (-\u221e, +\u221e)"
-                    ],
-                    "type": "FullScan"
-                },
                 {
                     "columns": [
                         "x1",
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_12.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_12.plan
index dc58532c6425..c22e5ca71d01 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_12.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_12.plan
@@ -5,7 +5,7 @@
         "Plans": [
             {
                 "Node Type": "ResultSet_2",
-                "PlanNodeId": 24,
+                "PlanNodeId": 25,
                 "PlanNodeType": "ResultSet",
                 "Plans": [
                     {
@@ -14,61 +14,25 @@
                             {
                                 "Inputs": [
                                     {
-                                        "ExternalPlanNodeId": 22
+                                        "ExternalPlanNodeId": 23
                                     }
                                 ],
                                 "Limit": "1001",
                                 "Name": "Limit"
                             }
                         ],
-                        "PlanNodeId": 23,
+                        "PlanNodeId": 24,
                         "Plans": [
                             {
                                 "Node Type": "Merge",
-                                "PlanNodeId": 22,
+                                "PlanNodeId": 23,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
                                                     {
                                                         "InternalOperatorId": 1
                                                     }
@@ -78,74 +42,73 @@
                                                 "TopSortBy": "row.x1"
                                             },
                                             {
-                                                "Condition": "x_1.x1 = x1",
+                                                "Condition": "x_1.x1 = xx.x1",
                                                 "Inputs": [
                                                     {
-                                                        "ExternalPlanNodeId": 20
+                                                        "ExternalPlanNodeId": 21
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 13
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x1)"
                                             }
                                         ],
-                                        "PlanNodeId": 21,
+                                        "PlanNodeId": 22,
                                         "Plans": [
                                             {
                                                 "Node Type": "Map",
-                                                "PlanNodeId": 20,
+                                                "PlanNodeId": 21,
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
-                                                                "Condition": "x1 = y1",
+                                                                "Condition": "x_1.x1 = y.y1",
                                                                 "Inputs": [
                                                                     {
-                                                                        "ExternalPlanNodeId": 18
+                                                                        "ExternalPlanNodeId": 19
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 16
+                                                                        "InternalOperatorId": 1
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 19,
-                                                        "Plans": [
+                                                            },
                                                             {
-                                                                "Node Type": "Map",
-                                                                "PlanNodeId": 18,
-                                                                "PlanNodeType": "Connection",
-                                                                "Plans": [
+                                                                "Inputs": [
                                                                     {
-                                                                        "CTE Name": "precompute_0_0",
-                                                                        "Node Type": "ConstantExpr",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Inputs": [],
-                                                                                "Iterator": "precompute_0_0",
-                                                                                "Name": "Iterator"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 17
+                                                                        "ExternalPlanNodeId": 17
                                                                     }
-                                                                ]
-                                                            },
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.y1)"
+                                                            }
+                                                        ],
+                                                        "PlanNodeId": 20,
+                                                        "Plans": [
                                                             {
                                                                 "Node Type": "Broadcast",
-                                                                "PlanNodeId": 16,
+                                                                "PlanNodeId": 17,
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
                                                                         "Node Type": "Collect",
-                                                                        "PlanNodeId": 15,
+                                                                        "PlanNodeId": 16,
                                                                         "Plans": [
                                                                             {
                                                                                 "Node Type": "UnionAll",
-                                                                                "PlanNodeId": 14,
+                                                                                "PlanNodeId": 15,
                                                                                 "PlanNodeType": "Connection",
                                                                                 "Plans": [
                                                                                     {
@@ -180,7 +143,7 @@
                                                                                                 "Name": "Iterator"
                                                                                             }
                                                                                         ],
-                                                                                        "PlanNodeId": 13,
+                                                                                        "PlanNodeId": 14,
                                                                                         "Tables": [
                                                                                             "postgres_jointest/join2.test_plan/y"
                                                                                         ]
@@ -190,53 +153,48 @@
                                                                         ]
                                                                     }
                                                                 ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            },
-                                            {
-                                                "Node Type": "Broadcast",
-                                                "PlanNodeId": 12,
-                                                "PlanNodeType": "Connection",
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Collect",
-                                                        "PlanNodeId": 11,
-                                                        "Plans": [
+                                                            },
                                                             {
-                                                                "Node Type": "UnionAll",
-                                                                "PlanNodeId": 10,
+                                                                "Node Type": "Map",
+                                                                "PlanNodeId": 19,
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "TableFullScan",
+                                                                        "CTE Name": "precompute_0_1",
+                                                                        "Node Type": "ConstantExpr",
                                                                         "Operators": [
                                                                             {
                                                                                 "Inputs": [],
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "x1",
-                                                                                    "x2"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "x1 (-\u221e, +\u221e)",
-                                                                                    "x2 (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "postgres_jointest/join2.test_plan/x"
+                                                                                "Iterator": "precompute_0_1",
+                                                                                "Name": "Iterator"
                                                                             }
                                                                         ],
-                                                                        "PlanNodeId": 9,
-                                                                        "Tables": [
-                                                                            "postgres_jointest/join2.test_plan/x"
-                                                                        ]
+                                                                        "PlanNodeId": 18
                                                                     }
                                                                 ]
                                                             }
                                                         ]
                                                     }
                                                 ]
+                                            },
+                                            {
+                                                "Node Type": "Broadcast",
+                                                "PlanNodeId": 13,
+                                                "PlanNodeType": "Connection",
+                                                "Plans": [
+                                                    {
+                                                        "CTE Name": "precompute_0_0",
+                                                        "Node Type": "ConstantExpr",
+                                                        "Operators": [
+                                                            {
+                                                                "Inputs": [],
+                                                                "Iterator": "precompute_0_0",
+                                                                "Name": "Iterator"
+                                                            }
+                                                        ],
+                                                        "PlanNodeId": 12
+                                                    }
+                                                ]
                                             }
                                         ]
                                     }
@@ -252,37 +210,37 @@
             {
                 "Node Type": "Precompute_1",
                 "Parent Relationship": "InitPlan",
-                "PlanNodeId": 7,
+                "PlanNodeId": 10,
                 "PlanNodeType": "Materialize",
                 "Plans": [
                     {
-                        "CTE Name": "precompute_0_0",
+                        "CTE Name": "precompute_0_1",
                         "Node Type": "Aggregate",
                         "Operators": [
                             {
-                                "Input": "precompute_0_0",
+                                "Input": "precompute_0_1",
                                 "Inputs": [],
                                 "Name": "PartitionByKey"
                             }
                         ],
-                        "PlanNodeId": 6
+                        "PlanNodeId": 9
                     }
                 ],
                 "Subplan Name": "CTE precompute_1_0"
             },
             {
-                "Node Type": "Precompute_0",
+                "Node Type": "Precompute_0_0",
                 "Parent Relationship": "InitPlan",
-                "PlanNodeId": 4,
+                "PlanNodeId": 7,
                 "PlanNodeType": "Materialize",
                 "Plans": [
                     {
                         "Node Type": "Collect",
-                        "PlanNodeId": 3,
+                        "PlanNodeId": 6,
                         "Plans": [
                             {
                                 "Node Type": "UnionAll",
-                                "PlanNodeId": 2,
+                                "PlanNodeId": 5,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
@@ -303,7 +261,9 @@
                                                 "Table": "postgres_jointest/join2.test_plan/x"
                                             }
                                         ],
-                                        "PlanNodeId": 1,
+                                        "Parent Relationship": "InitPlan",
+                                        "PlanNodeId": 4,
+                                        "Subplan Name": "CTE TableFullScan_5",
                                         "Tables": [
                                             "postgres_jointest/join2.test_plan/x"
                                         ]
@@ -314,6 +274,27 @@
                     }
                 ],
                 "Subplan Name": "CTE precompute_0_0"
+            },
+            {
+                "Node Type": "Precompute_0_1",
+                "Parent Relationship": "InitPlan",
+                "PlanNodeId": 3,
+                "PlanNodeType": "Materialize",
+                "Plans": [
+                    {
+                        "Node Type": "Collect",
+                        "PlanNodeId": 2,
+                        "Plans": [
+                            {
+                                "CTE Name": "TableFullScan_5",
+                                "Node Type": "UnionAll",
+                                "PlanNodeId": 1,
+                                "PlanNodeType": "Connection"
+                            }
+                        ]
+                    }
+                ],
+                "Subplan Name": "CTE precompute_0_1"
             }
         ]
     },
@@ -325,17 +306,6 @@
         {
             "name": "/Root/postgres_jointest/join2.test_plan/x",
             "reads": [
-                {
-                    "columns": [
-                        "x1",
-                        "x2"
-                    ],
-                    "scan_by": [
-                        "x1 (-\u221e, +\u221e)",
-                        "x2 (-\u221e, +\u221e)"
-                    ],
-                    "type": "FullScan"
-                },
                 {
                     "columns": [
                         "x1",
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_2.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_2.plan
index fc425428fe77..5ea5f3dbbf21 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_2.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_2.plan
@@ -29,8 +29,8 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "CTE Name": "precompute_1_0",
-                                        "Node Type": "TopSort-InnerJoin (MapJoin)-ConstantExpr-Filter-TableRangeScan-ConstantExpr",
+                                        "CTE Name": "precompute_0_0",
+                                        "Node Type": "TopSort-InnerJoin (MapJoin)-Filter-TableRangeScan-ConstantExpr-Filter-ConstantExpr",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -43,26 +43,21 @@
                                                 "TopSortBy": "argument.s2.name"
                                             },
                                             {
-                                                "Condition": "name = name",
+                                                "Condition": "s3.name = s2.name",
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 3
+                                                        "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "InternalOperatorId": 2
+                                                        "InternalOperatorId": 5
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
                                             },
-                                            {
-                                                "Inputs": [],
-                                                "Name": "ToFlow",
-                                                "ToFlow": "precompute_0_0"
-                                            },
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "Filter",
@@ -71,7 +66,7 @@
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 5
+                                                        "InternalOperatorId": 4
                                                     }
                                                 ],
                                                 "Name": "TableRangeScan",
@@ -85,6 +80,20 @@
                                                 "Inputs": [],
                                                 "Iterator": "precompute_1_0",
                                                 "Name": "Iterator"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "InternalOperatorId": 6
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.name)"
+                                            },
+                                            {
+                                                "Inputs": [],
+                                                "Name": "ToFlow",
+                                                "ToFlow": "precompute_0_0"
                                             }
                                         ],
                                         "PlanNodeId": 9,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_3.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_3.plan
index e5b26ca83914..b98b8e5e3db9 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_3.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_3.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": "argument.s2.name"
                                             },
                                             {
-                                                "Condition": "name = name",
+                                                "Condition": "s2.name = s3.name",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.name)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_7.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_7.plan
index 75addcc79dee..efd90f6f3620 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_7.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_7.plan
@@ -24,12 +24,12 @@
                         "PlanNodeId": 17,
                         "Plans": [
                             {
-                                "Node Type": "UnionAll",
+                                "Node Type": "Merge",
                                 "PlanNodeId": 16,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -38,19 +38,29 @@
                                                     }
                                                 ],
                                                 "Limit": "1001",
-                                                "Name": "Limit"
+                                                "Name": "TopSort",
+                                                "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "x1 = y1",
+                                                "Condition": "x.x1 = y.y1",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.y1)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
@@ -133,6 +143,12 @@
                                             }
                                         ]
                                     }
+                                ],
+                                "SortColumns": [
+                                    "x.x1 (Asc)",
+                                    "x.x2 (Asc)",
+                                    "y.y1 (Asc)",
+                                    "y.y2 (Asc)"
                                 ]
                             }
                         ]
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_8.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_8.plan
index 1aa7a2d33868..36f70dc84c3e 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_8.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_8.plan
@@ -24,12 +24,12 @@
                         "PlanNodeId": 17,
                         "Plans": [
                             {
-                                "Node Type": "UnionAll",
+                                "Node Type": "Merge",
                                 "PlanNodeId": 16,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -47,7 +47,8 @@
                                                     }
                                                 ],
                                                 "Limit": "1001",
-                                                "Name": "Limit"
+                                                "Name": "TopSort",
+                                                "TopSortBy": ""
                                             },
                                             {
                                                 "Inputs": [
@@ -59,16 +60,25 @@
                                                 "Predicate": "Exist(item.y.y2)"
                                             },
                                             {
-                                                "Condition": "x1 = y1",
+                                                "Condition": "x.x1 = y.y1",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.y1)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
@@ -151,6 +161,12 @@
                                             }
                                         ]
                                     }
+                                ],
+                                "SortColumns": [
+                                    "x1 (Asc)",
+                                    "x2 (Asc)",
+                                    "y1 (Asc)",
+                                    "y2 (Asc)"
                                 ]
                             }
                         ]
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_9.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_9.plan
index 9b772b09e54a..c22e5ca71d01 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_9.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join2.test_/query_9.plan
@@ -5,7 +5,7 @@
         "Plans": [
             {
                 "Node Type": "ResultSet_2",
-                "PlanNodeId": 24,
+                "PlanNodeId": 25,
                 "PlanNodeType": "ResultSet",
                 "Plans": [
                     {
@@ -14,52 +14,25 @@
                             {
                                 "Inputs": [
                                     {
-                                        "ExternalPlanNodeId": 22
+                                        "ExternalPlanNodeId": 23
                                     }
                                 ],
                                 "Limit": "1001",
                                 "Name": "Limit"
                             }
                         ],
-                        "PlanNodeId": 23,
+                        "PlanNodeId": 24,
                         "Plans": [
                             {
                                 "Node Type": "Merge",
-                                "PlanNodeId": 22,
+                                "PlanNodeId": 23,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
                                                     {
                                                         "InternalOperatorId": 1
                                                     }
@@ -69,74 +42,73 @@
                                                 "TopSortBy": "row.x1"
                                             },
                                             {
-                                                "Condition": "x_1.x1 = x1",
+                                                "Condition": "x_1.x1 = xx.x1",
                                                 "Inputs": [
                                                     {
-                                                        "ExternalPlanNodeId": 20
+                                                        "ExternalPlanNodeId": 21
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 13
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x1)"
                                             }
                                         ],
-                                        "PlanNodeId": 21,
+                                        "PlanNodeId": 22,
                                         "Plans": [
                                             {
                                                 "Node Type": "Map",
-                                                "PlanNodeId": 20,
+                                                "PlanNodeId": 21,
                                                 "PlanNodeType": "Connection",
                                                 "Plans": [
                                                     {
-                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                         "Operators": [
                                                             {
-                                                                "Condition": "x1 = y1",
+                                                                "Condition": "x_1.x1 = y.y1",
                                                                 "Inputs": [
                                                                     {
-                                                                        "ExternalPlanNodeId": 18
+                                                                        "ExternalPlanNodeId": 19
                                                                     },
                                                                     {
-                                                                        "ExternalPlanNodeId": 16
+                                                                        "InternalOperatorId": 1
                                                                     }
                                                                 ],
                                                                 "Name": "LeftJoin (MapJoin)"
-                                                            }
-                                                        ],
-                                                        "PlanNodeId": 19,
-                                                        "Plans": [
+                                                            },
                                                             {
-                                                                "Node Type": "Map",
-                                                                "PlanNodeId": 18,
-                                                                "PlanNodeType": "Connection",
-                                                                "Plans": [
+                                                                "Inputs": [
                                                                     {
-                                                                        "CTE Name": "precompute_0_0",
-                                                                        "Node Type": "ConstantExpr",
-                                                                        "Operators": [
-                                                                            {
-                                                                                "Inputs": [],
-                                                                                "Iterator": "precompute_0_0",
-                                                                                "Name": "Iterator"
-                                                                            }
-                                                                        ],
-                                                                        "PlanNodeId": 17
+                                                                        "ExternalPlanNodeId": 17
                                                                     }
-                                                                ]
-                                                            },
+                                                                ],
+                                                                "Name": "Filter",
+                                                                "Predicate": "Exist(item.y1)"
+                                                            }
+                                                        ],
+                                                        "PlanNodeId": 20,
+                                                        "Plans": [
                                                             {
                                                                 "Node Type": "Broadcast",
-                                                                "PlanNodeId": 16,
+                                                                "PlanNodeId": 17,
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
                                                                         "Node Type": "Collect",
-                                                                        "PlanNodeId": 15,
+                                                                        "PlanNodeId": 16,
                                                                         "Plans": [
                                                                             {
                                                                                 "Node Type": "UnionAll",
-                                                                                "PlanNodeId": 14,
+                                                                                "PlanNodeId": 15,
                                                                                 "PlanNodeType": "Connection",
                                                                                 "Plans": [
                                                                                     {
@@ -171,7 +143,7 @@
                                                                                                 "Name": "Iterator"
                                                                                             }
                                                                                         ],
-                                                                                        "PlanNodeId": 13,
+                                                                                        "PlanNodeId": 14,
                                                                                         "Tables": [
                                                                                             "postgres_jointest/join2.test_plan/y"
                                                                                         ]
@@ -181,53 +153,48 @@
                                                                         ]
                                                                     }
                                                                 ]
-                                                            }
-                                                        ]
-                                                    }
-                                                ]
-                                            },
-                                            {
-                                                "Node Type": "Broadcast",
-                                                "PlanNodeId": 12,
-                                                "PlanNodeType": "Connection",
-                                                "Plans": [
-                                                    {
-                                                        "Node Type": "Collect",
-                                                        "PlanNodeId": 11,
-                                                        "Plans": [
+                                                            },
                                                             {
-                                                                "Node Type": "UnionAll",
-                                                                "PlanNodeId": 10,
+                                                                "Node Type": "Map",
+                                                                "PlanNodeId": 19,
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "TableFullScan",
+                                                                        "CTE Name": "precompute_0_1",
+                                                                        "Node Type": "ConstantExpr",
                                                                         "Operators": [
                                                                             {
                                                                                 "Inputs": [],
-                                                                                "Name": "TableFullScan",
-                                                                                "ReadColumns": [
-                                                                                    "x1",
-                                                                                    "x2"
-                                                                                ],
-                                                                                "ReadRanges": [
-                                                                                    "x1 (-\u221e, +\u221e)",
-                                                                                    "x2 (-\u221e, +\u221e)"
-                                                                                ],
-                                                                                "Scan": "Parallel",
-                                                                                "Table": "postgres_jointest/join2.test_plan/x"
+                                                                                "Iterator": "precompute_0_1",
+                                                                                "Name": "Iterator"
                                                                             }
                                                                         ],
-                                                                        "PlanNodeId": 9,
-                                                                        "Tables": [
-                                                                            "postgres_jointest/join2.test_plan/x"
-                                                                        ]
+                                                                        "PlanNodeId": 18
                                                                     }
                                                                 ]
                                                             }
                                                         ]
                                                     }
                                                 ]
+                                            },
+                                            {
+                                                "Node Type": "Broadcast",
+                                                "PlanNodeId": 13,
+                                                "PlanNodeType": "Connection",
+                                                "Plans": [
+                                                    {
+                                                        "CTE Name": "precompute_0_0",
+                                                        "Node Type": "ConstantExpr",
+                                                        "Operators": [
+                                                            {
+                                                                "Inputs": [],
+                                                                "Iterator": "precompute_0_0",
+                                                                "Name": "Iterator"
+                                                            }
+                                                        ],
+                                                        "PlanNodeId": 12
+                                                    }
+                                                ]
                                             }
                                         ]
                                     }
@@ -243,37 +210,37 @@
             {
                 "Node Type": "Precompute_1",
                 "Parent Relationship": "InitPlan",
-                "PlanNodeId": 7,
+                "PlanNodeId": 10,
                 "PlanNodeType": "Materialize",
                 "Plans": [
                     {
-                        "CTE Name": "precompute_0_0",
+                        "CTE Name": "precompute_0_1",
                         "Node Type": "Aggregate",
                         "Operators": [
                             {
-                                "Input": "precompute_0_0",
+                                "Input": "precompute_0_1",
                                 "Inputs": [],
                                 "Name": "PartitionByKey"
                             }
                         ],
-                        "PlanNodeId": 6
+                        "PlanNodeId": 9
                     }
                 ],
                 "Subplan Name": "CTE precompute_1_0"
             },
             {
-                "Node Type": "Precompute_0",
+                "Node Type": "Precompute_0_0",
                 "Parent Relationship": "InitPlan",
-                "PlanNodeId": 4,
+                "PlanNodeId": 7,
                 "PlanNodeType": "Materialize",
                 "Plans": [
                     {
                         "Node Type": "Collect",
-                        "PlanNodeId": 3,
+                        "PlanNodeId": 6,
                         "Plans": [
                             {
                                 "Node Type": "UnionAll",
-                                "PlanNodeId": 2,
+                                "PlanNodeId": 5,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
@@ -294,7 +261,9 @@
                                                 "Table": "postgres_jointest/join2.test_plan/x"
                                             }
                                         ],
-                                        "PlanNodeId": 1,
+                                        "Parent Relationship": "InitPlan",
+                                        "PlanNodeId": 4,
+                                        "Subplan Name": "CTE TableFullScan_5",
                                         "Tables": [
                                             "postgres_jointest/join2.test_plan/x"
                                         ]
@@ -305,6 +274,27 @@
                     }
                 ],
                 "Subplan Name": "CTE precompute_0_0"
+            },
+            {
+                "Node Type": "Precompute_0_1",
+                "Parent Relationship": "InitPlan",
+                "PlanNodeId": 3,
+                "PlanNodeType": "Materialize",
+                "Plans": [
+                    {
+                        "Node Type": "Collect",
+                        "PlanNodeId": 2,
+                        "Plans": [
+                            {
+                                "CTE Name": "TableFullScan_5",
+                                "Node Type": "UnionAll",
+                                "PlanNodeId": 1,
+                                "PlanNodeType": "Connection"
+                            }
+                        ]
+                    }
+                ],
+                "Subplan Name": "CTE precompute_0_1"
             }
         ]
     },
@@ -316,17 +306,6 @@
         {
             "name": "/Root/postgres_jointest/join2.test_plan/x",
             "reads": [
-                {
-                    "columns": [
-                        "x1",
-                        "x2"
-                    ],
-                    "scan_by": [
-                        "x1 (-\u221e, +\u221e)",
-                        "x2 (-\u221e, +\u221e)"
-                    ],
-                    "type": "FullScan"
-                },
                 {
                     "columns": [
                         "x1",
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_1.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_1.plan
index 1125b2518015..5578f0099498 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_1.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_1.plan
@@ -54,7 +54,7 @@
                                                 "Predicate": "item.b.q1 > 0"
                                             },
                                             {
-                                                "Condition": "q2 = _equijoin_column_0",
+                                                "Condition": "a.q2 = b._equijoin_column_0",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_2.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_2.plan
index f088033f4972..574b1216e342 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_2.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_2.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": "argument.p.k"
                                             },
                                             {
-                                                "Condition": "k = k",
+                                                "Condition": "p.k = c.k",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.k)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_3.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_3.plan
index f843d45c51e7..b4af0672fab7 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_3.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_3.plan
@@ -29,19 +29,10 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
                                                     {
                                                         "InternalOperatorId": 1
                                                     }
@@ -51,16 +42,25 @@
                                                 "TopSortBy": "row.k"
                                             },
                                             {
-                                                "Condition": "k = k",
+                                                "Condition": "p.k = ss.k",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.k)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_4.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_4.plan
index 72e58ee35b35..f395e7f48503 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_4.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_4.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -41,16 +41,25 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "k = k",
+                                                "Condition": "p.k = c.k",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.k)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_5.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_5.plan
index 78f546089d3f..0a7e40e48920 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_5.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_5.plan
@@ -29,8 +29,8 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "CTE Name": "precompute_4_0",
-                                        "Node Type": "Limit-InnerJoin (MapJoin)-ConstantExpr-Filter-TablePointLookup-ConstantExpr",
+                                        "CTE Name": "precompute_3_0",
+                                        "Node Type": "Limit-InnerJoin (MapJoin)-Filter-TablePointLookup-ConstantExpr-Filter-ConstantExpr",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,26 +42,21 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "k = p_1.k",
+                                                "Condition": "x.k = p_1.k",
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 3
+                                                        "InternalOperatorId": 2
                                                     },
                                                     {
-                                                        "InternalOperatorId": 2
+                                                        "InternalOperatorId": 5
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
                                             },
-                                            {
-                                                "Inputs": [],
-                                                "Name": "ToFlow",
-                                                "ToFlow": "precompute_3_0"
-                                            },
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 4
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "Filter",
@@ -70,7 +65,7 @@
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 5
+                                                        "InternalOperatorId": 4
                                                     }
                                                 ],
                                                 "Name": "TablePointLookup",
@@ -83,6 +78,20 @@
                                                 "Inputs": [],
                                                 "Iterator": "precompute_4_0",
                                                 "Name": "Iterator"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "InternalOperatorId": 6
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.p_1.k)"
+                                            },
+                                            {
+                                                "Inputs": [],
+                                                "Name": "ToFlow",
+                                                "ToFlow": "precompute_3_0"
                                             }
                                         ],
                                         "PlanNodeId": 23,
@@ -133,19 +142,28 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "LeftJoin (MapJoin)",
+                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
-                                                "Condition": "k = k",
+                                                "Condition": "p_1.k = c.k",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 1
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.k)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_6.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_6.plan
index 867a43eea209..c6c17134adb7 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_6.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_6.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -56,16 +56,25 @@
                                                 "Predicate": "Not Exist(item.qa.id) Or item.qa.id > 0"
                                             },
                                             {
-                                                "Condition": "a_id = id",
+                                                "Condition": "qb.a_id = qa.id",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.id)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_7.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_7.plan
index 8b3c48e20378..eb9b22d71849 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_7.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_7.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -53,16 +53,25 @@
                                                 "Predicate": "Not Exist(item.qa.id) Or item.qa.id > 0"
                                             },
                                             {
-                                                "Condition": "a_id = id",
+                                                "Condition": "qb.a_id = qa.id",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.id)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_8.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_8.plan
index 573a41de16b3..d0414229e688 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_8.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join3.test_/query_8.plan
@@ -42,7 +42,7 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "x = _equijoin_column_0",
+                                                "Condition": "ss1.x = ss2._equijoin_column_0",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
@@ -74,13 +74,10 @@
                                                                         "Node Type": "LeftJoin (MapJoin)-TableFullScan",
                                                                         "Operators": [
                                                                             {
-                                                                                "Condition": "q2 = id",
+                                                                                "Condition": "int8_tbl.q2 = innertab.id",
                                                                                 "Inputs": [
                                                                                     {
                                                                                         "InternalOperatorId": 1
-                                                                                    },
-                                                                                    {
-                                                                                        "Other": "ConstantExpression"
                                                                                     }
                                                                                 ],
                                                                                 "Name": "LeftJoin (MapJoin)"
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_1.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_1.plan
index a641d1bc422d..0c5ae4e2c32b 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_1.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_1.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-Filter-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -50,16 +50,25 @@
                                                 "Predicate": "{b1: ExtractMembers.nt2.b1,b2: ExtractMembers.nt2.b2,b3: ExtractMembers.nt2.b1 And {a1: ExtractMembers.a1,a2: ExtractMembers.a2,a3: Exist(ExtractMembers.id),id: ExtractMembers.id}.a3,id: ExtractMembers.nt2.id,nt1_id: ExtractMembers.nt2.nt1_id}.b3"
                                             },
                                             {
-                                                "Condition": "nt2_id = nt2.id",
+                                                "Condition": "nt3.nt2_id = ss2.nt2.id",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 12
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 10
+                                                        "InternalOperatorId": 3
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 10
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.nt2.id)"
                                             }
                                         ],
                                         "PlanNodeId": 13,
@@ -79,19 +88,28 @@
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                                         "Operators": [
                                                                             {
-                                                                                "Condition": "nt1_id = id",
+                                                                                "Condition": "nt2.nt1_id = ss1.id",
                                                                                 "Inputs": [
                                                                                     {
                                                                                         "ExternalPlanNodeId": 6
                                                                                     },
                                                                                     {
-                                                                                        "ExternalPlanNodeId": 4
+                                                                                        "InternalOperatorId": 1
                                                                                     }
                                                                                 ],
                                                                                 "Name": "LeftJoin (MapJoin)"
+                                                                            },
+                                                                            {
+                                                                                "Inputs": [
+                                                                                    {
+                                                                                        "ExternalPlanNodeId": 4
+                                                                                    }
+                                                                                ],
+                                                                                "Name": "Filter",
+                                                                                "Predicate": "Exist(item.id)"
                                                                             }
                                                                         ],
                                                                         "PlanNodeId": 7,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_13.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_13.plan
index 13b594061473..cabf93b7a67f 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_13.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_13.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -42,16 +42,25 @@
                                                 "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "a = a",
+                                                "Condition": "qrt1.a = qrt2.a",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.a)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_4.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_4.plan
index c044470882f1..508eaa291278 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_4.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_4.plan
@@ -29,46 +29,10 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "TopSort-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
-                                                    {
-                                                        "InternalOperatorId": 1
-                                                    },
                                                     {
                                                         "InternalOperatorId": 1
                                                     }
@@ -78,16 +42,25 @@
                                                 "TopSortBy": "row.name"
                                             },
                                             {
-                                                "Condition": "a = a.code",
+                                                "Condition": "c.a = ss.a.code",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.a.code)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
@@ -107,19 +80,28 @@
                                                                 "PlanNodeType": "Connection",
                                                                 "Plans": [
                                                                     {
-                                                                        "Node Type": "LeftJoin (MapJoin)",
+                                                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                                                         "Operators": [
                                                                             {
-                                                                                "Condition": "code = a",
+                                                                                "Condition": "a.code = b_grp.a",
                                                                                 "Inputs": [
                                                                                     {
                                                                                         "ExternalPlanNodeId": 8
                                                                                     },
                                                                                     {
-                                                                                        "ExternalPlanNodeId": 6
+                                                                                        "InternalOperatorId": 1
                                                                                     }
                                                                                 ],
                                                                                 "Name": "LeftJoin (MapJoin)"
+                                                                            },
+                                                                            {
+                                                                                "Inputs": [
+                                                                                    {
+                                                                                        "ExternalPlanNodeId": 6
+                                                                                    }
+                                                                                ],
+                                                                                "Name": "Filter",
+                                                                                "Predicate": "Exist(item.a)"
                                                                             }
                                                                         ],
                                                                         "PlanNodeId": 9,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_5.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_5.plan
index 5305af8389e7..ce1c35267366 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_5.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_5.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -41,16 +41,25 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "i,i,i = x,y,x",
+                                                "Condition": "tqa.i = tqb.x,tqb.y,tqb.x",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.x) And Exist(item.y)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_6.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_6.plan
index 83c7ae0a124f..9e2ba98ec1d7 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_6.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_6.plan
@@ -29,7 +29,7 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "Limit-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -41,16 +41,25 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "zt3.f3 = f1",
+                                                "Condition": "zt3.f3 = zt1.f1",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 28
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 26
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 26
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.f1)"
                                             }
                                         ],
                                         "PlanNodeId": 29,
@@ -175,19 +184,28 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "LeftJoin (MapJoin)",
+                                        "Node Type": "LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
-                                                "Condition": "f2 = f3",
+                                                "Condition": "zt2.f2 = zt3.f3",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 14
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 12
+                                                        "InternalOperatorId": 1
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 12
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.f3)"
                                             }
                                         ],
                                         "PlanNodeId": 15,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_7.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_7.plan
index 8c36c1cabd62..6ec5e4b47521 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_7.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_7.plan
@@ -29,8 +29,8 @@
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "CTE Name": "precompute_1_0",
-                                        "Node Type": "Limit-Filter-InnerJoin (MapJoin)-ConstantExpr-Filter-TableRangeScan-ConstantExpr",
+                                        "CTE Name": "precompute_0_0",
+                                        "Node Type": "Limit-Filter-InnerJoin (MapJoin)-Filter-TableRangeScan-ConstantExpr-Filter-ConstantExpr",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -60,26 +60,21 @@
                                                 "Predicate": "item.tt5.f1 == item.tt5.f2 - item.tt6.f2"
                                             },
                                             {
-                                                "Condition": "f1 = f1",
+                                                "Condition": "tt6.f1 = tt5.f1",
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 4
+                                                        "InternalOperatorId": 3
                                                     },
                                                     {
-                                                        "InternalOperatorId": 3
+                                                        "InternalOperatorId": 6
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
                                             },
-                                            {
-                                                "Inputs": [],
-                                                "Name": "ToFlow",
-                                                "ToFlow": "precompute_0_0"
-                                            },
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 5
+                                                        "InternalOperatorId": 4
                                                     }
                                                 ],
                                                 "Name": "Filter",
@@ -88,7 +83,7 @@
                                             {
                                                 "Inputs": [
                                                     {
-                                                        "InternalOperatorId": 6
+                                                        "InternalOperatorId": 5
                                                     }
                                                 ],
                                                 "Name": "TableRangeScan",
@@ -102,6 +97,20 @@
                                                 "Inputs": [],
                                                 "Iterator": "precompute_1_0",
                                                 "Name": "Iterator"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "InternalOperatorId": 7
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.f1)"
+                                            },
+                                            {
+                                                "Inputs": [],
+                                                "Name": "ToFlow",
+                                                "ToFlow": "precompute_0_0"
                                             }
                                         ],
                                         "PlanNodeId": 9,
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_8.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_8.plan
index d8427fea740a..dfaaf3f2de13 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_8.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_8.plan
@@ -24,12 +24,12 @@
                         "PlanNodeId": 9,
                         "Plans": [
                             {
-                                "Node Type": "UnionAll",
+                                "Node Type": "Merge",
                                 "PlanNodeId": 8,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -38,19 +38,29 @@
                                                     }
                                                 ],
                                                 "Limit": "1001",
-                                                "Name": "Limit"
+                                                "Name": "TopSort",
+                                                "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "joincol = joincol",
+                                                "Condition": "tt1.joincol = tt2.joincol",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.joincol)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
@@ -130,6 +140,11 @@
                                             }
                                         ]
                                     }
+                                ],
+                                "SortColumns": [
+                                    "tt1.tt1_id (Asc)",
+                                    "tt1.joincol (Asc)",
+                                    "tt2.tt2_id (Asc)"
                                 ]
                             }
                         ]
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_9.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_9.plan
index d8427fea740a..2d5a8f071c98 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_9.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-jointest_join4.test_/query_9.plan
@@ -24,12 +24,12 @@
                         "PlanNodeId": 9,
                         "Plans": [
                             {
-                                "Node Type": "UnionAll",
+                                "Node Type": "Merge",
                                 "PlanNodeId": 8,
                                 "PlanNodeType": "Connection",
                                 "Plans": [
                                     {
-                                        "Node Type": "Limit-LeftJoin (MapJoin)",
+                                        "Node Type": "TopSort-LeftJoin (MapJoin)-Filter",
                                         "Operators": [
                                             {
                                                 "Inputs": [
@@ -38,19 +38,29 @@
                                                     }
                                                 ],
                                                 "Limit": "1001",
-                                                "Name": "Limit"
+                                                "Name": "TopSort",
+                                                "TopSortBy": ""
                                             },
                                             {
-                                                "Condition": "joincol = joincol",
+                                                "Condition": "tt2.joincol = tt1.joincol",
                                                 "Inputs": [
                                                     {
                                                         "ExternalPlanNodeId": 6
                                                     },
                                                     {
-                                                        "ExternalPlanNodeId": 4
+                                                        "InternalOperatorId": 2
                                                     }
                                                 ],
                                                 "Name": "LeftJoin (MapJoin)"
+                                            },
+                                            {
+                                                "Inputs": [
+                                                    {
+                                                        "ExternalPlanNodeId": 4
+                                                    }
+                                                ],
+                                                "Name": "Filter",
+                                                "Predicate": "Exist(item.joincol)"
                                             }
                                         ],
                                         "PlanNodeId": 7,
@@ -130,6 +140,11 @@
                                             }
                                         ]
                                     }
+                                ],
+                                "SortColumns": [
+                                    "tt1.tt1_id (Asc)",
+                                    "tt1.joincol (Asc)",
+                                    "tt2.tt2_id (Asc)"
                                 ]
                             }
                         ]
diff --git a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-select.test_/query_12.plan b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-select.test_/query_12.plan
index bd8df9cd5162..510e92580209 100644
--- a/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-select.test_/query_12.plan
+++ b/ydb/tests/functional/suite_tests/canondata/test_postgres.TestPGSQL.test_sql_suite_plan-select.test_/query_12.plan
@@ -41,13 +41,10 @@
                                                 "Name": "Limit"
                                             },
                                             {
-                                                "Condition": "unique1,stringu1 = i,j",
+                                                "Condition": "onek.stringu1,onek.unique1 = v.i,v.j",
                                                 "Inputs": [
                                                     {
                                                         "InternalOperatorId": 2
-                                                    },
-                                                    {
-                                                        "Other": "ConstantExpression"
                                                     }
                                                 ],
                                                 "Name": "InnerJoin (MapJoin)"
diff --git a/ydb/tests/functional/suite_tests/postgres/jointest/coalesce-and-join.test b/ydb/tests/functional/suite_tests/postgres/jointest/coalesce-and-join.test
index d7865e2cad24..a9ba78e56f86 100644
--- a/ydb/tests/functional/suite_tests/postgres/jointest/coalesce-and-join.test
+++ b/ydb/tests/functional/suite_tests/postgres/jointest/coalesce-and-join.test
@@ -69,6 +69,7 @@ select xx.pkxx as xx_pkxx from
   xx left join
   (select yy.pkxx as yt from yy) as Q
   on coalesce(Q.yt, 3) = xx.pkxx
+  order by xx_pkxx
 
 statement skipped query YQL-2986
 select yy.pkyy as yy_pkyy, yy.pkxx as yy_pkxx, yya.pkyy as yya_pkyy,
diff --git a/ydb/tests/functional/suite_tests/postgres/jointest/join0.test b/ydb/tests/functional/suite_tests/postgres/jointest/join0.test
index 1c93c87fc954..c95779aaa547 100644
--- a/ydb/tests/functional/suite_tests/postgres/jointest/join0.test
+++ b/ydb/tests/functional/suite_tests/postgres/jointest/join0.test
@@ -146,9 +146,11 @@ where a.unique1 = 42 and
 
 --
 -- test case where a PlaceHolderVar is used as a nestloop parameter
+-- needs a fix: CBO generates a different plan that is valid, however rule based optimizer breaks: https://github.com/ydb-platform/ydb/issues/6371
 --
 
 statement query
+PRAGMA ydb.CostBasedOptimizationLevel='0';
 SELECT qq, unique1
 FROM (
  select * from
@@ -324,7 +326,8 @@ left join
     (select unique2 as join_key from tenk1 as i2) as ss2
    on foo2.join_key = ss2.join_key
   ) as foo3
-using (join_key);
+using (join_key)
+order by foo1_id;
 
 
 --
diff --git a/ydb/tests/functional/suite_tests/postgres/jointest/join2.test b/ydb/tests/functional/suite_tests/postgres/jointest/join2.test
index 625e7f220241..17ec5b77e483 100644
--- a/ydb/tests/functional/suite_tests/postgres/jointest/join2.test
+++ b/ydb/tests/functional/suite_tests/postgres/jointest/join2.test
@@ -221,10 +221,12 @@ order by y1, y2;
 statement query
 select x1, x2, y1, y2 from x left join y on (x.x1 = y.y1)
 where x2 is not null
+order by x1, x2, y1, y2
 
 statement query
 select x1, x2, y1, y2 from x left join y on (x.x1 = y.y1)
 where y2 is not null
+order by x1, x2, y1, y2
 
 statement query
 select x1, x2, y1, y2, xx1, xx2 from
diff --git a/ydb/tests/functional/suite_tests/postgres/jointest/join4.test b/ydb/tests/functional/suite_tests/postgres/jointest/join4.test
index dea72aac64f9..9c096cb1513c 100644
--- a/ydb/tests/functional/suite_tests/postgres/jointest/join4.test
+++ b/ydb/tests/functional/suite_tests/postgres/jointest/join4.test
@@ -252,11 +252,13 @@ UPSERT INTO tt2 (tt2_id, joincol) VALUES (22, 11);
 
 statement query
 select  tt1_id, tt1.joincol as joincol, tt2_id
-from tt1 left join tt2 on tt1.joincol = tt2.joincol;
+from tt1 left join tt2 on tt1.joincol = tt2.joincol
+order by tt1_id, joincol, tt2_id;
 
 statement query
 select  tt1_id, tt1.joincol as joincol, tt2_id
-from tt2 right join tt1 on tt1.joincol = tt2.joincol;
+from tt2 right join tt1 on tt1.joincol = tt2.joincol
+order by tt1_id, joincol, tt2_id;
 
 statement ok
 CREATE TABLE qrt1 (a int, b int, primary key(a, b));
diff --git a/ydb/tests/functional/suite_tests/test_base.py b/ydb/tests/functional/suite_tests/test_base.py
index 4a662fdaca12..18997715132e 100644
--- a/ydb/tests/functional/suite_tests/test_base.py
+++ b/ydb/tests/functional/suite_tests/test_base.py
@@ -344,6 +344,16 @@ def get_query_and_output(self, statement_text):
     def pretty_json(j):
         return json.dumps(j, indent=4, sort_keys=True)
 
+    def remove_optimizer_estimates(self, query_plan):
+        if 'Plans' in query_plan:
+            for p in query_plan['Plans']:
+                self.remove_optimizer_estimates(p)
+        if 'Operators' in query_plan:
+            for op in query_plan['Operators']:
+                for key in ['A-Cpu', 'A-Rows', 'E-Cost', 'E-Rows', 'E-Size']:
+                    if key in op:
+                        del op[key]
+
     def assert_statement_query(self, statement):
         def get_actual_and_expected():
             query, expected = self.get_query_and_output(statement.text)
@@ -356,6 +366,8 @@ def get_actual_and_expected():
             query_plan = json.loads(self.explain(statement.text))
             if 'SimplifiedPlan' in query_plan:
                 del query_plan['SimplifiedPlan']
+            if 'Plan' in query_plan:
+                self.remove_optimizer_estimates(query_plan['Plan'])
             self.files[query_name + '.plan'] = write_canonical_response(
                 query_plan,
                 query_name + '.plan',
diff --git a/ydb/tests/functional/tenants/test_system_views.py b/ydb/tests/functional/tenants/test_system_views.py
index 534ef40146d0..a849db9bda72 100644
--- a/ydb/tests/functional/tenants/test_system_views.py
+++ b/ydb/tests/functional/tenants/test_system_views.py
@@ -29,6 +29,7 @@ def setup_class(cls):
                 }
             )
         )
+        cls.cluster.config.yaml_config['feature_flags']['enable_column_statistics'] = False
         cls.cluster.start()
 
     @classmethod
diff --git a/ydb/tests/tools/kqprun/kqprun.cpp b/ydb/tests/tools/kqprun/kqprun.cpp
index c5a80cda33b9..9f97c8af1fac 100644
--- a/ydb/tests/tools/kqprun/kqprun.cpp
+++ b/ydb/tests/tools/kqprun/kqprun.cpp
@@ -296,7 +296,7 @@ class TMain : public TMainClassArgs {
                 TablesMapping[tableName] = filePath;
             });
 
-        options.AddLongOption('c', "app-config", "File with app config (TAppConfig for ydb tennant)")
+        options.AddLongOption('c', "app-config", "File with app config (TAppConfig for ydb tenant)")
             .RequiredArgument("file")
             .DefaultValue("./configuration/app_config.conf")
             .Handler1([this](const NLastGetopt::TOptsParser* option) {
