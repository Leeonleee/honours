diff --git a/ydb/library/yql/tests/postgresql/cases/alter_table.err b/ydb/library/yql/tests/postgresql/cases/alter_table.err
index a7ba5b774a51..6535c0088462 100644
--- a/ydb/library/yql/tests/postgresql/cases/alter_table.err
+++ b/ydb/library/yql/tests/postgresql/cases/alter_table.err
@@ -5774,20 +5774,15 @@ select conname, obj_description(oid, 'pg_constraint') as desc
 </sql-statement>
 -stdin-:<main>: Error: Type annotation
 
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
+    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
     	select conname, obj_description(oid, 'pg_constraint') as desc
 	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
+        -stdin-:<main>:1:17: Error: At function: PgCall
+        	select conname, obj_description(oid, 'pg_constraint') as desc
+	                ^
+            -stdin-:<main>:1:17: Error: No such proc: obj_description
             	select conname, obj_description(oid, 'pg_constraint') as desc
-	^
-                -stdin-:<main>:2:36: Error: At function: PgLike
-                	  from pg_constraint where conname like 'at_partitioned%'
-	                                   ^
-                    -stdin-:<main>:2:36: Error: Expected pg text, but got name
-                    	  from pg_constraint where conname like 'at_partitioned%'
-	                                   ^
+	                ^
 <sql-statement>
 alter table at_partitioned alter column name type varchar(127);
 </sql-statement>
@@ -5823,20 +5818,15 @@ select conname, obj_description(oid, 'pg_constraint') as desc
 </sql-statement>
 -stdin-:<main>: Error: Type annotation
 
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
+    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
     	select conname, obj_description(oid, 'pg_constraint') as desc
 	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
+        -stdin-:<main>:1:17: Error: At function: PgCall
+        	select conname, obj_description(oid, 'pg_constraint') as desc
+	                ^
+            -stdin-:<main>:1:17: Error: No such proc: obj_description
             	select conname, obj_description(oid, 'pg_constraint') as desc
-	^
-                -stdin-:<main>:2:36: Error: At function: PgLike
-                	  from pg_constraint where conname like 'at_partitioned%'
-	                                   ^
-                    -stdin-:<main>:2:36: Error: Expected pg text, but got name
-                    	  from pg_constraint where conname like 'at_partitioned%'
-	                                   ^
+	                ^
 <sql-statement>
 -- Don't remove this DROP, it exposes bug #15672
 drop table at_partitioned;
@@ -5997,25 +5987,6 @@ select relname, conname, coninhcount, conislocal, connoinherit
   where relname like 'test_inh_check%' and c.conrelid = r.oid
   order by 1, 2;
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
-    	select relname, conname, coninhcount, conislocal, connoinherit
-	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
-            	select relname, conname, coninhcount, conislocal, connoinherit
-	^
-                -stdin-:<main>:3:40: Error: At function: PgAnd
-                	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                                       ^
-                    -stdin-:<main>:3:17: Error: At function: PgLike
-                    	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                ^
-                        -stdin-:<main>:3:17: Error: Expected pg text, but got name
-                        	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                ^
 <sql-statement>
 ALTER TABLE test_inh_check ALTER COLUMN a TYPE numeric;
 </sql-statement>
@@ -6038,25 +6009,6 @@ select relname, conname, coninhcount, conislocal, connoinherit
   where relname like 'test_inh_check%' and c.conrelid = r.oid
   order by 1, 2;
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
-    	select relname, conname, coninhcount, conislocal, connoinherit
-	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
-            	select relname, conname, coninhcount, conislocal, connoinherit
-	^
-                -stdin-:<main>:3:40: Error: At function: PgAnd
-                	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                                       ^
-                    -stdin-:<main>:3:17: Error: At function: PgLike
-                    	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                ^
-                        -stdin-:<main>:3:17: Error: Expected pg text, but got name
-                        	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                ^
 <sql-statement>
 -- also try noinherit, local, and local+inherited cases
 ALTER TABLE test_inh_check ADD CONSTRAINT bnoinherit CHECK (b > 100) NO INHERIT;
@@ -6104,25 +6056,6 @@ select relname, conname, coninhcount, conislocal, connoinherit
   where relname like 'test_inh_check%' and c.conrelid = r.oid
   order by 1, 2;
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
-    	select relname, conname, coninhcount, conislocal, connoinherit
-	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
-            	select relname, conname, coninhcount, conislocal, connoinherit
-	^
-                -stdin-:<main>:3:40: Error: At function: PgAnd
-                	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                                       ^
-                    -stdin-:<main>:3:17: Error: At function: PgLike
-                    	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                ^
-                        -stdin-:<main>:3:17: Error: Expected pg text, but got name
-                        	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                ^
 <sql-statement>
 ALTER TABLE test_inh_check ALTER COLUMN b TYPE numeric;
 </sql-statement>
@@ -6145,25 +6078,6 @@ select relname, conname, coninhcount, conislocal, connoinherit
   where relname like 'test_inh_check%' and c.conrelid = r.oid
   order by 1, 2;
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
-    	select relname, conname, coninhcount, conislocal, connoinherit
-	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
-            	select relname, conname, coninhcount, conislocal, connoinherit
-	^
-                -stdin-:<main>:3:40: Error: At function: PgAnd
-                	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                                       ^
-                    -stdin-:<main>:3:17: Error: At function: PgLike
-                    	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                ^
-                        -stdin-:<main>:3:17: Error: Expected pg text, but got name
-                        	  where relname like 'test_inh_check%' and c.conrelid = r.oid
-	                ^
 <sql-statement>
 -- ALTER COLUMN TYPE with different schema in children
 -- Bug at https://postgr.es/m/20170102225618.GA10071@telsasoft.com
@@ -8752,56 +8666,56 @@ UNION ALL
 SELECT 'toast index', ri.relkind, ri.relpersistence FROM pg_class r join pg_class t ON t.oid = r.reltoastrelid JOIN pg_index i ON i.indrelid = t.oid JOIN pg_class ri ON ri.oid = i.indexrelid WHERE r.relname ~ '^unlogged1'
 ORDER BY relname;
 </sql-statement>
-VERIFY failed (2024-02-23T18:47:23.640420+0300): 
+VERIFY failed (2024-03-07T20:04:42.142404+0300): 
   ydb/library/yql/minikql/comp_nodes/llvm14/mkql_join_dict.cpp:149
   JoinDicts(): requirement !HasNullInKey(key1) failed
-NPrivate::InternalPanicImpl(int, char const*, char const*, int, int, int, TBasicStringBuf<char, std::__y1::char_traits<char> >, char const*, unsigned long)+600 (0x98FCAA8)
-NPrivate::Panic(NPrivate::TStaticBuf const&, int, char const*, char const*, char const*, ...)+285 (0x98F29BD)
-??+0 (0x1183B081)
-??+0 (0x7FF84FF892B5)
-??+0 (0x7FF84FF88C92)
-??+0 (0x7FF84FF8887D)
-??+0 (0x110FB018)
-std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > > std::__y1::transform[abi:v160005]<NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> > >(NKikimr::NMiniKQL::IComputationNode* const*, NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::I+131 (0x110B0FE3)
-??+0 (0x110B29E6)
-??+0 (0x110B1E44)
-??+0 (0x1180C4CF)
-??+0 (0x1180B66F)
-??+0 (0xF33B607)
-NYql::TComputationGraphProxy::GetValue()+23 (0xF31AC77)
-NYql::NFile::TYtFileGateway::ExecuteResult(NYql::NFile::TSession&, NYson::TYsonWriter&, NYql::NNodes::TExprBase, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&, TVector<TBasicString<char, std::__y1::char_traits<char> >, std::__y1::allocator<TBasicString<char, std::__y1::char_traits<char> > > > const&) const+1930 (0xF2EE13A)
-NYql::NFile::TYtFileGateway::ResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&)+881 (0xF2D85C1)
-??+0 (0xE4C0F15)
-??+0 (0xE4C44CA)
-NYql::TExecTransformerBase::CallbackTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+1098 (0xE4C871A)
-NYql::TAsyncCallbackTransformer<NYql::TExecTransformerBase>::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+37 (0xE4C3CB5)
-NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB009018)
-??+0 (0xC64DF24)
-??+0 (0xC642B8F)
-NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB009018)
-??+0 (0xC73C85F)
-??+0 (0xC7410D0)
-??+0 (0xC73C382)
-??+0 (0xC740F6C)
-??+0 (0xC73C382)
-??+0 (0xC740F6C)
-??+0 (0xC73C382)
-??+0 (0xC738E84)
-NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB009018)
-??+0 (0xB009725)
-NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB009018)
-NYql::AsyncTransformStepImpl(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool, bool, TBasicStringBuf<char, std::__y1::char_traits<char> > const&)+290 (0xB007AF2)
-NYql::AsyncTransform(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool)+66 (0xB008452)
-NYql::TProgram::AsyncTransformWithFallback(bool)+81 (0xBF3E701)
-??+0 (0xBF4FCD0)
-NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)+3035 (0xBF3C6EB)
-??+0 (0xBF3983A)
-NYql::TProgram::Run(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)+129 (0xBF3BAD1)
-Main(int, char**)+6488 (0x97DA248)
-main+334 (0x97DCBCE)
-??+0 (0x7FF84FC29D90)
-__libc_start_main+128 (0x7FF84FC29E40)
-??+0 (0x976E029)
+NPrivate::InternalPanicImpl(int, char const*, char const*, int, int, int, TBasicStringBuf<char, std::__y1::char_traits<char> >, char const*, unsigned long)+600 (0x9929598)
+NPrivate::Panic(NPrivate::TStaticBuf const&, int, char const*, char const*, char const*, ...)+285 (0x991F4FD)
+??+0 (0x1185F421)
+??+0 (0x7F665BEF82B5)
+??+0 (0x7F665BEF7C92)
+??+0 (0x7F665BEF787D)
+??+0 (0x11120148)
+std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > > std::__y1::transform[abi:ue170006]<NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> > >(NKikimr::NMiniKQL::IComputationNode* const*, NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::+131 (0x110D6113)
+??+0 (0x110D7B16)
+??+0 (0x110D6F74)
+??+0 (0x1183070F)
+??+0 (0x1182F8BF)
+??+0 (0xF362217)
+NYql::TComputationGraphProxy::GetValue()+23 (0xF341777)
+NYql::NFile::TYtFileGateway::ExecuteResult(NYql::NFile::TSession&, NYson::TYsonWriter&, NYql::NNodes::TExprBase, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&, TVector<TBasicString<char, std::__y1::char_traits<char> >, std::__y1::allocator<TBasicString<char, std::__y1::char_traits<char> > > > const&) const+1930 (0xF314F4A)
+NYql::NFile::TYtFileGateway::ResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&)+881 (0xF2FF821)
+??+0 (0xE4DE525)
+??+0 (0xE4E1B5A)
+NYql::TExecTransformerBase::CallbackTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+1098 (0xE4E5DDA)
+NYql::TAsyncCallbackTransformer<NYql::TExecTransformerBase>::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+37 (0xE4E1215)
+NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB038A78)
+??+0 (0xC67B620)
+??+0 (0xC67033F)
+NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB038A78)
+??+0 (0xC766BCF)
+??+0 (0xC76B440)
+??+0 (0xC7666F2)
+??+0 (0xC76B2DC)
+??+0 (0xC7666F2)
+??+0 (0xC76B2DC)
+??+0 (0xC7666F2)
+??+0 (0xC7631F4)
+NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB038A78)
+??+0 (0xB039245)
+NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB038A78)
+NYql::AsyncTransformStepImpl(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool, bool, TBasicStringBuf<char, std::__y1::char_traits<char> > const&)+290 (0xB0374E2)
+NYql::AsyncTransform(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool)+66 (0xB037E42)
+NYql::TProgram::AsyncTransformWithFallback(bool)+81 (0xBF7CC71)
+??+0 (0xBF8E3E0)
+NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)+3119 (0xBF7AC3F)
+??+0 (0xBF77D1A)
+NYql::TProgram::Run(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)+129 (0xBF79FD1)
+Main(int, char**)+6488 (0x98071A8)
+main+343 (0x9809B77)
+??+0 (0x7F665BC29D90)
+__libc_start_main+128 (0x7F665BC29E40)
+??+0 (0x979B029)
 __GI___pthread_kill at ./nptl/pthread_kill.c:89:0
 __GI_raise at ../sysdeps/posix/raise.c:26:0
 __GI_abort at ./stdlib/abort.c:79:0
@@ -8812,22 +8726,22 @@ NKikimr::NMiniKQL::(anonymous namespace)::TJoinDictWrapper<false>::JoinDicts(NKi
 ??? at ???:0:0
 ??? at ???:0:0
 NKikimr::NMiniKQL::TCodegeneratorRootNode<NKikimr::NMiniKQL::TMutableCodegeneratorNode<NKikimr::NMiniKQL::(anonymous namespace)::TListMapWrapper>, true>::GetValue(NKikimr::NMiniKQL::TComputationContext&) const at /-B/ydb/library/yql/minikql/comp_nodes/llvm14/ydb/library/yql/minikql/computation/mkql_computation_node_codegen.h:845:0
-std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > > std::__y1::transform[abi:v160005]<NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> > >(NKikimr::NMiniKQL::IComputationNode* const*, NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> >) at /-S/contrib/libs/cxxsupp/libcxx/include/__algorithm/transform.h:26:0
+std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > > std::__y1::transform[abi:ue170006]<NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> > >(NKikimr::NMiniKQL::IComputationNode* const*, NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> >) at /-S/contrib/libs/cxxsupp/libcxx/include/__algorithm/transform.h:26:0
 NKikimr::NMiniKQL::(anonymous namespace)::TOrderedExtendWrapper<false>::DoCalculate(NKikimr::NMiniKQL::TComputationContext&) const at /-B/ydb/library/yql/minikql/comp_nodes/llvm14/mkql_extend.cpp:540:0
 NKikimr::NMiniKQL::TMutableComputationNode<NKikimr::NMiniKQL::(anonymous namespace)::TOrderedExtendWrapper<false> >::GetValue(NKikimr::NMiniKQL::TComputationContext&) const at /-S/ydb/library/yql/minikql/computation/mkql_computation_node_impl.h:217:0
 NKikimr::NMiniKQL::(anonymous namespace)::TAlgoBaseWrapper<NKikimr::NMiniKQL::(anonymous namespace)::TAlgoWrapper, true>::DoCalculate(NKikimr::NMiniKQL::TComputationContext&) const at /-B/ydb/library/yql/minikql/comp_nodes/llvm14/mkql_sort.cpp:340:0
 NKikimr::NMiniKQL::TMutableComputationNode<NKikimr::NMiniKQL::(anonymous namespace)::TAlgoBaseWrapper<NKikimr::NMiniKQL::(anonymous namespace)::TAlgoWrapper, true> >::GetValue(NKikimr::NMiniKQL::TComputationContext&) const at /-S/ydb/library/yql/minikql/computation/mkql_computation_node_impl.h:214:0
 NKikimr::NMiniKQL::(anonymous namespace)::TComputationGraph::GetValue() at /-B/ydb/library/yql/minikql/computation/llvm14/mkql_computation_node_graph.cpp:623:0
 NYql::TComputationGraphProxy::GetValue() at /-S/ydb/library/yql/providers/yt/lib/lambda_builder/lambda_builder.cpp:116:0
-NYql::NFile::TYtFileGateway::ExecuteResult(NYql::NFile::TSession&, NYson::TYsonWriter&, NYql::NNodes::TExprBase, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&, TVector<TBasicString<char, std::__y1::char_traits<char> >, std::__y1::allocator<TBasicString<char, std::__y1::char_traits<char> > > > const&) const at /-S/ydb/library/yql/providers/yt/gateway/file/yql_yt_file.cpp:1198:0
-NYql::NFile::TYtFileGateway::ResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&) at /-S/ydb/library/yql/providers/yt/gateway/file/yql_yt_file.cpp:644:0
-NYql::(anonymous namespace)::TYtDataSourceExecTransformer::HandleResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&) at /-S/ydb/library/yql/providers/yt/provider/yql_yt_datasource_exec.cpp:181:0
-std::__y1::__function::__func<std::__y1::function<std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> NYql::TExecTransformerBase::Hndl<NYql::(anonymous namespace)::TYtDataSourceExecTransformer>(std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (NYql::(anonymous namespace)::TYtDataSourceExecTransformer::*)(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&))::'lambda'(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&), std::__y1::allocator<std::__y1::function<std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> NYql::TExecTransformerBase::Hndl<NYql::(anonymous namespace)::TYtDataSourceExecTransformer>(std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (NYql::(anonymous namespace)::TYtDataSourceExecTransformer::*)(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&))::'lambda'(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)>, std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)>::operator()(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/contrib/libs/cxxsupp/libcxx/include/__functional/function.h:356:0
-NYql::TExecTransformerBase::CallbackTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/providers/common/transform/yql_exec.cpp:27:0
-NYql::TAsyncCallbackTransformer<NYql::TExecTransformerBase>::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:332:0
+NYql::NFile::TYtFileGateway::ExecuteResult(NYql::NFile::TSession&, NYson::TYsonWriter&, NYql::NNodes::TExprBase, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&, TVector<TBasicString<char, std::__y1::char_traits<char> >, std::__y1::allocator<TBasicString<char, std::__y1::char_traits<char> > > > const&) const at /home/marsaly/ydbwork/ydb/ydb/library/yql/providers/yt/gateway/file/yql_yt_file.cpp:1201:0
+NYql::NFile::TYtFileGateway::ResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&) at /home/marsaly/ydbwork/ydb/ydb/library/yql/providers/yt/gateway/file/yql_yt_file.cpp:644:0
+NYql::(anonymous namespace)::TYtDataSourceExecTransformer::HandleResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&) at /home/marsaly/ydbwork/ydb/ydb/library/yql/providers/yt/provider/yql_yt_datasource_exec.cpp:181:0
+std::__y1::__function::__func<std::__y1::function<std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> NYql::TExecTransformerBase::Hndl<NYql::(anonymous namespace)::TYtDataSourceExecTransformer>(std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (NYql::(anonymous namespace)::TYtDataSourceExecTransformer::*)(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&))::'lambda'(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&), std::__y1::allocator<std::__y1::function<std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> NYql::TExecTransformerBase::Hndl<NYql::(anonymous namespace)::TYtDataSourceExecTransformer>(std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (NYql::(anonymous namespace)::TYtDataSourceExecTransformer::*)(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&))::'lambda'(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)>, std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)>::operator()(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /home/marsaly/ydbwork/ydb/contrib/libs/cxxsupp/libcxx/include/__functional/function.h:363:0
+NYql::TExecTransformerBase::CallbackTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /home/marsaly/ydbwork/ydb/ydb/library/yql/providers/common/transform/yql_exec.cpp:27:0
+NYql::TAsyncCallbackTransformer<NYql::TExecTransformerBase>::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /home/marsaly/ydbwork/ydb/ydb/library/yql/core/yql_graph_transformer.h:332:0
 NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:160:0
-NYql::IGraphTransformer::TStatus NYql::(anonymous namespace)::TResultCallableExecutionTransformer::HandleFillOrPull<NYql::NNodes::NGenerated::TResultStub<NYql::NNodes::TExprBase, NYql::NNodes::NGenerated::TResOrPullBaseStub<NYql::NNodes::TExprBase, NYql::NNodes::TCallable, NYql::NNodes::TCoAtom, NYql::NNodes::NGenerated::TCoNameValueTupleListStub<NYql::NNodes::TExprBase, NYql::NNodes::TListBase, NYql::NNodes::NGenerated::TCoNameValueTupleStub<NYql::NNodes::TExprBase, NYql::NNodes::TCoAtom> > > > >(NYql::NNodes::TExprBase, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, NYql::IDataProvider&) at /-S/ydb/library/yql/providers/result/provider/yql_result_provider.cpp:609:0
-NYql::(anonymous namespace)::TResultCallableExecutionTransformer::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/providers/result/provider/yql_result_provider.cpp:248:0
+NYql::IGraphTransformer::TStatus NYql::(anonymous namespace)::TResultCallableExecutionTransformer::HandleFillOrPull<NYql::NNodes::NGenerated::TResultStub<NYql::NNodes::TExprBase, NYql::NNodes::NGenerated::TResOrPullBaseStub<NYql::NNodes::TExprBase, NYql::NNodes::TCallable, NYql::NNodes::TCoAtom, NYql::NNodes::NGenerated::TCoNameValueTupleListStub<NYql::NNodes::TExprBase, NYql::NNodes::TListBase, NYql::NNodes::NGenerated::TCoNameValueTupleStub<NYql::NNodes::TExprBase, NYql::NNodes::TCoAtom> > > > >(NYql::NNodes::TExprBase, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, NYql::IDataProvider&) at /home/marsaly/ydbwork/ydb/ydb/library/yql/providers/result/provider/yql_result_provider.cpp:609:0
+NYql::(anonymous namespace)::TResultCallableExecutionTransformer::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /home/marsaly/ydbwork/ydb/ydb/library/yql/providers/result/provider/yql_result_provider.cpp:248:0
 NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:160:0
 NYql::(anonymous namespace)::TExecutionTransformer::ExecuteNode(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:274:0
 NYql::(anonymous namespace)::TExecutionTransformer::ExecuteChildren(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:340:0
@@ -8842,11 +8756,11 @@ NYql::(anonymous namespace)::TCompositeGraphTransformer::DoTransform(TIntrusiveP
 NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:160:0
 NYql::AsyncTransformStepImpl(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool, bool, TBasicStringBuf<char, std::__y1::char_traits<char> > const&) at /-S/ydb/library/yql/core/yql_graph_transformer.cpp:312:0
 NYql::AsyncTransform(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool) at /-S/ydb/library/yql/core/yql_graph_transformer.cpp:364:0
-NYql::TProgram::AsyncTransformWithFallback(bool) at /-S/ydb/library/yql/core/facade/yql_facade.cpp:1149:0
-NThreading::TFuture<NThreading::NImpl::TFutureType<NThreading::NImpl::TFutureCallResult<NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0, void>::TType>::TType> NThreading::TFuture<void>::Apply<NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0>(NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0&&) const::'lambda'(NThreading::TFuture<void> const&)::operator()(NThreading::TFuture<void> const&) at /-S/library/cpp/threading/future/core/future-inl.h:726:0
-NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool) at /-S/ydb/library/yql/core/facade/yql_facade.cpp:1014:0
-NYql::IGraphTransformer::TStatus NYql::(anonymous namespace)::SyncExecution<TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool, TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*&, IOutputStream*&, IOutputStream*&, bool&>(NYql::TProgram*, NThreading::TFuture<NYql::IGraphTransformer::TStatus> (NYql::TProgram::*)(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool), TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*&, IOutputStream*&, IOutputStream*&, bool&) at /-S/ydb/library/yql/core/facade/yql_facade.cpp:69:0
-NYql::TProgram::Run(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool) at /-S/ydb/library/yql/core/facade/yql_facade.cpp:949:0
+NYql::TProgram::AsyncTransformWithFallback(bool) at /home/marsaly/ydbwork/ydb/ydb/library/yql/core/facade/yql_facade.cpp:1153:0
+NThreading::TFuture<NThreading::NImpl::TFutureType<NThreading::NImpl::TFutureCallResult<NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0, void>::TType>::TType> NThreading::TFuture<void>::Apply<NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0>(NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0&&) const::'lambda'(NThreading::TFuture<void> const&)::operator()(NThreading::TFuture<void> const&) at /home/marsaly/ydbwork/ydb/library/cpp/threading/future/core/future-inl.h:726:0
+NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool) at /home/marsaly/ydbwork/ydb/ydb/library/yql/core/facade/yql_facade.cpp:1018:0
+NYql::IGraphTransformer::TStatus NYql::(anonymous namespace)::SyncExecution<TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool, TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*&, IOutputStream*&, IOutputStream*&, bool&>(NYql::TProgram*, NThreading::TFuture<NYql::IGraphTransformer::TStatus> (NYql::TProgram::*)(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool), TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*&, IOutputStream*&, IOutputStream*&, bool&) at /home/marsaly/ydbwork/ydb/ydb/library/yql/core/facade/yql_facade.cpp:69:0
+NYql::TProgram::Run(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool) at /home/marsaly/ydbwork/ydb/ydb/library/yql/core/facade/yql_facade.cpp:953:0
 Main(int, char**) at /home/marsaly/ydbwork/ydb/ydb/library/yql/tools/pgrun/pgrun.cpp:1301:0
 main at /home/marsaly/ydbwork/ydb/ydb/library/yql/tools/pgrun/pgrun.cpp:1341:0
 __libc_start_call_main at ../sysdeps/nptl/libc_start_call_main.h:58:0
diff --git a/ydb/library/yql/tests/postgresql/cases/strings.err b/ydb/library/yql/tests/postgresql/cases/strings.err
index 1bf6598f59b1..fbce7eb2daa3 100644
--- a/ydb/library/yql/tests/postgresql/cases/strings.err
+++ b/ydb/library/yql/tests/postgresql/cases/strings.err
@@ -994,31 +994,9 @@ SELECT 'indio' NOT LIKE 'in_o' AS "true";
 <sql-statement>
 SELECT 'abc'::name LIKE '_b_' AS "true";
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
-    	SELECT 'abc'::name LIKE '_b_' AS "true";
-	^
-        -stdin-:<main>:1:20: Error: At function: PgLike
-        	SELECT 'abc'::name LIKE '_b_' AS "true";
-	                   ^
-            -stdin-:<main>:1:20: Error: Expected pg text, but got name
-            	SELECT 'abc'::name LIKE '_b_' AS "true";
-	                   ^
 <sql-statement>
 SELECT 'abc'::name NOT LIKE '_b_' AS "false";
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
-    	SELECT 'abc'::name NOT LIKE '_b_' AS "false";
-	^
-        -stdin-:<main>:1:20: Error: At function: PgNot, At function: PgLike
-        	SELECT 'abc'::name NOT LIKE '_b_' AS "false";
-	                   ^
-            -stdin-:<main>:1:20: Error: Expected pg text, but got name
-            	SELECT 'abc'::name NOT LIKE '_b_' AS "false";
-	                   ^
 <sql-statement>
 SELECT 'abc'::bytea LIKE '_b_'::bytea AS "true";
 </sql-statement>
@@ -1200,31 +1178,9 @@ SELECT 'Hawkeye' NOT ILIKE 'h%' AS "false";
 <sql-statement>
 SELECT 'ABC'::name ILIKE '_b_' AS "true";
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
-    	SELECT 'ABC'::name ILIKE '_b_' AS "true";
-	^
-        -stdin-:<main>:1:20: Error: At function: PgILike
-        	SELECT 'ABC'::name ILIKE '_b_' AS "true";
-	                   ^
-            -stdin-:<main>:1:20: Error: Expected pg text, but got name
-            	SELECT 'ABC'::name ILIKE '_b_' AS "true";
-	                   ^
 <sql-statement>
 SELECT 'ABC'::name NOT ILIKE '_b_' AS "false";
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
-    	SELECT 'ABC'::name NOT ILIKE '_b_' AS "false";
-	^
-        -stdin-:<main>:1:20: Error: At function: PgNot, At function: PgILike
-        	SELECT 'ABC'::name NOT ILIKE '_b_' AS "false";
-	                   ^
-            -stdin-:<main>:1:20: Error: Expected pg text, but got name
-            	SELECT 'ABC'::name NOT ILIKE '_b_' AS "false";
-	                   ^
 <sql-statement>
 --
 -- test %/_ combination cases, cf bugs #4821 and #5478
diff --git a/ydb/library/yql/tests/postgresql/cases/strings.out b/ydb/library/yql/tests/postgresql/cases/strings.out
index 8af8f5476c78..35d85bc0147d 100644
--- a/ydb/library/yql/tests/postgresql/cases/strings.out
+++ b/ydb/library/yql/tests/postgresql/cases/strings.out
@@ -765,6 +765,18 @@ SELECT 'indio' NOT LIKE 'in_o' AS "true";
  t
 (1 row)
 
+SELECT 'abc'::name LIKE '_b_' AS "true";
+ true 
+------
+ t
+(1 row)
+
+SELECT 'abc'::name NOT LIKE '_b_' AS "false";
+ false 
+-------
+ f
+(1 row)
+
 -- unused escape character
 SELECT 'hawkeye' LIKE 'h%' ESCAPE '#' AS "true";
  true 
@@ -890,6 +902,18 @@ SELECT 'Hawkeye' NOT ILIKE 'h%' AS "false";
  f
 (1 row)
 
+SELECT 'ABC'::name ILIKE '_b_' AS "true";
+ true 
+------
+ t
+(1 row)
+
+SELECT 'ABC'::name NOT ILIKE '_b_' AS "false";
+ false 
+-------
+ f
+(1 row)
+
 SELECT 'jack' LIKE '%____%' AS t;
  t 
 ---
diff --git a/ydb/library/yql/tests/postgresql/cases/strings.sql b/ydb/library/yql/tests/postgresql/cases/strings.sql
index 1363058ea15f..232343f65299 100644
--- a/ydb/library/yql/tests/postgresql/cases/strings.sql
+++ b/ydb/library/yql/tests/postgresql/cases/strings.sql
@@ -167,6 +167,8 @@ SELECT 'indio' LIKE 'in__o' AS "true";
 SELECT 'indio' NOT LIKE 'in__o' AS "false";
 SELECT 'indio' LIKE 'in_o' AS "false";
 SELECT 'indio' NOT LIKE 'in_o' AS "true";
+SELECT 'abc'::name LIKE '_b_' AS "true";
+SELECT 'abc'::name NOT LIKE '_b_' AS "false";
 -- unused escape character
 SELECT 'hawkeye' LIKE 'h%' ESCAPE '#' AS "true";
 SELECT 'hawkeye' NOT LIKE 'h%' ESCAPE '#' AS "false";
@@ -192,6 +194,8 @@ SELECT 'hawkeye' ILIKE 'H%Eye' AS "true";
 SELECT 'hawkeye' NOT ILIKE 'H%Eye' AS "false";
 SELECT 'Hawkeye' ILIKE 'h%' AS "true";
 SELECT 'Hawkeye' NOT ILIKE 'h%' AS "false";
+SELECT 'ABC'::name ILIKE '_b_' AS "true";
+SELECT 'ABC'::name NOT ILIKE '_b_' AS "false";
 SELECT 'jack' LIKE '%____%' AS t;
 --
 -- basic tests of LIKE with indexes
diff --git a/ydb/library/yql/tests/postgresql/cases/uuid.err b/ydb/library/yql/tests/postgresql/cases/uuid.err
index 6aa92ec8b8e3..1e3d24f91aa6 100644
--- a/ydb/library/yql/tests/postgresql/cases/uuid.err
+++ b/ydb/library/yql/tests/postgresql/cases/uuid.err
@@ -160,25 +160,6 @@ INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111');
 -- check to see whether the new indexes are actually there
 SELECT count(*) FROM pg_class WHERE relkind='i' AND relname LIKE 'guid%';
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
-    	-- check to see whether the new indexes are actually there
-	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
-            	-- check to see whether the new indexes are actually there
-	^
-                -stdin-:<main>:2:49: Error: At function: PgAnd
-                	SELECT count(*) FROM pg_class WHERE relkind='i' AND relname LIKE 'guid%';
-	                                                ^
-                    -stdin-:<main>:2:61: Error: At function: PgLike
-                    	SELECT count(*) FROM pg_class WHERE relkind='i' AND relname LIKE 'guid%';
-	                                                            ^
-                        -stdin-:<main>:2:61: Error: Expected pg text, but got name
-                        	SELECT count(*) FROM pg_class WHERE relkind='i' AND relname LIKE 'guid%';
-	                                                            ^
 <sql-statement>
 -- populating the test tables with additional records
 INSERT INTO guid1(guid_field) VALUES('44444444-4444-4444-4444-444444444444');
diff --git a/ydb/library/yql/tests/postgresql/cases/xml.err b/ydb/library/yql/tests/postgresql/cases/xml.err
index feccb0fe7475..b311f609959a 100644
--- a/ydb/library/yql/tests/postgresql/cases/xml.err
+++ b/ydb/library/yql/tests/postgresql/cases/xml.err
@@ -899,22 +899,6 @@ CREATE VIEW xmlview9 AS SELECT xmlserialize(content 'good' as text);
 SELECT table_name, view_definition FROM information_schema.views
   WHERE table_name LIKE 'xmlview%' ORDER BY 1;
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
-    	SELECT table_name, view_definition FROM information_schema.views
-	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
-            	SELECT table_name, view_definition FROM information_schema.views
-	^
-                -stdin-:<main>:2:20: Error: At function: PgLike
-                	  WHERE table_name LIKE 'xmlview%' ORDER BY 1;
-	                   ^
-                    -stdin-:<main>:2:20: Error: Expected pg text, but got name
-                    	  WHERE table_name LIKE 'xmlview%' ORDER BY 1;
-	                   ^
 <sql-statement>
 -- Text XPath expressions evaluation
 SELECT xpath('/value', data) FROM xmltest;
diff --git a/ydb/library/yql/tests/postgresql/cases/xml.err.1 b/ydb/library/yql/tests/postgresql/cases/xml.err.1
index feccb0fe7475..b311f609959a 100644
--- a/ydb/library/yql/tests/postgresql/cases/xml.err.1
+++ b/ydb/library/yql/tests/postgresql/cases/xml.err.1
@@ -899,22 +899,6 @@ CREATE VIEW xmlview9 AS SELECT xmlserialize(content 'good' as text);
 SELECT table_name, view_definition FROM information_schema.views
   WHERE table_name LIKE 'xmlview%' ORDER BY 1;
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
-    	SELECT table_name, view_definition FROM information_schema.views
-	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
-            	SELECT table_name, view_definition FROM information_schema.views
-	^
-                -stdin-:<main>:2:20: Error: At function: PgLike
-                	  WHERE table_name LIKE 'xmlview%' ORDER BY 1;
-	                   ^
-                    -stdin-:<main>:2:20: Error: Expected pg text, but got name
-                    	  WHERE table_name LIKE 'xmlview%' ORDER BY 1;
-	                   ^
 <sql-statement>
 -- Text XPath expressions evaluation
 SELECT xpath('/value', data) FROM xmltest;
diff --git a/ydb/library/yql/tests/postgresql/cases/xml.err.2 b/ydb/library/yql/tests/postgresql/cases/xml.err.2
index feccb0fe7475..b311f609959a 100644
--- a/ydb/library/yql/tests/postgresql/cases/xml.err.2
+++ b/ydb/library/yql/tests/postgresql/cases/xml.err.2
@@ -899,22 +899,6 @@ CREATE VIEW xmlview9 AS SELECT xmlserialize(content 'good' as text);
 SELECT table_name, view_definition FROM information_schema.views
   WHERE table_name LIKE 'xmlview%' ORDER BY 1;
 </sql-statement>
--stdin-:<main>: Error: Type annotation
-
-    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
-    	SELECT table_name, view_definition FROM information_schema.views
-	^
-        -stdin-:<main>: Error: At function: PgSetItem
-        
-            -stdin-:<main>:1:1: Error: At function: PgWhere
-            	SELECT table_name, view_definition FROM information_schema.views
-	^
-                -stdin-:<main>:2:20: Error: At function: PgLike
-                	  WHERE table_name LIKE 'xmlview%' ORDER BY 1;
-	                   ^
-                    -stdin-:<main>:2:20: Error: Expected pg text, but got name
-                    	  WHERE table_name LIKE 'xmlview%' ORDER BY 1;
-	                   ^
 <sql-statement>
 -- Text XPath expressions evaluation
 SELECT xpath('/value', data) FROM xmltest;
diff --git a/ydb/library/yql/tests/postgresql/pg_tests.csv b/ydb/library/yql/tests/postgresql/pg_tests.csv
index 02d1a2bfb5c7..9325385be5ec 100644
--- a/ydb/library/yql/tests/postgresql/pg_tests.csv
+++ b/ydb/library/yql/tests/postgresql/pg_tests.csv
@@ -40,7 +40,7 @@ select_distinct_on,4,1,25.0
 select_having,23,19,82.61
 select_implicit,44,28,63.64
 select_into,67,3,4.48
-strings,390,296,75.9
+strings,390,300,76.92
 subselect,234,107,45.73
 text,76,16,21.05
 time,39,29,74.36
diff --git a/ydb/library/yql/tests/postgresql/status.md b/ydb/library/yql/tests/postgresql/status.md
index 8a4b832ea9c2..865f05d3cf38 100644
--- a/ydb/library/yql/tests/postgresql/status.md
+++ b/ydb/library/yql/tests/postgresql/status.md
@@ -16,7 +16,7 @@
 || 12 | bit | 115 | 90 | 78.26 | 18.02.2024 | YQL-17634 ||
 || 13 | numeric | 915 | 813 (+343) | 88.85 | 18.02.2024 | YQL-17629 ||
 || 14 | uuid | 36 | 29 (+29) | 80.56 | 07.03.2024 | YQL-17636 ||
-|| 15 | strings | 390 | 296 (+192) | 75.9 | 22.02.2024 | YQL-17587 ||
+|| 15 | strings | 390 | 300 (+4) | 76.92 | 07.03.2024 | YQL-17587 ||
 || 16 | numerology | 24 | 16 (+8) | 66.67 | 22.02.2024 | YQL-17926 ||
 || 17 | date | 264 | 207 (+5) | 78.41 | 07.03.2024 | YQL-17733 ||
 || 18 | time | 39 | 29 | 74.36 | 30.01.2024 | YQL-17738 ||
diff --git a/ydb/library/yql/tests/postgresql/status.old b/ydb/library/yql/tests/postgresql/status.old
index cda2a7314b3f..8a4b832ea9c2 100644
--- a/ydb/library/yql/tests/postgresql/status.old
+++ b/ydb/library/yql/tests/postgresql/status.old
@@ -12,49 +12,49 @@
 || 8 | int8 | 142 | 127 (+1) | 89.44 | 22.02.2024 | YQL-17614 ||
 || 9 | oid | 27 | 27 (+6) | 100.0 | 22.01.2024 | YQL-17623 ||
 || 10 | float4 | 96 | 82 (+2) | 85.42 | 26.01.2024 | YQL-17586 ||
-|| 11 | float8 | 168 | 139 | 82.74 | 18.02.2024 | YQL-17628 ||
+|| 11 | float8 | 168 | 140 (+1) | 83.33 | 07.03.2024 | YQL-17628 ||
 || 12 | bit | 115 | 90 | 78.26 | 18.02.2024 | YQL-17634 ||
 || 13 | numeric | 915 | 813 (+343) | 88.85 | 18.02.2024 | YQL-17629 ||
-|| 14 | uuid | 36 | 0 | 0.0 | 02.05.2023 | YQL-17636 ||
+|| 14 | uuid | 36 | 29 (+29) | 80.56 | 07.03.2024 | YQL-17636 ||
 || 15 | strings | 390 | 296 (+192) | 75.9 | 22.02.2024 | YQL-17587 ||
 || 16 | numerology | 24 | 16 (+8) | 66.67 | 22.02.2024 | YQL-17926 ||
-|| 17 | date | 264 | 202 | 76.52 | 18.02.2024 | YQL-17733 ||
+|| 17 | date | 264 | 207 (+5) | 78.41 | 07.03.2024 | YQL-17733 ||
 || 18 | time | 39 | 29 | 74.36 | 30.01.2024 | YQL-17738 ||
 || 19 | timetz | 45 | 19 | 42.22 | 30.01.2024 | YQL-17739 ||
-|| 20 | timestamp | 145 | 86 | 59.31 | 18.02.2024 | YQL-17692 ||
-|| 21 | timestamptz | 315 | 97 | 30.79 | 30.01.2024 | YQL-17693 ||
-|| 22 | interval | 168 | 115 | 68.45 | 25.10.2023 | YQL-17786 ||
-|| 23 | horology | 306 | 79 | 25.82 | 10.08.2023 | YQL-17856 ||
+|| 20 | timestamp | 145 | 88 (+2) | 60.69 | 07.03.2024 | YQL-17692 ||
+|| 21 | timestamptz | 315 | 99 (+2) | 31.43 | 07.03.2024 | YQL-17693 ||
+|| 22 | interval | 168 | 118 (+3) | 70.24 | 07.03.2024 | YQL-17786 ||
+|| 23 | horology | 306 | 94 (+15) | 30.72 | 07.03.2024 | YQL-17856 ||
 || 24 | comments | 7 | 7 | 100.0 | 25.05.2023 |  ||
-|| 25 | expressions | 63 | 14 | 22.22 | 25.10.2023 | YQL-17784 ||
+|| 25 | expressions | 63 | 18 (+4) | 28.57 | 07.03.2024 | YQL-17784 ||
 || 26 | unicode | 13 | 4 | 30.77 | 10.08.2023 | ||
 || 27 | create_table | 368 | 48 (+5) | 13.04 | 22.02.2024 | YQL-17664 ||
 || 28 | insert | 357 | 15 | 4.2 | 12.12.2023 | YQL-17785 ||
-|| 29 | create_misc | 76 | 3 | 3.95 | 29.09.2023 | YQL-17855 ||
-|| 30 | select | 88 | 9 | 10.23 | 12.12.2023 | YQL-17858 ||
+|| 29 | create_misc | 76 | 9 (+6) | 11.84 | 07.03.2024 | YQL-17855 ||
+|| 30 | select | 88 | 27 (+18) | 30.68 | 07.03.2024 | YQL-17858 ||
 || 31 | select_into | 67 | 3 | 4.48 | 27.07.2023 | YQL-17787 ||
 || 32 | select_distinct | 46 | 1 | 2.17 | 27.07.2023 | YQL-17857 ||
-|| 33 | select_distinct_on | 4 | 0 | 0.0 | 25.05.2023 | YQL-17925 ||
+|| 33 | select_distinct_on | 4 | 1 (+1) | 25.0 | 07.03.2024 | YQL-17925 ||
 || 34 | select_implicit | 44 | 28 (+15) | 63.64 | 30.01.2024 | YQL-17737 ||
 || 35 | select_having | 23 | 19 (+3) | 82.61 | 30.01.2024 | YQL-17736 ||
-|| 36 | subselect | 234 | 97 (+92) | 41.45 | 22.02.2024 | YQL-17589 ||
-|| 37 | union | 186 | 40 (+40) | 21.51 | 22.02.2024 | YQL-17590 ||
+|| 36 | subselect | 234 | 107 (+10) | 45.73 | 07.03.2024 | YQL-17589 ||
+|| 37 | union | 186 | 62 (+22) | 33.33 | 07.03.2024 | YQL-17590 ||
 || 38 | case | 63 | 35 (+5) | 55.56 | 18.02.2024 | YQL-17732 ||
-|| 39 | join | 591 | 134 (+20) | 22.67 | 18.02.2024 | YQL-17687 ||
-|| 40 | aggregates | 416 | 85 (+1) | 20.43 | 22.02.2024 | YQL-17627 ||
-|| 41 | arrays | 410 | 117 (+9) | 28.54 | 22.02.2024 | YQL-17707 ||
+|| 39 | join | 591 | 200 (+66) | 33.84 | 07.03.2024 | YQL-17687 ||
+|| 40 | aggregates | 416 | 104 (+19) | 25.0 | 07.03.2024 | YQL-17627 ||
+|| 41 | arrays | 410 | 120 (+3) | 29.27 | 07.03.2024 | YQL-17707 ||
 || 42 | update | 288 | 23 (+1) | 7.99 | 30.01.2024 | YQL-17685 ||
 || 43 | delete | 10 | 5 (+5) | 50.0 | 27.01.2024 | YQL-17585 ||
 || 44 | dbsize | 24 | 20 | 83.33 | 18.02.2024 | ||
-|| 45 | window | 298 | 5 | 1.68 | 12.12.2023 | YQL-17592 ||
+|| 45 | window | 298 | 61 (+56) | 20.47 | 07.03.2024 | YQL-17592 ||
 || 46 | functional_deps | 40 | 7 (+1) | 17.5 | 19.01.2024 | ||
-|| 47 | json | 450 | 135 (+2) | 30.0 | 22.02.2024 | YQL-17734 ||
+|| 47 | json | 450 | 139 (+4) | 30.89 | 07.03.2024 | YQL-17734 ||
 || 48 | jsonb | 1013 | 404 (+3) | 39.88 | 18.02.2024 | YQL-17735 ||
 || 49 | json_encoding | 42 | 42 | 100.0 | 29.05.2023 | ||
 || 50 | jsonpath | 169 | 152 | 89.94 | 29.05.2023 | числа с точкой без целой части (например .1), литерал '00' ||
 || 51 | jsonpath_encoding | 31 | 31 | 100.0 | 29.05.2023 | ||
 || 52 | jsonb_jsonpath | 427 | 88 | 20.61 | 12.12.2023 | ||
-|| 53 | limit | 84 | 5 | 5.95 | 10.08.2023 | YQL-17783 ||
+|| 53 | limit | 84 | 18 (+13) | 21.43 | 07.03.2024 | YQL-17783 ||
 || 54 | truncate | 193 | 41 (+5) | 21.24 | 18.02.2024 | YQL-17740 ||
 || 55 | alter_table | 1679 | 233 (+222) | 13.88 | 18.02.2024 | YQL-17688 ||
 || 56 | xml | 234 | 18 (+4) | 7.69 | 18.02.2024 | YQL-17681 ||
diff --git a/ydb/library/yql/tests/sql/dq_file/part13/canondata/result.json b/ydb/library/yql/tests/sql/dq_file/part13/canondata/result.json
index 6dc5424a2726..3918e18690ee 100644
--- a/ydb/library/yql/tests/sql/dq_file/part13/canondata/result.json
+++ b/ydb/library/yql/tests/sql/dq_file/part13/canondata/result.json
@@ -1778,6 +1778,28 @@
         }
     ],
     "test.test[pg-pg_in_dict_key_with_stable_pickle-default.txt-Results]": [],
+    "test.test[pg-pg_like_cast-default.txt-Analyze]": [
+        {
+            "checksum": "c1f2d837c3623c81dd596a9877913fb8",
+            "size": 948,
+            "uri": "https://{canondata_backend}/1599023/af4de9c2015a8dbd6c450ba09edc50e553a0c403/resource.tar.gz#test.test_pg-pg_like_cast-default.txt-Analyze_/plan.txt"
+        }
+    ],
+    "test.test[pg-pg_like_cast-default.txt-Debug]": [
+        {
+            "checksum": "24943aa60203974bc089ecac64ecfc82",
+            "size": 1583,
+            "uri": "https://{canondata_backend}/1599023/af4de9c2015a8dbd6c450ba09edc50e553a0c403/resource.tar.gz#test.test_pg-pg_like_cast-default.txt-Debug_/opt.yql_patched"
+        }
+    ],
+    "test.test[pg-pg_like_cast-default.txt-Plan]": [
+        {
+            "checksum": "c1f2d837c3623c81dd596a9877913fb8",
+            "size": 948,
+            "uri": "https://{canondata_backend}/1599023/af4de9c2015a8dbd6c450ba09edc50e553a0c403/resource.tar.gz#test.test_pg-pg_like_cast-default.txt-Plan_/plan.txt"
+        }
+    ],
+    "test.test[pg-pg_like_cast-default.txt-Results]": [],
     "test.test[pg-select_columnref2-default.txt-Analyze]": [
         {
             "checksum": "7c26ae70a78338dce1e8028da3cdc562",
diff --git a/ydb/library/yql/tests/sql/hybrid_file/part7/canondata/result.json b/ydb/library/yql/tests/sql/hybrid_file/part7/canondata/result.json
index 568a5912c5a4..4306a6342085 100644
--- a/ydb/library/yql/tests/sql/hybrid_file/part7/canondata/result.json
+++ b/ydb/library/yql/tests/sql/hybrid_file/part7/canondata/result.json
@@ -1609,6 +1609,20 @@
             "uri": "https://{canondata_backend}/1781765/028f42f897160b53900546b39900217bb2eb9fb1/resource.tar.gz#test.test_pg-pg_in_dict_key_with_stable_pickle-default.txt-Plan_/plan.txt"
         }
     ],
+    "test.test[pg-pg_like_cast-default.txt-Debug]": [
+        {
+            "checksum": "65aa382cc96b28d78de7c020b9a14325",
+            "size": 1582,
+            "uri": "https://{canondata_backend}/1942671/d37704c7d0acd85d95c86ed2cbc5abdedc6da1fe/resource.tar.gz#test.test_pg-pg_like_cast-default.txt-Debug_/opt.yql_patched"
+        }
+    ],
+    "test.test[pg-pg_like_cast-default.txt-Plan]": [
+        {
+            "checksum": "c1f2d837c3623c81dd596a9877913fb8",
+            "size": 948,
+            "uri": "https://{canondata_backend}/1942671/d37704c7d0acd85d95c86ed2cbc5abdedc6da1fe/resource.tar.gz#test.test_pg-pg_like_cast-default.txt-Plan_/plan.txt"
+        }
+    ],
     "test.test[pg-record_from_table_row-default.txt-Debug]": [
         {
             "checksum": "72570482eac43dc72fb808334c10d01b",
diff --git a/ydb/library/yql/tests/sql/sql2yql/canondata/result.json b/ydb/library/yql/tests/sql/sql2yql/canondata/result.json
index 0e0a6ceb6b5b..65464141583a 100644
--- a/ydb/library/yql/tests/sql/sql2yql/canondata/result.json
+++ b/ydb/library/yql/tests/sql/sql2yql/canondata/result.json
@@ -11276,6 +11276,13 @@
             "uri": "https://{canondata_backend}/1599023/af9c2f81df0601cf266a0926b5ce73b6101b9115/resource.tar.gz#test_sql2yql.test_pg-pg_like_/sql.yql"
         }
     ],
+    "test_sql2yql.test[pg-pg_like_cast]": [
+        {
+            "checksum": "73237972233c0aed54ee29842eef3433",
+            "size": 818,
+            "uri": "https://{canondata_backend}/1924537/0a56b94135daeec4385a52132da20f92bfbe1f4d/resource.tar.gz#test_sql2yql.test_pg-pg_like_cast_/sql.yql"
+        }
+    ],
     "test_sql2yql.test[pg-pg_like_opt]": [
         {
             "checksum": "cf3aa66b65f253f4aa264eee61a8864a",
diff --git a/ydb/library/yql/tests/sql/suites/pg/pg_like_cast.sql b/ydb/library/yql/tests/sql/suites/pg/pg_like_cast.sql
new file mode 100644
index 000000000000..998a6c651452
--- /dev/null
+++ b/ydb/library/yql/tests/sql/suites/pg/pg_like_cast.sql
@@ -0,0 +1,3 @@
+--!syntax_pg
+SELECT count(*) FROM pg_class WHERE relkind='i' AND relname LIKE 'guid%';
+
diff --git a/ydb/library/yql/tests/sql/yt_native_file/part13/canondata/result.json b/ydb/library/yql/tests/sql/yt_native_file/part13/canondata/result.json
index 645bf82fc827..4776678a62d6 100644
--- a/ydb/library/yql/tests/sql/yt_native_file/part13/canondata/result.json
+++ b/ydb/library/yql/tests/sql/yt_native_file/part13/canondata/result.json
@@ -1758,6 +1758,27 @@
             "uri": "https://{canondata_backend}/212715/e1bc1d6e31fa656365a738e65224a7c3f774bae6/resource.tar.gz#test.test_pg-pg_in_dict_key_with_stable_pickle-default.txt-Results_/results.txt"
         }
     ],
+    "test.test[pg-pg_like_cast-default.txt-Debug]": [
+        {
+            "checksum": "b618d9b6d039fdc02115a7de5b566c34",
+            "size": 1523,
+            "uri": "https://{canondata_backend}/1946324/7e45ed1a689a805f3b1fc3a99f2ee1fafd329189/resource.tar.gz#test.test_pg-pg_like_cast-default.txt-Debug_/opt.yql"
+        }
+    ],
+    "test.test[pg-pg_like_cast-default.txt-Plan]": [
+        {
+            "checksum": "c1f2d837c3623c81dd596a9877913fb8",
+            "size": 948,
+            "uri": "https://{canondata_backend}/1946324/7e45ed1a689a805f3b1fc3a99f2ee1fafd329189/resource.tar.gz#test.test_pg-pg_like_cast-default.txt-Plan_/plan.txt"
+        }
+    ],
+    "test.test[pg-pg_like_cast-default.txt-Results]": [
+        {
+            "checksum": "6e366853b97b2a461c3625148215d73d",
+            "size": 660,
+            "uri": "https://{canondata_backend}/1946324/7e45ed1a689a805f3b1fc3a99f2ee1fafd329189/resource.tar.gz#test.test_pg-pg_like_cast-default.txt-Results_/results.txt"
+        }
+    ],
     "test.test[pg-select_columnref2-default.txt-Debug]": [
         {
             "checksum": "150fedc013ab1b6ab49629652df5c6ef",
