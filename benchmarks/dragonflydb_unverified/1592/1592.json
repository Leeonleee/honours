{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 1592,
  "instance_id": "dragonflydb__dragonfly-1592",
  "issue_numbers": [
    "1545"
  ],
  "base_commit": "f2fc35e3404d3677b9423bbfd3d22aec31c10fd6",
  "patch": "diff --git a/src/server/zset_family.cc b/src/server/zset_family.cc\nindex 03ee4a265f87..f7ce1faea781 100644\n--- a/src/server/zset_family.cc\n+++ b/src/server/zset_family.cc\n@@ -2396,37 +2396,61 @@ OpResult<MScoreResponse> ZSetFamily::ZGetMembers(CmdArgList args, ConnectionCont\n void ZSetFamily::GeoAdd(CmdArgList args, ConnectionContext* cntx) {\n   string_view key = ArgS(args, 0);\n \n-  // TODO: to handle options and multiple elements\n   ZParams zparams;\n+  size_t i = 1;\n+  for (; i < args.size(); ++i) {\n+    ToUpper(&args[i]);\n \n-  string_view longitude = ArgS(args, 1);\n-  string_view latitude = ArgS(args, 2);\n-  string_view member = ArgS(args, 3);\n+    string_view cur_arg = ArgS(args, i);\n \n-  // TODO: to remove this check once the TODO above is handled.\n-  if (args.size() != 4) {\n-    return (*cntx)->SendError(kSyntaxErr);\n+    if (cur_arg == \"XX\") {\n+      zparams.flags |= ZADD_IN_XX;  // update only\n+    } else if (cur_arg == \"NX\") {\n+      zparams.flags |= ZADD_IN_NX;  // add new only.\n+    } else if (cur_arg == \"CH\") {\n+      zparams.ch = true;\n+    } else {\n+      break;\n+    }\n   }\n \n-  // TODO: the code handles only a single tripple of long,lat,member.\n-  //       it has to be extended to handle multiple elements.\n-  pair<double, double> longlat;\n-  for (int i = 0; i < 1; i++) {\n+  args.remove_prefix(i);\n+  if (args.empty() || args.size() % 3 != 0) {\n+    (*cntx)->SendError(kSyntaxErr);\n+    return;\n+  }\n+\n+  if ((zparams.flags & ZADD_IN_NX) && (zparams.flags & ZADD_IN_XX)) {\n+    (*cntx)->SendError(kNxXxErr);\n+    return;\n+  }\n+\n+  absl::InlinedVector<ScoredMemberView, 4> members;\n+  for (i = 0; i < args.size(); i += 3) {\n+    string_view longitude = ArgS(args, i);\n+    string_view latitude = ArgS(args, i + 1);\n+    string_view member = ArgS(args, i + 2);\n+\n+    pair<double, double> longlat;\n+\n     if (!ParseLongLat(longitude, latitude, &longlat)) {\n-      string err = absl::StrCat(\"-ERR invalid longitude,latitude pair \", longitude, \",\", latitude);\n+      string err = absl::StrCat(\"-ERR invalid longitude,latitude pair \", longitude, \",\", latitude,\n+                                \",\", member);\n \n       return (*cntx)->SendError(err, kSyntaxErrType);\n     }\n-  }\n \n-  /* Turn the coordinates into the score of the element. */\n-  GeoHashBits hash;\n-  geohashEncodeWGS84(longlat.first, longlat.second, GEO_STEP_MAX, &hash);\n-  GeoHashFix52Bits bits = geohashAlign52Bits(hash);\n+    /* Turn the coordinates into the score of the element. */\n+    GeoHashBits hash;\n+    geohashEncodeWGS84(longlat.first, longlat.second, GEO_STEP_MAX, &hash);\n+    GeoHashFix52Bits bits = geohashAlign52Bits(hash);\n \n-  absl::InlinedVector<ScoredMemberView, 4> members;\n-  members.emplace_back(bits, member);\n-  ZAddGeneric(key, zparams, absl::Span{members.data(), members.size()}, cntx);\n+    members.emplace_back(bits, member);\n+  }\n+  DCHECK(cntx->transaction);\n+\n+  absl::Span memb_sp{members.data(), members.size()};\n+  ZAddGeneric(key, zparams, memb_sp, cntx);\n }\n \n void ZSetFamily::GeoHash(CmdArgList args, ConnectionContext* cntx) {\n",
  "test_patch": "diff --git a/src/server/zset_family_test.cc b/src/server/zset_family_test.cc\nindex 5e5e1c0f4900..3072ea4b3476 100644\n--- a/src/server/zset_family_test.cc\n+++ b/src/server/zset_family_test.cc\n@@ -646,13 +646,61 @@ TEST_F(ZSetFamilyTest, ZDiff) {\n }\n \n TEST_F(ZSetFamilyTest, GeoAdd) {\n-  EXPECT_EQ(1, CheckedInt({\"geoadd\", \"Sicily\", \"13.361389\", \"38.115556\", \"Palermo\"}));\n-  EXPECT_EQ(1, CheckedInt({\"geoadd\", \"Sicily\", \"15.087269\", \"37.502669\", \"Catania\"}));\n-  EXPECT_EQ(0, CheckedInt({\"geoadd\", \"Sicily\", \"15.087269\", \"37.502669\", \"Catania\"}));\n+  EXPECT_EQ(2, CheckedInt({\"geoadd\", \"Sicily\", \"13.361389\", \"38.115556\", \"Palermo\", \"15.087269\",\n+                           \"37.502669\", \"Catania\"}));\n+  EXPECT_EQ(0, CheckedInt({\"geoadd\", \"Sicily\", \"13.361389\", \"38.115556\", \"Palermo\", \"15.087269\",\n+                           \"37.502669\", \"Catania\"}));\n   auto resp = Run({\"geohash\", \"Sicily\", \"Palermo\", \"Catania\"});\n   EXPECT_THAT(resp, RespArray(ElementsAre(\"sqc8b49rny0\", \"sqdtr74hyu0\")));\n }\n \n+TEST_F(ZSetFamilyTest, GeoAddOptions) {\n+  EXPECT_EQ(2, CheckedInt({\"geoadd\", \"Sicily\", \"13.361389\", \"38.115556\", \"Palermo\", \"15.087269\",\n+                           \"37.502669\", \"Catania\"}));\n+\n+  // add 1 + update 1 + XX\n+  EXPECT_EQ(0, CheckedInt({\"geoadd\", \"Sicily\", \"XX\", \"15.361389\", \"38.115556\", \"Palermo\",\n+                           \"15.554167\", \"38.193611\", \"Messina\"}));\n+  auto resp = Run({\"geopos\", \"Sicily\", \"Palermo\", \"Messina\"});\n+  EXPECT_THAT(\n+      resp, RespArray(ElementsAre(RespArray(ElementsAre(\"15.361389219760895\", \"38.1155563954963\")),\n+                                  ArgType(RespExpr::NIL))));\n+\n+  // add 1 + update 1 + NX\n+  EXPECT_EQ(1, CheckedInt({\"geoadd\", \"Sicily\", \"NX\", \"18.361389\", \"38.115556\", \"Palermo\", \"15.2875\",\n+                           \"37.069167\", \"Syracuse\"}));\n+  resp = Run({\"geopos\", \"Sicily\", \"Palermo\", \"Syracuse\"});\n+  EXPECT_THAT(resp, RespArray(ElementsAre(\n+                        RespArray(ElementsAre(\"15.361389219760895\", \"38.1155563954963\")),\n+                        RespArray(ElementsAre(\"15.287499725818634\", \"37.06916773705567\")))));\n+\n+  // add 1 + update 1 CH\n+  EXPECT_EQ(2, CheckedInt({\"geoadd\", \"Sicily\", \"CH\", \"18.361389\", \"38.115556\", \"Palermo\",\n+                           \"12.434167\", \"37.798056\", \"Marsala\"}));\n+  resp = Run({\"geopos\", \"Sicily\", \"Palermo\", \"Marsala\"});\n+  EXPECT_THAT(resp, RespArray(ElementsAre(\n+                        RespArray(ElementsAre(\"18.361386358737946\", \"38.1155563954963\")),\n+                        RespArray(ElementsAre(\"12.43416577577591\", \"37.7980572230775\")))));\n+\n+  // update 1 + CH + XX\n+  EXPECT_EQ(1, CheckedInt({\"geoadd\", \"Sicily\", \"CH\", \"XX\", \"10.361389\", \"38.115556\", \"Palermo\"}));\n+  resp = Run({\"geopos\", \"Sicily\", \"Palermo\"});\n+  EXPECT_THAT(resp, RespArray(ElementsAre(\"10.361386835575104\", \"38.1155563954963\")));\n+\n+  // add 1 + CH + NX\n+  EXPECT_EQ(1, CheckedInt({\"geoadd\", \"Sicily\", \"CH\", \"NX\", \"14.25\", \"37.066667\", \"Gela\"}));\n+  resp = Run({\"geopos\", \"Sicily\", \"Gela\"});\n+  EXPECT_THAT(resp, RespArray(ElementsAre(\"14.249999821186066\", \"37.06666596727141\")));\n+\n+  // add 1 + XX + NX\n+  resp = Run({\"geoadd\", \"Sicily\", \"XX\", \"NX\", \"14.75\", \"36.933333\", \"Ragusa\"});\n+  EXPECT_THAT(resp, ErrArg(\"XX and NX options at the same time are not compatible\"));\n+\n+  // incorrect number of args\n+  resp = Run({\"geoadd\", \"Sicily\", \"14.75\", \"36.933333\", \"Ragusa\", \"10.23\"});\n+  EXPECT_THAT(resp, ErrArg(\"syntax error\"));\n+}\n+\n TEST_F(ZSetFamilyTest, GeoPos) {\n   EXPECT_EQ(1, CheckedInt({\"geoadd\", \"Sicily\", \"13.361389\", \"38.115556\", \"Palermo\"}));\n   auto resp = Run({\"geopos\", \"Sicily\", \"Palermo\", \"NonExisting\"});\n",
  "problem_statement": "Add GEOADD support\nOnce #1543 is submitted there still some unimplemented functionalities l(options, multiple members)  that need to be completed\n",
  "hints_text": "Hi @romange , I would like to take this issue :) Could you provide some guidance? I saw you left some `todo`s, should I follow them? Is there anything else I should know?\nGladly! \r\nCurrently geoadd has limited functionality - it does not support multiple locations and does not support options.\r\nPlease check out other commands to see how we parse options. Also, TODOs hint you where code changes needed. \r\nPlease ping @chakaz  if you have any issues :)\n@yoelsherwin  feel free to take GEODIST issue too :). ",
  "created_at": "2023-07-27T10:19:38Z",
  "modified_files": [
    "src/server/zset_family.cc"
  ],
  "modified_test_files": [
    "src/server/zset_family_test.cc"
  ]
}