diff --git a/src/server/zset_family_test.cc b/src/server/zset_family_test.cc
index a17ca5be9bc8..e205bb0a5ff1 100644
--- a/src/server/zset_family_test.cc
+++ b/src/server/zset_family_test.cc
@@ -421,6 +421,32 @@ TEST_F(ZSetFamilyTest, ZInterStore) {
   EXPECT_EQ(1, CheckedInt({"zinterstore", "a", "2", "z1", "z2"}));
   resp = Run({"zrange", "a", "0", "-1", "withscores"});
   EXPECT_THAT(resp.GetVec(), ElementsAre("b", "4"));
+
+  // support for sets
+  EXPECT_EQ(2, CheckedInt({"sadd", "s2", "b", "c"}));
+  EXPECT_EQ(1, CheckedInt({"zinterstore", "b", "2", "z1", "s2"}));
+  resp = Run({"zrange", "b", "0", "-1", "withscores"});
+  EXPECT_THAT(resp.GetVec(), ElementsAre("b", "3"));
+}
+
+TEST_F(ZSetFamilyTest, ZInterCard) {
+  EXPECT_EQ(3, CheckedInt({"zadd", "z1", "1", "a", "2", "b", "3", "c"}));
+  EXPECT_EQ(3, CheckedInt({"zadd", "z2", "2", "b", "3", "c", "4", "d"}));
+  RespExpr resp;
+
+  EXPECT_EQ(2, CheckedInt({"zintercard", "2", "z1", "z2"}));
+  EXPECT_EQ(1, CheckedInt({"zintercard", "2", "z1", "z2", "LIMIT", "1"}));
+
+  resp = Run({"zintercard", "2", "z1", "z2", "LIM"});
+  EXPECT_THAT(resp, ErrArg("syntax error"));
+  resp = Run({"zintercard", "2", "z1", "z2", "LIMIT"});
+  EXPECT_THAT(resp, ErrArg("syntax error"));
+  resp = Run({"zintercard", "2", "z1", "z2", "LIMIT", "a"});
+  EXPECT_THAT(resp, ErrArg("limit value is not a positive integer"));
+
+  // support for sets
+  EXPECT_EQ(3, CheckedInt({"sadd", "s2", "b", "c", "d"}));
+  EXPECT_EQ(2, CheckedInt({"zintercard", "2", "z1", "s2"}));
 }
 
 TEST_F(ZSetFamilyTest, ZAddBug148) {
