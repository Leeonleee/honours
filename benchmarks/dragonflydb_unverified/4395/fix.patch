diff --git a/src/server/db_slice.cc b/src/server/db_slice.cc
index 5b6661616ef3..d765caf5cb5d 100644
--- a/src/server/db_slice.cc
+++ b/src/server/db_slice.cc
@@ -1479,9 +1479,13 @@ void DbSlice::PerformDeletion(Iterator del_it, ExpIterator exp_it, DbTable* tabl
   }
 
   DbTableStats& stats = table->stats;
-  const PrimeValue& pv = del_it->second;
+  PrimeValue& pv = del_it->second;
 
-  if (pv.IsExternal() && shard_owner()->tiered_storage()) {
+  if (pv.HasStashPending()) {
+    string scratch;
+    string_view key = del_it->first.GetSlice(&scratch);
+    shard_owner()->tiered_storage()->CancelStash(table->index, key, &pv);
+  } else if (pv.IsExternal()) {
     shard_owner()->tiered_storage()->Delete(table->index, &del_it->second);
   }
 
diff --git a/src/server/dfly_bench.cc b/src/server/dfly_bench.cc
index 8d0d974a7222..8d2093a1cc79 100644
--- a/src/server/dfly_bench.cc
+++ b/src/server/dfly_bench.cc
@@ -487,7 +487,7 @@ void Driver::ParseRESP() {
       PopRequest();
     }
     io_buf_.ConsumeInput(consumed);
-  } while (result == RedisParser::OK);
+  } while (result == RedisParser::OK && io_buf_.InputLen() > 0);
 }
 
 void Driver::ParseMC() {
diff --git a/src/server/tiered_storage.cc b/src/server/tiered_storage.cc
index eb323aab9c84..181320825057 100644
--- a/src/server/tiered_storage.cc
+++ b/src/server/tiered_storage.cc
@@ -391,7 +391,7 @@ bool TieredStorage::TryStash(DbIndex dbid, string_view key, PrimeValue* value) {
     return false;
 
   // This invariant should always hold because ShouldStash tests for IoPending flag.
-  DCHECK(!bins_->IsPending(dbid, key));
+  CHECK(!bins_->IsPending(dbid, key));
 
   // TODO: When we are low on memory we should introduce a back-pressure, to avoid OOMs
   // with a lot of underutilized disk space.
