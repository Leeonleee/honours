{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 4395,
  "instance_id": "dragonflydb__dragonfly-4395",
  "issue_numbers": [
    "4387"
  ],
  "base_commit": "0832d23f13c8a49582f266e2851938cc6f12f96d",
  "patch": "diff --git a/src/server/db_slice.cc b/src/server/db_slice.cc\nindex 5b6661616ef3..d765caf5cb5d 100644\n--- a/src/server/db_slice.cc\n+++ b/src/server/db_slice.cc\n@@ -1479,9 +1479,13 @@ void DbSlice::PerformDeletion(Iterator del_it, ExpIterator exp_it, DbTable* tabl\n   }\n \n   DbTableStats& stats = table->stats;\n-  const PrimeValue& pv = del_it->second;\n+  PrimeValue& pv = del_it->second;\n \n-  if (pv.IsExternal() && shard_owner()->tiered_storage()) {\n+  if (pv.HasStashPending()) {\n+    string scratch;\n+    string_view key = del_it->first.GetSlice(&scratch);\n+    shard_owner()->tiered_storage()->CancelStash(table->index, key, &pv);\n+  } else if (pv.IsExternal()) {\n     shard_owner()->tiered_storage()->Delete(table->index, &del_it->second);\n   }\n \ndiff --git a/src/server/dfly_bench.cc b/src/server/dfly_bench.cc\nindex 8d0d974a7222..8d2093a1cc79 100644\n--- a/src/server/dfly_bench.cc\n+++ b/src/server/dfly_bench.cc\n@@ -487,7 +487,7 @@ void Driver::ParseRESP() {\n       PopRequest();\n     }\n     io_buf_.ConsumeInput(consumed);\n-  } while (result == RedisParser::OK);\n+  } while (result == RedisParser::OK && io_buf_.InputLen() > 0);\n }\n \n void Driver::ParseMC() {\ndiff --git a/src/server/tiered_storage.cc b/src/server/tiered_storage.cc\nindex eb323aab9c84..181320825057 100644\n--- a/src/server/tiered_storage.cc\n+++ b/src/server/tiered_storage.cc\n@@ -391,7 +391,7 @@ bool TieredStorage::TryStash(DbIndex dbid, string_view key, PrimeValue* value) {\n     return false;\n \n   // This invariant should always hold because ShouldStash tests for IoPending flag.\n-  DCHECK(!bins_->IsPending(dbid, key));\n+  CHECK(!bins_->IsPending(dbid, key));\n \n   // TODO: When we are low on memory we should introduce a back-pressure, to avoid OOMs\n   // with a lot of underutilized disk space.\n",
  "test_patch": "diff --git a/src/server/tiered_storage_test.cc b/src/server/tiered_storage_test.cc\nindex 038d72e9c9c0..cb13032bb1b3 100644\n--- a/src/server/tiered_storage_test.cc\n+++ b/src/server/tiered_storage_test.cc\n@@ -317,4 +317,13 @@ TEST_F(TieredStorageTest, MemoryPressure) {\n   EXPECT_LT(used_mem_peak.load(), 20_MB);\n }\n \n+TEST_F(TieredStorageTest, Expiry) {\n+  string val = BuildString(100);\n+  Run({\"psetex\", \"key1\", \"1\", val});\n+  AdvanceTime(10);\n+  Run({\"psetex\", \"key1\", \"1\", val});\n+  auto resp = Run({\"get\", \"key1\"});\n+  EXPECT_EQ(resp, val);\n+}\n+\n }  // namespace dfly\n",
  "problem_statement": "crash in tiered code\nconfiguration:\r\n```yml\r\nredis:\r\n  image: 'docker.dragonflydb.io/dragonflydb/dragonfly'\r\n  ulimits:\r\n    memlock: -1\r\n  volumes:\r\n    - dragonflydata:/data\r\n  command: [\r\n    \"--port\", \"6379\",\r\n    \"--requirepass\", \"password\",\r\n    \"--maxmemory\", \"8G\",\r\n    \"--cache_mode=true\",\r\n    \"--tiered_prefix=/data/tiered\",\r\n  ]\r\n```\r\n\r\n`2024-12-29 06:44:40 F20241229 05:44:40.774821    11 externalalloc.cc:372] Check failed: idx < segments.size() (1 vs. 1)`\r\n\r\n\r\nalso \r\n\r\n[message (14).txt](https://github.com/user-attachments/files/18276060/message.14.txt)\r\n[message (13).txt](https://github.com/user-attachments/files/18276061/message.13.txt)\r\n\n",
  "hints_text": "",
  "created_at": "2025-01-02T10:47:47Z",
  "modified_files": [
    "src/server/db_slice.cc",
    "src/server/dfly_bench.cc",
    "src/server/tiered_storage.cc"
  ],
  "modified_test_files": [
    "src/server/tiered_storage_test.cc"
  ]
}