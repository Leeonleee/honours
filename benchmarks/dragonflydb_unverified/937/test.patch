diff --git a/tests/README.md b/tests/README.md
index dbb8af28f669..9a5151313abe 100644
--- a/tests/README.md
+++ b/tests/README.md
@@ -18,6 +18,11 @@ You can override the location of the binary using `DRAGONFLY_PATH` environment v
 - use `--df arg=val` to pass custom arguments to all dragonfly instances. Can be used multiple times.
 - use `--log-seeder file` to store all single-db commands from the lastest tests seeder inside file.
 
+for example,
+
+```sh
+pytest dragonfly/connection_test.py -s  --df logtostdout --df vmodule=dragonfly_connection=2 -k test_subscribe
+```
 ### Before you start
 Please make sure that you have python 3 installed on you local host.
 If have more both python 2 and python 3 installed on you host, you can run the tests with the following command:
diff --git a/tests/dragonfly/connection_test.py b/tests/dragonfly/connection_test.py
index ffc014e4a01e..406947edc34f 100644
--- a/tests/dragonfly/connection_test.py
+++ b/tests/dragonfly/connection_test.py
@@ -174,8 +174,8 @@ async def reader(channel: aioredis.client.PubSub, messages, max: int):
     return True, "success"
 
 
-async def run_pipeline_mode(async_client, messages):
-    pipe = async_client.pipeline()
+async def run_pipeline_mode(async_client: aioredis.Redis, messages):
+    pipe = async_client.pipeline(transaction=False)
     for key, val in messages.items():
         pipe.set(key, val)
     result = await pipe.execute()
@@ -327,3 +327,9 @@ async def test_big_command(df_server, size=8 * 1024):
 
     writer.close()
     await writer.wait_closed()
+
+@pytest.mark.asyncio
+async def test_subscribe_pipelined(async_client: aioredis.Redis):
+    pipe = async_client.pipeline(transaction=False)
+    pipe.execute_command('subscribe channel').execute_command('subscribe channel')
+    await pipe.echo('bye bye').execute()
