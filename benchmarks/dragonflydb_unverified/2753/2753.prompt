You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
master_id (runid) should protect from accidental master restarts
Currently we use master_id for two purposes: cluster node id generation and as "master id" during the replication.

1. Similarly to Redis, we do not protect slave from accidental data flushes during full sync (see http://antirez.com/news/80 for context)
2. Unlike Redis we currently do not employ partial sync where such protection exists

Not directly related to this issue but important for providing additional context - using master_id as nodeid for cluster management is cumbersome and confusing.

I suggest we implement master_id protection so that replica that had been synced already and reached SSR with the master id A, won't reconnect automatically with master under the same address with master id B.  Specifically, one would need to reissue "replicaof .." command again to bootstrap the replication again.

This behavior change on replica side should be under flag with default to preserve the current behaviour.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
