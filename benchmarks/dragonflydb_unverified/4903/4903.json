{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 4903,
  "instance_id": "dragonflydb__dragonfly-4903",
  "issue_numbers": [
    "4894"
  ],
  "base_commit": "2d96a57edf8046850f29bf0264e89829929d57b8",
  "patch": "diff --git a/src/server/set_family.cc b/src/server/set_family.cc\nindex 0b9c0de3bee6..f270b8ce97dc 100644\n--- a/src/server/set_family.cc\n+++ b/src/server/set_family.cc\n@@ -1567,7 +1567,9 @@ vector<long> SetFamily::SetFieldsExpireTime(const OpArgs& op_args, uint32_t ttl_\n     pv->InitRobj(OBJ_SET, kEncodingStrMap2, ss);\n   }\n \n-  return ExpireElements((StringSet*)pv->RObjPtr(), values, ttl_sec);\n+  auto ss = static_cast<StringSet*>(pv->RObjPtr());\n+  ss->set_time(MemberTimeSeconds(op_args.db_cntx.time_now_ms));\n+  return ExpireElements(ss, values, ttl_sec);\n }\n \n }  // namespace dfly\n",
  "test_patch": "diff --git a/src/server/generic_family_test.cc b/src/server/generic_family_test.cc\nindex 7052fefe67d3..ed6587795618 100644\n--- a/src/server/generic_family_test.cc\n+++ b/src/server/generic_family_test.cc\n@@ -848,8 +848,10 @@ TEST_F(GenericFamilyTest, JsonType) {\n \n TEST_F(GenericFamilyTest, FieldExpireSet) {\n   Run({\"SADD\", \"key\", \"a\", \"b\", \"c\"});\n+  AdvanceTime(2'000);\n   EXPECT_THAT(Run({\"FIELDEXPIRE\", \"key\", \"10\", \"a\", \"b\", \"c\"}),\n               RespArray(ElementsAre(IntArg(1), IntArg(1), IntArg(1))));\n+  EXPECT_EQ(10, CheckedInt({\"fieldttl\", \"key\", \"a\"}));\n   AdvanceTime(10'000);\n   EXPECT_THAT(Run({\"SMEMBERS\", \"key\"}), RespArray(ElementsAre()));\n }\n@@ -858,8 +860,10 @@ TEST_F(GenericFamilyTest, FieldExpireHset) {\n   for (int i = 0; i < 3; ++i) {\n     EXPECT_EQ(CheckedInt({\"HSET\", \"key\", absl::StrCat(\"k\", i), \"v\"}), 1);\n   }\n+  AdvanceTime(2'000);\n   EXPECT_THAT(Run({\"FIELDEXPIRE\", \"key\", \"10\", \"k0\", \"k1\", \"k2\"}),\n               RespArray(ElementsAre(IntArg(1), IntArg(1), IntArg(1))));\n+  EXPECT_EQ(10, CheckedInt({\"fieldttl\", \"key\", \"k0\"}));\n   AdvanceTime(10'000);\n   EXPECT_THAT(Run({\"HGETALL\", \"key\"}), RespArray(ElementsAre()));\n }\n",
  "problem_statement": "FIELDEXPIRE on sets results in a random TTL\nRunning immediately after each other on a **set** the following commands resulted in TTL of **37** not **48**:\n```\nSADD myset field1 field2 field3\n(integer) 3\nFIELDEXPIRE myset 50 field1\n(integer) 1\nFIELDTTL myset field1\n(integer) 37\n```\nThis is random, sometimes the TTL is **43**, and sometimes **47** , If TTL was set to **10**, the field expires sometimes in 1 second.\n\nI followed by trying on a **hashset** and result were as expected both using FIELDEXPIRE and HEXPIRE the following:\n```\nHSET myhash field1 \"hello\" field2 \"world\" field3 \"test\"\n(integer) 3\nFIELDEXPIRE myhash 50 field3\n(integer) 1\nFIELDTTL myhash field3\n(integer) 49\n```\n```\nHSET myhash field1 \"hello\" field2 \"world\" field3 \"test\"\n(integer) 3\nHEXPIRE myhash 50 FIELDS 1 field3\n(integer) 1\nFIELDTTL myhash field3\n(integer) 49\n```\n\n**Environment:**\n - Containerized:  Docker Compose image using `docker.dragonflydb.io/dragonflydb/dragonfly`\n   - dragonfly v1.28.1-a87fe66d1a7654b8f2ee2b7fe27687d582230888\n   - build time: 2025-03-27 15:04:21\n\n\n",
  "hints_text": "Hi @karemont thank you for report. We'll look into it.",
  "created_at": "2025-04-08T12:49:44Z",
  "modified_files": [
    "src/server/set_family.cc"
  ],
  "modified_test_files": [
    "src/server/generic_family_test.cc"
  ]
}