{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 3452,
  "instance_id": "dragonflydb__dragonfly-3452",
  "issue_numbers": [
    "3424"
  ],
  "base_commit": "e482eefcbb1c8637cf1c8f3126528cad218738ef",
  "patch": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nindex 90b2183172ed..6a1f0e0fc27d 100644\n--- a/.github/workflows/ci.yml\n+++ b/.github/workflows/ci.yml\n@@ -48,7 +48,6 @@ jobs:\n             cxx_flags: \"\"\n \n     runs-on: ubuntu-latest\n-    timeout-minutes: 60\n     env:\n       SCCACHE_GHA_ENABLED: \"true\"\n       SCCACHE_CACHE_SIZE: 6G\n@@ -119,7 +118,6 @@ jobs:\n           df -h\n           echo \"-----------------------------\"\n           ninja src/all\n-\n       - name: PostFail\n         if: failure()\n         run: |\n@@ -130,7 +128,7 @@ jobs:\n         run: |\n           cd ${GITHUB_WORKSPACE}/build\n           echo Run ctest -V -L DFLY\n-          GLOG_alsologtostderr=1 GLOG_vmodule=rdb_load=1,rdb_save=1,snapshot=1 ctest -V -L DFLY\n+          GLOG_alsologtostderr=1 GLOG_vmodule=rdb_load=1,rdb_save=1,snapshot=1 timeout 20m ctest -V -L DFLY\n \n           echo \"Running tests with --force_epoll\"\n \n@@ -143,20 +141,20 @@ jobs:\n           EOF\n \n           gdb -ix ./init.gdb --batch -ex r --args ./dragonfly_test --force_epoll\n-          FLAGS_force_epoll=true GLOG_vmodule=rdb_load=1,rdb_save=1,snapshot=1 ctest -V -L DFLY\n+          FLAGS_force_epoll=true GLOG_vmodule=rdb_load=1,rdb_save=1,snapshot=1 timeout 20m ctest -V -L DFLY\n \n           echo \"Finished running tests with --force_epoll\"\n \n           echo \"Running tests with --cluster_mode=emulated\"\n-          FLAGS_cluster_mode=emulated ctest -V -L DFLY\n+          FLAGS_cluster_mode=emulated timeout 20m ctest -V -L DFLY\n \n           echo \"Running tests with both --cluster_mode=emulated & --lock_on_hashtags\"\n-          FLAGS_cluster_mode=emulated FLAGS_lock_on_hashtags=true ctest -V -L DFLY\n+          FLAGS_cluster_mode=emulated FLAGS_lock_on_hashtags=true timeout 20m ctest -V -L DFLY\n \n-          ./dragonfly_test\n-          ./multi_test --multi_exec_mode=1\n-          ./multi_test --multi_exec_mode=3\n-          ./json_family_test --jsonpathv2=false\n+          timeout 5m ./dragonfly_test\n+          timeout 5m ./multi_test --multi_exec_mode=1\n+          timeout 5m ./multi_test --multi_exec_mode=3\n+          timeout 5m ./json_family_test --jsonpathv2=false\n \n       - name: Upload unit logs on failure\n         if: failure()\n",
  "test_patch": "diff --git a/.github/actions/regression-tests/action.yml b/.github/actions/regression-tests/action.yml\nindex 5d8d001df6c5..888201b10415 100644\n--- a/.github/actions/regression-tests/action.yml\n+++ b/.github/actions/regression-tests/action.yml\n@@ -41,7 +41,12 @@ runs:\n \n         # timeout returns 124 if we exceeded the timeout duration\n         if [[ $code -eq 124 ]]; then\n-          echo \"TIMEDOUT=1\">> \"$GITHUB_OUTPUT\";\n+          echo \"\ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1\"\n+          echo \"\ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 TESTS TIMEDOUT \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1\"\n+          echo \"\ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1\"\n+          # Copy the last log file because we timedout and pytest did not copy it over\n+          # the /tmp/failed/ folder\n+          cat /tmp/last_test_log_dir.txt | xargs -I {} mv {}/ /tmp/failed/\n           exit 1\n         fi\n \n@@ -50,26 +55,6 @@ runs:\n           exit 1\n         fi\n \n-    - name: Print last log on timeout\n-      if: failure()\n-      shell: bash\n-      env:\n-        TIMEDOUT_STEP_1: ${{ steps.first.outputs.TIMEDOUT }}\n-        TIMEDOUT_STEP_2: ${{ steps.second.outputs.TIMEDOUT }}\n-      run: |\n-        if [[ \"${{ env.TIMEDOUT_STEP_1 }}\" -eq 1 ]] || [[ \"${{ env.TIMEDOUT_STEP_2 }}\" -eq 1 ]]; then\n-          echo \"\ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1\"\n-          echo \"\ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 TESTS TIMEDOUT \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1\"\n-          echo \"\ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1 \ud83d\uded1\"\n-\n-          # It could be the case that the first test failed and the folder was not created. We need mkdir\n-          # therefore so plz do not remove\n-          mkdir /tmp/failed\n-          # Copy over the logs of the test that timedout. We need this because the exception/failure\n-          # handlers do not run when the shell command TIMEOUT sends a SIGTERM to terminate the pytest process.\n-          cat /tmp/last_test_log_dir.txt | xargs -I {} cp -r {}/ /tmp/failed/\n-        fi\n-\n     - name: Send notification on failure\n       if: failure() && github.ref == 'refs/heads/main'\n       shell: bash\ndiff --git a/tests/dragonfly/conftest.py b/tests/dragonfly/conftest.py\nindex e5fe89d82f90..9e061b464983 100644\n--- a/tests/dragonfly/conftest.py\n+++ b/tests/dragonfly/conftest.py\n@@ -30,6 +30,7 @@\n DATABASE_INDEX = 0\n BASE_LOG_DIR = \"/tmp/dragonfly_logs/\"\n FAILED_PATH = \"/tmp/failed/\"\n+LAST_LOGS = \"/tmp/last_test_log_dir.txt\"\n \n \n # runs on pytest start\n@@ -56,7 +57,7 @@ def pytest_runtest_setup(item):\n     item.log_dir = test_dir\n \n     # needs for action.yml to get logs if timedout is happen for test\n-    last_logs = open(\"/tmp/last_test_log_dir.txt\", \"w\")\n+    last_logs = open(LAST_LOGS, \"w\")\n     last_logs.write(test_dir)\n     last_logs.close()\n \n@@ -378,6 +379,9 @@ def copy_failed_logs(log_dir, report):\n             logging.error(f\"\ud83e\udeb5\ud83e\udeb5\ud83e\udeb5\ud83e\udeb5\ud83e\udeb5\ud83e\udeb5 {file} \ud83e\udeb5\ud83e\udeb5\ud83e\udeb5\ud83e\udeb5\ud83e\udeb5\ud83e\udeb5\")\n             shutil.copy(file, test_failed_path)\n \n+    # Clean up\n+    os.remove(LAST_LOGS)\n+\n \n # tests results we get on the \"call\" state\n # but we can not copy logs until \"teardown\" state because the server isn't stoped\n",
  "problem_statement": "No logs uploaded on timeout (CI)\nSee https://github.com/dragonflydb/dragonfly/actions/runs/10195266076\n",
  "hints_text": "https://github.com/dragonflydb/dragonfly/actions/runs/10207542646/job/28242494705",
  "created_at": "2024-08-05T15:53:20Z",
  "modified_files": [
    ".github/workflows/ci.yml"
  ],
  "modified_test_files": [
    ".github/actions/regression-tests/action.yml",
    "tests/dragonfly/conftest.py"
  ]
}