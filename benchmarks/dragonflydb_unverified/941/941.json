{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 941,
  "instance_id": "dragonflydb__dragonfly-941",
  "issue_numbers": [
    "923"
  ],
  "base_commit": "66b4fbd14eed1c6cc37c23d96cd9e3068e938c3b",
  "patch": "diff --git a/src/server/server_family.cc b/src/server/server_family.cc\nindex 06ac8874b613..f5bcd6261874 100644\n--- a/src/server/server_family.cc\n+++ b/src/server/server_family.cc\n@@ -83,6 +83,8 @@ using util::http::StringResponse;\n \n namespace {\n \n+const auto kRedisVersion = \"6.2.11\";\n+\n const auto kRdbWriteFlags = O_CREAT | O_WRONLY | O_TRUNC | O_CLOEXEC | O_DIRECT;\n \n using EngineFunc = void (ServerFamily::*)(CmdArgList args, ConnectionContext* cntx);\n@@ -1456,7 +1458,8 @@ void ServerFamily::Info(CmdArgList args, ConnectionContext* cntx) {\n \n     ADD_HEADER(\"# Server\");\n \n-    append(\"redis_version\", GetVersion());\n+    append(\"redis_version\", kRedisVersion);\n+    append(\"dfly_version\", GetVersion());\n     append(\"redis_mode\", \"standalone\");\n     append(\"arch_bits\", 64);\n     append(\"multiplexing_api\", multiplex_api);\n@@ -1515,7 +1518,13 @@ void ServerFamily::Info(CmdArgList args, ConnectionContext* cntx) {\n     append(\"pipeline_cache_bytes\", m.conn_stats.pipeline_cache_capacity);\n     append(\"maxmemory\", max_memory_limit);\n     append(\"maxmemory_human\", HumanReadableNumBytes(max_memory_limit));\n-    append(\"cache_mode\", GetFlag(FLAGS_cache_mode) ? \"cache\" : \"store\");\n+    if (GetFlag(FLAGS_cache_mode)) {\n+      append(\"cache_mode\", \"cache\");\n+    } else {\n+      append(\"cache_mode\", \"store\");\n+      // Compatible with redis based frameworks.\n+      append(\"maxmemory_policy\", \"noeviction\");\n+    }\n   }\n \n   if (should_enter(\"STATS\")) {\n@@ -1693,10 +1702,12 @@ void ServerFamily::Hello(CmdArgList args, ConnectionContext* cntx) {\n     }\n   }\n \n-  (*cntx)->StartArray(12);\n+  (*cntx)->StartArray(14);\n   (*cntx)->SendBulkString(\"server\");\n   (*cntx)->SendBulkString(\"redis\");\n   (*cntx)->SendBulkString(\"version\");\n+  (*cntx)->SendBulkString(kRedisVersion);\n+  (*cntx)->SendBulkString(\"dfly_version\");\n   (*cntx)->SendBulkString(GetVersion());\n   (*cntx)->SendBulkString(\"proto\");\n   (*cntx)->SendLong(2);\n",
  "test_patch": "diff --git a/src/server/dragonfly_test.cc b/src/server/dragonfly_test.cc\nindex fc3763dad7a8..54fe2e5d39e0 100644\n--- a/src/server/dragonfly_test.cc\n+++ b/src/server/dragonfly_test.cc\n@@ -222,13 +222,14 @@ TEST_F(DflyEngineTest, EvalSha) {\n \n TEST_F(DflyEngineTest, Hello) {\n   auto resp = Run({\"hello\"});\n-  ASSERT_THAT(resp, ArrLen(12));\n+  ASSERT_THAT(resp, ArrLen(14));\n   resp = Run({\"hello\", \"2\"});\n-  ASSERT_THAT(resp, ArrLen(12));\n+  ASSERT_THAT(resp, ArrLen(14));\n \n-  EXPECT_THAT(resp.GetVec(), ElementsAre(\"server\", \"redis\", \"version\", ArgType(RespExpr::STRING),\n-                                         \"proto\", IntArg(2), \"id\", ArgType(RespExpr::INT64), \"mode\",\n-                                         \"standalone\", \"role\", \"master\"));\n+  EXPECT_THAT(resp.GetVec(),\n+              ElementsAre(\"server\", \"redis\", \"version\", \"6.2.11\", \"dfly_version\",\n+                          ArgType(RespExpr::STRING), \"proto\", IntArg(2), \"id\",\n+                          ArgType(RespExpr::INT64), \"mode\", \"standalone\", \"role\", \"master\"));\n \n   // These are valid arguments to HELLO, however as they are not yet supported the implementation\n   // is degraded to 'unknown command'.\n",
  "problem_statement": "Errors Running Sidekiq with Dragonfly\n2023-03-09T14:07:47.995Z pid=533208 tid=bh04 ERROR: heartbeat: ERR invalid expire time in 'expire' command\r\nUsing large expiry value\r\nhttps://github.com/sidekiq/sidekiq/blob/main/lib/sidekiq/launcher.rb#L13\r\nWe have constexpr int64_t kMaxExpireDeadlineSec = (1u << 27) - 1;\r\n\r\nWARNING: Your Redis instance will evict Sidekiq data under heavy load.\r\nThe 'noeviction' maxmemory policy is recommended (current policy: '').\r\nSee: https://github.com/mperham/sidekiq/wiki/Using-Redis#memory\r\nhttps://github.com/sidekiq/sidekiq/blob/4c101d243e9589cd3d1a81060dac602beb1652a1/lib/sidekiq/embedded.rb#L45\r\n\r\n\r\nFor sidekiq v >=7 \r\nhttps://github.com/sidekiq/sidekiq/blob/4c101d243e9589cd3d1a81060dac602beb1652a1/lib/sidekiq/embedded.rb#L42\r\nIt won't start at all as Dragonfly doesn't specify a valid redis version number\r\n\r\nPorposed fixes:\r\n\r\nExpiry: Instead of returning error truncating large expiry value, can have a flag for that.\r\n\r\nmaxmemory_policy: list it in info compatible with redis\r\n\r\nversion: list there the max redis version we are compatible with and add dragonfly_version field\r\n\r\n\r\n\r\n\r\n\r\n\n",
  "hints_text": "expire - we can support \"5 * 365 * 24 * 60 * 60\" as well, I can make the\nchange.\n\n\nmaxmemory_policy -  agreed.\nversion - agreed.\n\n\nOn Thu, Mar 9, 2023 at 7:10\u202fPM ashotland ***@***.***> wrote:\n\n> 2023-03-09T14:07:47.995Z pid=533208 tid=bh04 ERROR: heartbeat: ERR invalid\n> expire time in 'expire' command\n> Using large expiry value\n> https://github.com/sidekiq/sidekiq/blob/main/lib/sidekiq/launcher.rb#L13\n> We have constexpr int64_t kMaxExpireDeadlineSec = (1u << 27) - 1;\n>\n> WARNING: Your Redis instance will evict Sidekiq data under heavy load.\n> The 'noeviction' maxmemory policy is recommended (current policy: '').\n> See: https://github.com/mperham/sidekiq/wiki/Using-Redis#memory\n>\n> https://github.com/sidekiq/sidekiq/blob/4c101d243e9589cd3d1a81060dac602beb1652a1/lib/sidekiq/embedded.rb#L45\n>\n> For sidekiq v >=7\n>\n> https://github.com/sidekiq/sidekiq/blob/4c101d243e9589cd3d1a81060dac602beb1652a1/lib/sidekiq/embedded.rb#L42\n> It won't start at all as Dragonfly doesn't specify a valid redis version\n> number\n>\n> Porposed fixes:\n>\n> Expiry: Instead of returning error truncating large expiry value, can have\n> a flag for that.\n>\n> maxmemory_policy: list it in info compatible with redis\n>\n> version: list there the max redis version we are compatible with and add\n> dragonfly_version field\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dragonflydb/dragonfly/issues/923>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AA4BFCEXPNJA65CDPQH3HKDW3IFINANCNFSM6AAAAAAVVMLJUY>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n",
  "created_at": "2023-03-14T12:54:58Z",
  "modified_files": [
    "src/server/server_family.cc"
  ],
  "modified_test_files": [
    "src/server/dragonfly_test.cc"
  ]
}