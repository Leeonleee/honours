diff --git a/src/server/generic_family.cc b/src/server/generic_family.cc
index a7dcc4d195a9..2ff61d28d748 100644
--- a/src/server/generic_family.cc
+++ b/src/server/generic_family.cc
@@ -723,8 +723,7 @@ void GenericFamily::Expire(CmdArgList args, ConnectionContext* cntx) {
   }
 
   if (int_arg > kMaxExpireDeadlineSec || int_arg < -kMaxExpireDeadlineSec) {
-    ToLower(&args[0]);
-    return (*cntx)->SendError(InvalidExpireTime(ArgS(args, 0)));
+    return (*cntx)->SendError(InvalidExpireTime(cntx->cid->name()));
   }
 
   int_arg = std::max(int_arg, -1L);
diff --git a/src/server/hset_family.cc b/src/server/hset_family.cc
index d42fca5cd16b..5c26d2d923d2 100644
--- a/src/server/hset_family.cc
+++ b/src/server/hset_family.cc
@@ -955,10 +955,11 @@ void HSetFamily::HScan(CmdArgList args, ConnectionContext* cntx) {
 
 void HSetFamily::HSet(CmdArgList args, ConnectionContext* cntx) {
   string_view key = ArgS(args, 0);
-  ToLower(&args[0]);
+
+  string_view cmd{cntx->cid->name()};
 
   if (args.size() % 2 != 1) {
-    return (*cntx)->SendError(facade::WrongNumArgsError("hset"), kSyntaxErrType);
+    return (*cntx)->SendError(facade::WrongNumArgsError(cmd), kSyntaxErrType);
   }
 
   args.remove_prefix(1);
@@ -967,7 +968,6 @@ void HSetFamily::HSet(CmdArgList args, ConnectionContext* cntx) {
   };
 
   OpResult<uint32_t> result = cntx->transaction->ScheduleSingleHopT(std::move(cb));
-  string_view cmd{cntx->cid->name()};
 
   if (result && cmd == "HSET") {
     (*cntx)->SendLong(*result);
diff --git a/src/server/string_family.cc b/src/server/string_family.cc
index 9d40564fcf04..885d0358cbf3 100644
--- a/src/server/string_family.cc
+++ b/src/server/string_family.cc
@@ -1092,8 +1092,7 @@ void StringFamily::SetExGeneric(bool seconds, CmdArgList args, ConnectionContext
   }
 
   if (unit_vals < 1 || unit_vals >= kMaxExpireDeadlineSec) {
-    ToLower(&args[0]);
-    return (*cntx)->SendError(InvalidExpireTime(ArgS(args, 0)));
+    return (*cntx)->SendError(InvalidExpireTime(cntx->cid->name()));
   }
 
   SetCmd::SetParams sparams;
