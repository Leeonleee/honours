You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
HSET often doesn't persist in 1.2.0
**Describe the bug**
When executing `HSET` for a not-yet-existing hash, often the result is `0` and no keys are saved.
The new Hash does exist though, but with 0 entries (which in redis is not possible, as an empty hash is equivalent to a non-existing hash)
Even if it does persist entries, the name of the Hash is lowercased.

**To Reproduce**
Steps to reproduce the behavior:
1. Insert records into a not-yet existing hash, for example like this:
   ```
   HSET MyHash:Yay field1 value1 field2 value2
   ```
2. Observe that the hash is stored as `myhash:yay` (lowercased)
3. Observe that often times, the return value is 0 and the new hash is empty

**Expected behavior**
I expect the hash to always contain the data provided to HSET, and the return-value to reflect that.
I also expect the name of the hash to be the one i provide, not a lowercased version of it.

**Environment (please complete the following information):**
 - OS: 22.04.2 LTS
 - Kernel: `Linux lindwurm 5.15.0-69-generic #76-Ubuntu SMP Fri Mar 17 17:19:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux`
 - Containerized: docker compose (Docker version 23.0.1, build a5ee5b1)
   docker-compose config:
   ```yaml
   version: '3.8'
   services:
     staging_dragonfly:
       image: 'docker.dragonflydb.io/dragonflydb/dragonfly:v1.2.0'
       restart: always
       command: 'dragonfly --logtostderr --port 26379 '
       ulimits:
         memlock: -1
       network_mode: "host"
   ```
 - Dragonfly Version: df-v1.2.0-d78a9daaeb41df6e864c86c8c7903b505551d359

**Reproducible Code Snippet**
```bash
docker compose up -d staging_dragonfly
docker compose exec staging_dragonfly redis-cli -p 26379 HSET MyHash Field1 Value1
docker compose exec staging_dragonfly redis-cli -p 26379 HGET MyHash Field1
# (nil)
docker compose exec staging_dragonfly redis-cli -p 26379 HGET myhash Field1
# "Value1"
```

**Additional context**
This issue does not happen on dragonfly version 1.1.2.

**UPDATE**
- Added detailed software versions and content of config files
- Added exact replication steps
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
