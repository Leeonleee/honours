You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
LOAD option is broken in the FT.AGGREGATE command
**Describe the bug**
Several snippets of the `FT.AGGREGATE` command do not work correct with the `LOAD` option:

Initialize:
```shell
127.0.0.1:6379> hset key:1 word item1 foo 10
(integer) 2
127.0.0.1:6379> hset key:2 word item2 foo 20
(integer) 2
127.0.0.1:6379> hset key:3 word item1 foo 30
(integer) 2
127.0.0.1:6379> ft.create index on hash schema word TAG foo NUMERIC
OK
```

1. LOAD should go before all other options, otherwise we should return an error:
```shell
127.0.0.1:6379> ft.aggregate index "*" GROUPBY 1 @word REDUCE SUM 1 @foo AS foo_total LOAD 1 foo_total
(error) LOAD cannot be applied after projectors or reducers
```

2. There may be several LOAD options at the beginning:
```shell
127.0.0.1:6379> ft.aggregate index "*" LOAD 1 @word LOAD 1 @foo
1) (integer) 1
2) 1) "word"
   2) "item1"
   3) "foo"
   4) "30"
3) 1) "word"
   2) "item2"
   3) "foo"
   4) "20"
4) 1) "word"
   2) "item1"
   3) "foo"
   4) "10"
```

3. Redis also supports the following command:
```shell
127.0.0.1:6379> ft.aggregate index "*" LOAD 1 @word GROUPBY 1 @word REDUCE SUM 1 @foo AS foo_total
1) (integer) 2
2) 1) "word"
   2) "item1"
   3) "foo_total"
   4) "40"
3) 1) "word"
   2) "item2"
   3) "foo_total"
   4) "20"
```
It still calculates the sum for the `@foo` field that has not been uploaded. ~~**But it seems to be a bug that does not match the documentation.**~~. Upd.: See #3659
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
