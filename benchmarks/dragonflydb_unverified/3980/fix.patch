diff --git a/src/core/dense_set.cc b/src/core/dense_set.cc
index f19215dd26d6..c4be03b24429 100644
--- a/src/core/dense_set.cc
+++ b/src/core/dense_set.cc
@@ -47,14 +47,16 @@ DenseSet::IteratorBase::IteratorBase(const DenseSet* owner, bool is_end)
 }
 
 void DenseSet::IteratorBase::SetExpiryTime(uint32_t ttl_sec) {
+  DensePtr* ptr = curr_entry_->IsLink() ? curr_entry_->AsLink() : curr_entry_;
+  void* src = ptr->GetObject();
   if (!HasExpiry()) {
-    auto src = curr_entry_->GetObject();
     void* new_obj = owner_->ObjectClone(src, false, true);
-    curr_entry_->SetObject(new_obj);
+    ptr->SetObject(new_obj);
     curr_entry_->SetTtl(true);
     owner_->ObjDelete(src, false);
+    src = new_obj;
   }
-  owner_->ObjUpdateExpireTime(curr_entry_->GetObject(), ttl_sec);
+  owner_->ObjUpdateExpireTime(src, ttl_sec);
 }
 
 void DenseSet::IteratorBase::Advance() {
diff --git a/src/core/dense_set.h b/src/core/dense_set.h
index ec00dc4d97e3..c4e791a6cd23 100644
--- a/src/core/dense_set.h
+++ b/src/core/dense_set.h
@@ -130,6 +130,7 @@ class DenseSet {
 
     // Sets pointer but preserves tagging info
     void SetObject(void* obj) {
+      assert(IsObject());
       ptr_ = (void*)((uptr() & kTagMask) | (uintptr_t(obj) & ~kTagMask));
     }
 
