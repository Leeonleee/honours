diff --git a/src/server/db_slice.cc b/src/server/db_slice.cc
index 9f19ba6f7a2b..43bb0d7eeaeb 100644
--- a/src/server/db_slice.cc
+++ b/src/server/db_slice.cc
@@ -830,14 +830,10 @@ bool DbSlice::UpdateExpire(DbIndex db_ind, PrimeIterator it, uint64_t at) {
 void DbSlice::SetMCFlag(DbIndex db_ind, PrimeKey key, uint32_t flag) {
   auto& db = *db_arr_[db_ind];
   if (flag == 0) {
-    if (db.mcflag.Erase(key) == 0) {
-      LOG(ERROR) << "Internal error, inconsistent state, mcflag should be present but not found "
-                 << key.ToString();
-    }
+    db.mcflag.Erase(key);
   } else {
-    auto [it, inserted] = db.mcflag.Insert(std::move(key), flag);
-    if (!inserted)
-      it->second = flag;
+    auto [it, _] = db.mcflag.Insert(std::move(key), flag);
+    it->second = flag;
   }
 }
 
diff --git a/src/server/string_family.cc b/src/server/string_family.cc
index 67d85c744ae6..0cf424d5d9df 100644
--- a/src/server/string_family.cc
+++ b/src/server/string_family.cc
@@ -655,12 +655,9 @@ OpStatus SetCmd::SetExisting(const SetParams& params, PrimeIterator it, ExpireIt
     it->first.SetSticky(true);
   }
 
-  // Check whether we need to update flags table.
-  bool req_flag_update = (params.memcache_flags != 0) != prime_value.HasFlag();
-  if (req_flag_update) {
-    prime_value.SetFlag(params.memcache_flags != 0);
-    db_slice.SetMCFlag(op_args_.db_cntx.db_index, it->first.AsRef(), params.memcache_flags);
-  }
+  // Update flags
+  prime_value.SetFlag(params.memcache_flags != 0);
+  db_slice.SetMCFlag(op_args_.db_cntx.db_index, it->first.AsRef(), params.memcache_flags);
 
   db_slice.RemoveFromTiered(it, op_args_.db_cntx.db_index);
   // overwrite existing entry.
