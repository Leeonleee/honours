{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 2132,
  "instance_id": "dragonflydb__dragonfly-2132",
  "issue_numbers": [
    "2131"
  ],
  "base_commit": "f68e1ef7e3139340e5eef13941a1c6080ed30527",
  "patch": "diff --git a/src/server/command_registry.cc b/src/server/command_registry.cc\nindex 5e3483acfd15..fc1eae083385 100644\n--- a/src/server/command_registry.cc\n+++ b/src/server/command_registry.cc\n@@ -117,7 +117,7 @@ void CommandRegistry::Init(unsigned int thread_count) {\n }\n \n CommandRegistry& CommandRegistry::operator<<(CommandId cmd) {\n-  auto k = cmd.name();\n+  string k = string(cmd.name());\n \n   absl::InlinedVector<std::string_view, 2> maybe_subcommand = StrSplit(cmd.name(), \" \");\n   const bool is_sub_command = maybe_subcommand.size() == 2;\n",
  "test_patch": "diff --git a/src/server/dragonfly_test.cc b/src/server/dragonfly_test.cc\nindex 6d10bfd39a52..8af485553ad5 100644\n--- a/src/server/dragonfly_test.cc\n+++ b/src/server/dragonfly_test.cc\n@@ -99,8 +99,9 @@ class DflyRenameCommandTest : public DflyEngineTest {\n  protected:\n   DflyRenameCommandTest() : DflyEngineTest() {\n     // rename flushall to myflushall, flushdb command will not be able to execute\n-    absl::SetFlag(&FLAGS_rename_command,\n-                  std::vector<std::string>({\"flushall=myflushall\", \"flushdb=\"}));\n+    absl::SetFlag(\n+        &FLAGS_rename_command,\n+        std::vector<std::string>({\"flushall=myflushall\", \"flushdb=\", \"ping=abcdefghijklmnop\"}));\n   }\n \n   void TearDown() {\n@@ -113,16 +114,20 @@ TEST_F(DflyRenameCommandTest, RenameCommand) {\n   Run({\"set\", \"a\", \"1\"});\n   ASSERT_EQ(1, CheckedInt({\"dbsize\"}));\n   // flushall should not execute anything and should return error, as it was renamed.\n-  RespExpr resp = Run({\"flushall\"});\n-  ASSERT_THAT(resp, ErrArg(\"unknown command `FLUSHALL`\"));\n+  ASSERT_THAT(Run({\"flushall\"}), ErrArg(\"unknown command `FLUSHALL`\"));\n+\n   ASSERT_EQ(1, CheckedInt({\"dbsize\"}));\n-  resp = Run({\"myflushall\"});\n-  ASSERT_EQ(resp, \"OK\");\n+\n+  ASSERT_EQ(Run({\"myflushall\"}), \"OK\");\n+\n   ASSERT_EQ(0, CheckedInt({\"dbsize\"}));\n-  resp = Run({\"flushdb\", \"0\"});\n-  ASSERT_THAT(resp, ErrArg(\"unknown command `FLUSHDB`\"));\n-  resp = Run({\"\"});\n-  ASSERT_THAT(resp, ErrArg(\"unknown command ``\"));\n+\n+  ASSERT_THAT(Run({\"flushdb\", \"0\"}), ErrArg(\"unknown command `FLUSHDB`\"));\n+\n+  ASSERT_THAT(Run({\"\"}), ErrArg(\"unknown command ``\"));\n+\n+  ASSERT_THAT(Run({\"ping\"}), ErrArg(\"unknown command `PING`\"));\n+  ASSERT_THAT(Run({\"abcdefghijklmnop\"}), \"PONG\");\n }\n \n TEST_F(SingleThreadDflyEngineTest, GlobalSingleThread) {\n",
  "problem_statement": "Dragonfly 1.12.0 does not accept renamed commands longer than 15 chars\n**Describe the bug**\r\nTitle. This is a regression from Dragonfly 1.11.0, where it used to work.\r\n\r\n**To Reproduce**\r\n1. `./dragonfly  --logtostderr --rename_command save=abcdefghijklmnop`\r\n2. In a different terminal: \r\n```\r\nredis-cli\r\n127.0.0.1:6379> abcdefghijklmnop\r\n(error) ERR unknown command `ABCDEFGHIJKLMNOP\r\n```\r\n\r\n3. `./dragonfly  --logtostderr --rename_command save=abcdefghijklmno`\r\n4. In a different terminal: \r\n```\r\nredis-cli\r\n127.0.0.1:6379> abcdefghijklmno\r\nOK\r\n```\r\n\r\n**Expected behavior**\r\nCommand renames should work when they're longer than 15 chars. I think it's ok to have a sane length limit, but 15 seems too short, I guess there's a \"2 bytes\" bug somewhere.\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Fedora 38\r\n - Kernel: Linux toolbox 6.5.8-100.fc37.x86_64\r\n - Containerized?: Fedora toolbox container\r\n - Dragonfly Version: 1.12.0\r\n\r\n\n",
  "hints_text": "It might be small string optimization, capped at 16 bytes",
  "created_at": "2023-11-06T10:10:23Z",
  "modified_files": [
    "src/server/command_registry.cc"
  ],
  "modified_test_files": [
    "src/server/dragonfly_test.cc"
  ]
}