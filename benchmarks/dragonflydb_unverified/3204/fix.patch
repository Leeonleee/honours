diff --git a/src/server/replica.cc b/src/server/replica.cc
index 4a5ce135f4ad..d7e02fa1d497 100644
--- a/src/server/replica.cc
+++ b/src/server/replica.cc
@@ -42,6 +42,9 @@ ABSL_FLAG(bool, break_replication_on_master_restart, false,
           "When in replica mode, and master restarts, break replication from master to avoid "
           "flushing the replica's data.");
 ABSL_DECLARE_FLAG(int32_t, port);
+ABSL_FLAG(
+    int, replica_priority, 100,
+    "Published by info command for sentinel to pick replica based on score during a failover");
 
 // TODO: Remove this flag on release >= 1.22
 ABSL_FLAG(bool, replica_reconnect_on_master_restart, false,
diff --git a/src/server/server_family.cc b/src/server/server_family.cc
index ac2a16afd730..5f7c4725bd00 100644
--- a/src/server/server_family.cc
+++ b/src/server/server_family.cc
@@ -132,6 +132,7 @@ ABSL_DECLARE_FLAG(uint32_t, hz);
 ABSL_DECLARE_FLAG(bool, tls);
 ABSL_DECLARE_FLAG(string, tls_ca_cert_file);
 ABSL_DECLARE_FLAG(string, tls_ca_cert_dir);
+ABSL_DECLARE_FLAG(int, replica_priority);
 
 bool AbslParseFlag(std::string_view in, ReplicaOfFlag* flag, std::string* err) {
 #define RETURN_ON_ERROR(cond, m)                                           \
@@ -2284,6 +2285,8 @@ void ServerFamily::Info(CmdArgList args, ConnectionContext* cntx) {
         append("master_last_io_seconds_ago", rinfo.master_last_io_sec);
         append("master_sync_in_progress", rinfo.full_sync_in_progress);
         append("master_replid", rinfo.master_id);
+        append("slave_priority", GetFlag(FLAGS_replica_priority));
+        append("slave_read_only", 1);
       };
       replication_info_cb(replica_->GetInfo());
       for (const auto& replica : cluster_replicas_) {
