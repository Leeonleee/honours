diff --git a/src/core/interpreter_test.cc b/src/core/interpreter_test.cc
index e2864f15dfe8..17aa2a7127f7 100644
--- a/src/core/interpreter_test.cc
+++ b/src/core/interpreter_test.cc
@@ -321,4 +321,13 @@ TEST_F(InterpreterTest, Modules) {
   EXPECT_EQ("str(\x1\x2test)", ser_.res);
 }
 
+// Since Lua 5.2 global functions were moved to separate namespaces.
+// We need to register them globally to maintain 5.1 compatibility.
+TEST_F(InterpreterTest, OutdatedGlobals) {
+  // table.unpack is used in Laravel:
+  // https://github.com/laravel/framework/blob/6a5c2ec92200cc485983f26b284f7e78470b885f/src/Illuminate/Queue/LuaScripts.php#L118
+  EXPECT_TRUE(Execute("return unpack{1,2,3}"));
+  EXPECT_EQ("i(1)", ser_.res);
+}
+
 }  // namespace dfly
diff --git a/src/server/zset_family_test.cc b/src/server/zset_family_test.cc
index 6a76d337df9f..7bd42f6fcde0 100644
--- a/src/server/zset_family_test.cc
+++ b/src/server/zset_family_test.cc
@@ -86,6 +86,10 @@ TEST_F(ZSetFamilyTest, ZRangeRank) {
   ASSERT_THAT(resp, ArrLen(2));
   ASSERT_THAT(resp.GetVec(), ElementsAre("a", "1.1"));
 
+  resp = Run({"zrangebyscore", "x", "-inf", "+inf", "LIMIT", "0", "-1"});
+  ASSERT_THAT(resp, ArrLen(2));
+  ASSERT_THAT(resp.GetVec(), ElementsAre("a", "b"));
+
   resp = Run({"zrevrangebyscore", "x", "+inf", "-inf", "limit", "0", "5"});
   ASSERT_THAT(resp, ArgType(RespExpr::ARRAY));
   ASSERT_THAT(resp.GetVec(), ElementsAre("b", "a"));
@@ -190,6 +194,10 @@ TEST_F(ZSetFamilyTest, ZRange) {
   resp = Run({"zrange", "key", "-", "d", "BYLEX", "BYSCORE"});
   EXPECT_THAT(resp, ErrArg("BYSCORE and BYLEX options are not compatible"));
 
+  resp = Run({"zrange", "key", "0", "-1", "LIMIT", "3", "-1"});
+  ASSERT_THAT(resp, ArrLen(2));
+  ASSERT_THAT(resp.GetVec(), ElementsAre("c", "e"));
+
   Run({"zremrangebyscore", "key", "0", "4"});
 
   Run({
