{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 485,
  "instance_id": "dragonflydb__dragonfly-485",
  "issue_numbers": [
    "458"
  ],
  "base_commit": "c9c33b476bffdac092269648b7f3fe9d7babe6c3",
  "patch": "diff --git a/docs/api_status.md b/docs/api_status.md\nindex cb198e1f34a5..4f40f0fb0958 100644\n--- a/docs/api_status.md\n+++ b/docs/api_status.md\n@@ -157,7 +157,7 @@ with respect to Memcached and Redis APIs.\n   - [X] WATCH\n   - [X] UNWATCH\n   - [X] DISCARD\n-  - [X] CLIENT LIST/SETNAME\n+  - [X] CLIENT LIST/SETNAME/GETNAME\n   - [ ] CLIENT KILL/UNPAUSE/PAUSE/GETNAME/REPLY/TRACKINGINFO\n   - [X] COMMAND\n   - [X] COMMAND COUNT\ndiff --git a/src/server/server_family.cc b/src/server/server_family.cc\nindex 41ecbf6c4515..dae7ad5a29ab 100644\n--- a/src/server/server_family.cc\n+++ b/src/server/server_family.cc\n@@ -1038,6 +1038,15 @@ void ServerFamily::Client(CmdArgList args, ConnectionContext* cntx) {\n     return (*cntx)->SendOk();\n   }\n \n+  if (sub_cmd == \"GETNAME\") {\n+    const char* name = cntx->owner()->GetName();\n+    if (*name != 0) {\n+      return (*cntx)->SendBulkString(name);\n+    } else {\n+      return (*cntx)->SendNull();\n+    }\n+  }\n+\n   if (sub_cmd == \"LIST\") {\n     vector<string> client_info;\n     fibers::mutex mu;\n",
  "test_patch": "diff --git a/tests/dragonfly/server_family_test.py b/tests/dragonfly/server_family_test.py\nindex 020dcb60b399..f3a9dde65f20 100644\n--- a/tests/dragonfly/server_family_test.py\n+++ b/tests/dragonfly/server_family_test.py\n@@ -52,3 +52,11 @@ def test_multi_eval(client):\n     except Exception as e:\n         msg = str(e)\n         assert \"Dragonfly does not allow execution of\" in msg\n+\n+\n+def test_connection_name(client):\n+    name = client.execute_command(\"CLIENT GETNAME\")\n+    assert not name\n+    client.execute_command(\"CLIENT SETNAME test_conn_name\")\n+    name = client.execute_command(\"CLIENT GETNAME\")\n+    assert name == \"test_conn_name\"\n",
  "problem_statement": "support for the command client-getname\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThis is part of the client commands in Redis.\r\nThis command is required in order to pass more tests in ioredis as they are checking for successfully testing these use case.\r\nFor more details about this command - [see client-getname](https://redis.io/commands/client-getname/)\r\n\r\n**Describe the solution you'd like**\r\nSupporting the command in dragonfly code base.\r\nAdd unit test for it.\r\nAdd system test for it (under tests/dragonfly)\r\nVerify its working by running: \r\n```\r\ndocker build -t ioredis-test -f ./ioredis.Dockerfile .\r\ndocker run --rm -ti ioredis-test bash\r\n## inside the container\r\nmocha test/functional/*.ts -g 'should name the connection if options.connectionName is not null`\r\n```\r\n**Describe alternatives you've considered**\r\nThere is no alternatives to this command. We would like to have this support in order to be compliment with ioredis.\r\n\r\n**Additional context**\r\nWe have support for [client-setname](https://redis.io/commands/client-setname/), so this should be based on it.\r\n\n",
  "hints_text": "Once this is resolved, please update the ioredis tests that are not running!",
  "created_at": "2022-11-13T08:15:28Z",
  "modified_files": [
    "docs/api_status.md",
    "src/server/server_family.cc"
  ],
  "modified_test_files": [
    "tests/dragonfly/server_family_test.py"
  ]
}