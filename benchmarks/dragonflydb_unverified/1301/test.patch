diff --git a/src/server/cluster_config_test.cc b/src/server/cluster_config_test.cc
index 70777c64045a..5a07c134d513 100644
--- a/src/server/cluster_config_test.cc
+++ b/src/server/cluster_config_test.cc
@@ -129,44 +129,36 @@ TEST_F(ClusterConfigTest, ConfigSetMultipleInstances) {
 
 TEST_F(ClusterConfigTest, ConfigSetGetDeletedSlots) {
   auto ds =
-      config_.SetConfig({{.slot_ranges = {{.start = 0, .end = 5'000}},
+      config_.SetConfig({{.slot_ranges = {{.start = 0, .end = 16'380}},
                           .master = {.id = kMyId, .ip = "192.168.0.100", .port = 7000},
                           .replicas = {}},
-                         {.slot_ranges = {{.start = 5'001, .end = 10'000}},
-                          .master = {.id = "other-master", .ip = "192.168.0.102", .port = 7002},
-                          .replicas = {}},
-                         {.slot_ranges = {{.start = 10'001, .end = 0x3FFF}},
+                         {.slot_ranges = {{.start = 16'381, .end = 0x3FFF}},
                           .master = {.id = "other-master2", .ip = "192.168.0.104", .port = 7004},
                           .replicas = {}}});
 
   EXPECT_TRUE(ds.has_value());
-  EXPECT_TRUE(ds.value().empty());  // On first config set no deleted slots.
+  // On first config non owned slots are returned as deleted
+  EXPECT_THAT(ds.value(), UnorderedElementsAre(16'381, 16'382, 16'383));
 
-  ds = config_.SetConfig({{.slot_ranges = {{.start = 0, .end = 6'000}},
+  ds = config_.SetConfig({{.slot_ranges = {{.start = 0, .end = 16'381}},
                            .master = {.id = kMyId, .ip = "192.168.0.100", .port = 7000},
                            .replicas = {}},
-                          {.slot_ranges = {{.start = 6'001, .end = 10'000}},
-                           .master = {.id = "other-master", .ip = "192.168.0.102", .port = 7002},
-                           .replicas = {}},
-                          {.slot_ranges = {{.start = 10'001, .end = 0x3FFF}},
+                          {.slot_ranges = {{.start = 16'382, .end = 0x3FFF}},
                            .master = {.id = "other-master2", .ip = "192.168.0.104", .port = 7004},
                            .replicas = {}}});
 
   EXPECT_TRUE(ds.has_value());
   EXPECT_TRUE(ds.value().empty());  // On second config no slots taken from ownership
 
-  ds = config_.SetConfig({{.slot_ranges = {{.start = 0, .end = 5'997}},
+  ds = config_.SetConfig({{.slot_ranges = {{.start = 0, .end = 16'378}},
                            .master = {.id = kMyId, .ip = "192.168.0.100", .port = 7000},
                            .replicas = {}},
-                          {.slot_ranges = {{.start = 5'998, .end = 10'000}},
-                           .master = {.id = "other-master", .ip = "192.168.0.102", .port = 7002},
-                           .replicas = {}},
-                          {.slot_ranges = {{.start = 10'001, .end = 0x3FFF}},
+                          {.slot_ranges = {{.start = 16'379, .end = 0x3FFF}},
                            .master = {.id = "other-master2", .ip = "192.168.0.104", .port = 7004},
                            .replicas = {}}});
 
   EXPECT_TRUE(ds.has_value());
-  EXPECT_THAT(ds.value(), UnorderedElementsAre(5'998, 5'999, 6'000));
+  EXPECT_THAT(ds.value(), UnorderedElementsAre(16'379, 16'380, 16'381));
 }
 
 TEST_F(ClusterConfigTest, ConfigSetInvalidSlotRanges) {
diff --git a/src/server/cluster_family_test.cc b/src/server/cluster_family_test.cc
index 0f6279d43f59..81288756b4f1 100644
--- a/src/server/cluster_family_test.cc
+++ b/src/server/cluster_family_test.cc
@@ -498,6 +498,46 @@ TEST_F(ClusterFamilyTest, ClusterModeSelectNotAllowed) {
   EXPECT_EQ(Run({"select", "0"}), "OK");
 }
 
+TEST_F(ClusterFamilyTest, ClusterFirstConfigCallDropsEntriesNotOwnedByNode) {
+  Run({"debug", "populate", "50000"});
+
+  EXPECT_EQ(Run({"save", "df"}), "OK");
+
+  auto save_info = service_->server_family().GetLastSaveInfo();
+  EXPECT_EQ(Run({"debug", "load", save_info->file_name}), "OK");
+  EXPECT_EQ(CheckedInt({"dbsize"}), 50000);
+
+  EXPECT_EQ(RunAdmin({"dflycluster", "config", R"json(
+      [
+        {
+          "slot_ranges": [
+            {
+              "start": 0,
+              "end": 16383
+            }
+          ],
+          "master": {
+            "id": "abcd1234",
+            "ip": "10.0.0.1",
+            "port": 7000
+          },
+          "replicas": []
+        }
+      ])json"}),
+            "OK");
+
+  // Make sure `dbsize` all slots were removed
+  constexpr absl::Duration kMaxTime = absl::Seconds(5);
+  absl::Time deadline = absl::Now() + kMaxTime;
+  while (deadline > absl::Now()) {
+    if (CheckedInt({"dbsize"}) == 0) {
+      break;
+    }
+    sleep(1);
+  }
+  EXPECT_LE(absl::Now(), deadline);
+}
+
 class ClusterFamilyEmulatedTest : public BaseFamilyTest {
  public:
   ClusterFamilyEmulatedTest() {
