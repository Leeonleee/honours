You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
DCHECK fail causing crash - Check failed: builder_->HasReplied() 
**Describe the bug**
F20240107 11:57:14.120226 224608 main_service.cc:1188] Check failed: builder_->HasReplied() 
*** Check failure stack trace: ***
    @     0x555559cee1b1  google::LogMessage::Fail()
    @     0x555559cee0f7  google::LogMessage::SendToLog()
    @     0x555559ced8cc  google::LogMessage::Flush()
    @     0x555559cf1744  google::LogMessageFatal::~LogMessageFatal()
    @     0x555558524298  dfly::ReplyGuard::~ReplyGuard()
    @     0x5555584a5c88  dfly::Service::InvokeCmd()
    @     0x555558aef0ff  dfly::MultiCommandSquasher::SquashedHopCb()
    @     0x555558aefc52  _ZZN4dfly20MultiCommandSquasher15ExecuteSquashedEvENKUlPT_PT0_E0_clINS_11TransactionENS_11EngineShardEEEDaS2_S4_
    @     0x555558af5031  _ZSt13__invoke_implIN6facade8OpStatusERKZN4dfly20MultiCommandSquasher15ExecuteSquashedEvEUlPT_PT0_E0_JPNS2_11TransactionEPNS2_11EngineShardEEES4_St14__invoke_otherOS6_DpOT1_
    @     0x555558af4953  _ZSt8__invokeIRKZN4dfly20MultiCommandSquasher15ExecuteSquashedEvEUlPT_PT0_E0_JPNS0_11TransactionEPNS0_11EngineShardEEENSt15__invoke_resultIS2_JDpT0_EE4typeEOS2_DpOSE_
    @     0x555558af416f  _ZSt6invokeIRKZN4dfly20MultiCommandSquasher15ExecuteSquashedEvEUlPT_PT0_E0_JPNS0_11TransactionEPNS0_11EngineShardEEENSt13invoke_resultIS2_JDpT0_EE4typeEOS2_DpOSE_
    @     0x555558af3aad  _ZN4absl12lts_2023080219functional_internal12InvokeObjectIZN4dfly20MultiCommandSquasher15ExecuteSquashedEvEUlPT_PT0_E0_N6facade8OpStatusEJPNS3_11TransactionEPNS3_11EngineShardEEEES7_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE
    @     0x55555918a473  absl::lts_20230802::FunctionRef<>::operator()()
    @     0x55555914eae0  dfly::Transaction::RunInShard()
    @     0x555558c818f5  dfly::EngineShard::PollExecution()
    @     0x55555915a843  dfly::Transaction::ExecuteAsync()
    @     0x5555591549a6  dfly::Transaction::ScheduleSingleHop()
    @     0x555558af075e  dfly::MultiCommandSquasher::ExecuteSquashed()
    @     0x555558af1ce9  dfly::MultiCommandSquasher::Run()
    @     0x55555851f518  dfly::MultiCommandSquasher::Execute()
    @     0x5555584b93ab  dfly::Service::Exec()
    @     0x5555584c4df3  _ZZN4dfly7Service8RegisterEPNS_15CommandRegistryEENKUlN4absl12lts_202308024SpanINS5_IcEEEEPNS_17ConnectionContextEE2_clES7_S9_
    @     0x555558505012  _ZN3fu27abi_4006detail10invocation6invokeIRKZN4dfly7Service8RegisterEPNS4_15CommandRegistryEEUlN4absl12lts_202308024SpanINSA_IcEEEEPNS4_17ConnectionContextEE2_JSC_SE_EEEDTclcl7forwardIT_Efp_Espcl7forwardIT0_Efp0_EEEOSI_DpOSJ_
    @     0x5555584fdbd8  _ZN3fu27abi_4006detail12type_erasure16invocation_table14function_traitIKFvN4absl12lts_202308024SpanINS7_IcEEEEPN4dfly17ConnectionContextEEE16internal_invokerINS2_3boxILb1EZNSA_7Service8RegisterEPNSA_15CommandRegistryEEUlS9_SC_E2_SaISK_EEELb1EE6invokeEPKNS2_13data_accessorEmS9_SC_
    @     0x5555590d446d  _ZNK3fu27abi_4006detail12type_erasure6tables6vtableINS1_8propertyILb0ELb0EJKFvN4absl12lts_202308024SpanINS8_IcEEEEPN4dfly17ConnectionContextEEEEEE6invokeILm0EJPKNS2_13data_accessorERKmSA_SD_EEEDcDpOT0_
    @     0x5555590d46bc  _ZN3fu27abi_4006detail12type_erasure7erasureILb1ENS1_6configILb1ELb1ENS_16capacity_defaultEEENS1_8propertyILb0ELb0EJKFvN4absl12lts_202308024SpanINSA_IcEEEEPN4dfly17ConnectionContextEEEEEE6invokeILm0ERKSI_JSC_SF_EEEDcOT0_DpOT1_
    @     0x5555590d47b7  fu2::abi_400::detail::type_erasure::invocation_table::operator_impl<>::operator()()
    @     0x5555590cd398  dfly::CommandId::Invoke()
    @     0x5555584a4bba  dfly::Service::InvokeCmd()
    @     0x5555584a37f8  dfly::Service::DispatchCommand()
    @     0x5555595210a6  facade::Connection::DispatchOperations::operator()()
    @     0x55555958cd52  facade::Connection::DispatchOperations::operator()<>()


**To Reproduce**
run this pytest:

```
@pytest.mark.asyncio
async def test_oom(df_local_factory, df_seeder_factory):
    master = df_local_factory.create(
        proactor_threads=1,
        cache_mode="true",
        maxmemory="256mb",
        enable_heartbeat_eviction="false"
    )
    df_local_factory.start_all([master])
    c_master = master.client()
    await c_master.execute_command("DEBUG POPULATE 6000 size 44000")

    seeder = df_seeder_factory.create(port=master.port, keys=5000, val_size=1000, stop_on_failure=False)
    await seeder.run(target_deviation=0.1)

    info = await c_master.info("stats")
    assert info["evicted_keys"] > 0, "Weak testcase: policy based eviction was not triggered."
```


**Additional context**
We enter DbSlice::AddOrFind oom  were we can not insert more values, response to client should be OOM
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
