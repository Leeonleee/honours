diff --git a/src/core/string_map_test.cc b/src/core/string_map_test.cc
index bf60ed1728c3..1fb7e0543147 100644
--- a/src/core/string_map_test.cc
+++ b/src/core/string_map_test.cc
@@ -118,6 +118,15 @@ TEST_F(StringMapTest, Ttl) {
   EXPECT_TRUE(it == sm_->end());
 }
 
+TEST_F(StringMapTest, IterateExpired) {
+  EXPECT_TRUE(sm_->AddOrUpdate("k1", "v1", 1));
+  EXPECT_TRUE(sm_->AddOrUpdate("k2", "v2", 1));
+  sm_->set_time(1);
+  auto it = sm_->begin();
+  it += 1;
+  EXPECT_EQ(it, sm_->end());
+}
+
 unsigned total_wasted_memory = 0;
 
 TEST_F(StringMapTest, ReallocIfNeeded) {
diff --git a/src/server/hset_family_test.cc b/src/server/hset_family_test.cc
index ac50cf33e6d4..b49ec79931dd 100644
--- a/src/server/hset_family_test.cc
+++ b/src/server/hset_family_test.cc
@@ -339,4 +339,22 @@ TEST_F(HSetFamilyTest, Issue2102) {
   EXPECT_THAT(Run({"HGETALL", "key"}), RespArray(ElementsAre()));
 }
 
+TEST_F(HSetFamilyTest, RandomFieldAllExpired) {
+  for (int i = 0; i < 10; ++i) {
+    EXPECT_EQ(CheckedInt({"HSETEX", "key", "10", absl::StrCat("k", i), "v"}), 1);
+  }
+  AdvanceTime(10'000);
+  EXPECT_THAT(Run({"HRANDFIELD", "key"}), ArgType(RespExpr::NIL));
+}
+
+TEST_F(HSetFamilyTest, RandomField1NotExpired) {
+  for (int i = 0; i < 10; ++i) {
+    EXPECT_EQ(CheckedInt({"HSETEX", "key", "10", absl::StrCat("k", i), "v"}), 1);
+  }
+  EXPECT_EQ(CheckedInt({"HSET", "key", "keep", "v"}), 1);
+
+  AdvanceTime(10'000);
+  EXPECT_THAT(Run({"HRANDFIELD", "key"}), "keep");
+}
+
 }  // namespace dfly
