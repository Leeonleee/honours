You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Dragonfly is about 10x slower than Redis when used by JuiceFS
[JuiceFS](https://github.com/juicedata/juicefs) supports using redis as the metadata engine, and we had feedback from the community that they wanted to use dragonfly to replace redis, but after testing, I found that dragonfly is very unstable. It is about 10 times slower than the average redis latency.(calculated by the mean of the latency)  I'm not sure if it's my usage or dragonfly's own problem. I would like to ask for help to determine the cause.

As you can see on this graph, Dragonfly's performance is similar to that of Redis under normal circumstances, but there are often exceptionally slow requests, resulting in very large latency fluctuations.

<img width="851" alt="image" src="https://github.com/dragonflydb/dragonfly/assets/31313340/abc1c3d5-94df-4ced-bcf4-7ff812002d89">

**To Reproduce**
1. install dragonfly by binary, listen on 127.0.0.1:6378
2. start dragonfly 
`./dragonfly --logtostderr  -dbnum 10 --bind 127.0.0.1 --port 6378`
3. install redis by binary, listen on 127.0.0.1:6379
1. install golang first
   ```
    wget https://go.dev/dl/go1.20.4.linux-amd64.tar.gz
    rm -rf /usr/local/go && tar -C /usr/local -xzf go1.20.4.linux-amd64.tar.gz
    export PATH=$PATH:/usr/local/go/bin
   ```
4. `git clone -b  test_for_dragonfly https://github.com/juicedata/juicefs.git && cd juicefs`
5. `go mod tidy`
6. test redis 
`addr=redis://127.0.0.1:6379/1 go test -count=1  -v  ./pkg/meta/... -run=TestDgfAndRedis`
```
root@bench2:~/juicefs# addr=redis://127.0.0.1:6379/2 go test -count=1  -v  ./pkg/meta/... -run=TestDgfAndRedis
=== RUN   TestDgfAndRedis
2023/05/24 04:12:16.195448 juicefs[10992] <INFO>: Meta address: redis://127.0.0.1:6379/2 [interface.go:494]
2023/05/24 04:12:16.196587 juicefs[10992] <INFO>: Ping redis latency: 97.831µs [redis.go:3523]
2023/05/24 04:12:16.197723 juicefs[10992] <INFO>: Create session 1 OK with version: 1.1.0-dev+unknown [base.go:474]
    benchmarks_test.go:673: number:  0: cost: 494 us
    benchmarks_test.go:673: number:  1: cost: 523 us
    benchmarks_test.go:673: number:  2: cost: 507 us
    benchmarks_test.go:673: number:  3: cost: 493 us
    benchmarks_test.go:673: number:  4: cost: 497 us
    benchmarks_test.go:673: number:  5: cost: 555 us
    benchmarks_test.go:673: number:  6: cost: 544 us
    benchmarks_test.go:673: number:  7: cost: 514 us
    benchmarks_test.go:673: number:  8: cost: 511 us
    benchmarks_test.go:673: number:  9: cost: 524 us
    benchmarks_test.go:673: number: 10: cost: 487 us
    benchmarks_test.go:673: number: 11: cost: 485 us
    benchmarks_test.go:673: number: 12: cost: 475 us
    benchmarks_test.go:673: number: 13: cost: 477 us
    benchmarks_test.go:673: number: 14: cost: 474 us
    benchmarks_test.go:673: number: 15: cost: 484 us
    benchmarks_test.go:673: number: 16: cost: 475 us
    benchmarks_test.go:673: number: 17: cost: 509 us
    benchmarks_test.go:673: number: 18: cost: 513 us
    benchmarks_test.go:673: number: 19: cost: 477 us
    benchmarks_test.go:673: number: 20: cost: 504 us
    benchmarks_test.go:673: number: 21: cost: 486 us
    benchmarks_test.go:673: number: 22: cost: 476 us
    benchmarks_test.go:673: number: 23: cost: 475 us
    benchmarks_test.go:673: number: 24: cost: 475 us
    benchmarks_test.go:673: number: 25: cost: 528 us
    benchmarks_test.go:673: number: 26: cost: 510 us
    benchmarks_test.go:673: number: 27: cost: 488 us
    benchmarks_test.go:673: number: 28: cost: 469 us
    benchmarks_test.go:673: number: 29: cost: 469 us
    benchmarks_test.go:673: number: 30: cost: 476 us
    benchmarks_test.go:673: number: 31: cost: 470 us
    benchmarks_test.go:673: number: 32: cost: 468 us
    benchmarks_test.go:673: number: 33: cost: 474 us
    benchmarks_test.go:673: number: 34: cost: 497 us
    benchmarks_test.go:673: number: 35: cost: 522 us
    benchmarks_test.go:673: number: 36: cost: 475 us
    benchmarks_test.go:673: number: 37: cost: 469 us
    benchmarks_test.go:673: number: 38: cost: 481 us
    benchmarks_test.go:673: number: 39: cost: 479 us
    benchmarks_test.go:673: number: 40: cost: 464 us
    benchmarks_test.go:673: number: 41: cost: 495 us
    benchmarks_test.go:673: number: 42: cost: 470 us
    benchmarks_test.go:673: number: 43: cost: 478 us
    benchmarks_test.go:673: number: 44: cost: 485 us
    benchmarks_test.go:673: number: 45: cost: 595 us
    benchmarks_test.go:673: number: 46: cost: 542 us
    benchmarks_test.go:673: number: 47: cost: 514 us
    benchmarks_test.go:673: number: 48: cost: 474 us
    benchmarks_test.go:673: number: 49: cost: 484 us
    benchmarks_test.go:673: number: 50: cost: 490 us
    benchmarks_test.go:673: number: 51: cost: 490 us
    benchmarks_test.go:673: number: 52: cost: 478 us
    benchmarks_test.go:673: number: 53: cost: 493 us
    benchmarks_test.go:673: number: 54: cost: 491 us
    benchmarks_test.go:673: number: 55: cost: 541 us
    benchmarks_test.go:673: number: 56: cost: 489 us
    benchmarks_test.go:673: number: 57: cost: 487 us
    benchmarks_test.go:673: number: 58: cost: 480 us
    benchmarks_test.go:673: number: 59: cost: 486 us
    benchmarks_test.go:673: number: 60: cost: 491 us
    benchmarks_test.go:673: number: 61: cost: 487 us
    benchmarks_test.go:673: number: 62: cost: 484 us
    benchmarks_test.go:673: number: 63: cost: 489 us
    benchmarks_test.go:673: number: 64: cost: 493 us
    benchmarks_test.go:673: number: 65: cost: 542 us
    benchmarks_test.go:673: number: 66: cost: 492 us
    benchmarks_test.go:673: number: 67: cost: 512 us
    benchmarks_test.go:673: number: 68: cost: 493 us
    benchmarks_test.go:673: number: 69: cost: 490 us
    benchmarks_test.go:673: number: 70: cost: 492 us
    benchmarks_test.go:673: number: 71: cost: 478 us
    benchmarks_test.go:673: number: 72: cost: 494 us
    benchmarks_test.go:673: number: 73: cost: 510 us
    benchmarks_test.go:673: number: 74: cost: 512 us
    benchmarks_test.go:673: number: 75: cost: 501 us
    benchmarks_test.go:673: number: 76: cost: 475 us
    benchmarks_test.go:673: number: 77: cost: 483 us
    benchmarks_test.go:673: number: 78: cost: 481 us
    benchmarks_test.go:673: number: 79: cost: 584 us
    benchmarks_test.go:673: number: 80: cost: 486 us
    benchmarks_test.go:673: number: 81: cost: 518 us
    benchmarks_test.go:673: number: 82: cost: 521 us
    benchmarks_test.go:673: number: 83: cost: 476 us
    benchmarks_test.go:673: number: 84: cost: 570 us
    benchmarks_test.go:673: number: 85: cost: 577 us
    benchmarks_test.go:673: number: 86: cost: 479 us
    benchmarks_test.go:673: number: 87: cost: 475 us
    benchmarks_test.go:673: number: 88: cost: 501 us
    benchmarks_test.go:673: number: 89: cost: 514 us
    benchmarks_test.go:673: number: 90: cost: 485 us
    benchmarks_test.go:673: number: 91: cost: 489 us
    benchmarks_test.go:673: number: 92: cost: 516 us
    benchmarks_test.go:673: number: 93: cost: 492 us
    benchmarks_test.go:673: number: 94: cost: 501 us
    benchmarks_test.go:673: number: 95: cost: 478 us
    benchmarks_test.go:673: number: 96: cost: 473 us
    benchmarks_test.go:673: number: 97: cost: 478 us
    benchmarks_test.go:673: number: 98: cost: 577 us
    benchmarks_test.go:673: number: 99: cost: 478 us
    benchmarks_test.go:676: --------------------test redis://127.0.0.1:6379/2--------------------
    benchmarks_test.go:677: mean: 497.02, standard deviation: 27.18
--- PASS: TestDgfAndRedis (0.05s)
PASS
ok  	github.com/juicedata/juicefs/pkg/meta	0.070s
```
8.  test dragonfly
`addr=redis://127.0.0.1:6378/1 go test -count=1  -v  ./pkg/meta/... -run=TestDgfAndRedis`
```
root@bench2:~/juicefs# addr=redis://127.0.0.1:6378/2 go test -count=1  -v  ./pkg/meta/... -run=TestDgfAndRedis
=== RUN   TestDgfAndRedis
2023/05/24 04:11:15.817867 juicefs[10886] <INFO>: Meta address: redis://127.0.0.1:6378/2 [interface.go:494]
2023/05/24 04:11:15.819105 juicefs[10886] <INFO>: Ping redis latency: 86.584µs [redis.go:3523]
2023/05/24 04:11:15.819355 juicefs[10886] <WARNING>: Existing volume will be overwrited: {
  "Name": "benchmarkAll",
  "UUID": "",
  "Storage": "",
  "Bucket": "",
  "BlockSize": 0,
  "TrashDays": 0
} [config.go:96]
2023/05/24 04:11:15.820231 juicefs[10886] <INFO>: Create session 2 OK with version: 1.1.0-dev+unknown [base.go:474]
2023/05/24 04:11:15.820845 juicefs[10886] <WARNING>: unexpected error for lookup: ERR Error running script (call to 8526c64984678fc27f67f44755c8ba7dcdf7ea60): @user_script:12: script tried accessing undeclared key [redis.go:695]
    benchmarks_test.go:673: number:  0: cost: 714 us
    benchmarks_test.go:673: number:  1: cost: 716 us
    benchmarks_test.go:673: number:  2: cost: 722 us
    benchmarks_test.go:673: number:  3: cost: 732 us
    benchmarks_test.go:673: number:  4: cost: 690 us
    benchmarks_test.go:673: number:  5: cost: 698 us
    benchmarks_test.go:673: number:  6: cost: 731 us
    benchmarks_test.go:673: number:  7: cost: 673 us
    benchmarks_test.go:673: number:  8: cost: 615 us
    benchmarks_test.go:673: number:  9: cost: 714 us
    benchmarks_test.go:673: number: 10: cost: 717 us
    benchmarks_test.go:673: number: 11: cost: 700 us
    benchmarks_test.go:673: number: 12: cost: 710 us
    benchmarks_test.go:673: number: 13: cost: 6720 us
    benchmarks_test.go:673: number: 14: cost: 43235 us
    benchmarks_test.go:673: number: 15: cost: 692 us
    benchmarks_test.go:673: number: 16: cost: 694 us
    benchmarks_test.go:673: number: 17: cost: 698 us
    benchmarks_test.go:673: number: 18: cost: 715 us
    benchmarks_test.go:673: number: 19: cost: 733 us
    benchmarks_test.go:673: number: 20: cost: 856 us
    benchmarks_test.go:673: number: 21: cost: 717 us
    benchmarks_test.go:673: number: 22: cost: 683 us
    benchmarks_test.go:673: number: 23: cost: 672 us
    benchmarks_test.go:673: number: 24: cost: 640 us
    benchmarks_test.go:673: number: 25: cost: 726 us
    benchmarks_test.go:673: number: 26: cost: 703 us
    benchmarks_test.go:673: number: 27: cost: 709 us
    benchmarks_test.go:673: number: 28: cost: 699 us
    benchmarks_test.go:673: number: 29: cost: 2740 us
    benchmarks_test.go:673: number: 30: cost: 43136 us
    benchmarks_test.go:673: number: 31: cost: 705 us
    benchmarks_test.go:673: number: 32: cost: 618 us
    benchmarks_test.go:673: number: 33: cost: 708 us
    benchmarks_test.go:673: number: 34: cost: 740 us
    benchmarks_test.go:673: number: 35: cost: 713 us
    benchmarks_test.go:673: number: 36: cost: 704 us
    benchmarks_test.go:673: number: 37: cost: 676 us
    benchmarks_test.go:673: number: 38: cost: 672 us
    benchmarks_test.go:673: number: 39: cost: 696 us
    benchmarks_test.go:673: number: 40: cost: 705 us
    benchmarks_test.go:673: number: 41: cost: 715 us
    benchmarks_test.go:673: number: 42: cost: 44201 us
    benchmarks_test.go:673: number: 43: cost: 710 us
    benchmarks_test.go:673: number: 44: cost: 698 us
    benchmarks_test.go:673: number: 45: cost: 728 us
    benchmarks_test.go:673: number: 46: cost: 667 us
    benchmarks_test.go:673: number: 47: cost: 724 us
    benchmarks_test.go:673: number: 48: cost: 723 us
    benchmarks_test.go:673: number: 49: cost: 724 us
    benchmarks_test.go:673: number: 50: cost: 739 us
    benchmarks_test.go:673: number: 51: cost: 710 us
    benchmarks_test.go:673: number: 52: cost: 702 us
    benchmarks_test.go:673: number: 53: cost: 708 us
    benchmarks_test.go:673: number: 54: cost: 678 us
    benchmarks_test.go:673: number: 55: cost: 610 us
    benchmarks_test.go:673: number: 56: cost: 709 us
    benchmarks_test.go:673: number: 57: cost: 692 us
    benchmarks_test.go:673: number: 58: cost: 690 us
    benchmarks_test.go:673: number: 59: cost: 44570 us
    benchmarks_test.go:673: number: 60: cost: 712 us
    benchmarks_test.go:673: number: 61: cost: 708 us
    benchmarks_test.go:673: number: 62: cost: 672 us
    benchmarks_test.go:673: number: 63: cost: 638 us
    benchmarks_test.go:673: number: 64: cost: 4791 us
    benchmarks_test.go:673: number: 65: cost: 44406 us
    benchmarks_test.go:673: number: 66: cost: 717 us
    benchmarks_test.go:673: number: 67: cost: 605 us
    benchmarks_test.go:673: number: 68: cost: 724 us
    benchmarks_test.go:673: number: 69: cost: 710 us
    benchmarks_test.go:673: number: 70: cost: 706 us
    benchmarks_test.go:673: number: 71: cost: 705 us
    benchmarks_test.go:673: number: 72: cost: 646 us
    benchmarks_test.go:673: number: 73: cost: 679 us
    benchmarks_test.go:673: number: 74: cost: 694 us
    benchmarks_test.go:673: number: 75: cost: 699 us
    benchmarks_test.go:673: number: 76: cost: 689 us
    benchmarks_test.go:673: number: 77: cost: 44305 us
    benchmarks_test.go:673: number: 78: cost: 760 us
    benchmarks_test.go:673: number: 79: cost: 694 us
    benchmarks_test.go:673: number: 80: cost: 716 us
    benchmarks_test.go:673: number: 81: cost: 6768 us
    benchmarks_test.go:673: number: 82: cost: 47010 us
    benchmarks_test.go:673: number: 83: cost: 748 us
    benchmarks_test.go:673: number: 84: cost: 2813 us
    benchmarks_test.go:673: number: 85: cost: 728 us
    benchmarks_test.go:673: number: 86: cost: 700 us
    benchmarks_test.go:673: number: 87: cost: 705 us
    benchmarks_test.go:673: number: 88: cost: 698 us
    benchmarks_test.go:673: number: 89: cost: 645 us
    benchmarks_test.go:673: number: 90: cost: 723 us
    benchmarks_test.go:673: number: 91: cost: 691 us
    benchmarks_test.go:673: number: 92: cost: 712 us
    benchmarks_test.go:673: number: 93: cost: 721 us
    benchmarks_test.go:673: number: 94: cost: 691 us
    benchmarks_test.go:673: number: 95: cost: 669 us
    benchmarks_test.go:673: number: 96: cost: 44559 us
    benchmarks_test.go:673: number: 97: cost: 677 us
    benchmarks_test.go:673: number: 98: cost: 680 us
    benchmarks_test.go:673: number: 99: cost: 804 us
    benchmarks_test.go:676: --------------------test redis://127.0.0.1:6378/2--------------------
    benchmarks_test.go:677: mean: 4402.53, standard deviation: 11906.39
--- PASS: TestDgfAndRedis (2.45s)
PASS
ok  	github.com/juicedata/juicefs/pkg/meta	2.469s
```

**Expected behavior**
Performance on the same order of magnitude as redis or better


**Environment (please complete the following information):**
 - OS: [ubuntu 20.04]
 - Kernel: 
 Linux bench2 5.4.0-1029-aws #30-Ubuntu SMP Tue Oct 20 10:06:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
 - Dragonfly Version:  
 dragonfly v1.3.0-f80afca9c23e2f30373437520a162c591eaa2005
 build time: 2023-05-18 07:11:31
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
