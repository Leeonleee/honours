{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 894,
  "instance_id": "dragonflydb__dragonfly-894",
  "issue_numbers": [
    "779"
  ],
  "base_commit": "edd93a086c6d45b59c57262a721e47c9c44ceb85",
  "patch": "diff --git a/src/facade/dragonfly_connection.cc b/src/facade/dragonfly_connection.cc\nindex 6fbedbe06610..969862b4275b 100644\n--- a/src/facade/dragonfly_connection.cc\n+++ b/src/facade/dragonfly_connection.cc\n@@ -502,6 +502,8 @@ io::Result<bool> Connection::CheckForHttpProto(FiberSocketBase* peer) {\n   size_t last_len = 0;\n   do {\n     auto buf = io_buf_.AppendBuffer();\n+    DCHECK(!buf.empty());\n+\n     ::io::Result<size_t> recv_sz = peer->Recv(buf);\n     if (!recv_sz) {\n       return make_unexpected(recv_sz.error());\n@@ -518,6 +520,7 @@ io::Result<bool> Connection::CheckForHttpProto(FiberSocketBase* peer) {\n       return MatchHttp11Line(ib);\n     }\n     last_len = io_buf_.InputLen();\n+    io_buf_.EnsureCapacity(io_buf_.Capacity());\n   } while (last_len < 1024);\n \n   return false;\n",
  "test_patch": "diff --git a/tests/dragonfly/connection_test.py b/tests/dragonfly/connection_test.py\nindex 4fbf520a4937..58008012abfd 100644\n--- a/tests/dragonfly/connection_test.py\n+++ b/tests/dragonfly/connection_test.py\n@@ -276,3 +276,16 @@ def generate(max):\n     state, message = await run_multi_pubsub(async_client, messages, \"my-channel\")\n \n     assert state, message\n+\n+\n+@pytest.mark.asyncio\n+async def test_big_command(df_server, size=8 * 1024):\n+    reader, writer = await asyncio.open_connection('127.0.0.1', df_server.port)\n+\n+    writer.write(f\"SET a {'v'*size}\\n\".encode())\n+    await writer.drain()\n+\n+    assert 'OK' in (await reader.readline()).decode()\n+\n+    writer.close()\n+    await writer.wait_closed()\n",
  "problem_statement": "Fix redis-cli --pipeline behaviour\nWhen I run this snippet\r\n\r\n``` \r\nfor file in gen/followers-chunks-*; \\\r\ndo awk '{ print \"SADD \" $0}' $file | redis-cli --pipe; done \\\r\n&& time wait && redis-cli dbsize\r\n```\r\n\r\nIt executes only the first batch for DF\r\n\r\nWhat is more, the single command simply fails to run with no error output even in vebose mode\n",
  "hints_text": "Update:\r\n\r\n`CheckForHttpProto` fails\r\n\r\nHow to reproduce:\r\n\r\n```\r\nimport random\r\n\r\nMAX_USERS = 10_000\r\nMAX_FOLLOWERS = 1_000\r\n\r\nf = open('out.txt', 'w')\r\n\r\nfor i in range(1, MAX_USERS):\r\n    nick = f'u{i}'\r\n    num_fws = random.randint(10, MAX_FOLLOWERS)\r\n    fws = random.sample(range(1, MAX_USERS), num_fws)\r\n    fws_list = ' '.join(f'u{j}' for j in fws)\r\n    f.write(f'{nick} {fws_list}\\n')\r\n\r\nf.close()\r\n\r\n```\r\n\r\nand then just run\r\n\r\n``` \r\nawk '{ print \"SADD \" $0}' out.txt | redis-cli --pipe && redis-cli dbsize\r\n```",
  "created_at": "2023-03-01T14:39:13Z",
  "modified_files": [
    "src/facade/dragonfly_connection.cc"
  ],
  "modified_test_files": [
    "tests/dragonfly/connection_test.py"
  ]
}