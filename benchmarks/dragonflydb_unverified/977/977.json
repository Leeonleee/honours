{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 977,
  "instance_id": "dragonflydb__dragonfly-977",
  "issue_numbers": [
    "949"
  ],
  "base_commit": "52ac06e35894986271af1866c6f4bc07c927988d",
  "patch": "diff --git a/src/redis/t_zset.c b/src/redis/t_zset.c\nindex 2f4a0e12eb8e..92402888a04b 100644\n--- a/src/redis/t_zset.c\n+++ b/src/redis/t_zset.c\n@@ -1157,9 +1157,10 @@ void zsetConvert(robj *zobj, int encoding) {\n         zs->zsl = zslCreate();\n \n         eptr = lpSeek(zl,0);\n-        serverAssertWithInfo(NULL,zobj,eptr != NULL);\n-        sptr = lpNext(zl,eptr);\n-        serverAssertWithInfo(NULL,zobj,sptr != NULL);\n+        if (eptr != NULL) {\n+            sptr = lpNext(zl,eptr);\n+            serverAssertWithInfo(NULL,zobj,sptr != NULL);\n+        }\n \n         while (eptr != NULL) {\n             score = zzlGetScore(sptr);\ndiff --git a/src/server/zset_family.cc b/src/server/zset_family.cc\nindex c4a7f2ee8e30..e8e491efb598 100644\n--- a/src/server/zset_family.cc\n+++ b/src/server/zset_family.cc\n@@ -558,7 +558,7 @@ void IntervalVisitor::PopSkipList(ZSetFamily::TopNScored sc) {\n   if (params_.reverse) {\n     ln = zsl->tail;\n   } else {\n-    ln = zsl->header;\n+    ln = zsl->header->level[0].forward;\n   }\n \n   while (ln && sc--) {\n",
  "test_patch": "diff --git a/src/server/zset_family_test.cc b/src/server/zset_family_test.cc\nindex da6fa0abbdc5..f1b109908d75 100644\n--- a/src/server/zset_family_test.cc\n+++ b/src/server/zset_family_test.cc\n@@ -478,6 +478,16 @@ TEST_F(ZSetFamilyTest, ZPopMax) {\n   ASSERT_THAT(resp, ArrLen(0));\n }\n \n+TEST_F(ZSetFamilyTest, ZAddPopCrash) {\n+  for (int i = 0; i < 129; ++i) {\n+    auto resp = Run({\"zadd\", \"key\", absl::StrCat(i), absl::StrCat(\"element:\", i)});\n+    EXPECT_THAT(resp, IntArg(1));\n+  }\n+\n+  auto resp = Run({\"zpopmin\", \"key\"});\n+  EXPECT_EQ(resp, \"element:0\");\n+}\n+\n TEST_F(ZSetFamilyTest, Resp3) {\n   Run({\"hello\", \"3\"});\n   Run({\"zadd\", \"x\", \"1\", \"a\", \"2\", \"b\"});\ndiff --git a/tests/dragonfly/utility.py b/tests/dragonfly/utility.py\nindex 30029723d4c1..27010d7b2700 100644\n--- a/tests/dragonfly/utility.py\n+++ b/tests/dragonfly/utility.py\n@@ -199,7 +199,7 @@ def gen_shrink_cmd(self):\n         ('SPOP {k}', ValueType.SET),\n         ('HSETNX {k} v0 {val}', ValueType.HSET),\n         ('HINCRBY {k} v1 1', ValueType.HSET),\n-        # ('ZPOPMIN {k} 1', ValueType.ZSET), https://github.com/dragonflydb/dragonfly/issues/949\n+        ('ZPOPMIN {k} 1', ValueType.ZSET),\n         ('ZADD {k} 0 {val}', ValueType.ZSET),\n         ('JSON.NUMINCRBY {k} $..i 1', ValueType.JSON),\n         ('JSON.ARRPOP {k} $.arr', ValueType.JSON),\n",
  "problem_statement": "dragonfly crash in ZPOPMIN \n**Describe the bug**\r\nPC: @     0x5621149a53bb  (unknown)  sdslen\r\n    @     0x5621156baf0f         64  absl::lts_20230125::WriteFailureInfo()\r\n    @     0x5621156bb119         96  absl::lts_20230125::AbslFailureSignalHandler()\r\n    @     0x7fba3fb71520       3376  (unknown)\r\n    @     0x5621149ab28b        144  dfly::(anonymous namespace)::IntervalVisitor::PopSkipList()\r\n    @     0x5621149a9586        176  dfly::(anonymous namespace)::IntervalVisitor::ActionPop()\r\n    @     0x5621149a7281         32  dfly::(anonymous namespace)::IntervalVisitor::operator()()\r\n    @     0x5621149ddbb1         48  std::__invoke_impl<>()\r\n    @     0x5621149d9f04         48  std::__invoke<>()\r\n    @     0x5621149d64ca         48  std::__detail::__variant::__gen_vtable_impl<>::__visit_invoke()\r\n    @     0x5621149d6771         64  std::__do_visit<>()\r\n    @     0x5621149d6825         64  std::visit<>()\r\n    @     0x5621149cc1b6        336  dfly::ZSetFamily::OpPopCount[abi:cxx11]()\r\n    @     0x5621149c8cd2        128  dfly::ZSetFamily::ZPopMinMax()::{lambda()#1}::operator()()\r\n    @     0x5621149d5e56        112  _ZZN4dfly11Transaction18ScheduleSingleHopTIZNS_10ZSetFamily10ZPopMinMaxEN4absl12lts_202301254SpanINS5_IcEEEEbPNS_17ConnectionContextEEUlPS0_PNS_11EngineShardEE_EEDTclfp_fpTLDnEEEOT_ENKUlSA_SC_E_clESA_SC_\r\n    @     0x5621149e4f19         80  _ZSt13__invoke_implIN6facade8OpStatusERZN4dfly11Transaction18ScheduleSingleHopTIZNS2_10ZSetFamily10ZPopMinMaxEN4absl12lts_202301254SpanINS8_IcEEEEbPNS2_17ConnectionContextEEUlPS3_PNS2_11EngineShardEE_EEDTclfp_fpTLDnEEEOT_EUlSD_SF_E_JSD_SF_EESI_St14__invoke_otherOT0_DpOT1_\r\n    @     0x5621149e2231         64  _ZSt10__invoke_rIN6facade8OpStatusERZN4dfly11Transaction18ScheduleSingleHopTIZNS2_10ZSetFamily10ZPopMinMaxEN4absl12lts_202301254SpanINS8_IcEEEEbPNS2_17ConnectionContextEEUlPS3_PNS2_11EngineShardEE_EEDTclfp_fpTLDnEEEOT_EUlSD_SF_E_JSD_SF_EENSt9enable_ifIX16is_invocable_r_vISI_T0_DpT1_EESI_E4typeEOSN_DpOSO_\r\n    @     0x5621149dd705         80  _ZNSt17_Function_handlerIFN6facade8OpStatusEPN4dfly11TransactionEPNS2_11EngineShardEEZNS3_18ScheduleSingleHopTIZNS2_10ZSetFamily10ZPopMinMaxEN4absl12lts_202301254SpanINSC_IcEEEEbPNS2_17ConnectionContextEEUlS4_S6_E_EEDTclfp_fpTLDnEEEOT_EUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_\r\n    @     0x5621150f9869         80  std::function<>::operator()()\r\n    @     0x5621150d38f1        288  dfly::Transaction::RunQuickie()\r\n    @     0x5621150d5707        320  dfly::Transaction::ScheduleUniqueShard()\r\n    @     0x5621150cc7cd        192  dfly::Transaction::ScheduleSingleHop()::{lambda()#1}::operator()()\r\n    @     0x5621150ef3dd         48  std::__invoke_impl<>()\r\n    @     0x5621150edb6f         32  std::__invoke_r<>()\r\n    @     0x5621150ebefb         48  std::_Function_handler<>::_M_invoke()\r\n    @     0x5621146f5589         48  std::function<>::operator()()\r\n    @     0x5621152db4b5        240  util::fibers_ext::FiberQueue::Run()\r\n    @     0x562114fe57f2        192  dfly::EngineShard::EngineShard()::{lambda()#2}::operator()()\r\n    @     0x562114ffd85c         48  std::__invoke_impl<>()\r\n    @     0x562114ffa96b         32  std::__invoke<>()\r\n    @     0x562114ff7dd6         32  std::__apply_impl<>()\r\n    @     0x562114ff7e53         48  std::apply<>()\r\n    @     0x562114ff8097        112  boost::fibers::worker_context<>::run_()\r\n\r\n\r\n**To Reproduce**\r\nrun : redis-benchmark -r 200 -n 500 -t ZADD,ZPOPMIN\r\n\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2023-03-21T22:16:11Z",
  "modified_files": [
    "src/redis/t_zset.c",
    "src/server/zset_family.cc"
  ],
  "modified_test_files": [
    "src/server/zset_family_test.cc",
    "tests/dragonfly/utility.py"
  ]
}