You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
MULTI does not allow SELECT
**Describe the bug**
Im trying to use Dragonfly DB with StackExchange.Redis, which is the most popular redis library for C#.
However transactions do not work at all. After some debugging, I figured out the core issue. The issue is that dragonflydb doesnt seem to allow SELECT during MULTI. Dont ask me why it does that, but it does.

The command that SE.Redis sends is for example
```
SELECT 0 MULTI JSON.SET LoginSession:test . {"Id":"test"} SELECT 0 EXEC
```

**To Reproduce in CLI**
Steps to reproduce the behavior:
1. Start a new transaction with `MULTI`
2. `SELECT 0` (You can already see the error message)
3. `EXEC` to see the final error message that the library also responds with

**Expected behavior**
SELECT should be allowed in transactions, especially `SELECT 0`

**Screenshots**
DragonFly logs
![{8486689F-470C-447B-9512-1814CC9F7702}](https://github.com/user-attachments/assets/cf7568d7-79cc-466f-89fc-5dd3ffeba388)

Wireshark capture
![{7D5E22B6-68B2-4246-A05E-2D49432D8AD1}](https://github.com/user-attachments/assets/3896b35f-27fa-42eb-ac05-45e3566dceaa)



**Environment (please complete the following information):**
 - OS: WSL (docker desktop)
 - Kernel: # Command: `uname -a`
 - Containerized?: Docker
 - Dragonfly Version: 1.25.1

**Reproducible Code Snippet**
```cs
        var transaction = _connectionMultiplexer.GetDatabase().CreateTransaction();
        
        var executeAsync = transaction.ExecuteAsync("JSON.SET", new object[]
        {
            
                "LoginSession:test",
            ".",
            "{\"Id\":\"test\"}"
        });
        await transaction.ExecuteAsync();
        await executeAsync;
```

**Additional context**
This also affects libraries that build upon StackExchange.Redis like Redis.OM, this is where I encountered the bug the first time.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
