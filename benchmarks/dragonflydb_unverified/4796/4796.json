{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 4796,
  "instance_id": "dragonflydb__dragonfly-4796",
  "issue_numbers": [
    "4750"
  ],
  "base_commit": "0c31da1231ad73c6511b01b2787b92469d272fea",
  "patch": "diff --git a/src/redis/hyperloglog.c b/src/redis/hyperloglog.c\nindex 65b7cdfbc8e1..75b8937fd7cf 100644\n--- a/src/redis/hyperloglog.c\n+++ b/src/redis/hyperloglog.c\n@@ -1370,8 +1370,7 @@ int64_t pfcountSingle(struct HllBufferPtr hll_ptr) {\n }\n \n /* Merge dense-encoded HLL */\n-static void hllMergeDense(uint8_t* max, struct HllBufferPtr to) {\n-  uint8_t* registers = max + HLL_HDR_SIZE;\n+static void hllMergeDense(uint8_t* registers, struct HllBufferPtr to) {\n   uint8_t val;\n   struct hllhdr* hll_hdr = (struct hllhdr*)to.hll;\n \n",
  "test_patch": "diff --git a/src/server/hll_family_test.cc b/src/server/hll_family_test.cc\nindex 3c6dac7c3b75..7d162fc4fa63 100644\n--- a/src/server/hll_family_test.cc\n+++ b/src/server/hll_family_test.cc\n@@ -166,8 +166,15 @@ TEST_F(HllFamilyTest, MergeToNew) {\n TEST_F(HllFamilyTest, MergeToExisting) {\n   EXPECT_EQ(CheckedInt({\"pfadd\", \"key1\", \"1\", \"2\", \"3\"}), 1);\n   EXPECT_EQ(CheckedInt({\"pfadd\", \"key2\", \"4\", \"5\"}), 1);\n-  EXPECT_EQ(Run({\"pfmerge\", \"key2\", \"key1\"}), \"OK\");\n-  EXPECT_EQ(CheckedInt({\"pfcount\", \"key2\"}), 5);\n+  EXPECT_EQ(Run({\"pfmerge\", \"key3\", \"key2\", \"key1\"}), \"OK\");\n+  EXPECT_EQ(CheckedInt({\"pfcount\", \"key3\"}), 5);\n+  EXPECT_EQ(Run({\"pfmerge\", \"key3\", \"key3\"}), \"OK\");\n+  EXPECT_EQ(CheckedInt({\"pfcount\", \"key3\"}), 5);\n+  EXPECT_EQ(Run({\"pfmerge\", \"key3\"}), \"OK\");\n+  EXPECT_EQ(CheckedInt({\"pfcount\", \"key3\"}), 5);\n+  EXPECT_EQ(CheckedInt({\"pfadd\", \"key4\", \"4\", \"5\", \"6\"}), 1);\n+  EXPECT_EQ(Run({\"pfmerge\", \"key3\", \"key4\"}), \"OK\");\n+  EXPECT_EQ(CheckedInt({\"pfcount\", \"key3\"}), 6);\n }\n \n TEST_F(HllFamilyTest, MergeNonExisting) {\n",
  "problem_statement": "`PFMERGE` wrong behavior\n## Describe the Bug\n- `PFMERGE` accumulates the cardinality of `destination`.\n- If the `destination` HyperLogLog exists, it should be treated as one of the sources.\n- But since HyperLogLog counts unique values, the cardinality should not accumulate (see examples below).\n\n## To Reproduce\n```bash\n$> PFADD hll_01 1 2 3\n(integer) 1\n$> PFADD hll_02 4 5\n(integer) 1\n$> PFMERGE destination hll_01 hll_02\nOK\n$> PFCOUNT destination\n(integer) 5\n\n# No new unique member added.\n# Repeat the previous two commands.\n$> PFMERGE destination hll_01 hll_02\nOK\n$> PFCOUNT destination\n(integer) 10                           # This is wrong.\n$> PFMERGE destination hll_01 hll_02\nOK\n$> PFCOUNT destination\n(integer) 15                           # This is wrong.\n```\n\n## Expected Behavior\n\n- There's no new unique member added in `hll_01`, `hll_02`, and `destination`.\n- The merged `destination` HyperLogLog should have the same value onwards.\n\n```bash\n$> PFADD hll_01 1 2 3\n(integer) 1\n$> PFADD hll_02 4 5\n(integer) 1\n$> PFMERGE destination hll_01 hll_02\nOK\n$> PFCOUNT destination\n(integer) 5\n\n# No new unique member added.\n# Repeat the previous two commands.\n$> PFMERGE destination hll_01 hll_02\nOK\n$> PFCOUNT destination\n(integer) 5\n$> PFMERGE destination hll_01 hll_02\nOK\n$> PFCOUNT destination\n(integer) 5\n```\n\n## Environment\n - OS: MacOS\n - Kernel: Darwin Kernel Version 23.5.0: Wed May  1 20:14:38 PDT 2024; root:xnu-10063.121.3~5/RELEASE_ARM64_T6020 arm64\n - Containerized: Docker\n - Dragonfly Version: v1.27.2\n",
  "hints_text": "Thank you @Niennienzz !",
  "created_at": "2025-03-18T10:31:19Z",
  "modified_files": [
    "src/redis/hyperloglog.c"
  ],
  "modified_test_files": [
    "src/server/hll_family_test.cc"
  ]
}