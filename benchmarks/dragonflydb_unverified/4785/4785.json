{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 4785,
  "instance_id": "dragonflydb__dragonfly-4785",
  "issue_numbers": [
    "4672"
  ],
  "base_commit": "151e40e2c0d0f0b5f19dd428ead3d845ad789942",
  "patch": "diff --git a/src/core/compact_object.cc b/src/core/compact_object.cc\nindex d9a22e7364d9..56a0a6df4b4a 100644\n--- a/src/core/compact_object.cc\n+++ b/src/core/compact_object.cc\n@@ -875,6 +875,8 @@ void CompactObj::InitRobj(CompactObjType type, unsigned encoding, void* obj) {\n }\n \n void CompactObj::SetInt(int64_t val) {\n+  DCHECK(!IsExternal());\n+\n   if (INT_TAG != taglen_) {\n     SetMeta(INT_TAG, mask_ & ~kEncMask);\n   }\ndiff --git a/src/core/compact_object.h b/src/core/compact_object.h\nindex fe1a3b336e09..2f361989cdd8 100644\n--- a/src/core/compact_object.h\n+++ b/src/core/compact_object.h\n@@ -140,7 +140,7 @@ class CompactObj {\n     // IO_PENDING is set when the tiered storage has issued an i/o request to save the value. It is\n     // cleared when the io request finishes or is cancelled.\n     IO_PENDING = 0x20,\n-    \n+\n     // Applied only on keys that should be deleted asynchronously.\n     // (it can be the same value as IO_PENDING) that is applied only on values.\n     KEY_ASYNC_DELETE = 0x20,\n@@ -364,6 +364,12 @@ class CompactObj {\n \n   void SetExternal(size_t offset, uint32_t sz);\n \n+  // Switches to empty, non-external string.\n+  // Preserves all the attributes.\n+  void RemoveExternal() {\n+    SetMeta(0, mask_);\n+  }\n+\n   // Assigns a cooling record to the object together with its external slice.\n   void SetCool(size_t offset, uint32_t serialized_size, detail::TieredColdRecord* record);\n \ndiff --git a/src/server/string_family.cc b/src/server/string_family.cc\nindex 6651fc2807c0..e3a598d0714d 100644\n--- a/src/server/string_family.cc\n+++ b/src/server/string_family.cc\n@@ -110,8 +110,8 @@ class SetCmd {\n   OpStatus SetExisting(const SetParams& params, DbSlice::Iterator it, DbSlice::ExpIterator e_it,\n                        std::string_view key, std::string_view value);\n \n-  void AddNew(const SetParams& params, DbSlice::Iterator it, DbSlice::ExpIterator e_it,\n-              std::string_view key, std::string_view value);\n+  void AddNew(const SetParams& params, DbSlice::Iterator it, std::string_view key,\n+              std::string_view value);\n \n   // Called at the end of AddNew of SetExisting\n   void PostEdit(const SetParams& params, std::string_view key, std::string_view value,\n@@ -846,7 +846,7 @@ OpStatus SetCmd::Set(const SetParams& params, string_view key, string_view value\n \n     return SetExisting(params, op_res->it, op_res->exp_it, key, value);\n   } else {\n-    AddNew(params, op_res->it, op_res->exp_it, key, value);\n+    AddNew(params, op_res->it, key, value);\n     return OpStatus::OK;\n   }\n }\n@@ -869,19 +869,6 @@ OpStatus SetCmd::SetExisting(const SetParams& params, DbSlice::Iterator it,\n         e_it->second = db_slice.FromAbsoluteTime(at_ms);\n       } else {\n         // Add new expiry information.\n-\n-        // Note: some consistency checks, following #4672. Once it's resolved we can remove them.\n-        // -------------------------------------------------------------------------------------\n-        ExpireTable* etable = db_slice.GetTables(op_args_.db_cntx.db_index).second;\n-        ExpireIterator check_it = etable->Find(it->first.AsRef());\n-        if (IsValid(check_it)) {\n-          LOG(ERROR) << \"Inconsistent state in SetCmd::SetExisting \"\n-                     << \" key: \" << key << \", \"\n-                     << \"it.key:\" << it.key() << \", \"\n-                     << \"it->first:\" << it->first.ToString()\n-                     << \" params.prev_val: \" << params.prev_val << \" \" << params.flags;\n-        }\n-        // ------------------------------------------------\n         db_slice.AddExpire(op_args_.db_cntx.db_index, it, at_ms);\n       }\n     } else {\n@@ -893,6 +880,8 @@ OpStatus SetCmd::SetExisting(const SetParams& params, DbSlice::Iterator it,\n     it->first.SetSticky(true);\n   }\n \n+  bool has_expire = prime_value.HasExpire();\n+\n   // Update flags\n   prime_value.SetFlag(params.memcache_flags != 0);\n   db_slice.SetMCFlag(op_args_.db_cntx.db_index, it->first.AsRef(), params.memcache_flags);\n@@ -905,12 +894,14 @@ OpStatus SetCmd::SetExisting(const SetParams& params, DbSlice::Iterator it,\n   // overwrite existing entry.\n   prime_value.SetString(value);\n \n+  DCHECK_EQ(has_expire, prime_value.HasExpire());\n+\n   PostEdit(params, key, value, &prime_value);\n   return OpStatus::OK;\n }\n \n-void SetCmd::AddNew(const SetParams& params, DbSlice::Iterator it, DbSlice::ExpIterator e_it,\n-                    std::string_view key, std::string_view value) {\n+void SetCmd::AddNew(const SetParams& params, DbSlice::Iterator it, std::string_view key,\n+                    std::string_view value) {\n   auto& db_slice = op_args_.GetDbSlice();\n \n   // Adding new value.\ndiff --git a/src/server/tiered_storage.cc b/src/server/tiered_storage.cc\nindex 2ecbc586f2d9..bda265370d18 100644\n--- a/src/server/tiered_storage.cc\n+++ b/src/server/tiered_storage.cc\n@@ -424,6 +424,8 @@ bool TieredStorage::TryStash(DbIndex dbid, string_view key, PrimeValue* value) {\n \n void TieredStorage::Delete(DbIndex dbid, PrimeValue* value) {\n   DCHECK(value->IsExternal());\n+  DCHECK(!value->HasStashPending());\n+\n   ++stats_.total_deletes;\n \n   tiering::DiskSegment segment = value->GetExternalSlice();\n@@ -433,7 +435,7 @@ void TieredStorage::Delete(DbIndex dbid, PrimeValue* value) {\n   }\n \n   // In any case we delete the offloaded segment and reset the value.\n-  value->Reset();\n+  value->RemoveExternal();\n   op_manager_->DeleteOffloaded(dbid, segment);\n }\n \n",
  "test_patch": "diff --git a/src/server/tiered_storage_test.cc b/src/server/tiered_storage_test.cc\nindex 2a4630354f55..954aa5c32986 100644\n--- a/src/server/tiered_storage_test.cc\n+++ b/src/server/tiered_storage_test.cc\n@@ -334,4 +334,25 @@ TEST_F(TieredStorageTest, Expiry) {\n   EXPECT_EQ(resp, val);\n }\n \n+TEST_F(TieredStorageTest, SetExistingExpire) {\n+  absl::FlagSaver saver;\n+  SetFlag(&FLAGS_tiered_offload_threshold, 0.0f);  // offload all values\n+  SetFlag(&FLAGS_tiered_experimental_cooling, false);\n+\n+  const int kNum = 20;\n+  for (size_t i = 0; i < kNum; i++) {\n+    Run({\"SETEX\", absl::StrCat(\"k\", i), \"100\", BuildString(256)});\n+  }\n+  ExpectConditionWithinTimeout([&] { return GetMetrics().tiered_stats.total_stashes > 1; });\n+\n+  for (size_t i = 0; i < kNum; i++) {\n+    Run({\"SETEX\", absl::StrCat(\"k\", i), \"100\", BuildString(256)});\n+  }\n+\n+  for (size_t i = 0; i < kNum; i++) {\n+    auto resp = Run({\"TTL\", absl::StrCat(\"k\", i)});\n+    EXPECT_THAT(resp, IntArg(100));\n+  }\n+}\n+\n }  // namespace dfly\n",
  "problem_statement": "SIGABRT with ssd tiering on 1.26.3\nF20250228 09:25:57.923086    14 db_slice.cc:820] Check failed: db.expire.Insert(main_it->first.AsRef(), ExpirePeriod(delta)).second \n*** Check failure stack trace: ***\n    @     0x562e118a3923  google::LogMessage::SendToLog()\n    @     0x562e1189c0e7  google::LogMessage::Flush()\n    @     0x562e1189da6f  google::LogMessageFatal::~LogMessageFatal()\n    @     0x562e110e5338  dfly::DbSlice::AddExpire()\n    @     0x562e10f059c9  dfly::(anonymous namespace)::SetCmd::SetExisting()\n    @     0x562e10f05e77  dfly::(anonymous namespace)::SetCmd::Set()\n    @     0x562e10f067cf  _ZN4absl12lts_2024011619functional_internal12InvokeObjectIZN4dfly12_GLOBAL__N_110SetGenericERKNS4_6SetCmd9SetParamsESt17basic_string_viewIcSt11char_traitsIcEESC_bPNS3_11TransactionEEUlSE_PNS3_11EngineShardEE_NSD_14RunnableResultEJSE_SG_EEET0_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n    @     0x562e1111bc19  dfly::Transaction::RunCallback()\n    @     0x562e1111c7a9  dfly::Transaction::ScheduleInShard()\n    @     0x562e1111e8df  dfly::Transaction::ScheduleBatchInShard()\n    @     0x562e11689d05  util::fb2::FiberQueue::Run()\n    @     0x562e11169b90  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberEN4util3fb219FixedStackAllocatorEZNS6_6detail15WorkerFiberImplIZN4dfly9TaskQueue5StartESt17basic_string_viewIcSt11char_traitsIcEEEUlvE_JEEC4IS7_EESF_RKNS0_12preallocatedEOT_OSG_EUlOS4_E_EEEEvNS1_10transfer_tE\n    @     0x562e116a900f  make_fcontext\n*** SIGABRT received at time=1740734757 on cpu 2 ***\nPC: @     0x7f9721e8a9fc  (unknown)  pthread_kill\n[failure_signal_handler.cc : 345] RAW: Signal 11 raised at PC=0x7f9721e1c898 while already in AbslFailureSignalHandler()\n*** SIGSEGV received at time=1740734757 on cpu 2 ***\nPC: @     0x7f9721e1c898  (unknown)  abort\n\n\n\n2. **Pod Details:**\n   - The pod crashed with Exit Code: 139 (SIGSEGV - Segmentation fault)\n   - Resource limits: 4Gi memory, 4 CPU\n   - Resource requests: 1Gi memory, 200m CPU\n   - Dragonfly version: df-v1.26.3\n   - Command args include `--maxmemory=1GB`\n\n",
  "hints_text": "thanks. how do you run it? with replication?\nno replication. this is second revision of running that failed with same error. previous attempt was only with maxmemory.\n\n    Args:\n      --alsologtostderr\n      --bind=::\n      --port=6379\n      --maxmemory=14G\n      --proactor_threads=4\n      --request_cache_limit=8000000\n      --eviction_memory_budget_threshold=0.5\n      --mem_defrag_threshold=0.1\n      --tiered_offload_threshold=0.1\n      --dir=/data\n      --dbfilename=backup\n      --tiered_prefix=/data/ssd\n      --version_check=false\n\nAny other information to provide?\nhow long did process run before it crashed? Trying to see how frequent it is.\nabout 2-3 mins from start each time.\nit falls on update existing key \nSET EX 24h\n\nwe have pretty big dataset it happens when we hitting upper memory limit.\nDo you use the `GET` option, i.e. `SET  GET EX ...`  or it's a pure SET?\nAlso do you use any NX/XX options?\nI am guessing that without `--tiered_prefix` it will work, is it possible to verify? \nwe're doing\n`set key value ex 84600 nx`\nnext we're getting it\n`get key`\nif it found we're trying to update\n`set key value ex 84600 xx`\nthen df crashes\nttl definitely is not expiring\noffloading to SSD was the only reason we switched from redis. \nwe have limits on memory and unpredictable size of data to store. \nso we decided to take offloading function of redis but it turns out that it available only on enterprise version. \nIs there anything in the server logs? Are you on the cloud? \nIf you are on one of the major clouds, we can create a datastore that  for you and monitor it, with your traffic crashing it\n> Is there anything in the server logs? Are you on the cloud?\n\nno there is nothing else in the server logs\nthe error wont appear if you dont update the ttl but leave it untouched when updating value\n@mainpart  I will build a custom container to debug it further. will you be able to try it out?\nNo, it's not necessary. \nWe changed our algorithms so we do not update ttl. That's enough for us. \n\nThe data we use is a private cloud repository so we can't give it outside.\nWell, we will appreciate if you decide to help us with finding the bug even without disclosing the data. The debug printings will help us to understand the state better during the failure.\n> Well, we will appreciate if you decide to help us with finding the bug even without disclosing the data. The debug printings will help us to understand the state better during the failure.\n\ncan you build and publish image\nwe ll send you logs back\n@iamtraining  can you please run `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-5aa1990` ?\n> [@iamtraining](https://github.com/iamtraining) can you please run `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-5aa1990` ?\n\nE20250307 11:19:21.232584    13 string_family.cc:878] Inconsistent state in SetCmd::SetExisting  key: image.scanner:store:scan-job:b49b5a634f9724afd19c06e2:application/vnd.security.vulnerability.report; version=1.1, it.key:image.scanner:store:scan-job:b49b5a634f9724afd19c06e2:application/vnd.security.vulnerability.report; version=1.1, it->first:image.scanner:store:scan-job:b49b5a634f9724afd19c06e2:application/vnd.security.vulnerability.report; version=1.1 params.prev_val: 0 18\nF20250307 11:19:21.232707    13 db_slice.cc:927] Check failed: db.expire.Insert(main_it->first.AsRef(), ExpirePeriod(delta)).second\n*** Check failure stack trace: ***\n    @     0x5597352b9ea3  google::LogMessage::SendToLog()\n    @     0x5597352b2347  google::LogMessage::Flush()\n    @     0x5597352b3ccf  google::LogMessageFatal::~LogMessageFatal()\n    @     0x559734ae2b08  dfly::DbSlice::AddExpire()\n    @     0x5597348ffdbd  dfly::(anonymous namespace)::SetCmd::SetExisting()\n    @     0x5597349002b7  dfly::(anonymous namespace)::SetCmd::Set()\n    @     0x559734900c0f  _ZN4absl12lts_2024072219functional_internal12InvokeObjectIZN4dfly12_GLOBAL__N_110SetGenericERKNS4_6SetCmd9SetParamsESt17basic_string_viewIcSt11char_traitsIcEESC_bPNS3_11TransactionEEUlSE_PNS3_11EngineShardEE_NSD_14RunnableResultEJSE_SG_EEET0_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n    @     0x559734b2539a  dfly::Transaction::RunCallback()\n    @     0x559734b25d0a  dfly::Transaction::ScheduleInShard()\n    @     0x559734b26ed2  dfly::Transaction::ScheduleInternal()\n    @     0x559734b27a81  dfly::Transaction::Execute()\n    @     0x559734b27b9a  dfly::Transaction::ScheduleSingleHop()\n    @     0x5597348fb2ee  dfly::StringFamily::Set()\n    @     0x559734b0611f  dfly::CommandId::Invoke()\n    @     0x5597347f8373  dfly::Service::InvokeCmd()\n    @     0x5597347fefe1  dfly::Service::DispatchCommand()\n    @     0x559734c01be9  facade::Connection::DispatchSingle()\n    @     0x559734c0213f  facade::Connection::ParseRedis()\n    @     0x559734c0277c  facade::Connection::IoLoop()\n    @     0x559734c02e0d  facade::Connection::ConnectionFlow()\n    @     0x559734c03f3f  facade::Connection::HandleRequests()\n    @     0x5597350718bd  util::ListenerInterface::RunSingleConnection()\n    @     0x559735071e25  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberEN4util3fb219FixedStackAllocatorEZNS6_6detail15WorkerFiberImplIZZNS5_17ListenerInterface13RunAcceptLoopEvENKUlvE0_clEvEUlvE_JEEC4IS7_EESt17basic_string_viewIcSt11char_traitsIcEERKNS0_12preallocatedEOT_OSC_EUlOS4_E_EEEEvNS1_10transfer_tE\n    @     0x5597350beb5f  make_fcontext\n*** SIGABRT received at time=1741346361 on cpu 2 ***\nPC: @     0x7fe2e29749fc  (unknown)  pthread_kill\n[failure_signal_handler.cc : 345] RAW: Signal 11 raised at PC=0x7fe2e2906898 while already in AbslFailureSignalHandler()\n*** SIGSEGV received at time=1741346361 on cpu 2 ***\nPC: @     0x7fe2e2906898  (unknown)  abort\n\nThanks, this helped. I will need another run though.  @mainpart can you please try again with `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-bbd0a96` ?\n@romange We are facing similar issue\n```\nCheck failed: db.expire.Insert(main_it->first.AsRef(), ExpirePeriod(delta)).second \n*** Check failure stack trace: ***\n    @     0x56632e336343  google::LogMessage::SendToLog()\n    @     0x56632e32eb07  google::LogMessage::Flush()\n    @     0x56632e33048f  google::LogMessageFatal::~LogMessageFatal()\n    @     0x56632dbc7810  dfly::DbSlice::AddExpire()\n    @     0x56632da03aa8  dfly::SetCmd::SetExisting()\n    @     0x56632da0419d  dfly::SetCmd::Set()\n    @     0x56632da044ff  _ZN4absl12lts_2024011619functional_internal12InvokeObjectIZN4dfly10SetGenericEPNS3_17ConnectionContextERKNS3_6SetCmd9SetParamsESt17basic_string_viewIcSt11char_traitsIcEESD_EUlPNS3_11TransactionEPNS3_11EngineShardEE_NSE_14RunnableResultEJSF_SH_EEET0_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n    @     0x56632dbfdb19  dfly::Transaction::RunCallback()\n    @     0x56632dbfe639  dfly::Transaction::ScheduleInShard()\n    @     0x56632dc0074f  dfly::Transaction::ScheduleBatchInShard()\n    @     0x56632e120845  util::fb2::FiberQueue::Run()\n    @     0x56632dc41620  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberEN4util3fb219FixedStackAllocatorEZNS6_6detail15WorkerFiberImplIZN4dfly9TaskQueue5StartESt17basic_string_viewIcSt11char_traitsIcEEEUlvE_JEEC4IS7_EESF_RKNS0_12preallocatedEOT_OSG_EUlOS4_E_EEEEvNS1_10transfer_tE\n    @     0x56632e13b96f  make_fcontext\n*** SIGABRT received at time=1741174146 on cpu 0 ***\nPC: @     0x7b23d83f49fc  (unknown)  pthread_kill\n[failure_signal_handler.cc : 345] RAW: Signal 11 raised at PC=0x7b23d8386898 while already in AbslFailureSignalHandler()\n*** SIGSEGV received at time=1741174146 on cpu 0 ***\nPC: @     0x7b23d8386898  (unknown)  abort\n```\nWe are using dragonfly kubernetes operator, here are the values: \n```\napiVersion: dragonflydb.io/v1alpha1\nkind: Dragonfly\nmetadata:\n  name: dragonfly-sentry\n  namespace: sentry\n  labels:\n    app.kubernetes.io/name: dragonfly\n    app.kubernetes.io/instance: dragonfly-sentry\n    app.kubernetes.io/part-of: dragonfly-operator\n    app.kubernetes.io/managed-by: helm\n    app.kubernetes.io/created-by: dragonfly-operator\nspec:\n  replicas: 1  # HA causing issues, so keeping it 1\n  image: \"docker.dragonflydb.io/dragonflydb/dragonfly:v1.27.1\"\n\n  resources:\n    requests:\n      cpu: \"2\"\n      memory: \"26Gi\"\n    limits:\n      memory: \"26Gi\"\n\n  args:\n    - \"--tiered_prefix=/dragonfly/snapshots/dragonfly\"\n    - \"--maxclients=100000\"\n    - \"--tcp_keepalive=60\"\n\n  snapshot:\n    cron: \"\"\n    persistentVolumeClaimSpec:\n      accessModes:\n        - ReadWriteOnce\n      storageClassName: premium-rwo\n      resources:\n        requests:\n          storage: 500Gi\n\n  nodeSelector:\n    Dragonfly: \"True\"\n\n  tolerations:\n    - key: dedicated\n      operator: Equal\n      value: dragonfly\n      effect: NoExecute\n```\nLet me know if you need more details.\n@adityaupadhyay-fynd  can you please use `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-bbd0a96` and share the full server logs with us once it crashes?\n@romange Here are the logs, using `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-bbd0a96`\n\n```\n[dragonfly-sentry-0] E20250312 10:23:03.659698    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:7001be780b7e4cf6bb3bf05c1aeeccac:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.671336    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:7ebd3961b1864188bb617477a3bfeae0:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.677497    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:ce55f6c172484446b010a4ba1dffc787:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.688176    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:a94b3c2b990441e292accd72da12c6fd:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.690101    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:f08a156885ae4e6a858b1ea28393ea85:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.691282    13 db_slice.cc:573] Expired item in expire table, but not in prime table: e:28b7fd8db2ad47408fc8b9a89bcaf505:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.692900    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:d6f09bf0f21c4a1899f1828b7d76dfa7:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.693713    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:3c825c47e3df4818b7a1e1705529b7d9:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.694005    13 db_slice.cc:573] Expired item in expire table, but not in prime table: e:3c7173242ef74b4287399ded97752263:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.694181    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:d11db1a6120e47cf9c364678fa9a6ac7:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.694900    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:562623bd35f14a518fc638a2a5e0f755:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.696310    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:7001be780b7e4cf6bb3bf05c1aeeccac:758 0 0\n[dragonfly-sentry-0] E20250312 10:23:03.696338    14 string_family.cc:888] Inconsistent state in SetCmd::SetExisting  key: e:7001be780b7e4cf6bb3bf05c1aeeccac:758, it.key:e:7001be780b7e4cf6bb3bf05c1aeeccac:758, it->first:e:7001be780b7e4cf6bb3bf05c1aeeccac:758 params.prev_val: 0 16\n[dragonfly-sentry-0] F20250312 10:23:03.696354    14 db_slice.cc:935] Check failed: db.expire.Insert(main_it->first.AsRef(), ExpirePeriod(delta)).second \n[dragonfly-sentry-0] *** Check failure stack trace: ***\n[dragonfly-sentry-0] E20250312 10:23:03.696529    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:6d38b8d90901435e99462496e589837a:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.697285    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:07bf6e2540fc4bb4b3f9c1f6e24dfa9e:758 1 1\n[dragonfly-sentry-0]     @     0x5cecf02b7ea3  google::LogMessage::SendToLog()\n[dragonfly-sentry-0] E20250312 10:23:03.697979    13 db_slice.cc:573] Expired item in expire table, but not in prime table: e:855d12875d644c46b44d351e42150d1f:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.698073    13 db_slice.cc:573] Expired item in expire table, but not in prime table: e:f67e8c4af3f445d4bdc2a29d95380e31:758 1 1\n[dragonfly-sentry-0]     @     0x5cecf02b0347  google::LogMessage::Flush()\n[dragonfly-sentry-0]     @     0x5cecf02b1ccf  google::LogMessageFatal::~LogMessageFatal()\n[dragonfly-sentry-0] E20250312 10:23:03.699990    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:33b47b8352fb4ebabb799fbf8ce7ab06:758 1 1\n[dragonfly-sentry-0]     @     0x5cecefae1318  dfly::DbSlice::AddExpire()\n[dragonfly-sentry-0]     @     0x5cecef8fdddd  dfly::(anonymous namespace)::SetCmd::SetExisting()\n[dragonfly-sentry-0]     @     0x5cecef8fe56b  dfly::(anonymous namespace)::SetCmd::Set()\n[dragonfly-sentry-0]     @     0x5cecef8fee5f  _ZN4absl12lts_2024072219functional_internal12InvokeObjectIZN4dfly12_GLOBAL__N_110SetGenericERKNS4_6SetCmd9SetParamsESt17basic_string_viewIcSt11char_traitsIcEESC_bPNS3_11TransactionEEUlSE_PNS3_11EngineShardEE_NSD_14RunnableResultEJSE_SG_EEET0_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n[dragonfly-sentry-0]     @     0x5cecefb23c9a  dfly::Transaction::RunCallback()\n[dragonfly-sentry-0] E20250312 10:23:03.703192    12 db_slice.cc:573] Expired item in expire table, but not in prime table: e:b1f337b837a6474dab19d5b10583f9f7:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.704550    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:dea0c092e23d43d595ad5f39becc098b:758 1 1\n[dragonfly-sentry-0]     @     0x5cecefb2460a  dfly::Transaction::ScheduleInShard()\n[dragonfly-sentry-0]     @     0x5cecefb246dc  _ZNSt17_Function_handlerIFvvEZN4dfly11Transaction16ScheduleInternalEvEUlvE0_E9_M_invokeERKSt9_Any_data\n[dragonfly-sentry-0]     @     0x5cecf009acb4  util::fb2::FiberQueue::Run()\n[dragonfly-sentry-0]     @     0x5cecefb7ab10  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberEN4util3fb219FixedStackAllocatorEZNS6_6detail15WorkerFiberImplIZN4dfly9TaskQueue5StartESt17basic_string_viewIcSt11char_traitsIcEEEUlvE_JEEC4IS7_EESF_RKNS0_12preallocatedEOT_OSG_EUlOS4_E_EEEEvNS1_10transfer_tE\n[dragonfly-sentry-0] E20250312 10:23:03.707162    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:d7f57e655f46417ea2c95419a73e105b:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.707410    13 db_slice.cc:573] Expired item in expire table, but not in prime table: e:aaee1ffa8ea848c4b0c7b80d6d1af35f:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.707566    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:4c554bd5554245b1ad247927031640e3:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.707610    12 db_slice.cc:573] Expired item in expire table, but not in prime table: e:7b25fb9a22ac4b3f9e8d14b1adea098d:758 1 1\n[dragonfly-sentry-0]     @     0x5cecf00bd45f  make_fcontext\n[dragonfly-sentry-0] *** SIGABRT received at time=1741774983 on cpu 3 ***\n[dragonfly-sentry-0] PC: @     0x7a9ba7cd29fc  (unknown)  pthread_kill\n[dragonfly-sentry-0] [failure_signal_handler.cc : 345] RAW: Signal 11 raised at PC=0x7a9ba7c64898 while already in AbslFailureSignalHandler()\n[dragonfly-sentry-0] *** SIGSEGV received at time=1741774983 on cpu 3 ***\n[dragonfly-sentry-0] PC: @     0x7a9ba7c64898  (unknown)  abort\n[dragonfly-sentry-0] E20250312 10:23:03.709760    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:15ed3c82b97a439699945630e2088ee2:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.709847    13 db_slice.cc:573] Expired item in expire table, but not in prime table: e:a7644431495b4ea68495f7223f2383fd:758 1 1\n[dragonfly-sentry-0] E20250312 10:23:03.713244    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:d11db1a6120e47cf9c364678fa9a6ac7:758 0 0\n[dragonfly-sentry-0] E20250312 10:23:03.713271    11 string_family.cc:888] Inconsistent state in SetCmd::SetExisting  key: e:d11db1a6120e47cf9c364678fa9a6ac7:758, it.key:e:d11db1a6120e47cf9c364678fa9a6ac7:758, it->first:e:d11db1a6120e47cf9c364678fa9a6ac7:758 params.prev_val: 0 16\n[dragonfly-sentry-0] F20250312 10:23:03.713282    11 db_slice.cc:935] Check failed: db.expire.Insert(main_it->first.AsRef(), ExpirePeriod(delta)).second \n[dragonfly-sentry-0] *** Check failure stack trace: ***\n[dragonfly-sentry-0]     @     0x5cecf02b7ea3  google::LogMessage::SendToLog()\n[dragonfly-sentry-0]     @     0x5cecf02b0347  google::LogMessage::Flush()\n[dragonfly-sentry-0]     @     0x5cecf02b1ccf  google::LogMessageFatal::~LogMessageFatal()\n[dragonfly-sentry-0]     @     0x5cecefae1318  dfly::DbSlice::AddExpire()\n[dragonfly-sentry-0]     @     0x5cecef8fdddd  dfly::(anonymous namespace)::SetCmd::SetExisting()\n[dragonfly-sentry-0]     @     0x5cecef8fe56b  dfly::(anonymous namespace)::SetCmd::Set()\n[dragonfly-sentry-0]     @     0x5cecef8fee5f  _ZN4absl12lts_2024072219functional_internal12InvokeObjectIZN4dfly12_GLOBAL__N_110SetGenericERKNS4_6SetCmd9SetParamsESt17basic_string_viewIcSt11char_traitsIcEESC_bPNS3_11TransactionEEUlSE_PNS3_11EngineShardEE_NSD_14RunnableResultEJSE_SG_EEET0_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n[dragonfly-sentry-0]     @     0x5cecefb23c9a  dfly::Transaction::RunCallback()\n[dragonfly-sentry-0] E20250312 10:23:03.719271    12 db_slice.cc:573] Expired item in expire table, but not in prime table: e:c138e076cc7342beba9add4be8d47f8d:758 1 1\n[dragonfly-sentry-0]     @     0x5cecefb2460a  dfly::Transaction::ScheduleInShard()\n[dragonfly-sentry-0]     @     0x5cecefb246dc  _ZNSt17_Function_handlerIFvvEZN4dfly11Transaction16ScheduleInternalEvEUlvE0_E9_M_invokeERKSt9_Any_data\n```\n@adityaupadhyay-fynd  it really really helped me to narrow this down but unfortunately i need another run.\n1. can you please try again with ghcr.io/dragonflydb/dragonfly-dev:ubuntu-bd08528 ?\n2. how quickly does it reproduce? is it possible to reproduce it somehow in my environment?\n@romange  The frequency of this error is quite high, sometimes occurring upto 8 times in an hour. We tried hosting dragonfly on VM instead of Kubernetes also, but faced the same issue.\n\nWe are running this as a replacement for Redis for a self hosted version of a tool called Sentry. Interestingly, we have another identical Sentry setup running Dragonfly, however we are not facing this issue on that setup. So not sure how you would be able to replicate this, but if you need more logs from either setup I will be happy to share them with you.\n\nLogs using  `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-bd08528` image\n```\nE20250313 06:50:42.811220    14 tiered_storage.cc:161] Inconsistent expire state for e:596997b857c64fbe82fcdedb9af77206:758\nE20250313 06:50:42.811242    14 tiered_storage.cc:161] Inconsistent expire state for e:1f7cbc5ab0ae49a2b44932a8020837a5:758\nE20250313 06:50:42.806047    13 tiered_storage.cc:161] Inconsistent expire state for e:08bbe74ac3db404d8241fdc72b954537:758\nE20250313 06:50:42.814425    13 tiered_storage.cc:161] Inconsistent expire state for e:8ca941ec29cd42748521e1d1b655de9d:758\nE20250313 06:50:42.814450    13 tiered_storage.cc:161] Inconsistent expire state for e:8e2f9af9fa534ef281f70684bc6dea4e:758\nW20250313 06:50:42.973462    14 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nE20250313 06:50:43.059314    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:21dd3197bb7d445c84d959e1c655d0f0:758 1 1\nW20250313 06:50:43.168561    13 main_service.cc:1355]  EVALSHA 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e 1 758 RECORD 1741846613 sim:1 8 2592000 3 5000 758 2882967 a 1 5254,7264 1 1 4037,140 1 1 172,15442 1 1 1531,9103 1 1 2200,881 1 1 3162,8648 1 1 429,9271 1 1 387,835 1 c 1 4166,3080 1 1 12891,7430 1 1 18313,12268 1 1 3190,17277 1 1 6866,2747 1 1 15657,6402 1 1 15561,1252 1 1 7513,14809 1 failed with reason: Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 06:50:43.179450    14 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 06:50:43.381839    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nE20250313 06:50:43.446089    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:1b9fe5e9d6814e5fa5a501cc60776e41:758 1 1\nW20250313 06:50:43.585512    11 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nE20250313 06:50:43.785785    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:299b97378d6b456fa1af89daa70e3017:758 1 1\nW20250313 06:50:43.787040    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nE20250313 06:50:43.788897    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:2070833dae244d85be07945db947f86f:758 1 1\nE20250313 06:50:43.828667    13 db_slice.cc:573] Expired item in expire table, but not in prime table: e:f87534c1eb6e456997a400376cda5e51:758 1 1\nE20250313 06:50:43.931804    12 db_slice.cc:573] Expired item in expire table, but not in prime table: e:a398e169f4394743a8cc805efb17e9b5:758 1 1\nE20250313 06:50:43.945291    11 db_slice.cc:573] Expired item in expire table, but not in prime table: e:21dd3197bb7d445c84d959e1c655d0f0:758 0 0\nE20250313 06:50:43.945329    11 string_family.cc:888] Inconsistent state in SetCmd::SetExisting  key: e:21dd3197bb7d445c84d959e1c655d0f0:758, it.key:e:21dd3197bb7d445c84d959e1c655d0f0:758, it->first:e:21dd3197bb7d445c84d959e1c655d0f0:758 params.prev_val: 0 16\nF20250313 06:50:43.945343    11 db_slice.cc:935] Check failed: db.expire.Insert(main_it->first.AsRef(), ExpirePeriod(delta)).second\n*** Check failure stack trace: ***\n    @     0x59b9e1f6bea3  google::LogMessage::SendToLog()\n    @     0x59b9e1f64347  google::LogMessage::Flush()\n    @     0x59b9e1f65ccf  google::LogMessageFatal::~LogMessageFatal()\n    @     0x59b9e1794c48  dfly::DbSlice::AddExpire()\n    @     0x59b9e15b0e2d  dfly::(anonymous namespace)::SetCmd::SetExisting()\n    @     0x59b9e15b15bb  dfly::(anonymous namespace)::SetCmd::Set()\n    @     0x59b9e15b1eaf  _ZN4absl12lts_2024072219functional_internal12InvokeObjectIZN4dfly12_GLOBAL__N_110SetGenericERKNS4_6SetCmd9SetParamsESt17basic_string_viewIcSt11char_traitsIcEESC_bPNS3_11TransactionEEUlSE_PNS3_11EngineShardEE_NSD_14RunnableResultEJSE_SG_EEET0_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n    @     0x59b9e17d75ca  dfly::Transaction::RunCallback()\n    @     0x59b9e17d7f3a  dfly::Transaction::ScheduleInShard()\n    @     0x59b9e17d800c  _ZNSt17_Function_handlerIFvvEZN4dfly11Transaction16ScheduleInternalEvEUlvE0_E9_M_invokeERKSt9_Any_data\n    @     0x59b9e1d4e5e4  util::fb2::FiberQueue::Run()\n    @     0x59b9e182e440  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberEN4util3fb219FixedStackAllocatorEZNS6_6detail15WorkerFiberImplIZN4dfly9TaskQueue5StartESt17basic_string_viewIcSt11char_traitsIcEEEUlvE_JEEC4IS7_EESF_RKNS0_12preallocatedEOT_OSG_EUlOS4_E_EEEEvNS1_10transfer_tE\n    @     0x59b9e1d70d8f  make_fcontext\n*** SIGABRT received at time=1741848643 on cpu 0 ***\nPC: @     0x7a9eb72f29fc  (unknown)  pthread_kill\n[failure_signal_handler.cc : 345] RAW: Signal 11 raised at PC=0x7a9eb7284898 while already in AbslFailureSignalHandler()\n*** SIGSEGV received at time=1741848643 on cpu 0 ***\nPC: @     0x7a9eb7284898  (unknown)  abort\n```\nLogs from another run\n```\nE20250313 07:00:43.139518    11 tiered_storage.cc:161] Inconsistent expire state for e:4eed5903c47e4ce2adca73363af15077:758\nE20250313 07:00:43.139747    11 tiered_storage.cc:161] Inconsistent expire state for e:2a2e18c1cd364992962fd76be3b1b8db:758\nE20250313 07:00:43.142809    11 tiered_storage.cc:161] Inconsistent expire state for e:271ebfa83e924bfd898dfe67f68b7c29:758\nE20250313 07:00:43.143143    12 tiered_storage.cc:161] Inconsistent expire state for e:32b76b24167948e9986fdfe2ae3e2ad4:758\nE20250313 07:00:43.151912    11 tiered_storage.cc:161] Inconsistent expire state for e:7b4e210cdc5446aea1ab1d2803cb2c17:758\nE20250313 07:00:43.158300    14 tiered_storage.cc:161] Inconsistent expire state for e:bdf39ab8ad7f45748d80d26d8c444602:758\nE20250313 07:00:43.202508    13 tiered_storage.cc:161] Inconsistent expire state for e:5faf95eab9f64df7b42cdc8bf1e2556b:758\nE20250313 07:00:43.208093    14 tiered_storage.cc:161] Inconsistent expire state for e:395fe7d3de2b4f58981444bd837c9707:758\nW20250313 07:00:43.338932    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:43.546926    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:43.753705    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:43.957517    11 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:44.072194    13 main_service.cc:1355]  EVALSHA 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e 1 758 RECORD 1741846939 sim:1 8 2592000 3 5000 758 2882967 a 1 5254,7264 1 1 4037,140 1 1 172,15442 1 1 1531,9103 1 1 2200,881 1 1 3162,8648 1 1 429,9271 1 1 387,835 1 c 1 4166,3080 1 1 12891,7430 1 1 18313,12268 1 1 3190,17277 1 1 6866,2747 1 1 15657,6402 1 1 15561,1252 1 1 7513,14809 1 failed with reason: Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:44.177639    14 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:44.427978    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:44.628247    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:44.834594    11 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:45.037518    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{10}:a:f:352464\nW20250313 07:00:45.087677    13 main_service.cc:1355]  EVALSHA 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e 1 758 RECORD 1741847080 sim:1 8 2592000 3 5000 758 2882967 a 1 5254,7264 1 1 4037,140 1 1 172,15442 1 1 1531,9103 1 1 2200,881 1 1 3162,8648 1 1 429,9271 1 1 387,835 1 c 1 4166,3080 1 1 12891,7430 1 1 18313,12268 1 1 3190,17277 1 1 6866,2747 1 1 15657,6402 1 1 15561,1252 1 1 7513,14809 1 failed with reason: Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:45.256618    11 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nW20250313 07:00:45.488197    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{10}:a:f:5461\nW20250313 07:00:45.689709    13 script_mgr.cc:328] Error running script (call to 7dbebb8fbb0f92b2d5b95737d60edb4bb41a845e): @user_script:453: script tried accessing undeclared key, key: sim:1:{758}:a:f:2882967\nE20250313 07:00:45.859686    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:86871f40cd3a4c649acaffaaeea8d495:758 1 1\nE20250313 07:00:45.891831    14 db_slice.cc:573] Expired item in expire table, but not in prime table: e:86871f40cd3a4c649acaffaaeea8d495:758 0 0\nE20250313 07:00:45.891883    14 string_family.cc:888] Inconsistent state in SetCmd::SetExisting  key: e:86871f40cd3a4c649acaffaaeea8d495:758, it.key:e:86871f40cd3a4c649acaffaaeea8d495:758, it->first:e:86871f40cd3a4c649acaffaaeea8d495:758 params.prev_val: 0 16\nF20250313 07:00:45.891933    14 db_slice.cc:935] Check failed: db.expire.Insert(main_it->first.AsRef(), ExpirePeriod(delta)).second\n*** Check failure stack trace: ***\n    @     0x57056b5dfea3  google::LogMessage::SendToLog()\n    @     0x57056b5d8347  google::LogMessage::Flush()\n    @     0x57056b5d9ccf  google::LogMessageFatal::~LogMessageFatal()\n    @     0x57056ae08c48  dfly::DbSlice::AddExpire()\n    @     0x57056ac24e2d  dfly::(anonymous namespace)::SetCmd::SetExisting()\n    @     0x57056ac255bb  dfly::(anonymous namespace)::SetCmd::Set()\n    @     0x57056ac25eaf  _ZN4absl12lts_2024072219functional_internal12InvokeObjectIZN4dfly12_GLOBAL__N_110SetGenericERKNS4_6SetCmd9SetParamsESt17basic_string_viewIcSt11char_traitsIcEESC_bPNS3_11TransactionEEUlSE_PNS3_11EngineShardEE_NSD_14RunnableResultEJSE_SG_EEET0_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n    @     0x57056ae4b5ca  dfly::Transaction::RunCallback()\n    @     0x57056ae4bf3a  dfly::Transaction::ScheduleInShard()\n    @     0x57056ae4c00c  _ZNSt17_Function_handlerIFvvEZN4dfly11Transaction16ScheduleInternalEvEUlvE0_E9_M_invokeERKSt9_Any_data\n    @     0x57056b3c25e4  util::fb2::FiberQueue::Run()\n    @     0x57056aea2440  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberEN4util3fb219FixedStackAllocatorEZNS6_6detail15WorkerFiberImplIZN4dfly9TaskQueue5StartESt17basic_string_viewIcSt11char_traitsIcEEEUlvE_JEEC4IS7_EESF_RKNS0_12preallocatedEOT_OSG_EUlOS4_E_EEEEvNS1_10transfer_tE\n    @     0x57056b3e4d8f  make_fcontext\n*** SIGABRT received at time=1741849245 on cpu 3 ***\nPC: @     0x7db30fd999fc  (unknown)  pthread_kill\n[failure_signal_handler.cc : 345] RAW: Signal 11 raised at PC=0x7db30fd2b898 while already in AbslFailureSignalHandler()\n*** SIGSEGV received at time=1741849245 on cpu 3 ***\nPC: @     0x7db30fd2b898  (unknown)  abort\n```\n\n@adityaupadhyay-fynd  Are these the entire logs? Dragonfly has info logs stored in `/tmp/` and they start with \n\n![Image](https://github.com/user-attachments/assets/2cbcffb5-4e14-4a87-a96e-b80d83d830fe)\n@adityaupadhyay-fynd  can you please try with `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-a8a2e07` and run it with `--tiered_experimental_cooling=false` ? Also, can you send me all the logs you have, not just the last few lines?\nIf you want you can DM me with the logs.\n@romange Sharing entire logs, running image `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-a8a2e07` with `--tiered_experimental_cooling=false` flag.\n\n[dragonfly-error.log](https://github.com/user-attachments/files/19229856/dragonfly-error.log)\nThanks, this iteration moved me another step closer. It happens almost immediately once the snapshot is loaded and yet I still do not find the root cause. I will publish another version of the image with more logs. So thankful for your help @adityaupadhyay-fynd !\n@adityaupadhyay-fynd  I've released `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-4fbbf14`. Can you please run it with \n`--tiered_experimental_cooling=false --vmodule=tiered_storage=1,disk_storage=1` ?\n\nthanks!\n@romange Here are the logs, image used: `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-4fbbf14`, with `--tiered_experimental_cooling=false --vmodule=tiered_storage=1,disk_storage=1` flags set\n\n[dragonfly-log-4fbbf14.log](https://github.com/user-attachments/files/19279361/dragonfly-log-4fbbf14.log)\nThanks @adityaupadhyay-fynd . Unfortunately that image did not pinpoint the root cause.\n\nCan you please try again with ghcr.io/dragonflydb/dragonfly-dev:ubuntu-dd3e015 ? Same flags?\n@romange here are the logs from `ghcr.io/dragonflydb/dragonfly-dev:ubuntu-dd3e015`, using same flags as before.\n\n[dragonfly-dd3e015-2.log](https://github.com/user-attachments/files/19281796/dragonfly-dd3e015-2.log)\n[dragonfly-dd3e015.log](https://github.com/user-attachments/files/19281797/dragonfly-dd3e015.log)\n\ud83c\udfaf",
  "created_at": "2025-03-17T09:54:47Z",
  "modified_files": [
    "src/core/compact_object.cc",
    "src/core/compact_object.h",
    "src/server/string_family.cc",
    "src/server/tiered_storage.cc"
  ],
  "modified_test_files": [
    "src/server/tiered_storage_test.cc"
  ]
}