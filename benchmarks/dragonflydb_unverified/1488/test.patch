diff --git a/src/server/cluster/cluster_family_test.cc b/src/server/cluster/cluster_family_test.cc
index fa32430a5fb3..92c886e767a6 100644
--- a/src/server/cluster/cluster_family_test.cc
+++ b/src/server/cluster/cluster_family_test.cc
@@ -733,6 +733,40 @@ TEST_F(ClusterFamilyTest, Keyslot) {
             CheckedInt({"cluster", "keyslot", "123{def}456"}));
 }
 
+TEST_F(ClusterFamilyTest, ClusterCrossSlot) {
+  string config_template = R"json(
+      [
+        {
+          "slot_ranges": [
+            {
+              "start": 0,
+              "end": 16383
+            }
+          ],
+          "master": {
+            "id": "$0",
+            "ip": "10.0.0.1",
+            "port": 7000
+          },
+          "replicas": []
+        }
+      ])json";
+  string config = absl::Substitute(config_template, RunAdmin({"dflycluster", "myid"}).GetString());
+
+  EXPECT_EQ(RunAdmin({"dflycluster", "config", config}), "OK");
+  EXPECT_EQ(Run({"SET", "key", "value"}), "OK");
+  EXPECT_EQ(Run({"GET", "key"}), "value");
+
+  EXPECT_EQ(Run({"MSET", "key", "value2"}), "OK");
+  EXPECT_EQ(Run({"MGET", "key"}), "value2");
+
+  EXPECT_THAT(Run({"MSET", "key", "value", "key2", "value2"}), ErrArg("CROSSSLOT"));
+  EXPECT_THAT(Run({"MGET", "key", "key2"}), ErrArg("CROSSSLOT"));
+
+  EXPECT_EQ(Run({"MSET", "key{tag}", "value", "key2{tag}", "value2"}), "OK");
+  EXPECT_THAT(Run({"MGET", "key{tag}", "key2{tag}"}), RespArray(ElementsAre("value", "value2")));
+}
+
 class ClusterFamilyEmulatedTest : public BaseFamilyTest {
  public:
   ClusterFamilyEmulatedTest() {
