diff --git a/tests/queries/0_stateless/01322_cast_keep_nullable.reference b/tests/queries/0_stateless/01322_cast_keep_nullable.reference
index 8ad99a101709..cfe80a7c1b14 100644
--- a/tests/queries/0_stateless/01322_cast_keep_nullable.reference
+++ b/tests/queries/0_stateless/01322_cast_keep_nullable.reference
@@ -4,6 +4,7 @@
 1	Nullable(Int32)
 2	Nullable(Float32)
 2	Nullable(UInt8)
+00000000-0000-0002-0000-000000000000	Nullable(UUID)
 3	Nullable(Int32)
 \N	Nullable(Int32)
 42	Nullable(Int32)
diff --git a/tests/queries/0_stateless/01322_cast_keep_nullable.sql b/tests/queries/0_stateless/01322_cast_keep_nullable.sql
index 109187174693..ef5f5747a7df 100644
--- a/tests/queries/0_stateless/01322_cast_keep_nullable.sql
+++ b/tests/queries/0_stateless/01322_cast_keep_nullable.sql
@@ -10,7 +10,7 @@ SELECT CAST(toNullable(toInt8(1)) AS Int32) as x, toTypeName(x);
 
 SELECT CAST(toNullable(toFloat32(2)), 'Float32') as x, toTypeName(x);
 SELECT CAST(toNullable(toFloat32(2)), 'UInt8') as x, toTypeName(x);
-SELECT CAST(toNullable(toFloat32(2)), 'UUID') as x, toTypeName(x); -- { serverError 70 }
+SELECT CAST(toNullable(toFloat32(2)), 'UUID') as x, toTypeName(x);
 
 SELECT CAST(if(1 = 1, toNullable(toInt8(3)), NULL) AS Int32) as x, toTypeName(x);
 SELECT CAST(if(1 = 0, toNullable(toInt8(3)), NULL) AS Int32) as x, toTypeName(x);
diff --git a/tests/queries/0_stateless/01556_accurate_cast_or_null.reference b/tests/queries/0_stateless/01556_accurate_cast_or_null.reference
new file mode 100644
index 000000000000..4287c755c3f3
--- /dev/null
+++ b/tests/queries/0_stateless/01556_accurate_cast_or_null.reference
@@ -0,0 +1,30 @@
+\N
+5
+\N
+\N
+5
+\N
+\N
+5
+\N
+\N
+5
+\N
+5
+\N
+5
+\N
+\N
+1.000000000
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
diff --git a/tests/queries/0_stateless/01556_accurate_cast_or_null.sql b/tests/queries/0_stateless/01556_accurate_cast_or_null.sql
new file mode 100644
index 000000000000..b11ed5939faf
--- /dev/null
+++ b/tests/queries/0_stateless/01556_accurate_cast_or_null.sql
@@ -0,0 +1,35 @@
+SELECT accurateCastOrNull(-1, 'UInt8');
+SELECT accurateCastOrNull(5, 'UInt8');
+SELECT accurateCastOrNull(257, 'UInt8');
+SELECT accurateCastOrNull(-1, 'UInt16');
+SELECT accurateCastOrNull(5, 'UInt16');
+SELECT accurateCastOrNull(65536, 'UInt16');
+SELECT accurateCastOrNull(-1, 'UInt32');
+SELECT accurateCastOrNull(5, 'UInt32');
+SELECT accurateCastOrNull(4294967296, 'UInt32');
+SELECT accurateCastOrNull(-1, 'UInt64');
+SELECT accurateCastOrNull(5, 'UInt64');
+SELECT accurateCastOrNull(-1, 'UInt256');
+SELECT accurateCastOrNull(5, 'UInt256');
+
+SELECT accurateCastOrNull(-129, 'Int8');
+SELECT accurateCastOrNull(5, 'Int8');
+SELECT accurateCastOrNull(128, 'Int8');
+
+SELECT accurateCastOrNull(10, 'Decimal32(9)');
+SELECT accurateCastOrNull(1, 'Decimal32(9)');
+SELECT accurateCastOrNull(-10, 'Decimal32(9)');
+
+SELECT accurateCastOrNull('123', 'FixedString(2)');
+
+SELECT accurateCastOrNull(inf, 'Int64');
+SELECT accurateCastOrNull(inf, 'Int128');
+SELECT accurateCastOrNull(inf, 'Int256');
+SELECT accurateCastOrNull(nan, 'Int64');
+SELECT accurateCastOrNull(nan, 'Int128');
+SELECT accurateCastOrNull(nan, 'Int256');
+
+SELECT accurateCastOrNull(inf, 'UInt64');
+SELECT accurateCastOrNull(inf, 'UInt256');
+SELECT accurateCastOrNull(nan, 'UInt64');
+SELECT accurateCastOrNull(nan, 'UInt256');
diff --git a/tests/queries/0_stateless/01581_to_int256_uint256_inf_nan.reference b/tests/queries/0_stateless/01581_to_int256_uint256_inf_nan.reference
deleted file mode 100644
index 37883cc6c47c..000000000000
--- a/tests/queries/0_stateless/01581_to_int256_uint256_inf_nan.reference
+++ /dev/null
@@ -1,6 +0,0 @@
--9223372036854775808
-170141183460469231731687303715884105727
--9223372036854775808
-170141183460469231731687303715884105727
-0
-0
diff --git a/tests/queries/0_stateless/01581_to_int256_uint256_inf_nan.sql b/tests/queries/0_stateless/01581_to_int256_uint256_inf_nan.sql
deleted file mode 100644
index b28fc80774fe..000000000000
--- a/tests/queries/0_stateless/01581_to_int256_uint256_inf_nan.sql
+++ /dev/null
@@ -1,10 +0,0 @@
-SELECT toInt64(inf);
-SELECT toInt128(inf);
-SELECT toInt256(inf); -- { serverError 48 }
-SELECT toInt64(nan);
-SELECT toInt128(nan);
-SELECT toInt256(nan); -- { serverError 48 }
-SELECT toUInt64(inf);
-SELECT toUInt256(inf); -- { serverError 48 }
-SELECT toUInt64(nan);
-SELECT toUInt256(nan); -- { serverError 48 }
diff --git a/tests/queries/0_stateless/01581_to_int_inf_nan.reference b/tests/queries/0_stateless/01581_to_int_inf_nan.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/01581_to_int_inf_nan.sql b/tests/queries/0_stateless/01581_to_int_inf_nan.sql
new file mode 100644
index 000000000000..4959b4d61e96
--- /dev/null
+++ b/tests/queries/0_stateless/01581_to_int_inf_nan.sql
@@ -0,0 +1,10 @@
+SELECT toInt64(inf); -- { serverError 70 }
+SELECT toInt128(inf); -- { serverError 70 }
+SELECT toInt256(inf); -- { serverError 70 }
+SELECT toInt64(nan); -- { serverError 70 }
+SELECT toInt128(nan); -- { serverError 70 }
+SELECT toInt256(nan); -- { serverError 70 }
+SELECT toUInt64(inf); -- { serverError 70 }
+SELECT toUInt256(inf); -- { serverError 70 }
+SELECT toUInt64(nan); -- { serverError 70 }
+SELECT toUInt256(nan); -- { serverError 70 }
diff --git a/tests/queries/0_stateless/01600_select_in_different_types.reference b/tests/queries/0_stateless/01600_select_in_different_types.reference
new file mode 100644
index 000000000000..626fb1527446
--- /dev/null
+++ b/tests/queries/0_stateless/01600_select_in_different_types.reference
@@ -0,0 +1,11 @@
+1
+0
+1
+1
+2
+2
+1
+1
+1
+0
+0
diff --git a/tests/queries/0_stateless/01600_select_in_different_types.sql b/tests/queries/0_stateless/01600_select_in_different_types.sql
new file mode 100644
index 000000000000..25d37c122e08
--- /dev/null
+++ b/tests/queries/0_stateless/01600_select_in_different_types.sql
@@ -0,0 +1,35 @@
+SELECT 1 IN (SELECT 1);
+SELECT -1 IN (SELECT 1);
+
+DROP TABLE IF EXISTS select_in_test;
+
+CREATE TABLE select_in_test(value UInt8) ENGINE=TinyLog;
+INSERT INTO select_in_test VALUES (1), (2), (3);
+
+SELECT value FROM select_in_test WHERE value IN (-1);
+SELECT value FROM select_in_test WHERE value IN (SELECT -1);
+
+SELECT value FROM select_in_test WHERE value IN (1);
+SELECT value FROM select_in_test WHERE value IN (SELECT 1);
+
+DROP TABLE select_in_test;
+
+CREATE TABLE select_in_test(value Int8) ENGINE=TinyLog;
+INSERT INTO select_in_test VALUES (-1), (2), (3);
+
+SELECT value FROM select_in_test WHERE value IN (1);
+SELECT value FROM select_in_test WHERE value IN (SELECT 1);
+
+SELECT value FROM select_in_test WHERE value IN (2);
+SELECT value FROM select_in_test WHERE value IN (SELECT 2);
+
+DROP TABLE select_in_test;
+
+SELECT 1 IN (1);
+SELECT '1' IN (SELECT 1);
+
+SELECT 1 IN (SELECT 1) SETTINGS transform_null_in = 1;
+SELECT 1 IN (SELECT 'a') SETTINGS transform_null_in = 1;
+SELECT 'a' IN (SELECT 1) SETTINGS transform_null_in = 1; -- { serverError 6 }
+SELECT 1 IN (SELECT -1) SETTINGS transform_null_in = 1;
+SELECT -1 IN (SELECT 1) SETTINGS transform_null_in = 1; -- { serverError 70 }
diff --git a/tests/queries/0_stateless/01601_accurate_cast.reference b/tests/queries/0_stateless/01601_accurate_cast.reference
new file mode 100644
index 000000000000..6ccedbdcfeaf
--- /dev/null
+++ b/tests/queries/0_stateless/01601_accurate_cast.reference
@@ -0,0 +1,8 @@
+5
+5
+5
+5
+5
+5
+1.000000000
+12
diff --git a/tests/queries/0_stateless/01601_accurate_cast.sql b/tests/queries/0_stateless/01601_accurate_cast.sql
new file mode 100644
index 000000000000..b5fd4fb04a43
--- /dev/null
+++ b/tests/queries/0_stateless/01601_accurate_cast.sql
@@ -0,0 +1,24 @@
+SELECT accurateCast(-1, 'UInt8'); -- { serverError 70 }
+SELECT accurateCast(5, 'UInt8');
+SELECT accurateCast(257, 'UInt8'); -- { serverError 70 }
+SELECT accurateCast(-1, 'UInt16'); -- { serverError 70 }
+SELECT accurateCast(5, 'UInt16');
+SELECT accurateCast(65536, 'UInt16'); -- { serverError 70 }
+SELECT accurateCast(-1, 'UInt32'); -- { serverError 70 }
+SELECT accurateCast(5, 'UInt32');
+SELECT accurateCast(4294967296, 'UInt32'); -- { serverError 70 }
+SELECT accurateCast(-1, 'UInt64'); -- { serverError 70 }
+SELECT accurateCast(5, 'UInt64');
+SELECT accurateCast(-1, 'UInt256'); -- { serverError 70 }
+SELECT accurateCast(5, 'UInt256');
+
+SELECT accurateCast(-129, 'Int8'); -- { serverError 70 }
+SELECT accurateCast(5, 'Int8');
+SELECT accurateCast(128, 'Int8'); -- { serverError 70 }
+
+SELECT accurateCast(10, 'Decimal32(9)'); -- { serverError 407 }
+SELECT accurateCast(1, 'Decimal32(9)');
+SELECT accurateCast(-10, 'Decimal32(9)'); -- { serverError 407 }
+
+SELECT accurateCast('123', 'FixedString(2)'); -- { serverError 131 }
+SELECT accurateCast('12', 'FixedString(2)');
