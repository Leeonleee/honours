diff --git a/tests/fuzz/dictionaries/functions.dict b/tests/fuzz/dictionaries/functions.dict
index e2668d7d0933..31a87bff5fc1 100644
--- a/tests/fuzz/dictionaries/functions.dict
+++ b/tests/fuzz/dictionaries/functions.dict
@@ -951,6 +951,7 @@
 "topKWeighted"
 "stochasticLinearRegression"
 "corr"
+"corrMatrix"
 "uniqCombined64"
 "intervalLengthSum"
 "uniqCombined"
@@ -965,6 +966,7 @@
 "quantiles"
 "sum"
 "covarPop"
+"covarPopMatrix"
 "row_number"
 "kurtPop"
 "kurtSamp"
@@ -1019,6 +1021,7 @@
 "quantilesTiming"
 "welchTTest"
 "covarSamp"
+"covarSampMatrix"
 "varPopStable"
 "quantileTiming"
 "quantileExactInclusive"
diff --git a/tests/queries/0_stateless/02515_aggregate_functions_statistics.reference b/tests/queries/0_stateless/02515_aggregate_functions_statistics.reference
new file mode 100644
index 000000000000..ecb6a756446a
--- /dev/null
+++ b/tests/queries/0_stateless/02515_aggregate_functions_statistics.reference
@@ -0,0 +1,18 @@
+[[nan]]
+[[nan]]
+[[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan]]
+[[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan]]
+[[1,-0.09561,0.24287,0.74554],[-0.09561,1,0.17303,0.10558],[0.24287,0.17303,1,0.25797],[0.74554,0.10558,0.25797,1]]
+0	0	0
+[[nan]]
+[[nan]]
+[[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan]]
+[[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan]]
+[[9.16667,-1.95556,4.5335,7.49776],[-1.95556,45.63378,7.20628,2.36899],[4.5335,7.20628,38.01103,5.28296],[7.49776,2.36899,5.28296,11.03352]]
+0	0	0
+[[nan]]
+[[0]]
+[[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan],[nan,nan,nan,nan]]
+[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]
+[[8.25,-1.76,4.08015,6.74799],[-1.76,41.0704,6.48565,2.13209],[4.08015,6.48565,34.20993,4.75467],[6.74799,2.13209,4.75467,9.93017]]
+0	0	0
diff --git a/tests/queries/0_stateless/02515_aggregate_functions_statistics.sql b/tests/queries/0_stateless/02515_aggregate_functions_statistics.sql
new file mode 100644
index 000000000000..df6e0cb066ce
--- /dev/null
+++ b/tests/queries/0_stateless/02515_aggregate_functions_statistics.sql
@@ -0,0 +1,41 @@
+DROP TABLE IF EXISTS fh;
+
+CREATE TABLE fh(a_value UInt32, b_value Float64, c_value Float64, d_value Float64) ENGINE = Memory;
+
+INSERT INTO fh(a_value, b_value, c_value, d_value) VALUES (1, 5.6,-4.4, 2.6),(2, -9.6, 3, 3.3),(3, -1.3,-4, 1.2),(4, 5.3,9.7,2.3),(5, 4.4,0.037,1.222),(6, -8.6,-7.8,2.1233),(7, 5.1,9.3,8.1222),(8, 7.9,-3.6,9.837),(9, -8.2,0.62,8.43555),(10, -3,7.3,6.762);
+
+SELECT corrMatrix(a_value) FROM (select a_value from fh limit 0);
+
+SELECT corrMatrix(a_value) FROM (select a_value from fh limit 1);
+
+SELECT corrMatrix(a_value, b_value, c_value, d_value) FROM (select a_value, b_value, c_value, d_value from fh limit 0);
+
+SELECT corrMatrix(a_value, b_value, c_value, d_value) FROM (select a_value, b_value, c_value, d_value from fh limit 1);
+
+SELECT arrayMap(x -> arrayMap(y -> round(y, 5), x), corrMatrix(a_value, b_value, c_value, d_value))  FROM fh;
+
+SELECT round(abs(corr(x1,x2) - corrMatrix(x1,x2)[1][2]), 5), round(abs(corr(x1,x1) - corrMatrix(x1,x2)[1][1]), 5), round(abs(corr(x2,x2) - corrMatrix(x1,x2)[2][2]), 5) from (select randNormal(100, 1) as x1, randNormal(100,5) as x2 from numbers(100000));
+
+SELECT covarSampMatrix(a_value) FROM (select a_value from fh limit 0);
+
+SELECT covarSampMatrix(a_value) FROM (select a_value from fh limit 1);
+
+SELECT covarSampMatrix(a_value, b_value, c_value, d_value) FROM (select a_value, b_value, c_value, d_value from fh limit 0);
+
+SELECT covarSampMatrix(a_value, b_value, c_value, d_value) FROM (select a_value, b_value, c_value, d_value from fh limit 1);
+
+SELECT arrayMap(x -> arrayMap(y -> round(y, 5), x), covarSampMatrix(a_value, b_value, c_value, d_value))  FROM fh;
+
+SELECT round(abs(covarSamp(x1,x2) - covarSampMatrix(x1,x2)[1][2]), 5), round(abs(covarSamp(x1,x1) - covarSampMatrix(x1,x2)[1][1]), 5), round(abs(covarSamp(x2,x2) - covarSampMatrix(x1,x2)[2][2]), 5) from (select randNormal(100, 1) as x1, randNormal(100,5) as x2 from numbers(100000));
+
+SELECT covarPopMatrix(a_value) FROM (select a_value from fh limit 0);
+
+SELECT covarPopMatrix(a_value) FROM (select a_value from fh limit 1);
+
+SELECT covarPopMatrix(a_value, b_value, c_value, d_value) FROM (select a_value, b_value, c_value, d_value from fh limit 0);
+
+SELECT covarPopMatrix(a_value, b_value, c_value, d_value) FROM (select a_value, b_value, c_value, d_value from fh limit 1);
+
+SELECT arrayMap(x -> arrayMap(y -> round(y, 5), x), covarPopMatrix(a_value, b_value, c_value, d_value))  FROM fh;
+
+SELECT round(abs(covarPop(x1,x2) - covarPopMatrix(x1,x2)[1][2]), 5), round(abs(covarPop(x1,x1) - covarPopMatrix(x1,x2)[1][1]), 5), round(abs(covarPop(x2,x2) - covarPopMatrix(x1,x2)[2][2]), 5) from (select randNormal(100, 1) as x1, randNormal(100,5) as x2 from numbers(100000));
