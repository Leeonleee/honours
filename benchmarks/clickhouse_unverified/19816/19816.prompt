You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
dictHas is not supported with range_hashed
dictGet works
```
SELECT dictGet('d_test', 'atr', toUInt64(1), toDateTime('2019-02-01 00:00:00')) AS x
┌─x─┐
│ 1 │
└───┘
```

but dictHas does not.
```
SELECT dictHas('d_test', toUInt64(1), toDateTime('2019-02-01 00:00:00')) AS x

Received exception from server (version 19.14.1):
Code: 42. DB::Exception: Received from localhost:9000. 
DB::Exception: Number of arguments for function dictHas doesn't match: passed 3, should be 2.
```

```


CREATE VIEW default.v_test (`id` UInt8, `start` DateTime, `end` DateTime, `atr` UInt8) AS SELECT 1 AS id, toDateTime('2019-01-01 00:00:00') AS start, toDateTime('2020-01-01 00:00:00') AS end, 1 AS atr

<?xml version="1.0"?>
<dictionaries>
<dictionary>
        <name>d_test</name>
        <source>
            <clickhouse>
                <host>localhost</host>
                <port>9000</port>
                <user>default</user>
                <password></password>
                <db>default</db>
                <table>v_test</table>
            </clickhouse>
        </source>

        <layout>
            <range_hashed />
        </layout>

        <structure>
            <id>
                <name>id</name>
            </id>
            <range_min>
                    <name>start</name>
		           <type>DateTime</type>
            </range_min>
            <range_max>
		    <name>end</name>
		    <type>DateTime</type>
            </range_max>
            <attribute>
                    <name>atr</name>
                    <type>UInt8</type>
                    <null_value>0</null_value>
            </attribute>
        </structure>

        <lifetime>
            <min>3000</min>
            <max>3600</max>
        </lifetime>
    </dictionary>
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
