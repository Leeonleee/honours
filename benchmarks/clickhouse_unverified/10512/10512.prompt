You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
ubsan in fuzz test: signed integer overflow
```
../dbms/src/Core/Types.h:143:58: runtime error: signed integer overflow: -7174046 * 1000000 cannot be represented in type 'int'
    #0 0x1780c221 in DB::Decimal<int>::operator*=(int const&) /build/obj-x86_64-linux-gnu/../dbms/src/Core/Types.h:143:58
    #1 0x1780c221 in DB::DataTypeDecimal<DB::Decimal<int> >::tryReadText(DB::Decimal<int>&, DB::ReadBuffer&, unsigned int, unsigned int) /build/obj-x86_64-linux-gnu/../dbms/src/DataTypes/DataTypesDecimal.cpp:61
    #2 0x10a82f4b in void DB::ConvertThroughParsing<DB::DataTypeString, DB::DataTypeDecimal<DB::Decimal<int> >, DB::NameToDecimal32OrZero, (DB::ConvertFromStringExceptionMode)1, (DB::ConvertFromStringParsingMode)0>::execute<unsigned int>(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, unsigned int) (/usr/bin/clickhouse+0x10a82f4b)
    #3 0x175883b6 in DB::PreparedFunctionImpl::defaultImplementationForConstantArguments(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) /build/obj-x86_64-linux-gnu/../dbms/src/Functions/IFunction.cpp:259:5
    #4 0x175890ed in DB::PreparedFunctionImpl::executeWithoutLowCardinalityColumns(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) /build/obj-x86_64-linux-gnu/../dbms/src/Functions/IFunction.cpp:303:9
    #5 0x1758a133 in DB::PreparedFunctionImpl::execute(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) /build/obj-x86_64-linux-gnu/../dbms/src/Functions/IFunction.cpp:473:13
```

https://clickhouse-test-reports.s3.yandex.net/7500/15d12db16a2ac65af695aadcecc2c55b9a9c668a/functional_stateless_tests_(ubsan).html
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
