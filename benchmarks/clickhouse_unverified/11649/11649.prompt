You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
re2 match issue 
```
SELECT match('Too late', 'Too late')
1
select match('Too late','(?i)Too late');
1
select match('Too late','(?i)too late');
0 -- ??? 

-- that helps
select match('Too late','(?i:too late)');
1 

--looks like it somehow relates to double o
select match('Too late','(?i)to{2} late');
1
select match('Too late','(?i)to(?)o late');
1
select match('Too late','(?i)to+ late');
1
select match('Too late','(?i)to(?:o|o) late');
1
```
Case-insensitive regexp match & ilike
with re2 you can use `(?-i)` flag inside regexp, but OptimizedRegularExpression [can break that](https://github.com/ClickHouse/ClickHouse/issues/11101)

With `like` you can do `lower(str) like '%foo%'`, but a single function call would be cheaper than 2. `ilike` as in postgres sounds like a nice shortcut for that. 

Related:
- https://www.postgresql.org/docs/8.3/functions-matching.html
- https://stackoverflow.com/questions/58728436/how-to-search-the-string-in-query-with-case-insensitive-on-clickhouse-database
- https://code-flow.club/264848/how-to-make-case-insensitive-search-in-clickhouse
- https://quabr.com/55535770/problems-using-clickhouse
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
