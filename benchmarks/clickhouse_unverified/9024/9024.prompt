You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
[20.1.2.4] Address: NULL pointer. Access: read. Address not mapped to object.
**CH Version:** 20.1.2.4 (from yandex deb repo)

**Schema:**
```
CREATE TABLE db.table (`field1` Int64, `field2` UInt64, `field3` UInt32, `field4` Date, `field5` DateTime, `field6` Float64, `field7` DateTime) ENGINE = MergeTree(field4, (field4, field2, field3), 8192)
```

**Logs:**
```
2020.02.04 12:13:31.461665 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> executeQuery: (from 127.0.0.1:41612) SELECT field3, field2 FROM (SELECT CAST(field3, 'Int32') AS field3, CAST(field2, 'Int64') AS field2 FROM db.table WHERE field6 > 0
) WHERE isNotNull(field2) AND isNotNull(field3) FORMAT TabSeparatedWithNamesAndTypes
2020.02.04 12:13:31.462262 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "field6 > 0" moved to PREWHERE
2020.02.04 12:13:31.463440 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "field6 > 0" moved to PREWHERE
2020.02.04 12:13:31.464493 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "isNotNull(CAST(field2, 'Int64') AS field2)" moved to PREWHERE
2020.02.04 12:13:31.465658 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "isNotNull(CAST(field3, 'Int32') AS field3)" moved to PREWHERE
2020.02.04 12:13:31.467112 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "isNotNull(CAST(field2, 'Int64') AS field2)" moved to PREWHERE
2020.02.04 12:13:31.468167 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "isNotNull(CAST(field3, 'Int32') AS field3)" moved to PREWHERE
2020.02.04 12:13:31.469162 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> tmp.sd (SelectExecutor): Key condition: unknown, unknown, and
2020.02.04 12:13:31.469197 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> tmp.sd (SelectExecutor): MinMax index condition: unknown, unknown, and
2020.02.04 12:13:31.469237 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> tmp.sd (SelectExecutor): Selected 2 parts by date, 2 parts by key, 1428 marks to read from 2 ranges
2020.02.04 12:13:31.469371 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Trace> tmp.sd (SelectExecutor): Reading approx. 11698176 rows with 16 streams
2020.02.04 12:13:31.469855 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2020.02.04 12:13:31.470318 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2020.02.04 12:13:31.471110 [ 209 ] {7556b9ba-ec4c-47c0-9b07-77c94397611d} <Debug> executeQuery: Query pipeline:
Union
 Expression Ã— 16
  Expression
   Expression
    Expression
     Filter
      MergeTreeThread

2020.02.04 12:13:31.475338 [ 222 ] {} <Fatal> BaseDaemon: ########################################
2020.02.04 12:13:31.475798 [ 222 ] {} <Fatal> BaseDaemon: (version 20.1.2.4 (official build)) (from thread 21) (query_id: 7556b9ba-ec4c-47c0-9b07-77c94397611d) Received signal Segmentation fault (11).
2020.02.04 12:13:31.475850 [ 222 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2020.02.04 12:13:31.475908 [ 222 ] {} <Fatal> BaseDaemon: Stack trace: 0x97a4def 0x97a5884 0x97a55bd 0x9768166 0x9769963 0x91a4c27 0x91d6e24 0x91d7043 0x8a6d32f 0x94a6811 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f
 0x949c168 0x8a6d32f 0x8c2a73c 0x8c2b4b5 0x4fa3b77 0x4fa212f 0x7fd47e2866ba 0x7fd47dbb041d
2020.02.04 12:13:31.476079 [ 223 ] {} <Fatal> BaseDaemon: ########################################
2020.02.04 12:13:31.476421 [ 222 ] {} <Fatal> BaseDaemon: 3. 0x97a4def DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.476194 [ 223 ] {} <Fatal> BaseDaemon: (version 20.1.2.4 (official build)) (from thread 88) (query_id: 7556b9ba-ec4c-47c0-9b07-77c94397611d) Received signal Segmentation fault (11).
2020.02.04 12:13:31.476514 [ 222 ] {} <Fatal> BaseDaemon: 4. 0x97a5884 DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.476521 [ 223 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2020.02.04 12:13:31.476505 [ 224 ] {} <Fatal> BaseDaemon: ########################################
2020.02.04 12:13:31.476591 [ 223 ] {} <Fatal> BaseDaemon: Stack trace: 0x97a4def 0x97a5884 0x97a55bd 0x9768166 0x9769963 0x91a4c27 0x91d6e24 0x91d7043 0x8a6d32f 0x94a6811 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f
 0x949c168 0x8a6d32f 0x8c2a73c 0x8c2b4b5 0x4fa3b77 0x4fa212f 0x7fd47e2866ba 0x7fd47dbb041d
2020.02.04 12:13:31.476558 [ 222 ] {} <Fatal> BaseDaemon: 5. 0x97a55bd DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.476719 [ 223 ] {} <Fatal> BaseDaemon: 3. 0x97a4def DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.476665 [ 224 ] {} <Fatal> BaseDaemon: (version 20.1.2.4 (official build)) (from thread 106) (query_id: 7556b9ba-ec4c-47c0-9b07-77c94397611d) Received signal Segmentation fault (11).
2020.02.04 12:13:31.476744 [ 222 ] {} <Fatal> BaseDaemon: 6. 0x9768166 DB::MergeTreeBaseSelectProcessor::readFromPartImpl()  in /usr/bin/clickhouse
2020.02.04 12:13:31.476847 [ 224 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2020.02.04 12:13:31.476886 [ 222 ] {} <Fatal> BaseDaemon: 7. 0x9769963 DB::MergeTreeBaseSelectProcessor::generate()  in /usr/bin/clickhouse
2020.02.04 12:13:31.476771 [ 223 ] {} <Fatal> BaseDaemon: 4. 0x97a5884 DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.476942 [ 222 ] {} <Fatal> BaseDaemon: 8. 0x91a4c27 DB::ISource::work()  in /usr/bin/clickhouse
2020.02.04 12:13:31.476957 [ 223 ] {} <Fatal> BaseDaemon: 5. 0x97a55bd DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.476972 [ 224 ] {} <Fatal> BaseDaemon: Stack trace: 0x97a4def 0x97a5884 0x97a55bd 0x9768166 0x9769963 0x91a4c27 0x91d6e24 0x91d7043 0x8a6d32f 0x94a6811 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f
 0x949c168 0x8a6d32f 0x8c2a73c 0x8c2b4b5 0x4fa3b77 0x4fa212f 0x7fd47e2866ba 0x7fd47dbb041d
2020.02.04 12:13:31.476990 [ 222 ] {} <Fatal> BaseDaemon: 9. 0x91d6e24 DB::TreeExecutorBlockInputStream::execute()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477002 [ 223 ] {} <Fatal> BaseDaemon: 6. 0x9768166 DB::MergeTreeBaseSelectProcessor::readFromPartImpl()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477094 [ 222 ] {} <Fatal> BaseDaemon: 10. 0x91d7043 DB::TreeExecutorBlockInputStream::readImpl()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477150 [ 223 ] {} <Fatal> BaseDaemon: 7. 0x9769963 DB::MergeTreeBaseSelectProcessor::generate()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477159 [ 224 ] {} <Fatal> BaseDaemon: 3. 0x97a4def DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.477137 [ 225 ] {} <Fatal> BaseDaemon: ########################################
2020.02.04 12:13:31.477161 [ 222 ] {} <Fatal> BaseDaemon: 11. 0x8a6d32f DB::IBlockInputStream::read()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477383 [ 225 ] {} <Fatal> BaseDaemon: (version 20.1.2.4 (official build)) (from thread 58) (query_id: 7556b9ba-ec4c-47c0-9b07-77c94397611d) Received signal Segmentation fault (11).
2020.02.04 12:13:31.477224 [ 223 ] {} <Fatal> BaseDaemon: 8. 0x91a4c27 DB::ISource::work()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477468 [ 225 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2020.02.04 12:13:31.477600 [ 223 ] {} <Fatal> BaseDaemon: 9. 0x91d6e24 DB::TreeExecutorBlockInputStream::execute()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477636 [ 225 ] {} <Fatal> BaseDaemon: Stack trace: 0x97a4def 0x97a5884 0x97a55bd 0x9768166 0x9769963 0x91a4c27 0x91d6e24 0x91d7043 0x8a6d32f 0x94a6811 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f
 0x949c168 0x8a6d32f 0x8c2a73c 0x8c2b4b5 0x4fa3b77 0x4fa212f 0x7fd47e2866ba 0x7fd47dbb041d
2020.02.04 12:13:31.477421 [ 222 ] {} <Fatal> BaseDaemon: 12. 0x94a6811 DB::FilterBlockInputStream::readImpl()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477616 [ 226 ] {} <Fatal> BaseDaemon: ########################################
2020.02.04 12:13:31.477650 [ 223 ] {} <Fatal> BaseDaemon: 10. 0x91d7043 DB::TreeExecutorBlockInputStream::readImpl()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477330 [ 224 ] {} <Fatal> BaseDaemon: 4. 0x97a5884 DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.477844 [ 222 ] {} <Fatal> BaseDaemon: 13. 0x8a6d32f DB::IBlockInputStream::read()  in /usr/bin/clickhouse
2020.02.04 12:13:31.477852 [ 227 ] {} <Fatal> BaseDaemon: ########################################
2020.02.04 12:13:31.477865 [ 225 ] {} <Fatal> BaseDaemon: 3. 0x97a4def DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.477958 [ 226 ] {} <Fatal> BaseDaemon: (version 20.1.2.4 (official build)) (from thread 39) (query_id: 7556b9ba-ec4c-47c0-9b07-77c94397611d) Received signal Segmentation fault (11).
2020.02.04 12:13:31.478202 [ 224 ] {} <Fatal> BaseDaemon: 5. 0x97a55bd DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.478198 [ 222 ] {} <Fatal> BaseDaemon: 14. 0x949c168 DB::ExpressionBlockInputStream::readImpl()  in /usr/bin/clickhouse
2020.02.04 12:13:31.478054 [ 223 ] {} <Fatal> BaseDaemon: 11. 0x8a6d32f DB::IBlockInputStream::read()  in /usr/bin/clickhouse
2020.02.04 12:13:31.478244 [ 228 ] {} <Fatal> BaseDaemon: ########################################
2020.02.04 12:13:31.478877 [ 229 ] {} <Fatal> BaseDaemon: ########################################
2020.02.04 12:13:31.478922 [ 228 ] {} <Fatal> BaseDaemon: (version 20.1.2.4 (official build)) (from thread 175) (query_id: 7556b9ba-ec4c-47c0-9b07-77c94397611d) Received signal Segmentation fault (11).
2020.02.04 12:13:31.478424 [ 226 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2020.02.04 12:13:31.478356 [ 225 ] {} <Fatal> BaseDaemon: 4. 0x97a5884 DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.479114 [ 226 ] {} <Fatal> BaseDaemon: Stack trace: 0x97a4def 0x97a5884 0x97a55bd 0x9768166 0x9769963 0x91a4c27 0x91d6e24 0x91d7043 0x8a6d32f 0x94a6811 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f 0x949c168 0x8a6d32f
 0x949c168 0x8a6d32f 0x8c2a73c 0x8c2b4b5 0x4fa3b77 0x4fa212f 0x7fd47e2866ba 0x7fd47dbb041d
2020.02.04 12:13:31.479155 [ 225 ] {} <Fatal> BaseDaemon: 5. 0x97a55bd DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.479219 [ 226 ] {} <Fatal> BaseDaemon: 3. 0x97a4def DB::MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(DB::MergeTreeRangeReader::ReadResult&)  in /usr/bin/clickhouse
2020.02.04 12:13:31.478591 [ 224 ] {} <Fatal> BaseDaemon: 6. 0x9768166 DB::MergeTreeBaseSelectProcessor::readFromPartImpl()  in /usr/bin/clickhouse
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
