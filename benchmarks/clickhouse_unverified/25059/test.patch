diff --git a/src/Interpreters/tests/gtest_cycle_aliases.cpp b/src/Interpreters/tests/gtest_cycle_aliases.cpp
index df40d96a66e9..2bdeac90f8f0 100644
--- a/src/Interpreters/tests/gtest_cycle_aliases.cpp
+++ b/src/Interpreters/tests/gtest_cycle_aliases.cpp
@@ -9,6 +9,21 @@
 
 using namespace DB;
 
+
+TEST(QueryNormalizer, SimpleLoopAlias)
+{
+    String query = "a as a";
+    ParserExpressionList parser(false);
+    ASTPtr ast = parseQuery(parser, query, 0, 0);
+
+    Aliases aliases;
+    aliases["a"] = parseQuery(parser, "a as a", 0, 0)->children[0];
+
+    Settings settings;
+    QueryNormalizer::Data normalizer_data(aliases, {}, false, settings, false);
+    EXPECT_THROW(QueryNormalizer(normalizer_data).visit(ast), Exception);
+}
+
 TEST(QueryNormalizer, SimpleCycleAlias)
 {
     String query = "a as b, b as a";
@@ -20,6 +35,6 @@ TEST(QueryNormalizer, SimpleCycleAlias)
     aliases["b"] = parseQuery(parser, "a as b", 0, 0)->children[0];
 
     Settings settings;
-    QueryNormalizer::Data normalizer_data(aliases, {}, false, settings);
+    QueryNormalizer::Data normalizer_data(aliases, {}, false, settings, true);
     EXPECT_THROW(QueryNormalizer(normalizer_data).visit(ast), Exception);
 }
diff --git a/tests/queries/0_stateless/01902_self_aliases_in_columns.reference b/tests/queries/0_stateless/01902_self_aliases_in_columns.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/01902_self_aliases_in_columns.sql b/tests/queries/0_stateless/01902_self_aliases_in_columns.sql
new file mode 100644
index 000000000000..b03d7c15f622
--- /dev/null
+++ b/tests/queries/0_stateless/01902_self_aliases_in_columns.sql
@@ -0,0 +1,14 @@
+CREATE TABLE a
+(
+    `number` UInt64,
+    `x` MATERIALIZED x
+)
+ENGINE = MergeTree
+ORDER BY number; --{ serverError 174}
+
+CREATE TABLE foo
+(
+    i Int32,
+    j ALIAS j + 1
+)
+ENGINE = MergeTree() ORDER BY i; --{ serverError 174}
