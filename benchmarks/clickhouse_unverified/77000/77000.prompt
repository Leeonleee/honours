You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error: 'parts_ranges[0].event == PartsRangesIterator::EventType::RangeStart' with BFloat16
### Describe the bug

Run the Fiddle. The issue happens with `Tuple(BFloat16)` type combination and doesn't reproduce with other floating-point types.

### How to reproduce

Run Fiddle: https://fiddle.clickhouse.com/04a3da3e-2e0a-4170-a245-9b6f5fb31959

### Error message and/or stacktrace

Stack trace:

```
<Fatal> : Logical error: 'parts_ranges[0].event == PartsRangesIterator::EventType::RangeStart'.
<Fatal> : Stack trace (when copying this message, always include the lines below):

0. src/Common/StackTrace.cpp:381: StackTrace::tryCapture() @ 0x00000000264d1397
1. src/Common/StackTrace.h:48: DB::abortOnFailedAssertion(String const&) @ 0x00000000264875f7
2. src/Processors/QueryPlan/PartsSplitter.cpp:480: (anonymous namespace)::splitPartsRanges(DB::RangesInDataParts, std::shared_ptr<Poco::Logger> const&) @ 0x0000000037227a30
3. src/Processors/QueryPlan/PartsSplitter.cpp:921: DB::splitPartsWithRangesByPrimaryKey(DB::KeyDescription const&, std::shared_ptr<DB::ExpressionActions>, DB::RangesInDataParts, unsigned long, std::shared_ptr<DB::Context const>, std::function<DB::Pipe (DB::RangesInDataParts)>&&, bool, bool) @ 0x00000000372220bd
4. src/Processors/QueryPlan/ReadFromMergeTree.cpp:1366: DB::ReadFromMergeTree::spreadMarkRangesAmongStreamsFinal(DB::RangesInDataParts&&, unsigned long, std::vector<String, std::allocator<String>> const&, std::vector<String, std::allocator<String>> const&, std::optional<DB::ActionsDAG>&) @ 0x00000000371d53ef
5. src/Processors/QueryPlan/ReadFromMergeTree.cpp:2026: DB::ReadFromMergeTree::spreadMarkRanges(DB::RangesInDataParts&&, unsigned long, DB::ReadFromMergeTree::AnalysisResult&, std::optional<DB::ActionsDAG>&) @ 0x00000000371e2fc5
6. src/Processors/QueryPlan/ReadFromMergeTree.cpp:2129: DB::ReadFromMergeTree::initializePipeline(DB::QueryPipelineBuilder&, DB::BuildQueryPipelineSettings const&) @ 0x00000000371e5531
7. src/Processors/QueryPlan/ISourceStep.cpp:20: DB::ISourceStep::updatePipeline(std::vector<std::unique_ptr<DB::QueryPipelineBuilder, std::default_delete<DB::QueryPipelineBuilder>>, std::allocator<std::unique_ptr<DB::QueryPipelineBuilder, std::default_delete<DB::QueryPipelineBuilder>>>>, DB::BuildQueryPipelineSettings const&) @ 0x0000000037154bbf
8. src/Processors/QueryPlan/QueryPlan.cpp:202: DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x000000003719fa3a
9. src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:274: DB::InterpreterSelectQueryAnalyzer::buildQueryPipeline() @ 0x0000000032dee173
10. src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:241: DB::InterpreterSelectQueryAnalyzer::execute() @ 0x0000000032dedd66
11. src/Interpreters/executeQuery.cpp:1455: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000033307a54
12. src/Interpreters/executeQuery.cpp:1621: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000333019bb
13. src/Server/TCPHandler.cpp:662: DB::TCPHandler::runImpl() @ 0x0000000036706c3c
14. src/Server/TCPHandler.cpp:2624: DB::TCPHandler::run() @ 0x0000000036735b0e
15. base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x000000003a9b1d82
16. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000003a9b2a52
17. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000003a91c997
18. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000003a9183ce
19. ? @ 0x00007ffff7ca1e2e
20. ? @ 0x00007ffff7d33a4c
```
Unexpected result on full_sorting_merge join with BFloat16
### Describe the bug

I am not sure if this is an issue, but the result is not deterministic and only happens in the title's circumstance with a `nan` value.

### How to reproduce

Run Fiddle: https://fiddle.clickhouse.com/08c27bc8-5704-4190-9198-005f8f72d0af 

### Error message and/or stacktrace

_No response_
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
