diff --git a/src/Storages/tests/gtest_SplitTokenExtractor.cpp b/src/Storages/tests/gtest_SplitTokenExtractor.cpp
index ee6a55f50b88..62389639c114 100644
--- a/src/Storages/tests/gtest_SplitTokenExtractor.cpp
+++ b/src/Storages/tests/gtest_SplitTokenExtractor.cpp
@@ -61,12 +61,12 @@ TEST_P(SplitTokenExtractorTest, next)
     for (const auto & expected_token : param.tokens)
     {
         SCOPED_TRACE(++i);
-        ASSERT_TRUE(token_extractor.nextInColumn(data->data(), data->size(), &pos, &token_start, &token_len));
+        ASSERT_TRUE(token_extractor.nextInStringPadded(data->data(), data->size(), &pos, &token_start, &token_len));
 
         EXPECT_EQ(expected_token, std::string_view(data->data() + token_start, token_len))
                 << " token_start:" << token_start << " token_len: " << token_len;
     }
-    ASSERT_FALSE(token_extractor.nextInColumn(data->data(), data->size(), &pos, &token_start, &token_len))
+    ASSERT_FALSE(token_extractor.nextInStringPadded(data->data(), data->size(), &pos, &token_start, &token_len))
             << "
\t=> \"" << param.source.substr(token_start, token_len) << "\""
             << "
\t" << token_start << ", " << token_len << ", " << pos << ", " << data->size();
 }
diff --git a/tests/queries/0_stateless/2027_ngrams.reference b/tests/queries/0_stateless/2027_ngrams.reference
new file mode 100644
index 000000000000..4ddc2a96c421
--- /dev/null
+++ b/tests/queries/0_stateless/2027_ngrams.reference
@@ -0,0 +1,20 @@
+['T','e','s','t']
+['Te','es','st']
+['Tes','est']
+['Tes','est']
+[]
+['T','e','s','t']
+['Te','es','st']
+['Tes','est']
+['Tes','est']
+[]
+['T','e','s','t']
+['Te','es','st']
+['Tes','est']
+['Tes','est']
+[]
+['T','e','s','t']
+['Te','es','st']
+['Tes','est']
+['Tes','est']
+[]
diff --git a/tests/queries/0_stateless/2027_ngrams.sql b/tests/queries/0_stateless/2027_ngrams.sql
new file mode 100644
index 000000000000..b2ea9facf647
--- /dev/null
+++ b/tests/queries/0_stateless/2027_ngrams.sql
@@ -0,0 +1,23 @@
+SELECT ngrams('Test', 1);
+SELECT ngrams('Test', 2);
+SELECT ngrams('Test', 3);
+SELECT ngrams('Test', 3);
+SELECT ngrams('Test', 5);
+
+SELECT ngrams(materialize('Test'), 1);
+SELECT ngrams(materialize('Test'), 2);
+SELECT ngrams(materialize('Test'), 3);
+SELECT ngrams(materialize('Test'), 3);
+SELECT ngrams(materialize('Test'), 5);
+
+SELECT ngrams(toFixedString('Test', 4), 1);
+SELECT ngrams(toFixedString('Test', 4), 2);
+SELECT ngrams(toFixedString('Test', 4), 3);
+SELECT ngrams(toFixedString('Test', 4), 3);
+SELECT ngrams(toFixedString('Test', 4), 5);
+
+SELECT ngrams(materialize(toFixedString('Test', 4)), 1);
+SELECT ngrams(materialize(toFixedString('Test', 4)), 2);
+SELECT ngrams(materialize(toFixedString('Test', 4)), 3);
+SELECT ngrams(materialize(toFixedString('Test', 4)), 3);
+SELECT ngrams(materialize(toFixedString('Test', 4)), 5);
