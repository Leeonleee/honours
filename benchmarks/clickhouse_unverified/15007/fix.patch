diff --git a/benchmark/greenplum/result_parser.py b/benchmark/greenplum/result_parser.py
index ea178cf77a42..8af20d265a02 100755
--- a/benchmark/greenplum/result_parser.py
+++ b/benchmark/greenplum/result_parser.py
@@ -1,6 +1,6 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
+
 
-from __future__ import print_function
 import sys
 import json
 
@@ -99,7 +99,7 @@ def gen_html_json(options, arguments):
     tuples = read_stats_file(options, arguments[1])
     print('{')
     print('"system:       GreenPlum(x2),')
-    print('"version":      "%s",' % '4.3.9.1')
+    print(('"version":      "%s",' % '4.3.9.1'))
     print('"data_size":    10000000,')
     print('"time":         "",')
     print('"comments":     "",')
diff --git a/debian/control b/debian/control
index 1014b8b0a3c0..12d69d9fff6b 100644
--- a/debian/control
+++ b/debian/control
@@ -62,5 +62,5 @@ Description: debugging symbols for clickhouse-common-static
 Package: clickhouse-test
 Priority: optional
 Architecture: all
-Depends: ${shlibs:Depends}, ${misc:Depends}, clickhouse-client, bash, expect, python, python-lxml, python-termcolor, python-requests, curl, perl, sudo, openssl, netcat-openbsd, telnet, brotli, bsdutils
+Depends: ${shlibs:Depends}, ${misc:Depends}, clickhouse-client, bash, expect, python3, python3-lxml, python3-termcolor, python3-requests, curl, perl, sudo, openssl, netcat-openbsd, telnet, brotli, bsdutils
 Description: ClickHouse tests
diff --git a/docker/builder/Dockerfile b/docker/builder/Dockerfile
index d4a121d13eb3..68245a92c58a 100644
--- a/docker/builder/Dockerfile
+++ b/docker/builder/Dockerfile
@@ -25,10 +25,10 @@ RUN apt-get update \
         ninja-build \
         perl \
         pkg-config \
-        python \
-        python-lxml \
-        python-requests \
-        python-termcolor \
+        python3 \
+        python3-lxml \
+        python3-requests \
+        python3-termcolor \
         tzdata \
         llvm-${LLVM_VERSION} \
         clang-${LLVM_VERSION} \
diff --git a/docker/packager/packager b/docker/packager/packager
index 0a14102ec04c..6d0751950034 100755
--- a/docker/packager/packager
+++ b/docker/packager/packager
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 #-*- coding: utf-8 -*-
 import subprocess
 import os
diff --git a/docs/en/development/build.md b/docs/en/development/build.md
index 1c84342baf99..145dd99e8de2 100644
--- a/docs/en/development/build.md
+++ b/docs/en/development/build.md
@@ -116,7 +116,7 @@ ninja
 Example for Fedora Rawhide:
 ``` bash
 sudo yum update
-yum --nogpg install git cmake make gcc-c++ python2
+yum --nogpg install git cmake make gcc-c++ python3
 git clone --recursive https://github.com/ClickHouse/ClickHouse.git
 mkdir build && cd build
 cmake ../ClickHouse
diff --git a/docs/es/development/build.md b/docs/es/development/build.md
index 861ceb53e515..0b190242f8cf 100644
--- a/docs/es/development/build.md
+++ b/docs/es/development/build.md
@@ -102,7 +102,7 @@ Ejemplo de OpenSUSE Tumbleweed:
 Ejemplo de Fedora Rawhide:
 
     sudo yum update
-    yum --nogpg install git cmake make gcc-c++ python2
+    yum --nogpg install git cmake make gcc-c++ python3
     git clone --recursive https://github.com/ClickHouse/ClickHouse.git
     mkdir build && cd build
     cmake ../ClickHouse
diff --git a/docs/fa/development/build.md b/docs/fa/development/build.md
index 8b9d8bba8223..7ba21c0fa933 100644
--- a/docs/fa/development/build.md
+++ b/docs/fa/development/build.md
@@ -103,7 +103,7 @@ $ cd ..
 به عنوان مثال برای فدورا پوست دباغی نشده:
 
     sudo yum update
-    yum --nogpg install git cmake make gcc-c++ python2
+    yum --nogpg install git cmake make gcc-c++ python3
     git clone --recursive https://github.com/ClickHouse/ClickHouse.git
     mkdir build && cd build
     cmake ../ClickHouse
diff --git a/docs/fr/development/build.md b/docs/fr/development/build.md
index a57e0f203372..d05f09997205 100644
--- a/docs/fr/development/build.md
+++ b/docs/fr/development/build.md
@@ -102,7 +102,7 @@ Exemple Pour openSUSE Tumbleweed:
 Exemple Pour Fedora Rawhide:
 
     sudo yum update
-    yum --nogpg install git cmake make gcc-c++ python2
+    yum --nogpg install git cmake make gcc-c++ python3
     git clone --recursive https://github.com/ClickHouse/ClickHouse.git
     mkdir build && cd build
     cmake ../ClickHouse
diff --git a/docs/ja/development/build.md b/docs/ja/development/build.md
index c1e92efd4412..035d5e7efb1d 100644
--- a/docs/ja/development/build.md
+++ b/docs/ja/development/build.md
@@ -102,7 +102,7 @@ OpenSUSEタンブルウィードの例:
 Fedora Rawhideの例:
 
     sudo yum update
-    yum --nogpg install git cmake make gcc-c++ python2
+    yum --nogpg install git cmake make gcc-c++ python3
     git clone --recursive https://github.com/ClickHouse/ClickHouse.git
     mkdir build && cd build
     cmake ../ClickHouse
diff --git a/docs/tools/easy_diff.py b/docs/tools/easy_diff.py
index e4b5b6755252..22d305d3da3f 100755
--- a/docs/tools/easy_diff.py
+++ b/docs/tools/easy_diff.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- coding: utf-8 -*-
 
 import os, sys
diff --git a/docs/tools/github.py b/docs/tools/github.py
index d007752dca9a..29184f5e5679 100644
--- a/docs/tools/github.py
+++ b/docs/tools/github.py
@@ -71,8 +71,8 @@ def choose_latest_releases(args):
             logging.fatal('Unexpected GitHub response: %s', str(candidates))
             sys.exit(1)
 
-    logging.info('Found LTS releases: %s', ', '.join(seen_lts.keys()))
-    logging.info('Found stable releases: %s', ', '.join(seen_stable.keys()))
+    logging.info('Found LTS releases: %s', ', '.join(list(seen_lts.keys())))
+    logging.info('Found stable releases: %s', ', '.join(list(seen_stable.keys())))
     return sorted(list(seen_lts.items()) + list(seen_stable.items()))
 
 
diff --git a/docs/tools/mdx_clickhouse.py b/docs/tools/mdx_clickhouse.py
index 80ecf8293418..b4c255066ffa 100755
--- a/docs/tools/mdx_clickhouse.py
+++ b/docs/tools/mdx_clickhouse.py
@@ -1,6 +1,6 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- coding: utf-8 -*-
-from __future__ import unicode_literals
+
 
 import datetime
 import os
diff --git a/docs/tools/nav.py b/docs/tools/nav.py
index d14791a5b9b3..291797a16339 100644
--- a/docs/tools/nav.py
+++ b/docs/tools/nav.py
@@ -59,7 +59,7 @@ def build_docs_nav(lang, args):
     _, _, nav = build_nav_entry(docs_dir, args)
     result = []
     index_key = None
-    for key, value in nav.items():
+    for key, value in list(nav.items()):
         if key and value:
             if value == 'index.md':
                 index_key = key
diff --git a/docs/tools/purge_cache_for_changed_files.py b/docs/tools/purge_cache_for_changed_files.py
index 761697770b7e..6cfc9d18a575 100644
--- a/docs/tools/purge_cache_for_changed_files.py
+++ b/docs/tools/purge_cache_for_changed_files.py
@@ -59,7 +59,7 @@ def convert_to_dicts(changed_files, batch_size):
 def post_data(prepared_batches, token):
     headers = {"Authorization": "Bearer {}".format(token)}
     for batch in prepared_batches:
-        print("Pugring cache for", ", ".join(batch["files"]))
+        print(("Pugring cache for", ", ".join(batch["files"])))
         response = requests.post(CLOUDFLARE_URL, json=batch, headers=headers)
         response.raise_for_status()
         time.sleep(3)
@@ -71,8 +71,8 @@ def post_data(prepared_batches, token):
         raise Exception("Env variable CLOUDFLARE_TOKEN is empty")
     base_domain = os.getenv("BASE_DOMAIN", "https://content.clickhouse.tech/")
     changed_files = collect_changed_files()
-    print("Found", len(changed_files), "changed files")
+    print(("Found", len(changed_files), "changed files"))
     filtered_files = filter_and_transform_changed_files(changed_files, base_domain)
-    print("Files rest after filtering", len(filtered_files))
+    print(("Files rest after filtering", len(filtered_files)))
     prepared_batches = convert_to_dicts(filtered_files, 25)
     post_data(prepared_batches, token)
diff --git a/docs/tools/single_page.py b/docs/tools/single_page.py
index b074cd42329b..004409fe281c 100644
--- a/docs/tools/single_page.py
+++ b/docs/tools/single_page.py
@@ -15,7 +15,7 @@
 
 def recursive_values(item):
     if isinstance(item, dict):
-        for _, value in item.items():
+        for _, value in list(item.items()):
             yield from recursive_values(value)
     elif isinstance(item, list):
         for value in item:
diff --git a/docs/tools/translate/typograph_ru.py b/docs/tools/translate/typograph_ru.py
index db20109efffc..2d970cf2a2e4 100644
--- a/docs/tools/translate/typograph_ru.py
+++ b/docs/tools/translate/typograph_ru.py
@@ -42,4 +42,4 @@ def typograph(text):
 
 if __name__ == '__main__':
     import sys
-    print(typograph(sys.stdin.read()))
+    print((typograph(sys.stdin.read())))
diff --git a/docs/tr/development/build.md b/docs/tr/development/build.md
index 18ef2cd66aef..90cb166094d4 100644
--- a/docs/tr/development/build.md
+++ b/docs/tr/development/build.md
@@ -102,7 +102,7 @@ OpenSUSE Tumbleweed için örnek:
 Fedora Rawhide için örnek:
 
     sudo yum update
-    yum --nogpg install git cmake make gcc-c++ python2
+    yum --nogpg install git cmake make gcc-c++ python3
     git clone --recursive https://github.com/ClickHouse/ClickHouse.git
     mkdir build && cd build
     cmake ../ClickHouse
diff --git a/release b/release
index b446ceca0d5c..f2052840cb04 100755
--- a/release
+++ b/release
@@ -66,7 +66,7 @@ do
         shift
     elif [[ $1 == '--fast' ]]; then
         # Wrong but fast pbuilder mode: create base package with all depends
-        EXTRAPACKAGES="$EXTRAPACKAGES debhelper cmake ninja-build gcc-8 g++-8 libc6-dev libicu-dev libreadline-dev psmisc bash expect python python-lxml python-termcolor python-requests curl perl sudo openssl netcat-openbsd"
+        EXTRAPACKAGES="$EXTRAPACKAGES debhelper cmake ninja-build gcc-8 g++-8 libc6-dev libicu-dev libreadline-dev psmisc bash expect python3 python3-lxml python3-termcolor python3-requests curl perl sudo openssl netcat-openbsd"
         shift
     elif [[ $1 == '--rpm' ]]; then
         MAKE_RPM=1
diff --git a/utils/build/build_debian.sh b/utils/build/build_debian.sh
index 4ae54b0d29fd..c6cfe6ce4b89 100755
--- a/utils/build/build_debian.sh
+++ b/utils/build/build_debian.sh
@@ -11,7 +11,7 @@ sudo apt install -y git bash cmake ninja-build gcc-8 g++-8 libicu-dev libreadlin
 #sudo apt install -y libboost-program-options-dev libboost-system-dev libboost-filesystem-dev libboost-thread-dev libboost-regex-dev libboost-iostreams-dev zlib1g-dev liblz4-dev libdouble-conversion-dev libzstd-dev libre2-dev librdkafka-dev libcapnp-dev libpoco-dev libgoogle-perftools-dev libunwind-dev googletest libcctz-dev
 
 # install testing only stuff if you want:
-sudo apt install -y expect python python-lxml python-termcolor python-requests curl perl sudo openssl netcat-openbsd telnet
+sudo apt install -y expect python3 python3-lxml python3-termcolor python3-requests curl perl sudo openssl netcat-openbsd telnet
 
 BASE_DIR=$(dirname $0) && [ -f "$BASE_DIR/../../CMakeLists.txt" ] && ROOT_DIR=$BASE_DIR/../.. && cd $ROOT_DIR
 
diff --git a/utils/github-hook/hook.py b/utils/github-hook/hook.py
index 22eb85867c32..1ea65f3c3abc 100644
--- a/utils/github-hook/hook.py
+++ b/utils/github-hook/hook.py
@@ -12,7 +12,7 @@
 
 def _reverse_dict_with_list(source):
     result = {}
-    for key, value in source.items():
+    for key, value in list(source.items()):
         for elem in value:
             result[elem] = key
     return result
@@ -48,14 +48,14 @@ def set_labels_for_pr(pull_request_number, labels, headers):
             response.raise_for_status()
             break
         except Exception as ex:
-            print("Exception", ex)
+            print(("Exception", ex))
             time.sleep(0.2)
 
 
 def get_required_labels_from_desc(description, current_labels):
     result = set([])
     # find first matching category
-    for marker, labels in MARKER_TO_LABEL.items():
+    for marker, labels in list(MARKER_TO_LABEL.items()):
         if marker in description:
             if not any(label in current_labels for label in labels):
                 result.add(labels[0])
@@ -282,9 +282,9 @@ def _insert_json_str_info(self, db, table, json_str):
                 response.raise_for_status()
                 break
             except Exception as ex:
-                print("Cannot insert with exception %s", str(ex))
+                print(("Cannot insert with exception %s", str(ex)))
                 if response:
-                    print("Response text %s", response.text)
+                    print(("Response text %s", response.text))
                 time.sleep(0.1)
         else:
             raise Exception("Cannot insert data into clickhouse")
diff --git a/utils/github/backport.py b/utils/github/backport.py
index 3a33c3a563f1..f303be23ac40 100644
--- a/utils/github/backport.py
+++ b/utils/github/backport.py
@@ -78,14 +78,14 @@ def execute(self, repo, until_commit, number, run_cherrypick):
                     backport_map[pr['number']].remove(matched_backported.group(1))
                     logging.info('\tskipping %s because it\'s already backported manually', matched_backported.group(1))
 
-        for pr, branches in backport_map.items():
+        for pr, branches in list(backport_map.items()):
             logging.info('PR #%s needs to be backported to:', pr)
             for branch in branches:
                 logging.info('\t%s, and the status is: %s', branch, run_cherrypick(self._token, pr, branch))
 
         # print API costs
         logging.info('
GitHub API total costs per query:')
-        for name, value in self._gh.api_costs.items():
+        for name, value in list(self._gh.api_costs.items()):
             logging.info('%s : %s', name, value)
 
 
diff --git a/utils/github/parser.py b/utils/github/parser.py
index 2f00cac9bb4a..570410ba23d4 100644
--- a/utils/github/parser.py
+++ b/utils/github/parser.py
@@ -57,4 +57,4 @@ def _parse(self, text):
             if not category:
                 print('Cannot find category in pr description')
             else:
-                print('Unknown category: ' + category)
+                print(('Unknown category: ' + category))
diff --git a/utils/github/query.py b/utils/github/query.py
index 9182b001dfe0..ac3ce5bffa96 100644
--- a/utils/github/query.py
+++ b/utils/github/query.py
@@ -517,7 +517,7 @@ def requests_retry_session(
                 if not is_mutation:
                     import inspect
                     caller = inspect.getouterframes(inspect.currentframe(), 2)[1][3]
-                    if caller not in self.api_costs.keys():
+                    if caller not in list(self.api_costs.keys()):
                         self.api_costs[caller] = 0
                     self.api_costs[caller] += result['data']['rateLimit']['cost']
 
diff --git a/utils/junit_to_html/junit_to_html b/utils/junit_to_html/junit_to_html
index cf50e7df00ac..132763c7d4ce 100755
--- a/utils/junit_to_html/junit_to_html
+++ b/utils/junit_to_html/junit_to_html
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- coding: utf-8 -*-
 import os
 import lxml.etree as etree
@@ -82,5 +82,5 @@ if __name__ == "__main__":
         result_path = args.result_dir
     else:
         result_path = os.path.dirname(junit_path)
-    print "junit_path: {}, result_path: {}, export cases:{}, export suites: {}".format(junit_path, result_path, args.export_cases, args.export_suites)
+    print("junit_path: {}, result_path: {}, export cases:{}, export suites: {}".format(junit_path, result_path, args.export_cases, args.export_suites))
     _convert_junit_to_html(junit_path, result_path, args.export_cases, args.export_suites)
diff --git a/utils/kafka/manage.py b/utils/kafka/manage.py
index 01847c7675b2..7458bdceb74b 100755
--- a/utils/kafka/manage.py
+++ b/utils/kafka/manage.py
@@ -30,9 +30,9 @@ def main():
 
     client = kafka.KafkaAdminClient(**config)
     if args.create:
-        print(client.create_topics(args.create))
+        print((client.create_topics(args.create)))
     elif args.delete:
-        print(client.delete_topics(args.delete))
+        print((client.delete_topics(args.delete)))
 
     client.close()
     return 0
diff --git a/utils/make_changelog.py b/utils/make_changelog.py
index fb8fa037001d..5a5c82e5ab66 100755
--- a/utils/make_changelog.py
+++ b/utils/make_changelog.py
@@ -1,6 +1,6 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # Note: should work with python 2 and 3
-from __future__ import print_function
+
 
 import requests
 import json
@@ -201,10 +201,10 @@ def update_user(user):
             resp = github_api_get_json(query, token, max_retries, retry_timeout)
             users[user] = resp
 
-    for pull_request in pull_requests.values():
+    for pull_request in list(pull_requests.values()):
         update_user(pull_request['user'])
 
-    for commit_info in commits_info.values():
+    for commit_info in list(commits_info.values()):
         if 'committer' in commit_info and commit_info['committer'] is not None and 'login' in commit_info['committer']:
             update_user(commit_info['committer']['login'])
         else:
@@ -216,7 +216,7 @@ def update_user(user):
 # List of unknown commits -> text description.
 def process_unknown_commits(commits, commits_info, users):
 
-    pattern = u'Commit: [{}]({})
Author: {}
Message: {}'
+    pattern = 'Commit: [{}]({})
Author: {}
Message: {}'
 
     texts = []
 
@@ -262,7 +262,7 @@ def process_unknown_commits(commits, commits_info, users):
 # Returns False if the PR should not be mentioned changelog.
 def parse_one_pull_request(item):
     description = item['description']
-    lines = [line for line in map(lambda x: x.strip(), description.split('
') if description else []) if line]
+    lines = [line for line in [x.strip() for x in description.split('
') if description else []] if line]
     lines = [re.sub(r'\s+', ' ', l) for l in lines]
 
     cat_pos = None
@@ -310,17 +310,17 @@ def parse_one_pull_request(item):
 def process_pull_requests(pull_requests, users, repo):
     groups = {}
 
-    for id, item in pull_requests.items():
+    for id, item in list(pull_requests.items()):
         if not parse_one_pull_request(item):
             continue
 
-        pattern = u"{} [#{}]({}) ({})"
+        pattern = "{} [#{}]({}) ({})"
         link = 'https://github.com/{}/pull/{}'.format(repo, id)
         author = 'author not found'
         if item['user'] in users:
             # TODO get user from any commit if no user name on github
             user = users[item['user']]
-            author = u'[{}]({})'.format(user['name'] or user['login'], user['html_url'])
+            author = '[{}]({})'.format(user['name'] or user['login'], user['html_url'])
 
         cat = item['category']
         if cat not in groups:
@@ -336,9 +336,9 @@ def categories_sort_key(name):
             return name.lower()
 
     texts = []
-    for group, text in sorted(groups.items(), key = lambda kv: categories_sort_key(kv[0])):
-        items = [u'* {}'.format(pr) for pr in text]
-        texts.append(u'### {}
{}'.format(group if group else u'[No category]', '
'.join(items)))
+    for group, text in sorted(list(groups.items()), key = lambda kv: categories_sort_key(kv[0])):
+        items = ['* {}'.format(pr) for pr in text]
+        texts.append('### {}
{}'.format(group if group else '[No category]', '
'.join(items)))
 
     return '

'.join(texts)
 
@@ -456,7 +456,7 @@ def make_changelog(new_tag, prev_tag, pull_requests_nums, repo, repo_folder, sta
     logging.info('Found %d users.', len(users))
     save_state(state_file, state)
 
-    changelog = u'{}

{}'.format(process_pull_requests(pull_requests, users, repo), process_unknown_commits(unknown_commits, commits_info, users))
+    changelog = '{}

{}'.format(process_pull_requests(pull_requests, users, repo), process_unknown_commits(unknown_commits, commits_info, users))
 
     # Substitute links to issues
     changelog = re.sub(r'(?<!\[)#(\d{4,})(?!\])', r'[#\1](https://github.com/{}/issues/\1)'.format(repo), changelog)
diff --git a/utils/release/push_packages b/utils/release/push_packages
index 43e75a723da7..e25cb325c711 100755
--- a/utils/release/push_packages
+++ b/utils/release/push_packages
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # -*- coding: utf-8 -*-
 import argparse
 import subprocess
@@ -54,7 +54,7 @@ class DebRelease(object):
 
     def __init__(self, dupload_config, login, ssh_key_path):
         self.__config = {}
-        for repo, conf in dupload_config.iteritems():
+        for repo, conf in dupload_config.items():
             d = {
                 "fqdn": conf["fqdn"],
                 "method": "scpb",
@@ -65,7 +65,7 @@ class DebRelease(object):
             }
             d.update(conf)
             self.__config[repo] = d
-        print self.__config
+        print(self.__config)
         self.ssh_key_path = ssh_key_path
 
     def __enter__(self):
@@ -74,7 +74,7 @@ class DebRelease(object):
         self.__dupload_conf = open(self.DUPLOAD_CONF_PATH, 'w')
         self.__dupload_conf.write('package config;

$default_host = undef;

' + '

'.join([
             self.DUPLOAD_CONF_TEMPLATE.format(title=title, **values)
-            for title, values in self.__config.iteritems()]))
+            for title, values in self.__config.items()]))
         self.__dupload_conf.write('
')
         self.__dupload_conf.close()
         if self.ssh_key_path:
diff --git a/utils/release/release_lib.sh b/utils/release/release_lib.sh
index 569e1dfb9f23..c4dd177b931b 100644
--- a/utils/release/release_lib.sh
+++ b/utils/release/release_lib.sh
@@ -253,8 +253,8 @@ function make_rpm {
     TARGET=noarch
     deb_unpack
     mv ${PACKAGE}-$VERSION_FULL-2.spec ${PACKAGE}-$VERSION_FULL-2.spec_tmp
-    echo "Requires: python2" >> ${PACKAGE}-$VERSION_FULL-2.spec
-    #echo "Requires: python2-termcolor" >> ${PACKAGE}-$VERSION-2.spec
+    echo "Requires: python3" >> ${PACKAGE}-$VERSION_FULL-2.spec
+    #echo "Requires: python3-termcolor" >> ${PACKAGE}-$VERSION-2.spec
     cat ${PACKAGE}-$VERSION_FULL-2.spec_tmp >> ${PACKAGE}-$VERSION_FULL-2.spec
     rpm_pack
 
diff --git a/utils/s3tools/s3uploader b/utils/s3tools/s3uploader
index 4e8722e08517..a21263c1094f 100755
--- a/utils/s3tools/s3uploader
+++ b/utils/s3tools/s3uploader
@@ -1,4 +1,4 @@
-#!/usr/bin/env python2
+#!/usr/bin/env python3
 # -*- coding: utf-8 -*-
 import os
 import logging
@@ -32,7 +32,7 @@ class S3API(object):
         chunkcount = int(math.ceil(filesize / chunksize))
 
         def call_back(x, y):
-            print "Uploaded {}/{} bytes".format(x, y)
+            print("Uploaded {}/{} bytes".format(x, y))
         try:
             for i in range(chunkcount + 1):
                 logging.info("Uploading chunk %s of %s", i, chunkcount + 1)
diff --git a/utils/simple-backport/format-changelog.py b/utils/simple-backport/format-changelog.py
index 5dff4f1c5e88..e0fe4912d5dc 100755
--- a/utils/simple-backport/format-changelog.py
+++ b/utils/simple-backport/format-changelog.py
@@ -18,7 +18,7 @@
 def parse_one_pull_request(item):
     description = item['body']
     # Don't skip empty lines because they delimit parts of description
-    lines = [line for line in map(lambda x: x.strip(), description.split('
') if description else [])]
+    lines = [line for line in [x.strip() for x in description.split('
') if description else []]]
     lines = [re.sub(r'\s+', ' ', l) for l in lines]
 
     category = ''
@@ -102,7 +102,7 @@ def parse_one_pull_request(item):
     users[user_id] = json.loads(open(f'user{user_id}.json').read())
 
 def print_category(category):
-    print("#### " + category)
+    print(("#### " + category))
     print()
     for pr in category_to_pr[category]:
         user = users[pr["user"]["id"]]
