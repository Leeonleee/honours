You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Dictionaries that failed to execute get reported as successfully loaded
**Describe the unexpected behaviour**
A dictionary that depends on an executable that's missing gets reported as successfully loaded.

**Relevant version**
Observed in 22.3+

**How to reproduce**
Created an integration test for the repro:
[tests/integration/test_dictionaries_broken_config/test.py::test_broken_dict[missing_executable]](https://github.com/ClickHouse/ClickHouse/commit/9d1f8aa684628557a214b16c337ceb27e2fc14cf#diff-aad2ab88d46a3363a74367a643c8978338f5dbdb847864a741119cf7bf4bc584R44)

TLDR is

1. Create a dictionary with the following configuration:
```
  <source>
    <executable>
      <!-- OOPS! executable not found -->
      <command>executable_not_found</command>
      <format>CSV</format>
    </executable>
  </source>
```
2. `SELECT status FROM system.dictionaries` will show `LOADED`

**Expected behavior**
`21.8` behaves differently (more correct IMO):

 `SELECT status FROM system.dictionaries` will show `FAILED`
`dictGet` will result in client receiving an exception `DB::Exception: Child process was exited with return code 127`

**Additional context**
Possibly related issue: https://github.com/ClickHouse/ClickHouse/issues/37571
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
