{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 33677,
  "instance_id": "ClickHouse__ClickHouse-33677",
  "issue_numbers": [
    "33603"
  ],
  "base_commit": "9dddce13a7c94cc46ced326b61f20308869724b4",
  "patch": "diff --git a/src/Interpreters/RewriteSumIfFunctionVisitor.cpp b/src/Interpreters/RewriteSumIfFunctionVisitor.cpp\nindex 7f725c1d8a5a..50e6bec28f38 100644\n--- a/src/Interpreters/RewriteSumIfFunctionVisitor.cpp\n+++ b/src/Interpreters/RewriteSumIfFunctionVisitor.cpp\n@@ -25,7 +25,8 @@ void RewriteSumIfFunctionMatcher::visit(const ASTFunction & func, ASTPtr & ast,\n \n     auto lower_name = Poco::toLower(func.name);\n \n-    if (lower_name != \"sum\" && lower_name != \"sumif\")\n+    /// sumIf, SumIf or sUMIf are valid function names, but sumIF or sumiF are not\n+    if (lower_name != \"sum\" && (lower_name != \"sumif\" || !endsWith(func.name, \"If\")))\n         return;\n \n     const auto & func_arguments = func.arguments->children;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02177_sum_if_not_found.reference b/tests/queries/0_stateless/02177_sum_if_not_found.reference\nnew file mode 100644\nindex 000000000000..bb0b1cf658d1\n--- /dev/null\n+++ b/tests/queries/0_stateless/02177_sum_if_not_found.reference\n@@ -0,0 +1,3 @@\n+0\n+0\n+0\ndiff --git a/tests/queries/0_stateless/02177_sum_if_not_found.sql b/tests/queries/0_stateless/02177_sum_if_not_found.sql\nnew file mode 100644\nindex 000000000000..c888f8b39aa7\n--- /dev/null\n+++ b/tests/queries/0_stateless/02177_sum_if_not_found.sql\n@@ -0,0 +1,35 @@\n+SELECT sumIf(1, 0);\n+SELECT SumIf(1, 0);\n+SELECT sUmIf(1, 0);\n+SELECT sumIF(1, 0); -- { serverError 46 }\n+\n+DROP TABLE IF EXISTS data;\n+DROP TABLE IF EXISTS agg;\n+\n+CREATE TABLE data\n+(\n+    `n` UInt32,\n+    `t` DateTime\n+)\n+ENGINE = Null;\n+\n+CREATE TABLE agg\n+ENGINE = AggregatingMergeTree\n+ORDER BY tuple() AS\n+SELECT\n+    t,\n+    sumIF(n, 0)\n+FROM data\n+GROUP BY t; -- { serverError 46}\n+\n+CREATE TABLE agg\n+ENGINE = AggregatingMergeTree\n+ORDER BY tuple() AS\n+SELECT\n+    t,\n+    sumIf(n, 0)\n+FROM data\n+GROUP BY t;\n+\n+DROP TABLE data;\n+DROP TABLE agg;\n",
  "problem_statement": "DB::Exception: Unknown function sumIF: While processing t, sumIF(n, 0)\n```sql\r\nSELECT sumIF(1, 0)\r\n\r\nQuery id: 3a3db9bd-b0ad-4d2f-bd8b-39daeda0546c\r\n\r\n\u250c\u2500countIf(0)\u2500\u2510\r\n\u2502          0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 rows in set. Elapsed: 0.244 sec. \r\n```\r\nis OK.\r\n\r\n```sql\r\nCREATE TABLE agg\r\nENGINE = AggregatingMergeTree\r\nORDER BY tuple() AS\r\nSELECT\r\n    t,\r\n    sumIF(n, 0)\r\nFROM data\r\nGROUP BY t\r\n\r\nQuery id: f47b729e-c574-4978-b565-aa805b7b896f\r\n\r\n\r\n0 rows in set. Elapsed: 0.009 sec. \r\n\r\nReceived exception from server (version 21.13.1):\r\nCode: 46. DB::Exception: Received from localhost:9000. DB::Exception: Unknown function sumIF: While processing t, sumIF(n, 0). (UNKNOWN_FUNCTION)\r\n```\n",
  "hints_text": "sumIF <> sumIf ?\r\n\r\nshow create table data ?\n```\r\nSHOW CREATE TABLE data\r\n\r\nQuery id: d3e7fac7-0d9e-41cd-9725-defca77f6532\r\n\r\n\u250c\u2500statement\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 CREATE TABLE default.data\r\n(\r\n    `n` UInt32,\r\n    `t` DateTime\r\n)\r\nENGINE = Null \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 rows in set. Elapsed: 0.005 sec.\r\n```\n`sumIF` not meant to work,\r\nonly `sumIf` should work.\r\n\r\n\n@ucasfl And it's yours :)\r\n#17041",
  "created_at": "2022-01-16T06:27:05Z",
  "modified_files": [
    "src/Interpreters/RewriteSumIfFunctionVisitor.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02177_sum_if_not_found.reference",
    "b/tests/queries/0_stateless/02177_sum_if_not_found.sql"
  ]
}