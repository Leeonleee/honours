You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
MySQL compatibility: INSTR function support
**Use case**

_NB: [the cell towers dataset](https://clickhouse.com/docs/en/getting-started/example-datasets/cell-towers/) is used here as an example._

When using Looker Studio with ClickHouse as a pseudo-MySQL data source, the following query fails because [INSTR](https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_instr) is not supported yet:

```
SELECT radio, mcc, net, area, cell, unit, lon, lat, range, samples, changeable, created, updated, averageSignal 
FROM datasets.cell_towers 
WHERE INSTR(radio, 'M') > 0
```

This limits the usage of the string-type filters in Looker Studio.

Full stack trace:

```
2023.03.10 20:12:34.022342 [ 512 ] {mysql:2634:6c4d87ce-4b56-4ddb-80a7-92d81a69eb9b} <Error> executeQuery: Code: 46. DB::Exception: Unknown function INSTR: While processing SELECT radio, mcc, net, area, cell, unit, lon, lat, range, samples, changeable, created, updated, averageSignal FROM datasets.cell_towers WHERE INSTR(radio, 'M') > 0. (UNKNOWN_FUNCTION) (version 23.3.1.387 (official build)) (from 74.125.88.50:36828) (in query: SELECT AVG(area) AS qt_3rarca233c, COUNT(1) AS qt_6er8nps33c, MAX(range) AS qt_6huada233c, SUM(area) AS qt_b9ehfa233c, MIN(range) AS qt_ufjdha233c, radio FROM (SELECT * FROM datasets.cell_towers) AS t WHERE (INSTR(radio, 'M') > 0) GROUP BY radio;), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xe0cb6d5 in /usr/bin/clickhouse
1. ? @ 0xe17079e in /usr/bin/clickhouse
2. DB::FunctionFactory::getImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) const @ 0x123d659f in /usr/bin/clickhouse
3. DB::FunctionFactory::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) const @ 0x123d70ca in /usr/bin/clickhouse
4. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x12d13746 in /usr/bin/clickhouse
5. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x12d14369 in /usr/bin/clickhouse
6. DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x12d10941 in /usr/bin/clickhouse
7. ? @ 0x12d07e55 in /usr/bin/clickhouse
8. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x12ce691b in /usr/bin/clickhouse
9. DB::KeyCondition::getBlockWithConstants(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::TreeRewriterResult const> const&, std::__1::shared_ptr<DB::Context const>) @ 0x1421db35 in /usr/bin/clickhouse
10. DB::MergeTreeWhereOptimizer::MergeTreeWhereOptimizer(DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, unsigned long>>>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, Poco::Logger*) @ 0x1444474a in /usr/bin/clickhouse
11. ? @ 0x135e89e3 in /usr/bin/clickhouse
12. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>) @ 0x135e42f9 in /usr/bin/clickhouse
13. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x136761a2 in /usr/bin/clickhouse
14. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x1367414a in /usr/bin/clickhouse
15. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x136734ec in /usr/bin/clickhouse
16. ? @ 0x135e99f2 in /usr/bin/clickhouse
17. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>) @ 0x135e42f9 in /usr/bin/clickhouse
18. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x136761a2 in /usr/bin/clickhouse
19. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x1367414a in /usr/bin/clickhouse
20. DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x1359ddd0 in /usr/bin/clickhouse
21. ? @ 0x13996cc0 in /usr/bin/clickhouse
22. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (DB::QueryResultDetails const&)>, std::__1::optional<DB::FormatSettings> const&) @ 0x1399cf32 in /usr/bin/clickhouse
23. DB::MySQLHandler::comQuery(DB::ReadBuffer&) @ 0x146f5a13 in /usr/bin/clickhouse
24. DB::MySQLHandler::run() @ 0x146f2502 in /usr/bin/clickhouse
25. Poco::Net::TCPServerConnection::start() @ 0x176321b4 in /usr/bin/clickhouse
26. Poco::Net::TCPServerDispatcher::run() @ 0x176333db in /usr/bin/clickhouse
27. Poco::PooledThread::run() @ 0x177bac87 in /usr/bin/clickhouse
28. Poco::ThreadImpl::runnableEntry(void*) @ 0x177b86bd in /usr/bin/clickhouse
29. ? @ 0x7fcbd2203609 in ?
30. __clone @ 0x7fcbd2128133 in ?

2023.03.10 20:12:34.022723 [ 512 ] {} <Error> MySQLHandler: MySQLHandler: Cannot read packet: : Code: 46. DB::Exception: Unknown function INSTR: While processing SELECT radio, mcc, net, area, cell, unit, lon, lat, range, samples, changeable, created, updated, averageSignal FROM datasets.cell_towers WHERE INSTR(radio, 'M') > 0. (UNKNOWN_FUNCTION), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xe0cb6d5 in /usr/bin/clickhouse
1. ? @ 0xe17079e in /usr/bin/clickhouse
2. DB::FunctionFactory::getImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) const @ 0x123d659f in /usr/bin/clickhouse
3. DB::FunctionFactory::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) const @ 0x123d70ca in /usr/bin/clickhouse
4. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x12d13746 in /usr/bin/clickhouse
5. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x12d14369 in /usr/bin/clickhouse
6. DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x12d10941 in /usr/bin/clickhouse
7. ? @ 0x12d07e55 in /usr/bin/clickhouse
8. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x12ce691b in /usr/bin/clickhouse
9. DB::KeyCondition::getBlockWithConstants(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::TreeRewriterResult const> const&, std::__1::shared_ptr<DB::Context const>) @ 0x1421db35 in /usr/bin/clickhouse
10. DB::MergeTreeWhereOptimizer::MergeTreeWhereOptimizer(DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context const>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, unsigned long>>>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, Poco::Logger*) @ 0x1444474a in /usr/bin/clickhouse
11. ? @ 0x135e89e3 in /usr/bin/clickhouse
12. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>) @ 0x135e42f9 in /usr/bin/clickhouse
13. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x136761a2 in /usr/bin/clickhouse
14. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x1367414a in /usr/bin/clickhouse
15. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x136734ec in /usr/bin/clickhouse
16. ? @ 0x135e99f2 in /usr/bin/clickhouse
17. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>) @ 0x135e42f9 in /usr/bin/clickhouse
18. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x136761a2 in /usr/bin/clickhouse
19. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x1367414a in /usr/bin/clickhouse
20. DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x1359ddd0 in /usr/bin/clickhouse
21. ? @ 0x13996cc0 in /usr/bin/clickhouse
22. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (DB::QueryResultDetails const&)>, std::__1::optional<DB::FormatSettings> const&) @ 0x1399cf32 in /usr/bin/clickhouse
23. DB::MySQLHandler::comQuery(DB::ReadBuffer&) @ 0x146f5a13 in /usr/bin/clickhouse
24. DB::MySQLHandler::run() @ 0x146f2502 in /usr/bin/clickhouse
25. Poco::Net::TCPServerConnection::start() @ 0x176321b4 in /usr/bin/clickhouse
26. Poco::Net::TCPServerDispatcher::run() @ 0x176333db in /usr/bin/clickhouse
27. Poco::PooledThread::run() @ 0x177bac87 in /usr/bin/clickhouse
28. Poco::ThreadImpl::runnableEntry(void*) @ 0x177b86bd in /usr/bin/clickhouse
29. ? @ 0x7fcbd2203609 in ?
30. __clone @ 0x7fcbd2128133 in ?
 (version 23.3.1.387 (official build))
``` 

**Describe the solution you'd like**

INSTR function is supported via MySQL wire protocol.

CC @alexey-milovidov @mshustov
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
