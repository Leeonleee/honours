{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 37377,
  "instance_id": "ClickHouse__ClickHouse-37377",
  "issue_numbers": [
    "37331"
  ],
  "base_commit": "87c6f806cfe3bc1ccd875403fcd3e35dafa03928",
  "patch": "diff --git a/docs/en/sql-reference/statements/create/user.md b/docs/en/sql-reference/statements/create/user.md\nindex 0aad0961a8b3..34f0a13147c5 100644\n--- a/docs/en/sql-reference/statements/create/user.md\n+++ b/docs/en/sql-reference/statements/create/user.md\n@@ -29,12 +29,14 @@ There are multiple ways of user identification:\n -   `IDENTIFIED WITH no_password`\n -   `IDENTIFIED WITH plaintext_password BY 'qwerty'`\n -   `IDENTIFIED WITH sha256_password BY 'qwerty'` or `IDENTIFIED BY 'password'`\n--   `IDENTIFIED WITH sha256_hash BY 'hash'`\n+-   `IDENTIFIED WITH sha256_hash BY 'hash'` or `IDENTIFIED WITH sha256_hash BY 'hash' SALT 'salt'`\n -   `IDENTIFIED WITH double_sha1_password BY 'qwerty'`\n -   `IDENTIFIED WITH double_sha1_hash BY 'hash'`\n -   `IDENTIFIED WITH ldap SERVER 'server_name'`\n -   `IDENTIFIED WITH kerberos` or `IDENTIFIED WITH kerberos REALM 'realm'`\n \n+For identification with sha256_hash using `SALT` - hash must be calculated from concatination of 'password' and 'salt'.\n+\n ## User Host {#user-host}\n \n User host is a host from which a connection to ClickHouse server could be established. The host can be specified in the `HOST` query section in the following ways:\ndiff --git a/docs/ru/sql-reference/statements/create/user.md b/docs/ru/sql-reference/statements/create/user.md\nindex 78c481e8eb7f..d7da17488213 100644\n--- a/docs/ru/sql-reference/statements/create/user.md\n+++ b/docs/ru/sql-reference/statements/create/user.md\n@@ -29,12 +29,14 @@ CREATE USER [IF NOT EXISTS | OR REPLACE] name1 [ON CLUSTER cluster_name1]\n -   `IDENTIFIED WITH no_password`\n -   `IDENTIFIED WITH plaintext_password BY 'qwerty'`\n -   `IDENTIFIED WITH sha256_password BY 'qwerty'` or `IDENTIFIED BY 'password'`\n--   `IDENTIFIED WITH sha256_hash BY 'hash'`\n+-   `IDENTIFIED WITH sha256_hash BY 'hash'` or `IDENTIFIED WITH sha256_hash BY 'hash' SALT 'salt'`\n -   `IDENTIFIED WITH double_sha1_password BY 'qwerty'`\n -   `IDENTIFIED WITH double_sha1_hash BY 'hash'`\n -   `IDENTIFIED WITH ldap SERVER 'server_name'`\n -   `IDENTIFIED WITH kerberos` or `IDENTIFIED WITH kerberos REALM 'realm'`\n \n+\u0414\u043b\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0441 sha256_hash \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f `SALT` - \u0445\u044d\u0448 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d \u043e\u0442 \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u0438 'password' \u0438 'salt'.\n+\n ## \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0445\u043e\u0441\u0442\n \n \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0445\u043e\u0441\u0442 \u2014 \u044d\u0442\u043e \u0445\u043e\u0441\u0442, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c ClickHouse. \u0425\u043e\u0441\u0442 \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u0432 \u0441\u0435\u043a\u0446\u0438\u0438 `HOST` \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438:\ndiff --git a/src/Parsers/Access/ParserCreateUserQuery.cpp b/src/Parsers/Access/ParserCreateUserQuery.cpp\nindex b7d49be879e9..eda2505f88db 100644\n--- a/src/Parsers/Access/ParserCreateUserQuery.cpp\n+++ b/src/Parsers/Access/ParserCreateUserQuery.cpp\n@@ -46,7 +46,7 @@ namespace\n     }\n \n \n-    bool parseAuthenticationData(IParserBase::Pos & pos, Expected & expected, bool id_mode, AuthenticationData & auth_data)\n+    bool parseAuthenticationData(IParserBase::Pos & pos, Expected & expected, AuthenticationData & auth_data)\n     {\n         return IParserBase::wrapParseImpl(pos, [&]\n         {\n@@ -120,7 +120,7 @@ namespace\n                     return false;\n                 value = ast->as<const ASTLiteral &>().value.safeGet<String>();\n \n-                if (id_mode && expect_hash)\n+                if (expect_hash && type == AuthenticationType::SHA256_PASSWORD)\n                 {\n                     if (ParserKeyword{\"SALT\"}.ignore(pos, expected) && ParserStringLiteral{}.parse(pos, ast, expected))\n                     {\n@@ -447,7 +447,7 @@ bool ParserCreateUserQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expec\n         if (!auth_data)\n         {\n             AuthenticationData new_auth_data;\n-            if (parseAuthenticationData(pos, expected, attach_mode, new_auth_data))\n+            if (parseAuthenticationData(pos, expected, new_auth_data))\n             {\n                 auth_data = std::move(new_auth_data);\n                 continue;\n",
  "test_patch": "diff --git a/src/Parsers/tests/gtest_Parser.cpp b/src/Parsers/tests/gtest_Parser.cpp\nindex f8de8ed90e6a..5b6d49e27413 100644\n--- a/src/Parsers/tests/gtest_Parser.cpp\n+++ b/src/Parsers/tests/gtest_Parser.cpp\n@@ -261,10 +261,18 @@ INSTANTIATE_TEST_SUITE_P(ParserCreateUserQuery, ParserTest,\n             \"CREATE USER user1 IDENTIFIED WITH sha256_password BY 'qwe123'\",\n             \"CREATE USER user1 IDENTIFIED WITH sha256_hash BY '[A-Za-z0-9]{64}' SALT '[A-Za-z0-9]{64}'\"\n         },\n+        {\n+            \"CREATE USER user1 IDENTIFIED WITH sha256_hash BY '7A37B85C8918EAC19A9089C0FA5A2AB4DCE3F90528DCDEEC108B23DDF3607B99' SALT 'salt'\",\n+            \"CREATE USER user1 IDENTIFIED WITH sha256_hash BY '7A37B85C8918EAC19A9089C0FA5A2AB4DCE3F90528DCDEEC108B23DDF3607B99' SALT 'salt'\"\n+        },\n         {\n             \"ALTER USER user1 IDENTIFIED WITH sha256_password BY 'qwe123'\",\n             \"ALTER USER user1 IDENTIFIED WITH sha256_hash BY '[A-Za-z0-9]{64}' SALT '[A-Za-z0-9]{64}'\"\n         },\n+        {\n+            \"ALTER USER user1 IDENTIFIED WITH sha256_hash BY '7A37B85C8918EAC19A9089C0FA5A2AB4DCE3F90528DCDEEC108B23DDF3607B99' SALT 'salt'\",\n+            \"ALTER USER user1 IDENTIFIED WITH sha256_hash BY '7A37B85C8918EAC19A9089C0FA5A2AB4DCE3F90528DCDEEC108B23DDF3607B99' SALT 'salt'\"\n+        },\n         {\n             \"CREATE USER user1 IDENTIFIED WITH sha256_password BY 'qwe123' SALT 'EFFD7F6B03B3EA68B8F86C1E91614DD50E42EB31EF7160524916444D58B5E264'\",\n             \"throws Syntax error\"\n",
  "problem_statement": "CREATE USER fails with \"ON CLUSTER\" and \"sha256_password\"\nI'm trying to create a new user on a clickhouse cluster with  3 shards using this command:\r\n`CREATE USER IF NOT EXISTS user ON CLUSTER '{cluster}' IDENTIFIED WITH sha256_password BY 'password' DEFAULT ROLE NONE`\r\n\r\nThis command gets expanded to:\r\n\r\n`CREATE USER IF NOT EXISTS user ON CLUSTER {cluster} IDENTIFIED WITH sha256_hash BY '<hash>' SALT '<salt>' DEFAULT ROLE NONE`\r\n\r\nHowever, on each of the shard I get this error:\r\n\r\n`Syntax error: failed at position 123 ('SALT'): SALT '<salt>' DEFAULT ROLE NONE. Expected one of: HOST, SETTINGS, DEFAULT ROLE, GRANTEES, DEFAULT DATABASE, end of query.`\r\n\r\nHowever, if I switch to use `plaintext_password` instead, everything works fine. Looks like the expansion and the addition of the \"SALT\" was not expected when handling this command.\r\n\r\n* Which ClickHouse server version to use: 22.4\r\n\r\n**Expected behavior**\r\nThe user to be created with no errors.\r\n\r\nThanks!\n",
  "hints_text": "Probably related to #36172\r\ncc: @varadarajkumar, @yakov-olkhovskiy\nDo you use identical ClickHouse versions on the cluster?\n> Do you use identical ClickHouse versions on the cluster?\r\n\r\nYes. 22.4 on all three shards",
  "created_at": "2022-05-20T02:01:30Z",
  "modified_files": [
    "docs/en/sql-reference/statements/create/user.md",
    "docs/ru/sql-reference/statements/create/user.md",
    "src/Parsers/Access/ParserCreateUserQuery.cpp"
  ],
  "modified_test_files": [
    "src/Parsers/tests/gtest_Parser.cpp"
  ]
}