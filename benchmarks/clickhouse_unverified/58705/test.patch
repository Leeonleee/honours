diff --git a/src/Parsers/tests/gtest_dictionary_parser.cpp b/src/Parsers/tests/gtest_dictionary_parser.cpp
index a1ba46125a72..44205975cdc0 100644
--- a/src/Parsers/tests/gtest_dictionary_parser.cpp
+++ b/src/Parsers/tests/gtest_dictionary_parser.cpp
@@ -301,8 +301,10 @@ TEST(ParserDictionaryDDL, ParseDropQuery)
     ASTDropQuery * drop1 = ast1->as<ASTDropQuery>();
 
     EXPECT_TRUE(drop1->is_dictionary);
-    EXPECT_EQ(drop1->getDatabase(), "test");
-    EXPECT_EQ(drop1->getTable(), "dict1");
+    auto & database_and_tables1 = drop1->database_and_tables->as<ASTExpressionList &>();
+    auto identifier1 = dynamic_pointer_cast<ASTTableIdentifier>(database_and_tables1.children[0]);
+    EXPECT_EQ(identifier1->getDatabaseName(), "test");
+    EXPECT_EQ(identifier1->shortName(), "dict1");
     auto str1 = serializeAST(*drop1);
     EXPECT_EQ(input1, str1);
 
@@ -312,8 +314,10 @@ TEST(ParserDictionaryDDL, ParseDropQuery)
     ASTDropQuery * drop2 = ast2->as<ASTDropQuery>();
 
     EXPECT_TRUE(drop2->is_dictionary);
-    EXPECT_EQ(drop2->getDatabase(), "");
-    EXPECT_EQ(drop2->getTable(), "dict2");
+    auto & database_and_tables2 = drop2->database_and_tables->as<ASTExpressionList &>();
+    auto identifier2 = dynamic_pointer_cast<ASTTableIdentifier>(database_and_tables2.children[0]);
+    EXPECT_EQ(identifier2->getDatabaseName(), "");
+    EXPECT_EQ(identifier2->shortName(), "dict2");
     auto str2 = serializeAST(*drop2);
     EXPECT_EQ(input2, str2);
 }
diff --git a/tests/queries/0_stateless/02961_drop_tables.reference b/tests/queries/0_stateless/02961_drop_tables.reference
new file mode 100644
index 000000000000..c0465dc592a9
--- /dev/null
+++ b/tests/queries/0_stateless/02961_drop_tables.reference
@@ -0,0 +1,8 @@
+-- check which tables exist in 02961_db1
+-- check which tables exist in 02961_db2
+02961_tb4
+02961_tb5
+Test when deletion of existing table fails
+-- check which tables exist in 02961_db1
+-- check which tables exist in 02961_db2
+02961_tb5
diff --git a/tests/queries/0_stateless/02961_drop_tables.sql b/tests/queries/0_stateless/02961_drop_tables.sql
new file mode 100644
index 000000000000..e91ac4bfe19b
--- /dev/null
+++ b/tests/queries/0_stateless/02961_drop_tables.sql
@@ -0,0 +1,32 @@
+-- Tags: no-parallel
+DROP DATABASE IF EXISTS 02961_db1;
+CREATE DATABASE IF NOT EXISTS 02961_db1;
+DROP DATABASE IF EXISTS 02961_db2;
+CREATE DATABASE IF NOT EXISTS 02961_db2;
+
+
+CREATE TABLE IF NOT EXISTS 02961_db1.02961_tb1 (id UInt32) Engine=Memory();
+CREATE TABLE IF NOT EXISTS 02961_db1.02961_tb2 (id UInt32) Engine=Memory();
+
+CREATE TABLE IF NOT EXISTS 02961_db2.02961_tb3 (id UInt32) Engine=Memory();
+CREATE TABLE IF NOT EXISTS 02961_db2.02961_tb4 (id UInt32) Engine=Memory();
+CREATE TABLE IF NOT EXISTS 02961_db2.02961_tb5 (id UInt32) Engine=Memory();
+
+DROP TABLE 02961_db1.02961_tb1, 02961_db1.02961_tb2, 02961_db2.02961_tb3;
+
+SELECT '-- check which tables exist in 02961_db1';
+SHOW TABLES FROM 02961_db1;
+SELECT '-- check which tables exist in 02961_db2';
+SHOW TABLES FROM 02961_db2;
+
+SELECT 'Test when deletion of existing table fails';
+DROP TABLE 02961_db2.02961_tb4, 02961_db1.02961_tb1, 02961_db2.02961_tb5; -- { serverError UNKNOWN_TABLE }
+
+SELECT '-- check which tables exist in 02961_db1';
+SHOW TABLES FROM 02961_db1;
+SELECT '-- check which tables exist in 02961_db2';
+SHOW TABLES FROM 02961_db2;
+
+
+DROP DATABASE IF EXISTS 02961_db1;
+DROP DATABASE IF EXISTS 02961_db2;
