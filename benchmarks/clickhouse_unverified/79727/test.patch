diff --git a/tests/queries/0_stateless/03444_analyzer_resolve_alias_columns.reference b/tests/queries/0_stateless/03444_analyzer_resolve_alias_columns.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/03444_analyzer_resolve_alias_columns.sql b/tests/queries/0_stateless/03444_analyzer_resolve_alias_columns.sql
new file mode 100644
index 000000000000..ee8136b4743a
--- /dev/null
+++ b/tests/queries/0_stateless/03444_analyzer_resolve_alias_columns.sql
@@ -0,0 +1,25 @@
+CREATE TABLE users (
+    uid Int16,
+    name String,
+    age Int16,
+    v Array(Int16) ALIAS arrayMap(x -> age, array(name))
+) ENGINE=Memory;
+
+INSERT INTO users VALUES (1231, 'John', 33);
+INSERT INTO users VALUES (6666, 'Ksenia', 48);
+INSERT INTO users VALUES (8888, 'Alice', 50);
+
+SELECT * FROM users FORMAT Null;
+
+CREATE TABLE out1
+  (
+    id UInt64,
+    j JSON,
+    name Array(UInt32) ALIAS arrayMap(x -> toUInt32(x), JSONAllPaths(j)),
+    value Array(Array(UInt32)) ALIAS arrayMap(x -> JSONExtract(CAST(j, 'String'), indexOf(name, x), 'Array(UInt32)'), name)
+)
+ORDER BY id;
+
+INSERT INTO out1 SELECT 42, '{"a" : 42}';
+
+SELECT * FROM out1 FORMAT Null;
diff --git a/tests/queries/0_stateless/03522_analyzer_check_correlated_columns.reference b/tests/queries/0_stateless/03522_analyzer_check_correlated_columns.reference
new file mode 100644
index 000000000000..0d66ea1aee95
--- /dev/null
+++ b/tests/queries/0_stateless/03522_analyzer_check_correlated_columns.reference
@@ -0,0 +1,2 @@
+0
+1
diff --git a/tests/queries/0_stateless/03522_analyzer_check_correlated_columns.sql b/tests/queries/0_stateless/03522_analyzer_check_correlated_columns.sql
new file mode 100644
index 000000000000..f3ca233d9cf9
--- /dev/null
+++ b/tests/queries/0_stateless/03522_analyzer_check_correlated_columns.sql
@@ -0,0 +1,7 @@
+set enable_analyzer = 1;
+
+SELECT min(*) y FROM (SELECT 1 IN (SELECT y));
+
+WITH toDateTime(*) AS t SELECT t IN (SELECT t WHERE t IN (SELECT t));
+
+SELECT (SELECT min(*) FROM (SELECT t0.c0)) AS a0, (SELECT a0) FROM (SELECT 1 c0) AS t0 SETTINGS allow_experimental_correlated_subqueries = 1; -- { serverError NOT_IMPLEMENTED }
