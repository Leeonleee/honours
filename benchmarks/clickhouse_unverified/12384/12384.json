{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12384,
  "instance_id": "ClickHouse__ClickHouse-12384",
  "issue_numbers": [
    "11905"
  ],
  "base_commit": "c16d8e094b1de33b9ac11d34499f3d0bae647c85",
  "patch": "diff --git a/src/Storages/MergeTree/KeyCondition.cpp b/src/Storages/MergeTree/KeyCondition.cpp\nindex 929242b2815c..5905272d8276 100644\n--- a/src/Storages/MergeTree/KeyCondition.cpp\n+++ b/src/Storages/MergeTree/KeyCondition.cpp\n@@ -866,17 +866,23 @@ bool KeyCondition::tryParseAtomFromAST(const ASTPtr & node, const Context & cont\n \n         return atom_it->second(out, const_value);\n     }\n-    else if (getConstant(node, block_with_constants, const_value, const_type))    /// For cases where it says, for example, `WHERE 0 AND something`\n+    else if (getConstant(node, block_with_constants, const_value, const_type))\n     {\n-        if (const_value.getType() == Field::Types::UInt64\n-            || const_value.getType() == Field::Types::Int64\n-            || const_value.getType() == Field::Types::Float64)\n-        {\n-            /// Zero in all types is represented in memory the same way as in UInt64.\n-            out.function = const_value.safeGet<UInt64>()\n-                ? RPNElement::ALWAYS_TRUE\n-                : RPNElement::ALWAYS_FALSE;\n+        /// For cases where it says, for example, `WHERE 0 AND something`\n \n+        if (const_value.getType() == Field::Types::UInt64)\n+        {\n+            out.function = const_value.safeGet<UInt64>() ? RPNElement::ALWAYS_TRUE : RPNElement::ALWAYS_FALSE;\n+            return true;\n+        }\n+        else if (const_value.getType() == Field::Types::Int64)\n+        {\n+            out.function = const_value.safeGet<Int64>() ? RPNElement::ALWAYS_TRUE : RPNElement::ALWAYS_FALSE;\n+            return true;\n+        }\n+        else if (const_value.getType() == Field::Types::Float64)\n+        {\n+            out.function = const_value.safeGet<Float64>() ? RPNElement::ALWAYS_TRUE : RPNElement::ALWAYS_FALSE;\n             return true;\n         }\n     }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01386_negative_float_constant_key_condition.reference b/tests/queries/0_stateless/01386_negative_float_constant_key_condition.reference\nnew file mode 100644\nindex 000000000000..44e0be8e3569\n--- /dev/null\n+++ b/tests/queries/0_stateless/01386_negative_float_constant_key_condition.reference\n@@ -0,0 +1,4 @@\n+0\n+0\n+0\n+0\ndiff --git a/tests/queries/0_stateless/01386_negative_float_constant_key_condition.sql b/tests/queries/0_stateless/01386_negative_float_constant_key_condition.sql\nnew file mode 100644\nindex 000000000000..216f43c42855\n--- /dev/null\n+++ b/tests/queries/0_stateless/01386_negative_float_constant_key_condition.sql\n@@ -0,0 +1,19 @@\n+DROP TABLE IF EXISTS t0;\n+\n+CREATE TABLE t0\n+(\n+    `c0` Int32,\n+    `c1` Int32 CODEC(NONE)\n+)\n+ENGINE = MergeTree()\n+ORDER BY tuple()\n+SETTINGS index_granularity = 8192;\n+\n+INSERT INTO t0 VALUES (0, 0);\n+\n+SELECT t0.c1 FROM t0 WHERE NOT (t0.c1 OR (t0.c0 AND -1524532316));\n+SELECT t0.c1 FROM t0 WHERE NOT (t0.c1 OR (t0.c0 AND -1.0));\n+SELECT t0.c1 FROM t0 WHERE NOT (t0.c1 OR (t0.c0 AND inf));\n+SELECT t0.c1 FROM t0 WHERE NOT (t0.c1 OR (t0.c0 AND nan));\n+\n+DROP TABLE t0;\n",
  "problem_statement": "Non-trivial error if Int is used in WHERE expression[DB::Exception: Bad get: has Int64, requested UInt64]\n**How to reproduce**\r\n* 20.5/master\r\n\r\n``` sql\r\nCREATE TABLE t0\r\n(\r\n    `c0` Int32,\r\n    `c1` Int32 CODEC(NONE)\r\n)\r\nENGINE = MergeTree()\r\nORDER BY tuple()\r\nSETTINGS index_granularity = 8192\r\n\r\nSELECT t0.c1 FROM t0 WHERE NOT (t0.c1 OR (t0.c0 AND -1524532316))\r\n```\r\n\r\n**Expected behavior**\r\nOptions:\r\n- Allow to use Int columns in WHERE expression\r\n- Better error message\r\n\r\n**Error message and/or stacktrace**\r\nIf applicable, add screenshots to help explain your problem.\r\n```\r\n2020.06.24 12:18:33.365018 [ 5031 ] {5458e0d2-80e3-46eb-b722-a1ae6535353a} <Debug> executeQuery: (from [::1]:44764) SELECT t0.c1 FROM t0 WHERE NOT (t0.c1 OR (t0.c0 AND -1524532316))\r\n2020.06.24 12:18:33.367673 [ 5031 ] {5458e0d2-80e3-46eb-b722-a1ae6535353a} <Trace> ContextAccess (default): Access granted: SELECT(c0, c1) ON database3.t0\r\n2020.06.24 12:18:33.369722 [ 5031 ] {5458e0d2-80e3-46eb-b722-a1ae6535353a} <Error> executeQuery: Code: 170, e.displayText() = DB::Exception: Bad get: has Int64, requested UInt64 (version 20.5.1.1) (from [::1]:44764) (in query: SELECT t0.c1 FROM t0 WHERE NOT (t0.c1 OR (t0.c0 AND -1524532316))), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/exception:0: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x140ffd2b in /home/qoega/docker-ch/output/binary/clickhouse\r\n1. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:38: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x9b91fda in /home/qoega/docker-ch/output/binary/clickhouse\r\n2. unsigned long& DB::Field::safeGet<unsigned long>() @ 0xaf1fa6e in /home/qoega/docker-ch/output/binary/clickhouse\r\n3. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.cpp:852: DB::KeyCondition::tryParseAtomFromAST(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&, DB::KeyCondition::RPNElement&) @ 0x110a8904 in /home/qoega/docker-ch/output/binary/clickhouse\r\n4. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.cpp:511: DB::KeyCondition::traverseAST(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&) @ 0x110a7c50 in /home/qoega/docker-ch/output/binary/clickhouse\r\n5. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.cpp:503: DB::KeyCondition::traverseAST(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&) @ 0x110a7ba4 in /home/qoega/docker-ch/output/binary/clickhouse\r\n6. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.cpp:503: DB::KeyCondition::traverseAST(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&) @ 0x110a7ba4 in /home/qoega/docker-ch/output/binary/clickhouse\r\n7. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/KeyCondition.cpp:503: DB::KeyCondition::traverseAST(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&) @ 0x110a7ba4 in /home/qoega/docker-ch/output/binary/clickhouse\r\n8. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:4206: DB::KeyCondition::KeyCondition(DB::SelectQueryInfo const&, DB::Context const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::ExpressionActions> const&) @ 0x110a6bd2 in /home/qoega/docker-ch/output/binary/clickhouse\r\n9. /build/obj-x86_64-linux-gnu/../src/Core/SettingsCollection.h:38: DB::MergeTreeDataSelectExecutor::readFromParts(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const @ 0x1116b2c5 in /home/qoega/docker-ch/output/binary/clickhouse\r\n10. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp:156: DB::MergeTreeDataSelectExecutor::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const @ 0x1116a76c in /home/qoega/docker-ch/output/binary/clickhouse\r\n11. /build/obj-x86_64-linux-gnu/../src/Storages/StorageMergeTree.cpp:186: DB::StorageMergeTree::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0x10f3436b in /home/qoega/docker-ch/output/binary/clickhouse\r\n12. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:662: DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPipeline&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x1097aec4 in /home/qoega/docker-ch/output/binary/clickhouse\r\n13. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::executeImpl(DB::QueryPipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x10973fdc in /home/qoega/docker-ch/output/binary/clickhouse\r\n14. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::execute() @ 0x10973795 in /home/qoega/docker-ch/output/binary/clickhouse\r\n15. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:192: DB::InterpreterSelectWithUnionQuery::execute() @ 0x10b93b8f in /home/qoega/docker-ch/output/binary/clickhouse\r\n16. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x10ce9fe1 in /home/qoega/docker-ch/output/binary/clickhouse\r\n17. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:643: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x10ce9056 in /home/qoega/docker-ch/output/binary/clickhouse\r\n18. /build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::runImpl() @ 0x113262d9 in /home/qoega/docker-ch/output/binary/clickhouse\r\n19. /build/obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:0: DB::TCPHandler::run() @ 0x11331c38 in /home/qoega/docker-ch/output/binary/clickhouse\r\n20. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1402e653 in /home/qoega/docker-ch/output/binary/clickhouse\r\n21. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:0: Poco::Net::TCPServerDispatcher::run() @ 0x1402ee97 in /home/qoega/docker-ch/output/binary/clickhouse\r\n22. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x14197d07 in /home/qoega/docker-ch/output/binary/clickhouse\r\n23. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x14196440 in /home/qoega/docker-ch/output/binary/clickhouse\r\n24. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/SharedPtr.h:277: Poco::ThreadImpl::runnableEntry(void*) @ 0x14194cc8 in /home/qoega/docker-ch/output/binary/clickhouse\r\n25. __tsan_thread_start_func @ 0x9aab70d in /home/qoega/docker-ch/output/binary/clickhouse\r\n26. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n27. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n```\r\n**Additional context**\r\n**NOTE** User can use NOT for Int column in where statement, but expression without NOT is not allowed. Also additional NOT for correct statement leads to failure.\r\n\r\n``` sql\r\nSELECT t0.c1\r\nFROM t0\r\nWHERE NOT -1524532316\r\n\r\nOk.\r\n\r\nSELECT t0.c1\r\nFROM t0\r\nWHERE -1524532316\r\n\r\nReceived exception from server (version 20.5.1):\r\nCode: 59. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type Int32 of column for constant filter. Must be UInt8 or Nullable(UInt8)..\r\n\r\nSELECT t0.c1 FROM t0 WHERE NOT NOT (-1524532316)\r\n\r\nSELECT t0.c1\r\nFROM t0\r\nWHERE -1524532316\r\n\r\nReceived exception from server (version 20.5.1):\r\nCode: 59. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type Int32 of column for constant filter. Must be UInt8 or Nullable(UInt8)..\r\n\r\n```\r\n\r\nFound by SQLancer TLPWhere test run.\n",
  "hints_text": "",
  "created_at": "2020-07-10T06:31:39Z",
  "modified_files": [
    "src/Storages/MergeTree/KeyCondition.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01386_negative_float_constant_key_condition.reference",
    "b/tests/queries/0_stateless/01386_negative_float_constant_key_condition.sql"
  ]
}