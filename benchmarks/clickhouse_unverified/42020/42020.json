{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 42020,
  "instance_id": "ClickHouse__ClickHouse-42020",
  "issue_numbers": [
    "42012"
  ],
  "base_commit": "a2cf5a650e93df937130bbf7083e1641cb513bd4",
  "patch": "diff --git a/src/AggregateFunctions/AggregateFunctionRankCorrelation.h b/src/AggregateFunctions/AggregateFunctionRankCorrelation.h\nindex 670dd5948f7e..4a81c6cda824 100644\n--- a/src/AggregateFunctions/AggregateFunctionRankCorrelation.h\n+++ b/src/AggregateFunctions/AggregateFunctionRankCorrelation.h\n@@ -32,7 +32,7 @@ struct RankCorrelationData : public StatisticalSample<Float64, Float64>\n         std::tie(ranks_y, std::ignore) = computeRanksAndTieCorrection(this->y);\n \n         /// Sizes can be non-equal due to skipped NaNs.\n-        const auto size = std::min(this->size_x, this->size_y);\n+        const Float64 size = static_cast<Float64>(std::min(this->size_x, this->size_y));\n \n         /// Count d^2 sum\n         Float64 answer = 0;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02347_rank_corr_size_overflow.reference b/tests/queries/0_stateless/02347_rank_corr_size_overflow.reference\nnew file mode 100644\nindex 000000000000..3a2e3f4984a0\n--- /dev/null\n+++ b/tests/queries/0_stateless/02347_rank_corr_size_overflow.reference\n@@ -0,0 +1,1 @@\n+-1\ndiff --git a/tests/queries/0_stateless/02347_rank_corr_size_overflow.sql b/tests/queries/0_stateless/02347_rank_corr_size_overflow.sql\nnew file mode 100644\nindex 000000000000..3ca1ced8dd5e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02347_rank_corr_size_overflow.sql\n@@ -0,0 +1,1 @@\n+SELECT round(rankCorr(number, -number)) FROM numbers(5000000);\n",
  "problem_statement": "rankCorr wrong result\nrankCorr returns huge number (-17.543489999420327 for my case). It should be between -1 and 1.\r\nclickhouse version: 22.8.5.29\r\n\r\ntest data are located at (oneDrive share, 150M):\r\nhttps://1drv.ms/u/s!AuNxjqg2JayilU2PtuLTicBa662Z?e=ofy3ZG\r\n\r\nsimply create a table, import the csv, and then select the rankCorr to reproduce the bug\r\n```\r\ncreate table yg.testData(a Float32,b Float32 ) engine=MergeTree order by a\r\n```\r\n```\r\nselect rankCorr(a,b) from yg.testData\r\n```\r\n\r\nFor reference, I also used pandas to calculate the rankCorr, the result is -0.018601.\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2022-10-03T11:57:20Z",
  "modified_files": [
    "src/AggregateFunctions/AggregateFunctionRankCorrelation.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02347_rank_corr_size_overflow.reference",
    "b/tests/queries/0_stateless/02347_rank_corr_size_overflow.sql"
  ]
}