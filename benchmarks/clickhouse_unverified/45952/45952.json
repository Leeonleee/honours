{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 45952,
  "instance_id": "ClickHouse__ClickHouse-45952",
  "issue_numbers": [
    "45894"
  ],
  "base_commit": "108d1c3442d547d2b61caa121651b70531c0d05c",
  "patch": "diff --git a/src/Functions/tupleElement.cpp b/src/Functions/tupleElement.cpp\nindex 829262de30a7..879b6feed405 100644\n--- a/src/Functions/tupleElement.cpp\n+++ b/src/Functions/tupleElement.cpp\n@@ -56,10 +56,9 @@ class FunctionTupleElement : public IFunction\n         return true;\n     }\n \n-    ColumnNumbers getArgumentsThatAreAlwaysConstant() const override\n-    {\n-        return {1};\n-    }\n+    ColumnNumbers getArgumentsThatAreAlwaysConstant() const override { return {1}; }\n+\n+    bool useDefaultImplementationForNulls() const override { return false; }\n \n     bool isSuitableForShortCircuitArgumentsExecution(const DataTypesWithConstInfo & /*arguments*/) const override { return false; }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01710_minmax_count_projection.sql b/tests/queries/0_stateless/01710_minmax_count_projection.sql\nindex f01e59153934..f76454141870 100644\n--- a/tests/queries/0_stateless/01710_minmax_count_projection.sql\n+++ b/tests/queries/0_stateless/01710_minmax_count_projection.sql\n@@ -58,7 +58,7 @@ select min(dt), max(dt), count(toDate(dt) >= '2021-10-25') from d where toDate(d\n select count() from d group by toDate(dt);\n \n -- fuzz crash\n-SELECT min(dt), count(ignore(ignore(ignore(tupleElement(_partition_value, NULL) = NULL), NULL, NULL, NULL), 0, '10485.76', NULL)), max(dt), count(toDate(dt) >= '2021-10-25') FROM d WHERE toDate(dt) >= '2021-10-25';\n+SELECT min(dt), count(ignore(ignore(ignore(tupleElement(_partition_value, 'xxxx', NULL) = NULL), NULL, NULL, NULL), 0, '10485.76', NULL)), max(dt), count(toDate(dt) >= '2021-10-25') FROM d WHERE toDate(dt) >= '2021-10-25';\n \n -- fuzz crash\n SELECT pointInEllipses(min(j), NULL), max(dt), count('0.0000000007') FROM d WHERE toDate(dt) >= '2021-10-25';\ndiff --git a/tests/queries/0_stateless/02541_tuple_element_with_null.reference b/tests/queries/0_stateless/02541_tuple_element_with_null.reference\nnew file mode 100644\nindex 000000000000..7afa62485767\n--- /dev/null\n+++ b/tests/queries/0_stateless/02541_tuple_element_with_null.reference\n@@ -0,0 +1,2 @@\n+1\t1\t2\t2\n+\\N\t\\N\t3\t3\ndiff --git a/tests/queries/0_stateless/02541_tuple_element_with_null.sql b/tests/queries/0_stateless/02541_tuple_element_with_null.sql\nnew file mode 100644\nindex 000000000000..d2062b60d49b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02541_tuple_element_with_null.sql\n@@ -0,0 +1,19 @@\n+DROP TABLE IF EXISTS test_tuple_element;\n+CREATE TABLE test_tuple_element\n+(\n+    tuple Tuple(k1 Nullable(UInt64), k2 UInt64)\n+)\n+ENGINE = MergeTree\n+ORDER BY tuple()\n+SETTINGS index_granularity = 8192;\n+\n+INSERT INTO test_tuple_element VALUES (tuple(1,2)), (tuple(NULL, 3));\n+\n+SELECT \n+    tupleElement(tuple, 'k1', 0) fine_k1_with_0,\n+    tupleElement(tuple, 'k1', NULL) k1_with_null,\n+    tupleElement(tuple, 'k2', 0) k2_with_0,\n+    tupleElement(tuple, 'k2', NULL) k2_with_null\n+FROM test_tuple_element;\n+\n+DROP TABLE test_tuple_element;\n",
  "problem_statement": "tupleElement with default NULL value returns incorrect result\n**Describe the unexpected behaviour**\r\n\r\nIf the default value for the `tupleElement` function is `NULL` function always return `NULL` even if the key exists.\r\n\r\n**How to reproduce**\r\n\r\n```\r\nCREATE TABLE default.test_tuple_element\r\n(\r\n    tuple Tuple(k1 Nullable(UInt64), k2 UInt64)\r\n)\r\nENGINE = MergeTree\r\nORDER BY tuple()\r\nSETTINGS index_granularity = 8192;\r\n\r\nINSERT INTO test_tuple_element VALUES (tuple(1,2)), (tuple(NULL, 3));\r\n\r\nSELECT \r\n    tupleElement(tuple, 'k1', 0) fine_k1_with_0,\r\n\ttupleElement(tuple, 'k1', NULL) wrong_k1_with_null,\r\n\ttupleElement(tuple, 'k2', 0) fine_k2_with_0,\r\n\ttupleElement(tuple, 'k2', NULL) bad_k2_with_null\r\nFROM test_tuple_element;\r\n\r\n\r\n\u250c\u2500fine_k1_with_0\u2500\u252c\u2500wrong_k1_with_null\u2500\u252c\u2500fine_k2_with_0\u2500\u252c\u2500bad_k2_with_null\u2500\u2510\r\n\u2502              1 \u2502 \u1d3a\u1d41\u1d38\u1d38               \u2502              2 \u2502 \u1d3a\u1d41\u1d38\u1d38             \u2502\r\n\u2502           \u1d3a\u1d41\u1d38\u1d38 \u2502 \u1d3a\u1d41\u1d38\u1d38               \u2502              3 \u2502 \u1d3a\u1d41\u1d38\u1d38             \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n**Expected behavior**\r\n`tupleElement` with defaults should return a tuple element value even when a default value is `NULL`.\r\n\r\nTested on 23.1.2.9.\n",
  "hints_text": "",
  "created_at": "2023-02-02T08:51:08Z",
  "modified_files": [
    "src/Functions/tupleElement.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01710_minmax_count_projection.sql",
    "b/tests/queries/0_stateless/02541_tuple_element_with_null.reference",
    "b/tests/queries/0_stateless/02541_tuple_element_with_null.sql"
  ]
}