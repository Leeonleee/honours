{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12060,
  "instance_id": "ClickHouse__ClickHouse-12060",
  "issue_numbers": [
    "12053"
  ],
  "base_commit": "f4869eca41d0c737fd507216a20230cb3d208850",
  "patch": "diff --git a/src/DataTypes/DataTypeNullable.h b/src/DataTypes/DataTypeNullable.h\nindex 1766b399c2a8..22d403da6c43 100644\n--- a/src/DataTypes/DataTypeNullable.h\n+++ b/src/DataTypes/DataTypeNullable.h\n@@ -90,7 +90,7 @@ class DataTypeNullable final : public IDataType\n     bool canBeComparedWithCollation() const override { return nested_data_type->canBeComparedWithCollation(); }\n     bool canBeUsedAsVersion() const override { return false; }\n     bool isSummable() const override { return nested_data_type->isSummable(); }\n-    bool canBeUsedInBooleanContext() const override { return nested_data_type->canBeUsedInBooleanContext(); }\n+    bool canBeUsedInBooleanContext() const override { return nested_data_type->canBeUsedInBooleanContext() || onlyNull(); }\n     bool haveMaximumSizeOfValue() const override { return nested_data_type->haveMaximumSizeOfValue(); }\n     size_t getMaximumSizeOfValueInMemory() const override { return 1 + nested_data_type->getMaximumSizeOfValueInMemory(); }\n     bool isNullable() const override { return true; }\ndiff --git a/src/Interpreters/ExpressionAnalyzer.cpp b/src/Interpreters/ExpressionAnalyzer.cpp\nindex 44aa70b16978..bfb7abe8fe52 100644\n--- a/src/Interpreters/ExpressionAnalyzer.cpp\n+++ b/src/Interpreters/ExpressionAnalyzer.cpp\n@@ -78,6 +78,7 @@ namespace ErrorCodes\n     extern const int ILLEGAL_PREWHERE;\n     extern const int LOGICAL_ERROR;\n     extern const int ILLEGAL_TYPE_OF_ARGUMENT;\n+    extern const int ILLEGAL_TYPE_OF_COLUMN_FOR_FILTER;\n }\n \n namespace\n@@ -636,6 +637,11 @@ bool SelectQueryExpressionAnalyzer::appendPrewhere(\n     step.required_output.push_back(prewhere_column_name);\n     step.can_remove_required_output.push_back(true);\n \n+    auto filter_type = step.actions->getSampleBlock().getByName(prewhere_column_name).type;\n+    if (!filter_type->canBeUsedInBooleanContext())\n+        throw Exception(\"Invalid type for filter in PREWHERE: \" + filter_type->getName(),\n+                        ErrorCodes::ILLEGAL_TYPE_OF_COLUMN_FOR_FILTER);\n+\n     {\n         /// Remove unused source_columns from prewhere actions.\n         auto tmp_actions = std::make_shared<ExpressionActions>(sourceColumns(), context);\n@@ -716,11 +722,17 @@ bool SelectQueryExpressionAnalyzer::appendWhere(ExpressionActionsChain & chain,\n \n     ExpressionActionsChain::Step & step = chain.lastStep(sourceColumns());\n \n-    step.required_output.push_back(select_query->where()->getColumnName());\n+    auto where_column_name = select_query->where()->getColumnName();\n+    step.required_output.push_back(where_column_name);\n     step.can_remove_required_output = {true};\n \n     getRootActions(select_query->where(), only_types, step.actions);\n \n+    auto filter_type = step.actions->getSampleBlock().getByName(where_column_name).type;\n+    if (!filter_type->canBeUsedInBooleanContext())\n+        throw Exception(\"Invalid type for filter in WHERE: \" + filter_type->getName(),\n+                        ErrorCodes::ILLEGAL_TYPE_OF_COLUMN_FOR_FILTER);\n+\n     return true;\n }\n \ndiff --git a/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp b/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp\nindex 0e2dca76f58d..8cb24bb0cd6b 100644\n--- a/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp\n+++ b/src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp\n@@ -6,6 +6,7 @@\n #include <Columns/FilterDescription.h>\n #include <Common/typeid_cast.h>\n #include <DataTypes/DataTypeNothing.h>\n+#include <DataTypes/DataTypeNullable.h>\n \n \n namespace DB\n@@ -316,6 +317,12 @@ void MergeTreeBaseSelectProcessor::executePrewhereActions(Block & block, const P\n             prewhere_info->alias_actions->execute(block);\n \n         prewhere_info->prewhere_actions->execute(block);\n+        auto & prewhere_column = block.getByName(prewhere_info->prewhere_column_name);\n+\n+        if (!prewhere_column.type->canBeUsedInBooleanContext())\n+            throw Exception(\"Invalid type for filter in PREWHERE: \" + prewhere_column.type->getName(),\n+                            ErrorCodes::LOGICAL_ERROR);\n+\n         if (prewhere_info->remove_prewhere_column)\n             block.erase(prewhere_info->prewhere_column_name);\n         else\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01356_wrong_filter-type_bug.reference b/tests/queries/0_stateless/01356_wrong_filter-type_bug.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/01356_wrong_filter-type_bug.sql b/tests/queries/0_stateless/01356_wrong_filter-type_bug.sql\nnew file mode 100644\nindex 000000000000..b3f48967ba2c\n--- /dev/null\n+++ b/tests/queries/0_stateless/01356_wrong_filter-type_bug.sql\n@@ -0,0 +1,9 @@\n+drop table if exists t0;\n+\n+CREATE TABLE t0 (`c0` String, `c1` Int32 CODEC(NONE), `c2` Int32) ENGINE = MergeTree() ORDER BY tuple();\n+insert into t0 values ('a', 1, 2);\n+\n+SELECT t0.c2, t0.c1, t0.c0 FROM t0 PREWHERE t0.c0 ORDER BY ((t0.c2)>=(t0.c1)), (((- (((t0.c0)>(t0.c0))))) IS NULL) FORMAT TabSeparatedWithNamesAndTypes; -- {serverError 59}\n+SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE t0.c0 ORDER BY ((t0.c2)>=(t0.c1)), (((- (((t0.c0)>(t0.c0))))) IS NULL) FORMAT TabSeparatedWithNamesAndTypes settings optimize_move_to_prewhere=0; -- {serverError 59}\n+\n+drop table if exists t0;\n",
  "problem_statement": "Segmentation fault Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:261: DB::MergeTreeBaseSelectProcessor::MergeTreeBaseSelectProcessor\nVersion `commit ffcfcfa257faa3d07a83fb74a130cb4aef550d39 (origin/master, origin/HEAD)` (20.6)\r\nTSAN build \r\n\r\n\r\n``` sql\r\nCREATE TABLE database0TLPWhere.t0\r\n(\r\n    `c0` String,\r\n    `c1` Int32 CODEC(NONE),\r\n    `c2` Int32\r\n)\r\nENGINE = MergeTree()\r\nORDER BY tuple()\r\nSETTINGS index_granularity = 8192;\r\n\r\nSELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE t0.c0 ORDER BY ((t0.c2)>=(t0.c1)), (((- (((t0.c0)>(t0.c0))))) IS NULL) FORMAT TabSeparatedWithNamesAndTypes;\r\n```\r\n\r\n**Error message and/or stacktrace**\r\n```\r\n2020.06.30 13:27:32.362699 [ 22170 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.06.30 13:27:32.363203 [ 22170 ] {} <Fatal> BaseDaemon: (version 20.6.1.1, build id: 11A9520D42580F72) (from thread 4408) (query_id: 0fae16a3-7cec-49f4-9230-47ab5e335302) Received signal Segmentation fault (11)\r\n2020.06.30 13:27:32.363531 [ 22170 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.\r\n2020.06.30 13:27:32.363930 [ 22170 ] {} <Fatal> BaseDaemon: Stack trace: 0x9d4510f 0x9ce4611 0xde95025 0x10e45d37 0x11af9606 0x11af681a 0x11b1b08a 0x11a7b1af 0x11a6f5a9 0x11a6707b 0x11826056 0x11ee5899 0x11280d8b 0x11270942 0x112690fa 0x112688b6 0x114798c9 0x11479e44 0x115d401d 0x115d6f91 0x11bd33fc 0x11bd669c 0x14945802 0x1497ee23 0x1497f667 0x14ae84d7 0x14ae6c10\r\n2020.06.30 13:27:32.409038 [ 22170 ] {} <Fatal> BaseDaemon: 5. __tsan::MemoryAccessRange(__tsan::ThreadState*, unsigned long, unsigned long, unsigned long, bool) @ 0x9d4510f in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.456086 [ 22170 ] {} <Fatal> BaseDaemon: 6. __interceptor_memcpy @ 0x9ce4611 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.473062 [ 22170 ] {} <Fatal> BaseDaemon: 7. /build/obj-x86_64-linux-gnu/../src/Common/PODArray.h:384: DB::ColumnString::insert(DB::Field const&) @ 0xde95025 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.495834 [ 22170 ] {} <Fatal> BaseDaemon: 8. /build/obj-x86_64-linux-gnu/../src/Common/COW.h:285: DB::IDataType::createColumnConst(unsigned long, DB::Field const&) const @ 0x10e45d37 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.525273 [ 22170 ] {} <Fatal> BaseDaemon: 9. /build/obj-x86_64-linux-gnu/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:200: DB::MergeTreeBaseSelectProcessor::executePrewhereActions(DB::Block&, std::__1::shared_ptr<DB::PrewhereInfo> const&) @ 0x11af9606 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.553291 [ 22170 ] {} <Fatal> BaseDaemon: 10. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:261: DB::MergeTreeBaseSelectProcessor::MergeTreeBaseSelectProcessor(DB::Block, DB::MergeTreeData const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PrewhereInfo> const&, unsigned long, unsigned long, unsigned long, DB::MergeTreeReaderSettings const&, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x11af681a in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.582240 [ 22170 ] {} <Fatal> BaseDaemon: 11. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeThreadSelectBlockInputProcessor.cpp:25: DB::MergeTreeThreadSelectBlockInputProcessor::MergeTreeThreadSelectBlockInputProcessor(unsigned long, std::__1::shared_ptr<DB::MergeTreeReadPool> const&, unsigned long, unsigned long, unsigned long, unsigned long, DB::MergeTreeData const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, std::__1::shared_ptr<DB::PrewhereInfo> const&, DB::MergeTreeReaderSettings const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x11b1b08a in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.616398 [ 22170 ] {} <Fatal> BaseDaemon: 12. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2214: DB::MergeTreeDataSelectExecutor::spreadMarkRangesAmongStreams(std::__1::vector<DB::RangesInDataPart, std::__1::allocator<DB::RangesInDataPart> >&&, unsigned long, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, unsigned long, bool, DB::SelectQueryInfo const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::Settings const&, DB::MergeTreeReaderSettings const&) const @ 0x11a7b1af in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.646176 [ 22170 ] {} <Fatal> BaseDaemon: 13. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp:673: DB::MergeTreeDataSelectExecutor::readFromParts(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const @ 0x11a6f5a9 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.674059 [ 22170 ] {} <Fatal> BaseDaemon: 14. /build/obj-x86_64-linux-gnu/../src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp:160: DB::MergeTreeDataSelectExecutor::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const @ 0x11a6707b in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.702075 [ 22170 ] {} <Fatal> BaseDaemon: 15. /build/obj-x86_64-linux-gnu/../src/Storages/StorageMergeTree.cpp:187: DB::StorageMergeTree::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0x11826056 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.734303 [ 22170 ] {} <Fatal> BaseDaemon: 16. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:662: DB::ReadFromStorageStep::ReadFromStorageStep(std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, DB::SelectQueryOptions, std::__1::shared_ptr<DB::IStorage>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context>, DB::QueryProcessingStage::Enum, unsigned long, unsigned long) @ 0x11ee5899 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.765262 [ 22170 ] {} <Fatal> BaseDaemon: 17. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:0: std::__1::__unique_if<DB::ReadFromStorageStep>::__unique_single std::__1::make_unique<DB::ReadFromStorageStep, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, DB::SelectQueryOptions&, std::__1::shared_ptr<DB::IStorage>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context>&, DB::QueryProcessingStage::Enum&, unsigned long&, unsigned long&>(std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, DB::SelectQueryOptions&, std::__1::shared_ptr<DB::IStorage>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, DB::SelectQueryInfo&, std::__1::shared_ptr<DB::Context>&, DB::QueryProcessingStage::Enum&, unsigned long&, unsigned long&) @ 0x11280d8b in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.794406 [ 22170 ] {} <Fatal> BaseDaemon: 18. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:1359: DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x11270942 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.820406 [ 22170 ] {} <Fatal> BaseDaemon: 19. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x112690fa in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.845768 [ 22170 ] {} <Fatal> BaseDaemon: 20. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/optional:224: DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x112688b6 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.870539 [ 22170 ] {} <Fatal> BaseDaemon: 21. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:0: DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x114798c9 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.897549 [ 22170 ] {} <Fatal> BaseDaemon: 22. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:0: DB::InterpreterSelectWithUnionQuery::execute() @ 0x11479e44 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.923085 [ 22170 ] {} <Fatal> BaseDaemon: 23. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x115d401d in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.949753 [ 22170 ] {} <Fatal> BaseDaemon: 24. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:4081: DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0x115d6f91 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:32.981190 [ 22170 ] {} <Fatal> BaseDaemon: 25. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1825: DB::HTTPHandler::processQuery(DB::Context&, Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x11bd33fc in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:33.012796 [ 22170 ] {} <Fatal> BaseDaemon: 26. /build/obj-x86_64-linux-gnu/../src/Server/HTTPHandler.cpp:0: DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) @ 0x11bd669c in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:33.046100 [ 22170 ] {} <Fatal> BaseDaemon: 27. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/AutoPtr.h:215: Poco::Net::HTTPServerConnection::run() @ 0x14945802 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:33.080664 [ 22170 ] {} <Fatal> BaseDaemon: 28. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1497ee23 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:33.116433 [ 22170 ] {} <Fatal> BaseDaemon: 29. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:0: Poco::Net::TCPServerDispatcher::run() @ 0x1497f667 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:33.151324 [ 22170 ] {} <Fatal> BaseDaemon: 30. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x14ae84d7 in /home/qoega/docker-ch/output/binary/clickhouse\r\n2020.06.30 13:27:33.186981 [ 22170 ] {} <Fatal> BaseDaemon: 31. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x14ae6c10 in /home/qoega/docker-ch/output/binary/clickhouse\r\n```\r\n\r\nData from t0 if it matters\r\n``` sql\r\nSELECT *\r\nFROM t0\r\nFORMAT TSV\r\n\r\n1628791291\t1628791291\t24554525\r\n0t\u9dde\\nh/4H\\nI8Gdi)\u38b6\u00f6CQ\t227023588\t1101163194\r\n[\u1ae4+\t12549546\t0\r\n\u7ed25jBp2\t0\t0\r\n,\\'w\t0\t0\r\n\u7daa\t1101163194\t227023588\r\n0t\u9dde\\nh/4h\\ni8gdi)\u38b6\u00f6cq\t1381105900\t253205982\r\nQ\\\\\u1454s3jJ.(L~!B5\u39b2?\u38b6PUn5wvGk!Pv\t922596816\t-1829796899\r\n\t-1687570075\t-896500402\r\n\t1641755397\t0\r\n\t12549546\t-1691582051\r\nyyim}\\'vJTyg\u00df?R~+\u1baa\u00f6v}/zUy\u6aba\t0\t-26152369\r\n```\n",
  "hints_text": "",
  "created_at": "2020-06-30T15:14:40Z",
  "modified_files": [
    "src/DataTypes/DataTypeNullable.h",
    "src/Interpreters/ExpressionAnalyzer.cpp",
    "src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01356_wrong_filter-type_bug.sql"
  ]
}