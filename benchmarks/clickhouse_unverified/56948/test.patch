diff --git a/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper_long.sql b/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper_long.sql
index 406507089c39..ecb6018a3854 100644
--- a/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper_long.sql
+++ b/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper_long.sql
@@ -52,6 +52,4 @@ ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN key2 TO renamed_key2
 
 ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN key3 TO renamed_key3; --{serverError 524}
 
-ALTER TABLE table_for_rename_with_primary_key RENAME COLUMN value1 TO renamed_value1; --{serverError 524}
-
 DROP TABLE IF EXISTS table_for_rename_with_primary_key;
diff --git a/tests/queries/0_stateless/02920_alter_column_of_projections.reference b/tests/queries/0_stateless/02920_alter_column_of_projections.reference
new file mode 100644
index 000000000000..c18b4e9b0829
--- /dev/null
+++ b/tests/queries/0_stateless/02920_alter_column_of_projections.reference
@@ -0,0 +1,8 @@
+1
+1
+1
+1
+1
+1
+1
+1
diff --git a/tests/queries/0_stateless/02920_alter_column_of_projections.sql b/tests/queries/0_stateless/02920_alter_column_of_projections.sql
new file mode 100644
index 000000000000..ab7b79783d77
--- /dev/null
+++ b/tests/queries/0_stateless/02920_alter_column_of_projections.sql
@@ -0,0 +1,33 @@
+DROP TABLE IF EXISTS t;
+
+CREATE TABLE t (uid Int16, name String, age Nullable(Int8), i Int16, j Int16, projection p1 (select name, age, uniq(i), count(j) group by name, age)) ENGINE=MergeTree order by uid settings index_granularity = 1;
+
+INSERT INTO t VALUES (1231, 'John', 11, 1, 1), (6666, 'Ksenia', 1, 2, 2), (8888, 'Alice', 1, 3, 3), (6667, 'Ksenia', null, 4, 4);
+
+-- Cannot ALTER, which breaks key column of projection.
+ALTER TABLE t MODIFY COLUMN age Nullable(Int32); -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }
+
+-- Cannot ALTER, uniq(Int16) is not compatible with uniq(Int32).
+ALTER TABLE t MODIFY COLUMN i Int32; -- { serverError CANNOT_CONVERT_TYPE }
+
+SYSTEM STOP MERGES t;
+
+SET alter_sync = 0;
+
+-- Can ALTER, count(Int16) is compatible with count(Int32).
+ALTER TABLE t MODIFY COLUMN j Int32;
+
+-- Projection query works without mutation applied.
+SELECT count(j) FROM t GROUP BY name, age;
+
+SYSTEM START MERGES t;
+
+SET alter_sync = 1;
+
+-- Another ALTER to wait for.
+ALTER TABLE t MODIFY COLUMN j Int64 SETTINGS mutations_sync = 2;
+
+-- Projection query works with mutation applied.
+SELECT count(j) FROM t GROUP BY name, age;
+
+DROP TABLE t;
diff --git a/tests/queries/0_stateless/02920_rename_column_of_skip_indices.reference b/tests/queries/0_stateless/02920_rename_column_of_skip_indices.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/02920_rename_column_of_skip_indices.sql b/tests/queries/0_stateless/02920_rename_column_of_skip_indices.sql
new file mode 100644
index 000000000000..cb48d8b5043b
--- /dev/null
+++ b/tests/queries/0_stateless/02920_rename_column_of_skip_indices.sql
@@ -0,0 +1,31 @@
+DROP TABLE IF EXISTS t;
+
+CREATE TABLE t
+(
+  key1 UInt64,
+  value1 String,
+  value2 String,
+  INDEX idx (value1) TYPE set(10) GRANULARITY 1
+)
+ENGINE MergeTree ORDER BY key1 SETTINGS index_granularity = 1;
+
+INSERT INTO t SELECT toDate('2019-10-01') + number % 3, toString(number), toString(number) from numbers(9);
+
+SYSTEM STOP MERGES t;
+
+SET alter_sync = 0;
+
+ALTER TABLE t RENAME COLUMN value1 TO value11;
+
+-- Index works without mutation applied.
+SELECT * FROM t WHERE value11 = '000' SETTINGS max_rows_to_read = 0;
+
+SYSTEM START MERGES t;
+
+-- Another ALTER to wait for.
+ALTER TABLE t RENAME COLUMN value11 TO value12 SETTINGS mutations_sync = 2;
+
+-- Index works with mutation applied.
+SELECT * FROM t WHERE value12 = '000' SETTINGS max_rows_to_read = 0;
+
+DROP TABLE t;
