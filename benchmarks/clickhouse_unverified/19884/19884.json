{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 19884,
  "instance_id": "ClickHouse__ClickHouse-19884",
  "issue_numbers": [
    "19757"
  ],
  "base_commit": "342baa422325283f63bb6f5a771cf59d93c768ec",
  "patch": "diff --git a/src/Interpreters/Set.cpp b/src/Interpreters/Set.cpp\nindex faec94de9ac8..b150eabda65a 100644\n--- a/src/Interpreters/Set.cpp\n+++ b/src/Interpreters/Set.cpp\n@@ -140,7 +140,16 @@ void Set::setHeader(const Block & header)\n     ConstNullMapPtr null_map{};\n     ColumnPtr null_map_holder;\n     if (!transform_null_in)\n+    {\n+        /// We convert nullable columns to non nullable we also need to update nullable types\n+        for (size_t i = 0; i < set_elements_types.size(); ++i)\n+        {\n+            data_types[i] = removeNullable(data_types[i]);\n+            set_elements_types[i] = removeNullable(set_elements_types[i]);\n+        }\n+\n         extractNestedColumnsAndNullMap(key_columns, null_map);\n+    }\n \n     if (fill_set_elements)\n     {\n@@ -182,7 +191,7 @@ bool Set::insertFromBlock(const Block & block)\n     ConstNullMapPtr null_map{};\n     ColumnPtr null_map_holder;\n     if (!transform_null_in)\n-         null_map_holder = extractNestedColumnsAndNullMap(key_columns, null_map);\n+        null_map_holder = extractNestedColumnsAndNullMap(key_columns, null_map);\n \n     /// Filter to extract distinct values from the block.\n     ColumnUInt8::MutablePtr filter;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01681_bloom_filter_nullable_column.reference b/tests/queries/0_stateless/01681_bloom_filter_nullable_column.reference\nnew file mode 100644\nindex 000000000000..2616e6c2a5cb\n--- /dev/null\n+++ b/tests/queries/0_stateless/01681_bloom_filter_nullable_column.reference\n@@ -0,0 +1,10 @@\n+NullableTuple with transform_null_in=0\n+NullableTuple with transform_null_in=1\n+NullableColumnFromCast with transform_null_in=0\n+1\ttest\n+NullableColumnFromCast with transform_null_in=1\n+1\ttest\n+NullableColumnFromTable with transform_null_in=0\n+1\ttest\n+NullableColumnFromTable with transform_null_in=1\n+1\ttest\ndiff --git a/tests/queries/0_stateless/01681_bloom_filter_nullable_column.sql b/tests/queries/0_stateless/01681_bloom_filter_nullable_column.sql\nnew file mode 100644\nindex 000000000000..4af1f74fca61\n--- /dev/null\n+++ b/tests/queries/0_stateless/01681_bloom_filter_nullable_column.sql\n@@ -0,0 +1,51 @@\n+DROP TABLE IF EXISTS bloom_filter_nullable_index;\n+CREATE TABLE bloom_filter_nullable_index\n+    (\n+        order_key UInt64,\n+        str Nullable(String),\n+\n+        INDEX idx (str) TYPE bloom_filter GRANULARITY 1\n+    )\n+    ENGINE = MergeTree() \n+    ORDER BY order_key SETTINGS index_granularity = 6;\n+\n+INSERT INTO bloom_filter_nullable_index VALUES (1, 'test');\n+INSERT INTO bloom_filter_nullable_index VALUES (2, 'test2');\n+\n+SELECT 'NullableTuple with transform_null_in=0';\n+SELECT * FROM bloom_filter_nullable_index WHERE str IN\n+    (SELECT '1048576', str FROM bloom_filter_nullable_index) SETTINGS transform_null_in = 0;\n+SELECT * FROM bloom_filter_nullable_index WHERE str IN\n+    (SELECT '1048576', str FROM bloom_filter_nullable_index) SETTINGS transform_null_in = 0;\n+\n+SELECT 'NullableTuple with transform_null_in=1';\n+\n+SELECT * FROM bloom_filter_nullable_index WHERE str IN\n+    (SELECT '1048576', str FROM bloom_filter_nullable_index) SETTINGS transform_null_in = 1; -- { serverError 20 }\n+\n+SELECT * FROM bloom_filter_nullable_index WHERE str IN\n+    (SELECT '1048576', str FROM bloom_filter_nullable_index) SETTINGS transform_null_in = 1; -- { serverError 20 }\n+\n+\n+SELECT 'NullableColumnFromCast with transform_null_in=0';\n+SELECT * FROM bloom_filter_nullable_index WHERE str IN\n+    (SELECT cast('test', 'Nullable(String)')) SETTINGS transform_null_in = 0;\n+\n+SELECT 'NullableColumnFromCast with transform_null_in=1';\n+SELECT * FROM bloom_filter_nullable_index WHERE str IN\n+    (SELECT cast('test', 'Nullable(String)')) SETTINGS transform_null_in = 1;\n+\n+DROP TABLE IF EXISTS nullable_string_value;\n+CREATE TABLE nullable_string_value (value Nullable(String)) ENGINE=TinyLog;\n+INSERT INTO nullable_string_value VALUES ('test');\n+\n+SELECT 'NullableColumnFromTable with transform_null_in=0';\n+SELECT * FROM bloom_filter_nullable_index WHERE str IN\n+    (SELECT value FROM nullable_string_value) SETTINGS transform_null_in = 0;\n+\n+SELECT 'NullableColumnFromTable with transform_null_in=1';\n+SELECT * FROM bloom_filter_nullable_index WHERE str IN\n+    (SELECT value FROM nullable_string_value) SETTINGS transform_null_in = 1;\n+\n+DROP TABLE nullable_string_value; \n+DROP TABLE bloom_filter_nullable_index;\n",
  "problem_statement": "Bug in bloom filter index\n**Describe the bug**\r\n1. https://clickhouse-test-reports.s3.yandex.net/19736/68c542aec681bbf841f45fc879c1e97052449555/fuzzer_ubsan/server.log\r\n2. https://clickhouse-test-reports.s3.yandex.net/19736/68c542aec681bbf841f45fc879c1e97052449555/fuzzer_asan/server.log\r\n3. https://clickhouse-test-reports.s3.yandex.net/19736/68c542aec681bbf841f45fc879c1e97052449555/fuzzer_msan/server.log\r\n4. https://clickhouse-test-reports.s3.yandex.net/19736/342326978f2bb2fe5c108c2801cdbabaf407fa68/fuzzer_debug/server.log\r\n5. https://clickhouse-test-reports.s3.yandex.net/19736/342326978f2bb2fe5c108c2801cdbabaf407fa68/fuzzer_tsan/server.log\r\n\r\nCC @zhang2014 \n",
  "hints_text": "",
  "created_at": "2021-01-31T18:50:31Z",
  "modified_files": [
    "src/Interpreters/Set.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01681_bloom_filter_nullable_column.reference",
    "b/tests/queries/0_stateless/01681_bloom_filter_nullable_column.sql"
  ]
}