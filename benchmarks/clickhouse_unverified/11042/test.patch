diff --git a/tests/integration/test_ttl_move/test.py b/tests/integration/test_ttl_move/test.py
index ab348ea0cb1b..243268260d03 100644
--- a/tests/integration/test_ttl_move/test.py
+++ b/tests/integration/test_ttl_move/test.py
@@ -626,7 +626,7 @@ def test_materialize_ttl_in_partition(started_cluster, name, engine):
         node1.query("""
                 ALTER TABLE {name}
                     MODIFY TTL
-                    d1 TO DISK 'external'
+                    d1 TO DISK 'external' SETTINGS materialize_ttl_after_modify = 0
             """.format(name=name))
 
         time.sleep(0.5)
diff --git a/tests/integration/test_ttl_replicated/test.py b/tests/integration/test_ttl_replicated/test.py
index 78ff703f0ecd..29169ad3c0e7 100644
--- a/tests/integration/test_ttl_replicated/test.py
+++ b/tests/integration/test_ttl_replicated/test.py
@@ -109,6 +109,50 @@ def test_ttl_table(started_cluster, delete_suffix):
     assert TSV(node1.query("SELECT * FROM test_ttl")) == TSV("")
     assert TSV(node2.query("SELECT * FROM test_ttl")) == TSV("")
 
+def test_modify_ttl(started_cluster):
+    drop_table([node1, node2], "test_ttl")
+    for node in [node1, node2]:
+        node.query(
+        '''
+            CREATE TABLE test_ttl(d DateTime, id UInt32)
+            ENGINE = ReplicatedMergeTree('/clickhouse/tables/test/test_ttl', '{replica}')
+            ORDER BY id
+        '''.format(replica=node.name))
+
+    node1.query("INSERT INTO test_ttl VALUES (now() - INTERVAL 5 HOUR, 1), (now() - INTERVAL 3 HOUR, 2), (now() - INTERVAL 1 HOUR, 3)")
+    node2.query("SYSTEM SYNC REPLICA test_ttl", timeout=20)
+
+    node1.query("ALTER TABLE test_ttl MODIFY TTL d + INTERVAL 4 HOUR SETTINGS mutations_sync = 2")
+    assert node2.query("SELECT id FROM test_ttl") == "2
3
"
+
+    node2.query("ALTER TABLE test_ttl MODIFY TTL d + INTERVAL 2 HOUR SETTINGS mutations_sync = 2")
+    assert node1.query("SELECT id FROM test_ttl") == "3
"
+
+    node1.query("ALTER TABLE test_ttl MODIFY TTL d + INTERVAL 30 MINUTE SETTINGS mutations_sync = 2")
+    assert node2.query("SELECT id FROM test_ttl") == ""
+
+def test_modify_column_ttl(started_cluster):
+    drop_table([node1, node2], "test_ttl")
+    for node in [node1, node2]:
+        node.query(
+        '''
+            CREATE TABLE test_ttl(d DateTime, id UInt32 DEFAULT 42)
+            ENGINE = ReplicatedMergeTree('/clickhouse/tables/test/test_ttl', '{replica}')
+            ORDER BY d
+        '''.format(replica=node.name))
+
+    node1.query("INSERT INTO test_ttl VALUES (now() - INTERVAL 5 HOUR, 1), (now() - INTERVAL 3 HOUR, 2), (now() - INTERVAL 1 HOUR, 3)")
+    node2.query("SYSTEM SYNC REPLICA test_ttl", timeout=20)
+
+    node1.query("ALTER TABLE test_ttl MODIFY COLUMN id UInt32 TTL d + INTERVAL 4 HOUR SETTINGS mutations_sync = 2")
+    assert node2.query("SELECT id FROM test_ttl") == "42
2
3
"
+
+    node1.query("ALTER TABLE test_ttl MODIFY COLUMN id UInt32 TTL d + INTERVAL 2 HOUR SETTINGS mutations_sync = 2")
+    assert node1.query("SELECT id FROM test_ttl") == "42
42
3
"
+
+    node1.query("ALTER TABLE test_ttl MODIFY COLUMN id UInt32 TTL d + INTERVAL 30 MINUTE SETTINGS mutations_sync = 2")
+    assert node2.query("SELECT id FROM test_ttl") == "42
42
42
"
+
 def test_ttl_double_delete_rule_returns_error(started_cluster):
     drop_table([node1, node2], "test_ttl")
     try:
diff --git a/tests/queries/0_stateless/01070_materialize_ttl.reference b/tests/queries/0_stateless/01070_materialize_ttl.reference
index b4a9947a521f..af1b3a4459b4 100644
--- a/tests/queries/0_stateless/01070_materialize_ttl.reference
+++ b/tests/queries/0_stateless/01070_materialize_ttl.reference
@@ -1,7 +1,15 @@
+2000-10-10	1
+2000-10-10	2
 2100-10-10	3
 2100-10-10	4
+2100-10-10	3
+2100-10-10	4
+1	a
+3	c
 1	a
+2	b
 3	c
+4	d
 1	a
 2	
 3	c
diff --git a/tests/queries/0_stateless/01070_materialize_ttl.sql b/tests/queries/0_stateless/01070_materialize_ttl.sql
index 6696fbc980ac..2521ae35edf7 100755
--- a/tests/queries/0_stateless/01070_materialize_ttl.sql
+++ b/tests/queries/0_stateless/01070_materialize_ttl.sql
@@ -6,9 +6,14 @@ insert into ttl values (toDateTime('2000-10-10 00:00:00'), 2);
 insert into ttl values (toDateTime('2100-10-10 00:00:00'), 3);
 insert into ttl values (toDateTime('2100-10-10 00:00:00'), 4);
 
+set materialize_ttl_after_modify = 0;
+
 alter table ttl materialize ttl; -- { serverError 80 }
 
 alter table ttl modify ttl d + interval 1 day;
+-- TTL should not be applied
+select * from ttl order by a;
+
 alter table ttl materialize ttl settings mutations_sync=2;
 select * from ttl order by a;
 
@@ -31,6 +36,9 @@ create table ttl (i Int, s String) engine = MergeTree order by i;
 insert into ttl values (1, 'a') (2, 'b') (3, 'c') (4, 'd');
 
 alter table ttl modify column s String ttl i % 2 = 0 ? today() - 10 : toDate('2100-01-01');
+-- TTL should not be applied
+select * from ttl order by i;
+
 alter table ttl materialize ttl settings mutations_sync=2;
 select * from ttl order by i;
 
diff --git a/tests/queries/0_stateless/01070_modify_ttl.reference b/tests/queries/0_stateless/01070_modify_ttl.reference
new file mode 100644
index 000000000000..d64c1a4edc22
--- /dev/null
+++ b/tests/queries/0_stateless/01070_modify_ttl.reference
@@ -0,0 +1,32 @@
+2100-10-10	3
+2100-10-10	4
+=============
+1	a
+3	c
+=============
+=============
+1	a
+2	
+3	c
+4	
+=============
+1	
+2	
+3	
+4	
+=============
+1	a
+2	b
+4	d
+=============
+1	
+2	
+4	d
+=============
+1	a	
+2	b	bb
+3		cc
+4	d	
+1
+=============
+0
diff --git a/tests/queries/0_stateless/01070_modify_ttl.sql b/tests/queries/0_stateless/01070_modify_ttl.sql
new file mode 100644
index 000000000000..4e842948afe2
--- /dev/null
+++ b/tests/queries/0_stateless/01070_modify_ttl.sql
@@ -0,0 +1,74 @@
+drop table if exists ttl;
+
+create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d);
+insert into ttl values (toDateTime('2000-10-10 00:00:00'), 1);
+insert into ttl values (toDateTime('2000-10-10 00:00:00'), 2);
+insert into ttl values (toDateTime('2100-10-10 00:00:00'), 3);
+insert into ttl values (toDateTime('2100-10-10 00:00:00'), 4);
+
+set mutations_sync = 2;
+
+alter table ttl modify ttl d + interval 1 day;
+select * from ttl order by a;
+select '=============';
+
+drop table if exists ttl;
+
+create table ttl (i Int, s String) engine = MergeTree order by i;
+insert into ttl values (1, 'a') (2, 'b') (3, 'c') (4, 'd');
+
+alter table ttl modify ttl i % 2 = 0 ? today() - 10 : toDate('2100-01-01');
+select * from ttl order by i;
+select '=============';
+
+alter table ttl modify ttl toDate('2000-01-01');
+select * from ttl order by i;
+select '=============';
+
+drop table if exists ttl;
+
+create table ttl (i Int, s String) engine = MergeTree order by i;
+insert into ttl values (1, 'a') (2, 'b') (3, 'c') (4, 'd');
+
+alter table ttl modify column s String ttl i % 2 = 0 ? today() - 10 : toDate('2100-01-01');
+select * from ttl order by i;
+select '=============';
+
+alter table ttl modify column s String ttl toDate('2000-01-01');
+select * from ttl order by i;
+select '=============';
+
+drop table if exists ttl;
+
+create table ttl (d Date, i Int, s String) engine = MergeTree order by i;
+insert into ttl values (toDate('2000-01-02'), 1, 'a') (toDate('2000-01-03'), 2, 'b') (toDate('2080-01-01'), 3, 'c') (toDate('2080-01-03'), 4, 'd');
+
+alter table ttl modify ttl i % 3 = 0 ? today() - 10 : toDate('2100-01-01');
+select i, s from ttl order by i;
+select '=============';
+
+alter table ttl modify column s String ttl d + interval 1 month;
+select i, s from ttl order by i;
+select '=============';
+
+drop table if exists ttl;
+
+create table ttl (i Int, s String, t String) engine = MergeTree order by i;
+insert into ttl values (1, 'a', 'aa') (2, 'b', 'bb') (3, 'c', 'cc') (4, 'd', 'dd');
+
+alter table ttl modify column s String ttl i % 3 = 0 ? today() - 10 : toDate('2100-01-01'),
+                modify column t String ttl i % 3 = 1 ? today() - 10 : toDate('2100-01-01');
+
+select i, s, t from ttl order by i;
+-- MATERIALIZE TTL ran only once
+select count() from system.mutations where table = 'ttl' and is_done;
+select '=============';
+
+drop table if exists ttl;
+
+-- Nothing changed, don't run mutation
+create table ttl (i Int, s String ttl toDate('2000-01-02')) engine = MergeTree order by i;
+alter table ttl modify column s String ttl toDate('2000-01-02');
+select count() from system.mutations where table = 'ttl' and is_done;
+
+drop table if exists ttl;
