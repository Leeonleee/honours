{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 66400,
  "instance_id": "ClickHouse__ClickHouse-66400",
  "issue_numbers": [
    "64930"
  ],
  "base_commit": "5bc0e1e7f1b3d5912fdfb0b6deeadf0c161ed426",
  "patch": "diff --git a/src/Analyzer/Resolve/QueryAnalyzer.cpp b/src/Analyzer/Resolve/QueryAnalyzer.cpp\nindex 637885609593..f68d327fcc31 100644\n--- a/src/Analyzer/Resolve/QueryAnalyzer.cpp\n+++ b/src/Analyzer/Resolve/QueryAnalyzer.cpp\n@@ -3832,6 +3832,10 @@ ProjectionNames QueryAnalyzer::resolveExpressionNode(\n                 node->convertToNullable();\n                 break;\n             }\n+\n+            /// Check parent scopes until find current query scope.\n+            if (scope_ptr->scope_node->getNodeType() == QueryTreeNodeType::QUERY)\n+                break;\n         }\n     }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.reference b/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.reference\nindex 63610604ddd9..858fbe988389 100644\n--- a/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.reference\n+++ b/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.reference\n@@ -264,3 +264,44 @@ SETTINGS group_by_use_nulls = 1, max_bytes_before_external_sort=10;\n 9\t\\N\t9\n \\N\t0\t20\n \\N\t1\t25\n+CREATE TABLE test\n+ENGINE = ReplacingMergeTree\n+PRIMARY KEY id\n+AS SELECT number AS id FROM numbers(100);\n+SELECT id\n+FROM test\n+GROUP BY id\n+    WITH CUBE\n+HAVING id IN (\n+    SELECT id\n+    FROM test\n+)\n+FORMAT `NUll`\n+SETTINGS allow_experimental_analyzer = 1, group_by_use_nulls = true;\n+SELECT id\n+FROM test\n+FINAL\n+GROUP BY id\n+    WITH CUBE\n+HAVING id IN (\n+    SELECT DISTINCT id\n+    FROM test\n+    FINAL\n+)\n+FORMAT `NUll`\n+SETTINGS allow_experimental_analyzer = 1, group_by_use_nulls = true;\n+SELECT id\n+FROM test\n+FINAL\n+GROUP BY\n+    GROUPING SETS ((id))\n+ORDER BY\n+    id IN (\n+        SELECT DISTINCT id\n+        FROM test\n+        FINAL\n+        LIMIT 4\n+    ) ASC\n+LIMIT 256 BY id\n+FORMAT `NUll`\n+SETTINGS allow_experimental_analyzer = 1, group_by_use_nulls=true;\ndiff --git a/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.sql b/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.sql\nindex a4d4f2f8bc94..4ae5df9629ad 100644\n--- a/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.sql\n+++ b/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.sql\n@@ -83,3 +83,48 @@ GROUP BY\n     )\n ORDER BY 1, tuple(val)\n SETTINGS group_by_use_nulls = 1, max_bytes_before_external_sort=10;\n+\n+CREATE TABLE test\n+ENGINE = ReplacingMergeTree\n+PRIMARY KEY id\n+AS SELECT number AS id FROM numbers(100);\n+\n+SELECT id\n+FROM test\n+GROUP BY id\n+    WITH CUBE\n+HAVING id IN (\n+    SELECT id\n+    FROM test\n+)\n+FORMAT `NUll`\n+SETTINGS allow_experimental_analyzer = 1, group_by_use_nulls = true;\n+\n+SELECT id\n+FROM test\n+FINAL\n+GROUP BY id\n+    WITH CUBE\n+HAVING id IN (\n+    SELECT DISTINCT id\n+    FROM test\n+    FINAL\n+)\n+FORMAT `NUll`\n+SETTINGS allow_experimental_analyzer = 1, group_by_use_nulls = true;\n+\n+SELECT id\n+FROM test\n+FINAL\n+GROUP BY\n+    GROUPING SETS ((id))\n+ORDER BY\n+    id IN (\n+        SELECT DISTINCT id\n+        FROM test\n+        FINAL\n+        LIMIT 4\n+    ) ASC\n+LIMIT 256 BY id\n+FORMAT `NUll`\n+SETTINGS allow_experimental_analyzer = 1, group_by_use_nulls=true;\n",
  "problem_statement": "[LOGICAL_ERROR] group_by_use_nulls: Column identifier <> is already registered\nhttps://s3.amazonaws.com/clickhouse-test-reports/64766/91dc50da4adede3cac06a6b5cf98d3136b75ba03/ast_fuzzer__asan_.html\r\n\r\n```\r\nCREATE TABLE test\r\nENGINE = ReplacingMergeTree\r\nPRIMARY KEY id\r\nAS SELECT number AS id FROM numbers(100);\r\n\r\nSELECT id\r\nFROM test\r\nFINAL\r\nGROUP BY\r\n    GROUPING SETS ((id))\r\nORDER BY\r\n    id IN (\r\n        SELECT DISTINCT id\r\n        FROM test\r\n        FINAL\r\n        LIMIT 4\r\n    ) ASC\r\nLIMIT 256 BY id\r\nSETTINGS allow_experimental_analyzer = 1, group_by_use_nulls=true;\r\n```\r\n\r\n```\r\nReceived exception from server (version 24.5.1):\r\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Column identifier __table1.id is already registered. (LOGICAL_ERROR)\r\n```\r\n\r\nWorks fine in 24.4. Fails in 24.5 and master.\n",
  "hints_text": "```\r\nSELECT id\r\nFROM test\r\nFINAL\r\nGROUP BY id\r\n    WITH CUBE\r\nHAVING id IN (\r\n    SELECT DISTINCT id\r\n    FROM test\r\n    FINAL\r\n)\r\nSETTINGS allow_experimental_analyzer = 1, group_by_use_nulls = true\r\n```",
  "created_at": "2024-07-11T16:12:03Z",
  "modified_files": [
    "src/Analyzer/Resolve/QueryAnalyzer.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.reference",
    "tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.sql"
  ]
}