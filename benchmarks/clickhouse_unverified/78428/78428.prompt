You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
distributed_product_mode = 'local' ignores FINAL with enabled analyzer
```
drop table if exists users;
drop table if exists dist_users;

CREATE TABLE users (uid Int16, name String, age Int16, version UInt8) ENGINE=ReplacingMergeTree(version) order by (uid, name);

INSERT INTO users VALUES (111, 'John', 33, 1);
INSERT INTO users VALUES (111, 'John', 33, 2);
INSERT INTO users VALUES (8888, 'Alice', 50, 1);

create table dist_users as users engine = Distributed(test_cluster_two_shards, currentDatabase(), users);

set send_logs_level='trace';
set send_logs_source_regexp='executeQuery';
set enable_analyzer=0;
set max_threads=1;


select * from dist_users l final left join (select * from dist_users d final) r on l.uid = r.uid settings distributed_product_mode = 'local';
```

Result (expected)

```

executeQuery:  SELECT `l`.`uid`, `l`.`name`, `l`.`age`, `l`.`version`, `r`.`uid`, `r`.`name`, `r`.`age`, `r`.`version` FROM `default`.`users` AS `l` FINAL ALL LEFT JOIN (SELECT * FROM `default`.`users` AS `d` FINAL) AS `r` ON `l`.`uid` = `r`.`uid` (stage: Complete)


   ┌──uid─┬─name──┬─age─┬─version─┬─r.uid─┬─r.name─┬─r.age─┬─r.version─┐
1. │ 8888 │ Alice │  50 │       1 │  8888 │ Alice  │    50 │         1 │
2. │  111 │ John  │  33 │       2 │   111 │ John   │    33 │         2 │
3. │ 8888 │ Alice │  50 │       1 │  8888 │ Alice  │    50 │         1 │
4. │  111 │ John  │  33 │       2 │   111 │ John   │    33 │         2 │
   └──────┴───────┴─────┴─────────┴───────┴────────┴───────┴───────────┘

4 rows in set. Elapsed: 0.008 sec. 
```

Result with analyzer (wrong)

```

set enable_analyzer=1;

select * from dist_users l final left join (select * from dist_users d final) r on l.uid = r.uid settings distributed_product_mode = 'local';

executeQuery: SELECT `__table1`.`uid` AS `uid`, `__table1`.`name` AS `name`, `__table1`.`age` AS `age`, `__table1`.`version` AS `version`, `__table2`.`uid` AS `r.uid`, `__table2`.`name` AS `r.name`, `__table2`.`age` AS `r.age`, `__table2`.`version` AS `r.version` FROM `default`.`users` AS `__table1` FINAL ALL LEFT JOIN (SELECT `__table3`.`uid` AS `uid`, `__table3`.`name` AS `name`, `__table3`.`age` AS `age`, `__table3`.`version` AS `version` FROM `default`.`users` AS `__table3`) AS `__table2` ON `__table1`.`uid` = `__table2`.`uid` (stage: Complete)


   ┌──uid─┬─name──┬─age─┬─version─┬─r.uid─┬─r.name─┬─r.age─┬─r.version─┐
1. │ 8888 │ Alice │  50 │       1 │  8888 │ Alice  │    50 │         1 │
2. │  111 │ John  │  33 │       2 │   111 │ John   │    33 │         1 │
3. │  111 │ John  │  33 │       2 │   111 │ John   │    33 │         2 │
4. │ 8888 │ Alice │  50 │       1 │  8888 │ Alice  │    50 │         1 │
5. │  111 │ John  │  33 │       2 │   111 │ John   │    33 │         1 │
6. │  111 │ John  │  33 │       2 │   111 │ John   │    33 │         2 │
   └──────┴───────┴─────┴─────────┴───────┴────────┴───────┴───────────┘

6 rows in set. Elapsed: 0.008 sec. 


```

Reason: FINAL is removed from the right part of JOIN for some reason.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
