You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Code: 49. DB::Exception: Unexpected type on mixNumberColumns  when inserting Bool null value 
## Description 
Server returns "Code: 49. DB::Exception: Unexpected type on mixNumberColumns. " when we insert null value into column with type Bool . There is a test in ClickHouse JDBC project that reproduces the issue. However it is not reproducible in CLI client may be because it is using Native protocol and the test is using HTTP. 

## How to Reproduce

1.  Do with  CH CLI  `DROP TABLE IF EXISTS test_default_bool` 
2. Do with CH `CREATE TABLE test_default_bool (id Int8, b_value Bool DEFAULT false) ENGINE = MergeTree() ORDER BY id` 
3. ` echo 'INSERT INTO test_default_bool values(1, null)' | curl 'http://localhost:8123/' --data-binary @-`  - seems important because works fine without this step 
4. ` echo 'INSERT INTO test_default_bool FORMAT CSV 1,\N' | curl 'http://localhost:8123/' --data-binary @-` - it can be repeated and error will appear: 

Here is sample output: 
```
root@f704d333c95b:/# echo 'INSERT INTO test_default_bool values(1, null)' | curl 'http://localhost:8123/' --data-binary @-
root@f704d333c95b:/# echo 'INSERT INTO test_default_bool FORMAT CSV 1,\N' | curl 'http://localhost:8123/' --data-binary @-
Code: 49. DB::Exception: Unexpected type on mixNumberColumns. (LOGICAL_ERROR) (version 24.10.1.2812 (official build))
root@f704d333c95b:/# echo 'INSERT INTO test_default_bool FORMAT CSV 1,\N' | curl 'http://localhost:8123/' --data-binary @-
Code: 49. DB::Exception: Unexpected type on mixNumberColumns. (LOGICAL_ERROR) (version 24.10.1.2812 (official build))
```

[Source code of original test](https://github.com/ClickHouse/clickhouse-java/blob/main/clickhouse-jdbc/src/test/java/com/clickhouse/jdbc/ClickHousePreparedStatementTest.java#L1382)


## Logs 

Next is a part of log showing all requests while the test: 
```text

2024.11.08 21:35:38.103674 [ 82 ] {} <Trace> HTTP-Session: f86216cc-9bf9-4a18-890a-89aa0c3ae446 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2024.11.08 21:35:38.103958 [ 82 ] {1f67ad0d-5a5d-4e05-9b65-8c5d8503eb10} <Debug> executeQuery: (from 192.168.127.1:40396) DROP TABLE IF EXISTS test_default_bool (stage: Complete)
2024.11.08 21:35:38.104309 [ 82 ] {1f67ad0d-5a5d-4e05-9b65-8c5d8503eb10} <Debug> DynamicQueryHandler: Done processing query
2024.11.08 21:35:38.104328 [ 82 ] {} <Debug> HTTP-Session: f86216cc-9bf9-4a18-890a-89aa0c3ae446 Logout, user_id: 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.165280 [ 82 ] {} <Trace> HTTPHandler-factory: HTTP Request for HTTPHandler-factory. Method: POST, Address: 192.168.127.1:40396, User-Agent: Apache-HttpClient/5.3.1 (Java/22), Content Type: text/plain, Transfer Encoding: chunked, X-Forwarded-For: (none)
2024.11.08 21:35:38.165353 [ 82 ] {} <Trace> DynamicQueryHandler: Request URI: /?compress=1
2024.11.08 21:35:38.165372 [ 82 ] {} <Debug> HTTP-Session: 7bb2a6d0-0e2c-4aee-ae4b-096fab16e6ac Authenticating user 'default' from 192.168.127.1:40396
2024.11.08 21:35:38.165389 [ 82 ] {} <Debug> HTTP-Session: 7bb2a6d0-0e2c-4aee-ae4b-096fab16e6ac Authenticated with global context as user 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.165394 [ 82 ] {} <Debug> HTTP-Session: 7bb2a6d0-0e2c-4aee-ae4b-096fab16e6ac Creating session context with user_id: 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.165442 [ 82 ] {} <Trace> HTTP-Session: 7bb2a6d0-0e2c-4aee-ae4b-096fab16e6ac Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2024.11.08 21:35:38.165597 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Debug> executeQuery: (from 192.168.127.1:40396) CREATE TABLE test_default_bool (id Int8, b_value Bool DEFAULT false) ENGINE = MergeTree() ORDER BY id (stage: Complete)
2024.11.08 21:35:38.166002 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Trace> IInterpreterUnionOrSelectQuery: The new analyzer is enabled, but the old interpreter is used. It can be a bug, please report it. Will disable 'allow_experimental_analyzer' setting (for query: SELECT min(id), max(id), count() SETTINGS aggregate_functions_null_for_empty = false, transform_null_in = false, legacy_column_name_of_tuple_literal = false)
2024.11.08 21:35:38.166747 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Trace> StoragePolicy (default): Storage policy default created, total volumes 1
2024.11.08 21:35:38.170797 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Debug> default.test_default_bool (2ef7195d-e0af-4da0-8022-d03d1bd77282): Loading data parts
2024.11.08 21:35:38.171118 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Debug> default.test_default_bool (2ef7195d-e0af-4da0-8022-d03d1bd77282): There are no data parts
2024.11.08 21:35:38.171187 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Debug> AsyncLoader: Prioritize load job 'startup Atomic database default': BackgrndStartup -> ForegroundLoad
2024.11.08 21:35:38.171199 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Debug> AsyncLoader: Prioritize load job 'startup Ordinary database default': BackgrndStartup -> ForegroundLoad
2024.11.08 21:35:38.173190 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Debug> DatabaseAtomic (default): There are 0 detached tables. Start searching non used tables.
2024.11.08 21:35:38.173205 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Debug> DatabaseAtomic (default): Found 0 non used tables in detached tables.
2024.11.08 21:35:38.173734 [ 82 ] {c85cc624-a791-446a-ba97-b6bd0c9a2c62} <Debug> DynamicQueryHandler: Done processing query
2024.11.08 21:35:38.173756 [ 82 ] {} <Debug> HTTP-Session: 7bb2a6d0-0e2c-4aee-ae4b-096fab16e6ac Logout, user_id: 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.175579 [ 82 ] {} <Trace> HTTPHandler-factory: HTTP Request for HTTPHandler-factory. Method: POST, Address: 192.168.127.1:40396, User-Agent: Apache-HttpClient/5.3.1 (Java/22), Content Type: text/plain, Transfer Encoding: chunked, X-Forwarded-For: (none)
2024.11.08 21:35:38.175617 [ 82 ] {} <Trace> DynamicQueryHandler: Request URI: /?compress=1
2024.11.08 21:35:38.175632 [ 82 ] {} <Debug> HTTP-Session: 21d58539-e4d2-4db0-964f-282e890c075d Authenticating user 'default' from 192.168.127.1:40396
2024.11.08 21:35:38.175656 [ 82 ] {} <Debug> HTTP-Session: 21d58539-e4d2-4db0-964f-282e890c075d Authenticated with global context as user 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.175660 [ 82 ] {} <Debug> HTTP-Session: 21d58539-e4d2-4db0-964f-282e890c075d Creating session context with user_id: 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.175697 [ 82 ] {} <Trace> HTTP-Session: 21d58539-e4d2-4db0-964f-282e890c075d Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2024.11.08 21:35:38.175817 [ 82 ] {0b1a8bdd-3e2a-4a19-a17b-1b04647d5372} <Debug> executeQuery: (from 192.168.127.1:40396) INSERT INTO test_default_bool values (stage: Complete)
2024.11.08 21:35:38.176259 [ 82 ] {0b1a8bdd-3e2a-4a19-a17b-1b04647d5372} <Trace> default.test_default_bool (2ef7195d-e0af-4da0-8022-d03d1bd77282): Trying to reserve 1.00 MiB using storage policy from min volume index 0
2024.11.08 21:35:38.176281 [ 82 ] {0b1a8bdd-3e2a-4a19-a17b-1b04647d5372} <Trace> DiskLocal: Reserved 1.00 MiB on local disk `default`, having unreserved 953.89 GiB.
2024.11.08 21:35:38.177009 [ 82 ] {0b1a8bdd-3e2a-4a19-a17b-1b04647d5372} <Trace> MergedBlockOutputStream: filled checksums all_1_1_0 (state Temporary)
2024.11.08 21:35:38.177183 [ 82 ] {0b1a8bdd-3e2a-4a19-a17b-1b04647d5372} <Trace> default.test_default_bool (2ef7195d-e0af-4da0-8022-d03d1bd77282): Renaming temporary part tmp_insert_all_1_1_0 to all_1_1_0 with tid (1, 1, 00000000-0000-0000-0000-000000000000).
2024.11.08 21:35:38.177717 [ 82 ] {0b1a8bdd-3e2a-4a19-a17b-1b04647d5372} <Debug> executeQuery: Read 1 rows, 2.00 B in 0.001933 sec., 517.3305742369374 rows/sec., 1.01 KiB/sec.
2024.11.08 21:35:38.178280 [ 82 ] {0b1a8bdd-3e2a-4a19-a17b-1b04647d5372} <Debug> DynamicQueryHandler: Done processing query
2024.11.08 21:35:38.178301 [ 82 ] {} <Debug> HTTP-Session: 21d58539-e4d2-4db0-964f-282e890c075d Logout, user_id: 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.183686 [ 82 ] {} <Trace> HTTPHandler-factory: HTTP Request for HTTPHandler-factory. Method: POST, Address: 192.168.127.1:40396, User-Agent: Apache-HttpClient/5.3.1 (Java/22), Content Type: text/plain, Transfer Encoding: chunked, X-Forwarded-For: (none)
2024.11.08 21:35:38.183733 [ 82 ] {} <Trace> DynamicQueryHandler: Request URI: /?query_id=cc32e467-7e98-45fb-a2f5-b736d1f3449c&compress=1&insert_deduplication_token=gHzZxRBFYwlSDcPpLHQvSTIkfPXVPCxShYzv
2024.11.08 21:35:38.183749 [ 82 ] {} <Debug> HTTP-Session: 20297463-4288-4943-9743-567dde46d791 Authenticating user 'default' from 192.168.127.1:40396
2024.11.08 21:35:38.183764 [ 82 ] {} <Debug> HTTP-Session: 20297463-4288-4943-9743-567dde46d791 Authenticated with global context as user 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.183769 [ 82 ] {} <Debug> HTTP-Session: 20297463-4288-4943-9743-567dde46d791 Creating session context with user_id: 94309d50-4f52-5250-31bd-74fecac179db
2024.11.08 21:35:38.183807 [ 82 ] {} <Trace> HTTP-Session: 20297463-4288-4943-9743-567dde46d791 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default

2024.11.08 21:35:38.183906 [ 82 ] {cc32e467-7e98-45fb-a2f5-b736d1f3449c} <Debug> executeQuery: (from 192.168.127.1:40396) INSERT INTO test_default_bool FORMAT CSV  (stage: Complete)
2024.11.08 21:35:38.184031 [ 82 ] {cc32e467-7e98-45fb-a2f5-b736d1f3449c} <Trace> ParallelParsingInputFormat: Parallel parsing is used
2024.11.08 21:35:38.192116 [ 82 ] {cc32e467-7e98-45fb-a2f5-b736d1f3449c} <Error> executeQuery: Code: 49. DB::Exception: Unexpected type on mixNumberColumns. (LOGICAL_ERROR) (version 24.10.1.2812 (official build)) (from 192.168.127.1:40396) (in query: INSERT INTO test_default_bool FORMAT CSV ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000cf720fb
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000007ea888c
6. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000007eb5fcb
7. DB::AddingDefaultsTransform::transform(DB::Chunk&) @ 0x0000000012bf7c88
8. DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000d2b36d3
9. DB::ISimpleTransform::work() @ 0x0000000012997252
10. DB::ExecutionThreadContext::executeTask() @ 0x00000000129b3ce7
11. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000129a7290
12. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000129a6564
13. DB::CompletedPipelineExecutor::execute() @ 0x00000000129a4e12
14. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001172c9c8
15. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000012897ce3
16. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001289bc45
17. DB::HTTPServerConnection::run() @ 0x000000001293b75d
18. Poco::Net::TCPServerConnection::start() @ 0x00000000157fc747
19. Poco::Net::TCPServerDispatcher::run() @ 0x00000000157fcbd9
20. Poco::PooledThread::run() @ 0x00000000157c9741
21. Poco::ThreadImpl::runnableEntry(void*) @ 0x00000000157c7cfd
22. ? @ 0x00007fcb534ef609
23. ? @ 0x00007fcb53414353

2024.11.08 21:35:38.192342 [ 82 ] {cc32e467-7e98-45fb-a2f5-b736d1f3449c} <Error> DynamicQueryHandler: Code: 49. DB::Exception: Unexpected type on mixNumberColumns. (LOGICAL_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000cf720fb
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000007ea888c
4. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000007eb5fcb
5. DB::AddingDefaultsTransform::transform(DB::Chunk&) @ 0x0000000012bf7c88
6. DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000000d2b36d3
7. DB::ISimpleTransform::work() @ 0x0000000012997252
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000129b3ce7
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000129a7290
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000129a6564
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000129a4e12
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001172c9c8
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000012897ce3
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001289bc45
15. DB::HTTPServerConnection::run() @ 0x000000001293b75d
16. Poco::Net::TCPServerConnection::start() @ 0x00000000157fc747
17. Poco::Net::TCPServerDispatcher::run() @ 0x00000000157fcbd9
18. Poco::PooledThread::run() @ 0x00000000157c9741
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x00000000157c7cfd
20. ? @ 0x00007fcb534ef609
21. ? @ 0x00007fcb53414353
 (version 24.10.1.2812 (official build))
2024.11.08 21:35:38.193304 [ 82 ] {} <Debug> HTTP-Session: 20297463-4288-4943-9743-567dde46d791 Logout, user_id: 94309d50-4f52-5250-31bd-74fecac179db
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
