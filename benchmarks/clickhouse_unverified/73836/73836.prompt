You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
HALF_FLOAT is not supported in Arrow/Parquet/ORC
### Changelog category (leave one):
- Bug Fix (user-visible misbehavior in an official stable release)


### Changelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):
Apache Arrow's HALF_FLOAT (don't be confused with BFloat16) is not supported. In previous versions, reading this data produced invalid results. This closes #72960


> Information about CI checks: https://clickhouse.com/docs/en/development/continuous-integration/

#### CI Settings (Only check the boxes if you know what you are doing)

All builds in Builds_1 and Builds_2 stages are always mandatory
and will run independently of the checks below:

- [ ] <!---ci_set_required--> Allow: All Required Checks
- [ ] <!---ci_include_stateless--> Allow: Stateless tests
- [ ] <!---ci_include_stateful--> Allow: Stateful tests
- [ ] <!---ci_include_integration--> Allow: Integration Tests
- [ ] <!---ci_include_performance--> Allow: Performance tests
- [ ] <!---ci_set_builds--> Allow: All Builds
- [ ] <!---batch_0_1--> Allow: batch 1, 2 for multi-batch jobs
- [ ] <!---batch_2_3--> Allow: batch 3, 4, 5, 6 for multi-batch jobs
---
- [ ] <!---ci_exclude_style--> Exclude: Style check
- [ ] <!---ci_exclude_fast--> Exclude: Fast test
- [ ] <!---ci_exclude_asan--> Exclude: All with ASAN
- [ ] <!---ci_exclude_tsan|msan|ubsan|coverage--> Exclude: All with TSAN, MSAN, UBSAN, Coverage
- [ ] <!---ci_exclude_aarch64|release|debug--> Exclude: All with aarch64
- [ ] <!---ci_exclude_release--> Exclude: All with release
- [ ] <!---ci_exclude_debug--> Exclude: All with debug
---
- [ ] <!---ci_include_fuzzer--> Run only fuzzers related jobs (libFuzzer fuzzers, AST fuzzers, etc.)
- [ ] <!---ci_exclude_ast--> Exclude: AST fuzzers
---
- [ ] <!---do_not_test--> Do not test
- [ ] <!---woolen_wolfdog--> Woolen Wolfdog
- [ ] <!---upload_all--> Upload binaries for special builds
- [ ] <!---no_merge_commit--> Disable merge-commit
- [ ] <!---no_ci_cache--> Disable CI cache

Values from the Parquet file with logical datatype `Float16` are read incorrectly
**ClickHouse version:** `24.11.1.708`

I have a Parquet file with logical type `Float16`, when I read from it using ClickHouse I see the values that are incorrect. 

```sql
SELECT *
FROM file('float16.parquet')

Query id: 42eed709-8323-44c7-8ac9-8ee55d04190b

    ┌───floatfield─┐
 1. │ -0.007858276 │
 2. │    0.0078125 │
 3. │      32.0625 │
 4. │      2052.25 │
 5. │        32838 │
 6. │       262720 │
 7. │            0 │
 8. │            0 │
 9. │            0 │
10. │            0 │
11. │            0 │
12. │            0 │
    └──────────────┘
```

But when I try to read values with other tools like `parquet-tools` for example I see these values that I've passed when generating the file with `parquet-java`:

```
 parquet-tools show float16.parquet   
+--------------+
|   floatfield |
|--------------|
|           -2 |
|           -1 |
|            0 |
|            1 |
|            2 |
|            3 |
|            4 |
|            5 |
|            6 |
|            7 |
|            8 |
|            9 |
+--------------+
```

One observation that I have is that the column in ClickHouse is being converted as `Float32`

```sql
DESCRIBE TABLE file('float16.parquet')

Query id: aeaafdd1-f256-41ef-aeac-b1f58d026b39

   ┌─name───────┬─type──────────────┬─default_type─┬─default_expression─┬─comment─┬─codec_expression─┬─ttl_expression─┐
1. │ floatfield │ Nullable(Float32) │              │                    │         │                  │                │
   └────────────┴───────────────────┴──────────────┴────────────────────┴─────────┴──────────────────┴────────────────┘

1 row in set. Elapsed: 0.002 sec. 
```

In the documentation I see the datatype `BFloat16` exists so I assumed it would be possible to explicitly specify the structure when reading from the parquet as:

```sql
SELECT *
FROM file('float16.parquet', Parquet, 'floatfield BFloat16')

Query id: a90810ee-60e3-4177-921a-cc864db4686e


Elapsed: 0.000 sec. 

Received exception:
Code: 50. DB::Exception: Unknown data type family: BFloat16. Maybe you meant: ['Float64','Float32']. (UNKNOWN_TYPE)
```

Is the error message here expected? Shouldn't the column with `Float16` automatically be converted to `BFloat16` in ClickHouse? And why does the error say `Unknown data type family?`
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
