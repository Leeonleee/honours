diff --git a/dbms/src/AggregateFunctions/AggregateFunctionGroupBitmap.cpp b/dbms/src/AggregateFunctions/AggregateFunctionGroupBitmap.cpp
index 6eb2c0299da1..4c6ec4b773c9 100644
--- a/dbms/src/AggregateFunctions/AggregateFunctionGroupBitmap.cpp
+++ b/dbms/src/AggregateFunctions/AggregateFunctionGroupBitmap.cpp
@@ -36,15 +36,13 @@ AggregateFunctionPtr createAggregateFunctionBitmapL2(const std::string & name, c
     assertUnary(name, argument_types);
     DataTypePtr argument_type_ptr = argument_types[0];
     WhichDataType which(*argument_type_ptr);
-    if (which.idx == TypeIndex::AggregateFunction)
-    {
-        const DataTypeAggregateFunction& datatype_aggfunc = dynamic_cast<const DataTypeAggregateFunction&>(*argument_type_ptr);
-        AggregateFunctionPtr aggfunc = datatype_aggfunc.getFunction();
-        argument_type_ptr = aggfunc->getArgumentTypes()[0];
-    }
+    if (which.idx != TypeIndex::AggregateFunction)
+        throw Exception("Illegal type " + argument_types[0]->getName() + " of argument for aggregate function " + name, ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT);
 
+    const DataTypeAggregateFunction& datatype_aggfunc = dynamic_cast<const DataTypeAggregateFunction&>(*argument_type_ptr);
+    AggregateFunctionPtr aggfunc = datatype_aggfunc.getFunction();
+    argument_type_ptr = aggfunc->getArgumentTypes()[0];
     AggregateFunctionPtr res(createWithUnsignedIntegerType<AggregateFunctionTemplate, AggregateFunctionGroupBitmapData>(*argument_type_ptr, argument_type_ptr));
-
     if (!res)
         throw Exception("Illegal type " + argument_types[0]->getName() + " of argument for aggregate function " + name, ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT);
 
diff --git a/dbms/src/AggregateFunctions/AggregateFunctionGroupBitmap.h b/dbms/src/AggregateFunctions/AggregateFunctionGroupBitmap.h
index f71ebd539228..5e22543c2aa1 100644
--- a/dbms/src/AggregateFunctions/AggregateFunctionGroupBitmap.h
+++ b/dbms/src/AggregateFunctions/AggregateFunctionGroupBitmap.h
@@ -71,7 +71,7 @@ class AggregateFunctionBitmapL2 final : public IAggregateFunctionDataHelper<Data
     void add(AggregateDataPtr place, const IColumn ** columns, size_t row_num, Arena *) const override
     {
         Data & data_lhs = this->data(place);
-        const Data & data_rhs = this->data(static_cast<const ColumnAggregateFunction &>(*columns[0]).getData()[row_num]);
+        const Data & data_rhs = this->data(assert_cast<const ColumnAggregateFunction &>(*columns[0]).getData()[row_num]);
         if (!data_lhs.doneFirst)
         {
             data_lhs.doneFirst = true;
@@ -110,7 +110,7 @@ class AggregateFunctionBitmapL2 final : public IAggregateFunctionDataHelper<Data
 
     void insertResultInto(ConstAggregateDataPtr place, IColumn & to) const override
     {
-        static_cast<ColumnVector<T> &>(to).getData().push_back(this->data(place).rbs.size());
+        assert_cast<ColumnVector<T> &>(to).getData().push_back(this->data(place).rbs.size());
     }
 
     const char * getHeaderFilePath() const override { return __FILE__; }
diff --git a/docs/en/query_language/agg_functions/reference.md b/docs/en/query_language/agg_functions/reference.md
index 5e1bfaf5570d..ecfe90fa9c98 100644
--- a/docs/en/query_language/agg_functions/reference.md
+++ b/docs/en/query_language/agg_functions/reference.md
@@ -1210,11 +1210,6 @@ SELECT groupBitmapAnd(z) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%'
 │               3   │
 └───────────────────┘
 
-SELECT groupBitmapAndMerge(z) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%');
-┌─groupBitmapAnd(z)─┐
-│               3   │
-└───────────────────┘
-
 SELECT arraySort(bitmapToArray(groupBitmapAndState(z))) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%');
 ┌─arraySort(bitmapToArray(groupBitmapAndState(z)))─┐
 │ [6,8,10]                                         │
@@ -1260,11 +1255,6 @@ SELECT groupBitmapOr(z) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%')
 │             15   │
 └──────────────────┘
 
-SELECT groupBitmapOrMerge(z) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%');
-┌─groupBitmapOrMerge(z)─┐
-│                  15   │
-└───────────────────────┘
-
 SELECT arraySort(bitmapToArray(groupBitmapOrState(z))) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%');
 ┌─arraySort(bitmapToArray(groupBitmapOrState(z)))─┐
 │ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]           │
@@ -1310,11 +1300,6 @@ SELECT groupBitmapXor(z) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%'
 │              10   │
 └───────────────────┘
 
-SELECT groupBitmapXorMerge(z) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%');
-┌─groupBitmapXorMerge(z)─┐
-│                   10   │
-└────────────────────────┘
-
 SELECT arraySort(bitmapToArray(groupBitmapXorState(z))) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%');
 ┌─arraySort(bitmapToArray(groupBitmapXorState(z)))─┐
 │ [1,3,5,6,8,10,11,13,14,15]                       │
