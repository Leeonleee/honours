You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
IN clause fails for BFloat16 due to type mismatch with array
### Describe what's wrong

`IN` clause fails with `toBFloat16(...)` while working fine with `toFloat64(...)` and `toFloat32(...)` for the same input values.

### Does it reproduce on the most recent release?

Yes

### How to reproduce

Run the following queries:

```
SELECT toFloat64(1) IN [1, 2, 3];   -- returns 1
SELECT toFloat32(1) IN [1, 2, 3];   -- returns 1
SELECT toBFloat16(1) IN [1, 2, 3];  -- throws
```

[Link](https://fiddle.clickhouse.com/395a083d-477a-4af7-acf7-3c4d5aea95d8) to reproduce. 

### Expected behavior

All three expressions should return 1. Type coercion should match `toBFloat16(1)` with the array `[1, 2, 3]` just like it does for `Float32` and `Float64`.

### Error message and/or stacktrace


```
Received exception from server (version 25.3.2):
Code: 53. DB::Exception: Received from localhost:9000. DB::Exception: Type mismatch in IN or VALUES section. Expected: BFloat16. Got: UInt64. (TYPE_MISMATCH)
(query: SELECT toBFloat16(1) IN [1, 2, 3];)
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
