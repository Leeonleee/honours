You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
ALIAS column in secondary index usage.
**Use case**
We have some complex function, which we would like to use in secondary index, and we want to create an alias column as that function in order to have simple and memoriable name to it, which we can use in WHERE clause.

**Describe the solution you'd like**
Clickhouse server version 20.9.2.20
```
CREATE TABLE test_index
(
    `key_string` String,
    `key_uint32` ALIAS toUInt32(key_string),
    INDEX idx key_uint32 TYPE set(0) GRANULARITY 1
)
ENGINE = MergeTree
PARTITION BY tuple()
PRIMARY KEY tuple()
ORDER BY key_string


Received exception from server (version 20.9.2):
Code: 47. DB::Exception: Received from localhost:9000. DB::Exception: Missing columns: 'key_uint32' while processing query: 'key_uint32', required columns: 'key_uint32', source columns: 'key_string'.


CREATE TABLE test_index
(
    `key_string` String,
    `key_uint32` ALIAS toUInt32(key_string),
    INDEX idx toUInt32(key_string) TYPE set(0) GRANULARITY 1
)
ENGINE = MergeTree
PARTITION BY tuple()
PRIMARY KEY tuple()
ORDER BY key_string;

INSERT INTO test_index SELECT * FROM numbers(1000000);

SELECT *
FROM test_index
WHERE key_uint32 = 1

┌─key_string─┐
│ 1          │
└────────────┘

1 rows in set. Elapsed: 0.010 sec. Processed 1.00 million rows, 14.89 MB (99.93 million rows/s., 1.49 GB/s.)

SELECT *
FROM test_index
WHERE toUInt32(key_string) = 1

┌─key_string─┐
│ 1          │
└────────────┘

1 rows in set. Elapsed: 0.008 sec. Processed 8.19 thousand rows, 121.96 KB (1.02 million rows/s., 15.20 MB/s.)
```
**Describe alternatives you've considered**
Write that kind of conditions in full form, but that makes less sense when we have the ability to use ALIAS columns.


Cannot use ALIAS columns in indices
This does not work:
```
CREATE TABLE test
(
    x UInt32,
    y ALIAS x + 1,
    INDEX i_y (y) TYPE minmax
) ENGINE = MergeTree ORDER BY x;
```

This does:
```
CREATE TABLE test
(
    x UInt32,
    y ALIAS x + 1,
    INDEX i_y (x + 1) TYPE minmax
) ENGINE = MergeTree ORDER BY x;
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
