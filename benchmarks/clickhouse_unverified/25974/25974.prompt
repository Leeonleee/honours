You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
DB::Exception: Illegal type UUID of argument of function notEmpty.
Version 18.14.54409

When executing JOIN's involving UUID column, you could expect that some of them are not filled in; so using the notEmpty() should be possible; However it seems that this is currently not supported.

Testcase:
```sql
CREATE DATABASE uuid_empty;
CREATE TABLE uuid_empty.users (user_id UUID) ENGINE = Memory;
CREATE TABLE uuid_empty.orders (order_id UUID, user_id UUID) ENGINE = Memory;
INSERT INTO uuid_empty.users VALUES ('00000000-0000-0000-0000-000000000001');
INSERT INTO uuid_empty.users VALUES ('00000000-0000-0000-0000-000000000002');
INSERT INTO uuid_empty.orders VALUES ('00000000-0000-0000-0000-000000000003', '00000000-0000-0000-0000-000000000001');

SELECT 
    uniq(user_id) AS users, 
    uniqIf(order_id, notEmpty(order_id)) AS orders
FROM 
(
    SELECT * FROM uuid_empty.users
) ALL LEFT JOIN (
    SELECT * FROM uuid_empty.orders 
) USING (user_id);

DROP DATABASE uuid_empty;
```
Should result in (currently the result using String type)
```sql
┌─users─┬─orders─┐
│     2 │      1 │
└───────┴────────┘
```
But now returns
```
Received exception from server (version 18.14.54409):
Code: 43. DB::Exception: Received from localhost:9000, 127.0.0.1. DB::Exception: Illegal type UUID of argument of function notEmpty. 

```

Executing the following query without aggregating gives the (empty?) uuid `00000000-0000-0000-0000-000000000000`?

```sql
SELECT 
    user_id, 
    order_id
FROM 
(
    SELECT *
    FROM uuid_empty.users 
) 
ALL LEFT JOIN 
(
    SELECT *
    FROM uuid_empty.orders 
) USING (user_id)

┌──────────────────────────────user_id─┬─────────────────────────────order_id─┐
│ 00000000-0000-0000-0000-000000000001 │ 00000000-0000-0000-0000-000000000003 │
│ 00000000-0000-0000-0000-000000000002 │ 00000000-0000-0000-0000-000000000000 │
└──────────────────────────────────────┴──────────────────────────────────────┘
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
