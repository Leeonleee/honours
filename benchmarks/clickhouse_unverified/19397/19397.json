{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 19397,
  "instance_id": "ClickHouse__ClickHouse-19397",
  "issue_numbers": [
    "19391"
  ],
  "base_commit": "4e11e7cfa9f26a6f2c60bf540b6bc98ac0549e65",
  "patch": "diff --git a/src/Functions/FunctionsAES.h b/src/Functions/FunctionsAES.h\nindex fea47074649e..f9cf688c86a8 100644\n--- a/src/Functions/FunctionsAES.h\n+++ b/src/Functions/FunctionsAES.h\n@@ -303,6 +303,10 @@ class FunctionEncrypt : public IFunction\n             if constexpr (!std::is_same_v<std::nullptr_t, std::decay_t<IvColumnType>>)\n             {\n                 iv_value = iv_column->getDataAt(r);\n+\n+                /// If the length is zero (empty string is passed) it should be treat as no IV.\n+                if (iv_value.size == 0)\n+                    iv_value.data = nullptr;\n             }\n \n             const auto input_value = input_column->getDataAt(r);\n@@ -571,6 +575,10 @@ class FunctionDecrypt : public IFunction\n             if constexpr (!std::is_same_v<std::nullptr_t, std::decay_t<IvColumnType>>)\n             {\n                 iv_value = iv_column->getDataAt(r);\n+\n+                /// If the length is zero (empty string is passed) it should be treat as no IV.\n+                if (iv_value.size == 0)\n+                    iv_value.data = nullptr;\n             }\n \n             auto input_value = input_column->getDataAt(r);\n",
  "test_patch": "diff --git a/docker/test/fasttest/run.sh b/docker/test/fasttest/run.sh\nindex fb3b3e3b459b..96e14b2910d9 100755\n--- a/docker/test/fasttest/run.sh\n+++ b/docker/test/fasttest/run.sh\n@@ -269,6 +269,7 @@ function run_tests\n         01281_group_by_limit_memory_tracking    # max_memory_usage_for_user can interfere another queries running concurrently\n         01318_encrypt                           # Depends on OpenSSL\n         01318_decrypt                           # Depends on OpenSSL\n+        01663_aes_msan                          # Depends on OpenSSL\n         01281_unsucceeded_insert_select_queries_counter\n         01292_create_user\n         01294_lazy_database_concurrent\ndiff --git a/tests/queries/0_stateless/01663_aes_msan.reference b/tests/queries/0_stateless/01663_aes_msan.reference\nnew file mode 100644\nindex 000000000000..e760e58b19d8\n--- /dev/null\n+++ b/tests/queries/0_stateless/01663_aes_msan.reference\n@@ -0,0 +1,2 @@\n+4DB2B0F12DE073FD063CE5478903DE68\n+text\ndiff --git a/tests/queries/0_stateless/01663_aes_msan.sql b/tests/queries/0_stateless/01663_aes_msan.sql\nnew file mode 100644\nindex 000000000000..1d549aece56c\n--- /dev/null\n+++ b/tests/queries/0_stateless/01663_aes_msan.sql\n@@ -0,0 +1,2 @@\n+SELECT hex(encrypt('aes-128-cbc', 'text', 'keykeykeykeykeyk', ''));\n+SELECT decrypt('aes-128-cbc', encrypt('aes-128-cbc', 'text', 'keykeykeykeykeyk', ''), 'keykeykeykeykeyk', '');\n",
  "problem_statement": "MSan report in AES functions\n**Describe the bug**\r\nhttps://clickhouse-test-reports.s3.yandex.net/19372/0a155ee2f150d1aaed2c223ea7ec7bb816132ce5/fuzzer_msan/server.log\r\n\r\n**How to reproduce**\r\n```\r\nSELECT encrypt('aes-128-cbc', 'text', 'keykeykeykeykeyk', '')\r\n```\n",
  "hints_text": "Reproducible 100% number of times.\r\n\r\nCC @Enmk ",
  "created_at": "2021-01-22T01:09:37Z",
  "modified_files": [
    "src/Functions/FunctionsAES.h"
  ],
  "modified_test_files": [
    "docker/test/fasttest/run.sh",
    "b/tests/queries/0_stateless/01663_aes_msan.reference",
    "b/tests/queries/0_stateless/01663_aes_msan.sql"
  ]
}