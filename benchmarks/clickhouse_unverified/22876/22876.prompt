You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Server crash when using mannWhitneyUTest over a window

**Describe the bug**
Crash in 21.4.1.6378 when using mannWhitneyUTest aggregate function.

**How to reproduce**
```
CREATE TABLE default.empsalary
(
    `depname` LowCardinality(String),
    `empno` UInt64,
    `salary` Int32,
    `enroll_date` Date
)
ENGINE = MergeTree
ORDER BY enroll_date
SETTINGS index_granularity = 8192 

user-host :) select * from empsalary

SELECT *
FROM empsalary

Query id: 64367fe7-67c3-4495-a68f-04115d549fb0

┌─depname───┬─empno─┬─salary─┬─enroll_date─┐
│ sales     │     1 │   5000 │  2006-10-01 │
│ develop   │     8 │   6000 │  2006-10-01 │
│ personnel │     2 │   3900 │  2006-12-23 │
│ develop   │    10 │   5200 │  2007-08-01 │
│ sales     │     3 │   4800 │  2007-08-01 │
│ sales     │     4 │   4800 │  2007-08-08 │
│ develop   │    11 │   5200 │  2007-08-15 │
│ personnel │     5 │   3500 │  2007-12-10 │
│ develop   │     7 │   4200 │  2008-01-01 │
│ develop   │     9 │   4500 │  2008-01-01 │
└───────────┴───────┴────────┴─────────────┘

Apr 06,2021 18:03:22             ⟥  Example func='mannWhitneyUTest(salary, 1)'
                                      Checking aggregate funcs over rows frame.
                                      Arguments
                                        func
                                          mannWhitneyUTest(salary, 1)
Apr 06,2021 18:03:22               ⟥  When I execute query
                                        SELECT mannWhitneyUTest(salary, 1) OVER (ORDER BY salary ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS func
                                          FROM empsalary
Apr 06,2021 18:03:22                 ⟥  By executing command
                                          echo -e "
                                          SELECT mannWhitneyUTest(salary, 1) OVER (ORDER BY salary ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS func
                                            FROM empsalary
                                           FORMAT TabSeparatedWithNames" | clickhouse client -n --allow_experimental_window_functions "1"
                 2ms                      [clickhouse1] bash# echo -e "
                 4ms                      [clickhouse1] >         SELECT mannWhitneyUTest(salary, 1) OVER (ORDER BY salary ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS func
                 5ms                      [clickhouse1] >           FROM empsalary
                 8ms                      [clickhouse1] >          FORMAT TabSeparatedWithNames" | clickhouse client -n --allow_experimental_window_functions "1"
                33ms                      [clickhouse1] func
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.548322 [ 356 ] <Fatal> BaseDaemon: ########################################
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.548442 [ 356 ] <Fatal> BaseDaemon: (version 21.4.1.6378 (official build), build id: E9CD326C4028D7B6036A025796AA94E886A6FD1D) (from thread 41) (query_id: 801a44f1-730d-4605-9465-7c2f1d1b9aa2) Received signal Segmentation fault (11)
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.548478 [ 356 ] <Fatal> BaseDaemon: Address: 0x10 Access: read. Address not mapped to object.
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.548512 [ 356 ] <Fatal> BaseDaemon: Stack trace: 0xa3efac2 0xa3f2a79 0x10154c53 0x1015506e 0x1015973f 0xfff2fdd 0xffefc91 0xffedc06 0xfffb072 0x88d56bf 0x88d9153 0x7fbd41866609 0x7fbd4178d293
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549119 [ 356 ] <Fatal> BaseDaemon: 1. void DB::PODArrayBase<8ul, 32ul, DB::MixedArenaAllocator<4096ul, Allocator<false, false>, DB::AlignedArenaAllocator<8ul>, 8ul>, 0ul, 0ul>::realloc<DB::Arena*&>(unsigned long, DB::Arena*&) @ 0xa3efac2 in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549165 [ 356 ] <Fatal> BaseDaemon: 2. DB::AggregateFunctionMannWhitney::add(char*, DB::IColumn const**, unsigned long, DB::Arena*) const @ 0xa3f2a79 in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549187 [ 356 ] <Fatal> BaseDaemon: 3. DB::WindowTransform::updateAggregationState() @ 0x10154c53 in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549221 [ 356 ] <Fatal> BaseDaemon: 4. DB::WindowTransform::appendChunk(DB::Chunk&) @ 0x1015506e in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549251 [ 356 ] <Fatal> BaseDaemon: 5. DB::WindowTransform::work() @ 0x1015973f in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549278 [ 356 ] <Fatal> BaseDaemon: 6. ? @ 0xfff2fdd in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549312 [ 356 ] <Fatal> BaseDaemon: 7. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0xffefc91 in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549331 [ 356 ] <Fatal> BaseDaemon: 8. DB::PipelineExecutor::executeImpl(unsigned long) @ 0xffedc06 in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549362 [ 356 ] <Fatal> BaseDaemon: 9. ? @ 0xfffb072 in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549393 [ 356 ] <Fatal> BaseDaemon: 10. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x88d56bf in /usr/bin/clickhouse
               138ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549422 [ 356 ] <Fatal> BaseDaemon: 11. ? @ 0x88d9153 in /usr/bin/clickhouse
               139ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549460 [ 356 ] <Fatal> BaseDaemon: 12. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
               139ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.549486 [ 356 ] <Fatal> BaseDaemon: 13. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so
               139ms                      [clickhouse1] [clickhouse1] 2021.04.07 01:03:22.639326 [ 356 ] <Fatal> BaseDaemon: Checksum of the binary: F0772B88209F31A15D3ADA1A43619151, integrity check passed.
```

**Expected behavior**
No server crash.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
