{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 39629,
  "instance_id": "ClickHouse__ClickHouse-39629",
  "issue_numbers": [
    "27870"
  ],
  "base_commit": "33f72fb0110042a4010268feb0ca34dd8db180d5",
  "patch": "diff --git a/.gitignore b/.gitignore\nindex e517dfd63c23..dd632eba85df 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -58,6 +58,10 @@ cmake_install.cmake\n CTestTestfile.cmake\n *.a\n *.o\n+*.so\n+*.dll\n+*.lib\n+*.dylib\n cmake-build-*\n \n # Python cache\ndiff --git a/docs/en/sql-reference/functions/other-functions.md b/docs/en/sql-reference/functions/other-functions.md\nindex d86eb6b45aee..877179a66a65 100644\n--- a/docs/en/sql-reference/functions/other-functions.md\n+++ b/docs/en/sql-reference/functions/other-functions.md\n@@ -1823,6 +1823,36 @@ Result:\n Evaluate external model.\n Accepts a model name and model arguments. Returns Float64.\n \n+## catboostEvaluate(path_to_model, feature_1, feature_2, \u2026, feature_n)\n+\n+Evaluate external catboost model. [CatBoost](https://catboost.ai) is an open-source gradient boosting library developed by Yandex for machine learing.\n+Accepts a path to a catboost model and model arguments (features). Returns Float64.\n+\n+``` sql\n+SELECT feat1, ..., feat_n, catboostEvaluate('/path/to/model.bin', feat_1, ..., feat_n) AS prediction\n+FROM data_table\n+```\n+\n+**Prerequisites**\n+\n+1. Build the catboost evaluation library\n+\n+Before evaluating catboost models, the `libcatboostmodel.<so|dylib>` library must be made available. See [CatBoost documentation](https://catboost.ai/docs/concepts/c-plus-plus-api_dynamic-c-pluplus-wrapper.html) how to compile it.\n+\n+Next, specify the path to `libcatboostmodel.<so|dylib>` in the clickhouse configuration:\n+\n+``` xml\n+<clickhouse>\n+...\n+    <catboost_lib_path>/path/to/libcatboostmodel.so</catboost_lib_path>\n+...\n+</clickhouse>\n+```\n+\n+2. Train a catboost model using libcatboost\n+\n+See [Training and applying models](https://catboost.ai/docs/features/training.html#training) for how to train catboost models from a training data set.\n+\n ## throwIf(x\\[, message\\[, error_code\\]\\])\n \n Throw an exception if the argument is non zero.\ndiff --git a/docs/en/sql-reference/statements/system.md b/docs/en/sql-reference/statements/system.md\nindex 9b7527caaa97..67eb94f36066 100644\n--- a/docs/en/sql-reference/statements/system.md\n+++ b/docs/en/sql-reference/statements/system.md\n@@ -11,8 +11,6 @@ The list of available `SYSTEM` statements:\n -   [RELOAD EMBEDDED DICTIONARIES](#query_language-system-reload-emdedded-dictionaries)\n -   [RELOAD DICTIONARIES](#query_language-system-reload-dictionaries)\n -   [RELOAD DICTIONARY](#query_language-system-reload-dictionary)\n--   [RELOAD MODELS](#query_language-system-reload-models)\n--   [RELOAD MODEL](#query_language-system-reload-model)\n -   [RELOAD FUNCTIONS](#query_language-system-reload-functions)\n -   [RELOAD FUNCTION](#query_language-system-reload-functions)\n -   [DROP DNS CACHE](#query_language-system-drop-dns-cache)\n@@ -67,26 +65,6 @@ The status of the dictionary can be checked by querying the `system.dictionaries\n SELECT name, status FROM system.dictionaries;\n ```\n \n-## RELOAD MODELS\n-\n-Reloads all [CatBoost](../../guides/developer/apply-catboost-model.md) models if the configuration was updated without restarting the server.\n-\n-**Syntax**\n-\n-```sql\n-SYSTEM RELOAD MODELS [ON CLUSTER cluster_name]\n-```\n-\n-## RELOAD MODEL\n-\n-Completely reloads a CatBoost model `model_name` if the configuration was updated without restarting the server.\n-\n-**Syntax**\n-\n-```sql\n-SYSTEM RELOAD MODEL [ON CLUSTER cluster_name] <model_name>\n-```\n-\n ## RELOAD FUNCTIONS\n \n Reloads all registered [executable user defined functions](../functions/index.md#executable-user-defined-functions) or one of them from a configuration file.\ndiff --git a/docs/redirects.txt b/docs/redirects.txt\nindex 949b9d48ca8a..cea138f7237c 100644\n--- a/docs/redirects.txt\n+++ b/docs/redirects.txt\n@@ -155,7 +155,6 @@ getting_started/index.md getting-started/index.md\n getting_started/install.md getting-started/install.md\n getting_started/playground.md getting-started/playground.md\n getting_started/tutorial.md getting-started/tutorial.md\n-guides/apply_catboost_model.md guides/apply-catboost-model.md\n images/column_oriented.gif images/column-oriented.gif\n images/row_oriented.gif images/row-oriented.gif\n interfaces/http_interface.md interfaces/http.md\ndiff --git a/docs/ru/guides/apply-catboost-model.md b/docs/ru/guides/apply-catboost-model.md\ndeleted file mode 100644\nindex 68d7042df2d0..000000000000\n--- a/docs/ru/guides/apply-catboost-model.md\n+++ /dev/null\n@@ -1,241 +0,0 @@\n----\n-slug: /ru/guides/apply-catboost-model\n-sidebar_position: 41\n-sidebar_label: \"\u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 CatBoost \u0432 ClickHouse\"\n----\n-\n-# \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 CatBoost \u0432 ClickHouse {#applying-catboost-model-in-clickhouse}\n-\n-[CatBoost](https://catboost.ai) \u2014 \u043e\u0442\u043a\u0440\u044b\u0442\u0430\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u0430\u044f \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0435\u0439 [\u042f\u043d\u0434\u0435\u043a\u0441](https://yandex.ru/company/) \u0434\u043b\u044f \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0445\u0435\u043c\u0443 \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043d\u043e\u0433\u043e \u0431\u0443\u0441\u0442\u0438\u043d\u0433\u0430.\n-\n-\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u044d\u0442\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0432\u044b \u043d\u0430\u0443\u0447\u0438\u0442\u0435\u0441\u044c \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u043f\u0440\u0435\u0434\u043e\u0431\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 ClickHouse: \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0432\u044b\u0432\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0437 SQL.\n-\n-\u0427\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c CatBoost \u0432 ClickHouse:\n-\n-1.  [\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u0443](#create-table).\n-2.  [\u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443](#insert-data-to-table).\n-3.  [\u0418\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0439\u0442\u0435 CatBoost \u0432 ClickHouse](#integrate-catboost-into-clickhouse) (\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0448\u0430\u0433).\n-4.  [\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0432\u044b\u0432\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0437 SQL](#run-model-inference).\n-\n-\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e\u0431 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 CatBoost, \u0441\u043c. [\u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439](https://catboost.ai/docs/features/training.html#training).\n-\n-\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 CatBoost, \u0435\u0441\u043b\u0438 \u0438\u0445 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0431\u044b\u043b\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430, \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b [RELOAD MODEL](../sql-reference/statements/system.md#query_language-system-reload-model) \u0438 [RELOAD MODELS](../sql-reference/statements/system.md#query_language-system-reload-models).\n-\n-## \u041f\u0435\u0440\u0435\u0434 \u043d\u0430\u0447\u0430\u043b\u043e\u043c \u0440\u0430\u0431\u043e\u0442\u044b {#prerequisites}\n-\n-\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0449\u0435 \u043d\u0435\u0442 [Docker](https://docs.docker.com/install/), \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0435\u0433\u043e.\n-\n-    :::note \"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\"\n-    [Docker](https://www.docker.com) \u2013 \u044d\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0430\u044f \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0437\u043e\u043b\u0438\u0440\u0443\u044e\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443 CatBoost \u0438 ClickHouse \u043e\u0442 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b.\n-    :::\n-\u041f\u0435\u0440\u0435\u0434 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438 CatBoost:\n-\n-**1.** \u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 [Docker-\u043e\u0431\u0440\u0430\u0437](https://hub.docker.com/r/yandex/tutorial-catboost-clickhouse) \u0438\u0437 \u0440\u0435\u0435\u0441\u0442\u0440\u0430:\n-\n-``` bash\n-$ docker pull yandex/tutorial-catboost-clickhouse\n-```\n-\n-\u0414\u0430\u043d\u043d\u044b\u0439 Docker-\u043e\u0431\u0440\u0430\u0437 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 CatBoost \u0438 ClickHouse: \u043a\u043e\u0434, \u0441\u0440\u0435\u0434\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438, \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0438 \u0444\u0430\u0439\u043b\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\n-\n-**2.** \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e Docker-\u043e\u0431\u0440\u0430\u0437 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043a\u0430\u0447\u0430\u043b\u0441\u044f:\n-\n-``` bash\n-$ docker image ls\n-REPOSITORY                            TAG                 IMAGE ID            CREATED             SIZE\n-yandex/tutorial-catboost-clickhouse   latest              622e4d17945b        22 hours ago        1.37GB\n-```\n-\n-**3.** \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u043e\u0431\u0440\u0430\u0437\u0435:\n-\n-``` bash\n-$ docker run -it -p 8888:8888 yandex/tutorial-catboost-clickhouse\n-```\n-\n-## 1. \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 {#create-table}\n-\n-\u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438:\n-\n-**1.** \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043b\u0438\u0435\u043d\u0442 ClickHouse:\n-\n-``` bash\n-$ clickhouse client\n-```\n-\n-    :::note \"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\"\n-    \u0421\u0435\u0440\u0432\u0435\u0440 ClickHouse \u0443\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0432\u043d\u0443\u0442\u0440\u0438 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430.\n-    :::\n-**2.** \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0432 ClickHouse \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b:\n-\n-``` sql\n-:) CREATE TABLE amazon_train\n-(\n-    date Date MATERIALIZED today(),\n-    ACTION UInt8,\n-    RESOURCE UInt32,\n-    MGR_ID UInt32,\n-    ROLE_ROLLUP_1 UInt32,\n-    ROLE_ROLLUP_2 UInt32,\n-    ROLE_DEPTNAME UInt32,\n-    ROLE_TITLE UInt32,\n-    ROLE_FAMILY_DESC UInt32,\n-    ROLE_FAMILY UInt32,\n-    ROLE_CODE UInt32\n-)\n-ENGINE = MergeTree ORDER BY date\n-```\n-\n-**3.** \u0412\u044b\u0439\u0434\u0438\u0442\u0435 \u0438\u0437 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 ClickHouse:\n-\n-``` sql\n-:) exit\n-```\n-\n-## 2. \u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 {#insert-data-to-table}\n-\n-\u0427\u0442\u043e\u0431\u044b \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435:\n-\n-**1.** \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443:\n-\n-``` bash\n-$ clickhouse client --host 127.0.0.1 --query 'INSERT INTO amazon_train FORMAT CSVWithNames' < ~/amazon/train.csv\n-```\n-\n-**2.** \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043b\u0438\u0435\u043d\u0442 ClickHouse:\n-\n-``` bash\n-$ clickhouse client\n-```\n-\n-**3.** \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043b\u0438\u0441\u044c:\n-\n-``` sql\n-:) SELECT count() FROM amazon_train\n-\n-SELECT count()\n-FROM amazon_train\n-\n-+-count()-+\n-|   65538 |\n-+---------+\n-```\n-\n-## 3. \u0418\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0439\u0442\u0435 CatBoost \u0432 ClickHouse {#integrate-catboost-into-clickhouse}\n-\n-    :::note \"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\"\n-    **\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0448\u0430\u0433.** Docker-\u043e\u0431\u0440\u0430\u0437 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 CatBoost \u0438 ClickHouse.\n-    :::\n-\u0427\u0442\u043e\u0431\u044b \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c CatBoost \u0432 ClickHouse:\n-\n-**1.** \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0434\u043b\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u043c\u043e\u0434\u0435\u043b\u0438.\n-\n-\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c CatBoost \u2014 \u044d\u0442\u043e \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 `libcatboostmodel.<so|dll|dylib>`. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443, \u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u0432 [\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 CatBoost](https://catboost.ai/docs/concepts/c-plus-plus-api_dynamic-c-pluplus-wrapper.html).\n-\n-**2.** \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0432 \u043b\u044e\u0431\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u043d\u043e\u0432\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 `data` \u0438 \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u0435 \u0432 \u043d\u0435\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443. Docker-\u043e\u0431\u0440\u0430\u0437 \u0443\u0436\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 `data/libcatboostmodel.so`.\n-\n-**3.** \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0432 \u043b\u044e\u0431\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u043d\u043e\u0432\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 `models`.\n-\n-**4.** \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 `models/amazon_model.xml`.\n-\n-**5.** \u041e\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0438:\n-\n-``` xml\n-<models>\n-    <model>\n-        <!-- \u0422\u0438\u043f \u043c\u043e\u0434\u0435\u043b\u0438. \u0412 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 ClickHouse \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u044c catboost. -->\n-        <type>catboost</type>\n-        <!-- \u0418\u043c\u044f \u043c\u043e\u0434\u0435\u043b\u0438. -->\n-        <name>amazon</name>\n-        <!-- \u041f\u0443\u0442\u044c \u043a \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438. -->\n-        <path>/home/catboost/tutorial/catboost_model.bin</path>\n-        <!-- \u0418\u043d\u0442\u0435\u0440\u0432\u0430\u043b \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f. -->\n-        <lifetime>0</lifetime>\n-    </model>\n-</models>\n-```\n-\n-**6.** \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e ClickHouse \u043f\u0443\u0442\u044c \u043a CatBoost \u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438:\n-\n-``` xml\n-<!-- \u0424\u0430\u0439\u043b etc/clickhouse-server/config.d/models_config.xml. -->\n-<catboost_dynamic_library_path>/home/catboost/data/libcatboostmodel.so</catboost_dynamic_library_path>\n-<models_config>/home/catboost/models/*_model.xml</models_config>\n-```\n-    :::note \"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\"\n-    \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0437\u0434\u043d\u0435\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043f\u0443\u0442\u044c \u043a \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 CatBoost \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n-    :::\n-## 4. \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0432\u044b\u0432\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0437 SQL {#run-model-inference}\n-\n-\u0414\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043b\u0438\u0435\u043d\u0442 ClickHouse `$ clickhouse client`.\n-\n-\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442:\n-\n-``` sql\n-:) SELECT\n-    modelEvaluate('amazon',\n-                RESOURCE,\n-                MGR_ID,\n-                ROLE_ROLLUP_1,\n-                ROLE_ROLLUP_2,\n-                ROLE_DEPTNAME,\n-                ROLE_TITLE,\n-                ROLE_FAMILY_DESC,\n-                ROLE_FAMILY,\n-                ROLE_CODE) > 0 AS prediction,\n-    ACTION AS target\n-FROM amazon_train\n-LIMIT 10\n-```\n-\n-    :::note \"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\"\n-    \u0424\u0443\u043d\u043a\u0446\u0438\u044f [modelEvaluate](../sql-reference/functions/other-functions.md#function-modelevaluate) \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0440\u0442\u0435\u0436\u0438 (tuple) \u0441 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c\u0438 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430\u043c\u0438 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0430\u043c \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0441 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438.\n-    :::\n-\u0421\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c:\n-\n-``` sql\n-:) SELECT\n-    modelEvaluate('amazon',\n-                RESOURCE,\n-                MGR_ID,\n-                ROLE_ROLLUP_1,\n-                ROLE_ROLLUP_2,\n-                ROLE_DEPTNAME,\n-                ROLE_TITLE,\n-                ROLE_FAMILY_DESC,\n-                ROLE_FAMILY,\n-                ROLE_CODE) AS prediction,\n-    1. / (1 + exp(-prediction)) AS probability,\n-    ACTION AS target\n-FROM amazon_train\n-LIMIT 10\n-```\n-\n-    :::note \"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\"\n-    \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044e [exp()](../sql-reference/functions/math-functions.md).\n-    :::\n-\u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043f\u043e\u0442\u0435\u0440\u044c (LogLoss) \u043d\u0430 \u0432\u0441\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435:\n-\n-``` sql\n-:) SELECT -avg(tg * log(prob) + (1 - tg) * log(1 - prob)) AS logloss\n-FROM\n-(\n-    SELECT\n-        modelEvaluate('amazon',\n-                    RESOURCE,\n-                    MGR_ID,\n-                    ROLE_ROLLUP_1,\n-                    ROLE_ROLLUP_2,\n-                    ROLE_DEPTNAME,\n-                    ROLE_TITLE,\n-                    ROLE_FAMILY_DESC,\n-                    ROLE_FAMILY,\n-                    ROLE_CODE) AS prediction,\n-        1. / (1. + exp(-prediction)) AS prob,\n-        ACTION AS tg\n-    FROM amazon_train\n-)\n-```\n-\n-    :::note \"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\"\n-    \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043f\u0440\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 [avg()](../sql-reference/aggregate-functions/reference/avg.md#agg_function-avg), [log()](../sql-reference/functions/math-functions.md).\n-    :::\n\\ No newline at end of file\ndiff --git a/docs/ru/guides/index.md b/docs/ru/guides/index.md\nindex 0b5938dfc092..882f71b57002 100644\n--- a/docs/ru/guides/index.md\n+++ b/docs/ru/guides/index.md\n@@ -7,5 +7,3 @@ sidebar_label: \"\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430\"\n # \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 {#rukovodstva}\n \n \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0435 \u043f\u043e\u0448\u0430\u0433\u043e\u0432\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043c\u043e\u0433\u0443\u0442 \u0432\u0430\u043c \u0440\u0435\u0448\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e ClickHouse.\n-\n--   [\u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 CatBoost \u0432 ClickHouse](apply-catboost-model.md)\ndiff --git a/docs/ru/sql-reference/statements/system.md b/docs/ru/sql-reference/statements/system.md\nindex c1dc03a63d1b..01c9339e52d2 100644\n--- a/docs/ru/sql-reference/statements/system.md\n+++ b/docs/ru/sql-reference/statements/system.md\n@@ -9,8 +9,6 @@ sidebar_label: SYSTEM\n -   [RELOAD EMBEDDED DICTIONARIES](#query_language-system-reload-emdedded-dictionaries)\n -   [RELOAD DICTIONARIES](#query_language-system-reload-dictionaries)\n -   [RELOAD DICTIONARY](#query_language-system-reload-dictionary)\n--   [RELOAD MODELS](#query_language-system-reload-models)\n--   [RELOAD MODEL](#query_language-system-reload-model)\n -   [RELOAD FUNCTIONS](#query_language-system-reload-functions)\n -   [RELOAD FUNCTION](#query_language-system-reload-functions)\n -   [DROP DNS CACHE](#query_language-system-drop-dns-cache)\n@@ -64,26 +62,6 @@ sidebar_label: SYSTEM\n SELECT name, status FROM system.dictionaries;\n ```\n \n-## RELOAD MODELS {#query_language-system-reload-models}\n-\n-\u041f\u0435\u0440\u0435\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 [CatBoost](../../guides/apply-catboost-model.md#applying-catboost-model-in-clickhouse), \u0435\u0441\u043b\u0438 \u0438\u0445 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0431\u044b\u043b\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430, \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n-\n-**\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441**\n-\n-```sql\n-SYSTEM RELOAD MODELS\n-```\n-\n-## RELOAD MODEL {#query_language-system-reload-model}\n-\n-\u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0435\u0440\u0435\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c [CatBoost](../../guides/apply-catboost-model.md#applying-catboost-model-in-clickhouse) `model_name`, \u0435\u0441\u043b\u0438 \u0435\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0431\u044b\u043b\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0430, \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n-\n-**\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441**\n-\n-```sql\n-SYSTEM RELOAD MODEL <model_name>\n-```\n-\n ## RELOAD FUNCTIONS {#query_language-system-reload-functions}\n \n \u041f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0432\u0441\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 [\u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438](../functions/index.md#executable-user-defined-functions) \u0438\u043b\u0438 \u043e\u0434\u043d\u0443 \u0438\u0437 \u043d\u0438\u0445 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\ndiff --git a/docs/zh/guides/apply-catboost-model.md b/docs/zh/guides/apply-catboost-model.md\ndeleted file mode 100644\nindex 861e53728751..000000000000\n--- a/docs/zh/guides/apply-catboost-model.md\n+++ /dev/null\n@@ -1,244 +0,0 @@\n----\n-slug: /zh/guides/apply-catboost-model\n-sidebar_position: 41\n-sidebar_label: \"\\u5E94\\u7528CatBoost\\u6A21\\u578B\"\n----\n-\n-# \u5728ClickHouse\u4e2d\u5e94\u7528Catboost\u6a21\u578b {#applying-catboost-model-in-clickhouse}\n-\n-[CatBoost](https://catboost.ai) \u662f\u4e00\u4e2a\u7531[Yandex](https://yandex.com/company/)\u5f00\u53d1\u7684\u5f00\u6e90\u514d\u8d39\u673a\u5668\u5b66\u4e60\u5e93\u3002\n-\n-\n-\u901a\u8fc7\u672c\u7bc7\u6587\u6863\uff0c\u60a8\u5c06\u5b66\u4f1a\u5982\u4f55\u7528SQL\u8bed\u53e5\u8c03\u7528\u5df2\u7ecf\u5b58\u653e\u5728Clickhouse\u4e2d\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u6765\u9884\u6d4b\u6570\u636e\u3002\n-\n-\n-\u4e3a\u4e86\u5728ClickHouse\u4e2d\u5e94\u7528CatBoost\u6a21\u578b\uff0c\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u6b65\u9aa4\uff1a\n-\n-1.  [\u521b\u5efa\u6570\u636e\u8868](#create-table).\n-2.  [\u5c06\u6570\u636e\u63d2\u5165\u5230\u8868\u4e2d](#insert-data-to-table).\n-3.  [\u5c06CatBoost\u96c6\u6210\u5230ClickHouse\u4e2d](#integrate-catboost-into-clickhouse) \uff08\u53ef\u8df3\u8fc7\uff09\u3002\n-4.  [\u4eceSQL\u8fd0\u884c\u6a21\u578b\u63a8\u65ad](#run-model-inference).\n-\n-\u6709\u5173\u8bad\u7ec3CatBoost\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 [\u8bad\u7ec3\u548c\u6a21\u578b\u5e94\u7528](https://catboost.ai/docs/features/training.html#training).\n-\n-\u60a8\u53ef\u4ee5\u901a\u8fc7[RELOAD MODEL](https://clickhouse.com/docs/en/sql-reference/statements/system/#query_language-system-reload-model)\u4e0e[RELOAD MODELS](https://clickhouse.com/docs/en/sql-reference/statements/system/#query_language-system-reload-models)\u8bed\u53e5\u6765\u91cd\u8f7dCatBoost\u6a21\u578b\u3002\n-\n-## \u5148\u51b3\u6761\u4ef6 {#prerequisites}\n-\n-\u8bf7\u5148\u5b89\u88c5 [Docker](https://docs.docker.com/install/)\u3002\n-\n-!!! note \"\u6ce8\"\n-    [Docker](https://www.docker.com) \u662f\u4e00\u4e2a\u8f6f\u4ef6\u5e73\u53f0\uff0c\u7528\u6237\u53ef\u4ee5\u7528Docker\u6765\u521b\u5efa\u72ec\u7acb\u4e8e\u5df2\u6709\u7cfb\u7edf\u5e76\u96c6\u6210\u4e86CatBoost\u548cClickHouse\u7684\u5bb9\u5668\u3002\n-\n-\u5728\u5e94\u7528CatBoost\u6a21\u578b\u4e4b\u524d:\n-\n-**1.** \u4ece\u5bb9\u5668\u4ed3\u5e93\u62c9\u53d6\u793a\u4f8bdocker\u955c\u50cf (https://hub.docker.com/r/yandex/tutorial-catboost-clickhouse) :\n-\n-``` bash\n-$ docker pull yandex/tutorial-catboost-clickhouse\n-```\n-\n-\u6b64\u793a\u4f8bDocker\u955c\u50cf\u5305\u542b\u8fd0\u884cCatBoost\u548cClickHouse\u6240\u9700\u7684\u6240\u6709\u5185\u5bb9\uff1a\u4ee3\u7801\u3001\u8fd0\u884c\u65f6\u3001\u5e93\u3001\u73af\u5883\u53d8\u91cf\u548c\u914d\u7f6e\u6587\u4ef6\u3002\n-\n-**2.** \u786e\u4fdd\u5df2\u6210\u529f\u62c9\u53d6Docker\u955c\u50cf:\n-\n-``` bash\n-$ docker image ls\n-REPOSITORY                            TAG                 IMAGE ID            CREATED             SIZE\n-yandex/tutorial-catboost-clickhouse   latest              622e4d17945b        22 hours ago        1.37GB\n-```\n-\n-**3.** \u57fa\u4e8e\u6b64\u955c\u50cf\u542f\u52a8\u4e00\u4e2aDocker\u5bb9\u5668:\n-\n-``` bash\n-$ docker run -it -p 8888:8888 yandex/tutorial-catboost-clickhouse\n-```\n-\n-## 1. \u521b\u5efa\u6570\u636e\u8868 {#create-table}\n-\n-\u4e3a\u8bad\u7ec3\u6837\u672c\u521b\u5efaClickHouse\u8868:\n-\n-**1.** \u5728\u4ea4\u4e92\u6a21\u5f0f\u4e0b\u542f\u52a8ClickHouse\u63a7\u5236\u53f0\u5ba2\u6237\u7aef:\n-\n-``` bash\n-$ clickhouse client\n-```\n-\n-!!! note \"\u6ce8\"\n-    ClickHouse\u670d\u52a1\u5668\u5df2\u7ecf\u5728Docker\u5bb9\u5668\u5185\u8fd0\u884c\u3002\n-\n-**2.** \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efa\u8868:\n-\n-``` sql\n-:) CREATE TABLE amazon_train\n-(\n-    date Date MATERIALIZED today(),\n-    ACTION UInt8,\n-    RESOURCE UInt32,\n-    MGR_ID UInt32,\n-    ROLE_ROLLUP_1 UInt32,\n-    ROLE_ROLLUP_2 UInt32,\n-    ROLE_DEPTNAME UInt32,\n-    ROLE_TITLE UInt32,\n-    ROLE_FAMILY_DESC UInt32,\n-    ROLE_FAMILY UInt32,\n-    ROLE_CODE UInt32\n-)\n-ENGINE = MergeTree ORDER BY date\n-```\n-\n-**3.** \u4eceClickHouse\u63a7\u5236\u53f0\u5ba2\u6237\u7aef\u9000\u51fa:\n-\n-``` sql\n-:) exit\n-```\n-\n-## 2. \u5c06\u6570\u636e\u63d2\u5165\u5230\u8868\u4e2d {#insert-data-to-table}\n-\n-\u63d2\u5165\u6570\u636e:\n-\n-**1.** \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4:\n-\n-``` bash\n-$ clickhouse client --host 127.0.0.1 --query 'INSERT INTO amazon_train FORMAT CSVWithNames' < ~/amazon/train.csv\n-```\n-\n-**2.** \u5728\u4ea4\u4e92\u6a21\u5f0f\u4e0b\u542f\u52a8ClickHouse\u63a7\u5236\u53f0\u5ba2\u6237\u7aef:\n-\n-``` bash\n-$ clickhouse client\n-```\n-\n-**3.** \u786e\u4fdd\u6570\u636e\u5df2\u4e0a\u4f20:\n-\n-``` sql\n-:) SELECT count() FROM amazon_train\n-\n-SELECT count()\n-FROM amazon_train\n-\n-+-count()-+\n-|   65538 |\n-+-------+\n-```\n-\n-## 3. \u5c06CatBoost\u96c6\u6210\u5230ClickHouse\u4e2d {#integrate-catboost-into-clickhouse}\n-\n-!!! note \"\u6ce8\"\n-    **\u53ef\u8df3\u8fc7\u3002** \u793a\u4f8bDocker\u6620\u50cf\u5df2\u7ecf\u5305\u542b\u4e86\u8fd0\u884cCatBoost\u548cClickHouse\u6240\u9700\u7684\u6240\u6709\u5185\u5bb9\u3002\n-\n-\u4e3a\u4e86\u5c06CatBoost\u96c6\u6210\u8fdbClickHouse\uff0c\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u6b65\u9aa4\uff1a\n-\n-**1.** \u6784\u5efa\u8bc4\u4f30\u5e93\u3002\n-\n-\u8bc4\u4f30CatBoost\u6a21\u578b\u7684\u6700\u5feb\u65b9\u6cd5\u662f\u7f16\u8bd1 `libcatboostmodel.<so|dll|dylib>` \u5e93\u6587\u4ef6.\n-\n-\u6709\u5173\u5982\u4f55\u6784\u5efa\u5e93\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 [CatBoost\u6587\u4ef6](https://catboost.ai/docs/concepts/c-plus-plus-api_dynamic-c-pluplus-wrapper.html).\n-\n-**2.** \u521b\u5efa\u4e00\u4e2a\u65b0\u76ee\u5f55\uff08\u4f4d\u7f6e\u4e0e\u540d\u79f0\u53ef\u968f\u610f\u6307\u5b9a\uff09, \u5982 `data` \u5e76\u5c06\u521b\u5efa\u7684\u5e93\u6587\u4ef6\u653e\u5165\u5176\u4e2d\u3002 \u793a\u4f8bDocker\u955c\u50cf\u5df2\u7ecf\u5305\u542b\u4e86\u5e93 `data/libcatboostmodel.so`.\n-\n-**3.** \u521b\u5efa\u4e00\u4e2a\u65b0\u76ee\u5f55\u6765\u653e\u914d\u7f6e\u6a21\u578b, \u5982 `models`.\n-\n-**4.** \u521b\u5efa\u4e00\u4e2a\u6a21\u578b\u914d\u7f6e\u6587\u4ef6\uff0c\u5982 `models/amazon_model.xml`.\n-\n-**5.** \u4fee\u6539\u6a21\u578b\u914d\u7f6e:\n-\n-``` xml\n-<models>\n-    <model>\n-        <!-- Model type. Now catboost only. -->\n-        <type>catboost</type>\n-        <!-- Model name. -->\n-        <name>amazon</name>\n-        <!-- Path to trained model. -->\n-        <path>/home/catboost/tutorial/catboost_model.bin</path>\n-        <!-- Update interval. -->\n-        <lifetime>0</lifetime>\n-    </model>\n-</models>\n-```\n-\n-**6.** \u5c06CatBoost\u5e93\u6587\u4ef6\u7684\u8def\u5f84\u548c\u6a21\u578b\u914d\u7f6e\u6dfb\u52a0\u5230ClickHouse\u914d\u7f6e:\n-\n-``` xml\n-<!-- File etc/clickhouse-server/config.d/models_config.xml. -->\n-<catboost_dynamic_library_path>/home/catboost/data/libcatboostmodel.so</catboost_dynamic_library_path>\n-<models_config>/home/catboost/models/*_model.xml</models_config>\n-```\n-\n-## 4. \u4f7f\u7528SQL\u8c03\u7528\u9884\u6d4b\u6a21\u578b {#run-model-inference}\n-\n-\u4e3a\u4e86\u6d4b\u8bd5\u6a21\u578b\u662f\u5426\u6b63\u5e38\uff0c\u53ef\u4ee5\u4f7f\u7528ClickHouse\u5ba2\u6237\u7aef `$ clickhouse client`.\n-\n-\u8ba9\u6211\u4eec\u786e\u4fdd\u6a21\u578b\u80fd\u6b63\u5e38\u5de5\u4f5c:\n-\n-``` sql\n-:) SELECT\n-    modelEvaluate('amazon',\n-                RESOURCE,\n-                MGR_ID,\n-                ROLE_ROLLUP_1,\n-                ROLE_ROLLUP_2,\n-                ROLE_DEPTNAME,\n-                ROLE_TITLE,\n-                ROLE_FAMILY_DESC,\n-                ROLE_FAMILY,\n-                ROLE_CODE) > 0 AS prediction,\n-    ACTION AS target\n-FROM amazon_train\n-LIMIT 10\n-```\n-\n-!!! note \"\u6ce8\"\n-    \u51fd\u6570 [modelEvaluate](../sql-reference/functions/other-functions.md#function-modelevaluate) \u4f1a\u5bf9\u591a\u7c7b\u522b\u6a21\u578b\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e00\u7c7b\u522b\u7684\u539f\u59cb\u9884\u6d4b\u503c\u3002\n-\n-\u6267\u884c\u9884\u6d4b:\n-\n-``` sql\n-:) SELECT\n-    modelEvaluate('amazon',\n-                RESOURCE,\n-                MGR_ID,\n-                ROLE_ROLLUP_1,\n-                ROLE_ROLLUP_2,\n-                ROLE_DEPTNAME,\n-                ROLE_TITLE,\n-                ROLE_FAMILY_DESC,\n-                ROLE_FAMILY,\n-                ROLE_CODE) AS prediction,\n-    1. / (1 + exp(-prediction)) AS probability,\n-    ACTION AS target\n-FROM amazon_train\n-LIMIT 10\n-```\n-\n-!!! note \"\u6ce8\"\n-    \u67e5\u770b\u51fd\u6570\u8bf4\u660e [exp()](../sql-reference/functions/math-functions.md) \u3002\n-\n-\u8ba9\u6211\u4eec\u8ba1\u7b97\u6837\u672c\u7684LogLoss:\n-\n-``` sql\n-:) SELECT -avg(tg * log(prob) + (1 - tg) * log(1 - prob)) AS logloss\n-FROM\n-(\n-    SELECT\n-        modelEvaluate('amazon',\n-                    RESOURCE,\n-                    MGR_ID,\n-                    ROLE_ROLLUP_1,\n-                    ROLE_ROLLUP_2,\n-                    ROLE_DEPTNAME,\n-                    ROLE_TITLE,\n-                    ROLE_FAMILY_DESC,\n-                    ROLE_FAMILY,\n-                    ROLE_CODE) AS prediction,\n-        1. / (1. + exp(-prediction)) AS prob,\n-        ACTION AS tg\n-    FROM amazon_train\n-)\n-```\n-\n-!!! note \"\u6ce8\"\n-    \u67e5\u770b\u51fd\u6570\u8bf4\u660e [avg()](../sql-reference/aggregate-functions/reference/avg.md#agg_function-avg) \u548c [log()](../sql-reference/functions/math-functions.md) \u3002\n-\n-[\u539f\u59cb\u6587\u7ae0](https://clickhouse.com/docs/en/guides/apply_catboost_model/) <!--hide-->\ndiff --git a/docs/zh/guides/index.md b/docs/zh/guides/index.md\nindex 5e535ea57364..00c4ae4def1d 100644\n--- a/docs/zh/guides/index.md\n+++ b/docs/zh/guides/index.md\n@@ -9,6 +9,5 @@ sidebar_label: ClickHouse\u6307\u5357\n \u5217\u51fa\u4e86\u5982\u4f55\u4f7f\u7528 Clickhouse \u89e3\u51b3\u5404\u79cd\u4efb\u52a1\u7684\u8be6\u7ec6\u8bf4\u660e\uff1a\n \n -   [\u5173\u4e8e\u7b80\u5355\u96c6\u7fa4\u8bbe\u7f6e\u7684\u6559\u7a0b](../getting-started/tutorial.md)\n--   [\u5728ClickHouse\u4e2d\u5e94\u7528CatBoost\u6a21\u578b](apply-catboost-model.md)\n \n [\u539f\u59cb\u6587\u7ae0](https://clickhouse.com/docs/en/guides/) <!--hide-->\ndiff --git a/programs/CMakeLists.txt b/programs/CMakeLists.txt\nindex 3c0c0781de68..9cf7cb2b624b 100644\n--- a/programs/CMakeLists.txt\n+++ b/programs/CMakeLists.txt\n@@ -54,7 +54,7 @@ else ()\n endif ()\n \n if (NOT USE_MUSL)\n-    option (ENABLE_CLICKHOUSE_LIBRARY_BRIDGE \"HTTP-server working like a proxy to Library dictionary source\" ${ENABLE_CLICKHOUSE_ALL})\n+    option (ENABLE_CLICKHOUSE_LIBRARY_BRIDGE \"HTTP-server working like a proxy to external dynamically loaded libraries\" ${ENABLE_CLICKHOUSE_ALL})\n endif ()\n \n # https://presentations.clickhouse.com/matemarketing_2020/\ndiff --git a/programs/library-bridge/CMakeLists.txt b/programs/library-bridge/CMakeLists.txt\nindex 40cabacded40..c5ef924b1809 100644\n--- a/programs/library-bridge/CMakeLists.txt\n+++ b/programs/library-bridge/CMakeLists.txt\n@@ -1,6 +1,8 @@\n include(${ClickHouse_SOURCE_DIR}/cmake/split_debug_symbols.cmake)\n \n set (CLICKHOUSE_LIBRARY_BRIDGE_SOURCES\n+    CatBoostLibraryHandler.cpp\n+    CatBoostLibraryHandlerFactory.cpp\n     ExternalDictionaryLibraryAPI.cpp\n     ExternalDictionaryLibraryHandler.cpp\n     ExternalDictionaryLibraryHandlerFactory.cpp\ndiff --git a/programs/library-bridge/CatBoostLibraryAPI.h b/programs/library-bridge/CatBoostLibraryAPI.h\nnew file mode 100644\nindex 000000000000..9eaa0d17ff75\n--- /dev/null\n+++ b/programs/library-bridge/CatBoostLibraryAPI.h\n@@ -0,0 +1,49 @@\n+#pragma once\n+\n+#include <cstdint>\n+#include <cstddef>\n+\n+// Function pointer typedefs and names of libcatboost.so functions used by ClickHouse\n+struct CatBoostLibraryAPI\n+{\n+    using ModelCalcerHandle = void;\n+\n+    using ModelCalcerCreateFunc = ModelCalcerHandle * (*)();\n+    static constexpr const char * ModelCalcerCreateName = \"ModelCalcerCreate\";\n+\n+    using ModelCalcerDeleteFunc = void (*)(ModelCalcerHandle *);\n+    static constexpr const char * ModelCalcerDeleteName = \"ModelCalcerDelete\";\n+\n+    using GetErrorStringFunc = const char * (*)();\n+    static constexpr const char * GetErrorStringName = \"GetErrorString\";\n+\n+    using LoadFullModelFromFileFunc = bool (*)(ModelCalcerHandle *, const char *);\n+    static constexpr const char * LoadFullModelFromFileName = \"LoadFullModelFromFile\";\n+\n+    using CalcModelPredictionFlatFunc = bool (*)(ModelCalcerHandle *, size_t, const float **, size_t, double *, size_t);\n+    static constexpr const char * CalcModelPredictionFlatName = \"CalcModelPredictionFlat\";\n+\n+    using CalcModelPredictionFunc = bool (*)(ModelCalcerHandle *, size_t, const float **, size_t, const char ***, size_t, double *, size_t);\n+    static constexpr const char * CalcModelPredictionName = \"CalcModelPrediction\";\n+\n+    using CalcModelPredictionWithHashedCatFeaturesFunc = bool (*)(ModelCalcerHandle *, size_t, const float **, size_t, const int **, size_t, double *, size_t);\n+    static constexpr const char * CalcModelPredictionWithHashedCatFeaturesName = \"CalcModelPredictionWithHashedCatFeatures\";\n+\n+    using GetStringCatFeatureHashFunc = int (*)(const char *, size_t);\n+    static constexpr const char * GetStringCatFeatureHashName = \"GetStringCatFeatureHash\";\n+\n+    using GetIntegerCatFeatureHashFunc = int (*)(uint64_t);\n+    static constexpr const char * GetIntegerCatFeatureHashName = \"GetIntegerCatFeatureHash\";\n+\n+    using GetFloatFeaturesCountFunc = size_t (*)(ModelCalcerHandle *);\n+    static constexpr const char * GetFloatFeaturesCountName = \"GetFloatFeaturesCount\";\n+\n+    using GetCatFeaturesCountFunc = size_t (*)(ModelCalcerHandle *);\n+    static constexpr const char * GetCatFeaturesCountName = \"GetCatFeaturesCount\";\n+\n+    using GetTreeCountFunc = size_t (*)(ModelCalcerHandle *);\n+    static constexpr const char * GetTreeCountName = \"GetTreeCount\";\n+\n+    using GetDimensionsCountFunc = size_t (*)(ModelCalcerHandle *);\n+    static constexpr const char * GetDimensionsCountName = \"GetDimensionsCount\";\n+};\ndiff --git a/programs/library-bridge/CatBoostLibraryHandler.cpp b/programs/library-bridge/CatBoostLibraryHandler.cpp\nnew file mode 100644\nindex 000000000000..18e56836f96e\n--- /dev/null\n+++ b/programs/library-bridge/CatBoostLibraryHandler.cpp\n@@ -0,0 +1,376 @@\n+#include \"CatBoostLibraryHandler.h\"\n+\n+#include <Columns/ColumnTuple.h>\n+#include <Common/FieldVisitorConvertToNumber.h>\n+\n+namespace DB\n+{\n+\n+namespace ErrorCodes\n+{\n+    extern const int BAD_ARGUMENTS;\n+    extern const int CANNOT_APPLY_CATBOOST_MODEL;\n+    extern const int CANNOT_LOAD_CATBOOST_MODEL;\n+    extern const int LOGICAL_ERROR;\n+}\n+\n+CatBoostLibraryHandler::APIHolder::APIHolder(SharedLibrary & lib)\n+{\n+    ModelCalcerCreate = lib.get<CatBoostLibraryAPI::ModelCalcerCreateFunc>(CatBoostLibraryAPI::ModelCalcerCreateName);\n+    ModelCalcerDelete = lib.get<CatBoostLibraryAPI::ModelCalcerDeleteFunc>(CatBoostLibraryAPI::ModelCalcerDeleteName);\n+    GetErrorString = lib.get<CatBoostLibraryAPI::GetErrorStringFunc>(CatBoostLibraryAPI::GetErrorStringName);\n+    LoadFullModelFromFile = lib.get<CatBoostLibraryAPI::LoadFullModelFromFileFunc>(CatBoostLibraryAPI::LoadFullModelFromFileName);\n+    CalcModelPredictionFlat = lib.get<CatBoostLibraryAPI::CalcModelPredictionFlatFunc>(CatBoostLibraryAPI::CalcModelPredictionFlatName);\n+    CalcModelPrediction = lib.get<CatBoostLibraryAPI::CalcModelPredictionFunc>(CatBoostLibraryAPI::CalcModelPredictionName);\n+    CalcModelPredictionWithHashedCatFeatures = lib.get<CatBoostLibraryAPI::CalcModelPredictionWithHashedCatFeaturesFunc>(CatBoostLibraryAPI::CalcModelPredictionWithHashedCatFeaturesName);\n+    GetStringCatFeatureHash = lib.get<CatBoostLibraryAPI::GetStringCatFeatureHashFunc>(CatBoostLibraryAPI::GetStringCatFeatureHashName);\n+    GetIntegerCatFeatureHash = lib.get<CatBoostLibraryAPI::GetIntegerCatFeatureHashFunc>(CatBoostLibraryAPI::GetIntegerCatFeatureHashName);\n+    GetFloatFeaturesCount = lib.get<CatBoostLibraryAPI::GetFloatFeaturesCountFunc>(CatBoostLibraryAPI::GetFloatFeaturesCountName);\n+    GetCatFeaturesCount = lib.get<CatBoostLibraryAPI::GetCatFeaturesCountFunc>(CatBoostLibraryAPI::GetCatFeaturesCountName);\n+    GetTreeCount = lib.tryGet<CatBoostLibraryAPI::GetTreeCountFunc>(CatBoostLibraryAPI::GetTreeCountName);\n+    GetDimensionsCount = lib.tryGet<CatBoostLibraryAPI::GetDimensionsCountFunc>(CatBoostLibraryAPI::GetDimensionsCountName);\n+}\n+\n+CatBoostLibraryHandler::CatBoostLibraryHandler(\n+    const std::string & library_path,\n+    const std::string & model_path)\n+    : library(std::make_shared<SharedLibrary>(library_path))\n+    , api(*library)\n+{\n+    model_calcer_handle = api.ModelCalcerCreate();\n+\n+    if (!api.LoadFullModelFromFile(model_calcer_handle, model_path.c_str()))\n+    {\n+        throw Exception(ErrorCodes::CANNOT_LOAD_CATBOOST_MODEL,\n+                \"Cannot load CatBoost model: {}\", api.GetErrorString());\n+    }\n+\n+    float_features_count = api.GetFloatFeaturesCount(model_calcer_handle);\n+    cat_features_count = api.GetCatFeaturesCount(model_calcer_handle);\n+\n+    tree_count = 1;\n+    if (api.GetDimensionsCount)\n+        tree_count = api.GetDimensionsCount(model_calcer_handle);\n+}\n+\n+CatBoostLibraryHandler::~CatBoostLibraryHandler()\n+{\n+    api.ModelCalcerDelete(model_calcer_handle);\n+}\n+\n+namespace\n+{\n+\n+/// Buffer should be allocated with features_count * column->size() elements.\n+/// Place column elements in positions buffer[0], buffer[features_count], ... , buffer[size * features_count]\n+template <typename T>\n+void placeColumnAsNumber(const IColumn * column, T * buffer, size_t features_count)\n+{\n+    size_t size = column->size();\n+    FieldVisitorConvertToNumber<T> visitor;\n+    for (size_t i = 0; i < size; ++i)\n+    {\n+        /// TODO: Replace with column visitor.\n+        Field field;\n+        column->get(i, field);\n+        *buffer = applyVisitor(visitor, field);\n+        buffer += features_count;\n+    }\n+}\n+\n+/// Buffer should be allocated with features_count * column->size() elements.\n+/// Place string pointers in positions buffer[0], buffer[features_count], ... , buffer[size * features_count]\n+void placeStringColumn(const ColumnString & column, const char ** buffer, size_t features_count)\n+{\n+    size_t size = column.size();\n+    for (size_t i = 0; i < size; ++i)\n+    {\n+        *buffer = const_cast<char *>(column.getDataAtWithTerminatingZero(i).data);\n+        buffer += features_count;\n+    }\n+}\n+\n+/// Buffer should be allocated with features_count * column->size() elements.\n+/// Place string pointers in positions buffer[0], buffer[features_count], ... , buffer[size * features_count]\n+/// Returns PODArray which holds data (because ColumnFixedString doesn't store terminating zero).\n+PODArray<char> placeFixedStringColumn(const ColumnFixedString & column, const char ** buffer, size_t features_count)\n+{\n+    size_t size = column.size();\n+    size_t str_size = column.getN();\n+    PODArray<char> data(size * (str_size + 1));\n+    char * data_ptr = data.data();\n+\n+    for (size_t i = 0; i < size; ++i)\n+    {\n+        auto ref = column.getDataAt(i);\n+        memcpy(data_ptr, ref.data, ref.size);\n+        data_ptr[ref.size] = 0;\n+        *buffer = data_ptr;\n+        data_ptr += ref.size + 1;\n+        buffer += features_count;\n+    }\n+\n+    return data;\n+}\n+\n+/// Place columns into buffer, returns column which holds placed data. Buffer should contains column->size() values.\n+template <typename T>\n+ColumnPtr placeNumericColumns(const ColumnRawPtrs & columns, size_t offset, size_t size, const T** buffer)\n+{\n+    if (size == 0)\n+        return nullptr;\n+\n+    size_t column_size = columns[offset]->size();\n+    auto data_column = ColumnVector<T>::create(size * column_size);\n+    T * data = data_column->getData().data();\n+    for (size_t i = 0; i < size; ++i)\n+    {\n+        const auto * column = columns[offset + i];\n+        if (column->isNumeric())\n+            placeColumnAsNumber(column, data + i, size);\n+    }\n+\n+    for (size_t i = 0; i < column_size; ++i)\n+    {\n+        *buffer = data;\n+        ++buffer;\n+        data += size;\n+    }\n+\n+    return data_column;\n+}\n+\n+/// Place columns into buffer, returns data which was used for fixed string columns.\n+/// Buffer should contains column->size() values, each value contains size strings.\n+std::vector<PODArray<char>> placeStringColumns(const ColumnRawPtrs & columns, size_t offset, size_t size, const char ** buffer)\n+{\n+    if (size == 0)\n+        return {};\n+\n+    std::vector<PODArray<char>> data;\n+    for (size_t i = 0; i < size; ++i)\n+    {\n+        const auto * column = columns[offset + i];\n+        if (const auto * column_string = typeid_cast<const ColumnString *>(column))\n+            placeStringColumn(*column_string, buffer + i, size);\n+        else if (const auto * column_fixed_string = typeid_cast<const ColumnFixedString *>(column))\n+            data.push_back(placeFixedStringColumn(*column_fixed_string, buffer + i, size));\n+        else\n+            throw Exception(\"Cannot place string column.\", ErrorCodes::LOGICAL_ERROR);\n+    }\n+\n+    return data;\n+}\n+\n+/// buffer[column_size * cat_features_count] -> char * => cat_features[column_size][cat_features_count] -> char *\n+void fillCatFeaturesBuffer(\n+    const char *** cat_features, const char ** buffer,\n+    size_t column_size, size_t cat_features_count)\n+{\n+    for (size_t i = 0; i < column_size; ++i)\n+    {\n+        *cat_features = buffer;\n+        ++cat_features;\n+        buffer += cat_features_count;\n+    }\n+}\n+\n+/// Calc hash for string cat feature at ps positions.\n+template <typename Column>\n+void calcStringHashes(const Column * column, size_t ps, const int ** buffer, const CatBoostLibraryHandler::APIHolder & api)\n+{\n+    size_t column_size = column->size();\n+    for (size_t j = 0; j < column_size; ++j)\n+    {\n+        auto ref = column->getDataAt(j);\n+        const_cast<int *>(*buffer)[ps] = api.GetStringCatFeatureHash(ref.data, ref.size);\n+        ++buffer;\n+    }\n+}\n+\n+/// Calc hash for int cat feature at ps position. Buffer at positions ps should contains unhashed values.\n+void calcIntHashes(size_t column_size, size_t ps, const int ** buffer, const CatBoostLibraryHandler::APIHolder & api)\n+{\n+    for (size_t j = 0; j < column_size; ++j)\n+    {\n+        const_cast<int *>(*buffer)[ps] = api.GetIntegerCatFeatureHash((*buffer)[ps]);\n+        ++buffer;\n+    }\n+}\n+\n+/// buffer contains column->size() rows and size columns.\n+/// For int cat features calc hash inplace.\n+/// For string cat features calc hash from column rows.\n+void calcHashes(const ColumnRawPtrs & columns, size_t offset, size_t size, const int ** buffer, const CatBoostLibraryHandler::APIHolder & api)\n+{\n+    if (size == 0)\n+        return;\n+    size_t column_size = columns[offset]->size();\n+\n+    std::vector<PODArray<char>> data;\n+    for (size_t i = 0; i < size; ++i)\n+    {\n+        const auto * column = columns[offset + i];\n+        if (const auto * column_string = typeid_cast<const ColumnString *>(column))\n+            calcStringHashes(column_string, i, buffer, api);\n+        else if (const auto * column_fixed_string = typeid_cast<const ColumnFixedString *>(column))\n+            calcStringHashes(column_fixed_string, i, buffer, api);\n+        else\n+            calcIntHashes(column_size, i, buffer, api);\n+    }\n+}\n+\n+}\n+\n+/// Convert values to row-oriented format and call evaluation function from CatBoost wrapper api.\n+///  * CalcModelPredictionFlat if no cat features\n+///  * CalcModelPrediction if all cat features are strings\n+///  * CalcModelPredictionWithHashedCatFeatures if has int cat features.\n+ColumnFloat64::MutablePtr CatBoostLibraryHandler::evalImpl(\n+    const ColumnRawPtrs & columns,\n+    bool cat_features_are_strings) const\n+{\n+    std::string error_msg = \"Error occurred while applying CatBoost model: \";\n+    size_t column_size = columns.front()->size();\n+\n+    auto result = ColumnFloat64::create(column_size * tree_count);\n+    auto * result_buf = result->getData().data();\n+\n+    if (!column_size)\n+        return result;\n+\n+    /// Prepare float features.\n+    PODArray<const float *> float_features(column_size);\n+    auto * float_features_buf = float_features.data();\n+    /// Store all float data into single column. float_features is a list of pointers to it.\n+    auto float_features_col = placeNumericColumns<float>(columns, 0, float_features_count, float_features_buf);\n+\n+    if (cat_features_count == 0)\n+    {\n+        if (!api.CalcModelPredictionFlat(model_calcer_handle, column_size,\n+                                          float_features_buf, float_features_count,\n+                                          result_buf, column_size * tree_count))\n+        {\n+\n+            throw Exception(error_msg + api.GetErrorString(), ErrorCodes::CANNOT_APPLY_CATBOOST_MODEL);\n+        }\n+        return result;\n+    }\n+\n+    /// Prepare cat features.\n+    if (cat_features_are_strings)\n+    {\n+        /// cat_features_holder stores pointers to ColumnString data or fixed_strings_data.\n+        PODArray<const char *> cat_features_holder(cat_features_count * column_size);\n+        PODArray<const char **> cat_features(column_size);\n+        auto * cat_features_buf = cat_features.data();\n+\n+        fillCatFeaturesBuffer(cat_features_buf, cat_features_holder.data(), column_size, cat_features_count);\n+        /// Fixed strings are stored without termination zero, so have to copy data into fixed_strings_data.\n+        auto fixed_strings_data = placeStringColumns(columns, float_features_count,\n+                                                     cat_features_count, cat_features_holder.data());\n+\n+        if (!api.CalcModelPrediction(model_calcer_handle, column_size,\n+                                      float_features_buf, float_features_count,\n+                                      cat_features_buf, cat_features_count,\n+                                      result_buf, column_size * tree_count))\n+        {\n+            throw Exception(error_msg + api.GetErrorString(), ErrorCodes::CANNOT_APPLY_CATBOOST_MODEL);\n+        }\n+    }\n+    else\n+    {\n+        PODArray<const int *> cat_features(column_size);\n+        auto * cat_features_buf = cat_features.data();\n+        auto cat_features_col = placeNumericColumns<int>(columns, float_features_count,\n+                                                         cat_features_count, cat_features_buf);\n+        calcHashes(columns, float_features_count, cat_features_count, cat_features_buf, api);\n+        if (!api.CalcModelPredictionWithHashedCatFeatures(\n+                model_calcer_handle, column_size,\n+                float_features_buf, float_features_count,\n+                cat_features_buf, cat_features_count,\n+                result_buf, column_size * tree_count))\n+        {\n+            throw Exception(error_msg + api.GetErrorString(), ErrorCodes::CANNOT_APPLY_CATBOOST_MODEL);\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+size_t CatBoostLibraryHandler::getTreeCount() const\n+{\n+    std::lock_guard lock(mutex);\n+    return tree_count;\n+}\n+\n+ColumnPtr CatBoostLibraryHandler::evaluate(const ColumnRawPtrs & columns) const\n+{\n+    std::lock_guard lock(mutex);\n+\n+    if (columns.empty())\n+        throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Got empty columns list for CatBoost model.\");\n+\n+    if (columns.size() != float_features_count + cat_features_count)\n+        throw Exception(ErrorCodes::BAD_ARGUMENTS,\n+            \"Number of columns is different with number of features: columns size {} float features size {} + cat features size {}\",\n+            columns.size(),\n+            float_features_count,\n+            cat_features_count);\n+\n+    for (size_t i = 0; i < float_features_count; ++i)\n+    {\n+        if (!columns[i]->isNumeric())\n+        {\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Column {} should be numeric to make float feature.\", i);\n+        }\n+    }\n+\n+    bool cat_features_are_strings = true;\n+    for (size_t i = float_features_count; i < float_features_count + cat_features_count; ++i)\n+    {\n+        const auto * column = columns[i];\n+        if (column->isNumeric())\n+        {\n+            cat_features_are_strings = false;\n+        }\n+        else if (!(typeid_cast<const ColumnString *>(column)\n+                   || typeid_cast<const ColumnFixedString *>(column)))\n+        {\n+            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Column {} should be numeric or string.\", i);\n+        }\n+    }\n+\n+    auto result = evalImpl(columns, cat_features_are_strings);\n+\n+    if (tree_count == 1)\n+        return result;\n+\n+    size_t column_size = columns.front()->size();\n+    auto * result_buf = result->getData().data();\n+\n+    /// Multiple trees case. Copy data to several columns.\n+    MutableColumns mutable_columns(tree_count);\n+    std::vector<Float64 *> column_ptrs(tree_count);\n+    for (size_t i = 0; i < tree_count; ++i)\n+    {\n+        auto col = ColumnFloat64::create(column_size);\n+        column_ptrs[i] = col->getData().data();\n+        mutable_columns[i] = std::move(col);\n+    }\n+\n+    Float64 * data = result_buf;\n+    for (size_t row = 0; row < column_size; ++row)\n+    {\n+        for (size_t i = 0; i < tree_count; ++i)\n+        {\n+            *column_ptrs[i] = *data;\n+            ++column_ptrs[i];\n+            ++data;\n+        }\n+    }\n+\n+    return ColumnTuple::create(std::move(mutable_columns));\n+}\n+\n+}\ndiff --git a/programs/library-bridge/CatBoostLibraryHandler.h b/programs/library-bridge/CatBoostLibraryHandler.h\nnew file mode 100644\nindex 000000000000..306b16c48050\n--- /dev/null\n+++ b/programs/library-bridge/CatBoostLibraryHandler.h\n@@ -0,0 +1,71 @@\n+#pragma once\n+\n+#include \"CatBoostLibraryAPI.h\"\n+\n+#include <Columns/ColumnFixedString.h>\n+#include <Columns/ColumnString.h>\n+#include <Columns/ColumnVector.h>\n+#include <Columns/ColumnsNumber.h>\n+#include <Columns/IColumn.h>\n+#include <Common/SharedLibrary.h>\n+#include <base/defines.h>\n+\n+#include <mutex>\n+\n+namespace DB\n+{\n+\n+/// Abstracts access to the CatBoost shared library.\n+class CatBoostLibraryHandler\n+{\n+public:\n+    /// Holds pointers to CatBoost library functions\n+    struct APIHolder\n+    {\n+        explicit APIHolder(SharedLibrary & lib);\n+\n+        // NOLINTBEGIN(readability-identifier-naming)\n+        CatBoostLibraryAPI::ModelCalcerCreateFunc ModelCalcerCreate;\n+        CatBoostLibraryAPI::ModelCalcerDeleteFunc ModelCalcerDelete;\n+        CatBoostLibraryAPI::GetErrorStringFunc GetErrorString;\n+        CatBoostLibraryAPI::LoadFullModelFromFileFunc LoadFullModelFromFile;\n+        CatBoostLibraryAPI::CalcModelPredictionFlatFunc CalcModelPredictionFlat;\n+        CatBoostLibraryAPI::CalcModelPredictionFunc CalcModelPrediction;\n+        CatBoostLibraryAPI::CalcModelPredictionWithHashedCatFeaturesFunc CalcModelPredictionWithHashedCatFeatures;\n+        CatBoostLibraryAPI::GetStringCatFeatureHashFunc GetStringCatFeatureHash;\n+        CatBoostLibraryAPI::GetIntegerCatFeatureHashFunc GetIntegerCatFeatureHash;\n+        CatBoostLibraryAPI::GetFloatFeaturesCountFunc GetFloatFeaturesCount;\n+        CatBoostLibraryAPI::GetCatFeaturesCountFunc GetCatFeaturesCount;\n+        CatBoostLibraryAPI::GetTreeCountFunc GetTreeCount;\n+        CatBoostLibraryAPI::GetDimensionsCountFunc GetDimensionsCount;\n+        // NOLINTEND(readability-identifier-naming)\n+    };\n+\n+    CatBoostLibraryHandler(\n+        const std::string & library_path,\n+        const std::string & model_path);\n+\n+    ~CatBoostLibraryHandler();\n+\n+    size_t getTreeCount() const;\n+\n+    ColumnPtr evaluate(const ColumnRawPtrs & columns) const;\n+\n+private:\n+    const SharedLibraryPtr library;\n+    const APIHolder api;\n+\n+    mutable std::mutex mutex;\n+\n+    CatBoostLibraryAPI::ModelCalcerHandle * model_calcer_handle TSA_GUARDED_BY(mutex) TSA_PT_GUARDED_BY(mutex);\n+\n+    size_t float_features_count TSA_GUARDED_BY(mutex);\n+    size_t cat_features_count TSA_GUARDED_BY(mutex);\n+    size_t tree_count TSA_GUARDED_BY(mutex);\n+\n+    ColumnFloat64::MutablePtr evalImpl(const ColumnRawPtrs & columns, bool cat_features_are_strings) const TSA_REQUIRES(mutex);\n+};\n+\n+using CatBoostLibraryHandlerPtr = std::shared_ptr<CatBoostLibraryHandler>;\n+\n+}\ndiff --git a/programs/library-bridge/CatBoostLibraryHandlerFactory.cpp b/programs/library-bridge/CatBoostLibraryHandlerFactory.cpp\nnew file mode 100644\nindex 000000000000..5dde7f84a956\n--- /dev/null\n+++ b/programs/library-bridge/CatBoostLibraryHandlerFactory.cpp\n@@ -0,0 +1,49 @@\n+#include \"CatBoostLibraryHandlerFactory.h\"\n+\n+#include <Common/logger_useful.h>\n+\n+namespace DB\n+{\n+\n+CatBoostLibraryHandlerFactory & CatBoostLibraryHandlerFactory::instance()\n+{\n+    static CatBoostLibraryHandlerFactory instance;\n+    return instance;\n+}\n+\n+CatBoostLibraryHandlerPtr CatBoostLibraryHandlerFactory::get(const String & model_path)\n+{\n+    std::lock_guard lock(mutex);\n+\n+    if (auto handler = library_handlers.find(model_path); handler != library_handlers.end())\n+        return handler->second;\n+    return nullptr;\n+}\n+\n+void CatBoostLibraryHandlerFactory::create(const String & library_path, const String & model_path)\n+{\n+    std::lock_guard lock(mutex);\n+\n+    if (library_handlers.contains(model_path))\n+    {\n+        LOG_DEBUG(&Poco::Logger::get(\"CatBoostLibraryHandlerFactory\"), \"Cannot load catboost library handler for model path {} because it exists already\", model_path);\n+        return;\n+    }\n+\n+    library_handlers.emplace(std::make_pair(model_path, std::make_shared<CatBoostLibraryHandler>(library_path, model_path)));\n+    LOG_DEBUG(&Poco::Logger::get(\"CatBoostLibraryHandlerFactory\"), \"Loaded catboost library handler for model path {}.\", model_path);\n+}\n+\n+void CatBoostLibraryHandlerFactory::remove(const String & model_path)\n+{\n+    std::lock_guard lock(mutex);\n+    bool deleted = library_handlers.erase(model_path);\n+    if (!deleted)\n+    {\n+        LOG_DEBUG(&Poco::Logger::get(\"CatBoostLibraryHandlerFactory\"), \"Cannot unload catboost library handler for model path: {}\", model_path);\n+        return;\n+    }\n+    LOG_DEBUG(&Poco::Logger::get(\"CatBoostLibraryHandlerFactory\"), \"Unloaded catboost library handler for model path: {}\", model_path);\n+}\n+\n+}\ndiff --git a/programs/library-bridge/CatBoostLibraryHandlerFactory.h b/programs/library-bridge/CatBoostLibraryHandlerFactory.h\nnew file mode 100644\nindex 000000000000..f17d19a3f065\n--- /dev/null\n+++ b/programs/library-bridge/CatBoostLibraryHandlerFactory.h\n@@ -0,0 +1,31 @@\n+#pragma once\n+\n+#include \"CatBoostLibraryHandler.h\"\n+\n+#include <base/defines.h>\n+\n+#include <mutex>\n+#include <unordered_map>\n+\n+\n+namespace DB\n+{\n+\n+class CatBoostLibraryHandlerFactory final : private boost::noncopyable\n+{\n+public:\n+    static CatBoostLibraryHandlerFactory & instance();\n+\n+    CatBoostLibraryHandlerPtr get(const String & model_path);\n+\n+    void create(const String & library_path, const String & model_path);\n+\n+    void remove(const String & model_path);\n+\n+private:\n+    /// map: model path -> shared library handler\n+    std::unordered_map<String, CatBoostLibraryHandlerPtr> library_handlers TSA_GUARDED_BY(mutex);\n+    std::mutex mutex;\n+};\n+\n+}\ndiff --git a/programs/library-bridge/ExternalDictionaryLibraryHandler.h b/programs/library-bridge/ExternalDictionaryLibraryHandler.h\nindex 7713e9a68302..d6d4f926f0f9 100644\n--- a/programs/library-bridge/ExternalDictionaryLibraryHandler.h\n+++ b/programs/library-bridge/ExternalDictionaryLibraryHandler.h\n@@ -50,6 +50,6 @@ class ExternalDictionaryLibraryHandler\n     void * lib_data;\n };\n \n-using SharedLibraryHandlerPtr = std::shared_ptr<ExternalDictionaryLibraryHandler>;\n+using ExternalDictionaryLibraryHandlerPtr = std::shared_ptr<ExternalDictionaryLibraryHandler>;\n \n }\ndiff --git a/programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.cpp b/programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.cpp\nindex ffa5ff6f493a..6acd9af20ed8 100644\n--- a/programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.cpp\n+++ b/programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.cpp\n@@ -1,37 +1,40 @@\n #include \"ExternalDictionaryLibraryHandlerFactory.h\"\n \n+#include <Common/logger_useful.h>\n \n namespace DB\n {\n \n-SharedLibraryHandlerPtr ExternalDictionaryLibraryHandlerFactory::get(const std::string & dictionary_id)\n+ExternalDictionaryLibraryHandlerPtr ExternalDictionaryLibraryHandlerFactory::get(const String & dictionary_id)\n {\n     std::lock_guard lock(mutex);\n-    auto library_handler = library_handlers.find(dictionary_id);\n-\n-    if (library_handler != library_handlers.end())\n-        return library_handler->second;\n \n+    if (auto handler = library_handlers.find(dictionary_id); handler != library_handlers.end())\n+        return handler->second;\n     return nullptr;\n }\n \n \n void ExternalDictionaryLibraryHandlerFactory::create(\n-    const std::string & dictionary_id,\n-    const std::string & library_path,\n-    const std::vector<std::string> & library_settings,\n+    const String & dictionary_id,\n+    const String & library_path,\n+    const std::vector<String> & library_settings,\n     const Block & sample_block,\n-    const std::vector<std::string> & attributes_names)\n+    const std::vector<String> & attributes_names)\n {\n     std::lock_guard lock(mutex);\n-    if (!library_handlers.contains(dictionary_id))\n-        library_handlers.emplace(std::make_pair(dictionary_id, std::make_shared<ExternalDictionaryLibraryHandler>(library_path, library_settings, sample_block, attributes_names)));\n-    else\n+\n+    if (library_handlers.contains(dictionary_id))\n+    {\n         LOG_WARNING(&Poco::Logger::get(\"ExternalDictionaryLibraryHandlerFactory\"), \"Library handler with dictionary id {} already exists\", dictionary_id);\n+        return;\n+    }\n+\n+    library_handlers.emplace(std::make_pair(dictionary_id, std::make_shared<ExternalDictionaryLibraryHandler>(library_path, library_settings, sample_block, attributes_names)));\n }\n \n \n-bool ExternalDictionaryLibraryHandlerFactory::clone(const std::string & from_dictionary_id, const std::string & to_dictionary_id)\n+bool ExternalDictionaryLibraryHandlerFactory::clone(const String & from_dictionary_id, const String & to_dictionary_id)\n {\n     std::lock_guard lock(mutex);\n     auto from_library_handler = library_handlers.find(from_dictionary_id);\n@@ -45,7 +48,7 @@ bool ExternalDictionaryLibraryHandlerFactory::clone(const std::string & from_dic\n }\n \n \n-bool ExternalDictionaryLibraryHandlerFactory::remove(const std::string & dictionary_id)\n+bool ExternalDictionaryLibraryHandlerFactory::remove(const String & dictionary_id)\n {\n     std::lock_guard lock(mutex);\n     /// extDict_libDelete is called in destructor.\ndiff --git a/programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.h b/programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.h\nindex d821270c4742..3dfafd82a0f0 100644\n--- a/programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.h\n+++ b/programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.h\n@@ -17,22 +17,22 @@ class ExternalDictionaryLibraryHandlerFactory final : private boost::noncopyable\n public:\n     static ExternalDictionaryLibraryHandlerFactory & instance();\n \n-    SharedLibraryHandlerPtr get(const std::string & dictionary_id);\n+    ExternalDictionaryLibraryHandlerPtr get(const String & dictionary_id);\n \n     void create(\n-        const std::string & dictionary_id,\n-        const std::string & library_path,\n-        const std::vector<std::string> & library_settings,\n+        const String & dictionary_id,\n+        const String & library_path,\n+        const std::vector<String> & library_settings,\n         const Block & sample_block,\n-        const std::vector<std::string> & attributes_names);\n+        const std::vector<String> & attributes_names);\n \n-    bool clone(const std::string & from_dictionary_id, const std::string & to_dictionary_id);\n+    bool clone(const String & from_dictionary_id, const String & to_dictionary_id);\n \n-    bool remove(const std::string & dictionary_id);\n+    bool remove(const String & dictionary_id);\n \n private:\n     /// map: dict_id -> sharedLibraryHandler\n-    std::unordered_map<std::string, SharedLibraryHandlerPtr> library_handlers TSA_GUARDED_BY(mutex);\n+    std::unordered_map<String, ExternalDictionaryLibraryHandlerPtr> library_handlers TSA_GUARDED_BY(mutex);\n     std::mutex mutex;\n };\n \ndiff --git a/programs/library-bridge/LibraryBridgeHandlerFactory.cpp b/programs/library-bridge/LibraryBridgeHandlerFactory.cpp\nindex f8f6a23e1be7..4af1f8355e80 100644\n--- a/programs/library-bridge/LibraryBridgeHandlerFactory.cpp\n+++ b/programs/library-bridge/LibraryBridgeHandlerFactory.cpp\n@@ -27,12 +27,16 @@ std::unique_ptr<HTTPRequestHandler> LibraryBridgeHandlerFactory::createRequestHa\n     {\n         if (uri.getPath() == \"/extdict_ping\")\n             return std::make_unique<ExternalDictionaryLibraryBridgeExistsHandler>(keep_alive_timeout, getContext());\n+        else if (uri.getPath() == \"/catboost_ping\")\n+            return std::make_unique<CatBoostLibraryBridgeExistsHandler>(keep_alive_timeout, getContext());\n     }\n \n     if (request.getMethod() == Poco::Net::HTTPRequest::HTTP_POST)\n     {\n         if (uri.getPath() == \"/extdict_request\")\n             return std::make_unique<ExternalDictionaryLibraryBridgeRequestHandler>(keep_alive_timeout, getContext());\n+        else if (uri.getPath() == \"/catboost_request\")\n+            return std::make_unique<CatBoostLibraryBridgeRequestHandler>(keep_alive_timeout, getContext());\n     }\n \n     return nullptr;\ndiff --git a/programs/library-bridge/LibraryBridgeHandlers.cpp b/programs/library-bridge/LibraryBridgeHandlers.cpp\nindex a28148bd1f7a..999cf9d45828 100644\n--- a/programs/library-bridge/LibraryBridgeHandlers.cpp\n+++ b/programs/library-bridge/LibraryBridgeHandlers.cpp\n@@ -1,24 +1,31 @@\n #include \"LibraryBridgeHandlers.h\"\n+\n+#include \"CatBoostLibraryHandler.h\"\n+#include \"CatBoostLibraryHandlerFactory.h\"\n+#include \"ExternalDictionaryLibraryHandler.h\"\n #include \"ExternalDictionaryLibraryHandlerFactory.h\"\n \n #include <Formats/FormatFactory.h>\n-#include <Server/HTTP/WriteBufferFromHTTPServerResponse.h>\n-#include <IO/WriteHelpers.h>\n+#include <IO/ReadBufferFromString.h>\n #include <IO/ReadHelpers.h>\n #include <Common/BridgeProtocolVersion.h>\n+#include <IO/WriteHelpers.h>\n+#include <Poco/Net/HTMLForm.h>\n #include <Poco/Net/HTTPServerRequest.h>\n #include <Poco/Net/HTTPServerResponse.h>\n-#include <Poco/Net/HTMLForm.h>\n #include <Poco/ThreadPool.h>\n-#include <Processors/Formats/IOutputFormat.h>\n-#include <Processors/Formats/IInputFormat.h>\n-#include <QueryPipeline/QueryPipeline.h>\n #include <Processors/Executors/CompletedPipelineExecutor.h>\n #include <Processors/Executors/PullingPipelineExecutor.h>\n+#include <Processors/Formats/IInputFormat.h>\n+#include <Processors/Formats/IOutputFormat.h>\n #include <Processors/Sources/SourceFromSingleChunk.h>\n #include <QueryPipeline/Pipe.h>\n+#include <QueryPipeline/QueryPipeline.h>\n #include <Server/HTTP/HTMLForm.h>\n-#include <IO/ReadBufferFromString.h>\n+#include <Server/HTTP/WriteBufferFromHTTPServerResponse.h>\n+#include <Formats/NativeReader.h>\n+#include <Formats/NativeWriter.h>\n+#include <DataTypes/DataTypesNumber.h>\n \n \n namespace DB\n@@ -31,7 +38,7 @@ namespace ErrorCodes\n \n namespace\n {\n-    void processError(HTTPServerResponse & response, const std::string & message)\n+    void processError(HTTPServerResponse & response, const String & message)\n     {\n         response.setStatusAndReason(HTTPResponse::HTTP_INTERNAL_SERVER_ERROR);\n \n@@ -41,7 +48,7 @@ namespace\n         LOG_WARNING(&Poco::Logger::get(\"LibraryBridge\"), fmt::runtime(message));\n     }\n \n-    std::shared_ptr<Block> parseColumns(std::string && column_string)\n+    std::shared_ptr<Block> parseColumns(String && column_string)\n     {\n         auto sample_block = std::make_shared<Block>();\n         auto names_and_types = NamesAndTypesList::parse(column_string);\n@@ -59,10 +66,10 @@ namespace\n         return ids;\n     }\n \n-    std::vector<std::string> parseNamesFromBinary(const std::string & names_string)\n+    std::vector<String> parseNamesFromBinary(const String & names_string)\n     {\n         ReadBufferFromString buf(names_string);\n-        std::vector<std::string> names;\n+        std::vector<String> names;\n         readVectorBinary(names, buf);\n         return names;\n     }\n@@ -79,13 +86,15 @@ static void writeData(Block data, OutputFormatPtr format)\n     executor.execute();\n }\n \n+\n ExternalDictionaryLibraryBridgeRequestHandler::ExternalDictionaryLibraryBridgeRequestHandler(size_t keep_alive_timeout_, ContextPtr context_)\n     : WithContext(context_)\n-    , log(&Poco::Logger::get(\"ExternalDictionaryLibraryBridgeRequestHandler\"))\n     , keep_alive_timeout(keep_alive_timeout_)\n+    , log(&Poco::Logger::get(\"ExternalDictionaryLibraryBridgeRequestHandler\"))\n {\n }\n \n+\n void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequest & request, HTTPServerResponse & response)\n {\n     LOG_TRACE(log, \"Request URI: {}\", request.getURI());\n@@ -97,7 +106,7 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n         version = 0; /// assumed version for too old servers which do not send a version\n     else\n     {\n-        String version_str = params.get(\"version\");\n+        const String & version_str = params.get(\"version\");\n         if (!tryParse(version, version_str))\n         {\n             processError(response, \"Unable to parse 'version' string in request URL: '\" + version_str + \"' Check if the server and library-bridge have the same version.\");\n@@ -124,8 +133,8 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n         return;\n     }\n \n-    std::string method = params.get(\"method\");\n-    std::string dictionary_id = params.get(\"dictionary_id\");\n+    const String & method = params.get(\"method\");\n+    const String & dictionary_id = params.get(\"dictionary_id\");\n \n     LOG_TRACE(log, \"Library method: '{}', dictionary id: {}\", method, dictionary_id);\n     WriteBufferFromHTTPServerResponse out(response, request.getMethod() == Poco::Net::HTTPRequest::HTTP_HEAD, keep_alive_timeout);\n@@ -141,7 +150,7 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n                 return;\n             }\n \n-            std::string from_dictionary_id = params.get(\"from_dictionary_id\");\n+            const String & from_dictionary_id = params.get(\"from_dictionary_id\");\n             bool cloned = false;\n             cloned = ExternalDictionaryLibraryHandlerFactory::instance().clone(from_dictionary_id, dictionary_id);\n \n@@ -166,7 +175,7 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n                 return;\n             }\n \n-            std::string library_path = params.get(\"library_path\");\n+            const String & library_path = params.get(\"library_path\");\n \n             if (!params.has(\"library_settings\"))\n             {\n@@ -174,10 +183,10 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n                 return;\n             }\n \n-            const auto & settings_string = params.get(\"library_settings\");\n+            const String & settings_string = params.get(\"library_settings\");\n \n             LOG_DEBUG(log, \"Parsing library settings from binary string\");\n-            std::vector<std::string> library_settings = parseNamesFromBinary(settings_string);\n+            std::vector<String> library_settings = parseNamesFromBinary(settings_string);\n \n             /// Needed for library dictionary\n             if (!params.has(\"attributes_names\"))\n@@ -186,10 +195,10 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n                 return;\n             }\n \n-            const auto & attributes_string = params.get(\"attributes_names\");\n+            const String & attributes_string = params.get(\"attributes_names\");\n \n             LOG_DEBUG(log, \"Parsing attributes names from binary string\");\n-            std::vector<std::string> attributes_names = parseNamesFromBinary(attributes_string);\n+            std::vector<String> attributes_names = parseNamesFromBinary(attributes_string);\n \n             /// Needed to parse block from binary string format\n             if (!params.has(\"sample_block\"))\n@@ -197,7 +206,7 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n                 processError(response, \"No 'sample_block' in request URL\");\n                 return;\n             }\n-            std::string sample_block_string = params.get(\"sample_block\");\n+            String sample_block_string = params.get(\"sample_block\");\n \n             std::shared_ptr<Block> sample_block;\n             try\n@@ -297,7 +306,7 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n                 return;\n             }\n \n-            std::string requested_block_string = params.get(\"requested_block_sample\");\n+            String requested_block_string = params.get(\"requested_block_sample\");\n \n             std::shared_ptr<Block> requested_sample_block;\n             try\n@@ -332,7 +341,8 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n         }\n         else\n         {\n-            LOG_WARNING(log, \"Unknown library method: '{}'\", method);\n+            processError(response, \"Unknown library method '\" + method + \"'\");\n+            LOG_ERROR(log, \"Unknown library method: '{}'\", method);\n         }\n     }\n     catch (...)\n@@ -362,6 +372,7 @@ void ExternalDictionaryLibraryBridgeRequestHandler::handleRequest(HTTPServerRequ\n     }\n }\n \n+\n ExternalDictionaryLibraryBridgeExistsHandler::ExternalDictionaryLibraryBridgeExistsHandler(size_t keep_alive_timeout_, ContextPtr context_)\n     : WithContext(context_)\n     , keep_alive_timeout(keep_alive_timeout_)\n@@ -369,6 +380,7 @@ ExternalDictionaryLibraryBridgeExistsHandler::ExternalDictionaryLibraryBridgeExi\n {\n }\n \n+\n void ExternalDictionaryLibraryBridgeExistsHandler::handleRequest(HTTPServerRequest & request, HTTPServerResponse & response)\n {\n     try\n@@ -382,7 +394,7 @@ void ExternalDictionaryLibraryBridgeExistsHandler::handleRequest(HTTPServerReque\n             return;\n         }\n \n-        std::string dictionary_id = params.get(\"dictionary_id\");\n+        const String & dictionary_id = params.get(\"dictionary_id\");\n \n         auto library_handler = ExternalDictionaryLibraryHandlerFactory::instance().get(dictionary_id);\n \n@@ -399,4 +411,199 @@ void ExternalDictionaryLibraryBridgeExistsHandler::handleRequest(HTTPServerReque\n }\n \n \n+CatBoostLibraryBridgeRequestHandler::CatBoostLibraryBridgeRequestHandler(\n+    size_t keep_alive_timeout_, ContextPtr context_)\n+    : WithContext(context_)\n+    , keep_alive_timeout(keep_alive_timeout_)\n+    , log(&Poco::Logger::get(\"CatBoostLibraryBridgeRequestHandler\"))\n+{\n+}\n+\n+\n+void CatBoostLibraryBridgeRequestHandler::handleRequest(HTTPServerRequest & request, HTTPServerResponse & response)\n+{\n+    std::lock_guard lock(mutex);\n+\n+    LOG_TRACE(log, \"Request URI: {}\", request.getURI());\n+    HTMLForm params(getContext()->getSettingsRef(), request);\n+\n+    size_t version;\n+\n+    if (!params.has(\"version\"))\n+        version = 0; /// assumed version for too old servers which do not send a version\n+    else\n+    {\n+        const String & version_str = params.get(\"version\");\n+        if (!tryParse(version, version_str))\n+        {\n+            processError(response, \"Unable to parse 'version' string in request URL: '\" + version_str + \"' Check if the server and library-bridge have the same version.\");\n+            return;\n+        }\n+    }\n+\n+    if (version != LIBRARY_BRIDGE_PROTOCOL_VERSION)\n+    {\n+        /// backwards compatibility is considered unnecessary for now, just let the user know that the server and the bridge must be upgraded together\n+        processError(response, \"Server and library-bridge have different versions: '\" + std::to_string(version) + \"' vs. '\" + std::to_string(LIBRARY_BRIDGE_PROTOCOL_VERSION) + \"'\");\n+        return;\n+    }\n+    if (!params.has(\"method\"))\n+    {\n+        processError(response, \"No 'method' in request URL\");\n+        return;\n+    }\n+\n+    const String & method = params.get(\"method\");\n+\n+    LOG_TRACE(log, \"Library method: '{}'\", method);\n+    WriteBufferFromHTTPServerResponse out(response, request.getMethod() == Poco::Net::HTTPRequest::HTTP_HEAD, keep_alive_timeout);\n+\n+    try\n+    {\n+        if (method == \"catboost_GetTreeCount\")\n+        {\n+            auto & read_buf = request.getStream();\n+            params.read(read_buf);\n+\n+            if (!params.has(\"library_path\"))\n+            {\n+                processError(response, \"No 'library_path' in request URL\");\n+                return;\n+            }\n+\n+            const String & library_path = params.get(\"library_path\");\n+\n+            if (!params.has(\"model_path\"))\n+            {\n+                processError(response, \"No 'model_path' in request URL\");\n+                return;\n+            }\n+\n+            const String & model_path = params.get(\"model_path\");\n+\n+            CatBoostLibraryHandlerFactory::instance().remove(model_path);\n+\n+            CatBoostLibraryHandlerFactory::instance().create(library_path, model_path);\n+\n+            auto catboost_handler = CatBoostLibraryHandlerFactory::instance().get(model_path);\n+\n+            if (!catboost_handler)\n+            {\n+                processError(response, \"CatBoost library is not loaded for model \" + model_path);\n+                return;\n+            }\n+\n+            size_t tree_count = catboost_handler->getTreeCount();\n+            writeIntBinary(tree_count, out);\n+        }\n+        else if (method == \"catboost_libEvaluate\")\n+        {\n+            auto & read_buf = request.getStream();\n+            params.read(read_buf);\n+\n+            if (!params.has(\"model_path\"))\n+            {\n+                processError(response, \"No 'model_path' in request URL\");\n+                return;\n+            }\n+\n+            const String & model_path = params.get(\"model_path\");\n+\n+            if (!params.has(\"data\"))\n+            {\n+                processError(response, \"No 'data' in request URL\");\n+                return;\n+            }\n+\n+            const String & data = params.get(\"data\");\n+\n+            ReadBufferFromString string_read_buf(data);\n+            NativeReader deserializer(string_read_buf, /*server_revision*/ 0);\n+            Block block_read = deserializer.read();\n+\n+            Columns col_ptrs = block_read.getColumns();\n+            ColumnRawPtrs col_raw_ptrs;\n+            for (const auto & p : col_ptrs)\n+                col_raw_ptrs.push_back(&*p);\n+\n+            auto catboost_handler = CatBoostLibraryHandlerFactory::instance().get(model_path);\n+\n+            if (!catboost_handler)\n+            {\n+                processError(response, \"CatBoost library is not loaded for model\" + model_path);\n+                return;\n+            }\n+\n+            ColumnPtr res_col = catboost_handler->evaluate(col_raw_ptrs);\n+\n+            DataTypePtr res_col_type = std::make_shared<DataTypeFloat64>();\n+            String res_col_name = \"res_col\";\n+\n+            ColumnsWithTypeAndName res_cols_with_type_and_name = {{res_col, res_col_type, res_col_name}};\n+\n+            Block block_write(res_cols_with_type_and_name);\n+            NativeWriter serializer{out, /*client_revision*/ 0, block_write};\n+            serializer.write(block_write);\n+        }\n+        else\n+        {\n+            processError(response, \"Unknown library method '\" + method + \"'\");\n+            LOG_ERROR(log, \"Unknown library method: '{}'\", method);\n+        }\n+    }\n+    catch (...)\n+    {\n+        auto message = getCurrentExceptionMessage(true);\n+        LOG_ERROR(log, \"Failed to process request. Error: {}\", message);\n+\n+        response.setStatusAndReason(Poco::Net::HTTPResponse::HTTP_INTERNAL_SERVER_ERROR, message); // can't call process_error, because of too soon response sending\n+        try\n+        {\n+            writeStringBinary(message, out);\n+            out.finalize();\n+        }\n+        catch (...)\n+        {\n+            tryLogCurrentException(log);\n+        }\n+    }\n+\n+    try\n+    {\n+        out.finalize();\n+    }\n+    catch (...)\n+    {\n+        tryLogCurrentException(log);\n+    }\n+}\n+\n+\n+CatBoostLibraryBridgeExistsHandler::CatBoostLibraryBridgeExistsHandler(size_t keep_alive_timeout_, ContextPtr context_)\n+    : WithContext(context_)\n+    , keep_alive_timeout(keep_alive_timeout_)\n+    , log(&Poco::Logger::get(\"CatBoostLibraryBridgeExistsHandler\"))\n+{\n+}\n+\n+\n+void CatBoostLibraryBridgeExistsHandler::handleRequest(HTTPServerRequest & request, HTTPServerResponse & response)\n+{\n+    try\n+    {\n+        LOG_TRACE(log, \"Request URI: {}\", request.getURI());\n+        HTMLForm params(getContext()->getSettingsRef(), request);\n+\n+        String res = \"1\";\n+\n+        setResponseDefaultHeaders(response, keep_alive_timeout);\n+        LOG_TRACE(log, \"Sending ping response: {}\", res);\n+        response.sendBuffer(res.data(), res.size());\n+    }\n+    catch (...)\n+    {\n+        tryLogCurrentException(\"PingHandler\");\n+    }\n+}\n+\n }\ndiff --git a/programs/library-bridge/LibraryBridgeHandlers.h b/programs/library-bridge/LibraryBridgeHandlers.h\nindex b20f40616ce1..5e171b882e28 100644\n--- a/programs/library-bridge/LibraryBridgeHandlers.h\n+++ b/programs/library-bridge/LibraryBridgeHandlers.h\n@@ -1,9 +1,9 @@\n #pragma once\n \n+#include <Common/logger_useful.h>\n #include <Interpreters/Context.h>\n #include <Server/HTTP/HTTPRequestHandler.h>\n-#include <Common/logger_useful.h>\n-#include \"ExternalDictionaryLibraryHandler.h\"\n+#include <mutex>\n \n \n namespace DB\n@@ -26,11 +26,12 @@ class ExternalDictionaryLibraryBridgeRequestHandler : public HTTPRequestHandler,\n private:\n     static constexpr inline auto FORMAT = \"RowBinary\";\n \n+    const size_t keep_alive_timeout;\n     Poco::Logger * log;\n-    size_t keep_alive_timeout;\n };\n \n \n+// Handler for checking if the external dictionary library is loaded (used for handshake)\n class ExternalDictionaryLibraryBridgeExistsHandler : public HTTPRequestHandler, WithContext\n {\n public:\n@@ -43,4 +44,43 @@ class ExternalDictionaryLibraryBridgeExistsHandler : public HTTPRequestHandler,\n     Poco::Logger * log;\n };\n \n+\n+/// Handler for requests to catboost library. The call protocol is as follows:\n+/// (1) Send a \"catboost_GetTreeCount\" request from the server to the bridge, containing a library path (e.g /home/user/libcatboost.so) and\n+///     a model path (e.g. /home/user/model.bin). Rirst, this unloads the catboost library handler associated to the model path (if it was\n+///     loaded), then loads the catboost library handler associated to the model path, then executes GetTreeCount() on the library handler\n+///     and finally sends the result back to the server.\n+///     Step (1) is called once by the server from FunctionCatBoostEvaluate::getReturnTypeImpl(). The library path handler is unloaded in\n+///     the beginning because it contains state which may no longer be valid if the user runs catboost(\"/path/to/model.bin\", ...) more than\n+///     once and if \"model.bin\" was updated in between.\n+/// (2) Send \"catboost_Evaluate\" from the server to the bridge, containing the model path and the features to run the interference on.\n+///     Step (2) is called multiple times (once per chunk) by the server from function FunctionCatBoostEvaluate::executeImpl(). The library\n+///     handler for the given model path is expected to be already loaded by Step (1).\n+class CatBoostLibraryBridgeRequestHandler : public HTTPRequestHandler, WithContext\n+{\n+public:\n+    CatBoostLibraryBridgeRequestHandler(size_t keep_alive_timeout_, ContextPtr context_);\n+\n+    void handleRequest(HTTPServerRequest & request, HTTPServerResponse & response) override;\n+\n+private:\n+    std::mutex mutex;\n+    const size_t keep_alive_timeout;\n+    Poco::Logger * log;\n+};\n+\n+\n+// Handler for pinging the library-bridge for catboost access (used for handshake)\n+class CatBoostLibraryBridgeExistsHandler : public HTTPRequestHandler, WithContext\n+{\n+public:\n+    CatBoostLibraryBridgeExistsHandler(size_t keep_alive_timeout_, ContextPtr context_);\n+\n+    void handleRequest(HTTPServerRequest & request, HTTPServerResponse & response) override;\n+\n+private:\n+    const size_t keep_alive_timeout;\n+    Poco::Logger * log;\n+};\n+\n }\ndiff --git a/programs/server/Server.cpp b/programs/server/Server.cpp\nindex b621a8970357..64438062ba6d 100644\n--- a/programs/server/Server.cpp\n+++ b/programs/server/Server.cpp\n@@ -50,7 +50,6 @@\n #include <Interpreters/DNSCacheUpdater.h>\n #include <Interpreters/DatabaseCatalog.h>\n #include <Interpreters/ExternalDictionariesLoader.h>\n-#include <Interpreters/ExternalModelsLoader.h>\n #include <Interpreters/ProcessList.h>\n #include <Interpreters/loadMetadata.h>\n #include <Interpreters/UserDefinedSQLObjectsLoader.h>\n@@ -1154,7 +1153,6 @@ int Server::main(const std::vector<std::string> & /*args*/)\n             global_context->setExternalAuthenticatorsConfig(*config);\n \n             global_context->loadOrReloadDictionaries(*config);\n-            global_context->loadOrReloadModels(*config);\n             global_context->loadOrReloadUserDefinedExecutableFunctions(*config);\n \n             global_context->setRemoteHostFilter(*config);\n@@ -1732,17 +1730,6 @@ int Server::main(const std::vector<std::string> & /*args*/)\n             throw;\n         }\n \n-        /// try to load models immediately, throw on error and die\n-        try\n-        {\n-            global_context->loadOrReloadModels(config());\n-        }\n-        catch (...)\n-        {\n-            tryLogCurrentException(log, \"Caught exception while loading dictionaries.\");\n-            throw;\n-        }\n-\n         /// try to load user defined executable functions, throw on error and die\n         try\n         {\ndiff --git a/src/Access/Common/AccessType.h b/src/Access/Common/AccessType.h\nindex e8d3b453188d..f1873a9e9c90 100644\n--- a/src/Access/Common/AccessType.h\n+++ b/src/Access/Common/AccessType.h\n@@ -145,7 +145,6 @@ enum class AccessType\n     M(SYSTEM_RELOAD_CONFIG, \"RELOAD CONFIG\", GLOBAL, SYSTEM_RELOAD) \\\n     M(SYSTEM_RELOAD_SYMBOLS, \"RELOAD SYMBOLS\", GLOBAL, SYSTEM_RELOAD) \\\n     M(SYSTEM_RELOAD_DICTIONARY, \"SYSTEM RELOAD DICTIONARIES, RELOAD DICTIONARY, RELOAD DICTIONARIES\", GLOBAL, SYSTEM_RELOAD) \\\n-    M(SYSTEM_RELOAD_MODEL, \"SYSTEM RELOAD MODELS, RELOAD MODEL, RELOAD MODELS\", GLOBAL, SYSTEM_RELOAD) \\\n     M(SYSTEM_RELOAD_FUNCTION, \"SYSTEM RELOAD FUNCTIONS, RELOAD FUNCTION, RELOAD FUNCTIONS\", GLOBAL, SYSTEM_RELOAD) \\\n     M(SYSTEM_RELOAD_EMBEDDED_DICTIONARIES, \"RELOAD EMBEDDED DICTIONARIES\", GLOBAL, SYSTEM_RELOAD) /* implicitly enabled by the grant SYSTEM_RELOAD_DICTIONARY ON *.* */\\\n     M(SYSTEM_RELOAD, \"\", GROUP, SYSTEM) \\\ndiff --git a/src/BridgeHelper/CatBoostLibraryBridgeHelper.cpp b/src/BridgeHelper/CatBoostLibraryBridgeHelper.cpp\nnew file mode 100644\nindex 000000000000..e3693ed50e0f\n--- /dev/null\n+++ b/src/BridgeHelper/CatBoostLibraryBridgeHelper.cpp\n@@ -0,0 +1,118 @@\n+#include \"CatBoostLibraryBridgeHelper.h\"\n+\n+#include <Columns/ColumnsNumber.h>\n+#include <Common/escapeForFileName.h>\n+#include <Core/Block.h>\n+#include <DataTypes/DataTypesNumber.h>\n+#include <Formats/NativeReader.h>\n+#include <Formats/NativeWriter.h>\n+#include <IO/ReadBufferFromString.h>\n+#include <IO/WriteBufferFromString.h>\n+#include <Poco/Net/HTTPRequest.h>\n+\n+namespace DB\n+{\n+\n+namespace ErrorCodes\n+{\n+    extern const int LOGICAL_ERROR;\n+}\n+\n+CatBoostLibraryBridgeHelper::CatBoostLibraryBridgeHelper(\n+        ContextPtr context_,\n+        std::string_view library_path_,\n+        std::string_view model_path_)\n+    : LibraryBridgeHelper(context_->getGlobalContext())\n+    , library_path(library_path_)\n+    , model_path(model_path_)\n+{\n+}\n+\n+Poco::URI CatBoostLibraryBridgeHelper::getPingURI() const\n+{\n+    auto uri = createBaseURI();\n+    uri.setPath(PING_HANDLER);\n+    return uri;\n+}\n+\n+Poco::URI CatBoostLibraryBridgeHelper::getMainURI() const\n+{\n+    auto uri = createBaseURI();\n+    uri.setPath(MAIN_HANDLER);\n+    return uri;\n+}\n+\n+\n+Poco::URI CatBoostLibraryBridgeHelper::createRequestURI(const String & method) const\n+{\n+    auto uri = getMainURI();\n+    uri.addQueryParameter(\"version\", std::to_string(LIBRARY_BRIDGE_PROTOCOL_VERSION));\n+    uri.addQueryParameter(\"method\", method);\n+    return uri;\n+}\n+\n+bool CatBoostLibraryBridgeHelper::bridgeHandShake()\n+{\n+    String result;\n+    try\n+    {\n+        ReadWriteBufferFromHTTP buf(getPingURI(), Poco::Net::HTTPRequest::HTTP_GET, {}, http_timeouts, credentials);\n+        readString(result, buf);\n+    }\n+    catch (...)\n+    {\n+        tryLogCurrentException(log);\n+        return false;\n+    }\n+\n+    if (result != \"1\")\n+        throw Exception(ErrorCodes::LOGICAL_ERROR, \"Unexpected message from library bridge: {}. Check that bridge and server have the same version.\", result);\n+\n+    return true;\n+}\n+\n+size_t CatBoostLibraryBridgeHelper::getTreeCount()\n+{\n+    startBridgeSync();\n+\n+    ReadWriteBufferFromHTTP buf(\n+        createRequestURI(CATBOOST_GETTREECOUNT_METHOD),\n+        Poco::Net::HTTPRequest::HTTP_POST,\n+        [this](std::ostream & os)\n+        {\n+            os << \"library_path=\" << escapeForFileName(library_path) << \"&\";\n+            os << \"model_path=\" << escapeForFileName(model_path);\n+        },\n+        http_timeouts, credentials);\n+\n+    size_t res;\n+    readIntBinary(res, buf);\n+    return res;\n+}\n+\n+ColumnPtr CatBoostLibraryBridgeHelper::evaluate(const ColumnsWithTypeAndName & columns)\n+{\n+    startBridgeSync();\n+\n+    WriteBufferFromOwnString string_write_buf;\n+    Block block(columns);\n+    NativeWriter serializer(string_write_buf, /*client_revision*/ 0, block);\n+    serializer.write(block);\n+\n+    ReadWriteBufferFromHTTP buf(\n+        createRequestURI(CATBOOST_LIB_EVALUATE_METHOD),\n+        Poco::Net::HTTPRequest::HTTP_POST,\n+        [this, serialized = string_write_buf.str()](std::ostream & os)\n+        {\n+            os << \"model_path=\" << escapeForFileName(model_path) << \"&\";\n+            os << \"data=\" << escapeForFileName(serialized);\n+        },\n+        http_timeouts, credentials);\n+\n+    NativeReader deserializer(buf, /*server_revision*/ 0);\n+    Block block_read = deserializer.read();\n+\n+    return block_read.getColumns()[0];\n+}\n+\n+}\ndiff --git a/src/BridgeHelper/CatBoostLibraryBridgeHelper.h b/src/BridgeHelper/CatBoostLibraryBridgeHelper.h\nnew file mode 100644\nindex 000000000000..7a88f4ca368d\n--- /dev/null\n+++ b/src/BridgeHelper/CatBoostLibraryBridgeHelper.h\n@@ -0,0 +1,42 @@\n+#pragma once\n+\n+#include <BridgeHelper/LibraryBridgeHelper.h>\n+#include <DataTypes/IDataType.h>\n+#include <IO/ReadWriteBufferFromHTTP.h>\n+#include <Interpreters/Context.h>\n+#include <Poco/URI.h>\n+\n+\n+namespace DB\n+{\n+\n+class CatBoostLibraryBridgeHelper : public LibraryBridgeHelper\n+{\n+public:\n+    static constexpr inline auto PING_HANDLER = \"/catboost_ping\";\n+    static constexpr inline auto MAIN_HANDLER = \"/catboost_request\";\n+\n+    CatBoostLibraryBridgeHelper(ContextPtr context_, std::string_view library_path_, std::string_view model_path_);\n+\n+    size_t getTreeCount();\n+\n+    ColumnPtr evaluate(const ColumnsWithTypeAndName & columns);\n+\n+protected:\n+    Poco::URI getPingURI() const override;\n+\n+    Poco::URI getMainURI() const override;\n+\n+    bool bridgeHandShake() override;\n+\n+private:\n+    static constexpr inline auto CATBOOST_GETTREECOUNT_METHOD = \"catboost_GetTreeCount\";\n+    static constexpr inline auto CATBOOST_LIB_EVALUATE_METHOD = \"catboost_libEvaluate\";\n+\n+    Poco::URI createRequestURI(const String & method) const;\n+\n+    const String library_path;\n+    const String model_path;\n+};\n+\n+}\ndiff --git a/src/BridgeHelper/IBridgeHelper.h b/src/BridgeHelper/IBridgeHelper.h\nindex 5068e84f885c..a3348c81b68f 100644\n--- a/src/BridgeHelper/IBridgeHelper.h\n+++ b/src/BridgeHelper/IBridgeHelper.h\n@@ -12,8 +12,8 @@\n namespace DB\n {\n \n-/// Common base class for XDBC and Library bridge helpers.\n-/// Contains helper methods to check/start bridge sync.\n+/// Base class for server-side bridge helpers, e.g. xdbc-bridge and library-bridge.\n+/// Contains helper methods to check/start bridge sync\n class IBridgeHelper: protected WithContext\n {\n \ndiff --git a/src/Common/Exception.cpp b/src/Common/Exception.cpp\nindex 3645ac5594fb..931f06fdb511 100644\n--- a/src/Common/Exception.cpp\n+++ b/src/Common/Exception.cpp\n@@ -176,10 +176,10 @@ static void tryLogCurrentExceptionImpl(Poco::Logger * logger, const std::string\n \n void tryLogCurrentException(const char * log_name, const std::string & start_of_message)\n {\n-    /// Under high memory pressure, any new allocation will definitelly lead\n-    /// to MEMORY_LIMIT_EXCEEDED exception.\n+    /// Under high memory pressure, new allocations throw a\n+    /// MEMORY_LIMIT_EXCEEDED exception.\n     ///\n-    /// And in this case the exception will not be logged, so let's block the\n+    /// In this case the exception will not be logged, so let's block the\n     /// MemoryTracker until the exception will be logged.\n     LockMemoryExceptionInThread lock_memory_tracker(VariableContext::Global);\n \n@@ -189,8 +189,8 @@ void tryLogCurrentException(const char * log_name, const std::string & start_of_\n \n void tryLogCurrentException(Poco::Logger * logger, const std::string & start_of_message)\n {\n-    /// Under high memory pressure, any new allocation will definitelly lead\n-    /// to MEMORY_LIMIT_EXCEEDED exception.\n+    /// Under high memory pressure, new allocations throw a\n+    /// MEMORY_LIMIT_EXCEEDED exception.\n     ///\n     /// And in this case the exception will not be logged, so let's block the\n     /// MemoryTracker until the exception will be logged.\ndiff --git a/src/Functions/modelEvaluate.cpp b/src/Functions/catboostEvaluate.cpp\nsimilarity index 55%\nrename from src/Functions/modelEvaluate.cpp\nrename to src/Functions/catboostEvaluate.cpp\nindex 3ee2ae3fae4e..1a876aa0b26a 100644\n--- a/src/Functions/modelEvaluate.cpp\n+++ b/src/Functions/catboostEvaluate.cpp\n@@ -1,18 +1,18 @@\n #include <Functions/FunctionHelpers.h>\n #include <Functions/FunctionFactory.h>\n \n-#include <base/range.h>\n-#include <Interpreters/Context.h>\n-#include <Interpreters/ExternalModelsLoader.h>\n-#include <Columns/ColumnString.h>\n-#include <string>\n-#include <memory>\n-#include <DataTypes/DataTypeNullable.h>\n+#include <BridgeHelper/CatBoostLibraryBridgeHelper.h>\n+#include <BridgeHelper/IBridgeHelper.h>\n #include <Columns/ColumnNullable.h>\n+#include <Columns/ColumnString.h>\n #include <Columns/ColumnTuple.h>\n-#include <DataTypes/DataTypeTuple.h>\n+#include <Columns/ColumnsNumber.h>\n #include <Common/assert_cast.h>\n+#include <DataTypes/DataTypeNullable.h>\n+#include <DataTypes/DataTypeTuple.h>\n+#include <DataTypes/DataTypesNumber.h>\n #include <Functions/IFunction.h>\n+#include <Interpreters/Context.h>\n #include <Interpreters/Context_fwd.h>\n \n \n@@ -21,66 +21,80 @@ namespace DB\n \n namespace ErrorCodes\n {\n+    extern const int FILE_DOESNT_EXIST;\n     extern const int ILLEGAL_TYPE_OF_ARGUMENT;\n     extern const int TOO_FEW_ARGUMENTS_FOR_FUNCTION;\n     extern const int ILLEGAL_COLUMN;\n }\n \n-class ExternalModelsLoader;\n-\n-\n-/// Evaluate external model.\n-/// First argument - model name, the others - model arguments.\n-///   * for CatBoost model - float features first, then categorical\n-/// Result - Float64.\n-class FunctionModelEvaluate final : public IFunction\n+/// Evaluate CatBoost model.\n+/// - Arguments: float features first, then categorical features.\n+/// - Result: Float64.\n+class FunctionCatBoostEvaluate final : public IFunction, WithContext\n {\n-public:\n-    static constexpr auto name = \"modelEvaluate\";\n+private:\n+    mutable std::unique_ptr<CatBoostLibraryBridgeHelper> bridge_helper;\n \n-    static FunctionPtr create(ContextPtr context)\n-    {\n-        return std::make_shared<FunctionModelEvaluate>(context->getExternalModelsLoader());\n-    }\n+public:\n+    static constexpr auto name = \"catboostEvaluate\";\n \n-    explicit FunctionModelEvaluate(const ExternalModelsLoader & models_loader_)\n-        : models_loader(models_loader_) {}\n+    static FunctionPtr create(ContextPtr context_) { return std::make_shared<FunctionCatBoostEvaluate>(context_); }\n \n+    explicit FunctionCatBoostEvaluate(ContextPtr context_) : WithContext(context_) {}\n     String getName() const override { return name; }\n-\n     bool isVariadic() const override { return true; }\n-\n     bool isSuitableForShortCircuitArgumentsExecution(const DataTypesWithConstInfo & /*arguments*/) const override { return true; }\n-\n     bool isDeterministic() const override { return false; }\n-\n     bool useDefaultImplementationForNulls() const override { return false; }\n-\n     size_t getNumberOfArguments() const override { return 0; }\n \n+    void initBridge(const ColumnConst * name_col) const\n+    {\n+        String library_path = getContext()->getConfigRef().getString(\"catboost_lib_path\");\n+        if (!std::filesystem::exists(library_path))\n+            throw Exception(ErrorCodes::FILE_DOESNT_EXIST, \"Can't load library {}: file doesn't exist\", library_path);\n+\n+        String model_path = name_col->getValue<String>();\n+        if (!std::filesystem::exists(model_path))\n+            throw Exception(ErrorCodes::FILE_DOESNT_EXIST, \"Can't load model {}: file doesn't exist\", model_path);\n+\n+        bridge_helper = std::make_unique<CatBoostLibraryBridgeHelper>(getContext(), library_path, model_path);\n+    }\n+\n+    DataTypePtr getReturnTypeFromLibraryBridge() const\n+    {\n+        size_t tree_count = bridge_helper->getTreeCount();\n+        auto type = std::make_shared<DataTypeFloat64>();\n+        if (tree_count == 1)\n+            return type;\n+\n+        DataTypes types(tree_count, type);\n+\n+        return std::make_shared<DataTypeTuple>(types);\n+    }\n \n     DataTypePtr getReturnTypeImpl(const ColumnsWithTypeAndName & arguments) const override\n     {\n         if (arguments.size() < 2)\n-            throw Exception(\"Function \" + getName() + \" expects at least 2 arguments\",\n-                            ErrorCodes::TOO_FEW_ARGUMENTS_FOR_FUNCTION);\n+            throw Exception(ErrorCodes::TOO_FEW_ARGUMENTS_FOR_FUNCTION, \"Function {} expects at least 2 arguments\", getName());\n \n         if (!isString(arguments[0].type))\n-            throw Exception(\"Illegal type \" + arguments[0].type->getName() + \" of first argument of function \" + getName()\n-                            + \", expected a string.\", ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT);\n+            throw Exception(\n+                ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT,\n+                \"Illegal type {} of first argument of function {}, expected a string.\", arguments[0].type->getName(), getName());\n \n         const auto * name_col = checkAndGetColumnConst<ColumnString>(arguments[0].column.get());\n         if (!name_col)\n-            throw Exception(\"First argument of function \" + getName() + \" must be a constant string\",\n-                            ErrorCodes::ILLEGAL_COLUMN);\n+            throw Exception(ErrorCodes::ILLEGAL_COLUMN, \"First argument of function {} must be a constant string\", getName());\n+\n+        initBridge(name_col);\n+\n+        auto type = getReturnTypeFromLibraryBridge();\n \n         bool has_nullable = false;\n         for (size_t i = 1; i < arguments.size(); ++i)\n             has_nullable = has_nullable || arguments[i].type->isNullable();\n \n-        auto model = models_loader.getModel(name_col->getValue<String>());\n-        auto type = model->getReturnType();\n-\n         if (has_nullable)\n         {\n             if (const auto * tuple = typeid_cast<const DataTypeTuple *>(type.get()))\n@@ -98,31 +112,25 @@ class FunctionModelEvaluate final : public IFunction\n         return type;\n     }\n \n-\n     ColumnPtr executeImpl(const ColumnsWithTypeAndName & arguments, const DataTypePtr &, size_t) const override\n     {\n         const auto * name_col = checkAndGetColumnConst<ColumnString>(arguments[0].column.get());\n         if (!name_col)\n-            throw Exception(\"First argument of function \" + getName() + \" must be a constant string\",\n-                            ErrorCodes::ILLEGAL_COLUMN);\n-\n-        auto model = models_loader.getModel(name_col->getValue<String>());\n+            throw Exception(ErrorCodes::ILLEGAL_COLUMN, \"First argument of function {} must be a constant string\", getName());\n \n         ColumnRawPtrs column_ptrs;\n         Columns materialized_columns;\n         ColumnPtr null_map;\n \n-        column_ptrs.reserve(arguments.size());\n-        for (auto arg : collections::range(1, arguments.size()))\n+        ColumnsWithTypeAndName feature_arguments(arguments.begin() + 1, arguments.end());\n+        for (auto & arg : feature_arguments)\n         {\n-            const auto & column = arguments[arg].column;\n-            column_ptrs.push_back(column.get());\n-            if (auto full_column = column->convertToFullColumnIfConst())\n+            if (auto full_column = arg.column->convertToFullColumnIfConst())\n             {\n                 materialized_columns.push_back(full_column);\n-                column_ptrs.back() = full_column.get();\n+                arg.column = full_column;\n             }\n-            if (const auto * col_nullable = checkAndGetColumn<ColumnNullable>(*column_ptrs.back()))\n+            if (const auto * col_nullable = checkAndGetColumn<ColumnNullable>(&*arg.column))\n             {\n                 if (!null_map)\n                     null_map = col_nullable->getNullMapColumnPtr();\n@@ -140,11 +148,12 @@ class FunctionModelEvaluate final : public IFunction\n                     null_map = std::move(mut_null_map);\n                 }\n \n-                column_ptrs.back() = &col_nullable->getNestedColumn();\n+                arg.column = col_nullable->getNestedColumn().getPtr();\n+                arg.type = static_cast<const DataTypeNullable &>(*arg.type).getNestedType();\n             }\n         }\n \n-        auto res = model->evaluate(column_ptrs);\n+        auto res = bridge_helper->evaluate(feature_arguments);\n \n         if (null_map)\n         {\n@@ -162,15 +171,12 @@ class FunctionModelEvaluate final : public IFunction\n \n         return res;\n     }\n-\n-private:\n-    const ExternalModelsLoader & models_loader;\n };\n \n \n-REGISTER_FUNCTION(ExternalModels)\n+REGISTER_FUNCTION(CatBoostEvaluate)\n {\n-    factory.registerFunction<FunctionModelEvaluate>();\n+    factory.registerFunction<FunctionCatBoostEvaluate>();\n }\n \n }\ndiff --git a/src/Interpreters/CatBoostModel.cpp b/src/Interpreters/CatBoostModel.cpp\ndeleted file mode 100644\nindex d5803ed9e362..000000000000\n--- a/src/Interpreters/CatBoostModel.cpp\n+++ /dev/null\n@@ -1,525 +0,0 @@\n-#include \"CatBoostModel.h\"\n-\n-#include <Common/FieldVisitorConvertToNumber.h>\n-#include <mutex>\n-#include <Columns/ColumnString.h>\n-#include <Columns/ColumnFixedString.h>\n-#include <Columns/ColumnVector.h>\n-#include <Columns/ColumnTuple.h>\n-#include <Common/typeid_cast.h>\n-#include <IO/WriteBufferFromString.h>\n-#include <IO/Operators.h>\n-#include <Common/PODArray.h>\n-#include <Common/SharedLibrary.h>\n-#include <DataTypes/DataTypesNumber.h>\n-#include <DataTypes/DataTypeTuple.h>\n-\n-\n-namespace DB\n-{\n-\n-namespace ErrorCodes\n-{\n-extern const int LOGICAL_ERROR;\n-extern const int BAD_ARGUMENTS;\n-extern const int CANNOT_LOAD_CATBOOST_MODEL;\n-extern const int CANNOT_APPLY_CATBOOST_MODEL;\n-}\n-\n-/// CatBoost wrapper interface functions.\n-class CatBoostWrapperAPI\n-{\n-public:\n-    using ModelCalcerHandle = void;\n-\n-    ModelCalcerHandle * (* ModelCalcerCreate)(); // NOLINT\n-\n-    void (* ModelCalcerDelete)(ModelCalcerHandle * calcer); // NOLINT\n-\n-    const char * (* GetErrorString)(); // NOLINT\n-\n-    bool (* LoadFullModelFromFile)(ModelCalcerHandle * calcer, const char * filename); // NOLINT\n-\n-    bool (* CalcModelPredictionFlat)(ModelCalcerHandle * calcer, size_t docCount, // NOLINT\n-                                     const float ** floatFeatures, size_t floatFeaturesSize,\n-                                     double * result, size_t resultSize);\n-\n-    bool (* CalcModelPrediction)(ModelCalcerHandle * calcer, size_t docCount, // NOLINT\n-                                 const float ** floatFeatures, size_t floatFeaturesSize,\n-                                 const char *** catFeatures, size_t catFeaturesSize,\n-                                 double * result, size_t resultSize);\n-\n-    bool (* CalcModelPredictionWithHashedCatFeatures)(ModelCalcerHandle * calcer, size_t docCount, // NOLINT\n-                                                      const float ** floatFeatures, size_t floatFeaturesSize,\n-                                                      const int ** catFeatures, size_t catFeaturesSize,\n-                                                      double * result, size_t resultSize);\n-\n-    int (* GetStringCatFeatureHash)(const char * data, size_t size); // NOLINT\n-    int (* GetIntegerCatFeatureHash)(uint64_t val); // NOLINT\n-\n-    size_t (* GetFloatFeaturesCount)(ModelCalcerHandle* calcer); // NOLINT\n-    size_t (* GetCatFeaturesCount)(ModelCalcerHandle* calcer); // NOLINT\n-    size_t (* GetTreeCount)(ModelCalcerHandle* modelHandle); // NOLINT\n-    size_t (* GetDimensionsCount)(ModelCalcerHandle* modelHandle); // NOLINT\n-\n-    bool (* CheckModelMetadataHasKey)(ModelCalcerHandle* modelHandle, const char* keyPtr, size_t keySize); // NOLINT\n-    size_t (*GetModelInfoValueSize)(ModelCalcerHandle* modelHandle, const char* keyPtr, size_t keySize); // NOLINT\n-    const char* (*GetModelInfoValue)(ModelCalcerHandle* modelHandle, const char* keyPtr, size_t keySize); // NOLINT\n-};\n-\n-\n-class CatBoostModelHolder\n-{\n-private:\n-    CatBoostWrapperAPI::ModelCalcerHandle * handle;\n-    const CatBoostWrapperAPI * api;\n-public:\n-    explicit CatBoostModelHolder(const CatBoostWrapperAPI * api_) : api(api_) { handle = api->ModelCalcerCreate(); }\n-    ~CatBoostModelHolder() { api->ModelCalcerDelete(handle); }\n-\n-    CatBoostWrapperAPI::ModelCalcerHandle * get() { return handle; }\n-};\n-\n-\n-/// Holds CatBoost wrapper library and provides wrapper interface.\n-class CatBoostLibHolder\n-{\n-public:\n-    explicit CatBoostLibHolder(std::string lib_path_) : lib_path(std::move(lib_path_)), lib(lib_path) { initAPI(); }\n-\n-    const CatBoostWrapperAPI & getAPI() const { return api; }\n-    const std::string & getCurrentPath() const { return lib_path; }\n-\n-private:\n-    CatBoostWrapperAPI api;\n-    std::string lib_path;\n-    SharedLibrary lib;\n-\n-    void initAPI()\n-    {\n-        load(api.ModelCalcerCreate, \"ModelCalcerCreate\");\n-        load(api.ModelCalcerDelete, \"ModelCalcerDelete\");\n-        load(api.GetErrorString, \"GetErrorString\");\n-        load(api.LoadFullModelFromFile, \"LoadFullModelFromFile\");\n-        load(api.CalcModelPredictionFlat, \"CalcModelPredictionFlat\");\n-        load(api.CalcModelPrediction, \"CalcModelPrediction\");\n-        load(api.CalcModelPredictionWithHashedCatFeatures, \"CalcModelPredictionWithHashedCatFeatures\");\n-        load(api.GetStringCatFeatureHash, \"GetStringCatFeatureHash\");\n-        load(api.GetIntegerCatFeatureHash, \"GetIntegerCatFeatureHash\");\n-        load(api.GetFloatFeaturesCount, \"GetFloatFeaturesCount\");\n-        load(api.GetCatFeaturesCount, \"GetCatFeaturesCount\");\n-        tryLoad(api.CheckModelMetadataHasKey, \"CheckModelMetadataHasKey\");\n-        tryLoad(api.GetModelInfoValueSize, \"GetModelInfoValueSize\");\n-        tryLoad(api.GetModelInfoValue, \"GetModelInfoValue\");\n-        tryLoad(api.GetTreeCount, \"GetTreeCount\");\n-        tryLoad(api.GetDimensionsCount, \"GetDimensionsCount\");\n-    }\n-\n-    template <typename T>\n-    void load(T& func, const std::string & name) { func = lib.get<T>(name); }\n-\n-    template <typename T>\n-    void tryLoad(T& func, const std::string & name) { func = lib.tryGet<T>(name); }\n-};\n-\n-std::shared_ptr<CatBoostLibHolder> getCatBoostWrapperHolder(const std::string & lib_path)\n-{\n-    static std::shared_ptr<CatBoostLibHolder> ptr;\n-    static std::mutex mutex;\n-\n-    std::lock_guard lock(mutex);\n-\n-    if (!ptr || ptr->getCurrentPath() != lib_path)\n-        ptr = std::make_shared<CatBoostLibHolder>(lib_path);\n-\n-    return ptr;\n-}\n-\n-class CatBoostModelImpl\n-{\n-public:\n-    CatBoostModelImpl(const CatBoostWrapperAPI * api_, const std::string & model_path) : api(api_)\n-    {\n-        handle = std::make_unique<CatBoostModelHolder>(api);\n-        if (!handle)\n-        {\n-            throw Exception(ErrorCodes::CANNOT_LOAD_CATBOOST_MODEL,\n-                \"Cannot create CatBoost model: {}\",\n-                api->GetErrorString());\n-        }\n-        if (!api->LoadFullModelFromFile(handle->get(), model_path.c_str()))\n-        {\n-            throw Exception(ErrorCodes::CANNOT_LOAD_CATBOOST_MODEL,\n-                \"Cannot load CatBoost model: {}\",\n-                api->GetErrorString());\n-        }\n-\n-        float_features_count = api->GetFloatFeaturesCount(handle->get());\n-        cat_features_count = api->GetCatFeaturesCount(handle->get());\n-        tree_count = 1;\n-        if (api->GetDimensionsCount)\n-            tree_count = api->GetDimensionsCount(handle->get());\n-    }\n-\n-    ColumnPtr evaluate(const ColumnRawPtrs & columns) const\n-    {\n-        if (columns.empty())\n-            throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Got empty columns list for CatBoost model.\");\n-\n-        if (columns.size() != float_features_count + cat_features_count)\n-            throw Exception(ErrorCodes::BAD_ARGUMENTS,\n-                \"Number of columns is different with number of features: columns size {} float features size {} + cat features size {}\",\n-                columns.size(),\n-                float_features_count,\n-                cat_features_count);\n-\n-        for (size_t i = 0; i < float_features_count; ++i)\n-        {\n-            if (!columns[i]->isNumeric())\n-            {\n-                throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Column {} should be numeric to make float feature.\", i);\n-            }\n-        }\n-\n-        bool cat_features_are_strings = true;\n-        for (size_t i = float_features_count; i < float_features_count + cat_features_count; ++i)\n-        {\n-            const auto * column = columns[i];\n-            if (column->isNumeric())\n-            {\n-                cat_features_are_strings = false;\n-            }\n-            else if (!(typeid_cast<const ColumnString *>(column)\n-                       || typeid_cast<const ColumnFixedString *>(column)))\n-            {\n-                throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Column {} should be numeric or string.\", i);\n-            }\n-        }\n-\n-        auto result = evalImpl(columns, cat_features_are_strings);\n-\n-        if (tree_count == 1)\n-            return result;\n-\n-        size_t column_size = columns.front()->size();\n-        auto * result_buf = result->getData().data();\n-\n-        /// Multiple trees case. Copy data to several columns.\n-        MutableColumns mutable_columns(tree_count);\n-        std::vector<Float64 *> column_ptrs(tree_count);\n-        for (size_t i = 0; i < tree_count; ++i)\n-        {\n-            auto col = ColumnFloat64::create(column_size);\n-            column_ptrs[i] = col->getData().data();\n-            mutable_columns[i] = std::move(col);\n-        }\n-\n-        Float64 * data = result_buf;\n-        for (size_t row = 0; row < column_size; ++row)\n-        {\n-            for (size_t i = 0; i < tree_count; ++i)\n-            {\n-                *column_ptrs[i] = *data;\n-                ++column_ptrs[i];\n-                ++data;\n-            }\n-        }\n-\n-        return ColumnTuple::create(std::move(mutable_columns));\n-    }\n-\n-    size_t getFloatFeaturesCount() const { return float_features_count; }\n-    size_t getCatFeaturesCount() const { return cat_features_count; }\n-    size_t getTreeCount() const { return tree_count; }\n-\n-private:\n-    std::unique_ptr<CatBoostModelHolder> handle;\n-    const CatBoostWrapperAPI * api;\n-    size_t float_features_count;\n-    size_t cat_features_count;\n-    size_t tree_count;\n-\n-    /// Buffer should be allocated with features_count * column->size() elements.\n-    /// Place column elements in positions buffer[0], buffer[features_count], ... , buffer[size * features_count]\n-    template <typename T>\n-    void placeColumnAsNumber(const IColumn * column, T * buffer, size_t features_count) const\n-    {\n-        size_t size = column->size();\n-        FieldVisitorConvertToNumber<T> visitor;\n-        for (size_t i = 0; i < size; ++i)\n-        {\n-            /// TODO: Replace with column visitor.\n-            Field field;\n-            column->get(i, field);\n-            *buffer = applyVisitor(visitor, field);\n-            buffer += features_count;\n-        }\n-    }\n-\n-    /// Buffer should be allocated with features_count * column->size() elements.\n-    /// Place string pointers in positions buffer[0], buffer[features_count], ... , buffer[size * features_count]\n-    static void placeStringColumn(const ColumnString & column, const char ** buffer, size_t features_count)\n-    {\n-        size_t size = column.size();\n-        for (size_t i = 0; i < size; ++i)\n-        {\n-            *buffer = const_cast<char *>(column.getDataAtWithTerminatingZero(i).data);\n-            buffer += features_count;\n-        }\n-    }\n-\n-    /// Buffer should be allocated with features_count * column->size() elements.\n-    /// Place string pointers in positions buffer[0], buffer[features_count], ... , buffer[size * features_count]\n-    /// Returns PODArray which holds data (because ColumnFixedString doesn't store terminating zero).\n-    static PODArray<char> placeFixedStringColumn(\n-            const ColumnFixedString & column, const char ** buffer, size_t features_count)\n-    {\n-        size_t size = column.size();\n-        size_t str_size = column.getN();\n-        PODArray<char> data(size * (str_size + 1));\n-        char * data_ptr = data.data();\n-\n-        for (size_t i = 0; i < size; ++i)\n-        {\n-            auto ref = column.getDataAt(i);\n-            memcpy(data_ptr, ref.data, ref.size);\n-            data_ptr[ref.size] = 0;\n-            *buffer = data_ptr;\n-            data_ptr += ref.size + 1;\n-            buffer += features_count;\n-        }\n-\n-        return data;\n-    }\n-\n-    /// Place columns into buffer, returns column which holds placed data. Buffer should contains column->size() values.\n-    template <typename T>\n-    ColumnPtr placeNumericColumns(const ColumnRawPtrs & columns,\n-                                  size_t offset, size_t size, const T** buffer) const\n-    {\n-        if (size == 0)\n-            return nullptr;\n-        size_t column_size = columns[offset]->size();\n-        auto data_column = ColumnVector<T>::create(size * column_size);\n-        T * data = data_column->getData().data();\n-        for (size_t i = 0; i < size; ++i)\n-        {\n-            const auto * column = columns[offset + i];\n-            if (column->isNumeric())\n-                placeColumnAsNumber(column, data + i, size);\n-        }\n-\n-        for (size_t i = 0; i < column_size; ++i)\n-        {\n-            *buffer = data;\n-            ++buffer;\n-            data += size;\n-        }\n-\n-        return data_column;\n-    }\n-\n-    /// Place columns into buffer, returns data which was used for fixed string columns.\n-    /// Buffer should contains column->size() values, each value contains size strings.\n-    static std::vector<PODArray<char>> placeStringColumns(\n-            const ColumnRawPtrs & columns, size_t offset, size_t size, const char ** buffer)\n-    {\n-        if (size == 0)\n-            return {};\n-\n-        std::vector<PODArray<char>> data;\n-        for (size_t i = 0; i < size; ++i)\n-        {\n-            const auto * column = columns[offset + i];\n-            if (const auto * column_string = typeid_cast<const ColumnString *>(column))\n-                placeStringColumn(*column_string, buffer + i, size);\n-            else if (const auto * column_fixed_string = typeid_cast<const ColumnFixedString *>(column))\n-                data.push_back(placeFixedStringColumn(*column_fixed_string, buffer + i, size));\n-            else\n-                throw Exception(\"Cannot place string column.\", ErrorCodes::LOGICAL_ERROR);\n-        }\n-\n-        return data;\n-    }\n-\n-    /// Calc hash for string cat feature at ps positions.\n-    template <typename Column>\n-    void calcStringHashes(const Column * column, size_t ps, const int ** buffer) const\n-    {\n-        size_t column_size = column->size();\n-        for (size_t j = 0; j < column_size; ++j)\n-        {\n-            auto ref = column->getDataAt(j);\n-            const_cast<int *>(*buffer)[ps] = api->GetStringCatFeatureHash(ref.data, ref.size);\n-            ++buffer;\n-        }\n-    }\n-\n-    /// Calc hash for int cat feature at ps position. Buffer at positions ps should contains unhashed values.\n-    void calcIntHashes(size_t column_size, size_t ps, const int ** buffer) const\n-    {\n-        for (size_t j = 0; j < column_size; ++j)\n-        {\n-            const_cast<int *>(*buffer)[ps] = api->GetIntegerCatFeatureHash((*buffer)[ps]);\n-            ++buffer;\n-        }\n-    }\n-\n-    /// buffer contains column->size() rows and size columns.\n-    /// For int cat features calc hash inplace.\n-    /// For string cat features calc hash from column rows.\n-    void calcHashes(const ColumnRawPtrs & columns, size_t offset, size_t size, const int ** buffer) const\n-    {\n-        if (size == 0)\n-            return;\n-        size_t column_size = columns[offset]->size();\n-\n-        std::vector<PODArray<char>> data;\n-        for (size_t i = 0; i < size; ++i)\n-        {\n-            const auto * column = columns[offset + i];\n-            if (const auto * column_string = typeid_cast<const ColumnString *>(column))\n-                calcStringHashes(column_string, i, buffer);\n-            else if (const auto * column_fixed_string = typeid_cast<const ColumnFixedString *>(column))\n-                calcStringHashes(column_fixed_string, i, buffer);\n-            else\n-                calcIntHashes(column_size, i, buffer);\n-        }\n-    }\n-\n-    /// buffer[column_size * cat_features_count] -> char * => cat_features[column_size][cat_features_count] -> char *\n-    void fillCatFeaturesBuffer(const char *** cat_features, const char ** buffer,\n-                               size_t column_size) const\n-    {\n-        for (size_t i = 0; i < column_size; ++i)\n-        {\n-            *cat_features = buffer;\n-            ++cat_features;\n-            buffer += cat_features_count;\n-        }\n-    }\n-\n-    /// Convert values to row-oriented format and call evaluation function from CatBoost wrapper api.\n-    ///  * CalcModelPredictionFlat if no cat features\n-    ///  * CalcModelPrediction if all cat features are strings\n-    ///  * CalcModelPredictionWithHashedCatFeatures if has int cat features.\n-    ColumnFloat64::MutablePtr evalImpl(\n-        const ColumnRawPtrs & columns,\n-        bool cat_features_are_strings) const\n-    {\n-        std::string error_msg = \"Error occurred while applying CatBoost model: \";\n-        size_t column_size = columns.front()->size();\n-\n-        auto result = ColumnFloat64::create(column_size * tree_count);\n-        auto * result_buf = result->getData().data();\n-\n-        if (!column_size)\n-            return result;\n-\n-        /// Prepare float features.\n-        PODArray<const float *> float_features(column_size);\n-        auto * float_features_buf = float_features.data();\n-        /// Store all float data into single column. float_features is a list of pointers to it.\n-        auto float_features_col = placeNumericColumns<float>(columns, 0, float_features_count, float_features_buf);\n-\n-        if (cat_features_count == 0)\n-        {\n-            if (!api->CalcModelPredictionFlat(handle->get(), column_size,\n-                                              float_features_buf, float_features_count,\n-                                              result_buf, column_size * tree_count))\n-            {\n-\n-                throw Exception(error_msg + api->GetErrorString(), ErrorCodes::CANNOT_APPLY_CATBOOST_MODEL);\n-            }\n-            return result;\n-        }\n-\n-        /// Prepare cat features.\n-        if (cat_features_are_strings)\n-        {\n-            /// cat_features_holder stores pointers to ColumnString data or fixed_strings_data.\n-            PODArray<const char *> cat_features_holder(cat_features_count * column_size);\n-            PODArray<const char **> cat_features(column_size);\n-            auto * cat_features_buf = cat_features.data();\n-\n-            fillCatFeaturesBuffer(cat_features_buf, cat_features_holder.data(), column_size);\n-            /// Fixed strings are stored without termination zero, so have to copy data into fixed_strings_data.\n-            auto fixed_strings_data = placeStringColumns(columns, float_features_count,\n-                                                         cat_features_count, cat_features_holder.data());\n-\n-            if (!api->CalcModelPrediction(handle->get(), column_size,\n-                                          float_features_buf, float_features_count,\n-                                          cat_features_buf, cat_features_count,\n-                                          result_buf, column_size * tree_count))\n-            {\n-                throw Exception(error_msg + api->GetErrorString(), ErrorCodes::CANNOT_APPLY_CATBOOST_MODEL);\n-            }\n-        }\n-        else\n-        {\n-            PODArray<const int *> cat_features(column_size);\n-            auto * cat_features_buf = cat_features.data();\n-            auto cat_features_col = placeNumericColumns<int>(columns, float_features_count,\n-                                                             cat_features_count, cat_features_buf);\n-            calcHashes(columns, float_features_count, cat_features_count, cat_features_buf);\n-            if (!api->CalcModelPredictionWithHashedCatFeatures(\n-                    handle->get(), column_size,\n-                    float_features_buf, float_features_count,\n-                    cat_features_buf, cat_features_count,\n-                    result_buf, column_size * tree_count))\n-            {\n-                throw Exception(error_msg + api->GetErrorString(), ErrorCodes::CANNOT_APPLY_CATBOOST_MODEL);\n-            }\n-        }\n-\n-        return result;\n-    }\n-};\n-\n-CatBoostModel::CatBoostModel(std::string name_, std::string model_path_, std::string lib_path_,\n-                             const ExternalLoadableLifetime & lifetime_)\n-    : name(std::move(name_)), model_path(std::move(model_path_)), lib_path(std::move(lib_path_)), lifetime(lifetime_)\n-{\n-    api_provider = getCatBoostWrapperHolder(lib_path);\n-    api = &api_provider->getAPI();\n-    model = std::make_unique<CatBoostModelImpl>(api, model_path);\n-}\n-\n-CatBoostModel::~CatBoostModel() = default;\n-\n-size_t CatBoostModel::getFloatFeaturesCount() const\n-{\n-    return model->getFloatFeaturesCount();\n-}\n-\n-size_t CatBoostModel::getCatFeaturesCount() const\n-{\n-    return model->getCatFeaturesCount();\n-}\n-\n-size_t CatBoostModel::getTreeCount() const\n-{\n-    return model->getTreeCount();\n-}\n-\n-DataTypePtr CatBoostModel::getReturnType() const\n-{\n-    size_t tree_count = getTreeCount();\n-    auto type = std::make_shared<DataTypeFloat64>();\n-    if (tree_count == 1)\n-        return type;\n-\n-    DataTypes types(tree_count, type);\n-\n-    return std::make_shared<DataTypeTuple>(types);\n-}\n-\n-ColumnPtr CatBoostModel::evaluate(const ColumnRawPtrs & columns) const\n-{\n-    if (!model)\n-        throw Exception(\"CatBoost model was not loaded.\", ErrorCodes::LOGICAL_ERROR);\n-\n-    return model->evaluate(columns);\n-}\n-\n-}\ndiff --git a/src/Interpreters/CatBoostModel.h b/src/Interpreters/CatBoostModel.h\ndeleted file mode 100644\nindex 7bb1df92b674..000000000000\n--- a/src/Interpreters/CatBoostModel.h\n+++ /dev/null\n@@ -1,73 +0,0 @@\n-#pragma once\n-\n-#include <Interpreters/IExternalLoadable.h>\n-#include <Columns/IColumn.h>\n-#include <Columns/ColumnsNumber.h>\n-\n-\n-namespace DB\n-{\n-\n-class CatBoostLibHolder;\n-class CatBoostWrapperAPI;\n-class CatBoostModelImpl;\n-\n-class IDataType;\n-using DataTypePtr = std::shared_ptr<const IDataType>;\n-\n-/// General ML model evaluator interface.\n-class IMLModel : public IExternalLoadable\n-{\n-public:\n-    IMLModel() = default;\n-    virtual ColumnPtr evaluate(const ColumnRawPtrs & columns) const = 0;\n-    virtual std::string getTypeName() const = 0;\n-    virtual DataTypePtr getReturnType() const = 0;\n-    virtual ~IMLModel() override = default;\n-};\n-\n-class CatBoostModel : public IMLModel\n-{\n-public:\n-    CatBoostModel(std::string name, std::string model_path,\n-                  std::string lib_path, const ExternalLoadableLifetime & lifetime);\n-\n-    ~CatBoostModel() override;\n-\n-    ColumnPtr evaluate(const ColumnRawPtrs & columns) const override;\n-    std::string getTypeName() const override { return \"catboost\"; }\n-\n-    size_t getFloatFeaturesCount() const;\n-    size_t getCatFeaturesCount() const;\n-    size_t getTreeCount() const;\n-    DataTypePtr getReturnType() const override;\n-\n-    /// IExternalLoadable interface.\n-\n-    const ExternalLoadableLifetime & getLifetime() const override { return lifetime; }\n-\n-    std::string getLoadableName() const override { return name; }\n-\n-    bool supportUpdates() const override { return true; }\n-\n-    bool isModified() const override { return true; }\n-\n-    std::shared_ptr<const IExternalLoadable> clone() const override\n-    {\n-        return std::make_shared<CatBoostModel>(name, model_path, lib_path, lifetime);\n-    }\n-\n-private:\n-    const std::string name;\n-    std::string model_path;\n-    std::string lib_path;\n-    ExternalLoadableLifetime lifetime;\n-    std::shared_ptr<CatBoostLibHolder> api_provider;\n-    const CatBoostWrapperAPI * api;\n-\n-    std::unique_ptr<CatBoostModelImpl> model;\n-\n-    void init();\n-};\n-\n-}\ndiff --git a/src/Interpreters/Context.cpp b/src/Interpreters/Context.cpp\nindex d45d30f1957b..2438dc4335c9 100644\n--- a/src/Interpreters/Context.cpp\n+++ b/src/Interpreters/Context.cpp\n@@ -52,7 +52,6 @@\n #include <Interpreters/EmbeddedDictionaries.h>\n #include <Interpreters/ExternalDictionariesLoader.h>\n #include <Interpreters/ExternalUserDefinedExecutableFunctionsLoader.h>\n-#include <Interpreters/ExternalModelsLoader.h>\n #include <Interpreters/ExpressionActions.h>\n #include <Interpreters/ProcessList.h>\n #include <Interpreters/InterserverCredentials.h>\n@@ -153,7 +152,6 @@ struct ContextSharedPart\n     mutable std::mutex embedded_dictionaries_mutex;\n     mutable std::mutex external_dictionaries_mutex;\n     mutable std::mutex external_user_defined_executable_functions_mutex;\n-    mutable std::mutex external_models_mutex;\n     /// Separate mutex for storage policies. During server startup we may\n     /// initialize some important storages (system logs with MergeTree engine)\n     /// under context lock.\n@@ -191,9 +189,7 @@ struct ContextSharedPart\n     mutable std::unique_ptr<EmbeddedDictionaries> embedded_dictionaries;    /// Metrica's dictionaries. Have lazy initialization.\n     mutable std::unique_ptr<ExternalDictionariesLoader> external_dictionaries_loader;\n     mutable std::unique_ptr<ExternalUserDefinedExecutableFunctionsLoader> external_user_defined_executable_functions_loader;\n-    mutable std::unique_ptr<ExternalModelsLoader> external_models_loader;\n \n-    ExternalLoaderXMLConfigRepository * external_models_config_repository = nullptr;\n     scope_guard models_repository_guard;\n \n     ExternalLoaderXMLConfigRepository * external_dictionaries_config_repository = nullptr;\n@@ -350,8 +346,6 @@ struct ContextSharedPart\n             external_dictionaries_loader->enablePeriodicUpdates(false);\n         if (external_user_defined_executable_functions_loader)\n             external_user_defined_executable_functions_loader->enablePeriodicUpdates(false);\n-        if (external_models_loader)\n-            external_models_loader->enablePeriodicUpdates(false);\n \n         Session::shutdownNamedSessions();\n \n@@ -382,7 +376,6 @@ struct ContextSharedPart\n         std::unique_ptr<EmbeddedDictionaries> delete_embedded_dictionaries;\n         std::unique_ptr<ExternalDictionariesLoader> delete_external_dictionaries_loader;\n         std::unique_ptr<ExternalUserDefinedExecutableFunctionsLoader> delete_external_user_defined_executable_functions_loader;\n-        std::unique_ptr<ExternalModelsLoader> delete_external_models_loader;\n         std::unique_ptr<BackgroundSchedulePool> delete_buffer_flush_schedule_pool;\n         std::unique_ptr<BackgroundSchedulePool> delete_schedule_pool;\n         std::unique_ptr<BackgroundSchedulePool> delete_distributed_schedule_pool;\n@@ -421,7 +414,6 @@ struct ContextSharedPart\n             delete_embedded_dictionaries = std::move(embedded_dictionaries);\n             delete_external_dictionaries_loader = std::move(external_dictionaries_loader);\n             delete_external_user_defined_executable_functions_loader = std::move(external_user_defined_executable_functions_loader);\n-            delete_external_models_loader = std::move(external_models_loader);\n             delete_buffer_flush_schedule_pool = std::move(buffer_flush_schedule_pool);\n             delete_schedule_pool = std::move(schedule_pool);\n             delete_distributed_schedule_pool = std::move(distributed_schedule_pool);\n@@ -449,7 +441,6 @@ struct ContextSharedPart\n         delete_embedded_dictionaries.reset();\n         delete_external_dictionaries_loader.reset();\n         delete_external_user_defined_executable_functions_loader.reset();\n-        delete_external_models_loader.reset();\n         delete_ddl_worker.reset();\n         delete_buffer_flush_schedule_pool.reset();\n         delete_schedule_pool.reset();\n@@ -1490,48 +1481,6 @@ ExternalUserDefinedExecutableFunctionsLoader & Context::getExternalUserDefinedEx\n     return *shared->external_user_defined_executable_functions_loader;\n }\n \n-const ExternalModelsLoader & Context::getExternalModelsLoader() const\n-{\n-    return const_cast<Context *>(this)->getExternalModelsLoader();\n-}\n-\n-ExternalModelsLoader & Context::getExternalModelsLoader()\n-{\n-    std::lock_guard lock(shared->external_models_mutex);\n-    return getExternalModelsLoaderUnlocked();\n-}\n-\n-ExternalModelsLoader & Context::getExternalModelsLoaderUnlocked()\n-{\n-    if (!shared->external_models_loader)\n-        shared->external_models_loader =\n-            std::make_unique<ExternalModelsLoader>(getGlobalContext());\n-    return *shared->external_models_loader;\n-}\n-\n-void Context::loadOrReloadModels(const Poco::Util::AbstractConfiguration & config)\n-{\n-    auto patterns_values = getMultipleValuesFromConfig(config, \"\", \"models_config\");\n-    std::unordered_set<std::string> patterns(patterns_values.begin(), patterns_values.end());\n-\n-    std::lock_guard lock(shared->external_models_mutex);\n-\n-    auto & external_models_loader = getExternalModelsLoaderUnlocked();\n-\n-    if (shared->external_models_config_repository)\n-    {\n-        shared->external_models_config_repository->updatePatterns(patterns);\n-        external_models_loader.reloadConfig(shared->external_models_config_repository->getName());\n-        return;\n-    }\n-\n-    auto app_path = getPath();\n-    auto config_path = getConfigRef().getString(\"config-file\", \"config.xml\");\n-    auto repository = std::make_unique<ExternalLoaderXMLConfigRepository>(app_path, config_path, patterns);\n-    shared->external_models_config_repository = repository.get();\n-    shared->models_repository_guard = external_models_loader.addConfigRepository(std::move(repository));\n-}\n-\n EmbeddedDictionaries & Context::getEmbeddedDictionariesImpl(const bool throw_on_error) const\n {\n     std::lock_guard lock(shared->embedded_dictionaries_mutex);\ndiff --git a/src/Interpreters/Context.h b/src/Interpreters/Context.h\nindex ea03b8e65866..8be9e3de76de 100644\n--- a/src/Interpreters/Context.h\n+++ b/src/Interpreters/Context.h\n@@ -53,7 +53,6 @@ class AccessRightsElements;\n enum class RowPolicyFilterType;\n class EmbeddedDictionaries;\n class ExternalDictionariesLoader;\n-class ExternalModelsLoader;\n class ExternalUserDefinedExecutableFunctionsLoader;\n class InterserverCredentials;\n using InterserverCredentialsPtr = std::shared_ptr<const InterserverCredentials>;\n@@ -626,19 +625,15 @@ class Context: public std::enable_shared_from_this<Context>\n \n     const EmbeddedDictionaries & getEmbeddedDictionaries() const;\n     const ExternalDictionariesLoader & getExternalDictionariesLoader() const;\n-    const ExternalModelsLoader & getExternalModelsLoader() const;\n     const ExternalUserDefinedExecutableFunctionsLoader & getExternalUserDefinedExecutableFunctionsLoader() const;\n     EmbeddedDictionaries & getEmbeddedDictionaries();\n     ExternalDictionariesLoader & getExternalDictionariesLoader();\n     ExternalDictionariesLoader & getExternalDictionariesLoaderUnlocked();\n     ExternalUserDefinedExecutableFunctionsLoader & getExternalUserDefinedExecutableFunctionsLoader();\n     ExternalUserDefinedExecutableFunctionsLoader & getExternalUserDefinedExecutableFunctionsLoaderUnlocked();\n-    ExternalModelsLoader & getExternalModelsLoader();\n-    ExternalModelsLoader & getExternalModelsLoaderUnlocked();\n     void tryCreateEmbeddedDictionaries(const Poco::Util::AbstractConfiguration & config) const;\n     void loadOrReloadDictionaries(const Poco::Util::AbstractConfiguration & config);\n     void loadOrReloadUserDefinedExecutableFunctions(const Poco::Util::AbstractConfiguration & config);\n-    void loadOrReloadModels(const Poco::Util::AbstractConfiguration & config);\n \n #if USE_NLP\n     SynonymsExtensions & getSynonymsExtensions() const;\ndiff --git a/src/Interpreters/ExternalModelsLoader.cpp b/src/Interpreters/ExternalModelsLoader.cpp\ndeleted file mode 100644\nindex 317cf0bf1c99..000000000000\n--- a/src/Interpreters/ExternalModelsLoader.cpp\n+++ /dev/null\n@@ -1,41 +0,0 @@\n-#include <Interpreters/ExternalModelsLoader.h>\n-#include <Interpreters/Context.h>\n-\n-namespace DB\n-{\n-\n-namespace ErrorCodes\n-{\n-    extern const int INVALID_CONFIG_PARAMETER;\n-}\n-\n-\n-ExternalModelsLoader::ExternalModelsLoader(ContextPtr context_)\n-    : ExternalLoader(\"external model\", &Poco::Logger::get(\"ExternalModelsLoader\")), WithContext(context_)\n-{\n-    setConfigSettings({\"model\", \"name\", {}, {}});\n-    enablePeriodicUpdates(true);\n-}\n-\n-std::shared_ptr<const IExternalLoadable> ExternalModelsLoader::create(\n-    const std::string & name, const Poco::Util::AbstractConfiguration & config,\n-    const std::string & config_prefix, const std::string & /* repository_name */) const\n-{\n-    String type = config.getString(config_prefix + \".type\");\n-    ExternalLoadableLifetime lifetime(config, config_prefix + \".lifetime\");\n-\n-    /// TODO: add models factory.\n-    if (type == \"catboost\")\n-    {\n-        return std::make_unique<CatBoostModel>(\n-                name, config.getString(config_prefix + \".path\"),\n-                getContext()->getConfigRef().getString(\"catboost_dynamic_library_path\"),\n-                lifetime\n-        );\n-    }\n-    else\n-    {\n-        throw Exception(\"Unknown model type: \" + type, ErrorCodes::INVALID_CONFIG_PARAMETER);\n-    }\n-}\n-}\ndiff --git a/src/Interpreters/ExternalModelsLoader.h b/src/Interpreters/ExternalModelsLoader.h\ndeleted file mode 100644\nindex 0eeb60008c3e..000000000000\n--- a/src/Interpreters/ExternalModelsLoader.h\n+++ /dev/null\n@@ -1,40 +0,0 @@\n-#pragma once\n-\n-#include <Interpreters/CatBoostModel.h>\n-#include <Interpreters/Context_fwd.h>\n-#include <Interpreters/ExternalLoader.h>\n-#include <Common/logger_useful.h>\n-\n-#include <memory>\n-\n-\n-namespace DB\n-{\n-\n-/// Manages user-defined models.\n-class ExternalModelsLoader : public ExternalLoader, WithContext\n-{\n-public:\n-    using ModelPtr = std::shared_ptr<const IMLModel>;\n-\n-    /// Models will be loaded immediately and then will be updated in separate thread, each 'reload_period' seconds.\n-    explicit ExternalModelsLoader(ContextPtr context_);\n-\n-    ModelPtr getModel(const std::string & model_name) const\n-    {\n-        return std::static_pointer_cast<const IMLModel>(load(model_name));\n-    }\n-\n-    void reloadModel(const std::string & model_name) const\n-    {\n-        loadOrReload(model_name);\n-    }\n-\n-protected:\n-    LoadablePtr create(const std::string & name, const Poco::Util::AbstractConfiguration & config,\n-            const std::string & config_prefix, const std::string & repository_name) const override;\n-\n-    friend class StorageSystemModels;\n-};\n-\n-}\ndiff --git a/src/Interpreters/InterpreterSystemQuery.cpp b/src/Interpreters/InterpreterSystemQuery.cpp\nindex 43bb15b70bb8..6d3e9964cb76 100644\n--- a/src/Interpreters/InterpreterSystemQuery.cpp\n+++ b/src/Interpreters/InterpreterSystemQuery.cpp\n@@ -12,7 +12,6 @@\n #include <Interpreters/Context.h>\n #include <Interpreters/DatabaseCatalog.h>\n #include <Interpreters/ExternalDictionariesLoader.h>\n-#include <Interpreters/ExternalModelsLoader.h>\n #include <Interpreters/ExternalUserDefinedExecutableFunctionsLoader.h>\n #include <Interpreters/EmbeddedDictionaries.h>\n #include <Interpreters/ActionLocksManager.h>\n@@ -373,22 +372,6 @@ BlockIO InterpreterSystemQuery::execute()\n             ExternalDictionariesLoader::resetAll();\n             break;\n         }\n-        case Type::RELOAD_MODEL:\n-        {\n-            getContext()->checkAccess(AccessType::SYSTEM_RELOAD_MODEL);\n-\n-            auto & external_models_loader = system_context->getExternalModelsLoader();\n-            external_models_loader.reloadModel(query.target_model);\n-            break;\n-        }\n-        case Type::RELOAD_MODELS:\n-        {\n-            getContext()->checkAccess(AccessType::SYSTEM_RELOAD_MODEL);\n-\n-            auto & external_models_loader = system_context->getExternalModelsLoader();\n-            external_models_loader.reloadAllTriedToLoad();\n-            break;\n-        }\n         case Type::RELOAD_FUNCTION:\n         {\n             getContext()->checkAccess(AccessType::SYSTEM_RELOAD_FUNCTION);\n@@ -874,12 +857,6 @@ AccessRightsElements InterpreterSystemQuery::getRequiredAccessForDDLOnCluster()\n             required_access.emplace_back(AccessType::SYSTEM_RELOAD_DICTIONARY);\n             break;\n         }\n-        case Type::RELOAD_MODEL:\n-        case Type::RELOAD_MODELS:\n-        {\n-            required_access.emplace_back(AccessType::SYSTEM_RELOAD_MODEL);\n-            break;\n-        }\n         case Type::RELOAD_FUNCTION:\n         case Type::RELOAD_FUNCTIONS:\n         {\ndiff --git a/src/Parsers/ASTSystemQuery.cpp b/src/Parsers/ASTSystemQuery.cpp\nindex a6ff52b74b73..239802c27034 100644\n--- a/src/Parsers/ASTSystemQuery.cpp\n+++ b/src/Parsers/ASTSystemQuery.cpp\n@@ -168,7 +168,6 @@ void ASTSystemQuery::formatImpl(const FormatSettings & settings, FormatState &,\n             || type == Type::SYNC_REPLICA\n             || type == Type::FLUSH_DISTRIBUTED\n             || type == Type::RELOAD_DICTIONARY\n-            || type == Type::RELOAD_MODEL\n             || type == Type::RELOAD_FUNCTION\n             || type == Type::RESTART_DISK)\n     {\ndiff --git a/src/Parsers/ASTSystemQuery.h b/src/Parsers/ASTSystemQuery.h\nindex f2c3fa8ece53..a362129a454f 100644\n--- a/src/Parsers/ASTSystemQuery.h\n+++ b/src/Parsers/ASTSystemQuery.h\n@@ -41,8 +41,6 @@ class ASTSystemQuery : public IAST, public ASTQueryWithOnCluster\n         SYNC_TRANSACTION_LOG,\n         RELOAD_DICTIONARY,\n         RELOAD_DICTIONARIES,\n-        RELOAD_MODEL,\n-        RELOAD_MODELS,\n         RELOAD_FUNCTION,\n         RELOAD_FUNCTIONS,\n         RELOAD_EMBEDDED_DICTIONARIES,\ndiff --git a/src/Parsers/ParserSystemQuery.cpp b/src/Parsers/ParserSystemQuery.cpp\nindex 26ba9290d04c..37a782f80021 100644\n--- a/src/Parsers/ParserSystemQuery.cpp\n+++ b/src/Parsers/ParserSystemQuery.cpp\n@@ -66,7 +66,6 @@ static bool parseQueryWithOnClusterAndMaybeTable(std::shared_ptr<ASTSystemQuery>\n \n enum class SystemQueryTargetType\n {\n-    Model,\n     Function,\n     Disk\n };\n@@ -116,11 +115,6 @@ static bool parseQueryWithOnClusterAndTarget(std::shared_ptr<ASTSystemQuery> & r\n \n     switch (target_type)\n     {\n-        case SystemQueryTargetType::Model:\n-        {\n-            res->target_model = std::move(target);\n-            break;\n-        }\n         case SystemQueryTargetType::Function:\n         {\n             res->target_function = std::move(target);\n@@ -182,12 +176,6 @@ bool ParserSystemQuery::parseImpl(IParser::Pos & pos, ASTPtr & node, Expected &\n                 return false;\n             break;\n         }\n-        case Type::RELOAD_MODEL:\n-        {\n-            if (!parseQueryWithOnClusterAndTarget(res, pos, expected, SystemQueryTargetType::Model))\n-                return false;\n-            break;\n-        }\n         case Type::RELOAD_FUNCTION:\n         {\n             if (!parseQueryWithOnClusterAndTarget(res, pos, expected, SystemQueryTargetType::Function))\ndiff --git a/src/Storages/System/StorageSystemModels.cpp b/src/Storages/System/StorageSystemModels.cpp\ndeleted file mode 100644\nindex 4a4dbbc69df1..000000000000\n--- a/src/Storages/System/StorageSystemModels.cpp\n+++ /dev/null\n@@ -1,59 +0,0 @@\n-#include <Storages/System/StorageSystemModels.h>\n-#include <DataTypes/DataTypeString.h>\n-#include <DataTypes/DataTypesNumber.h>\n-#include <DataTypes/DataTypeDateTime.h>\n-#include <DataTypes/DataTypeEnum.h>\n-#include <Interpreters/Context.h>\n-#include <Interpreters/ExternalModelsLoader.h>\n-#include <Interpreters/CatBoostModel.h>\n-\n-\n-namespace DB\n-{\n-\n-NamesAndTypesList StorageSystemModels::getNamesAndTypes()\n-{\n-    return {\n-        { \"name\", std::make_shared<DataTypeString>() },\n-        { \"status\", std::make_shared<DataTypeEnum8>(getStatusEnumAllPossibleValues()) },\n-        { \"origin\", std::make_shared<DataTypeString>() },\n-        { \"type\", std::make_shared<DataTypeString>() },\n-        { \"loading_start_time\", std::make_shared<DataTypeDateTime>() },\n-        { \"loading_duration\", std::make_shared<DataTypeFloat32>() },\n-        //{ \"creation_time\", std::make_shared<DataTypeDateTime>() },\n-        { \"last_exception\", std::make_shared<DataTypeString>() },\n-    };\n-}\n-\n-void StorageSystemModels::fillData(MutableColumns & res_columns, ContextPtr context, const SelectQueryInfo &) const\n-{\n-    const auto & external_models_loader = context->getExternalModelsLoader();\n-    auto load_results = external_models_loader.getLoadResults();\n-\n-    for (const auto & load_result : load_results)\n-    {\n-        res_columns[0]->insert(load_result.name);\n-        res_columns[1]->insert(static_cast<Int8>(load_result.status));\n-        res_columns[2]->insert(load_result.config ? load_result.config->path : \"\");\n-\n-        if (load_result.object)\n-        {\n-            const auto model_ptr = std::static_pointer_cast<const IMLModel>(load_result.object);\n-            res_columns[3]->insert(model_ptr->getTypeName());\n-        }\n-        else\n-        {\n-            res_columns[3]->insertDefault();\n-        }\n-\n-        res_columns[4]->insert(static_cast<UInt64>(std::chrono::system_clock::to_time_t(load_result.loading_start_time)));\n-        res_columns[5]->insert(std::chrono::duration_cast<std::chrono::duration<float>>(load_result.loading_duration).count());\n-\n-        if (load_result.exception)\n-            res_columns[6]->insert(getExceptionMessage(load_result.exception, false));\n-        else\n-            res_columns[6]->insertDefault();\n-    }\n-}\n-\n-}\ndiff --git a/src/Storages/System/StorageSystemModels.h b/src/Storages/System/StorageSystemModels.h\ndeleted file mode 100644\nindex dfb6ad3de5a2..000000000000\n--- a/src/Storages/System/StorageSystemModels.h\n+++ /dev/null\n@@ -1,25 +0,0 @@\n-#pragma once\n-\n-#include <Storages/System/IStorageSystemOneBlock.h>\n-\n-\n-namespace DB\n-{\n-\n-class Context;\n-\n-\n-class StorageSystemModels final : public IStorageSystemOneBlock<StorageSystemModels>\n-{\n-public:\n-    std::string getName() const override { return \"SystemModels\"; }\n-\n-    static NamesAndTypesList getNamesAndTypes();\n-\n-protected:\n-    using IStorageSystemOneBlock::IStorageSystemOneBlock;\n-\n-    void fillData(MutableColumns & res_columns, ContextPtr context, const SelectQueryInfo & query_info) const override;\n-};\n-\n-}\ndiff --git a/src/Storages/System/attachSystemTables.cpp b/src/Storages/System/attachSystemTables.cpp\nindex ab1ffdf209a8..fa70751ee19e 100644\n--- a/src/Storages/System/attachSystemTables.cpp\n+++ b/src/Storages/System/attachSystemTables.cpp\n@@ -25,7 +25,6 @@\n #include <Storages/System/StorageSystemMerges.h>\n #include <Storages/System/StorageSystemReplicatedFetches.h>\n #include <Storages/System/StorageSystemMetrics.h>\n-#include <Storages/System/StorageSystemModels.h>\n #include <Storages/System/StorageSystemMutations.h>\n #include <Storages/System/StorageSystemNumbers.h>\n #include <Storages/System/StorageSystemOne.h>\n@@ -164,7 +163,6 @@ void attachSystemTablesServer(ContextPtr context, IDatabase & system_database, b\n     attach<StorageSystemDDLWorkerQueue>(context, system_database, \"distributed_ddl_queue\");\n     attach<StorageSystemDistributionQueue>(context, system_database, \"distribution_queue\");\n     attach<StorageSystemDictionaries>(context, system_database, \"dictionaries\");\n-    attach<StorageSystemModels>(context, system_database, \"models\");\n     attach<StorageSystemClusters>(context, system_database, \"clusters\");\n     attach<StorageSystemGraphite>(context, system_database, \"graphite_retentions\");\n     attach<StorageSystemMacros>(context, system_database, \"macros\");\n",
  "test_patch": "diff --git a/tests/fuzz/all.dict b/tests/fuzz/all.dict\nindex dff62cd68a74..a147878da9b7 100644\n--- a/tests/fuzz/all.dict\n+++ b/tests/fuzz/all.dict\n@@ -763,7 +763,6 @@\n \"MINUTE\"\n \"MM\"\n \"mod\"\n-\"modelEvaluate\"\n \"MODIFY\"\n \"MODIFY COLUMN\"\n \"MODIFY ORDER BY\"\ndiff --git a/tests/fuzz/dictionaries/functions.dict b/tests/fuzz/dictionaries/functions.dict\nindex cbcad3c05da8..b90697f0c3de 100644\n--- a/tests/fuzz/dictionaries/functions.dict\n+++ b/tests/fuzz/dictionaries/functions.dict\n@@ -469,7 +469,6 @@\n \"subtractSeconds\"\n \"alphaTokens\"\n \"negate\"\n-\"modelEvaluate\"\n \"file\"\n \"roundAge\"\n \"MACStringToOUI\"\ndiff --git a/tests/integration/test_catboost_model_config_reload/__init__.py b/tests/integration/test_catboost_evaluate/__init__.py\nsimilarity index 100%\nrename from tests/integration/test_catboost_model_config_reload/__init__.py\nrename to tests/integration/test_catboost_evaluate/__init__.py\ndiff --git a/tests/integration/test_catboost_evaluate/config/models_config.xml b/tests/integration/test_catboost_evaluate/config/models_config.xml\nnew file mode 100644\nindex 000000000000..f63df06ee264\n--- /dev/null\n+++ b/tests/integration/test_catboost_evaluate/config/models_config.xml\n@@ -0,0 +1,3 @@\n+<clickhouse>\n+    <catboost_lib_path>/etc/clickhouse-server/model/libcatboostmodel.so</catboost_lib_path>\n+</clickhouse>\ndiff --git a/tests/integration/test_catboost_evaluate/model/amazon_model.bin b/tests/integration/test_catboost_evaluate/model/amazon_model.bin\nnew file mode 100644\nindex 000000000000..4a37fbec3101\nBinary files /dev/null and b/tests/integration/test_catboost_evaluate/model/amazon_model.bin differ\ndiff --git a/tests/integration/test_catboost_model_config_reload/model/libcatboostmodel.so b/tests/integration/test_catboost_evaluate/model/libcatboostmodel.so\nsimilarity index 100%\nrename from tests/integration/test_catboost_model_config_reload/model/libcatboostmodel.so\nrename to tests/integration/test_catboost_evaluate/model/libcatboostmodel.so\ndiff --git a/tests/integration/test_catboost_model_config_reload/model/model.bin b/tests/integration/test_catboost_evaluate/model/simple_model.bin\nsimilarity index 100%\nrename from tests/integration/test_catboost_model_config_reload/model/model.bin\nrename to tests/integration/test_catboost_evaluate/model/simple_model.bin\ndiff --git a/tests/integration/test_catboost_evaluate/test.py b/tests/integration/test_catboost_evaluate/test.py\nnew file mode 100644\nindex 000000000000..897252374dab\n--- /dev/null\n+++ b/tests/integration/test_catboost_evaluate/test.py\n@@ -0,0 +1,318 @@\n+import os\n+import sys\n+import time\n+\n+import pytest\n+\n+sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n+SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))\n+\n+from helpers.cluster import ClickHouseCluster\n+\n+cluster = ClickHouseCluster(__file__)\n+\n+instance = cluster.add_instance(\n+    \"instance\", stay_alive=True, main_configs=[\"config/models_config.xml\"]\n+)\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def ch_cluster():\n+    try:\n+        cluster.start()\n+\n+        os.system(\n+            \"docker cp {local} {cont_id}:{dist}\".format(\n+                local=os.path.join(SCRIPT_DIR, \"model/.\"),\n+                cont_id=instance.docker_id,\n+                dist=\"/etc/clickhouse-server/model\",\n+            )\n+        )\n+        instance.restart_clickhouse()\n+\n+        yield cluster\n+\n+    finally:\n+        cluster.shutdown()\n+\n+\n+# ---------------------------------------------------------------------------\n+# simple_model.bin has 2 float features and 9 categorical features\n+\n+\n+def testConstantFeatures(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    result = instance.query(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+    )\n+    expected = \"-1.930268705869267\\n\"\n+    assert result == expected\n+\n+\n+def testNonConstantFeatures(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    instance.query(\"DROP TABLE IF EXISTS T;\")\n+    instance.query(\n+        \"CREATE TABLE T(ID UInt32, F1 Float32, F2 Float32, F3 UInt32, F4 UInt32, F5 UInt32, F6 UInt32, F7 UInt32, F8 UInt32, F9 Float32, F10 Float32, F11 Float32) ENGINE MergeTree ORDER BY ID;\"\n+    )\n+    instance.query(\"INSERT INTO T VALUES(0, 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);\")\n+\n+    result = instance.query(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11) from T;\"\n+    )\n+    expected = \"-1.930268705869267\\n\"\n+    assert result == expected\n+\n+    instance.query(\"DROP TABLE IF EXISTS T;\")\n+\n+\n+def testModelPathIsNotAConstString(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+    )\n+    assert (\n+        \"Illegal type UInt8 of first argument of function catboostEvaluate, expected a string\"\n+        in err\n+    )\n+\n+    instance.query(\"DROP TABLE IF EXISTS T;\")\n+    instance.query(\"CREATE TABLE T(ID UInt32, A String) ENGINE MergeTree ORDER BY ID\")\n+    instance.query(\"INSERT INTO T VALUES(0, 'test');\")\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate(A, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) FROM T;\"\n+    )\n+    assert (\n+        \"First argument of function catboostEvaluate must be a constant string\" in err\n+    )\n+    instance.query(\"DROP TABLE IF EXISTS T;\")\n+\n+\n+def testWrongNumberOfFeatureArguments(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin');\"\n+    )\n+    assert \"Function catboostEvaluate expects at least 2 arguments\" in err\n+\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1, 2);\"\n+    )\n+    assert (\n+        \"Number of columns is different with number of features: columns size 2 float features size 2 + cat features size 9\"\n+        in err\n+    )\n+\n+\n+def testFloatFeatureMustBeNumeric(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 'a', 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+    )\n+    assert \"Column 1 should be numeric to make float feature\" in err\n+\n+\n+def testCategoricalFeatureMustBeNumericOrString(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, tuple(8), 9, 10, 11);\"\n+    )\n+    assert \"Column 7 should be numeric or string\" in err\n+\n+\n+def testOnLowCardinalityFeatures(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    # same but on domain-compressed data\n+    result = instance.query(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', toLowCardinality(1.0), toLowCardinality(2.0), toLowCardinality(3), toLowCardinality(4), toLowCardinality(5), toLowCardinality(6), toLowCardinality(7), toLowCardinality(8), toLowCardinality(9), toLowCardinality(10), toLowCardinality(11));\"\n+    )\n+    expected = \"-1.930268705869267\\n\"\n+    assert result == expected\n+\n+\n+def testOnNullableFeatures(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    result = instance.query(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', toNullable(1.0), toNullable(2.0), toNullable(3), toNullable(4), toNullable(5), toNullable(6), toNullable(7), toNullable(8), toNullable(9), toNullable(10), toNullable(11));\"\n+    )\n+    expected = \"-1.930268705869267\\n\"\n+    assert result == expected\n+\n+    # Actual NULLs are disallowed\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL), toNullable(NULL));\"\n+    )\n+    assert \"Column 0 should be numeric to make float feature\" in err\n+\n+\n+def testInvalidLibraryPath(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    # temporarily move library elsewhere\n+    instance.exec_in_container(\n+        [\n+            \"bash\",\n+            \"-c\",\n+            \"mv /etc/clickhouse-server/model/libcatboostmodel.so /etc/clickhouse-server/model/nonexistant.so\",\n+        ]\n+    )\n+\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+    )\n+    assert (\n+        \"Can't load library /etc/clickhouse-server/model/libcatboostmodel.so: file doesn't exist\"\n+        in err\n+    )\n+\n+    # restore\n+    instance.exec_in_container(\n+        [\n+            \"bash\",\n+            \"-c\",\n+            \"mv /etc/clickhouse-server/model/nonexistant.so /etc/clickhouse-server/model/libcatboostmodel.so\",\n+        ]\n+    )\n+\n+\n+def testInvalidModelPath(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate('', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+    )\n+    assert \"Can't load model : file doesn't exist\" in err\n+\n+    err = instance.query_and_get_error(\n+        \"select catboostEvaluate('model_non_existant.bin', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+    )\n+    assert \"Can't load model model_non_existant.bin: file doesn't exist\" in err\n+\n+\n+def testRecoveryAfterCrash(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    result = instance.query(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+    )\n+    expected = \"-1.930268705869267\\n\"\n+    assert result == expected\n+\n+    instance.exec_in_container(\n+        [\"bash\", \"-c\", \"kill -9 `pidof clickhouse-library-bridge`\"], user=\"root\"\n+    )\n+\n+    result = instance.query(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+    )\n+    assert result == expected\n+\n+\n+# ---------------------------------------------------------------------------\n+# amazon_model.bin has 0 float features and 9 categorical features\n+\n+\n+def testAmazonModelSingleRow(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    result = instance.query(\n+        \"select catboostEvaluate('/etc/clickhouse-server/model/amazon_model.bin', 1, 2, 3, 4, 5, 6, 7, 8, 9);\"\n+    )\n+    expected = \"0.7774665009089274\\n\"\n+    assert result == expected\n+\n+\n+def testAmazonModelManyRows(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    result = instance.query(\"drop table if exists amazon\")\n+\n+    result = instance.query(\n+        \"create table amazon ( DATE Date materialized today(), ACTION UInt8, RESOURCE UInt32, MGR_ID UInt32, ROLE_ROLLUP_1 UInt32, ROLE_ROLLUP_2 UInt32, ROLE_DEPTNAME UInt32, ROLE_TITLE UInt32, ROLE_FAMILY_DESC UInt32, ROLE_FAMILY UInt32, ROLE_CODE UInt32) engine = MergeTree order by DATE\"\n+    )\n+\n+    result = instance.query(\n+        \"insert into amazon select number % 256, number, number, number, number, number, number, number, number, number from numbers(7500)\"\n+    )\n+\n+    # First compute prediction, then as a very crude way to fingerprint and compare the result: sum and floor\n+    # (the focus is to test that the exchange of large result sets between the server and the bridge works)\n+    result = instance.query(\n+        \"SELECT floor(sum(catboostEvaluate('/etc/clickhouse-server/model/amazon_model.bin', RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTNAME, ROLE_TITLE, ROLE_FAMILY_DESC, ROLE_FAMILY, ROLE_CODE))) FROM amazon\"\n+    )\n+\n+    expected = \"5834\\n\"\n+    assert result == expected\n+\n+    result = instance.query(\"drop table if exists amazon\")\n+\n+\n+def testModelUpdate(ch_cluster):\n+    if instance.is_built_with_memory_sanitizer():\n+        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n+\n+    query = \"select catboostEvaluate('/etc/clickhouse-server/model/simple_model.bin', 1.0, 2.0, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n+\n+    result = instance.query(query)\n+    expected = \"-1.930268705869267\\n\"\n+    assert result == expected\n+\n+    # simulate an update of the model: temporarily move the amazon model in place of the simple model\n+    instance.exec_in_container(\n+        [\n+            \"bash\",\n+            \"-c\",\n+            \"mv /etc/clickhouse-server/model/simple_model.bin /etc/clickhouse-server/model/simple_model.bin.bak\",\n+        ]\n+    )\n+    instance.exec_in_container(\n+        [\n+            \"bash\",\n+            \"-c\",\n+            \"mv /etc/clickhouse-server/model/amazon_model.bin /etc/clickhouse-server/model/simple_model.bin\",\n+        ]\n+    )\n+\n+    # since the amazon model has a different number of features than the simple model, we should get an error\n+    err = instance.query_and_get_error(query)\n+    assert (\n+        \"Number of columns is different with number of features: columns size 11 float features size 0 + cat features size 9\"\n+        in err\n+    )\n+\n+    # restore\n+    instance.exec_in_container(\n+        [\n+            \"bash\",\n+            \"-c\",\n+            \"mv /etc/clickhouse-server/model/simple_model.bin /etc/clickhouse-server/model/amazon_model.bin\",\n+        ]\n+    )\n+    instance.exec_in_container(\n+        [\n+            \"bash\",\n+            \"-c\",\n+            \"mv /etc/clickhouse-server/model/simple_model.bin.bak /etc/clickhouse-server/model/simple_model.bin\",\n+        ]\n+    )\ndiff --git a/tests/integration/test_catboost_model_config_reload/config/catboost_lib.xml b/tests/integration/test_catboost_model_config_reload/config/catboost_lib.xml\ndeleted file mode 100644\nindex 7aa06cc99ff3..000000000000\n--- a/tests/integration/test_catboost_model_config_reload/config/catboost_lib.xml\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-<clickhouse>\n-    <catboost_dynamic_library_path>/etc/clickhouse-server/model/libcatboostmodel.so</catboost_dynamic_library_path>\n-</clickhouse>\ndiff --git a/tests/integration/test_catboost_model_config_reload/config/models_config.xml b/tests/integration/test_catboost_model_config_reload/config/models_config.xml\ndeleted file mode 100644\nindex 3cbf717bb677..000000000000\n--- a/tests/integration/test_catboost_model_config_reload/config/models_config.xml\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-<clickhouse>\n-</clickhouse>\ndiff --git a/tests/integration/test_catboost_model_config_reload/model/model_config.xml b/tests/integration/test_catboost_model_config_reload/model/model_config.xml\ndeleted file mode 100644\nindex af9778097fa8..000000000000\n--- a/tests/integration/test_catboost_model_config_reload/model/model_config.xml\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<models>\n-    <model>\n-        <type>catboost</type>\n-        <name>model1</name>\n-        <path>/etc/clickhouse-server/model/model.bin</path>\n-        <lifetime>0</lifetime>\n-    </model>\n-</models>\ndiff --git a/tests/integration/test_catboost_model_config_reload/model/model_config2.xml b/tests/integration/test_catboost_model_config_reload/model/model_config2.xml\ndeleted file mode 100644\nindex b81120ec9003..000000000000\n--- a/tests/integration/test_catboost_model_config_reload/model/model_config2.xml\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<models>\n-    <model>\n-        <type>catboost</type>\n-        <name>model2</name>\n-        <path>/etc/clickhouse-server/model/model.bin</path>\n-        <lifetime>0</lifetime>\n-    </model>\n-</models>\ndiff --git a/tests/integration/test_catboost_model_config_reload/test.py b/tests/integration/test_catboost_model_config_reload/test.py\ndeleted file mode 100644\nindex c12c28e23382..000000000000\n--- a/tests/integration/test_catboost_model_config_reload/test.py\n+++ /dev/null\n@@ -1,77 +0,0 @@\n-import os\n-import sys\n-import time\n-\n-import pytest\n-\n-sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n-SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))\n-\n-from helpers.cluster import ClickHouseCluster\n-\n-cluster = ClickHouseCluster(__file__)\n-node = cluster.add_instance(\n-    \"node\",\n-    stay_alive=True,\n-    main_configs=[\"config/models_config.xml\", \"config/catboost_lib.xml\"],\n-)\n-\n-\n-def copy_file_to_container(local_path, dist_path, container_id):\n-    os.system(\n-        \"docker cp {local} {cont_id}:{dist}\".format(\n-            local=local_path, cont_id=container_id, dist=dist_path\n-        )\n-    )\n-\n-\n-config = \"\"\"<clickhouse>\n-    <models_config>/etc/clickhouse-server/model/{model_config}</models_config>\n-</clickhouse>\"\"\"\n-\n-\n-@pytest.fixture(scope=\"module\")\n-def started_cluster():\n-    try:\n-        cluster.start()\n-\n-        copy_file_to_container(\n-            os.path.join(SCRIPT_DIR, \"model/.\"),\n-            \"/etc/clickhouse-server/model\",\n-            node.docker_id,\n-        )\n-        node.restart_clickhouse()\n-\n-        yield cluster\n-\n-    finally:\n-        cluster.shutdown()\n-\n-\n-def change_config(model_config):\n-    node.replace_config(\n-        \"/etc/clickhouse-server/config.d/models_config.xml\",\n-        config.format(model_config=model_config),\n-    )\n-    node.query(\"SYSTEM RELOAD CONFIG;\")\n-\n-\n-def test(started_cluster):\n-    if node.is_built_with_memory_sanitizer():\n-        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n-\n-    # Set config with the path to the first model.\n-    change_config(\"model_config.xml\")\n-\n-    node.query(\"SELECT modelEvaluate('model1', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\")\n-\n-    # Change path to the second model in config.\n-    change_config(\"model_config2.xml\")\n-\n-    # Check that the new model is loaded.\n-    node.query(\"SELECT modelEvaluate('model2', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\")\n-\n-    # Check that the old model was unloaded.\n-    node.query_and_get_error(\n-        \"SELECT modelEvaluate('model1', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\"\n-    )\ndiff --git a/tests/integration/test_catboost_model_first_evaluate/__init__.py b/tests/integration/test_catboost_model_first_evaluate/__init__.py\ndeleted file mode 100644\nindex e69de29bb2d1..000000000000\ndiff --git a/tests/integration/test_catboost_model_first_evaluate/config/models_config.xml b/tests/integration/test_catboost_model_first_evaluate/config/models_config.xml\ndeleted file mode 100644\nindex 26f5c4d57f67..000000000000\n--- a/tests/integration/test_catboost_model_first_evaluate/config/models_config.xml\n+++ /dev/null\n@@ -1,4 +0,0 @@\n-<clickhouse>\n-    <catboost_dynamic_library_path>/etc/clickhouse-server/model/libcatboostmodel.so</catboost_dynamic_library_path>\n-    <models_config>/etc/clickhouse-server/model/model_config.xml</models_config>\n-</clickhouse>\ndiff --git a/tests/integration/test_catboost_model_first_evaluate/model/libcatboostmodel.so b/tests/integration/test_catboost_model_first_evaluate/model/libcatboostmodel.so\ndeleted file mode 100755\nindex 388d9f887b46..000000000000\nBinary files a/tests/integration/test_catboost_model_first_evaluate/model/libcatboostmodel.so and /dev/null differ\ndiff --git a/tests/integration/test_catboost_model_first_evaluate/model/model.bin b/tests/integration/test_catboost_model_first_evaluate/model/model.bin\ndeleted file mode 100644\nindex 118e099d1760..000000000000\nBinary files a/tests/integration/test_catboost_model_first_evaluate/model/model.bin and /dev/null differ\ndiff --git a/tests/integration/test_catboost_model_first_evaluate/model/model_config.xml b/tests/integration/test_catboost_model_first_evaluate/model/model_config.xml\ndeleted file mode 100644\nindex 2c328167a943..000000000000\n--- a/tests/integration/test_catboost_model_first_evaluate/model/model_config.xml\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<models>\n-    <model>\n-        <type>catboost</type>\n-        <name>titanic</name>\n-        <path>/etc/clickhouse-server/model/model.bin</path>\n-        <lifetime>0</lifetime>\n-    </model>\n-</models>\ndiff --git a/tests/integration/test_catboost_model_first_evaluate/test.py b/tests/integration/test_catboost_model_first_evaluate/test.py\ndeleted file mode 100644\nindex b15f481c0e9f..000000000000\n--- a/tests/integration/test_catboost_model_first_evaluate/test.py\n+++ /dev/null\n@@ -1,48 +0,0 @@\n-import os\n-import sys\n-import time\n-\n-import pytest\n-\n-sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n-SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))\n-\n-from helpers.cluster import ClickHouseCluster\n-\n-cluster = ClickHouseCluster(__file__)\n-node = cluster.add_instance(\n-    \"node\", stay_alive=True, main_configs=[\"config/models_config.xml\"]\n-)\n-\n-\n-def copy_file_to_container(local_path, dist_path, container_id):\n-    os.system(\n-        \"docker cp {local} {cont_id}:{dist}\".format(\n-            local=local_path, cont_id=container_id, dist=dist_path\n-        )\n-    )\n-\n-\n-@pytest.fixture(scope=\"module\")\n-def started_cluster():\n-    try:\n-        cluster.start()\n-\n-        copy_file_to_container(\n-            os.path.join(SCRIPT_DIR, \"model/.\"),\n-            \"/etc/clickhouse-server/model\",\n-            node.docker_id,\n-        )\n-        node.restart_clickhouse()\n-\n-        yield cluster\n-\n-    finally:\n-        cluster.shutdown()\n-\n-\n-def test(started_cluster):\n-    if node.is_built_with_memory_sanitizer():\n-        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n-\n-    node.query(\"select modelEvaluate('titanic', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\")\ndiff --git a/tests/integration/test_catboost_model_reload/__init__.py b/tests/integration/test_catboost_model_reload/__init__.py\ndeleted file mode 100644\nindex e69de29bb2d1..000000000000\ndiff --git a/tests/integration/test_catboost_model_reload/config/catboost_lib.xml b/tests/integration/test_catboost_model_reload/config/catboost_lib.xml\ndeleted file mode 100644\nindex 7aa06cc99ff3..000000000000\n--- a/tests/integration/test_catboost_model_reload/config/catboost_lib.xml\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-<clickhouse>\n-    <catboost_dynamic_library_path>/etc/clickhouse-server/model/libcatboostmodel.so</catboost_dynamic_library_path>\n-</clickhouse>\ndiff --git a/tests/integration/test_catboost_model_reload/config/models_config.xml b/tests/integration/test_catboost_model_reload/config/models_config.xml\ndeleted file mode 100644\nindex 84378df0e8f8..000000000000\n--- a/tests/integration/test_catboost_model_reload/config/models_config.xml\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-<clickhouse>\n-    <models_config>/etc/clickhouse-server/model/model_config.xml</models_config>\n-</clickhouse>\ndiff --git a/tests/integration/test_catboost_model_reload/model/conjunction.cbm b/tests/integration/test_catboost_model_reload/model/conjunction.cbm\ndeleted file mode 100644\nindex 7b75fb5f8866..000000000000\nBinary files a/tests/integration/test_catboost_model_reload/model/conjunction.cbm and /dev/null differ\ndiff --git a/tests/integration/test_catboost_model_reload/model/disjunction.cbm b/tests/integration/test_catboost_model_reload/model/disjunction.cbm\ndeleted file mode 100644\nindex 8145c24637fc..000000000000\nBinary files a/tests/integration/test_catboost_model_reload/model/disjunction.cbm and /dev/null differ\ndiff --git a/tests/integration/test_catboost_model_reload/model/libcatboostmodel.so b/tests/integration/test_catboost_model_reload/model/libcatboostmodel.so\ndeleted file mode 100755\nindex 388d9f887b46..000000000000\nBinary files a/tests/integration/test_catboost_model_reload/model/libcatboostmodel.so and /dev/null differ\ndiff --git a/tests/integration/test_catboost_model_reload/model/model_config.xml b/tests/integration/test_catboost_model_reload/model/model_config.xml\ndeleted file mode 100644\nindex 7cbda165ce90..000000000000\n--- a/tests/integration/test_catboost_model_reload/model/model_config.xml\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<models>\n-    <model>\n-        <type>catboost</type>\n-        <name>model</name>\n-        <path>/etc/clickhouse-server/model/model.cbm</path>\n-        <lifetime>0</lifetime>\n-    </model>\n-</models>\ndiff --git a/tests/integration/test_catboost_model_reload/test.py b/tests/integration/test_catboost_model_reload/test.py\ndeleted file mode 100644\nindex 3bf7ca18cddf..000000000000\n--- a/tests/integration/test_catboost_model_reload/test.py\n+++ /dev/null\n@@ -1,132 +0,0 @@\n-import os\n-import sys\n-import time\n-\n-import pytest\n-\n-sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n-SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))\n-\n-from helpers.cluster import ClickHouseCluster\n-\n-cluster = ClickHouseCluster(__file__)\n-node = cluster.add_instance(\n-    \"node\",\n-    stay_alive=True,\n-    main_configs=[\"config/models_config.xml\", \"config/catboost_lib.xml\"],\n-)\n-\n-\n-def copy_file_to_container(local_path, dist_path, container_id):\n-    os.system(\n-        \"docker cp {local} {cont_id}:{dist}\".format(\n-            local=local_path, cont_id=container_id, dist=dist_path\n-        )\n-    )\n-\n-\n-@pytest.fixture(scope=\"module\")\n-def started_cluster():\n-    try:\n-        cluster.start()\n-\n-        copy_file_to_container(\n-            os.path.join(SCRIPT_DIR, \"model/.\"),\n-            \"/etc/clickhouse-server/model\",\n-            node.docker_id,\n-        )\n-        node.query(\"CREATE TABLE binary (x UInt64, y UInt64) ENGINE = TinyLog()\")\n-        node.query(\"INSERT INTO binary VALUES (1, 1), (1, 0), (0, 1), (0, 0)\")\n-\n-        node.restart_clickhouse()\n-\n-        yield cluster\n-\n-    finally:\n-        cluster.shutdown()\n-\n-\n-def test_model_reload(started_cluster):\n-    if node.is_built_with_memory_sanitizer():\n-        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n-\n-    node.exec_in_container(\n-        [\"bash\", \"-c\", \"rm -f /etc/clickhouse-server/model/model.cbm\"]\n-    )\n-    node.exec_in_container(\n-        [\n-            \"bash\",\n-            \"-c\",\n-            \"ln /etc/clickhouse-server/model/conjunction.cbm /etc/clickhouse-server/model/model.cbm\",\n-        ]\n-    )\n-    node.query(\"SYSTEM RELOAD MODEL model\")\n-\n-    result = node.query(\n-        \"\"\"\n-        WITH modelEvaluate('model', toFloat64(x), toFloat64(y)) as prediction, exp(prediction) / (1 + exp(prediction)) as probability\n-        SELECT if(probability > 0.5, 1, 0) FROM binary;\n-        \"\"\"\n-    )\n-    assert result == \"1\\n0\\n0\\n0\\n\"\n-\n-    node.exec_in_container([\"bash\", \"-c\", \"rm /etc/clickhouse-server/model/model.cbm\"])\n-    node.exec_in_container(\n-        [\n-            \"bash\",\n-            \"-c\",\n-            \"ln /etc/clickhouse-server/model/disjunction.cbm /etc/clickhouse-server/model/model.cbm\",\n-        ]\n-    )\n-    node.query(\"SYSTEM RELOAD MODEL model\")\n-\n-    result = node.query(\n-        \"\"\"\n-        WITH modelEvaluate('model', toFloat64(x), toFloat64(y)) as prediction, exp(prediction) / (1 + exp(prediction)) as probability\n-        SELECT if(probability > 0.5, 1, 0) FROM binary;\n-        \"\"\"\n-    )\n-    assert result == \"1\\n1\\n1\\n0\\n\"\n-\n-\n-def test_models_reload(started_cluster):\n-    if node.is_built_with_memory_sanitizer():\n-        pytest.skip(\"Memory Sanitizer cannot work with third-party shared libraries\")\n-\n-    node.exec_in_container(\n-        [\"bash\", \"-c\", \"rm -f /etc/clickhouse-server/model/model.cbm\"]\n-    )\n-    node.exec_in_container(\n-        [\n-            \"bash\",\n-            \"-c\",\n-            \"ln /etc/clickhouse-server/model/conjunction.cbm /etc/clickhouse-server/model/model.cbm\",\n-        ]\n-    )\n-    node.query(\"SYSTEM RELOAD MODELS\")\n-\n-    result = node.query(\n-        \"\"\"\n-        WITH modelEvaluate('model', toFloat64(x), toFloat64(y)) as prediction, exp(prediction) / (1 + exp(prediction)) as probability\n-        SELECT if(probability > 0.5, 1, 0) FROM binary;\n-        \"\"\"\n-    )\n-    assert result == \"1\\n0\\n0\\n0\\n\"\n-\n-    node.exec_in_container([\"bash\", \"-c\", \"rm /etc/clickhouse-server/model/model.cbm\"])\n-    node.exec_in_container(\n-        [\n-            \"bash\",\n-            \"-c\",\n-            \"ln /etc/clickhouse-server/model/disjunction.cbm /etc/clickhouse-server/model/model.cbm\",\n-        ]\n-    )\n-    node.query(\"SYSTEM RELOAD MODELS\")\n-\n-    result = node.query(\n-        \"\"\"\n-        WITH modelEvaluate('model', toFloat64(x), toFloat64(y)) as prediction, exp(prediction) / (1 + exp(prediction)) as probability\n-        SELECT if(probability > 0.5, 1, 0) FROM binary;\n-        \"\"\"\n-    )\n-    assert result == \"1\\n1\\n1\\n0\\n\"\ndiff --git a/tests/queries/0_stateless/01271_show_privileges.reference b/tests/queries/0_stateless/01271_show_privileges.reference\nindex 49f4d8245a2e..f2650167856f 100644\n--- a/tests/queries/0_stateless/01271_show_privileges.reference\n+++ b/tests/queries/0_stateless/01271_show_privileges.reference\n@@ -99,7 +99,6 @@ SYSTEM DROP CACHE\t['DROP CACHE']\t\\N\tSYSTEM\n SYSTEM RELOAD CONFIG\t['RELOAD CONFIG']\tGLOBAL\tSYSTEM RELOAD\n SYSTEM RELOAD SYMBOLS\t['RELOAD SYMBOLS']\tGLOBAL\tSYSTEM RELOAD\n SYSTEM RELOAD DICTIONARY\t['SYSTEM RELOAD DICTIONARIES','RELOAD DICTIONARY','RELOAD DICTIONARIES']\tGLOBAL\tSYSTEM RELOAD\n-SYSTEM RELOAD MODEL\t['SYSTEM RELOAD MODELS','RELOAD MODEL','RELOAD MODELS']\tGLOBAL\tSYSTEM RELOAD\n SYSTEM RELOAD FUNCTION\t['SYSTEM RELOAD FUNCTIONS','RELOAD FUNCTION','RELOAD FUNCTIONS']\tGLOBAL\tSYSTEM RELOAD\n SYSTEM RELOAD EMBEDDED DICTIONARIES\t['RELOAD EMBEDDED DICTIONARIES']\tGLOBAL\tSYSTEM RELOAD\n SYSTEM RELOAD\t[]\t\\N\tSYSTEM\ndiff --git a/tests/queries/0_stateless/02117_show_create_table_system.reference b/tests/queries/0_stateless/02117_show_create_table_system.reference\nindex 9e2f676bb55a..794bbb565271 100644\n--- a/tests/queries/0_stateless/02117_show_create_table_system.reference\n+++ b/tests/queries/0_stateless/02117_show_create_table_system.reference\n@@ -279,7 +279,7 @@ CREATE TABLE system.grants\n (\n     `user_name` Nullable(String),\n     `role_name` Nullable(String),\n-    `access_type` Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER TABLE' = 41, 'ALTER DATABASE' = 42, 'ALTER VIEW REFRESH' = 43, 'ALTER VIEW MODIFY QUERY' = 44, 'ALTER VIEW' = 45, 'ALTER' = 46, 'CREATE DATABASE' = 47, 'CREATE TABLE' = 48, 'CREATE VIEW' = 49, 'CREATE DICTIONARY' = 50, 'CREATE TEMPORARY TABLE' = 51, 'CREATE FUNCTION' = 52, 'CREATE' = 53, 'DROP DATABASE' = 54, 'DROP TABLE' = 55, 'DROP VIEW' = 56, 'DROP DICTIONARY' = 57, 'DROP FUNCTION' = 58, 'DROP' = 59, 'TRUNCATE' = 60, 'OPTIMIZE' = 61, 'BACKUP' = 62, 'KILL QUERY' = 63, 'KILL TRANSACTION' = 64, 'MOVE PARTITION BETWEEN SHARDS' = 65, 'CREATE USER' = 66, 'ALTER USER' = 67, 'DROP USER' = 68, 'CREATE ROLE' = 69, 'ALTER ROLE' = 70, 'DROP ROLE' = 71, 'ROLE ADMIN' = 72, 'CREATE ROW POLICY' = 73, 'ALTER ROW POLICY' = 74, 'DROP ROW POLICY' = 75, 'CREATE QUOTA' = 76, 'ALTER QUOTA' = 77, 'DROP QUOTA' = 78, 'CREATE SETTINGS PROFILE' = 79, 'ALTER SETTINGS PROFILE' = 80, 'DROP SETTINGS PROFILE' = 81, 'SHOW USERS' = 82, 'SHOW ROLES' = 83, 'SHOW ROW POLICIES' = 84, 'SHOW QUOTAS' = 85, 'SHOW SETTINGS PROFILES' = 86, 'SHOW ACCESS' = 87, 'ACCESS MANAGEMENT' = 88, 'SYSTEM SHUTDOWN' = 89, 'SYSTEM DROP DNS CACHE' = 90, 'SYSTEM DROP MARK CACHE' = 91, 'SYSTEM DROP UNCOMPRESSED CACHE' = 92, 'SYSTEM DROP MMAP CACHE' = 93, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 94, 'SYSTEM DROP FILESYSTEM CACHE' = 95, 'SYSTEM DROP SCHEMA CACHE' = 96, 'SYSTEM DROP CACHE' = 97, 'SYSTEM RELOAD CONFIG' = 98, 'SYSTEM RELOAD SYMBOLS' = 99, 'SYSTEM RELOAD DICTIONARY' = 100, 'SYSTEM RELOAD MODEL' = 101, 'SYSTEM RELOAD FUNCTION' = 102, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 103, 'SYSTEM RELOAD' = 104, 'SYSTEM RESTART DISK' = 105, 'SYSTEM MERGES' = 106, 'SYSTEM TTL MERGES' = 107, 'SYSTEM FETCHES' = 108, 'SYSTEM MOVES' = 109, 'SYSTEM DISTRIBUTED SENDS' = 110, 'SYSTEM REPLICATED SENDS' = 111, 'SYSTEM SENDS' = 112, 'SYSTEM REPLICATION QUEUES' = 113, 'SYSTEM DROP REPLICA' = 114, 'SYSTEM SYNC REPLICA' = 115, 'SYSTEM RESTART REPLICA' = 116, 'SYSTEM RESTORE REPLICA' = 117, 'SYSTEM SYNC DATABASE REPLICA' = 118, 'SYSTEM SYNC TRANSACTION LOG' = 119, 'SYSTEM FLUSH DISTRIBUTED' = 120, 'SYSTEM FLUSH LOGS' = 121, 'SYSTEM FLUSH' = 122, 'SYSTEM THREAD FUZZER' = 123, 'SYSTEM UNFREEZE' = 124, 'SYSTEM' = 125, 'dictGet' = 126, 'addressToLine' = 127, 'addressToLineWithInlines' = 128, 'addressToSymbol' = 129, 'demangle' = 130, 'INTROSPECTION' = 131, 'FILE' = 132, 'URL' = 133, 'REMOTE' = 134, 'MONGO' = 135, 'MEILISEARCH' = 136, 'MYSQL' = 137, 'POSTGRES' = 138, 'SQLITE' = 139, 'ODBC' = 140, 'JDBC' = 141, 'HDFS' = 142, 'S3' = 143, 'HIVE' = 144, 'SOURCES' = 145, 'CLUSTER' = 146, 'ALL' = 147, 'NONE' = 148),\n+    `access_type` Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER TABLE' = 41, 'ALTER DATABASE' = 42, 'ALTER VIEW REFRESH' = 43, 'ALTER VIEW MODIFY QUERY' = 44, 'ALTER VIEW' = 45, 'ALTER' = 46, 'CREATE DATABASE' = 47, 'CREATE TABLE' = 48, 'CREATE VIEW' = 49, 'CREATE DICTIONARY' = 50, 'CREATE TEMPORARY TABLE' = 51, 'CREATE FUNCTION' = 52, 'CREATE' = 53, 'DROP DATABASE' = 54, 'DROP TABLE' = 55, 'DROP VIEW' = 56, 'DROP DICTIONARY' = 57, 'DROP FUNCTION' = 58, 'DROP' = 59, 'TRUNCATE' = 60, 'OPTIMIZE' = 61, 'BACKUP' = 62, 'KILL QUERY' = 63, 'KILL TRANSACTION' = 64, 'MOVE PARTITION BETWEEN SHARDS' = 65, 'CREATE USER' = 66, 'ALTER USER' = 67, 'DROP USER' = 68, 'CREATE ROLE' = 69, 'ALTER ROLE' = 70, 'DROP ROLE' = 71, 'ROLE ADMIN' = 72, 'CREATE ROW POLICY' = 73, 'ALTER ROW POLICY' = 74, 'DROP ROW POLICY' = 75, 'CREATE QUOTA' = 76, 'ALTER QUOTA' = 77, 'DROP QUOTA' = 78, 'CREATE SETTINGS PROFILE' = 79, 'ALTER SETTINGS PROFILE' = 80, 'DROP SETTINGS PROFILE' = 81, 'SHOW USERS' = 82, 'SHOW ROLES' = 83, 'SHOW ROW POLICIES' = 84, 'SHOW QUOTAS' = 85, 'SHOW SETTINGS PROFILES' = 86, 'SHOW ACCESS' = 87, 'ACCESS MANAGEMENT' = 88, 'SYSTEM SHUTDOWN' = 89, 'SYSTEM DROP DNS CACHE' = 90, 'SYSTEM DROP MARK CACHE' = 91, 'SYSTEM DROP UNCOMPRESSED CACHE' = 92, 'SYSTEM DROP MMAP CACHE' = 93, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 94, 'SYSTEM DROP FILESYSTEM CACHE' = 95, 'SYSTEM DROP SCHEMA CACHE' = 96, 'SYSTEM DROP CACHE' = 97, 'SYSTEM RELOAD CONFIG' = 98, 'SYSTEM RELOAD SYMBOLS' = 99, 'SYSTEM RELOAD DICTIONARY' = 100, 'SYSTEM RELOAD FUNCTION' = 101, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 102, 'SYSTEM RELOAD' = 103, 'SYSTEM RESTART DISK' = 104, 'SYSTEM MERGES' = 105, 'SYSTEM TTL MERGES' = 106, 'SYSTEM FETCHES' = 107, 'SYSTEM MOVES' = 108, 'SYSTEM DISTRIBUTED SENDS' = 109, 'SYSTEM REPLICATED SENDS' = 110, 'SYSTEM SENDS' = 111, 'SYSTEM REPLICATION QUEUES' = 112, 'SYSTEM DROP REPLICA' = 113, 'SYSTEM SYNC REPLICA' = 114, 'SYSTEM RESTART REPLICA' = 115, 'SYSTEM RESTORE REPLICA' = 116, 'SYSTEM SYNC DATABASE REPLICA' = 117, 'SYSTEM SYNC TRANSACTION LOG' = 118, 'SYSTEM FLUSH DISTRIBUTED' = 119, 'SYSTEM FLUSH LOGS' = 120, 'SYSTEM FLUSH' = 121, 'SYSTEM THREAD FUZZER' = 122, 'SYSTEM UNFREEZE' = 123, 'SYSTEM' = 124, 'dictGet' = 125, 'addressToLine' = 126, 'addressToLineWithInlines' = 127, 'addressToSymbol' = 128, 'demangle' = 129, 'INTROSPECTION' = 130, 'FILE' = 131, 'URL' = 132, 'REMOTE' = 133, 'MONGO' = 134, 'MEILISEARCH' = 135, 'MYSQL' = 136, 'POSTGRES' = 137, 'SQLITE' = 138, 'ODBC' = 139, 'JDBC' = 140, 'HDFS' = 141, 'S3' = 142, 'HIVE' = 143, 'SOURCES' = 144, 'CLUSTER' = 145, 'ALL' = 146, 'NONE' = 147),\n     `database` Nullable(String),\n     `table` Nullable(String),\n     `column` Nullable(String),\n@@ -364,18 +364,6 @@ CREATE TABLE system.metrics\n )\n ENGINE = SystemMetrics\n COMMENT 'SYSTEM TABLE is built on the fly.'\n-CREATE TABLE system.models\n-(\n-    `name` String,\n-    `status` Enum8('NOT_LOADED' = 0, 'LOADED' = 1, 'FAILED' = 2, 'LOADING' = 3, 'FAILED_AND_RELOADING' = 4, 'LOADED_AND_RELOADING' = 5, 'NOT_EXIST' = 6),\n-    `origin` String,\n-    `type` String,\n-    `loading_start_time` DateTime,\n-    `loading_duration` Float32,\n-    `last_exception` String\n-)\n-ENGINE = SystemModels\n-COMMENT 'SYSTEM TABLE is built on the fly.'\n CREATE TABLE system.mutations\n (\n     `database` String,\n@@ -553,10 +541,10 @@ ENGINE = SystemPartsColumns\n COMMENT 'SYSTEM TABLE is built on the fly.'\n CREATE TABLE system.privileges\n (\n-    `privilege` Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER TABLE' = 41, 'ALTER DATABASE' = 42, 'ALTER VIEW REFRESH' = 43, 'ALTER VIEW MODIFY QUERY' = 44, 'ALTER VIEW' = 45, 'ALTER' = 46, 'CREATE DATABASE' = 47, 'CREATE TABLE' = 48, 'CREATE VIEW' = 49, 'CREATE DICTIONARY' = 50, 'CREATE TEMPORARY TABLE' = 51, 'CREATE FUNCTION' = 52, 'CREATE' = 53, 'DROP DATABASE' = 54, 'DROP TABLE' = 55, 'DROP VIEW' = 56, 'DROP DICTIONARY' = 57, 'DROP FUNCTION' = 58, 'DROP' = 59, 'TRUNCATE' = 60, 'OPTIMIZE' = 61, 'BACKUP' = 62, 'KILL QUERY' = 63, 'KILL TRANSACTION' = 64, 'MOVE PARTITION BETWEEN SHARDS' = 65, 'CREATE USER' = 66, 'ALTER USER' = 67, 'DROP USER' = 68, 'CREATE ROLE' = 69, 'ALTER ROLE' = 70, 'DROP ROLE' = 71, 'ROLE ADMIN' = 72, 'CREATE ROW POLICY' = 73, 'ALTER ROW POLICY' = 74, 'DROP ROW POLICY' = 75, 'CREATE QUOTA' = 76, 'ALTER QUOTA' = 77, 'DROP QUOTA' = 78, 'CREATE SETTINGS PROFILE' = 79, 'ALTER SETTINGS PROFILE' = 80, 'DROP SETTINGS PROFILE' = 81, 'SHOW USERS' = 82, 'SHOW ROLES' = 83, 'SHOW ROW POLICIES' = 84, 'SHOW QUOTAS' = 85, 'SHOW SETTINGS PROFILES' = 86, 'SHOW ACCESS' = 87, 'ACCESS MANAGEMENT' = 88, 'SYSTEM SHUTDOWN' = 89, 'SYSTEM DROP DNS CACHE' = 90, 'SYSTEM DROP MARK CACHE' = 91, 'SYSTEM DROP UNCOMPRESSED CACHE' = 92, 'SYSTEM DROP MMAP CACHE' = 93, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 94, 'SYSTEM DROP FILESYSTEM CACHE' = 95, 'SYSTEM DROP SCHEMA CACHE' = 96, 'SYSTEM DROP CACHE' = 97, 'SYSTEM RELOAD CONFIG' = 98, 'SYSTEM RELOAD SYMBOLS' = 99, 'SYSTEM RELOAD DICTIONARY' = 100, 'SYSTEM RELOAD MODEL' = 101, 'SYSTEM RELOAD FUNCTION' = 102, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 103, 'SYSTEM RELOAD' = 104, 'SYSTEM RESTART DISK' = 105, 'SYSTEM MERGES' = 106, 'SYSTEM TTL MERGES' = 107, 'SYSTEM FETCHES' = 108, 'SYSTEM MOVES' = 109, 'SYSTEM DISTRIBUTED SENDS' = 110, 'SYSTEM REPLICATED SENDS' = 111, 'SYSTEM SENDS' = 112, 'SYSTEM REPLICATION QUEUES' = 113, 'SYSTEM DROP REPLICA' = 114, 'SYSTEM SYNC REPLICA' = 115, 'SYSTEM RESTART REPLICA' = 116, 'SYSTEM RESTORE REPLICA' = 117, 'SYSTEM SYNC DATABASE REPLICA' = 118, 'SYSTEM SYNC TRANSACTION LOG' = 119, 'SYSTEM FLUSH DISTRIBUTED' = 120, 'SYSTEM FLUSH LOGS' = 121, 'SYSTEM FLUSH' = 122, 'SYSTEM THREAD FUZZER' = 123, 'SYSTEM UNFREEZE' = 124, 'SYSTEM' = 125, 'dictGet' = 126, 'addressToLine' = 127, 'addressToLineWithInlines' = 128, 'addressToSymbol' = 129, 'demangle' = 130, 'INTROSPECTION' = 131, 'FILE' = 132, 'URL' = 133, 'REMOTE' = 134, 'MONGO' = 135, 'MEILISEARCH' = 136, 'MYSQL' = 137, 'POSTGRES' = 138, 'SQLITE' = 139, 'ODBC' = 140, 'JDBC' = 141, 'HDFS' = 142, 'S3' = 143, 'HIVE' = 144, 'SOURCES' = 145, 'CLUSTER' = 146, 'ALL' = 147, 'NONE' = 148),\n+    `privilege` Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER TABLE' = 41, 'ALTER DATABASE' = 42, 'ALTER VIEW REFRESH' = 43, 'ALTER VIEW MODIFY QUERY' = 44, 'ALTER VIEW' = 45, 'ALTER' = 46, 'CREATE DATABASE' = 47, 'CREATE TABLE' = 48, 'CREATE VIEW' = 49, 'CREATE DICTIONARY' = 50, 'CREATE TEMPORARY TABLE' = 51, 'CREATE FUNCTION' = 52, 'CREATE' = 53, 'DROP DATABASE' = 54, 'DROP TABLE' = 55, 'DROP VIEW' = 56, 'DROP DICTIONARY' = 57, 'DROP FUNCTION' = 58, 'DROP' = 59, 'TRUNCATE' = 60, 'OPTIMIZE' = 61, 'BACKUP' = 62, 'KILL QUERY' = 63, 'KILL TRANSACTION' = 64, 'MOVE PARTITION BETWEEN SHARDS' = 65, 'CREATE USER' = 66, 'ALTER USER' = 67, 'DROP USER' = 68, 'CREATE ROLE' = 69, 'ALTER ROLE' = 70, 'DROP ROLE' = 71, 'ROLE ADMIN' = 72, 'CREATE ROW POLICY' = 73, 'ALTER ROW POLICY' = 74, 'DROP ROW POLICY' = 75, 'CREATE QUOTA' = 76, 'ALTER QUOTA' = 77, 'DROP QUOTA' = 78, 'CREATE SETTINGS PROFILE' = 79, 'ALTER SETTINGS PROFILE' = 80, 'DROP SETTINGS PROFILE' = 81, 'SHOW USERS' = 82, 'SHOW ROLES' = 83, 'SHOW ROW POLICIES' = 84, 'SHOW QUOTAS' = 85, 'SHOW SETTINGS PROFILES' = 86, 'SHOW ACCESS' = 87, 'ACCESS MANAGEMENT' = 88, 'SYSTEM SHUTDOWN' = 89, 'SYSTEM DROP DNS CACHE' = 90, 'SYSTEM DROP MARK CACHE' = 91, 'SYSTEM DROP UNCOMPRESSED CACHE' = 92, 'SYSTEM DROP MMAP CACHE' = 93, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 94, 'SYSTEM DROP FILESYSTEM CACHE' = 95, 'SYSTEM DROP SCHEMA CACHE' = 96, 'SYSTEM DROP CACHE' = 97, 'SYSTEM RELOAD CONFIG' = 98, 'SYSTEM RELOAD SYMBOLS' = 99, 'SYSTEM RELOAD DICTIONARY' = 100, 'SYSTEM RELOAD FUNCTION' = 101, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 102, 'SYSTEM RELOAD' = 103, 'SYSTEM RESTART DISK' = 104, 'SYSTEM MERGES' = 105, 'SYSTEM TTL MERGES' = 106, 'SYSTEM FETCHES' = 107, 'SYSTEM MOVES' = 108, 'SYSTEM DISTRIBUTED SENDS' = 109, 'SYSTEM REPLICATED SENDS' = 110, 'SYSTEM SENDS' = 111, 'SYSTEM REPLICATION QUEUES' = 112, 'SYSTEM DROP REPLICA' = 113, 'SYSTEM SYNC REPLICA' = 114, 'SYSTEM RESTART REPLICA' = 115, 'SYSTEM RESTORE REPLICA' = 116, 'SYSTEM SYNC DATABASE REPLICA' = 117, 'SYSTEM SYNC TRANSACTION LOG' = 118, 'SYSTEM FLUSH DISTRIBUTED' = 119, 'SYSTEM FLUSH LOGS' = 120, 'SYSTEM FLUSH' = 121, 'SYSTEM THREAD FUZZER' = 122, 'SYSTEM UNFREEZE' = 123, 'SYSTEM' = 124, 'dictGet' = 125, 'addressToLine' = 126, 'addressToLineWithInlines' = 127, 'addressToSymbol' = 128, 'demangle' = 129, 'INTROSPECTION' = 130, 'FILE' = 131, 'URL' = 132, 'REMOTE' = 133, 'MONGO' = 134, 'MEILISEARCH' = 135, 'MYSQL' = 136, 'POSTGRES' = 137, 'SQLITE' = 138, 'ODBC' = 139, 'JDBC' = 140, 'HDFS' = 141, 'S3' = 142, 'HIVE' = 143, 'SOURCES' = 144, 'CLUSTER' = 145, 'ALL' = 146, 'NONE' = 147),\n     `aliases` Array(String),\n     `level` Nullable(Enum8('GLOBAL' = 0, 'DATABASE' = 1, 'TABLE' = 2, 'DICTIONARY' = 3, 'VIEW' = 4, 'COLUMN' = 5)),\n-    `parent_group` Nullable(Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER TABLE' = 41, 'ALTER DATABASE' = 42, 'ALTER VIEW REFRESH' = 43, 'ALTER VIEW MODIFY QUERY' = 44, 'ALTER VIEW' = 45, 'ALTER' = 46, 'CREATE DATABASE' = 47, 'CREATE TABLE' = 48, 'CREATE VIEW' = 49, 'CREATE DICTIONARY' = 50, 'CREATE TEMPORARY TABLE' = 51, 'CREATE FUNCTION' = 52, 'CREATE' = 53, 'DROP DATABASE' = 54, 'DROP TABLE' = 55, 'DROP VIEW' = 56, 'DROP DICTIONARY' = 57, 'DROP FUNCTION' = 58, 'DROP' = 59, 'TRUNCATE' = 60, 'OPTIMIZE' = 61, 'BACKUP' = 62, 'KILL QUERY' = 63, 'KILL TRANSACTION' = 64, 'MOVE PARTITION BETWEEN SHARDS' = 65, 'CREATE USER' = 66, 'ALTER USER' = 67, 'DROP USER' = 68, 'CREATE ROLE' = 69, 'ALTER ROLE' = 70, 'DROP ROLE' = 71, 'ROLE ADMIN' = 72, 'CREATE ROW POLICY' = 73, 'ALTER ROW POLICY' = 74, 'DROP ROW POLICY' = 75, 'CREATE QUOTA' = 76, 'ALTER QUOTA' = 77, 'DROP QUOTA' = 78, 'CREATE SETTINGS PROFILE' = 79, 'ALTER SETTINGS PROFILE' = 80, 'DROP SETTINGS PROFILE' = 81, 'SHOW USERS' = 82, 'SHOW ROLES' = 83, 'SHOW ROW POLICIES' = 84, 'SHOW QUOTAS' = 85, 'SHOW SETTINGS PROFILES' = 86, 'SHOW ACCESS' = 87, 'ACCESS MANAGEMENT' = 88, 'SYSTEM SHUTDOWN' = 89, 'SYSTEM DROP DNS CACHE' = 90, 'SYSTEM DROP MARK CACHE' = 91, 'SYSTEM DROP UNCOMPRESSED CACHE' = 92, 'SYSTEM DROP MMAP CACHE' = 93, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 94, 'SYSTEM DROP FILESYSTEM CACHE' = 95, 'SYSTEM DROP SCHEMA CACHE' = 96, 'SYSTEM DROP CACHE' = 97, 'SYSTEM RELOAD CONFIG' = 98, 'SYSTEM RELOAD SYMBOLS' = 99, 'SYSTEM RELOAD DICTIONARY' = 100, 'SYSTEM RELOAD MODEL' = 101, 'SYSTEM RELOAD FUNCTION' = 102, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 103, 'SYSTEM RELOAD' = 104, 'SYSTEM RESTART DISK' = 105, 'SYSTEM MERGES' = 106, 'SYSTEM TTL MERGES' = 107, 'SYSTEM FETCHES' = 108, 'SYSTEM MOVES' = 109, 'SYSTEM DISTRIBUTED SENDS' = 110, 'SYSTEM REPLICATED SENDS' = 111, 'SYSTEM SENDS' = 112, 'SYSTEM REPLICATION QUEUES' = 113, 'SYSTEM DROP REPLICA' = 114, 'SYSTEM SYNC REPLICA' = 115, 'SYSTEM RESTART REPLICA' = 116, 'SYSTEM RESTORE REPLICA' = 117, 'SYSTEM SYNC DATABASE REPLICA' = 118, 'SYSTEM SYNC TRANSACTION LOG' = 119, 'SYSTEM FLUSH DISTRIBUTED' = 120, 'SYSTEM FLUSH LOGS' = 121, 'SYSTEM FLUSH' = 122, 'SYSTEM THREAD FUZZER' = 123, 'SYSTEM UNFREEZE' = 124, 'SYSTEM' = 125, 'dictGet' = 126, 'addressToLine' = 127, 'addressToLineWithInlines' = 128, 'addressToSymbol' = 129, 'demangle' = 130, 'INTROSPECTION' = 131, 'FILE' = 132, 'URL' = 133, 'REMOTE' = 134, 'MONGO' = 135, 'MEILISEARCH' = 136, 'MYSQL' = 137, 'POSTGRES' = 138, 'SQLITE' = 139, 'ODBC' = 140, 'JDBC' = 141, 'HDFS' = 142, 'S3' = 143, 'HIVE' = 144, 'SOURCES' = 145, 'CLUSTER' = 146, 'ALL' = 147, 'NONE' = 148))\n+    `parent_group` Nullable(Enum16('SHOW DATABASES' = 0, 'SHOW TABLES' = 1, 'SHOW COLUMNS' = 2, 'SHOW DICTIONARIES' = 3, 'SHOW' = 4, 'SHOW CACHES' = 5, 'SELECT' = 6, 'INSERT' = 7, 'ALTER UPDATE' = 8, 'ALTER DELETE' = 9, 'ALTER ADD COLUMN' = 10, 'ALTER MODIFY COLUMN' = 11, 'ALTER DROP COLUMN' = 12, 'ALTER COMMENT COLUMN' = 13, 'ALTER CLEAR COLUMN' = 14, 'ALTER RENAME COLUMN' = 15, 'ALTER MATERIALIZE COLUMN' = 16, 'ALTER COLUMN' = 17, 'ALTER MODIFY COMMENT' = 18, 'ALTER ORDER BY' = 19, 'ALTER SAMPLE BY' = 20, 'ALTER ADD INDEX' = 21, 'ALTER DROP INDEX' = 22, 'ALTER MATERIALIZE INDEX' = 23, 'ALTER CLEAR INDEX' = 24, 'ALTER INDEX' = 25, 'ALTER ADD PROJECTION' = 26, 'ALTER DROP PROJECTION' = 27, 'ALTER MATERIALIZE PROJECTION' = 28, 'ALTER CLEAR PROJECTION' = 29, 'ALTER PROJECTION' = 30, 'ALTER ADD CONSTRAINT' = 31, 'ALTER DROP CONSTRAINT' = 32, 'ALTER CONSTRAINT' = 33, 'ALTER TTL' = 34, 'ALTER MATERIALIZE TTL' = 35, 'ALTER SETTINGS' = 36, 'ALTER MOVE PARTITION' = 37, 'ALTER FETCH PARTITION' = 38, 'ALTER FREEZE PARTITION' = 39, 'ALTER DATABASE SETTINGS' = 40, 'ALTER TABLE' = 41, 'ALTER DATABASE' = 42, 'ALTER VIEW REFRESH' = 43, 'ALTER VIEW MODIFY QUERY' = 44, 'ALTER VIEW' = 45, 'ALTER' = 46, 'CREATE DATABASE' = 47, 'CREATE TABLE' = 48, 'CREATE VIEW' = 49, 'CREATE DICTIONARY' = 50, 'CREATE TEMPORARY TABLE' = 51, 'CREATE FUNCTION' = 52, 'CREATE' = 53, 'DROP DATABASE' = 54, 'DROP TABLE' = 55, 'DROP VIEW' = 56, 'DROP DICTIONARY' = 57, 'DROP FUNCTION' = 58, 'DROP' = 59, 'TRUNCATE' = 60, 'OPTIMIZE' = 61, 'BACKUP' = 62, 'KILL QUERY' = 63, 'KILL TRANSACTION' = 64, 'MOVE PARTITION BETWEEN SHARDS' = 65, 'CREATE USER' = 66, 'ALTER USER' = 67, 'DROP USER' = 68, 'CREATE ROLE' = 69, 'ALTER ROLE' = 70, 'DROP ROLE' = 71, 'ROLE ADMIN' = 72, 'CREATE ROW POLICY' = 73, 'ALTER ROW POLICY' = 74, 'DROP ROW POLICY' = 75, 'CREATE QUOTA' = 76, 'ALTER QUOTA' = 77, 'DROP QUOTA' = 78, 'CREATE SETTINGS PROFILE' = 79, 'ALTER SETTINGS PROFILE' = 80, 'DROP SETTINGS PROFILE' = 81, 'SHOW USERS' = 82, 'SHOW ROLES' = 83, 'SHOW ROW POLICIES' = 84, 'SHOW QUOTAS' = 85, 'SHOW SETTINGS PROFILES' = 86, 'SHOW ACCESS' = 87, 'ACCESS MANAGEMENT' = 88, 'SYSTEM SHUTDOWN' = 89, 'SYSTEM DROP DNS CACHE' = 90, 'SYSTEM DROP MARK CACHE' = 91, 'SYSTEM DROP UNCOMPRESSED CACHE' = 92, 'SYSTEM DROP MMAP CACHE' = 93, 'SYSTEM DROP COMPILED EXPRESSION CACHE' = 94, 'SYSTEM DROP FILESYSTEM CACHE' = 95, 'SYSTEM DROP SCHEMA CACHE' = 96, 'SYSTEM DROP CACHE' = 97, 'SYSTEM RELOAD CONFIG' = 98, 'SYSTEM RELOAD SYMBOLS' = 99, 'SYSTEM RELOAD DICTIONARY' = 100, 'SYSTEM RELOAD FUNCTION' = 101, 'SYSTEM RELOAD EMBEDDED DICTIONARIES' = 102, 'SYSTEM RELOAD' = 103, 'SYSTEM RESTART DISK' = 104, 'SYSTEM MERGES' = 105, 'SYSTEM TTL MERGES' = 106, 'SYSTEM FETCHES' = 107, 'SYSTEM MOVES' = 108, 'SYSTEM DISTRIBUTED SENDS' = 109, 'SYSTEM REPLICATED SENDS' = 110, 'SYSTEM SENDS' = 111, 'SYSTEM REPLICATION QUEUES' = 112, 'SYSTEM DROP REPLICA' = 113, 'SYSTEM SYNC REPLICA' = 114, 'SYSTEM RESTART REPLICA' = 115, 'SYSTEM RESTORE REPLICA' = 116, 'SYSTEM SYNC DATABASE REPLICA' = 117, 'SYSTEM SYNC TRANSACTION LOG' = 118, 'SYSTEM FLUSH DISTRIBUTED' = 119, 'SYSTEM FLUSH LOGS' = 120, 'SYSTEM FLUSH' = 121, 'SYSTEM THREAD FUZZER' = 122, 'SYSTEM UNFREEZE' = 123, 'SYSTEM' = 124, 'dictGet' = 125, 'addressToLine' = 126, 'addressToLineWithInlines' = 127, 'addressToSymbol' = 128, 'demangle' = 129, 'INTROSPECTION' = 130, 'FILE' = 131, 'URL' = 132, 'REMOTE' = 133, 'MONGO' = 134, 'MEILISEARCH' = 135, 'MYSQL' = 136, 'POSTGRES' = 137, 'SQLITE' = 138, 'ODBC' = 139, 'JDBC' = 140, 'HDFS' = 141, 'S3' = 142, 'HIVE' = 143, 'SOURCES' = 144, 'CLUSTER' = 145, 'ALL' = 146, 'NONE' = 147))\n )\n ENGINE = SystemPrivileges\n COMMENT 'SYSTEM TABLE is built on the fly.'\ndiff --git a/tests/queries/0_stateless/02117_show_create_table_system.sql b/tests/queries/0_stateless/02117_show_create_table_system.sql\nindex 9a5726a0780d..8b75ed60eecd 100644\n--- a/tests/queries/0_stateless/02117_show_create_table_system.sql\n+++ b/tests/queries/0_stateless/02117_show_create_table_system.sql\n@@ -45,7 +45,6 @@ show create table macros format TSVRaw;\n show create table merge_tree_settings format TSVRaw;\n show create table merges format TSVRaw;\n show create table metrics format TSVRaw;\n-show create table models format TSVRaw;\n show create table mutations format TSVRaw;\n show create table numbers format TSVRaw;\n show create table numbers_mt format TSVRaw;\ndiff --git a/tests/queries/0_stateless/02413_model_evaluate_smoke.reference b/tests/queries/0_stateless/02413_model_evaluate_smoke.reference\ndeleted file mode 100644\nindex e69de29bb2d1..000000000000\ndiff --git a/tests/queries/0_stateless/02413_model_evaluate_smoke.sql b/tests/queries/0_stateless/02413_model_evaluate_smoke.sql\ndeleted file mode 100644\nindex 3b20067abfe7..000000000000\n--- a/tests/queries/0_stateless/02413_model_evaluate_smoke.sql\n+++ /dev/null\n@@ -1,2 +0,0 @@\n--- This model does not exist:\n-SELECT modelEvaluate('hello', 1, 2, 3); -- { serverError 36 }\ndiff --git a/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference b/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference\nindex cbd92d0e8f4f..6e0e41f11b8c 100644\n--- a/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference\n+++ b/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference\n@@ -192,6 +192,7 @@ caseWithExpr\n caseWithExpression\n caseWithoutExpr\n caseWithoutExpression\n+catboostEvaluate\n cbrt\n ceil\n char\n@@ -475,7 +476,6 @@ min2\n minSampleSizeContinous\n minSampleSizeConversion\n minus\n-modelEvaluate\n modulo\n moduloLegacy\n moduloOrZero\n",
  "problem_statement": "CatBoostModel.cpp calls `dlerror` from libc\ntest_catboost_model_first_evaluate\r\n```\r\n2021.08.19 13:59:13.236203 [ 348 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.08.19 13:59:13.237234 [ 348 ] {} <Fatal> BaseDaemon: (version 21.9.1.7821 (official build), build id: B93FC7D1AC073387F233DA0D5F4B5D59FC5A5F66) (from thread 194) (query_id: ec2b7d73-664e-46be-8e8a-e48c71f0b91a) Received signal Illegal instruction (4)\r\n2021.08.19 13:59:13.237834 [ 348 ] {} <Fatal> BaseDaemon: Illegal operand.\r\n2021.08.19 13:59:13.238528 [ 348 ] {} <Fatal> BaseDaemon: Stack trace: 0x139acebd 0x1e5d6e4a 0x1e5d17f7 0x1e5ccfa4 0x1e5cc7fa 0x1e5cc74d 0x1e5cc688 0x1e5cc620 0x1e5cc3e0 0x1e5cc064 0x1e5cbe92 0x1e5cbd31 0x1e5cb5dc 0x1e5cb2f7 0x1e5ca59f 0x1e5ca1f6 0x1e590120 0x1e5933d0 0x1e59335c 0x1e5932dc 0x1e59325a 0x1e5931e2 0x1e5a0368 0x1e5a027a 0x1e59cca6 0x1e59ac0b 0x1e598be9 0x1e5c6cff 0x1e5c6ac9 0x1e5c69d2 0x1e593c67 0x1e593bf5 0x1e593f8d 0x1717321d 0x171721b2 0x1631fa33 0x1dc60266 0x1dc5fdb0 0x1dc602c4 0x1e333ca3 0x1e6b61cb\r\n2021.08.19 13:59:13.242518 [ 348 ] {} <Fatal> BaseDaemon: 4. ./obj-x86_64-linux-gnu/../base/harmful/harmful.c:199: dlerror @ 0x139acebd in /usr/bin/clickhouse\r\n2021.08.19 13:59:13.304643 [ 348 ] {} <Fatal> BaseDaemon: 5. ./obj-x86_64-linux-gnu/../src/Common/SharedLibrary.cpp:36: DB::SharedLibrary::getImpl(std::__1::basic_string_view<char, std::__1::char_traits<char> >, bool) @ 0x1e5d6e4a in /usr/bin/clickhouse\r\n2021.08.19 13:59:13.467250 [ 348 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/Common/SharedLibrary.h:24: void* (*DB::SharedLibrary::get<void* (*)()>(std::__1::basic_string_view<char, std::__1::char_traits<char> >))() @ 0x1e5d17f7 in /usr/bin/clickhouse\r\n2021.08.19 13:59:13.627541 [ 348 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Interpreters/CatBoostModel.cpp:456: void DB::(anonymous namespace)::CatBoostLibHolder::load<void* (*)()>(void* (*&)(), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e5ccfa4 in /usr/bin/clickhouse\r\n2021.08.19 13:59:13.785122 [ 348 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Interpreters/CatBoostModel.cpp:464: DB::(anonymous namespace)::CatBoostLibHolder::initAPI() @ 0x1e5cc7fa in /usr/bin/clickhouse\r\n2021.08.19 13:59:13.941766 [ 348 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Interpreters/CatBoostModel.cpp:443: DB::(anonymous namespace)::CatBoostLibHolder::CatBoostLibHolder(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) @ 0x1e5cc74d in /usr/bin/clickhouse\r\n2021.08.19 13:59:14.097582 [ 348 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:886: void std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder>::construct<DB::(anonymous namespace)::CatBoostLibHolder, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(DB::(anonymous namespace)::CatBoostLibHolder*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e5cc688 in /usr/bin/clickhouse\r\n2021.08.19 13:59:14.254706 [ 348 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:521: void std::__1::allocator_traits<std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder> >::__construct<DB::(anonymous namespace)::CatBoostLibHolder, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::integral_constant<bool, true>, std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder>&, DB::(anonymous namespace)::CatBoostLibHolder*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e5cc620 in /usr/bin/clickhouse\r\n2021.08.19 13:59:14.411101 [ 348 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__memory/allocator_traits.h:482: void std::__1::allocator_traits<std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder> >::construct<DB::(anonymous namespace)::CatBoostLibHolder, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder>&, DB::(anonymous namespace)::CatBoostLibHolder*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e5cc3e0 in /usr/bin/clickhouse\r\n2021.08.19 13:59:14.568291 [ 348 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2594: std::__1::__shared_ptr_emplace<DB::(anonymous namespace)::CatBoostLibHolder, std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder> >::__shared_ptr_emplace<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e5cc064 in /usr/bin/clickhouse\r\n2021.08.19 13:59:14.735862 [ 348 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3360: std::__1::shared_ptr<DB::(anonymous namespace)::CatBoostLibHolder> std::__1::allocate_shared<DB::(anonymous namespace)::CatBoostLibHolder, std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void>(std::__1::allocator<DB::(anonymous namespace)::CatBoostLibHolder> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e5cbe92 in /usr/bin/clickhouse\r\n2021.08.19 13:59:14.900351 [ 348 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3369: std::__1::shared_ptr<DB::(anonymous namespace)::CatBoostLibHolder> std::__1::make_shared<DB::(anonymous namespace)::CatBoostLibHolder, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e5cbd31 in /usr/bin/clickhouse\r\n2021.08.19 13:59:15.083533 [ 348 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../src/Interpreters/CatBoostModel.cpp:490: DB::(anonymous namespace)::getCatBoostWrapperHolder(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1e5cb5dc in /usr/bin/clickhouse\r\n2021.08.19 13:59:15.244953 [ 348 ] {} <Fatal> BaseDaemon: 17. ./obj-x86_64-linux-gnu/../src/Interpreters/CatBoostModel.cpp:502: DB::CatBoostModel::CatBoostModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::ExternalLoadableLifetime const&) @ 0x1e5cb2f7 in /usr/bin/clickhouse\r\n2021.08.19 13:59:15.469473 [ 348 ] {} <Fatal> BaseDaemon: 18. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068: std::__1::__unique_if<DB::CatBoostModel>::__unique_single std::__1::make_unique<DB::CatBoostModel, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::ExternalLoadableLifetime&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, DB::ExternalLoadableLifetime&) @ 0x1e5ca59f in /usr/bin/clickhouse\r\n2021.08.19 13:59:15.691083 [ 348 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalModelsLoader.cpp:30: DB::ExternalModelsLoader::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x1e5ca1f6 in /usr/bin/clickhouse\r\n2021.08.19 13:59:16.017786 [ 348 ] {} <Fatal> BaseDaemon: 20. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1498: DB::ExternalLoader::createObject(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const @ 0x1e590120 in /usr/bin/clickhouse\r\n2021.08.19 13:59:16.418175 [ 348 ] {} <Fatal> BaseDaemon: 21. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1264: auto DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1::operator()<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const @ 0x1e5933d0 in /usr/bin/clickhouse\r\n2021.08.19 13:59:16.805223 [ 348 ] {} <Fatal> BaseDaemon: 22. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/type_traits:3676: decltype(std::__1::forward<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&>(fp)(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0), std::__1::forward<DB::ExternalLoader::ObjectConfig const&>(fp0), std::__1::forward<std::__1::shared_ptr<DB::IExternalLoadable const> const&>(fp0))) std::__1::__invoke<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) @ 0x1e59335c in /usr/bin/clickhouse\r\n2021.08.19 13:59:17.162490 [ 348 ] {} <Fatal> BaseDaemon: 23. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__functional_base:317: std::__1::shared_ptr<DB::IExternalLoadable const> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IExternalLoadable const> >::__call<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&>(DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) @ 0x1e5932dc in /usr/bin/clickhouse\r\n2021.08.19 13:59:17.524810 [ 348 ] {} <Fatal> BaseDaemon: 24. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1608: std::__1::__function::__default_alloc_func<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1, std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) @ 0x1e59325a in /usr/bin/clickhouse\r\n2021.08.19 13:59:17.901028 [ 348 ] {} <Fatal> BaseDaemon: 25. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2089: std::__1::shared_ptr<DB::IExternalLoadable const> std::__1::__function::__policy_invoker<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::__call_impl<std::__1::__function::__default_alloc_func<DB::ExternalLoader::ExternalLoader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Poco::Logger*)::$_1, std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)> >(std::__1::__function::__policy_storage const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) @ 0x1e5931e2 in /usr/bin/clickhouse\r\n2021.08.19 13:59:18.248391 [ 348 ] {} <Fatal> BaseDaemon: 26. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2221: std::__1::__function::__policy_func<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const @ 0x1e5a0368 in /usr/bin/clickhouse\r\n2021.08.19 13:59:18.585908 [ 348 ] {} <Fatal> BaseDaemon: 27. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:2560: std::__1::function<std::__1::shared_ptr<DB::IExternalLoadable const> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const> const&) const @ 0x1e5a027a in /usr/bin/clickhouse\r\n2021.08.19 13:59:18.924246 [ 348 ] {} <Fatal> BaseDaemon: 28. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1026: DB::ExternalLoader::LoadingDispatcher::loadSingleObject(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ExternalLoader::ObjectConfig const&, std::__1::shared_ptr<DB::IExternalLoadable const>) @ 0x1e59cca6 in /usr/bin/clickhouse\r\n2021.08.19 13:59:19.254967 [ 348 ] {} <Fatal> BaseDaemon: 29. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:981: DB::ExternalLoader::LoadingDispatcher::doLoading(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, bool, unsigned long, bool, std::__1::shared_ptr<DB::ThreadGroupStatus>) @ 0x1e59ac0b in /usr/bin/clickhouse\r\n2021.08.19 13:59:19.582242 [ 348 ] {} <Fatal> BaseDaemon: 30. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:921: DB::ExternalLoader::LoadingDispatcher::startLoading(DB::ExternalLoader::LoadingDispatcher::Info&, bool, unsigned long) @ 0x1e598be9 in /usr/bin/clickhouse\r\n2021.08.19 13:59:19.975862 [ 348 ] {} <Fatal> BaseDaemon: 31. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:0: DB::ExternalLoader::LoadingDispatcher::loadImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >, bool, std::__1::unique_lock<std::__1::mutex>&)::'lambda'()::operator()() const @ 0x1e5c6cff in /usr/bin/clickhouse\r\n2021.08.19 13:59:20.370266 [ 348 ] {} <Fatal> BaseDaemon: 32. ./obj-x86_64-linux-gnu/../contrib/libcxx/include/__mutex_base:405: void std::__1::condition_variable::wait<DB::ExternalLoader::LoadingDispatcher::loadImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >, bool, std::__1::unique_lock<std::__1::mutex>&)::'lambda'()>(std::__1::unique_lock<std::__1::mutex>&, DB::ExternalLoader::LoadingDispatcher::loadImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >, bool, std::__1::unique_lock<std::__1::mutex>&)::'lambda'()) @ 0x1e5c6ac9 in /usr/bin/clickhouse\r\n2021.08.19 13:59:20.758840 [ 348 ] {} <Fatal> BaseDaemon: 33. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:829: DB::ExternalLoader::LoadingDispatcher::loadImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >, bool, std::__1::unique_lock<std::__1::mutex>&) @ 0x1e5c69d2 in /usr/bin/clickhouse\r\n2021.08.19 13:59:21.078837 [ 348 ] {} <Fatal> BaseDaemon: 34. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:595: DB::ExternalLoader::LoadResult DB::ExternalLoader::LoadingDispatcher::tryLoad<DB::ExternalLoader::LoadResult>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) @ 0x1e593c67 in /usr/bin/clickhouse\r\n2021.08.19 13:59:21.403902 [ 348 ] {} <Fatal> BaseDaemon: 35. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1354: DB::ExternalLoader::LoadResult DB::ExternalLoader::tryLoad<DB::ExternalLoader::LoadResult, void>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) const @ 0x1e593bf5 in /usr/bin/clickhouse\r\n2021.08.19 13:59:21.738466 [ 348 ] {} <Fatal> BaseDaemon: 36. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalLoader.cpp:1366: std::__1::shared_ptr<DB::IExternalLoadable const> DB::ExternalLoader::load<std::__1::shared_ptr<DB::IExternalLoadable const>, void>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x1e593f8d in /usr/bin/clickhouse\r\n2021.08.19 13:59:22.002970 [ 348 ] {} <Fatal> BaseDaemon: 37. ./obj-x86_64-linux-gnu/../src/Interpreters/ExternalModelsLoader.h:25: DB::ExternalModelsLoader::getModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x1717321d in /usr/bin/clickhouse\r\n2021.08.19 13:59:22.256946 [ 348 ] {} <Fatal> BaseDaemon: 38. ./obj-x86_64-linux-gnu/../src/Functions/FunctionsExternalModels.cpp:52: DB::FunctionModelEvaluate::getReturnTypeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x171721b2 in /usr/bin/clickhouse\r\n2021.08.19 13:59:22.363653 [ 348 ] {} <Fatal> BaseDaemon: 39. ./obj-x86_64-linux-gnu/../src/Functions/IFunctionAdaptors.h:123: DB::FunctionToOverloadResolverAdaptor::getReturnTypeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x1631fa33 in /usr/bin/clickhouse\r\n2021.08.19 13:59:22.713087 [ 348 ] {} <Fatal> BaseDaemon: 40. ./obj-x86_64-linux-gnu/../src/Functions/IFunction.cpp:359: DB::IFunctionOverloadResolver::getReturnTypeWithoutLowCardinality(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x1dc60266 in /usr/bin/clickhouse\r\n2021.08.19 13:59:23.066185 [ 348 ] {} <Fatal> BaseDaemon: 41. ./obj-x86_64-linux-gnu/../src/Functions/IFunction.cpp:314: DB::IFunctionOverloadResolver::getReturnType(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x1dc5fdb0 in /usr/bin/clickhouse\r\n2021.08.19 13:59:23.419197 [ 348 ] {} <Fatal> BaseDaemon: 42. ./obj-x86_64-linux-gnu/../src/Functions/IFunction.cpp:329: DB::IFunctionOverloadResolver::build(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x1dc602c4 in /usr/bin/clickhouse\r\n2021.08.19 13:59:25.033066 [ 348 ] {} <Fatal> BaseDaemon: 43. ./obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:204: DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<DB::ActionsDAG::Node const*, std::__1::allocator<DB::ActionsDAG::Node const*> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) @ 0x1e333ca3 in /usr/bin/clickhouse\r\n2021.08.19 13:59:25.662213 [ 348 ] {} <Fatal> BaseDaemon: 44. ./obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:570: DB::ScopeStack::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) @ 0x1e6b61cb in /usr/bin/clickhouse\r\n2021.08.19 13:59:27.013815 [ 348 ] {} <Fatal> BaseDaemon: Checksum of the binary: 1EFCD06204779A2EAFBED96BAEF63211, integrity check passed.\r\n2021.08.19 13:59:35.964010 [ 190 ] {} <Fatal> Application: Child process was terminated by signal 4.\r\n```\n",
  "hints_text": "@qoega Actually `dlerror` is Ok. Remove it from `harmful`.\nAlthough it's not quite clear:\r\n\r\n```\r\nATTRIBUTES\r\n       For an explanation of the terms used in this section, see attributes(7).\r\n\r\n       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n       \u2502Interface \u2502 Attribute     \u2502 Value   \u2502\r\n       \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n       \u2502dlerror() \u2502 Thread safety \u2502 MT-Safe \u2502\r\n       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\nCONFORMING TO\r\n       POSIX.1-2001.\r\n\r\nNOTES\r\n       The message returned by dlerror() may reside in a statically allocated buffer that is overwritten by subsequent dlerror() calls.\r\n```\r\n\r\nThe NOTES contradicts with Thread safety.\r\nBut I cannot find `dlerror_r` function.\nBut our goal is to get rid of `dlopen` altogether.",
  "created_at": "2022-07-26T21:08:46Z",
  "modified_files": [
    ".gitignore",
    "docs/en/sql-reference/functions/other-functions.md",
    "docs/en/sql-reference/statements/system.md",
    "docs/redirects.txt",
    "docs/ru/guides/apply-catboost-model.md",
    "docs/ru/guides/index.md",
    "docs/ru/sql-reference/statements/system.md",
    "docs/zh/guides/apply-catboost-model.md",
    "docs/zh/guides/index.md",
    "programs/CMakeLists.txt",
    "programs/library-bridge/CMakeLists.txt",
    "b/programs/library-bridge/CatBoostLibraryAPI.h",
    "b/programs/library-bridge/CatBoostLibraryHandler.cpp",
    "b/programs/library-bridge/CatBoostLibraryHandler.h",
    "b/programs/library-bridge/CatBoostLibraryHandlerFactory.cpp",
    "b/programs/library-bridge/CatBoostLibraryHandlerFactory.h",
    "programs/library-bridge/ExternalDictionaryLibraryHandler.h",
    "programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.cpp",
    "programs/library-bridge/ExternalDictionaryLibraryHandlerFactory.h",
    "programs/library-bridge/LibraryBridgeHandlerFactory.cpp",
    "programs/library-bridge/LibraryBridgeHandlers.cpp",
    "programs/library-bridge/LibraryBridgeHandlers.h",
    "programs/server/Server.cpp",
    "src/Access/Common/AccessType.h",
    "b/src/BridgeHelper/CatBoostLibraryBridgeHelper.cpp",
    "b/src/BridgeHelper/CatBoostLibraryBridgeHelper.h",
    "src/BridgeHelper/IBridgeHelper.h",
    "src/Common/Exception.cpp",
    "src/Functions/modelEvaluate.cpp",
    "src/Interpreters/CatBoostModel.cpp",
    "src/Interpreters/CatBoostModel.h",
    "src/Interpreters/Context.cpp",
    "src/Interpreters/Context.h",
    "src/Interpreters/ExternalModelsLoader.cpp",
    "src/Interpreters/ExternalModelsLoader.h",
    "src/Interpreters/InterpreterSystemQuery.cpp",
    "src/Parsers/ASTSystemQuery.cpp",
    "src/Parsers/ASTSystemQuery.h",
    "src/Parsers/ParserSystemQuery.cpp",
    "src/Storages/System/StorageSystemModels.cpp",
    "src/Storages/System/StorageSystemModels.h",
    "src/Storages/System/attachSystemTables.cpp"
  ],
  "modified_test_files": [
    "tests/fuzz/all.dict",
    "tests/fuzz/dictionaries/functions.dict",
    "b/tests/integration/test_catboost_evaluate/config/models_config.xml",
    "b/tests/integration/test_catboost_evaluate/test.py",
    "tests/integration/test_catboost_model_config_reload/config/catboost_lib.xml",
    "tests/integration/test_catboost_model_config_reload/config/models_config.xml",
    "tests/integration/test_catboost_model_config_reload/model/model_config.xml",
    "tests/integration/test_catboost_model_config_reload/model/model_config2.xml",
    "tests/integration/test_catboost_model_config_reload/test.py",
    "tests/integration/test_catboost_model_first_evaluate/config/models_config.xml",
    "tests/integration/test_catboost_model_first_evaluate/model/model_config.xml",
    "tests/integration/test_catboost_model_first_evaluate/test.py",
    "tests/integration/test_catboost_model_reload/config/catboost_lib.xml",
    "tests/integration/test_catboost_model_reload/config/models_config.xml",
    "tests/integration/test_catboost_model_reload/model/model_config.xml",
    "tests/integration/test_catboost_model_reload/test.py",
    "tests/queries/0_stateless/01271_show_privileges.reference",
    "tests/queries/0_stateless/02117_show_create_table_system.reference",
    "tests/queries/0_stateless/02117_show_create_table_system.sql",
    "tests/queries/0_stateless/02413_model_evaluate_smoke.sql",
    "tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference"
  ]
}