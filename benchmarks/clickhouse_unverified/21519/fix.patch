diff --git a/src/Functions/visitParamExtractBool.cpp b/src/Functions/visitParamExtractBool.cpp
index 7f989ccbb9ea..059115b5b13e 100644
--- a/src/Functions/visitParamExtractBool.cpp
+++ b/src/Functions/visitParamExtractBool.cpp
@@ -19,10 +19,13 @@ struct ExtractBool
 struct NameVisitParamExtractBool   { static constexpr auto name = "visitParamExtractBool"; };
 using FunctionVisitParamExtractBool = FunctionsStringSearch<ExtractParamImpl<ExtractBool>, NameVisitParamExtractBool>;
 
+struct NameSimpleJSONExtractBool   { static constexpr auto name = "simpleJSONExtractBool"; };
+using FunctionSimpleJSONExtractBool = FunctionsStringSearch<ExtractParamImpl<ExtractBool>, NameSimpleJSONExtractBool>;
 
 void registerFunctionVisitParamExtractBool(FunctionFactory & factory)
 {
     factory.registerFunction<FunctionVisitParamExtractBool>();
+    factory.registerFunction<FunctionSimpleJSONExtractBool>();
 }
 
 }
diff --git a/src/Functions/visitParamExtractFloat.cpp b/src/Functions/visitParamExtractFloat.cpp
index b02b0209daf9..7a55cff365ca 100644
--- a/src/Functions/visitParamExtractFloat.cpp
+++ b/src/Functions/visitParamExtractFloat.cpp
@@ -9,10 +9,13 @@ namespace DB
 struct NameVisitParamExtractFloat  { static constexpr auto name = "visitParamExtractFloat"; };
 using FunctionVisitParamExtractFloat = FunctionsStringSearch<ExtractParamImpl<ExtractNumericType<Float64>>, NameVisitParamExtractFloat>;
 
+struct NameSimpleJSONExtractFloat  { static constexpr auto name = "simpleJSONExtractFloat"; };
+using FunctionSimpleJSONExtractFloat = FunctionsStringSearch<ExtractParamImpl<ExtractNumericType<Float64>>, NameSimpleJSONExtractFloat>;
 
 void registerFunctionVisitParamExtractFloat(FunctionFactory & factory)
 {
     factory.registerFunction<FunctionVisitParamExtractFloat>();
+    factory.registerFunction<FunctionSimpleJSONExtractFloat>();
 }
 
 }
diff --git a/src/Functions/visitParamExtractInt.cpp b/src/Functions/visitParamExtractInt.cpp
index f3f30f566e6f..7c2188c10fcf 100644
--- a/src/Functions/visitParamExtractInt.cpp
+++ b/src/Functions/visitParamExtractInt.cpp
@@ -9,10 +9,13 @@ namespace DB
 struct NameVisitParamExtractInt    { static constexpr auto name = "visitParamExtractInt"; };
 using FunctionVisitParamExtractInt = FunctionsStringSearch<ExtractParamImpl<ExtractNumericType<Int64>>, NameVisitParamExtractInt>;
 
+struct NameSimpleJSONExtractInt    { static constexpr auto name = "simpleJSONExtractInt"; };
+using FunctionSimpleJSONExtractInt = FunctionsStringSearch<ExtractParamImpl<ExtractNumericType<Int64>>, NameSimpleJSONExtractInt>;
 
 void registerFunctionVisitParamExtractInt(FunctionFactory & factory)
 {
     factory.registerFunction<FunctionVisitParamExtractInt>();
+    factory.registerFunction<FunctionSimpleJSONExtractInt>();
 }
 
 }
diff --git a/src/Functions/visitParamExtractRaw.cpp b/src/Functions/visitParamExtractRaw.cpp
index add882f003f5..734fe1075578 100644
--- a/src/Functions/visitParamExtractRaw.cpp
+++ b/src/Functions/visitParamExtractRaw.cpp
@@ -59,10 +59,13 @@ struct ExtractRaw
 struct NameVisitParamExtractRaw    { static constexpr auto name = "visitParamExtractRaw"; };
 using FunctionVisitParamExtractRaw = FunctionsStringSearchToString<ExtractParamToStringImpl<ExtractRaw>, NameVisitParamExtractRaw>;
 
+struct NameSimpleJSONExtractRaw    { static constexpr auto name = "simpleJSONExtractRaw"; };
+using FunctionSimpleJSONExtractRaw = FunctionsStringSearchToString<ExtractParamToStringImpl<ExtractRaw>, NameSimpleJSONExtractRaw>;
 
 void registerFunctionVisitParamExtractRaw(FunctionFactory & factory)
 {
     factory.registerFunction<FunctionVisitParamExtractRaw>();
+    factory.registerFunction<FunctionSimpleJSONExtractRaw>();
 }
 
 }
diff --git a/src/Functions/visitParamExtractString.cpp b/src/Functions/visitParamExtractString.cpp
index b633a59807ef..23f24b9e3b8b 100644
--- a/src/Functions/visitParamExtractString.cpp
+++ b/src/Functions/visitParamExtractString.cpp
@@ -20,10 +20,13 @@ struct ExtractString
 struct NameVisitParamExtractString { static constexpr auto name = "visitParamExtractString"; };
 using FunctionVisitParamExtractString = FunctionsStringSearchToString<ExtractParamToStringImpl<ExtractString>, NameVisitParamExtractString>;
 
+struct NameSimpleJSONExtractString { static constexpr auto name = "simpleJSONExtractString"; };
+using FunctionSimpleJSONExtractString = FunctionsStringSearchToString<ExtractParamToStringImpl<ExtractString>, NameSimpleJSONExtractString>;
 
 void registerFunctionVisitParamExtractString(FunctionFactory & factory)
 {
     factory.registerFunction<FunctionVisitParamExtractString>();
+    factory.registerFunction<FunctionSimpleJSONExtractString>();
 }
 
 }
diff --git a/src/Functions/visitParamExtractUInt.cpp b/src/Functions/visitParamExtractUInt.cpp
index 5e70eed82531..f5466a63b0d5 100644
--- a/src/Functions/visitParamExtractUInt.cpp
+++ b/src/Functions/visitParamExtractUInt.cpp
@@ -9,10 +9,14 @@ namespace DB
 struct NameVisitParamExtractUInt   { static constexpr auto name = "visitParamExtractUInt"; };
 using FunctionVisitParamExtractUInt = FunctionsStringSearch<ExtractParamImpl<ExtractNumericType<UInt64>>, NameVisitParamExtractUInt>;
 
+struct NameSimpleJSONExtractUInt   { static constexpr auto name = "simpleJSONExtractUInt"; };
+using FunctionSimpleJSONExtractUInt = FunctionsStringSearch<ExtractParamImpl<ExtractNumericType<UInt64>>, NameSimpleJSONExtractUInt>;
+
 
 void registerFunctionVisitParamExtractUInt(FunctionFactory & factory)
 {
     factory.registerFunction<FunctionVisitParamExtractUInt>();
+    factory.registerFunction<FunctionSimpleJSONExtractUInt>();
 }
 
 }
diff --git a/src/Functions/visitParamHas.cpp b/src/Functions/visitParamHas.cpp
index 5fbedfb4995b..f4f377f9e8f5 100644
--- a/src/Functions/visitParamHas.cpp
+++ b/src/Functions/visitParamHas.cpp
@@ -19,10 +19,13 @@ struct HasParam
 struct NameVisitParamHas           { static constexpr auto name = "visitParamHas"; };
 using FunctionVisitParamHas = FunctionsStringSearch<ExtractParamImpl<HasParam>, NameVisitParamHas>;
 
+struct NameSimpleJSONHas           { static constexpr auto name = "simpleJSONHas"; };
+using FunctionSimpleJSONHas = FunctionsStringSearch<ExtractParamImpl<HasParam>, NameSimpleJSONHas>;
 
 void registerFunctionVisitParamHas(FunctionFactory & factory)
 {
     factory.registerFunction<FunctionVisitParamHas>();
+    factory.registerFunction<FunctionSimpleJSONHas>();
 }
 
 }
