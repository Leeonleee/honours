diff --git a/tests/queries/0_stateless/03321_forwarded_for.py b/tests/queries/0_stateless/03321_forwarded_for.py
new file mode 100755
index 000000000000..8db9b2878d8d
--- /dev/null
+++ b/tests/queries/0_stateless/03321_forwarded_for.py
@@ -0,0 +1,19 @@
+#!/usr/bin/env python3
+import os
+import sys
+
+CURDIR = os.path.dirname(os.path.realpath(__file__))
+sys.path.insert(0, os.path.join(CURDIR, "helpers"))
+
+from pure_http_client import ClickHouseClient
+
+client = ClickHouseClient()
+
+print(client.query("SELECT 1", headers={"X-Forwarded-For": "123.124.125.126"}, with_retries=False))
+print(client.query("SELECT 1", headers={"X-Forwarded-For": "123.124.125.126:80"}, with_retries=False))
+print(client.query("SELECT 1", headers={"X-Forwarded-For": "[::1.1.1.1]:80"}, with_retries=False))
+print(client.query("SELECT 1", headers={"X-Forwarded-For": "::1.1.1.1"}, with_retries=False))
+print(client.query("SELECT 1", headers={"X-Forwarded-For": "2a06:de00:50:cafe:10::1001"}, with_retries=False))
+print(client.query("SELECT 1", headers={"X-Forwarded-For": "[2a06:de00:50:cafe:10::1001]:80"}, with_retries=False))
+print(client.query("SELECT 1", headers={"X-Forwarded-For": "localhost:80"}, with_retries=False))
+print(client.query("SELECT 1", headers={"X-Forwarded-For": "localhost"}, with_retries=False))
diff --git a/tests/queries/0_stateless/03321_forwarded_for.reference b/tests/queries/0_stateless/03321_forwarded_for.reference
new file mode 100644
index 000000000000..c14ac376b364
--- /dev/null
+++ b/tests/queries/0_stateless/03321_forwarded_for.reference
@@ -0,0 +1,16 @@
+1
+
+1
+
+1
+
+1
+
+1
+
+1
+
+1
+
+1
+
diff --git a/tests/queries/0_stateless/helpers/pure_http_client.py b/tests/queries/0_stateless/helpers/pure_http_client.py
index 9a947b3ad3f9..96dce5d280cc 100644
--- a/tests/queries/0_stateless/helpers/pure_http_client.py
+++ b/tests/queries/0_stateless/helpers/pure_http_client.py
@@ -26,6 +26,7 @@ def query(
         settings=dict(),
         binary_result=False,
         with_retries=True,
+        headers={},
     ):
         NUMBER_OF_TRIES = 30 if with_retries else 1
         DELAY = 10
@@ -41,7 +42,11 @@ def query(
 
         for i in range(NUMBER_OF_TRIES):
             r = requests.post(
-                self.host, params=params, timeout=connection_timeout, data=query
+                self.host,
+                params=params,
+                timeout=connection_timeout,
+                data=query,
+                headers=headers,
             )
             if r.status_code == 200:
                 return r.content if binary_result else r.text
