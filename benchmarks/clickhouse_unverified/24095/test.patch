diff --git a/tests/queries/0_stateless/00109_shard_totals_after_having.sql b/tests/queries/0_stateless/00109_shard_totals_after_having.sql
index 72e5e011e19e..ae143f594c5e 100644
--- a/tests/queries/0_stateless/00109_shard_totals_after_having.sql
+++ b/tests/queries/0_stateless/00109_shard_totals_after_having.sql
@@ -3,7 +3,9 @@ SET max_block_size = 100001;
 SET group_by_overflow_mode = 'any';
 
 DROP TABLE IF EXISTS numbers500k;
-CREATE VIEW numbers500k AS SELECT number FROM system.numbers LIMIT 500000;
+CREATE TABLE  numbers500k (number UInt32) ENGINE = TinyLog;
+
+INSERT INTO numbers500k SELECT number FROM system.numbers LIMIT 500000;
 
 SET totals_mode = 'after_having_auto';
 SELECT intDiv(number, 2) AS k, count(), argMax(toString(number), number) FROM remote('127.0.0.{2,3}', currentDatabase(), numbers500k) GROUP BY k WITH TOTALS ORDER BY k LIMIT 10;
diff --git a/tests/queries/0_stateless/01866_view_persist_settings.reference b/tests/queries/0_stateless/01866_view_persist_settings.reference
new file mode 100644
index 000000000000..07c96e768753
--- /dev/null
+++ b/tests/queries/0_stateless/01866_view_persist_settings.reference
@@ -0,0 +1,34 @@
+join_use_nulls = 1
+-
+1	11	0
+2	12	22
+3	0	23
+-
+1	11	0
+2	12	22
+3	0	23
+-
+1	11	\N
+2	12	22
+3	\N	23
+-
+1	11	0
+2	12	22
+3	0	23
+join_use_nulls = 0
+-
+1	11	0
+2	12	22
+3	0	23
+-
+1	11	0
+2	12	22
+3	0	23
+-
+1	11	\N
+2	12	22
+3	\N	23
+-
+1	11	0
+2	12	22
+3	0	23
diff --git a/tests/queries/0_stateless/01866_view_persist_settings.sql b/tests/queries/0_stateless/01866_view_persist_settings.sql
new file mode 100644
index 000000000000..71d6c856b9bf
--- /dev/null
+++ b/tests/queries/0_stateless/01866_view_persist_settings.sql
@@ -0,0 +1,61 @@
+DROP TABLE IF EXISTS view_no_nulls;
+DROP TABLE IF EXISTS view_no_nulls_set;
+DROP TABLE IF EXISTS view_nulls_set;
+DROP TABLE IF EXISTS view_nulls;
+
+SET join_use_nulls = 0;
+
+CREATE OR REPLACE VIEW view_no_nulls AS
+SELECT * FROM ( SELECT number + 1 AS a, number + 11 AS b FROM numbers(2) ) AS t1
+FULL JOIN ( SELECT number + 2 AS a, number + 22 AS c FROM numbers(2) ) AS t2
+USING a ORDER BY a;
+
+CREATE OR REPLACE VIEW view_nulls_set AS
+SELECT * FROM ( SELECT number + 1 AS a, number + 11 AS b FROM numbers(2) ) AS t1
+FULL JOIN ( SELECT number + 2 AS a, number + 22 AS c FROM numbers(2) ) AS t2
+USING a ORDER BY a
+SETTINGS join_use_nulls = 1;
+
+SET join_use_nulls = 1;
+
+CREATE OR REPLACE VIEW view_nulls AS
+SELECT * FROM ( SELECT number + 1 AS a, number + 11 AS b FROM numbers(2) ) AS t1
+FULL JOIN ( SELECT number + 2 AS a, number + 22 AS c FROM numbers(2) ) AS t2
+USING a ORDER BY a;
+
+CREATE OR REPLACE VIEW view_no_nulls_set AS
+SELECT * FROM ( SELECT number + 1 AS a, number + 11 AS b FROM numbers(2) ) AS t1
+FULL JOIN ( SELECT number + 2 AS a, number + 22 AS c FROM numbers(2) ) AS t2
+USING a ORDER BY a
+SETTINGS join_use_nulls = 0;
+
+SET join_use_nulls = 1;
+
+SELECT 'join_use_nulls = 1';
+
+SELECT '-';
+SELECT * FROM view_no_nulls;
+SELECT '-';
+SELECT * FROM view_no_nulls_set;
+SELECT '-';
+SELECT * FROM view_nulls_set;
+SELECT '-';
+SELECT * FROM view_nulls;
+
+SET join_use_nulls = 0;
+
+SELECT 'join_use_nulls = 0';
+
+SELECT '-';
+SELECT * FROM view_no_nulls;
+SELECT '-';
+SELECT * FROM view_no_nulls_set;
+SELECT '-';
+SELECT * FROM view_nulls_set;
+SELECT '-';
+SELECT * FROM view_nulls;
+
+DROP TABLE IF EXISTS view_no_nulls;
+DROP TABLE IF EXISTS view_no_nulls_set;
+DROP TABLE IF EXISTS view_nulls_set;
+DROP TABLE IF EXISTS view_nulls;
