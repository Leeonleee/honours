{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 22997,
  "instance_id": "ClickHouse__ClickHouse-22997",
  "issue_numbers": [
    "21197"
  ],
  "base_commit": "fafe8c00fe53559eb28d9a1392e8b45c3600e30b",
  "patch": "diff --git a/src/Core/Settings.h b/src/Core/Settings.h\nindex 40ab3856f96f..652669aefd41 100644\n--- a/src/Core/Settings.h\n+++ b/src/Core/Settings.h\n@@ -228,7 +228,7 @@ class IColumn;\n     M(Seconds, http_connection_timeout, DEFAULT_HTTP_READ_BUFFER_CONNECTION_TIMEOUT, \"HTTP connection timeout.\", 0) \\\n     M(Seconds, http_send_timeout, DEFAULT_HTTP_READ_BUFFER_TIMEOUT, \"HTTP send timeout\", 0) \\\n     M(Seconds, http_receive_timeout, DEFAULT_HTTP_READ_BUFFER_TIMEOUT, \"HTTP receive timeout\", 0) \\\n-    M(UInt64, http_max_uri_size, 16384, \"Maximum URI length of HTTP request\", 0) \\\n+    M(UInt64, http_max_uri_size, 1048576, \"Maximum URI length of HTTP request\", 0) \\\n     M(Bool, optimize_throw_if_noop, false, \"If setting is enabled and OPTIMIZE query didn't actually assign a merge then an explanatory exception is thrown\", 0) \\\n     M(Bool, use_index_for_in_with_subqueries, true, \"Try using an index if there is a subquery or a table expression on the right side of the IN operator.\", 0) \\\n     M(Bool, joined_subquery_requires_alias, true, \"Force joined subqueries and table functions to have aliases for correct name qualification.\", 0) \\\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01753_max_uri_size.sh b/tests/queries/0_stateless/01753_max_uri_size.sh\nindex 5c63d9274fd7..62bc4f2c26fa 100755\n--- a/tests/queries/0_stateless/01753_max_uri_size.sh\n+++ b/tests/queries/0_stateless/01753_max_uri_size.sh\n@@ -4,8 +4,14 @@ CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n # shellcheck source=../shell_config.sh\n . \"$CURDIR\"/../shell_config.sh\n \n-# NOTE: since 'max_uri_size' doesn't affect the request itself, this test hardly depends on the default value of this setting (16Kb).\n+# NOTE: since 'max_uri_size' doesn't affect the request itself, this test hardly depends on the default value of this setting (1 MiB).\n \n-LONG_REQUEST=$(python3 -c \"print('&max_uri_size=1'*2000, end='')\")  # ~30K\n+python3 -c \"\n+print('${CLICKHOUSE_URL}', end='')\n+print('&hello=world'*100000, end='')\n+print('&query=SELECT+1')\n+\" > \"${CLICKHOUSE_TMP}/url.txt\"\n \n-${CLICKHOUSE_CURL} -sSv \"${CLICKHOUSE_URL}${LONG_REQUEST}&query=SELECT+1\" 2>&1 | grep -Fc \"HTTP/1.1 400 Bad Request\"\n+wget --input-file \"${CLICKHOUSE_TMP}/url.txt\" 2>&1 | grep -Fc \"400: Bad Request\"\n+\n+rm \"${CLICKHOUSE_TMP}/url.txt\"\n",
  "problem_statement": "Make maximum URL size configurable and raise it to 1 MiB by default\nUse case:\r\nSee #21187\n",
  "hints_text": "",
  "created_at": "2021-04-12T18:07:50Z",
  "modified_files": [
    "src/Core/Settings.h"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01753_max_uri_size.sh"
  ]
}