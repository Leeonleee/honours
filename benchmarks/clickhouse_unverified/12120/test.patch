diff --git a/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.reference b/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.reference
new file mode 100644
index 000000000000..f6349a0b9b47
--- /dev/null
+++ b/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.reference
@@ -0,0 +1,11 @@
+1
+1
+1
+1
+1
+=== system.query_log ===
+main_dashboard_bottom_query	2
+main_dashboard_top_query	2
+=== slowlog ===
+main_dashboard_bottom_query	1
+main_dashboard_top_query	1
diff --git a/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql b/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql
new file mode 100644
index 000000000000..4f216ae647f9
--- /dev/null
+++ b/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql
@@ -0,0 +1,54 @@
+DROP TABLE IF EXISTS slow_log;
+DROP TABLE IF EXISTS expected_times;
+
+CREATE TABLE expected_times (QUERY_GROUP_ID String, max_query_duration_ms UInt64) Engine=Memory;
+INSERT INTO expected_times VALUES('main_dashboard_top_query', 100), ('main_dashboard_bottom_query', 100);
+
+SET log_queries=1;
+SELECT 1;
+SYSTEM FLUSH LOGS;
+
+CREATE MATERIALIZED VIEW slow_log Engine=Memory AS
+(
+        SELECT * FROM
+        (
+            SELECT
+                extract(query,'/\\*\\s*QUERY_GROUP_ID:(.*?)\\s*\\*/') as QUERY_GROUP_ID,
+                *
+            FROM system.query_log
+            WHERE type<>1 and event_date >= yesterday() and event_time > now() - 120
+        ) as ql
+        INNER JOIN expected_times USING (QUERY_GROUP_ID)
+        WHERE query_duration_ms > max_query_duration_ms
+);
+
+SELECT 1 /* QUERY_GROUP_ID:main_dashboard_top_query */;
+SELECT 1 /* QUERY_GROUP_ID:main_dashboard_bottom_query */;
+
+SELECT 1 WHERE not ignore(sleep(0.105)) /* QUERY_GROUP_ID:main_dashboard_top_query */;
+SELECT 1 WHERE not ignore(sleep(0.105)) /* QUERY_GROUP_ID:main_dashboard_bottom_query */;
+
+SET log_queries=0;
+SYSTEM FLUSH LOGS;
+
+SELECT '=== system.query_log ===';
+
+SELECT
+    extract(query,'/\\*\\s*QUERY_GROUP_ID:(.*?)\\s*\\*/') as QUERY_GROUP_ID,
+    count()
+FROM system.query_log
+WHERE type<>1 and event_date >= yesterday() and event_time > now() - 20 and QUERY_GROUP_ID<>''
+GROUP BY QUERY_GROUP_ID
+ORDER BY QUERY_GROUP_ID;
+
+SELECT '=== slowlog ===';
+
+SELECT
+    QUERY_GROUP_ID,
+    count()
+FROM slow_log
+GROUP BY QUERY_GROUP_ID
+ORDER BY QUERY_GROUP_ID;
+
+DROP TABLE slow_log;
+DROP TABLE expected_times;
diff --git a/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.reference b/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.reference
new file mode 100644
index 000000000000..083edaac2489
--- /dev/null
+++ b/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.reference
@@ -0,0 +1,3 @@
+2
+2
+2
diff --git a/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.sql b/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.sql
new file mode 100644
index 000000000000..424c38d5590b
--- /dev/null
+++ b/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.sql
@@ -0,0 +1,37 @@
+DROP TABLE IF EXISTS t1_01361;
+DROP TABLE IF EXISTS t2_01361;
+DROP TABLE IF EXISTS mv1_01361;
+DROP TABLE IF EXISTS b1_01361;
+
+CREATE TABLE t1_01361 (
+  i UInt32,
+  time DateTime
+) ENGINE = MergeTree()
+PARTITION BY time
+ORDER BY time;
+
+CREATE TABLE t2_01361 (
+  i UInt32,
+  time DateTime
+) ENGINE = MergeTree()
+PARTITION BY time
+ORDER BY time;
+
+CREATE MATERIALIZED VIEW mv1_01361
+TO t2_01361
+AS SELECT * FROM (SELECT * FROM t1_01361);
+
+CREATE TABLE b1_01361 AS t1_01361
+ENGINE = Buffer(currentDatabase(), t1_01361, 1, 0, 0, 1, 1, 1, 1);
+
+INSERT INTO b1_01361 VALUES (1, now());
+INSERT INTO b1_01361 VALUES (2, now());
+
+SELECT count() FROM b1_01361;
+SELECT count() FROM t1_01361;
+SELECT count() FROM t2_01361;
+
+DROP TABLE IF EXISTS t1_01361;
+DROP TABLE IF EXISTS t2_01361;
+DROP TABLE IF EXISTS mv1_01361;
+DROP TABLE IF EXISTS b1_01361;
