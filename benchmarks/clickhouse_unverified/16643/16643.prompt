You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Performance of quantilesMerge
Hello.  

In investigating ClickHouse performance, I noticed that that `quantilesMerge` function was much slower than the merge of other aggregation types.   On my hardware, It runs at approximately 1.5 seconds per million rows.

Below find a scan of 38 million rows with both the `quantilesMerge` function (57 seconds elapsed) and the `avgMerge` function (<1sec elapsed).  A sampling of other merge operators shows `quantilesMerge` is the outlier.

Looking at the implementation of `ReservoirSampler::merge`, it does do a lot of work, but since scanning over the raw data (just 250 million rows) with `quantile()` takes just 1 second perhaps there's the possibility of optimization here.

Thanks,
Darren.

```
ClickHouse client version 1.1.54023.
Connecting to localhost:9000.
Connected to ClickHouse server version 1.1.54023.

:) select clientMarketId, quantilesMerge(0.5)(quants) as p50 from test_hr group by clientMarketId;

SELECT 
    clientMarketId, 
    quantilesMerge(0.5)(quants) AS p50
FROM test_hr 
GROUP BY clientMarketId

↘ Progress: 65.54 thousand rows, 8.97 MB (54.35 thousand rows/s., 7.44 MB/s.) ▏                                                                                                 0%┌─clientMarketId─┬─p50────┐
│              0 │ [125]  │
│              1 │ [87.5] │
│              2 │ [139]  │
│              3 │ [62]   │
│              4 │ [125]  │
│              5 │ [206]  │
│              6 │ [164]  │
└────────────────┴────────┘
↓ Progress: 38.84 million rows, 5.40 GB (678.21 thousand rows/s., 94.38 MB/s.) 7 rows in set. Elapsed: 57.262 sec. Processed 38.84 million rows, 5.40 GB (678.20 thousand rows/s., 94.38 MB/s.) 

:) select clientMarketId, avgMerge(avg) as p50 from test_hr group by clientMarketId;

SELECT 
    clientMarketId, 
    avgMerge(avg) AS av
FROM test_hr 
GROUP BY clientMarketId

┌─clientMarketId─┬────────────────av─┐
│              0 │  733.3191436467522 │
│              1 │ 1079.1231858467577 │
│              2 │  890.4164012859483 │
│              3 │  997.8657197406471 │
│              4 │ 1048.2662699646294 │
│              5 │  460.5996271142637 │
│              6 │  691.1883294646486 │
└────────────────┴────────────────────┘
↙ Progress: 38.84 million rows, 1.58 GB (579.01 million rows/s., 23.56 GB/s.) 
7 rows in set. Elapsed: 0.067 sec. Processed 38.84 million rows, 1.58 GB (578.12 million rows/s., 23.53 GB/s.) 
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
