You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
ReadFromMergeTree.cpp:1128:62: runtime error: division by zero
### Describe the bug

https://s3.amazonaws.com/clickhouse-test-reports/json.html?PR=77901&sha=26c5cf8fafb329471ae2a8105952b0125d8a993c&name_0=PR&name_1=AST%20fuzzer%20%28ubsan%29

### How to reproduce

```
CREATE TABLE test_table__fuzz_5 (`id` UInt64, `value` Nullable(Date)) ENGINE = MergeTree ORDER BY id;
INSERT INTO test_table__fuzz_5 Values (0, 0');
SELECT DISTINCT * FROM test_table__fuzz_5 WHERE 1 % 60 SETTINGS max_threads = 1023, max_streams_to_max_threads_ratio = 0, enable_analyzer = 1;
```

Seems related to `max_streams_to_max_threads_ratio = 0`.

Fails since 24.10. `24.9.1.3278` is fine

### Error message and/or stacktrace

```
$ clickhouse repro
2025.03.25 18:57:41.099606 [ 518045 ] {} <Fatal> ClientBase: ########## Short fault info ############
2025.03.25 18:57:41.123565 [ 518045 ] {} <Fatal> ClientBase: (version 25.4.1.1, build id: 989CB91466803EAFBCDD7AEE9B8CA271A31937BF, git hash: 6e9ca99bc754a2cedcef283dd6430dce93554e08, architecture: x86_64) (from thread 517475) Received signal 8
2025.03.25 18:57:41.123572 [ 518045 ] {} <Fatal> ClientBase: Signal description: Arithmetic exception
2025.03.25 18:57:41.123573 [ 518045 ] {} <Fatal> ClientBase: Integer divide by zero.
2025.03.25 18:57:41.123578 [ 518045 ] {} <Fatal> ClientBase: Stack trace: 0x00005fe21c4f04e8 0x00005fe21c87f219 0x00007b5ab1003cd0 0x00005fe223fd2f2c 0x00005fe223fe4257 0x00005fe223fe61cf 0x00005fe223f790be 0x00005fe223faae1e 0x00005fe22167f6c7 0x00005fe22167f412 0x00005fe221a4b1b4 0x00005fe221a46773 0x00005fe2238e6b15 0x00005fe223871736 0x00005fe22386f8fb 0x00005fe22387ae38 0x00005fe22387c6bb 0x00005fe223885be4 0x00005fe21c75dfe2 0x00005fe22736aa94 0x00005fe21c76e1bd 0x00005fe2167ae28a 0x00007b5ab0fed488 0x00007b5ab0fed54c 0x00005fe2167ad02e
2025.03.25 18:57:41.123582 [ 518045 ] {} <Fatal> ClientBase: ########################################
2025.03.25 18:57:41.123624 [ 518045 ] {} <Fatal> ClientBase: (version 25.4.1.1, build id: 989CB91466803EAFBCDD7AEE9B8CA271A31937BF, git hash: 6e9ca99bc754a2cedcef283dd6430dce93554e08) (from thread 517475) (query_id: 80393d80-7edf-4159-870d-c54f384264d8) (query: SELECT DISTINCT * FROM test_table__fuzz_5 WHERE 1 % 60 SETTINGS max_threads = 1023, max_streams_to_max_threads_ratio = 0, enable_analyzer = 1;) Received signal Arithmetic exception (8)
2025.03.25 18:57:41.123633 [ 518045 ] {} <Fatal> ClientBase: Integer divide by zero.
2025.03.25 18:57:41.123638 [ 518045 ] {} <Fatal> ClientBase: Stack trace: 0x00005fe21c4f04e8 0x00005fe21c87f219 0x00007b5ab1003cd0 0x00005fe223fd2f2c 0x00005fe223fe4257 0x00005fe223fe61cf 0x00005fe223f790be 0x00005fe223faae1e 0x00005fe22167f6c7 0x00005fe22167f412 0x00005fe221a4b1b4 0x00005fe221a46773 0x00005fe2238e6b15 0x00005fe223871736 0x00005fe22386f8fb 0x00005fe22387ae38 0x00005fe22387c6bb 0x00005fe223885be4 0x00005fe21c75dfe2 0x00005fe22736aa94 0x00005fe21c76e1bd 0x00005fe2167ae28a 0x00007b5ab0fed488 0x00007b5ab0fed54c 0x00005fe2167ad02e
2025.03.25 18:57:41.130119 [ 518045 ] {} <Fatal> ClientBase: 0.0. inlined from /mnt/ch/ClickHouse/src/Common/StackTrace.cpp:386: StackTrace::tryCapture()
2025.03.25 18:57:41.130128 [ 518045 ] {} <Fatal> ClientBase: 0. /mnt/ch/ClickHouse/src/Common/StackTrace.cpp:355: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000deec4e8
2025.03.25 18:57:41.143007 [ 518045 ] {} <Fatal> ClientBase: 1. /mnt/ch/ClickHouse/src/Common/SignalHandlers.cpp:106: signalHandler(int, siginfo_t*, void*) @ 0x000000000e27b219
2025.03.25 18:57:41.143014 [ 518045 ] {} <Fatal> ClientBase: 2. ? @ 0x00007b5ab1003cd0
2025.03.25 18:57:41.193634 [ 518045 ] {} <Fatal> ClientBase: 3. /mnt/ch/ClickHouse/src/Processors/QueryPlan/ReadFromMergeTree.cpp:1123: DB::ReadFromMergeTree::spreadMarkRangesAmongStreamsWithOrder(DB::RangesInDataParts&&, unsigned long, std::vector<String, std::allocator<String>> const&, std::optional<DB::ActionsDAG>&, std::shared_ptr<DB::InputOrderInfo const> const&) @ 0x00000000159cef2c
2025.03.25 18:57:41.255144 [ 518045 ] {} <Fatal> ClientBase: 4. /mnt/ch/ClickHouse/src/Processors/QueryPlan/ReadFromMergeTree.cpp:2143: DB::ReadFromMergeTree::spreadMarkRanges(DB::RangesInDataParts&&, unsigned long, DB::ReadFromMergeTree::AnalysisResult&, std::optional<DB::ActionsDAG>&) @ 0x00000000159e0257
2025.03.25 18:57:41.304688 [ 518045 ] {} <Fatal> ClientBase: 5. /mnt/ch/ClickHouse/src/Processors/QueryPlan/ReadFromMergeTree.cpp:2245: DB::ReadFromMergeTree::initializePipeline(DB::QueryPipelineBuilder&, DB::BuildQueryPipelineSettings const&) @ 0x00000000159e21cf
2025.03.25 18:57:41.307506 [ 518045 ] {} <Fatal> ClientBase: 6. /mnt/ch/ClickHouse/src/Processors/QueryPlan/ISourceStep.cpp:20: DB::ISourceStep::updatePipeline(std::vector<std::unique_ptr<DB::QueryPipelineBuilder, std::default_delete<DB::QueryPipelineBuilder>>, std::allocator<std::unique_ptr<DB::QueryPipelineBuilder, std::default_delete<DB::QueryPipelineBuilder>>>>, DB::BuildQueryPipelineSettings const&) @ 0x00000000159750be
2025.03.25 18:57:41.316702 [ 518045 ] {} <Fatal> ClientBase: 7. /mnt/ch/ClickHouse/src/Processors/QueryPlan/QueryPlan.cpp:202: DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x00000000159a6e1e
2025.03.25 18:57:41.326352 [ 518045 ] {} <Fatal> ClientBase: 8. /mnt/ch/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:275: DB::InterpreterSelectQueryAnalyzer::buildQueryPipeline() @ 0x000000001307b6c7
2025.03.25 18:57:41.335445 [ 518045 ] {} <Fatal> ClientBase: 9. /mnt/ch/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:242: DB::InterpreterSelectQueryAnalyzer::execute() @ 0x000000001307b412
2025.03.25 18:57:41.360068 [ 518045 ] {} <Fatal> ClientBase: 10. /mnt/ch/ClickHouse/src/Interpreters/executeQuery.cpp:1458: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x00000000134471b4
2025.03.25 18:57:41.388196 [ 518045 ] {} <Fatal> ClientBase: 11. /mnt/ch/ClickHouse/src/Interpreters/executeQuery.cpp:1625: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013442773
2025.03.25 18:57:41.402567 [ 518045 ] {} <Fatal> ClientBase: 12. /mnt/ch/ClickHouse/src/Client/LocalConnection.cpp:262: DB::LocalConnection::sendQuery(DB::ConnectionTimeouts const&, String const&, std::unordered_map<String, String, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, String>>> const&, String const&, unsigned long, DB::Settings const*, DB::ClientInfo const*, bool, std::vector<String, std::allocator<String>> const&, std::function<void (DB::Progress const&)>) @ 0x00000000152e2b15
2025.03.25 18:57:41.433882 [ 518045 ] {} <Fatal> ClientBase: 13. /mnt/ch/ClickHouse/src/Client/ClientBase.cpp:1276: DB::ClientBase::processOrdinaryQuery(String const&, std::shared_ptr<DB::IAST>) @ 0x000000001526d736
2025.03.25 18:57:41.465866 [ 518045 ] {} <Fatal> ClientBase: 14. /mnt/ch/ClickHouse/src/Client/ClientBase.cpp:2267: DB::ClientBase::processParsedSingleQuery(String const&, String const&, std::shared_ptr<DB::IAST>, std::optional<bool>, bool) @ 0x000000001526b8fb
2025.03.25 18:57:41.506808 [ 518045 ] {} <Fatal> ClientBase: 15. /mnt/ch/ClickHouse/src/Client/ClientBase.cpp:2628: DB::ClientBase::executeMultiQuery(String const&) @ 0x0000000015276e38
2025.03.25 18:57:41.547689 [ 518045 ] {} <Fatal> ClientBase: 16. /mnt/ch/ClickHouse/src/Client/ClientBase.cpp:3408: DB::ClientBase::processMultiQueryFromFile(String const&) @ 0x00000000152786bb
2025.03.25 18:57:41.592130 [ 518045 ] {} <Fatal> ClientBase: 17. /mnt/ch/ClickHouse/src/Client/ClientBase.cpp:3425: DB::ClientBase::runNonInteractive() @ 0x0000000015281be4
2025.03.25 18:57:41.605870 [ 518045 ] {} <Fatal> ClientBase: 18. /mnt/ch/ClickHouse/programs/local/LocalServer.cpp:631: DB::LocalServer::main(std::vector<String, std::allocator<String>> const&) @ 0x000000000e159fe2
2025.03.25 18:57:41.609841 [ 518045 ] {} <Fatal> ClientBase: 19. /mnt/ch/ClickHouse/base/poco/Util/src/Application.cpp:315: Poco::Util::Application::run() @ 0x0000000018d66a94
2025.03.25 18:57:41.632120 [ 518045 ] {} <Fatal> ClientBase: 20. /mnt/ch/ClickHouse/programs/local/LocalServer.cpp:1085: mainEntryClickHouseLocal(int, char**) @ 0x000000000e16a1bd
2025.03.25 18:57:41.634503 [ 518045 ] {} <Fatal> ClientBase: 21. /mnt/ch/ClickHouse/programs/main.cpp:295: main @ 0x00000000081aa28a
2025.03.25 18:57:41.634511 [ 518045 ] {} <Fatal> ClientBase: 22. ? @ 0x00007b5ab0fed488
2025.03.25 18:57:41.634516 [ 518045 ] {} <Fatal> ClientBase: 23. ? @ 0x00007b5ab0fed54c
2025.03.25 18:57:41.665058 [ 518045 ] {} <Fatal> ClientBase: 24. _start @ 0x00000000081a902e
2025.03.25 18:57:41.665080 [ 518045 ] {} <Fatal> ClientBase: This ClickHouse version is not official and should be upgraded to the official build.
2025.03.25 18:57:41.665190 [ 518045 ] {} <Fatal> ClientBase: Changed settings: max_threads = 1023, max_streams_to_max_threads_ratio = 0., allow_introspection_functions = true, storage_file_read_method = 'mmap', parallel_replicas_for_cluster_engines = false, allow_experimental_analyzer = true, implicit_select = true
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
