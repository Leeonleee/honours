diff --git a/docker/test/performance-comparison/compare.sh b/docker/test/performance-comparison/compare.sh
index 2621a894dd78..dad4362b3d14 100755
--- a/docker/test/performance-comparison/compare.sh
+++ b/docker/test/performance-comparison/compare.sh
@@ -409,10 +409,10 @@ create view right_query_log as select *
         '$(cat "right-query-log.tsv.columns")');
 
 create view query_logs as
-    select 0 version, query_id, ProfileEvents.Names, ProfileEvents.Values,
+    select 0 version, query_id, ProfileEvents.keys, ProfileEvents.values,
         query_duration_ms, memory_usage from left_query_log
     union all
-    select 1 version, query_id, ProfileEvents.Names, ProfileEvents.Values,
+    select 1 version, query_id, ProfileEvents.keys, ProfileEvents.values,
         query_duration_ms, memory_usage from right_query_log
     ;
 
@@ -424,7 +424,7 @@ create table query_run_metric_arrays engine File(TSV, 'analyze/query-run-metric-
     with (
         -- sumMapState with the list of all keys with '-0.' values. Negative zero is because
         -- sumMap removes keys with positive zeros.
-        with (select groupUniqArrayArray(ProfileEvents.Names) from query_logs) as all_names
+        with (select groupUniqArrayArray(ProfileEvents.keys) from query_logs) as all_names
             select arrayReduce('sumMapState', [(all_names, arrayMap(x->-0., all_names))])
         ) as all_metrics
     select test, query_index, version, query_id,
@@ -433,8 +433,8 @@ create table query_run_metric_arrays engine File(TSV, 'analyze/query-run-metric-
                 [
                     all_metrics,
                     arrayReduce('sumMapState',
-                        [(ProfileEvents.Names,
-                            arrayMap(x->toFloat64(x), ProfileEvents.Values))]
+                        [(ProfileEvents.keys,
+                            arrayMap(x->toFloat64(x), ProfileEvents.values))]
                     ),
                     arrayReduce('sumMapState', [(
                         ['client_time', 'server_time', 'memory_usage'],
@@ -1005,7 +1005,7 @@ create table unstable_run_metrics engine File(TSVWithNamesAndTypes,
         'unstable-run-metrics.$version.rep') as
     select
         test, query_index, query_id,
-        ProfileEvents.Values value, ProfileEvents.Names metric
+        ProfileEvents.values value, ProfileEvents.keys metric
     from query_log array join ProfileEvents
     join unstable_query_runs using (query_id)
     ;
@@ -1280,7 +1280,7 @@ create table ci_checks engine File(TSVWithNamesAndTypes, 'ci-checks.tsv')
     then
         echo Database for test results is not specified, will not upload them.
         return 0
-    fi 
+    fi
 
     set +x # Don't show password in the log
     client=(clickhouse-client
diff --git a/tests/integration/test_distributed_inter_server_secret/test.py b/tests/integration/test_distributed_inter_server_secret/test.py
index 1a0e5a3dd915..0e77fc6e1627 100644
--- a/tests/integration/test_distributed_inter_server_secret/test.py
+++ b/tests/integration/test_distributed_inter_server_secret/test.py
@@ -83,7 +83,7 @@ def get_query_user_info(node, query_pattern):
 def get_query_setting_on_shard(node, query_pattern, setting):
     node.query("SYSTEM FLUSH LOGS")
     return node.query("""
-    SELECT (arrayFilter(x -> ((x.1) = '{}'), arrayZip(Settings.Names, Settings.Values))[1]).2
+    SELECT Settings['{}']
     FROM system.query_log
     WHERE
         query LIKE '%{}%' AND
diff --git a/tests/integration/test_merge_tree_s3_with_cache/test.py b/tests/integration/test_merge_tree_s3_with_cache/test.py
index 7022f90a2b9f..fad057540eea 100644
--- a/tests/integration/test_merge_tree_s3_with_cache/test.py
+++ b/tests/integration/test_merge_tree_s3_with_cache/test.py
@@ -24,7 +24,7 @@ def get_query_stat(instance, hint):
     result = {}
     instance.query("SYSTEM FLUSH LOGS")
     events = instance.query('''
-        SELECT ProfileEvents.Names, ProfileEvents.Values
+        SELECT ProfileEvents.keys, ProfileEvents.values
         FROM system.query_log
         ARRAY JOIN ProfileEvents
         WHERE type != 1 AND query LIKE '%{}%'
diff --git a/tests/integration/test_profile_events_s3/test.py b/tests/integration/test_profile_events_s3/test.py
index 52f14c99b4a0..98ad55b3adce 100644
--- a/tests/integration/test_profile_events_s3/test.py
+++ b/tests/integration/test_profile_events_s3/test.py
@@ -83,7 +83,7 @@ def get_query_stat(instance, hint):
     result = init_list.copy()
     instance.query("SYSTEM FLUSH LOGS")
     events = instance.query('''
-        SELECT ProfileEvents.Names, ProfileEvents.Values
+        SELECT ProfileEvents.keys, ProfileEvents.values
         FROM system.query_log
         ARRAY JOIN ProfileEvents
         WHERE type != 1 AND query LIKE '%{}%'
diff --git a/tests/queries/0_stateless/00634_performance_introspection_and_logging.sh b/tests/queries/0_stateless/00634_performance_introspection_and_logging.sh
index cc5ece15435d..93fd0c4a977b 100755
--- a/tests/queries/0_stateless/00634_performance_introspection_and_logging.sh
+++ b/tests/queries/0_stateless/00634_performance_introspection_and_logging.sh
@@ -40,16 +40,16 @@ $CLICKHOUSE_CLIENT $settings -q "SYSTEM FLUSH LOGS"
 $CLICKHOUSE_CLIENT $settings -q "
 WITH
     any(query_duration_ms*1000) AS duration,
-    sumIf(PV, PN = 'RealTimeMicroseconds') AS threads_realtime,
-    sumIf(PV, PN IN ('UserTimeMicroseconds', 'SystemTimeMicroseconds', 'OSIOWaitMicroseconds', 'OSCPUWaitMicroseconds')) AS threads_time_user_system_io
+    sum(ProfileEvents['RealTimeMicroseconds']) AS threads_realtime,
+    sum(ProfileEvents['UserTimeMicroseconds'] + ProfileEvents['SystemTimeMicroseconds'] + ProfileEvents['OSIOWaitMicroseconds'] + ProfileEvents['OSCPUWaitMicroseconds']) AS threads_time_user_system_io
 SELECT
     -- duration, threads_realtime, threads_time_user_system_io,
     threads_realtime >= 0.99 * duration,
     threads_realtime >= threads_time_user_system_io,
     any(length(thread_ids)) >= 1
     FROM
-        (SELECT * FROM system.query_log PREWHERE query='$heavy_cpu_query' WHERE event_date >= today()-2 AND current_database = currentDatabase() AND type=2 ORDER BY event_time DESC LIMIT 1)
-    ARRAY JOIN ProfileEvents.Names AS PN, ProfileEvents.Values AS PV"
+        (SELECT * FROM system.query_log PREWHERE query='$heavy_cpu_query' WHERE event_date >= today()-1 AND current_database = currentDatabase() AND type=2 ORDER BY event_time DESC LIMIT 1)
+"
 
 # Clean
 rm "$server_logs_file"
diff --git a/tests/queries/0_stateless/00731_long_merge_tree_select_opened_files.sh b/tests/queries/0_stateless/00731_long_merge_tree_select_opened_files.sh
index c2274c533996..e54326cb59fa 100755
--- a/tests/queries/0_stateless/00731_long_merge_tree_select_opened_files.sh
+++ b/tests/queries/0_stateless/00731_long_merge_tree_select_opened_files.sh
@@ -28,6 +28,7 @@ $CLICKHOUSE_CLIENT $settings -q "$touching_many_parts_query" &> /dev/null
 
 $CLICKHOUSE_CLIENT $settings -q "SYSTEM FLUSH LOGS"
 
-$CLICKHOUSE_CLIENT $settings -q "SELECT pi.Values FROM system.query_log ARRAY JOIN ProfileEvents as pi WHERE query='$touching_many_parts_query' and current_database = currentDatabase() and pi.Names = 'FileOpen' ORDER BY event_time DESC LIMIT 1;"
+
+$CLICKHOUSE_CLIENT $settings -q "SELECT ProfileEvents['FileOpen'] FROM system.query_log WHERE query='$touching_many_parts_query' and current_database = currentDatabase()  ORDER BY event_time DESC LIMIT 1;"
 
 $CLICKHOUSE_CLIENT $settings -q "DROP TABLE IF EXISTS merge_tree_table;"
diff --git a/tests/queries/0_stateless/00933_test_fix_extra_seek_on_compressed_cache.sh b/tests/queries/0_stateless/00933_test_fix_extra_seek_on_compressed_cache.sh
index 9865baaa1b9a..36ac490c80fe 100755
--- a/tests/queries/0_stateless/00933_test_fix_extra_seek_on_compressed_cache.sh
+++ b/tests/queries/0_stateless/00933_test_fix_extra_seek_on_compressed_cache.sh
@@ -20,7 +20,8 @@ $CLICKHOUSE_CLIENT --use_uncompressed_cache=1 --query_id="test-query-uncompresse
 
 $CLICKHOUSE_CLIENT --query="SYSTEM FLUSH LOGS"
 
-$CLICKHOUSE_CLIENT --query="SELECT ProfileEvents.Values[indexOf(ProfileEvents.Names, 'Seek')], ProfileEvents.Values[indexOf(ProfileEvents.Names, 'ReadCompressedBytes')], ProfileEvents.Values[indexOf(ProfileEvents.Names, 'UncompressedCacheHits')] AS hit FROM system.query_log WHERE (query_id = 'test-query-uncompressed-cache') AND current_database = currentDatabase() AND (type = 2) AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1"
+
+$CLICKHOUSE_CLIENT --query="SELECT ProfileEvents['Seek'], ProfileEvents['ReadCompressedBytes'], ProfileEvents['UncompressedCacheHits'] AS hit FROM system.query_log WHERE (query_id = 'test-query-uncompressed-cache') and current_database = currentDatabase() AND (type = 2) AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1"
 
 $CLICKHOUSE_CLIENT --query="DROP TABLE IF EXISTS small_table"
 
diff --git a/tests/queries/0_stateless/01076_array_join_prewhere_const_folding.sql b/tests/queries/0_stateless/01076_array_join_prewhere_const_folding.sql
index 2ab87fa883a9..7c4f69a64fbf 100644
--- a/tests/queries/0_stateless/01076_array_join_prewhere_const_folding.sql
+++ b/tests/queries/0_stateless/01076_array_join_prewhere_const_folding.sql
@@ -2,9 +2,7 @@ SET log_queries = 1;
 SELECT 1 LIMIT 0;
 SYSTEM FLUSH LOGS;
 
-SELECT arrayJoin AS kv_key
-FROM system.query_log
-ARRAY JOIN ProfileEvents.Names AS arrayJoin
-PREWHERE current_database = currentDatabase() AND has(arrayMap(key -> key, ProfileEvents.Names), 'Query')
-WHERE arrayJoin = 'Query'
+SELECT * FROM system.query_log
+PREWHERE ProfileEvents['Query'] > 0 and current_database = currentDatabase() 
+
 LIMIT 0;
diff --git a/tests/queries/0_stateless/01231_log_queries_min_type.sql b/tests/queries/0_stateless/01231_log_queries_min_type.sql
index b3540f3354b0..c2470bb9a563 100644
--- a/tests/queries/0_stateless/01231_log_queries_min_type.sql
+++ b/tests/queries/0_stateless/01231_log_queries_min_type.sql
@@ -29,6 +29,7 @@ set max_rows_to_read=0;
 select count() from system.query_log where
     current_database = currentDatabase() and
     query like 'select \'01231_log_queries_min_type w/ Settings/EXCEPTION_WHILE_PROCESSING%' and
+    query not like '%system.query_log%' and
     event_date >= yesterday() and
     type = 'ExceptionWhileProcessing' and
-    has(Settings.Names, 'max_rows_to_read');
+    Settings['max_rows_to_read'] != '';
diff --git a/tests/queries/0_stateless/01268_procfs_metrics.sh b/tests/queries/0_stateless/01268_procfs_metrics.sh
index cad9b7866672..d5bd99724ca8 100755
--- a/tests/queries/0_stateless/01268_procfs_metrics.sh
+++ b/tests/queries/0_stateless/01268_procfs_metrics.sh
@@ -24,7 +24,7 @@ function show_processes_func()
         # These two system metrics for the generating query above are guaranteed to be nonzero when ProcFS is mounted at /proc
         $CLICKHOUSE_CLIENT -q "
             SELECT count() > 0 FROM system.processes\
-            WHERE has(ProfileEvents.Names, 'OSCPUVirtualTimeMicroseconds') AND has(ProfileEvents.Names, 'OSReadChars')\
+            WHERE ProfileEvents['OSCPUVirtualTimeMicroseconds'] > 0 AND ProfileEvents['OSReadChars'] > 0 \
             SETTINGS max_threads = 1
         " | grep '1' && break;
     done
diff --git a/tests/queries/0_stateless/01343_min_bytes_to_use_mmap_io.sql b/tests/queries/0_stateless/01343_min_bytes_to_use_mmap_io.sql
index ef39605f4d24..cbcb5c643fe4 100644
--- a/tests/queries/0_stateless/01343_min_bytes_to_use_mmap_io.sql
+++ b/tests/queries/0_stateless/01343_min_bytes_to_use_mmap_io.sql
@@ -6,6 +6,6 @@ SET min_bytes_to_use_mmap_io = 1;
 SELECT * FROM test_01343;
 
 SYSTEM FLUSH LOGS;
-SELECT PE.Values FROM system.query_log ARRAY JOIN ProfileEvents AS PE WHERE current_database = currentDatabase() AND event_date >= yesterday() AND event_time >= now() - 300 AND query LIKE 'SELECT * FROM test_01343%' AND PE.Names = 'CreatedReadBufferMMap' AND type = 2 ORDER BY event_time DESC LIMIT 1;
+SELECT ProfileEvents['CreatedReadBufferMMap'] AS value FROM system.query_log WHERE current_database = currentDatabase() AND event_date >= yesterday() AND event_time >= now() - 300 AND query LIKE 'SELECT * FROM test_01343%' AND type = 2 ORDER BY event_time DESC LIMIT 1;
 
 DROP TABLE test_01343;
diff --git a/tests/queries/0_stateless/01344_min_bytes_to_use_mmap_io_index.sql b/tests/queries/0_stateless/01344_min_bytes_to_use_mmap_io_index.sql
index 7aab991d2038..3d1485272704 100644
--- a/tests/queries/0_stateless/01344_min_bytes_to_use_mmap_io_index.sql
+++ b/tests/queries/0_stateless/01344_min_bytes_to_use_mmap_io_index.sql
@@ -6,6 +6,7 @@ SET min_bytes_to_use_mmap_io = 1;
 SELECT * FROM test_01344 WHERE x = 'Hello, world';
 
 SYSTEM FLUSH LOGS;
-SELECT PE.Values FROM system.query_log ARRAY JOIN ProfileEvents AS PE WHERE current_database = currentDatabase() AND event_date >= yesterday() AND query LIKE 'SELECT * FROM test_01344 WHERE x = ''Hello, world''%' AND PE.Names = 'CreatedReadBufferMMap' AND type = 2 ORDER BY event_time DESC LIMIT 1;
+SELECT ProfileEvents['CreatedReadBufferMMap'] as value FROM system.query_log
+    WHERE current_database = currentDatabase() AND event_date >= yesterday() AND query LIKE 'SELECT * FROM test_01344 WHERE x = ''Hello, world''%' AND type = 2 ORDER BY event_time DESC LIMIT 1;
 
 DROP TABLE test_01344;
diff --git a/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql b/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql
index 3380f04f8c99..5f4855c61190 100644
--- a/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql
+++ b/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql
@@ -8,7 +8,9 @@ SET log_queries=1;
 SELECT 1;
 SYSTEM FLUSH LOGS;
 
+
 -- NOTE: can be rewritten using log_queries_min_query_duration_ms
+
 CREATE MATERIALIZED VIEW slow_log Engine=Memory AS
 (
         SELECT * FROM
diff --git a/tests/queries/0_stateless/01413_rows_events.sql b/tests/queries/0_stateless/01413_rows_events.sql
index 9e77d3fced97..0a0da9b4b129 100644
--- a/tests/queries/0_stateless/01413_rows_events.sql
+++ b/tests/queries/0_stateless/01413_rows_events.sql
@@ -6,23 +6,24 @@ SYSTEM FLUSH LOGS;
 
 SELECT written_rows FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE 'INSERT INTO /* test 01413, query 1 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
 
-SELECT ProfileEvents.Values as value FROM system.query_log ARRAY JOIN ProfileEvents
-    WHERE current_database = currentDatabase() AND ProfileEvents.Names = 'InsertedRows' AND query LIKE 'INSERT INTO /* test 01413, query 1 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
+SELECT ProfileEvents['InsertedRows'] as value FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE 'INSERT INTO /* test 01413, query 1 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
+
 
 INSERT INTO /* test 01413, query 2 */ rows_events_test VALUES (2,2), (3,3);
 SYSTEM FLUSH LOGS;
 
 SELECT written_rows FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE 'INSERT INTO /* test 01413, query 2 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
 
-SELECT ProfileEvents.Values as value FROM system.query_log ARRAY JOIN ProfileEvents
-    WHERE current_database = currentDatabase() AND ProfileEvents.Names = 'InsertedRows' AND query LIKE 'INSERT INTO /* test 01413, query 2 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
+SELECT ProfileEvents['InsertedRows'] as value FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE 'INSERT INTO /* test 01413, query 2 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
+
 
 SELECT * FROM /* test 01413, query 3 */ rows_events_test WHERE v = 2;
 SYSTEM FLUSH LOGS;
 
 SELECT read_rows FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE 'SELECT * FROM /* test 01413, query 3 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
 
-SELECT ProfileEvents.Values as value FROM system.query_log ARRAY JOIN ProfileEvents
-    WHERE current_database = currentDatabase() AND ProfileEvents.Names = 'SelectedRows' AND query LIKE 'SELECT * FROM /* test 01413, query 3 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
+
+SELECT ProfileEvents['SelectedRows'] as value FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE 'SELECT * FROM /* test 01413, query 3 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
+
 
 DROP TABLE rows_events_test;
diff --git a/tests/queries/0_stateless/01455_opentelemetry_distributed.sh b/tests/queries/0_stateless/01455_opentelemetry_distributed.sh
index bf1d5b316823..8f034b0bf615 100755
--- a/tests/queries/0_stateless/01455_opentelemetry_distributed.sh
+++ b/tests/queries/0_stateless/01455_opentelemetry_distributed.sh
@@ -28,8 +28,8 @@ select count(*) "'"'"initial query spans with proper parent"'"'"
     from
         (select *, attribute_name, attribute_value
             from system.opentelemetry_span_log
-                array join attribute.names as attribute_name,
-                    attribute.values as attribute_value) o
+                array join mapKeys(attribute) as attribute_name,
+                     mapValues(attribute) as attribute_value) o
         join system.query_log on query_id = o.attribute_value
     where
         trace_id = reinterpretAsUUID(reverse(unhex('$trace_id')))
@@ -45,7 +45,7 @@ select count(*) "'"'"initial query spans with proper parent"'"'"
 -- same non-empty value for all 'query' spans in this trace.
 select uniqExact(value) "'"'"unique non-empty tracestate values"'"'"
     from system.opentelemetry_span_log
-        array join attribute.names as name, attribute.values as value
+        array join mapKeys(attribute) as name,  mapValues(attribute) as value
     where
         trace_id = reinterpretAsUUID(reverse(unhex('$trace_id')))
         and operation_name = 'query'
@@ -108,14 +108,11 @@ wait
 
 ${CLICKHOUSE_CLIENT} -q "system flush logs"
 ${CLICKHOUSE_CLIENT} -q "
-    with count(*) as c
     -- expect 200 * 0.1 = 20 sampled events on average
-    select if(c > 1 and c < 50, 'OK', 'fail: ' || toString(c))
+    select if(count() > 1 and count() < 50, 'OK', 'Fail')
     from system.opentelemetry_span_log
-        array join attribute.names as name, attribute.values as value
-    where name = 'clickhouse.query_id'
-        and operation_name = 'query'
+    where operation_name = 'query'
         and parent_span_id = 0  -- only account for the initial queries
-        and value like '$query_id-%'
+        and attribute['clickhouse.query_id'] like '$query_id-%'
     ;
 "
diff --git a/tests/queries/0_stateless/01475_read_subcolumns.sql b/tests/queries/0_stateless/01475_read_subcolumns.sql
index 3457d17dba11..6e2c8d458ae1 100644
--- a/tests/queries/0_stateless/01475_read_subcolumns.sql
+++ b/tests/queries/0_stateless/01475_read_subcolumns.sql
@@ -7,7 +7,7 @@ SYSTEM DROP MARK CACHE;
 SELECT a.size0 FROM t_arr;
 
 SYSTEM FLUSH LOGS;
-SELECT ProfileEvents.Values[indexOf(ProfileEvents.Names, 'FileOpen')]
+SELECT ProfileEvents['FileOpen']
 FROM system.query_log
 WHERE (type = 'QueryFinish') AND (lower(query) LIKE lower('SELECT a.size0 FROM %t_arr%'))
     AND current_database = currentDatabase();
@@ -24,7 +24,7 @@ SYSTEM DROP MARK CACHE;
 SELECT t.u FROM t_tup;
 
 SYSTEM FLUSH LOGS;
-SELECT ProfileEvents.Values[indexOf(ProfileEvents.Names, 'FileOpen')]
+SELECT ProfileEvents['FileOpen']
 FROM system.query_log
 WHERE (type = 'QueryFinish') AND (lower(query) LIKE lower('SELECT t._ FROM %t_tup%'))
     AND current_database = currentDatabase();
@@ -38,7 +38,7 @@ SYSTEM DROP MARK CACHE;
 SELECT n.null FROM t_nul;
 
 SYSTEM FLUSH LOGS;
-SELECT ProfileEvents.Values[indexOf(ProfileEvents.Names, 'FileOpen')]
+SELECT ProfileEvents['FileOpen']
 FROM system.query_log
 WHERE (type = 'QueryFinish') AND (lower(query) LIKE lower('SELECT n.null FROM %t_nul%'))
     AND current_database = currentDatabase();
@@ -57,7 +57,7 @@ SYSTEM DROP MARK CACHE;
 SELECT m.values FROM t_map;
 
 SYSTEM FLUSH LOGS;
-SELECT ProfileEvents.Values[indexOf(ProfileEvents.Names, 'FileOpen')]
+SELECT ProfileEvents['FileOpen']
 FROM system.query_log
 WHERE (type = 'QueryFinish') AND (lower(query) LIKE lower('SELECT m.% FROM %t_map%'))
     AND current_database = currentDatabase();
diff --git a/tests/queries/0_stateless/01533_multiple_nested.sql b/tests/queries/0_stateless/01533_multiple_nested.sql
index 0ddb0cfbfb46..82049243006f 100644
--- a/tests/queries/0_stateless/01533_multiple_nested.sql
+++ b/tests/queries/0_stateless/01533_multiple_nested.sql
@@ -33,7 +33,7 @@ SELECT col1.a FROM nested FORMAT Null;
 
 -- 4 files: (col1.size0, col1.a) x2
 SYSTEM FLUSH LOGS;
-SELECT ProfileEvents.Values[indexOf(ProfileEvents.Names, 'FileOpen')]
+SELECT ProfileEvents['FileOpen']
 FROM system.query_log
 WHERE (type = 'QueryFinish') AND (lower(query) LIKE lower('SELECT col1.a FROM %nested%'))
     AND event_date >= yesterday() AND current_database = currentDatabase();
@@ -43,7 +43,7 @@ SELECT col3.n2.s FROM nested FORMAT Null;
 
 -- 6 files: (col3.size0, col3.n2.size1, col3.n2.s) x2
 SYSTEM FLUSH LOGS;
-SELECT ProfileEvents.Values[indexOf(ProfileEvents.Names, 'FileOpen')]
+SELECT ProfileEvents['FileOpen']
 FROM system.query_log
 WHERE (type = 'QueryFinish') AND (lower(query) LIKE lower('SELECT col3.n2.s FROM %nested%'))
     AND event_date >= yesterday() AND current_database = currentDatabase();
