diff --git a/docker/test/stress/stress b/docker/test/stress/stress
index ab25d13695bb..6d90b9d5437b 100755
--- a/docker/test/stress/stress
+++ b/docker/test/stress/stress
@@ -46,6 +46,9 @@ def get_options(i, backward_compatibility_check):
     if i == 13:
         client_options.append("memory_tracker_fault_probability=0.001")
 
+    if i % 2 == 1 and not backward_compatibility_check:
+        client_options.append("group_by_use_nulls=1")
+
     if client_options:
         options.append(" --client-option " + " ".join(client_options))
 
diff --git a/tests/queries/0_stateless/02313_group_by_modifiers_with_non-default_types.reference b/tests/queries/0_stateless/02313_group_by_modifiers_with_non_default_types.reference
similarity index 100%
rename from tests/queries/0_stateless/02313_group_by_modifiers_with_non-default_types.reference
rename to tests/queries/0_stateless/02313_group_by_modifiers_with_non_default_types.reference
diff --git a/tests/queries/0_stateless/02313_group_by_modifiers_with_non-default_types.sql b/tests/queries/0_stateless/02313_group_by_modifiers_with_non_default_types.sql
similarity index 100%
rename from tests/queries/0_stateless/02313_group_by_modifiers_with_non-default_types.sql
rename to tests/queries/0_stateless/02313_group_by_modifiers_with_non_default_types.sql
diff --git a/tests/queries/0_stateless/02343_group_by_use_nulls.reference b/tests/queries/0_stateless/02343_group_by_use_nulls.reference
new file mode 100644
index 000000000000..24b7bb5277cb
--- /dev/null
+++ b/tests/queries/0_stateless/02343_group_by_use_nulls.reference
@@ -0,0 +1,215 @@
+-- { echoOn }
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY ROLLUP(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+0	0	0
+0	\N	0
+1	1	1
+1	\N	1
+2	0	2
+2	\N	2
+3	1	3
+3	\N	3
+4	0	4
+4	\N	4
+5	1	5
+5	\N	5
+6	0	6
+6	\N	6
+7	1	7
+7	\N	7
+8	0	8
+8	\N	8
+9	1	9
+9	\N	9
+\N	\N	45
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY ROLLUP(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=0;
+0	0	0
+0	0	0
+0	0	45
+1	0	1
+1	1	1
+2	0	2
+2	0	2
+3	0	3
+3	1	3
+4	0	4
+4	0	4
+5	0	5
+5	1	5
+6	0	6
+6	0	6
+7	0	7
+7	1	7
+8	0	8
+8	0	8
+9	0	9
+9	1	9
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY CUBE(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+0	0	0
+0	\N	0
+1	1	1
+1	\N	1
+2	0	2
+2	\N	2
+3	1	3
+3	\N	3
+4	0	4
+4	\N	4
+5	1	5
+5	\N	5
+6	0	6
+6	\N	6
+7	1	7
+7	\N	7
+8	0	8
+8	\N	8
+9	1	9
+9	\N	9
+\N	0	20
+\N	1	25
+\N	\N	45
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY CUBE(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=0;
+0	0	0
+0	0	0
+0	0	20
+0	0	45
+0	1	25
+1	0	1
+1	1	1
+2	0	2
+2	0	2
+3	0	3
+3	1	3
+4	0	4
+4	0	4
+5	0	5
+5	1	5
+6	0	6
+6	0	6
+7	0	7
+7	1	7
+8	0	8
+8	0	8
+9	0	9
+9	1	9
+SELECT
+    number,
+    number % 2,
+    sum(number) AS val
+FROM numbers(10)
+GROUP BY
+    GROUPING SETS (
+        (number),
+        (number % 2)
+    )
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls = 1;
+0	\N	0
+1	\N	1
+2	\N	2
+3	\N	3
+4	\N	4
+5	\N	5
+6	\N	6
+7	\N	7
+8	\N	8
+9	\N	9
+\N	0	20
+\N	1	25
+SELECT
+    number,
+    number % 2,
+    sum(number) AS val
+FROM numbers(10)
+GROUP BY
+    GROUPING SETS (
+        (number),
+        (number % 2)
+    )
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls = 0;
+0	0	0
+0	0	20
+0	1	25
+1	0	1
+2	0	2
+3	0	3
+4	0	4
+5	0	5
+6	0	6
+7	0	7
+8	0	8
+9	0	9
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY ROLLUP(number, number % 2) WITH TOTALS
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+0	0	0
+0	\N	0
+1	1	1
+1	\N	1
+2	0	2
+2	\N	2
+3	1	3
+3	\N	3
+4	0	4
+4	\N	4
+5	1	5
+5	\N	5
+6	0	6
+6	\N	6
+7	1	7
+7	\N	7
+8	0	8
+8	\N	8
+9	1	9
+9	\N	9
+\N	\N	45
+
+0	0	45
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY CUBE(number, number % 2) WITH TOTALS
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+0	0	0
+0	\N	0
+1	1	1
+1	\N	1
+2	0	2
+2	\N	2
+3	1	3
+3	\N	3
+4	0	4
+4	\N	4
+5	1	5
+5	\N	5
+6	0	6
+6	\N	6
+7	1	7
+7	\N	7
+8	0	8
+8	\N	8
+9	1	9
+9	\N	9
+\N	0	20
+\N	1	25
+\N	\N	45
+
+0	0	45
diff --git a/tests/queries/0_stateless/02343_group_by_use_nulls.sql b/tests/queries/0_stateless/02343_group_by_use_nulls.sql
new file mode 100644
index 000000000000..a14db8240139
--- /dev/null
+++ b/tests/queries/0_stateless/02343_group_by_use_nulls.sql
@@ -0,0 +1,62 @@
+-- { echoOn }
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY ROLLUP(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY ROLLUP(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=0;
+
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY CUBE(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY CUBE(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=0;
+
+SELECT
+    number,
+    number % 2,
+    sum(number) AS val
+FROM numbers(10)
+GROUP BY
+    GROUPING SETS (
+        (number),
+        (number % 2)
+    )
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls = 1;
+
+SELECT
+    number,
+    number % 2,
+    sum(number) AS val
+FROM numbers(10)
+GROUP BY
+    GROUPING SETS (
+        (number),
+        (number % 2)
+    )
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls = 0;
+
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY ROLLUP(number, number % 2) WITH TOTALS
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+
+SELECT number, number % 2, sum(number) AS val
+FROM numbers(10)
+GROUP BY CUBE(number, number % 2) WITH TOTALS
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
diff --git a/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.reference b/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.reference
new file mode 100644
index 000000000000..7a9263e883c4
--- /dev/null
+++ b/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.reference
@@ -0,0 +1,157 @@
+-- { echoOn }
+SELECT number, number % 2, sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY ROLLUP(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+0	0	0
+0	\N	0
+1	1	2
+1	\N	2
+2	0	4
+2	\N	4
+3	1	6
+3	\N	6
+4	0	8
+4	\N	8
+5	1	10
+5	\N	10
+6	0	12
+6	\N	12
+7	1	14
+7	\N	14
+8	0	16
+8	\N	16
+9	1	18
+9	\N	18
+\N	\N	90
+SELECT number, number % 2, sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY ROLLUP(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=0;
+0	0	0
+0	0	0
+0	0	90
+1	0	2
+1	1	2
+2	0	4
+2	0	4
+3	0	6
+3	1	6
+4	0	8
+4	0	8
+5	0	10
+5	1	10
+6	0	12
+6	0	12
+7	0	14
+7	1	14
+8	0	16
+8	0	16
+9	0	18
+9	1	18
+SELECT number, number % 2, sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY CUBE(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+0	0	0
+0	\N	0
+1	1	2
+1	\N	2
+2	0	4
+2	\N	4
+3	1	6
+3	\N	6
+4	0	8
+4	\N	8
+5	1	10
+5	\N	10
+6	0	12
+6	\N	12
+7	1	14
+7	\N	14
+8	0	16
+8	\N	16
+9	1	18
+9	\N	18
+\N	0	40
+\N	1	50
+\N	\N	90
+SELECT number, number % 2, sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY CUBE(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=0;
+0	0	0
+0	0	0
+0	0	40
+0	0	90
+0	1	50
+1	0	2
+1	1	2
+2	0	4
+2	0	4
+3	0	6
+3	1	6
+4	0	8
+4	0	8
+5	0	10
+5	1	10
+6	0	12
+6	0	12
+7	0	14
+7	1	14
+8	0	16
+8	0	16
+9	0	18
+9	1	18
+SELECT
+    number,
+    number % 2,
+    sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY
+    GROUPING SETS (
+        (number),
+        (number % 2)
+    )
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls = 1;
+0	\N	0
+1	\N	2
+2	\N	4
+3	\N	6
+4	\N	8
+5	\N	10
+6	\N	12
+7	\N	14
+8	\N	16
+9	\N	18
+\N	0	40
+\N	1	50
+SELECT
+    number,
+    number % 2,
+    sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY
+    GROUPING SETS (
+        (number),
+        (number % 2)
+    )
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls = 0;
+0	0	0
+0	0	40
+0	1	50
+1	0	2
+2	0	4
+3	0	6
+4	0	8
+5	0	10
+6	0	12
+7	0	14
+8	0	16
+9	0	18
diff --git a/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.sql b/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.sql
new file mode 100644
index 000000000000..15ac1127de79
--- /dev/null
+++ b/tests/queries/0_stateless/02343_group_by_use_nulls_distributed.sql
@@ -0,0 +1,51 @@
+-- { echoOn }
+SELECT number, number % 2, sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY ROLLUP(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+
+SELECT number, number % 2, sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY ROLLUP(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=0;
+
+SELECT number, number % 2, sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY CUBE(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=1;
+
+SELECT number, number % 2, sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY CUBE(number, number % 2)
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls=0;
+
+SELECT
+    number,
+    number % 2,
+    sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY
+    GROUPING SETS (
+        (number),
+        (number % 2)
+    )
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls = 1;
+
+SELECT
+    number,
+    number % 2,
+    sum(number) AS val
+FROM remote('127.0.0.{2,3}', numbers(10))
+GROUP BY
+    GROUPING SETS (
+        (number),
+        (number % 2)
+    )
+ORDER BY (number, number % 2, val)
+SETTINGS group_by_use_nulls = 0;
+
diff --git a/tests/queries/1_stateful/00173_group_by_use_nulls.reference b/tests/queries/1_stateful/00173_group_by_use_nulls.reference
new file mode 100644
index 000000000000..02723bf14dd4
--- /dev/null
+++ b/tests/queries/1_stateful/00173_group_by_use_nulls.reference
@@ -0,0 +1,10 @@
+1704509	1384
+732797	1336
+598875	1384
+792887	1336
+3807842	1336
+25703952	1336
+716829	1384
+59183	1336
+33010362	1336
+800784	1336
diff --git a/tests/queries/1_stateful/00173_group_by_use_nulls.sql b/tests/queries/1_stateful/00173_group_by_use_nulls.sql
new file mode 100644
index 000000000000..7acacc4e579d
--- /dev/null
+++ b/tests/queries/1_stateful/00173_group_by_use_nulls.sql
@@ -0,0 +1,10 @@
+SELECT
+    CounterID AS k,
+    quantileBFloat16(0.5)(ResolutionWidth)
+FROM remote('127.0.0.{1,2}', test, hits)
+GROUP BY k
+ORDER BY
+    count() DESC,
+    CounterID ASC
+LIMIT 10
+SETTINGS group_by_use_nulls = 1;
