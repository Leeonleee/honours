{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 20049,
  "instance_id": "ClickHouse__ClickHouse-20049",
  "issue_numbers": [
    "19913"
  ],
  "base_commit": "474f151707ef13cc80bc38ed756729db36cb8a51",
  "patch": "diff --git a/src/Functions/CMakeLists.txt b/src/Functions/CMakeLists.txt\nindex 321aa5e21960..1c3beb2e47d4 100644\n--- a/src/Functions/CMakeLists.txt\n+++ b/src/Functions/CMakeLists.txt\n@@ -117,3 +117,6 @@ target_link_libraries(clickhouse_functions PRIVATE clickhouse_functions_array)\n if (USE_STATS)\n     target_link_libraries(clickhouse_functions PRIVATE stats)\n endif()\n+\n+# Signed integer overflow on user-provided data inside boost::geometry - ignore.\n+set_source_files_properties(\"pointInPolygon.cpp\" PROPERTIES COMPILE_FLAGS -fno-sanitize=signed-integer-overflow)\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01700_point_in_polygon_ubsan.reference b/tests/queries/0_stateless/01700_point_in_polygon_ubsan.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/01700_point_in_polygon_ubsan.sql b/tests/queries/0_stateless/01700_point_in_polygon_ubsan.sql\nnew file mode 100644\nindex 000000000000..97db40ab65e6\n--- /dev/null\n+++ b/tests/queries/0_stateless/01700_point_in_polygon_ubsan.sql\n@@ -0,0 +1,1 @@\n+SELECT pointInPolygon((0, 0), [[(0, 0), (10, 10), (256, -9223372036854775808)]]) FORMAT Null;\n",
  "problem_statement": "Signed overflow in PointInPolygon (boost/geometry/arithmetic/determinant.hpp:44)\nhttps://clickhouse-test-reports.s3.yandex.net/19790/84d3d6e7280907a22f6a2ce86b9bf3040b4871f1/fuzzer_ubsan/report.html#fail1\r\n\r\n\r\n```\r\nSELECT pointInPolygon((0, 0), [[(0, 0), (10, 10), (256, -9223372036854775808)]])\r\n\r\n../contrib/boost/boost/geometry/arithmetic/determinant.hpp:44:23: runtime error: signed integer overflow: 256 * 9223372036854775616 cannot be represented in type 'long long'\r\n    #0 0x15dec916 in boost::geometry::detail::calculate_determinant<long long, long long, long long>::apply(long long const&, long long const&, long long const&, long long const&) (/workspace/clickhouse+0x15dec916)\r\n    #1 0x15dec1fa in void boost::geometry::strategy::intersection::cartesian_segments<void>::cramers_rule<long long, long long, long long>(long long const&, long long const&, long long const&, long long const&, long long const&, long long const&, long long&, long long&) (/workspace/clickhouse+0x15dec1fa)\r\n    #2 0x15deb96d in boost::geometry::policies::relate::segments_tupled<boost::geometry::policies::relate::segments_intersection_points<boost::geometry::segment_intersection_points<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> > >, boost::geometry::policies::relate::segments_direction>::return_type boost::geometry::strategy::intersection::cartesian_segments<void>::apply<boost::geometry::model::referring_segment<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const>, boost::geometry::model::referring_segment<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const>, boost::geometry::policies::relate::segments_tupled<boost::geometry::policies::relate::segments_intersection_points<boost::geometry::segment_intersection_points<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> > >, boost::geometry::policies::relate::segments_direction>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >(boost::geometry::model::referring_segment<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const> const&, boost::geometry::model::referring_segment<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const> const&, boost::geometry::policies::relate::segments_tupled<boost::geometry::policies::relate::segments_intersection_points<boost::geometry::segment_intersection_points<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> > >, boost::geometry::policies::relate::segments_direction> const&, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> const&, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> const&, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> const&, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> const&, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> const&) (/workspace/clickhouse+0x15deb96d)\r\n    #3 0x15de9ee7 in boost::geometry::detail::overlay::intersection_info<boost::geometry::detail::get_turns::unique_sub_range_from_section<true, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::ever_circling_iterator<std::__1::__wrap_iter<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const*> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> >, boost::geometry::detail::get_turns::unique_sub_range_from_section<true, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::ever_circling_iterator<std::__1::__wrap_iter<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const*> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> >, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> >::intersection_info(boost::geometry::detail::get_turns::unique_sub_range_from_section<true, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::ever_circling_iterator<std::__1::__wrap_iter<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const*> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> > const&, boost::geometry::detail::get_turns::unique_sub_range_from_section<true, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::ever_circling_iterator<std::__1::__wrap_iter<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const*> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> > const&, boost::geometry::strategy::intersection::cartesian_segments<void> const&, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> const&) (/workspace/clickhouse+0x15de9ee7)\r\n    #4 0x15de9ada in std::__1::back_insert_iterator<std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > > > boost::geometry::detail::overlay::get_turn_info<boost::geometry::detail::overlay::assign_null_policy>::apply<boost::geometry::detail::get_turns::unique_sub_range_from_section<true, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::ever_circling_iterator<std::__1::__wrap_iter<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const*> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> >, boost::geometry::detail::get_turns::unique_sub_range_from_section<true, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::ever_circling_iterator<std::__1::__wrap_iter<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const*> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> >, boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double>, std::__1::back_insert_iterator<std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > > > >(boost::geometry::detail::get_turns::unique_sub_range_from_section<true, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::ever_circling_iterator<std::__1::__wrap_iter<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const*> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> > const&, boost::geometry::detail::get_turns::unique_sub_range_from_section<true, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::ever_circling_iterator<std::__1::__wrap_iter<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian> const*> >, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> > const&, boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > const&, boost::geometry::strategy::intersection::cartesian_segments<void> const&, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> const&, std::__1::back_insert_iterator<std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > > >) (/workspace/clickhouse+0x15de9ada)\r\n    #5 0x15de921b in bool boost::geometry::detail::get_turns::get_turns_in_sections<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, false, false, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::detail::overlay::get_turn_info<boost::geometry::detail::overlay::assign_null_policy> >::apply<boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double>, std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >, boost::geometry::detail::overlay::stateless_predicate_based_interrupt_policy<boost::geometry::detail::is_valid::is_acceptable_turn<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::polygon_tag>, true> >(int, boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator> const&, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul> const&, int, boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator> const&, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul> const&, bool, bool, boost::geometry::strategy::intersection::cartesian_segments<void> const&, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> const&, std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >&, boost::geometry::detail::overlay::stateless_predicate_based_interrupt_policy<boost::geometry::detail::is_valid::is_acceptable_turn<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::polygon_tag>, true>&) (/workspace/clickhouse+0x15de921b)\r\n    #6 0x15de69ef in bool boost::geometry::detail::self_get_turn_points::self_section_visitor<false, boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >, boost::geometry::detail::overlay::get_turn_info<boost::geometry::detail::overlay::assign_null_policy>, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double>, boost::geometry::detail::overlay::stateless_predicate_based_interrupt_policy<boost::geometry::detail::is_valid::is_acceptable_turn<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::polygon_tag>, true> >::apply<boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul> >(boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul> const&, boost::geometry::section<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul> const&) (/workspace/clickhouse+0x15de69ef)\r\n    #7 0x15de6449 in bool boost::geometry::partition<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, boost::geometry::detail::partition::include_all_policy, boost::geometry::detail::partition::include_all_policy>::apply<boost::geometry::sections<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul>, boost::geometry::detail::self_get_turn_points::self_section_visitor<false, boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >, boost::geometry::detail::overlay::get_turn_info<boost::geometry::detail::overlay::assign_null_policy>, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double>, boost::geometry::detail::overlay::stateless_predicate_based_interrupt_policy<boost::geometry::detail::is_valid::is_acceptable_turn<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::polygon_tag>, true> >, boost::geometry::detail::section::get_section_box<boost::geometry::strategy::expand::cartesian_box>, boost::geometry::detail::section::overlaps_section_box<boost::geometry::strategy::disjoint::cartesian_box_box>, boost::geometry::detail::partition::visit_no_policy>(boost::geometry::sections<boost::geometry::model::box<boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian> >, 2ul> const&, boost::geometry::detail::self_get_turn_points::self_section_visitor<false, boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >, boost::geometry::detail::overlay::get_turn_info<boost::geometry::detail::overlay::assign_null_policy>, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double>, boost::geometry::detail::overlay::stateless_predicate_based_interrupt_policy<boost::geometry::detail::is_valid::is_acceptable_turn<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::polygon_tag>, true> >&, boost::geometry::detail::section::get_section_box<boost::geometry::strategy::expand::cartesian_box> const&, boost::geometry::detail::section::overlaps_section_box<boost::geometry::strategy::disjoint::cartesian_box_box> const&, unsigned long, boost::geometry::detail::partition::visit_no_policy) (/workspace/clickhouse+0x15de6449)\r\n    #8 0x15de47d0 in bool boost::geometry::detail::self_get_turn_points::get_turns<false, boost::geometry::detail::overlay::get_turn_info<boost::geometry::detail::overlay::assign_null_policy> >::apply<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::strategy::intersection::cartesian_segments<void>, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double>, std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >, boost::geometry::detail::overlay::stateless_predicate_based_interrupt_policy<boost::geometry::detail::is_valid::is_acceptable_turn<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::polygon_tag>, true> >(boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator> const&, boost::geometry::strategy::intersection::cartesian_segments<void> const&, boost::geometry::detail::robust_policy<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::model::point<long long, 2ul, boost::geometry::cs::cartesian>, double> const&, std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >&, boost::geometry::detail::overlay::stateless_predicate_based_interrupt_policy<boost::geometry::detail::is_valid::is_acceptable_turn<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::polygon_tag>, true>&, int, bool) (/workspace/clickhouse+0x15de47d0)\r\n    #9 0x15de0f00 in bool boost::geometry::detail::is_valid::has_valid_self_turns<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::detail::is_valid::is_acceptable_turn<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::polygon_tag> >::apply<std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >, boost::geometry::failing_reason_policy<true, true>, boost::geometry::strategy::intersection::cartesian_segments<void> >(boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator> const&, std::__1::deque<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> >, std::__1::allocator<boost::geometry::detail::overlay::turn_info<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long>, boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, boost::array<boost::geometry::detail::overlay::turn_operation<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, boost::geometry::segment_ratio<long long> >, 2ul> > > >&, boost::geometry::failing_reason_policy<true, true>&, boost::geometry::strategy::intersection::cartesian_segments<void> const&) (/workspace/clickhouse+0x15de0f00)\r\n    #10 0x15de0d3f in bool boost::geometry::detail::is_valid::is_valid_polygon<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, false>::apply<boost::geometry::failing_reason_policy<true, true>, boost::geometry::strategy::intersection::cartesian_segments<void> >(boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator> const&, boost::geometry::failing_reason_policy<true, true>&, boost::geometry::strategy::intersection::cartesian_segments<void> const&) (/workspace/clickhouse+0x15de0d3f)\r\n    #11 0x15de0775 in bool boost::geometry::is_valid<boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>, boost::geometry::default_strategy>(boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, boost::geometry::default_strategy const&) (/workspace/clickhouse+0x15de0775)\r\n    #12 0x15ddb8c8 in DB::(anonymous namespace)::FunctionPointInPolygon<DB::PointInPolygonWithGrid<double> >::parseConstPolygon(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, boost::geometry::model::polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, false, true, std::__1::vector, std::__1::vector, std::__1::allocator, std::__1::allocator>&) const (/workspace/clickhouse+0x15ddb8c8)\r\n    #13 0x15dd672a in DB::(anonymous namespace)::FunctionPointInPolygon<DB::PointInPolygonWithGrid<double> >::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x15dd672a)\r\n    #14 0x11d8bc34 in DB::IFunction::executeImplDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x11d8bc34)\r\n    #15 0x11d91016 in DB::DefaultExecutable::executeDryRun(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x11d91016)\r\n    #16 0x12834f6a in DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0x12834f6a)\r\n    #17 0x12835f6d in DB::ExecutableFunctionAdaptor::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/workspace/clickhouse+0x12835f6d)\r\n    #18 0x19642b70 in DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<DB::ActionsDAG::Node*, std::__1::allocator<DB::ActionsDAG::Node*> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:211:35\r\n    #19 0x19642395 in DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::Context const&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:165:12\r\n    #20 0x19dd85ce in DB::ScopeStack::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:501:51\r\n    #21 0x19de9ba2 in DB::ActionsMatcher::Data::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.h:155:27\r\n    #22 0x19de0648 in DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp:971:14\r\n    #23 0x19de5f8f in DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) obj-x86_64-linux-gnu/../src/Interpreters/ActionsVisitor.cpp\r\n    #24 0x19dbbed1 in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) obj-x86_64-linux-gnu/../src/Interpreters/InDepthNodeVisitor.h:34:13\r\n    #25 0x19da9bff in DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:410:48\r\n    #26 0x19db203a in DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:1093:5\r\n    #27 0x19db6356 in DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&) obj-x86_64-linux-gnu/../src/Interpreters/ExpressionAnalyzer.cpp:1477:24\r\n    #28 0x19b1d15d in DB::InterpreterSelectQuery::getSampleBlockImpl() obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:567:23\r\n    #29 0x19b1481b in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)::$_2::operator()(bool) const obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:461:25\r\n    #30 0x19b0faa7 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:464:5\r\n    #31 0x19b0d829 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:154:7\r\n    #32 0x19e0e867 in std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST> const&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068:32\r\n    #33 0x19e0bd03 in DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:327:16\r\n    #34 0x19e0a07c in DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:249:13\r\n    #35 0x19a9b0b5 in std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions const&) obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2068:32\r\n    #36 0x19a99c0a in DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions const&) obj-x86_64-linux-gnu/../src/Interpreters/InterpreterFactory.cpp:110:16\r\n    #37 0x1a044ec0 in DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:519:28\r\n    #38 0x1a043d14 in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:899:30\r\n    #39 0x1aa0eb0b in DB::TCPHandler::runImpl() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:260:24\r\n    #40 0x1aa2742c in DB::TCPHandler::run() obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1417:9\r\n    #41 0x1b81bf1b in Poco::Net::TCPServerConnection::start() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3\r\n    #42 0x1b81c372 in Poco::Net::TCPServerDispatcher::run() obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:112:19\r\n    #43 0x1b8fa5c9 in Poco::PooledThread::run() obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14\r\n    #44 0x1b8f83cb in Poco::ThreadImpl::runnableEntry(void*) obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27\r\n    #45 0x7f34845e3608 in start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477:8\r\n    #46 0x7f348450a292 in clone /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n```\n",
  "hints_text": "We should add `-fno-sanitize=signed-integer-overflow` for this translation unit.",
  "created_at": "2021-02-03T18:25:48Z",
  "modified_files": [
    "src/Functions/CMakeLists.txt"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01700_point_in_polygon_ubsan.sql"
  ]
}