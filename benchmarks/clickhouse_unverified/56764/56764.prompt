You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Queries stuck when `max_threads=1`
[Report](https://play.clickhouse.com/play?user=play#U0VMRUNUCiAgdGVzdF9uYW1lLAogIHRvU3RhcnRPZkRheShjaGVja19zdGFydF90aW1lKSBhcyB0LAogIGNvdW50KCkgYXMgcnVucywKICBjb25jYXQocm91bmQoMTAwICogKGNvdW50SWYodGVzdF9zdGF0dXMgIT0gJ09LJyBBTkQgdGVzdF9zdGF0dXMgIT0gJ1NLSVBQRUQnKSBBUyBmKSAvIHJ1bnMsIDEpOjpTdHJpbmcsICclJykgYXMgZmFpbHVyZV9wZXJjZW50YWdlLAogIGFueUlmKHJlcG9ydF91cmwsIHRlc3Rfc3RhdHVzICE9ICdPSycgQU5EIHRlc3Rfc3RhdHVzICE9ICdTS0lQUEVEJykgYXMgbGFzdF9yZXBvcnQsCiAgZ3JvdXBBcnJheURpc3RpbmN0SWYoY2hlY2tfbmFtZSwgdGVzdF9zdGF0dXMgIT0gJ09LJyBBTkQgdGVzdF9zdGF0dXMgIT0gJ1NLSVBQRUQnKSBhcyBjaGVja19uYW1lc193aXRoX2ZhaWx1cmVzCkZST00gY2hlY2tzCldIRVJFCiAgICB0ZXN0X25hbWUgTElLRSAnJTAxMTA0X2Rpc3RyaWJ1dGVkX251bWJlcnNfdGVzdCUnCiAgICBBTkQgcHVsbF9yZXF1ZXN0X251bWJlciA9IDAKICAgIEFORCBjaGVja19zdGFydF90aW1lID4gdG9kYXkoKSAtIGludGVydmFsIDMwIGRheQpHUk9VUCBCWSB0ZXN0X25hbWUsIHQKT1JERVIgYnkgdA==)

```sql
SELECT
  test_name,
  toStartOfDay(check_start_time) as t,
  count() as runs,
  concat(round(100 * (countIf(test_status != 'OK' AND test_status != 'SKIPPED') AS f) / runs, 1)::String, '%') as failure_percentage,
  anyIf(report_url, test_status != 'OK' AND test_status != 'SKIPPED') as last_report,
  groupArrayDistinctIf(check_name, test_status != 'OK' AND test_status != 'SKIPPED') as check_names_with_failures
FROM checks
WHERE
    test_name LIKE '%01104_distributed_numbers_test%'
    AND pull_request_number = 0
    AND check_start_time > today() - interval 30 day
GROUP BY test_name, t
ORDER by t
```

It doesn't seem to fail often.

Checking one of the [reports](https://s3.amazonaws.com/clickhouse-test-reports/0/9c79c165b939143312a960081b371598f37232e2/stateless_tests__tsan__[2_5].html):
 
```
2023-11-01 06:05:42 Found hung queries in processlist:
2023-11-01 06:05:42 Row 1:
2023-11-01 06:05:42 ──────
2023-11-01 06:05:42 is_initial_query:     1
2023-11-01 06:05:42 user:                 default
2023-11-01 06:05:42 query_id:             4d774025-05ea-42a5-9b36-7f53a7ae7921
2023-11-01 06:05:42 address:              ::1
2023-11-01 06:05:42 port:                 50978
2023-11-01 06:05:42 initial_user:         default
2023-11-01 06:05:42 initial_query_id:     4d774025-05ea-42a5-9b36-7f53a7ae7921
2023-11-01 06:05:42 initial_address:      ::1
2023-11-01 06:05:42 initial_port:         50978
2023-11-01 06:05:42 interface:            1
2023-11-01 06:05:42 os_user:              
2023-11-01 06:05:42 client_hostname:      b9e60a8e9b7c
2023-11-01 06:05:42 client_name:          ClickHouse client
2023-11-01 06:05:42 client_revision:      54466
2023-11-01 06:05:42 client_version_major: 23
2023-11-01 06:05:42 client_version_minor: 10
2023-11-01 06:05:42 client_version_patch: 1
2023-11-01 06:05:42 http_method:          0
2023-11-01 06:05:42 http_user_agent:      
2023-11-01 06:05:42 http_referer:         
2023-11-01 06:05:42 forwarded_for:        
2023-11-01 06:05:42 quota_key:            
2023-11-01 06:05:42 distributed_depth:    0
2023-11-01 06:05:42 elapsed:              1739.511744
2023-11-01 06:05:42 is_cancelled:         0
2023-11-01 06:05:42 is_all_data_sent:     0
2023-11-01 06:05:42 read_rows:            57499517845
2023-11-01 06:05:42 read_bytes:           459996142760
2023-11-01 06:05:42 total_rows_approx:    0
2023-11-01 06:05:42 written_rows:         0
2023-11-01 06:05:42 written_bytes:        0
2023-11-01 06:05:42 memory_usage:         0
2023-11-01 06:05:42 peak_memory_usage:    0
2023-11-01 06:05:42 query:                SELECT '100' AS number FROM d_numbers AS n WHERE n.number = 100 LIMIT 2;
2023-11-01 06:05:42 query_kind:           Select
2023-11-01 06:05:42 thread_ids:           [12594,8108]
2023-11-01 06:05:42 ProfileEvents:        {'Query':1,'SelectQuery':1,'QueriesWithSubqueries':2,'SelectQueriesWithSubqueries':2,'FunctionExecute':1411139,'NetworkReceiveElapsedMicroseconds':104261,'NetworkSendElapsedMicroseconds':1224525,'NetworkSendBytes':17206731,'SelectedRows':57499517845,'SelectedBytes':459996142760,'ContextLock':45,'ContextLockWaitMicroseconds':163,'RWLockAcquiredReadLocks':3,'RealTimeMicroseconds':1739403910,'UserTimeMicroseconds':670498851,'SystemTimeMicroseconds':1000496930,'SoftPageFaults':619545535,'OSCPUWaitMicroseconds':18279244,'OSCPUVirtualTimeMicroseconds':1670924968,'OSReadChars':71256772,'OSWriteChars':232,'LogTrace':5,'LogDebug':1}
2023-11-01 06:05:42 Settings:             {'min_compress_block_size':'206180','max_compress_block_size':'2708203','max_block_size':'40747','max_insert_threads':'4','max_threads':'1','max_read_buffer_size':'758270','connect_timeout_with_failover_ms':'2000','connect_timeout_with_failover_secure_ms':'3000','idle_connection_timeout':'36000','s3_check_objects_after_upload':'1','use_uncompressed_cache':'1','stream_like_engine_allow_direct_select':'1','replication_wait_for_inactive_replica_timeout':'30','min_count_to_compile_aggregate_expression':'0','min_count_to_compile_sort_description':'0','group_by_two_level_threshold':'499798','group_by_two_level_threshold_bytes':'24727943','distributed_aggregation_memory_efficient':'0','enable_memory_bound_merging_of_aggregation_results':'0','allow_nonconst_timezone_arguments':'1','min_chunk_bytes_for_parallel_parsing':'7788527','output_format_parallel_formatting':'0','merge_tree_coarse_index_granularity':'22','min_bytes_to_use_direct_io':'10737418240','min_bytes_to_use_mmap_io':'8853165898','log_queries':'1','insert_quorum_timeout':'60000','http_response_buffer_size':'766804','fsync_metadata':'1','http_send_timeout':'60','http_receive_timeout':'60','opentelemetry_start_trace_probability':'0.1','max_untracked_memory':'1048576','memory_profiler_step':'1048576','log_comment':'01104_distributed_numbers_test.sql','send_logs_level':'warning','optimize_read_in_order':'0','aggregation_in_order_max_block_bytes':'18908436','read_in_order_two_level_merge_threshold':'84','database_atomic_wait_for_drop_and_detach_synchronously':'1','local_filesystem_read_method':'read','remote_filesystem_read_method':'read','local_filesystem_read_prefetch':'1','remote_filesystem_read_prefetch':'0','async_insert_busy_timeout_ms':'5000','enable_filesystem_cache':'1','enable_filesystem_cache_on_write_operations':'1','load_marks_asynchronously':'1','allow_prefetched_read_pool_for_remote_filesystem':'1','allow_prefetched_read_pool_for_local_filesystem':'0','filesystem_prefetch_step_bytes':'104857600','filesystem_prefetch_max_memory_usage':'134217728','filesystem_prefetches_limit':'0','insert_keeper_max_retries':'20','insert_keeper_fault_injection_probability':'0.01','session_timezone':'Asia/Ulaanbaatar'}
2023-11-01 06:05:42 current_database:     test_g067ku0s
2023-11-01 06:05:42 stacktraces:          Thread ID 8108
2023-11-01 06:05:42 ::
2023-11-01 06:05:42 ::
2023-11-01 06:05:42 /usr/bin/clickhouse::__tsan::call_pthread_cancel_with_cleanup(int (*)(void*), void (*)(void*), void*)
2023-11-01 06:05:42 /usr/bin/clickhouse::__interceptor_pthread_cond_timedwait
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__threading_support:341::std::__1::condition_variable::__do_timed_wait(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l>>>)
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__mutex_base:460::bool std::__1::condition_variable::wait_until<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l>>, bool ConcurrentBoundedQueue<DB::Chunk>::popImpl<true>(DB::Chunk&, std::__1::optional<unsigned long>)::'lambda'()>(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l>>> const&, bool ConcurrentBoundedQueue<DB::Chunk>::popImpl<true>(DB::Chunk&, std::__1::optional<unsigned long>)::'lambda'())
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__mutex_base:0::bool ConcurrentBoundedQueue<DB::Chunk>::popImpl<true>(DB::Chunk&, std::__1::optional<unsigned long>)
2023-11-01 06:05:42 ./build_docker/./src/Common/ConcurrentBoundedQueue.h:0::DB::LazyOutputFormat::getChunk(unsigned long)
2023-11-01 06:05:42 ./build_docker/./src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:0::DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)
2023-11-01 06:05:42 ./build_docker/./src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:153::DB::PullingAsyncPipelineExecutor::pull(DB::Block&, unsigned long)
2023-11-01 06:05:42 ./build_docker/./src/Server/TCPHandler.cpp:966::DB::TCPHandler::processOrdinaryQueryWithProcessors()
2023-11-01 06:05:42 ./build_docker/./src/Server/TCPHandler.cpp:0::DB::TCPHandler::runImpl()
2023-11-01 06:05:42 ./build_docker/./src/Server/TCPHandler.cpp:2257::DB::TCPHandler::run()
2023-11-01 06:05:42 ./build_docker/./base/poco/Net/src/TCPServerConnection.cpp:57::Poco::Net::TCPServerConnection::start()
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48::Poco::Net::TCPServerDispatcher::run()
2023-11-01 06:05:42 ./build_docker/./base/poco/Foundation/src/ThreadPool.cpp:202::Poco::PooledThread::run()
2023-11-01 06:05:42 ./build_docker/./base/poco/Foundation/src/Thread.cpp:46::Poco::(anonymous namespace)::RunnableHolder::run()
2023-11-01 06:05:42 ./build_docker/./base/poco/Foundation/include/Poco/SharedPtr.h:231::Poco::ThreadImpl::runnableEntry(void*)
2023-11-01 06:05:42 /usr/bin/clickhouse::__tsan_thread_start_func
2023-11-01 06:05:42 ::
2023-11-01 06:05:42 ::Thread ID 12594
2023-11-01 06:05:42 ./build_docker/./src/Common/StackTrace.cpp:286::StackTrace::StackTrace(ucontext_t const&)
2023-11-01 06:05:42 ./build_docker/./src/Storages/System/StorageSystemStackTrace.cpp:96::DB::(anonymous namespace)::signalHandler(int, siginfo_t*, void*)
2023-11-01 06:05:42 /usr/bin/clickhouse::__tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, int, __sanitizer::__sanitizer_siginfo*, void*)
2023-11-01 06:05:42 /usr/bin/clickhouse::__tsan::ProcessPendingSignalsImpl(__tsan::ThreadState*)
2023-11-01 06:05:42 /usr/bin/clickhouse::__tsan_atomic64_fetch_add
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:173::DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const
2023-11-01 06:05:42 ./build_docker/./src/Functions/IFunction.cpp:0::DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const
2023-11-01 06:05:42 ./build_docker/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:117::DB::ExpressionActions::execute(DB::Block&, unsigned long&, bool) const
2023-11-01 06:05:42 ./build_docker/./src/Processors/Transforms/FilterTransform.cpp:0::DB::FilterTransform::doTransform(DB::Chunk&)
2023-11-01 06:05:42 ./build_docker/./src/Processors/Transforms/FilterTransform.cpp:121::DB::FilterTransform::transform(DB::Chunk&)
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__utility/swap.h:35::DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&)
2023-11-01 06:05:42 ./build_docker/./src/Processors/ISimpleTransform.cpp:99::DB::ISimpleTransform::work()
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/list:588::DB::ExecutionThreadContext::executeTask()
2023-11-01 06:05:42 ./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:272::DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*)
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701::DB::PipelineExecutor::executeImpl(unsigned long, bool)
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:274::DB::PipelineExecutor::execute(unsigned long, bool)
2023-11-01 06:05:42 ./build_docker/./src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:96::void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*)
2023-11-01 06:05:42 ./build_docker/./base/base/../base/wide_integer_impl.h:809::ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>)
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302::void* std::__1::__thread_proxy[abi:v15000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>>(void*)
2023-11-01 06:05:42 /usr/bin/clickhouse::__tsan_thread_start_func
2023-11-01 06:05:42 ::
2023-11-01 06:05:42 ::
2023-11-01 06:05:42 
2023-11-01 06:05:42 Row 2:
2023-11-01 06:05:42 ──────
2023-11-01 06:05:42 is_initial_query:     1
2023-11-01 06:05:42 user:                 default
2023-11-01 06:05:42 query_id:             3b821e81-3d97-4d0a-94ae-4b080a3557bb
2023-11-01 06:05:42 address:              ::1
2023-11-01 06:05:42 port:                 48978
2023-11-01 06:05:42 initial_user:         default
2023-11-01 06:05:42 initial_query_id:     3b821e81-3d97-4d0a-94ae-4b080a3557bb
2023-11-01 06:05:42 initial_address:      ::1
2023-11-01 06:05:42 initial_port:         48978
2023-11-01 06:05:42 interface:            2
2023-11-01 06:05:42 os_user:              
2023-11-01 06:05:42 client_hostname:      
2023-11-01 06:05:42 client_name:          
2023-11-01 06:05:42 client_revision:      0
2023-11-01 06:05:42 client_version_major: 0
2023-11-01 06:05:42 client_version_minor: 0
2023-11-01 06:05:42 client_version_patch: 0
2023-11-01 06:05:42 http_method:          2
2023-11-01 06:05:42 http_user_agent:      
2023-11-01 06:05:42 http_referer:         
2023-11-01 06:05:42 forwarded_for:        
2023-11-01 06:05:42 quota_key:            
2023-11-01 06:05:42 distributed_depth:    0
2023-11-01 06:05:42 elapsed:              1139.953739
2023-11-01 06:05:42 is_cancelled:         0
2023-11-01 06:05:42 is_all_data_sent:     0
2023-11-01 06:05:42 read_rows:            0
2023-11-01 06:05:42 read_bytes:           0
2023-11-01 06:05:42 total_rows_approx:    0
2023-11-01 06:05:42 written_rows:         0
2023-11-01 06:05:42 written_bytes:        0
2023-11-01 06:05:42 memory_usage:         1048671
2023-11-01 06:05:42 peak_memory_usage:    1048671
2023-11-01 06:05:42 query:                DROP DATABASE IF EXISTS test_g067ku0s
2023-11-01 06:05:42 
2023-11-01 06:05:42 query_kind:           Drop
2023-11-01 06:05:42 thread_ids:           [25281]
2023-11-01 06:05:42 ProfileEvents:        {'Query':1,'QueriesWithSubqueries':1,'ContextLock':10,'ContextLockWaitMicroseconds':6,'RWLockAcquiredReadLocks':2,'LogTrace':2,'LogDebug':4}
2023-11-01 06:05:42 Settings:             {'connect_timeout':'20','connect_timeout_with_failover_ms':'2000','connect_timeout_with_failover_secure_ms':'3000','receive_timeout':'20','send_timeout':'20','idle_connection_timeout':'36000','s3_check_objects_after_upload':'1','stream_like_engine_allow_direct_select':'1','replication_wait_for_inactive_replica_timeout':'30','allow_nonconst_timezone_arguments':'1','output_format_parallel_formatting':'0','log_queries':'1','insert_quorum_timeout':'60000','fsync_metadata':'0','http_connection_timeout':'20','http_send_timeout':'20','http_receive_timeout':'20','opentelemetry_start_trace_probability':'0.1','max_untracked_memory':'1048576','memory_profiler_step':'1048576','log_comment':'01104_distributed_numbers_test.sql','database_atomic_wait_for_drop_and_detach_synchronously':'1','async_insert_busy_timeout_ms':'5000','enable_filesystem_cache':'1','enable_filesystem_cache_on_write_operations':'1','load_marks_asynchronously':'1','allow_prefetched_read_pool_for_remote_filesystem':'0','allow_prefetched_read_pool_for_local_filesystem':'0','filesystem_prefetch_max_memory_usage':'1073741824','insert_keeper_max_retries':'20','insert_keeper_fault_injection_probability':'0.01'}
2023-11-01 06:05:42 current_database:     system
2023-11-01 06:05:42 stacktraces:          Thread ID 25281
2023-11-01 06:05:42 ::
2023-11-01 06:05:42 ::
2023-11-01 06:05:42 /usr/bin/clickhouse::__tsan::call_pthread_cancel_with_cleanup(int (*)(void*), void (*)(void*), void*)
2023-11-01 06:05:42 /usr/bin/clickhouse::___interceptor_pthread_cond_wait
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/src/condition_variable.cpp:47::std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__mutex_base:0::DB::DatabaseCatalog::waitTableFinallyDropped(StrongTypedef<wide::integer<128ul, unsigned int>, DB::UUIDTag> const&)
2023-11-01 06:05:42 ./build_docker/./src/Interpreters/InterpreterDropQuery.cpp:91::DB::InterpreterDropQuery::executeToDatabase(DB::ASTDropQuery const&)
2023-11-01 06:05:42 ./build_docker/./src/Interpreters/InterpreterDropQuery.cpp:79::DB::InterpreterDropQuery::execute()
2023-11-01 06:05:42 ./build_docker/./src/Interpreters/executeQuery.cpp:0::DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*)
2023-11-01 06:05:42 ./build_docker/./src/Interpreters/executeQuery.cpp:0::DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (DB::QueryResultDetails const&)>, std::__1::optional<DB::FormatSettings> const&, std::__1::function<void (DB::IOutputFormat&)>)
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:818::DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::__1::optional<DB::CurrentThread::QueryScope>&)
2023-11-01 06:05:42 ./build_docker/./src/Server/HTTPHandler.cpp:1078::DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&)
2023-11-01 06:05:42 ./build_docker/./src/Server/HTTP/HTTPServerConnection.cpp:0::DB::HTTPServerConnection::run()
2023-11-01 06:05:42 ./build_docker/./base/poco/Net/src/TCPServerConnection.cpp:57::Poco::Net::TCPServerConnection::start()
2023-11-01 06:05:42 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48::Poco::Net::TCPServerDispatcher::run()
2023-11-01 06:05:42 ./build_docker/./base/poco/Foundation/src/ThreadPool.cpp:202::Poco::PooledThread::run()
2023-11-01 06:05:42 ./build_docker/./base/poco/Foundation/src/Thread.cpp:46::Poco::(anonymous namespace)::RunnableHolder::run()
2023-11-01 06:05:42 ./build_docker/./base/poco/Foundation/include/Poco/SharedPtr.h:231::Poco::ThreadImpl::runnableEntry(void*)
2023-11-01 06:05:42 /usr/bin/clickhouse::__tsan_thread_start_func
2023-11-01 06:05:42 ::
2023-11-01 06:05:42 ::1381
2023-11-01 06:05:42 Could not attach to process.  If your uid matches the uid of the target
2023-11-01 06:05:42 process, check the setting of /proc/sys/kernel/yama/ptrace_scope, or try
2023-11-01 06:05:42 again as the root user.  For more details, see /etc/sysctl.d/10-ptrace.conf
2023-11-01 06:05:42 warning: process 727 is already traced by process 1381
2023-11-01 06:05:42 ptrace: Inappropriate ioctl for device.
Quit
```


In a subsequent print of all the threads we see it's still generating numbers.
```
2023-11-01 06:05:45 Row 506:
2023-11-01 06:05:45 ────────
2023-11-01 06:05:45 thread_name: QueryPullPipeEx
2023-11-01 06:05:45 thread_id:   12594
2023-11-01 06:05:45 query_id:    4d774025-05ea-42a5-9b36-7f53a7ae7921
2023-11-01 06:05:45 trace:       [94600817468605,94600952125614,94600676062736,94600676062139,94600676377543,94601011426647,94600950724843,94601011428949,94601011427561,94601011570581,94601011517329,94601011513689,94601011512927,94601011590041,94600818500135,94600818525330,94600676029711,139729962605251,139729963199476]
2023-11-01 06:05:45 trace_str:   ./build_docker/./src/Common/StackTrace.cpp:286: StackTrace::StackTrace(ucontext_t const&)
2023-11-01 06:05:45 ./build_docker/./src/Storages/System/StorageSystemStackTrace.cpp:96: DB::(anonymous namespace)::signalHandler(int, siginfo_t*, void*)
2023-11-01 06:05:45 /usr/bin/clickhouse: __tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, int, __sanitizer::__sanitizer_siginfo*, void*)
2023-11-01 06:05:45 /usr/bin/clickhouse: __tsan::ProcessPendingSignalsImpl(__tsan::ThreadState*)
2023-11-01 06:05:45 /usr/bin/clickhouse: __tsan_atomic8_store
2023-11-01 06:05:45 ./build_docker/./src/Processors/ISource.cpp:69: DB::ISource::progress(unsigned long, unsigned long)
2023-11-01 06:05:45 ./build_docker/./src/Storages/System/StorageSystemNumbers.cpp:0: DB::(anonymous namespace)::NumbersSource::generate()
2023-11-01 06:05:45 ./build_docker/./src/Processors/Chunk.h:90: DB::ISource::tryGenerate()
2023-11-01 06:05:45 ./build_docker/./contrib/llvm-project/libcxx/include/optional:344: DB::ISource::work()
2023-11-01 06:05:45 ./build_docker/./contrib/llvm-project/libcxx/include/list:588: DB::ExecutionThreadContext::executeTask()
2023-11-01 06:05:45 ./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:272: DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*)
2023-11-01 06:05:45 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::PipelineExecutor::executeImpl(unsigned long, bool)
2023-11-01 06:05:45 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:274: DB::PipelineExecutor::execute(unsigned long, bool)
2023-11-01 06:05:45 ./build_docker/./src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:96: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*)
2023-11-01 06:05:45 ./build_docker/./base/base/../base/wide_integer_impl.h:809: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>)
2023-11-01 06:05:45 ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__1::__thread_proxy[abi:v15000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, Priority, std::__1::optional<unsigned long>, bool)::'lambda0'()>>(void*)
2023-11-01 06:05:45 /usr/bin/clickhouse: __tsan_thread_start_func
2023-11-01 06:05:45 : 
2023-11-01 06:05:45 : 
2023-11-01 06:05:45 
```

Query logs:
```
2023.11.01 05:36:40.978584 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Debug> executeQuery: (from [::1]:50978) (comment: 01104_distributed_numbers_test.sql) SELECT '100' AS number FROM d_numbers AS n WHERE n.number = 100 LIMIT 2; (stage: Complete)
2023.11.01 05:36:40.986117 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Trace> ContextAccess (default): Access granted: SELECT(number) ON test_g067ku0s.d_numbers
2023.11.01 05:36:40.992734 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Trace> ContextAccess (default): Access granted: SELECT(number) ON test_g067ku0s.d_numbers
2023.11.01 05:36:40.996756 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Trace> ContextAccess (default): Access granted: SELECT(number) ON system.numbers
2023.11.01 05:36:40.997086 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableStateAfterAggregation
2023.11.01 05:36:40.997972 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Trace> InterpreterSelectQuery: WithMergeableStateAfterAggregationAndLimit -> Complete
2023.11.01 06:06:10.583931 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Error> executeQuery: Code: 394. 2023.11.01 06:06:10.583931 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Error> executeQuery: Code: 394. DB::Exception: Query was cancelled. (QUERY_WAS_CANCELLED) (version 23.10.1.1 (official build)) (from [::1]:50978) (comment: 01104_distributed_numbers_test.sql) (in query: SELECT '100' AS number FROM d_numbers AS n WHERE n.number = 100 LIMIT 2;), Stack trace (when copying this message, always include the lines below):

0. ./build_docker/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x000000002043cf03 in /usr/bin/clickhouse
1. ./build_docker/./src/Common/Exception.cpp:103: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000104d9834 in /usr/bin/clickhouse
2. DB::Exception::Exception<char const (&) [20]>(int, char const (&) [20]) @ 0x00000000089824e6 in /usr/bin/clickhouse
3. ./build_docker/./src/Interpreters/ProcessList.cpp:463: DB::QueryStatus::checkTimeLimit() @ 0x000000001a480936 in /usr/bin/clickhouse
4. ./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:197: DB::PipelineExecutor::finalizeExecution() @ 0x000000001be33a88 in /usr/bin/clickhouse
5. ./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:0: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x000000001be336c8 in /usr/bin/clickhouse
6. ./build_docker/./src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:96: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000001be46399 in /usr/bin/clickhouse
7. ./build_docker/./base/base/../base/wide_integer_impl.h:809: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x0000000010621227 in /usr/bin/clickhouse
8. ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x0000000010627492 in /usr/bin/clickhouse
9. __tsan_thread_start_func @ 0x0000000007e4250f in /usr/bin/clickhouse
10. ? @ 0x00007f156ac91ac3 in ?
11. ? @ 0x00007f156ad22bf4 in ?

2023.11.01 06:06:10.585447 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Error> TCPHandler: Code: 394. DB::Exception: Query was cancelled. (QUERY_WAS_CANCELLED), Stack trace (when copying this message, always include the lines below):

0. ./build_docker/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x000000002043cf03 in /usr/bin/clickhouse
1. ./build_docker/./src/Common/Exception.cpp:103: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000104d9834 in /usr/bin/clickhouse
2. DB::Exception::Exception<char const (&) [20]>(int, char const (&) [20]) @ 0x00000000089824e6 in /usr/bin/clickhouse
3. ./build_docker/./src/Interpreters/ProcessList.cpp:463: DB::QueryStatus::checkTimeLimit() @ 0x000000001a480936 in /usr/bin/clickhouse
4. ./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:197: DB::PipelineExecutor::finalizeExecution() @ 0x000000001be33a88 in /usr/bin/clickhouse
5. ./build_docker/./src/Processors/Executors/PipelineExecutor.cpp:0: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x000000001be336c8 in /usr/bin/clickhouse
6. ./build_docker/./src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:96: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000001be46399 in /usr/bin/clickhouse
7. ./build_docker/./base/base/../base/wide_integer_impl.h:809: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x0000000010621227 in /usr/bin/clickhouse
8. ./build_docker/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x0000000010627492 in /usr/bin/clickhouse
9. __tsan_thread_start_func @ 0x0000000007e4250f in /usr/bin/clickhouse
10. ? @ 0x00007f156ac91ac3 in ?
11. ? @ 0x00007f156ad22bf4 in ?

2023.11.01 06:06:10.585677 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Debug> TCPHandler: Processed in 1769.582480399 sec.
2023.11.01 06:06:10.586095 [ 8108 ] {4d774025-05ea-42a5-9b36-7f53a7ae7921} <Debug> MemoryTracker: Peak memory usage (for query): 318.46 KiB.
2023.11.01 06:06:10.586277 [ 8108 ] {} <Debug> TCPHandler: Done processing connection.
2023.11.01 06:06:10.586898 [ 8108 ] {} <Debug> TCP-Session: ea53bc87-a5b7-4280-a086-7b736cf53cd7 Logout, user_id: 94309d50-4f52-5250-31bd-74fecac179db
```

We are waiting to have at least 2 rows so 1 need to come from each shard. Not sure what I'm missing
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
