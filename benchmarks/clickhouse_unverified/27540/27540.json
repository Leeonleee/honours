{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 27540,
  "instance_id": "ClickHouse__ClickHouse-27540",
  "issue_numbers": [
    "27179"
  ],
  "base_commit": "4e1fc79d0ecff8d410a0f8e767b04202698b57e4",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeRangeReader.cpp b/src/Storages/MergeTree/MergeTreeRangeReader.cpp\nindex 464d253a12c1..7517908feb35 100644\n--- a/src/Storages/MergeTree/MergeTreeRangeReader.cpp\n+++ b/src/Storages/MergeTree/MergeTreeRangeReader.cpp\n@@ -836,7 +836,7 @@ Columns MergeTreeRangeReader::continueReadingChain(ReadResult & result, size_t &\n     return columns;\n }\n \n-static void checkCombindeFiltersSize(size_t bytes_in_first_filter, size_t second_filter_size)\n+static void checkCombinedFiltersSize(size_t bytes_in_first_filter, size_t second_filter_size)\n {\n     if (bytes_in_first_filter != second_filter_size)\n         throw Exception(ErrorCodes::LOGICAL_ERROR,\n@@ -846,36 +846,42 @@ static void checkCombindeFiltersSize(size_t bytes_in_first_filter, size_t second\n \n static ColumnPtr combineFilters(ColumnPtr first, ColumnPtr second)\n {\n-    ConstantFilterDescription firsrt_const_descr(*first);\n+    ConstantFilterDescription first_const_descr(*first);\n \n-    if (firsrt_const_descr.always_true)\n+    if (first_const_descr.always_true)\n     {\n-        checkCombindeFiltersSize(first->size(), second->size());\n+        checkCombinedFiltersSize(first->size(), second->size());\n         return second;\n     }\n \n-    if (firsrt_const_descr.always_false)\n+    if (first_const_descr.always_false)\n     {\n-        checkCombindeFiltersSize(0, second->size());\n+        checkCombinedFiltersSize(0, second->size());\n         return first;\n     }\n \n-    auto mut_first = IColumn::mutate(std::move(first));\n-    FilterDescription firsrt_descr(*mut_first);\n+    FilterDescription first_descr(*first);\n \n-    size_t bytes_in_first_filter = countBytesInFilter(*firsrt_descr.data);\n-    checkCombindeFiltersSize(bytes_in_first_filter, second->size());\n+    size_t bytes_in_first_filter = countBytesInFilter(*first_descr.data);\n+    checkCombinedFiltersSize(bytes_in_first_filter, second->size());\n \n     ConstantFilterDescription second_const_descr(*second);\n \n     if (second_const_descr.always_true)\n-        return mut_first;\n+        return first;\n \n     if (second_const_descr.always_false)\n-        return second->cloneResized(mut_first->size());\n+        return second->cloneResized(first->size());\n \n     FilterDescription second_descr(*second);\n-    auto & first_data = const_cast<IColumn::Filter &>(*firsrt_descr.data);\n+\n+    MutableColumnPtr mut_first;\n+    if (first_descr.data_holder)\n+        mut_first = IColumn::mutate(std::move(first_descr.data_holder));\n+    else\n+        mut_first = IColumn::mutate(std::move(first));\n+\n+    auto & first_data = typeid_cast<ColumnUInt8 *>(mut_first.get())->getData();\n     const auto * second_data = second_descr.data->data();\n \n     for (auto & val : first_data)\n@@ -969,7 +975,6 @@ void MergeTreeRangeReader::executePrewhereActionsAndFilterColumns(ReadResult & r\n     {\n         row_level_filter = combineFilters(std::move(row_level_filter), filter);\n         result.setFilter(row_level_filter);\n-\n     }\n     else\n         result.setFilter(filter);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02002_row_level_filter_bug.reference b/tests/queries/0_stateless/02002_row_level_filter_bug.reference\nnew file mode 100644\nindex 000000000000..ea14f6fa1dd0\n--- /dev/null\n+++ b/tests/queries/0_stateless/02002_row_level_filter_bug.reference\n@@ -0,0 +1,3 @@\n+600\n+AWD\t3130\t2021-07-15\t600\n+0\ndiff --git a/tests/queries/0_stateless/02002_row_level_filter_bug.sh b/tests/queries/0_stateless/02002_row_level_filter_bug.sh\nnew file mode 100755\nindex 000000000000..7e19374c123a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02002_row_level_filter_bug.sh\n@@ -0,0 +1,75 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+\n+$CLICKHOUSE_CLIENT --query \"drop table if exists test_table\"\n+$CLICKHOUSE_CLIENT --query \"CREATE TABLE test_table\n+(\n+    a      UInt16 DEFAULT 0,\n+    c      LowCardinality(String) DEFAULT '',\n+    t_date LowCardinality(String) DEFAULT '',\n+    ex     LowCardinality(String) DEFAULT '',\n+    team   LowCardinality(String) DEFAULT '',\n+    g      LowCardinality(String) DEFAULT '',\n+    mt     FixedString(1) DEFAULT ' ',\n+    rw_ts  Int64 DEFAULT 0,\n+    exr_t  Int64 DEFAULT 0,\n+    en     UInt16 DEFAULT 0,\n+    f_t    Int64 DEFAULT 0,\n+    j      UInt64 DEFAULT 0,\n+    oj     UInt64 DEFAULT 0\n+)\n+ENGINE = MergeTree\n+PARTITION BY (c, t_date)\n+ORDER BY (ex, team, g, mt, rw_ts, exr_t, en, f_t, j, oj)\n+SETTINGS index_granularity = 8192\"\n+\n+$CLICKHOUSE_CLIENT --query \"\n+INSERT INTO test_table(t_date, c,team, a) SELECT\n+arrayJoin([toDate('2021-07-15'),toDate('2021-07-16')]) as t_date,\n+arrayJoin(['aur','rua']) as c,\n+arrayJoin(['AWD','ZZZ']) as team,\n+arrayJoin([3183,3106,0,3130,3108,3126,3109,3107,3182,3180,3129,3128,3125,3266]) as a\n+FROM numbers(600);\"\n+\n+$CLICKHOUSE_CLIENT --query \"DROP ROLE IF exists AWD;\"\n+$CLICKHOUSE_CLIENT --query \"create role AWD;\"\n+$CLICKHOUSE_CLIENT --query \"REVOKE ALL ON *.* FROM AWD;\"\n+\n+$CLICKHOUSE_CLIENT --query \"DROP USER IF EXISTS AWD_user;\"\n+$CLICKHOUSE_CLIENT --query \"CREATE USER AWD_user IDENTIFIED WITH plaintext_password BY 'AWD_pwd' DEFAULT ROLE AWD;\"\n+\n+$CLICKHOUSE_CLIENT --query \"GRANT SELECT ON test_table TO AWD;\"\n+\n+$CLICKHOUSE_CLIENT --query \"DROP ROW POLICY IF EXISTS ttt_bu_test_table_AWD ON test_table;\"\n+$CLICKHOUSE_CLIENT --query \"CREATE ROW POLICY ttt_bu_test_table_AWD ON test_table FOR SELECT USING team = 'AWD' TO AWD;\"\n+\n+$CLICKHOUSE_CLIENT  --user=AWD_user --password=AWD_pwd  --query \"\n+SELECT count() AS count\n+ FROM test_table\n+WHERE\n+ t_date = '2021-07-15' AND c = 'aur' AND a=3130;\n+\"\n+\n+$CLICKHOUSE_CLIENT  --user=AWD_user --password=AWD_pwd  --query \"\n+SELECT\n+    team,\n+    a,\n+    t_date,\n+    count() AS count\n+FROM test_table\n+WHERE (t_date = '2021-07-15') AND (c = 'aur') AND (a = 3130)\n+GROUP BY\n+    team,\n+    a,\n+    t_date;\n+\"\n+\n+$CLICKHOUSE_CLIENT  --user=AWD_user --password=AWD_pwd  --query \"\n+SELECT count() AS count\n+FROM test_table\n+WHERE (t_date = '2021-07-15') AND (c = 'aur') AND (a = 313)\n+\"\ndiff --git a/tests/queries/skip_list.json b/tests/queries/skip_list.json\nindex 4ba22dbee728..a14e18e006f9 100644\n--- a/tests/queries/skip_list.json\n+++ b/tests/queries/skip_list.json\n@@ -516,6 +516,15 @@\n         \"01925_test_storage_merge_aliases\",\n         \"01933_client_replxx_convert_history\", /// Uses non unique history file\n         \"01902_table_function_merge_db_repr\",\n-        \"01946_test_zstd_decompression_with_escape_sequence_at_the_end_of_buffer\"\n+        \"01946_test_zstd_decompression_with_escape_sequence_at_the_end_of_buffer\",\n+        \"01946_test_wrong_host_name_access\",\n+        \"01493_alter_remove_properties_zookeeper\",\n+        \"00510_materizlized_view_and_deduplication_zookeeper\", /// static UUID\n+        \"00509_extended_storage_definition_syntax_zookeeper\", /// leftovers\n+        \"00083_create_merge_tree_zookeeper\", /// leftovers\n+        \"01532_execute_merges_on_single_replica\", /// static zk path\n+        \"01530_drop_database_atomic_sync\", /// creates database\n+        \"02001_add_default_database_to_system_users\", ///create user\n+        \"02002_row_level_filter_bug\" ///create user\n     ]\n }\n",
  "problem_statement": "ROW POLICY: Inconsistent number of columns \n```sql\r\nCREATE TABLE default.test_table\r\n(\r\n    `a`      UInt16 DEFAULT 0,\r\n    `c`      LowCardinality(String) DEFAULT '',\r\n    `t_date` LowCardinality(String) DEFAULT '',\r\n    `ex`     LowCardinality(String) DEFAULT '',\r\n    `team`   LowCardinality(String) DEFAULT '',\r\n    `g`      LowCardinality(String) DEFAULT '',\r\n    `mt`     FixedString(1) DEFAULT ' ',\r\n    `rw_ts`  Int64 DEFAULT 0,\r\n    `exr_t`  Int64 DEFAULT 0,\r\n    `en`     UInt16 DEFAULT 0,\r\n    `f_t`    Int64 DEFAULT 0,\r\n    `j`      UInt64 DEFAULT 0,\r\n    `oj`     UInt64 DEFAULT 0\r\n)\r\nENGINE = MergeTree\r\nPARTITION BY (c, t_date)\r\nORDER BY (ex, team, g, mt, rw_ts, exr_t, en, f_t, j, oj)\r\nSETTINGS index_granularity = 8192;\r\n\r\n\r\nINSERT INTO default.test_table(t_date, c,team, a) SELECT \r\narrayJoin([toDate('2021-07-15'),toDate('2021-07-16')]) as t_date,\r\narrayJoin(['aur','rua']) as c,\r\narrayJoin(['AWD','ZZZ']) as team,\r\narrayJoin([3183,3106,0,3130,3108,3126,3109,3107,3182,3180,3129,3128,3125,3266]) as a\r\nFROM numbers(60000);\r\n\r\nSELECT\r\n    team,\r\n    a,\r\n    t_date,\r\n    count() AS count\r\nFROM default.test_table\r\nWHERE (t_date = '2021-07-15') AND (c = 'aur') AND (a = 3130) AND (team = 'AWD')\r\nGROUP BY\r\n    team,\r\n    a,\r\n    t_date;\r\n\r\n-- \u250c\u2500team\u2500\u252c\u2500\u2500\u2500\u2500a\u2500\u252c\u2500t_date\u2500\u2500\u2500\u2500\u2500\u252c\u2500count\u2500\u2510\r\n-- \u2502 AWD  \u2502 3130 \u2502 2021-07-15 \u2502 60000 \u2502\r\n-- \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\n--- cat << EOF > /etc/clickhouse-server/users.d/access_management.xml\r\n--- <yandex>\r\n---     <users><default><access_management>1</access_management></default></users>\r\n--- </yandex>\r\n--- EOF\r\n\r\nDROP ROLE IF exists AWD;\r\ncreate role AWD;\r\nREVOKE ALL ON *.* FROM AWD;\r\n\r\nDROP USER IF EXISTS AWD_user;\r\nCREATE USER AWD_user\r\n    IDENTIFIED WITH SHA256_PASSWORD BY 'AWD_pwd'\r\n    DEFAULT ROLE AWD;\r\n\r\nGRANT SELECT ON default.test_table TO AWD;\r\n\r\nDROP ROW POLICY IF EXISTS ttt_bu_test_table_AWD ON default.test_table;\r\nCREATE ROW POLICY ttt_bu_test_table_AWD ON default.test_table FOR SELECT USING team = 'AWD' TO AWD;\r\n\r\n--- exit;\r\n--- clickhouse-client --user=AWD_user --password=AWD_pwd\r\n\r\nSELECT count() AS count\r\n FROM default.test_table\r\nWHERE\r\n t_date = '2021-07-15' AND c = 'aur' AND a=3130;\r\n\r\n\r\n-- \u250c\u2500\u2500count\u2500\u2510\r\n-- \u2502 835784 \u2502 ????? \r\n-- \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\nSELECT\r\n    team,\r\n    a,\r\n    t_date,\r\n    count() AS count\r\nFROM default.test_table\r\nWHERE (t_date = '2021-07-15') AND (c = 'aur') AND (a = 3130)\r\nGROUP BY\r\n    team,\r\n    a,\r\n    t_date;\r\n\r\n\r\n-- \u250c\u2500team\u2500\u252c\u2500\u2500\u2500\u2500a\u2500\u252c\u2500t_date\u2500\u2500\u2500\u2500\u2500\u252c\u2500count\u2500\u2510\r\n-- \u2502 AWD  \u2502 3128 \u2502 2021-07-15 \u2502 59675 \u2502\r\n-- \u2502 AWD  \u2502 3183 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2502 AWD  \u2502 3107 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2502 AWD  \u2502 3182 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2502 AWD  \u2502 3106 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2502 AWD  \u2502 3126 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2502 AWD  \u2502 3129 \u2502 2021-07-15 \u2502 59675 \u2502\r\n-- \u2502 AWD  \u2502    0 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2502 AWD  \u2502 3266 \u2502 2021-07-15 \u2502 59675 \u2502\r\n-- \u2502 AWD  \u2502 3108 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2502 AWD  \u2502 3130 \u2502 2021-07-15 \u2502 60000 \u2502\r\n-- \u2502 AWD  \u2502 3125 \u2502 2021-07-15 \u2502 59675 \u2502\r\n-- \u2502 AWD  \u2502 3109 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2502 AWD  \u2502 3180 \u2502 2021-07-15 \u2502 59676 \u2502\r\n-- \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n \r\n\r\nSELECT count() AS count\r\nFROM default.test_table\r\nWHERE (t_date = '2021-07-15') AND (c = 'aur') AND (a = 313)\r\n\r\n\r\n-- Received exception from server (version 21.9.1):\r\n-- Code: 49. DB::Exception: Received from localhost:9000. DB::Exception: Inconsistent number of columns got from MergeTreeRangeReader. Have 1 in sample block and 0 columns in list: While executing MergeTreeThread. (LOGICAL_ERROR)\r\n```\r\n\r\n/cc @KochetovNicolai\n",
  "hints_text": "",
  "created_at": "2021-08-10T21:31:49Z",
  "modified_files": [
    "src/Storages/MergeTree/MergeTreeRangeReader.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02002_row_level_filter_bug.reference",
    "b/tests/queries/0_stateless/02002_row_level_filter_bug.sh",
    "tests/queries/skip_list.json"
  ]
}