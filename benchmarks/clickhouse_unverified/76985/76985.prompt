You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
`allow_nullable_key = 1`: SEGV on MergeTree table with NULL in ordering
### Describe the bug

This is regression since v25.1

### How to reproduce

Run Fiddle: https://fiddle.clickhouse.com/a6fc455c-fc59-4766-b34c-3eb60c3ce688

### Error message and/or stacktrace

Stack trace on debug build:

```
<Fatal> : Logical error: 'Bad cast from type DB::ColumnConst to DB::ColumnNullable'.
<Fatal> : Stack trace (when copying this message, always include the lines below):

0. contrib/llvm-project/libcxx/include/__exception/exception.h:106: Poco::Exception::Exception(String const&, int) @ 0x000000001a713cb2
1. src/Common/Exception.cpp:108: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f8698d9
2. src/Common/Exception.h:114: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009e828ac
3. src/Common/Exception.h:132: DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009e8190b
4. src/Common/assert_cast.h:48: DB::ColumnNullable const& assert_cast<DB::ColumnNullable const&, DB::IColumn const&>(DB::IColumn const&) @ 0x000000000a8ad26e
5. src/DataTypes/Serializations/SerializationNullable.cpp:172: DB::SerializationNullable::serializeBinary(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x0000000013896221
6. src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:321: DB::MergeTreeDataPartWriterOnDisk::calculateAndSerializePrimaryIndexRow(DB::Block const&, unsigned long) @ 0x0000000015f8eef1
7. src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:351: DB::MergeTreeDataPartWriterOnDisk::calculateAndSerializePrimaryIndex(DB::Block const&, std::vector<DB::Granule, std::allocator<DB::Granule>> const&) @ 0x0000000015f8f3e0
8. src/Storages/MergeTree/MergeTreeDataPartWriterCompact.cpp:214: DB::MergeTreeDataPartWriterCompact::writeDataBlockPrimaryIndexAndSkipIndices(DB::Block const&, std::vector<DB::Granule, std::allocator<DB::Granule>> const&) @ 0x0000000015f88738
9. src/Storages/MergeTree/MergeTreeDataPartWriterCompact.cpp:285: DB::MergeTreeDataPartWriterCompact::fillDataChecksums(DB::MergeTreeDataPartChecksums&) @ 0x0000000015f88fc4
10. src/Storages/MergeTree/MergeTreeDataPartWriterCompact.cpp:453: DB::MergeTreeDataPartWriterCompact::fillChecksums(DB::MergeTreeDataPartChecksums&, std::unordered_set<String, std::hash<String>, std::equal_to<String>, std::allocator<String>>&) @ 0x0000000015f899df
11. src/Storages/MergeTree/MergedBlockOutputStream.cpp:214: DB::MergedBlockOutputStream::finalizePartAsync(std::shared_ptr<DB::IMergeTreeDataPart> const&, bool, DB::NamesAndTypesList const*, DB::MergeTreeDataPartChecksums*, std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>>*) @ 0x00000000160dc432
12. src/Storages/MergeTree/MergeTreeDataWriter.cpp:783: DB::MergeTreeDataWriter::writeTempPartImpl(DB::BlockWithPartition&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::Context const>, long, bool) @ 0x0000000015fc6ea5
13. src/Storages/MergeTree/MergeTreeDataWriter.cpp:484: DB::MergeTreeDataWriter::writeTempPart(DB::BlockWithPartition&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::Context const>) @ 0x0000000015fc34bf
14. src/Storages/MergeTree/MergeTreeSink.cpp:127: DB::MergeTreeSink::consume(DB::Chunk&) @ 0x000000001622fcd4
15. src/Processors/Sinks/SinkToStorage.cpp:10: DB::SinkToStorage::onConsume(DB::Chunk) @ 0x00000000168a3f73
16. src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: void std::__function::__policy_invoker<void ()>::__call_impl[abi:se190107]<std::__function::__default_alloc_func<DB::ExceptionKeepingTransform::work()::$_1, void ()>>(std::__function::__policy_storage const*) @ 0x00000000167c0549
17. contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000167c03b5
18. src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: DB::ExceptionKeepingTransform::work() @ 0x00000000167bfebe
19. src/Processors/Executors/ExecutionThreadContext.cpp:53: DB::ExecutionThreadContext::executeTask() @ 0x000000001657082f
20. src/Processors/Executors/PipelineExecutor.cpp:296: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000016565925
21. src/Processors/Executors/PipelineExecutor.cpp:170: DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x0000000016564ec7
22. src/Processors/Executors/PushingPipelineExecutor.cpp:131: DB::PushingPipelineExecutor::finish() @ 0x000000001657703f
23. src/Server/TCPHandler.cpp:1128: DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x00000000164b28cc
24. src/Server/TCPHandler.cpp:673: DB::TCPHandler::runImpl() @ 0x00000000164a845c
25. src/Server/TCPHandler.cpp:2629: DB::TCPHandler::run() @ 0x00000000164c04b9
26. base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x000000001a7b3667
27. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000001a7b3b3e
28. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000001a7611d2
29. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001a75ee0f
30. ? @ 0x00007ffff7ca1e2e
31. ? @ 0x00007ffff7d33a4
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
