{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 10684,
  "instance_id": "ClickHouse__ClickHouse-10684",
  "issue_numbers": [
    "7939"
  ],
  "base_commit": "28c122b0c5a3fb3a45c36bb7161d74c03a9c2070",
  "patch": "diff --git a/contrib/poco b/contrib/poco\nindex 7d605a1ae5d8..9b347d4ab71e 160000\n--- a/contrib/poco\n+++ b/contrib/poco\n@@ -1,1 +1,1 @@\n-Subproject commit 7d605a1ae5d878294f91f68feb62ae51e9a04426\n+Subproject commit 9b347d4ab71e4436d8215aace978024e93462731\ndiff --git a/programs/server/HTTPHandler.cpp b/programs/server/HTTPHandler.cpp\nindex 1e2695709f95..618d137f3b75 100644\n--- a/programs/server/HTTPHandler.cpp\n+++ b/programs/server/HTTPHandler.cpp\n@@ -567,7 +567,6 @@ void HTTPHandler::processQuery(\n             try\n             {\n                 char b;\n-                //FIXME looks like MSG_DONTWAIT is useless because of POCO_BROKEN_TIMEOUTS\n                 int status = socket.receiveBytes(&b, 1, MSG_DONTWAIT | MSG_PEEK);\n                 if (status == 0)\n                     context.killCurrentQuery();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/00834_cancel_http_readonly_queries_on_client_close.sh b/tests/queries/0_stateless/00834_cancel_http_readonly_queries_on_client_close.sh\nindex ee56d41f3578..e679bcc33c79 100755\n--- a/tests/queries/0_stateless/00834_cancel_http_readonly_queries_on_client_close.sh\n+++ b/tests/queries/0_stateless/00834_cancel_http_readonly_queries_on_client_close.sh\n@@ -10,3 +10,10 @@ do\n     ${CLICKHOUSE_CURL} -sS --data \"SELECT count() FROM system.processes WHERE query_id = 'cancel_http_readonly_queries_on_client_close'\" \"${CLICKHOUSE_URL}\" | grep '0' && break\n     sleep 0.2\n done\n+\n+${CLICKHOUSE_CURL} -sS -X POST \"${CLICKHOUSE_URL}&session_id=test_00834_session&readonly=2&cancel_http_readonly_queries_on_client_close=1\" -d \"CREATE TEMPORARY TABLE table_tmp AS SELECT 1 FORMAT JSON\"\n+${CLICKHOUSE_CURL} -sS \"${CLICKHOUSE_URL}&session_id=test_00834_session&query=DROP+TEMPORARY+TABLE+table_tmp\"\n+\n+url_https=\"https://${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT_HTTPS}/?session_id=test_00834_session\"\n+${CLICKHOUSE_CURL} -sSk -X POST \"$url_https&readonly=2&cancel_http_readonly_queries_on_client_close=1\" -d \"CREATE TEMPORARY TABLE table_tmp AS SELECT 1 FORMAT JSON\"\n+${CLICKHOUSE_CURL} -sSk \"$url_https&session_id=test_00834_session&query=DROP+TEMPORARY+TABLE+table_tmp\"\n",
  "problem_statement": "'cancel_http_readonly_queries_on_client_close' setting cause request stuck\nThere are non-expected behavior with a two settings combination:\r\n```\r\ncancel_http_readonly_queries_on_client_close = 1\r\nreadonly > 0\r\n```\r\nWith this settings a query, sent via HTTP interface, will stuck and won't be processed.\r\n\r\nExample:\r\n1) works OK\r\n```\r\nreadonly = 0\r\ncancel_http_readonly_queries_on_client_close = 1\r\n```\r\n\r\n```\r\n$ echo \"select name,value from system.settings where name like '%readonly%' FORMAT TSV\" | curl --netrc-file netrc-test  -v -m10 'http://<host>:8123' --show-error -f  -d @-; echo $?\r\n* Rebuilt URL to: http://<host>:8123/\r\n*   Trying <ip>...\r\n* Connected to <host> (<ip>) port 8123 (#0)\r\n* Server auth using Basic with user '<user>'\r\n> POST / HTTP/1.1\r\n> Host: <host>:8123\r\n> Authorization: Basic <>\r\n> User-Agent: curl/7.47.0\r\n> Accept: */*\r\n> Content-Length: 78\r\n> Content-Type: application/x-www-form-urlencoded\r\n> \r\n* upload completely sent off: 78 out of 78 bytes\r\n< HTTP/1.1 200 OK\r\n< Date: Wed, 27 Nov 2019 05:15:43 GMT\r\n< Connection: Keep-Alive\r\n< Content-Type: text/tab-separated-values; charset=UTF-8\r\n< X-ClickHouse-Server-Display-Name: <host>\r\n< Transfer-Encoding: chunked\r\n< X-ClickHouse-Query-Id: fe705d80-9ad7-40cc-89e5-5b2b1cb35e32\r\n< Keep-Alive: timeout=3\r\n< X-ClickHouse-Summary: {\"read_rows\":\"240\",\"read_bytes\":\"36541\",\"written_rows\":\"0\",\"written_bytes\":\"0\",\"total_rows_to_read\":\"0\"}\r\n< \r\nreadonly\t0\r\ncancel_http_readonly_queries_on_client_close\t1\r\n* Connection #0 to host <host> left intact\r\n0\r\n```\r\n\r\n2) doesn't work\r\n```\r\nreadonly = 2\r\ncancel_http_readonly_queries_on_client_close = 1\r\n```\r\n```\r\n$ echo \"select name,value from system.settings where name like '%readonly%' FORMAT TSV\" | curl --netrc-file netrc-test  -v -m10 'http://<host>:8123' --show-error -f  -d @-; echo $?\r\n* Rebuilt URL to: http://<host>:8123/\r\n*   Trying <ip>...\r\n* Connected to <host> (<ip>) port 8123 (#0)\r\n* Server auth using Basic with user '<user>'\r\n> POST / HTTP/1.1\r\n> Host: <host>:8123\r\n> Authorization: Basic <>\r\n> User-Agent: curl/7.47.0\r\n> Accept: */*\r\n> Content-Length: 78\r\n> Content-Type: application/x-www-form-urlencoded\r\n> \r\n* upload completely sent off: 78 out of 78 bytes\r\n* Operation timed out after 10001 milliseconds with 0 bytes received\r\n* Closing connection 0\r\ncurl: (28) Operation timed out after 10001 milliseconds with 0 bytes received\r\n28\r\n```\r\n\r\n```\r\n2019.11.27 12:09:56.116071 [ 66 ] {} <Trace> HTTPHandler-factory: HTTP Request for HTTPHandler-factory. Method: POST, Address: <client_ip>:49976, User-Agent: curl/7.47.0, Length: 78, Content Type: applica\r\ntion/x-www-form-urlencoded, Transfer Encoding: identity                                                                                                                                                     \r\n2019.11.27 12:09:56.116223 [ 66 ] {} <Trace> HTTPHandler: Request URI: /                                                                                                                                    \r\n2019.11.27 12:09:56.116594 [ 66 ] {01ba4101-4a00-4105-977c-8dae920181c9} <Debug> executeQuery: (from <client_ip>:49976, user: <user>) select name,value from system.settings where name like '%r\r\neadonly%' FORMAT TSV                                                                                                                                                                                        \r\n2019.11.27 12:09:56.117509 [ 66 ] {01ba4101-4a00-4105-977c-8dae920181c9} <Trace> InterpreterSelectQuery: FetchColumns -> Complete                                                                           \r\n2019.11.27 12:09:56.117643 [ 66 ] {01ba4101-4a00-4105-977c-8dae920181c9} <Debug> executeQuery: Query pipeline:                                                                                              \r\nExpression                                                                                                                                                                                                  \r\n Expression                                                                                                                                                                                                 \r\n  Filter                                                                                                                                                                                                    \r\n   One                                                           \r\n\r\n2019.11.27 12:10:06.111148 [ 66 ] {01ba4101-4a00-4105-977c-8dae920181c9} <Error> executeQuery: Code: 394, e.displayText() = DB::Exception: Query was cancelled (version 19.17.4.11 (official build)) (from <client_ip>:49976) (in query: select name,value from system.settings where name like '%readonly%' FORMAT TSV), Stack trace:\r\n\r\n0. 0x5623fa47ef60 StackTrace::StackTrace() /usr/bin/clickhouse\r\n1. 0x5623fa47ed35 DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) /usr/bin/clickhouse\r\n2. 0x5623fa179479 ? /usr/bin/clickhouse\r\n3. 0x5623fd6d4f27 DB::IBlockInputStream::read() /usr/bin/clickhouse\r\n4. 0x5623fd6f350b DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::atomic<bool>*) /usr/bin/clickhouse\r\n5. 0x5623fd969827 DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::function<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>, std:\r\n:function<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>) /usr/bin/clickhouse\r\n6. 0x5623fa513dee DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) /usr/bin/clickhouse\r\n7. 0x5623fa516169 DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) /usr/bin/clickhouse\r\n8. 0x5623fe4080e9 Poco::Net::HTTPServerConnection::run() /usr/bin/clickhouse\r\n9. 0x5623fe404660 Poco::Net::TCPServerConnection::start() /usr/bin/clickhouse\r\n10. 0x5623fe404d7d Poco::Net::TCPServerDispatcher::run() /usr/bin/clickhouse\r\n11. 0x5623ffadaef1 Poco::PooledThread::run() /usr/bin/clickhouse\r\n12. 0x5623ffad8c9c Poco::ThreadImpl::runnableEntry(void*) /usr/bin/clickhouse\r\n13. 0x56240024ee00 ? /usr/bin/clickhouse\r\n14. 0x7f6e87d9f494 start_thread /lib/x86_64-linux-gnu/libpthread-2.24.so\r\n15. 0x7f6e876d5aff clone /lib/x86_64-linux-gnu/libc-2.24.so\r\n\r\n2019.11.27 12:10:06.111614 [ 66 ] {01ba4101-4a00-4105-977c-8dae920181c9} <Error> HTTPHandler: Code: 394, e.displayText() = DB::Exception: Query was cancelled, Stack trace:\r\n\r\n0. 0x5623fa47ef60 StackTrace::StackTrace() /usr/bin/clickhouse\r\n1. 0x5623fa47ed35 DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) /usr/bin/clickhouse\r\n2. 0x5623fa179479 ? /usr/bin/clickhouse\r\n3. 0x5623fd6d4f27 DB::IBlockInputStream::read() /usr/bin/clickhouse\r\n4. 0x5623fd6f350b DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::atomic<bool>*) /usr/bin/clickhouse\r\n5. 0x5623fd969827 DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::function<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>, std:\r\n:function<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>) /usr/bin/clickhouse\r\n6. 0x5623fa513dee DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) /usr/bin/clickhouse\r\n7. 0x5623fa516169 DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) /usr/bin/clickhouse\r\n8. 0x5623fe4080e9 Poco::Net::HTTPServerConnection::run() /usr/bin/clickhouse\r\n9. 0x5623fe404660 Poco::Net::TCPServerConnection::start() /usr/bin/clickhouse\r\n10. 0x5623fe404d7d Poco::Net::TCPServerDispatcher::run() /usr/bin/clickhouse\r\n11. 0x5623ffadaef1 Poco::PooledThread::run() /usr/bin/clickhouse\r\n12. 0x5623ffad8c9c Poco::ThreadImpl::runnableEntry(void*) /usr/bin/clickhouse\r\n13. 0x56240024ee00 ? /usr/bin/clickhouse\r\n14. 0x7f6e87d9f494 start_thread /lib/x86_64-linux-gnu/libpthread-2.24.so\r\n15. 0x7f6e876d5aff clone /lib/x86_64-linux-gnu/libc-2.24.so\r\n (version 19.17.4.11 (official build))\r\n```\r\n\r\nThis problem present in version `19.17.4.11`, `19.15.3.6` (i tested this two only)\r\nDo not present in version: `19.13.4.32`\r\n\r\n\r\n* Which interface to use, if matters\r\nHTTP\r\n* Non-default settings, if any\r\nThe full list of non-default settings, just in case\r\n```\r\n:) select name,value from system.settings where changed=1;\r\n\r\n\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500value\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 use_uncompressed_cache                       \u2502 0           \u2502\r\n\u2502 load_balancing                               \u2502 random      \u2502\r\n\u2502 distributed_aggregation_memory_efficient     \u2502 1           \u2502\r\n\u2502 max_parallel_replicas                        \u2502 1           \u2502\r\n\u2502 log_queries                                  \u2502 1           \u2502\r\n\u2502 enable_http_compression                      \u2502 1           \u2502\r\n\u2502 input_format_skip_unknown_fields             \u2502 1           \u2502\r\n\u2502 send_progress_in_http_headers                \u2502 1           \u2502\r\n\u2502 http_headers_progress_interval_ms            \u2502 1000        \u2502\r\n\u2502 allow_distributed_ddl                        \u2502 0           \u2502\r\n\u2502 readonly                                     \u2502 2           \u2502\r\n\u2502 max_memory_usage                             \u2502 0           \u2502\r\n\u2502 max_memory_usage_for_user                    \u2502 77309411328 \u2502\r\n\u2502 allow_ddl                                    \u2502 0           \u2502\r\n\u2502 cancel_http_readonly_queries_on_client_close \u2502 1           \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n15 rows in set. Elapsed: 0.003 sec. \r\n```\r\n\r\nThus, we can't use `cancel_http_readonly_queries_on_client_close = 1` setting with a `readonly` accounts now\r\n\n",
  "hints_text": "Probably duplicate of https://github.com/ClickHouse/ClickHouse/issues/7019 and https://github.com/ClickHouse/ClickHouse/issues/7736",
  "created_at": "2020-05-05T20:41:12Z",
  "modified_files": [
    "contrib/poco",
    "programs/server/HTTPHandler.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/00834_cancel_http_readonly_queries_on_client_close.sh"
  ]
}