diff --git a/tests/queries/0_stateless/00555_hasAll_hasAny.reference b/tests/queries/0_stateless/00555_hasAll_hasAny.reference
index b33700bfa029..5608f7b970e2 100644
--- a/tests/queries/0_stateless/00555_hasAll_hasAny.reference
+++ b/tests/queries/0_stateless/00555_hasAll_hasAny.reference
@@ -34,10 +34,6 @@
 1
 0
 -
-0
-0
-0
-0
 -
 0
 1
diff --git a/tests/queries/0_stateless/00555_hasAll_hasAny.sql b/tests/queries/0_stateless/00555_hasAll_hasAny.sql
index 9df356dce2e9..c8a6c3cecbd2 100644
--- a/tests/queries/0_stateless/00555_hasAll_hasAny.sql
+++ b/tests/queries/0_stateless/00555_hasAll_hasAny.sql
@@ -39,10 +39,10 @@ select hasAny(['a', 'b'], ['a', 'c']);
 select hasAll(['a', 'b'], ['a', 'c']);
 select '-';
 
-select hasAny([1], ['a']);
-select hasAll([1], ['a']);
-select hasAll([[1, 2], [3, 4]], ['a', 'c']);
-select hasAny([[1, 2], [3, 4]], ['a', 'c']);
+select hasAny([1], ['a']); -- { serverError 386 }
+select hasAll([1], ['a']); -- { serverError 386 }
+select hasAll([[1, 2], [3, 4]], ['a', 'c']); -- { serverError 386 }
+select hasAny([[1, 2], [3, 4]], ['a', 'c']); -- { serverError 386 }
 select '-';
 
 select hasAll([[1, 2], [3, 4]], [[1, 2], [3, 5]]);
diff --git a/tests/queries/0_stateless/00555_hasSubstr.reference b/tests/queries/0_stateless/00555_hasSubstr.reference
index 1051fa28d6c4..de97d19c9324 100644
--- a/tests/queries/0_stateless/00555_hasSubstr.reference
+++ b/tests/queries/0_stateless/00555_hasSubstr.reference
@@ -20,8 +20,6 @@
 0
 1
 -
-0
-0
 1
 1
 0
diff --git a/tests/queries/0_stateless/00555_hasSubstr.sql b/tests/queries/0_stateless/00555_hasSubstr.sql
index 04c70e4a43b6..5f90a69c546d 100644
--- a/tests/queries/0_stateless/00555_hasSubstr.sql
+++ b/tests/queries/0_stateless/00555_hasSubstr.sql
@@ -25,8 +25,8 @@ select hasSubstr(['a', 'b'], ['a', 'c']);
 select hasSubstr(['a', 'c', 'b'], ['a', 'c']);
 select '-';
 
-select hasSubstr([1], ['a']);
-select hasSubstr([[1, 2], [3, 4]], ['a', 'c']);
+select hasSubstr([1], ['a']); -- { serverError 386 }
+select hasSubstr([[1, 2], [3, 4]], ['a', 'c']); -- { serverError 386 }
 select hasSubstr([[1, 2], [3, 4], [5, 8]], [[3, 4]]);
 select hasSubstr([[1, 2], [3, 4], [5, 8]], [[3, 4], [5, 8]]);
 select hasSubstr([[1, 2], [3, 4], [5, 8]], [[1, 2], [5, 8]]);
diff --git a/tests/queries/0_stateless/00700_decimal_complex_types.reference b/tests/queries/0_stateless/00700_decimal_complex_types.reference
index e81dd94513f5..9c7c6fefefdb 100644
--- a/tests/queries/0_stateless/00700_decimal_complex_types.reference
+++ b/tests/queries/0_stateless/00700_decimal_complex_types.reference
@@ -39,9 +39,33 @@ Tuple(Decimal(9, 1), Decimal(18, 1), Decimal(38, 1))	Decimal(9, 1)	Decimal(18, 1
 1	0
 1	0
 1	0
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
 1	0
 2	0
 3	0
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
 [0.100,0.200,0.300,0.400,0.500,0.600]	Array(Decimal(18, 3))
 [0.100,0.200,0.300,0.700,0.800,0.900]	Array(Decimal(38, 3))
 [0.400,0.500,0.600,0.700,0.800,0.900]	Array(Decimal(38, 3))
diff --git a/tests/queries/0_stateless/00700_decimal_complex_types.sql b/tests/queries/0_stateless/00700_decimal_complex_types.sql
index 2d506b124a2d..f4b29e77be92 100644
--- a/tests/queries/0_stateless/00700_decimal_complex_types.sql
+++ b/tests/queries/0_stateless/00700_decimal_complex_types.sql
@@ -58,35 +58,35 @@ SELECT has(a, toDecimal32(0.1, 3)), has(a, toDecimal32(1.0, 3)) FROM decimal;
 SELECT has(b, toDecimal64(0.4, 3)), has(b, toDecimal64(1.0, 3)) FROM decimal;
 SELECT has(c, toDecimal128(0.7, 3)), has(c, toDecimal128(1.0, 3)) FROM decimal;
 
-SELECT has(a, toDecimal32(0.1, 2)) FROM decimal; -- { serverError 43 }
-SELECT has(a, toDecimal32(0.1, 4)) FROM decimal; -- { serverError 43 }
-SELECT has(a, toDecimal64(0.1, 3)) FROM decimal; -- { serverError 43 }
-SELECT has(a, toDecimal128(0.1, 3)) FROM decimal; -- { serverError 43 }
-SELECT has(b, toDecimal32(0.4, 3)) FROM decimal; -- { serverError 43 }
-SELECT has(b, toDecimal64(0.4, 2)) FROM decimal; -- { serverError 43 }
-SELECT has(b, toDecimal64(0.4, 4)) FROM decimal; -- { serverError 43 }
-SELECT has(b, toDecimal128(0.4, 3)) FROM decimal; -- { serverError 43 }
-SELECT has(c, toDecimal32(0.7, 3)) FROM decimal; -- { serverError 43 }
-SELECT has(c, toDecimal64(0.7, 3)) FROM decimal; -- { serverError 43 }
-SELECT has(c, toDecimal128(0.7, 2)) FROM decimal; -- { serverError 43 }
-SELECT has(c, toDecimal128(0.7, 4)) FROM decimal; -- { serverError 43 }
+SELECT has(a, toDecimal32(0.1, 2)) FROM decimal;
+SELECT has(a, toDecimal32(0.1, 4)) FROM decimal;
+SELECT has(a, toDecimal64(0.1, 3)) FROM decimal;
+SELECT has(a, toDecimal128(0.1, 3)) FROM decimal;
+SELECT has(b, toDecimal32(0.4, 3)) FROM decimal;
+SELECT has(b, toDecimal64(0.4, 2)) FROM decimal;
+SELECT has(b, toDecimal64(0.4, 4)) FROM decimal;
+SELECT has(b, toDecimal128(0.4, 3)) FROM decimal;
+SELECT has(c, toDecimal32(0.7, 3)) FROM decimal;
+SELECT has(c, toDecimal64(0.7, 3)) FROM decimal;
+SELECT has(c, toDecimal128(0.7, 2)) FROM decimal;
+SELECT has(c, toDecimal128(0.7, 4)) FROM decimal;
 
 SELECT indexOf(a, toDecimal32(0.1, 3)), indexOf(a, toDecimal32(1.0, 3)) FROM decimal;
 SELECT indexOf(b, toDecimal64(0.5, 3)), indexOf(b, toDecimal64(1.0, 3)) FROM decimal;
 SELECT indexOf(c, toDecimal128(0.9, 3)), indexOf(c, toDecimal128(1.0, 3)) FROM decimal;
 
-SELECT indexOf(a, toDecimal32(0.1, 2)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(a, toDecimal32(0.1, 4)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(a, toDecimal64(0.1, 3)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(a, toDecimal128(0.1, 3)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(b, toDecimal32(0.4, 3)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(b, toDecimal64(0.4, 2)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(b, toDecimal64(0.4, 4)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(b, toDecimal128(0.4, 3)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(c, toDecimal32(0.7, 3)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(c, toDecimal64(0.7, 3)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(c, toDecimal128(0.7, 2)) FROM decimal; -- { serverError 43 }
-SELECT indexOf(c, toDecimal128(0.7, 4)) FROM decimal; -- { serverError 43 }
+SELECT indexOf(a, toDecimal32(0.1, 2)) FROM decimal;
+SELECT indexOf(a, toDecimal32(0.1, 4)) FROM decimal;
+SELECT indexOf(a, toDecimal64(0.1, 3)) FROM decimal;
+SELECT indexOf(a, toDecimal128(0.1, 3)) FROM decimal;
+SELECT indexOf(b, toDecimal32(0.4, 3)) FROM decimal;
+SELECT indexOf(b, toDecimal64(0.4, 2)) FROM decimal;
+SELECT indexOf(b, toDecimal64(0.4, 4)) FROM decimal;
+SELECT indexOf(b, toDecimal128(0.4, 3)) FROM decimal;
+SELECT indexOf(c, toDecimal32(0.7, 3)) FROM decimal;
+SELECT indexOf(c, toDecimal64(0.7, 3)) FROM decimal;
+SELECT indexOf(c, toDecimal128(0.7, 2)) FROM decimal;
+SELECT indexOf(c, toDecimal128(0.7, 4)) FROM decimal;
 
 SELECT arrayConcat(a, b) AS x, toTypeName(x) FROM decimal;
 SELECT arrayConcat(a, c) AS x, toTypeName(x) FROM decimal;
diff --git a/tests/queries/0_stateless/00918_has_unsufficient_type_check.reference b/tests/queries/0_stateless/00918_has_unsufficient_type_check.reference
index 7938dcdde861..b261da18d51a 100644
--- a/tests/queries/0_stateless/00918_has_unsufficient_type_check.reference
+++ b/tests/queries/0_stateless/00918_has_unsufficient_type_check.reference
@@ -1,3 +1,2 @@
-0
 1
 0
diff --git a/tests/queries/0_stateless/00918_has_unsufficient_type_check.sql b/tests/queries/0_stateless/00918_has_unsufficient_type_check.sql
index f76fd446a8ed..c40419e4d566 100644
--- a/tests/queries/0_stateless/00918_has_unsufficient_type_check.sql
+++ b/tests/queries/0_stateless/00918_has_unsufficient_type_check.sql
@@ -1,3 +1,3 @@
-SELECT hasAny([['Hello, world']], [[[]]]);
+SELECT hasAny([['Hello, world']], [[[]]]); -- { serverError 386 }
 SELECT hasAny([['Hello, world']], [['Hello', 'world'], ['Hello, world']]);
 SELECT hasAll([['Hello, world']], [['Hello', 'world'], ['Hello, world']]);
diff --git a/tests/queries/0_stateless/01812_has_generic.reference b/tests/queries/0_stateless/01812_has_generic.reference
new file mode 100644
index 000000000000..e8183f05f5db
--- /dev/null
+++ b/tests/queries/0_stateless/01812_has_generic.reference
@@ -0,0 +1,3 @@
+1
+1
+1
diff --git a/tests/queries/0_stateless/01812_has_generic.sql b/tests/queries/0_stateless/01812_has_generic.sql
new file mode 100644
index 000000000000..9ab5b655102e
--- /dev/null
+++ b/tests/queries/0_stateless/01812_has_generic.sql
@@ -0,0 +1,3 @@
+SELECT has([(1, 2), (3, 4)], (toUInt16(3), 4));
+SELECT hasAny([(1, 2), (3, 4)], [(toUInt16(3), 4)]);
+SELECT hasAll([(1, 2), (3, 4)], [(toNullable(1), toUInt64(2)), (toUInt16(3), 4)]);
