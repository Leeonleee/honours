diff --git a/tests/integration/test_multiple_disks/test.py b/tests/integration/test_multiple_disks/test.py
index 30669feb6b3a..fdd81284b2a2 100644
--- a/tests/integration/test_multiple_disks/test.py
+++ b/tests/integration/test_multiple_disks/test.py
@@ -1837,7 +1837,8 @@ def _insert_merge_execute(
             SETTINGS storage_policy='{policy}'
         """.format(
                 name=name, policy=policy
-            )
+            ),
+            settings={"allow_suspicious_ttl_expressions": 1},
         )
 
         for i in range(parts):
diff --git a/tests/integration/test_ttl_move/test.py b/tests/integration/test_ttl_move/test.py
index 2f18a0a1afa2..1df9bc6d3c92 100644
--- a/tests/integration/test_ttl_move/test.py
+++ b/tests/integration/test_ttl_move/test.py
@@ -302,7 +302,8 @@ def test_moves_work_after_storage_policy_change(started_cluster, name, engine):
         node1.query(
             """ALTER TABLE {name} MODIFY TTL now()-3600 TO DISK 'jbod1', d1 TO DISK 'external'""".format(
                 name=name
-            )
+            ),
+            settings={"allow_suspicious_ttl_expressions": 1},
         )
 
         wait_expire_1 = 12
diff --git a/tests/queries/0_stateless/00933_ttl_simple.reference b/tests/queries/0_stateless/00933_ttl_simple.reference
index e3982814eab4..72f5134e235d 100644
--- a/tests/queries/0_stateless/00933_ttl_simple.reference
+++ b/tests/queries/0_stateless/00933_ttl_simple.reference
@@ -6,11 +6,11 @@
 2000-10-10 00:00:00	0
 2100-10-10 00:00:00	3
 2100-10-10	2
-CREATE TABLE default.ttl_00933_1
(
    `b` Int32,
    `a` Int32 TTL now() - 1000
)
ENGINE = MergeTree
PARTITION BY tuple()
ORDER BY tuple()
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192
+CREATE TABLE default.ttl_00933_1
(
    `b` Int32,
    `a` Int32 TTL CAST(\'2000-10-10 00:00:00\', \'DateTime\')
)
ENGINE = MergeTree
PARTITION BY tuple()
ORDER BY tuple()
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192
 1	0
-CREATE TABLE default.ttl_00933_1
(
    `b` Int32,
    `a` Int32 TTL now() + 1000
)
ENGINE = MergeTree
PARTITION BY tuple()
ORDER BY tuple()
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192
+CREATE TABLE default.ttl_00933_1
(
    `b` Int32,
    `a` Int32 TTL CAST(\'2100-10-10 00:00:00\', \'DateTime\')
)
ENGINE = MergeTree
PARTITION BY tuple()
ORDER BY tuple()
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192
 1	1
-CREATE TABLE default.ttl_00933_1
(
    `b` Int32,
    `a` Int32 TTL today() - 1
)
ENGINE = MergeTree
PARTITION BY tuple()
ORDER BY tuple()
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192
+CREATE TABLE default.ttl_00933_1
(
    `b` Int32,
    `a` Int32 TTL CAST(\'2000-10-10\', \'Date\')
)
ENGINE = MergeTree
PARTITION BY tuple()
ORDER BY tuple()
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192
 1	0
-CREATE TABLE default.ttl_00933_1
(
    `b` Int32,
    `a` Int32 TTL today() + 1
)
ENGINE = MergeTree
PARTITION BY tuple()
ORDER BY tuple()
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192
+CREATE TABLE default.ttl_00933_1
(
    `b` Int32,
    `a` Int32 TTL CAST(\'2100-10-10\', \'Date\')
)
ENGINE = MergeTree
PARTITION BY tuple()
ORDER BY tuple()
SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192
 1	1
diff --git a/tests/queries/0_stateless/00933_ttl_simple.sql b/tests/queries/0_stateless/00933_ttl_simple.sql
index ad40e7c7e475..c1df338a0ffc 100644
--- a/tests/queries/0_stateless/00933_ttl_simple.sql
+++ b/tests/queries/0_stateless/00933_ttl_simple.sql
@@ -8,7 +8,8 @@
 --     ┌───────────────now()─┬─toDate(toTimeZone(now(), 'America/Mazatlan'))─┬────today()─┐
 --     │ 2023-07-24 06:24:06 │                                    2023-07-23 │ 2023-07-24 │
 --     └─────────────────────┴───────────────────────────────────────────────┴────────────┘
-set session_timezone = '';
+SET session_timezone = '';
+SET allow_suspicious_ttl_expressions = 1;
 
 drop table if exists ttl_00933_1;
 
@@ -65,7 +66,9 @@ select * from ttl_00933_1 order by d;
 
 -- const DateTime TTL positive
 drop table if exists ttl_00933_1;
-create table ttl_00933_1 (b Int, a Int ttl now()-1000) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
+create table ttl_00933_1 (b Int, a Int ttl '2000-10-10 00:00:00'::DateTime)
+engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
+
 show create table ttl_00933_1;
 insert into ttl_00933_1 values (1, 1);
 optimize table ttl_00933_1 final;
@@ -73,7 +76,7 @@ select * from ttl_00933_1;
 
 -- const DateTime TTL negative
 drop table if exists ttl_00933_1;
-create table ttl_00933_1 (b Int, a Int ttl now()+1000) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
+create table ttl_00933_1 (b Int, a Int ttl '2100-10-10 00:00:00'::DateTime) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
 show create table ttl_00933_1;
 insert into ttl_00933_1 values (1, 1);
 optimize table ttl_00933_1 final;
@@ -81,7 +84,7 @@ select * from ttl_00933_1;
 
 -- const Date TTL positive
 drop table if exists ttl_00933_1;
-create table ttl_00933_1 (b Int, a Int ttl today()-1) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
+create table ttl_00933_1 (b Int, a Int ttl '2000-10-10'::Date) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
 show create table ttl_00933_1;
 insert into ttl_00933_1 values (1, 1);
 optimize table ttl_00933_1 final;
@@ -89,7 +92,7 @@ select * from ttl_00933_1;
 
 -- const Date TTL negative
 drop table if exists ttl_00933_1;
-create table ttl_00933_1 (b Int, a Int ttl today()+1) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
+create table ttl_00933_1 (b Int, a Int ttl '2100-10-10'::Date) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
 show create table ttl_00933_1;
 insert into ttl_00933_1 values (1, 1);
 optimize table ttl_00933_1 final;
diff --git a/tests/queries/0_stateless/01070_alter_with_ttl.sql b/tests/queries/0_stateless/01070_alter_with_ttl.sql
index 3adc3ccd6ae9..44d422cbe6d0 100644
--- a/tests/queries/0_stateless/01070_alter_with_ttl.sql
+++ b/tests/queries/0_stateless/01070_alter_with_ttl.sql
@@ -1,5 +1,7 @@
 drop table if exists alter_ttl;
 
+SET allow_suspicious_ttl_expressions = 1;
+
 create table alter_ttl(i Int) engine = MergeTree order by i ttl toDate('2020-05-05');
 alter table alter_ttl add column s String;
 alter table alter_ttl modify column s String ttl toDate('2020-01-01');
diff --git a/tests/queries/0_stateless/01070_materialize_ttl.sql b/tests/queries/0_stateless/01070_materialize_ttl.sql
index b6a03f2ca10b..b322b67882c8 100644
--- a/tests/queries/0_stateless/01070_materialize_ttl.sql
+++ b/tests/queries/0_stateless/01070_materialize_ttl.sql
@@ -1,5 +1,7 @@
 -- Tags: no-parallel
 
+SET allow_suspicious_ttl_expressions = 1;
+
 drop table if exists ttl;
 
 create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d);
diff --git a/tests/queries/0_stateless/01070_modify_ttl.sql b/tests/queries/0_stateless/01070_modify_ttl.sql
index 0716ccd70436..4ffd59fc8a95 100644
--- a/tests/queries/0_stateless/01070_modify_ttl.sql
+++ b/tests/queries/0_stateless/01070_modify_ttl.sql
@@ -1,5 +1,7 @@
 -- Tags: no-parallel
 
+SET allow_suspicious_ttl_expressions = 1;
+
 drop table if exists ttl;
 
 create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d);
diff --git a/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql b/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql
index 7ac70d418718..2700cc03ff5a 100644
--- a/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql
+++ b/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql
@@ -5,6 +5,8 @@ set mutations_sync = 2;
 -- system.parts has server default, timezone cannot be randomized
 set session_timezone = '';
 
+SET allow_suspicious_ttl_expressions = 1;
+
 drop table if exists ttl;
 
 create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d)
diff --git a/tests/queries/0_stateless/01070_mutations_with_dependencies.sql b/tests/queries/0_stateless/01070_mutations_with_dependencies.sql
index 566bb16b10c8..813ebf3f5a73 100644
--- a/tests/queries/0_stateless/01070_mutations_with_dependencies.sql
+++ b/tests/queries/0_stateless/01070_mutations_with_dependencies.sql
@@ -34,6 +34,8 @@ select count() from ttl where s = 'b';
 drop table ttl;
 
 -- check only that it doesn't throw exceptions.
+SET allow_suspicious_ttl_expressions = 1;
+
 create table ttl (i Int, s String) engine = MergeTree order by i ttl toDate('2000-01-01') TO DISK 'default';
 alter table ttl materialize ttl;
 drop table ttl;
diff --git a/tests/queries/0_stateless/02296_ttl_non_deterministic.reference b/tests/queries/0_stateless/02296_ttl_non_deterministic.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/02296_ttl_non_deterministic.sql b/tests/queries/0_stateless/02296_ttl_non_deterministic.sql
new file mode 100644
index 000000000000..14d8979a624a
--- /dev/null
+++ b/tests/queries/0_stateless/02296_ttl_non_deterministic.sql
@@ -0,0 +1,34 @@
+-- Tags: replica
+
+DROP TABLE IF EXISTS t_ttl_non_deterministic;
+
+CREATE TABLE t_ttl_non_deterministic(A Int64)
+ENGINE = MergeTree ORDER BY A TTL now() + toIntervalMonth(1); -- {serverError BAD_ARGUMENTS}
+
+CREATE TABLE t_ttl_non_deterministic(A Int64)
+ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl1', '1') ORDER BY A TTL now() + toIntervalMonth(1); -- {serverError BAD_ARGUMENTS}
+
+
+CREATE TABLE t_ttl_non_deterministic(A Int64) ENGINE = MergeTree ORDER BY A;
+ALTER TABLE t_ttl_non_deterministic MODIFY TTL now() + toIntervalMonth(1); -- {serverError BAD_ARGUMENTS}
+DROP TABLE t_ttl_non_deterministic;
+
+CREATE TABLE t_ttl_non_deterministic(A Int64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl2', '1') ORDER BY A;
+ALTER TABLE t_ttl_non_deterministic MODIFY TTL now() + toIntervalMonth(1); -- {serverError BAD_ARGUMENTS}
+DROP TABLE t_ttl_non_deterministic;
+
+
+CREATE TABLE t_ttl_non_deterministic(A Int64, B Int64 TTL now() + toIntervalMonth(1))
+ENGINE = MergeTree ORDER BY A; -- {serverError BAD_ARGUMENTS}
+
+CREATE TABLE t_ttl_non_deterministic(A Int64, B Int64 TTL now() + toIntervalMonth(1))
+ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl3', '1') ORDER BY A; -- {serverError BAD_ARGUMENTS}
+
+
+CREATE TABLE t_ttl_non_deterministic(A Int64, B Int64) ENGINE = MergeTree ORDER BY A;
+ALTER TABLE t_ttl_non_deterministic MODIFY COLUMN B Int64 TTL now() + toIntervalMonth(1); -- {serverError BAD_ARGUMENTS}
+DROP TABLE t_ttl_non_deterministic;
+
+CREATE TABLE t_ttl_non_deterministic(A Int64, B Int64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl4', '1') ORDER BY A;
+ALTER TABLE t_ttl_non_deterministic MODIFY COLUMN B Int64 TTL now() + toIntervalMonth(1); -- {serverError BAD_ARGUMENTS}
+DROP TABLE t_ttl_non_deterministic;
diff --git a/tests/queries/0_stateless/02864_statistic_exception.sql b/tests/queries/0_stateless/02864_statistic_exception.sql
index c37f6b1ce062..092fa9bda85a 100644
--- a/tests/queries/0_stateless/02864_statistic_exception.sql
+++ b/tests/queries/0_stateless/02864_statistic_exception.sql
@@ -47,7 +47,7 @@ ALTER TABLE t1 MATERIALIZE STATISTIC b TYPE tdigest; -- { serverError ILLEGAL_ST
 
 ALTER TABLE t1 ADD STATISTIC a TYPE tdigest;
 ALTER TABLE t1 ADD STATISTIC b TYPE tdigest;
-ALTER TABLE t1 MODIFY COLUMN a Float64 TTL now() + INTERVAL 1 MONTH;
+ALTER TABLE t1 MODIFY COLUMN a Float64 TTL toDateTime(b) + INTERVAL 1 MONTH;
 ALTER TABLE t1 MODIFY COLUMN a Int64; -- { serverError ALTER_OF_COLUMN_IS_FORBIDDEN }
 
 DROP TABLE t1;
