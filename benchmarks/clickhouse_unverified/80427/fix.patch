diff --git a/src/Interpreters/Cluster.cpp b/src/Interpreters/Cluster.cpp
index 4e3768a8fd59..a0e4e4999b72 100644
--- a/src/Interpreters/Cluster.cpp
+++ b/src/Interpreters/Cluster.cpp
@@ -582,6 +582,9 @@ Cluster::Cluster(
 
     for (const auto & shard : names)
     {
+        if (shard.empty())
+            throw Exception(ErrorCodes::BAD_ARGUMENTS, "Shard contains zero number of replicas");
+
         Addresses current;
         for (const auto & replica : shard)
             current.emplace_back(
diff --git a/src/TableFunctions/TableFunctionRemote.cpp b/src/TableFunctions/TableFunctionRemote.cpp
index 83525db6a6b1..dae0ee37571d 100644
--- a/src/TableFunctions/TableFunctionRemote.cpp
+++ b/src/TableFunctions/TableFunctionRemote.cpp
@@ -256,10 +256,15 @@ void TableFunctionRemote::parseArguments(const ASTPtr & ast_function, ContextPtr
         std::vector<std::vector<String>> names;
         names.reserve(shards.size());
         for (const auto & shard : shards)
-            names.push_back(parseRemoteDescription(shard, 0, shard.size(), '|', max_addresses));
+        {
+            auto replicas = parseRemoteDescription(shard, 0, shard.size(), '|', max_addresses);
+            if (replicas.empty())
+                throw Exception(ErrorCodes::BAD_ARGUMENTS, "Shard contains zero number of replicas");
+            names.push_back(std::move(replicas));
+        }
 
         if (names.empty())
-            throw Exception(ErrorCodes::BAD_ARGUMENTS, "Shard list is empty after parsing first argument");
+            throw Exception(ErrorCodes::BAD_ARGUMENTS, "Shard list is empty after parsing the first argument");
 
         auto maybe_secure_port = context->getTCPPortSecure();
 
