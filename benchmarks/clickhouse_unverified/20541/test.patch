diff --git a/tests/queries/0_stateless/01550_create_map_type.reference b/tests/queries/0_stateless/01550_create_map_type.reference
index 877199e92d56..d4794ac14592 100644
--- a/tests/queries/0_stateless/01550_create_map_type.reference
+++ b/tests/queries/0_stateless/01550_create_map_type.reference
@@ -6,6 +6,8 @@ lisi
 female
 zhangsan
 gender
+2020-01-01	{1:0,2:1}
+2020-01-01	{1:0,2:-1}
 1116
 1117
 1118
diff --git a/tests/queries/0_stateless/01550_create_map_type.sql b/tests/queries/0_stateless/01550_create_map_type.sql
index 695a40c42b4a..26bbf3c7ddea 100644
--- a/tests/queries/0_stateless/01550_create_map_type.sql
+++ b/tests/queries/0_stateless/01550_create_map_type.sql
@@ -22,7 +22,21 @@ select a[b] from table_map;
 select b from table_map where a = map('name','lisi', 'gender', 'female');
 drop table if exists table_map;
 
--- Int type
+-- Big Integer type
+
+create table table_map (d DATE, m Map(Int8, UInt256)) ENGINE = MergeTree() order by d;
+insert into table_map values ('2020-01-01', map(1, 0, 2, 1));
+select * from table_map;
+drop table table_map;
+
+-- Integer type
+
+create table table_map (d DATE, m Map(Int8, Int8)) ENGINE = MergeTree() order by d;
+insert into table_map values ('2020-01-01', map(1, 0, 2, -1));
+select * from table_map;
+drop table table_map;
+
+-- Unsigned Int type
 drop table if exists table_map;
 create table table_map(a Map(UInt8, UInt64), b UInt8) Engine = MergeTree() order by b;
 insert into table_map select map(number, number+5), number from numbers(1111,4);
diff --git a/tests/queries/0_stateless/01715_tuple_insert_null_as_default.reference b/tests/queries/0_stateless/01715_tuple_insert_null_as_default.reference
new file mode 100644
index 000000000000..20f0fadfdcfc
--- /dev/null
+++ b/tests/queries/0_stateless/01715_tuple_insert_null_as_default.reference
@@ -0,0 +1,15 @@
+Tuple
+(0,1)
+(0,1)
+Tuple nested in Array
+[(0,2),(3,0),(0,4)]
+[(0,2),(3,0),(0,4)]
+Tuple nested in Array nested in Tuple
+(0,[(0,2),(3,0),(0,4)])
+(0,[(0,2),(3,0),(0,4)])
+Tuple nested in Map
+{'test':(0,1)}
+{'test':(0,1)}
+Tuple nested in Map nested in Tuple
+(0,{'test':(0,1)})
+(0,{'test':(0,1)})
diff --git a/tests/queries/0_stateless/01715_tuple_insert_null_as_default.sql b/tests/queries/0_stateless/01715_tuple_insert_null_as_default.sql
new file mode 100644
index 000000000000..d5fd9af22bd9
--- /dev/null
+++ b/tests/queries/0_stateless/01715_tuple_insert_null_as_default.sql
@@ -0,0 +1,77 @@
+SELECT 'Tuple';
+
+DROP TABLE IF EXISTS test_tuple;
+CREATE TABLE test_tuple (value Tuple(UInt8, UInt8)) ENGINE=TinyLog;
+
+SET input_format_null_as_default = 1;
+INSERT INTO test_tuple VALUES ((NULL, 1));
+SELECT * FROM test_tuple;
+
+SET input_format_null_as_default = 0;
+INSERT INTO test_tuple VALUES ((NULL, 2)); -- { clientError 53 }
+SELECT * FROM test_tuple;
+
+DROP TABLE test_tuple;
+
+SELECT 'Tuple nested in Array';
+
+DROP TABLE IF EXISTS test_tuple_nested_in_array;
+CREATE TABLE test_tuple_nested_in_array (value Array(Tuple(UInt8, UInt8))) ENGINE=TinyLog;
+
+SET input_format_null_as_default = 1;
+INSERT INTO test_tuple_nested_in_array VALUES ([(NULL, 2), (3, NULL), (NULL, 4)]);
+SELECT * FROM test_tuple_nested_in_array;
+
+SET input_format_null_as_default = 0;
+INSERT INTO test_tuple_nested_in_array VALUES ([(NULL, 1)]); -- { clientError 53 }
+SELECT * FROM test_tuple_nested_in_array;
+
+DROP TABLE test_tuple_nested_in_array;
+
+SELECT 'Tuple nested in Array nested in Tuple';
+
+DROP TABLE IF EXISTS test_tuple_nested_in_array_nested_in_tuple;
+CREATE TABLE test_tuple_nested_in_array_nested_in_tuple (value Tuple(UInt8, Array(Tuple(UInt8, UInt8)))) ENGINE=TinyLog;
+
+SET input_format_null_as_default = 1;
+INSERT INTO test_tuple_nested_in_array_nested_in_tuple VALUES ( (NULL, [(NULL, 2), (3, NULL), (NULL, 4)]) );
+SELECT * FROM test_tuple_nested_in_array_nested_in_tuple;
+
+SET input_format_null_as_default = 0;
+INSERT INTO test_tuple_nested_in_array_nested_in_tuple VALUES ( (NULL, [(NULL, 1)]) ); -- { clientError 53 }
+SELECT * FROM test_tuple_nested_in_array_nested_in_tuple;
+
+DROP TABLE test_tuple_nested_in_array_nested_in_tuple;
+
+SELECT 'Tuple nested in Map';
+
+SET allow_experimental_map_type = 1;
+
+DROP TABLE IF EXISTS test_tuple_nested_in_map;
+CREATE TABLE test_tuple_nested_in_map (value Map(String, Tuple(UInt8, UInt8))) ENGINE=TinyLog;
+
+SET input_format_null_as_default = 1;
+INSERT INTO test_tuple_nested_in_map VALUES (map('test', (NULL, 1)));
+
+SELECT * FROM test_tuple_nested_in_map;
+
+SET input_format_null_as_default = 0;
+INSERT INTO test_tuple_nested_in_map VALUES (map('test', (NULL, 1))); -- { clientError 53 }
+SELECT * FROM test_tuple_nested_in_map;
+
+DROP TABLE test_tuple_nested_in_map;
+
+SELECT 'Tuple nested in Map nested in Tuple';
+
+DROP TABLE IF EXISTS test_tuple_nested_in_map_nested_in_tuple;
+CREATE TABLE test_tuple_nested_in_map_nested_in_tuple (value Tuple(UInt8, Map(String, Tuple(UInt8, UInt8)))) ENGINE=TinyLog;
+
+SET input_format_null_as_default = 1;
+INSERT INTO test_tuple_nested_in_map_nested_in_tuple VALUES ( (NULL, map('test', (NULL, 1))) );
+SELECT * FROM test_tuple_nested_in_map_nested_in_tuple;
+
+SET input_format_null_as_default = 0;
+INSERT INTO test_tuple_nested_in_map_nested_in_tuple VALUES ( (NULL, map('test', (NULL, 1))) ); -- { clientError 53 }
+SELECT * FROM test_tuple_nested_in_map_nested_in_tuple;
+
+DROP TABLE test_tuple_nested_in_map_nested_in_tuple;
