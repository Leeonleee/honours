diff --git a/tests/queries/0_stateless/01825_type_json_10.reference b/tests/queries/0_stateless/01825_type_json_10.reference
new file mode 100644
index 000000000000..53fe604fa514
--- /dev/null
+++ b/tests/queries/0_stateless/01825_type_json_10.reference
@@ -0,0 +1,9 @@
+Tuple(a Tuple(b Int8, c Nested(d Int8, e Array(Int16), f Int8)))
+{"o":{"a":{"b":1,"c":[{"d":10,"e":[31],"f":0},{"d":20,"e":[63,127],"f":0}]}}}
+{"o":{"a":{"b":2,"c":[]}}}
+{"o":{"a":{"b":3,"c":[{"d":0,"e":[32],"f":20},{"d":0,"e":[64,128],"f":30}]}}}
+{"o":{"a":{"b":4,"c":[]}}}
+1	[10,20]	[[31],[63,127]]	[0,0]
+2	[]	[]	[]
+3	[0,0]	[[32],[64,128]]	[20,30]
+4	[]	[]	[]
diff --git a/tests/queries/0_stateless/01825_type_json_10.sql b/tests/queries/0_stateless/01825_type_json_10.sql
new file mode 100644
index 000000000000..98f1a766ed82
--- /dev/null
+++ b/tests/queries/0_stateless/01825_type_json_10.sql
@@ -0,0 +1,16 @@
+-- Tags: no-fasttest
+
+SET allow_experimental_object_type = 1;
+SET output_format_json_named_tuples_as_objects = 1;
+
+DROP TABLE IF EXISTS t_json_10;
+CREATE TABLE t_json_10 (o JSON) ENGINE = Memory;
+
+INSERT INTO t_json_10 FORMAT JSONAsObject {"a": {"b": 1, "c": [{"d": 10, "e": [31]}, {"d": 20, "e": [63, 127]}]}} {"a": {"b": 2, "c": []}}
+INSERT INTO t_json_10 FORMAT JSONAsObject {"a": {"b": 3, "c": [{"f": 20, "e": [32]}, {"f": 30, "e": [64, 128]}]}} {"a": {"b": 4, "c": []}}
+
+SELECT DISTINCT toTypeName(o) FROM t_json_10;
+SELECT o FROM t_json_10 ORDER BY o.a.b FORMAT JSONEachRow;
+SELECT o.a.b, o.a.c.d, o.a.c.e, o.a.c.f FROM t_json_10 ORDER BY o.a.b;
+
+DROP TABLE t_json_10;
diff --git a/tests/queries/0_stateless/01825_type_json_11.reference b/tests/queries/0_stateless/01825_type_json_11.reference
new file mode 100644
index 000000000000..27569620cd7c
--- /dev/null
+++ b/tests/queries/0_stateless/01825_type_json_11.reference
@@ -0,0 +1,7 @@
+Tuple(id Int8, key_1 Nested(key_2 Int32, key_3 Nested(key_4 Nested(key_5 Int8), key_7 Int16)))
+{"obj":{"id":1,"key_1":[{"key_2":100,"key_3":[{"key_4":[{"key_5":-2}],"key_7":257}]},{"key_2":65536,"key_3":[]}]}}
+{"obj":{"id":2,"key_1":[{"key_2":101,"key_3":[{"key_4":[{"key_5":-2}],"key_7":0}]},{"key_2":102,"key_3":[{"key_4":[],"key_7":257}]},{"key_2":65536,"key_3":[]}]}}
+{"obj.key_1.key_3":[[{"key_4":[{"key_5":-2}],"key_7":257}],[]]}
+{"obj.key_1.key_3":[[{"key_4":[{"key_5":-2}],"key_7":0}],[{"key_4":[],"key_7":257}],[]]}
+[[[-2]],[]]	[[257],[]]
+[[[-2]],[[]],[]]	[[0],[257],[]]
diff --git a/tests/queries/0_stateless/01825_type_json_11.sh b/tests/queries/0_stateless/01825_type_json_11.sh
new file mode 100755
index 000000000000..dbed15c8bb93
--- /dev/null
+++ b/tests/queries/0_stateless/01825_type_json_11.sh
@@ -0,0 +1,61 @@
+#!/usr/bin/env bash
+# Tags: no-fasttest
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+$CLICKHOUSE_CLIENT -q "DROP TABLE IF EXISTS t_json_11"
+
+$CLICKHOUSE_CLIENT -q "CREATE TABLE t_json_11 (obj JSON) ENGINE = MergeTree ORDER BY tuple()" --allow_experimental_object_type 1
+
+cat <<EOF | $CLICKHOUSE_CLIENT -q "INSERT INTO t_json_11 FORMAT JSONAsObject"
+{
+    "id": 1,
+    "key_1":[
+        {
+            "key_2":100,
+            "key_3": [
+                {
+                    "key_7":257,
+                    "key_4":[{"key_5":-2}]
+                }
+            ]
+        },
+        {
+            "key_2":65536
+        }
+    ]
+}
+{
+    "id": 2,
+    "key_1":[
+        {
+          "key_2":101,
+          "key_3": [
+              {
+                  "key_4":[{"key_5":-2}]
+              }
+          ]
+        },
+        {
+            "key_2":102,
+            "key_3": [
+                {
+                    "key_7":257
+                }
+            ]
+        },
+        {
+            "key_2":65536
+        }
+    ]
+}
+EOF
+
+$CLICKHOUSE_CLIENT -q "SELECT DISTINCT toTypeName(obj) FROM t_json_11;"
+$CLICKHOUSE_CLIENT -q "SELECT obj FROM t_json_11 ORDER BY obj.id FORMAT JSONEachRow" --output_format_json_named_tuples_as_objects 1
+$CLICKHOUSE_CLIENT -q "SELECT obj.key_1.key_3 FROM t_json_11 ORDER BY obj.id FORMAT JSONEachRow" --output_format_json_named_tuples_as_objects 1
+$CLICKHOUSE_CLIENT -q "SELECT obj.key_1.key_3.key_4.key_5, obj.key_1.key_3.key_7 FROM t_json_11 ORDER BY obj.id"
+
+$CLICKHOUSE_CLIENT -q "DROP TABLE t_json_11;"
diff --git a/tests/queries/0_stateless/01825_type_json_12.reference b/tests/queries/0_stateless/01825_type_json_12.reference
new file mode 100644
index 000000000000..7f4f5bf190ef
--- /dev/null
+++ b/tests/queries/0_stateless/01825_type_json_12.reference
@@ -0,0 +1,3 @@
+Tuple(id Int8, key_0 Nested(key_1 Nested(key_3 Nested(key_4 String, key_5 Float64, key_6 String, key_7 Float64))))
+{"obj":{"id":1,"key_0":[{"key_1":[{"key_3":[{"key_4":"1048576","key_5":0.0001048576,"key_6":"25.5","key_7":1025},{"key_4":"","key_5":0,"key_6":"","key_7":2}]}]},{"key_1":[]},{"key_1":[{"key_3":[{"key_4":"","key_5":-1,"key_6":"aqbjfiruu","key_7":-922337203685477600},{"key_4":"","key_5":0,"key_6":"","key_7":65537}]},{"key_3":[{"key_4":"ghdqyeiom","key_5":1048575,"key_6":"","key_7":21474836.48}]}]}]}}
+[[['1048576','']],[],[['',''],['ghdqyeiom']]]	[[[0.0001048576,0]],[],[[-1,0],[1048575]]]	[[['25.5','']],[],[['aqbjfiruu',''],['']]]	[[[1025,2]],[],[[-922337203685477600,65537],[21474836.48]]]
diff --git a/tests/queries/0_stateless/01825_type_json_12.sh b/tests/queries/0_stateless/01825_type_json_12.sh
new file mode 100755
index 000000000000..2db3f1c55dc5
--- /dev/null
+++ b/tests/queries/0_stateless/01825_type_json_12.sh
@@ -0,0 +1,51 @@
+#!/usr/bin/env bash
+# Tags: no-fasttest
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+$CLICKHOUSE_CLIENT -q "DROP TABLE IF EXISTS t_json_12"
+
+$CLICKHOUSE_CLIENT -q "CREATE TABLE t_json_12 (obj JSON) ENGINE = MergeTree ORDER BY tuple()" --allow_experimental_object_type 1
+
+cat <<EOF | $CLICKHOUSE_CLIENT -q "INSERT INTO t_json_12 FORMAT JSONAsObject"
+{
+    "id": 1,
+    "key_0":[
+        {
+            "key_1":[
+                {
+                    "key_3":[
+                        {"key_7":1025,"key_6":25.5,"key_4":1048576,"key_5":0.0001048576},
+                        {"key_7":2,"key_6":"","key_4":null}
+                    ]
+                }
+            ]
+        },
+        {},
+        {
+            "key_1":[
+                {
+                    "key_3":[
+                        {"key_7":-922337203685477580.8,"key_6":"aqbjfiruu","key_5":-1},
+                        {"key_7":65537,"key_6":"","key_4":""}
+                    ]
+                },
+                {
+                    "key_3":[
+                        {"key_7":21474836.48,"key_4":"ghdqyeiom","key_5":1048575}
+                    ]
+                }
+            ]
+        }
+    ]
+}
+EOF
+
+$CLICKHOUSE_CLIENT -q "SELECT DISTINCT toTypeName(obj) FROM t_json_12;"
+$CLICKHOUSE_CLIENT -q "SELECT obj FROM t_json_12 ORDER BY obj.id FORMAT JSONEachRow" --output_format_json_named_tuples_as_objects 1
+$CLICKHOUSE_CLIENT -q "SELECT obj.key_0.key_1.key_3.key_4, obj.key_0.key_1.key_3.key_5, \
+    obj.key_0.key_1.key_3.key_6, obj.key_0.key_1.key_3.key_7 FROM t_json_12 ORDER BY obj.id"
+
+$CLICKHOUSE_CLIENT -q "DROP TABLE t_json_12;"
diff --git a/tests/queries/0_stateless/01825_type_json_13.reference b/tests/queries/0_stateless/01825_type_json_13.reference
new file mode 100644
index 000000000000..e420021f406d
--- /dev/null
+++ b/tests/queries/0_stateless/01825_type_json_13.reference
@@ -0,0 +1,3 @@
+Tuple(id Int8, key_1 Nested(key_2 Nested(key_3 Nested(key_4 Nested(key_5 Float64, key_6 Int64, key_7 Int32), key_8 Int32))))
+{"obj":{"id":1,"key_1":[{"key_2":[{"key_3":[{"key_4":[],"key_8":65537},{"key_4":[{"key_5":-0.02,"key_6":"0","key_7":0},{"key_5":0,"key_6":"0","key_7":1023},{"key_5":0,"key_6":"9223372036854775807","key_7":1}],"key_8":0},{"key_4":[{"key_5":0,"key_6":"0","key_7":65537}],"key_8":0}]}]}]}}
+[[[65537,0,0]]]	[[[[],[-0.02,0,0],[0]]]]	[[[[],[0,0,9223372036854775807],[0]]]]	[[[[],[0,1023,1],[65537]]]]
diff --git a/tests/queries/0_stateless/01825_type_json_13.sh b/tests/queries/0_stateless/01825_type_json_13.sh
new file mode 100755
index 000000000000..17c36c547eee
--- /dev/null
+++ b/tests/queries/0_stateless/01825_type_json_13.sh
@@ -0,0 +1,48 @@
+#!/usr/bin/env bash
+# Tags: no-fasttest
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+$CLICKHOUSE_CLIENT -q "DROP TABLE IF EXISTS t_json_13"
+
+$CLICKHOUSE_CLIENT -q "CREATE TABLE t_json_13 (obj JSON) ENGINE = MergeTree ORDER BY tuple()" --allow_experimental_object_type 1
+
+cat <<EOF | $CLICKHOUSE_CLIENT -q "INSERT INTO t_json_13 FORMAT JSONAsObject"
+{
+    "id": 1,
+    "key_1":[
+        {
+            "key_2":[
+                {
+                    "key_3":[
+                        {"key_8":65537},
+                        {
+                            "key_4":[
+                                {"key_5":-0.02},
+                                {"key_7":1023},
+                                {"key_7":1,"key_6":9223372036854775807}
+                            ]
+                        },
+                        {
+                            "key_4":[{"key_7":65537,"key_6":null}]
+                        }
+                    ]
+                }
+            ]
+        }
+    ]
+}
+EOF
+
+$CLICKHOUSE_CLIENT -q "SELECT DISTINCT toTypeName(obj) FROM t_json_13;"
+$CLICKHOUSE_CLIENT -q "SELECT obj FROM t_json_13 ORDER BY obj.id FORMAT JSONEachRow" --output_format_json_named_tuples_as_objects 1
+$CLICKHOUSE_CLIENT -q "SELECT \
+    obj.key_1.key_2.key_3.key_8, \
+    obj.key_1.key_2.key_3.key_4.key_5, \
+    obj.key_1.key_2.key_3.key_4.key_6, \
+    obj.key_1.key_2.key_3.key_4.key_7 \
+FROM t_json_13 ORDER BY obj.id"
+
+$CLICKHOUSE_CLIENT -q "DROP TABLE t_json_13;"
