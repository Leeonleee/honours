{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 6428,
  "instance_id": "ClickHouse__ClickHouse-6428",
  "issue_numbers": [
    "6293"
  ],
  "base_commit": "0b96d458478bd4adf4ac63eeb9790433c80b7cb4",
  "patch": "diff --git a/dbms/src/Interpreters/InterpreterCreateQuery.cpp b/dbms/src/Interpreters/InterpreterCreateQuery.cpp\nindex 4b9271df0e8c..0467e91c6d16 100644\n--- a/dbms/src/Interpreters/InterpreterCreateQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterCreateQuery.cpp\n@@ -542,7 +542,7 @@ BlockIO InterpreterCreateQuery::createTable(ASTCreateQuery & create)\n         columns = setColumns(create, as_select_sample, as_storage);\n \n         /// Check low cardinality types in creating table if it was not allowed in setting\n-        if (!create.attach && !context.getSettingsRef().allow_suspicious_low_cardinality_types)\n+        if (!create.attach && !context.getSettingsRef().allow_suspicious_low_cardinality_types && !create.is_materialized_view)\n         {\n             for (const auto & name_and_type_pair : columns.getAllPhysical())\n             {\n",
  "test_patch": "diff --git a/dbms/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.reference b/dbms/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/dbms/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.sql b/dbms/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.sql\nnew file mode 100644\nindex 000000000000..7192642bcdec\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.sql\n@@ -0,0 +1,11 @@\n+DROP TABLE IF EXISTS test1;\n+DROP TABLE IF EXISTS test2;\n+DROP TABLE IF EXISTS mat_view;\n+\n+CREATE TABLE test1 (a LowCardinality(String)) ENGINE=MergeTree() ORDER BY a;\n+CREATE TABLE test2 (a UInt64) engine=MergeTree() ORDER BY a;\n+CREATE MATERIALIZED VIEW test_mv TO test2 AS SELECT toUInt64(a = 'test') FROM test1;\n+\n+DROP TABLE test_mv;\n+DROP TABLE test1;\n+DROP TABLE test2;\n",
  "problem_statement": "Error on LowCardinality(String) to UInt64 conversion\ncreate table test (a LowCardinality(String)) engine=MergeTree() Order by a;\r\ncreate table test2 (a UInt64) engine=MergeTree() Order by a;\r\ncreate materialized view test_mv to test2 as select toUInt64(a = 'foo') from test;\r\n\r\nCode: 455. DB::Exception: Received from localhost:9000, ::1. DB::Exception: Creating columns of type LowCardinality(UInt64) is prohibited by default due to expected negative impact on performance. It can be enabled with the \"allow_suspicious_low_cardinality_types\" setting..\r\n\n",
  "hints_text": "Clickhouse converts LowCardinality(String) to LowCardinality(Int8) and then to LowCardinality(UInt64) instead of usual Uint64\nworkaround\r\n```\r\nDESCRIBE TABLE\r\n(\r\n    SELECT CAST(a, 'String') = 'foo'\r\n    FROM test\r\n)\r\n\r\n\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500type\u2500\u2500\u252c\u2500default_type\u2500\u252c\u2500default_expression\u2500\u252c\u2500comment\u2500\u252c\u2500codec_expression\u2500\u252c\u2500ttl_expression\u2500\u2510\r\n\u2502 equals(CAST(a, 'String'), 'foo') \u2502 UInt8 \u2502              \u2502                    \u2502         \u2502                  \u2502                \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```",
  "created_at": "2019-08-09T19:20:26Z",
  "modified_files": [
    "dbms/src/Interpreters/InterpreterCreateQuery.cpp"
  ],
  "modified_test_files": [
    "b/dbms/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.sql"
  ]
}