diff --git a/tests/queries/0_stateless/00718_format_datetime.reference b/tests/queries/0_stateless/00718_format_datetime.reference
index 43c630ac83b9..10a658ec8d9d 100644
--- a/tests/queries/0_stateless/00718_format_datetime.reference
+++ b/tests/queries/0_stateless/00718_format_datetime.reference
@@ -4,7 +4,7 @@ Jan	Jan
 20	20
 02	02
 01/02/18	01/02/18
- 2	 2
+2	2
 000000	000000
 2018-01-02	2018-01-02
 10	12
diff --git a/tests/queries/0_stateless/01411_from_unixtime.reference b/tests/queries/0_stateless/01411_from_unixtime.reference
index f5b3be44e00a..44f002b127d5 100644
--- a/tests/queries/0_stateless/01411_from_unixtime.reference
+++ b/tests/queries/0_stateless/01411_from_unixtime.reference
@@ -11,7 +11,7 @@ Jan	Jan
 20	20
 02	02
 01/02/18	01/02/18
- 2	 2
+2	2
 2018-01-02	2018-01-02
 10	12
 22	00
diff --git a/tests/queries/0_stateless/02564_date_format.reference b/tests/queries/0_stateless/02564_date_format.reference
index 38c0d39340b7..d40d6165c451 100644
--- a/tests/queries/0_stateless/02564_date_format.reference
+++ b/tests/queries/0_stateless/02564_date_format.reference
@@ -4,7 +4,7 @@ Jan	Jan
 20	20
 02	02
 01/02/18	01/02/18
- 2	 2
+2	2
 2018-01-02	2018-01-02
 10	12
 22	00
diff --git a/tests/queries/0_stateless/02668_parse_datetime.reference b/tests/queries/0_stateless/02668_parse_datetime.reference
index 519e62e42fbc..4e4dc34f6667 100644
--- a/tests/queries/0_stateless/02668_parse_datetime.reference
+++ b/tests/queries/0_stateless/02668_parse_datetime.reference
@@ -275,6 +275,19 @@ set session_timezone = 'UTC'; -- don't randomize the session timezone
 select parseDateTime('2021-01-04 23:12:34') = toDateTime('2021-01-04 23:12:34');
 1
 select parseDateTime(''); -- { serverError NOT_ENOUGH_SPACE }
+-- Test setting 'parsedatetime_e_requires_space_padding'
+--     In the default behavior, leading spaces for %e are optional
+select parseDateTime('  1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 0;
+2024-12-01 00:00:00
+select parseDateTime(' 1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 0;
+2024-12-01 00:00:00
+select parseDateTime('1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 0;
+2024-12-01 00:00:00
+--     If we enable the legacy behavior, leading spaces for %e are mandatory
+select parseDateTime('  1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 1; -- { serverError CANNOT_PARSE_DATETIME }
+select parseDateTime(' 1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 1;
+2024-12-01 00:00:00
+select parseDateTime('1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 1; -- { serverError CANNOT_PARSE_DATETIME }
 -- -------------------------------------------------------------------------------------------------------------------------
 -- Tests for parseDateTime64, these are not systematic
 
diff --git a/tests/queries/0_stateless/02668_parse_datetime.sql b/tests/queries/0_stateless/02668_parse_datetime.sql
index e04b0dc3feec..96443b1a8137 100644
--- a/tests/queries/0_stateless/02668_parse_datetime.sql
+++ b/tests/queries/0_stateless/02668_parse_datetime.sql
@@ -192,6 +192,16 @@ set session_timezone = 'UTC'; -- don't randomize the session timezone
 select parseDateTime('2021-01-04 23:12:34') = toDateTime('2021-01-04 23:12:34');
 select parseDateTime(''); -- { serverError NOT_ENOUGH_SPACE }
 
+-- Test setting 'parsedatetime_e_requires_space_padding'
+--     In the default behavior, leading spaces for %e are optional
+select parseDateTime('  1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 0;
+select parseDateTime(' 1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 0;
+select parseDateTime('1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 0;
+--     If we enable the legacy behavior, leading spaces for %e are mandatory
+select parseDateTime('  1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 1; -- { serverError CANNOT_PARSE_DATETIME }
+select parseDateTime(' 1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 1;
+select parseDateTime('1/12/2024', '%e/%m/%Y') settings parsedatetime_e_requires_space_padding = 1; -- { serverError CANNOT_PARSE_DATETIME }
+
 -- -------------------------------------------------------------------------------------------------------------------------
 -- Tests for parseDateTime64, these are not systematic
 
diff --git a/tests/queries/0_stateless/02783_parsedatetimebesteffort_syslog.sql b/tests/queries/0_stateless/02783_parsedatetimebesteffort_syslog.sql
index ecaec9f99bf1..94c4462d51f7 100644
--- a/tests/queries/0_stateless/02783_parsedatetimebesteffort_syslog.sql
+++ b/tests/queries/0_stateless/02783_parsedatetimebesteffort_syslog.sql
@@ -1,4 +1,5 @@
 SET session_timezone = 'UTC';
+SET formatdatetime_e_with_space_padding = 1;
 
 SELECT 'The reference time point is 2023-06-30 23:59:30';
 SELECT '───────────────────────────────────────────────';
@@ -7,7 +8,7 @@ SELECT '────────────────────────
 
 WITH
     toDateTime('2023-06-30 23:59:30') AS dt_ref,
-    now() AS dt_now, 
+    now() AS dt_now,
     date_sub(DAY, 1, dt_now) as dt_before,
     dateDiff(SECOND, dt_ref, dt_now) AS time_shift,
     formatDateTime(dt_before, '%b %e %T') AS syslog_before
@@ -33,7 +34,7 @@ SELECT '────────────────────────
 
 WITH
     toDateTime('2023-06-30 23:59:30') AS dt_ref,
-    now() AS dt_now, 
+    now() AS dt_now,
     date_add(DAY, 1, dt_now) as dt_after,
     dateDiff(SECOND, dt_ref, dt_now) AS time_shift,
     formatDateTime(dt_after, '%b %e %T') AS syslog_after
diff --git a/tests/queries/0_stateless/03511_formatDateTime_e_space_padding.reference b/tests/queries/0_stateless/03511_formatDateTime_e_space_padding.reference
new file mode 100644
index 000000000000..97ee62917669
--- /dev/null
+++ b/tests/queries/0_stateless/03511_formatDateTime_e_space_padding.reference
@@ -0,0 +1,3 @@
+7/05/2024	9
+ 7/05/2024	10
+7/05/2024	9
diff --git a/tests/queries/0_stateless/03511_formatDateTime_e_space_padding.sql b/tests/queries/0_stateless/03511_formatDateTime_e_space_padding.sql
new file mode 100644
index 000000000000..17fbf520d9a4
--- /dev/null
+++ b/tests/queries/0_stateless/03511_formatDateTime_e_space_padding.sql
@@ -0,0 +1,3 @@
+SELECT formatDateTime(toDate('2024-05-07'), '%e/%m/%Y') as _date, length(_date); -- default behavior
+SELECT formatDateTime(toDate('2024-05-07'), '%e/%m/%Y') as _date, length(_date) settings formatdatetime_e_with_space_padding = 1;
+SELECT formatDateTime(toDate('2024-05-07'), '%e/%m/%Y') as _date, length(_date) settings formatdatetime_e_with_space_padding = 0;
