You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical Error: Virtual column _distance must be filled by range reader with LWU
### Describe the bug

Easy to reproduce.

### How to reproduce

Run Fiddle: https://fiddle.clickhouse.com/95cbec9d-639f-4c0c-81b4-c77b1b30ae7d

### Error message and/or stacktrace

Stack trace:

```
<Fatal> : Logical error: 'Virtual column _distance must be filled by range reader'.
<Fatal> : Stack trace (when copying this message, always include the lines below):

0. contrib/llvm-project/libcxx/include/__exception/exception.h:113: Poco::Exception::Exception(String const&, int) @ 0x000000002663c8f2
1. src/Common/Exception.cpp:115: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000140c1fe6
2. src/Common/Exception.h:119: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000cdb55ac
3. src/Common/Exception.h:137: DB::Exception::Exception<String const&>(int, FormatStringHelperImpl<std::type_identity<String const&>::type>, String const&) @ 0x000000000df53036
4. src/Storages/MergeTree/IMergeTreeReader.cpp:111: DB::IMergeTreeReader::fillVirtualColumns(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&, unsigned long) const @ 0x000000001ddab777
5. src/Storages/MergeTree/MergeTreeReadersChain.cpp:122: DB::MergeTreeReadersChain::executeActionsBeforePrewhere(DB::MergeTreeRangeReader::ReadResult&, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&, DB::MergeTreeRangeReader&, DB::Block const&, unsigned long) const @ 0x000000001e075d17
6. src/Storages/MergeTree/MergeTreeReadersChain.cpp:75: DB::MergeTreeReadersChain::read(unsigned long, DB::MarkRanges&, std::vector<DB::MarkRanges, std::allocator<DB::MarkRanges>>&) @ 0x000000001e07504e
7. src/Storages/MergeTree/MergeTreeReadTask.cpp:229: DB::MergeTreeReadTask::read() @ 0x000000001e072433
8. src/Storages/MergeTree/MergeTreeSelectAlgorithms.h:53: DB::MergeTreeInOrderSelectAlgorithm::readFromTask(DB::MergeTreeReadTask&) @ 0x000000001ebd984c
9. src/Storages/MergeTree/MergeTreeSelectProcessor.cpp:228: DB::MergeTreeSelectProcessor::read() @ 0x000000001e081045
10. src/Storages/MergeTree/MergeTreeSource.cpp:229: DB::MergeTreeSource::tryGenerate() @ 0x000000001ebc45a9
11. src/Processors/ISource.cpp:110: DB::ISource::work() @ 0x000000001e60ccc2
12. src/Processors/Executors/ExecutionThreadContext.cpp:53: DB::ExecutionThreadContext::executeTask() @ 0x000000001e6296d0
13. src/Processors/Executors/PipelineExecutor.cpp:350: DB::PipelineExecutor::executeStepImpl(unsigned long, DB::IAcquiredSlot*, std::atomic<bool>*) @ 0x000000001e61c685
14. src/Processors/Executors/PipelineExecutor.cpp:278: DB::PipelineExecutor::executeSingleThread(unsigned long, DB::IAcquiredSlot*) @ 0x000000001e61cbe9
15. src/Processors/Executors/PipelineExecutor.cpp:598: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x000000001e61b121
16. src/Processors/Executors/PipelineExecutor.cpp:136: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x000000001e61a83f
17. src/Processors/Executors/CompletedPipelineExecutor.cpp:42: void std::__function::__policy_invoker<void ()>::__call_impl[abi:se190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::CompletedPipelineExecutor::execute()::$_0>(DB::CompletedPipelineExecutor::execute()::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000001e619ad7
18. contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x00000000142059a6
19. contrib/llvm-project/libcxx/include/__type_traits/invoke.h:117: void* std::__thread_proxy[abi:se190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001420c3c0
20. start_thread @ 0x00000000000a27f1
21. __GI___clone3 @ 0x0000000000133c9c
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
