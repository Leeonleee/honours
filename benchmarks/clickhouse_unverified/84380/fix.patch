diff --git a/src/Interpreters/MutationsInterpreter.cpp b/src/Interpreters/MutationsInterpreter.cpp
index 1d4b9486cb06..c2dde0ced41c 100644
--- a/src/Interpreters/MutationsInterpreter.cpp
+++ b/src/Interpreters/MutationsInterpreter.cpp
@@ -344,6 +344,11 @@ MergeTreeData::DataPartPtr MutationsInterpreter::Source::getMergeTreeDataPart()
     return part;
 }
 
+bool MutationsInterpreter::Source::isMutatingDataPart() const
+{
+    return part != nullptr;
+}
+
 bool MutationsInterpreter::Source::supportsLightweightDelete() const
 {
     if (part)
@@ -1194,7 +1199,7 @@ void MutationsInterpreter::prepareMutationStages(std::vector<Stage> & prepared_s
 
     /// Add persistent virtual columns if the whole part is rewritten,
     /// because we should preserve them in parts after mutation.
-    if (prepared_stages.back().isAffectingAllColumns(storage_columns))
+    if (source.isMutatingDataPart() && prepared_stages.back().isAffectingAllColumns(storage_columns))
     {
         for (const auto & column_name : available_columns)
         {
diff --git a/src/Interpreters/MutationsInterpreter.h b/src/Interpreters/MutationsInterpreter.h
index 79e32f384f04..67e762f2b5b7 100644
--- a/src/Interpreters/MutationsInterpreter.h
+++ b/src/Interpreters/MutationsInterpreter.h
@@ -133,6 +133,7 @@ class MutationsInterpreter
         const MergeTreeData * getMergeTreeData() const;
         AlterConversionsPtr getAlterConversions() const { return alter_conversions; }
         MergeTreeData::DataPartPtr getMergeTreeDataPart() const;
+        bool isMutatingDataPart() const;
 
         bool supportsLightweightDelete() const;
         bool materializeTTLRecalculateOnly() const;
