diff --git a/tests/integration/test_executable_user_defined_function/test.py b/tests/integration/test_executable_user_defined_function/test.py
index ccc06a7b43a8..8b79223a4d27 100644
--- a/tests/integration/test_executable_user_defined_function/test.py
+++ b/tests/integration/test_executable_user_defined_function/test.py
@@ -163,6 +163,7 @@ def test_executable_function_non_direct_bash(started_cluster):
 def test_executable_function_sum_json_python(started_cluster):
     skip_test_msan(node)
 
+    node.query("DROP TABLE IF EXISTS test_table;")
     node.query("CREATE TABLE test_table (lhs UInt64, rhs UInt64) ENGINE=TinyLog;")
     node.query("INSERT INTO test_table VALUES (0, 0), (1, 1), (2, 2);")
 
@@ -234,6 +235,7 @@ def test_executable_function_sum_json_python(started_cluster):
 def test_executable_function_input_nullable_python(started_cluster):
     skip_test_msan(node)
 
+    node.query("DROP TABLE IF EXISTS test_table_nullable;")
     node.query(
         "CREATE TABLE test_table_nullable (value Nullable(UInt64)) ENGINE=TinyLog;"
     )
@@ -265,6 +267,8 @@ def test_executable_function_input_nullable_python(started_cluster):
         == "Key 0
Key Nullable
Key 2
"
     )
 
+    node.query("DROP TABLE test_table_nullable;")
+
 
 def test_executable_function_parameter_python(started_cluster):
     skip_test_msan(node)
@@ -334,3 +338,25 @@ def test_executable_function_always_error_python(started_cluster):
         assert False, "Exception have to be thrown"
     except Exception as ex:
         assert "DB::Exception: Child process was exited with return code 1" in str(ex)
+
+def test_executable_function_query_cache(started_cluster):
+    '''Test for issue #77553: Externally-defined UDFs may be non-deterministic. The query cache should treat them as such, i.e. reject them.'''
+    '''Also see tests/0_stateless/test_query_cache_udf_sql.sql'''
+    skip_test_msan(node)
+
+    node.query("SYSTEM DROP QUERY CACHE");
+
+    # query_cache_nondeterministic_function_handling = throw
+    assert node.query_and_get_error("SELECT test_function_bash(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'throw'")
+    assert node.query("SELECT count(*) FROM system.query_cache") == "0
"
+    node.query("SYSTEM DROP QUERY CACHE");
+
+    # query_cache_nondeterministic_function_handling = save
+    assert node.query("SELECT test_function_bash(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'save'") == "Key 1
"
+    assert node.query("SELECT count(*) FROM system.query_cache") == "1
"
+    node.query("SYSTEM DROP QUERY CACHE");
+
+    # query_cache_nondeterministic_function_handling = ignore
+    assert node.query("SELECT test_function_bash(1) SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'ignore'") == "Key 1
"
+    assert node.query("SELECT count(*) FROM system.query_cache") == "0
"
+    node.query("SYSTEM DROP QUERY CACHE");
diff --git a/tests/queries/0_stateless/02494_query_cache_udf_sql.reference b/tests/queries/0_stateless/02494_query_cache_udf_sql.reference
new file mode 100644
index 000000000000..69692d402fc3
--- /dev/null
+++ b/tests/queries/0_stateless/02494_query_cache_udf_sql.reference
@@ -0,0 +1,6 @@
+-- query_cache_nondeterministic_function_handling = throw
+0
+-- query_cache_nondeterministic_function_handling = save
+1
+-- query_cache_nondeterministic_function_handling = ignore
+0
diff --git a/tests/queries/0_stateless/02494_query_cache_udf_sql.sql b/tests/queries/0_stateless/02494_query_cache_udf_sql.sql
new file mode 100644
index 000000000000..0a87453400fe
--- /dev/null
+++ b/tests/queries/0_stateless/02494_query_cache_udf_sql.sql
@@ -0,0 +1,27 @@
+-- Tags: no-parallel
+-- Tag no-parallel: Messes with internal cache
+
+-- Test for issue #77553: SQL-defined UDFs may be non-deterministic. The query cache should treat them as such, i.e. reject them.
+-- Also see 02494_query_cache_udf_executable.sh
+
+SYSTEM DROP QUERY CACHE;
+DROP FUNCTION IF EXISTS udf;
+
+CREATE FUNCTION udf AS (a) -> a + 1;
+
+SELECT '-- query_cache_nondeterministic_function_handling = throw';
+SELECT udf(1) FORMAT Null SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'throw'; -- { serverError QUERY_CACHE_USED_WITH_NONDETERMINISTIC_FUNCTIONS }
+SELECT count(*) FROM system.query_cache;
+SYSTEM DROP QUERY CACHE;
+
+SELECT '-- query_cache_nondeterministic_function_handling = save';
+SELECT udf(1) FORMAT Null SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'save';
+SELECT count(*) FROM system.query_cache;
+SYSTEM DROP QUERY CACHE;
+
+SELECT '-- query_cache_nondeterministic_function_handling = ignore';
+SELECT udf(1) FORMAT Null SETTINGS use_query_cache = true, query_cache_nondeterministic_function_handling = 'ignore';
+SELECT count(*) FROM system.query_cache;
+SYSTEM DROP QUERY CACHE;
+
+DROP FUNCTION udf;
