{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 63234,
  "instance_id": "ClickHouse__ClickHouse-63234",
  "issue_numbers": [
    "63228"
  ],
  "base_commit": "6d544d94174fa1b0b320323a6942108f3887a98c",
  "patch": "diff --git a/src/Processors/QueryPlan/Optimizations/filterPushDown.cpp b/src/Processors/QueryPlan/Optimizations/filterPushDown.cpp\nindex 2031b64325b5..7dd526cbe95c 100644\n--- a/src/Processors/QueryPlan/Optimizations/filterPushDown.cpp\n+++ b/src/Processors/QueryPlan/Optimizations/filterPushDown.cpp\n@@ -253,7 +253,7 @@ static size_t tryPushDownOverJoinStep(QueryPlan::Node * parent_node, QueryPlan::\n \n     bool has_single_clause = table_join.getClauses().size() == 1;\n \n-    if (has_single_clause)\n+    if (has_single_clause && !filled_join)\n     {\n         const auto & join_clause = table_join.getClauses()[0];\n         size_t key_names_size = join_clause.key_names_left.size();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.reference b/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.reference\nnew file mode 100644\nindex 000000000000..4f89085d5ffa\n--- /dev/null\n+++ b/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.reference\n@@ -0,0 +1,1 @@\n+1\t1\t1\ttest\ndiff --git a/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.sql b/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.sql\nnew file mode 100644\nindex 000000000000..fc816623bd46\n--- /dev/null\n+++ b/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.sql\n@@ -0,0 +1,45 @@\n+DROP TABLE IF EXISTS t1;\n+CREATE TABLE t1\n+(\n+    id UInt64,\n+    external_id UInt64\n+)\n+ENGINE = MergeTree\n+ORDER BY id;\n+\n+DROP TABLE IF EXISTS t2;\n+CREATE TABLE t2\n+(\n+    id UInt64,\n+    name String\n+)\n+ENGINE = MergeTree\n+ORDER BY id;\n+\n+INSERT INTO t1 VALUES (1, 1);\n+\n+INSERT INTO t2 VALUES (1, 'test');\n+\n+DROP DICTIONARY IF EXISTS d2;\n+CREATE DICTIONARY d2\n+(\n+    id UInt64,\n+    name String,\n+)\n+PRIMARY KEY id\n+SOURCE(CLICKHOUSE(\n+    table t2))\n+LIFETIME(MIN 600 MAX 900)\n+LAYOUT(HASHED());\n+\n+SELECT\n+    *\n+FROM\n+    t1\n+    LEFT JOIN d2 ON d2.id = t1.external_id\n+    WHERE t1.id = 1\n+LIMIT 1;\n+\n+DROP DICTIONARY d2;\n+DROP TABLE t2;\n+DROP TABLE t1;\n",
  "problem_statement": " JOIN predicates pushdown issue (introduced in 24.4)\n```\r\nCREATE TABLE t1\r\n(\r\n    id UInt64,\r\n    external_id UInt64\r\n)\r\nENGINE = MergeTree\r\nORDER BY id;\r\nCREATE TABLE t2\r\n(\r\n    id UInt64,\r\n    name String\r\n)\r\nENGINE = MergeTree\r\nORDER BY id;\r\n\r\nINSERT INTO t1 VALUES (1, 1);\r\n\r\nINSERT INTO t2 VALUES (1, 'test');\r\n\r\nCREATE DICTIONARY d2\r\n(\r\n    id UInt64,\r\n    name String,\r\n)\r\nPRIMARY KEY id\r\nSOURCE(CLICKHOUSE(\r\n    table t2))\r\nLIFETIME(MIN 600 MAX 900)\r\nLAYOUT(HASHED());\r\n\r\nSELECT\r\n    *\r\nFROM\r\n    t1\r\n    LEFT JOIN d2 ON d2.id = t1.external_id\r\n    WHERE t1.id = 1\r\nLIMIT 1; \r\n```\r\n\r\nLooks to have broken in 24.4 https://fiddle.clickhouse.com/92d03917-e81a-4d8f-9916-d2374a2ea05e, 24.3* works.\r\n\n",
  "hints_text": "Looks like a bug in query plan optimization. Workaround is to disable some query plan optimizations`SET query_plan_merge_expressions = 0` or `SET query_plan_filter_push_down = 0`",
  "created_at": "2024-05-01T11:41:42Z",
  "modified_files": [
    "src/Processors/QueryPlan/Optimizations/filterPushDown.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.reference",
    "b/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.sql"
  ]
}