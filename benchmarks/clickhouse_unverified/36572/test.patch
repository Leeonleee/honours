diff --git a/tests/integration/test_profile_events_s3/test.py b/tests/integration/test_profile_events_s3/test.py
index 5171ea4ac0ef..aa578a1273a3 100644
--- a/tests/integration/test_profile_events_s3/test.py
+++ b/tests/integration/test_profile_events_s3/test.py
@@ -32,25 +32,27 @@ def cluster():
 
 
 init_list = {
+    "ReadBufferFromS3Bytes": 0,
     "S3ReadMicroseconds": 0,
-    "S3ReadBytes": 0,
+    "ReadBufferFromS3Microseconds": 0,
+    "ReadBufferFromS3RequestsErrors": 0,
     "S3ReadRequestsCount": 0,
     "S3ReadRequestsErrorsTotal": 0,
     "S3ReadRequestsErrors503": 0,
     "S3ReadRequestsRedirects": 0,
     "S3WriteMicroseconds": 0,
-    "S3WriteBytes": 0,
     "S3WriteRequestsCount": 0,
     "S3WriteRequestsErrorsTotal": 0,
     "S3WriteRequestsErrors503": 0,
     "S3WriteRequestsRedirects": 0,
+    "WriteBufferFromS3Bytes": 0,
 }
 
 
 def get_s3_events(instance):
     result = init_list.copy()
     events = instance.query(
-        "SELECT event,value FROM system.events WHERE event LIKE 'S3%'"
+        "SELECT event,value FROM system.events WHERE event LIKE '%S3%'"
     ).split("
")
     for event in events:
         ev = event.split("\t")
@@ -108,7 +110,7 @@ def get_query_stat(instance, hint):
     for event in events:
         ev = event.split("\t")
         if len(ev) == 2:
-            if ev[0].startswith("S3"):
+            if "S3" in ev[0]:
                 result[ev[0]] += int(ev[1])
     return result
 
@@ -151,7 +153,9 @@ def test_profile_events(cluster):
     stat1 = get_query_stat(instance, query1)
     for metric in stat1:
         assert stat1[metric] == metrics1[metric] - metrics0[metric]
-    assert metrics1["S3WriteBytes"] - metrics0["S3WriteBytes"] == size1
+    assert (
+        metrics1["WriteBufferFromS3Bytes"] - metrics0["WriteBufferFromS3Bytes"] == size1
+    )
 
     query2 = "INSERT INTO test_s3.test_s3 FORMAT Values"
     instance.query(query2 + " (1,1)")
@@ -171,7 +175,10 @@ def test_profile_events(cluster):
     stat2 = get_query_stat(instance, query2)
     for metric in stat2:
         assert stat2[metric] == metrics2[metric] - metrics1[metric]
-    assert metrics2["S3WriteBytes"] - metrics1["S3WriteBytes"] == size2 - size1
+    assert (
+        metrics2["WriteBufferFromS3Bytes"] - metrics1["WriteBufferFromS3Bytes"]
+        == size2 - size1
+    )
 
     query3 = "SELECT * from test_s3.test_s3"
     assert instance.query(query3) == "1\t1
"
