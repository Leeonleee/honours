{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 74631,
  "instance_id": "ClickHouse__ClickHouse-74631",
  "issue_numbers": [
    "74627"
  ],
  "base_commit": "969247d35a782a0cf9cfe8b9216606003b504265",
  "patch": "diff --git a/contrib/SimSIMD b/contrib/SimSIMD\nindex da2d38537299..bee6bb499ab5 160000\n--- a/contrib/SimSIMD\n+++ b/contrib/SimSIMD\n@@ -1,1 +1,1 @@\n-Subproject commit da2d38537299ade247c2499131d936fb8db38f03\n+Subproject commit bee6bb499ab526007fc5d5289f1d998aa1eb6249\ndiff --git a/contrib/usearch b/contrib/usearch\nindex 9561fcae1249..914947990a88 160000\n--- a/contrib/usearch\n+++ b/contrib/usearch\n@@ -1,1 +1,1 @@\n-Subproject commit 9561fcae1249ea8effbf71250e8a7a7ea97e5dfe\n+Subproject commit 914947990a88898c7380dcf4387fdd5bb220926c\ndiff --git a/docs/en/engines/table-engines/mergetree-family/annindexes.md b/docs/en/engines/table-engines/mergetree-family/annindexes.md\nindex 47d40e38999b..fba42df46be6 100644\n--- a/docs/en/engines/table-engines/mergetree-family/annindexes.md\n+++ b/docs/en/engines/table-engines/mergetree-family/annindexes.md\n@@ -71,8 +71,8 @@ ORDER BY id;\n USearch indexes are currently experimental, to use them you first need to `SET allow_experimental_vector_similarity_index = 1`.\n :::\n \n-The index can be build on a column of type [Array(Float64)](../../../sql-reference/data-types/array.md),\n-[Array(Float32)](../../../sql-reference/data-types/array.md), or [Array(BFloat16)](../../../sql-reference/data-types/array.md).\n+The index can be build on columns of type [Array(Float64)](../../../sql-reference/data-types/array.md) or\n+[Array(Float32)](../../../sql-reference/data-types/array.md).\n \n Index parameters:\n - `method`: Currently only `hnsw` is supported.\ndiff --git a/src/Storages/MergeTree/MergeTreeIndexVectorSimilarity.cpp b/src/Storages/MergeTree/MergeTreeIndexVectorSimilarity.cpp\nindex 6f986abe2057..fd17bf70ffdd 100644\n--- a/src/Storages/MergeTree/MergeTreeIndexVectorSimilarity.cpp\n+++ b/src/Storages/MergeTree/MergeTreeIndexVectorSimilarity.cpp\n@@ -378,8 +378,8 @@ void MergeTreeIndexAggregatorVectorSimilarity::update(const Block & block, size_\n     const auto * data_type_array = typeid_cast<const DataTypeArray *>(block.getByName(index_column_name).type.get());\n     if (!data_type_array)\n         throw Exception(ErrorCodes::LOGICAL_ERROR, \"Expected data type Array(Float*)\");\n-    const TypeIndex nested_type_index = data_type_array->getNestedType()->getTypeId();\n \n+    const TypeIndex nested_type_index = data_type_array->getNestedType()->getTypeId();\n     if (WhichDataType(nested_type_index).isFloat32())\n         updateImpl<ColumnFloat32>(column_array, column_array_offsets, index, dimensions, rows);\n     else if (WhichDataType(nested_type_index).isFloat64())\n@@ -569,7 +569,7 @@ void vectorSimilarityIndexValidator(const IndexDescription & index, bool /* atta\n     if (!data_type_array)\n         throw Exception(ErrorCodes::ILLEGAL_COLUMN, \"Vector similarity indexes can only be created on columns of type Array(Float*)\");\n     TypeIndex nested_type_index = data_type_array->getNestedType()->getTypeId();\n-    if (!WhichDataType(nested_type_index).isFloat())\n+    if (!WhichDataType(nested_type_index).isNativeFloat())\n         throw Exception(ErrorCodes::ILLEGAL_COLUMN, \"Vector similarity indexes can only be created on columns of type Array(Float*)\");\n }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02354_vector_search_bf16_column.reference b/tests/queries/0_stateless/02354_vector_search_bf16_column.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02354_vector_search_bf16_column.sql b/tests/queries/0_stateless/02354_vector_search_bf16_column.sql\nnew file mode 100644\nindex 000000000000..9445b7676716\n--- /dev/null\n+++ b/tests/queries/0_stateless/02354_vector_search_bf16_column.sql\n@@ -0,0 +1,10 @@\n+-- Tags: no-fasttest, no-ordinary-database\n+\n+-- Tests that no vector similarity indexes can be created on Array(BFloat16) columns.\n+-- (This is because of a limitation in usearch which does not allow ingest of bf16)\n+-- --> https://github.com/unum-cloud/usearch/issues/553\n+\n+SET allow_experimental_vector_similarity_index = 1;\n+\n+DROP TABLE IF EXISTS tab;\n+CREATE TABLE tab(id Int32, vec Array(BFloat16), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY tuple(); -- { serverError ILLEGAL_COLUMN }\n",
  "problem_statement": "LOGICAL_ERROR in MergeTreeIndexVectorSimilarity: Expected data type Array(Float*)\n### Company or project name\n\nClickHouse\n\n### Describe what's wrong\n\nthis query produces ILLEGAL_COLUMN in latest (24.12.3.47), but LOGICAL_ERROR in current head (25.1.1.3275)\n```\nset allow_experimental_vector_similarity_index=1;\n\nCREATE TABLE tab__fuzz_10\n(\n    `id` Int32,\n    `vec` Array(BFloat16),\n    INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance') GRANULARITY 100000000\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS index_granularity = 8192;\n\nINSERT INTO tab__fuzz_10 SELECT\n    number,\n    [sipHash64(number) / 18446744073709551615, wyHash64(number) / 18446744073709551615]\nFROM numbers(660000);\n```\nerror:\n```\nReceived exception from server (version 25.1.1):\nCode: 49. DB::Exception: Received from localhost:9000. DB::Exception: Expected data type Array(Float*). (LOGICAL_ERROR)\n(query: INSERT INTO tab__fuzz_10 SELECT\n    number,\n    [sipHash64(number) / 18446744073709551615, wyHash64(number) / 18446744073709551615]\nFROM numbers(660000);)\n```\n\nhttps://fiddle.clickhouse.com/8ddc7c30-f1a0-4054-9a78-19b0e22a1e22\n\nstacktrace:\n```\n2025.01.15 20:25:44.636103 [ 358217 ] {f782ef8a-6058-4e92-a765-6ff854654505} <Fatal> : Logical error: 'Expected data type Array(Float*)'.                                                                                      [90/210]\u2199 Progress: 660.00 thousand rows, 5.28 MB (3.65 million rows/s., 29.20 MB/s.)  99%2025.01.15 20:25:45.105770 [ 358217 ] {f782ef8a-6058-4e92-a765-6ff854654505} <Fatal> : Stack trace (when copying this message, always include the lin\nes below):\n\n0. /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__exception/exception.h:106: Poco::Exception::Exception(String const&, int) @ 0x000000001874abf2\n1. /home/ubuntu/ClickHouse-master/src/Common/Exception.cpp:105: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000cd77e19\n2. /home/ubuntu/ClickHouse-master/src/Common/Exception.h:105: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x00000000076af12c\n3. /home/ubuntu/ClickHouse-master/src/Common/Exception.h:123: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x00000000076b20eb\n4. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeIndexVectorSimilarity.cpp:388: DB::MergeTreeIndexAggregatorVectorSimilarity::update(DB::Block const&, unsigned long*, unsigned long) @ 0x000000001422752a\n5. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:416: DB::MergeTreeDataPartWriterOnDisk::calculateAndSerializeSkipIndices(DB::Block const&, std::vector<DB::Granule, std::allocator<DB::Granu\nle>> const&) @ 0x0000000014196f3c\n6. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:348: DB::MergeTreeDataPartWriterWide::write(DB::Block const&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const*)\n @ 0x000000001419d16b\n7. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergedBlockOutputStream.cpp:418: DB::MergedBlockOutputStream::writeWithPermutation(DB::Block const&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul>\nconst*) @ 0x00000000142df9bb\n8. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeDataWriter.cpp:761: DB::MergeTreeDataWriter::writeTempPartImpl(DB::BlockWithPartition&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB\n::Context const>, long, bool) @ 0x00000000141cc6b0\n9. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeDataWriter.cpp:482: DB::MergeTreeDataWriter::writeTempPart(DB::BlockWithPartition&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::Co\nntext const>) @ 0x00000000141c979f\n10. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeSink.cpp:127: DB::MergeTreeSink::consume(DB::Chunk&) @ 0x000000001443e694\n11. /home/ubuntu/ClickHouse-master/src/Processors/Sinks/SinkToStorage.cpp:18: DB::SinkToStorage::onConsume(DB::Chunk) @ 0x0000000014a97db5\n12. /home/ubuntu/ClickHouse-master/src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: void std::__function::__policy_invoker<void ()>::__call_impl[abi:se180100]<std::__function::__default_alloc_func<DB::ExceptionKeepingTr\nansform::work()::$_1, void ()>>(std::__function::__policy_storage const*) @ 0x00000000149befc9\n13. /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:714: ? @ 0x00000000149bee0e\n14. /home/ubuntu/ClickHouse-master/src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: DB::ExceptionKeepingTransform::work() @ 0x00000000149be91e\n15. /home/ubuntu/ClickHouse-master/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::ExecutionThreadContext::executeTask() @ 0x0000000014777937\n16. /home/ubuntu/ClickHouse-master/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x000000001476dae5\n17. /home/ubuntu/ClickHouse-master/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x000000001476dd7e\n18. /home/ubuntu/ClickHouse-master/src/Processors/Executors/PipelineExecutor.cpp:455: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x000000001476c687\n19. /home/ubuntu/ClickHouse-master/src/Processors/Executors/PipelineExecutor.cpp:127: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x000000001476c06f\n20. /home/ubuntu/ClickHouse-master/src/Processors/Executors/CompletedPipelineExecutor.cpp:49: void std::__function::__policy_invoker<void ()>::__call_impl[abi:se180100]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl\n<true, true>::ThreadFromGlobalPoolImpl<DB::CompletedPipelineExecutor::execute()::$_0>(DB::CompletedPipelineExecutor::execute()::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000001476b387\n21. /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:714: ? @ 0x000000000ce3c32f\n22. /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__type_traits/invoke.h:312: void* std::__thread_proxy[abi:se180100]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>,\n void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000000ce42160\n23. ? @ 0x00007ffff7c94ac3\n24. ? @ 0x00007ffff7d26850\n\n2025.01.15 20:25:45.107966 [ 358218 ] {} <Fatal> ClientBase: ########## Short fault info ############\n2025.01.15 20:25:45.108028 [ 358218 ] {} <Fatal> ClientBase: (version 25.1.1.1, build id: , git hash: 0ca416dc8cfd7c0b52f719d80e906ee1131cf42b, architecture: x86_64) (from thread 358217) Received signal 6\n2025.01.15 20:25:45.108044 [ 358218 ] {} <Fatal> ClientBase: Signal description: Aborted\n2025.01.15 20:25:45.108051 [ 358218 ] {} <Fatal> ClientBase:\n2025.01.15 20:25:45.108068 [ 358218 ] {} <Fatal> ClientBase: Stack trace: 0x000000000cda9f28 0x000000000d069be2 0x00007ffff7c42520 0x00007ffff7c969fd 0x00007ffff7c42476 0x00007ffff7c287f3 0x000000000cd7779c 0x000000000cd77fdc 0x000\n00000076af12c 0x00000000076b20eb 0x000000001422752a 0x0000000014196f3c 0x000000001419d16b 0x00000000142df9bb 0x00000000141cc6b0 0x00000000141c979f 0x000000001443e694 0x0000000014a97db5 0x00000000149befc9 0x00000000149bee0e 0x000000\n00149be91e 0x0000000014777937 0x000000001476dae5 0x000000001476dd7e 0x000000001476c687 0x000000001476c06f 0x000000001476b387 0x000000000ce3c32f 0x000000000ce42160 0x00007ffff7c94ac3 0x00007ffff7d26850\n2025.01.15 20:25:45.108080 [ 358218 ] {} <Fatal> ClientBase: ########################################\n2025.01.15 20:25:45.108106 [ 358218 ] {} <Fatal> ClientBase: (version 25.1.1.1, build id: , git hash: 0ca416dc8cfd7c0b52f719d80e906ee1131cf42b) (from thread 358217) (query_id: f782ef8a-6058-4e92-a765-6ff854654505) (query: INSERT IN\nTO tab__fuzz_10 SELECT\n    number,\n    [sipHash64(number) / 18446744073709551615, wyHash64(number) / 18446744073709551615]\nFROM numbers(660000)) Received signal Aborted (6)\n2025.01.15 20:25:45.108121 [ 358218 ] {} <Fatal> ClientBase:\n2025.01.15 20:25:45.108133 [ 358218 ] {} <Fatal> ClientBase: Stack trace: 0x000000000cda9f28 0x000000000d069be2 0x00007ffff7c42520 0x00007ffff7c969fd 0x00007ffff7c42476 0x00007ffff7c287f3 0x000000000cd7779c 0x000000000cd77fdc 0x000\n00000076af12c 0x00000000076b20eb 0x000000001422752a 0x0000000014196f3c 0x000000001419d16b 0x00000000142df9bb 0x00000000141cc6b0 0x00000000141c979f 0x000000001443e694 0x0000000014a97db5 0x00000000149befc9 0x00000000149bee0e 0x000000\n00149be91e 0x0000000014777937 0x000000001476dae5 0x000000001476dd7e 0x000000001476c687 0x000000001476c06f 0x000000001476b387 0x000000000ce3c32f 0x000000000ce42160 0x00007ffff7c94ac3 0x00007ffff7d26850\n2025.01.15 20:25:45.363024 [ 358218 ] {} <Fatal> ClientBase: 0.0. inlined from /home/ubuntu/ClickHouse-master/src/Common/StackTrace.cpp:381: StackTrace::tryCapture()\n2025.01.15 20:25:45.363065 [ 358218 ] {} <Fatal> ClientBase: 0. /home/ubuntu/ClickHouse-master/src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000cda9f28\n2025.01.15 20:25:45.570625 [ 358218 ] {} <Fatal> ClientBase: 1. /home/ubuntu/ClickHouse-master/src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x000000000d069be2\n2025.01.15 20:25:45.570661 [ 358218 ] {} <Fatal> ClientBase: 2. ? @ 0x00007ffff7c42520\n2025.01.15 20:25:45.570672 [ 358218 ] {} <Fatal> ClientBase: 3. ? @ 0x00007ffff7c969fd\n2025.01.15 20:25:45.570681 [ 358218 ] {} <Fatal> ClientBase: 4. ? @ 0x00007ffff7c42476\n2025.01.15 20:25:45.570688 [ 358218 ] {} <Fatal> ClientBase: 5. ? @ 0x00007ffff7c287f3\n2025.01.15 20:25:45.666855 [ 358218 ] {} <Fatal> ClientBase: 6. /home/ubuntu/ClickHouse-master/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000cd7779c\n2025.01.15 20:25:45.698067 [ 358218 ] {} <Fatal> ClientBase: 7.0. inlined from /home/ubuntu/ClickHouse-master/src/Common/Exception.cpp:70: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> co\nnst&)\n2025.01.15 20:25:45.698112 [ 358218 ] {} <Fatal> ClientBase: 7. /home/ubuntu/ClickHouse-master/src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000cd77fdc\n2025.01.15 20:25:45.713694 [ 358218 ] {} <Fatal> ClientBase: 8.0. inlined from /home/ubuntu/ClickHouse-master/src/Common/Exception.h:105: Exception\n2025.01.15 20:25:45.713721 [ 358218 ] {} <Fatal> ClientBase: 8. /home/ubuntu/ClickHouse-master/src/Common/Exception.h:58: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x00000000076af12c\n2025.01.15 20:25:45.728840 [ 358218 ] {} <Fatal> ClientBase: 9. /home/ubuntu/ClickHouse-master/src/Common/Exception.h:123: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x00000000076b20eb\n2025.01.15 20:25:46.178402 [ 358218 ] {} <Fatal> ClientBase: 10. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeIndexVectorSimilarity.cpp:388: DB::MergeTreeIndexAggregatorVectorSimilarity::update(DB::Block const&, u\nnsigned long*, unsigned long) @ 0x000000001422752a\n2025.01.15 20:25:46.631298 [ 358218 ] {} <Fatal> ClientBase: 11. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:416: DB::MergeTreeDataPartWriterOnDisk::calculateAndSerializeSkipIndices(DB::B\nlock const&, std::vector<DB::Granule, std::allocator<DB::Granule>> const&) @ 0x0000000014196f3c\n2025.01.15 20:25:46.772855 [ 358218 ] {} <Fatal> ClientBase: 12. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:348: DB::MergeTreeDataPartWriterWide::write(DB::Block const&, DB::PODArray<unsig\nned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const*) @ 0x000000001419d16b\n2025.01.15 20:25:46.916278 [ 358218 ] {} <Fatal> ClientBase: 13.0. inlined from /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergedBlockOutputStream.cpp:418: DB::MergedBlockOutputStream::writeImpl(DB::Block const&, DB::POD\nArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const*)\n2025.01.15 20:25:46.916311 [ 358218 ] {} <Fatal> ClientBase: 13. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergedBlockOutputStream.cpp:100: DB::MergedBlockOutputStream::writeWithPermutation(DB::Block const&, DB::PODArra\ny<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const*) @ 0x00000000142df9bb\n2025.01.15 20:25:47.278700 [ 358218 ] {} <Fatal> ClientBase: 14. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeDataWriter.cpp:761: DB::MergeTreeDataWriter::writeTempPartImpl(DB::BlockWithPartition&, std::shared_ptr\n<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::Context const>, long, bool) @ 0x00000000141cc6b0\n2025.01.15 20:25:47.330890 [ 358218 ] {} <Fatal> ClientBase: 15. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeDataWriter.cpp:482: DB::MergeTreeDataWriter::writeTempPart(DB::BlockWithPartition&, std::shared_ptr<DB:\n:StorageInMemoryMetadata const> const&, std::shared_ptr<DB::Context const>) @ 0x00000000141c979f\n2025.01.15 20:25:47.428286 [ 358218 ] {} <Fatal> ClientBase: 16. /home/ubuntu/ClickHouse-master/src/Storages/MergeTree/MergeTreeSink.cpp:127: DB::MergeTreeSink::consume(DB::Chunk&) @ 0x000000001443e694\n2025.01.15 20:25:47.444500 [ 358218 ] {} <Fatal> ClientBase: 17. /home/ubuntu/ClickHouse-master/src/Processors/Sinks/SinkToStorage.cpp:18: DB::SinkToStorage::onConsume(DB::Chunk) @ 0x0000000014a97db5\n2025.01.15 20:25:47.502620 [ 358218 ] {} <Fatal> ClientBase: 18.0. inlined from /home/ubuntu/ClickHouse-master/src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: operator()\n2025.01.15 20:25:47.504477 [ 358218 ] {} <Fatal> ClientBase: 18.1. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__type_traits/invoke.h:344: decltype(std::declval<DB::ExceptionKeepingTransform::wor\nk()::$_1&>()()) std::__invoke[abi:se180100]<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&)\n2025.01.15 20:25:47.504495 [ 358218 ] {} <Fatal> ClientBase: 18.2. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__type_traits/invoke.h:419: void std::__invoke_void_return_wrapper<void, true>::__ca\nll[abi:se180100]<DB::ExceptionKeepingTransform::work()::$_1&>(DB::ExceptionKeepingTransform::work()::$_1&)\n2025.01.15 20:25:47.504504 [ 358218 ] {} <Fatal> ClientBase: 18.3. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:208: ?\n2025.01.15 20:25:47.504515 [ 358218 ] {} <Fatal> ClientBase: 18. /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:608: ? @ 0x00000000149befc9\n2025.01.15 20:25:47.521345 [ 358218 ] {} <Fatal> ClientBase: 19.0. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:714: ?\n2025.01.15 20:25:47.521371 [ 358218 ] {} <Fatal> ClientBase: 19.1. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:981: ?\n2025.01.15 20:25:47.521384 [ 358218 ] {} <Fatal> ClientBase: 19. /home/ubuntu/ClickHouse-master/src/Processors/Transforms/ExceptionKeepingTransform.cpp:115: DB::runStep(std::function<void ()>, DB::ThreadStatus*, std::atomic<unsigne\nd long>*) @ 0x00000000149bee0e\n2025.01.15 20:25:47.531837 [ 358218 ] {} <Fatal> ClientBase: 20. /home/ubuntu/ClickHouse-master/src/Processors/Transforms/ExceptionKeepingTransform.cpp:151: DB::ExceptionKeepingTransform::work() @ 0x00000000149be91e\n2025.01.15 20:25:47.575889 [ 358218 ] {} <Fatal> ClientBase: 21.0. inlined from /home/ubuntu/ClickHouse-master/src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallba\nck*)\n2025.01.15 20:25:47.575914 [ 358218 ] {} <Fatal> ClientBase: 21. /home/ubuntu/ClickHouse-master/src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x0000000014777937\n2025.01.15 20:25:47.625911 [ 358218 ] {} <Fatal> ClientBase: 22. /home/ubuntu/ClickHouse-master/src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000\n01476dae5\n2025.01.15 20:25:47.645477 [ 358218 ] {} <Fatal> ClientBase: 23. /home/ubuntu/ClickHouse-master/src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x000000001476dd7e\n2025.01.15 20:25:47.661916 [ 358218 ] {} <Fatal> ClientBase: 24. /home/ubuntu/ClickHouse-master/src/Processors/Executors/PipelineExecutor.cpp:455: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x000000001476c687\n2025.01.15 20:25:47.679775 [ 358218 ] {} <Fatal> ClientBase: 25. /home/ubuntu/ClickHouse-master/src/Processors/Executors/PipelineExecutor.cpp:127: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x000000001476c06f\n2025.01.15 20:25:47.696015 [ 358218 ] {} <Fatal> ClientBase: 26.0. inlined from /home/ubuntu/ClickHouse-master/src/Processors/Executors/CompletedPipelineExecutor.cpp:49: DB::threadFunction(DB::CompletedPipelineExecutor::Data&, std:\n:shared_ptr<DB::ThreadGroup>, unsigned long, bool)\n2025.01.15 20:25:47.696035 [ 358218 ] {} <Fatal> ClientBase: 26.1. inlined from /home/ubuntu/ClickHouse-master/src/Processors/Executors/CompletedPipelineExecutor.cpp:89: operator()\n2025.01.15 20:25:47.696052 [ 358218 ] {} <Fatal> ClientBase: 26.2. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__type_traits/invoke.h:344: decltype(std::declval<DB::CompletedPipelineExecutor::exe\ncute()::$_0&>()()) std::__invoke[abi:se180100]<DB::CompletedPipelineExecutor::execute()::$_0&>(DB::CompletedPipelineExecutor::execute()::$_0&)\n2025.01.15 20:25:47.697112 [ 358218 ] {} <Fatal> ClientBase: 26.3. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/tuple:1424: decltype(auto) std::__apply_tuple_impl[abi:se180100]<DB::CompletedPipeli\nneExecutor::execute()::$_0&, std::tuple<>&>(DB::CompletedPipelineExecutor::execute()::$_0&, std::tuple<>&, std::__tuple_indices<...>)\n2025.01.15 20:25:47.697127 [ 358218 ] {} <Fatal> ClientBase: 26.4. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/tuple:1428: decltype(auto) std::apply[abi:se180100]<DB::CompletedPipelineExecutor::e\nxecute()::$_0&, std::tuple<>&>(DB::CompletedPipelineExecutor::execute()::$_0&, std::tuple<>&)\n2025.01.15 20:25:47.697136 [ 358218 ] {} <Fatal> ClientBase: 26.5. inlined from /home/ubuntu/ClickHouse-master/src/Common/ThreadPool.h:311: operator()\n2025.01.15 20:25:47.697150 [ 358218 ] {} <Fatal> ClientBase: 26.6. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__type_traits/invoke.h:344: decltype(std::declval<DB::CompletedPipelineExecutor::exe\ncute()::$_0>()()) std::__invoke[abi:se180100]<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::CompletedPipelineExecutor::execute()::$_0>(DB::CompletedPipelineExecutor::execute()::$_0&&)::'lambda'()&>(DB::Complete\ndPipelineExecutor::execute()::$_0&&)\n2025.01.15 20:25:47.697169 [ 358218 ] {} <Fatal> ClientBase: 26.7. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__type_traits/invoke.h:419: void std::__invoke_void_return_wrapper<void, true>::__ca\nll[abi:se180100]<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::CompletedPipelineExecutor::execute()::$_0>(DB::CompletedPipelineExecutor::execute()::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true, true>::Thr\neadFromGlobalPoolImpl<DB::CompletedPipelineExecutor::execute()::$_0>(DB::CompletedPipelineExecutor::execute()::$_0&&)::'lambda'()&)\n2025.01.15 20:25:47.697182 [ 358218 ] {} <Fatal> ClientBase: 26.8. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:208: ?\n2025.01.15 20:25:47.697190 [ 358218 ] {} <Fatal> ClientBase: 26. /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:608: ? @ 0x000000001476b387\n2025.01.15 20:25:47.724273 [ 358218 ] {} <Fatal> ClientBase: 27.0. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:714: ?\n2025.01.15 20:25:47.724294 [ 358218 ] {} <Fatal> ClientBase: 27.1. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__functional/function.h:981: ?\n2025.01.15 20:25:47.724302 [ 358218 ] {} <Fatal> ClientBase: 27. /home/ubuntu/ClickHouse-master/src/Common/ThreadPool.cpp:785: ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x000000000ce3c32f\n2025.01.15 20:25:47.752938 [ 358218 ] {} <Fatal> ClientBase: 28.0. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__type_traits/invoke.h:312: decltype(*std::declval<ThreadPoolImpl<std::thread>::Thre\nadFromThreadPool*>().*std::declval<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)()>()()) std::__invoke[abi:se180100]<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFr\nomThreadPool*, void>(void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*&&)\n2025.01.15 20:25:47.752967 [ 358218 ] {} <Fatal> ClientBase: 28.1. inlined from /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__thread/thread.h:193: void std::__thread_execute[abi:se180100]<std::unique_ptr<std:\n:__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, 2ul>(std::tuple<std::unique_ptr<std::__thread_struct,\nstd::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>&, std::__tuple_indices<2ul>)\n2025.01.15 20:25:47.752978 [ 358218 ] {} <Fatal> ClientBase: 28. /home/ubuntu/ClickHouse-master/contrib/llvm-project/libcxx/include/__thread/thread.h:202: void* std::__thread_proxy[abi:se180100]<std::tuple<std::unique_ptr<std::__th\nread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000000ce42160\n2025.01.15 20:25:47.752991 [ 358218 ] {} <Fatal> ClientBase: 29. ? @ 0x00007ffff7c94ac3\n2025.01.15 20:25:47.752997 [ 358218 ] {} <Fatal> ClientBase: 30. ? @ 0x00007ffff7d26850\n2025.01.15 20:25:47.753864 [ 358218 ] {} <Fatal> ClientBase: This ClickHouse version is not official and should be upgraded to the official build.\n2025.01.15 20:25:47.753976 [ 358218 ] {} <Fatal> ClientBase: Changed settings: allow_introspection_functions = true, storage_file_read_method = 'mmap', implicit_select = true, allow_experimental_vector_similarity_index = true\nAborted (core dumped)\n```\n\n\n### Does it reproduce on the most recent release?\n\nYes\n\n### How to reproduce\n\nhttps://fiddle.clickhouse.com/8ddc7c30-f1a0-4054-9a78-19b0e22a1e22\n\n### Expected behavior\n\n_No response_\n\n### Error message and/or stacktrace\n\n_No response_\n\n### Additional context\n\nfound by AST fuzzer:\nhttps://s3.amazonaws.com/clickhouse-test-reports/74355/fd874afc415a43db5d693cbddfa5f05c2bcbb4cc/ast_fuzzer__ubsan_.html\n\n",
  "hints_text": "",
  "created_at": "2025-01-15T21:46:22Z",
  "modified_files": [
    "contrib/SimSIMD",
    "contrib/usearch",
    "docs/en/engines/table-engines/mergetree-family/annindexes.md",
    "src/Storages/MergeTree/MergeTreeIndexVectorSimilarity.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02354_vector_search_bf16_column.sql"
  ]
}