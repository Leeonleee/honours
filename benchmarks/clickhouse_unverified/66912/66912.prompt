You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Segmentation fault DB::StorageDistributed::getOptimizedQueryProcessingStageAnalyzer
https://s3.amazonaws.com/clickhouse-test-reports/0/370b01e23b87a5f1c4039bb584bd631b02213207/stress_test__tsan_.html

```
[ 31987 ] {} <Fatal> BaseDaemon: ########## Short fault info ############
 [ 31987 ] {} <Fatal> BaseDaemon: (version 24.5.1.1 (official build), build id: 3D1133B4A4094B808640150348B77F0074A83FCF, git hash: 370b01e23b87a5f1c4039bb584bd631b02213207) (from thread 4069) Received signal 11
 [ 31987 ] {} <Fatal> BaseDaemon: Signal description: Segmentation fault
 [ 31987 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
 [ 31987 ] {} <Fatal> BaseDaemon: Stack trace: 0x00005557a91c5f7d 0x00005557a94f13fb 0x00005557a139f8f6 0x00005557a139fe16 0x00007f788e6b6520 0x00005557b14d0d07 0x00005557b26c6a74 0x00005557b26c58ed 0x00005557b18d548f 0x00005557b18c9fc9 0x00005557b18c2857 0x00005557b18be2cc 0x00005557b18bdf66 0x0000
 [ 31987 ] {} <Fatal> BaseDaemon: ########################################
 [ 31987 ] {} <Fatal> BaseDaemon: (version 24.5.1.1 (official build), build id: 3D1133B4A4094B808640150348B77F0074A83FCF, git hash: 370b01e23b87a5f1c4039bb584bd631b02213207) (from thread 4069) (query_id: 0f661e01-f0bb-4cb0-be10-4b00b7476512) (query: ALTER TABLE `01746_dist`
 [ 31987 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
 [ 31987 ] {} <Fatal> BaseDaemon: Stack trace: 0x00005557a91c5f7d 0x00005557a94f13fb 0x00005557a139f8f6 0x00005557a139fe16 0x00007f788e6b6520 0x00005557b14d0d07 0x00005557b26c6a74 0x00005557b26c58ed 0x00005557b18d548f 0x00005557b18c9fc9 0x00005557b18c2857 0x00005557b18be2cc 0x00005557b18bdf66 0x0000
 [ 31987 ] {} <Fatal> BaseDaemon: 0.0. inlined from ./build_docker/./src/Common/StackTrace.cpp:347: StackTrace::tryCapture()
 [ 31987 ] {} <Fatal> BaseDaemon: 0. ./build_docker/./src/Common/StackTrace.cpp:316: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ef7bf7d
 [ 31987 ] {} <Fatal> BaseDaemon: 1. ./build_docker/./src/Daemon/BaseDaemon.cpp:0: signalHandler(int, siginfo_t*, void*) @ 0x000000000f2a73fb
 [ 31987 ] {} <Fatal> BaseDaemon: 2. __tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, int, __sanitizer::__sanitizer_siginfo*, void*) @ 0x00000000071558f6
 [ 31987 ] {} <Fatal> BaseDaemon: 3. sighandler(int, __sanitizer::__sanitizer_siginfo*, void*) @ 0x0000000007155e16
 [ 31987 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007f788e6b6520
 [ 31987 ] {} <Fatal> BaseDaemon: 5. ./src/Common/typeid_cast.h:30: _Z11typeid_castIRKN2DB9QueryNodeENS0_14IQueryTreeNodeEQsr3stdE14is_reference_vIT_EES5_RT0_ @ 0x0000000017286d07
 [ 31987 ] {} <Fatal> BaseDaemon: 6. ./build_docker/./src/Storages/StorageDistributed.cpp:0: DB::StorageDistributed::getOptimizedQueryProcessingStageAnalyzer(DB::SelectQueryInfo const&, DB::Settings const&) const @ 0x000000001847ca74
 [ 31987 ] {} <Fatal> BaseDaemon: 7. ./build_docker/./src/Storages/StorageDistributed.cpp:0: DB::StorageDistributed::getQueryProcessingStage(std::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, std::shared_ptr<DB::StorageSnapshot> const&, DB::SelectQueryInfo&) const @ 0x000000001847b8
 [ 31987 ] {} <Fatal> BaseDaemon: 8. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:1019: DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x000000001768b48f
 [ 31987 ] {} <Fatal> BaseDaemon: 9. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:779: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::SelectQu
 [ 31987 ] {} <Fatal> BaseDaemon: 10. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::SelectQue
 [ 31987 ] {} <Fatal> BaseDaemon: 11.0. inlined from ./contrib/llvm-project/libcxx/include/optional:260: ~__optional_destruct_base
 [ 31987 ] {} <Fatal> BaseDaemon: 11. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:363: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::S
 [ 31987 ] {} <Fatal> BaseDaemon: 12.0. inlined from ./contrib/llvm-project/libcxx/include/optional:260: ~__optional_destruct_base
 [ 31987 ] {} <Fatal> BaseDaemon: 12. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:203: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<St
 [ 31987 ] {} <Fatal> BaseDaemon: 13.0. inlined from ./contrib/llvm-project/libcxx/include/vector:666: vector
 [ 31987 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./src/Interpreters/InterpreterSelectQuery.h:122: DB::InterpreterSelectQuery::getRequiredColumns()
 [ 31987 ] {} <Fatal> BaseDaemon: 13. ./build_docker/./src/Storages/IStorage.cpp:266: DB::IStorage::getDependentViewsByColumn(std::shared_ptr<DB::Context const>) const @ 0x00000000183f0d9d
 [ 31987 ] {} <Fatal> BaseDaemon: 14. ./build_docker/./src/Storages/StorageDistributed.cpp:0: DB::StorageDistributed::checkAlterIsPossible(DB::AlterCommands const&, std::shared_ptr<DB::Context const>) const @ 0x00000000184888a1
 [ 31987 ] {} <Fatal> BaseDaemon: 15. ./build_docker/./src/Interpreters/InterpreterAlterQuery.cpp:0: DB::InterpreterAlterQuery::executeToTable(DB::ASTAlterQuery const&) @ 0x0000000017156827
 [ 31987 ] {} <Fatal> BaseDaemon: 16. ./build_docker/./src/Interpreters/InterpreterAlterQuery.cpp:71: DB::InterpreterAlterQuery::execute() @ 0x00000000171540e3
 [ 31987 ] {} <Fatal> BaseDaemon: 17. ./build_docker/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x0000000017c1cf88
 [ 31987 ] {} <Fatal> BaseDaemon: 18. ./build_docker/./src/Interpreters/executeQuery.cpp:1395: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000017c18478
 [ 31987 ] {} <Fatal> BaseDaemon: 19.0. inlined from ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: shared_ptr
 [ 31987 ] {} <Fatal> BaseDaemon: 19.1. inlined from ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:723: std::shared_ptr<DB::IAST>::operator=[abi:v15000](std::shared_ptr<DB::IAST>&&)
 [ 31987 ] {} <Fatal> BaseDaemon: 19.2. inlined from ./contrib/llvm-project/libcxx/include/tuple:1228: _ZNSt3__15tupleIJRNS_10shared_ptrIN2DB4IASTEEERNS2_7BlockIOEEEaSB6v15000IS4_S6_TnNS_9enable_ifIXsr21_EnableAssignFromPairILb0EONS_4pairIT_T0_EEEE5valueEiE4typeELi0EEERS8_SF_
 [ 31987 ] {} <Fatal> BaseDaemon: 19. ./build_docker/./src/Server/TCPHandler.cpp:522: DB::TCPHandler::runImpl() @ 0x0000000019423b09
 [ 31987 ] {} <Fatal> BaseDaemon: 20. ./build_docker/./src/Server/TCPHandler.cpp:2343: DB::TCPHandler::run() @ 0x0000000019441cc8
 [ 31987 ] {} <Fatal> BaseDaemon: 21. ./build_docker/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x000000001cf18363
 [ 31987 ] {} <Fatal> BaseDaemon: 22.0. inlined from ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: std::default_delete<Poco::Net::TCPServerConnection>::operator()[abi:v15000](Poco::Net::TCPServerConnection*) const
 [ 31987 ] {} <Fatal> BaseDaemon: 22.1. inlined from ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:305: std::unique_ptr<Poco::Net::TCPServerConnection, std::default_delete<Poco::Net::TCPServerConnection>>::reset[abi:v15000](Poco::Net::TCPServerConnection*)
 [ 31987 ] {} <Fatal> BaseDaemon: 22.2. inlined from ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:259: ~unique_ptr
 [ 31987 ] {} <Fatal> BaseDaemon: 22. ./build_docker/./base/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() @ 0x000000001cf18bd2
 [ 31987 ] {} <Fatal> BaseDaemon: 23. ./build_docker/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x000000001d1172e7
 [ 31987 ] {} <Fatal> BaseDaemon: 24. ./build_docker/./base/poco/Foundation/src/Thread.cpp:46: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x000000001d115630
 [ 31987 ] {} <Fatal> BaseDaemon: 25.0. inlined from ./base/poco/Foundation/include/Poco/SharedPtr.h:231: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable>>::get()
 [ 31987 ] {} <Fatal> BaseDaemon: 25.1. inlined from ./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable>>::assign(Poco::Runnable*)
 [ 31987 ] {} <Fatal> BaseDaemon: 25.2. inlined from ./base/poco/Foundation/include/Poco/SharedPtr.h:180: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable>>::operator=(Poco::Runnable*)
 [ 31987 ] {} <Fatal> BaseDaemon: 25. ./base/poco/Foundation/src/Thread_POSIX.cpp:350: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001d113b0a
 [ 31987 ] {} <Fatal> BaseDaemon: 26. __tsan_thread_start_func @ 0x000000000714df2f
 [ 31987 ] {} <Fatal> BaseDaemon: 27. ? @ 0x00007f788e708ac3
 [ 31987 ] {} <Fatal> BaseDaemon: 28. ? @ 0x00007f788e79a850
 [ 31987 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 2B8ECF5BEDF3CED259BB3B5CA376900C)
 [ 31987 ] {} <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
 [ 31987 ] {} <Fatal> BaseDaemon: Changed settings: min_compress_block_size = 3021730, max_compress_block_size = 2998720, max_block_size = 52105, max_joined_block_size_rows = 70855, max_threads = 63, max_read_buffer_size = 745832, connect_timeout_with_failover_ms = 2000, connect_timeout_with_failove
 [ 3212 ] {} <Fatal> Application: Child process was terminated by signal 11.
 [ 35686 ] {} <Fatal> Application: Child process was terminated by signal 9 (KILL). If it is not done by \'forcestop\' command or manually, the possible cause is OOM Killer (see \'dmesg\' and look at the \'/var/log/kern.log\' for the details).
 [ 1927 ] {} <Fatal> Application: Child process was terminated by signal 9 (KILL). If it is not done by \'forcestop\' command or manually, the possible cause is OOM Killer (see \'dmesg\' and look at the \'/var/log/kern.log\' for the details).
 [ 31987 ] {} <Fatal> BaseDaemon: ########## Short fault info ############
 [ 31987 ] {} <Fatal> BaseDaemon: (version 24.5.1.1 (official build), build id: 3D1133B4A4094B808640150348B77F0074A83FCF, git hash: 370b01e23b87a5f1c4039bb584bd631b02213207) (from thread 4069) Received signal 11
 [ 31987 ] {} <Fatal> BaseDaemon: Signal description: Segmentation fault
 [ 31987 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
 [ 31987 ] {} <Fatal> BaseDaemon: Stack trace: 0x00005557a91c5f7d 0x00005557a94f13fb 0x00005557a139f8f6 0x00005557a139fe16 0x00007f788e6b6520 0x00005557b14d0d07 0x00005557b26c6a74 0x00005557b26c58ed 0x00005557b18d548f 0x00005557b18c9fc9 0x00005557b18c2857 0x00005557b18be2cc 0x00005557b18bdf66 0x0000
 [ 31987 ] {} <Fatal> BaseDaemon: ########################################
 [ 31987 ] {} <Fatal> BaseDaemon: (version 24.5.1.1 (official build), build id: 3D1133B4A4094B808640150348B77F0074A83FCF, git hash: 370b01e23b87a5f1c4039bb584bd631b02213207) (from thread 4069) (query_id: 0f661e01-f0bb-4cb0-be10-4b00b7476512) (query: ALTER TABLE `01746_dist`
 [ 31987 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
 [ 31987 ] {} <Fatal> BaseDaemon: Stack trace: 0x00005557a91c5f7d 0x00005557a94f13fb 0x00005557a139f8f6 0x00005557a139fe16 0x00007f788e6b6520 0x00005557b14d0d07 0x00005557b26c6a74 0x00005557b26c58ed 0x00005557b18d548f 0x00005557b18c9fc9 0x00005557b18c2857 0x00005557b18be2cc 0x00005557b18bdf66 0x0000
 [ 31987 ] {} <Fatal> BaseDaemon: 0.0. inlined from ./build_docker/./src/Common/StackTrace.cpp:347: StackTrace::tryCapture()
 [ 31987 ] {} <Fatal> BaseDaemon: 0. ./build_docker/./src/Common/StackTrace.cpp:316: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000ef7bf7d
 [ 31987 ] {} <Fatal> BaseDaemon: 1. ./build_docker/./src/Daemon/BaseDaemon.cpp:0: signalHandler(int, siginfo_t*, void*) @ 0x000000000f2a73fb
 [ 31987 ] {} <Fatal> BaseDaemon: 2. __tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, int, __sanitizer::__sanitizer_siginfo*, void*) @ 0x00000000071558f6
 [ 31987 ] {} <Fatal> BaseDaemon: 3. sighandler(int, __sanitizer::__sanitizer_siginfo*, void*) @ 0x0000000007155e16
 [ 31987 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007f788e6b6520
 [ 31987 ] {} <Fatal> BaseDaemon: 5. ./src/Common/typeid_cast.h:30: _Z11typeid_castIRKN2DB9QueryNodeENS0_14IQueryTreeNodeEQsr3stdE14is_reference_vIT_EES5_RT0_ @ 0x0000000017286d07
 [ 31987 ] {} <Fatal> BaseDaemon: 6. ./build_docker/./src/Storages/StorageDistributed.cpp:0: DB::StorageDistributed::getOptimizedQueryProcessingStageAnalyzer(DB::SelectQueryInfo const&, DB::Settings const&) const @ 0x000000001847ca74
 [ 31987 ] {} <Fatal> BaseDaemon: 7. ./build_docker/./src/Storages/StorageDistributed.cpp:0: DB::StorageDistributed::getQueryProcessingStage(std::shared_ptr<DB::Context const>, DB::QueryProcessingStage::Enum, std::shared_ptr<DB::StorageSnapshot> const&, DB::SelectQueryInfo&) const @ 0x000000001847b8
 [ 31987 ] {} <Fatal> BaseDaemon: 8. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:1019: DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x000000001768b48f
 [ 31987 ] {} <Fatal> BaseDaemon: 9. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:779: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::SelectQu
 [ 31987 ] {} <Fatal> BaseDaemon: 10. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::SelectQue
 [ 31987 ] {} <Fatal> BaseDaemon: 11.0. inlined from ./contrib/llvm-project/libcxx/include/optional:260: ~__optional_destruct_base
 [ 31987 ] {} <Fatal> BaseDaemon: 11. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:363: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::S
 [ 31987 ] {} <Fatal> BaseDaemon: 12.0. inlined from ./contrib/llvm-project/libcxx/include/optional:260: ~__optional_destruct_base
 [ 31987 ] {} <Fatal> BaseDaemon: 12. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:203: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<St
 [ 31987 ] {} <Fatal> BaseDaemon: 13.0. inlined from ./contrib/llvm-project/libcxx/include/vector:666: vector
 [ 31987 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./src/Interpreters/InterpreterSelectQuery.h:122: DB::InterpreterSelectQuery::getRequiredColumns()
 [ 31987 ] {} <Fatal> BaseDaemon: 13. ./build_docker/./src/Storages/IStorage.cpp:266: DB::IStorage::getDependentViewsByColumn(std::shared_ptr<DB::Context const>) const @ 0x00000000183f0d9d
 [ 31987 ] {} <Fatal> BaseDaemon: 14. ./build_docker/./src/Storages/StorageDistributed.cpp:0: DB::StorageDistributed::checkAlterIsPossible(DB::AlterCommands const&, std::shared_ptr<DB::Context const>) const @ 0x00000000184888a1
 [ 31987 ] {} <Fatal> BaseDaemon: 15. ./build_docker/./src/Interpreters/InterpreterAlterQuery.cpp:0: DB::InterpreterAlterQuery::executeToTable(DB::ASTAlterQuery const&) @ 0x0000000017156827
 [ 31987 ] {} <Fatal> BaseDaemon: 16. ./build_docker/./src/Interpreters/InterpreterAlterQuery.cpp:71: DB::InterpreterAlterQuery::execute() @ 0x00000000171540e3
 [ 31987 ] {} <Fatal> BaseDaemon: 17. ./build_docker/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x0000000017c1cf88
 [ 31987 ] {} <Fatal> BaseDaemon: 18. ./build_docker/./src/Interpreters/executeQuery.cpp:1395: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000017c18478
 [ 31987 ] {} <Fatal> BaseDaemon: 19.0. inlined from ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: shared_ptr
 [ 31987 ] {} <Fatal> BaseDaemon: 19.1. inlined from ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:723: std::shared_ptr<DB::IAST>::operator=[abi:v15000](std::shared_ptr<DB::IAST>&&)
 [ 31987 ] {} <Fatal> BaseDaemon: 19.2. inlined from ./contrib/llvm-project/libcxx/include/tuple:1228: _ZNSt3__15tupleIJRNS_10shared_ptrIN2DB4IASTEEERNS2_7BlockIOEEEaSB6v15000IS4_S6_TnNS_9enable_ifIXsr21_EnableAssignFromPairILb0EONS_4pairIT_T0_EEEE5valueEiE4typeELi0EEERS8_SF_
 [ 31987 ] {} <Fatal> BaseDaemon: 19. ./build_docker/./src/Server/TCPHandler.cpp:522: DB::TCPHandler::runImpl() @ 0x0000000019423b09
 [ 31987 ] {} <Fatal> BaseDaemon: 20. ./build_docker/./src/Server/TCPHandler.cpp:2343: DB::TCPHandler::run() @ 0x0000000019441cc8
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
