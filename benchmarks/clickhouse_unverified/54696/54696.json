{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 54696,
  "instance_id": "ClickHouse__ClickHouse-54696",
  "issue_numbers": [
    "53222"
  ],
  "base_commit": "51851ecc21ca48f96eb0ea57366d9aec9dfd332a",
  "patch": "diff --git a/src/Storages/MergeTree/KeyCondition.cpp b/src/Storages/MergeTree/KeyCondition.cpp\nindex 42731bac19b2..e10c83e0d458 100644\n--- a/src/Storages/MergeTree/KeyCondition.cpp\n+++ b/src/Storages/MergeTree/KeyCondition.cpp\n@@ -421,7 +421,12 @@ const KeyCondition::AtomMap KeyCondition::atom_map\n             if (value.getType() != Field::Types::String)\n                 return false;\n \n-            String prefix = extractFixedPrefixFromRegularExpression(value.get<const String &>());\n+            const String & expression = value.get<const String &>();\n+            // This optimization can't process alternation - this would require a comprehensive parsing of regular expression.\n+            if (expression.contains('|'))\n+                return false;\n+\n+            String prefix = extractFixedPrefixFromRegularExpression(expression);\n             if (prefix.empty())\n                 return false;\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02462_match_regexp_pk.sql b/tests/queries/0_stateless/02462_match_regexp_pk.sql\nindex 1a944b961962..a47539b1cc0f 100644\n--- a/tests/queries/0_stateless/02462_match_regexp_pk.sql\n+++ b/tests/queries/0_stateless/02462_match_regexp_pk.sql\n@@ -7,3 +7,4 @@ SELECT count() FROM mt_match_pk WHERE match(v, '^ab');\n SELECT count() FROM mt_match_pk WHERE match(v, '^a.');\n SELECT count() FROM mt_match_pk WHERE match(v, '^ab*');\n SELECT count() FROM mt_match_pk WHERE match(v, '^ac?');\n+SELECT count() FROM mt_match_pk WHERE match(v, '^a$|^b'); -- {serverError INDEX_NOT_USED}\n",
  "problem_statement": "Using match with `^$` as anchors on a primary key column returns incorrect results\n**Describe what's wrong**\r\n\r\nWhen running a query that applies a regex expression to the primary key column and uses `^$` as anchors on the first element, Clickhouse incorrectly returns only a portion of the expected results. \r\n\r\n**Does it reproduce on recent release?**\r\n\r\nRunning release `23.3.8.21`.\r\n\r\n**How to reproduce**\r\nCreate table and insert data into different parts. Note that this bug appears to apply to only the primary key condition as inserting both data items into same part will return the correct result.\r\n```\r\nCREATE TABLE example(\r\n    \"time\" Int64 CODEC(ZSTD(1)),\r\n    \"svc\" LowCardinality(String) CODEC(ZSTD(1)),\r\n    \"title\" String CODEC(ZSTD(1)),\r\n ) ENGINE = MergeTree\r\n PARTITION BY intDiv(\"time\", 1000)\r\n ORDER BY (\"svc\", \"time\");\r\n \r\nINSERT INTO example(*) VALUES(toInt64(4500), 'first', 'blah blah')\r\nINSERT INTO example(*) VALUES(toInt64(3500), 'second', 'blah blah blah')\r\n```\r\n\r\nReading data with `^$` returns only the 1/2 expected rows:\r\n```\r\nSELECT svc, title FROM example WHERE match(svc, '^first$|^second$')\r\n```\r\n\r\nRunning the query with index explain enabled (`EXPLAIN indexes = 1`) shows the problem right away:\r\n```\r\nExpression ((Projection + Before ORDER BY))\r\n\t  ReadFromMergeTree (7_ca_43_de_8_a_195_42_c_7_b_590_7_a_270_a_945433.example)\r\n\t  Indexes:\r\n\t    MinMax\r\n\t      Condition: true\r\n\t      Parts: 2/2\r\n\t      Granules: 2/2\r\n\t    Partition\r\n\t      Condition: true\r\n\t      Parts: 2/2\r\n\t      Granules: 2/2\r\n\t    PrimaryKey\r\n\t      Keys: \r\n\t        svc\r\n\t      Condition: (svc in ['first', 'firsu')) <-- this is the problem\r\n\t      Parts: 1/2\r\n\t      Granules: 1/2\r\n```\r\n**Additional context**\r\n\r\nA simple workaround is to use `\\A\\z` for anchoring which returns the expected results:\r\n```\r\nSELECT svc, title FROM example WHERE match(svc, '\\Afirst\\z|\\Asecond\\z')\r\n```\r\n\n",
  "hints_text": "Reproduced with the latest release https://fiddle.clickhouse.com/b221f8ad-ee2d-41ba-acb4-717eca37bf25\nintroduced in 22.11\r\nprobably\r\n* #42458",
  "created_at": "2023-09-15T18:29:06Z",
  "modified_files": [
    "src/Storages/MergeTree/KeyCondition.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02462_match_regexp_pk.sql"
  ]
}