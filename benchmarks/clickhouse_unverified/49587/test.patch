diff --git a/tests/queries/0_stateless/01018_ddl_dictionaries_bad_queries.reference b/tests/queries/0_stateless/01018_ddl_dictionaries_bad_queries.reference
index abc3218ce6c3..5ee4e7592f64 100644
--- a/tests/queries/0_stateless/01018_ddl_dictionaries_bad_queries.reference
+++ b/tests/queries/0_stateless/01018_ddl_dictionaries_bad_queries.reference
@@ -4,4 +4,3 @@
 2
 2
 2
-2
diff --git a/tests/queries/0_stateless/01018_ddl_dictionaries_bad_queries.sh b/tests/queries/0_stateless/01018_ddl_dictionaries_bad_queries.sh
index 6826ed677dbf..8a40129ad4f9 100755
--- a/tests/queries/0_stateless/01018_ddl_dictionaries_bad_queries.sh
+++ b/tests/queries/0_stateless/01018_ddl_dictionaries_bad_queries.sh
@@ -9,21 +9,6 @@ CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
 
 $CLICKHOUSE_CLIENT -q "DROP DICTIONARY IF  EXISTS dict1"
 
-# Simple layout, but with two keys
-$CLICKHOUSE_CLIENT -q "
-    CREATE DICTIONARY dict1
-    (
-        key1 UInt64,
-        key2 UInt64,
-        value String
-    )
-    PRIMARY KEY key1, key2
-    LAYOUT(HASHED())
-    SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict1' DB '$CLICKHOUSE_DATABASE'))
-    LIFETIME(MIN 1 MAX 10)
-" 2>&1 | grep -c 'Primary key for simple dictionary must contain exactly one element'
-
-
 # Simple layout, but with non existing key
 $CLICKHOUSE_CLIENT -q "
     CREATE DICTIONARY dict1
diff --git a/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql b/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql
index ac43c12afc08..018f6b2cf4f6 100644
--- a/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql
+++ b/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql
@@ -89,7 +89,7 @@ SOURCE(CLICKHOUSE(TABLE test_table_string))
 LAYOUT(SPARSE_HASHED(SHARDS 10))
 LIFETIME(0);
 
-SYSTEM RELOAD DICTIONARY test_dictionary_10_shards_string; -- { serverError CANNOT_PARSE_TEXT }
+SYSTEM RELOAD DICTIONARY test_dictionary_10_shards_string;
 
 DROP DICTIONARY test_dictionary_10_shards_string;
 
diff --git a/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.reference b/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.reference
new file mode 100644
index 000000000000..7616c59e4fd8
--- /dev/null
+++ b/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.reference
@@ -0,0 +1,5 @@
+dict_flat_simple	Flat
+dict_hashed_simple_Decimal128	Hashed
+dict_hashed_simple_Float32	Hashed
+dict_hashed_simple_String	ComplexKeyHashed
+dict_hashed_simple_auto_convert	ComplexKeyHashed
diff --git a/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql b/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql
new file mode 100644
index 000000000000..753b9f663b5f
--- /dev/null
+++ b/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql
@@ -0,0 +1,35 @@
+DROP DICTIONARY IF EXISTS dict_flat_simple;
+DROP DICTIONARY IF EXISTS dict_hashed_simple_Decimal128;
+DROP DICTIONARY IF EXISTS dict_hashed_simple_Float32;
+DROP DICTIONARY IF EXISTS dict_hashed_simple_String;
+DROP DICTIONARY IF EXISTS dict_hashed_simple_auto_convert;
+DROP TABLE IF EXISTS dict_data;
+
+CREATE TABLE dict_data (v0 UInt16, v1 Int16, v2 Float32, v3 Decimal128(10), v4 String) engine=Memory()  AS SELECT number, number%65535, number*1.1, number*1.1, 'foo' FROM numbers(10);;
+
+CREATE DICTIONARY dict_flat_simple (v0 UInt16, v1 UInt16, v2 UInt16) PRIMARY KEY v0 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(flat());
+SYSTEM RELOAD DICTIONARY dict_flat_simple;
+SELECT name, type FROM system.dictionaries WHERE database = currentDatabase() AND name = 'dict_flat_simple';
+DROP DICTIONARY dict_flat_simple;
+
+CREATE DICTIONARY dict_hashed_simple_Decimal128 (v3 Decimal128(10), v1 UInt16, v2 Float32) PRIMARY KEY v3 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(hashed());
+SYSTEM RELOAD DICTIONARY dict_hashed_simple_Decimal128;
+SELECT name, type FROM system.dictionaries WHERE database = currentDatabase() AND name = 'dict_hashed_simple_Decimal128';
+DROP DICTIONARY dict_hashed_simple_Decimal128;
+
+CREATE DICTIONARY dict_hashed_simple_Float32 (v2 Float32, v3 Decimal128(10), v4 String) PRIMARY KEY v2 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(hashed());
+SYSTEM RELOAD DICTIONARY dict_hashed_simple_Float32;
+SELECT name, type FROM system.dictionaries WHERE database = currentDatabase() AND name = 'dict_hashed_simple_Float32';
+DROP DICTIONARY dict_hashed_simple_Float32;
+
+CREATE DICTIONARY dict_hashed_simple_String (v4 String, v3 Decimal128(10), v2 Float32) PRIMARY KEY v4 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(hashed());
+SYSTEM RELOAD DICTIONARY dict_hashed_simple_String;
+SELECT name, type FROM system.dictionaries WHERE database = currentDatabase() AND name = 'dict_hashed_simple_String';
+DROP DICTIONARY dict_hashed_simple_String;
+
+CREATE DICTIONARY dict_hashed_simple_auto_convert (v0 UInt16, v1 Int16, v2 UInt16) PRIMARY KEY v0,v1 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(hashed());
+SYSTEM RELOAD DICTIONARY dict_hashed_simple_auto_convert;
+SELECT name, type FROM system.dictionaries WHERE database = currentDatabase() AND name = 'dict_hashed_simple_auto_convert';
+DROP DICTIONARY dict_hashed_simple_auto_convert;
+
+DROP TABLE dict_data;
