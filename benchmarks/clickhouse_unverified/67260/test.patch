diff --git a/tests/queries/0_stateless/01622_constraints_simple_optimization.reference b/tests/queries/0_stateless/01622_constraints_simple_optimization.reference
index d267df2237f0..84c872856ff9 100644
--- a/tests/queries/0_stateless/01622_constraints_simple_optimization.reference
+++ b/tests/queries/0_stateless/01622_constraints_simple_optimization.reference
@@ -32,10 +32,10 @@
 1
 1
 0
-SELECT count() AS `count()`
+SELECT count()
 FROM constraint_test_constants
 WHERE (b > 100) OR (c > 100)
-SELECT count() AS `count()`
+SELECT count()
 FROM constraint_test_constants
 WHERE c > 100
 QUERY id: 0
@@ -53,7 +53,7 @@ QUERY id: 0
           COLUMN id: 6, column_name: c, result_type: Int64, source_id: 3
           CONSTANT id: 7, constant_value: UInt64_100, constant_value_type: UInt8
   SETTINGS allow_experimental_analyzer=1
-SELECT count() AS `count()`
+SELECT count()
 FROM constraint_test_constants
 WHERE c > 100
 QUERY id: 0
@@ -71,7 +71,7 @@ QUERY id: 0
           COLUMN id: 6, column_name: c, result_type: Int64, source_id: 3
           CONSTANT id: 7, constant_value: UInt64_100, constant_value_type: UInt8
   SETTINGS allow_experimental_analyzer=1
-SELECT count() AS `count()`
+SELECT count()
 FROM constraint_test_constants
 QUERY id: 0
   PROJECTION COLUMNS
diff --git a/tests/queries/0_stateless/01623_constraints_column_swap.reference b/tests/queries/0_stateless/01623_constraints_column_swap.reference
index 555a4c93f706..d504a86365b7 100644
--- a/tests/queries/0_stateless/01623_constraints_column_swap.reference
+++ b/tests/queries/0_stateless/01623_constraints_column_swap.reference
@@ -1,6 +1,6 @@
 SELECT
-    (b AS `cityHash64(a)`) + 10 AS `plus(cityHash64(a), 10)`,
-    (b AS b) + 3 AS `plus(b, 3)`
+    (b AS `cityHash64(a)`) + 10,
+    (b AS b) + 3
 FROM column_swap_test_test
 WHERE b = 1
 QUERY id: 0
@@ -59,8 +59,8 @@ QUERY id: 0
           CONSTANT id: 14, constant_value: UInt64_1, constant_value_type: UInt8
   SETTINGS allow_experimental_analyzer=1
 SELECT
-    (b AS `cityHash64(a)`) + 10 AS `plus(cityHash64(a), 10)`,
-    (b AS b) + 3 AS `plus(b, 3)`
+    (b AS `cityHash64(a)`) + 10,
+    (b AS b) + 3
 FROM column_swap_test_test
 WHERE b = 0
 QUERY id: 0
@@ -89,8 +89,8 @@ QUERY id: 0
           CONSTANT id: 14, constant_value: UInt64_0, constant_value_type: UInt8
   SETTINGS allow_experimental_analyzer=1
 SELECT
-    (b AS `cityHash64(a)`) + 10 AS `plus(cityHash64(a), 10)`,
-    (b AS b) + 3 AS `plus(b, 3)`
+    (b AS `cityHash64(a)`) + 10,
+    (b AS b) + 3
 FROM column_swap_test_test
 WHERE b = 0
 QUERY id: 0
@@ -119,8 +119,8 @@ QUERY id: 0
           CONSTANT id: 14, constant_value: UInt64_0, constant_value_type: UInt8
   SETTINGS allow_experimental_analyzer=1
 SELECT
-    (b AS `cityHash64(a)`) + 10 AS `plus(cityHash64(a), 10)`,
-    (b AS b) + 3 AS `plus(b, 3)`
+    (b AS `cityHash64(a)`) + 10,
+    (b AS b) + 3
 FROM column_swap_test_test
 WHERE b = 1
 QUERY id: 0
@@ -148,7 +148,7 @@ QUERY id: 0
           COLUMN id: 13, column_name: b, result_type: UInt64, source_id: 5
           CONSTANT id: 14, constant_value: UInt64_1, constant_value_type: UInt8
   SETTINGS allow_experimental_analyzer=1
-SELECT (b AS `cityHash64(a)`) + 10 AS `plus(cityHash64(a), 10)`
+SELECT (b AS `cityHash64(a)`) + 10
 FROM column_swap_test_test
 WHERE b = 0
 QUERY id: 0
@@ -171,8 +171,8 @@ QUERY id: 0
           CONSTANT id: 10, constant_value: UInt64_0, constant_value_type: UInt8
   SETTINGS allow_experimental_analyzer=1
 SELECT
-    (cityHash64(a) AS `cityHash64(a)`) + 10 AS `plus(cityHash64(a), 10)`,
-    a AS a
+    (cityHash64(a) AS `cityHash64(a)`) + 10,
+    a
 FROM column_swap_test_test
 WHERE cityHash64(a) = 0
 QUERY id: 0
@@ -203,8 +203,8 @@ QUERY id: 0
           CONSTANT id: 15, constant_value: UInt64_0, constant_value_type: UInt8
   SETTINGS allow_experimental_analyzer=1
 SELECT
-    (cityHash64(a) AS b) + 10 AS `plus(b, 10)`,
-    a AS a
+    (cityHash64(a) AS b) + 10,
+    a
 FROM column_swap_test_test
 WHERE cityHash64(a) = 0
 QUERY id: 0
diff --git a/tests/queries/0_stateless/03212_optimize_with_constraints_logical_error.reference b/tests/queries/0_stateless/03212_optimize_with_constraints_logical_error.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/03212_optimize_with_constraints_logical_error.sql b/tests/queries/0_stateless/03212_optimize_with_constraints_logical_error.sql
new file mode 100644
index 000000000000..16a27af986b3
--- /dev/null
+++ b/tests/queries/0_stateless/03212_optimize_with_constraints_logical_error.sql
@@ -0,0 +1,13 @@
+DROP TABLE IF EXISTS test_table;
+CREATE TABLE test_table
+(
+    id UInt64,
+    value String
+) ENGINE=TinyLog;
+
+EXPLAIN SYNTAX
+WITH 1 AS compound_value SELECT * APPLY (x -> compound_value.*)
+FROM test_table WHERE x > 0
+SETTINGS convert_query_to_cnf = true, optimize_using_constraints = true, optimize_substitute_columns = true; -- { serverError UNKNOWN_IDENTIFIER }
+
+DROP TABLE test_table;
