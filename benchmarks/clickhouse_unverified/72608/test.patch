diff --git a/tests/queries/0_stateless/01655_plan_optimizations.reference b/tests/queries/0_stateless/01655_plan_optimizations.reference
index fb27e0c3d74f..eb13997f0d1b 100644
--- a/tests/queries/0_stateless/01655_plan_optimizations.reference
+++ b/tests/queries/0_stateless/01655_plan_optimizations.reference
@@ -121,8 +121,8 @@ Filter column: and(notEquals(y, 2), notEquals(x, 0))
 ARRAY JOIN x
 Filter column: notEquals(y, 2)
 > (analyzer) filter is split, one part is filtered before ARRAY JOIN
-Filter column: and(notEquals(__table2.y, 2_UInt8), notEquals(__table1.x, 0_UInt8))
-ARRAY JOIN __table1.x
+Filter column: and(notEquals(__table2.y, 2_UInt8), notEquals(__array_join_exp_1, 0_UInt8))
+ARRAY JOIN __array_join_exp_1
 Filter column: notEquals(__table2.y, 2_UInt8)
 1	3
 > filter is pushed down before Distinct
diff --git a/tests/queries/0_stateless/01655_plan_optimizations.sh b/tests/queries/0_stateless/01655_plan_optimizations.sh
index 52bfdb91467c..1a283a3027bc 100755
--- a/tests/queries/0_stateless/01655_plan_optimizations.sh
+++ b/tests/queries/0_stateless/01655_plan_optimizations.sh
@@ -134,7 +134,7 @@ $CLICKHOUSE_CLIENT --enable_analyzer=1 -q "
     explain actions = 1 select x, y from (
         select range(number) as x, number + 1 as y from numbers(3)
     ) array join x where y != 2 and x != 0" |
-    grep -o "Filter column: and(notEquals(__table2.y, 2_UInt8), notEquals(__table1.x, 0_UInt8))\|ARRAY JOIN __table1.x\|Filter column: notEquals(__table2.y, 2_UInt8)"
+    grep -o "Filter column: and(notEquals(__table2.y, 2_UInt8), notEquals(__array_join_exp_1, 0_UInt8))\|ARRAY JOIN __array_join_exp_1\|Filter column: notEquals(__table2.y, 2_UInt8)"
 $CLICKHOUSE_CLIENT -q "
     select x, y from (
         select range(number) as x, number + 1 as y from numbers(3)
diff --git a/tests/queries/0_stateless/01823_explain_json.reference b/tests/queries/0_stateless/01823_explain_json.reference
index 6612fd232bf1..0a6100c85eb0 100644
--- a/tests/queries/0_stateless/01823_explain_json.reference
+++ b/tests/queries/0_stateless/01823_explain_json.reference
@@ -81,7 +81,7 @@
           "Node Type": "ArrayJoin",
           "Node Id": "ArrayJoin_4",
           "Left": false,
-          "Columns": ["__table1.x", "__table1.y"],
+          "Columns": ["__array_join_exp_1", "__array_join_exp_2"],
 --------
           "Node Type": "Distinct",
           "Node Id": "Distinct_4",
diff --git a/tests/queries/0_stateless/03277_analyzer_array_join_fix.reference b/tests/queries/0_stateless/03277_analyzer_array_join_fix.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/03277_analyzer_array_join_fix.sql b/tests/queries/0_stateless/03277_analyzer_array_join_fix.sql
new file mode 100644
index 000000000000..9d6f05dd8266
--- /dev/null
+++ b/tests/queries/0_stateless/03277_analyzer_array_join_fix.sql
@@ -0,0 +1,21 @@
+CREATE TABLE IF NOT EXISTS repro
+(
+    `a` LowCardinality(String),
+    `foos` Nested(x LowCardinality(String))
+)
+ENGINE = MergeTree
+ORDER BY a;
+
+CREATE TABLE IF NOT EXISTS repro_dist
+(
+   "a" LowCardinality(String),
+   "foos" Nested(
+      "x" LowCardinality(String),
+   )
+) ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), 'repro');
+
+SELECT
+    a,
+    foo.x
+FROM repro_dist
+ARRAY JOIN foos AS foo;
