diff --git a/tests/ci/ci.py b/tests/ci/ci.py
index d6b1866c563d..5f42309d4396 100644
--- a/tests/ci/ci.py
+++ b/tests/ci/ci.py
@@ -1745,7 +1745,10 @@ def _upload_build_profile_data(
         profile_data_file = Path(TEMP_PATH) / "profile.json"
         with open(profile_data_file, "wb") as profile_fd:
             for profile_source in profiles_dir.iterdir():
-                if profile_source.name != "binary_sizes.txt":
+                if profile_source.name not in (
+                    "binary_sizes.txt",
+                    "binary_symbols.txt",
+                ):
                     with open(profiles_dir / profile_source, "rb") as ps_fd:
                         profile_fd.write(ps_fd.read())
 
@@ -1787,7 +1790,42 @@ def _upload_build_profile_data(
         try:
             ch_helper.insert_file(url, auth, query, binary_sizes_file)
         except InsertException:
-            logging.error("Failed to insert binary_size_file for the build, continue")
+            logging.error("Failed to insert binary_sizes_file for the build, continue")
+
+        query = f"""INSERT INTO binary_symbols
+            (
+                pull_request_number,
+                commit_sha,
+                check_start_time,
+                check_name,
+                instance_type,
+                instance_id,
+                file,
+                address,
+                size,
+                type,
+                symbol,
+            )
+            SELECT {pr_info.number}, '{pr_info.sha}', '{job_report.start_time}', '{build_name}', '{instance_type}', '{instance_id}',
+                file, reinterpretAsUInt64(reverse(unhex(address))), reinterpretAsUInt64(reverse(unhex(size))), type, symbol
+            FROM input('file String, address String, size String, type String, symbol String')
+            SETTINGS format_regexp = '^([^ ]+) ([0-9a-fA-F]+)(?: ([0-9a-fA-F]+))? (.) (.+)$'
+            FORMAT Regexp"""
+
+        binary_symbols_file = profiles_dir / "binary_symbols.txt"
+
+        print(
+            "::notice ::Log Uploading binary symbols data, path: %s, size: %s, query: %s",
+            binary_symbols_file,
+            binary_symbols_file.stat().st_size,
+            query,
+        )
+        try:
+            ch_helper.insert_file(url, auth, query, binary_symbols_file)
+        except InsertException:
+            logging.error(
+                "Failed to insert binary_symbols_file for the build, continue"
+            )
 
 
 def _add_build_to_version_history(
