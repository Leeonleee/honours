diff --git a/src/Storages/System/StorageSystemColumns.cpp b/src/Storages/System/StorageSystemColumns.cpp
index 9704bce1f277..209148872278 100644
--- a/src/Storages/System/StorageSystemColumns.cpp
+++ b/src/Storages/System/StorageSystemColumns.cpp
@@ -36,8 +36,7 @@ StorageSystemColumns::StorageSystemColumns(const StorageID & table_id_)
 
     /// NOTE: when changing the list of columns, take care of the ColumnsSource::generate method,
     /// when they are referenced by their numeric positions.
-    storage_metadata.setColumns(ColumnsDescription(
-    {
+    auto description = ColumnsDescription({
         { "database",           std::make_shared<DataTypeString>(), "Database name."},
         { "table",              std::make_shared<DataTypeString>(), "Table name."},
         { "name",               std::make_shared<DataTypeString>(), "Column name."},
@@ -65,7 +64,13 @@ StorageSystemColumns::StorageSystemColumns(const StorageID & table_id_)
         { "datetime_precision",         std::make_shared<DataTypeNullable>(std::make_shared<DataTypeUInt64>()),
             "Decimal precision of DateTime64 data type. For other data types, the NULL value is returned."},
         { "serialization_hint",         std::make_shared<DataTypeNullable>(std::make_shared<DataTypeString>()), "A hint for column to choose serialization on inserts according to statistics."},
-    }));
+    });
+
+    description.setAliases({
+        {"column", std::make_shared<DataTypeString>(), "name"}
+    });
+
+    storage_metadata.setColumns(description);
     setInMemoryMetadata(storage_metadata);
 }
 
