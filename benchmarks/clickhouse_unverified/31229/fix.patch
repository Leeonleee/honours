diff --git a/src/Dictionaries/SSDCacheDictionaryStorage.h b/src/Dictionaries/SSDCacheDictionaryStorage.h
index 7c53ecc2b2c6..8074c0a77af3 100644
--- a/src/Dictionaries/SSDCacheDictionaryStorage.h
+++ b/src/Dictionaries/SSDCacheDictionaryStorage.h
@@ -542,8 +542,13 @@ class SSDCacheFileBuffer : private boost::noncopyable
                 file_path,
                 std::to_string(bytes_written));
 
+        #if defined(OS_DARWIN)
         if (::fsync(file.fd) < 0)
             throwFromErrnoWithPath("Cannot fsync " + file_path, file_path, ErrorCodes::CANNOT_FSYNC);
+        #else
+        if (::fdatasync(file.fd) < 0)
+            throwFromErrnoWithPath("Cannot fdatasync " + file_path, file_path, ErrorCodes::CANNOT_FSYNC);
+        #endif
 
         current_block_index += buffer_size_in_blocks;
 
diff --git a/src/Disks/LocalDirectorySyncGuard.cpp b/src/Disks/LocalDirectorySyncGuard.cpp
index ad66cdab6826..2610cd7c37f5 100644
--- a/src/Disks/LocalDirectorySyncGuard.cpp
+++ b/src/Disks/LocalDirectorySyncGuard.cpp
@@ -34,10 +34,10 @@ LocalDirectorySyncGuard::~LocalDirectorySyncGuard()
 #if defined(OS_DARWIN)
         if (fcntl(fd, F_FULLFSYNC, 0))
             throwFromErrno("Cannot fcntl(F_FULLFSYNC)", ErrorCodes::CANNOT_FSYNC);
+#else
+        if (-1 == ::fdatasync(fd))
+            throw Exception("Cannot fdatasync", ErrorCodes::CANNOT_FSYNC);
 #endif
-        if (-1 == ::fsync(fd))
-            throw Exception("Cannot fsync", ErrorCodes::CANNOT_FSYNC);
-
         if (-1 == ::close(fd))
             throw Exception("Cannot close file", ErrorCodes::CANNOT_CLOSE_FILE);
     }
diff --git a/src/IO/WriteBufferFromFileDescriptor.cpp b/src/IO/WriteBufferFromFileDescriptor.cpp
index 38aaa945362b..5f0db6816659 100644
--- a/src/IO/WriteBufferFromFileDescriptor.cpp
+++ b/src/IO/WriteBufferFromFileDescriptor.cpp
@@ -114,7 +114,11 @@ void WriteBufferFromFileDescriptor::sync()
     next();
 
     /// Request OS to sync data with storage medium.
-    int res = fsync(fd);
+#if defined(OS_DARWIN)
+    int res = ::fsync(fd);
+#else
+    int res = ::fdatasync(fd);
+#endif
     if (-1 == res)
         throwFromErrnoWithPath("Cannot fsync " + getFileName(), getFileName(), ErrorCodes::CANNOT_FSYNC);
 }
