{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 20279,
  "instance_id": "ClickHouse__ClickHouse-20279",
  "issue_numbers": [
    "20259"
  ],
  "base_commit": "85396fc82e8b82af0020aadb779fe0f0ae1d9054",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp b/src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp\nindex 81a6539780c2..f2bbf53bd97d 100644\n--- a/src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp\n+++ b/src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp\n@@ -140,7 +140,7 @@ void MergeTreeDataPartWriterWide::shiftCurrentMark(const Granules & granules_wri\n     /// If we didn't finished last granule than we will continue to write it from new block\n     if (!last_granule.is_complete)\n     {\n-        if (settings.blocks_are_granules_size)\n+        if (settings.can_use_adaptive_granularity && settings.blocks_are_granules_size)\n             throw Exception(ErrorCodes::LOGICAL_ERROR, \"Incomplete granules are not allowed while blocks are granules size. \"\n                 \"Mark number {} (rows {}), rows written in last mark {}, rows to write in last mark from block {} (from row {}), total marks currently {}\",\n                 last_granule.mark_number, index_granularity.getMarkRows(last_granule.mark_number), rows_written_in_last_mark,\n@@ -506,7 +506,7 @@ void MergeTreeDataPartWriterWide::finishDataSerialization(IMergeTreeDataPart::Ch\n     WrittenOffsetColumns offset_columns;\n     if (rows_written_in_last_mark > 0)\n     {\n-        if (settings.blocks_are_granules_size)\n+        if (settings.can_use_adaptive_granularity && settings.blocks_are_granules_size)\n             throw Exception(ErrorCodes::LOGICAL_ERROR, \"Incomplete granule is not allowed while blocks are granules size even for last granule. \"\n                 \"Mark number {} (rows {}), rows written for last mark {}, total marks {}\",\n                 getCurrentMark(), index_granularity.getMarkRows(getCurrentMark()), rows_written_in_last_mark, index_granularity.getMarksCount());\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.reference b/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.reference\nnew file mode 100644\nindex 000000000000..51acb0663940\n--- /dev/null\n+++ b/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.reference\n@@ -0,0 +1,6 @@\n+1\t1\n+2\t2\n+1\t1\n+2\t2\n+1\t1\n+2\t2\ndiff --git a/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.sql b/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.sql\nnew file mode 100644\nindex 000000000000..0acf6992c1e4\n--- /dev/null\n+++ b/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.sql\n@@ -0,0 +1,30 @@\n+DROP TABLE IF EXISTS old_school_table;\n+\n+CREATE TABLE old_school_table\n+(\n+    key UInt64,\n+    value String\n+)\n+ENGINE = MergeTree()\n+ORDER BY key\n+SETTINGS index_granularity_bytes = 0, enable_mixed_granularity_parts = 0, min_bytes_for_wide_part = 0,\n+vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1;\n+\n+INSERT INTO old_school_table VALUES (1, '1');\n+INSERT INTO old_school_table VALUES (2, '2');\n+\n+OPTIMIZE TABLE old_school_table FINAL;\n+\n+SELECT * FROM old_school_table ORDER BY key;\n+\n+OPTIMIZE TABLE old_school_table FINAL; -- just to be sure\n+\n+SELECT * FROM old_school_table ORDER BY key;\n+\n+ALTER TABLE old_school_table MODIFY SETTING vertical_merge_algorithm_min_rows_to_activate = 10000, vertical_merge_algorithm_min_columns_to_activate = 10000;\n+\n+OPTIMIZE TABLE old_school_table FINAL; -- and horizontal merge\n+\n+SELECT * FROM old_school_table ORDER BY key;\n+\n+DROP TABLE IF EXISTS old_school_table;\n",
  "problem_statement": "21.2 DB::Exception: Incomplete granules are not allowed while blocks are granules size\nI ran an optimize on 21.2, and the merge kept failing.\r\n```\r\n2021.02.09 14:38:06.519295 [ 14569 ] {} <Trace> db.table: Executing log entry to merge parts all_0_91343_4396, all_91344_91581_59, all_91582_91582_0, all_91583_91583_0, all_91584_91584_0 to all_0_91584_4397\r\n2021.02.09 14:38:06.519361 [ 14569 ] {} <Debug> DiskLocal: Reserving 93.94 MiB on disk `default`, having unreserved 445.19 GiB.\r\n2021.02.09 14:38:06.519377 [ 14569 ] {} <Debug> db.table (MergerMutator): Merging 5 parts: from all_0_91343_4396 to all_91584_91584_0 into Wide\r\n2021.02.09 14:38:06.519408 [ 14569 ] {} <Debug> db.table (MergerMutator): Selected MergeAlgorithm: Vertical\r\n2021.02.09 14:38:06.519506 [ 14569 ] {} <Trace> MergeTreeSequentialSource: Reading 178 marks from part all_0_91343_4396, total 1452977 rows starting from the beginning of the part, column ap_key\r\n2021.02.09 14:38:06.519573 [ 14569 ] {} <Trace> MergeTreeSequentialSource: Reading 1 marks from part all_91344_91581_59, total 1654 rows starting from the beginning of the part, column ap_key\r\n2021.02.09 14:38:06.519644 [ 14569 ] {} <Trace> MergeTreeSequentialSource: Reading 1 marks from part all_91582_91582_0, total 6 rows starting from the beginning of the part, column ap_key\r\n2021.02.09 14:38:06.519705 [ 14569 ] {} <Trace> MergeTreeSequentialSource: Reading 1 marks from part all_91583_91583_0, total 6 rows starting from the beginning of the part, column ap_key\r\n2021.02.09 14:38:06.519787 [ 14569 ] {} <Trace> MergeTreeSequentialSource: Reading 1 marks from part all_91584_91584_0, total 10 rows starting from the beginning of the part, column ap_key\r\n2021.02.09 14:38:06.521671 [ 14569 ] {} <Debug> MemoryTracker: Peak memory usage: 4.07 MiB.\r\n2021.02.09 14:38:06.521756 [ 14569 ] {} <Error> db.table: auto DB::StorageReplicatedMergeTree::processQueueEntry(ReplicatedMergeTreeQueue::SelectedEntryPtr)::(anonymous class)::operator()(DB::StorageReplicatedMergeTree::LogEntryPtr &) const: Code: 49, e.displayText() = DB::Exception: Incomplete granules are not allowed while blocks are granules size. Mark number 0 (rows 8192), rows written in last mark 0, rows to write in last mark from block 8180 (from row 0), total marks currently 1, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception<unsigned long&, unsigned long, unsigned long&, unsigned long&, unsigned long&, unsigned long>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long&, unsigned long&&, unsigned long&, unsigned long&, unsigned long&, unsigned long&&) @ 0xf3b8fd5 in /usr/bin/clickhouse\r\n1. DB::MergeTreeDataPartWriterWide::shiftCurrentMark(std::__1::vector<DB::Granule, std::__1::allocator<DB::Granule> > const&) @ 0xf3b8ecd in /usr/bin/clickhouse\r\n2. DB::MergeTreeDataPartWriterWide::write(DB::Block const&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) @ 0xf3b997f in /usr/bin/clickhouse\r\n3. DB::MergeTreeDataMergerMutator::mergePartsToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::BackgroundProcessListEntry<DB::MergeListElement, DB::MergeInfo>&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, long, DB::Context const&, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xf373c39 in /usr/bin/clickhouse\r\n4. DB::StorageReplicatedMergeTree::tryExecuteMerge(DB::ReplicatedMergeTreeLogEntry const&) @ 0xf155cd8 in /usr/bin/clickhouse\r\n5. DB::StorageReplicatedMergeTree::executeLogEntry(DB::ReplicatedMergeTreeLogEntry&) @ 0xf14abc3 in /usr/bin/clickhouse\r\n6. ? @ 0xf1bac7f in /usr/bin/clickhouse\r\n7. DB::ReplicatedMergeTreeQueue::processEntry(std::__1::function<std::__1::shared_ptr<zkutil::ZooKeeper> ()>, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&, std::__1::function<bool (std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>) @ 0xf4c8428 in /usr/bin/clickhouse\r\n8. DB::StorageReplicatedMergeTree::processQueueEntry(std::__1::shared_ptr<DB::ReplicatedMergeTreeQueue::SelectedEntry>) @ 0xf17446d in /usr/bin/clickhouse\r\n9. ? @ 0xf2cb076 in /usr/bin/clickhouse\r\n10. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8513fb8 in /usr/bin/clickhouse\r\n11. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x8515f6f in /usr/bin/clickhouse\r\n12. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x851158f in /usr/bin/clickhouse\r\n13. ? @ 0x8515023 in /usr/bin/clickhouse\r\n14. start_thread @ 0x74a4 in /lib/x86_64-linux-gnu/libpthread-2.24.so\r\n15. __clone @ 0xe8d0f in /lib/x86_64-linux-gnu/libc-2.24.so\r\n (version 21.2.2.8 (official build))\r\n```\r\nI stopped merges for this table, but the postponer kept generating the same exception:\r\n```\r\n2021.02.09 15:29:12.019727 [ 14586 ] {} <Error> auto DB::IBackgroundJobExecutor::jobExecutingTask()::(anonymous class)::operator()() const: Code: 49, e.displayText() = DB::Exception: Incomplete granules are not allowed while blocks are granules size. Mark number 0 (rows 8192), rows written in last mark 0, rows to write in last mark from block 2540 (from row 0), total marks currently 1, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. DB::Exception::Exception<unsigned long&, unsigned long, unsigned long&, unsigned long&, unsigned long&, unsigned long>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long&, unsigned long&&, unsigned long&, unsigned long&, unsigned long&, unsigned long&&) @ 0xf3b8fd5 in /usr/bin/clickhouse\r\n1. DB::MergeTreeDataPartWriterWide::shiftCurrentMark(std::__1::vector<DB::Granule, std::__1::allocator<DB::Granule> > const&) @ 0xf3b8ecd in /usr/bin/clickhouse\r\n2. DB::MergeTreeDataPartWriterWide::write(DB::Block const&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul> const*) @ 0xf3b997f in /usr/bin/clickhouse\r\n3. DB::MergeTreeDataMergerMutator::mergePartsToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::BackgroundProcessListEntry<DB::MergeListElement, DB::MergeInfo>&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, long, DB::Context const&, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xf373c39 in /usr/bin/clickhouse\r\n4. DB::StorageMergeTree::mergeSelectedParts(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::StorageMergeTree::MergeMutateSelectedEntry&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xf10f108 in /usr/bin/clickhouse\r\n5. ? @ 0xf12168c in /usr/bin/clickhouse\r\n6. ? @ 0xf2cb076 in /usr/bin/clickhouse\r\n7. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8513fb8 in /usr/bin/clickhouse\r\n8. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x8515f6f in /usr/bin/clickhouse\r\n9. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x851158f in /usr/bin/clickhouse\r\n10. ? @ 0x8515023 in /usr/bin/clickhouse\r\n11. start_thread @ 0x74a4 in /lib/x86_64-linux-gnu/libpthread-2.24.so\r\n12. __clone @ 0xe8d0f in /lib/x86_64-linux-gnu/libc-2.24.so\r\n (version 21.2.2.8 (official build))\r\n```\r\nAfter a downgrade to 20.12 the merge completed successfully.\n",
  "hints_text": "",
  "created_at": "2021-02-10T10:45:51Z",
  "modified_files": [
    "src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.reference",
    "b/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.sql"
  ]
}