diff --git a/src/Analyzer/tests/gtest_query_tree_node.cpp b/src/Analyzer/tests/gtest_query_tree_node.cpp
index cf1ce78e4232..01556c9f9216 100644
--- a/src/Analyzer/tests/gtest_query_tree_node.cpp
+++ b/src/Analyzer/tests/gtest_query_tree_node.cpp
@@ -22,12 +22,12 @@ class SourceNode final : public IQueryTreeNode
     {
     }
 
-    bool isEqualImpl(const IQueryTreeNode &) const override
+    bool isEqualImpl(const IQueryTreeNode &, CompareOptions) const override
     {
         return true;
     }
 
-    void updateTreeHashImpl(HashState &) const override
+    void updateTreeHashImpl(HashState &, CompareOptions) const override
     {
     }
 
diff --git a/tests/queries/0_stateless/02802_with_cube_with_totals.reference b/tests/queries/0_stateless/02802_with_cube_with_totals.reference
index 206c32e562b0..c7b7b5704560 100644
--- a/tests/queries/0_stateless/02802_with_cube_with_totals.reference
+++ b/tests/queries/0_stateless/02802_with_cube_with_totals.reference
@@ -1,35 +1,5 @@
 ((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
 ((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
-((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
 
 ((2147483648,(-0,1.1754943508222875e-38,2147483646,'-9223372036854775808',NULL)))	0
 \N
diff --git a/tests/queries/0_stateless/02802_with_cube_with_totals.sql b/tests/queries/0_stateless/02802_with_cube_with_totals.sql
index 168e4d61b681..77adb68eb4b7 100644
--- a/tests/queries/0_stateless/02802_with_cube_with_totals.sql
+++ b/tests/queries/0_stateless/02802_with_cube_with_totals.sql
@@ -1,3 +1,2 @@
-set allow_experimental_analyzer=1;
 SELECT tuple((2147483648, (-0., 1.1754943508222875e-38, 2147483646, '-9223372036854775808', NULL))), toInt128(0.0001) GROUP BY ((256, toInt64(1.1754943508222875e-38), NULL), NULL, -0., ((65535, '-92233720368547758.07'), 0.9999), tuple(((1., 3.4028234663852886e38, '1', 0.5), NULL, tuple('0.1')))) WITH CUBE WITH TOTALS;
 SELECT NULL GROUP BY toUUID(NULL, '0', NULL, '0.0000065535'), 1 WITH CUBE WITH TOTALS;
diff --git a/tests/queries/0_stateless/03023_group_by_use_nulls_analyzer_crashes.reference b/tests/queries/0_stateless/03023_group_by_use_nulls_analyzer_crashes.reference
index 4081b82a8f5f..17a17484a0cb 100644
--- a/tests/queries/0_stateless/03023_group_by_use_nulls_analyzer_crashes.reference
+++ b/tests/queries/0_stateless/03023_group_by_use_nulls_analyzer_crashes.reference
@@ -60,3 +60,9 @@
 (7)
 (8)
 (9)
+a	b
+a	b
+a	a
+a	a
+
+a	a
diff --git a/tests/queries/0_stateless/03023_group_by_use_nulls_analyzer_crashes.sql b/tests/queries/0_stateless/03023_group_by_use_nulls_analyzer_crashes.sql
index 012da5475817..687101375429 100644
--- a/tests/queries/0_stateless/03023_group_by_use_nulls_analyzer_crashes.sql
+++ b/tests/queries/0_stateless/03023_group_by_use_nulls_analyzer_crashes.sql
@@ -5,3 +5,19 @@ SELECT tuple(tuple(number)) as x FROM numbers(10) GROUP BY (number, tuple(number
 select tuple(array(number)) as x FROM numbers(10) GROUP BY number, array(number) WITH ROLLUP order by x;
 
 SELECT tuple(number) AS x FROM numbers(10) GROUP BY GROUPING SETS (number) order by x;
+
+SELECT ignore(toFixedString('Lambda as function parameter', 28), toNullable(28), ignore(8)), sum(marks) FROM system.parts WHERE database = currentDatabase() GROUP BY GROUPING SETS ((2)) FORMAT Null settings optimize_injective_functions_in_group_by=1, optimize_group_by_function_keys=1, group_by_use_nulls=1; -- { serverError ILLEGAL_AGGREGATION }
+
+SELECT toLowCardinality(materialize('a' AS key)),  'b' AS value GROUP BY key WITH CUBE SETTINGS group_by_use_nulls = 1;
+
+SELECT tuple(tuple(number)) AS x
+FROM numbers(10)
+GROUP BY (number, (toString(x), number))
+    WITH CUBE
+SETTINGS group_by_use_nulls = 1 FORMAT Null;
+
+SELECT tuple(number + 1) AS x FROM numbers(10) GROUP BY number + 1, toString(x) WITH CUBE settings group_by_use_nulls=1 FORMAT Null;
+
+SELECT tuple(tuple(number)) AS x FROM numbers(10) WHERE toString(toUUID(tuple(number), NULL), x) GROUP BY number, (toString(x), number) WITH CUBE SETTINGS group_by_use_nulls = 1 FORMAT Null;
+
+SELECT  materialize('a'), 'a' AS key GROUP BY key WITH CUBE WITH TOTALS SETTINGS group_by_use_nulls = 1;
