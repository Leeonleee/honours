{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 74231,
  "instance_id": "ClickHouse__ClickHouse-74231",
  "issue_numbers": [
    "72938"
  ],
  "base_commit": "f2352086d483cf78405903fe0cf0f47c8fc816a4",
  "patch": "diff --git a/src/Parsers/parseQuery.cpp b/src/Parsers/parseQuery.cpp\nindex 9ed2d7a2124d..ba7b44ca852a 100644\n--- a/src/Parsers/parseQuery.cpp\n+++ b/src/Parsers/parseQuery.cpp\n@@ -467,7 +467,7 @@ std::pair<const char *, bool> splitMultipartQuery(\n \n         ast = parseQueryAndMovePosition(parser, pos, end, \"\", true, max_query_size, max_parser_depth, max_parser_backtracks);\n \n-        if (ASTInsertQuery * insert = getInsertAST(ast))\n+        if (ASTInsertQuery * insert = getInsertAST(ast); insert && insert->data)\n         {\n             /// Data for INSERT is broken on the new line\n             pos = insert->data;\n",
  "test_patch": "diff --git a/tests/integration/test_postgresql_protocol/queries/query5.sql b/tests/integration/test_postgresql_protocol/queries/query5.sql\nnew file mode 100644\nindex 000000000000..b6dc5a2c49eb\n--- /dev/null\n+++ b/tests/integration/test_postgresql_protocol/queries/query5.sql\n@@ -0,0 +1,1 @@\n+CREATE DATABASE x; USE x; CREATE TABLE table1 (column UInt32) ENGINE = Memory; INSERT INTO table1 VALUES (0), (1), (5); CREATE TABLE table2 (column UInt32) ENGINE = Memory; INSERT INTO table2 SELECT * FROM table1; DROP DATABASE x;\ndiff --git a/tests/integration/test_postgresql_protocol/test.py b/tests/integration/test_postgresql_protocol/test.py\nindex 9396e351c639..f69cff5b1bf3 100644\n--- a/tests/integration/test_postgresql_protocol/test.py\n+++ b/tests/integration/test_postgresql_protocol/test.py\n@@ -56,7 +56,13 @@ def started_cluster():\n def test_psql_client(started_cluster):\n     node = cluster.instances[\"node\"]\n \n-    for query_file in [\"query1.sql\", \"query2.sql\", \"query3.sql\", \"query4.sql\"]:\n+    for query_file in [\n+        \"query1.sql\",\n+        \"query2.sql\",\n+        \"query3.sql\",\n+        \"query4.sql\",\n+        \"query5.sql\",\n+    ]:\n         started_cluster.copy_file_to_container(\n             started_cluster.postgres_id,\n             os.path.join(SCRIPT_DIR, \"queries\", query_file),\n@@ -111,6 +117,22 @@ def test_psql_client(started_cluster):\n         [\"SELECT 0\", \"INSERT 0 0\", \"tmp_column\", \"0\", \"1\", \"(2 rows)\", \"SELECT 0\\n\"]\n     )\n \n+    res = started_cluster.exec_in_container(\n+        started_cluster.postgres_id, cmd_prefix + [\"-f\", \"/query5.sql\"], shell=True\n+    )\n+    logging.debug(res)\n+    assert res == \"\\n\".join(\n+        [\n+            \"SELECT 0\",\n+            \"SELECT 0\",\n+            \"SELECT 0\",\n+            \"INSERT 0 0\",\n+            \"SELECT 0\",\n+            \"INSERT 0 0\",\n+            \"SELECT 0\\n\",\n+        ]\n+    )\n+\n \n def test_python_client(started_cluster):\n     node = cluster.instances[\"node\"]\n",
  "problem_statement": "Crash in Mac OS over postgresql interface\npostregsql interface, mac os\r\n\r\nSQL:\r\n```\r\ninsert into \"stocks\" (\"assortment_id\", \"branch_id\", \"stock\", \"store_id\", \"updated\", \"is_deleted\") select \"assortment_id\", \"branch_id\", \"stock\", \"store_id\", \"updated\", true as is_deleted from \"stocks\" where \"updated\" < 2024-12-09 14:09:36.226 and \"is_deleted\" = 0\r\n```\r\n\r\n```\r\n2024.12.09 16:01:34.162320 [ 39469741 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.12.09 16:01:34.162507 [ 39469741 ] {} <Fatal> BaseDaemon: (version 24.12.1.552 (official build), build id: , git hash: bc79653eedb596c1694471ba20bb8b740301032a, architecture: arm64) (from thread 39468724) Received signal 11\r\n2024.12.09 16:01:34.162579 [ 39469741 ] {} <Fatal> BaseDaemon: Signal description: Segmentation fault: 11\r\n2024.12.09 16:01:34.162621 [ 39469741 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: <not available on Darwin>. Attempted access has violated the permissions assigned to the memory area.\r\n2024.12.09 16:01:34.162672 [ 39469741 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000010f0e39a0\r\n2024.12.09 16:01:34.162710 [ 39469741 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.12.09 16:01:34.162750 [ 39469741 ] {} <Fatal> BaseDaemon: (version 24.12.1.552 (official build), build id: , git hash: bc79653eedb596c1694471ba20bb8b740301032a) (from thread 39468724) (no query) Received signal Segmentation fault: 11 (11)\r\n2024.12.09 16:01:34.162787 [ 39469741 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: <not available on Darwin>. Attempted access has violated the permissions assigned to the memory area.\r\n2024.12.09 16:01:34.162821 [ 39469741 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000010f0e39a0\r\n2024.12.09 16:01:34.169938 [ 39469741 ] {} <Fatal> BaseDaemon: 0. DB::splitMultipartQuery(String const&, std::vector<String, std::allocator<String>>&, unsigned long, unsigned long, unsigned long, bool, bool) @ 0x000000010f0e39a0\r\n2024.12.09 16:01:34.173722 [ 39469741 ] {} <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues\r\n2024.12.09 16:01:38.170478 [ 39468720 ] {} <Fatal> Application: Child process was terminated by signal 11.\r\n```\n",
  "hints_text": "This change in `parseQuery.cpp`'s `splitMultipartQuery()` may fix it.\r\n```diff\r\n         ast = parseQueryAndMovePosition(parser, pos, end, \"\", true, max_query_size, max_parser_depth, max_parser_backtracks);\r\n\r\n-        if (ASTInsertQuery * insert = getInsertAST(ast))\r\n+        if (ASTInsertQuery * insert = getInsertAST(ast); insert && insert->data)\r\n         {\r\n             /// Data for INSERT is broken on the new line\r\n             pos = insert->data;\r\n```\n> This change in `parseQuery.cpp`'s `splitMultipartQuery()` may fix it.\r\n> \r\n> ```diff\r\n>          ast = parseQueryAndMovePosition(parser, pos, end, \"\", true, max_query_size, max_parser_depth, max_parser_backtracks);\r\n> \r\n> -        if (ASTInsertQuery * insert = getInsertAST(ast))\r\n> +        if (ASTInsertQuery * insert = getInsertAST(ast); insert && insert->data)\r\n>          {\r\n>              /// Data for INSERT is broken on the new line\r\n>              pos = insert->data;\r\n> ```\r\n\r\nyes, with it changes it's working correctly\r\n\r\n",
  "created_at": "2025-01-07T00:40:48Z",
  "modified_files": [
    "src/Parsers/parseQuery.cpp"
  ],
  "modified_test_files": [
    "b/tests/integration/test_postgresql_protocol/queries/query5.sql",
    "tests/integration/test_postgresql_protocol/test.py"
  ]
}