diff --git a/tests/queries/0_stateless/01720_constraints_complex_types.reference b/tests/queries/0_stateless/01720_constraints_complex_types.reference
new file mode 100644
index 000000000000..01e79c32a8c9
--- /dev/null
+++ b/tests/queries/0_stateless/01720_constraints_complex_types.reference
@@ -0,0 +1,3 @@
+1
+2
+3
diff --git a/tests/queries/0_stateless/01720_constraints_complex_types.sql b/tests/queries/0_stateless/01720_constraints_complex_types.sql
new file mode 100644
index 000000000000..273f509b6eb2
--- /dev/null
+++ b/tests/queries/0_stateless/01720_constraints_complex_types.sql
@@ -0,0 +1,47 @@
+SET allow_suspicious_low_cardinality_types = 1;
+
+DROP TABLE IF EXISTS constraint_on_nullable_type;
+CREATE TABLE constraint_on_nullable_type
+(
+    `id` Nullable(UInt64),
+    CONSTRAINT `c0` CHECK `id` = 1
+)
+ENGINE = TinyLog();
+
+INSERT INTO constraint_on_nullable_type VALUES (0); -- {serverError 469}
+INSERT INTO constraint_on_nullable_type VALUES (1);
+
+SELECT * FROM constraint_on_nullable_type;
+
+DROP TABLE constraint_on_nullable_type;
+
+DROP TABLE IF EXISTS constraint_on_low_cardinality_type;
+CREATE TABLE constraint_on_low_cardinality_type
+(
+    `id` LowCardinality(UInt64),
+    CONSTRAINT `c0` CHECK `id` = 2
+)
+ENGINE = TinyLog;
+
+INSERT INTO constraint_on_low_cardinality_type VALUES (0); -- {serverError 469}
+INSERT INTO constraint_on_low_cardinality_type VALUES (2);
+
+SELECT * FROM constraint_on_low_cardinality_type;
+
+DROP TABLE constraint_on_low_cardinality_type;
+
+DROP TABLE IF EXISTS constraint_on_low_cardinality_nullable_type;
+
+CREATE TABLE constraint_on_low_cardinality_nullable_type
+(
+    `id` LowCardinality(Nullable(UInt64)),
+    CONSTRAINT `c0` CHECK `id` = 3
+)
+ENGINE = TinyLog;
+
+INSERT INTO constraint_on_low_cardinality_nullable_type VALUES (0); -- {serverError 469}
+INSERT INTO constraint_on_low_cardinality_nullable_type VALUES (3);
+
+SELECT * FROM constraint_on_low_cardinality_nullable_type;
+
+DROP TABLE constraint_on_low_cardinality_nullable_type;
diff --git a/tests/queries/0_stateless/01721_constraints_constant_expressions.reference b/tests/queries/0_stateless/01721_constraints_constant_expressions.reference
new file mode 100644
index 000000000000..d00491fd7e5b
--- /dev/null
+++ b/tests/queries/0_stateless/01721_constraints_constant_expressions.reference
@@ -0,0 +1,1 @@
+1
diff --git a/tests/queries/0_stateless/01721_constraints_constant_expressions.sql b/tests/queries/0_stateless/01721_constraints_constant_expressions.sql
new file mode 100644
index 000000000000..d70c0cd4dc02
--- /dev/null
+++ b/tests/queries/0_stateless/01721_constraints_constant_expressions.sql
@@ -0,0 +1,40 @@
+DROP TABLE IF EXISTS constraint_constant_number_expression;
+CREATE TABLE constraint_constant_number_expression
+(
+    id UInt64,
+    CONSTRAINT `c0` CHECK 1,
+    CONSTRAINT `c1` CHECK 1 < 2,
+    CONSTRAINT `c2` CHECK isNull(cast(NULL, 'Nullable(UInt8)'))
+) ENGINE = TinyLog();
+
+INSERT INTO constraint_constant_number_expression VALUES (1);
+
+SELECT * FROM constraint_constant_number_expression;
+
+DROP TABLE constraint_constant_number_expression;
+
+DROP TABLE IF EXISTS constraint_constant_number_expression_non_uint8;
+CREATE TABLE constraint_constant_number_expression_non_uint8
+(
+    id UInt64,
+    CONSTRAINT `c0` CHECK toUInt64(1)
+) ENGINE = TinyLog();
+
+INSERT INTO constraint_constant_number_expression_non_uint8 VALUES (2); -- {serverError 1}
+
+SELECT * FROM constraint_constant_number_expression_non_uint8;
+
+DROP TABLE constraint_constant_number_expression_non_uint8;
+
+DROP TABLE IF EXISTS constraint_constant_nullable_expression_that_contains_null;
+CREATE TABLE constraint_constant_nullable_expression_that_contains_null
+(
+    id UInt64,
+    CONSTRAINT `c0` CHECK nullIf(1 % 2, 1)
+) ENGINE = TinyLog();
+
+INSERT INTO constraint_constant_nullable_expression_that_contains_null VALUES (3); -- {serverError 469}
+
+SELECT * FROM constraint_constant_nullable_expression_that_contains_null;
+
+DROP TABLE constraint_constant_nullable_expression_that_contains_null;
diff --git a/tests/queries/skip_list.json b/tests/queries/skip_list.json
index 475b87ae36ae..36cca55779dd 100644
--- a/tests/queries/skip_list.json
+++ b/tests/queries/skip_list.json
@@ -260,7 +260,8 @@
         "00121_drop_column_zookeeper",
         "00116_storage_set",
         "00083_create_merge_tree_zookeeper",
-        "00062_replicated_merge_tree_alter_zookeeper"
+        "00062_replicated_merge_tree_alter_zookeeper",
+        "01720_constraints_complex_types"
     ],
     "polymorphic-parts": [
         "01508_partition_pruning_long", /// bug, shoud be fixed
