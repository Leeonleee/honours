{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 1921,
  "instance_id": "ClickHouse__ClickHouse-1921",
  "issue_numbers": [
    "51"
  ],
  "base_commit": "8a88aeb93124b480cf252137a1b04860d35470e1",
  "patch": "diff --git a/contrib/zookeeper b/contrib/zookeeper\nindex 438afae5af36..5aa9e889fe9e 160000\n--- a/contrib/zookeeper\n+++ b/contrib/zookeeper\n@@ -1,1 +1,1 @@\n-Subproject commit 438afae5af36c5be9c82d074f43a9bb19e0797c0\n+Subproject commit 5aa9e889fe9e739af3c2a00222d9a3a0a57179dd\ndiff --git a/dbms/src/AggregateFunctions/AggregateFunctionSequenceMatch.h b/dbms/src/AggregateFunctions/AggregateFunctionSequenceMatch.h\nindex 297e74ae9755..d8c1a323e05d 100644\n--- a/dbms/src/AggregateFunctions/AggregateFunctionSequenceMatch.h\n+++ b/dbms/src/AggregateFunctions/AggregateFunctionSequenceMatch.h\n@@ -164,8 +164,7 @@ class AggregateFunctionSequenceBase : public IAggregateFunctionDataHelper<Aggreg\n         {\n             const auto cond_arg = arguments[i].get();\n             if (!typeid_cast<const DataTypeUInt8 *>(cond_arg))\n-                throw Exception{\n-                    \"Illegal type \" + cond_arg->getName() + \" of argument \" + toString(i + 1) +\n+                throw Exception{\"Illegal type \" + cond_arg->getName() + \" of argument \" + toString(i + 1) +\n                         \" of aggregate function \" + derived().getName() + \", must be UInt8\",\n                     ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT};\n         }\ndiff --git a/dbms/src/Common/UInt128.h b/dbms/src/Common/UInt128.h\nindex 7885b0db9b89..8bda6e2b2047 100644\n--- a/dbms/src/Common/UInt128.h\n+++ b/dbms/src/Common/UInt128.h\n@@ -40,9 +40,6 @@ struct UInt128\n     bool inline operator>  (const UInt128 rhs) const { return tuple() > rhs.tuple(); }\n     bool inline operator>= (const UInt128 rhs) const { return tuple() >= rhs.tuple(); }\n \n-    /** Types who are stored at the moment in the database have no more than 64bits and can be handle\n-     *  inside an unique UInt64.\n-     */\n     template <typename T> bool inline operator== (const T rhs) const { return *this == UInt128(rhs); }\n     template <typename T> bool inline operator!= (const T rhs) const { return *this != UInt128(rhs); }\n     template <typename T> bool inline operator>= (const T rhs) const { return *this >= UInt128(rhs); }\ndiff --git a/dbms/src/Core/Defines.h b/dbms/src/Core/Defines.h\nindex d730fd1b14fc..8b69d83d69e1 100644\n--- a/dbms/src/Core/Defines.h\n+++ b/dbms/src/Core/Defines.h\n@@ -59,7 +59,7 @@\n #define DBMS_MIN_REVISION_WITH_SERVER_TIMEZONE 54058\n #define DBMS_MIN_REVISION_WITH_QUOTA_KEY_IN_CLIENT_INFO 54060\n #define DBMS_MIN_REVISION_WITH_TABLES_STATUS 54226\n-#define DBMS_MIN_REVISION_WITH_TIME_ZONE_PARAMETER_IN_DATETIME_DATA_TYPE 54311\n+#define DBMS_MIN_REVISION_WITH_TIME_ZONE_PARAMETER_IN_DATETIME_DATA_TYPE 54337\n \n /// Version of ClickHouse TCP protocol. Set to git tag with latest protocol change.\n #define DBMS_TCP_PROTOCOL_VERSION 54226\ndiff --git a/dbms/src/Core/Field.h b/dbms/src/Core/Field.h\nindex 9bb9cf6bb6e4..f4c2f1ade866 100644\n--- a/dbms/src/Core/Field.h\n+++ b/dbms/src/Core/Field.h\n@@ -29,6 +29,7 @@ STRONG_TYPEDEF(TupleBackend, Tuple); /// Array and Tuple are different types wit\n \n \n /** 32 is enough. Round number is used for alignment and for better arithmetic inside std::vector.\n+  * NOTE: Actually, sizeof(std::string) is 32 when using libc++, so Field is 40 bytes.\n   */\n #define DBMS_MIN_FIELD_SIZE 32\n \ndiff --git a/dbms/src/Core/iostream_debug_helpers.cpp b/dbms/src/Core/iostream_debug_helpers.cpp\nindex 4277126e7e29..57a3d215b69b 100644\n--- a/dbms/src/Core/iostream_debug_helpers.cpp\n+++ b/dbms/src/Core/iostream_debug_helpers.cpp\n@@ -18,7 +18,7 @@ namespace DB\n \n std::ostream & operator<<(std::ostream & stream, const IBlockInputStream & what)\n {\n-    stream << \"IBlockInputStream(id = \" << what.getID() << \", name = \" << what.getName() << \")\";\n+    stream << \"IBlockInputStream(name = \" << what.getName() << \")\";\n     //what.dumpTree(stream); // todo: set const\n     return stream;\n }\n@@ -115,7 +115,6 @@ std::ostream & operator<<(std::ostream & stream, const Connection::Packet & what\n std::ostream & operator<<(std::ostream & stream, const SubqueryForSet & what)\n {\n     stream << \"SubqueryForSet(source = \" << what.source\n-    << \", source_sample = \" <<  what.source_sample\n     // TODO: << \", set = \" <<  what.set << \", join = \" <<  what.join\n     << \", table = \" << what.table\n     << \")\";\ndiff --git a/dbms/src/DataStreams/AddingConstColumnBlockInputStream.h b/dbms/src/DataStreams/AddingConstColumnBlockInputStream.h\nindex e408e6b96d53..e22dd7f4310c 100644\n--- a/dbms/src/DataStreams/AddingConstColumnBlockInputStream.h\n+++ b/dbms/src/DataStreams/AddingConstColumnBlockInputStream.h\n@@ -24,11 +24,11 @@ class AddingConstColumnBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"AddingConstColumn\"; }\n \n-    String getID() const override\n+    Block getHeader() const override\n     {\n-        std::stringstream res;\n-        res << \"AddingConstColumn(\" << children.back()->getID() << \")\";\n-        return res.str();\n+        Block res = children.back()->getHeader();\n+        res.insert({data_type->createColumn(), data_type, column_name});\n+        return res;\n     }\n \n protected:\ndiff --git a/dbms/src/DataStreams/AggregatingBlockInputStream.cpp b/dbms/src/DataStreams/AggregatingBlockInputStream.cpp\nindex b2cf9a7930a8..8896c40e5117 100644\n--- a/dbms/src/DataStreams/AggregatingBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/AggregatingBlockInputStream.cpp\n@@ -14,6 +14,11 @@ namespace ProfileEvents\n namespace DB\n {\n \n+Block AggregatingBlockInputStream::getHeader() const\n+{\n+    return aggregator.getHeader(final);\n+}\n+\n \n Block AggregatingBlockInputStream::readImpl()\n {\n@@ -42,7 +47,7 @@ Block AggregatingBlockInputStream::readImpl()\n \n             if (!isCancelled())\n             {\n-                /// Flush data in the RAM to disk also. It's easier.\n+                /// Flush data in the RAM to disk also. It's easier than merging on-disk and RAM data.\n                 if (data_variants->size())\n                     aggregator.writeToTemporaryFile(*data_variants);\n             }\n@@ -63,9 +68,8 @@ Block AggregatingBlockInputStream::readImpl()\n         }\n     }\n \n-    Block res;\n     if (isCancelled() || !impl)\n-        return res;\n+        return {};\n \n     return impl->read();\n }\ndiff --git a/dbms/src/DataStreams/AggregatingBlockInputStream.h b/dbms/src/DataStreams/AggregatingBlockInputStream.h\nindex ea93188afba0..a28814dcab85 100644\n--- a/dbms/src/DataStreams/AggregatingBlockInputStream.h\n+++ b/dbms/src/DataStreams/AggregatingBlockInputStream.h\n@@ -30,12 +30,7 @@ class AggregatingBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Aggregating\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"Aggregating(\" << children.back()->getID() << \", \" << aggregator.getID() << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override;\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/AggregatingSortedBlockInputStream.h b/dbms/src/DataStreams/AggregatingSortedBlockInputStream.h\nindex 60b6fba25f90..e428b3b7e205 100644\n--- a/dbms/src/DataStreams/AggregatingSortedBlockInputStream.h\n+++ b/dbms/src/DataStreams/AggregatingSortedBlockInputStream.h\n@@ -28,26 +28,8 @@ class AggregatingSortedBlockInputStream : public MergingSortedBlockInputStream\n \n     String getName() const override { return \"AggregatingSorted\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"AggregatingSorted(inputs\";\n-\n-        for (size_t i = 0; i < children.size(); ++i)\n-            res << \", \" << children[i]->getID();\n-\n-        res << \", description\";\n-\n-        for (size_t i = 0; i < description.size(); ++i)\n-            res << \", \" << description[i].getID();\n-\n-        res << \")\";\n-        return res.str();\n-    }\n-\n     bool isGroupedOutput() const override { return true; }\n     bool isSortedOutput() const override { return true; }\n-    const SortDescription & getSortDescription() const override { return description; }\n \n protected:\n     /// Can return 1 more records than max_block_size.\ndiff --git a/dbms/src/DataStreams/AsynchronousBlockInputStream.h b/dbms/src/DataStreams/AsynchronousBlockInputStream.h\nindex e72b2f6489fb..0a80628cf2a2 100644\n--- a/dbms/src/DataStreams/AsynchronousBlockInputStream.h\n+++ b/dbms/src/DataStreams/AsynchronousBlockInputStream.h\n@@ -35,13 +35,6 @@ class AsynchronousBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Asynchronous\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"Asynchronous(\" << children.back()->getID() << \")\";\n-        return res.str();\n-    }\n-\n     void readPrefix() override\n     {\n         /// Do not call `readPrefix` on the child, so that the corresponding actions are performed in a separate thread.\n@@ -80,6 +73,9 @@ class AsynchronousBlockInputStream : public IProfilingBlockInputStream\n     }\n \n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n+\n     ~AsynchronousBlockInputStream() override\n     {\n         if (started)\ndiff --git a/dbms/src/DataStreams/BlockExtraInfoInputStream.h b/dbms/src/DataStreams/BlockExtraInfoInputStream.h\nindex c1a6d77874b9..6c6bd793f561 100644\n--- a/dbms/src/DataStreams/BlockExtraInfoInputStream.h\n+++ b/dbms/src/DataStreams/BlockExtraInfoInputStream.h\n@@ -5,7 +5,7 @@\n namespace DB\n {\n \n-/** Adds to one thread additional block information that is specified\n+/** Adds to one stream additional block information that is specified\n   * as the constructor parameter.\n   */\n class BlockExtraInfoInputStream : public IProfilingBlockInputStream\n@@ -24,12 +24,7 @@ class BlockExtraInfoInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"BlockExtraInfoInput\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"BlockExtraInfoInput(\" << children.back()->getID() << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override { return children.back()->getHeader(); }\n \n protected:\n     Block readImpl() override\ndiff --git a/dbms/src/DataStreams/BlockIO.h b/dbms/src/DataStreams/BlockIO.h\nindex 5ac609f8a6ff..8cd19db9154b 100644\n--- a/dbms/src/DataStreams/BlockIO.h\n+++ b/dbms/src/DataStreams/BlockIO.h\n@@ -21,7 +21,6 @@ struct BlockIO\n     BlockInputStreamPtr in;\n     BlockOutputStreamPtr out;\n \n-    Block in_sample;    /// Example of a block to be read from `in`.\n     Block out_sample;   /// Example of a block to be written to `out`.\n \n     /// Callbacks for query logging could be set here.\n@@ -51,7 +50,6 @@ struct BlockIO\n         process_list_entry      = rhs.process_list_entry;\n         in                      = rhs.in;\n         out                     = rhs.out;\n-        in_sample               = rhs.in_sample;\n         out_sample              = rhs.out_sample;\n \n         finish_callback         = rhs.finish_callback;\ndiff --git a/dbms/src/DataStreams/BlockInputStreamFromRowInputStream.h b/dbms/src/DataStreams/BlockInputStreamFromRowInputStream.h\nindex 0194bacba9e1..0ab725be9a01 100644\n--- a/dbms/src/DataStreams/BlockInputStreamFromRowInputStream.h\n+++ b/dbms/src/DataStreams/BlockInputStreamFromRowInputStream.h\n@@ -29,15 +29,10 @@ class BlockInputStreamFromRowInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"BlockInputStreamFromRowInputStream\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << this;\n-        return res.str();\n-    }\n-\n     RowInputStreamPtr & getRowInput() { return row_input; }\n \n+    Block getHeader() const override { return sample; }\n+\n protected:\n     Block readImpl() override;\n \ndiff --git a/dbms/src/DataStreams/BlocksListBlockInputStream.h b/dbms/src/DataStreams/BlocksListBlockInputStream.h\nindex b477e34d3caa..6c8852de4a37 100644\n--- a/dbms/src/DataStreams/BlocksListBlockInputStream.h\n+++ b/dbms/src/DataStreams/BlocksListBlockInputStream.h\n@@ -22,13 +22,6 @@ class BlocksListBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"BlocksList\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << this;\n-        return res.str();\n-    }\n-\n protected:\n     Block readImpl() override\n     {\ndiff --git a/dbms/src/DataStreams/CastTypeBlockInputStream.cpp b/dbms/src/DataStreams/CastTypeBlockInputStream.cpp\nindex e792fc8afa44..9dbd0962c934 100644\n--- a/dbms/src/DataStreams/CastTypeBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/CastTypeBlockInputStream.cpp\n@@ -20,11 +20,6 @@ String CastTypeBlockInputStream::getName() const\n     return \"CastType\";\n }\n \n-String CastTypeBlockInputStream::getID() const\n-{\n-    return \"CastType(\" + children.back()->getID() + \")\";\n-}\n-\n Block CastTypeBlockInputStream::readImpl()\n {\n     Block block = children.back()->read();\ndiff --git a/dbms/src/DataStreams/CastTypeBlockInputStream.h b/dbms/src/DataStreams/CastTypeBlockInputStream.h\nindex 23815210d54a..b92a7ffa31fd 100644\n--- a/dbms/src/DataStreams/CastTypeBlockInputStream.h\n+++ b/dbms/src/DataStreams/CastTypeBlockInputStream.h\n@@ -17,7 +17,7 @@ class CastTypeBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override;\n \n-    String getID() const override;\n+    Block getHeader() const override { return ref_definition; }\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/CollapsingFinalBlockInputStream.h b/dbms/src/DataStreams/CollapsingFinalBlockInputStream.h\nindex 264b20838093..db06a2aa9d38 100644\n--- a/dbms/src/DataStreams/CollapsingFinalBlockInputStream.h\n+++ b/dbms/src/DataStreams/CollapsingFinalBlockInputStream.h\n@@ -28,26 +28,11 @@ class CollapsingFinalBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"CollapsingFinal\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"CollapsingFinal(inputs\";\n-\n-        for (size_t i = 0; i < children.size(); ++i)\n-            res << \", \" << children[i]->getID();\n-\n-        res << \", description\";\n-\n-        for (size_t i = 0; i < description.size(); ++i)\n-            res << \", \" << description[i].getID();\n-\n-        res << \", sign_column, \" << sign_column_name << \")\";\n-        return res.str();\n-    }\n-\n     bool isSortedOutput() const override { return true; }\n     const SortDescription & getSortDescription() const override { return description; }\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n protected:\n     Block readImpl() override;\n \ndiff --git a/dbms/src/DataStreams/CollapsingSortedBlockInputStream.h b/dbms/src/DataStreams/CollapsingSortedBlockInputStream.h\nindex 9d9043b30c54..7280dda02b1d 100644\n--- a/dbms/src/DataStreams/CollapsingSortedBlockInputStream.h\n+++ b/dbms/src/DataStreams/CollapsingSortedBlockInputStream.h\n@@ -33,23 +33,6 @@ class CollapsingSortedBlockInputStream : public MergingSortedBlockInputStream\n \n     String getName() const override { return \"CollapsingSorted\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"CollapsingSorted(inputs\";\n-\n-        for (size_t i = 0; i < children.size(); ++i)\n-            res << \", \" << children[i]->getID();\n-\n-        res << \", description\";\n-\n-        for (size_t i = 0; i < description.size(); ++i)\n-            res << \", \" << description[i].getID();\n-\n-        res << \", sign_column, \" << sign_column << \")\";\n-        return res.str();\n-    }\n-\n protected:\n     /// Can return 1 more records than max_block_size.\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/ColumnGathererStream.cpp b/dbms/src/DataStreams/ColumnGathererStream.cpp\nindex 81a9d3348b00..ba4107f7e8b9 100644\n--- a/dbms/src/DataStreams/ColumnGathererStream.cpp\n+++ b/dbms/src/DataStreams/ColumnGathererStream.cpp\n@@ -30,19 +30,6 @@ ColumnGathererStream::ColumnGathererStream(\n }\n \n \n-String ColumnGathererStream::getID() const\n-{\n-    std::stringstream res;\n-\n-    res << getName() << \"(\";\n-    for (size_t i = 0; i < children.size(); ++i)\n-        res << (i == 0 ? \"\" : \", \" ) << children[i]->getID();\n-    res << \")\";\n-\n-    return res.str();\n-}\n-\n-\n void ColumnGathererStream::init()\n {\n     sources.reserve(children.size());\n@@ -107,13 +94,13 @@ void ColumnGathererStream::fetchNewBlock(Source & source, size_t source_num)\n     }\n     catch (Exception & e)\n     {\n-        e.addMessage(\"Cannot fetch required block. Stream \" + children[source_num]->getID() + \", part \" + toString(source_num));\n+        e.addMessage(\"Cannot fetch required block. Stream \" + children[source_num]->getName() + \", part \" + toString(source_num));\n         throw;\n     }\n \n     if (0 == source.size)\n     {\n-        throw Exception(\"Fetched block is empty. Stream \" + children[source_num]->getID() + \", part \" + toString(source_num),\n+        throw Exception(\"Fetched block is empty. Stream \" + children[source_num]->getName() + \", part \" + toString(source_num),\n                         ErrorCodes::RECEIVED_EMPTY_DATA);\n     }\n }\ndiff --git a/dbms/src/DataStreams/ColumnGathererStream.h b/dbms/src/DataStreams/ColumnGathererStream.h\nindex 66ad2645e2f9..101e8fdccf3c 100644\n--- a/dbms/src/DataStreams/ColumnGathererStream.h\n+++ b/dbms/src/DataStreams/ColumnGathererStream.h\n@@ -61,12 +61,12 @@ class ColumnGathererStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"ColumnGatherer\"; }\n \n-    String getID() const override;\n-\n     Block readImpl() override;\n \n     void readSuffixImpl() override;\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n     /// for use in implementations of IColumn::gather()\n     template <typename Column>\n     void gather(Column & column_res);\ndiff --git a/dbms/src/DataStreams/ConcatBlockInputStream.h b/dbms/src/DataStreams/ConcatBlockInputStream.h\nindex e8da47a7c02a..fafcbc6950c3 100644\n--- a/dbms/src/DataStreams/ConcatBlockInputStream.h\n+++ b/dbms/src/DataStreams/ConcatBlockInputStream.h\n@@ -22,24 +22,7 @@ class ConcatBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Concat\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"Concat(\";\n-\n-        Strings children_ids(children.size());\n-        for (size_t i = 0; i < children.size(); ++i)\n-            children_ids[i] = children[i]->getID();\n-\n-        /// Let's assume that the order of concatenation of blocks does not matter.\n-        std::sort(children_ids.begin(), children_ids.end());\n-\n-        for (size_t i = 0; i < children_ids.size(); ++i)\n-            res << (i == 0 ? \"\" : \", \") << children_ids[i];\n-\n-        res << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n \n protected:\n     Block readImpl() override\ndiff --git a/dbms/src/DataStreams/CreatingSetsBlockInputStream.h b/dbms/src/DataStreams/CreatingSetsBlockInputStream.h\nindex 605caac90bcf..85088d1d8fcd 100644\n--- a/dbms/src/DataStreams/CreatingSetsBlockInputStream.h\n+++ b/dbms/src/DataStreams/CreatingSetsBlockInputStream.h\n@@ -35,24 +35,7 @@ class CreatingSetsBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"CreatingSets\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"CreatingSets(\";\n-\n-        Strings children_ids(children.size());\n-        for (size_t i = 0; i < children.size(); ++i)\n-            children_ids[i] = children[i]->getID();\n-\n-        /// Let's assume that the order of creating sets does not matter.\n-        std::sort(children_ids.begin(), children_ids.end() - 1);\n-\n-        for (size_t i = 0; i < children_ids.size(); ++i)\n-            res << (i == 0 ? \"\" : \", \") << children_ids[i];\n-\n-        res << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override { return children.back()->getHeader(); }\n \n     /// Takes `totals` only from the main source, not from subquery sources.\n     const Block & getTotals() override;\ndiff --git a/dbms/src/DataStreams/DistinctBlockInputStream.cpp b/dbms/src/DataStreams/DistinctBlockInputStream.cpp\nindex f10eda57e053..50949b2f0ccd 100644\n--- a/dbms/src/DataStreams/DistinctBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/DistinctBlockInputStream.cpp\n@@ -18,13 +18,6 @@ DistinctBlockInputStream::DistinctBlockInputStream(const BlockInputStreamPtr & i\n     children.push_back(input);\n }\n \n-String DistinctBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"Distinct(\" << children.back()->getID() << \")\";\n-    return res.str();\n-}\n-\n Block DistinctBlockInputStream::readImpl()\n {\n     /// Execute until end of stream or until\ndiff --git a/dbms/src/DataStreams/DistinctBlockInputStream.h b/dbms/src/DataStreams/DistinctBlockInputStream.h\nindex d35c6ced3d3c..60a92e0399aa 100644\n--- a/dbms/src/DataStreams/DistinctBlockInputStream.h\n+++ b/dbms/src/DataStreams/DistinctBlockInputStream.h\n@@ -22,7 +22,7 @@ class DistinctBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Distinct\"; }\n \n-    String getID() const override;\n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/DistinctSortedBlockInputStream.cpp b/dbms/src/DataStreams/DistinctSortedBlockInputStream.cpp\nindex 59395d26b231..e9e5d69d047b 100644\n--- a/dbms/src/DataStreams/DistinctSortedBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/DistinctSortedBlockInputStream.cpp\n@@ -19,13 +19,6 @@ DistinctSortedBlockInputStream::DistinctSortedBlockInputStream(const BlockInputS\n     children.push_back(input);\n }\n \n-String DistinctSortedBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"DistinctSorted(\" << children.back()->getID() << \")\";\n-    return res.str();\n-}\n-\n Block DistinctSortedBlockInputStream::readImpl()\n {\n     /// Execute until end of stream or until\ndiff --git a/dbms/src/DataStreams/DistinctSortedBlockInputStream.h b/dbms/src/DataStreams/DistinctSortedBlockInputStream.h\nindex 335e8406e700..33c6cef7774e 100644\n--- a/dbms/src/DataStreams/DistinctSortedBlockInputStream.h\n+++ b/dbms/src/DataStreams/DistinctSortedBlockInputStream.h\n@@ -25,7 +25,7 @@ class DistinctSortedBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"DistinctSorted\"; }\n \n-    String getID() const override;\n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/ExpressionBlockInputStream.cpp b/dbms/src/DataStreams/ExpressionBlockInputStream.cpp\nindex 369150796f75..d274a456c227 100644\n--- a/dbms/src/DataStreams/ExpressionBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/ExpressionBlockInputStream.cpp\n@@ -13,13 +13,6 @@ ExpressionBlockInputStream::ExpressionBlockInputStream(const BlockInputStreamPtr\n \n String ExpressionBlockInputStream::getName() const { return \"Expression\"; }\n \n-String ExpressionBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"Expression(\" << children.back()->getID() << \", \" << expression->getID() << \")\";\n-    return res.str();\n-}\n-\n const Block & ExpressionBlockInputStream::getTotals()\n {\n     if (IProfilingBlockInputStream * child = dynamic_cast<IProfilingBlockInputStream *>(&*children.back()))\n@@ -31,14 +24,19 @@ const Block & ExpressionBlockInputStream::getTotals()\n     return totals;\n }\n \n+Block ExpressionBlockInputStream::getHeader() const\n+{\n+    Block res = children.back()->getHeader();\n+    expression->execute(res);\n+    return res;\n+}\n+\n Block ExpressionBlockInputStream::readImpl()\n {\n     Block res = children.back()->read();\n     if (!res)\n         return res;\n-\n     expression->execute(res);\n-\n     return res;\n }\n \ndiff --git a/dbms/src/DataStreams/ExpressionBlockInputStream.h b/dbms/src/DataStreams/ExpressionBlockInputStream.h\nindex 11d498332a36..a509d1e606ee 100644\n--- a/dbms/src/DataStreams/ExpressionBlockInputStream.h\n+++ b/dbms/src/DataStreams/ExpressionBlockInputStream.h\n@@ -22,8 +22,8 @@ class ExpressionBlockInputStream : public IProfilingBlockInputStream\n     ExpressionBlockInputStream(const BlockInputStreamPtr & input, const ExpressionActionsPtr & expression_);\n \n     String getName() const override;\n-    String getID() const override;\n     const Block & getTotals() override;\n+    Block getHeader() const override;\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/FilterBlockInputStream.cpp b/dbms/src/DataStreams/FilterBlockInputStream.cpp\nindex e3430119a1b2..5bfff19b7a78 100644\n--- a/dbms/src/DataStreams/FilterBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/FilterBlockInputStream.cpp\n@@ -23,24 +23,40 @@ FilterBlockInputStream::FilterBlockInputStream(const BlockInputStreamPtr & input\n     children.push_back(input);\n }\n \n-FilterBlockInputStream::FilterBlockInputStream(const BlockInputStreamPtr & input, const ExpressionActionsPtr & expression_, const String & filter_column_name_)\n-    : expression(expression_), filter_column(-1), filter_column_name(filter_column_name_)\n+FilterBlockInputStream::FilterBlockInputStream(const BlockInputStreamPtr & input, const ExpressionActionsPtr & expression_, const String & filter_column_name)\n+    : expression(expression_)\n {\n     children.push_back(input);\n-}\n \n+    /// Determine position of filter column.\n+    header = input->getHeader();\n+    expression->execute(header);\n \n-String FilterBlockInputStream::getName() const { return \"Filter\"; }\n+    filter_column = header.getPositionByName(filter_column_name);\n \n+    /// Isn't the filter already constant?\n+    ColumnPtr column = header.safeGetByPosition(filter_column).column;\n \n-String FilterBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"Filter(\" << children.back()->getID() << \", \" << expression->getID() << \", \" << filter_column << \", \" << filter_column_name << \")\";\n-    return res.str();\n+    if (!have_constant_filter_description)\n+    {\n+        have_constant_filter_description = true;\n+        if (column)\n+            constant_filter_description = ConstantFilterDescription(*column);\n+    }\n+\n+    if (!constant_filter_description.always_false\n+        && !constant_filter_description.always_true)\n+    {\n+        /// Replace the filter column to a constant with value 1.\n+        auto header_filter_elem = header.getByPosition(filter_column);\n+        header_filter_elem.column = header_filter_elem.type->createColumnConst(header.rows(), UInt64(1));\n+    }\n }\n \n \n+String FilterBlockInputStream::getName() const { return \"Filter\"; }\n+\n+\n const Block & FilterBlockInputStream::getTotals()\n {\n     if (IProfilingBlockInputStream * child = dynamic_cast<IProfilingBlockInputStream *>(&*children.back()))\n@@ -53,34 +69,19 @@ const Block & FilterBlockInputStream::getTotals()\n }\n \n \n+Block FilterBlockInputStream::getHeader() const\n+{\n+    return header;\n+}\n+\n+\n Block FilterBlockInputStream::readImpl()\n {\n     Block res;\n \n-    if (is_first)\n+    if (!have_constant_filter_description)\n     {\n-        is_first = false;\n-\n-        const Block & sample_block = expression->getSampleBlock();\n-\n-        /// Find the current position of the filter column in the block.\n-        /** sample_block has the result structure of evaluating the expression.\n-          * But this structure does not necessarily match expression->execute(res) below,\n-          *  because the expression can be applied to a block that also contains additional,\n-          *  columns unnecessary for this expression, but needed later, in the next stages of the query execution pipeline.\n-          * There will be no such columns in sample_block.\n-          * Therefore, the position of the filter column in it can be different.\n-          */\n-        ssize_t filter_column_in_sample_block = filter_column;\n-        if (filter_column_in_sample_block == -1)\n-            filter_column_in_sample_block = sample_block.getPositionByName(filter_column_name);\n-\n-        /// Let's check if the filter column is a constant containing 0 or 1.\n-        ColumnPtr column = sample_block.safeGetByPosition(filter_column_in_sample_block).column;\n-\n-        if (column)\n-            constant_filter_description = ConstantFilterDescription(*column);\n-\n+        getHeader();\n         if (constant_filter_description.always_false)\n             return res;\n     }\n@@ -97,10 +98,6 @@ Block FilterBlockInputStream::readImpl()\n         if (constant_filter_description.always_true)\n             return res;\n \n-        /// Find the current position of the filter column in the block.\n-        if (filter_column == -1)\n-            filter_column = res.getPositionByName(filter_column_name);\n-\n         size_t columns = res.columns();\n         ColumnPtr column = res.safeGetByPosition(filter_column).column;\n \ndiff --git a/dbms/src/DataStreams/FilterBlockInputStream.h b/dbms/src/DataStreams/FilterBlockInputStream.h\nindex 56a38b9e39aa..9cb27d6b1f08 100644\n--- a/dbms/src/DataStreams/FilterBlockInputStream.h\n+++ b/dbms/src/DataStreams/FilterBlockInputStream.h\n@@ -25,20 +25,19 @@ class FilterBlockInputStream : public IProfilingBlockInputStream\n     FilterBlockInputStream(const BlockInputStreamPtr & input, const ExpressionActionsPtr & expression_, const String & filter_column_name_);\n \n     String getName() const override;\n-    String getID() const override;\n     const Block & getTotals() override;\n+    Block getHeader() const override;\n \n protected:\n     Block readImpl() override;\n \n private:\n     ExpressionActionsPtr expression;\n+    Block header;\n     ssize_t filter_column;\n-    String filter_column_name;\n-\n-    bool is_first = true;\n \n     ConstantFilterDescription constant_filter_description;\n+    bool have_constant_filter_description = false;\n };\n \n }\ndiff --git a/dbms/src/DataStreams/FilterColumnsBlockInputStream.cpp b/dbms/src/DataStreams/FilterColumnsBlockInputStream.cpp\nindex a8ee82945a73..fa7bb916fe7d 100644\n--- a/dbms/src/DataStreams/FilterColumnsBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/FilterColumnsBlockInputStream.cpp\n@@ -3,16 +3,16 @@\n namespace DB\n {\n \n-String FilterColumnsBlockInputStream::getID() const\n+Block FilterColumnsBlockInputStream::getHeader() const\n {\n-    std::stringstream res;\n-    res << \"FilterColumnsBlockInputStream(\" << children.back()->getID();\n+    Block block = children.back()->getHeader();\n+    Block filtered;\n \n     for (const auto & it : columns_to_save)\n-        res << \", \" << it;\n+        if (throw_if_column_not_found || block.has(it))\n+            filtered.insert(std::move(block.getByName(it)));\n \n-    res << \")\";\n-    return res.str();\n+    return filtered;\n }\n \n Block FilterColumnsBlockInputStream::readImpl()\ndiff --git a/dbms/src/DataStreams/FilterColumnsBlockInputStream.h b/dbms/src/DataStreams/FilterColumnsBlockInputStream.h\nindex 07a9f6bd0932..b2ac83c8fdf2 100644\n--- a/dbms/src/DataStreams/FilterColumnsBlockInputStream.h\n+++ b/dbms/src/DataStreams/FilterColumnsBlockInputStream.h\n@@ -24,7 +24,7 @@ class FilterColumnsBlockInputStream : public IProfilingBlockInputStream\n         return \"FilterColumnsBlockInputStream\";\n     }\n \n-    String getID() const override;\n+    Block getHeader() const override;\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/FormatFactory.cpp b/dbms/src/DataStreams/FormatFactory.cpp\nindex c9954dd8352b..d871a4b23a5b 100644\n--- a/dbms/src/DataStreams/FormatFactory.cpp\n+++ b/dbms/src/DataStreams/FormatFactory.cpp\n@@ -59,7 +59,7 @@ BlockInputStreamPtr FormatFactory::getInput(const String & name, ReadBuffer & bu\n \n     if (name == \"Native\")\n     {\n-        return std::make_shared<NativeBlockInputStream>(buf);\n+        return std::make_shared<NativeBlockInputStream>(buf, sample, 0);\n     }\n     else if (name == \"RowBinary\")\n     {\ndiff --git a/dbms/src/DataStreams/GraphiteRollupSortedBlockInputStream.h b/dbms/src/DataStreams/GraphiteRollupSortedBlockInputStream.h\nindex c5e85bcf8aee..99d9466408de 100644\n--- a/dbms/src/DataStreams/GraphiteRollupSortedBlockInputStream.h\n+++ b/dbms/src/DataStreams/GraphiteRollupSortedBlockInputStream.h\n@@ -135,23 +135,6 @@ class GraphiteRollupSortedBlockInputStream : public MergingSortedBlockInputStrea\n \n     String getName() const override { return \"GraphiteRollupSorted\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"GraphiteRollupSorted(inputs\";\n-\n-        for (size_t i = 0; i < children.size(); ++i)\n-            res << \", \" << children[i]->getID();\n-\n-        res << \", description\";\n-\n-        for (size_t i = 0; i < description.size(); ++i)\n-            res << \", \" << description[i].getID();\n-\n-        res << \")\";\n-        return res.str();\n-    }\n-\n     ~GraphiteRollupSortedBlockInputStream()\n     {\n         if (aggregate_state_created)\ndiff --git a/dbms/src/DataStreams/IBlockInputStream.cpp b/dbms/src/DataStreams/IBlockInputStream.cpp\nindex 13a3c99d393a..b4cc5444c875 100644\n--- a/dbms/src/DataStreams/IBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/IBlockInputStream.cpp\n@@ -64,6 +64,7 @@ void IBlockInputStream::dumpTree(std::ostream & ostr, size_t indent, size_t mult\n     ostr << String(indent, ' ') << getName();\n     if (multiplier > 1)\n         ostr << \" \u00d7 \" << multiplier;\n+    // ostr << \": \" << getHeader().dumpStructure();\n     ostr << std::endl;\n     ++indent;\n \n@@ -125,13 +126,5 @@ void IBlockInputStream::getLeavesImpl(BlockInputStreams & res, const BlockInputS\n             (*it)->getLeavesImpl(res, *it);\n }\n \n-/// By default all instances is different streams\n-String IBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << getName() << \"(\" << this << \")\";\n-    return res.str();\n-};\n-\n }\n \ndiff --git a/dbms/src/DataStreams/IBlockInputStream.h b/dbms/src/DataStreams/IBlockInputStream.h\nindex 8a874ea127b1..77ee6b941573 100644\n--- a/dbms/src/DataStreams/IBlockInputStream.h\n+++ b/dbms/src/DataStreams/IBlockInputStream.h\n@@ -48,6 +48,12 @@ class IBlockInputStream : private boost::noncopyable\n public:\n     IBlockInputStream() {}\n \n+    /** Get data structure of the stream in a form of \"header\" block (it is also called \"sample block\").\n+      * Header block contains column names, data types, columns of size 0. Constant columns must have corresponding values.\n+      * It is guaranteed that method \"read\" returns blocks of exactly that structure.\n+      */\n+    virtual Block getHeader() const = 0;\n+\n     /** Read next block.\n       * If there are no more blocks, return an empty block (for which operator `bool` returns false).\n       * NOTE: Only one thread can read from one instance of IBlockInputStream simultaneously.\n@@ -76,14 +82,6 @@ class IBlockInputStream : private boost::noncopyable\n       */\n     virtual String getName() const = 0;\n \n-    /** The unique identifier of the pipeline part of the query execution.\n-      * Sources with the same identifier are considered identical\n-      *  (producing the same data), and can be replaced by one source\n-      *  if several queries are executed simultaneously.\n-      * If the source can not be glued together with any other - return the object's address as an identifier.\n-      */\n-    virtual String getID() const;\n-\n     /// If this stream generates data in grouped by some keys, return true.\n     virtual bool isGroupedOutput() const { return false; }\n     /// If this stream generates data in order by some keys, return true.\ndiff --git a/dbms/src/DataStreams/InputStreamFromASTInsertQuery.h b/dbms/src/DataStreams/InputStreamFromASTInsertQuery.h\nindex 622ff46d4240..dbcf3799e3e8 100644\n--- a/dbms/src/DataStreams/InputStreamFromASTInsertQuery.h\n+++ b/dbms/src/DataStreams/InputStreamFromASTInsertQuery.h\n@@ -1,20 +1,16 @@\n #pragma once\n \n-#include <Parsers/ASTInsertQuery.h>\n-#include <Interpreters/Context.h>\n-#include <IO/ConcatReadBuffer.h>\n+#include <Parsers/IAST.h>\n #include <DataStreams/IProfilingBlockInputStream.h>\n-#include <DataStreams/BlockIO.h>\n #include <cstddef>\n+#include <memory>\n \n \n namespace DB\n {\n \n-namespace ErrorCodes\n-{\n-    extern const int LOGICAL_ERROR;\n-}\n+struct BlockIO;\n+class Context;\n \n /** Prepares an input stream which produce data containing in INSERT query\n   * Head of inserting data could be stored in INSERT ast directly\n@@ -23,7 +19,6 @@ namespace ErrorCodes\n class InputStreamFromASTInsertQuery : public IProfilingBlockInputStream\n {\n public:\n-\n     InputStreamFromASTInsertQuery(const ASTPtr & ast, ReadBuffer & input_buffer_tail_part, const BlockIO & streams, Context & context);\n \n     Block readImpl() override { return res_stream->read(); }\n@@ -31,10 +26,10 @@ class InputStreamFromASTInsertQuery : public IProfilingBlockInputStream\n     void readSuffixImpl() override { return res_stream->readSuffix(); }\n \n     String getName() const override { return \"InputStreamFromASTInsertQuery\"; }\n-    String getID() const override { return \"InputStreamFromASTInsertQuery(\" + toString(std::intptr_t(this)) + \")\"; }\n \n-private:\n+    Block getHeader() const override { return res_stream->getHeader(); }\n \n+private:\n     std::unique_ptr<ReadBuffer> input_buffer_ast_part;\n     std::unique_ptr<ReadBuffer> input_buffer_contacenated;\n \ndiff --git a/dbms/src/DataStreams/LazyBlockInputStream.h b/dbms/src/DataStreams/LazyBlockInputStream.h\nindex 8cf4f3a293d4..6d05e570f531 100644\n--- a/dbms/src/DataStreams/LazyBlockInputStream.h\n+++ b/dbms/src/DataStreams/LazyBlockInputStream.h\n@@ -15,14 +15,13 @@ class LazyBlockInputStream : public IProfilingBlockInputStream\n public:\n     using Generator = std::function<BlockInputStreamPtr()>;\n \n-    LazyBlockInputStream(Generator generator_)\n-        : generator(std::move(generator_))\n+    LazyBlockInputStream(const Block & header_, Generator generator_)\n+        : header(header_), generator(std::move(generator_))\n     {\n     }\n \n-    LazyBlockInputStream(const char * name_, Generator generator_)\n-        : name(name_)\n-        , generator(std::move(generator_))\n+    LazyBlockInputStream(const char * name_, const Block & header_, Generator generator_)\n+        : name(name_), header(header_), generator(std::move(generator_))\n     {\n     }\n \n@@ -34,6 +33,11 @@ class LazyBlockInputStream : public IProfilingBlockInputStream\n         IProfilingBlockInputStream::cancel();\n     }\n \n+    Block getHeader() const override\n+    {\n+        return header;\n+    }\n+\n protected:\n     Block readImpl() override\n     {\n@@ -89,6 +93,7 @@ class LazyBlockInputStream : public IProfilingBlockInputStream\n \n private:\n     const char * name = \"Lazy\";\n+    Block header;\n     Generator generator;\n \n     BlockInputStreamPtr input;\ndiff --git a/dbms/src/DataStreams/LimitBlockInputStream.h b/dbms/src/DataStreams/LimitBlockInputStream.h\nindex 23bd5739aafd..9739665243f6 100644\n--- a/dbms/src/DataStreams/LimitBlockInputStream.h\n+++ b/dbms/src/DataStreams/LimitBlockInputStream.h\n@@ -21,12 +21,7 @@ class LimitBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Limit\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"Limit(\" << children.back()->getID() << \", \" << limit << \", \" << offset << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/LimitByBlockInputStream.h b/dbms/src/DataStreams/LimitByBlockInputStream.h\nindex 09eb357ca2e3..88cf2ff1670b 100644\n--- a/dbms/src/DataStreams/LimitByBlockInputStream.h\n+++ b/dbms/src/DataStreams/LimitByBlockInputStream.h\n@@ -3,9 +3,9 @@\n #include <DataStreams/IProfilingBlockInputStream.h>\n \n #include <Common/HashTable/HashMap.h>\n-#include <Common/SipHash.h>\n #include <Common/UInt128.h>\n \n+\n namespace DB\n {\n \n@@ -22,6 +22,8 @@ class LimitByBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"LimitBy\"; }\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n protected:\n     Block readImpl() override;\n \ndiff --git a/dbms/src/DataStreams/MaterializingBlockInputStream.cpp b/dbms/src/DataStreams/MaterializingBlockInputStream.cpp\nindex b7ae5c6c000f..e0f287d44faf 100644\n--- a/dbms/src/DataStreams/MaterializingBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/MaterializingBlockInputStream.cpp\n@@ -15,11 +15,9 @@ String MaterializingBlockInputStream::getName() const\n     return \"Materializing\";\n }\n \n-String MaterializingBlockInputStream::getID() const\n+Block MaterializingBlockInputStream::getHeader() const\n {\n-    std::stringstream res;\n-    res << \"Materializing(\" << children.back()->getID() << \")\";\n-    return res.str();\n+    return materializeBlock(children.back()->getHeader());\n }\n \n Block MaterializingBlockInputStream::readImpl()\ndiff --git a/dbms/src/DataStreams/MaterializingBlockInputStream.h b/dbms/src/DataStreams/MaterializingBlockInputStream.h\nindex feeca05298e5..dfbad3b14b2e 100644\n--- a/dbms/src/DataStreams/MaterializingBlockInputStream.h\n+++ b/dbms/src/DataStreams/MaterializingBlockInputStream.h\n@@ -12,7 +12,7 @@ class MaterializingBlockInputStream : public IProfilingBlockInputStream\n public:\n     MaterializingBlockInputStream(const BlockInputStreamPtr & input);\n     String getName() const override;\n-    String getID() const override;\n+    Block getHeader() const override;\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/MergeSortingBlockInputStream.h b/dbms/src/DataStreams/MergeSortingBlockInputStream.h\nindex 4a97d214a795..613169899d80 100644\n--- a/dbms/src/DataStreams/MergeSortingBlockInputStream.h\n+++ b/dbms/src/DataStreams/MergeSortingBlockInputStream.h\n@@ -33,12 +33,13 @@ class MergeSortingBlocksBlockInputStream : public IProfilingBlockInputStream\n         size_t max_merged_block_size_, size_t limit_ = 0);\n \n     String getName() const override { return \"MergeSortingBlocks\"; }\n-    String getID() const override { return getName(); }\n \n     bool isGroupedOutput() const override { return true; }\n     bool isSortedOutput() const override { return true; }\n     const SortDescription & getSortDescription() const override { return description; }\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n protected:\n     Block readImpl() override;\n \n@@ -80,22 +81,12 @@ class MergeSortingBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"MergeSorting\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"MergeSorting(\" << children.back()->getID();\n-\n-        for (size_t i = 0; i < description.size(); ++i)\n-            res << \", \" << description[i].getID();\n-\n-        res << \")\";\n-        return res.str();\n-    }\n-\n     bool isGroupedOutput() const override { return true; }\n     bool isSortedOutput() const override { return true; }\n     const SortDescription & getSortDescription() const override { return description; }\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n protected:\n     Block readImpl() override;\n \n@@ -129,7 +120,7 @@ class MergeSortingBlockInputStream : public IProfilingBlockInputStream\n         BlockInputStreamPtr block_in;\n \n         TemporaryFileStream(const std::string & path)\n-            : file_in(path), compressed_in(file_in), block_in(std::make_shared<NativeBlockInputStream>(compressed_in)) {}\n+            : file_in(path), compressed_in(file_in), block_in(std::make_shared<NativeBlockInputStream>(compressed_in, 0)) {}\n     };\n \n     std::vector<std::unique_ptr<TemporaryFileStream>> temporary_inputs;\ndiff --git a/dbms/src/DataStreams/MergingAggregatedBlockInputStream.cpp b/dbms/src/DataStreams/MergingAggregatedBlockInputStream.cpp\nindex 63b42c319805..5586033482d8 100644\n--- a/dbms/src/DataStreams/MergingAggregatedBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/MergingAggregatedBlockInputStream.cpp\n@@ -6,6 +6,11 @@\n namespace DB\n {\n \n+Block MergingAggregatedBlockInputStream::getHeader() const\n+{\n+    return aggregator.getHeader(final);\n+}\n+\n \n Block MergingAggregatedBlockInputStream::readImpl()\n {\ndiff --git a/dbms/src/DataStreams/MergingAggregatedBlockInputStream.h b/dbms/src/DataStreams/MergingAggregatedBlockInputStream.h\nindex f133524d0f15..b299aff0d1fc 100644\n--- a/dbms/src/DataStreams/MergingAggregatedBlockInputStream.h\n+++ b/dbms/src/DataStreams/MergingAggregatedBlockInputStream.h\n@@ -22,12 +22,7 @@ class MergingAggregatedBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"MergingAggregated\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"MergingAggregated(\" << children.back()->getID() << \", \" << aggregator.getID() << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override;\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.cpp b/dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.cpp\nindex 10273caff24a..56e816cb05a7 100644\n--- a/dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.cpp\n@@ -90,14 +90,9 @@ MergingAggregatedMemoryEfficientBlockInputStream::MergingAggregatedMemoryEfficie\n }\n \n \n-String MergingAggregatedMemoryEfficientBlockInputStream::getID() const\n+Block MergingAggregatedMemoryEfficientBlockInputStream::getHeader() const\n {\n-    std::stringstream res;\n-    res << \"MergingAggregatedMemoryEfficient(\" << aggregator.getID();\n-    for (size_t i = 0, size = children.size(); i < size; ++i)\n-        res << \", \" << children.back()->getID();\n-    res << \")\";\n-    return res.str();\n+    return aggregator.getHeader(final);\n }\n \n \ndiff --git a/dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.h b/dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.h\nindex f1300ee12af9..f7b978e9c66c 100644\n--- a/dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.h\n+++ b/dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.h\n@@ -67,8 +67,6 @@ class MergingAggregatedMemoryEfficientBlockInputStream final : public IProfiling\n \n     String getName() const override { return \"MergingAggregatedMemoryEfficient\"; }\n \n-    String getID() const override;\n-\n     /// Sends the request (initiates calculations) earlier than `read`.\n     void readPrefix() override;\n \n@@ -80,6 +78,8 @@ class MergingAggregatedMemoryEfficientBlockInputStream final : public IProfiling\n       */\n     void cancel() override;\n \n+    Block getHeader() const override;\n+\n protected:\n     Block readImpl() override;\n \ndiff --git a/dbms/src/DataStreams/MergingSortedBlockInputStream.cpp b/dbms/src/DataStreams/MergingSortedBlockInputStream.cpp\nindex 8ccabeb092b0..aee5b34899fb 100644\n--- a/dbms/src/DataStreams/MergingSortedBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/MergingSortedBlockInputStream.cpp\n@@ -24,28 +24,6 @@ MergingSortedBlockInputStream::MergingSortedBlockInputStream(\n     children.insert(children.end(), inputs_.begin(), inputs_.end());\n }\n \n-String MergingSortedBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"MergingSorted(\";\n-\n-    Strings children_ids(children.size());\n-    for (size_t i = 0; i < children.size(); ++i)\n-        children_ids[i] = children[i]->getID();\n-\n-    /// The order does not matter.\n-    std::sort(children_ids.begin(), children_ids.end());\n-\n-    for (size_t i = 0; i < children_ids.size(); ++i)\n-        res << (i == 0 ? \"\" : \", \") << children_ids[i];\n-\n-    for (size_t i = 0; i < description.size(); ++i)\n-        res << \", \" << description[i].getID();\n-\n-    res << \")\";\n-    return res.str();\n-}\n-\n void MergingSortedBlockInputStream::init(Block & header, MutableColumns & merged_columns)\n {\n     /// Read the first blocks, initialize the queue.\ndiff --git a/dbms/src/DataStreams/MergingSortedBlockInputStream.h b/dbms/src/DataStreams/MergingSortedBlockInputStream.h\nindex 82eff68bae9a..a8e0c4bf4880 100644\n--- a/dbms/src/DataStreams/MergingSortedBlockInputStream.h\n+++ b/dbms/src/DataStreams/MergingSortedBlockInputStream.h\n@@ -70,12 +70,12 @@ class MergingSortedBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"MergingSorted\"; }\n \n-    String getID() const override;\n-\n     bool isGroupedOutput() const override { return true; }\n     bool isSortedOutput() const override { return true; }\n     const SortDescription & getSortDescription() const override { return description; }\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n protected:\n     struct RowRef\n     {\ndiff --git a/dbms/src/DataStreams/NativeBlockInputStream.cpp b/dbms/src/DataStreams/NativeBlockInputStream.cpp\nindex 0571bc08359b..1ec7c9020653 100644\n--- a/dbms/src/DataStreams/NativeBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/NativeBlockInputStream.cpp\n@@ -19,23 +19,40 @@ namespace ErrorCodes\n     extern const int INCORRECT_INDEX;\n     extern const int LOGICAL_ERROR;\n     extern const int CANNOT_READ_ALL_DATA;\n+    extern const int NOT_IMPLEMENTED;\n }\n \n-NativeBlockInputStream::NativeBlockInputStream(\n-    ReadBuffer & istr_, UInt64 server_revision_,\n-    bool use_index_,\n+\n+NativeBlockInputStream::NativeBlockInputStream(ReadBuffer & istr_, UInt64 server_revision_)\n+    : istr(istr_), server_revision(server_revision_)\n+{\n+}\n+\n+NativeBlockInputStream::NativeBlockInputStream(ReadBuffer & istr_, const Block & header_, UInt64 server_revision_)\n+    : istr(istr_), header(header_), server_revision(server_revision_)\n+{\n+}\n+\n+NativeBlockInputStream::NativeBlockInputStream(ReadBuffer & istr_, UInt64 server_revision_,\n     IndexForNativeFormat::Blocks::const_iterator index_block_it_,\n     IndexForNativeFormat::Blocks::const_iterator index_block_end_)\n     : istr(istr_), server_revision(server_revision_),\n-    use_index(use_index_), index_block_it(index_block_it_), index_block_end(index_block_end_)\n+    use_index(true), index_block_it(index_block_it_), index_block_end(index_block_end_)\n {\n-    if (use_index)\n-    {\n-        istr_concrete = typeid_cast<CompressedReadBufferFromFile *>(&istr);\n-        if (!istr_concrete)\n-            throw Exception(\"When need to use index for NativeBlockInputStream, istr must be CompressedReadBufferFromFile.\", ErrorCodes::LOGICAL_ERROR);\n+    istr_concrete = typeid_cast<CompressedReadBufferFromFile *>(&istr);\n+    if (!istr_concrete)\n+        throw Exception(\"When need to use index for NativeBlockInputStream, istr must be CompressedReadBufferFromFile.\", ErrorCodes::LOGICAL_ERROR);\n \n-        index_column_it = index_block_it->columns.begin();\n+    if (index_block_it == index_block_end)\n+        return;\n+\n+    index_column_it = index_block_it->columns.begin();\n+\n+    /// Initialize header from the index.\n+    for (const auto & column : index_block_it->columns)\n+    {\n+        auto type = DataTypeFactory::instance().get(column.type);\n+        header.insert({ type->createColumn(), type, column.name });\n     }\n }\n \n@@ -50,6 +67,12 @@ void NativeBlockInputStream::readData(const IDataType & type, IColumn & column,\n }\n \n \n+Block NativeBlockInputStream::getHeader() const\n+{\n+    return header;\n+}\n+\n+\n Block NativeBlockInputStream::readImpl()\n {\n     Block res;\ndiff --git a/dbms/src/DataStreams/NativeBlockInputStream.h b/dbms/src/DataStreams/NativeBlockInputStream.h\nindex b1df20a782a8..14ce18347e3a 100644\n--- a/dbms/src/DataStreams/NativeBlockInputStream.h\n+++ b/dbms/src/DataStreams/NativeBlockInputStream.h\n@@ -60,35 +60,33 @@ struct IndexForNativeFormat\n class NativeBlockInputStream : public IProfilingBlockInputStream\n {\n public:\n-    /** If a non-zero server_revision is specified, additional block information may be expected and read.\n-      *\n-      * `index` is not required parameter. If set, only parts of columns specified in the index will be read.\n-      */\n-    NativeBlockInputStream(\n-        ReadBuffer & istr_, UInt64 server_revision_ = 0,\n-        bool use_index_ = false,\n-        IndexForNativeFormat::Blocks::const_iterator index_block_it_ = IndexForNativeFormat::Blocks::const_iterator{},\n-        IndexForNativeFormat::Blocks::const_iterator index_block_end_ = IndexForNativeFormat::Blocks::const_iterator{});\n+    /// If a non-zero server_revision is specified, additional block information may be expected and read.\n+    NativeBlockInputStream(ReadBuffer & istr_, UInt64 server_revision_);\n \n-    String getName() const override { return \"Native\"; }\n+    /// For cases when data structure (header) is known in advance.\n+    /// NOTE We may use header for data validation and/or type conversions. It is not implemented.\n+    NativeBlockInputStream(ReadBuffer & istr_, const Block & header_, UInt64 server_revision_);\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << this;\n-        return res.str();\n-    }\n+    /// For cases when we have an index. It allows to skip columns. Only columns specified in the index will be read.\n+    NativeBlockInputStream(ReadBuffer & istr_, UInt64 server_revision_,\n+        IndexForNativeFormat::Blocks::const_iterator index_block_it_,\n+        IndexForNativeFormat::Blocks::const_iterator index_block_end_);\n+\n+    String getName() const override { return \"Native\"; }\n \n     static void readData(const IDataType & type, IColumn & column, ReadBuffer & istr, size_t rows, double avg_value_size_hint);\n \n+    Block getHeader() const override;\n+\n protected:\n     Block readImpl() override;\n \n private:\n     ReadBuffer & istr;\n+    Block header;\n     UInt64 server_revision;\n \n-    bool use_index;\n+    bool use_index = false;\n     IndexForNativeFormat::Blocks::const_iterator index_block_it;\n     IndexForNativeFormat::Blocks::const_iterator index_block_end;\n     IndexOfBlockForNativeFormat::Columns::const_iterator index_column_it;\ndiff --git a/dbms/src/DataStreams/NullAndDoCopyBlockInputStream.h b/dbms/src/DataStreams/NullAndDoCopyBlockInputStream.h\nindex cd7823f236d2..d03996be53fa 100644\n--- a/dbms/src/DataStreams/NullAndDoCopyBlockInputStream.h\n+++ b/dbms/src/DataStreams/NullAndDoCopyBlockInputStream.h\n@@ -28,12 +28,7 @@ class NullAndDoCopyBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"NullAndDoCopy\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"copy from \" << input->getID();\n-        return res.str();\n-    }\n+    Block getHeader() const override { return {}; }\n \n protected:\n     Block readImpl() override\ndiff --git a/dbms/src/DataStreams/NullBlockInputStream.h b/dbms/src/DataStreams/NullBlockInputStream.h\nindex fad7eb6629bb..9272dddd15a3 100644\n--- a/dbms/src/DataStreams/NullBlockInputStream.h\n+++ b/dbms/src/DataStreams/NullBlockInputStream.h\n@@ -6,14 +6,19 @@\n namespace DB\n {\n \n-/** Empty stream of blocks.\n+/** Empty stream of blocks of specified structure.\n   */\n class NullBlockInputStream : public IBlockInputStream\n {\n public:\n-    Block read() override { return Block(); }\n+    NullBlockInputStream(const Block & header) : header(header) {}\n+\n+    Block read() override { return {}; }\n+    Block getHeader() const override { return header; }\n     String getName() const override { return \"Null\"; }\n \n+private:\n+    Block header;\n };\n \n }\ndiff --git a/dbms/src/DataStreams/NullableAdapterBlockInputStream.cpp b/dbms/src/DataStreams/NullableAdapterBlockInputStream.cpp\nindex 50285284f213..60fe4013595c 100644\n--- a/dbms/src/DataStreams/NullableAdapterBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/NullableAdapterBlockInputStream.cpp\n@@ -17,18 +17,12 @@ namespace ErrorCodes\n NullableAdapterBlockInputStream::NullableAdapterBlockInputStream(\n     const BlockInputStreamPtr & input,\n     const Block & in_sample_, const Block & out_sample_)\n+    : header(out_sample_)\n {\n     buildActions(in_sample_, out_sample_);\n     children.push_back(input);\n }\n \n-String NullableAdapterBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"NullableAdapterBlockInputStream(\" << children.back()->getID() << \")\";\n-    return res.str();\n-}\n-\n Block NullableAdapterBlockInputStream::readImpl()\n {\n     Block block = children.back()->read();\ndiff --git a/dbms/src/DataStreams/NullableAdapterBlockInputStream.h b/dbms/src/DataStreams/NullableAdapterBlockInputStream.h\nindex c8fd4c112925..47e064ecdf2a 100644\n--- a/dbms/src/DataStreams/NullableAdapterBlockInputStream.h\n+++ b/dbms/src/DataStreams/NullableAdapterBlockInputStream.h\n@@ -18,12 +18,11 @@ namespace DB\n class NullableAdapterBlockInputStream : public IProfilingBlockInputStream\n {\n public:\n-    NullableAdapterBlockInputStream(const BlockInputStreamPtr & input, const Block & in_sample_,\n-        const Block & out_sample_);\n+    NullableAdapterBlockInputStream(const BlockInputStreamPtr & input, const Block & in_sample_, const Block & out_sample_);\n \n     String getName() const override { return \"NullableAdapterBlockInputStream\"; }\n \n-    String getID() const override;\n+    Block getHeader() const override { return header; }\n \n protected:\n     Block readImpl() override;\n@@ -52,6 +51,7 @@ class NullableAdapterBlockInputStream : public IProfilingBlockInputStream\n     void buildActions(const Block & in_sample, const Block & out_sample);\n \n private:\n+    Block header;\n     Actions actions;\n     std::vector<std::optional<String>> rename;\n     bool must_transform = false;\ndiff --git a/dbms/src/DataStreams/OneBlockInputStream.h b/dbms/src/DataStreams/OneBlockInputStream.h\nindex 1a7bbe7efb8a..22480089f865 100644\n--- a/dbms/src/DataStreams/OneBlockInputStream.h\n+++ b/dbms/src/DataStreams/OneBlockInputStream.h\n@@ -16,6 +16,14 @@ class OneBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"One\"; }\n \n+    Block getHeader() const override\n+    {\n+        Block res;\n+        for (const auto & elem : block)\n+            res.insert({ elem.column->cloneEmpty(), elem.type, elem.name });\n+        return res;\n+    }\n+\n protected:\n     Block readImpl() override\n     {\ndiff --git a/dbms/src/DataStreams/OwningBlockInputStream.h b/dbms/src/DataStreams/OwningBlockInputStream.h\nindex 1c1d1acf3bc5..5bed4a9f9c32 100644\n--- a/dbms/src/DataStreams/OwningBlockInputStream.h\n+++ b/dbms/src/DataStreams/OwningBlockInputStream.h\n@@ -20,13 +20,13 @@ class OwningBlockInputStream : public IProfilingBlockInputStream\n         children.push_back(stream);\n     }\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n private:\n     Block readImpl() override { return stream->read(); }\n \n     String getName() const override { return \"Owning\"; }\n \n-    String getID() const override {  return \"Owning(\" + stream->getID() + \")\"; }\n-\n protected:\n     BlockInputStreamPtr stream;\n     std::unique_ptr<OwnType> own;\ndiff --git a/dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp b/dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp\nindex 92bfe5e1f9ec..c29481671ddf 100644\n--- a/dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp\n@@ -29,23 +29,9 @@ ParallelAggregatingBlockInputStream::ParallelAggregatingBlockInputStream(\n }\n \n \n-String ParallelAggregatingBlockInputStream::getID() const\n+Block ParallelAggregatingBlockInputStream::getHeader() const\n {\n-    std::stringstream res;\n-    res << \"ParallelAggregating(\";\n-\n-    Strings children_ids(children.size());\n-    for (size_t i = 0; i < children.size(); ++i)\n-        children_ids[i] = children[i]->getID();\n-\n-    /// Order does not matter.\n-    std::sort(children_ids.begin(), children_ids.end());\n-\n-    for (size_t i = 0; i < children_ids.size(); ++i)\n-        res << (i == 0 ? \"\" : \", \") << children_ids[i];\n-\n-    res << \", \" << aggregator.getID() << \")\";\n-    return res.str();\n+    return aggregator.getHeader(final);\n }\n \n \n@@ -122,8 +108,7 @@ void ParallelAggregatingBlockInputStream::Handler::onBlock(Block & block, size_t\n {\n     parent.aggregator.executeOnBlock(block, *parent.many_data[thread_num],\n         parent.threads_data[thread_num].key_columns, parent.threads_data[thread_num].aggregate_columns,\n-        parent.threads_data[thread_num].key_sizes, parent.threads_data[thread_num].key,\n-        parent.no_more_keys);\n+        parent.threads_data[thread_num].key, parent.no_more_keys);\n \n     parent.threads_data[thread_num].src_rows += block.rows();\n     parent.threads_data[thread_num].src_bytes += block.bytes();\ndiff --git a/dbms/src/DataStreams/ParallelAggregatingBlockInputStream.h b/dbms/src/DataStreams/ParallelAggregatingBlockInputStream.h\nindex 71a13e94ac48..a0dbb8a948b3 100644\n--- a/dbms/src/DataStreams/ParallelAggregatingBlockInputStream.h\n+++ b/dbms/src/DataStreams/ParallelAggregatingBlockInputStream.h\n@@ -27,10 +27,10 @@ class ParallelAggregatingBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"ParallelAggregating\"; }\n \n-    String getID() const override;\n-\n     void cancel() override;\n \n+    Block getHeader() const override;\n+\n protected:\n     /// Do nothing that preparation to execution of the query be done in parallel, in ParallelInputsProcessor.\n     void readPrefix() override\n@@ -83,14 +83,12 @@ class ParallelAggregatingBlockInputStream : public IProfilingBlockInputStream\n         StringRefs key;\n         ColumnRawPtrs key_columns;\n         Aggregator::AggregateColumns aggregate_columns;\n-        Sizes key_sizes;\n \n         ThreadData(size_t keys_size, size_t aggregates_size)\n         {\n             key.resize(keys_size);\n             key_columns.resize(keys_size);\n             aggregate_columns.resize(aggregates_size);\n-            key_sizes.resize(keys_size);\n         }\n     };\n \ndiff --git a/dbms/src/DataStreams/PartialSortingBlockInputStream.h b/dbms/src/DataStreams/PartialSortingBlockInputStream.h\nindex f46fa8e5ca5f..5b5001ce313b 100644\n--- a/dbms/src/DataStreams/PartialSortingBlockInputStream.h\n+++ b/dbms/src/DataStreams/PartialSortingBlockInputStream.h\n@@ -23,22 +23,12 @@ class PartialSortingBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"PartialSorting\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"PartialSorting(\" << children.back()->getID();\n-\n-        for (size_t i = 0; i < description.size(); ++i)\n-            res << \", \" << description[i].getID();\n-\n-        res << \")\";\n-        return res.str();\n-    }\n-\n     bool isGroupedOutput() const override { return true; }\n     bool isSortedOutput() const override { return true; }\n     const SortDescription & getSortDescription() const override { return description; }\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n protected:\n     Block readImpl() override;\n \ndiff --git a/dbms/src/DataStreams/RemoteBlockInputStream.cpp b/dbms/src/DataStreams/RemoteBlockInputStream.cpp\nindex 31577f278460..311cda1727b9 100644\n--- a/dbms/src/DataStreams/RemoteBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/RemoteBlockInputStream.cpp\n@@ -2,6 +2,7 @@\n #include <DataStreams/OneBlockInputStream.h>\n #include <Common/NetException.h>\n #include <Interpreters/Context.h>\n+#include <Interpreters/castColumn.h>\n #include <Storages/IStorage.h>\n \n \n@@ -17,9 +18,9 @@ namespace ErrorCodes\n \n RemoteBlockInputStream::RemoteBlockInputStream(\n         Connection & connection,\n-        const String & query_, const Context & context_, const Settings * settings,\n+        const String & query_, const Block & header_, const Context & context_, const Settings * settings,\n         const ThrottlerPtr & throttler, const Tables & external_tables_, QueryProcessingStage::Enum stage_)\n-    : query(query_), context(context_), external_tables(external_tables_), stage(stage_)\n+    : header(header_), query(query_), context(context_), external_tables(external_tables_), stage(stage_)\n {\n     if (settings)\n         context.setSettings(*settings);\n@@ -32,9 +33,9 @@ RemoteBlockInputStream::RemoteBlockInputStream(\n \n RemoteBlockInputStream::RemoteBlockInputStream(\n         std::vector<IConnectionPool::Entry> && connections,\n-        const String & query_, const Context & context_, const Settings * settings,\n+        const String & query_, const Block & header_, const Context & context_, const Settings * settings,\n         const ThrottlerPtr & throttler, const Tables & external_tables_, QueryProcessingStage::Enum stage_)\n-    : query(query_), context(context_), external_tables(external_tables_), stage(stage_)\n+    : header(header_), query(query_), context(context_), external_tables(external_tables_), stage(stage_)\n {\n     if (settings)\n         context.setSettings(*settings);\n@@ -48,9 +49,9 @@ RemoteBlockInputStream::RemoteBlockInputStream(\n \n RemoteBlockInputStream::RemoteBlockInputStream(\n         const ConnectionPoolWithFailoverPtr & pool,\n-        const String & query_, const Context & context_, const Settings * settings,\n+        const String & query_, const Block & header_, const Context & context_, const Settings * settings,\n         const ThrottlerPtr & throttler, const Tables & external_tables_, QueryProcessingStage::Enum stage_)\n-    : query(query_), context(context_), external_tables(external_tables_), stage(stage_)\n+    : header(header_), query(query_), context(context_), external_tables(external_tables_), stage(stage_)\n {\n     if (settings)\n         context.setSettings(*settings);\n@@ -148,6 +149,25 @@ void RemoteBlockInputStream::sendExternalTables()\n     multiplexed_connections->sendExternalTablesData(external_tables_data);\n }\n \n+\n+/** If we receive a block with slightly different column types, or with excessive columns,\n+  *  we will adapt it to expected structure.\n+  */\n+static Block adaptBlockStructure(const Block & block, const Block & header, const Context & context)\n+{\n+    /// Special case when reader doesn't care about result structure. Deprecated and used only in Benchmark, PerformanceTest.\n+    if (!header)\n+        return block;\n+\n+    Block res;\n+    res.info = block.info;\n+\n+    for (const auto & elem : header)\n+        res.insert({ castColumn(block.getByName(elem.name), elem.type, context), elem.type, elem.name });\n+    return res;\n+}\n+\n+\n Block RemoteBlockInputStream::readImpl()\n {\n     if (!sent_query)\n@@ -170,7 +190,7 @@ Block RemoteBlockInputStream::readImpl()\n             case Protocol::Server::Data:\n                 /// If the block is not empty and is not a header block\n                 if (packet.block && (packet.block.rows() > 0))\n-                    return packet.block;\n+                    return adaptBlockStructure(packet.block, header, context);\n                 break;  /// If the block is empty - we will receive other packets before EndOfStream.\n \n             case Protocol::Server::Exception:\ndiff --git a/dbms/src/DataStreams/RemoteBlockInputStream.h b/dbms/src/DataStreams/RemoteBlockInputStream.h\nindex 2ee6aa2c6a50..8c3cff4f494f 100644\n--- a/dbms/src/DataStreams/RemoteBlockInputStream.h\n+++ b/dbms/src/DataStreams/RemoteBlockInputStream.h\n@@ -24,7 +24,7 @@ class RemoteBlockInputStream : public IProfilingBlockInputStream\n     /// If `settings` is nullptr, settings will be taken from context.\n     RemoteBlockInputStream(\n             Connection & connection,\n-            const String & query_, const Context & context_, const Settings * settings = nullptr,\n+            const String & query_, const Block & header_, const Context & context_, const Settings * settings = nullptr,\n             const ThrottlerPtr & throttler = nullptr, const Tables & external_tables_ = Tables(),\n             QueryProcessingStage::Enum stage_ = QueryProcessingStage::Complete);\n \n@@ -32,7 +32,7 @@ class RemoteBlockInputStream : public IProfilingBlockInputStream\n     /// If `settings` is nullptr, settings will be taken from context.\n     RemoteBlockInputStream(\n             std::vector<IConnectionPool::Entry> && connections,\n-            const String & query_, const Context & context_, const Settings * settings = nullptr,\n+            const String & query_, const Block & header_, const Context & context_, const Settings * settings = nullptr,\n             const ThrottlerPtr & throttler = nullptr, const Tables & external_tables_ = Tables(),\n             QueryProcessingStage::Enum stage_ = QueryProcessingStage::Complete);\n \n@@ -40,7 +40,7 @@ class RemoteBlockInputStream : public IProfilingBlockInputStream\n     /// If `settings` is nullptr, settings will be taken from context.\n     RemoteBlockInputStream(\n             const ConnectionPoolWithFailoverPtr & pool,\n-            const String & query_, const Context & context_, const Settings * settings = nullptr,\n+            const String & query_, const Block & header_, const Context & context_, const Settings * settings = nullptr,\n             const ThrottlerPtr & throttler = nullptr, const Tables & external_tables_ = Tables(),\n             QueryProcessingStage::Enum stage_ = QueryProcessingStage::Complete);\n \n@@ -66,18 +66,13 @@ class RemoteBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Remote\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << this;\n-        return res.str();\n-    }\n-\n     BlockExtraInfo getBlockExtraInfo() const override\n     {\n         return multiplexed_connections->getBlockExtraInfo();\n     }\n \n+    Block getHeader() const override { return header; }\n+\n protected:\n     /// Send all temporary tables to remote servers\n     void sendExternalTables();\n@@ -95,10 +90,14 @@ class RemoteBlockInputStream : public IProfilingBlockInputStream\n private:\n     void sendQuery();\n \n+    Block receiveBlock();\n+\n     /// If wasn't sent yet, send request to cancell all connections to replicas\n     void tryCancel(const char * reason);\n \n private:\n+    Block header;\n+\n     std::function<std::unique_ptr<MultiplexedConnections>()> create_multiplexed_connections;\n \n     std::unique_ptr<MultiplexedConnections> multiplexed_connections;\ndiff --git a/dbms/src/DataStreams/RemoveColumnsBlockInputStream.h b/dbms/src/DataStreams/RemoveColumnsBlockInputStream.h\nindex c8888440e282..a8b549622093 100644\n--- a/dbms/src/DataStreams/RemoveColumnsBlockInputStream.h\n+++ b/dbms/src/DataStreams/RemoveColumnsBlockInputStream.h\n@@ -22,16 +22,15 @@ class RemoveColumnsBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"RemoveColumns\"; }\n \n-    String getID() const override\n+    Block getHeader() const override\n     {\n-        std::stringstream res;\n-        res << \"RemoveColumns(\" << children.back()->getID();\n+        Block res = children.back()->getHeader();\n \n         for (const auto & it : columns_to_remove)\n-            res << \", \" << it;\n+            if (res.has(it))\n+                res.erase(it);\n \n-        res << \")\";\n-        return res.str();\n+        return res;\n     }\n \n protected:\ndiff --git a/dbms/src/DataStreams/ReplacingSortedBlockInputStream.h b/dbms/src/DataStreams/ReplacingSortedBlockInputStream.h\nindex 0e7fdadc25ac..0ab6b1858334 100644\n--- a/dbms/src/DataStreams/ReplacingSortedBlockInputStream.h\n+++ b/dbms/src/DataStreams/ReplacingSortedBlockInputStream.h\n@@ -24,23 +24,6 @@ class ReplacingSortedBlockInputStream : public MergingSortedBlockInputStream\n \n     String getName() const override { return \"ReplacingSorted\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"ReplacingSorted(inputs\";\n-\n-        for (size_t i = 0; i < children.size(); ++i)\n-            res << \", \" << children[i]->getID();\n-\n-        res << \", description\";\n-\n-        for (size_t i = 0; i < description.size(); ++i)\n-            res << \", \" << description[i].getID();\n-\n-        res << \", version_column, \" << version_column << \")\";\n-        return res.str();\n-    }\n-\n protected:\n     /// Can return 1 more records than max_block_size.\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/SquashingBlockInputStream.h b/dbms/src/DataStreams/SquashingBlockInputStream.h\nindex 3da819d21677..0f9a01d65e8c 100644\n--- a/dbms/src/DataStreams/SquashingBlockInputStream.h\n+++ b/dbms/src/DataStreams/SquashingBlockInputStream.h\n@@ -16,12 +16,7 @@ class SquashingBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Squashing\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"Squashing(\" << children.at(0)->getID() << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/SummingSortedBlockInputStream.cpp b/dbms/src/DataStreams/SummingSortedBlockInputStream.cpp\nindex 42dffd5babf8..1102258d3482 100644\n--- a/dbms/src/DataStreams/SummingSortedBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/SummingSortedBlockInputStream.cpp\n@@ -23,24 +23,6 @@ namespace ErrorCodes\n }\n \n \n-String SummingSortedBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"SummingSorted(inputs\";\n-\n-    for (size_t i = 0; i < children.size(); ++i)\n-        res << \", \" << children[i]->getID();\n-\n-    res << \", description\";\n-\n-    for (size_t i = 0; i < description.size(); ++i)\n-        res << \", \" << description[i].getID();\n-\n-    res << \")\";\n-    return res.str();\n-}\n-\n-\n void SummingSortedBlockInputStream::insertCurrentRowIfNeeded(MutableColumns & merged_columns, bool force_insertion)\n {\n     for (auto & desc : columns_to_aggregate)\ndiff --git a/dbms/src/DataStreams/SummingSortedBlockInputStream.h b/dbms/src/DataStreams/SummingSortedBlockInputStream.h\nindex 6a81db02ea4d..62df3863fc66 100644\n--- a/dbms/src/DataStreams/SummingSortedBlockInputStream.h\n+++ b/dbms/src/DataStreams/SummingSortedBlockInputStream.h\n@@ -35,8 +35,6 @@ class SummingSortedBlockInputStream : public MergingSortedBlockInputStream\n \n     String getName() const override { return \"SummingSorted\"; }\n \n-    String getID() const override;\n-\n protected:\n     /// Can return 1 more records than max_block_size.\n     Block readImpl() override;\ndiff --git a/dbms/src/DataStreams/TotalsHavingBlockInputStream.cpp b/dbms/src/DataStreams/TotalsHavingBlockInputStream.cpp\nindex 4692dc6df57b..b204afc2944d 100644\n--- a/dbms/src/DataStreams/TotalsHavingBlockInputStream.cpp\n+++ b/dbms/src/DataStreams/TotalsHavingBlockInputStream.cpp\n@@ -1,6 +1,7 @@\n #include <DataStreams/TotalsHavingBlockInputStream.h>\n #include <Interpreters/ExpressionActions.h>\n #include <Interpreters/AggregateDescription.h>\n+#include <DataTypes/DataTypeAggregateFunction.h>\n #include <Columns/ColumnAggregateFunction.h>\n #include <Columns/ColumnsNumber.h>\n #include <Columns/FilterDescription.h>\n@@ -29,26 +30,18 @@ TotalsHavingBlockInputStream::TotalsHavingBlockInputStream(\n }\n \n \n-String TotalsHavingBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"TotalsHavingBlockInputStream(\" << children.back()->getID()\n-        << \",\" << filter_column_name << \")\";\n-    return res.str();\n-}\n-\n-\n static void finalize(Block & block)\n {\n     for (size_t i = 0; i < block.columns(); ++i)\n     {\n         ColumnWithTypeAndName & current = block.safeGetByPosition(i);\n-        const ColumnAggregateFunction * unfinalized_column = typeid_cast<const ColumnAggregateFunction *>(current.column.get());\n+        const DataTypeAggregateFunction * unfinalized_type = typeid_cast<const DataTypeAggregateFunction *>(current.type.get());\n \n-        if (unfinalized_column)\n+        if (unfinalized_type)\n         {\n-            current.type = unfinalized_column->getAggregateFunction()->getReturnType();\n-            current.column = unfinalized_column->convertToValues();\n+            current.type = unfinalized_type->getReturnType();\n+            if (current.column)\n+                current.column = typeid_cast<const ColumnAggregateFunction &>(*current.column).convertToValues();\n         }\n     }\n }\n@@ -70,7 +63,7 @@ const Block & TotalsHavingBlockInputStream::getTotals()\n                 addToTotals(overflow_aggregates, nullptr);\n         }\n \n-        totals = header.cloneWithColumns(std::move(current_totals));\n+        totals = children.at(0)->getHeader().cloneWithColumns(std::move(current_totals));\n         finalize(totals);\n     }\n \n@@ -81,6 +74,16 @@ const Block & TotalsHavingBlockInputStream::getTotals()\n }\n \n \n+Block TotalsHavingBlockInputStream::getHeader() const\n+{\n+    Block res = children.at(0)->getHeader();\n+    finalize(res);\n+    if (expression)\n+        expression->execute(res);\n+    return res;\n+}\n+\n+\n Block TotalsHavingBlockInputStream::readImpl()\n {\n     Block finalized;\n@@ -90,9 +93,6 @@ Block TotalsHavingBlockInputStream::readImpl()\n     {\n         block = children[0]->read();\n \n-        if (!header)\n-            header = block.cloneEmpty();\n-\n         /// Block with values not included in `max_rows_to_group_by`. We'll postpone it.\n         if (overflow_row && block && block.info.is_overflows)\n         {\ndiff --git a/dbms/src/DataStreams/TotalsHavingBlockInputStream.h b/dbms/src/DataStreams/TotalsHavingBlockInputStream.h\nindex 1cc257983cb5..375854c5761a 100644\n--- a/dbms/src/DataStreams/TotalsHavingBlockInputStream.h\n+++ b/dbms/src/DataStreams/TotalsHavingBlockInputStream.h\n@@ -19,6 +19,7 @@ class TotalsHavingBlockInputStream : public IProfilingBlockInputStream\n     using ExpressionActionsPtr = std::shared_ptr<ExpressionActions>;\n \n public:\n+    /// expression may be nullptr\n     TotalsHavingBlockInputStream(\n         const BlockInputStreamPtr & input_,\n         bool overflow_row_, const ExpressionActionsPtr & expression_,\n@@ -26,10 +27,10 @@ class TotalsHavingBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"TotalsHaving\"; }\n \n-    String getID() const override;\n-\n     const Block & getTotals() override;\n \n+    Block getHeader() const override;\n+\n protected:\n     Block readImpl() override;\n \n@@ -42,8 +43,6 @@ class TotalsHavingBlockInputStream : public IProfilingBlockInputStream\n     size_t passed_keys = 0;\n     size_t total_keys = 0;\n \n-    Block header;\n-\n     /** Here are the values that did not pass max_rows_to_group_by.\n       * They are added or not added to the current_totals, depending on the totals_mode.\n       */\ndiff --git a/dbms/src/DataStreams/UnionBlockInputStream.h b/dbms/src/DataStreams/UnionBlockInputStream.h\nindex 60639002e9f2..176cb472a617 100644\n--- a/dbms/src/DataStreams/UnionBlockInputStream.h\n+++ b/dbms/src/DataStreams/UnionBlockInputStream.h\n@@ -86,26 +86,6 @@ class UnionBlockInputStream final : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Union\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"Union(\";\n-\n-        Strings children_ids(children.size());\n-        for (size_t i = 0; i < children.size(); ++i)\n-            children_ids[i] = children[i]->getID();\n-\n-        /// Order does not matter.\n-        std::sort(children_ids.begin(), children_ids.end());\n-\n-        for (size_t i = 0; i < children_ids.size(); ++i)\n-            res << (i == 0 ? \"\" : \", \") << children_ids[i];\n-\n-        res << \")\";\n-        return res.str();\n-    }\n-\n-\n     ~UnionBlockInputStream() override\n     {\n         try\n@@ -139,6 +119,8 @@ class UnionBlockInputStream final : public IProfilingBlockInputStream\n         return doGetBlockExtraInfo();\n     }\n \n+    Block getHeader() const override { return children.at(0)->getHeader(); }\n+\n protected:\n     void finalize()\n     {\ndiff --git a/dbms/src/DataStreams/VersionedCollapsingSortedBlockInputStream.h b/dbms/src/DataStreams/VersionedCollapsingSortedBlockInputStream.h\nindex ec75e218533b..1c299e78e81d 100644\n--- a/dbms/src/DataStreams/VersionedCollapsingSortedBlockInputStream.h\n+++ b/dbms/src/DataStreams/VersionedCollapsingSortedBlockInputStream.h\n@@ -185,24 +185,6 @@ class VersionedCollapsingSortedBlockInputStream : public MergingSortedBlockInput\n \n     String getName() const override { return \"VersionedCollapsingSorted\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"VersionedCollapsingSortedBlockInputStream(inputs\";\n-\n-        for (const auto & child : children)\n-            res << \", \" << child->getID();\n-\n-        res << \", description\";\n-\n-        for (const auto & descr : description)\n-            res << \", \" << descr.getID();\n-\n-        res << \", sign_column, \" << sign_column;\n-        res << \", version_column, \" << sign_column << \")\";\n-        return res.str();\n-    }\n-\n protected:\n     /// Can return 1 more records than max_block_size.\n     Block readImpl() override;\ndiff --git a/dbms/src/DataTypes/DataTypeEnum.h b/dbms/src/DataTypes/DataTypeEnum.h\nindex ea939c9f709e..a4cc36b1c922 100644\n--- a/dbms/src/DataTypes/DataTypeEnum.h\n+++ b/dbms/src/DataTypes/DataTypeEnum.h\n@@ -112,7 +112,7 @@ class DataTypeEnum final : public IDataTypeEnum\n     bool equals(const IDataType & rhs) const override;\n \n     bool textCanContainOnlyValidUTF8() const override;\n-    size_t getSizeOfValueInMemory() const override { return sizeof(Field); }\n+    size_t getSizeOfValueInMemory() const override { return sizeof(FieldType); }\n };\n \n \ndiff --git a/dbms/src/Dictionaries/ClickHouseDictionarySource.cpp b/dbms/src/Dictionaries/ClickHouseDictionarySource.cpp\nindex 039126b458fb..f487aac36446 100644\n--- a/dbms/src/Dictionaries/ClickHouseDictionarySource.cpp\n+++ b/dbms/src/Dictionaries/ClickHouseDictionarySource.cpp\n@@ -73,7 +73,7 @@ BlockInputStreamPtr ClickHouseDictionarySource::loadAll()\n       */\n     if (is_local)\n         return executeQuery(load_all_query, context, true).in;\n-    return std::make_shared<RemoteBlockInputStream>(pool, load_all_query, context);\n+    return std::make_shared<RemoteBlockInputStream>(pool, load_all_query, sample_block, context);\n }\n \n \n@@ -103,7 +103,7 @@ BlockInputStreamPtr ClickHouseDictionarySource::createStreamForSelectiveLoad(con\n {\n     if (is_local)\n         return executeQuery(query, context, true).in;\n-    return std::make_shared<RemoteBlockInputStream>(pool, query, context);\n+    return std::make_shared<RemoteBlockInputStream>(pool, query, sample_block, context);\n }\n \n }\ndiff --git a/dbms/src/Dictionaries/DictionaryBlockInputStreamBase.cpp b/dbms/src/Dictionaries/DictionaryBlockInputStreamBase.cpp\nindex 468d91a231d4..813504b084df 100644\n--- a/dbms/src/Dictionaries/DictionaryBlockInputStreamBase.cpp\n+++ b/dbms/src/Dictionaries/DictionaryBlockInputStreamBase.cpp\n@@ -8,13 +8,6 @@ DictionaryBlockInputStreamBase::DictionaryBlockInputStreamBase(size_t rows_count\n {\n }\n \n-String DictionaryBlockInputStreamBase::getID() const\n-{\n-    std::stringstream ss;\n-    ss << static_cast<const void*>(this);\n-    return ss.str();\n-}\n-\n Block DictionaryBlockInputStreamBase::readImpl()\n {\n     if (next_row == rows_count)\n@@ -26,4 +19,9 @@ Block DictionaryBlockInputStreamBase::readImpl()\n     return block;\n }\n \n+Block DictionaryBlockInputStreamBase::getHeader() const\n+{\n+    return getBlock(0, 0);\n+}\n+\n }\ndiff --git a/dbms/src/Dictionaries/DictionaryBlockInputStreamBase.h b/dbms/src/Dictionaries/DictionaryBlockInputStreamBase.h\nindex 6f34f73c957e..ea027026d3f7 100644\n--- a/dbms/src/Dictionaries/DictionaryBlockInputStreamBase.h\n+++ b/dbms/src/Dictionaries/DictionaryBlockInputStreamBase.h\n@@ -11,17 +11,16 @@ class DictionaryBlockInputStreamBase : public IProfilingBlockInputStream\n \n     DictionaryBlockInputStreamBase(size_t rows_count, size_t max_block_size);\n \n-    String getID() const override;\n-\n     virtual Block getBlock(size_t start, size_t length) const = 0;\n \n+    Block getHeader() const override;\n+\n private:\n     const size_t rows_count;\n     const size_t max_block_size;\n-    size_t next_row;\n+    size_t next_row = 0;\n \n     Block readImpl() override;\n-    void readPrefixImpl() override { next_row = 0; }\n };\n \n }\ndiff --git a/dbms/src/Dictionaries/ExecutableDictionarySource.cpp b/dbms/src/Dictionaries/ExecutableDictionarySource.cpp\nindex 58b7445eb380..35ac7b4cbf93 100644\n--- a/dbms/src/Dictionaries/ExecutableDictionarySource.cpp\n+++ b/dbms/src/Dictionaries/ExecutableDictionarySource.cpp\n@@ -101,6 +101,8 @@ class BlockInputStreamWithBackgroundThread final : public IProfilingBlockInputSt\n         }\n     }\n \n+    Block getHeader() const override { return stream->getHeader(); };\n+\n private:\n     Block readImpl() override { return stream->read(); }\n \n@@ -118,7 +120,6 @@ class BlockInputStreamWithBackgroundThread final : public IProfilingBlockInputSt\n     }\n \n     String getName() const override { return \"WithBackgroundThread\"; }\n-    String getID() const override { return \"WithBackgroundThread(\" + stream->getID() + \")\"; }\n \n     BlockInputStreamPtr stream;\n     std::unique_ptr<ShellCommand> command;\ndiff --git a/dbms/src/Dictionaries/MongoDBBlockInputStream.cpp b/dbms/src/Dictionaries/MongoDBBlockInputStream.cpp\nindex 9f13b8c345b6..b5f1d1f6f697 100644\n--- a/dbms/src/Dictionaries/MongoDBBlockInputStream.cpp\n+++ b/dbms/src/Dictionaries/MongoDBBlockInputStream.cpp\n@@ -38,14 +38,6 @@ MongoDBBlockInputStream::MongoDBBlockInputStream(\n MongoDBBlockInputStream::~MongoDBBlockInputStream() = default;\n \n \n-String MongoDBBlockInputStream::getID() const\n-{\n-    std::ostringstream stream;\n-    stream << cursor.get();\n-    return \"MongoDB(@\" + stream.str() + \")\";\n-}\n-\n-\n namespace\n {\n     using ValueType = ExternalResultDescription::ValueType;\ndiff --git a/dbms/src/Dictionaries/MongoDBBlockInputStream.h b/dbms/src/Dictionaries/MongoDBBlockInputStream.h\nindex 25ba14d91459..046e3429b714 100644\n--- a/dbms/src/Dictionaries/MongoDBBlockInputStream.h\n+++ b/dbms/src/Dictionaries/MongoDBBlockInputStream.h\n@@ -32,7 +32,7 @@ class MongoDBBlockInputStream final : public IProfilingBlockInputStream\n \n     String getName() const override { return \"MongoDB\"; }\n \n-    String getID() const override;\n+    Block getHeader() const override { return description.sample_block; };\n \n private:\n     Block readImpl() override;\ndiff --git a/dbms/src/Dictionaries/MySQLBlockInputStream.cpp b/dbms/src/Dictionaries/MySQLBlockInputStream.cpp\nindex f0c304343d2d..6e2275cd1059 100644\n--- a/dbms/src/Dictionaries/MySQLBlockInputStream.cpp\n+++ b/dbms/src/Dictionaries/MySQLBlockInputStream.cpp\n@@ -33,12 +33,6 @@ MySQLBlockInputStream::MySQLBlockInputStream(\n }\n \n \n-String MySQLBlockInputStream::getID() const\n-{\n-    return \"MySQL(\" + query.str() + \")\";\n-}\n-\n-\n namespace\n {\n     using ValueType = ExternalResultDescription::ValueType;\ndiff --git a/dbms/src/Dictionaries/MySQLBlockInputStream.h b/dbms/src/Dictionaries/MySQLBlockInputStream.h\nindex 1013507f11ef..6e72f4eb3cf0 100644\n--- a/dbms/src/Dictionaries/MySQLBlockInputStream.h\n+++ b/dbms/src/Dictionaries/MySQLBlockInputStream.h\n@@ -21,7 +21,7 @@ class MySQLBlockInputStream final : public IProfilingBlockInputStream\n \n     String getName() const override { return \"MySQL\"; }\n \n-    String getID() const override;\n+    Block getHeader() const override { return description.sample_block; };\n \n private:\n     Block readImpl() override;\ndiff --git a/dbms/src/Dictionaries/ODBCBlockInputStream.cpp b/dbms/src/Dictionaries/ODBCBlockInputStream.cpp\nindex 3f564d942b47..8b186f6791ee 100644\n--- a/dbms/src/Dictionaries/ODBCBlockInputStream.cpp\n+++ b/dbms/src/Dictionaries/ODBCBlockInputStream.cpp\n@@ -38,12 +38,6 @@ ODBCBlockInputStream::ODBCBlockInputStream(\n }\n \n \n-String ODBCBlockInputStream::getID() const\n-{\n-    return \"ODBC(\" + statement.toString() + \")\";\n-}\n-\n-\n namespace\n {\n     using ValueType = ExternalResultDescription::ValueType;\ndiff --git a/dbms/src/Dictionaries/ODBCBlockInputStream.h b/dbms/src/Dictionaries/ODBCBlockInputStream.h\nindex 558f5cb56731..b881beb9b1f9 100644\n--- a/dbms/src/Dictionaries/ODBCBlockInputStream.h\n+++ b/dbms/src/Dictionaries/ODBCBlockInputStream.h\n@@ -27,7 +27,7 @@ class ODBCBlockInputStream final : public IProfilingBlockInputStream\n \n     String getName() const override { return \"ODBC\"; }\n \n-    String getID() const override;\n+    Block getHeader() const override { return description.sample_block; };\n \n private:\n     Block readImpl() override;\ndiff --git a/dbms/src/Functions/FunctionsArray.cpp b/dbms/src/Functions/FunctionsArray.cpp\nindex 3db0e32e7948..27d5d3688e84 100644\n--- a/dbms/src/Functions/FunctionsArray.cpp\n+++ b/dbms/src/Functions/FunctionsArray.cpp\n@@ -23,6 +23,7 @@\n #include <DataTypes/getMostSubtype.h>\n #include <Core/TypeListNumber.h>\n \n+\n namespace DB\n {\n \n@@ -156,7 +157,7 @@ class NullMapBuilder\n         ++index;\n     }\n \n-    ColumnPtr getNullMapData() && { return std::move(sink_null_map_holder); }\n+    ColumnPtr getNullMapColumnPtr() && { return std::move(sink_null_map_holder); }\n \n private:\n     const UInt8 * src_null_map = nullptr;\n@@ -776,25 +777,25 @@ DataTypePtr FunctionArrayElement::getReturnTypeImpl(const DataTypes & arguments)\n void FunctionArrayElement::executeImpl(Block & block, const ColumnNumbers & arguments, size_t result)\n {\n     /// Check nullability.\n-    bool is_nullable_array = false;\n+    bool is_array_of_nullable = false;\n \n     const ColumnArray * col_array = nullptr;\n     const ColumnArray * col_const_array = nullptr;\n \n     col_array = checkAndGetColumn<ColumnArray>(block.getByPosition(arguments[0]).column.get());\n     if (col_array)\n-        is_nullable_array = col_array->getData().isColumnNullable();\n+        is_array_of_nullable = col_array->getData().isColumnNullable();\n     else\n     {\n         col_const_array = checkAndGetColumnConstData<ColumnArray>(block.getByPosition(arguments[0]).column.get());\n         if (col_const_array)\n-            is_nullable_array = col_const_array->getData().isColumnNullable();\n+            is_array_of_nullable = col_const_array->getData().isColumnNullable();\n         else\n             throw Exception(\"Illegal column \" + block.getByPosition(arguments[0]).column->getName()\n             + \" of first argument of function \" + getName(), ErrorCodes::ILLEGAL_COLUMN);\n     }\n \n-    if (!is_nullable_array)\n+    if (!is_array_of_nullable)\n     {\n         ArrayImpl::NullMapBuilder builder;\n         perform(block, arguments, result, builder);\n@@ -860,7 +861,7 @@ void FunctionArrayElement::executeImpl(Block & block, const ColumnNumbers & argu\n         /// Store the result.\n         const ColumnWithTypeAndName & source_col = source_block.getByPosition(2);\n         ColumnWithTypeAndName & dest_col = block.getByPosition(result);\n-        dest_col.column = ColumnNullable::create(source_col.column, std::move(builder).getNullMapData());\n+        dest_col.column = ColumnNullable::create(source_col.column, builder ? std::move(builder).getNullMapColumnPtr() : ColumnUInt8::create());\n     }\n }\n \ndiff --git a/dbms/src/Functions/FunctionsConversion.h b/dbms/src/Functions/FunctionsConversion.h\nindex 8f3edca53eed..00884ca0ffb4 100644\n--- a/dbms/src/Functions/FunctionsConversion.h\n+++ b/dbms/src/Functions/FunctionsConversion.h\n@@ -53,6 +53,13 @@ namespace ErrorCodes\n     extern const int CANNOT_PARSE_UUID;\n     extern const int TOO_LARGE_STRING_SIZE;\n     extern const int TOO_LESS_ARGUMENTS_FOR_FUNCTION;\n+    extern const int LOGICAL_ERROR;\n+    extern const int TYPE_MISMATCH;\n+    extern const int CANNOT_CONVERT_TYPE;\n+    extern const int ILLEGAL_COLUMN;\n+    extern const int NUMBER_OF_ARGUMENTS_DOESNT_MATCH;\n+    extern const int ILLEGAL_TYPE_OF_ARGUMENT;\n+    extern const int NOT_IMPLEMENTED;\n }\n \n \n@@ -508,9 +515,6 @@ struct ConvertImplGenericFromString\n         {\n             auto res = data_type_to.createColumn();\n \n-            if (!size)\n-                return;\n-\n             IColumn & column_to = *res;\n             column_to.reserve(size);\n \n@@ -1272,9 +1276,7 @@ class FunctionCast final : public IFunctionBase\n     static WrapperType createFixedStringWrapper(const DataTypePtr & from_type, const size_t N)\n     {\n         if (!from_type->isStringOrFixedString())\n-            throw Exception{\n-                \"CAST AS FixedString is only implemented for types String and FixedString\",\n-                ErrorCodes::NOT_IMPLEMENTED};\n+            throw Exception{\"CAST AS FixedString is only implemented for types String and FixedString\", ErrorCodes::NOT_IMPLEMENTED};\n \n         return [N] (Block & block, const ColumnNumbers & arguments, const size_t result)\n         {\n@@ -1309,9 +1311,7 @@ class FunctionCast final : public IFunctionBase\n \n         /// both from_type and to_type should be nullptr now is array types had same dimensions\n         if ((from_type == nullptr) != (to_type == nullptr))\n-            throw Exception{\n-                \"CAST AS Array can only be performed between same-dimensional array types or from String\",\n-                ErrorCodes::TYPE_MISMATCH};\n+            throw Exception{\"CAST AS Array can only be performed between same-dimensional array types or from String\", ErrorCodes::TYPE_MISMATCH};\n \n         /// Prepare nested type conversion\n         const auto nested_function = prepare(from_nested_type, to_nested_type.get());\n@@ -1337,9 +1337,7 @@ class FunctionCast final : public IFunctionBase\n                 block.getByPosition(result).column = ColumnArray::create(nested_block.getByPosition(1).column, col_array->getOffsetsPtr());\n             }\n             else\n-                throw Exception{\n-                    \"Illegal column \" + array_arg.column->getName() + \" for function CAST AS Array\",\n-                    ErrorCodes::LOGICAL_ERROR};\n+                throw Exception{\"Illegal column \" + array_arg.column->getName() + \" for function CAST AS Array\", ErrorCodes::LOGICAL_ERROR};\n         };\n     }\n \n@@ -1356,16 +1354,12 @@ class FunctionCast final : public IFunctionBase\n \n         const auto from_type = checkAndGetDataType<DataTypeTuple>(from_type_untyped.get());\n         if (!from_type)\n-            throw Exception{\n-                \"CAST AS Tuple can only be performed between tuple types or from String.\\nLeft type: \" + from_type_untyped->getName() +\n-                    \", right type: \" + to_type->getName(),\n-                ErrorCodes::TYPE_MISMATCH};\n+            throw Exception{\"CAST AS Tuple can only be performed between tuple types or from String.\\nLeft type: \" + from_type_untyped->getName() +\n+                \", right type: \" + to_type->getName(), ErrorCodes::TYPE_MISMATCH};\n \n         if (from_type->getElements().size() != to_type->getElements().size())\n-            throw Exception{\n-                \"CAST AS Tuple can only be performed between tuple types with the same number of elements or from String.\\n\"\n-                    \"Left type: \" + from_type->getName() + \", right type: \" + to_type->getName(),\n-                 ErrorCodes::TYPE_MISMATCH};\n+            throw Exception{\"CAST AS Tuple can only be performed between tuple types with the same number of elements or from String.\\n\"\n+                \"Left type: \" + from_type->getName() + \", right type: \" + to_type->getName(), ErrorCodes::TYPE_MISMATCH};\n \n         const auto & from_element_types = from_type->getElements();\n         const auto & to_element_types = to_type->getElements();\n@@ -1441,10 +1435,8 @@ class FunctionCast final : public IFunctionBase\n             };\n         }\n         else\n-            throw Exception{\n-                \"Conversion from \" + from_type->getName() + \" to \" + to_type->getName() +\n-                    \" is not supported\",\n-                ErrorCodes::CANNOT_CONVERT_TYPE};\n+            throw Exception{\"Conversion from \" + from_type->getName() + \" to \" + to_type->getName() +\n+                \" is not supported\", ErrorCodes::CANNOT_CONVERT_TYPE};\n     }\n \n     template <typename EnumTypeFrom, typename EnumTypeTo>\n@@ -1467,10 +1459,8 @@ class FunctionCast final : public IFunctionBase\n             const auto & old_value = name_value.second;\n             const auto & new_value = to_type->getValue(name_value.first);\n             if (old_value != new_value)\n-                throw Exception{\n-                    \"Enum conversion changes value for element '\" + name_value.first +\n-                        \"' from \" + toString(old_value) + \" to \" + toString(new_value),\n-                    ErrorCodes::CANNOT_CONVERT_TYPE};\n+                throw Exception{\"Enum conversion changes value for element '\" + name_value.first +\n+                    \"' from \" + toString(old_value) + \" to \" + toString(new_value), ErrorCodes::CANNOT_CONVERT_TYPE};\n         }\n     };\n \n@@ -1499,8 +1489,7 @@ class FunctionCast final : public IFunctionBase\n                 col_with_type_and_name.column = std::move(res);\n             }\n             else\n-                throw Exception{\n-                    \"Unexpected column \" + first_col->getName() + \" as first argument of function \" + function_name,\n+                throw Exception{\"Unexpected column \" + first_col->getName() + \" as first argument of function \" + function_name,\n                     ErrorCodes::LOGICAL_ERROR};\n         };\n     }\n@@ -1540,8 +1529,7 @@ class FunctionCast final : public IFunctionBase\n \n         /// Check that the requested conversion is allowed.\n         if (nullable_conversion.source_is_nullable && !nullable_conversion.result_is_nullable)\n-            throw Exception{\"Cannot convert data from a nullable type to a non-nullable type\",\n-                ErrorCodes::CANNOT_CONVERT_TYPE};\n+            throw Exception{\"Cannot convert data from a nullable type to a non-nullable type\", ErrorCodes::CANNOT_CONVERT_TYPE};\n \n         if (from_type->onlyNull())\n         {\n@@ -1671,9 +1659,7 @@ class FunctionCast final : public IFunctionBase\n         /// It's possible to use ConvertImplGenericFromString to convert from String to AggregateFunction,\n         ///  but it is disabled because deserializing aggregate functions state might be unsafe.\n \n-        throw Exception{\n-            \"Conversion from \" + from_type->getName() + \" to \" + to_type->getName() + \" is not supported\",\n-            ErrorCodes::CANNOT_CONVERT_TYPE};\n+        throw Exception{\"Conversion from \" + from_type->getName() + \" to \" + to_type->getName() + \" is not supported\", ErrorCodes::CANNOT_CONVERT_TYPE};\n     }\n };\n \n@@ -1709,8 +1695,7 @@ class FunctionBuilderCast : public FunctionBuilderImpl\n     {\n         const auto type_col = checkAndGetColumnConst<ColumnString>(arguments.back().column.get());\n         if (!type_col)\n-            throw Exception(\"Second argument to \" + getName() + \" must be a constant string describing type\",\n-                            ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT);\n+            throw Exception(\"Second argument to \" + getName() + \" must be a constant string describing type\", ErrorCodes::ILLEGAL_TYPE_OF_ARGUMENT);\n \n         return DataTypeFactory::instance().get(type_col->getValue<String>());\n     }\ndiff --git a/dbms/src/Functions/FunctionsHigherOrder.cpp b/dbms/src/Functions/FunctionsHigherOrder.cpp\nindex 567a80f195b2..a78769b061a0 100644\n--- a/dbms/src/Functions/FunctionsHigherOrder.cpp\n+++ b/dbms/src/Functions/FunctionsHigherOrder.cpp\n@@ -17,7 +17,6 @@ void registerFunctionsHigherOrder(FunctionFactory & factory)\n     factory.registerFunction<FunctionArraySort>();\n     factory.registerFunction<FunctionArrayReverseSort>();\n     factory.registerFunction<FunctionArrayCumSum>();\n-\n }\n \n }\ndiff --git a/dbms/src/Functions/FunctionsMiscellaneous.cpp b/dbms/src/Functions/FunctionsMiscellaneous.cpp\nindex 9c2f94c97a2d..58ca5ce1d2d4 100644\n--- a/dbms/src/Functions/FunctionsMiscellaneous.cpp\n+++ b/dbms/src/Functions/FunctionsMiscellaneous.cpp\n@@ -599,29 +599,16 @@ class FunctionSleep : public IFunction\n     void executeImpl(Block & block, const ColumnNumbers & arguments, size_t result) override\n     {\n         const IColumn * col = block.getByPosition(arguments[0]).column.get();\n-        double seconds;\n-        size_t size = col->size();\n-\n-        if (auto column = checkAndGetColumnConst<ColumnVector<Float64>>(col))\n-            seconds = column->getValue<Float64>();\n-\n-        else if (auto column = checkAndGetColumnConst<ColumnVector<Float32>>(col))\n-            seconds = static_cast<double>(column->getValue<Float64>());\n-\n-        else if (auto column = checkAndGetColumnConst<ColumnVector<UInt64>>(col))\n-            seconds = static_cast<double>(column->getValue<UInt64>());\n \n-        else if (auto column = checkAndGetColumnConst<ColumnVector<UInt32>>(col))\n-            seconds = static_cast<double>(column->getValue<UInt32>());\n+        if (!col->isColumnConst())\n+            throw Exception(\"The argument of function \" + getName() + \" must be constant.\", ErrorCodes::ILLEGAL_COLUMN);\n \n-        else if (auto column = checkAndGetColumnConst<ColumnVector<UInt16>>(col))\n-            seconds = static_cast<double>(column->getValue<UInt16>());\n+        Float64 seconds = applyVisitor(FieldVisitorConvertToNumber<Float64>(), static_cast<const ColumnConst &>(*col).getField());\n \n-        else if (auto column = checkAndGetColumnConst<ColumnVector<UInt8>>(col))\n-            seconds = static_cast<double>(column->getValue<UInt8>());\n+        if (seconds < 0)\n+            throw Exception(\"Cannot sleep negative amount of time (not implemented)\", ErrorCodes::BAD_ARGUMENTS);\n \n-        else\n-            throw Exception(\"The argument of function \" + getName() + \" must be constant.\", ErrorCodes::ILLEGAL_COLUMN);\n+        size_t size = col->size();\n \n         /// We do not sleep if the block is empty.\n         if (size > 0)\ndiff --git a/dbms/src/Functions/FunctionsTransform.h b/dbms/src/Functions/FunctionsTransform.h\nindex c266df282b3a..2f5914138628 100644\n--- a/dbms/src/Functions/FunctionsTransform.h\n+++ b/dbms/src/Functions/FunctionsTransform.h\n@@ -65,6 +65,8 @@ class FunctionTransform : public IFunction\n \n     bool isVariadic() const override { return true; }\n     size_t getNumberOfArguments() const override { return 0; }\n+    bool useDefaultImplementationForConstants() const override { return true; }\n+    ColumnNumbers getArgumentsThatAreAlwaysConstant() const override { return {1, 2}; }\n \n     DataTypePtr getReturnTypeImpl(const DataTypes & arguments) const override\n     {\n@@ -189,13 +191,13 @@ class FunctionTransform : public IFunction\n private:\n     void executeConst(Block & block, const ColumnNumbers & arguments, const size_t result)\n     {\n-        /// Construct a block of full-size columns of size 1 and compute the function as usual.\n+        /// Materialize the input column and compute the function as usual.\n \n         Block tmp_block;\n         ColumnNumbers tmp_arguments;\n \n         tmp_block.insert(block.getByPosition(arguments[0]));\n-        tmp_block.getByPosition(0).column = static_cast<const ColumnConst *>(tmp_block.getByPosition(0).column.get())->getDataColumnPtr();\n+        tmp_block.getByPosition(0).column = tmp_block.getByPosition(0).column->cloneResized(block.rows())->convertToFullColumnIfConst();\n         tmp_arguments.push_back(0);\n \n         for (size_t i = 1; i < arguments.size(); ++i)\n@@ -209,9 +211,7 @@ class FunctionTransform : public IFunction\n \n         execute(tmp_block, tmp_arguments, tmp_result);\n \n-        block.getByPosition(result).column = block.getByPosition(result).type->createColumnConst(\n-            block.rows(),\n-            (*tmp_block.getByPosition(tmp_result).column)[0]);\n+        block.getByPosition(result).column = tmp_block.getByPosition(tmp_result).column;\n     }\n \n     template <typename T>\n@@ -727,7 +727,7 @@ class FunctionTransform : public IFunction\n     /// Different versions of the hash tables to implement the mapping.\n \n     using NumToNum = HashMap<UInt64, UInt64, HashCRC32<UInt64>>;\n-    using NumToString = HashMap <UInt64, StringRef, HashCRC32 <UInt64 >>;     /// Everywhere StringRef's with trailing zero.\n+    using NumToString = HashMap <UInt64, StringRef, HashCRC32<UInt64>>;     /// Everywhere StringRef's with trailing zero.\n     using StringToNum = HashMap<StringRef, UInt64, StringRefHash>;\n     using StringToString = HashMap<StringRef, StringRef, StringRefHash>;\n \n@@ -740,7 +740,7 @@ class FunctionTransform : public IFunction\n \n     Field const_default_value;    /// Null, if not specified.\n \n-    bool initialized = false;\n+    std::atomic<bool> initialized {false};\n     std::mutex mutex;\n \n     /// Can be called from different threads. It works only on the first call.\ndiff --git a/dbms/src/Interpreters/Aggregator.cpp b/dbms/src/Interpreters/Aggregator.cpp\nindex a3bbbe303cc6..b2816c752027 100644\n--- a/dbms/src/Interpreters/Aggregator.cpp\n+++ b/dbms/src/Interpreters/Aggregator.cpp\n@@ -6,6 +6,7 @@\n #include <Common/setThreadName.h>\n \n #include <DataTypes/DataTypeAggregateFunction.h>\n+#include <DataTypes/DataTypeNullable.h>\n #include <Columns/ColumnsNumber.h>\n #include <Columns/ColumnArray.h>\n #include <Columns/ColumnTuple.h>\n@@ -88,31 +89,55 @@ void AggregatedDataVariants::convertToTwoLevel()\n }\n \n \n-void Aggregator::Params::calculateColumnNumbers(const Block & block)\n+Block Aggregator::getHeader(bool final) const\n {\n-    if (keys.empty() && !key_names.empty())\n-        for (Names::const_iterator it = key_names.begin(); it != key_names.end(); ++it)\n-            keys.push_back(block.getPositionByName(*it));\n-\n-    for (AggregateDescriptions::iterator it = aggregates.begin(); it != aggregates.end(); ++it)\n-        if (it->arguments.empty() && !it->argument_names.empty())\n-            for (Names::const_iterator jt = it->argument_names.begin(); jt != it->argument_names.end(); ++jt)\n-                it->arguments.push_back(block.getPositionByName(*jt));\n-}\n+    Block res;\n \n+    if (params.src_header)\n+    {\n+        for (size_t i = 0; i < params.keys_size; ++i)\n+            res.insert(params.src_header.safeGetByPosition(params.keys[i]).cloneEmpty());\n \n-void Aggregator::initialize(const Block & block)\n-{\n-    if (isCancelled())\n-        return;\n+        for (size_t i = 0; i < params.aggregates_size; ++i)\n+        {\n+            size_t arguments_size = params.aggregates[i].arguments.size();\n+            DataTypes argument_types(arguments_size);\n+            for (size_t j = 0; j < arguments_size; ++j)\n+                argument_types[j] = params.src_header.safeGetByPosition(params.aggregates[i].arguments[j]).type;\n \n-    std::lock_guard<std::mutex> lock(mutex);\n+            DataTypePtr type;\n+            if (final)\n+                type = params.aggregates[i].function->getReturnType();\n+            else\n+                type = std::make_shared<DataTypeAggregateFunction>(params.aggregates[i].function, argument_types, params.aggregates[i].parameters);\n \n-    if (initialized)\n-        return;\n+            res.insert({ type->createColumn(), type, params.aggregates[i].column_name });\n+        }\n+    }\n+    else if (params.intermediate_header)\n+    {\n+        res = params.intermediate_header.cloneEmpty();\n+\n+        if (final)\n+        {\n+            for (size_t i = 0; i < params.aggregates_size; ++i)\n+            {\n+                auto & elem = res.getByPosition(params.keys_size + i);\n+\n+                elem.type = params.aggregates[i].function->getReturnType();\n+                elem.column = elem.type->createColumn();\n+            }\n+        }\n+    }\n+\n+    return res;\n+}\n \n-    initialized = true;\n \n+Aggregator::Aggregator(const Params & params_)\n+    : params(params_),\n+    isCancelled([]() { return false; })\n+{\n     if (current_memory_tracker)\n         memory_usage_before_aggregation = current_memory_tracker->get();\n \n@@ -134,56 +159,7 @@ void Aggregator::initialize(const Block & block)\n             all_aggregates_has_trivial_destructor = false;\n     }\n \n-    if (isCancelled())\n-        return;\n-\n-    /** All below, if non-empty block passed.\n-      * (it doesn't needed in methods that merging blocks with aggregation states).\n-      */\n-    if (!block)\n-        return;\n-\n-    /// Transform names of columns to numbers.\n-    params.calculateColumnNumbers(block);\n-\n-    if (isCancelled())\n-        return;\n-\n-    /// Create \"header\" block, describing result.\n-    if (!sample)\n-    {\n-        for (size_t i = 0; i < params.keys_size; ++i)\n-        {\n-            sample.insert(block.safeGetByPosition(params.keys[i]).cloneEmpty());\n-            if (ColumnPtr converted = sample.safeGetByPosition(i).column->convertToFullColumnIfConst())\n-                sample.safeGetByPosition(i).column = converted;\n-        }\n-\n-        for (size_t i = 0; i < params.aggregates_size; ++i)\n-        {\n-            ColumnWithTypeAndName col;\n-            col.name = params.aggregates[i].column_name;\n-\n-            size_t arguments_size = params.aggregates[i].arguments.size();\n-            DataTypes argument_types(arguments_size);\n-            for (size_t j = 0; j < arguments_size; ++j)\n-                argument_types[j] = block.safeGetByPosition(params.aggregates[i].arguments[j]).type;\n-\n-            col.type = std::make_shared<DataTypeAggregateFunction>(params.aggregates[i].function, argument_types, params.aggregates[i].parameters);\n-            col.column = col.type->createColumn();\n-\n-            sample.insert(std::move(col));\n-        }\n-    }\n-}\n-\n-\n-void Aggregator::setSampleBlock(const Block & block)\n-{\n-    std::lock_guard<std::mutex> lock(mutex);\n-\n-    if (!sample)\n-        sample = block.cloneEmpty();\n+    method = chooseAggregationMethod();\n }\n \n \n@@ -377,102 +353,70 @@ void Aggregator::compileIfPossible(AggregatedDataVariants::Type type)\n }\n \n \n-AggregatedDataVariants::Type Aggregator::chooseAggregationMethod(const ColumnRawPtrs & key_columns, Sizes & key_sizes) const\n+AggregatedDataVariants::Type Aggregator::chooseAggregationMethod()\n {\n+    /// If no keys. All aggregating to single row.\n+    if (params.keys_size == 0)\n+        return AggregatedDataVariants::Type::without_key;\n+\n     /// Check if at least one of the specified keys is nullable.\n-    /// Create a set of nested key columns from the corresponding key columns.\n-    /// Here \"nested\" means that, if a key column is nullable, we take its nested\n-    /// column; otherwise we take the key column as is.\n-    ColumnRawPtrs nested_key_columns;\n-    nested_key_columns.reserve(key_columns.size());\n+    DataTypes types_removed_nullable;\n+    types_removed_nullable.reserve(params.keys.size());\n     bool has_nullable_key = false;\n \n-    for (const auto & col : key_columns)\n+    for (const auto & pos : params.keys)\n     {\n-        if (col->isColumnNullable())\n+        const auto & type = (params.src_header ? params.src_header : params.intermediate_header).safeGetByPosition(pos).type;\n+\n+        if (type->isNullable())\n         {\n-            const ColumnNullable & nullable_col = static_cast<const ColumnNullable &>(*col);\n-            nested_key_columns.push_back(&nullable_col.getNestedColumn());\n             has_nullable_key = true;\n+            types_removed_nullable.push_back(removeNullable(type));\n         }\n         else\n-            nested_key_columns.push_back(col);\n+            types_removed_nullable.push_back(type);\n     }\n \n     /** Returns ordinary (not two-level) methods, because we start from them.\n       * Later, during aggregation process, data may be converted (partitioned) to two-level structure, if cardinality is high.\n       */\n \n-    bool all_fixed = true;\n     size_t keys_bytes = 0;\n \n-    size_t num_array_keys = 0;\n-    bool has_arrays_of_non_fixed_elems = false;\n-    bool all_non_array_keys_are_fixed = true;\n-    bool has_tuples = false;\n-    bool has_arrays_of_nullable = false;\n+    size_t num_contiguous_keys = 0;\n+    size_t num_fixed_contiguous_keys = 0;\n+    size_t num_string_keys = 0;\n \n     key_sizes.resize(params.keys_size);\n     for (size_t j = 0; j < params.keys_size; ++j)\n     {\n-        if (nested_key_columns[j]->isFixedAndContiguous())\n-        {\n-            key_sizes[j] = nested_key_columns[j]->sizeOfValueIfFixed();\n-            keys_bytes += key_sizes[j];\n-        }\n-        else\n+        if (types_removed_nullable[j]->isValueUnambiguouslyRepresentedInContiguousMemoryRegion())\n         {\n-            all_fixed = false;\n+            ++num_contiguous_keys;\n \n-            if (const ColumnArray * arr = typeid_cast<const ColumnArray *>(nested_key_columns[j]))\n+            if (types_removed_nullable[j]->isValueUnambiguouslyRepresentedInFixedSizeContiguousMemoryRegion())\n             {\n-                ++num_array_keys;\n-\n-                if (arr->getData().isColumnNullable())\n-                    has_arrays_of_nullable = true;\n-\n-                if (!arr->getData().isFixedAndContiguous())\n-                    has_arrays_of_non_fixed_elems = true;\n+                ++num_fixed_contiguous_keys;\n+                key_sizes[j] = types_removed_nullable[j]->getSizeOfValueInMemory();\n+                keys_bytes += key_sizes[j];\n             }\n-            else\n-            {\n-                all_non_array_keys_are_fixed = false;\n \n-                if (typeid_cast<const ColumnTuple *>(nested_key_columns[j]))\n-                    has_tuples = true;\n+            if (types_removed_nullable[j]->isString())\n+            {\n+                ++num_string_keys;\n             }\n         }\n     }\n \n-    /// If no keys. All aggregating to single row.\n-    if (params.keys_size == 0)\n-        return AggregatedDataVariants::Type::without_key;\n-\n-    if (has_nullable_key || has_arrays_of_nullable)\n+    if (has_nullable_key)\n     {\n-        /// At least one key is nullable. Therefore we choose an aggregation method\n-        /// that takes into account this fact.\n-        if ((params.keys_size == 1) && (nested_key_columns[0]->isNumeric()))\n-        {\n-            /// We have exactly one key and it is nullable. We shall add it a tag\n-            /// which specifies whether its value is null or not.\n-            size_t size_of_field = nested_key_columns[0]->sizeOfValueIfFixed();\n-            if ((size_of_field == 1) || (size_of_field == 2) || (size_of_field == 4) || (size_of_field == 8) || (size_of_field == 16))\n-                return AggregatedDataVariants::Type::nullable_keys128;\n-            else\n-                throw Exception{\"Logical error: numeric column has sizeOfField not in 1, 2, 4, 8, 16.\",\n-                    ErrorCodes::LOGICAL_ERROR};\n-        }\n-\n-        if (all_fixed)\n+        if (params.keys_size == num_fixed_contiguous_keys)\n         {\n             /// Pack if possible all the keys along with information about which key values are nulls\n             /// into a fixed 16- or 32-byte blob.\n-            if (keys_bytes > (std::numeric_limits<size_t>::max() - std::tuple_size<KeysNullMap<UInt128>>::value))\n-                throw Exception{\"Aggregator: keys sizes overflow\", ErrorCodes::LOGICAL_ERROR};\n-            if ((std::tuple_size<KeysNullMap<UInt128>>::value + keys_bytes) <= 16)\n+            if (std::tuple_size<KeysNullMap<UInt128>>::value + keys_bytes <= 16)\n                 return AggregatedDataVariants::Type::nullable_keys128;\n-            if ((std::tuple_size<KeysNullMap<UInt256>>::value + keys_bytes) <= 32)\n+            if (std::tuple_size<KeysNullMap<UInt256>>::value + keys_bytes <= 32)\n                 return AggregatedDataVariants::Type::nullable_keys256;\n         }\n \n@@ -483,9 +427,9 @@ AggregatedDataVariants::Type Aggregator::chooseAggregationMethod(const ColumnRaw\n     /// No key has been found to be nullable.\n \n     /// Single numeric key.\n-    if ((params.keys_size == 1) && nested_key_columns[0]->isNumeric())\n+    if (params.keys_size == 1 && types_removed_nullable[0]->isValueRepresentedByNumber())\n     {\n-        size_t size_of_field = nested_key_columns[0]->sizeOfValueIfFixed();\n+        size_t size_of_field = types_removed_nullable[0]->getSizeOfValueInMemory();\n         if (size_of_field == 1)\n             return AggregatedDataVariants::Type::key8;\n         if (size_of_field == 2)\n@@ -500,23 +444,24 @@ AggregatedDataVariants::Type Aggregator::chooseAggregationMethod(const ColumnRaw\n     }\n \n     /// If all keys fits in N bits, will use hash table with all keys packed (placed contiguously) to single N-bit key.\n-    if (all_fixed && keys_bytes <= 16)\n-        return AggregatedDataVariants::Type::keys128;\n-    if (all_fixed && keys_bytes <= 32)\n-        return AggregatedDataVariants::Type::keys256;\n+    if (params.keys_size == num_fixed_contiguous_keys)\n+    {\n+        if (keys_bytes <= 16)\n+            return AggregatedDataVariants::Type::keys128;\n+        if (keys_bytes <= 32)\n+            return AggregatedDataVariants::Type::keys256;\n+    }\n \n     /// If single string key - will use hash table with references to it. Strings itself are stored separately in Arena.\n-    if (params.keys_size == 1 && typeid_cast<const ColumnString *>(nested_key_columns[0]))\n+    if (params.keys_size == 1 && types_removed_nullable[0]->isString())\n         return AggregatedDataVariants::Type::key_string;\n \n-    if (params.keys_size == 1 && typeid_cast<const ColumnFixedString *>(nested_key_columns[0]))\n+    if (params.keys_size == 1 && types_removed_nullable[0]->isFixedString())\n         return AggregatedDataVariants::Type::key_fixed_string;\n \n-    /** If some keys are arrays.\n-      * If there is no more than one key that is array, and it is array of fixed-size elements, and all other keys are fixed-size,\n-      *  then it is possible to use 'concat' method (due to one-to-one correspondense). Otherwise the method will be 'serialized'.\n+    /** If it is possible to use 'concat' method due to one-to-one correspondense. Otherwise the method will be 'serialized'.\n       */\n-    if (num_array_keys == 1 && !has_arrays_of_non_fixed_elems && all_non_array_keys_are_fixed)\n+    if (params.keys_size == num_contiguous_keys && num_fixed_contiguous_keys + 1 >= num_contiguous_keys)\n         return AggregatedDataVariants::Type::concat;\n \n     /** For case with multiple strings, we use 'concat' method despite the fact, that correspondense is not one-to-one.\n@@ -524,11 +469,8 @@ AggregatedDataVariants::Type Aggregator::chooseAggregationMethod(const ColumnRaw\n       * But if strings contains zero bytes in between, different keys may clash.\n       * For example, keys ('a\\0b', 'c') and ('a', 'b\\0c') will be aggregated as one key.\n       * This is documented behaviour. It may be avoided by just switching to 'serialized' method, which is less efficient.\n-      *\n-      * Some of aggregation keys may be tuples. In most cases, tuples are flattened in expression analyzer and not passed here.\n-      * But in rare cases, they are not flattened. Will fallback to 'serialized' method for simplicity.\n       */\n-    if (num_array_keys == 0 && !has_tuples)\n+    if (params.keys_size == num_fixed_contiguous_keys + num_string_keys)\n         return AggregatedDataVariants::Type::concat;\n \n     return AggregatedDataVariants::Type::serialized;\n@@ -707,12 +649,9 @@ void NO_INLINE Aggregator::executeWithoutKeyImpl(\n \n \n bool Aggregator::executeOnBlock(Block & block, AggregatedDataVariants & result,\n-    ColumnRawPtrs & key_columns, AggregateColumns & aggregate_columns,\n-    Sizes & key_sizes, StringRefs & key,\n+    ColumnRawPtrs & key_columns, AggregateColumns & aggregate_columns, StringRefs & key,\n     bool & no_more_keys)\n {\n-    initialize(block);\n-\n     if (isCancelled())\n         return true;\n \n@@ -769,7 +708,7 @@ bool Aggregator::executeOnBlock(Block & block, AggregatedDataVariants & result,\n     /// How to perform the aggregation?\n     if (result.empty())\n     {\n-        result.init(chooseAggregationMethod(key_columns, key_sizes));\n+        result.init(method);\n         result.keys_size = params.keys_size;\n         result.key_sizes = key_sizes;\n         LOG_TRACE(log, \"Aggregation method: \" << result.getMethodName());\n@@ -1056,7 +995,6 @@ void Aggregator::execute(const BlockInputStreamPtr & stream, AggregatedDataVaria\n     StringRefs key(params.keys_size);\n     ColumnRawPtrs key_columns(params.keys_size);\n     AggregateColumns aggregate_columns(params.aggregates_size);\n-    Sizes key_sizes;\n \n     /** Used if there is a limit on the maximum number of rows in the aggregation,\n       *  and if group_by_overflow_mode == ANY.\n@@ -1081,14 +1019,12 @@ void Aggregator::execute(const BlockInputStreamPtr & stream, AggregatedDataVaria\n         src_rows += block.rows();\n         src_bytes += block.bytes();\n \n-        if (!executeOnBlock(block, result,\n-            key_columns, aggregate_columns, key_sizes, key,\n-            no_more_keys))\n+        if (!executeOnBlock(block, result, key_columns, aggregate_columns, key, no_more_keys))\n             break;\n     }\n \n     double elapsed_seconds = watch.elapsedSeconds();\n-    size_t rows = result.size();\n+    size_t rows = result.sizeWithoutOverflowRow();\n     LOG_TRACE(log, std::fixed << std::setprecision(3)\n         << \"Aggregated. \" << src_rows << \" to \" << rows << \" rows (from \" << src_bytes / 1048576.0 << \" MiB)\"\n         << \" in \" << elapsed_seconds << \" sec.\"\n@@ -1174,9 +1110,11 @@ Block Aggregator::prepareBlockAndFill(\n     MutableColumns final_aggregate_columns(params.aggregates_size);\n     AggregateColumnsData aggregate_columns_data(params.aggregates_size);\n \n+    Block header = getHeader(final);\n+\n     for (size_t i = 0; i < params.keys_size; ++i)\n     {\n-        key_columns[i] = sample.safeGetByPosition(i).column->cloneEmpty();\n+        key_columns[i] = header.safeGetByPosition(i).type->createColumn();\n         key_columns[i]->reserve(rows);\n     }\n \n@@ -1184,7 +1122,7 @@ Block Aggregator::prepareBlockAndFill(\n     {\n         if (!final)\n         {\n-            aggregate_columns[i] = sample.safeGetByPosition(i + params.keys_size).column->cloneEmpty();\n+            aggregate_columns[i] = header.safeGetByPosition(i + params.keys_size).type->createColumn();\n \n             /// The ColumnAggregateFunction column captures the shared ownership of the arena with the aggregate function states.\n             ColumnAggregateFunction & column_aggregate_func = static_cast<ColumnAggregateFunction &>(*aggregate_columns[i]);\n@@ -1213,7 +1151,7 @@ Block Aggregator::prepareBlockAndFill(\n \n     filler(key_columns, aggregate_columns_data, final_aggregate_columns, data_variants.key_sizes, final);\n \n-    Block res = sample.cloneEmpty();\n+    Block res = header.cloneEmpty();\n \n     for (size_t i = 0; i < params.keys_size; ++i)\n         res.getByPosition(i).column = std::move(key_columns[i]);\n@@ -1221,18 +1159,13 @@ Block Aggregator::prepareBlockAndFill(\n     for (size_t i = 0; i < params.aggregates_size; ++i)\n     {\n         if (final)\n-        {\n-            res.getByPosition(i + params.keys_size).type = aggregate_functions[i]->getReturnType();\n             res.getByPosition(i + params.keys_size).column = std::move(final_aggregate_columns[i]);\n-        }\n         else\n-        {\n             res.getByPosition(i + params.keys_size).column = std::move(aggregate_columns[i]);\n-        }\n     }\n \n     /// Change the size of the columns-constants in the block.\n-    size_t columns = sample.columns();\n+    size_t columns = header.columns();\n     for (size_t i = 0; i < columns; ++i)\n         if (res.getByPosition(i).column->isColumnConst())\n             res.getByPosition(i).column = res.getByPosition(i).column->cut(0, rows);\n@@ -1653,12 +1586,7 @@ class MergingAndConvertingBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"MergingAndConverting\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << this;\n-        return res.str();\n-    }\n+    Block getHeader() const override { return aggregator.getHeader(final); }\n \n     ~MergingAndConvertingBlockInputStream()\n     {\n@@ -1846,7 +1774,7 @@ std::unique_ptr<IBlockInputStream> Aggregator::mergeAndConvertToBlocks(\n             non_empty_data.push_back(data);\n \n     if (non_empty_data.empty())\n-        return std::make_unique<NullBlockInputStream>();\n+        return std::make_unique<NullBlockInputStream>(getHeader(final));\n \n     if (non_empty_data.size() > 1)\n     {\n@@ -2023,14 +1951,6 @@ void NO_INLINE Aggregator::mergeWithoutKeyStreamsImpl(\n \n void Aggregator::mergeStream(const BlockInputStreamPtr & stream, AggregatedDataVariants & result, size_t max_threads)\n {\n-    if (isCancelled())\n-        return;\n-\n-    StringRefs key(params.keys_size);\n-    ColumnRawPtrs key_columns(params.keys_size);\n-\n-    initialize({});\n-\n     if (isCancelled())\n         return;\n \n@@ -2062,15 +1982,6 @@ void Aggregator::mergeStream(const BlockInputStreamPtr & stream, AggregatedDataV\n     if (bucket_to_blocks.empty())\n         return;\n \n-    setSampleBlock(bucket_to_blocks.begin()->second.front());\n-\n-    /// How to perform the aggregation?\n-    for (size_t i = 0; i < params.keys_size; ++i)\n-        key_columns[i] = sample.safeGetByPosition(i).column.get();\n-\n-    Sizes key_sizes;\n-    AggregatedDataVariants::Type method = chooseAggregationMethod(key_columns, key_sizes);\n-\n     /** `minus one` means the absence of information about the bucket\n       * - in the case of single-level aggregation, as well as for blocks with \"overflowing\" values.\n       * If there is at least one block with a bucket number greater than zero, then there was a two-level aggregation.\n@@ -2111,7 +2022,7 @@ void Aggregator::mergeStream(const BlockInputStreamPtr & stream, AggregatedDataV\n \n         LOG_TRACE(log, \"Merging partially aggregated two-level data.\");\n \n-        auto merge_bucket = [&bucket_to_blocks, &result, &key_sizes, this](Int32 bucket, Arena * aggregates_pool, MemoryTracker * memory_tracker)\n+        auto merge_bucket = [&bucket_to_blocks, &result, this](Int32 bucket, Arena * aggregates_pool, MemoryTracker * memory_tracker)\n         {\n             current_memory_tracker = memory_tracker;\n \n@@ -2122,7 +2033,7 @@ void Aggregator::mergeStream(const BlockInputStreamPtr & stream, AggregatedDataV\n \n             #define M(NAME) \\\n                 else if (result.type == AggregatedDataVariants::Type::NAME) \\\n-                    mergeStreamsImpl(block, key_sizes, aggregates_pool, *result.NAME, result.NAME->data.impls[bucket], nullptr, false);\n+                    mergeStreamsImpl(block, result.key_sizes, aggregates_pool, *result.NAME, result.NAME->data.impls[bucket], nullptr, false);\n \n                 if (false) {}\n                     APPLY_FOR_VARIANTS_TWO_LEVEL(M)\n@@ -2190,7 +2101,7 @@ void Aggregator::mergeStream(const BlockInputStreamPtr & stream, AggregatedDataV\n \n         #define M(NAME, IS_TWO_LEVEL) \\\n             else if (result.type == AggregatedDataVariants::Type::NAME) \\\n-                mergeStreamsImpl(block, key_sizes, result.aggregates_pool, *result.NAME, result.NAME->data, result.without_key, no_more_keys);\n+                mergeStreamsImpl(block, result.key_sizes, result.aggregates_pool, *result.NAME, result.NAME->data, result.without_key, no_more_keys);\n \n             APPLY_FOR_AGGREGATED_VARIANTS(M)\n         #undef M\n@@ -2214,32 +2125,19 @@ Block Aggregator::mergeBlocks(BlocksList & blocks, bool final)\n     LOG_TRACE(log, \"Merging partially aggregated blocks (bucket = \" << bucket_num << \").\");\n     Stopwatch watch;\n \n-    StringRefs key(params.keys_size);\n-    ColumnRawPtrs key_columns(params.keys_size);\n-\n-    initialize({});\n-    setSampleBlock(blocks.front());\n-\n-    /// How to perform the aggregation?\n-    for (size_t i = 0; i < params.keys_size; ++i)\n-        key_columns[i] = sample.safeGetByPosition(i).column.get();\n-\n-    Sizes key_sizes;\n-    AggregatedDataVariants::Type method = chooseAggregationMethod(key_columns, key_sizes);\n-\n     /** If possible, change 'method' to some_hash64. Otherwise, leave as is.\n       * Better hash function is needed because during external aggregation,\n       *  we may merge partitions of data with total number of keys far greater than 4 billion.\n       */\n \n #define APPLY_FOR_VARIANTS_THAT_MAY_USE_BETTER_HASH_FUNCTION(M) \\\n-        M(key64)             \\\n-        M(key_string)         \\\n+        M(key64)            \\\n+        M(key_string)       \\\n         M(key_fixed_string) \\\n-        M(keys128)             \\\n-        M(keys256)             \\\n-        M(concat)             \\\n-        M(serialized)        \\\n+        M(keys128)          \\\n+        M(keys256)          \\\n+        M(concat)           \\\n+        M(serialized)       \\\n \n #define M(NAME) \\\n     if (method == AggregatedDataVariants::Type::NAME) \\\n@@ -2377,20 +2275,16 @@ std::vector<Block> Aggregator::convertBlockToTwoLevel(const Block & block)\n     if (!block)\n         return {};\n \n-    initialize({});\n-    setSampleBlock(block);\n-\n     AggregatedDataVariants data;\n \n     StringRefs key(params.keys_size);\n     ColumnRawPtrs key_columns(params.keys_size);\n-    Sizes key_sizes;\n \n     /// Remember the columns we will work with\n     for (size_t i = 0; i < params.keys_size; ++i)\n         key_columns[i] = block.safeGetByPosition(i).column.get();\n \n-    AggregatedDataVariants::Type type = chooseAggregationMethod(key_columns, key_sizes);\n+    AggregatedDataVariants::Type type = method;\n     data.keys_size = params.keys_size;\n     data.key_sizes = key_sizes;\n \n@@ -2496,30 +2390,6 @@ void Aggregator::destroyAllAggregateStates(AggregatedDataVariants & result)\n }\n \n \n-String Aggregator::getID() const\n-{\n-    std::stringstream res;\n-\n-    if (params.keys.empty())\n-    {\n-        res << \"key_names\";\n-        for (size_t i = 0; i < params.key_names.size(); ++i)\n-            res << \", \" << params.key_names[i];\n-    }\n-    else\n-    {\n-        res << \"keys\";\n-        for (size_t i = 0; i < params.keys.size(); ++i)\n-            res << \", \" << params.keys[i];\n-    }\n-\n-    res << \", aggregates\";\n-    for (size_t i = 0; i < params.aggregates_size; ++i)\n-        res << \", \" << params.aggregates[i].column_name;\n-\n-    return res.str();\n-}\n-\n void Aggregator::setCancellationHook(const CancellationHook cancellation_hook)\n {\n     isCancelled = cancellation_hook;\ndiff --git a/dbms/src/Interpreters/Aggregator.h b/dbms/src/Interpreters/Aggregator.h\nindex 02ef7f6835bc..08027fe6ae66 100644\n--- a/dbms/src/Interpreters/Aggregator.h\n+++ b/dbms/src/Interpreters/Aggregator.h\n@@ -812,8 +812,8 @@ struct AggregatedDataVariants : private boost::noncopyable\n     {\n         switch (type_)\n         {\n-            case Type::EMPTY:        break;\n-            case Type::without_key:    break;\n+            case Type::EMPTY:       break;\n+            case Type::without_key: break;\n \n         #define M(NAME, IS_TWO_LEVEL) \\\n             case Type::NAME: NAME = std::make_unique<decltype(NAME)::element_type>(); break;\n@@ -832,8 +832,8 @@ struct AggregatedDataVariants : private boost::noncopyable\n     {\n         switch (type)\n         {\n-            case Type::EMPTY:        return 0;\n-            case Type::without_key:    return 1;\n+            case Type::EMPTY:       return 0;\n+            case Type::without_key: return 1;\n \n         #define M(NAME, IS_TWO_LEVEL) \\\n             case Type::NAME: return NAME->data.size() + (without_key != nullptr);\n@@ -850,8 +850,8 @@ struct AggregatedDataVariants : private boost::noncopyable\n     {\n         switch (type)\n         {\n-            case Type::EMPTY:        return 0;\n-            case Type::without_key:    return 1;\n+            case Type::EMPTY:       return 0;\n+            case Type::without_key: return 1;\n \n             #define M(NAME, IS_TWO_LEVEL) \\\n             case Type::NAME: return NAME->data.size();\n@@ -867,8 +867,8 @@ struct AggregatedDataVariants : private boost::noncopyable\n     {\n         switch (type)\n         {\n-            case Type::EMPTY:        return \"EMPTY\";\n-            case Type::without_key:    return \"without_key\";\n+            case Type::EMPTY:       return \"EMPTY\";\n+            case Type::without_key: return \"without_key\";\n \n         #define M(NAME, IS_TWO_LEVEL) \\\n             case Type::NAME: return #NAME;\n@@ -884,8 +884,8 @@ struct AggregatedDataVariants : private boost::noncopyable\n     {\n         switch (type)\n         {\n-            case Type::EMPTY:        return false;\n-            case Type::without_key:    return false;\n+            case Type::EMPTY:       return false;\n+            case Type::without_key: return false;\n \n         #define M(NAME, IS_TWO_LEVEL) \\\n             case Type::NAME: return IS_TWO_LEVEL;\n@@ -900,25 +900,25 @@ struct AggregatedDataVariants : private boost::noncopyable\n     #define APPLY_FOR_VARIANTS_CONVERTIBLE_TO_TWO_LEVEL(M) \\\n         M(key32)            \\\n         M(key64)            \\\n-        M(key_string)        \\\n-        M(key_fixed_string)    \\\n-        M(keys128)            \\\n-        M(keys256)            \\\n-        M(hashed)            \\\n-        M(concat)            \\\n-        M(serialized)        \\\n-        M(nullable_keys128)    \\\n-        M(nullable_keys256)    \\\n+        M(key_string)       \\\n+        M(key_fixed_string) \\\n+        M(keys128)          \\\n+        M(keys256)          \\\n+        M(hashed)           \\\n+        M(concat)           \\\n+        M(serialized)       \\\n+        M(nullable_keys128) \\\n+        M(nullable_keys256) \\\n \n     #define APPLY_FOR_VARIANTS_NOT_CONVERTIBLE_TO_TWO_LEVEL(M) \\\n-        M(key8)                \\\n+        M(key8)             \\\n         M(key16)            \\\n         M(key64_hash64)     \\\n-        M(key_string_hash64) \\\n+        M(key_string_hash64)\\\n         M(key_fixed_string_hash64) \\\n-        M(keys128_hash64)     \\\n-        M(keys256_hash64)     \\\n-        M(concat_hash64)     \\\n+        M(keys128_hash64)   \\\n+        M(keys256_hash64)   \\\n+        M(concat_hash64)    \\\n         M(serialized_hash64) \\\n \n     #define APPLY_FOR_VARIANTS_SINGLE_LEVEL(M) \\\n@@ -943,16 +943,16 @@ struct AggregatedDataVariants : private boost::noncopyable\n     void convertToTwoLevel();\n \n     #define APPLY_FOR_VARIANTS_TWO_LEVEL(M) \\\n-        M(key32_two_level)                \\\n-        M(key64_two_level)                \\\n-        M(key_string_two_level)            \\\n-        M(key_fixed_string_two_level)    \\\n-        M(keys128_two_level)            \\\n-        M(keys256_two_level)            \\\n-        M(hashed_two_level)                \\\n-        M(concat_two_level)                \\\n-        M(serialized_two_level)            \\\n-        M(nullable_keys128_two_level)    \\\n+        M(key32_two_level)            \\\n+        M(key64_two_level)            \\\n+        M(key_string_two_level)       \\\n+        M(key_fixed_string_two_level) \\\n+        M(keys128_two_level)          \\\n+        M(keys256_two_level)          \\\n+        M(hashed_two_level)           \\\n+        M(concat_two_level)           \\\n+        M(serialized_two_level)       \\\n+        M(nullable_keys128_two_level) \\\n         M(nullable_keys256_two_level)\n };\n \n@@ -979,9 +979,13 @@ class Aggregator\n public:\n     struct Params\n     {\n+        /// Data structure of source blocks.\n+        Block src_header;\n+        /// Data structure of intermediate blocks before merge.\n+        Block intermediate_header;\n+\n         /// What to count.\n-        Names key_names;\n-        ColumnNumbers keys;            /// The column numbers are computed later.\n+        ColumnNumbers keys;\n         AggregateDescriptions aggregates;\n         size_t keys_size;\n         size_t aggregates_size;\n@@ -1008,35 +1012,34 @@ class Aggregator\n         const std::string tmp_path;\n \n         Params(\n-            const Names & key_names_, const AggregateDescriptions & aggregates_,\n+            const Block & src_header_,\n+            const ColumnNumbers & keys_, const AggregateDescriptions & aggregates_,\n             bool overflow_row_, size_t max_rows_to_group_by_, OverflowMode group_by_overflow_mode_,\n             Compiler * compiler_, UInt32 min_count_to_compile_,\n             size_t group_by_two_level_threshold_, size_t group_by_two_level_threshold_bytes_,\n             size_t max_bytes_before_external_group_by_, const std::string & tmp_path_)\n-            : key_names(key_names_), aggregates(aggregates_), aggregates_size(aggregates.size()),\n+            : src_header(src_header_),\n+            keys(keys_), aggregates(aggregates_), keys_size(keys.size()), aggregates_size(aggregates.size()),\n             overflow_row(overflow_row_), max_rows_to_group_by(max_rows_to_group_by_), group_by_overflow_mode(group_by_overflow_mode_),\n             compiler(compiler_), min_count_to_compile(min_count_to_compile_),\n             group_by_two_level_threshold(group_by_two_level_threshold_), group_by_two_level_threshold_bytes(group_by_two_level_threshold_bytes_),\n             max_bytes_before_external_group_by(max_bytes_before_external_group_by_), tmp_path(tmp_path_)\n         {\n-            std::sort(key_names.begin(), key_names.end());\n-            key_names.erase(std::unique(key_names.begin(), key_names.end()), key_names.end());\n-            keys_size = key_names.size();\n         }\n \n         /// Only parameters that matter during merge.\n-        Params(const Names & key_names_, const AggregateDescriptions & aggregates_, bool overflow_row_)\n-            : Params(key_names_, aggregates_, overflow_row_, 0, OverflowMode::THROW, nullptr, 0, 0, 0, 0, \"\") {}\n+        Params(const Block & intermediate_header_,\n+            const ColumnNumbers & keys_, const AggregateDescriptions & aggregates_, bool overflow_row_)\n+            : Params(Block(), keys_, aggregates_, overflow_row_, 0, OverflowMode::THROW, nullptr, 0, 0, 0, 0, \"\")\n+        {\n+            intermediate_header = intermediate_header_;\n+        }\n \n-        /// Compute the column numbers in `keys` and `aggregates`.\n+        /// Calculate the column numbers in `keys` and `aggregates`.\n         void calculateColumnNumbers(const Block & block);\n     };\n \n-    Aggregator(const Params & params_)\n-        : params(params_),\n-        isCancelled([]() { return false; })\n-    {\n-    }\n+    Aggregator(const Params & params_);\n \n     /// Aggregate the source. Get the result in the form of one of the data structures.\n     void execute(const BlockInputStreamPtr & stream, AggregatedDataVariants & result);\n@@ -1049,7 +1052,7 @@ class Aggregator\n     /// Process one block. Return false if the processing should be aborted (with group_by_overflow_mode = 'break').\n     bool executeOnBlock(Block & block, AggregatedDataVariants & result,\n         ColumnRawPtrs & key_columns, AggregateColumns & aggregate_columns,    /// Passed to not create them anew for each block\n-        Sizes & key_sizes, StringRefs & keys,                                        /// - pass the corresponding objects that are initially empty.\n+        StringRefs & keys,                                        /// - pass the corresponding objects that are initially empty.\n         bool & no_more_keys);\n \n     /** Convert the aggregation data structure into a block.\n@@ -1087,9 +1090,6 @@ class Aggregator\n       */\n     void setCancellationHook(const CancellationHook cancellation_hook);\n \n-    /// For IBlockInputStream.\n-    String getID() const;\n-\n     /// For external aggregation.\n     void writeToTemporaryFile(AggregatedDataVariants & data_variants);\n \n@@ -1111,12 +1111,18 @@ class Aggregator\n \n     const TemporaryFiles & getTemporaryFiles() const { return temporary_files; }\n \n+    /// Get data structure of the result.\n+    Block getHeader(bool final) const;\n+\n protected:\n     friend struct AggregatedDataVariants;\n     friend class MergingAndConvertingBlockInputStream;\n \n     Params params;\n \n+    AggregatedDataVariants::Type method;\n+    Sizes key_sizes;\n+\n     AggregateFunctionsPlainPtrs aggregate_functions;\n \n     /** This array serves two purposes.\n@@ -1145,12 +1151,8 @@ class Aggregator\n     /// How many RAM were used to process the query before processing the first block.\n     Int64 memory_usage_before_aggregation = 0;\n \n-    /// To initialize from the first block when used concurrently.\n-    bool initialized = false;\n     std::mutex mutex;\n \n-    Block sample;\n-\n     Logger * log = &Logger::get(\"Aggregator\");\n \n     /** Dynamically compiled library for aggregation, if any.\n@@ -1179,18 +1181,8 @@ class Aggregator\n     /// For external aggregation.\n     TemporaryFiles temporary_files;\n \n-    /** If only the column names (key_names, and also aggregates[i].column_name) are specified, then calculate the column numbers.\n-      * Generate block - sample of the result. It is used in the convertToBlocks, mergeAndConvertToBlocks methods.\n-      */\n-    void initialize(const Block & block);\n-\n-    /** Set the block - sample of the result,\n-      *  only if it has not already been set.\n-      */\n-    void setSampleBlock(const Block & block);\n-\n     /** Select the aggregation method based on the number and types of keys. */\n-    AggregatedDataVariants::Type chooseAggregationMethod(const ColumnRawPtrs & key_columns, Sizes & key_sizes) const;\n+    AggregatedDataVariants::Type chooseAggregationMethod();\n \n     /** Create states of aggregate functions for one key.\n       */\ndiff --git a/dbms/src/Interpreters/ClusterProxy/DescribeStreamFactory.cpp b/dbms/src/Interpreters/ClusterProxy/DescribeStreamFactory.cpp\nindex 570e655263b5..a61e14763f7f 100644\n--- a/dbms/src/Interpreters/ClusterProxy/DescribeStreamFactory.cpp\n+++ b/dbms/src/Interpreters/ClusterProxy/DescribeStreamFactory.cpp\n@@ -4,6 +4,7 @@\n #include <DataStreams/BlockExtraInfoInputStream.h>\n #include <DataStreams/RemoteBlockInputStream.h>\n \n+\n namespace DB\n {\n \n@@ -46,7 +47,7 @@ void DescribeStreamFactory::createForShard(\n     }\n \n     auto remote_stream = std::make_shared<RemoteBlockInputStream>(\n-            shard_info.pool, query, context, nullptr, throttler);\n+        shard_info.pool, query, InterpreterDescribeQuery::getSampleBlock(), context, nullptr, throttler);\n     remote_stream->setPoolMode(PoolMode::GET_ALL);\n     remote_stream->appendExtraInfo();\n     res.emplace_back(std::move(remote_stream));\ndiff --git a/dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.cpp b/dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.cpp\nindex 7ba39c1eae56..43ef98dfb26c 100644\n--- a/dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.cpp\n+++ b/dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.cpp\n@@ -28,12 +28,14 @@ namespace ClusterProxy\n {\n \n SelectStreamFactory::SelectStreamFactory(\n-        QueryProcessingStage::Enum processed_stage_,\n-        QualifiedTableName main_table_,\n-        const Tables & external_tables_)\n-    : processed_stage{processed_stage_}\n-    , main_table(std::move(main_table_))\n-    , external_tables{external_tables_}\n+    const Block & header,\n+    QueryProcessingStage::Enum processed_stage_,\n+    QualifiedTableName main_table_,\n+    const Tables & external_tables_)\n+    : header(header),\n+    processed_stage{processed_stage_},\n+    main_table(std::move(main_table_)),\n+    external_tables{external_tables_}\n {\n }\n \n@@ -55,10 +57,10 @@ BlockInputStreamPtr createLocalStream(const ASTPtr & query_ast, const Context &\n }\n \n void SelectStreamFactory::createForShard(\n-        const Cluster::ShardInfo & shard_info,\n-        const String & query, const ASTPtr & query_ast,\n-        const Context & context, const ThrottlerPtr & throttler,\n-        BlockInputStreams & res)\n+    const Cluster::ShardInfo & shard_info,\n+    const String & query, const ASTPtr & query_ast,\n+    const Context & context, const ThrottlerPtr & throttler,\n+    BlockInputStreams & res)\n {\n     auto emplace_local_stream = [&]()\n     {\n@@ -67,7 +69,7 @@ void SelectStreamFactory::createForShard(\n \n     auto emplace_remote_stream = [&]()\n     {\n-        auto stream = std::make_shared<RemoteBlockInputStream>(shard_info.pool, query, context, nullptr, throttler, external_tables, processed_stage);\n+        auto stream = std::make_shared<RemoteBlockInputStream>(shard_info.pool, query, header, context, nullptr, throttler, external_tables, processed_stage);\n         stream->setPoolMode(PoolMode::GET_MANY);\n         stream->setMainTable(main_table);\n         res.emplace_back(std::move(stream));\n@@ -157,7 +159,7 @@ void SelectStreamFactory::createForShard(\n         auto lazily_create_stream = [\n                 pool = shard_info.pool, shard_num = shard_info.shard_num, query, query_ast, context, throttler,\n                 main_table = main_table, external_tables = external_tables, stage = processed_stage,\n-                local_delay]()\n+                local_delay, this]()\n             -> BlockInputStreamPtr\n         {\n             std::vector<ConnectionPoolWithFailover::TryResult> try_results;\n@@ -192,11 +194,11 @@ void SelectStreamFactory::createForShard(\n                     connections.emplace_back(std::move(try_result.entry));\n \n                 return std::make_shared<RemoteBlockInputStream>(\n-                        std::move(connections), query, context, nullptr, throttler, external_tables, stage);\n+                    std::move(connections), query, header, context, nullptr, throttler, external_tables, stage);\n             }\n         };\n \n-        res.emplace_back(std::make_shared<LazyBlockInputStream>(\"LazyShardWithLocalReplica\", lazily_create_stream));\n+        res.emplace_back(std::make_shared<LazyBlockInputStream>(\"LazyShardWithLocalReplica\", header, lazily_create_stream));\n     }\n     else\n         emplace_remote_stream();\ndiff --git a/dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.h b/dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.h\nindex f683a3306f7c..53066a946e94 100644\n--- a/dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.h\n+++ b/dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.h\n@@ -14,6 +14,7 @@ class SelectStreamFactory final : public IStreamFactory\n {\n public:\n     SelectStreamFactory(\n+        const Block & header,\n         QueryProcessingStage::Enum processed_stage,\n         QualifiedTableName main_table,\n         const Tables & external_tables);\n@@ -25,6 +26,7 @@ class SelectStreamFactory final : public IStreamFactory\n         BlockInputStreams & res) override;\n \n private:\n+    const Block header;\n     QueryProcessingStage::Enum processed_stage;\n     QualifiedTableName main_table;\n     const Tables & external_tables;\ndiff --git a/dbms/src/Interpreters/DDLWorker.cpp b/dbms/src/Interpreters/DDLWorker.cpp\nindex f01bd8424e6d..c6bcb23989b3 100644\n--- a/dbms/src/Interpreters/DDLWorker.cpp\n+++ b/dbms/src/Interpreters/DDLWorker.cpp\n@@ -940,7 +940,7 @@ class DDLQueryStatusInputSream : public IProfilingBlockInputStream\n public:\n \n     DDLQueryStatusInputSream(const String & zk_node_path, const DDLLogEntry & entry, const Context & context)\n-    : node_path(zk_node_path), context(context), watch(CLOCK_MONOTONIC_COARSE), log(&Logger::get(\"DDLQueryStatusInputSream\"))\n+        : node_path(zk_node_path), context(context), watch(CLOCK_MONOTONIC_COARSE), log(&Logger::get(\"DDLQueryStatusInputSream\"))\n     {\n         sample = Block{\n             {std::make_shared<DataTypeString>(),    \"host\"},\n@@ -964,10 +964,7 @@ class DDLQueryStatusInputSream : public IProfilingBlockInputStream\n         return \"DDLQueryStatusInputSream\";\n     }\n \n-    String getID() const override\n-    {\n-        return \"DDLQueryStatusInputSream(\" + node_path + \")\";\n-    }\n+    Block getHeader() const override { return sample; };\n \n     Block readImpl() override\n     {\n@@ -1138,7 +1135,6 @@ BlockIO executeDDLQueryOnCluster(const ASTPtr & query_ptr_, const Context & cont\n         return io;\n \n     auto stream = std::make_shared<DDLQueryStatusInputSream>(node_path, entry, context);\n-    io.in_sample = stream->getSampleBlock();\n     io.in = std::move(stream);\n     return io;\n }\ndiff --git a/dbms/src/Interpreters/ExpressionActions.cpp b/dbms/src/Interpreters/ExpressionActions.cpp\nindex 490ab509c00a..1f8a5bb8f0d5 100644\n--- a/dbms/src/Interpreters/ExpressionActions.cpp\n+++ b/dbms/src/Interpreters/ExpressionActions.cpp\n@@ -910,45 +910,6 @@ void ExpressionActions::finalize(const Names & output_columns)\n }\n \n \n-std::string ExpressionActions::getID() const\n-{\n-    std::stringstream ss;\n-\n-    for (size_t i = 0; i < actions.size(); ++i)\n-    {\n-        if (i)\n-            ss << \", \";\n-        if (actions[i].type == ExpressionAction::APPLY_FUNCTION)\n-            ss << actions[i].result_name;\n-        if (actions[i].type == ExpressionAction::ARRAY_JOIN)\n-        {\n-            ss << (actions[i].array_join_is_left ? \"LEFT ARRAY JOIN\" : \"ARRAY JOIN\") << \"{\";\n-            for (NameSet::const_iterator it = actions[i].array_joined_columns.begin();\n-                 it != actions[i].array_joined_columns.end(); ++it)\n-            {\n-                if (it != actions[i].array_joined_columns.begin())\n-                    ss << \", \";\n-                ss << *it;\n-            }\n-            ss << \"}\";\n-        }\n-\n-        /// TODO JOIN\n-    }\n-\n-    ss << \": {\";\n-    NamesAndTypesList output_columns = sample_block.getNamesAndTypesList();\n-    for (NamesAndTypesList::const_iterator it = output_columns.begin(); it != output_columns.end(); ++it)\n-    {\n-        if (it != output_columns.begin())\n-            ss << \", \";\n-        ss << it->name;\n-    }\n-    ss << \"}\";\n-\n-    return ss.str();\n-}\n-\n std::string ExpressionActions::dumpActions() const\n {\n     std::stringstream ss;\n@@ -1064,7 +1025,7 @@ BlockInputStreamPtr ExpressionActions::createStreamWithNonJoinedDataIfFullOrRigh\n         {\n             Block left_sample_block;\n             for (const auto & input_elem : input_columns)\n-                left_sample_block.insert({ nullptr, input_elem.type, input_elem.name });\n+                left_sample_block.insert(ColumnWithTypeAndName{ input_elem.type, input_elem.name });\n \n             return action.join->createStreamWithNonJoinedRows(left_sample_block, max_block_size);\n         }\ndiff --git a/dbms/src/Interpreters/ExpressionActions.h b/dbms/src/Interpreters/ExpressionActions.h\nindex 5e8cc4ac1707..59434c741acc 100644\n--- a/dbms/src/Interpreters/ExpressionActions.h\n+++ b/dbms/src/Interpreters/ExpressionActions.h\n@@ -194,8 +194,6 @@ class ExpressionActions\n     /// Obtain a sample block that contains the names and types of result columns.\n     const Block & getSampleBlock() const { return sample_block; }\n \n-    std::string getID() const;\n-\n     std::string dumpActions() const;\n \n     static std::string getSmallestColumn(const NamesAndTypesList & columns);\ndiff --git a/dbms/src/Interpreters/ExpressionAnalyzer.cpp b/dbms/src/Interpreters/ExpressionAnalyzer.cpp\nindex a519ebb6dbd3..259cd8f35034 100644\n--- a/dbms/src/Interpreters/ExpressionAnalyzer.cpp\n+++ b/dbms/src/Interpreters/ExpressionAnalyzer.cpp\n@@ -883,7 +883,6 @@ void ExpressionAnalyzer::addExternalStorage(ASTPtr & subquery_or_table_name_or_t\n \n     external_tables[external_table_name] = external_storage;\n     subqueries_for_sets[external_table_name].source = interpreter->execute().in;\n-    subqueries_for_sets[external_table_name].source_sample = interpreter->getSampleBlock();\n     subqueries_for_sets[external_table_name].table = external_storage;\n \n     /** NOTE If it was written IN tmp_table - the existing temporary (but not external) table,\n@@ -1661,8 +1660,7 @@ void ExpressionAnalyzer::makeSet(const ASTFunction * node, const Block & sample_\n         {\n             auto interpreter = interpretSubquery(arg, context, subquery_depth, {});\n             subquery_for_set.source = std::make_shared<LazyBlockInputStream>(\n-                [interpreter]() mutable { return interpreter->execute().in; });\n-            subquery_for_set.source_sample = interpreter->getSampleBlock();\n+                interpreter->getSampleBlock(), [interpreter]() mutable { return interpreter->execute().in; });\n \n             /** Why is LazyBlockInputStream used?\n               *\n@@ -2486,13 +2484,14 @@ bool ExpressionAnalyzer::appendJoin(ExpressionActionsChain & chain, bool only_ty\n                 table = table_to_join.subquery;\n \n             auto interpreter = interpretSubquery(table, context, subquery_depth, required_joined_columns);\n-            subquery_for_set.source = std::make_shared<LazyBlockInputStream>([interpreter]() mutable { return interpreter->execute().in; });\n-            subquery_for_set.source_sample = interpreter->getSampleBlock();\n+            subquery_for_set.source = std::make_shared<LazyBlockInputStream>(\n+                interpreter->getSampleBlock(),\n+                [interpreter]() mutable { return interpreter->execute().in; });\n         }\n \n         /// TODO You do not need to set this up when JOIN is only needed on remote servers.\n         subquery_for_set.join = join;\n-        subquery_for_set.join->setSampleBlock(subquery_for_set.source_sample);\n+        subquery_for_set.join->setSampleBlock(subquery_for_set.source->getHeader());\n     }\n \n     addJoinAction(step.actions, false);\ndiff --git a/dbms/src/Interpreters/ExpressionAnalyzer.h b/dbms/src/Interpreters/ExpressionAnalyzer.h\nindex b11bd025a2e8..ccd60b296cbb 100644\n--- a/dbms/src/Interpreters/ExpressionAnalyzer.h\n+++ b/dbms/src/Interpreters/ExpressionAnalyzer.h\n@@ -41,7 +41,6 @@ struct SubqueryForSet\n {\n     /// The source is obtained using the InterpreterSelectQuery subquery.\n     BlockInputStreamPtr source;\n-    Block source_sample;\n \n     /// If set, build it from result.\n     SetPtr set;\ndiff --git a/dbms/src/Interpreters/InterpreterCheckQuery.cpp b/dbms/src/Interpreters/InterpreterCheckQuery.cpp\nindex 722622cc70d9..d96344190b55 100644\n--- a/dbms/src/Interpreters/InterpreterCheckQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterCheckQuery.cpp\n@@ -244,7 +244,6 @@ BlockIO InterpreterCheckQuery::execute()\n \n         BlockIO res;\n         res.in = std::make_shared<OneBlockInputStream>(block);\n-        res.in_sample = getSampleBlock();\n \n         return res;\n     }\n@@ -256,7 +255,6 @@ BlockIO InterpreterCheckQuery::execute()\n \n         BlockIO res;\n         res.in = std::make_shared<OneBlockInputStream>(result);\n-        res.in_sample = result.cloneEmpty();\n \n         return res;\n     }\ndiff --git a/dbms/src/Interpreters/InterpreterCreateQuery.cpp b/dbms/src/Interpreters/InterpreterCreateQuery.cpp\nindex 853d42c5ccfd..aa4bf23fc20b 100644\n--- a/dbms/src/Interpreters/InterpreterCreateQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterCreateQuery.cpp\n@@ -573,7 +573,6 @@ BlockIO InterpreterCreateQuery::createTable(ASTCreateQuery & create)\n             out = std::make_shared<ProhibitColumnsBlockOutputStream>(out, columns.materialized_columns);\n \n         BlockIO io;\n-        io.in_sample = as_select_sample;\n         io.in = std::make_shared<NullAndDoCopyBlockInputStream>(interpreter_select->execute().in, out);\n \n         return io;\ndiff --git a/dbms/src/Interpreters/InterpreterDescribeQuery.cpp b/dbms/src/Interpreters/InterpreterDescribeQuery.cpp\nindex af61a20d6f81..a01f4e327e8a 100644\n--- a/dbms/src/Interpreters/InterpreterDescribeQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterDescribeQuery.cpp\n@@ -24,8 +24,6 @@ BlockIO InterpreterDescribeQuery::execute()\n {\n     BlockIO res;\n     res.in = executeImpl();\n-    res.in_sample = getSampleBlock();\n-\n     return res;\n }\n \ndiff --git a/dbms/src/Interpreters/InterpreterDescribeQuery.h b/dbms/src/Interpreters/InterpreterDescribeQuery.h\nindex 28bf635f34c0..fc0bea10f2d5 100644\n--- a/dbms/src/Interpreters/InterpreterDescribeQuery.h\n+++ b/dbms/src/Interpreters/InterpreterDescribeQuery.h\n@@ -21,11 +21,12 @@ class InterpreterDescribeQuery : public IInterpreter\n \n     BlockIO execute() override;\n \n+    static Block getSampleBlock();\n+\n private:\n     ASTPtr query_ptr;\n     const Context & context;\n \n-    Block getSampleBlock();\n     BlockInputStreamPtr executeImpl();\n };\n \ndiff --git a/dbms/src/Interpreters/InterpreterExistsQuery.cpp b/dbms/src/Interpreters/InterpreterExistsQuery.cpp\nindex 1dac1692a815..08df9fb39ad5 100644\n--- a/dbms/src/Interpreters/InterpreterExistsQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterExistsQuery.cpp\n@@ -17,15 +17,16 @@ BlockIO InterpreterExistsQuery::execute()\n {\n     BlockIO res;\n     res.in = executeImpl();\n-    res.in_sample = getSampleBlock();\n-\n     return res;\n }\n \n \n Block InterpreterExistsQuery::getSampleBlock()\n {\n-    return {{ std::make_shared<DataTypeUInt8>(), \"result\" }};\n+    return Block{{\n+        ColumnUInt8::create(),\n+        std::make_shared<DataTypeUInt8>(),\n+        \"result\" }};\n }\n \n \ndiff --git a/dbms/src/Interpreters/InterpreterExistsQuery.h b/dbms/src/Interpreters/InterpreterExistsQuery.h\nindex e8a4d5e45ca4..b2050b443d85 100644\n--- a/dbms/src/Interpreters/InterpreterExistsQuery.h\n+++ b/dbms/src/Interpreters/InterpreterExistsQuery.h\n@@ -21,11 +21,12 @@ class InterpreterExistsQuery : public IInterpreter\n \n     BlockIO execute() override;\n \n+    static Block getSampleBlock();\n+\n private:\n     ASTPtr query_ptr;\n     const Context & context;\n \n-    Block getSampleBlock();\n     BlockInputStreamPtr executeImpl();\n };\n \ndiff --git a/dbms/src/Interpreters/InterpreterInsertQuery.cpp b/dbms/src/Interpreters/InterpreterInsertQuery.cpp\nindex 7ae0708fb05e..63eea9542b81 100644\n--- a/dbms/src/Interpreters/InterpreterInsertQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterInsertQuery.cpp\n@@ -140,11 +140,10 @@ BlockIO InterpreterInsertQuery::execute()\n     else\n     {\n         InterpreterSelectQuery interpreter_select{query.select, context};\n-        res.in_sample = interpreter_select.getSampleBlock();\n \n         res.in = interpreter_select.execute().in;\n \n-        res.in = std::make_shared<NullableAdapterBlockInputStream>(res.in, res.in_sample, res.out_sample);\n+        res.in = std::make_shared<NullableAdapterBlockInputStream>(res.in, res.in->getHeader(), res.out_sample);\n         res.in = std::make_shared<CastTypeBlockInputStream>(context, res.in, res.out_sample);\n         res.in = std::make_shared<NullAndDoCopyBlockInputStream>(res.in, out);\n     }\ndiff --git a/dbms/src/Interpreters/InterpreterKillQueryQuery.cpp b/dbms/src/Interpreters/InterpreterKillQueryQuery.cpp\nindex 20c0ae143545..648054553685 100644\n--- a/dbms/src/Interpreters/InterpreterKillQueryQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterKillQueryQuery.cpp\n@@ -105,7 +105,7 @@ class SyncKillQueryInputStream : public IProfilingBlockInputStream\n \n     SyncKillQueryInputStream(ProcessList & process_list_, QueryDescriptors && processes_to_stop_, Block && processes_block_,\n                              const Block & res_sample_block_)\n-    :     process_list(process_list_),\n+        : process_list(process_list_),\n         processes_to_stop(std::move(processes_to_stop_)),\n         processes_block(std::move(processes_block_)),\n         res_sample_block(res_sample_block_)\n@@ -118,10 +118,7 @@ class SyncKillQueryInputStream : public IProfilingBlockInputStream\n         return \"SynchronousQueryKiller\";\n     }\n \n-    String getID() const override\n-    {\n-        return \"SynchronousQueryKiller_\" + toString(intptr_t(this));\n-    }\n+    Block getHeader() const override { return res_sample_block; };\n \n     Block readImpl() override\n     {\n@@ -185,25 +182,25 @@ BlockIO InterpreterKillQueryQuery::execute()\n     ProcessList & process_list = context.getProcessList();\n     QueryDescriptors queries_to_stop = extractQueriesExceptMeAndCheckAccess(processes_block, context);\n \n-    res_io.in_sample = processes_block.cloneEmpty();\n-    res_io.in_sample.insert(0, {ColumnString::create(), std::make_shared<DataTypeString>(), \"kill_status\"});\n+    auto header = processes_block.cloneEmpty();\n+    header.insert(0, {ColumnString::create(), std::make_shared<DataTypeString>(), \"kill_status\"});\n \n     if (!query.sync || query.test)\n     {\n-        MutableColumns res_columns = res_io.in_sample.cloneEmptyColumns();\n+        MutableColumns res_columns = header.cloneEmptyColumns();\n \n         for (const auto & query_desc : queries_to_stop)\n         {\n             auto code = (query.test) ? CancellationCode::Unknown : process_list.sendCancelToQuery(query_desc.query_id, query_desc.user);\n-            insertResultRow(query_desc.source_num, code, processes_block, res_io.in_sample, res_columns);\n+            insertResultRow(query_desc.source_num, code, processes_block, header, res_columns);\n         }\n \n-        res_io.in = std::make_shared<OneBlockInputStream>(res_io.in_sample.cloneWithColumns(std::move(res_columns)));\n+        res_io.in = std::make_shared<OneBlockInputStream>(header.cloneWithColumns(std::move(res_columns)));\n     }\n     else\n     {\n         res_io.in = std::make_shared<SyncKillQueryInputStream>(\n-            process_list, std::move(queries_to_stop), std::move(processes_block), res_io.in_sample);\n+            process_list, std::move(queries_to_stop), std::move(processes_block), header);\n     }\n \n     return res_io;\ndiff --git a/dbms/src/Interpreters/InterpreterSelectQuery.cpp b/dbms/src/Interpreters/InterpreterSelectQuery.cpp\nindex 5eb0bd798aa2..b0579452e6fc 100644\n--- a/dbms/src/Interpreters/InterpreterSelectQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterSelectQuery.cpp\n@@ -21,6 +21,7 @@\n #include <DataStreams/CreatingSetsBlockInputStream.h>\n #include <DataStreams/MaterializingBlockInputStream.h>\n #include <DataStreams/ConcatBlockInputStream.h>\n+#include <DataStreams/OneBlockInputStream.h>\n \n #include <Parsers/ASTSelectQuery.h>\n #include <Parsers/ASTIdentifier.h>\n@@ -148,37 +149,48 @@ bool InterpreterSelectQuery::hasAggregation(const ASTSelectQuery & query_ptr)\n \n void InterpreterSelectQuery::basicInit(const BlockInputStreamPtr & input)\n {\n-    auto query_table = query.table();\n-\n-    if (query_table && typeid_cast<ASTSelectQuery *>(query_table.get()))\n+    /// Read from prepared input.\n+    if (input)\n     {\n         if (table_column_names.empty())\n-        {\n-            table_column_names = InterpreterSelectQuery::getSampleBlock(query_table, context).getNamesAndTypesList();\n-        }\n+            table_column_names = input->getHeader().getNamesAndTypesList();\n     }\n     else\n     {\n-        if (query_table && typeid_cast<const ASTFunction *>(query_table.get()))\n+        auto table_expression = query.table();\n+\n+        /// Read from subquery.\n+        if (table_expression && typeid_cast<const ASTSelectQuery *>(table_expression.get()))\n         {\n-            /// Get the table function\n-            TableFunctionPtr table_function_ptr = TableFunctionFactory::instance().get(typeid_cast<const ASTFunction *>(query_table.get())->name, context);\n-            /// Run it and remember the result\n-            storage = table_function_ptr->execute(query_table, context);\n+            if (table_column_names.empty())\n+                table_column_names = InterpreterSelectQuery::getSampleBlock(table_expression, context).getNamesAndTypesList();\n         }\n         else\n         {\n-            String database_name;\n-            String table_name;\n+            /// Read from table function.\n+            if (table_expression && typeid_cast<const ASTFunction *>(table_expression.get()))\n+            {\n+                /// Get the table function\n+                TableFunctionPtr table_function_ptr = TableFunctionFactory::instance().get(\n+                    typeid_cast<const ASTFunction *>(table_expression.get())->name, context);\n+                /// Run it and remember the result\n+                storage = table_function_ptr->execute(table_expression, context);\n+            }\n+            else\n+            {\n+                /// Read from table.\n+                String database_name;\n+                String table_name;\n \n-            getDatabaseAndTableNames(database_name, table_name);\n+                getDatabaseAndTableNames(database_name, table_name);\n \n-            storage = context.getTable(database_name, table_name);\n-        }\n+                storage = context.getTable(database_name, table_name);\n+            }\n \n-        table_lock = storage->lockStructure(false, __PRETTY_FUNCTION__);\n-        if (table_column_names.empty())\n-            table_column_names = storage->getColumnsListNonMaterialized();\n+            table_lock = storage->lockStructure(false, __PRETTY_FUNCTION__);\n+            if (table_column_names.empty())\n+                table_column_names = storage->getColumnsListNonMaterialized();\n+        }\n     }\n \n     if (table_column_names.empty())\n@@ -385,14 +397,6 @@ BlockIO InterpreterSelectQuery::execute()\n {\n     (void) executeWithoutUnion();\n \n-    if (hasNoData())\n-    {\n-        BlockIO res;\n-        res.in = std::make_shared<NullBlockInputStream>();\n-        res.in_sample = getSampleBlock();\n-        return res;\n-    }\n-\n     executeUnion();\n \n     /// Constraints on the result, the quota on the result, and also callback for progress.\n@@ -416,8 +420,6 @@ BlockIO InterpreterSelectQuery::execute()\n \n     BlockIO res;\n     res.in = streams[0];\n-    res.in_sample = getSampleBlock();\n-\n     return res;\n }\n \n@@ -553,14 +555,6 @@ void InterpreterSelectQuery::executeSingleQuery()\n             chain.clear();\n         }\n \n-        /** If there is no data.\n-         *  This check is specially postponed slightly lower than it could be (immediately after executeFetchColumns),\n-         *  for the query to be analyzed, and errors (for example, type mismatches) could be found in it.\n-         *  Otherwise, the empty result could be returned for the incorrect query.\n-         */\n-        if (hasNoData())\n-            return;\n-\n         /// Before executing WHERE and HAVING, remove the extra columns from the block (mostly the aggregation keys).\n         if (has_where)\n             before_where->prependProjectInput();\n@@ -700,10 +694,6 @@ void InterpreterSelectQuery::executeSingleQuery()\n         }\n     }\n \n-    /** If there is no data. */\n-    if (hasNoData())\n-        return;\n-\n     SubqueriesForSets subqueries_for_sets = query_analyzer->getSubqueriesForSets();\n     if (!subqueries_for_sets.empty())\n         executeSubqueriesInSetsAndJoins(subqueries_for_sets);\n@@ -724,9 +714,6 @@ static void getLimitLengthAndOffset(ASTSelectQuery & query, size_t & length, siz\n \n QueryProcessingStage::Enum InterpreterSelectQuery::executeFetchColumns()\n {\n-    if (!hasNoData())\n-        return QueryProcessingStage::FetchColumns;\n-\n     /// The subquery interpreter, if the subquery\n     std::optional<InterpreterSelectQuery> interpreter_subquery;\n \n@@ -873,7 +860,22 @@ QueryProcessingStage::Enum InterpreterSelectQuery::executeFetchColumns()\n                 optimize_prewhere(*merge_tree);\n         }\n \n-        streams = storage->read(required_columns, query_info, context, from_stage, max_block_size, max_streams);\n+        /// If there was no already prepared input.\n+        if (streams.empty())\n+            streams = storage->read(required_columns, query_info, context, from_stage, max_block_size, max_streams);\n+\n+        /// The storage has no data for this query.\n+        if (streams.empty())\n+        {\n+            from_stage = QueryProcessingStage::FetchColumns;\n+            Block header;\n+            for (const auto & name : required_columns)\n+            {\n+                auto type = storage->getDataTypeByName(name);\n+                header.insert({ type->createColumn(), type, name });\n+            }\n+            streams.emplace_back(std::make_shared<OneBlockInputStream>(header));\n+        }\n \n         if (alias_actions)\n         {\n@@ -927,7 +929,7 @@ QueryProcessingStage::Enum InterpreterSelectQuery::executeFetchColumns()\n }\n \n \n-void InterpreterSelectQuery::executeWhere(ExpressionActionsPtr expression)\n+void InterpreterSelectQuery::executeWhere(const ExpressionActionsPtr & expression)\n {\n     transformStreams([&](auto & stream)\n     {\n@@ -936,7 +938,7 @@ void InterpreterSelectQuery::executeWhere(ExpressionActionsPtr expression)\n }\n \n \n-void InterpreterSelectQuery::executeAggregation(ExpressionActionsPtr expression, bool overflow_row, bool final)\n+void InterpreterSelectQuery::executeAggregation(const ExpressionActionsPtr & expression, bool overflow_row, bool final)\n {\n     transformStreams([&](auto & stream)\n     {\n@@ -947,6 +949,15 @@ void InterpreterSelectQuery::executeAggregation(ExpressionActionsPtr expression,\n     AggregateDescriptions aggregates;\n     query_analyzer->getAggregateInfo(key_names, aggregates);\n \n+    Block header = streams[0]->getHeader();\n+    ColumnNumbers keys;\n+    for (const auto & name : key_names)\n+        keys.push_back(header.getPositionByName(name));\n+    for (auto & descr : aggregates)\n+        if (descr.arguments.empty())\n+            for (const auto & name : descr.argument_names)\n+                descr.arguments.push_back(header.getPositionByName(name));\n+\n     const Settings & settings = context.getSettingsRef();\n \n     /** Two-level aggregation is useful in two cases:\n@@ -955,7 +966,7 @@ void InterpreterSelectQuery::executeAggregation(ExpressionActionsPtr expression,\n       */\n     bool allow_to_use_two_level_group_by = streams.size() > 1 || settings.limits.max_bytes_before_external_group_by != 0;\n \n-    Aggregator::Params params(key_names, aggregates,\n+    Aggregator::Params params(header, keys, aggregates,\n         overflow_row, settings.limits.max_rows_to_group_by, settings.limits.group_by_overflow_mode,\n         settings.compile ? &context.getCompiler() : nullptr, settings.min_count_to_compile,\n         allow_to_use_two_level_group_by ? settings.group_by_two_level_threshold : SettingUInt64(0),\n@@ -999,6 +1010,12 @@ void InterpreterSelectQuery::executeMergeAggregated(bool overflow_row, bool fina\n     AggregateDescriptions aggregates;\n     query_analyzer->getAggregateInfo(key_names, aggregates);\n \n+    Block header = streams[0]->getHeader();\n+\n+    ColumnNumbers keys;\n+    for (const auto & name : key_names)\n+        keys.push_back(header.getPositionByName(name));\n+\n     /** There are two modes of distributed aggregation.\n       *\n       * 1. In different threads read from the remote servers blocks.\n@@ -1014,7 +1031,7 @@ void InterpreterSelectQuery::executeMergeAggregated(bool overflow_row, bool fina\n       *  but it can work more slowly.\n       */\n \n-    Aggregator::Params params(key_names, aggregates, overflow_row);\n+    Aggregator::Params params(header, keys, aggregates, overflow_row);\n \n     const Settings & settings = context.getSettingsRef();\n \n@@ -1039,7 +1056,7 @@ void InterpreterSelectQuery::executeMergeAggregated(bool overflow_row, bool fina\n }\n \n \n-void InterpreterSelectQuery::executeHaving(ExpressionActionsPtr expression)\n+void InterpreterSelectQuery::executeHaving(const ExpressionActionsPtr & expression)\n {\n     transformStreams([&](auto & stream)\n     {\n@@ -1048,7 +1065,7 @@ void InterpreterSelectQuery::executeHaving(ExpressionActionsPtr expression)\n }\n \n \n-void InterpreterSelectQuery::executeTotalsAndHaving(bool has_having, ExpressionActionsPtr expression, bool overflow_row)\n+void InterpreterSelectQuery::executeTotalsAndHaving(bool has_having, const ExpressionActionsPtr & expression, bool overflow_row)\n {\n     executeUnion();\n \n@@ -1060,7 +1077,7 @@ void InterpreterSelectQuery::executeTotalsAndHaving(bool has_having, ExpressionA\n }\n \n \n-void InterpreterSelectQuery::executeExpression(ExpressionActionsPtr expression)\n+void InterpreterSelectQuery::executeExpression(const ExpressionActionsPtr & expression)\n {\n     transformStreams([&](auto & stream)\n     {\n@@ -1161,7 +1178,7 @@ void InterpreterSelectQuery::executeMergeSorted()\n }\n \n \n-void InterpreterSelectQuery::executeProjection(ExpressionActionsPtr expression)\n+void InterpreterSelectQuery::executeProjection(const ExpressionActionsPtr & expression)\n {\n     transformStreams([&](auto & stream)\n     {\n@@ -1339,12 +1356,6 @@ void InterpreterSelectQuery::transformStreams(Transform && transform)\n }\n \n \n-bool InterpreterSelectQuery::hasNoData() const\n-{\n-    return streams.empty() && !stream_with_non_joined_data;\n-}\n-\n-\n bool InterpreterSelectQuery::hasMoreThanOneStream() const\n {\n     return streams.size() + (stream_with_non_joined_data ? 1 : 0) > 1;\ndiff --git a/dbms/src/Interpreters/InterpreterSelectQuery.h b/dbms/src/Interpreters/InterpreterSelectQuery.h\nindex 57e8c925f986..cfc61e35f2c9 100644\n--- a/dbms/src/Interpreters/InterpreterSelectQuery.h\n+++ b/dbms/src/Interpreters/InterpreterSelectQuery.h\n@@ -80,6 +80,7 @@ class InterpreterSelectQuery : public IInterpreter\n      */\n     const BlockInputStreams & executeWithoutUnion();\n \n+    /// TODO It's confusing that these methods return result structure for the case of QueryProcessingStage::Complete regardless to the actual 'to_stage'.\n     DataTypes getReturnTypes();\n     Block getSampleBlock();\n \n@@ -137,19 +138,19 @@ class InterpreterSelectQuery : public IInterpreter\n     /// Fetch data from the table. Returns the stage to which the query was processed in Storage.\n     QueryProcessingStage::Enum executeFetchColumns();\n \n-    void executeWhere(ExpressionActionsPtr expression);\n-    void executeAggregation(ExpressionActionsPtr expression, bool overflow_row, bool final);\n+    void executeWhere(const ExpressionActionsPtr & expression);\n+    void executeAggregation(const ExpressionActionsPtr & expression, bool overflow_row, bool final);\n     void executeMergeAggregated(bool overflow_row, bool final);\n-    void executeTotalsAndHaving(bool has_having, ExpressionActionsPtr expression, bool overflow_row);\n-    void executeHaving(ExpressionActionsPtr expression);\n-    void executeExpression(ExpressionActionsPtr expression);\n+    void executeTotalsAndHaving(bool has_having, const ExpressionActionsPtr & expression, bool overflow_row);\n+    void executeHaving(const ExpressionActionsPtr & expression);\n+    void executeExpression(const ExpressionActionsPtr & expression);\n     void executeOrder();\n     void executeMergeSorted();\n     void executePreLimit();\n     void executeUnion();\n     void executeLimitBy();\n     void executeLimit();\n-    void executeProjection(ExpressionActionsPtr expression);\n+    void executeProjection(const ExpressionActionsPtr & expression);\n     void executeDistinct(bool before_order, Names columns);\n     void executeSubqueriesInSetsAndJoins(std::unordered_map<String, SubqueryForSet> & subqueries_for_sets);\n \ndiff --git a/dbms/src/Interpreters/InterpreterShowCreateQuery.cpp b/dbms/src/Interpreters/InterpreterShowCreateQuery.cpp\nindex ab0c83a19715..774515c9cc35 100644\n--- a/dbms/src/Interpreters/InterpreterShowCreateQuery.cpp\n+++ b/dbms/src/Interpreters/InterpreterShowCreateQuery.cpp\n@@ -19,15 +19,16 @@ BlockIO InterpreterShowCreateQuery::execute()\n {\n     BlockIO res;\n     res.in = executeImpl();\n-    res.in_sample = getSampleBlock();\n-\n     return res;\n }\n \n \n Block InterpreterShowCreateQuery::getSampleBlock()\n {\n-    return {{ std::make_shared<DataTypeString>(), \"statement\" }};\n+    return Block{{\n+        ColumnString::create(),\n+        std::make_shared<DataTypeString>(),\n+        \"statement\"}};\n }\n \n \ndiff --git a/dbms/src/Interpreters/InterpreterShowCreateQuery.h b/dbms/src/Interpreters/InterpreterShowCreateQuery.h\nindex 7fa85230f04f..5e8672c17678 100644\n--- a/dbms/src/Interpreters/InterpreterShowCreateQuery.h\n+++ b/dbms/src/Interpreters/InterpreterShowCreateQuery.h\n@@ -21,11 +21,12 @@ class InterpreterShowCreateQuery : public IInterpreter\n \n     BlockIO execute() override;\n \n+    static Block getSampleBlock();\n+\n private:\n     ASTPtr query_ptr;\n     const Context & context;\n \n-    Block getSampleBlock();\n     BlockInputStreamPtr executeImpl();\n };\n \ndiff --git a/dbms/src/Interpreters/Join.cpp b/dbms/src/Interpreters/Join.cpp\nindex aa406ca9b58f..c469fc733a8f 100644\n--- a/dbms/src/Interpreters/Join.cpp\n+++ b/dbms/src/Interpreters/Join.cpp\n@@ -1038,12 +1038,7 @@ class NonJoinedBlockInputStream : public IProfilingBlockInputStream\n \n     String getName() const override { return \"NonJoined\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"NonJoined(\" << &parent << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override { return result_sample_block; };\n \n \n protected:\ndiff --git a/dbms/src/Interpreters/castColumn.cpp b/dbms/src/Interpreters/castColumn.cpp\nindex daa75081c526..6c5d68d4c7be 100644\n--- a/dbms/src/Interpreters/castColumn.cpp\n+++ b/dbms/src/Interpreters/castColumn.cpp\n@@ -9,6 +9,9 @@ namespace DB\n \n ColumnPtr castColumn(const ColumnWithTypeAndName & arg, const DataTypePtr & type, const Context & context)\n {\n+    if (arg.type->equals(*type))\n+        return arg.column;\n+\n     Block temporary_block\n     {\n         arg,\ndiff --git a/dbms/src/Interpreters/executeQuery.cpp b/dbms/src/Interpreters/executeQuery.cpp\nindex c7cb2f58f6b9..eb31be2a80f5 100644\n--- a/dbms/src/Interpreters/executeQuery.cpp\n+++ b/dbms/src/Interpreters/executeQuery.cpp\n@@ -442,7 +442,7 @@ void executeQuery(\n                 ? typeid_cast<const ASTIdentifier &>(*ast_query_with_output->format).name\n                 : context.getDefaultFormat();\n \n-            BlockOutputStreamPtr out = context.getOutputFormat(format_name, *out_buf, streams.in_sample);\n+            BlockOutputStreamPtr out = context.getOutputFormat(format_name, *out_buf, streams.in->getHeader());\n \n             if (auto stream = dynamic_cast<IProfilingBlockInputStream *>(streams.in.get()))\n             {\ndiff --git a/dbms/src/Server/Benchmark.cpp b/dbms/src/Server/Benchmark.cpp\nindex ceeb75acccea..989ab07aa0fe 100644\n--- a/dbms/src/Server/Benchmark.cpp\n+++ b/dbms/src/Server/Benchmark.cpp\n@@ -303,7 +303,7 @@ class Benchmark\n     void execute(ConnectionPool::Entry & connection, Query & query)\n     {\n         Stopwatch watch;\n-        RemoteBlockInputStream stream(*connection, query, global_context, &settings, nullptr, Tables(), query_processing_stage);\n+        RemoteBlockInputStream stream(*connection, query, {}, global_context, &settings, nullptr, Tables(), query_processing_stage);\n \n         Progress progress;\n         stream.setProgressCallback([&progress](const Progress & value) { progress.incrementPiecewiseAtomically(value); });\ndiff --git a/dbms/src/Server/ClusterCopier.cpp b/dbms/src/Server/ClusterCopier.cpp\nindex 7e0e9b27a8a2..02dbf7367c24 100644\n--- a/dbms/src/Server/ClusterCopier.cpp\n+++ b/dbms/src/Server/ClusterCopier.cpp\n@@ -25,6 +25,8 @@\n #include <Interpreters/Cluster.h>\n #include <Interpreters/InterpreterSelectQuery.h>\n #include <Interpreters/InterpreterInsertQuery.h>\n+#include <Interpreters/InterpreterExistsQuery.h>\n+#include <Interpreters/InterpreterShowCreateQuery.h>\n #include <Interpreters/InterpreterFactory.h>\n #include <Interpreters/InterpreterDropQuery.h>\n #include <Interpreters/InterpreterCreateQuery.h>\n@@ -49,6 +51,7 @@\n #include <DataStreams/SquashingBlockInputStream.h>\n #include <Common/isLocalAddress.h>\n #include <DataStreams/copyData.h>\n+#include <DataTypes/DataTypeString.h>\n #include <DataStreams/NullBlockOutputStream.h>\n #include <IO/Operators.h>\n #include <IO/ReadBufferFromString.h>\n@@ -1405,14 +1408,16 @@ class ClusterCopier\n     bool existsRemoteTable(const DatabaseAndTableName & table, Connection & connection)\n     {\n         String query = \"EXISTS \" + getDatabaseDotTable(table);\n-        Block block = getBlockWithAllStreamData(std::make_shared<RemoteBlockInputStream>(connection, query, context));\n+        Block block = getBlockWithAllStreamData(std::make_shared<RemoteBlockInputStream>(\n+            connection, query, InterpreterExistsQuery::getSampleBlock(), context));\n         return block.safeGetByPosition(0).column->getUInt(0) != 0;\n     }\n \n     String getRemoteCreateTable(const DatabaseAndTableName & table, Connection & connection, const Settings * settings = nullptr)\n     {\n         String query = \"SHOW CREATE TABLE \" + getDatabaseDotTable(table);\n-        Block block = getBlockWithAllStreamData(std::make_shared<RemoteBlockInputStream>(connection, query, context, settings));\n+        Block block = getBlockWithAllStreamData(std::make_shared<RemoteBlockInputStream>(\n+            connection, query, InterpreterShowCreateQuery::getSampleBlock(), context, settings));\n \n         return typeid_cast<const ColumnString &>(*block.safeGetByPosition(0).column).getDataAt(0).toString();\n     }\n@@ -1426,7 +1431,8 @@ class ClusterCopier\n                << \" database = \" << DB::quote << table.first\n                << \" AND table = \" << DB::quote << table.second;\n \n-            block = getBlockWithAllStreamData(std::make_shared<RemoteBlockInputStream>(connection, wb.str(), context, settings));\n+            block = getBlockWithAllStreamData(std::make_shared<RemoteBlockInputStream>(\n+                connection, wb.str(), Block{{ ColumnString::create(), std::make_shared<DataTypeString>(), \"partition\" }}, context, settings));\n         }\n \n         Strings res;\n@@ -1449,8 +1455,8 @@ class ClusterCopier\n     }\n \n     /** Executes simple query (without output streams, for example DDL queries) on each shard of the cluster\n-     * Returns number of shards for which at least one replica executed query successfully\n-     */\n+      * Returns number of shards for which at least one replica executed query successfully\n+      */\n     size_t executeQueryOnCluster(\n         const ClusterPtr & cluster,\n         const String & query,\n@@ -1513,7 +1519,7 @@ class ClusterCopier\n                     {\n                         try\n                         {\n-                            RemoteBlockInputStream stream(*connection, query, context, &current_settings);\n+                            RemoteBlockInputStream stream(*connection, query, {}, context, &current_settings);\n                             NullBlockOutputStream output;\n                             copyData(stream, output);\n \ndiff --git a/dbms/src/Server/PerformanceTest.cpp b/dbms/src/Server/PerformanceTest.cpp\nindex e111c53f7cab..d5239ac0e49a 100644\n--- a/dbms/src/Server/PerformanceTest.cpp\n+++ b/dbms/src/Server/PerformanceTest.cpp\n@@ -1087,7 +1087,7 @@ class PerformanceTest\n         statistics.last_query_rows_read = 0;\n         statistics.last_query_bytes_read = 0;\n \n-        RemoteBlockInputStream stream(connection, query, global_context, &settings);\n+        RemoteBlockInputStream stream(connection, query, {}, global_context, &settings);\n \n         stream.setProgressCallback(\n             [&](const Progress & value) { this->checkFulfilledConditionsAndUpdate(value, stream, statistics, stop_conditions); });\ndiff --git a/dbms/src/Server/TCPHandler.cpp b/dbms/src/Server/TCPHandler.cpp\nindex 8aec67aa2ba4..e27d4f088e0e 100644\n--- a/dbms/src/Server/TCPHandler.cpp\n+++ b/dbms/src/Server/TCPHandler.cpp\n@@ -32,6 +32,7 @@\n \n #include <Common/NetException.h>\n \n+\n namespace DB\n {\n \n@@ -302,8 +303,11 @@ void TCPHandler::processOrdinaryQuery()\n     if (state.io.in)\n     {\n         /// Send header-block, to allow client to prepare output format for data to send.\n-        if (state.io.in_sample)\n-            sendData(state.io.in_sample);\n+        {\n+            Block header = state.io.in->getHeader();\n+            if (header)\n+                sendData(header);\n+        }\n \n         AsynchronousBlockInputStream async_in(state.io.in);\n         async_in.readPrefix();\n@@ -338,12 +342,12 @@ void TCPHandler::processOrdinaryQuery()\n                 }\n             }\n \n-        /** If data has run out, we will send the profiling data and total values to\n-          * the last zero block to be able to use\n-          * this information in the suffix output of stream.\n-          * If the request was interrupted, then `sendTotals` and other methods could not be called,\n-          *  because we have not read all the data yet,\n-          *  and there could be ongoing calculations in other threads at the same time.\n+            /** If data has run out, we will send the profiling data and total values to\n+              * the last zero block to be able to use\n+              * this information in the suffix output of stream.\n+              * If the request was interrupted, then `sendTotals` and other methods could not be called,\n+              *  because we have not read all the data yet,\n+              *  and there could be ongoing calculations in other threads at the same time.\n               */\n             if (!block && !isQueryCancelled())\n             {\n@@ -709,7 +713,7 @@ bool TCPHandler::isQueryCancelled()\n }\n \n \n-void TCPHandler::sendData(Block & block)\n+void TCPHandler::sendData(const Block & block)\n {\n     initBlockOutput();\n \ndiff --git a/dbms/src/Server/TCPHandler.h b/dbms/src/Server/TCPHandler.h\nindex e699e5b44ebb..93b82acd7ead 100644\n--- a/dbms/src/Server/TCPHandler.h\n+++ b/dbms/src/Server/TCPHandler.h\n@@ -130,7 +130,7 @@ class TCPHandler : public Poco::Net::TCPServerConnection\n     void processTablesStatusRequest();\n \n     void sendHello();\n-    void sendData(Block & block);    /// Write a block to the network.\n+    void sendData(const Block & block);    /// Write a block to the network.\n     void sendException(const Exception & e);\n     void sendProgress();\n     void sendEndOfStream();\ndiff --git a/dbms/src/Storages/ITableDeclaration.cpp b/dbms/src/Storages/ITableDeclaration.cpp\nindex 8bc53a8163cf..da4cc920608e 100644\n--- a/dbms/src/Storages/ITableDeclaration.cpp\n+++ b/dbms/src/Storages/ITableDeclaration.cpp\n@@ -121,6 +121,20 @@ Block ITableDeclaration::getSampleBlockNonMaterialized() const\n }\n \n \n+Block ITableDeclaration::getSampleBlockForColumns(const Names & column_names) const\n+{\n+    Block res;\n+\n+    for (const auto & name : column_names)\n+    {\n+        auto col = getColumn(name);\n+        res.insert({ col.type->createColumn(), col.type, name });\n+    }\n+\n+    return res;\n+}\n+\n+\n static std::string listOfColumns(const NamesAndTypesList & available_columns)\n {\n     std::stringstream s;\ndiff --git a/dbms/src/Storages/ITableDeclaration.h b/dbms/src/Storages/ITableDeclaration.h\nindex 19c57d45e40e..335ca7ace3d2 100644\n--- a/dbms/src/Storages/ITableDeclaration.h\n+++ b/dbms/src/Storages/ITableDeclaration.h\n@@ -59,6 +59,7 @@ class ITableDeclaration\n       */\n     Block getSampleBlock() const;\n     Block getSampleBlockNonMaterialized() const;\n+    Block getSampleBlockForColumns(const Names & column_names) const;\n \n     /** Verify that all the requested names are in the table and are set correctly.\n       * (the list of names is not empty and the names do not repeat)\ndiff --git a/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp b/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp\nindex 7b93c1fd1811..fcfb00084cfd 100644\n--- a/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp\n+++ b/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp\n@@ -62,26 +62,13 @@ MergeTreeBlockInputStream::MergeTreeBlockInputStream(\n     setTotalRowsApprox(total_rows);\n }\n \n-String MergeTreeBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"MergeTree(\" << path << \", columns\";\n-\n-    for (const NameAndTypePair & column : columns)\n-        res << \", \" << column.name;\n-\n-    if (prewhere_actions)\n-        res << \", prewhere, \" << prewhere_actions->getID();\n \n-    res << \", marks\";\n-\n-    for (size_t i = 0; i < all_mark_ranges.size(); ++i)\n-        res << \", \" << all_mark_ranges[i].begin << \", \" << all_mark_ranges[i].end;\n-\n-    res << \")\";\n-    return res.str();\n+Block MergeTreeBlockInputStream::getHeader() const\n+{\n+    return storage.getSampleBlockForColumns(ordered_names);\n }\n \n+\n bool MergeTreeBlockInputStream::getNewTask()\n try\n {\ndiff --git a/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.h b/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.h\nindex 6eb9c2e85778..9739cfd49fca 100644\n--- a/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.h\n+++ b/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.h\n@@ -38,7 +38,7 @@ class MergeTreeBlockInputStream : public MergeTreeBaseBlockInputStream\n \n     String getName() const override { return \"MergeTree\"; }\n \n-    String getID() const override;\n+    Block getHeader() const override;\n \n     /// Closes readers and unlock part locks\n     void finish();\ndiff --git a/dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp b/dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp\nindex 9ded38715bca..79d5d226f31e 100644\n--- a/dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp\n+++ b/dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp\n@@ -475,7 +475,7 @@ BlockInputStreams MergeTreeDataSelectExecutor::read(\n \n             filter_expression = ExpressionAnalyzer(filter_function, context, nullptr, available_real_columns).getActions(false);\n \n-            /// Add columns needed for `sampling_expression`.\n+            /// Add columns needed for `sampling_expression` to `column_names_to_read`.\n             std::vector<String> add_columns = filter_expression->getRequiredColumns();\n             column_names_to_read.insert(column_names_to_read.end(), add_columns.begin(), add_columns.end());\n             std::sort(column_names_to_read.begin(), column_names_to_read.end());\n@@ -508,7 +508,7 @@ BlockInputStreams MergeTreeDataSelectExecutor::read(\n           * They are done before the execution of the pipeline; they can not be interrupted; during the computation, packets of progress are not sent.\n           */\n         if (!prewhere_subqueries.empty())\n-            CreatingSetsBlockInputStream(std::make_shared<NullBlockInputStream>(), prewhere_subqueries, settings.limits).read();\n+            CreatingSetsBlockInputStream(std::make_shared<NullBlockInputStream>(Block()), prewhere_subqueries, settings.limits).read();\n     }\n \n     RangesInDataParts parts_with_ranges;\ndiff --git a/dbms/src/Storages/MergeTree/MergeTreeReadPool.cpp b/dbms/src/Storages/MergeTree/MergeTreeReadPool.cpp\nindex c30ddb3d27b3..e95c576274c6 100644\n--- a/dbms/src/Storages/MergeTree/MergeTreeReadPool.cpp\n+++ b/dbms/src/Storages/MergeTree/MergeTreeReadPool.cpp\n@@ -117,6 +117,12 @@ MergeTreeReadTaskPtr MergeTreeReadPool::getTask(const size_t min_marks_to_read,\n }\n \n \n+Block MergeTreeReadPool::getHeader() const\n+{\n+    return data.getSampleBlockForColumns(column_names);\n+}\n+\n+\n void MergeTreeReadPool::profileFeedback(const ReadBufferFromFileBase::ProfileInfo info)\n {\n     if (backoff_settings.min_read_latency_ms == 0 || do_not_steal_tasks)\ndiff --git a/dbms/src/Storages/MergeTree/MergeTreeReadPool.h b/dbms/src/Storages/MergeTree/MergeTreeReadPool.h\nindex e93a248bab1f..cf7a9c71ef16 100644\n--- a/dbms/src/Storages/MergeTree/MergeTreeReadPool.h\n+++ b/dbms/src/Storages/MergeTree/MergeTreeReadPool.h\n@@ -79,6 +79,8 @@ class MergeTreeReadPool : private boost::noncopyable\n       */\n     void profileFeedback(const ReadBufferFromFileBase::ProfileInfo info);\n \n+    Block getHeader() const;\n+\n private:\n     std::vector<size_t> fillPerPartInfo(\n         RangesInDataParts & parts, const ExpressionActionsPtr & prewhere_actions, const String & prewhere_column_name,\ndiff --git a/dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.cpp b/dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.cpp\nindex b4e1cff0c930..ec961f28a99e 100644\n--- a/dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.cpp\n+++ b/dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.cpp\n@@ -38,13 +38,10 @@ MergeTreeThreadBlockInputStream::MergeTreeThreadBlockInputStream(\n }\n \n \n-String MergeTreeThreadBlockInputStream::getID() const\n+Block MergeTreeThreadBlockInputStream::getHeader() const\n {\n-    std::stringstream res;\n-    /// @todo print some meaningful information\n-    res << static_cast<const void *>(this);\n-    return res.str();\n-}\n+    return pool->getHeader();\n+};\n \n \n /// Requests read task from MergeTreeReadPool and signals whether it got one\ndiff --git a/dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.h b/dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.h\nindex 058746a5d15d..1a9c9a11befb 100644\n--- a/dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.h\n+++ b/dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.h\n@@ -1,5 +1,5 @@\n #pragma once\n-#include \"MergeTreeBaseBlockInputStream.h\"\n+#include <Storages/MergeTree/MergeTreeBaseBlockInputStream.h>\n \n \n namespace DB\n@@ -30,10 +30,10 @@ class MergeTreeThreadBlockInputStream : public MergeTreeBaseBlockInputStream\n \n     String getName() const override { return \"MergeTreeThread\"; }\n \n-    String getID() const override;\n-\n     ~MergeTreeThreadBlockInputStream() override;\n \n+    Block getHeader() const override;\n+\n protected:\n     /// Requests read task from MergeTreeReadPool and signals whether it got one\n     bool getNewTask() override;\ndiff --git a/dbms/src/Storages/MergeTree/ReplicatedMergeTreeBlockOutputStream.cpp b/dbms/src/Storages/MergeTree/ReplicatedMergeTreeBlockOutputStream.cpp\nindex bdcad7f0fe17..80992a79935a 100644\n--- a/dbms/src/Storages/MergeTree/ReplicatedMergeTreeBlockOutputStream.cpp\n+++ b/dbms/src/Storages/MergeTree/ReplicatedMergeTreeBlockOutputStream.cpp\n@@ -417,7 +417,6 @@ void ReplicatedMergeTreeBlockOutputStream::commitPart(zkutil::ZooKeeperPtr & zoo\n                         + zkutil::ZooKeeper::error2string(info.code), ErrorCodes::UNEXPECTED_ZOOKEEPER_ERROR);\n     }\n \n-\n     if (quorum)\n     {\n         /// We are waiting for quorum to be satisfied.\ndiff --git a/dbms/src/Storages/StorageBuffer.cpp b/dbms/src/Storages/StorageBuffer.cpp\nindex ced007a4ced6..ec4f7b498da7 100644\n--- a/dbms/src/Storages/StorageBuffer.cpp\n+++ b/dbms/src/Storages/StorageBuffer.cpp\n@@ -71,25 +71,15 @@ StorageBuffer::StorageBuffer(const std::string & name_, const NamesAndTypesList\n class BufferBlockInputStream : public IProfilingBlockInputStream\n {\n public:\n-    BufferBlockInputStream(const Names & column_names_, StorageBuffer::Buffer & buffer_)\n-        : column_names(column_names_.begin(), column_names_.end()), buffer(buffer_) {}\n+    BufferBlockInputStream(const Names & column_names_, StorageBuffer::Buffer & buffer_, const StorageBuffer & storage_)\n+        : column_names(column_names_.begin(), column_names_.end()), buffer(buffer_), storage(storage_) {}\n \n-    String getName() const { return \"Buffer\"; }\n+    String getName() const override { return \"Buffer\"; }\n \n-    String getID() const\n-    {\n-        std::stringstream res;\n-        res << \"Buffer(\" << &buffer;\n-\n-        for (const auto & name : column_names)\n-            res << \", \" << name;\n-\n-        res << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override { return storage.getSampleBlockForColumns(column_names); };\n \n protected:\n-    Block readImpl()\n+    Block readImpl() override\n     {\n         Block res;\n \n@@ -111,6 +101,7 @@ class BufferBlockInputStream : public IProfilingBlockInputStream\n private:\n     Names column_names;\n     StorageBuffer::Buffer & buffer;\n+    const StorageBuffer & storage;\n     bool has_been_read = false;\n };\n \n@@ -140,7 +131,7 @@ BlockInputStreams StorageBuffer::read(\n     BlockInputStreams streams_from_buffers;\n     streams_from_buffers.reserve(num_shards);\n     for (auto & buf : buffers)\n-        streams_from_buffers.push_back(std::make_shared<BufferBlockInputStream>(column_names, buf));\n+        streams_from_buffers.push_back(std::make_shared<BufferBlockInputStream>(column_names, buf, *this));\n \n     /** If the sources from the table were processed before some non-initial stage of query execution,\n       * then sources from the buffers must also be wrapped in the processing pipeline before the same stage.\ndiff --git a/dbms/src/Storages/StorageCatBoostPool.cpp b/dbms/src/Storages/StorageCatBoostPool.cpp\nindex d6c1b4291b98..d484158b0181 100644\n--- a/dbms/src/Storages/StorageCatBoostPool.cpp\n+++ b/dbms/src/Storages/StorageCatBoostPool.cpp\n@@ -39,11 +39,6 @@ class CatBoostDatasetBlockInputStream : public IProfilingBlockInputStream\n         return \"CatBoostDatasetBlockInputStream\";\n     }\n \n-    String getID() const override\n-    {\n-        return \"CatBoostDataset(\" + format_name + \", \" + file_name + \")\";\n-    }\n-\n     Block readImpl() override\n     {\n         return reader->read();\n@@ -59,6 +54,8 @@ class CatBoostDatasetBlockInputStream : public IProfilingBlockInputStream\n         reader->readSuffix();\n     }\n \n+    Block getHeader() const override { return sample_block; };\n+\n private:\n     Block sample_block;\n     std::unique_ptr<ReadBufferFromFileDescriptor> read_buf;\ndiff --git a/dbms/src/Storages/StorageDistributed.cpp b/dbms/src/Storages/StorageDistributed.cpp\nindex 747fc8ff4fac..e6683d6218bf 100644\n--- a/dbms/src/Storages/StorageDistributed.cpp\n+++ b/dbms/src/Storages/StorageDistributed.cpp\n@@ -1,6 +1,4 @@\n-#include <DataStreams/RemoteBlockInputStream.h>\n-#include <DataStreams/BlockExtraInfoInputStream.h>\n-#include <DataStreams/UnionBlockInputStream.h>\n+#include <DataStreams/OneBlockInputStream.h>\n \n #include <Databases/IDatabase.h>\n \n@@ -172,7 +170,7 @@ StoragePtr StorageDistributed::createWithOwnCluster(\n \n \n BlockInputStreams StorageDistributed::read(\n-    const Names & /*column_names*/,\n+    const Names & column_names,\n     const SelectQueryInfo & query_info,\n     const Context & context,\n     QueryProcessingStage::Enum & processed_stage,\n@@ -197,11 +195,14 @@ BlockInputStreams StorageDistributed::read(\n     if (settings.global_subqueries_method == GlobalSubqueriesMethod::PUSH)\n         external_tables = context.getExternalTables();\n \n+    Block header = InterpreterSelectQuery(query_info.query, context, processed_stage, 0,\n+        std::make_shared<OneBlockInputStream>(getSampleBlockForColumns(column_names))).execute().in->getHeader();\n+\n     ClusterProxy::SelectStreamFactory select_stream_factory(\n-        processed_stage, QualifiedTableName{remote_database, remote_table}, external_tables);\n+        header, processed_stage, QualifiedTableName{remote_database, remote_table}, external_tables);\n \n     return ClusterProxy::executeQuery(\n-            select_stream_factory, cluster, modified_query_ast, context, settings);\n+        select_stream_factory, cluster, modified_query_ast, context, settings);\n }\n \n \ndiff --git a/dbms/src/Storages/StorageFile.cpp b/dbms/src/Storages/StorageFile.cpp\nindex 57d567ff9039..1bbe9d6d00c9 100644\n--- a/dbms/src/Storages/StorageFile.cpp\n+++ b/dbms/src/Storages/StorageFile.cpp\n@@ -98,7 +98,6 @@ StorageFile::StorageFile(\n class StorageFileBlockInputStream : public IProfilingBlockInputStream\n {\n public:\n-\n     StorageFileBlockInputStream(StorageFile & storage_, const Context & context, size_t max_block_size)\n         : storage(storage_)\n     {\n@@ -145,23 +144,13 @@ class StorageFileBlockInputStream : public IProfilingBlockInputStream\n         return storage.getName();\n     }\n \n-    String getID() const override\n-    {\n-        std::stringstream res_stream;\n-        res_stream << \"File(\" << storage.format_name << \", \";\n-        if (!storage.path.empty())\n-            res_stream << storage.path;\n-        else\n-            res_stream << storage.table_fd;\n-        res_stream << \")\";\n-        return res_stream.str();\n-    }\n-\n     Block readImpl() override\n     {\n         return reader->read();\n     }\n \n+    Block getHeader() const override { return reader->getHeader(); };\n+\n     void readPrefixImpl() override\n     {\n         reader->readPrefix();\ndiff --git a/dbms/src/Storages/StorageKafka.cpp b/dbms/src/Storages/StorageKafka.cpp\nindex 61236d34c323..c7ac83d11421 100644\n--- a/dbms/src/Storages/StorageKafka.cpp\n+++ b/dbms/src/Storages/StorageKafka.cpp\n@@ -108,7 +108,8 @@ class ReadBufferFromKafkaConsumer : public ReadBuffer\n     ~ReadBufferFromKafkaConsumer() { reset(); }\n \n     /// Commit messages read with this consumer\n-    void commit() {\n+    void commit()\n+    {\n         LOG_TRACE(log, \"Committing \" << read_messages << \" messages\");\n         if (read_messages == 0)\n             return;\n@@ -160,13 +161,6 @@ class KafkaBlockInputStream : public IProfilingBlockInputStream\n         return storage.getName();\n     }\n \n-    String getID() const override\n-    {\n-        std::stringstream res_stream;\n-        res_stream << \"Kafka(\" << storage.topics.size() << \", \" << storage.format_name << \")\";\n-        return res_stream.str();\n-    }\n-\n     Block readImpl() override\n     {\n         if (isCancelled())\n@@ -175,6 +169,8 @@ class KafkaBlockInputStream : public IProfilingBlockInputStream\n         return reader->read();\n     }\n \n+    Block getHeader() const override { return reader->getHeader(); };\n+\n     void readPrefixImpl() override\n     {\n         // Start reading data\ndiff --git a/dbms/src/Storages/StorageLog.cpp b/dbms/src/Storages/StorageLog.cpp\nindex 6fdcaa2ed6ac..443510fea42f 100644\n--- a/dbms/src/Storages/StorageLog.cpp\n+++ b/dbms/src/Storages/StorageLog.cpp\n@@ -62,17 +62,15 @@ class LogBlockInputStream final : public IProfilingBlockInputStream\n \n     String getName() const override { return \"Log\"; }\n \n-    String getID() const override\n+    Block getHeader() const override\n     {\n-        std::stringstream res;\n-        res << \"Log(\" << storage.getTableName() << \", \" << &storage << \", \" << mark_number << \", \" << rows_limit;\n+        Block res;\n \n         for (const auto & name_type : columns)\n-            res << \", \" << name_type.name;\n+            res.insert({ name_type.type->createColumn(), name_type.type, name_type.name });\n \n-        res << \")\";\n-        return res.str();\n-    }\n+        return Nested::flatten(res);\n+    };\n \n protected:\n     Block readImpl() override;\ndiff --git a/dbms/src/Storages/StorageMemory.cpp b/dbms/src/Storages/StorageMemory.cpp\nindex db4be02635cc..89ce474b065d 100644\n--- a/dbms/src/Storages/StorageMemory.cpp\n+++ b/dbms/src/Storages/StorageMemory.cpp\n@@ -20,22 +20,12 @@ namespace ErrorCodes\n class MemoryBlockInputStream : public IProfilingBlockInputStream\n {\n public:\n-    MemoryBlockInputStream(const Names & column_names_, BlocksList::iterator begin_, BlocksList::iterator end_)\n-        : column_names(column_names_), begin(begin_), end(end_), it(begin) {}\n+    MemoryBlockInputStream(const Names & column_names_, BlocksList::iterator begin_, BlocksList::iterator end_, const StorageMemory & storage_)\n+        : column_names(column_names_), begin(begin_), end(end_), it(begin), storage(storage_) {}\n \n     String getName() const override { return \"Memory\"; }\n \n-    String getID() const override\n-    {\n-        std::stringstream res;\n-        res << \"Memory(\" << &*begin << \", \" << &*end;\n-\n-        for (const auto & name : column_names)\n-            res << \", \" << name;\n-\n-        res << \")\";\n-        return res.str();\n-    }\n+    Block getHeader() const override { return storage.getSampleBlockForColumns(column_names); }\n \n protected:\n     Block readImpl() override\n@@ -62,6 +52,7 @@ class MemoryBlockInputStream : public IProfilingBlockInputStream\n     BlocksList::iterator begin;\n     BlocksList::iterator end;\n     BlocksList::iterator it;\n+    const StorageMemory & storage;\n };\n \n \n@@ -121,7 +112,7 @@ BlockInputStreams StorageMemory::read(\n         std::advance(begin, stream * size / num_streams);\n         std::advance(end, (stream + 1) * size / num_streams);\n \n-        res.push_back(std::make_shared<MemoryBlockInputStream>(column_names, begin, end));\n+        res.push_back(std::make_shared<MemoryBlockInputStream>(column_names, begin, end, *this));\n     }\n \n     return res;\ndiff --git a/dbms/src/Storages/StorageMerge.cpp b/dbms/src/Storages/StorageMerge.cpp\nindex 1e9a590714bd..39be47eab9b2 100644\n--- a/dbms/src/Storages/StorageMerge.cpp\n+++ b/dbms/src/Storages/StorageMerge.cpp\n@@ -137,6 +137,7 @@ BlockInputStreams StorageMerge::read(\n     const unsigned num_streams)\n {\n     BlockInputStreams res;\n+    Block header = getSampleBlockForColumns(column_names);\n \n     Names virt_column_names, real_column_names;\n     for (const auto & it : column_names)\n@@ -223,13 +224,13 @@ BlockInputStreams StorageMerge::read(\n             for (auto & stream : source_streams)\n             {\n                 /// will throw if some columns not convertible\n-                stream = std::make_shared<CastTypeBlockInputStream>(context, stream, getSampleBlock());\n+                stream = std::make_shared<CastTypeBlockInputStream>(context, stream, header);\n             }\n         }\n         else\n         {\n             /// If many streams, initialize it lazily, to avoid long delay before start of query processing.\n-            source_streams.emplace_back(std::make_shared<LazyBlockInputStream>([=]\n+            source_streams.emplace_back(std::make_shared<LazyBlockInputStream>(header, [=]\n             {\n                 QueryProcessingStage::Enum processed_stage_in_source_table = processed_stage;\n                 BlockInputStreams streams = table->read(\n@@ -247,11 +248,11 @@ BlockInputStreams StorageMerge::read(\n                     throw Exception(\"Source tables for Merge table are processing data up to different stages\",\n                         ErrorCodes::INCOMPATIBLE_SOURCE_TABLES);\n \n-                auto stream = streams.empty() ? std::make_shared<NullBlockInputStream>() : streams.front();\n+                auto stream = streams.empty() ? std::make_shared<NullBlockInputStream>(header) : streams.front();\n                 if (!streams.empty())\n                 {\n                     /// will throw if some columns not convertible\n-                    stream = std::make_shared<CastTypeBlockInputStream>(context, stream, getSampleBlock());\n+                    stream = std::make_shared<CastTypeBlockInputStream>(context, stream, header);\n                 }\n                 return stream;\n             }));\ndiff --git a/dbms/src/Storages/StorageNull.h b/dbms/src/Storages/StorageNull.h\nindex b2d3fb557bf2..e413ff2d9303 100644\n--- a/dbms/src/Storages/StorageNull.h\n+++ b/dbms/src/Storages/StorageNull.h\n@@ -21,14 +21,14 @@ class StorageNull : public ext::shared_ptr_helper<StorageNull>, public IStorage\n     std::string getTableName() const override { return name; }\n \n     BlockInputStreams read(\n-        const Names &,\n+        const Names & column_names,\n         const SelectQueryInfo &,\n         const Context &,\n         QueryProcessingStage::Enum &,\n         size_t,\n         unsigned) override\n     {\n-        return { std::make_shared<NullBlockInputStream>() };\n+        return { std::make_shared<NullBlockInputStream>(getSampleBlockForColumns(column_names)) };\n     }\n \n     BlockOutputStreamPtr write(const ASTPtr &, const Settings &) override\ndiff --git a/dbms/src/Storages/StorageReplicatedMergeTree.cpp b/dbms/src/Storages/StorageReplicatedMergeTree.cpp\nindex d5c1075e07ef..14cc102f6095 100644\n--- a/dbms/src/Storages/StorageReplicatedMergeTree.cpp\n+++ b/dbms/src/Storages/StorageReplicatedMergeTree.cpp\n@@ -1669,7 +1669,7 @@ namespace\n \n             if (left->info.max_block <= part_info.min_block && right->info.min_block >= part_info.max_block)\n             {\n-                if (out_reason) \n+                if (out_reason)\n                     *out_reason = \"Quorum 'last part' condition is unsatisfied\";\n                 return false;\n             }\n@@ -3213,7 +3213,7 @@ void StorageReplicatedMergeTree::sendRequestToLeaderReplica(const ASTPtr & query\n         leader_address.database,\n         \"\", \"\", timeouts, \"ClickHouse replica\");\n \n-    RemoteBlockInputStream stream(connection, formattedAST(new_query), context, &settings);\n+    RemoteBlockInputStream stream(connection, formattedAST(new_query), {}, context, &settings);\n     NullBlockOutputStream output;\n \n     copyData(stream, output);\ndiff --git a/dbms/src/Storages/StorageSet.cpp b/dbms/src/Storages/StorageSet.cpp\nindex 3ec37897348b..498e475a4653 100644\n--- a/dbms/src/Storages/StorageSet.cpp\n+++ b/dbms/src/Storages/StorageSet.cpp\n@@ -157,7 +157,7 @@ void StorageSetOrJoinBase::restoreFromFile(const String & file_path)\n {\n     ReadBufferFromFile backup_buf(file_path);\n     CompressedReadBuffer compressed_backup_buf(backup_buf);\n-    NativeBlockInputStream backup_stream(compressed_backup_buf);\n+    NativeBlockInputStream backup_stream(compressed_backup_buf, 0);\n \n     backup_stream.readPrefix();\n     while (Block block = backup_stream.read())\ndiff --git a/dbms/src/Storages/StorageStripeLog.cpp b/dbms/src/Storages/StorageStripeLog.cpp\nindex 62e9c3cc9985..1d2d31e27bb8 100644\n--- a/dbms/src/Storages/StorageStripeLog.cpp\n+++ b/dbms/src/Storages/StorageStripeLog.cpp\n@@ -21,6 +21,8 @@\n #include <DataStreams/NativeBlockOutputStream.h>\n #include <DataStreams/NullBlockInputStream.h>\n \n+#include <DataTypes/DataTypeFactory.h>\n+\n #include <Columns/ColumnArray.h>\n \n #include <Interpreters/Context.h>\n@@ -57,28 +59,25 @@ class StripeLogBlockInputStream final : public IProfilingBlockInputStream\n \n     String getName() const override { return \"StripeLog\"; }\n \n-    String getID() const override\n+    Block getHeader() const override\n     {\n-        std::stringstream s;\n-        s << this;\n-        return s.str();\n-    }\n+        if (index_begin == index_end)\n+            return {};\n+\n+        Block header;\n+        for (const auto & column : index_begin->columns)\n+        {\n+            auto type = DataTypeFactory::instance().get(column.type);\n+            header.insert({ type->createColumn(), type, column.name });\n+        }\n+        return header;\n+    };\n \n protected:\n     Block readImpl() override\n     {\n         Block res;\n-\n-        if (!started)\n-        {\n-            started = true;\n-\n-            data_in.emplace(\n-                storage.full_path() + \"data.bin\", 0, 0,\n-                std::min(static_cast<Poco::File::FileSize>(max_read_buffer_size), Poco::File(storage.full_path() + \"data.bin\").getSize()));\n-\n-            block_in.emplace(*data_in, 0, true, index_begin, index_end);\n-        }\n+        start();\n \n         if (block_in)\n         {\n@@ -111,6 +110,20 @@ class StripeLogBlockInputStream final : public IProfilingBlockInputStream\n     bool started = false;\n     std::optional<CompressedReadBufferFromFile> data_in;\n     std::optional<NativeBlockInputStream> block_in;\n+\n+    void start()\n+    {\n+        if (!started)\n+        {\n+            started = true;\n+\n+            data_in.emplace(\n+                storage.full_path() + \"data.bin\", 0, 0,\n+                std::min(static_cast<Poco::File::FileSize>(max_read_buffer_size), Poco::File(storage.full_path() + \"data.bin\").getSize()));\n+\n+            block_in.emplace(*data_in, 0, index_begin, index_end);\n+        }\n+    }\n };\n \n \n@@ -232,7 +245,7 @@ BlockInputStreams StorageStripeLog::read(\n     NameSet column_names_set(column_names.begin(), column_names.end());\n \n     if (!Poco::File(full_path() + \"index.mrk\").exists())\n-        return { std::make_shared<NullBlockInputStream>() };\n+        return { std::make_shared<NullBlockInputStream>(getSampleBlockForColumns(column_names)) };\n \n     CompressedReadBufferFromFile index_in(full_path() + \"index.mrk\", 0, 0, INDEX_BUFFER_SIZE);\n     std::shared_ptr<const IndexForNativeFormat> index{std::make_shared<IndexForNativeFormat>(index_in, column_names_set)};\ndiff --git a/dbms/src/Storages/StorageTinyLog.cpp b/dbms/src/Storages/StorageTinyLog.cpp\nindex 23d1e0c44759..957d1ca9affb 100644\n--- a/dbms/src/Storages/StorageTinyLog.cpp\n+++ b/dbms/src/Storages/StorageTinyLog.cpp\n@@ -60,7 +60,15 @@ class TinyLogBlockInputStream final : public IProfilingBlockInputStream\n \n     String getName() const override { return \"TinyLog\"; }\n \n-    String getID() const override;\n+    Block getHeader() const override\n+    {\n+        Block res;\n+\n+        for (const auto & name_type : columns)\n+            res.insert({ name_type.type->createColumn(), name_type.type, name_type.name });\n+\n+        return Nested::flatten(res);\n+    };\n \n protected:\n     Block readImpl() override;\n@@ -144,19 +152,6 @@ class TinyLogBlockOutputStream final : public IBlockOutputStream\n };\n \n \n-String TinyLogBlockInputStream::getID() const\n-{\n-    std::stringstream res;\n-    res << \"TinyLog(\" << storage.getTableName() << \", \" << &storage;\n-\n-    for (const auto & name_type : columns)\n-        res << \", \" << name_type.name;\n-\n-    res << \")\";\n-    return res.str();\n-}\n-\n-\n Block TinyLogBlockInputStream::readImpl()\n {\n     Block res;\ndiff --git a/dbms/src/Storages/System/StorageSystemNumbers.cpp b/dbms/src/Storages/System/StorageSystemNumbers.cpp\nindex 4a9e85049e76..30586bbbba35 100644\n--- a/dbms/src/Storages/System/StorageSystemNumbers.cpp\n+++ b/dbms/src/Storages/System/StorageSystemNumbers.cpp\n@@ -15,11 +15,15 @@ class NumbersBlockInputStream : public IProfilingBlockInputStream\n     NumbersBlockInputStream(size_t block_size_, size_t offset_, size_t step_)\n         : block_size(block_size_), next(offset_), step(step_) {}\n \n-    String getName() const { return \"Numbers\"; }\n-    String getID() const { return \"Numbers\"; }\n+    String getName() const override { return \"Numbers\"; }\n+\n+    Block getHeader() const override\n+    {\n+        return { ColumnWithTypeAndName(ColumnUInt64::create(), std::make_shared<DataTypeUInt64>(), \"number\") };\n+    }\n \n protected:\n-    Block readImpl()\n+    Block readImpl() override\n     {\n         auto column = ColumnUInt64::create(block_size);\n         ColumnUInt64::Container & vec = column->getData();\ndiff --git a/dbms/src/TableFunctions/getStructureOfRemoteTable.cpp b/dbms/src/TableFunctions/getStructureOfRemoteTable.cpp\nindex 8f0435608046..3cb68d254162 100644\n--- a/dbms/src/TableFunctions/getStructureOfRemoteTable.cpp\n+++ b/dbms/src/TableFunctions/getStructureOfRemoteTable.cpp\n@@ -1,5 +1,6 @@\n #include <Interpreters/Cluster.h>\n #include <Interpreters/Context.h>\n+#include <Interpreters/InterpreterDescribeQuery.h>\n #include <DataStreams/RemoteBlockInputStream.h>\n #include <DataTypes/DataTypeFactory.h>\n #include <Storages/IStorage.h>\n@@ -33,7 +34,7 @@ NamesAndTypesList getStructureOfRemoteTable(\n     if (shard_info.isLocal())\n         return context.getTable(database, table)->getColumnsList();\n \n-    auto input = std::make_shared<RemoteBlockInputStream>(shard_info.pool, query, context);\n+    auto input = std::make_shared<RemoteBlockInputStream>(shard_info.pool, query, InterpreterDescribeQuery::getSampleBlock(), context);\n     input->setPoolMode(PoolMode::GET_ONE);\n     input->setMainTable(QualifiedTableName{database, table});\n     input->readPrefix();\ndiff --git a/libs/libcommon/include/common/iostream_debug_helpers.h b/libs/libcommon/include/common/iostream_debug_helpers.h\nindex a33cfefe1010..09ab4de83e66 100644\n--- a/libs/libcommon/include/common/iostream_debug_helpers.h\n+++ b/libs/libcommon/include/common/iostream_debug_helpers.h\n@@ -15,7 +15,7 @@\n #include <vector>\n \n // TODO: https://stackoverflow.com/questions/16464032/how-to-enhance-this-variable-dumping-debug-macro-to-be-variadic\n-#define DUMPS(VAR) #VAR \" = \" << VAR\n+#define DUMPS(VAR) #VAR \" = \" << (VAR)\n #define DUMPHEAD std::cerr << __FILE__ << \":\" << __LINE__ << \" \"\n #define DUMP(V1) DUMPHEAD << DUMPS(V1) << \"\\n\";\n #define DUMP2(V1, V2) DUMPHEAD << DUMPS(V1) << \", \" << DUMPS(V2) << \"\\n\";\n",
  "test_patch": "diff --git a/dbms/src/Interpreters/tests/aggregate.cpp b/dbms/src/Interpreters/tests/aggregate.cpp\nindex d42d06f7cdd1..046dbf58d9e7 100644\n--- a/dbms/src/Interpreters/tests/aggregate.cpp\n+++ b/dbms/src/Interpreters/tests/aggregate.cpp\n@@ -70,10 +70,6 @@ int main(int argc, char ** argv)\n         BlockInputStreamPtr stream = std::make_shared<OneBlockInputStream>(block);\n         AggregatedDataVariants aggregated_data_variants;\n \n-        Names key_column_names;\n-        key_column_names.emplace_back(\"x\");\n-        key_column_names.emplace_back(\"s1\");\n-\n         AggregateFunctionFactory factory;\n \n         AggregateDescriptions aggregate_descriptions(1);\n@@ -81,7 +77,10 @@ int main(int argc, char ** argv)\n         DataTypes empty_list_of_types;\n         aggregate_descriptions[0].function = factory.get(\"count\", empty_list_of_types);\n \n-        Aggregator::Params params(key_column_names, aggregate_descriptions, false);\n+        Aggregator::Params params(\n+            stream->getHeader(), {0, 1}, aggregate_descriptions,\n+            false, 0, OverflowMode::THROW, nullptr, 0, 0, 0, 0, \"\");\n+\n         Aggregator aggregator(params);\n \n         {\ndiff --git a/dbms/tests/queries/0_stateless/00276_sample.reference b/dbms/tests/queries/0_stateless/00276_sample.reference\nindex 8fb4144f5a8c..90bf02ffd8d1 100644\n--- a/dbms/tests/queries/0_stateless/00276_sample.reference\n+++ b/dbms/tests/queries/0_stateless/00276_sample.reference\n@@ -8,6 +8,7 @@\n 5\t0\t4\t10\t5\n 26\t25\t50\t975\t26\n 26\t230\t255\t6305\t26\n+0\t0\t0\t0\t0\n 13\t243\t255\t3237\t13\n 1\n 256\t0\t255\t32640\t256\ndiff --git a/dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.reference b/dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.reference\nindex 49541f72104a..573541ac9702 100644\n--- a/dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.reference\n+++ b/dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.reference\n@@ -1,1 +1,1 @@\n-94\n+0\ndiff --git a/dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.sql b/dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.sql\nindex 39d5e53404e3..c45e27222a16 100644\n--- a/dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.sql\n+++ b/dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.sql\n@@ -4,6 +4,6 @@ CREATE TABLE test.ontime (FlightDate Date, Carrier String, FlightNum String) ENG\n \n INSERT INTO test.ontime VALUES ('1987-10-01','AA','2'),('1987-10-01','AA','2'),('1987-10-01','AA','7'),('1987-10-01','AA','7'),('1987-10-01','AA','26'),('1987-10-01','AA','34'),('1987-10-01','AA','36'),('1987-10-01','AA','91'),('1987-10-01','AA','101'),('1987-10-01','AA','101'),('1987-10-01','AA','109'),('1987-10-01','AA','109'),('1987-10-01','AA','112'),('1987-10-01','AA','123'),('1987-10-01','AA','160'),('1987-10-01','AA','165'),('1987-10-01','AA','165'),('1987-10-01','AA','165'),('1987-10-01','AA','176'),('1987-10-01','AA','176'),('1987-10-01','AA','176'),('1987-10-01','AA','176'),('1987-10-01','AA','179'),('1987-10-01','AA','179'),('1987-10-01','AA','215'),('1987-10-01','AA','215'),('1987-10-01','AA','231'),('1987-10-01','AA','231'),('1987-10-01','AA','263'),('1987-10-01','AA','263'),('1987-10-01','AA','268'),('1987-10-01','AA','268'),('1987-10-01','AA','281'),('1987-10-01','AA','287'),('1987-10-01','AA','287'),('1987-10-01','AA','309'),('1987-10-01','AA','309'),('1987-10-01','AA','309'),('1987-10-01','AA','341'),('1987-10-01','AA','344'),('1987-10-01','AA','344'),('1987-10-01','AA','347'),('1987-10-01','AA','347'),('1987-10-01','AA','368'),('1987-10-01','AA','381'),('1987-10-01','AA','381'),('1987-10-01','AA','381'),('1987-10-01','AA','396'),('1987-10-01','AA','396'),('1987-10-01','AA','397'),('1987-10-01','AA','397'),('1987-10-01','AA','417'),('1987-10-01','AA','417'),('1987-10-01','AA','446'),('1987-10-01','AA','451'),('1987-10-01','AA','451'),('1987-10-01','AA','460'),('1987-10-01','AA','460'),('1987-10-01','AA','491'),('1987-10-01','AA','504'),('1987-10-01','AA','504'),('1987-10-01','AA','519'),('1987-10-01','AA','519'),('1987-10-01','AA','523'),('1987-10-01','AA','523'),('1987-10-01','AA','525'),('1987-10-01','AA','525'),('1987-10-01','AA','525'),('1987-10-01','AA','533'),('1987-10-01','AA','533'),('1987-10-01','AA','533'),('1987-10-01','AA','546'),('1987-10-01','AA','546'),('1987-10-01','AA','556'),('1987-10-01','AA','556'),('1987-10-01','AA','556'),('1987-10-01','AA','597'),('1987-10-01','AA','597'),('1987-10-01','AA','597'),('1987-10-01','AA','601'),('1987-10-01','AA','601'),('1987-10-01','AA','627'),('1987-10-01','AA','670'),('1987-10-01','AA','673'),('1987-10-01','AA','673'),('1987-10-01','AA','680'),('1987-10-01','AA','680'),('1987-10-01','AA','817'),('1987-10-01','AA','817'),('1987-10-01','AA','824'),('1987-10-01','AA','824'),('1987-10-01','AA','824'),('1987-10-01','AA','824'),('1987-10-01','AA','832'),('1987-10-01','AA','832'),('1987-10-01','AA','852'),('1987-10-01','AA','852'),('1987-10-01','AA','866'),('1987-10-01','AA','866'),('1987-10-01','AA','871'),('1987-10-01','AA','871'),('1987-10-01','AA','880'),('1987-10-01','AA','880'),('1987-10-01','AA','880'),('1987-10-01','AA','880'),('1987-10-01','AA','883'),('1987-10-01','AA','883'),('1987-10-01','AA','885'),('1987-10-01','AA','885'),('1987-10-01','AA','885'),('1987-10-01','AA','890'),('1987-10-01','AA','893'),('1987-10-01','AA','893'),('1987-10-01','AA','905'),('1987-10-01','AA','905'),('1987-10-01','AA','929'),('1987-10-01','AA','929'),('1987-10-01','AA','936'),('1987-10-01','AA','936'),('1987-10-01','AA','937'),('1987-10-01','AA','937'),('1987-10-01','AA','955'),('1987-10-01','AA','966'),('1987-10-01','AA','1002'),('1987-10-01','AA','1002'),('1987-10-01','AA','1004'),('1987-10-01','AA','1004'),('1987-10-01','AA','1015'),('1987-10-01','AA','1015'),('1987-10-01','AA','1021'),('1987-10-01','AA','1021'),('1987-10-01','AA','1041'),('1987-10-01','AA','1041'),('1987-10-01','AA','1046'),('1987-10-01','AA','1046'),('1987-10-01','AA','1048'),('1987-10-01','AA','1048'),('1987-10-01','AA','1061'),('1987-10-01','AA','1061'),('1987-10-01','AA','1088'),('1987-10-01','AA','1088'),('1987-10-01','AA','2033'),('1987-10-01','AA','2033'),('1987-10-01','AA','2050'),('1987-10-01','AA','2058'),('1987-10-01','AA','2071'),('1987-10-01','AA','2071'),('1987-10-01','AA','2086'),('1987-10-01','AA','2105'),('1987-10-01','AA','2111'),('1987-10-01','AA','2123'),('1987-10-01','AA','2123'),('1987-10-01','AA','2147'),('1987-10-01','AA','2147'),('1987-10-01','AA','2199'),('1987-10-01','AA','2199'),('1987-10-01','AA','2207'),('1987-10-01','AA','2207'),('1987-10-01','AA','2217'),('1987-10-01','AA','2230'),('1987-10-01','AA','2245'),('1987-10-01','AA','2251'),('1987-10-01','AA','2251'),('1987-10-01','AA','2275'),('1987-10-01','AA','2278'),('1987-10-01','AA','2351'),('1987-10-01','AA','2357'),('1987-10-01','AA','2490'),('1987-10-01','AA','2528'),('1987-10-01','AA','2528'),('1987-10-01','AA','2735'),('1987-10-01','AA','2735'),('1987-10-01','AA','2751'),('1987-10-01','AL','2'),('1987-10-01','AL','2'),('1987-10-01','AL','7'),('1987-10-01','AL','7'),('1987-10-01','AL','26'),('1987-10-01','AL','26'),('1987-10-01','AL','34'),('1987-10-01','AL','34'),('1987-10-01','AL','36'),('1987-10-01','AL','36'),('1987-10-01','AL','45'),('1987-10-01','AL','45'),('1987-10-01','AL','45'),('1987-10-01','AL','91'),('1987-10-01','AL','91'),('1987-10-01','AL','104'),('1987-10-01','AL','104'),('1987-10-01','AL','104'),('1987-10-01','AL','109'),('1987-10-01','AL','112'),('1987-10-01','AL','112'),('1987-10-01','AL','123'),('1987-10-01','AL','149'),('1987-10-01','AL','160'),('1987-10-01','AL','160'),('1987-10-01','AL','165'),('1987-10-01','AL','171'),('1987-10-01','AL','171'),('1987-10-01','AL','176'),('1987-10-01','AL','176'),('1987-10-01','AL','179'),('1987-10-01','AL','215'),('1987-10-01','AL','231'),('1987-10-01','AL','263'),('1987-10-01','AL','263'),('1987-10-01','AL','268'),('1987-10-01','AL','268'),('1987-10-01','AL','268'),('1987-10-01','AL','281'),('1987-10-01','AL','281'),('1987-10-01','AL','287'),('1987-10-01','AL','287'),('1987-10-01','AL','309'),('1987-10-01','AL','309'),('1987-10-01','AL','341'),('1987-10-01','AL','344'),('1987-10-01','AL','344'),('1987-10-01','AL','357'),('1987-10-01','AL','357'),('1987-10-01','AL','368'),('1987-10-01','AL','381'),('1987-10-01','AL','396'),('1987-10-01','AL','397'),('1987-10-01','AL','397'),('1987-10-01','AL','416'),('1987-10-01','AL','416'),('1987-10-01','AL','417'),('1987-10-01','AL','438'),('1987-10-01','AL','446'),('1987-10-01','AL','451'),('1987-10-01','AL','451'),('1987-10-01','AL','491'),('1987-10-01','AL','491'),('1987-10-01','AL','523'),('1987-10-01','AL','523'),('1987-10-01','AL','523'),('1987-10-01','AL','525'),('1987-10-01','AL','525'),('1987-10-01','AL','533'),('1987-10-01','AL','533'),('1987-10-01','AL','546'),('1987-10-01','AL','546'),('1987-10-01','AL','556'),('1987-10-01','AL','556'),('1987-10-01','AL','601'),('1987-10-01','AL','601'),('1987-10-01','AL','627'),('1987-10-01','AL','629'),('1987-10-01','AL','670'),('1987-10-01','AL','670'),('1987-10-01','AL','670'),('1987-10-01','AL','673'),('1987-10-01','AL','680'),('1987-10-01','AL','700'),('1987-10-02','AA','2'),('1987-10-02','AA','2'),('1987-10-02','AA','2'),('1987-10-02','AA','7'),('1987-10-02','AA','7'),('1987-10-02','AA','26'),('1987-10-02','AA','34'),('1987-10-02','AA','36'),('1987-10-02','AA','91'),('1987-10-02','AA','101'),('1987-10-02','AA','101'),('1987-10-02','AA','109'),('1987-10-02','AA','109'),('1987-10-02','AA','112'),('1987-10-02','AA','123'),('1987-10-02','AA','123'),('1987-10-02','AA','160'),('1987-10-02','AA','165'),('1987-10-02','AA','165'),('1987-10-02','AA','165'),('1987-10-02','AA','176'),('1987-10-02','AA','176'),('1987-10-02','AA','176'),('1987-10-02','AA','176'),('1987-10-02','AA','179'),('1987-10-02','AA','179'),('1987-10-02','AA','215'),('1987-10-02','AA','215'),('1987-10-02','AA','231'),('1987-10-02','AA','231'),('1987-10-02','AA','263'),('1987-10-02','AA','263'),('1987-10-02','AA','268'),('1987-10-02','AA','281'),('1987-10-02','AA','287'),('1987-10-02','AA','287'),('1987-10-02','AA','309'),('1987-10-02','AA','309'),('1987-10-02','AA','309'),('1987-10-02','AA','341'),('1987-10-02','AA','344'),('1987-10-02','AA','344'),('1987-10-02','AA','347'),('1987-10-02','AA','347'),('1987-10-02','AA','368'),('1987-10-02','AA','381'),('1987-10-02','AA','381'),('1987-10-02','AA','381'),('1987-10-02','AA','396'),('1987-10-02','AA','396'),('1987-10-02','AA','397'),('1987-10-02','AA','397'),('1987-10-02','AA','417'),('1987-10-02','AA','417'),('1987-10-02','AA','446'),('1987-10-02','AA','451'),('1987-10-02','AA','451'),('1987-10-02','AA','460'),('1987-10-02','AA','460'),('1987-10-02','AA','491'),('1987-10-02','AA','504'),('1987-10-02','AA','504'),('1987-10-02','AA','519'),('1987-10-02','AA','519'),('1987-10-02','AA','523'),('1987-10-02','AA','523'),('1987-10-02','AA','525'),('1987-10-02','AA','525'),('1987-10-02','AA','525'),('1987-10-02','AA','533'),('1987-10-02','AA','533'),('1987-10-02','AA','533'),('1987-10-02','AA','546'),('1987-10-02','AA','546'),('1987-10-02','AA','546'),('1987-10-02','AA','546'),('1987-10-02','AA','556'),('1987-10-02','AA','556'),('1987-10-02','AA','556'),('1987-10-02','AA','597'),('1987-10-02','AA','597'),('1987-10-02','AA','597'),('1987-10-02','AA','601'),('1987-10-02','AA','601'),('1987-10-02','AA','627'),('1987-10-02','AA','629'),('1987-10-02','AA','629'),('1987-10-02','AA','670'),('1987-10-02','AA','673'),('1987-10-02','AA','673'),('1987-10-02','AA','680'),('1987-10-02','AA','680'),('1987-10-02','AA','817'),('1987-10-02','AA','817'),('1987-10-02','AA','824'),('1987-10-02','AA','824'),('1987-10-02','AA','824'),('1987-10-02','AA','824'),('1987-10-02','AA','832'),('1987-10-02','AA','832'),('1987-10-02','AA','852'),('1987-10-02','AA','866'),('1987-10-02','AA','866'),('1987-10-02','AA','871'),('1987-10-02','AA','871'),('1987-10-02','AA','880'),('1987-10-02','AA','880'),('1987-10-02','AA','880'),('1987-10-02','AA','880'),('1987-10-02','AA','883'),('1987-10-02','AA','883'),('1987-10-02','AA','885'),('1987-10-02','AA','885'),('1987-10-02','AA','885'),('1987-10-02','AA','890'),('1987-10-02','AA','890'),('1987-10-02','AA','893'),('1987-10-02','AA','893'),('1987-10-02','AA','905'),('1987-10-02','AA','905'),('1987-10-02','AA','915'),('1987-10-02','AA','929'),('1987-10-02','AA','929'),('1987-10-02','AA','936'),('1987-10-02','AA','936'),('1987-10-02','AA','937'),('1987-10-02','AA','937'),('1987-10-02','AA','955'),('1987-10-02','AA','955'),('1987-10-02','AA','966'),('1987-10-02','AA','1002'),('1987-10-02','AA','1002'),('1987-10-02','AA','1004'),('1987-10-02','AA','1004'),('1987-10-02','AA','1015'),('1987-10-02','AA','1015'),('1987-10-02','AA','1021'),('1987-10-02','AA','1021'),('1987-10-02','AA','1041'),('1987-10-02','AA','1041'),('1987-10-02','AA','1046'),('1987-10-02','AA','1046'),('1987-10-02','AA','1048'),('1987-10-02','AA','1048'),('1987-10-02','AA','1061'),('1987-10-02','AA','1061'),('1987-10-02','AA','1088'),('1987-10-02','AA','1088'),('1987-10-02','AA','2033'),('1987-10-02','AA','2033'),('1987-10-02','AA','2050'),('1987-10-02','AA','2058'),('1987-10-02','AA','2071'),('1987-10-02','AA','2071'),('1987-10-02','AA','2086'),('1987-10-02','AA','2105'),('1987-10-02','AA','2111'),('1987-10-02','AA','2123'),('1987-10-02','AA','2123'),('1987-10-02','AA','2147'),('1987-10-02','AA','2147'),('1987-10-02','AA','2199'),('1987-10-02','AA','2199'),('1987-10-02','AA','2207'),('1987-10-02','AA','2207'),('1987-10-02','AA','2217'),('1987-10-02','AA','2230'),('1987-10-02','AA','2245'),('1987-10-02','AA','2251'),('1987-10-02','AA','2251'),('1987-10-02','AA','2275'),('1987-10-02','AA','2278'),('1987-10-02','AA','2351'),('1987-10-02','AA','2357'),('1987-10-02','AA','2361'),('1987-10-02','AA','2490'),('1987-10-02','AA','2528'),('1987-10-02','AA','2528'),('1987-10-02','AA','2735'),('1987-10-02','AA','2735'),('1987-10-02','AA','2751'),('1987-10-02','AL','2'),('1987-10-02','AL','2'),('1987-10-02','AL','7'),('1987-10-02','AL','7'),('1987-10-02','AL','26'),('1987-10-02','AL','26'),('1987-10-02','AL','34'),('1987-10-02','AL','34'),('1987-10-02','AL','36'),('1987-10-02','AL','36'),('1987-10-02','AL','45'),('1987-10-02','AL','45'),('1987-10-02','AL','45'),('1987-10-02','AL','91'),('1987-10-02','AL','91'),('1987-10-02','AL','104'),('1987-10-02','AL','104'),('1987-10-02','AL','104'),('1987-10-02','AL','109'),('1987-10-02','AL','112'),('1987-10-02','AL','112'),('1987-10-02','AL','123'),('1987-10-02','AL','149'),('1987-10-02','AL','160'),('1987-10-02','AL','160'),('1987-10-02','AL','165'),('1987-10-02','AL','171'),('1987-10-02','AL','171'),('1987-10-02','AL','176'),('1987-10-02','AL','176'),('1987-10-02','AL','179'),('1987-10-02','AL','215'),('1987-10-02','AL','231'),('1987-10-02','AL','263'),('1987-10-02','AL','263'),('1987-10-02','AL','268'),('1987-10-02','AL','268'),('1987-10-02','AL','268'),('1987-10-02','AL','281'),('1987-10-02','AL','281'),('1987-10-02','AL','287'),('1987-10-02','AL','287'),('1987-10-02','AL','309'),('1987-10-02','AL','309'),('1987-10-02','AL','341'),('1987-10-02','AL','344'),('1987-10-02','AL','344'),('1987-10-02','AL','357'),('1987-10-02','AL','357'),('1987-10-02','AL','368'),('1987-10-02','AL','381'),('1987-10-02','AL','396'),('1987-10-02','AL','397'),('1987-10-02','AL','397'),('1987-10-02','AL','416'),('1987-10-02','AL','416'),('1987-10-02','AL','417'),('1987-10-02','AL','438'),('1987-10-02','AL','438'),('1987-10-02','AL','446'),('1987-10-02','AL','451'),('1987-10-02','AL','451'),('1987-10-02','AL','491'),('1987-10-02','AL','491'),('1987-10-02','AL','523'),('1987-10-02','AL','523'),('1987-10-02','AL','523'),('1987-10-02','AL','525'),('1987-10-02','AL','525'),('1987-10-02','AL','533'),('1987-10-02','AL','533'),('1987-10-02','AL','546'),('1987-10-02','AL','546'),('1987-10-02','AL','556'),('1987-10-02','AL','556'),('1987-10-02','AL','601'),('1987-10-02','AL','601'),('1987-10-02','AL','627'),('1987-10-02','AL','629'),('1987-10-02','AL','670'),('1987-10-02','AL','670'),('1987-10-02','AL','670'),('1987-10-02','AL','673'),('1987-10-02','AL','680'),('1987-10-03','AA','2'),('1987-10-03','AA','2'),('1987-10-03','AA','2'),('1987-10-03','AA','7'),('1987-10-03','AA','7'),('1987-10-03','AA','26'),('1987-10-03','AA','34'),('1987-10-03','AA','36'),('1987-10-03','AA','91'),('1987-10-03','AA','101'),('1987-10-03','AA','101'),('1987-10-03','AA','109'),('1987-10-03','AA','109'),('1987-10-03','AA','112'),('1987-10-03','AA','123'),('1987-10-03','AA','123'),('1987-10-03','AA','165'),('1987-10-03','AA','165'),('1987-10-03','AA','165'),('1987-10-03','AA','176'),('1987-10-03','AA','176'),('1987-10-03','AA','176'),('1987-10-03','AA','176'),('1987-10-03','AA','179'),('1987-10-03','AA','179'),('1987-10-03','AA','215'),('1987-10-03','AA','215'),('1987-10-03','AA','231'),('1987-10-03','AA','231'),('1987-10-03','AA','263'),('1987-10-03','AA','263'),('1987-10-03','AA','268'),('1987-10-03','AA','281'),('1987-10-03','AA','287'),('1987-10-03','AA','287'),('1987-10-03','AA','309'),('1987-10-03','AA','309'),('1987-10-03','AA','309'),('1987-10-03','AA','341'),('1987-10-03','AA','344'),('1987-10-03','AA','344'),('1987-10-03','AA','347'),('1987-10-03','AA','347'),('1987-10-03','AA','368'),('1987-10-03','AA','381'),('1987-10-03','AA','381'),('1987-10-03','AA','381'),('1987-10-03','AA','396'),('1987-10-03','AA','396'),('1987-10-03','AA','397'),('1987-10-03','AA','397'),('1987-10-03','AA','417'),('1987-10-03','AA','417'),('1987-10-03','AA','446'),('1987-10-03','AA','451'),('1987-10-03','AA','451'),('1987-10-03','AA','460'),('1987-10-03','AA','460'),('1987-10-03','AA','491'),('1987-10-03','AA','491'),('1987-10-03','AA','504'),('1987-10-03','AA','504'),('1987-10-03','AA','519'),('1987-10-03','AA','519'),('1987-10-03','AA','523'),('1987-10-03','AA','523'),('1987-10-03','AA','525'),('1987-10-03','AA','525'),('1987-10-03','AA','525'),('1987-10-03','AA','533'),('1987-10-03','AA','533'),('1987-10-03','AA','546'),('1987-10-03','AA','546'),('1987-10-03','AA','546'),('1987-10-03','AA','546'),('1987-10-03','AA','556'),('1987-10-03','AA','556'),('1987-10-03','AA','556'),('1987-10-03','AA','597'),('1987-10-03','AA','597'),('1987-10-03','AA','597'),('1987-10-03','AA','601'),('1987-10-03','AA','601'),('1987-10-03','AA','627'),('1987-10-03','AA','629'),('1987-10-03','AA','629'),('1987-10-03','AA','670'),('1987-10-03','AA','673'),('1987-10-03','AA','673'),('1987-10-03','AA','680'),('1987-10-03','AA','680'),('1987-10-03','AA','817'),('1987-10-03','AA','817'),('1987-10-03','AA','824'),('1987-10-03','AA','824'),('1987-10-03','AA','824'),('1987-10-03','AA','824'),('1987-10-03','AA','832'),('1987-10-03','AA','832'),('1987-10-03','AA','852'),('1987-10-03','AA','852'),('1987-10-03','AA','866'),('1987-10-03','AA','866'),('1987-10-03','AA','871'),('1987-10-03','AA','871'),('1987-10-03','AA','880'),('1987-10-03','AA','880'),('1987-10-03','AA','880'),('1987-10-03','AA','880'),('1987-10-03','AA','883'),('1987-10-03','AA','883'),('1987-10-03','AA','885'),('1987-10-03','AA','885'),('1987-10-03','AA','885'),('1987-10-03','AA','890'),('1987-10-03','AA','890'),('1987-10-03','AA','893'),('1987-10-03','AA','893'),('1987-10-03','AA','905'),('1987-10-03','AA','905'),('1987-10-03','AA','915'),('1987-10-03','AA','929'),('1987-10-03','AA','929'),('1987-10-03','AA','936'),('1987-10-03','AA','936'),('1987-10-03','AA','937'),('1987-10-03','AA','937'),('1987-10-03','AA','955'),('1987-10-03','AA','955'),('1987-10-03','AA','966'),('1987-10-03','AA','1002'),('1987-10-03','AA','1002'),('1987-10-03','AA','1004'),('1987-10-03','AA','1004'),('1987-10-03','AA','1015'),('1987-10-03','AA','1015'),('1987-10-03','AA','1021'),('1987-10-03','AA','1041'),('1987-10-03','AA','1041'),('1987-10-03','AA','1046'),('1987-10-03','AA','1046'),('1987-10-03','AA','1048'),('1987-10-03','AA','1048'),('1987-10-03','AA','1061'),('1987-10-03','AA','1061'),('1987-10-03','AA','1088'),('1987-10-03','AA','1088'),('1987-10-03','AA','2033'),('1987-10-03','AA','2033'),('1987-10-03','AA','2050'),('1987-10-03','AA','2058'),('1987-10-03','AA','2071'),('1987-10-03','AA','2071'),('1987-10-03','AA','2086'),('1987-10-03','AA','2105'),('1987-10-03','AA','2111'),('1987-10-03','AA','2123'),('1987-10-03','AA','2123'),('1987-10-03','AA','2147'),('1987-10-03','AA','2147'),('1987-10-03','AA','2199'),('1987-10-03','AA','2207'),('1987-10-03','AA','2207'),('1987-10-03','AA','2245'),('1987-10-03','AA','2251'),('1987-10-03','AA','2251'),('1987-10-03','AA','2275'),('1987-10-03','AA','2278'),('1987-10-03','AA','2361'),('1987-10-03','AA','2490'),('1987-10-03','AA','2528'),('1987-10-03','AA','2528'),('1987-10-03','AA','2735'),('1987-10-03','AA','2735'),('1987-10-03','AL','2'),('1987-10-03','AL','2'),('1987-10-03','AL','7'),('1987-10-03','AL','7'),('1987-10-03','AL','26'),('1987-10-03','AL','26'),('1987-10-03','AL','34'),('1987-10-03','AL','34'),('1987-10-03','AL','36'),('1987-10-03','AL','36'),('1987-10-03','AL','45'),('1987-10-03','AL','45'),('1987-10-03','AL','45'),('1987-10-03','AL','91'),('1987-10-03','AL','91'),('1987-10-03','AL','104'),('1987-10-03','AL','104'),('1987-10-03','AL','109'),('1987-10-03','AL','112'),('1987-10-03','AL','112'),('1987-10-03','AL','149'),('1987-10-03','AL','160'),('1987-10-03','AL','160'),('1987-10-03','AL','165'),('1987-10-03','AL','171'),('1987-10-03','AL','171'),('1987-10-03','AL','176'),('1987-10-03','AL','176'),('1987-10-03','AL','179'),('1987-10-03','AL','215'),('1987-10-03','AL','231'),('1987-10-03','AL','263'),('1987-10-03','AL','287'),('1987-10-03','AL','287'),('1987-10-03','AL','309'),('1987-10-03','AL','309'),('1987-10-03','AL','344'),('1987-10-03','AL','344'),('1987-10-03','AL','357'),('1987-10-03','AL','357'),('1987-10-03','AL','381'),('1987-10-03','AL','396'),('1987-10-03','AL','397'),('1987-10-03','AL','397'),('1987-10-03','AL','397'),('1987-10-03','AL','416'),('1987-10-03','AL','417'),('1987-10-03','AL','438'),('1987-10-03','AL','451'),('1987-10-03','AL','451'),('1987-10-03','AL','491'),('1987-10-03','AL','491'),('1987-10-03','AL','523'),('1987-10-03','AL','523'),('1987-10-03','AL','525'),('1987-10-03','AL','525'),('1987-10-03','AL','533'),('1987-10-03','AL','546'),('1987-10-03','AL','546'),('1987-10-03','AL','556'),('1987-10-03','AL','556'),('1987-10-03','AL','601'),('1987-10-03','AL','601'),('1987-10-03','AL','627'),('1987-10-03','AL','670'),('1987-10-03','AL','673'),('1987-10-03','AL','680'),('1987-10-03','AL','905'),('1987-10-03','AL','936'),('1987-10-03','AL','966'),('1987-10-04','AA','2'),('1987-10-04','AA','2'),('1987-10-04','AA','2'),('1987-10-04','AA','7'),('1987-10-04','AA','7'),('1987-10-04','AA','26'),('1987-10-04','AA','34'),('1987-10-04','AA','36'),('1987-10-04','AA','91'),('1987-10-04','AA','101'),('1987-10-04','AA','101'),('1987-10-04','AA','109'),('1987-10-04','AA','109'),('1987-10-04','AA','112'),('1987-10-04','AA','123'),('1987-10-04','AA','123'),('1987-10-04','AA','160'),('1987-10-04','AA','165'),('1987-10-04','AA','165'),('1987-10-04','AA','165'),('1987-10-04','AA','176'),('1987-10-04','AA','176'),('1987-10-04','AA','176'),('1987-10-04','AA','176'),('1987-10-04','AA','179'),('1987-10-04','AA','179'),('1987-10-04','AA','215'),('1987-10-04','AA','215'),('1987-10-04','AA','231'),('1987-10-04','AA','231'),('1987-10-04','AA','263'),('1987-10-04','AA','263'),('1987-10-04','AA','268'),('1987-10-04','AA','268'),('1987-10-04','AA','281'),('1987-10-04','AA','287'),('1987-10-04','AA','287'),('1987-10-04','AA','309'),('1987-10-04','AA','309'),('1987-10-04','AA','309'),('1987-10-04','AA','341'),('1987-10-04','AA','344'),('1987-10-04','AA','344'),('1987-10-04','AA','347'),('1987-10-04','AA','347'),('1987-10-04','AA','381'),('1987-10-04','AA','381'),('1987-10-04','AA','381'),('1987-10-04','AA','396'),('1987-10-04','AA','396'),('1987-10-04','AA','397'),('1987-10-04','AA','397'),('1987-10-04','AA','417'),('1987-10-04','AA','417'),('1987-10-04','AA','446'),('1987-10-04','AA','451'),('1987-10-04','AA','451'),('1987-10-04','AA','460'),('1987-10-04','AA','460'),('1987-10-04','AA','491'),('1987-10-04','AA','491'),('1987-10-04','AA','504'),('1987-10-04','AA','504'),('1987-10-04','AA','519'),('1987-10-04','AA','519'),('1987-10-04','AA','523'),('1987-10-04','AA','523'),('1987-10-04','AA','525'),('1987-10-04','AA','525'),('1987-10-04','AA','525'),('1987-10-04','AA','533'),('1987-10-04','AA','533'),('1987-10-04','AA','533'),('1987-10-04','AA','546'),('1987-10-04','AA','546'),('1987-10-04','AA','546'),('1987-10-04','AA','546'),('1987-10-04','AA','556'),('1987-10-04','AA','556'),('1987-10-04','AA','556'),('1987-10-04','AA','597'),('1987-10-04','AA','597'),('1987-10-04','AA','597'),('1987-10-04','AA','601'),('1987-10-04','AA','601'),('1987-10-04','AA','627'),('1987-10-04','AA','629'),('1987-10-04','AA','629'),('1987-10-04','AA','670'),('1987-10-04','AA','673'),('1987-10-04','AA','673'),('1987-10-04','AA','680'),('1987-10-04','AA','680'),('1987-10-04','AA','817'),('1987-10-04','AA','817'),('1987-10-04','AA','824'),('1987-10-04','AA','824'),('1987-10-04','AA','824'),('1987-10-04','AA','832'),('1987-10-04','AA','832'),('1987-10-04','AA','852'),('1987-10-04','AA','852'),('1987-10-04','AA','866'),('1987-10-04','AA','866'),('1987-10-04','AA','871'),('1987-10-04','AA','871'),('1987-10-04','AA','880'),('1987-10-04','AA','880'),('1987-10-04','AA','880'),('1987-10-04','AA','880'),('1987-10-04','AA','883'),('1987-10-04','AA','883'),('1987-10-04','AA','885'),('1987-10-04','AA','885'),('1987-10-04','AA','890'),('1987-10-04','AA','890'),('1987-10-04','AA','893'),('1987-10-04','AA','893'),('1987-10-04','AA','905'),('1987-10-04','AA','905'),('1987-10-04','AA','915'),('1987-10-04','AA','929'),('1987-10-04','AA','929'),('1987-10-04','AA','936'),('1987-10-04','AA','936'),('1987-10-04','AA','937'),('1987-10-04','AA','937'),('1987-10-04','AA','955'),('1987-10-04','AA','955'),('1987-10-04','AA','966'),('1987-10-04','AA','1002'),('1987-10-04','AA','1002'),('1987-10-04','AA','1004'),('1987-10-04','AA','1004'),('1987-10-04','AA','1015'),('1987-10-04','AA','1021'),('1987-10-04','AA','1021'),('1987-10-04','AA','1041'),('1987-10-04','AA','1041'),('1987-10-04','AA','1046'),('1987-10-04','AA','1046'),('1987-10-04','AA','1048'),('1987-10-04','AA','1048'),('1987-10-04','AA','1061'),('1987-10-04','AA','1061'),('1987-10-04','AA','1088'),('1987-10-04','AA','1088'),('1987-10-04','AA','2033'),('1987-10-04','AA','2033'),('1987-10-04','AA','2050'),('1987-10-04','AA','2058'),('1987-10-04','AA','2071'),('1987-10-04','AA','2071'),('1987-10-04','AA','2086'),('1987-10-04','AA','2111'),('1987-10-04','AA','2123'),('1987-10-04','AA','2123'),('1987-10-04','AA','2147'),('1987-10-04','AA','2147'),('1987-10-04','AA','2199'),('1987-10-04','AA','2199'),('1987-10-04','AA','2207'),('1987-10-04','AA','2207'),('1987-10-04','AA','2230'),('1987-10-04','AA','2245'),('1987-10-04','AA','2251'),('1987-10-04','AA','2251'),('1987-10-04','AA','2275'),('1987-10-04','AA','2278'),('1987-10-04','AA','2357'),('1987-10-04','AA','2361'),('1987-10-04','AA','2490'),('1987-10-04','AA','2528'),('1987-10-04','AA','2528'),('1987-10-04','AA','2735'),('1987-10-04','AA','2735'),('1987-10-04','AA','2751'),('1987-10-04','AL','7'),('1987-10-04','AL','7'),('1987-10-04','AL','26'),('1987-10-04','AL','26'),('1987-10-04','AL','34'),('1987-10-04','AL','34'),('1987-10-04','AL','36'),('1987-10-04','AL','36'),('1987-10-04','AL','45'),('1987-10-04','AL','45'),('1987-10-04','AL','45'),('1987-10-04','AL','91'),('1987-10-04','AL','91'),('1987-10-04','AL','104'),('1987-10-04','AL','123'),('1987-10-04','AL','149'),('1987-10-04','AL','160'),('1987-10-04','AL','160'),('1987-10-04','AL','165'),('1987-10-04','AL','171'),('1987-10-04','AL','171'),('1987-10-04','AL','176'),('1987-10-04','AL','176'),('1987-10-04','AL','179'),('1987-10-04','AL','215'),('1987-10-04','AL','231'),('1987-10-04','AL','263'),('1987-10-04','AL','263'),('1987-10-04','AL','281'),('1987-10-04','AL','281'),('1987-10-04','AL','309'),('1987-10-04','AL','309'),('1987-10-04','AL','341'),('1987-10-04','AL','344'),('1987-10-04','AL','344'),('1987-10-04','AL','357'),('1987-10-04','AL','357'),('1987-10-04','AL','368'),('1987-10-04','AL','416'),('1987-10-04','AL','416'),('1987-10-04','AL','417'),('1987-10-04','AL','438'),('1987-10-04','AL','438'),('1987-10-04','AL','451'),('1987-10-04','AL','491'),('1987-10-04','AL','491'),('1987-10-04','AL','525'),('1987-10-04','AL','525'),('1987-10-04','AL','533'),('1987-10-04','AL','533'),('1987-10-04','AL','546'),('1987-10-04','AL','546'),('1987-10-04','AL','556'),('1987-10-04','AL','556'),('1987-10-04','AL','601'),('1987-10-04','AL','627'),('1987-10-04','AL','629'),('1987-10-04','AL','670'),('1987-10-04','AL','670'),('1987-10-04','AL','670'),('1987-10-04','AL','673'),('1987-10-04','AL','680'),('1987-10-04','AL','937'),('1987-10-04','AL','937'),('1987-10-04','AL','955'),('1987-10-12','AA','2'),('1987-10-12','AA','2'),('1987-10-12','AA','2'),('1987-10-12','AA','7'),('1987-10-12','AA','7'),('1987-10-12','AA','26'),('1987-10-12','AA','34'),('1987-10-12','AA','36'),('1987-10-12','AA','91'),('1987-10-12','AA','101'),('1987-10-12','AA','101'),('1987-10-12','AA','109'),('1987-10-12','AA','109'),('1987-10-12','AA','112'),('1987-10-12','AA','123'),('1987-10-12','AA','123'),('1987-10-12','AA','160'),('1987-10-12','AA','165'),('1987-10-12','AA','165'),('1987-10-12','AA','165'),('1987-10-12','AA','176'),('1987-10-12','AA','176'),('1987-10-12','AA','176'),('1987-10-12','AA','176'),('1987-10-12','AA','179'),('1987-10-12','AA','179'),('1987-10-12','AA','215'),('1987-10-12','AA','215'),('1987-10-12','AA','231'),('1987-10-12','AA','263'),('1987-10-12','AA','263'),('1987-10-12','AA','268'),('1987-10-12','AA','268'),('1987-10-12','AA','281'),('1987-10-12','AA','287'),('1987-10-12','AA','287'),('1987-10-12','AA','309'),('1987-10-12','AA','309'),('1987-10-12','AA','309'),('1987-10-12','AA','341'),('1987-10-12','AA','344'),('1987-10-12','AA','344'),('1987-10-12','AA','347'),('1987-10-12','AA','347'),('1987-10-12','AA','368'),('1987-10-12','AA','381'),('1987-10-12','AA','381'),('1987-10-12','AA','381'),('1987-10-12','AA','396'),('1987-10-12','AA','396'),('1987-10-12','AA','397'),('1987-10-12','AA','397'),('1987-10-12','AA','417'),('1987-10-12','AA','417'),('1987-10-12','AA','446'),('1987-10-12','AA','451'),('1987-10-12','AA','451'),('1987-10-12','AA','460'),('1987-10-12','AA','460'),('1987-10-12','AA','491'),('1987-10-12','AA','504'),('1987-10-12','AA','504'),('1987-10-12','AA','519'),('1987-10-12','AA','523'),('1987-10-12','AA','523'),('1987-10-12','AA','525'),('1987-10-12','AA','525'),('1987-10-12','AA','525'),('1987-10-12','AA','533'),('1987-10-12','AA','533'),('1987-10-12','AA','533'),('1987-10-12','AA','546'),('1987-10-12','AA','546'),('1987-10-12','AA','546'),('1987-10-12','AA','546'),('1987-10-12','AA','556'),('1987-10-12','AA','556'),('1987-10-12','AA','556'),('1987-10-12','AA','597'),('1987-10-12','AA','597'),('1987-10-12','AA','597'),('1987-10-12','AA','601'),('1987-10-12','AA','601'),('1987-10-12','AA','627'),('1987-10-12','AA','629'),('1987-10-12','AA','629'),('1987-10-12','AA','670'),('1987-10-12','AA','673'),('1987-10-12','AA','673'),('1987-10-12','AA','680'),('1987-10-12','AA','680'),('1987-10-12','AA','817'),('1987-10-12','AA','817'),('1987-10-12','AA','824'),('1987-10-12','AA','824'),('1987-10-12','AA','824'),('1987-10-12','AA','824'),('1987-10-12','AA','832'),('1987-10-12','AA','832'),('1987-10-12','AA','852'),('1987-10-12','AA','852'),('1987-10-12','AA','866'),('1987-10-12','AA','866'),('1987-10-12','AA','871'),('1987-10-12','AA','871'),('1987-10-12','AA','880'),('1987-10-12','AA','880'),('1987-10-12','AA','880'),('1987-10-12','AA','880'),('1987-10-12','AA','883'),('1987-10-12','AA','883'),('1987-10-12','AA','885'),('1987-10-12','AA','885'),('1987-10-12','AA','885'),('1987-10-12','AA','890'),('1987-10-12','AA','890'),('1987-10-12','AA','893'),('1987-10-12','AA','893'),('1987-10-12','AA','905'),('1987-10-12','AA','905'),('1987-10-12','AA','915'),('1987-10-12','AA','929'),('1987-10-12','AA','929'),('1987-10-12','AA','936'),('1987-10-12','AA','936'),('1987-10-12','AA','937'),('1987-10-12','AA','937'),('1987-10-12','AA','955'),('1987-10-12','AA','955'),('1987-10-12','AA','966'),('1987-10-12','AA','1002'),('1987-10-12','AA','1002'),('1987-10-12','AA','1004'),('1987-10-12','AA','1015'),('1987-10-12','AA','1015'),('1987-10-12','AA','1021'),('1987-10-12','AA','1021'),('1987-10-12','AA','1041'),('1987-10-12','AA','1041'),('1987-10-12','AA','1046'),('1987-10-12','AA','1046'),('1987-10-12','AA','1048'),('1987-10-12','AA','1048'),('1987-10-12','AA','1061'),('1987-10-12','AA','1061'),('1987-10-12','AA','1088'),('1987-10-12','AA','1088'),('1987-10-12','AA','2033'),('1987-10-12','AA','2033'),('1987-10-12','AA','2050'),('1987-10-12','AA','2058'),('1987-10-12','AA','2071'),('1987-10-12','AA','2071'),('1987-10-12','AA','2086'),('1987-10-12','AA','2105'),('1987-10-12','AA','2111'),('1987-10-12','AA','2123'),('1987-10-12','AA','2123'),('1987-10-12','AA','2147'),('1987-10-12','AA','2147'),('1987-10-12','AA','2199'),('1987-10-12','AA','2199'),('1987-10-12','AA','2207'),('1987-10-12','AA','2207'),('1987-10-12','AA','2217'),('1987-10-12','AA','2230'),('1987-10-12','AA','2245'),('1987-10-12','AA','2251'),('1987-10-12','AA','2251'),('1987-10-12','AA','2275'),('1987-10-12','AA','2278'),('1987-10-12','AA','2351'),('1987-10-12','AA','2357'),('1987-10-12','AA','2361'),('1987-10-12','AA','2490'),('1987-10-12','AA','2528'),('1987-10-12','AA','2528'),('1987-10-12','AA','2735'),('1987-10-12','AA','2735'),('1987-10-12','AA','2751'),('1987-10-12','AL','2'),('1987-10-12','AL','2'),('1987-10-12','AL','7'),('1987-10-12','AL','7'),('1987-10-12','AL','26'),('1987-10-12','AL','26'),('1987-10-12','AL','34'),('1987-10-12','AL','34'),('1987-10-12','AL','36'),('1987-10-12','AL','36'),('1987-10-12','AL','45'),('1987-10-12','AL','45'),('1987-10-12','AL','45'),('1987-10-12','AL','91'),('1987-10-12','AL','91'),('1987-10-12','AL','104'),('1987-10-12','AL','104'),('1987-10-12','AL','104'),('1987-10-12','AL','109'),('1987-10-12','AL','112'),('1987-10-12','AL','112'),('1987-10-12','AL','123'),('1987-10-12','AL','149'),('1987-10-12','AL','160'),('1987-10-12','AL','160'),('1987-10-12','AL','165'),('1987-10-12','AL','171'),('1987-10-12','AL','171'),('1987-10-12','AL','176'),('1987-10-12','AL','176'),('1987-10-12','AL','179'),('1987-10-12','AL','215'),('1987-10-12','AL','231'),('1987-10-12','AL','263'),('1987-10-12','AL','263'),('1987-10-12','AL','268'),('1987-10-12','AL','268'),('1987-10-12','AL','268'),('1987-10-12','AL','281'),('1987-10-12','AL','281'),('1987-10-12','AL','287'),('1987-10-12','AL','287'),('1987-10-12','AL','309'),('1987-10-12','AL','309'),('1987-10-12','AL','341'),('1987-10-12','AL','344'),('1987-10-12','AL','344'),('1987-10-12','AL','357'),('1987-10-12','AL','357'),('1987-10-12','AL','368'),('1987-10-12','AL','381'),('1987-10-12','AL','396'),('1987-10-12','AL','397'),('1987-10-12','AL','397'),('1987-10-12','AL','416'),('1987-10-12','AL','416'),('1987-10-12','AL','417'),('1987-10-12','AL','438'),('1987-10-12','AL','438'),('1987-10-12','AL','446'),('1987-10-12','AL','451'),('1987-10-12','AL','451'),('1987-10-12','AL','491'),('1987-10-12','AL','491'),('1987-10-12','AL','523'),('1987-10-12','AL','523'),('1987-10-12','AL','523'),('1987-10-12','AL','525'),('1987-10-12','AL','525'),('1987-10-12','AL','533'),('1987-10-12','AL','533'),('1987-10-12','AL','546'),('1987-10-12','AL','546'),('1987-10-12','AL','556'),('1987-10-12','AL','556'),('1987-10-12','AL','627'),('1987-10-12','AL','629'),('1987-10-12','AL','670'),('1987-10-12','AL','670'),('1987-10-12','AL','670'),('1987-10-12','AL','673'),('1987-10-13','AA','2'),('1987-10-13','AA','2'),('1987-10-13','AA','2'),('1987-10-13','AA','7'),('1987-10-13','AA','7'),('1987-10-13','AA','26'),('1987-10-13','AA','34'),('1987-10-13','AA','36'),('1987-10-13','AA','91'),('1987-10-13','AA','101'),('1987-10-13','AA','101'),('1987-10-13','AA','109'),('1987-10-13','AA','109'),('1987-10-13','AA','112'),('1987-10-13','AA','123'),('1987-10-13','AA','123'),('1987-10-13','AA','160'),('1987-10-13','AA','165'),('1987-10-13','AA','165'),('1987-10-13','AA','165'),('1987-10-13','AA','176'),('1987-10-13','AA','176'),('1987-10-13','AA','176'),('1987-10-13','AA','176'),('1987-10-13','AA','179'),('1987-10-13','AA','179'),('1987-10-13','AA','215'),('1987-10-13','AA','215'),('1987-10-13','AA','231'),('1987-10-13','AA','231'),('1987-10-13','AA','263'),('1987-10-13','AA','263'),('1987-10-13','AA','268'),('1987-10-13','AA','268'),('1987-10-13','AA','281'),('1987-10-13','AA','287'),('1987-10-13','AA','287'),('1987-10-13','AA','309'),('1987-10-13','AA','309'),('1987-10-13','AA','309'),('1987-10-13','AA','341'),('1987-10-13','AA','344'),('1987-10-13','AA','344'),('1987-10-13','AA','347'),('1987-10-13','AA','347'),('1987-10-13','AA','368'),('1987-10-13','AA','381'),('1987-10-13','AA','381'),('1987-10-13','AA','381'),('1987-10-13','AA','396'),('1987-10-13','AA','396'),('1987-10-13','AA','397'),('1987-10-13','AA','397'),('1987-10-13','AA','417'),('1987-10-13','AA','417'),('1987-10-13','AA','446'),('1987-10-13','AA','451'),('1987-10-13','AA','451'),('1987-10-13','AA','460'),('1987-10-13','AA','460'),('1987-10-13','AA','491'),('1987-10-13','AA','504'),('1987-10-13','AA','504'),('1987-10-13','AA','519'),('1987-10-13','AA','519'),('1987-10-13','AA','523'),('1987-10-13','AA','523'),('1987-10-13','AA','525'),('1987-10-13','AA','525'),('1987-10-13','AA','533'),('1987-10-13','AA','533'),('1987-10-13','AA','533'),('1987-10-13','AA','546'),('1987-10-13','AA','546'),('1987-10-13','AA','546'),('1987-10-13','AA','556'),('1987-10-13','AA','556'),('1987-10-13','AA','556'),('1987-10-13','AA','597'),('1987-10-13','AA','597'),('1987-10-13','AA','597'),('1987-10-13','AA','601'),('1987-10-13','AA','601'),('1987-10-13','AA','627'),('1987-10-13','AA','629'),('1987-10-13','AA','629'),('1987-10-13','AA','673'),('1987-10-13','AA','673'),('1987-10-13','AA','680'),('1987-10-13','AA','817'),('1987-10-13','AA','817'),('1987-10-13','AA','824'),('1987-10-13','AA','824'),('1987-10-13','AA','824'),('1987-10-13','AA','832'),('1987-10-13','AA','832'),('1987-10-13','AA','852'),('1987-10-13','AA','866'),('1987-10-13','AA','866'),('1987-10-13','AA','871'),('1987-10-13','AA','871'),('1987-10-13','AA','880'),('1987-10-13','AA','880'),('1987-10-13','AA','880'),('1987-10-13','AA','880'),('1987-10-13','AA','883'),('1987-10-13','AA','883'),('1987-10-13','AA','885'),('1987-10-13','AA','885'),('1987-10-13','AA','885'),('1987-10-13','AA','890'),('1987-10-13','AA','890'),('1987-10-13','AA','893'),('1987-10-13','AA','893'),('1987-10-13','AA','905'),('1987-10-13','AA','905'),('1987-10-13','AA','915'),('1987-10-13','AA','929'),('1987-10-13','AA','929'),('1987-10-13','AA','936'),('1987-10-13','AA','936'),('1987-10-13','AA','937'),('1987-10-13','AA','937'),('1987-10-13','AA','955'),('1987-10-13','AA','955'),('1987-10-13','AA','966'),('1987-10-13','AA','1002'),('1987-10-13','AA','1002'),('1987-10-13','AA','1004'),('1987-10-13','AA','1004'),('1987-10-13','AA','1015'),('1987-10-13','AA','1015'),('1987-10-13','AA','1021'),('1987-10-13','AA','1021'),('1987-10-13','AA','1041'),('1987-10-13','AA','1041'),('1987-10-13','AA','1046'),('1987-10-13','AA','1046'),('1987-10-13','AA','1048'),('1987-10-13','AA','1048'),('1987-10-13','AA','1061'),('1987-10-13','AA','1061'),('1987-10-13','AA','1088'),('1987-10-13','AA','1088'),('1987-10-13','AA','2033'),('1987-10-13','AA','2050'),('1987-10-13','AA','2071'),('1987-10-13','AA','2071'),('1987-10-13','AA','2086'),('1987-10-13','AA','2105'),('1987-10-13','AA','2111'),('1987-10-13','AA','2123'),('1987-10-13','AA','2123'),('1987-10-13','AA','2147'),('1987-10-13','AA','2147'),('1987-10-13','AA','2199'),('1987-10-13','AA','2199'),('1987-10-13','AA','2207'),('1987-10-13','AA','2207'),('1987-10-13','AA','2217'),('1987-10-13','AA','2230'),('1987-10-13','AA','2245'),('1987-10-13','AA','2251'),('1987-10-13','AA','2251'),('1987-10-13','AA','2275'),('1987-10-13','AA','2351'),('1987-10-13','AA','2357'),('1987-10-13','AA','2361'),('1987-10-13','AA','2490'),('1987-10-13','AA','2528'),('1987-10-13','AA','2528'),('1987-10-13','AA','2735'),('1987-10-13','AA','2735'),('1987-10-13','AA','2751'),('1987-10-13','AL','2'),('1987-10-13','AL','2'),('1987-10-13','AL','7'),('1987-10-13','AL','7'),('1987-10-13','AL','26'),('1987-10-13','AL','26'),('1987-10-13','AL','34'),('1987-10-13','AL','34'),('1987-10-13','AL','36'),('1987-10-13','AL','36'),('1987-10-13','AL','45'),('1987-10-13','AL','45'),('1987-10-13','AL','45'),('1987-10-13','AL','91'),('1987-10-13','AL','91'),('1987-10-13','AL','104'),('1987-10-13','AL','104'),('1987-10-13','AL','104'),('1987-10-13','AL','109'),('1987-10-13','AL','112'),('1987-10-13','AL','112'),('1987-10-13','AL','123'),('1987-10-13','AL','149'),('1987-10-13','AL','160'),('1987-10-13','AL','160'),('1987-10-13','AL','171'),('1987-10-13','AL','171'),('1987-10-13','AL','176'),('1987-10-13','AL','176'),('1987-10-13','AL','179'),('1987-10-13','AL','231'),('1987-10-13','AL','263'),('1987-10-13','AL','263'),('1987-10-13','AL','268'),('1987-10-13','AL','268'),('1987-10-13','AL','268'),('1987-10-13','AL','281'),('1987-10-13','AL','281'),('1987-10-13','AL','287'),('1987-10-13','AL','287'),('1987-10-13','AL','309'),('1987-10-13','AL','309'),('1987-10-13','AL','341'),('1987-10-13','AL','357'),('1987-10-13','AL','357'),('1987-10-13','AL','368'),('1987-10-13','AL','381'),('1987-10-13','AL','396'),('1987-10-13','AL','397'),('1987-10-13','AL','397'),('1987-10-13','AL','416'),('1987-10-13','AL','417'),('1987-10-13','AL','438'),('1987-10-13','AL','438'),('1987-10-13','AL','446'),('1987-10-13','AL','451'),('1987-10-13','AL','451'),('1987-10-13','AL','491'),('1987-10-13','AL','491'),('1987-10-13','AL','523'),('1987-10-13','AL','523'),('1987-10-13','AL','523'),('1987-10-13','AL','525'),('1987-10-13','AL','525'),('1987-10-13','AL','533'),('1987-10-13','AL','533'),('1987-10-13','AL','546'),('1987-10-13','AL','546'),('1987-10-13','AL','556'),('1987-10-13','AL','556'),('1987-10-13','AL','601'),('1987-10-13','AL','601'),('1987-10-13','AL','627'),('1987-10-13','AL','629'),('1987-10-13','AL','670'),('1987-10-13','AL','670'),('1987-10-13','AL','670'),('1987-10-13','AL','673'),('1987-10-13','AL','680'),('1987-10-14','AA','2'),('1987-10-14','AA','2'),('1987-10-14','AA','2'),('1987-10-14','AA','7'),('1987-10-14','AA','7'),('1987-10-14','AA','26'),('1987-10-14','AA','34'),('1987-10-14','AA','36'),('1987-10-14','AA','91'),('1987-10-14','AA','101'),('1987-10-14','AA','101'),('1987-10-14','AA','109'),('1987-10-14','AA','109'),('1987-10-14','AA','112'),('1987-10-14','AA','123'),('1987-10-14','AA','123'),('1987-10-14','AA','160'),('1987-10-14','AA','165'),('1987-10-14','AA','165'),('1987-10-14','AA','176'),('1987-10-14','AA','176'),('1987-10-14','AA','176'),('1987-10-14','AA','176'),('1987-10-14','AA','179'),('1987-10-14','AA','179'),('1987-10-14','AA','215'),('1987-10-14','AA','215'),('1987-10-14','AA','231'),('1987-10-14','AA','231'),('1987-10-14','AA','263'),('1987-10-14','AA','263'),('1987-10-14','AA','268'),('1987-10-14','AA','268'),('1987-10-14','AA','281'),('1987-10-14','AA','287'),('1987-10-14','AA','309'),('1987-10-14','AA','309'),('1987-10-14','AA','309'),('1987-10-14','AA','341'),('1987-10-14','AA','344'),('1987-10-14','AA','344'),('1987-10-14','AA','347'),('1987-10-14','AA','347'),('1987-10-14','AA','368'),('1987-10-14','AA','381'),('1987-10-14','AA','381'),('1987-10-14','AA','381'),('1987-10-14','AA','396'),('1987-10-14','AA','396'),('1987-10-14','AA','397'),('1987-10-14','AA','417'),('1987-10-14','AA','446'),('1987-10-14','AA','451'),('1987-10-14','AA','451'),('1987-10-14','AA','460'),('1987-10-14','AA','460'),('1987-10-14','AA','491'),('1987-10-14','AA','504'),('1987-10-14','AA','519'),('1987-10-14','AA','519'),('1987-10-14','AA','523'),('1987-10-14','AA','523'),('1987-10-14','AA','525'),('1987-10-14','AA','525'),('1987-10-14','AA','533'),('1987-10-14','AA','533'),('1987-10-14','AA','533'),('1987-10-14','AA','546'),('1987-10-14','AA','546'),('1987-10-14','AA','546'),('1987-10-14','AA','546'),('1987-10-14','AA','556'),('1987-10-14','AA','556'),('1987-10-14','AA','556'),('1987-10-14','AA','597'),('1987-10-14','AA','597'),('1987-10-14','AA','597'),('1987-10-14','AA','601'),('1987-10-14','AA','601'),('1987-10-14','AA','627'),('1987-10-14','AA','629'),('1987-10-14','AA','629'),('1987-10-14','AA','670'),('1987-10-14','AA','673'),('1987-10-14','AA','673'),('1987-10-14','AA','680'),('1987-10-14','AA','680'),('1987-10-14','AA','817'),('1987-10-14','AA','817'),('1987-10-14','AA','824'),('1987-10-14','AA','824'),('1987-10-14','AA','824'),('1987-10-14','AA','824'),('1987-10-14','AA','832'),('1987-10-14','AA','832'),('1987-10-14','AA','852'),('1987-10-14','AA','866'),('1987-10-14','AA','866'),('1987-10-14','AA','871'),('1987-10-14','AA','871'),('1987-10-14','AA','880'),('1987-10-14','AA','880'),('1987-10-14','AA','880'),('1987-10-14','AA','883'),('1987-10-14','AA','883'),('1987-10-14','AA','885'),('1987-10-14','AA','885'),('1987-10-14','AA','885'),('1987-10-14','AA','890'),('1987-10-14','AA','890'),('1987-10-14','AA','893'),('1987-10-14','AA','893'),('1987-10-14','AA','905'),('1987-10-14','AA','905'),('1987-10-14','AA','915'),('1987-10-14','AA','929'),('1987-10-14','AA','929'),('1987-10-14','AA','936'),('1987-10-14','AA','936'),('1987-10-14','AA','937'),('1987-10-14','AA','937'),('1987-10-14','AA','955'),('1987-10-14','AA','955'),('1987-10-14','AA','966'),('1987-10-14','AA','1002'),('1987-10-14','AA','1002'),('1987-10-14','AA','1004'),('1987-10-14','AA','1004'),('1987-10-14','AA','1015'),('1987-10-14','AA','1015'),('1987-10-14','AA','1021'),('1987-10-14','AA','1021'),('1987-10-14','AA','1041'),('1987-10-14','AA','1041'),('1987-10-14','AA','1046'),('1987-10-14','AA','1046'),('1987-10-14','AA','1048'),('1987-10-14','AA','1048'),('1987-10-14','AA','1061'),('1987-10-14','AA','1061'),('1987-10-14','AA','1088'),('1987-10-14','AA','1088'),('1987-10-14','AA','2033'),('1987-10-14','AA','2033'),('1987-10-14','AA','2050'),('1987-10-14','AA','2058'),('1987-10-14','AA','2071'),('1987-10-14','AA','2071'),('1987-10-14','AA','2086'),('1987-10-14','AA','2111'),('1987-10-14','AA','2123'),('1987-10-14','AA','2123'),('1987-10-14','AA','2147'),('1987-10-14','AA','2147'),('1987-10-14','AA','2199'),('1987-10-14','AA','2199'),('1987-10-14','AA','2207'),('1987-10-14','AA','2207'),('1987-10-14','AA','2217'),('1987-10-14','AA','2230'),('1987-10-14','AA','2251'),('1987-10-14','AA','2251'),('1987-10-14','AA','2278'),('1987-10-14','AA','2351'),('1987-10-14','AA','2357'),('1987-10-14','AA','2490'),('1987-10-14','AA','2528'),('1987-10-14','AA','2528'),('1987-10-14','AA','2735'),('1987-10-14','AA','2735'),('1987-10-14','AA','2751'),('1987-10-14','AL','2'),('1987-10-14','AL','2'),('1987-10-14','AL','7'),('1987-10-14','AL','7'),('1987-10-14','AL','26'),('1987-10-14','AL','26'),('1987-10-14','AL','34'),('1987-10-14','AL','36'),('1987-10-14','AL','36'),('1987-10-14','AL','45'),('1987-10-14','AL','45'),('1987-10-14','AL','91'),('1987-10-14','AL','91'),('1987-10-14','AL','104'),('1987-10-14','AL','104'),('1987-10-14','AL','104'),('1987-10-14','AL','109'),('1987-10-14','AL','112'),('1987-10-14','AL','112'),('1987-10-14','AL','123'),('1987-10-14','AL','149'),('1987-10-14','AL','160'),('1987-10-14','AL','160'),('1987-10-14','AL','165'),('1987-10-14','AL','171'),('1987-10-14','AL','171'),('1987-10-14','AL','176'),('1987-10-14','AL','176'),('1987-10-14','AL','179'),('1987-10-14','AL','215'),('1987-10-14','AL','231'),('1987-10-14','AL','263'),('1987-10-14','AL','263'),('1987-10-14','AL','268'),('1987-10-14','AL','268'),('1987-10-14','AL','268'),('1987-10-14','AL','281'),('1987-10-14','AL','281'),('1987-10-14','AL','287'),('1987-10-14','AL','287'),('1987-10-14','AL','309'),('1987-10-14','AL','309'),('1987-10-14','AL','341'),('1987-10-14','AL','344'),('1987-10-14','AL','344'),('1987-10-14','AL','357'),('1987-10-14','AL','357'),('1987-10-14','AL','368'),('1987-10-14','AL','381'),('1987-10-14','AL','396'),('1987-10-14','AL','397'),('1987-10-14','AL','397'),('1987-10-14','AL','416'),('1987-10-14','AL','416'),('1987-10-14','AL','417'),('1987-10-14','AL','438'),('1987-10-14','AL','438'),('1987-10-14','AL','446'),('1987-10-14','AL','451'),('1987-10-14','AL','451'),('1987-10-14','AL','491'),('1987-10-14','AL','491'),('1987-10-14','AL','523'),('1987-10-14','AL','523'),('1987-10-14','AL','523'),('1987-10-14','AL','525'),('1987-10-14','AL','525'),('1987-10-14','AL','533'),('1987-10-14','AL','533'),('1987-10-14','AL','546'),('1987-10-14','AL','546'),('1987-10-14','AL','556'),('1987-10-14','AL','556'),('1987-10-14','AL','601'),('1987-10-14','AL','601'),('1987-10-14','AL','627'),('1987-10-14','AL','629'),('1987-10-14','AL','670'),('1987-10-14','AL','670'),('1987-10-14','AL','670'),('1987-10-14','AL','673'),('1987-10-14','AL','680'),('1987-10-15','AA','2'),('1987-10-15','AA','2'),('1987-10-15','AA','2'),('1987-10-15','AA','7'),('1987-10-15','AA','7'),('1987-10-15','AA','26'),('1987-10-15','AA','34'),('1987-10-15','AA','36'),('1987-10-15','AA','91'),('1987-10-15','AA','101'),('1987-10-15','AA','101'),('1987-10-15','AA','109'),('1987-10-15','AA','109'),('1987-10-15','AA','112'),('1987-10-15','AA','123'),('1987-10-15','AA','123'),('1987-10-15','AA','160'),('1987-10-15','AA','165'),('1987-10-15','AA','165'),('1987-10-15','AA','165'),('1987-10-15','AA','176'),('1987-10-15','AA','176'),('1987-10-15','AA','176'),('1987-10-15','AA','176'),('1987-10-15','AA','179'),('1987-10-15','AA','179'),('1987-10-15','AA','215'),('1987-10-15','AA','215'),('1987-10-15','AA','231'),('1987-10-15','AA','263'),('1987-10-15','AA','263'),('1987-10-15','AA','268'),('1987-10-15','AA','268'),('1987-10-15','AA','281'),('1987-10-15','AA','287'),('1987-10-15','AA','287'),('1987-10-15','AA','309'),('1987-10-15','AA','309'),('1987-10-15','AA','309'),('1987-10-15','AA','341'),('1987-10-15','AA','344'),('1987-10-15','AA','344'),('1987-10-15','AA','347'),('1987-10-15','AA','347'),('1987-10-15','AA','368'),('1987-10-15','AA','381'),('1987-10-15','AA','381'),('1987-10-15','AA','396'),('1987-10-15','AA','396'),('1987-10-15','AA','397'),('1987-10-15','AA','397'),('1987-10-15','AA','417'),('1987-10-15','AA','417'),('1987-10-15','AA','446'),('1987-10-15','AA','451'),('1987-10-15','AA','451'),('1987-10-15','AA','460'),('1987-10-15','AA','460'),('1987-10-15','AA','491'),('1987-10-15','AA','504'),('1987-10-15','AA','504'),('1987-10-15','AA','519'),('1987-10-15','AA','519'),('1987-10-15','AA','523'),('1987-10-15','AA','523'),('1987-10-15','AA','525'),('1987-10-15','AA','525'),('1987-10-15','AA','525'),('1987-10-15','AA','533'),('1987-10-15','AA','533'),('1987-10-15','AA','533'),('1987-10-15','AA','546'),('1987-10-15','AA','546'),('1987-10-15','AA','546'),('1987-10-15','AA','546'),('1987-10-15','AA','556'),('1987-10-15','AA','556'),('1987-10-15','AA','556'),('1987-10-15','AA','597'),('1987-10-15','AA','597'),('1987-10-15','AA','597'),('1987-10-15','AA','601'),('1987-10-15','AA','601'),('1987-10-15','AA','629'),('1987-10-15','AA','629'),('1987-10-15','AA','670'),('1987-10-15','AA','673'),('1987-10-15','AA','673'),('1987-10-15','AA','680'),('1987-10-15','AA','680'),('1987-10-15','AA','817'),('1987-10-15','AA','817'),('1987-10-15','AA','824'),('1987-10-15','AA','824'),('1987-10-15','AA','824'),('1987-10-15','AA','824'),('1987-10-15','AA','832'),('1987-10-15','AA','832'),('1987-10-15','AA','852'),('1987-10-15','AA','866'),('1987-10-15','AA','866'),('1987-10-15','AA','871'),('1987-10-15','AA','871'),('1987-10-15','AA','880'),('1987-10-15','AA','880'),('1987-10-15','AA','880'),('1987-10-15','AA','883'),('1987-10-15','AA','883'),('1987-10-15','AA','885'),('1987-10-15','AA','885'),('1987-10-15','AA','885'),('1987-10-15','AA','890'),('1987-10-15','AA','890'),('1987-10-15','AA','893'),('1987-10-15','AA','893'),('1987-10-15','AA','905'),('1987-10-15','AA','905'),('1987-10-15','AA','915'),('1987-10-15','AA','929'),('1987-10-15','AA','929'),('1987-10-15','AA','936'),('1987-10-15','AA','936'),('1987-10-15','AA','937'),('1987-10-15','AA','955'),('1987-10-15','AA','955'),('1987-10-15','AA','966'),('1987-10-15','AA','1002'),('1987-10-15','AA','1002'),('1987-10-15','AA','1004'),('1987-10-15','AA','1004'),('1987-10-15','AA','1015'),('1987-10-15','AA','1015'),('1987-10-15','AA','1021'),('1987-10-15','AA','1021'),('1987-10-15','AA','1041'),('1987-10-15','AA','1041'),('1987-10-15','AA','1046'),('1987-10-15','AA','1046'),('1987-10-15','AA','1048'),('1987-10-15','AA','1048'),('1987-10-15','AA','1061'),('1987-10-15','AA','1061'),('1987-10-15','AA','1088'),('1987-10-15','AA','1088'),('1987-10-15','AA','2033'),('1987-10-15','AA','2033'),('1987-10-15','AA','2050'),('1987-10-15','AA','2058'),('1987-10-15','AA','2071'),('1987-10-15','AA','2071'),('1987-10-15','AA','2086'),('1987-10-15','AA','2105'),('1987-10-15','AA','2111'),('1987-10-15','AA','2123'),('1987-10-15','AA','2123'),('1987-10-15','AA','2147'),('1987-10-15','AA','2147'),('1987-10-15','AA','2199'),('1987-10-15','AA','2199'),('1987-10-15','AA','2207'),('1987-10-15','AA','2207'),('1987-10-15','AA','2217'),('1987-10-15','AA','2230'),('1987-10-15','AA','2245'),('1987-10-15','AA','2251'),('1987-10-15','AA','2251'),('1987-10-15','AA','2275'),('1987-10-15','AA','2278'),('1987-10-15','AA','2351'),('1987-10-15','AA','2357'),('1987-10-15','AA','2361'),('1987-10-15','AA','2490'),('1987-10-15','AA','2528'),('1987-10-15','AA','2528'),('1987-10-15','AA','2735'),('1987-10-15','AA','2735'),('1987-10-15','AA','2751'),('1987-10-15','AL','2'),('1987-10-15','AL','2'),('1987-10-15','AL','7'),('1987-10-15','AL','7'),('1987-10-15','AL','26'),('1987-10-15','AL','26'),('1987-10-15','AL','34'),('1987-10-15','AL','34'),('1987-10-15','AL','36'),('1987-10-15','AL','36'),('1987-10-15','AL','45'),('1987-10-15','AL','45'),('1987-10-15','AL','45'),('1987-10-15','AL','91'),('1987-10-15','AL','91'),('1987-10-15','AL','104'),('1987-10-15','AL','104'),('1987-10-15','AL','104'),('1987-10-15','AL','109'),('1987-10-15','AL','112'),('1987-10-15','AL','112'),('1987-10-15','AL','123'),('1987-10-15','AL','149'),('1987-10-15','AL','160'),('1987-10-15','AL','160'),('1987-10-15','AL','165'),('1987-10-15','AL','171'),('1987-10-15','AL','171'),('1987-10-15','AL','176'),('1987-10-15','AL','176'),('1987-10-15','AL','179'),('1987-10-15','AL','215'),('1987-10-15','AL','231'),('1987-10-15','AL','263'),('1987-10-15','AL','263'),('1987-10-15','AL','268'),('1987-10-15','AL','268'),('1987-10-15','AL','268'),('1987-10-15','AL','281'),('1987-10-15','AL','281'),('1987-10-15','AL','287'),('1987-10-15','AL','287'),('1987-10-15','AL','309'),('1987-10-15','AL','309'),('1987-10-15','AL','341'),('1987-10-15','AL','344'),('1987-10-15','AL','344'),('1987-10-15','AL','357'),('1987-10-15','AL','357'),('1987-10-15','AL','368'),('1987-10-15','AL','381'),('1987-10-15','AL','396'),('1987-10-15','AL','397'),('1987-10-15','AL','397'),('1987-10-15','AL','416'),('1987-10-15','AL','416'),('1987-10-15','AL','417'),('1987-10-15','AL','438'),('1987-10-15','AL','438'),('1987-10-15','AL','446'),('1987-10-15','AL','451'),('1987-10-15','AL','451'),('1987-10-15','AL','491'),('1987-10-15','AL','491'),('1987-10-15','AL','523'),('1987-10-15','AL','523'),('1987-10-15','AL','523'),('1987-10-15','AL','525'),('1987-10-15','AL','525'),('1987-10-15','AL','533'),('1987-10-15','AL','533'),('1987-10-15','AL','546'),('1987-10-15','AL','546'),('1987-10-15','AL','556'),('1987-10-15','AL','556'),('1987-10-15','AL','601'),('1987-10-15','AL','601'),('1987-10-15','AL','627'),('1987-10-15','AL','629'),('1987-10-15','AL','670'),('1987-10-15','AL','670'),('1987-10-15','AL','670'),('1987-10-15','AL','673'),('1987-10-15','AL','680'),('1987-10-16','AA','2'),('1987-10-16','AA','2'),('1987-10-16','AA','2'),('1987-10-16','AA','7'),('1987-10-16','AA','7'),('1987-10-16','AA','26'),('1987-10-16','AA','34'),('1987-10-16','AA','36'),('1987-10-16','AA','91'),('1987-10-16','AA','101'),('1987-10-16','AA','101'),('1987-10-16','AA','109'),('1987-10-16','AA','109'),('1987-10-16','AA','112'),('1987-10-16','AA','123'),('1987-10-16','AA','160'),('1987-10-16','AA','165'),('1987-10-16','AA','165'),('1987-10-16','AA','176'),('1987-10-16','AA','176'),('1987-10-16','AA','176'),('1987-10-16','AA','176'),('1987-10-16','AA','179'),('1987-10-16','AA','179'),('1987-10-16','AA','215'),('1987-10-16','AA','215'),('1987-10-16','AA','231'),('1987-10-16','AA','263'),('1987-10-16','AA','263'),('1987-10-16','AA','268'),('1987-10-16','AA','281'),('1987-10-16','AA','287'),('1987-10-16','AA','287'),('1987-10-16','AA','309'),('1987-10-16','AA','309'),('1987-10-16','AA','309'),('1987-10-16','AA','341'),('1987-10-16','AA','344'),('1987-10-16','AA','344'),('1987-10-16','AA','347'),('1987-10-16','AA','347'),('1987-10-16','AA','368'),('1987-10-16','AA','381'),('1987-10-16','AA','381'),('1987-10-16','AA','381'),('1987-10-16','AA','396'),('1987-10-16','AA','396'),('1987-10-16','AA','397'),('1987-10-16','AA','417'),('1987-10-16','AA','417'),('1987-10-16','AA','446'),('1987-10-16','AA','451'),('1987-10-16','AA','451'),('1987-10-16','AA','460'),('1987-10-16','AA','460'),('1987-10-16','AA','491'),('1987-10-16','AA','504'),('1987-10-16','AA','504'),('1987-10-16','AA','519'),('1987-10-16','AA','519'),('1987-10-16','AA','523'),('1987-10-16','AA','523'),('1987-10-16','AA','525'),('1987-10-16','AA','525'),('1987-10-16','AA','533'),('1987-10-16','AA','533'),('1987-10-16','AA','546'),('1987-10-16','AA','546'),('1987-10-16','AA','546'),('1987-10-16','AA','546'),('1987-10-16','AA','556'),('1987-10-16','AA','556'),('1987-10-16','AA','556'),('1987-10-16','AA','597'),('1987-10-16','AA','597'),('1987-10-16','AA','597'),('1987-10-16','AA','601'),('1987-10-16','AA','601'),('1987-10-16','AA','627'),('1987-10-16','AA','629'),('1987-10-16','AA','629'),('1987-10-16','AA','670'),('1987-10-16','AA','673'),('1987-10-16','AA','673'),('1987-10-16','AA','680'),('1987-10-16','AA','680'),('1987-10-16','AA','817'),('1987-10-16','AA','817'),('1987-10-16','AA','824'),('1987-10-16','AA','824'),('1987-10-16','AA','824'),('1987-10-16','AA','824'),('1987-10-16','AA','832'),('1987-10-16','AA','832'),('1987-10-16','AA','852'),('1987-10-16','AA','866'),('1987-10-16','AA','866'),('1987-10-16','AA','871'),('1987-10-16','AA','871'),('1987-10-16','AA','880'),('1987-10-16','AA','880'),('1987-10-16','AA','880'),('1987-10-16','AA','880'),('1987-10-16','AA','883'),('1987-10-16','AA','883'),('1987-10-16','AA','885'),('1987-10-16','AA','885'),('1987-10-16','AA','885'),('1987-10-16','AA','890'),('1987-10-16','AA','890'),('1987-10-16','AA','893'),('1987-10-16','AA','893'),('1987-10-16','AA','905'),('1987-10-16','AA','905'),('1987-10-16','AA','915'),('1987-10-16','AA','929'),('1987-10-16','AA','929'),('1987-10-16','AA','936'),('1987-10-16','AA','936'),('1987-10-16','AA','937'),('1987-10-16','AA','937'),('1987-10-16','AA','955'),('1987-10-16','AA','955'),('1987-10-16','AA','966'),('1987-10-16','AA','1002'),('1987-10-16','AA','1002'),('1987-10-16','AA','1004'),('1987-10-16','AA','1004'),('1987-10-16','AA','1015'),('1987-10-16','AA','1015'),('1987-10-16','AA','1021'),('1987-10-16','AA','1021'),('1987-10-16','AA','1041'),('1987-10-16','AA','1041'),('1987-10-16','AA','1046'),('1987-10-16','AA','1046'),('1987-10-16','AA','1048'),('1987-10-16','AA','1048'),('1987-10-16','AA','1061'),('1987-10-16','AA','1061'),('1987-10-16','AA','1088'),('1987-10-16','AA','1088'),('1987-10-16','AA','2033'),('1987-10-16','AA','2033'),('1987-10-16','AA','2050'),('1987-10-16','AA','2058'),('1987-10-16','AA','2071'),('1987-10-16','AA','2071'),('1987-10-16','AA','2086'),('1987-10-16','AA','2105'),('1987-10-16','AA','2111'),('1987-10-16','AA','2123'),('1987-10-16','AA','2123'),('1987-10-16','AA','2147'),('1987-10-16','AA','2147'),('1987-10-16','AA','2199'),('1987-10-16','AA','2199'),('1987-10-16','AA','2207'),('1987-10-16','AA','2207'),('1987-10-16','AA','2217'),('1987-10-16','AA','2230'),('1987-10-16','AA','2245'),('1987-10-16','AA','2251'),('1987-10-16','AA','2251'),('1987-10-16','AA','2275'),('1987-10-16','AA','2278'),('1987-10-16','AA','2351'),('1987-10-16','AA','2357'),('1987-10-16','AA','2361'),('1987-10-16','AA','2490'),('1987-10-16','AA','2528'),('1987-10-16','AA','2528'),('1987-10-16','AA','2735'),('1987-10-16','AA','2735'),('1987-10-16','AA','2751'),('1987-10-16','AL','2'),('1987-10-16','AL','2'),('1987-10-16','AL','7'),('1987-10-16','AL','7'),('1987-10-16','AL','26'),('1987-10-16','AL','26'),('1987-10-16','AL','34'),('1987-10-16','AL','36'),('1987-10-16','AL','36'),('1987-10-16','AL','45'),('1987-10-16','AL','45'),('1987-10-16','AL','45'),('1987-10-16','AL','91'),('1987-10-16','AL','91'),('1987-10-16','AL','104'),('1987-10-16','AL','104'),('1987-10-16','AL','109'),('1987-10-16','AL','112'),('1987-10-16','AL','112'),('1987-10-16','AL','123'),('1987-10-16','AL','149'),('1987-10-16','AL','160'),('1987-10-16','AL','160'),('1987-10-16','AL','165'),('1987-10-16','AL','171'),('1987-10-16','AL','171'),('1987-10-16','AL','176'),('1987-10-16','AL','176'),('1987-10-16','AL','179'),('1987-10-16','AL','215'),('1987-10-16','AL','231'),('1987-10-16','AL','263'),('1987-10-16','AL','263'),('1987-10-16','AL','268'),('1987-10-16','AL','268'),('1987-10-16','AL','268'),('1987-10-16','AL','281'),('1987-10-16','AL','281'),('1987-10-16','AL','287'),('1987-10-16','AL','287'),('1987-10-16','AL','309'),('1987-10-16','AL','309'),('1987-10-16','AL','341'),('1987-10-16','AL','344'),('1987-10-16','AL','344'),('1987-10-16','AL','357'),('1987-10-16','AL','357'),('1987-10-16','AL','368'),('1987-10-16','AL','381'),('1987-10-16','AL','396'),('1987-10-16','AL','397'),('1987-10-16','AL','397'),('1987-10-16','AL','416'),('1987-10-16','AL','416'),('1987-10-16','AL','417'),('1987-10-16','AL','438'),('1987-10-16','AL','438'),('1987-10-16','AL','446'),('1987-10-16','AL','451'),('1987-10-16','AL','451'),('1987-10-16','AL','491'),('1987-10-16','AL','491'),('1987-10-16','AL','523'),('1987-10-16','AL','523'),('1987-10-16','AL','523'),('1987-10-16','AL','525'),('1987-10-16','AL','525'),('1987-10-16','AL','533'),('1987-10-16','AL','533'),('1987-10-16','AL','546'),('1987-10-16','AL','546'),('1987-10-16','AL','556'),('1987-10-16','AL','556'),('1987-10-16','AL','601'),('1987-10-16','AL','601'),('1987-10-16','AL','627'),('1987-10-16','AL','629'),('1987-10-16','AL','670'),('1987-10-16','AL','670'),('1987-10-16','AL','670'),('1987-10-16','AL','673'),('1987-10-16','AL','680'),('1987-10-17','AA','2'),('1987-10-17','AA','2'),('1987-10-17','AA','2'),('1987-10-17','AA','7'),('1987-10-17','AA','7'),('1987-10-17','AA','26'),('1987-10-17','AA','36'),('1987-10-17','AA','91'),('1987-10-17','AA','101'),('1987-10-17','AA','101'),('1987-10-17','AA','109'),('1987-10-17','AA','109'),('1987-10-17','AA','112'),('1987-10-17','AA','123'),('1987-10-17','AA','123'),('1987-10-17','AA','160'),('1987-10-17','AA','165'),('1987-10-17','AA','165'),('1987-10-17','AA','165'),('1987-10-17','AA','176'),('1987-10-17','AA','176'),('1987-10-17','AA','176'),('1987-10-17','AA','176'),('1987-10-17','AA','179'),('1987-10-17','AA','179'),('1987-10-17','AA','215'),('1987-10-17','AA','215'),('1987-10-17','AA','231'),('1987-10-17','AA','231'),('1987-10-17','AA','263'),('1987-10-17','AA','263'),('1987-10-17','AA','268'),('1987-10-17','AA','268'),('1987-10-17','AA','281'),('1987-10-17','AA','287'),('1987-10-17','AA','287'),('1987-10-17','AA','309'),('1987-10-17','AA','309'),('1987-10-17','AA','309'),('1987-10-17','AA','341'),('1987-10-17','AA','344'),('1987-10-17','AA','344'),('1987-10-17','AA','347'),('1987-10-17','AA','347'),('1987-10-17','AA','368'),('1987-10-17','AA','381'),('1987-10-17','AA','381'),('1987-10-17','AA','381'),('1987-10-17','AA','396'),('1987-10-17','AA','396'),('1987-10-17','AA','397'),('1987-10-17','AA','417'),('1987-10-17','AA','446'),('1987-10-17','AA','451'),('1987-10-17','AA','451'),('1987-10-17','AA','460'),('1987-10-17','AA','460'),('1987-10-17','AA','491'),('1987-10-17','AA','491'),('1987-10-17','AA','504'),('1987-10-17','AA','504'),('1987-10-17','AA','519'),('1987-10-17','AA','519'),('1987-10-17','AA','523'),('1987-10-17','AA','523'),('1987-10-17','AA','525'),('1987-10-17','AA','525'),('1987-10-17','AA','525'),('1987-10-17','AA','533'),('1987-10-17','AA','533'),('1987-10-17','AA','546'),('1987-10-17','AA','546'),('1987-10-17','AA','546'),('1987-10-17','AA','546'),('1987-10-17','AA','556'),('1987-10-17','AA','556'),('1987-10-17','AA','556'),('1987-10-17','AA','597'),('1987-10-17','AA','597'),('1987-10-17','AA','597'),('1987-10-17','AA','601'),('1987-10-17','AA','627'),('1987-10-17','AA','629'),('1987-10-17','AA','629'),('1987-10-17','AA','670'),('1987-10-17','AA','673'),('1987-10-17','AA','673'),('1987-10-17','AA','680'),('1987-10-17','AA','680'),('1987-10-17','AA','817'),('1987-10-17','AA','817'),('1987-10-17','AA','824'),('1987-10-17','AA','824'),('1987-10-17','AA','824'),('1987-10-17','AA','824'),('1987-10-17','AA','832'),('1987-10-17','AA','832'),('1987-10-17','AA','852'),('1987-10-17','AA','852'),('1987-10-17','AA','866'),('1987-10-17','AA','866'),('1987-10-17','AA','871'),('1987-10-17','AA','871'),('1987-10-17','AA','880'),('1987-10-17','AA','880'),('1987-10-17','AA','880'),('1987-10-17','AA','880'),('1987-10-17','AA','883'),('1987-10-17','AA','883'),('1987-10-17','AA','885'),('1987-10-17','AA','885'),('1987-10-17','AA','885'),('1987-10-17','AA','890'),('1987-10-17','AA','890'),('1987-10-17','AA','893'),('1987-10-17','AA','893'),('1987-10-17','AA','905'),('1987-10-17','AA','905'),('1987-10-17','AA','915'),('1987-10-17','AA','929'),('1987-10-17','AA','936'),('1987-10-17','AA','936'),('1987-10-17','AA','937'),('1987-10-17','AA','937'),('1987-10-17','AA','955'),('1987-10-17','AA','955'),('1987-10-17','AA','966'),('1987-10-17','AA','1002'),('1987-10-17','AA','1002'),('1987-10-17','AA','1004'),('1987-10-17','AA','1004'),('1987-10-17','AA','1015'),('1987-10-17','AA','1015'),('1987-10-17','AA','1021'),('1987-10-17','AA','1021'),('1987-10-17','AA','1041'),('1987-10-17','AA','1041'),('1987-10-17','AA','1046'),('1987-10-17','AA','1046'),('1987-10-17','AA','1048'),('1987-10-17','AA','1048'),('1987-10-17','AA','1061'),('1987-10-17','AA','1061'),('1987-10-17','AA','1088'),('1987-10-17','AA','1088'),('1987-10-17','AA','2033'),('1987-10-17','AA','2033'),('1987-10-17','AA','2050'),('1987-10-17','AA','2058'),('1987-10-17','AA','2071'),('1987-10-17','AA','2086'),('1987-10-17','AA','2105'),('1987-10-17','AA','2111'),('1987-10-17','AA','2123'),('1987-10-17','AA','2123'),('1987-10-17','AA','2147'),('1987-10-17','AA','2147'),('1987-10-17','AA','2199'),('1987-10-17','AA','2199'),('1987-10-17','AA','2207'),('1987-10-17','AA','2207'),('1987-10-17','AA','2217'),('1987-10-17','AA','2230'),('1987-10-17','AA','2251'),('1987-10-17','AA','2251'),('1987-10-17','AA','2275'),('1987-10-17','AA','2278'),('1987-10-17','AA','2351'),('1987-10-17','AA','2357'),('1987-10-17','AA','2361'),('1987-10-17','AA','2490'),('1987-10-17','AA','2528'),('1987-10-17','AA','2528'),('1987-10-17','AA','2735'),('1987-10-17','AA','2735'),('1987-10-17','AL','2'),('1987-10-17','AL','2'),('1987-10-17','AL','7'),('1987-10-17','AL','7'),('1987-10-17','AL','26'),('1987-10-17','AL','26'),('1987-10-17','AL','34'),('1987-10-17','AL','36'),('1987-10-17','AL','36'),('1987-10-17','AL','45'),('1987-10-17','AL','45'),('1987-10-17','AL','45'),('1987-10-17','AL','91'),('1987-10-17','AL','91'),('1987-10-17','AL','104'),('1987-10-17','AL','104'),('1987-10-17','AL','109'),('1987-10-17','AL','112'),('1987-10-17','AL','112'),('1987-10-17','AL','149'),('1987-10-17','AL','160'),('1987-10-17','AL','160'),('1987-10-17','AL','165'),('1987-10-17','AL','171'),('1987-10-17','AL','171'),('1987-10-17','AL','176'),('1987-10-17','AL','176'),('1987-10-17','AL','179'),('1987-10-17','AL','215'),('1987-10-17','AL','231'),('1987-10-17','AL','263'),('1987-10-17','AL','268'),('1987-10-17','AL','268'),('1987-10-17','AL','268'),('1987-10-17','AL','287'),('1987-10-17','AL','287'),('1987-10-17','AL','309'),('1987-10-17','AL','309'),('1987-10-17','AL','344'),('1987-10-17','AL','344'),('1987-10-17','AL','357'),('1987-10-17','AL','357'),('1987-10-17','AL','381'),('1987-10-17','AL','396'),('1987-10-17','AL','397'),('1987-10-17','AL','397'),('1987-10-17','AL','397'),('1987-10-17','AL','416'),('1987-10-17','AL','417'),('1987-10-17','AL','438'),('1987-10-17','AL','438'),('1987-10-17','AL','451'),('1987-10-17','AL','451'),('1987-10-17','AL','491'),('1987-10-17','AL','491'),('1987-10-17','AL','523'),('1987-10-17','AL','523'),('1987-10-17','AL','525'),('1987-10-17','AL','525'),('1987-10-17','AL','533'),('1987-10-17','AL','546'),('1987-10-17','AL','546'),('1987-10-17','AL','556'),('1987-10-17','AL','556'),('1987-10-17','AL','601'),('1987-10-17','AL','601'),('1987-10-17','AL','627'),('1987-10-17','AL','670'),('1987-10-17','AL','673'),('1987-10-17','AL','680'),('1987-10-17','AL','936'),('1987-10-17','AL','966'),('1987-10-18','AA','2'),('1987-10-18','AA','2'),('1987-10-18','AA','2'),('1987-10-18','AA','7'),('1987-10-18','AA','7'),('1987-10-18','AA','26'),('1987-10-18','AA','34'),('1987-10-18','AA','36'),('1987-10-18','AA','91'),('1987-10-18','AA','101'),('1987-10-18','AA','101'),('1987-10-18','AA','109'),('1987-10-18','AA','109'),('1987-10-18','AA','112'),('1987-10-18','AA','123'),('1987-10-18','AA','123'),('1987-10-18','AA','160'),('1987-10-18','AA','165'),('1987-10-18','AA','165'),('1987-10-18','AA','165'),('1987-10-18','AA','176'),('1987-10-18','AA','176'),('1987-10-18','AA','176'),('1987-10-18','AA','176'),('1987-10-18','AA','179'),('1987-10-18','AA','179'),('1987-10-18','AA','215'),('1987-10-18','AA','231'),('1987-10-18','AA','231'),('1987-10-18','AA','263'),('1987-10-18','AA','268'),('1987-10-18','AA','268'),('1987-10-18','AA','281'),('1987-10-18','AA','287'),('1987-10-18','AA','287'),('1987-10-18','AA','309'),('1987-10-18','AA','309'),('1987-10-18','AA','309'),('1987-10-18','AA','341'),('1987-10-18','AA','344'),('1987-10-18','AA','344'),('1987-10-18','AA','347'),('1987-10-18','AA','347'),('1987-10-18','AA','368'),('1987-10-18','AA','381'),('1987-10-18','AA','381'),('1987-10-18','AA','381'),('1987-10-18','AA','396'),('1987-10-18','AA','396'),('1987-10-18','AA','397'),('1987-10-18','AA','397'),('1987-10-18','AA','417'),('1987-10-18','AA','417'),('1987-10-18','AA','451'),('1987-10-18','AA','451'),('1987-10-18','AA','460'),('1987-10-18','AA','491'),('1987-10-18','AA','491'),('1987-10-18','AA','504'),('1987-10-18','AA','504'),('1987-10-18','AA','519'),('1987-10-18','AA','519'),('1987-10-18','AA','523'),('1987-10-18','AA','523'),('1987-10-18','AA','525'),('1987-10-18','AA','525'),('1987-10-18','AA','525'),('1987-10-18','AA','533'),('1987-10-18','AA','533'),('1987-10-18','AA','546'),('1987-10-18','AA','546'),('1987-10-18','AA','546'),('1987-10-18','AA','546'),('1987-10-18','AA','556'),('1987-10-18','AA','556'),('1987-10-18','AA','556'),('1987-10-18','AA','597'),('1987-10-18','AA','597'),('1987-10-18','AA','597'),('1987-10-18','AA','601'),('1987-10-18','AA','601'),('1987-10-18','AA','629'),('1987-10-18','AA','629'),('1987-10-18','AA','670'),('1987-10-18','AA','673'),('1987-10-18','AA','680'),('1987-10-18','AA','680'),('1987-10-18','AA','817'),('1987-10-18','AA','817'),('1987-10-18','AA','824'),('1987-10-18','AA','824'),('1987-10-18','AA','824'),('1987-10-18','AA','824'),('1987-10-18','AA','832'),('1987-10-18','AA','832'),('1987-10-18','AA','852'),('1987-10-18','AA','866'),('1987-10-18','AA','866'),('1987-10-18','AA','871'),('1987-10-18','AA','871'),('1987-10-18','AA','880'),('1987-10-18','AA','880'),('1987-10-18','AA','880'),('1987-10-18','AA','880'),('1987-10-18','AA','883'),('1987-10-18','AA','883'),('1987-10-18','AA','885'),('1987-10-18','AA','885'),('1987-10-18','AA','885'),('1987-10-18','AA','890'),('1987-10-18','AA','890'),('1987-10-18','AA','893'),('1987-10-18','AA','893'),('1987-10-18','AA','905'),('1987-10-18','AA','905'),('1987-10-18','AA','915'),('1987-10-18','AA','929'),('1987-10-18','AA','929'),('1987-10-18','AA','936'),('1987-10-18','AA','936'),('1987-10-18','AA','937'),('1987-10-18','AA','937'),('1987-10-18','AA','955'),('1987-10-18','AA','966'),('1987-10-18','AA','1002'),('1987-10-18','AA','1002'),('1987-10-18','AA','1004'),('1987-10-18','AA','1004'),('1987-10-18','AA','1015'),('1987-10-18','AA','1015'),('1987-10-18','AA','1021'),('1987-10-18','AA','1021'),('1987-10-18','AA','1041'),('1987-10-18','AA','1041'),('1987-10-18','AA','1046'),('1987-10-18','AA','1046'),('1987-10-18','AA','1048'),('1987-10-18','AA','1048'),('1987-10-18','AA','1061'),('1987-10-18','AA','1061'),('1987-10-18','AA','1088'),('1987-10-18','AA','1088'),('1987-10-18','AA','2033'),('1987-10-18','AA','2033'),('1987-10-18','AA','2050'),('1987-10-18','AA','2058'),('1987-10-18','AA','2071'),('1987-10-18','AA','2071'),('1987-10-18','AA','2086'),('1987-10-18','AA','2111'),('1987-10-18','AA','2123'),('1987-10-18','AA','2147'),('1987-10-18','AA','2147'),('1987-10-18','AA','2199'),('1987-10-18','AA','2199'),('1987-10-18','AA','2207'),('1987-10-18','AA','2207'),('1987-10-18','AA','2230'),('1987-10-18','AA','2245'),('1987-10-18','AA','2251'),('1987-10-18','AA','2251'),('1987-10-18','AA','2275'),('1987-10-18','AA','2278'),('1987-10-18','AA','2351'),('1987-10-18','AA','2357'),('1987-10-18','AA','2361'),('1987-10-18','AA','2490'),('1987-10-18','AA','2528'),('1987-10-18','AA','2528'),('1987-10-18','AA','2735'),('1987-10-18','AA','2735'),('1987-10-18','AA','2751'),('1987-10-18','AL','2'),('1987-10-18','AL','2'),('1987-10-18','AL','7'),('1987-10-18','AL','7'),('1987-10-18','AL','26'),('1987-10-18','AL','26'),('1987-10-18','AL','34'),('1987-10-18','AL','34'),('1987-10-18','AL','36'),('1987-10-18','AL','36'),('1987-10-18','AL','45'),('1987-10-18','AL','45'),('1987-10-18','AL','45'),('1987-10-18','AL','91'),('1987-10-18','AL','91'),('1987-10-18','AL','104'),('1987-10-18','AL','104'),('1987-10-18','AL','104'),('1987-10-18','AL','112'),('1987-10-18','AL','123'),('1987-10-18','AL','160'),('1987-10-18','AL','160'),('1987-10-18','AL','165'),('1987-10-18','AL','171'),('1987-10-18','AL','171'),('1987-10-18','AL','176'),('1987-10-18','AL','176'),('1987-10-18','AL','179'),('1987-10-18','AL','215'),('1987-10-18','AL','231'),('1987-10-18','AL','263'),('1987-10-18','AL','263'),('1987-10-18','AL','281'),('1987-10-18','AL','281'),('1987-10-18','AL','309'),('1987-10-18','AL','309'),('1987-10-18','AL','341'),('1987-10-18','AL','344'),('1987-10-18','AL','344'),('1987-10-18','AL','357'),('1987-10-18','AL','357'),('1987-10-18','AL','368'),('1987-10-18','AL','396'),('1987-10-18','AL','416'),('1987-10-18','AL','416'),('1987-10-18','AL','417'),('1987-10-18','AL','438'),('1987-10-18','AL','438'),('1987-10-18','AL','446'),('1987-10-18','AL','451'),('1987-10-18','AL','491'),('1987-10-18','AL','523'),('1987-10-18','AL','523'),('1987-10-18','AL','523'),('1987-10-18','AL','525'),('1987-10-18','AL','525'),('1987-10-18','AL','533'),('1987-10-18','AL','533'),('1987-10-18','AL','546'),('1987-10-18','AL','546'),('1987-10-18','AL','556'),('1987-10-18','AL','601'),('1987-10-18','AL','601'),('1987-10-18','AL','627'),('1987-10-18','AL','629'),('1987-10-18','AL','670'),('1987-10-18','AL','670'),('1987-10-18','AL','670'),('1987-10-18','AL','673'),('1987-10-18','AL','680'),('1987-10-18','AL','937'),('1987-10-18','AL','937'),('1987-10-18','AL','955'),('1987-10-19','AA','2'),('1987-10-19','AA','2'),('1987-10-19','AA','2'),('1987-10-19','AA','7'),('1987-10-19','AA','7'),('1987-10-19','AA','26'),('1987-10-19','AA','34'),('1987-10-19','AA','36'),('1987-10-19','AA','91'),('1987-10-19','AA','101'),('1987-10-19','AA','101'),('1987-10-19','AA','109'),('1987-10-19','AA','109'),('1987-10-19','AA','112'),('1987-10-19','AA','123'),('1987-10-19','AA','123'),('1987-10-19','AA','160'),('1987-10-19','AA','165'),('1987-10-19','AA','165'),('1987-10-19','AA','165'),('1987-10-19','AA','176'),('1987-10-19','AA','176'),('1987-10-19','AA','176'),('1987-10-19','AA','176'),('1987-10-19','AA','179'),('1987-10-19','AA','179'),('1987-10-19','AA','215'),('1987-10-19','AA','215'),('1987-10-19','AA','231'),('1987-10-19','AA','231'),('1987-10-19','AA','263'),('1987-10-19','AA','263'),('1987-10-19','AA','268'),('1987-10-19','AA','268'),('1987-10-19','AA','281'),('1987-10-19','AA','287'),('1987-10-19','AA','287'),('1987-10-19','AA','309'),('1987-10-19','AA','309'),('1987-10-19','AA','341'),('1987-10-19','AA','344'),('1987-10-19','AA','344'),('1987-10-19','AA','347'),('1987-10-19','AA','347'),('1987-10-19','AA','368'),('1987-10-19','AA','381'),('1987-10-19','AA','381'),('1987-10-19','AA','381'),('1987-10-19','AA','396'),('1987-10-19','AA','396'),('1987-10-19','AA','397'),('1987-10-19','AA','397'),('1987-10-19','AA','417'),('1987-10-19','AA','417'),('1987-10-19','AA','446'),('1987-10-19','AA','451'),('1987-10-19','AA','451'),('1987-10-19','AA','491'),('1987-10-19','AA','504'),('1987-10-19','AA','504'),('1987-10-19','AA','519'),('1987-10-19','AA','519'),('1987-10-19','AA','523'),('1987-10-19','AA','523'),('1987-10-19','AA','525'),('1987-10-19','AA','525'),('1987-10-19','AA','525'),('1987-10-19','AA','533'),('1987-10-19','AA','533'),('1987-10-19','AA','546'),('1987-10-19','AA','546'),('1987-10-19','AA','546'),('1987-10-19','AA','546'),('1987-10-19','AA','556'),('1987-10-19','AA','556'),('1987-10-19','AA','556'),('1987-10-19','AA','597'),('1987-10-19','AA','597'),('1987-10-19','AA','597'),('1987-10-19','AA','601'),('1987-10-19','AA','601'),('1987-10-19','AA','627'),('1987-10-19','AA','629'),('1987-10-19','AA','629'),('1987-10-19','AA','670'),('1987-10-19','AA','673'),('1987-10-19','AA','673'),('1987-10-19','AA','680'),('1987-10-19','AA','680'),('1987-10-19','AA','817'),('1987-10-19','AA','817'),('1987-10-19','AA','824'),('1987-10-19','AA','824'),('1987-10-19','AA','824'),('1987-10-19','AA','832'),('1987-10-19','AA','832'),('1987-10-19','AA','852'),('1987-10-19','AA','852'),('1987-10-19','AA','866'),('1987-10-19','AA','866'),('1987-10-19','AA','871'),('1987-10-19','AA','871'),('1987-10-19','AA','880'),('1987-10-19','AA','880'),('1987-10-19','AA','880'),('1987-10-19','AA','880'),('1987-10-19','AA','883'),('1987-10-19','AA','883'),('1987-10-19','AA','885'),('1987-10-19','AA','885'),('1987-10-19','AA','890'),('1987-10-19','AA','890'),('1987-10-19','AA','893'),('1987-10-19','AA','893'),('1987-10-19','AA','905'),('1987-10-19','AA','905'),('1987-10-19','AA','915'),('1987-10-19','AA','929'),('1987-10-19','AA','929'),('1987-10-19','AA','936'),('1987-10-19','AA','936'),('1987-10-19','AA','937'),('1987-10-19','AA','955'),('1987-10-19','AA','955'),('1987-10-19','AA','966'),('1987-10-19','AA','1002'),('1987-10-19','AA','1002'),('1987-10-19','AA','1004'),('1987-10-19','AA','1004'),('1987-10-19','AA','1015'),('1987-10-19','AA','1015'),('1987-10-19','AA','1021'),('1987-10-19','AA','1021'),('1987-10-19','AA','1041'),('1987-10-19','AA','1041'),('1987-10-19','AA','1046'),('1987-10-19','AA','1046'),('1987-10-19','AA','1048'),('1987-10-19','AA','1048'),('1987-10-19','AA','1061'),('1987-10-19','AA','1061'),('1987-10-19','AA','1088'),('1987-10-19','AA','1088'),('1987-10-19','AA','2033'),('1987-10-19','AA','2033'),('1987-10-19','AA','2050'),('1987-10-19','AA','2058'),('1987-10-19','AA','2071'),('1987-10-19','AA','2071'),('1987-10-19','AA','2086'),('1987-10-19','AA','2105'),('1987-10-19','AA','2111'),('1987-10-19','AA','2123'),('1987-10-19','AA','2123'),('1987-10-19','AA','2147'),('1987-10-19','AA','2147'),('1987-10-19','AA','2199'),('1987-10-19','AA','2199'),('1987-10-19','AA','2207'),('1987-10-19','AA','2207'),('1987-10-19','AA','2217'),('1987-10-19','AA','2230'),('1987-10-19','AA','2245'),('1987-10-19','AA','2251'),('1987-10-19','AA','2251'),('1987-10-19','AA','2275'),('1987-10-19','AA','2278'),('1987-10-19','AA','2357'),('1987-10-19','AA','2361'),('1987-10-19','AA','2490'),('1987-10-19','AA','2528'),('1987-10-19','AA','2735'),('1987-10-19','AA','2735'),('1987-10-19','AA','2751'),('1987-10-19','AL','2'),('1987-10-19','AL','2'),('1987-10-19','AL','7'),('1987-10-19','AL','7'),('1987-10-19','AL','26'),('1987-10-19','AL','26'),('1987-10-19','AL','34'),('1987-10-19','AL','34'),('1987-10-19','AL','36'),('1987-10-19','AL','36'),('1987-10-19','AL','45'),('1987-10-19','AL','45'),('1987-10-19','AL','45'),('1987-10-19','AL','91'),('1987-10-19','AL','91'),('1987-10-19','AL','104'),('1987-10-19','AL','104'),('1987-10-19','AL','104'),('1987-10-19','AL','109'),('1987-10-19','AL','112'),('1987-10-19','AL','112'),('1987-10-19','AL','123'),('1987-10-19','AL','149'),('1987-10-19','AL','160'),('1987-10-19','AL','160'),('1987-10-19','AL','165'),('1987-10-19','AL','171'),('1987-10-19','AL','171'),('1987-10-19','AL','176'),('1987-10-19','AL','176'),('1987-10-19','AL','179'),('1987-10-19','AL','215'),('1987-10-19','AL','231'),('1987-10-19','AL','263'),('1987-10-19','AL','263'),('1987-10-19','AL','268'),('1987-10-19','AL','268'),('1987-10-19','AL','268'),('1987-10-19','AL','281'),('1987-10-19','AL','281'),('1987-10-19','AL','287'),('1987-10-19','AL','287'),('1987-10-19','AL','309'),('1987-10-19','AL','309'),('1987-10-19','AL','341'),('1987-10-19','AL','344'),('1987-10-19','AL','344'),('1987-10-19','AL','357'),('1987-10-19','AL','357'),('1987-10-19','AL','368'),('1987-10-19','AL','381'),('1987-10-19','AL','396'),('1987-10-19','AL','416'),('1987-10-19','AL','416'),('1987-10-19','AL','417'),('1987-10-19','AL','438'),('1987-10-19','AL','438'),('1987-10-19','AL','446'),('1987-10-19','AL','451'),('1987-10-19','AL','451'),('1987-10-19','AL','491'),('1987-10-19','AL','491'),('1987-10-19','AL','523'),('1987-10-19','AL','523'),('1987-10-19','AL','523'),('1987-10-19','AL','525'),('1987-10-19','AL','525'),('1987-10-19','AL','533'),('1987-10-19','AL','533'),('1987-10-19','AL','546'),('1987-10-19','AL','546'),('1987-10-19','AL','556'),('1987-10-19','AL','556'),('1987-10-19','AL','601'),('1987-10-19','AL','601'),('1987-10-19','AL','627'),('1987-10-19','AL','629'),('1987-10-19','AL','670'),('1987-10-19','AL','670'),('1987-10-19','AL','670'),('1987-10-20','AA','2'),('1987-10-20','AA','2'),('1987-10-20','AA','2'),('1987-10-20','AA','7'),('1987-10-20','AA','7'),('1987-10-20','AA','34'),('1987-10-20','AA','36'),('1987-10-20','AA','91'),('1987-10-20','AA','101'),('1987-10-20','AA','101'),('1987-10-20','AA','109'),('1987-10-20','AA','109'),('1987-10-20','AA','112'),('1987-10-20','AA','123'),('1987-10-20','AA','123'),('1987-10-20','AA','160'),('1987-10-20','AA','165'),('1987-10-20','AA','165'),('1987-10-20','AA','165'),('1987-10-20','AA','176'),('1987-10-20','AA','176'),('1987-10-20','AA','176'),('1987-10-20','AA','176'),('1987-10-20','AA','179'),('1987-10-20','AA','179'),('1987-10-20','AA','215'),('1987-10-20','AA','215'),('1987-10-20','AA','231'),('1987-10-20','AA','231'),('1987-10-20','AA','263'),('1987-10-20','AA','263'),('1987-10-20','AA','268'),('1987-10-20','AA','268'),('1987-10-20','AA','281'),('1987-10-20','AA','287'),('1987-10-20','AA','287'),('1987-10-20','AA','309'),('1987-10-20','AA','309'),('1987-10-20','AA','309'),('1987-10-20','AA','341'),('1987-10-20','AA','344'),('1987-10-20','AA','344'),('1987-10-20','AA','347'),('1987-10-20','AA','347'),('1987-10-20','AA','368'),('1987-10-20','AA','381'),('1987-10-20','AA','381'),('1987-10-20','AA','381'),('1987-10-20','AA','396'),('1987-10-20','AA','396'),('1987-10-20','AA','397'),('1987-10-20','AA','397'),('1987-10-20','AA','417'),('1987-10-20','AA','417'),('1987-10-20','AA','446'),('1987-10-20','AA','460'),('1987-10-20','AA','460'),('1987-10-20','AA','491'),('1987-10-20','AA','504'),('1987-10-20','AA','504'),('1987-10-20','AA','519'),('1987-10-20','AA','519'),('1987-10-20','AA','523'),('1987-10-20','AA','525'),('1987-10-20','AA','525'),('1987-10-20','AA','525'),('1987-10-20','AA','533'),('1987-10-20','AA','533'),('1987-10-20','AA','533'),('1987-10-20','AA','546'),('1987-10-20','AA','546'),('1987-10-20','AA','546'),('1987-10-20','AA','546'),('1987-10-20','AA','556'),('1987-10-20','AA','556'),('1987-10-20','AA','597'),('1987-10-20','AA','597'),('1987-10-20','AA','601'),('1987-10-20','AA','601'),('1987-10-20','AA','629'),('1987-10-20','AA','670'),('1987-10-20','AA','673'),('1987-10-20','AA','673'),('1987-10-20','AA','680'),('1987-10-20','AA','680'),('1987-10-20','AA','817'),('1987-10-20','AA','824'),('1987-10-20','AA','824'),('1987-10-20','AA','824'),('1987-10-20','AA','832'),('1987-10-20','AA','832'),('1987-10-20','AA','852'),('1987-10-20','AA','852'),('1987-10-20','AA','866'),('1987-10-20','AA','866'),('1987-10-20','AA','871'),('1987-10-20','AA','871'),('1987-10-20','AA','880'),('1987-10-20','AA','880'),('1987-10-20','AA','880'),('1987-10-20','AA','880'),('1987-10-20','AA','883'),('1987-10-20','AA','883'),('1987-10-20','AA','885'),('1987-10-20','AA','885'),('1987-10-20','AA','885'),('1987-10-20','AA','890'),('1987-10-20','AA','890'),('1987-10-20','AA','893'),('1987-10-20','AA','893'),('1987-10-20','AA','905'),('1987-10-20','AA','905'),('1987-10-20','AA','915'),('1987-10-20','AA','929'),('1987-10-20','AA','929'),('1987-10-20','AA','936'),('1987-10-20','AA','937'),('1987-10-20','AA','937'),('1987-10-20','AA','955'),('1987-10-20','AA','955'),('1987-10-20','AA','966'),('1987-10-20','AA','1002'),('1987-10-20','AA','1002'),('1987-10-20','AA','1004'),('1987-10-20','AA','1004'),('1987-10-20','AA','1015'),('1987-10-20','AA','1015'),('1987-10-20','AA','1021'),('1987-10-20','AA','1021'),('1987-10-20','AA','1041'),('1987-10-20','AA','1041'),('1987-10-20','AA','1046'),('1987-10-20','AA','1046'),('1987-10-20','AA','1048'),('1987-10-20','AA','1048'),('1987-10-20','AA','1061'),('1987-10-20','AA','1061'),('1987-10-20','AA','1088'),('1987-10-20','AA','1088'),('1987-10-20','AA','2033'),('1987-10-20','AA','2033'),('1987-10-20','AA','2050'),('1987-10-20','AA','2058'),('1987-10-20','AA','2071'),('1987-10-20','AA','2071'),('1987-10-20','AA','2086'),('1987-10-20','AA','2105'),('1987-10-20','AA','2111'),('1987-10-20','AA','2123'),('1987-10-20','AA','2123'),('1987-10-20','AA','2147'),('1987-10-20','AA','2199'),('1987-10-20','AA','2207'),('1987-10-20','AA','2217'),('1987-10-20','AA','2230'),('1987-10-20','AA','2245'),('1987-10-20','AA','2251'),('1987-10-20','AA','2251'),('1987-10-20','AA','2275'),('1987-10-20','AA','2278'),('1987-10-20','AA','2351'),('1987-10-20','AA','2357'),('1987-10-20','AA','2361'),('1987-10-20','AA','2490'),('1987-10-20','AA','2528'),('1987-10-20','AA','2528'),('1987-10-20','AA','2735'),('1987-10-20','AA','2735'),('1987-10-20','AA','2751'),('1987-10-20','AL','2'),('1987-10-20','AL','2'),('1987-10-20','AL','7'),('1987-10-20','AL','7'),('1987-10-20','AL','26'),('1987-10-20','AL','26'),('1987-10-20','AL','34'),('1987-10-20','AL','34'),('1987-10-20','AL','36'),('1987-10-20','AL','36'),('1987-10-20','AL','45'),('1987-10-20','AL','45'),('1987-10-20','AL','45'),('1987-10-20','AL','104'),('1987-10-20','AL','104'),('1987-10-20','AL','104'),('1987-10-20','AL','109'),('1987-10-20','AL','112'),('1987-10-20','AL','112'),('1987-10-20','AL','123'),('1987-10-20','AL','149'),('1987-10-20','AL','160'),('1987-10-20','AL','160'),('1987-10-20','AL','165'),('1987-10-20','AL','171'),('1987-10-20','AL','171'),('1987-10-20','AL','176'),('1987-10-20','AL','176'),('1987-10-20','AL','179'),('1987-10-20','AL','215'),('1987-10-20','AL','231'),('1987-10-20','AL','263'),('1987-10-20','AL','263'),('1987-10-20','AL','268'),('1987-10-20','AL','268'),('1987-10-20','AL','268'),('1987-10-20','AL','281'),('1987-10-20','AL','281'),('1987-10-20','AL','287'),('1987-10-20','AL','287'),('1987-10-20','AL','309'),('1987-10-20','AL','309'),('1987-10-20','AL','341'),('1987-10-20','AL','344'),('1987-10-20','AL','344'),('1987-10-20','AL','357'),('1987-10-20','AL','357'),('1987-10-20','AL','368'),('1987-10-20','AL','381'),('1987-10-20','AL','396'),('1987-10-20','AL','397'),('1987-10-20','AL','397'),('1987-10-20','AL','416'),('1987-10-20','AL','416'),('1987-10-20','AL','417'),('1987-10-20','AL','438'),('1987-10-20','AL','438'),('1987-10-20','AL','446'),('1987-10-20','AL','451'),('1987-10-20','AL','451'),('1987-10-20','AL','491'),('1987-10-20','AL','491'),('1987-10-20','AL','523'),('1987-10-20','AL','523'),('1987-10-20','AL','523'),('1987-10-20','AL','525'),('1987-10-20','AL','525'),('1987-10-20','AL','533'),('1987-10-20','AL','533'),('1987-10-20','AL','546'),('1987-10-20','AL','546'),('1987-10-20','AL','556'),('1987-10-20','AL','556'),('1987-10-20','AL','601'),('1987-10-20','AL','601'),('1987-10-20','AL','627'),('1987-10-20','AL','629'),('1987-10-20','AL','670'),('1987-10-20','AL','670'),('1987-10-20','AL','670'),('1987-10-20','AL','673'),('1987-10-20','AL','680'),('1987-10-05','AA','2'),('1987-10-05','AA','2'),('1987-10-05','AA','2'),('1987-10-05','AA','7'),('1987-10-05','AA','7'),('1987-10-05','AA','26'),('1987-10-05','AA','34'),('1987-10-05','AA','36'),('1987-10-05','AA','91'),('1987-10-05','AA','101'),('1987-10-05','AA','101'),('1987-10-05','AA','109'),('1987-10-05','AA','109'),('1987-10-05','AA','112'),('1987-10-05','AA','123'),('1987-10-05','AA','123'),('1987-10-05','AA','165'),('1987-10-05','AA','165'),('1987-10-05','AA','165'),('1987-10-05','AA','176'),('1987-10-05','AA','176'),('1987-10-05','AA','176'),('1987-10-05','AA','176'),('1987-10-05','AA','179'),('1987-10-05','AA','179'),('1987-10-05','AA','215'),('1987-10-05','AA','215'),('1987-10-05','AA','231'),('1987-10-05','AA','263'),('1987-10-05','AA','263'),('1987-10-05','AA','281'),('1987-10-05','AA','287'),('1987-10-05','AA','287'),('1987-10-05','AA','309'),('1987-10-05','AA','309'),('1987-10-05','AA','309'),('1987-10-05','AA','341'),('1987-10-05','AA','347'),('1987-10-05','AA','347'),('1987-10-05','AA','368'),('1987-10-05','AA','381'),('1987-10-05','AA','381'),('1987-10-05','AA','381'),('1987-10-05','AA','396'),('1987-10-05','AA','396'),('1987-10-05','AA','397'),('1987-10-05','AA','397'),('1987-10-05','AA','417'),('1987-10-05','AA','417'),('1987-10-05','AA','446'),('1987-10-05','AA','451'),('1987-10-05','AA','451'),('1987-10-05','AA','460'),('1987-10-05','AA','460'),('1987-10-05','AA','491'),('1987-10-05','AA','504'),('1987-10-05','AA','504'),('1987-10-05','AA','519'),('1987-10-05','AA','519'),('1987-10-05','AA','523'),('1987-10-05','AA','523'),('1987-10-05','AA','525'),('1987-10-05','AA','525'),('1987-10-05','AA','525'),('1987-10-05','AA','533'),('1987-10-05','AA','533'),('1987-10-05','AA','533'),('1987-10-05','AA','546'),('1987-10-05','AA','546'),('1987-10-05','AA','546'),('1987-10-05','AA','546'),('1987-10-05','AA','556'),('1987-10-05','AA','556'),('1987-10-05','AA','556'),('1987-10-05','AA','597'),('1987-10-05','AA','597'),('1987-10-05','AA','597'),('1987-10-05','AA','601'),('1987-10-05','AA','601'),('1987-10-05','AA','627'),('1987-10-05','AA','629'),('1987-10-05','AA','629'),('1987-10-05','AA','670'),('1987-10-05','AA','673'),('1987-10-05','AA','673'),('1987-10-05','AA','680'),('1987-10-05','AA','680'),('1987-10-05','AA','817'),('1987-10-05','AA','817'),('1987-10-05','AA','824'),('1987-10-05','AA','824'),('1987-10-05','AA','824'),('1987-10-05','AA','824'),('1987-10-05','AA','832'),('1987-10-05','AA','832'),('1987-10-05','AA','852'),('1987-10-05','AA','852'),('1987-10-05','AA','866'),('1987-10-05','AA','866'),('1987-10-05','AA','871'),('1987-10-05','AA','871'),('1987-10-05','AA','880'),('1987-10-05','AA','880'),('1987-10-05','AA','880'),('1987-10-05','AA','880'),('1987-10-05','AA','883'),('1987-10-05','AA','883'),('1987-10-05','AA','885'),('1987-10-05','AA','885'),('1987-10-05','AA','885'),('1987-10-05','AA','890'),('1987-10-05','AA','890'),('1987-10-05','AA','893'),('1987-10-05','AA','893'),('1987-10-05','AA','905'),('1987-10-05','AA','905'),('1987-10-05','AA','915'),('1987-10-05','AA','929'),('1987-10-05','AA','929'),('1987-10-05','AA','936'),('1987-10-05','AA','936'),('1987-10-05','AA','937'),('1987-10-05','AA','937'),('1987-10-05','AA','955'),('1987-10-05','AA','955'),('1987-10-05','AA','966'),('1987-10-05','AA','1002'),('1987-10-05','AA','1002'),('1987-10-05','AA','1004'),('1987-10-05','AA','1004'),('1987-10-05','AA','1015'),('1987-10-05','AA','1015'),('1987-10-05','AA','1021'),('1987-10-05','AA','1021'),('1987-10-05','AA','1041'),('1987-10-05','AA','1041'),('1987-10-05','AA','1046'),('1987-10-05','AA','1046'),('1987-10-05','AA','1048'),('1987-10-05','AA','1048'),('1987-10-05','AA','1061'),('1987-10-05','AA','1061'),('1987-10-05','AA','1088'),('1987-10-05','AA','1088'),('1987-10-05','AA','2033'),('1987-10-05','AA','2033'),('1987-10-05','AA','2050'),('1987-10-05','AA','2058'),('1987-10-05','AA','2071'),('1987-10-05','AA','2071'),('1987-10-05','AA','2086'),('1987-10-05','AA','2105'),('1987-10-05','AA','2111'),('1987-10-05','AA','2123'),('1987-10-05','AA','2123'),('1987-10-05','AA','2147'),('1987-10-05','AA','2147'),('1987-10-05','AA','2199'),('1987-10-05','AA','2199'),('1987-10-05','AA','2207'),('1987-10-05','AA','2207'),('1987-10-05','AA','2217'),('1987-10-05','AA','2230'),('1987-10-05','AA','2245'),('1987-10-05','AA','2251'),('1987-10-05','AA','2251'),('1987-10-05','AA','2275'),('1987-10-05','AA','2278'),('1987-10-05','AA','2351'),('1987-10-05','AA','2357'),('1987-10-05','AA','2361'),('1987-10-05','AA','2528'),('1987-10-05','AA','2528'),('1987-10-05','AA','2735'),('1987-10-05','AA','2735'),('1987-10-05','AA','2751'),('1987-10-05','AL','2'),('1987-10-05','AL','2'),('1987-10-05','AL','7'),('1987-10-05','AL','7'),('1987-10-05','AL','26'),('1987-10-05','AL','26'),('1987-10-05','AL','36'),('1987-10-05','AL','36'),('1987-10-05','AL','45'),('1987-10-05','AL','45'),('1987-10-05','AL','45'),('1987-10-05','AL','91'),('1987-10-05','AL','91'),('1987-10-05','AL','104'),('1987-10-05','AL','104'),('1987-10-05','AL','104'),('1987-10-05','AL','109'),('1987-10-05','AL','112'),('1987-10-05','AL','112'),('1987-10-05','AL','123'),('1987-10-05','AL','149'),('1987-10-05','AL','160'),('1987-10-05','AL','160'),('1987-10-05','AL','165'),('1987-10-05','AL','171'),('1987-10-05','AL','171'),('1987-10-05','AL','176'),('1987-10-05','AL','176'),('1987-10-05','AL','179'),('1987-10-05','AL','215'),('1987-10-05','AL','231'),('1987-10-05','AL','263'),('1987-10-05','AL','263'),('1987-10-05','AL','268'),('1987-10-05','AL','268'),('1987-10-05','AL','268'),('1987-10-05','AL','281'),('1987-10-05','AL','281'),('1987-10-05','AL','287'),('1987-10-05','AL','287'),('1987-10-05','AL','309'),('1987-10-05','AL','309'),('1987-10-05','AL','341'),('1987-10-05','AL','344'),('1987-10-05','AL','344'),('1987-10-05','AL','357'),('1987-10-05','AL','357'),('1987-10-05','AL','368'),('1987-10-05','AL','381'),('1987-10-05','AL','396'),('1987-10-05','AL','397'),('1987-10-05','AL','397'),('1987-10-05','AL','416'),('1987-10-05','AL','416'),('1987-10-05','AL','417'),('1987-10-05','AL','438'),('1987-10-05','AL','438'),('1987-10-05','AL','446'),('1987-10-05','AL','451'),('1987-10-05','AL','451'),('1987-10-05','AL','491'),('1987-10-05','AL','491'),('1987-10-05','AL','523'),('1987-10-05','AL','523'),('1987-10-05','AL','523'),('1987-10-05','AL','525'),('1987-10-05','AL','525'),('1987-10-05','AL','533'),('1987-10-05','AL','533'),('1987-10-05','AL','546'),('1987-10-05','AL','546'),('1987-10-05','AL','601'),('1987-10-05','AL','601'),('1987-10-05','AL','627'),('1987-10-05','AL','629'),('1987-10-05','AL','670'),('1987-10-05','AL','670'),('1987-10-05','AL','670'),('1987-10-05','AL','673'),('1987-10-05','AL','680'),('1987-10-06','AA','2'),('1987-10-06','AA','2'),('1987-10-06','AA','7'),('1987-10-06','AA','7'),('1987-10-06','AA','34'),('1987-10-06','AA','36'),('1987-10-06','AA','91'),('1987-10-06','AA','101'),('1987-10-06','AA','109'),('1987-10-06','AA','109'),('1987-10-06','AA','112'),('1987-10-06','AA','123'),('1987-10-06','AA','123'),('1987-10-06','AA','165'),('1987-10-06','AA','165'),('1987-10-06','AA','165'),('1987-10-06','AA','176'),('1987-10-06','AA','176'),('1987-10-06','AA','176'),('1987-10-06','AA','176'),('1987-10-06','AA','179'),('1987-10-06','AA','179'),('1987-10-06','AA','215'),('1987-10-06','AA','215'),('1987-10-06','AA','231'),('1987-10-06','AA','231'),('1987-10-06','AA','263'),('1987-10-06','AA','263'),('1987-10-06','AA','268'),('1987-10-06','AA','268'),('1987-10-06','AA','287'),('1987-10-06','AA','287'),('1987-10-06','AA','309'),('1987-10-06','AA','309'),('1987-10-06','AA','309'),('1987-10-06','AA','341'),('1987-10-06','AA','344'),('1987-10-06','AA','344'),('1987-10-06','AA','347'),('1987-10-06','AA','347'),('1987-10-06','AA','368'),('1987-10-06','AA','381'),('1987-10-06','AA','381'),('1987-10-06','AA','381'),('1987-10-06','AA','396'),('1987-10-06','AA','396'),('1987-10-06','AA','397'),('1987-10-06','AA','397'),('1987-10-06','AA','417'),('1987-10-06','AA','417'),('1987-10-06','AA','446'),('1987-10-06','AA','451'),('1987-10-06','AA','451'),('1987-10-06','AA','460'),('1987-10-06','AA','460'),('1987-10-06','AA','491'),('1987-10-06','AA','504'),('1987-10-06','AA','504'),('1987-10-06','AA','519'),('1987-10-06','AA','519'),('1987-10-06','AA','523'),('1987-10-06','AA','523'),('1987-10-06','AA','525'),('1987-10-06','AA','525'),('1987-10-06','AA','525'),('1987-10-06','AA','533'),('1987-10-06','AA','533'),('1987-10-06','AA','533'),('1987-10-06','AA','546'),('1987-10-06','AA','546'),('1987-10-06','AA','546'),('1987-10-06','AA','546'),('1987-10-06','AA','556'),('1987-10-06','AA','556'),('1987-10-06','AA','556'),('1987-10-06','AA','597'),('1987-10-06','AA','597'),('1987-10-06','AA','597'),('1987-10-06','AA','601'),('1987-10-06','AA','601'),('1987-10-06','AA','627'),('1987-10-06','AA','629'),('1987-10-06','AA','629'),('1987-10-06','AA','670'),('1987-10-06','AA','673'),('1987-10-06','AA','673'),('1987-10-06','AA','680'),('1987-10-06','AA','680'),('1987-10-06','AA','817'),('1987-10-06','AA','817'),('1987-10-06','AA','824'),('1987-10-06','AA','824'),('1987-10-06','AA','824'),('1987-10-06','AA','824'),('1987-10-06','AA','832'),('1987-10-06','AA','832'),('1987-10-06','AA','852'),('1987-10-06','AA','852'),('1987-10-06','AA','866'),('1987-10-06','AA','871'),('1987-10-06','AA','871'),('1987-10-06','AA','880'),('1987-10-06','AA','880'),('1987-10-06','AA','880'),('1987-10-06','AA','880'),('1987-10-06','AA','883'),('1987-10-06','AA','883'),('1987-10-06','AA','885'),('1987-10-06','AA','885'),('1987-10-06','AA','885'),('1987-10-06','AA','890'),('1987-10-06','AA','890'),('1987-10-06','AA','893'),('1987-10-06','AA','893'),('1987-10-06','AA','905'),('1987-10-06','AA','905'),('1987-10-06','AA','915'),('1987-10-06','AA','929'),('1987-10-06','AA','929'),('1987-10-06','AA','936'),('1987-10-06','AA','936'),('1987-10-06','AA','937'),('1987-10-06','AA','937'),('1987-10-06','AA','955'),('1987-10-06','AA','955'),('1987-10-06','AA','966'),('1987-10-06','AA','1002'),('1987-10-06','AA','1002'),('1987-10-06','AA','1004'),('1987-10-06','AA','1004'),('1987-10-06','AA','1015'),('1987-10-06','AA','1015'),('1987-10-06','AA','1021'),('1987-10-06','AA','1021'),('1987-10-06','AA','1041'),('1987-10-06','AA','1041'),('1987-10-06','AA','1046'),('1987-10-06','AA','1046'),('1987-10-06','AA','1048'),('1987-10-06','AA','1061'),('1987-10-06','AA','1088'),('1987-10-06','AA','1088'),('1987-10-06','AA','2033'),('1987-10-06','AA','2033'),('1987-10-06','AA','2050'),('1987-10-06','AA','2058'),('1987-10-06','AA','2071'),('1987-10-06','AA','2071'),('1987-10-06','AA','2086'),('1987-10-06','AA','2105'),('1987-10-06','AA','2111'),('1987-10-06','AA','2123'),('1987-10-06','AA','2123'),('1987-10-06','AA','2147'),('1987-10-06','AA','2147'),('1987-10-06','AA','2199'),('1987-10-06','AA','2199'),('1987-10-06','AA','2207'),('1987-10-06','AA','2207'),('1987-10-06','AA','2217'),('1987-10-06','AA','2230'),('1987-10-06','AA','2245'),('1987-10-06','AA','2251'),('1987-10-06','AA','2251'),('1987-10-06','AA','2275'),('1987-10-06','AA','2278'),('1987-10-06','AA','2351'),('1987-10-06','AA','2357'),('1987-10-06','AA','2490'),('1987-10-06','AA','2528'),('1987-10-06','AA','2528'),('1987-10-06','AA','2735'),('1987-10-06','AA','2735'),('1987-10-06','AA','2751'),('1987-10-06','AL','2'),('1987-10-06','AL','2'),('1987-10-06','AL','7'),('1987-10-06','AL','7'),('1987-10-06','AL','26'),('1987-10-06','AL','26'),('1987-10-06','AL','34'),('1987-10-06','AL','34'),('1987-10-06','AL','36'),('1987-10-06','AL','36'),('1987-10-06','AL','45'),('1987-10-06','AL','45'),('1987-10-06','AL','45'),('1987-10-06','AL','91'),('1987-10-06','AL','91'),('1987-10-06','AL','104'),('1987-10-06','AL','104'),('1987-10-06','AL','104'),('1987-10-06','AL','109'),('1987-10-06','AL','112'),('1987-10-06','AL','112'),('1987-10-06','AL','123'),('1987-10-06','AL','149'),('1987-10-06','AL','160'),('1987-10-06','AL','160'),('1987-10-06','AL','165'),('1987-10-06','AL','171'),('1987-10-06','AL','171'),('1987-10-06','AL','176'),('1987-10-06','AL','176'),('1987-10-06','AL','179'),('1987-10-06','AL','231'),('1987-10-06','AL','263'),('1987-10-06','AL','263'),('1987-10-06','AL','268'),('1987-10-06','AL','268'),('1987-10-06','AL','268'),('1987-10-06','AL','281'),('1987-10-06','AL','281'),('1987-10-06','AL','287'),('1987-10-06','AL','287'),('1987-10-06','AL','309'),('1987-10-06','AL','309'),('1987-10-06','AL','341'),('1987-10-06','AL','344'),('1987-10-06','AL','344'),('1987-10-06','AL','357'),('1987-10-06','AL','357'),('1987-10-06','AL','381'),('1987-10-06','AL','397'),('1987-10-06','AL','397'),('1987-10-06','AL','416'),('1987-10-06','AL','416'),('1987-10-06','AL','417'),('1987-10-06','AL','438'),('1987-10-06','AL','438'),('1987-10-06','AL','446'),('1987-10-06','AL','451'),('1987-10-06','AL','451'),('1987-10-06','AL','491'),('1987-10-06','AL','491'),('1987-10-06','AL','523'),('1987-10-06','AL','523'),('1987-10-06','AL','523'),('1987-10-06','AL','525'),('1987-10-06','AL','525'),('1987-10-06','AL','533'),('1987-10-06','AL','533'),('1987-10-06','AL','546'),('1987-10-06','AL','546'),('1987-10-06','AL','601'),('1987-10-06','AL','601'),('1987-10-06','AL','627'),('1987-10-06','AL','629'),('1987-10-06','AL','670'),('1987-10-06','AL','670'),('1987-10-06','AL','670'),('1987-10-06','AL','673'),('1987-10-06','AL','680'),('1987-10-07','AA','2'),('1987-10-07','AA','2'),('1987-10-07','AA','2'),('1987-10-07','AA','7'),('1987-10-07','AA','7'),('1987-10-07','AA','26'),('1987-10-07','AA','34'),('1987-10-07','AA','36'),('1987-10-07','AA','91'),('1987-10-07','AA','101'),('1987-10-07','AA','101'),('1987-10-07','AA','109'),('1987-10-07','AA','112'),('1987-10-07','AA','123'),('1987-10-07','AA','123'),('1987-10-07','AA','160'),('1987-10-07','AA','165'),('1987-10-07','AA','165'),('1987-10-07','AA','165'),('1987-10-07','AA','176'),('1987-10-07','AA','176'),('1987-10-07','AA','176'),('1987-10-07','AA','176'),('1987-10-07','AA','179'),('1987-10-07','AA','179'),('1987-10-07','AA','215'),('1987-10-07','AA','215'),('1987-10-07','AA','231'),('1987-10-07','AA','231'),('1987-10-07','AA','263'),('1987-10-07','AA','263'),('1987-10-07','AA','268'),('1987-10-07','AA','268'),('1987-10-07','AA','281'),('1987-10-07','AA','287'),('1987-10-07','AA','287'),('1987-10-07','AA','309'),('1987-10-07','AA','309'),('1987-10-07','AA','309'),('1987-10-07','AA','341'),('1987-10-07','AA','344'),('1987-10-07','AA','344'),('1987-10-07','AA','347'),('1987-10-07','AA','347'),('1987-10-07','AA','368'),('1987-10-07','AA','381'),('1987-10-07','AA','381'),('1987-10-07','AA','381'),('1987-10-07','AA','396'),('1987-10-07','AA','396'),('1987-10-07','AA','397'),('1987-10-07','AA','397'),('1987-10-07','AA','417'),('1987-10-07','AA','417'),('1987-10-07','AA','446'),('1987-10-07','AA','451'),('1987-10-07','AA','451'),('1987-10-07','AA','460'),('1987-10-07','AA','460'),('1987-10-07','AA','504'),('1987-10-07','AA','504'),('1987-10-07','AA','519'),('1987-10-07','AA','519'),('1987-10-07','AA','523'),('1987-10-07','AA','523'),('1987-10-07','AA','525'),('1987-10-07','AA','525'),('1987-10-07','AA','525'),('1987-10-07','AA','533'),('1987-10-07','AA','533'),('1987-10-07','AA','533'),('1987-10-07','AA','546'),('1987-10-07','AA','546'),('1987-10-07','AA','546'),('1987-10-07','AA','546'),('1987-10-07','AA','556'),('1987-10-07','AA','556'),('1987-10-07','AA','556'),('1987-10-07','AA','597'),('1987-10-07','AA','597'),('1987-10-07','AA','597'),('1987-10-07','AA','601'),('1987-10-07','AA','601'),('1987-10-07','AA','627'),('1987-10-07','AA','629'),('1987-10-07','AA','629'),('1987-10-07','AA','670'),('1987-10-07','AA','673'),('1987-10-07','AA','673'),('1987-10-07','AA','680'),('1987-10-07','AA','680'),('1987-10-07','AA','817'),('1987-10-07','AA','817'),('1987-10-07','AA','824'),('1987-10-07','AA','824'),('1987-10-07','AA','824'),('1987-10-07','AA','824'),('1987-10-07','AA','832'),('1987-10-07','AA','832'),('1987-10-07','AA','852'),('1987-10-07','AA','852'),('1987-10-07','AA','866'),('1987-10-07','AA','866'),('1987-10-07','AA','871'),('1987-10-07','AA','871'),('1987-10-07','AA','880'),('1987-10-07','AA','880'),('1987-10-07','AA','880'),('1987-10-07','AA','880'),('1987-10-07','AA','883'),('1987-10-07','AA','883'),('1987-10-07','AA','885'),('1987-10-07','AA','885'),('1987-10-07','AA','890'),('1987-10-07','AA','890'),('1987-10-07','AA','893'),('1987-10-07','AA','893'),('1987-10-07','AA','905'),('1987-10-07','AA','905'),('1987-10-07','AA','915'),('1987-10-07','AA','929'),('1987-10-07','AA','929'),('1987-10-07','AA','936'),('1987-10-07','AA','936'),('1987-10-07','AA','937'),('1987-10-07','AA','937'),('1987-10-07','AA','955'),('1987-10-07','AA','955'),('1987-10-07','AA','966'),('1987-10-07','AA','1002'),('1987-10-07','AA','1002'),('1987-10-07','AA','1004'),('1987-10-07','AA','1004'),('1987-10-07','AA','1015'),('1987-10-07','AA','1015'),('1987-10-07','AA','1021'),('1987-10-07','AA','1021'),('1987-10-07','AA','1041'),('1987-10-07','AA','1041'),('1987-10-07','AA','1046'),('1987-10-07','AA','1046'),('1987-10-07','AA','1048'),('1987-10-07','AA','1048'),('1987-10-07','AA','1061'),('1987-10-07','AA','1061'),('1987-10-07','AA','1088'),('1987-10-07','AA','1088'),('1987-10-07','AA','2033'),('1987-10-07','AA','2033'),('1987-10-07','AA','2050'),('1987-10-07','AA','2058'),('1987-10-07','AA','2071'),('1987-10-07','AA','2071'),('1987-10-07','AA','2086'),('1987-10-07','AA','2105'),('1987-10-07','AA','2111'),('1987-10-07','AA','2123'),('1987-10-07','AA','2123'),('1987-10-07','AA','2147'),('1987-10-07','AA','2147'),('1987-10-07','AA','2199'),('1987-10-07','AA','2199'),('1987-10-07','AA','2207'),('1987-10-07','AA','2207'),('1987-10-07','AA','2217'),('1987-10-07','AA','2230'),('1987-10-07','AA','2245'),('1987-10-07','AA','2251'),('1987-10-07','AA','2251'),('1987-10-07','AA','2275'),('1987-10-07','AA','2351'),('1987-10-07','AA','2357'),('1987-10-07','AA','2361'),('1987-10-07','AA','2490'),('1987-10-07','AA','2528'),('1987-10-07','AA','2528'),('1987-10-07','AA','2735'),('1987-10-07','AA','2735'),('1987-10-07','AA','2751'),('1987-10-07','AL','2'),('1987-10-07','AL','2'),('1987-10-07','AL','7'),('1987-10-07','AL','7'),('1987-10-07','AL','26'),('1987-10-07','AL','26'),('1987-10-07','AL','34'),('1987-10-07','AL','34'),('1987-10-07','AL','36'),('1987-10-07','AL','36'),('1987-10-07','AL','45'),('1987-10-07','AL','45'),('1987-10-07','AL','45'),('1987-10-07','AL','91'),('1987-10-07','AL','91'),('1987-10-07','AL','104'),('1987-10-07','AL','104'),('1987-10-07','AL','104'),('1987-10-07','AL','109'),('1987-10-07','AL','112'),('1987-10-07','AL','112'),('1987-10-07','AL','123'),('1987-10-07','AL','149'),('1987-10-07','AL','160'),('1987-10-07','AL','160'),('1987-10-07','AL','165'),('1987-10-07','AL','171'),('1987-10-07','AL','171'),('1987-10-07','AL','176'),('1987-10-07','AL','176'),('1987-10-07','AL','179'),('1987-10-07','AL','215'),('1987-10-07','AL','231'),('1987-10-07','AL','263'),('1987-10-07','AL','263'),('1987-10-07','AL','268'),('1987-10-07','AL','268'),('1987-10-07','AL','268'),('1987-10-07','AL','281'),('1987-10-07','AL','281'),('1987-10-07','AL','287'),('1987-10-07','AL','287'),('1987-10-07','AL','309'),('1987-10-07','AL','309'),('1987-10-07','AL','341'),('1987-10-07','AL','344'),('1987-10-07','AL','344'),('1987-10-07','AL','357'),('1987-10-07','AL','357'),('1987-10-07','AL','368'),('1987-10-07','AL','381'),('1987-10-07','AL','396'),('1987-10-07','AL','397'),('1987-10-07','AL','397'),('1987-10-07','AL','416'),('1987-10-07','AL','416'),('1987-10-07','AL','417'),('1987-10-07','AL','438'),('1987-10-07','AL','438'),('1987-10-07','AL','446'),('1987-10-07','AL','451'),('1987-10-07','AL','451'),('1987-10-07','AL','491'),('1987-10-07','AL','491'),('1987-10-07','AL','523'),('1987-10-07','AL','523'),('1987-10-07','AL','523'),('1987-10-07','AL','525'),('1987-10-07','AL','525'),('1987-10-07','AL','533'),('1987-10-07','AL','533'),('1987-10-07','AL','546'),('1987-10-07','AL','546'),('1987-10-07','AL','556'),('1987-10-07','AL','556'),('1987-10-07','AL','601'),('1987-10-07','AL','627'),('1987-10-07','AL','629'),('1987-10-07','AL','670'),('1987-10-07','AL','670'),('1987-10-07','AL','670'),('1987-10-07','AL','673'),('1987-10-07','AL','680'),('1987-10-08','AA','2'),('1987-10-08','AA','2'),('1987-10-08','AA','2'),('1987-10-08','AA','7'),('1987-10-08','AA','7'),('1987-10-08','AA','26'),('1987-10-08','AA','34'),('1987-10-08','AA','36'),('1987-10-08','AA','91'),('1987-10-08','AA','101'),('1987-10-08','AA','101'),('1987-10-08','AA','109'),('1987-10-08','AA','109'),('1987-10-08','AA','112'),('1987-10-08','AA','123'),('1987-10-08','AA','123'),('1987-10-08','AA','160'),('1987-10-08','AA','165'),('1987-10-08','AA','165'),('1987-10-08','AA','165'),('1987-10-08','AA','176'),('1987-10-08','AA','176'),('1987-10-08','AA','176'),('1987-10-08','AA','176'),('1987-10-08','AA','179'),('1987-10-08','AA','179'),('1987-10-08','AA','215'),('1987-10-08','AA','215'),('1987-10-08','AA','231'),('1987-10-08','AA','231'),('1987-10-08','AA','263'),('1987-10-08','AA','263'),('1987-10-08','AA','268'),('1987-10-08','AA','268'),('1987-10-08','AA','281'),('1987-10-08','AA','287'),('1987-10-08','AA','287'),('1987-10-08','AA','309'),('1987-10-08','AA','309'),('1987-10-08','AA','309'),('1987-10-08','AA','344'),('1987-10-08','AA','344'),('1987-10-08','AA','347'),('1987-10-08','AA','347'),('1987-10-08','AA','368'),('1987-10-08','AA','381'),('1987-10-08','AA','381'),('1987-10-08','AA','381'),('1987-10-08','AA','396'),('1987-10-08','AA','396'),('1987-10-08','AA','397'),('1987-10-08','AA','397'),('1987-10-08','AA','417'),('1987-10-08','AA','417'),('1987-10-08','AA','446'),('1987-10-08','AA','451'),('1987-10-08','AA','460'),('1987-10-08','AA','460'),('1987-10-08','AA','491'),('1987-10-08','AA','504'),('1987-10-08','AA','504'),('1987-10-08','AA','519'),('1987-10-08','AA','519'),('1987-10-08','AA','523'),('1987-10-08','AA','525'),('1987-10-08','AA','533'),('1987-10-08','AA','533'),('1987-10-08','AA','533'),('1987-10-08','AA','546'),('1987-10-08','AA','546'),('1987-10-08','AA','546'),('1987-10-08','AA','546'),('1987-10-08','AA','556'),('1987-10-08','AA','556'),('1987-10-08','AA','556'),('1987-10-08','AA','597'),('1987-10-08','AA','597'),('1987-10-08','AA','597'),('1987-10-08','AA','601'),('1987-10-08','AA','601'),('1987-10-08','AA','627'),('1987-10-08','AA','629'),('1987-10-08','AA','629'),('1987-10-08','AA','670'),('1987-10-08','AA','673'),('1987-10-08','AA','673'),('1987-10-08','AA','680'),('1987-10-08','AA','680'),('1987-10-08','AA','817'),('1987-10-08','AA','817'),('1987-10-08','AA','824'),('1987-10-08','AA','824'),('1987-10-08','AA','832'),('1987-10-08','AA','832'),('1987-10-08','AA','852'),('1987-10-08','AA','866'),('1987-10-08','AA','866'),('1987-10-08','AA','871'),('1987-10-08','AA','871'),('1987-10-08','AA','880'),('1987-10-08','AA','880'),('1987-10-08','AA','880'),('1987-10-08','AA','880'),('1987-10-08','AA','883'),('1987-10-08','AA','883'),('1987-10-08','AA','885'),('1987-10-08','AA','885'),('1987-10-08','AA','885'),('1987-10-08','AA','890'),('1987-10-08','AA','890'),('1987-10-08','AA','893'),('1987-10-08','AA','893'),('1987-10-08','AA','905'),('1987-10-08','AA','905'),('1987-10-08','AA','915'),('1987-10-08','AA','929'),('1987-10-08','AA','929'),('1987-10-08','AA','936'),('1987-10-08','AA','936'),('1987-10-08','AA','937'),('1987-10-08','AA','937'),('1987-10-08','AA','955'),('1987-10-08','AA','955'),('1987-10-08','AA','966'),('1987-10-08','AA','1002'),('1987-10-08','AA','1002'),('1987-10-08','AA','1004'),('1987-10-08','AA','1004'),('1987-10-08','AA','1015'),('1987-10-08','AA','1015'),('1987-10-08','AA','1021'),('1987-10-08','AA','1021'),('1987-10-08','AA','1041'),('1987-10-08','AA','1041'),('1987-10-08','AA','1046'),('1987-10-08','AA','1046'),('1987-10-08','AA','1048'),('1987-10-08','AA','1061'),('1987-10-08','AA','1061'),('1987-10-08','AA','1088'),('1987-10-08','AA','1088'),('1987-10-08','AA','2033'),('1987-10-08','AA','2033'),('1987-10-08','AA','2050'),('1987-10-08','AA','2058'),('1987-10-08','AA','2071'),('1987-10-08','AA','2071'),('1987-10-08','AA','2086'),('1987-10-08','AA','2111'),('1987-10-08','AA','2123'),('1987-10-08','AA','2123'),('1987-10-08','AA','2147'),('1987-10-08','AA','2147'),('1987-10-08','AA','2199'),('1987-10-08','AA','2199'),('1987-10-08','AA','2207'),('1987-10-08','AA','2207'),('1987-10-08','AA','2217'),('1987-10-08','AA','2230'),('1987-10-08','AA','2245'),('1987-10-08','AA','2251'),('1987-10-08','AA','2251'),('1987-10-08','AA','2275'),('1987-10-08','AA','2278'),('1987-10-08','AA','2351'),('1987-10-08','AA','2357'),('1987-10-08','AA','2361'),('1987-10-08','AA','2490'),('1987-10-08','AA','2528'),('1987-10-08','AA','2528'),('1987-10-08','AA','2735'),('1987-10-08','AA','2735'),('1987-10-08','AA','2751'),('1987-10-08','AL','2'),('1987-10-08','AL','2'),('1987-10-08','AL','7'),('1987-10-08','AL','7'),('1987-10-08','AL','26'),('1987-10-08','AL','26'),('1987-10-08','AL','34'),('1987-10-08','AL','34'),('1987-10-08','AL','36'),('1987-10-08','AL','36'),('1987-10-08','AL','45'),('1987-10-08','AL','45'),('1987-10-08','AL','45'),('1987-10-08','AL','91'),('1987-10-08','AL','91'),('1987-10-08','AL','104'),('1987-10-08','AL','104'),('1987-10-08','AL','104'),('1987-10-08','AL','109'),('1987-10-08','AL','112'),('1987-10-08','AL','112'),('1987-10-08','AL','123'),('1987-10-08','AL','149'),('1987-10-08','AL','160'),('1987-10-08','AL','160'),('1987-10-08','AL','165'),('1987-10-08','AL','171'),('1987-10-08','AL','171'),('1987-10-08','AL','176'),('1987-10-08','AL','176'),('1987-10-08','AL','179'),('1987-10-08','AL','215'),('1987-10-08','AL','231'),('1987-10-08','AL','263'),('1987-10-08','AL','263'),('1987-10-08','AL','268'),('1987-10-08','AL','268'),('1987-10-08','AL','268'),('1987-10-08','AL','281'),('1987-10-08','AL','281'),('1987-10-08','AL','287'),('1987-10-08','AL','287'),('1987-10-08','AL','309'),('1987-10-08','AL','309'),('1987-10-08','AL','341'),('1987-10-08','AL','344'),('1987-10-08','AL','344'),('1987-10-08','AL','357'),('1987-10-08','AL','357'),('1987-10-08','AL','368'),('1987-10-08','AL','381'),('1987-10-08','AL','396'),('1987-10-08','AL','397'),('1987-10-08','AL','397'),('1987-10-08','AL','416'),('1987-10-08','AL','416'),('1987-10-08','AL','417'),('1987-10-08','AL','438'),('1987-10-08','AL','438'),('1987-10-08','AL','446'),('1987-10-08','AL','451'),('1987-10-08','AL','451'),('1987-10-08','AL','491'),('1987-10-08','AL','491'),('1987-10-08','AL','523'),('1987-10-08','AL','523'),('1987-10-08','AL','523'),('1987-10-08','AL','525'),('1987-10-08','AL','525'),('1987-10-08','AL','533'),('1987-10-08','AL','533'),('1987-10-08','AL','546'),('1987-10-08','AL','546'),('1987-10-08','AL','556'),('1987-10-08','AL','556'),('1987-10-08','AL','601'),('1987-10-08','AL','601'),('1987-10-08','AL','627'),('1987-10-08','AL','629'),('1987-10-08','AL','670'),('1987-10-08','AL','670'),('1987-10-08','AL','670'),('1987-10-08','AL','680'),('1987-10-09','AA','2'),('1987-10-09','AA','2'),('1987-10-09','AA','2'),('1987-10-09','AA','7'),('1987-10-09','AA','7'),('1987-10-09','AA','26'),('1987-10-09','AA','34'),('1987-10-09','AA','36'),('1987-10-09','AA','91'),('1987-10-09','AA','101'),('1987-10-09','AA','101'),('1987-10-09','AA','109'),('1987-10-09','AA','109'),('1987-10-09','AA','112'),('1987-10-09','AA','123'),('1987-10-09','AA','123'),('1987-10-09','AA','160'),('1987-10-09','AA','165'),('1987-10-09','AA','165'),('1987-10-09','AA','176'),('1987-10-09','AA','176'),('1987-10-09','AA','176'),('1987-10-09','AA','176'),('1987-10-09','AA','179'),('1987-10-09','AA','179'),('1987-10-09','AA','215'),('1987-10-09','AA','215'),('1987-10-09','AA','231'),('1987-10-09','AA','263'),('1987-10-09','AA','263'),('1987-10-09','AA','268'),('1987-10-09','AA','268'),('1987-10-09','AA','281'),('1987-10-09','AA','287'),('1987-10-09','AA','309'),('1987-10-09','AA','309'),('1987-10-09','AA','309'),('1987-10-09','AA','344'),('1987-10-09','AA','344'),('1987-10-09','AA','347'),('1987-10-09','AA','347'),('1987-10-09','AA','368'),('1987-10-09','AA','381'),('1987-10-09','AA','381'),('1987-10-09','AA','381'),('1987-10-09','AA','396'),('1987-10-09','AA','396'),('1987-10-09','AA','397'),('1987-10-09','AA','397'),('1987-10-09','AA','417'),('1987-10-09','AA','417'),('1987-10-09','AA','451'),('1987-10-09','AA','451'),('1987-10-09','AA','460'),('1987-10-09','AA','460'),('1987-10-09','AA','491'),('1987-10-09','AA','504'),('1987-10-09','AA','504'),('1987-10-09','AA','519'),('1987-10-09','AA','519'),('1987-10-09','AA','523'),('1987-10-09','AA','523'),('1987-10-09','AA','525'),('1987-10-09','AA','525'),('1987-10-09','AA','525'),('1987-10-09','AA','533'),('1987-10-09','AA','533'),('1987-10-09','AA','533'),('1987-10-09','AA','546'),('1987-10-09','AA','546'),('1987-10-09','AA','546'),('1987-10-09','AA','546'),('1987-10-09','AA','556'),('1987-10-09','AA','556'),('1987-10-09','AA','556'),('1987-10-09','AA','597'),('1987-10-09','AA','597'),('1987-10-09','AA','597'),('1987-10-09','AA','601'),('1987-10-09','AA','601'),('1987-10-09','AA','629'),('1987-10-09','AA','629'),('1987-10-09','AA','670'),('1987-10-09','AA','673'),('1987-10-09','AA','673'),('1987-10-09','AA','680'),('1987-10-09','AA','680'),('1987-10-09','AA','817'),('1987-10-09','AA','824'),('1987-10-09','AA','824'),('1987-10-09','AA','824'),('1987-10-09','AA','824'),('1987-10-09','AA','832'),('1987-10-09','AA','832'),('1987-10-09','AA','852'),('1987-10-09','AA','852'),('1987-10-09','AA','866'),('1987-10-09','AA','866'),('1987-10-09','AA','871'),('1987-10-09','AA','880'),('1987-10-09','AA','880'),('1987-10-09','AA','880'),('1987-10-09','AA','883'),('1987-10-09','AA','883'),('1987-10-09','AA','885'),('1987-10-09','AA','885'),('1987-10-09','AA','885'),('1987-10-09','AA','890'),('1987-10-09','AA','890'),('1987-10-09','AA','893'),('1987-10-09','AA','893'),('1987-10-09','AA','905'),('1987-10-09','AA','905'),('1987-10-09','AA','915'),('1987-10-09','AA','929'),('1987-10-09','AA','929'),('1987-10-09','AA','936'),('1987-10-09','AA','936'),('1987-10-09','AA','937'),('1987-10-09','AA','937'),('1987-10-09','AA','955'),('1987-10-09','AA','955'),('1987-10-09','AA','966'),('1987-10-09','AA','1002'),('1987-10-09','AA','1002'),('1987-10-09','AA','1004'),('1987-10-09','AA','1004'),('1987-10-09','AA','1015'),('1987-10-09','AA','1015'),('1987-10-09','AA','1021'),('1987-10-09','AA','1021'),('1987-10-09','AA','1041'),('1987-10-09','AA','1041'),('1987-10-09','AA','1046'),('1987-10-09','AA','1046'),('1987-10-09','AA','1048'),('1987-10-09','AA','1048'),('1987-10-09','AA','1061'),('1987-10-09','AA','1061'),('1987-10-09','AA','1088'),('1987-10-09','AA','1088'),('1987-10-09','AA','2033'),('1987-10-09','AA','2033'),('1987-10-09','AA','2050'),('1987-10-09','AA','2058'),('1987-10-09','AA','2071'),('1987-10-09','AA','2071'),('1987-10-09','AA','2086'),('1987-10-09','AA','2105'),('1987-10-09','AA','2111'),('1987-10-09','AA','2123'),('1987-10-09','AA','2123'),('1987-10-09','AA','2147'),('1987-10-09','AA','2147'),('1987-10-09','AA','2199'),('1987-10-09','AA','2199'),('1987-10-09','AA','2207'),('1987-10-09','AA','2207'),('1987-10-09','AA','2217'),('1987-10-09','AA','2230'),('1987-10-09','AA','2245'),('1987-10-09','AA','2251'),('1987-10-09','AA','2251'),('1987-10-09','AA','2275'),('1987-10-09','AA','2278'),('1987-10-09','AA','2351'),('1987-10-09','AA','2357'),('1987-10-09','AA','2361'),('1987-10-09','AA','2490'),('1987-10-09','AA','2528'),('1987-10-09','AA','2528'),('1987-10-09','AA','2735'),('1987-10-09','AA','2735'),('1987-10-09','AA','2751'),('1987-10-09','AL','2'),('1987-10-09','AL','2'),('1987-10-09','AL','7'),('1987-10-09','AL','7'),('1987-10-09','AL','26'),('1987-10-09','AL','34'),('1987-10-09','AL','34'),('1987-10-09','AL','36'),('1987-10-09','AL','36'),('1987-10-09','AL','45'),('1987-10-09','AL','45'),('1987-10-09','AL','45'),('1987-10-09','AL','91'),('1987-10-09','AL','91'),('1987-10-09','AL','104'),('1987-10-09','AL','104'),('1987-10-09','AL','104'),('1987-10-09','AL','109'),('1987-10-09','AL','112'),('1987-10-09','AL','112'),('1987-10-09','AL','123'),('1987-10-09','AL','149'),('1987-10-09','AL','160'),('1987-10-09','AL','160'),('1987-10-09','AL','165'),('1987-10-09','AL','171'),('1987-10-09','AL','171'),('1987-10-09','AL','176'),('1987-10-09','AL','176'),('1987-10-09','AL','179'),('1987-10-09','AL','215'),('1987-10-09','AL','231'),('1987-10-09','AL','263'),('1987-10-09','AL','263'),('1987-10-09','AL','268'),('1987-10-09','AL','268'),('1987-10-09','AL','268'),('1987-10-09','AL','281'),('1987-10-09','AL','281'),('1987-10-09','AL','287'),('1987-10-09','AL','287'),('1987-10-09','AL','309'),('1987-10-09','AL','309'),('1987-10-09','AL','341'),('1987-10-09','AL','344'),('1987-10-09','AL','344'),('1987-10-09','AL','368'),('1987-10-09','AL','381'),('1987-10-09','AL','396'),('1987-10-09','AL','397'),('1987-10-09','AL','397'),('1987-10-09','AL','416'),('1987-10-09','AL','416'),('1987-10-09','AL','417'),('1987-10-09','AL','438'),('1987-10-09','AL','438'),('1987-10-09','AL','446'),('1987-10-09','AL','451'),('1987-10-09','AL','491'),('1987-10-09','AL','491'),('1987-10-09','AL','523'),('1987-10-09','AL','523'),('1987-10-09','AL','523'),('1987-10-09','AL','525'),('1987-10-09','AL','525'),('1987-10-09','AL','533'),('1987-10-09','AL','533'),('1987-10-09','AL','546'),('1987-10-09','AL','546'),('1987-10-09','AL','556'),('1987-10-09','AL','556'),('1987-10-09','AL','601'),('1987-10-09','AL','601'),('1987-10-09','AL','627'),('1987-10-09','AL','629'),('1987-10-09','AL','670'),('1987-10-09','AL','670'),('1987-10-09','AL','670'),('1987-10-09','AL','673'),('1987-10-09','AL','680'),('1987-10-10','AA','2'),('1987-10-10','AA','2'),('1987-10-10','AA','2'),('1987-10-10','AA','7'),('1987-10-10','AA','7'),('1987-10-10','AA','26'),('1987-10-10','AA','34'),('1987-10-10','AA','36'),('1987-10-10','AA','91'),('1987-10-10','AA','101'),('1987-10-10','AA','101'),('1987-10-10','AA','109'),('1987-10-10','AA','109'),('1987-10-10','AA','112'),('1987-10-10','AA','123'),('1987-10-10','AA','123'),('1987-10-10','AA','160'),('1987-10-10','AA','165'),('1987-10-10','AA','165'),('1987-10-10','AA','165'),('1987-10-10','AA','176'),('1987-10-10','AA','176'),('1987-10-10','AA','176'),('1987-10-10','AA','176'),('1987-10-10','AA','179'),('1987-10-10','AA','179'),('1987-10-10','AA','215'),('1987-10-10','AA','215'),('1987-10-10','AA','231'),('1987-10-10','AA','263'),('1987-10-10','AA','263'),('1987-10-10','AA','268'),('1987-10-10','AA','268'),('1987-10-10','AA','281'),('1987-10-10','AA','287'),('1987-10-10','AA','287'),('1987-10-10','AA','309'),('1987-10-10','AA','309'),('1987-10-10','AA','309'),('1987-10-10','AA','341'),('1987-10-10','AA','344'),('1987-10-10','AA','344'),('1987-10-10','AA','347'),('1987-10-10','AA','347'),('1987-10-10','AA','368'),('1987-10-10','AA','381'),('1987-10-10','AA','381'),('1987-10-10','AA','381'),('1987-10-10','AA','396'),('1987-10-10','AA','396'),('1987-10-10','AA','397'),('1987-10-10','AA','417'),('1987-10-10','AA','417'),('1987-10-10','AA','446'),('1987-10-10','AA','451'),('1987-10-10','AA','451'),('1987-10-10','AA','460'),('1987-10-10','AA','460'),('1987-10-10','AA','491'),('1987-10-10','AA','491'),('1987-10-10','AA','504'),('1987-10-10','AA','504'),('1987-10-10','AA','519'),('1987-10-10','AA','523'),('1987-10-10','AA','523'),('1987-10-10','AA','525'),('1987-10-10','AA','525'),('1987-10-10','AA','525'),('1987-10-10','AA','533'),('1987-10-10','AA','533'),('1987-10-10','AA','546'),('1987-10-10','AA','546'),('1987-10-10','AA','546'),('1987-10-10','AA','546'),('1987-10-10','AA','556'),('1987-10-10','AA','556'),('1987-10-10','AA','556'),('1987-10-10','AA','597'),('1987-10-10','AA','597'),('1987-10-10','AA','597'),('1987-10-10','AA','601'),('1987-10-10','AA','601'),('1987-10-10','AA','627'),('1987-10-10','AA','629'),('1987-10-10','AA','629'),('1987-10-10','AA','670'),('1987-10-10','AA','673'),('1987-10-10','AA','673'),('1987-10-10','AA','680'),('1987-10-10','AA','680'),('1987-10-10','AA','817'),('1987-10-10','AA','817'),('1987-10-10','AA','824'),('1987-10-10','AA','824'),('1987-10-10','AA','824'),('1987-10-10','AA','824'),('1987-10-10','AA','832'),('1987-10-10','AA','832'),('1987-10-10','AA','852'),('1987-10-10','AA','852'),('1987-10-10','AA','866'),('1987-10-10','AA','866'),('1987-10-10','AA','871'),('1987-10-10','AA','871'),('1987-10-10','AA','880'),('1987-10-10','AA','880'),('1987-10-10','AA','880'),('1987-10-10','AA','880'),('1987-10-10','AA','883'),('1987-10-10','AA','883'),('1987-10-10','AA','885'),('1987-10-10','AA','885'),('1987-10-10','AA','885'),('1987-10-10','AA','890'),('1987-10-10','AA','890'),('1987-10-10','AA','893'),('1987-10-10','AA','893'),('1987-10-10','AA','905'),('1987-10-10','AA','905'),('1987-10-10','AA','915'),('1987-10-10','AA','929'),('1987-10-10','AA','929'),('1987-10-10','AA','936'),('1987-10-10','AA','936'),('1987-10-10','AA','937'),('1987-10-10','AA','955'),('1987-10-10','AA','955'),('1987-10-10','AA','966'),('1987-10-10','AA','1002'),('1987-10-10','AA','1002'),('1987-10-10','AA','1004'),('1987-10-10','AA','1004'),('1987-10-10','AA','1015'),('1987-10-10','AA','1015'),('1987-10-10','AA','1021'),('1987-10-10','AA','1021'),('1987-10-10','AA','1041'),('1987-10-10','AA','1041'),('1987-10-10','AA','1046'),('1987-10-10','AA','1046'),('1987-10-10','AA','1048'),('1987-10-10','AA','1048'),('1987-10-10','AA','1061'),('1987-10-10','AA','1061'),('1987-10-10','AA','1088'),('1987-10-10','AA','1088'),('1987-10-10','AA','2033'),('1987-10-10','AA','2033'),('1987-10-10','AA','2050'),('1987-10-10','AA','2058'),('1987-10-10','AA','2071'),('1987-10-10','AA','2071'),('1987-10-10','AA','2086'),('1987-10-10','AA','2111'),('1987-10-10','AA','2123'),('1987-10-10','AA','2123'),('1987-10-10','AA','2147'),('1987-10-10','AA','2147'),('1987-10-10','AA','2199'),('1987-10-10','AA','2207'),('1987-10-10','AA','2207'),('1987-10-10','AA','2217'),('1987-10-10','AA','2230'),('1987-10-10','AA','2245'),('1987-10-10','AA','2251'),('1987-10-10','AA','2251'),('1987-10-10','AA','2275'),('1987-10-10','AA','2278'),('1987-10-10','AA','2351'),('1987-10-10','AA','2357'),('1987-10-10','AA','2361'),('1987-10-10','AA','2490'),('1987-10-10','AA','2528'),('1987-10-10','AA','2528'),('1987-10-10','AA','2735'),('1987-10-10','AA','2735'),('1987-10-10','AL','2'),('1987-10-10','AL','2'),('1987-10-10','AL','7'),('1987-10-10','AL','7'),('1987-10-10','AL','26'),('1987-10-10','AL','26'),('1987-10-10','AL','34'),('1987-10-10','AL','34'),('1987-10-10','AL','36'),('1987-10-10','AL','36'),('1987-10-10','AL','45'),('1987-10-10','AL','45'),('1987-10-10','AL','45'),('1987-10-10','AL','91'),('1987-10-10','AL','91'),('1987-10-10','AL','104'),('1987-10-10','AL','104'),('1987-10-10','AL','109'),('1987-10-10','AL','112'),('1987-10-10','AL','112'),('1987-10-10','AL','149'),('1987-10-10','AL','160'),('1987-10-10','AL','165'),('1987-10-10','AL','171'),('1987-10-10','AL','171'),('1987-10-10','AL','176'),('1987-10-10','AL','176'),('1987-10-10','AL','179'),('1987-10-10','AL','215'),('1987-10-10','AL','231'),('1987-10-10','AL','263'),('1987-10-10','AL','268'),('1987-10-10','AL','268'),('1987-10-10','AL','268'),('1987-10-10','AL','287'),('1987-10-10','AL','287'),('1987-10-10','AL','309'),('1987-10-10','AL','309'),('1987-10-10','AL','344'),('1987-10-10','AL','344'),('1987-10-10','AL','357'),('1987-10-10','AL','396'),('1987-10-10','AL','397'),('1987-10-10','AL','397'),('1987-10-10','AL','397'),('1987-10-10','AL','416'),('1987-10-10','AL','417'),('1987-10-10','AL','438'),('1987-10-10','AL','438'),('1987-10-10','AL','451'),('1987-10-10','AL','451'),('1987-10-10','AL','491'),('1987-10-10','AL','491'),('1987-10-10','AL','523'),('1987-10-10','AL','523'),('1987-10-10','AL','525'),('1987-10-10','AL','525'),('1987-10-10','AL','533'),('1987-10-10','AL','546'),('1987-10-10','AL','546'),('1987-10-10','AL','556'),('1987-10-10','AL','556'),('1987-10-10','AL','601'),('1987-10-10','AL','601'),('1987-10-10','AL','627'),('1987-10-10','AL','670'),('1987-10-10','AL','673'),('1987-10-10','AL','680'),('1987-10-10','AL','905'),('1987-10-10','AL','936'),('1987-10-10','AL','966'),('1987-10-11','AA','2'),('1987-10-11','AA','2'),('1987-10-11','AA','2'),('1987-10-11','AA','7'),('1987-10-11','AA','7'),('1987-10-11','AA','26'),('1987-10-11','AA','36'),('1987-10-11','AA','91'),('1987-10-11','AA','101'),('1987-10-11','AA','101'),('1987-10-11','AA','109'),('1987-10-11','AA','109'),('1987-10-11','AA','112'),('1987-10-11','AA','123'),('1987-10-11','AA','160'),('1987-10-11','AA','165'),('1987-10-11','AA','165'),('1987-10-11','AA','165'),('1987-10-11','AA','176'),('1987-10-11','AA','176'),('1987-10-11','AA','176'),('1987-10-11','AA','176'),('1987-10-11','AA','179'),('1987-10-11','AA','179'),('1987-10-11','AA','215'),('1987-10-11','AA','215'),('1987-10-11','AA','231'),('1987-10-11','AA','263'),('1987-10-11','AA','263'),('1987-10-11','AA','268'),('1987-10-11','AA','268'),('1987-10-11','AA','281'),('1987-10-11','AA','287'),('1987-10-11','AA','287'),('1987-10-11','AA','309'),('1987-10-11','AA','309'),('1987-10-11','AA','309'),('1987-10-11','AA','341'),('1987-10-11','AA','344'),('1987-10-11','AA','344'),('1987-10-11','AA','347'),('1987-10-11','AA','347'),('1987-10-11','AA','368'),('1987-10-11','AA','381'),('1987-10-11','AA','381'),('1987-10-11','AA','381'),('1987-10-11','AA','396'),('1987-10-11','AA','396'),('1987-10-11','AA','397'),('1987-10-11','AA','397'),('1987-10-11','AA','417'),('1987-10-11','AA','417'),('1987-10-11','AA','446'),('1987-10-11','AA','451'),('1987-10-11','AA','451'),('1987-10-11','AA','460'),('1987-10-11','AA','460'),('1987-10-11','AA','491'),('1987-10-11','AA','491'),('1987-10-11','AA','504'),('1987-10-11','AA','504'),('1987-10-11','AA','519'),('1987-10-11','AA','519'),('1987-10-11','AA','523'),('1987-10-11','AA','523'),('1987-10-11','AA','525'),('1987-10-11','AA','525'),('1987-10-11','AA','525'),('1987-10-11','AA','533'),('1987-10-11','AA','533'),('1987-10-11','AA','533'),('1987-10-11','AA','546'),('1987-10-11','AA','546'),('1987-10-11','AA','546'),('1987-10-11','AA','546'),('1987-10-11','AA','556'),('1987-10-11','AA','556'),('1987-10-11','AA','556'),('1987-10-11','AA','597'),('1987-10-11','AA','597'),('1987-10-11','AA','597'),('1987-10-11','AA','601'),('1987-10-11','AA','601'),('1987-10-11','AA','627'),('1987-10-11','AA','629'),('1987-10-11','AA','629'),('1987-10-11','AA','670'),('1987-10-11','AA','673'),('1987-10-11','AA','673'),('1987-10-11','AA','680'),('1987-10-11','AA','680'),('1987-10-11','AA','817'),('1987-10-11','AA','817'),('1987-10-11','AA','824'),('1987-10-11','AA','824'),('1987-10-11','AA','824'),('1987-10-11','AA','824'),('1987-10-11','AA','832'),('1987-10-11','AA','832'),('1987-10-11','AA','852'),('1987-10-11','AA','852'),('1987-10-11','AA','866'),('1987-10-11','AA','866'),('1987-10-11','AA','871'),('1987-10-11','AA','871'),('1987-10-11','AA','880'),('1987-10-11','AA','880'),('1987-10-11','AA','880'),('1987-10-11','AA','880'),('1987-10-11','AA','883'),('1987-10-11','AA','883'),('1987-10-11','AA','885'),('1987-10-11','AA','885'),('1987-10-11','AA','885'),('1987-10-11','AA','890'),('1987-10-11','AA','890'),('1987-10-11','AA','893'),('1987-10-11','AA','893'),('1987-10-11','AA','905'),('1987-10-11','AA','905'),('1987-10-11','AA','915'),('1987-10-11','AA','929'),('1987-10-11','AA','929'),('1987-10-11','AA','936'),('1987-10-11','AA','936'),('1987-10-11','AA','937'),('1987-10-11','AA','937'),('1987-10-11','AA','955'),('1987-10-11','AA','955'),('1987-10-11','AA','966'),('1987-10-11','AA','1002'),('1987-10-11','AA','1002'),('1987-10-11','AA','1004'),('1987-10-11','AA','1004'),('1987-10-11','AA','1015'),('1987-10-11','AA','1015'),('1987-10-11','AA','1021'),('1987-10-11','AA','1021'),('1987-10-11','AA','1041'),('1987-10-11','AA','1041'),('1987-10-11','AA','1046'),('1987-10-11','AA','1046'),('1987-10-11','AA','1048'),('1987-10-11','AA','1048'),('1987-10-11','AA','1061'),('1987-10-11','AA','1061'),('1987-10-11','AA','1088'),('1987-10-11','AA','1088'),('1987-10-11','AA','2033'),('1987-10-11','AA','2033'),('1987-10-11','AA','2058'),('1987-10-11','AA','2071'),('1987-10-11','AA','2071'),('1987-10-11','AA','2086'),('1987-10-11','AA','2111'),('1987-10-11','AA','2123'),('1987-10-11','AA','2123'),('1987-10-11','AA','2147'),('1987-10-11','AA','2147'),('1987-10-11','AA','2199'),('1987-10-11','AA','2199'),('1987-10-11','AA','2199'),('1987-10-11','AA','2207'),('1987-10-11','AA','2207'),('1987-10-11','AA','2230'),('1987-10-11','AA','2245'),('1987-10-11','AA','2251'),('1987-10-11','AA','2251'),('1987-10-11','AA','2275'),('1987-10-11','AA','2278'),('1987-10-11','AA','2351'),('1987-10-11','AA','2357'),('1987-10-11','AA','2361'),('1987-10-11','AA','2490'),('1987-10-11','AA','2528'),('1987-10-11','AA','2528'),('1987-10-11','AA','2735'),('1987-10-11','AA','2735'),('1987-10-11','AA','2751'),('1987-10-11','AL','2'),('1987-10-11','AL','2'),('1987-10-11','AL','7'),('1987-10-11','AL','7'),('1987-10-11','AL','26'),('1987-10-11','AL','26'),('1987-10-11','AL','34'),('1987-10-11','AL','34'),('1987-10-11','AL','36'),('1987-10-11','AL','36'),('1987-10-11','AL','45'),('1987-10-11','AL','45'),('1987-10-11','AL','45'),('1987-10-11','AL','91'),('1987-10-11','AL','91'),('1987-10-11','AL','104'),('1987-10-11','AL','104'),('1987-10-11','AL','104'),('1987-10-11','AL','112'),('1987-10-11','AL','123'),('1987-10-11','AL','149'),('1987-10-11','AL','160'),('1987-10-11','AL','160'),('1987-10-11','AL','165'),('1987-10-11','AL','171'),('1987-10-11','AL','171'),('1987-10-11','AL','176'),('1987-10-11','AL','176'),('1987-10-11','AL','179'),('1987-10-11','AL','215'),('1987-10-11','AL','231'),('1987-10-11','AL','263'),('1987-10-11','AL','263'),('1987-10-11','AL','281'),('1987-10-11','AL','281'),('1987-10-11','AL','309'),('1987-10-11','AL','309'),('1987-10-11','AL','341'),('1987-10-11','AL','344'),('1987-10-11','AL','344'),('1987-10-11','AL','357'),('1987-10-11','AL','357'),('1987-10-11','AL','368'),('1987-10-11','AL','396'),('1987-10-11','AL','416'),('1987-10-11','AL','416'),('1987-10-11','AL','417'),('1987-10-11','AL','438'),('1987-10-11','AL','438'),('1987-10-11','AL','446'),('1987-10-11','AL','451'),('1987-10-11','AL','491'),('1987-10-11','AL','491'),('1987-10-11','AL','523'),('1987-10-11','AL','523'),('1987-10-11','AL','523'),('1987-10-11','AL','525'),('1987-10-11','AL','525'),('1987-10-11','AL','533'),('1987-10-11','AL','533'),('1987-10-11','AL','546'),('1987-10-11','AL','546'),('1987-10-11','AL','556'),('1987-10-11','AL','556'),('1987-10-11','AL','601'),('1987-10-11','AL','601'),('1987-10-11','AL','627'),('1987-10-11','AL','629'),('1987-10-11','AL','670'),('1987-10-11','AL','670'),('1987-10-11','AL','670'),('1987-10-11','AL','673'),('1987-10-11','AL','680'),('1987-10-11','AL','937'),('1987-10-11','AL','937'),('1987-10-11','AL','955'),('1987-10-21','AA','2'),('1987-10-21','AA','2'),('1987-10-21','AA','2'),('1987-10-21','AA','7'),('1987-10-21','AA','7'),('1987-10-21','AA','26'),('1987-10-21','AA','34'),('1987-10-21','AA','36'),('1987-10-21','AA','91'),('1987-10-21','AA','101'),('1987-10-21','AA','101'),('1987-10-21','AA','109'),('1987-10-21','AA','109'),('1987-10-21','AA','123'),('1987-10-21','AA','123'),('1987-10-21','AA','160'),('1987-10-21','AA','165'),('1987-10-21','AA','165'),('1987-10-21','AA','165'),('1987-10-21','AA','176'),('1987-10-21','AA','176'),('1987-10-21','AA','176'),('1987-10-21','AA','176'),('1987-10-21','AA','179'),('1987-10-21','AA','179'),('1987-10-21','AA','215'),('1987-10-21','AA','231'),('1987-10-21','AA','231'),('1987-10-21','AA','263'),('1987-10-21','AA','263'),('1987-10-21','AA','268'),('1987-10-21','AA','268'),('1987-10-21','AA','281'),('1987-10-21','AA','287'),('1987-10-21','AA','287'),('1987-10-21','AA','309'),('1987-10-21','AA','309'),('1987-10-21','AA','309'),('1987-10-21','AA','341'),('1987-10-21','AA','344'),('1987-10-21','AA','344'),('1987-10-21','AA','347'),('1987-10-21','AA','347'),('1987-10-21','AA','368'),('1987-10-21','AA','381'),('1987-10-21','AA','381'),('1987-10-21','AA','381'),('1987-10-21','AA','396'),('1987-10-21','AA','396'),('1987-10-21','AA','397'),('1987-10-21','AA','397'),('1987-10-21','AA','417'),('1987-10-21','AA','417'),('1987-10-21','AA','446'),('1987-10-21','AA','451'),('1987-10-21','AA','451'),('1987-10-21','AA','460'),('1987-10-21','AA','460'),('1987-10-21','AA','491'),('1987-10-21','AA','504'),('1987-10-21','AA','504'),('1987-10-21','AA','519'),('1987-10-21','AA','519'),('1987-10-21','AA','523'),('1987-10-21','AA','523'),('1987-10-21','AA','525'),('1987-10-21','AA','525'),('1987-10-21','AA','525'),('1987-10-21','AA','533'),('1987-10-21','AA','533'),('1987-10-21','AA','533'),('1987-10-21','AA','546'),('1987-10-21','AA','546'),('1987-10-21','AA','546'),('1987-10-21','AA','546'),('1987-10-21','AA','556'),('1987-10-21','AA','556'),('1987-10-21','AA','556'),('1987-10-21','AA','597'),('1987-10-21','AA','597'),('1987-10-21','AA','597'),('1987-10-21','AA','601'),('1987-10-21','AA','601'),('1987-10-21','AA','627'),('1987-10-21','AA','629'),('1987-10-21','AA','629'),('1987-10-21','AA','673'),('1987-10-21','AA','673'),('1987-10-21','AA','680'),('1987-10-21','AA','680'),('1987-10-21','AA','817'),('1987-10-21','AA','817'),('1987-10-21','AA','824'),('1987-10-21','AA','824'),('1987-10-21','AA','824'),('1987-10-21','AA','832'),('1987-10-21','AA','832'),('1987-10-21','AA','852'),('1987-10-21','AA','866'),('1987-10-21','AA','866'),('1987-10-21','AA','871'),('1987-10-21','AA','871'),('1987-10-21','AA','880'),('1987-10-21','AA','880'),('1987-10-21','AA','880'),('1987-10-21','AA','880'),('1987-10-21','AA','883'),('1987-10-21','AA','883'),('1987-10-21','AA','885'),('1987-10-21','AA','885'),('1987-10-21','AA','885'),('1987-10-21','AA','890'),('1987-10-21','AA','890'),('1987-10-21','AA','893'),('1987-10-21','AA','893'),('1987-10-21','AA','905'),('1987-10-21','AA','905'),('1987-10-21','AA','915'),('1987-10-21','AA','929'),('1987-10-21','AA','929'),('1987-10-21','AA','936'),('1987-10-21','AA','936'),('1987-10-21','AA','937'),('1987-10-21','AA','1002'),('1987-10-21','AA','1002'),('1987-10-21','AA','1004'),('1987-10-21','AA','1004'),('1987-10-21','AA','1015'),('1987-10-21','AA','1021'),('1987-10-21','AA','1021'),('1987-10-21','AA','1041'),('1987-10-21','AA','1041'),('1987-10-21','AA','1046'),('1987-10-21','AA','1046'),('1987-10-21','AA','1048'),('1987-10-21','AA','1048'),('1987-10-21','AA','1061'),('1987-10-21','AA','1061'),('1987-10-21','AA','1088'),('1987-10-21','AA','1088'),('1987-10-21','AA','2033'),('1987-10-21','AA','2033'),('1987-10-21','AA','2050'),('1987-10-21','AA','2071'),('1987-10-21','AA','2086'),('1987-10-21','AA','2105'),('1987-10-21','AA','2111'),('1987-10-21','AA','2123'),('1987-10-21','AA','2123'),('1987-10-21','AA','2147'),('1987-10-21','AA','2147'),('1987-10-21','AA','2199'),('1987-10-21','AA','2199'),('1987-10-21','AA','2207'),('1987-10-21','AA','2207'),('1987-10-21','AA','2217'),('1987-10-21','AA','2230'),('1987-10-21','AA','2245'),('1987-10-21','AA','2251'),('1987-10-21','AA','2251'),('1987-10-21','AA','2275'),('1987-10-21','AA','2278'),('1987-10-21','AA','2351'),('1987-10-21','AA','2357'),('1987-10-21','AA','2361'),('1987-10-21','AA','2490'),('1987-10-21','AA','2528'),('1987-10-21','AA','2528'),('1987-10-21','AA','2735'),('1987-10-21','AA','2735'),('1987-10-21','AA','2751'),('1987-10-21','AL','2'),('1987-10-21','AL','2'),('1987-10-21','AL','7'),('1987-10-21','AL','7'),('1987-10-21','AL','26'),('1987-10-21','AL','26'),('1987-10-21','AL','34'),('1987-10-21','AL','34'),('1987-10-21','AL','36'),('1987-10-21','AL','36'),('1987-10-21','AL','45'),('1987-10-21','AL','45'),('1987-10-21','AL','45'),('1987-10-21','AL','91'),('1987-10-21','AL','91'),('1987-10-21','AL','104'),('1987-10-21','AL','104'),('1987-10-21','AL','104'),('1987-10-21','AL','109'),('1987-10-21','AL','112'),('1987-10-21','AL','112'),('1987-10-21','AL','123'),('1987-10-21','AL','149'),('1987-10-21','AL','160'),('1987-10-21','AL','160'),('1987-10-21','AL','165'),('1987-10-21','AL','171'),('1987-10-21','AL','171'),('1987-10-21','AL','176'),('1987-10-21','AL','176'),('1987-10-21','AL','179'),('1987-10-21','AL','215'),('1987-10-21','AL','263'),('1987-10-21','AL','263'),('1987-10-21','AL','268'),('1987-10-21','AL','268'),('1987-10-21','AL','268'),('1987-10-21','AL','281'),('1987-10-21','AL','281'),('1987-10-21','AL','287'),('1987-10-21','AL','287'),('1987-10-21','AL','309'),('1987-10-21','AL','309'),('1987-10-21','AL','341'),('1987-10-21','AL','344'),('1987-10-21','AL','344'),('1987-10-21','AL','357'),('1987-10-21','AL','357'),('1987-10-21','AL','368'),('1987-10-21','AL','381'),('1987-10-21','AL','396'),('1987-10-21','AL','397'),('1987-10-21','AL','397'),('1987-10-21','AL','416'),('1987-10-21','AL','416'),('1987-10-21','AL','417'),('1987-10-21','AL','438'),('1987-10-21','AL','438'),('1987-10-21','AL','446'),('1987-10-21','AL','451'),('1987-10-21','AL','451'),('1987-10-21','AL','491'),('1987-10-21','AL','491'),('1987-10-21','AL','523'),('1987-10-21','AL','523'),('1987-10-21','AL','523'),('1987-10-21','AL','525'),('1987-10-21','AL','525'),('1987-10-21','AL','533'),('1987-10-21','AL','533'),('1987-10-21','AL','546'),('1987-10-21','AL','546'),('1987-10-21','AL','556'),('1987-10-21','AL','556'),('1987-10-21','AL','601'),('1987-10-21','AL','601'),('1987-10-21','AL','627'),('1987-10-21','AL','629'),('1987-10-21','AL','670'),('1987-10-21','AL','670'),('1987-10-21','AL','670'),('1987-10-21','AL','673'),('1987-10-21','AL','680'),('1987-10-22','AA','2'),('1987-10-22','AA','2'),('1987-10-22','AA','2'),('1987-10-22','AA','7'),('1987-10-22','AA','7'),('1987-10-22','AA','26'),('1987-10-22','AA','34'),('1987-10-22','AA','36'),('1987-10-22','AA','91'),('1987-10-22','AA','101'),('1987-10-22','AA','101'),('1987-10-22','AA','109'),('1987-10-22','AA','109'),('1987-10-22','AA','112'),('1987-10-22','AA','123'),('1987-10-22','AA','123'),('1987-10-22','AA','160'),('1987-10-22','AA','165'),('1987-10-22','AA','165'),('1987-10-22','AA','165'),('1987-10-22','AA','176'),('1987-10-22','AA','176'),('1987-10-22','AA','176'),('1987-10-22','AA','179'),('1987-10-22','AA','215'),('1987-10-22','AA','215'),('1987-10-22','AA','231'),('1987-10-22','AA','231'),('1987-10-22','AA','263'),('1987-10-22','AA','263'),('1987-10-22','AA','268'),('1987-10-22','AA','268'),('1987-10-22','AA','281'),('1987-10-22','AA','287'),('1987-10-22','AA','287'),('1987-10-22','AA','309'),('1987-10-22','AA','309'),('1987-10-22','AA','309'),('1987-10-22','AA','341'),('1987-10-22','AA','344'),('1987-10-22','AA','344'),('1987-10-22','AA','347'),('1987-10-22','AA','368'),('1987-10-22','AA','381'),('1987-10-22','AA','381'),('1987-10-22','AA','381'),('1987-10-22','AA','396'),('1987-10-22','AA','396'),('1987-10-22','AA','397'),('1987-10-22','AA','397'),('1987-10-22','AA','417'),('1987-10-22','AA','417'),('1987-10-22','AA','446'),('1987-10-22','AA','451'),('1987-10-22','AA','451'),('1987-10-22','AA','460'),('1987-10-22','AA','460'),('1987-10-22','AA','491'),('1987-10-22','AA','504'),('1987-10-22','AA','519'),('1987-10-22','AA','519'),('1987-10-22','AA','523'),('1987-10-22','AA','523'),('1987-10-22','AA','525'),('1987-10-22','AA','525'),('1987-10-22','AA','533'),('1987-10-22','AA','533'),('1987-10-22','AA','533'),('1987-10-22','AA','546'),('1987-10-22','AA','546'),('1987-10-22','AA','546'),('1987-10-22','AA','546'),('1987-10-22','AA','556'),('1987-10-22','AA','556'),('1987-10-22','AA','556'),('1987-10-22','AA','597'),('1987-10-22','AA','597'),('1987-10-22','AA','597'),('1987-10-22','AA','601'),('1987-10-22','AA','601'),('1987-10-22','AA','627'),('1987-10-22','AA','629'),('1987-10-22','AA','629'),('1987-10-22','AA','673'),('1987-10-22','AA','673'),('1987-10-22','AA','680'),('1987-10-22','AA','680'),('1987-10-22','AA','817'),('1987-10-22','AA','817'),('1987-10-22','AA','824'),('1987-10-22','AA','824'),('1987-10-22','AA','824'),('1987-10-22','AA','832'),('1987-10-22','AA','832'),('1987-10-22','AA','852'),('1987-10-22','AA','852'),('1987-10-22','AA','866'),('1987-10-22','AA','866'),('1987-10-22','AA','871'),('1987-10-22','AA','871'),('1987-10-22','AA','880'),('1987-10-22','AA','880'),('1987-10-22','AA','880'),('1987-10-22','AA','880'),('1987-10-22','AA','883'),('1987-10-22','AA','883'),('1987-10-22','AA','885'),('1987-10-22','AA','885'),('1987-10-22','AA','885'),('1987-10-22','AA','890'),('1987-10-22','AA','890'),('1987-10-22','AA','893'),('1987-10-22','AA','893'),('1987-10-22','AA','905'),('1987-10-22','AA','905'),('1987-10-22','AA','915'),('1987-10-22','AA','929'),('1987-10-22','AA','929'),('1987-10-22','AA','936'),('1987-10-22','AA','936'),('1987-10-22','AA','937'),('1987-10-22','AA','937'),('1987-10-22','AA','955'),('1987-10-22','AA','955'),('1987-10-22','AA','1002'),('1987-10-22','AA','1002'),('1987-10-22','AA','1004'),('1987-10-22','AA','1015'),('1987-10-22','AA','1015'),('1987-10-22','AA','1021'),('1987-10-22','AA','1021'),('1987-10-22','AA','1041'),('1987-10-22','AA','1041'),('1987-10-22','AA','1046'),('1987-10-22','AA','1046'),('1987-10-22','AA','1048'),('1987-10-22','AA','1048'),('1987-10-22','AA','1061'),('1987-10-22','AA','1061'),('1987-10-22','AA','1088'),('1987-10-22','AA','1088'),('1987-10-22','AA','2033'),('1987-10-22','AA','2058'),('1987-10-22','AA','2071'),('1987-10-22','AA','2071'),('1987-10-22','AA','2086'),('1987-10-22','AA','2105'),('1987-10-22','AA','2111'),('1987-10-22','AA','2147'),('1987-10-22','AA','2147'),('1987-10-22','AA','2199'),('1987-10-22','AA','2207'),('1987-10-22','AA','2207'),('1987-10-22','AA','2217'),('1987-10-22','AA','2230'),('1987-10-22','AA','2245'),('1987-10-22','AA','2251'),('1987-10-22','AA','2251'),('1987-10-22','AA','2275'),('1987-10-22','AA','2278'),('1987-10-22','AA','2351'),('1987-10-22','AA','2357'),('1987-10-22','AA','2361'),('1987-10-22','AA','2490'),('1987-10-22','AA','2528'),('1987-10-22','AA','2528'),('1987-10-22','AA','2735'),('1987-10-22','AA','2735'),('1987-10-22','AA','2751'),('1987-10-22','AL','2'),('1987-10-22','AL','2'),('1987-10-22','AL','7'),('1987-10-22','AL','7'),('1987-10-22','AL','26'),('1987-10-22','AL','26'),('1987-10-22','AL','34'),('1987-10-22','AL','34'),('1987-10-22','AL','36'),('1987-10-22','AL','36'),('1987-10-22','AL','45'),('1987-10-22','AL','45'),('1987-10-22','AL','45'),('1987-10-22','AL','91'),('1987-10-22','AL','91'),('1987-10-22','AL','104'),('1987-10-22','AL','104'),('1987-10-22','AL','104'),('1987-10-22','AL','109'),('1987-10-22','AL','112'),('1987-10-22','AL','112'),('1987-10-22','AL','123'),('1987-10-22','AL','149'),('1987-10-22','AL','160'),('1987-10-22','AL','160'),('1987-10-22','AL','165'),('1987-10-22','AL','171'),('1987-10-22','AL','171'),('1987-10-22','AL','176'),('1987-10-22','AL','176'),('1987-10-22','AL','179'),('1987-10-22','AL','215'),('1987-10-22','AL','231'),('1987-10-22','AL','263'),('1987-10-22','AL','263'),('1987-10-22','AL','268'),('1987-10-22','AL','268'),('1987-10-22','AL','268'),('1987-10-22','AL','281'),('1987-10-22','AL','281'),('1987-10-22','AL','287'),('1987-10-22','AL','287'),('1987-10-22','AL','309'),('1987-10-22','AL','309'),('1987-10-22','AL','341'),('1987-10-22','AL','344'),('1987-10-22','AL','344'),('1987-10-22','AL','357'),('1987-10-22','AL','357'),('1987-10-22','AL','368'),('1987-10-22','AL','381'),('1987-10-22','AL','396'),('1987-10-22','AL','397'),('1987-10-22','AL','397'),('1987-10-22','AL','416'),('1987-10-22','AL','417'),('1987-10-22','AL','438'),('1987-10-22','AL','438'),('1987-10-22','AL','446'),('1987-10-22','AL','451'),('1987-10-22','AL','451'),('1987-10-22','AL','491'),('1987-10-22','AL','491'),('1987-10-22','AL','523'),('1987-10-22','AL','523'),('1987-10-22','AL','523'),('1987-10-22','AL','525'),('1987-10-22','AL','525'),('1987-10-22','AL','533'),('1987-10-22','AL','533'),('1987-10-22','AL','546'),('1987-10-22','AL','546'),('1987-10-22','AL','556'),('1987-10-22','AL','556'),('1987-10-22','AL','601'),('1987-10-22','AL','601'),('1987-10-22','AL','627'),('1987-10-22','AL','629'),('1987-10-22','AL','670'),('1987-10-22','AL','670'),('1987-10-22','AL','670'),('1987-10-22','AL','673'),('1987-10-22','AL','680'),('1987-10-23','AA','2'),('1987-10-23','AA','2'),('1987-10-23','AA','2'),('1987-10-23','AA','7'),('1987-10-23','AA','7'),('1987-10-23','AA','26'),('1987-10-23','AA','34'),('1987-10-23','AA','36'),('1987-10-23','AA','91'),('1987-10-23','AA','101'),('1987-10-23','AA','109'),('1987-10-23','AA','109'),('1987-10-23','AA','112'),('1987-10-23','AA','123'),('1987-10-23','AA','123'),('1987-10-23','AA','160'),('1987-10-23','AA','165'),('1987-10-23','AA','165'),('1987-10-23','AA','165'),('1987-10-23','AA','176'),('1987-10-23','AA','176'),('1987-10-23','AA','176'),('1987-10-23','AA','176'),('1987-10-23','AA','179'),('1987-10-23','AA','179'),('1987-10-23','AA','215'),('1987-10-23','AA','215'),('1987-10-23','AA','231'),('1987-10-23','AA','231'),('1987-10-23','AA','263'),('1987-10-23','AA','263'),('1987-10-23','AA','268'),('1987-10-23','AA','268'),('1987-10-23','AA','281'),('1987-10-23','AA','287'),('1987-10-23','AA','287'),('1987-10-23','AA','309'),('1987-10-23','AA','309'),('1987-10-23','AA','309'),('1987-10-23','AA','341'),('1987-10-23','AA','344'),('1987-10-23','AA','344'),('1987-10-23','AA','347'),('1987-10-23','AA','368'),('1987-10-23','AA','381'),('1987-10-23','AA','381'),('1987-10-23','AA','381'),('1987-10-23','AA','396'),('1987-10-23','AA','396'),('1987-10-23','AA','397'),('1987-10-23','AA','397'),('1987-10-23','AA','417'),('1987-10-23','AA','417'),('1987-10-23','AA','446'),('1987-10-23','AA','451'),('1987-10-23','AA','451'),('1987-10-23','AA','460'),('1987-10-23','AA','491'),('1987-10-23','AA','504'),('1987-10-23','AA','504'),('1987-10-23','AA','519'),('1987-10-23','AA','519'),('1987-10-23','AA','523'),('1987-10-23','AA','523'),('1987-10-23','AA','525'),('1987-10-23','AA','533'),('1987-10-23','AA','533'),('1987-10-23','AA','533'),('1987-10-23','AA','546'),('1987-10-23','AA','546'),('1987-10-23','AA','546'),('1987-10-23','AA','546'),('1987-10-23','AA','556'),('1987-10-23','AA','556'),('1987-10-23','AA','556'),('1987-10-23','AA','597'),('1987-10-23','AA','597'),('1987-10-23','AA','601'),('1987-10-23','AA','601'),('1987-10-23','AA','627'),('1987-10-23','AA','629'),('1987-10-23','AA','629'),('1987-10-23','AA','673'),('1987-10-23','AA','680'),('1987-10-23','AA','680'),('1987-10-23','AA','817'),('1987-10-23','AA','817'),('1987-10-23','AA','824'),('1987-10-23','AA','824'),('1987-10-23','AA','824'),('1987-10-23','AA','824'),('1987-10-23','AA','832'),('1987-10-23','AA','832'),('1987-10-23','AA','852'),('1987-10-23','AA','866'),('1987-10-23','AA','866'),('1987-10-23','AA','871'),('1987-10-23','AA','871'),('1987-10-23','AA','880'),('1987-10-23','AA','880'),('1987-10-23','AA','880'),('1987-10-23','AA','880'),('1987-10-23','AA','883'),('1987-10-23','AA','883'),('1987-10-23','AA','885'),('1987-10-23','AA','885'),('1987-10-23','AA','885'),('1987-10-23','AA','890'),('1987-10-23','AA','890'),('1987-10-23','AA','893'),('1987-10-23','AA','893'),('1987-10-23','AA','905'),('1987-10-23','AA','905'),('1987-10-23','AA','929'),('1987-10-23','AA','929'),('1987-10-23','AA','936'),('1987-10-23','AA','936'),('1987-10-23','AA','937'),('1987-10-23','AA','937'),('1987-10-23','AA','955'),('1987-10-23','AA','955'),('1987-10-23','AA','966'),('1987-10-23','AA','1002'),('1987-10-23','AA','1002'),('1987-10-23','AA','1004'),('1987-10-23','AA','1004'),('1987-10-23','AA','1015'),('1987-10-23','AA','1015'),('1987-10-23','AA','1021'),('1987-10-23','AA','1021'),('1987-10-23','AA','1041'),('1987-10-23','AA','1041'),('1987-10-23','AA','1046'),('1987-10-23','AA','1048'),('1987-10-23','AA','1048'),('1987-10-23','AA','1061'),('1987-10-23','AA','1061'),('1987-10-23','AA','1088'),('1987-10-23','AA','1088'),('1987-10-23','AA','2033'),('1987-10-23','AA','2033'),('1987-10-23','AA','2050'),('1987-10-23','AA','2058'),('1987-10-23','AA','2071'),('1987-10-23','AA','2071'),('1987-10-23','AA','2086'),('1987-10-23','AA','2105'),('1987-10-23','AA','2111'),('1987-10-23','AA','2123'),('1987-10-23','AA','2123'),('1987-10-23','AA','2147'),('1987-10-23','AA','2147'),('1987-10-23','AA','2199'),('1987-10-23','AA','2199'),('1987-10-23','AA','2199'),('1987-10-23','AA','2207'),('1987-10-23','AA','2207'),('1987-10-23','AA','2245'),('1987-10-23','AA','2251'),('1987-10-23','AA','2275'),('1987-10-23','AA','2278'),('1987-10-23','AA','2351'),('1987-10-23','AA','2357'),('1987-10-23','AA','2361'),('1987-10-23','AA','2490'),('1987-10-23','AA','2528'),('1987-10-23','AA','2528'),('1987-10-23','AA','2735'),('1987-10-23','AA','2735'),('1987-10-23','AA','2751'),('1987-10-23','AL','2'),('1987-10-23','AL','2'),('1987-10-23','AL','7'),('1987-10-23','AL','7'),('1987-10-23','AL','26'),('1987-10-23','AL','26'),('1987-10-23','AL','34'),('1987-10-23','AL','34'),('1987-10-23','AL','36'),('1987-10-23','AL','36'),('1987-10-23','AL','45'),('1987-10-23','AL','45'),('1987-10-23','AL','45'),('1987-10-23','AL','91'),('1987-10-23','AL','91'),('1987-10-23','AL','104'),('1987-10-23','AL','104'),('1987-10-23','AL','104'),('1987-10-23','AL','109'),('1987-10-23','AL','112'),('1987-10-23','AL','112'),('1987-10-23','AL','123'),('1987-10-23','AL','149'),('1987-10-23','AL','160'),('1987-10-23','AL','160'),('1987-10-23','AL','165'),('1987-10-23','AL','171'),('1987-10-23','AL','176'),('1987-10-23','AL','176'),('1987-10-23','AL','179'),('1987-10-23','AL','215'),('1987-10-23','AL','231'),('1987-10-23','AL','263'),('1987-10-23','AL','263'),('1987-10-23','AL','268'),('1987-10-23','AL','268'),('1987-10-23','AL','268'),('1987-10-23','AL','281'),('1987-10-23','AL','281'),('1987-10-23','AL','287'),('1987-10-23','AL','287'),('1987-10-23','AL','309'),('1987-10-23','AL','309'),('1987-10-23','AL','341'),('1987-10-23','AL','344'),('1987-10-23','AL','344'),('1987-10-23','AL','357'),('1987-10-23','AL','357'),('1987-10-23','AL','368'),('1987-10-23','AL','381'),('1987-10-23','AL','396'),('1987-10-23','AL','397'),('1987-10-23','AL','397'),('1987-10-23','AL','416'),('1987-10-23','AL','416'),('1987-10-23','AL','417'),('1987-10-23','AL','438'),('1987-10-23','AL','438'),('1987-10-23','AL','446'),('1987-10-23','AL','451'),('1987-10-23','AL','451'),('1987-10-23','AL','491'),('1987-10-23','AL','491'),('1987-10-23','AL','523'),('1987-10-23','AL','523'),('1987-10-23','AL','523'),('1987-10-23','AL','525'),('1987-10-23','AL','525'),('1987-10-23','AL','533'),('1987-10-23','AL','533'),('1987-10-23','AL','546'),('1987-10-23','AL','546'),('1987-10-23','AL','556'),('1987-10-23','AL','556'),('1987-10-23','AL','601'),('1987-10-23','AL','601'),('1987-10-23','AL','627'),('1987-10-23','AL','629'),('1987-10-23','AL','670'),('1987-10-23','AL','670'),('1987-10-23','AL','670'),('1987-10-23','AL','673'),('1987-10-23','AL','680'),('1987-10-24','AA','2'),('1987-10-24','AA','2'),('1987-10-24','AA','7'),('1987-10-24','AA','7'),('1987-10-24','AA','26'),('1987-10-24','AA','34'),('1987-10-24','AA','36'),('1987-10-24','AA','91'),('1987-10-24','AA','101'),('1987-10-24','AA','101'),('1987-10-24','AA','109'),('1987-10-24','AA','109'),('1987-10-24','AA','112'),('1987-10-24','AA','123'),('1987-10-24','AA','123'),('1987-10-24','AA','160'),('1987-10-24','AA','165'),('1987-10-24','AA','165'),('1987-10-24','AA','165'),('1987-10-24','AA','176'),('1987-10-24','AA','176'),('1987-10-24','AA','176'),('1987-10-24','AA','179'),('1987-10-24','AA','179'),('1987-10-24','AA','215'),('1987-10-24','AA','215'),('1987-10-24','AA','231'),('1987-10-24','AA','263'),('1987-10-24','AA','263'),('1987-10-24','AA','268'),('1987-10-24','AA','268'),('1987-10-24','AA','281'),('1987-10-24','AA','287'),('1987-10-24','AA','287'),('1987-10-24','AA','309'),('1987-10-24','AA','309'),('1987-10-24','AA','309'),('1987-10-24','AA','344'),('1987-10-24','AA','344'),('1987-10-24','AA','347'),('1987-10-24','AA','347'),('1987-10-24','AA','368'),('1987-10-24','AA','381'),('1987-10-24','AA','381'),('1987-10-24','AA','381'),('1987-10-24','AA','396'),('1987-10-24','AA','396'),('1987-10-24','AA','397'),('1987-10-24','AA','397'),('1987-10-24','AA','417'),('1987-10-24','AA','417'),('1987-10-24','AA','446'),('1987-10-24','AA','451'),('1987-10-24','AA','451'),('1987-10-24','AA','460'),('1987-10-24','AA','460'),('1987-10-24','AA','491'),('1987-10-24','AA','491'),('1987-10-24','AA','504'),('1987-10-24','AA','504'),('1987-10-24','AA','519'),('1987-10-24','AA','519'),('1987-10-24','AA','523'),('1987-10-24','AA','523'),('1987-10-24','AA','525'),('1987-10-24','AA','525'),('1987-10-24','AA','525'),('1987-10-24','AA','533'),('1987-10-24','AA','533'),('1987-10-24','AA','546'),('1987-10-24','AA','546'),('1987-10-24','AA','546'),('1987-10-24','AA','556'),('1987-10-24','AA','556'),('1987-10-24','AA','556'),('1987-10-24','AA','597'),('1987-10-24','AA','597'),('1987-10-24','AA','597'),('1987-10-24','AA','601'),('1987-10-24','AA','601'),('1987-10-24','AA','627'),('1987-10-24','AA','629'),('1987-10-24','AA','673'),('1987-10-24','AA','673'),('1987-10-24','AA','680'),('1987-10-24','AA','680'),('1987-10-24','AA','817'),('1987-10-24','AA','817'),('1987-10-24','AA','824'),('1987-10-24','AA','824'),('1987-10-24','AA','824'),('1987-10-24','AA','832'),('1987-10-24','AA','832'),('1987-10-24','AA','852'),('1987-10-24','AA','852'),('1987-10-24','AA','866'),('1987-10-24','AA','866'),('1987-10-24','AA','871'),('1987-10-24','AA','871'),('1987-10-24','AA','880'),('1987-10-24','AA','880'),('1987-10-24','AA','880'),('1987-10-24','AA','880'),('1987-10-24','AA','883'),('1987-10-24','AA','883'),('1987-10-24','AA','885'),('1987-10-24','AA','885'),('1987-10-24','AA','885'),('1987-10-24','AA','890'),('1987-10-24','AA','890'),('1987-10-24','AA','893'),('1987-10-24','AA','893'),('1987-10-24','AA','905'),('1987-10-24','AA','905'),('1987-10-24','AA','915'),('1987-10-24','AA','929'),('1987-10-24','AA','929'),('1987-10-24','AA','936'),('1987-10-24','AA','936'),('1987-10-24','AA','937'),('1987-10-24','AA','937'),('1987-10-24','AA','955'),('1987-10-24','AA','955'),('1987-10-24','AA','966'),('1987-10-24','AA','1002'),('1987-10-24','AA','1002'),('1987-10-24','AA','1004'),('1987-10-24','AA','1004'),('1987-10-24','AA','1015'),('1987-10-24','AA','1021'),('1987-10-24','AA','1021'),('1987-10-24','AA','1041'),('1987-10-24','AA','1041'),('1987-10-24','AA','1046'),('1987-10-24','AA','1046'),('1987-10-24','AA','1048'),('1987-10-24','AA','1048'),('1987-10-24','AA','1061'),('1987-10-24','AA','1061'),('1987-10-24','AA','1088'),('1987-10-24','AA','1088'),('1987-10-24','AA','2033'),('1987-10-24','AA','2033'),('1987-10-24','AA','2050'),('1987-10-24','AA','2058'),('1987-10-24','AA','2071'),('1987-10-24','AA','2071'),('1987-10-24','AA','2086'),('1987-10-24','AA','2105'),('1987-10-24','AA','2111'),('1987-10-24','AA','2123'),('1987-10-24','AA','2147'),('1987-10-24','AA','2199'),('1987-10-24','AA','2199'),('1987-10-24','AA','2207'),('1987-10-24','AA','2217'),('1987-10-24','AA','2230'),('1987-10-24','AA','2245'),('1987-10-24','AA','2251'),('1987-10-24','AA','2251'),('1987-10-24','AA','2275'),('1987-10-24','AA','2278'),('1987-10-24','AA','2351'),('1987-10-24','AA','2357'),('1987-10-24','AA','2361'),('1987-10-24','AA','2490'),('1987-10-24','AA','2528'),('1987-10-24','AA','2528'),('1987-10-24','AA','2735'),('1987-10-24','AA','2735'),('1987-10-24','AL','2'),('1987-10-24','AL','2'),('1987-10-24','AL','7'),('1987-10-24','AL','7'),('1987-10-24','AL','26'),('1987-10-24','AL','26'),('1987-10-24','AL','34'),('1987-10-24','AL','34'),('1987-10-24','AL','36'),('1987-10-24','AL','36'),('1987-10-24','AL','45'),('1987-10-24','AL','91'),('1987-10-24','AL','91'),('1987-10-24','AL','104'),('1987-10-24','AL','104'),('1987-10-24','AL','109'),('1987-10-24','AL','112'),('1987-10-24','AL','112'),('1987-10-24','AL','149'),('1987-10-24','AL','160'),('1987-10-24','AL','160'),('1987-10-24','AL','165'),('1987-10-24','AL','171'),('1987-10-24','AL','171'),('1987-10-24','AL','176'),('1987-10-24','AL','176'),('1987-10-24','AL','179'),('1987-10-24','AL','215'),('1987-10-24','AL','231'),('1987-10-24','AL','263'),('1987-10-24','AL','268'),('1987-10-24','AL','268'),('1987-10-24','AL','268'),('1987-10-24','AL','287'),('1987-10-24','AL','287'),('1987-10-24','AL','309'),('1987-10-24','AL','309'),('1987-10-24','AL','344'),('1987-10-24','AL','344'),('1987-10-24','AL','357'),('1987-10-24','AL','357'),('1987-10-24','AL','381'),('1987-10-24','AL','396'),('1987-10-24','AL','397'),('1987-10-24','AL','397'),('1987-10-24','AL','397'),('1987-10-24','AL','416'),('1987-10-24','AL','417'),('1987-10-24','AL','438'),('1987-10-24','AL','438'),('1987-10-24','AL','451'),('1987-10-24','AL','451'),('1987-10-24','AL','491'),('1987-10-24','AL','491'),('1987-10-24','AL','523'),('1987-10-24','AL','523'),('1987-10-24','AL','525'),('1987-10-24','AL','525'),('1987-10-24','AL','533'),('1987-10-24','AL','546'),('1987-10-24','AL','546'),('1987-10-24','AL','556'),('1987-10-24','AL','556'),('1987-10-24','AL','601'),('1987-10-24','AL','601'),('1987-10-24','AL','627'),('1987-10-24','AL','670'),('1987-10-24','AL','673'),('1987-10-24','AL','680'),('1987-10-24','AL','905'),('1987-10-24','AL','936'),('1987-10-24','AL','966'),('1987-10-24','AL','982'),('1987-10-25','AA','2'),('1987-10-25','AA','2'),('1987-10-25','AA','2'),('1987-10-25','AA','7'),('1987-10-25','AA','7'),('1987-10-25','AA','26'),('1987-10-25','AA','34'),('1987-10-25','AA','36'),('1987-10-25','AA','91'),('1987-10-25','AA','101'),('1987-10-25','AA','109'),('1987-10-25','AA','109'),('1987-10-25','AA','123'),('1987-10-25','AA','123'),('1987-10-25','AA','160'),('1987-10-25','AA','165'),('1987-10-25','AA','165'),('1987-10-25','AA','165'),('1987-10-25','AA','176'),('1987-10-25','AA','176'),('1987-10-25','AA','176'),('1987-10-25','AA','176'),('1987-10-25','AA','179'),('1987-10-25','AA','179'),('1987-10-25','AA','215'),('1987-10-25','AA','215'),('1987-10-25','AA','231'),('1987-10-25','AA','231'),('1987-10-25','AA','263'),('1987-10-25','AA','263'),('1987-10-25','AA','268'),('1987-10-25','AA','268'),('1987-10-25','AA','281'),('1987-10-25','AA','287'),('1987-10-25','AA','287'),('1987-10-25','AA','309'),('1987-10-25','AA','309'),('1987-10-25','AA','309'),('1987-10-25','AA','341'),('1987-10-25','AA','344'),('1987-10-25','AA','344'),('1987-10-25','AA','347'),('1987-10-25','AA','347'),('1987-10-25','AA','368'),('1987-10-25','AA','381'),('1987-10-25','AA','381'),('1987-10-25','AA','396'),('1987-10-25','AA','397'),('1987-10-25','AA','397'),('1987-10-25','AA','417'),('1987-10-25','AA','417'),('1987-10-25','AA','446'),('1987-10-25','AA','451'),('1987-10-25','AA','460'),('1987-10-25','AA','460'),('1987-10-25','AA','491'),('1987-10-25','AA','491'),('1987-10-25','AA','504'),('1987-10-25','AA','504'),('1987-10-25','AA','519'),('1987-10-25','AA','519'),('1987-10-25','AA','523'),('1987-10-25','AA','523'),('1987-10-25','AA','525'),('1987-10-25','AA','525'),('1987-10-25','AA','525'),('1987-10-25','AA','533'),('1987-10-25','AA','533'),('1987-10-25','AA','533'),('1987-10-25','AA','546'),('1987-10-25','AA','546'),('1987-10-25','AA','546'),('1987-10-25','AA','546'),('1987-10-25','AA','556'),('1987-10-25','AA','556'),('1987-10-25','AA','556'),('1987-10-25','AA','597'),('1987-10-25','AA','597'),('1987-10-25','AA','597'),('1987-10-25','AA','601'),('1987-10-25','AA','627'),('1987-10-25','AA','629'),('1987-10-25','AA','629'),('1987-10-25','AA','670'),('1987-10-25','AA','673'),('1987-10-25','AA','673'),('1987-10-25','AA','680'),('1987-10-25','AA','680'),('1987-10-25','AA','817'),('1987-10-25','AA','817'),('1987-10-25','AA','824'),('1987-10-25','AA','824'),('1987-10-25','AA','824'),('1987-10-25','AA','824'),('1987-10-25','AA','832'),('1987-10-25','AA','832'),('1987-10-25','AA','852'),('1987-10-25','AA','852'),('1987-10-25','AA','866'),('1987-10-25','AA','866'),('1987-10-25','AA','871'),('1987-10-25','AA','871'),('1987-10-25','AA','880'),('1987-10-25','AA','880'),('1987-10-25','AA','880'),('1987-10-25','AA','880'),('1987-10-25','AA','883'),('1987-10-25','AA','883'),('1987-10-25','AA','885'),('1987-10-25','AA','885'),('1987-10-25','AA','885'),('1987-10-25','AA','890'),('1987-10-25','AA','893'),('1987-10-25','AA','893'),('1987-10-25','AA','905'),('1987-10-25','AA','905'),('1987-10-25','AA','915'),('1987-10-25','AA','929'),('1987-10-25','AA','929'),('1987-10-25','AA','936'),('1987-10-25','AA','936'),('1987-10-25','AA','937'),('1987-10-25','AA','937'),('1987-10-25','AA','955'),('1987-10-25','AA','955'),('1987-10-25','AA','1002'),('1987-10-25','AA','1002'),('1987-10-25','AA','1004'),('1987-10-25','AA','1004'),('1987-10-25','AA','1015'),('1987-10-25','AA','1015'),('1987-10-25','AA','1021'),('1987-10-25','AA','1021'),('1987-10-25','AA','1041'),('1987-10-25','AA','1041'),('1987-10-25','AA','1046'),('1987-10-25','AA','1046'),('1987-10-25','AA','1048'),('1987-10-25','AA','1048'),('1987-10-25','AA','1061'),('1987-10-25','AA','1061'),('1987-10-25','AA','1088'),('1987-10-25','AA','1088'),('1987-10-25','AA','2033'),('1987-10-25','AA','2033'),('1987-10-25','AA','2050'),('1987-10-25','AA','2058'),('1987-10-25','AA','2071'),('1987-10-25','AA','2071'),('1987-10-25','AA','2086'),('1987-10-25','AA','2111'),('1987-10-25','AA','2123'),('1987-10-25','AA','2123'),('1987-10-25','AA','2147'),('1987-10-25','AA','2199'),('1987-10-25','AA','2199'),('1987-10-25','AA','2207'),('1987-10-25','AA','2207'),('1987-10-25','AA','2230'),('1987-10-25','AA','2245'),('1987-10-25','AA','2251'),('1987-10-25','AA','2251'),('1987-10-25','AA','2275'),('1987-10-25','AA','2278'),('1987-10-25','AA','2357'),('1987-10-25','AA','2361'),('1987-10-25','AA','2490'),('1987-10-25','AA','2528'),('1987-10-25','AA','2528'),('1987-10-25','AA','2735'),('1987-10-25','AA','2735'),('1987-10-25','AA','2751'),('1987-10-25','AL','2'),('1987-10-25','AL','2'),('1987-10-25','AL','7'),('1987-10-25','AL','7'),('1987-10-25','AL','26'),('1987-10-25','AL','26'),('1987-10-25','AL','34'),('1987-10-25','AL','34'),('1987-10-25','AL','36'),('1987-10-25','AL','36'),('1987-10-25','AL','45'),('1987-10-25','AL','45'),('1987-10-25','AL','45'),('1987-10-25','AL','91'),('1987-10-25','AL','91'),('1987-10-25','AL','104'),('1987-10-25','AL','104'),('1987-10-25','AL','104'),('1987-10-25','AL','112'),('1987-10-25','AL','123'),('1987-10-25','AL','149'),('1987-10-25','AL','160'),('1987-10-25','AL','160'),('1987-10-25','AL','165'),('1987-10-25','AL','171'),('1987-10-25','AL','171'),('1987-10-25','AL','176'),('1987-10-25','AL','176'),('1987-10-25','AL','179'),('1987-10-25','AL','215'),('1987-10-25','AL','231'),('1987-10-25','AL','263'),('1987-10-25','AL','263'),('1987-10-25','AL','281'),('1987-10-25','AL','281'),('1987-10-25','AL','309'),('1987-10-25','AL','309'),('1987-10-25','AL','341'),('1987-10-25','AL','344'),('1987-10-25','AL','344'),('1987-10-25','AL','357'),('1987-10-25','AL','357'),('1987-10-25','AL','368'),('1987-10-25','AL','396'),('1987-10-25','AL','416'),('1987-10-25','AL','416'),('1987-10-25','AL','417'),('1987-10-25','AL','438'),('1987-10-25','AL','438'),('1987-10-25','AL','446'),('1987-10-25','AL','451'),('1987-10-25','AL','491'),('1987-10-25','AL','523'),('1987-10-25','AL','523'),('1987-10-25','AL','523'),('1987-10-25','AL','525'),('1987-10-25','AL','525'),('1987-10-25','AL','533'),('1987-10-25','AL','533'),('1987-10-25','AL','546'),('1987-10-25','AL','546'),('1987-10-25','AL','556'),('1987-10-25','AL','556'),('1987-10-25','AL','601'),('1987-10-25','AL','601'),('1987-10-25','AL','627'),('1987-10-25','AL','629'),('1987-10-25','AL','670'),('1987-10-25','AL','670'),('1987-10-25','AL','670'),('1987-10-25','AL','673'),('1987-10-25','AL','680'),('1987-10-25','AL','937'),('1987-10-25','AL','937'),('1987-10-25','AL','955'),('1987-10-26','AA','2'),('1987-10-26','AA','2'),('1987-10-26','AA','2'),('1987-10-26','AA','7'),('1987-10-26','AA','7'),('1987-10-26','AA','26'),('1987-10-26','AA','34'),('1987-10-26','AA','36'),('1987-10-26','AA','91'),('1987-10-26','AA','101'),('1987-10-26','AA','101'),('1987-10-26','AA','109'),('1987-10-26','AA','109'),('1987-10-26','AA','112'),('1987-10-26','AA','123'),('1987-10-26','AA','123'),('1987-10-26','AA','160'),('1987-10-26','AA','165'),('1987-10-26','AA','165'),('1987-10-26','AA','165'),('1987-10-26','AA','176'),('1987-10-26','AA','176'),('1987-10-26','AA','176'),('1987-10-26','AA','176'),('1987-10-26','AA','179'),('1987-10-26','AA','179'),('1987-10-26','AA','215'),('1987-10-26','AA','215'),('1987-10-26','AA','231'),('1987-10-26','AA','231'),('1987-10-26','AA','263'),('1987-10-26','AA','263'),('1987-10-26','AA','268'),('1987-10-26','AA','268'),('1987-10-26','AA','281'),('1987-10-26','AA','287'),('1987-10-26','AA','287'),('1987-10-26','AA','309'),('1987-10-26','AA','309'),('1987-10-26','AA','309'),('1987-10-26','AA','341'),('1987-10-26','AA','344'),('1987-10-26','AA','344'),('1987-10-26','AA','347'),('1987-10-26','AA','347'),('1987-10-26','AA','368'),('1987-10-26','AA','381'),('1987-10-26','AA','381'),('1987-10-26','AA','381'),('1987-10-26','AA','396'),('1987-10-26','AA','396'),('1987-10-26','AA','397'),('1987-10-26','AA','397'),('1987-10-26','AA','417'),('1987-10-26','AA','417'),('1987-10-26','AA','446'),('1987-10-26','AA','451'),('1987-10-26','AA','451'),('1987-10-26','AA','491'),('1987-10-26','AA','504'),('1987-10-26','AA','504'),('1987-10-26','AA','519'),('1987-10-26','AA','523'),('1987-10-26','AA','523'),('1987-10-26','AA','525'),('1987-10-26','AA','525'),('1987-10-26','AA','525'),('1987-10-26','AA','533'),('1987-10-26','AA','533'),('1987-10-26','AA','533'),('1987-10-26','AA','546'),('1987-10-26','AA','546'),('1987-10-26','AA','546'),('1987-10-26','AA','546'),('1987-10-26','AA','556'),('1987-10-26','AA','556'),('1987-10-26','AA','556'),('1987-10-26','AA','597'),('1987-10-26','AA','597'),('1987-10-26','AA','597'),('1987-10-26','AA','601'),('1987-10-26','AA','601'),('1987-10-26','AA','627'),('1987-10-26','AA','629'),('1987-10-26','AA','629'),('1987-10-26','AA','670'),('1987-10-26','AA','673'),('1987-10-26','AA','673'),('1987-10-26','AA','680'),('1987-10-26','AA','680'),('1987-10-26','AA','817'),('1987-10-26','AA','817'),('1987-10-26','AA','824'),('1987-10-26','AA','824'),('1987-10-26','AA','832'),('1987-10-26','AA','832'),('1987-10-26','AA','852'),('1987-10-26','AA','852'),('1987-10-26','AA','866'),('1987-10-26','AA','866'),('1987-10-26','AA','871'),('1987-10-26','AA','871'),('1987-10-26','AA','880'),('1987-10-26','AA','880'),('1987-10-26','AA','880'),('1987-10-26','AA','880'),('1987-10-26','AA','883'),('1987-10-26','AA','883'),('1987-10-26','AA','885'),('1987-10-26','AA','885'),('1987-10-26','AA','885'),('1987-10-26','AA','890'),('1987-10-26','AA','890'),('1987-10-26','AA','893'),('1987-10-26','AA','893'),('1987-10-26','AA','905'),('1987-10-26','AA','905'),('1987-10-26','AA','915'),('1987-10-26','AA','929'),('1987-10-26','AA','929'),('1987-10-26','AA','936'),('1987-10-26','AA','936'),('1987-10-26','AA','937'),('1987-10-26','AA','937'),('1987-10-26','AA','955'),('1987-10-26','AA','955'),('1987-10-26','AA','966'),('1987-10-26','AA','1002'),('1987-10-26','AA','1002'),('1987-10-26','AA','1004'),('1987-10-26','AA','1004'),('1987-10-26','AA','1015'),('1987-10-26','AA','1015'),('1987-10-26','AA','1021'),('1987-10-26','AA','1021'),('1987-10-26','AA','1046'),('1987-10-26','AA','1046'),('1987-10-26','AA','1048'),('1987-10-26','AA','1048'),('1987-10-26','AA','1061'),('1987-10-26','AA','1061'),('1987-10-26','AA','1088'),('1987-10-26','AA','1088'),('1987-10-26','AA','2033'),('1987-10-26','AA','2033'),('1987-10-26','AA','2050'),('1987-10-26','AA','2058'),('1987-10-26','AA','2071'),('1987-10-26','AA','2071'),('1987-10-26','AA','2086'),('1987-10-26','AA','2105'),('1987-10-26','AA','2111'),('1987-10-26','AA','2123'),('1987-10-26','AA','2123'),('1987-10-26','AA','2147'),('1987-10-26','AA','2147'),('1987-10-26','AA','2199'),('1987-10-26','AA','2199'),('1987-10-26','AA','2207'),('1987-10-26','AA','2207'),('1987-10-26','AA','2230'),('1987-10-26','AA','2245'),('1987-10-26','AA','2251'),('1987-10-26','AA','2251'),('1987-10-26','AA','2275'),('1987-10-26','AA','2278'),('1987-10-26','AA','2351'),('1987-10-26','AA','2357'),('1987-10-26','AA','2361'),('1987-10-26','AA','2490'),('1987-10-26','AA','2528'),('1987-10-26','AA','2528'),('1987-10-26','AA','2735'),('1987-10-26','AA','2735'),('1987-10-26','AA','2751'),('1987-10-26','AL','2'),('1987-10-26','AL','2'),('1987-10-26','AL','7'),('1987-10-26','AL','7'),('1987-10-26','AL','26'),('1987-10-26','AL','26'),('1987-10-26','AL','34'),('1987-10-26','AL','34'),('1987-10-26','AL','36'),('1987-10-26','AL','36'),('1987-10-26','AL','45'),('1987-10-26','AL','45'),('1987-10-26','AL','45'),('1987-10-26','AL','91'),('1987-10-26','AL','91'),('1987-10-26','AL','104'),('1987-10-26','AL','104'),('1987-10-26','AL','104'),('1987-10-26','AL','109'),('1987-10-26','AL','112'),('1987-10-26','AL','112'),('1987-10-26','AL','123'),('1987-10-26','AL','149'),('1987-10-26','AL','160'),('1987-10-26','AL','160'),('1987-10-26','AL','165'),('1987-10-26','AL','171'),('1987-10-26','AL','171'),('1987-10-26','AL','176'),('1987-10-26','AL','176'),('1987-10-26','AL','179'),('1987-10-26','AL','215'),('1987-10-26','AL','231'),('1987-10-26','AL','263'),('1987-10-26','AL','263'),('1987-10-26','AL','268'),('1987-10-26','AL','268'),('1987-10-26','AL','268'),('1987-10-26','AL','281'),('1987-10-26','AL','281'),('1987-10-26','AL','287'),('1987-10-26','AL','287'),('1987-10-26','AL','309'),('1987-10-26','AL','309'),('1987-10-26','AL','341'),('1987-10-26','AL','344'),('1987-10-26','AL','357'),('1987-10-26','AL','357'),('1987-10-26','AL','368'),('1987-10-26','AL','381'),('1987-10-26','AL','396'),('1987-10-26','AL','397'),('1987-10-26','AL','397'),('1987-10-26','AL','416'),('1987-10-26','AL','416'),('1987-10-26','AL','417'),('1987-10-26','AL','438'),('1987-10-26','AL','438'),('1987-10-26','AL','446'),('1987-10-26','AL','451'),('1987-10-26','AL','451'),('1987-10-26','AL','491'),('1987-10-26','AL','491'),('1987-10-26','AL','523'),('1987-10-26','AL','523'),('1987-10-26','AL','523'),('1987-10-26','AL','525'),('1987-10-26','AL','533'),('1987-10-26','AL','533'),('1987-10-26','AL','546'),('1987-10-26','AL','546'),('1987-10-26','AL','556'),('1987-10-26','AL','556'),('1987-10-26','AL','601'),('1987-10-26','AL','601'),('1987-10-26','AL','627'),('1987-10-26','AL','629'),('1987-10-26','AL','670'),('1987-10-26','AL','670'),('1987-10-26','AL','670'),('1987-10-26','AL','673'),('1987-10-26','AL','680'),('1987-10-27','AA','2'),('1987-10-27','AA','2'),('1987-10-27','AA','2'),('1987-10-27','AA','7'),('1987-10-27','AA','26'),('1987-10-27','AA','34'),('1987-10-27','AA','36'),('1987-10-27','AA','91'),('1987-10-27','AA','101'),('1987-10-27','AA','101'),('1987-10-27','AA','109'),('1987-10-27','AA','109'),('1987-10-27','AA','112'),('1987-10-27','AA','123'),('1987-10-27','AA','123'),('1987-10-27','AA','160'),('1987-10-27','AA','165'),('1987-10-27','AA','165'),('1987-10-27','AA','165'),('1987-10-27','AA','176'),('1987-10-27','AA','176'),('1987-10-27','AA','176'),('1987-10-27','AA','176'),('1987-10-27','AA','179'),('1987-10-27','AA','179'),('1987-10-27','AA','215'),('1987-10-27','AA','215'),('1987-10-27','AA','231'),('1987-10-27','AA','263'),('1987-10-27','AA','263'),('1987-10-27','AA','268'),('1987-10-27','AA','268'),('1987-10-27','AA','281'),('1987-10-27','AA','287'),('1987-10-27','AA','287'),('1987-10-27','AA','309'),('1987-10-27','AA','309'),('1987-10-27','AA','309'),('1987-10-27','AA','341'),('1987-10-27','AA','344'),('1987-10-27','AA','344'),('1987-10-27','AA','347'),('1987-10-27','AA','347'),('1987-10-27','AA','368'),('1987-10-27','AA','381'),('1987-10-27','AA','381'),('1987-10-27','AA','381'),('1987-10-27','AA','396'),('1987-10-27','AA','396'),('1987-10-27','AA','397'),('1987-10-27','AA','397'),('1987-10-27','AA','417'),('1987-10-27','AA','417'),('1987-10-27','AA','446'),('1987-10-27','AA','451'),('1987-10-27','AA','451'),('1987-10-27','AA','460'),('1987-10-27','AA','460'),('1987-10-27','AA','491'),('1987-10-27','AA','504'),('1987-10-27','AA','504'),('1987-10-27','AA','519'),('1987-10-27','AA','519'),('1987-10-27','AA','523'),('1987-10-27','AA','523'),('1987-10-27','AA','525'),('1987-10-27','AA','525'),('1987-10-27','AA','525'),('1987-10-27','AA','533'),('1987-10-27','AA','533'),('1987-10-27','AA','533'),('1987-10-27','AA','546'),('1987-10-27','AA','546'),('1987-10-27','AA','546'),('1987-10-27','AA','546'),('1987-10-27','AA','556'),('1987-10-27','AA','556'),('1987-10-27','AA','556'),('1987-10-27','AA','597'),('1987-10-27','AA','597'),('1987-10-27','AA','597'),('1987-10-27','AA','601'),('1987-10-27','AA','601'),('1987-10-27','AA','627'),('1987-10-27','AA','629'),('1987-10-27','AA','629'),('1987-10-27','AA','670'),('1987-10-27','AA','673'),('1987-10-27','AA','673'),('1987-10-27','AA','680'),('1987-10-27','AA','680'),('1987-10-27','AA','817'),('1987-10-27','AA','817'),('1987-10-27','AA','824'),('1987-10-27','AA','824'),('1987-10-27','AA','824'),('1987-10-27','AA','824'),('1987-10-27','AA','832'),('1987-10-27','AA','832'),('1987-10-27','AA','852'),('1987-10-27','AA','852'),('1987-10-27','AA','866'),('1987-10-27','AA','866'),('1987-10-27','AA','871'),('1987-10-27','AA','871'),('1987-10-27','AA','880'),('1987-10-27','AA','880'),('1987-10-27','AA','880'),('1987-10-27','AA','880'),('1987-10-27','AA','883'),('1987-10-27','AA','883'),('1987-10-27','AA','885'),('1987-10-27','AA','885'),('1987-10-27','AA','885'),('1987-10-27','AA','890'),('1987-10-27','AA','890'),('1987-10-27','AA','893'),('1987-10-27','AA','893'),('1987-10-27','AA','905'),('1987-10-27','AA','905'),('1987-10-27','AA','915'),('1987-10-27','AA','929'),('1987-10-27','AA','929'),('1987-10-27','AA','936'),('1987-10-27','AA','936'),('1987-10-27','AA','937'),('1987-10-27','AA','937'),('1987-10-27','AA','955'),('1987-10-27','AA','955'),('1987-10-27','AA','966'),('1987-10-27','AA','1002'),('1987-10-27','AA','1002'),('1987-10-27','AA','1004'),('1987-10-27','AA','1004'),('1987-10-27','AA','1015'),('1987-10-27','AA','1015'),('1987-10-27','AA','1021'),('1987-10-27','AA','1021'),('1987-10-27','AA','1041'),('1987-10-27','AA','1041'),('1987-10-27','AA','1046'),('1987-10-27','AA','1046'),('1987-10-27','AA','1048'),('1987-10-27','AA','1061'),('1987-10-27','AA','1061'),('1987-10-27','AA','1088'),('1987-10-27','AA','1088'),('1987-10-27','AA','2033'),('1987-10-27','AA','2033'),('1987-10-27','AA','2050'),('1987-10-27','AA','2058'),('1987-10-27','AA','2071'),('1987-10-27','AA','2071'),('1987-10-27','AA','2086'),('1987-10-27','AA','2105'),('1987-10-27','AA','2111'),('1987-10-27','AA','2123'),('1987-10-27','AA','2123'),('1987-10-27','AA','2147'),('1987-10-27','AA','2147'),('1987-10-27','AA','2199'),('1987-10-27','AA','2199'),('1987-10-27','AA','2207'),('1987-10-27','AA','2207'),('1987-10-27','AA','2217'),('1987-10-27','AA','2230'),('1987-10-27','AA','2245'),('1987-10-27','AA','2251'),('1987-10-27','AA','2251'),('1987-10-27','AA','2275'),('1987-10-27','AA','2278'),('1987-10-27','AA','2357'),('1987-10-27','AA','2490'),('1987-10-27','AA','2528'),('1987-10-27','AA','2528'),('1987-10-27','AA','2735'),('1987-10-27','AA','2735'),('1987-10-27','AL','2'),('1987-10-27','AL','2'),('1987-10-27','AL','7'),('1987-10-27','AL','7'),('1987-10-27','AL','26'),('1987-10-27','AL','26'),('1987-10-27','AL','34'),('1987-10-27','AL','34'),('1987-10-27','AL','36'),('1987-10-27','AL','36'),('1987-10-27','AL','45'),('1987-10-27','AL','45'),('1987-10-27','AL','45'),('1987-10-27','AL','91'),('1987-10-27','AL','91'),('1987-10-27','AL','104'),('1987-10-27','AL','104'),('1987-10-27','AL','104'),('1987-10-27','AL','109'),('1987-10-27','AL','112'),('1987-10-27','AL','112'),('1987-10-27','AL','123'),('1987-10-27','AL','149'),('1987-10-27','AL','160'),('1987-10-27','AL','160'),('1987-10-27','AL','165'),('1987-10-27','AL','171'),('1987-10-27','AL','171'),('1987-10-27','AL','176'),('1987-10-27','AL','176'),('1987-10-27','AL','179'),('1987-10-27','AL','215'),('1987-10-27','AL','231'),('1987-10-27','AL','263'),('1987-10-27','AL','263'),('1987-10-27','AL','268'),('1987-10-27','AL','268'),('1987-10-27','AL','268'),('1987-10-27','AL','281'),('1987-10-27','AL','281'),('1987-10-27','AL','287'),('1987-10-27','AL','287'),('1987-10-27','AL','309'),('1987-10-27','AL','309'),('1987-10-27','AL','341'),('1987-10-27','AL','344'),('1987-10-27','AL','344'),('1987-10-27','AL','357'),('1987-10-27','AL','357'),('1987-10-27','AL','368'),('1987-10-27','AL','381'),('1987-10-27','AL','396'),('1987-10-27','AL','397'),('1987-10-27','AL','397'),('1987-10-27','AL','416'),('1987-10-27','AL','416'),('1987-10-27','AL','417'),('1987-10-27','AL','438'),('1987-10-27','AL','438'),('1987-10-27','AL','446'),('1987-10-27','AL','451'),('1987-10-27','AL','451'),('1987-10-27','AL','491'),('1987-10-27','AL','491'),('1987-10-27','AL','523'),('1987-10-27','AL','523'),('1987-10-27','AL','523'),('1987-10-27','AL','525'),('1987-10-27','AL','525'),('1987-10-27','AL','533'),('1987-10-27','AL','533'),('1987-10-27','AL','546'),('1987-10-27','AL','546'),('1987-10-27','AL','556'),('1987-10-27','AL','556'),('1987-10-27','AL','601'),('1987-10-27','AL','601'),('1987-10-27','AL','627'),('1987-10-27','AL','629'),('1987-10-27','AL','670'),('1987-10-27','AL','670'),('1987-10-27','AL','670'),('1987-10-27','AL','673'),('1987-10-27','AL','680'),('1987-10-28','AA','2'),('1987-10-28','AA','2'),('1987-10-28','AA','2'),('1987-10-28','AA','7'),('1987-10-28','AA','7'),('1987-10-28','AA','26'),('1987-10-28','AA','34'),('1987-10-28','AA','36'),('1987-10-28','AA','91'),('1987-10-28','AA','101'),('1987-10-28','AA','101'),('1987-10-28','AA','109'),('1987-10-28','AA','109'),('1987-10-28','AA','112'),('1987-10-28','AA','123'),('1987-10-28','AA','123'),('1987-10-28','AA','165'),('1987-10-28','AA','165'),('1987-10-28','AA','165'),('1987-10-28','AA','176'),('1987-10-28','AA','176'),('1987-10-28','AA','176'),('1987-10-28','AA','176'),('1987-10-28','AA','179'),('1987-10-28','AA','179'),('1987-10-28','AA','215'),('1987-10-28','AA','215'),('1987-10-28','AA','231'),('1987-10-28','AA','231'),('1987-10-28','AA','263'),('1987-10-28','AA','268'),('1987-10-28','AA','268'),('1987-10-28','AA','281'),('1987-10-28','AA','287'),('1987-10-28','AA','287'),('1987-10-28','AA','309'),('1987-10-28','AA','309'),('1987-10-28','AA','309'),('1987-10-28','AA','341'),('1987-10-28','AA','344'),('1987-10-28','AA','344'),('1987-10-28','AA','347'),('1987-10-28','AA','347'),('1987-10-28','AA','368'),('1987-10-28','AA','381'),('1987-10-28','AA','381'),('1987-10-28','AA','381'),('1987-10-28','AA','396'),('1987-10-28','AA','396'),('1987-10-28','AA','397'),('1987-10-28','AA','397'),('1987-10-28','AA','417'),('1987-10-28','AA','417'),('1987-10-28','AA','446'),('1987-10-28','AA','451'),('1987-10-28','AA','451'),('1987-10-28','AA','460'),('1987-10-28','AA','460'),('1987-10-28','AA','491'),('1987-10-28','AA','504'),('1987-10-28','AA','504'),('1987-10-28','AA','519'),('1987-10-28','AA','519'),('1987-10-28','AA','523'),('1987-10-28','AA','523'),('1987-10-28','AA','525'),('1987-10-28','AA','525'),('1987-10-28','AA','525'),('1987-10-28','AA','533'),('1987-10-28','AA','533'),('1987-10-28','AA','533'),('1987-10-28','AA','546'),('1987-10-28','AA','546'),('1987-10-28','AA','546'),('1987-10-28','AA','546'),('1987-10-28','AA','556'),('1987-10-28','AA','556'),('1987-10-28','AA','556'),('1987-10-28','AA','597'),('1987-10-28','AA','597'),('1987-10-28','AA','597'),('1987-10-28','AA','601'),('1987-10-28','AA','601'),('1987-10-28','AA','627'),('1987-10-28','AA','629'),('1987-10-28','AA','629'),('1987-10-28','AA','670'),('1987-10-28','AA','673'),('1987-10-28','AA','673'),('1987-10-28','AA','680'),('1987-10-28','AA','680'),('1987-10-28','AA','817'),('1987-10-28','AA','817'),('1987-10-28','AA','824'),('1987-10-28','AA','824'),('1987-10-28','AA','824'),('1987-10-28','AA','832'),('1987-10-28','AA','832'),('1987-10-28','AA','852'),('1987-10-28','AA','852'),('1987-10-28','AA','866'),('1987-10-28','AA','866'),('1987-10-28','AA','871'),('1987-10-28','AA','871'),('1987-10-28','AA','880'),('1987-10-28','AA','880'),('1987-10-28','AA','880'),('1987-10-28','AA','880'),('1987-10-28','AA','883'),('1987-10-28','AA','883'),('1987-10-28','AA','885'),('1987-10-28','AA','885'),('1987-10-28','AA','890'),('1987-10-28','AA','890'),('1987-10-28','AA','893'),('1987-10-28','AA','893'),('1987-10-28','AA','905'),('1987-10-28','AA','905'),('1987-10-28','AA','915'),('1987-10-28','AA','929'),('1987-10-28','AA','929'),('1987-10-28','AA','936'),('1987-10-28','AA','936'),('1987-10-28','AA','937'),('1987-10-28','AA','937'),('1987-10-28','AA','955'),('1987-10-28','AA','955'),('1987-10-28','AA','966'),('1987-10-28','AA','1002'),('1987-10-28','AA','1002'),('1987-10-28','AA','1004'),('1987-10-28','AA','1004'),('1987-10-28','AA','1015'),('1987-10-28','AA','1021'),('1987-10-28','AA','1021'),('1987-10-28','AA','1041'),('1987-10-28','AA','1041'),('1987-10-28','AA','1046'),('1987-10-28','AA','1046'),('1987-10-28','AA','1048'),('1987-10-28','AA','1048'),('1987-10-28','AA','1061'),('1987-10-28','AA','1061'),('1987-10-28','AA','1088'),('1987-10-28','AA','1088'),('1987-10-28','AA','2033'),('1987-10-28','AA','2033'),('1987-10-28','AA','2050'),('1987-10-28','AA','2058'),('1987-10-28','AA','2071'),('1987-10-28','AA','2071'),('1987-10-28','AA','2086'),('1987-10-28','AA','2105'),('1987-10-28','AA','2111'),('1987-10-28','AA','2123'),('1987-10-28','AA','2123'),('1987-10-28','AA','2147'),('1987-10-28','AA','2199'),('1987-10-28','AA','2199'),('1987-10-28','AA','2207'),('1987-10-28','AA','2207'),('1987-10-28','AA','2217'),('1987-10-28','AA','2230'),('1987-10-28','AA','2245'),('1987-10-28','AA','2251'),('1987-10-28','AA','2251'),('1987-10-28','AA','2275'),('1987-10-28','AA','2278'),('1987-10-28','AA','2351'),('1987-10-28','AA','2361'),('1987-10-28','AA','2490'),('1987-10-28','AA','2528'),('1987-10-28','AA','2528'),('1987-10-28','AA','2751'),('1987-10-28','AL','2'),('1987-10-28','AL','2'),('1987-10-28','AL','7'),('1987-10-28','AL','7'),('1987-10-28','AL','26'),('1987-10-28','AL','34'),('1987-10-28','AL','34'),('1987-10-28','AL','45'),('1987-10-28','AL','91'),('1987-10-28','AL','91'),('1987-10-28','AL','104'),('1987-10-28','AL','104'),('1987-10-28','AL','104'),('1987-10-28','AL','109'),('1987-10-28','AL','112'),('1987-10-28','AL','112'),('1987-10-28','AL','123'),('1987-10-28','AL','149'),('1987-10-28','AL','160'),('1987-10-28','AL','160'),('1987-10-28','AL','165'),('1987-10-28','AL','171'),('1987-10-28','AL','171'),('1987-10-28','AL','176'),('1987-10-28','AL','176'),('1987-10-28','AL','179'),('1987-10-28','AL','215'),('1987-10-28','AL','231'),('1987-10-28','AL','263'),('1987-10-28','AL','263'),('1987-10-28','AL','268'),('1987-10-28','AL','268'),('1987-10-28','AL','268'),('1987-10-28','AL','281'),('1987-10-28','AL','281'),('1987-10-28','AL','287'),('1987-10-28','AL','287'),('1987-10-28','AL','309'),('1987-10-28','AL','309'),('1987-10-28','AL','341'),('1987-10-28','AL','344'),('1987-10-28','AL','344'),('1987-10-28','AL','357'),('1987-10-28','AL','357'),('1987-10-28','AL','368'),('1987-10-28','AL','381'),('1987-10-28','AL','396'),('1987-10-28','AL','397'),('1987-10-28','AL','397'),('1987-10-28','AL','416'),('1987-10-28','AL','416'),('1987-10-28','AL','417'),('1987-10-28','AL','438'),('1987-10-28','AL','438'),('1987-10-28','AL','446'),('1987-10-28','AL','451'),('1987-10-28','AL','451'),('1987-10-28','AL','491'),('1987-10-28','AL','491'),('1987-10-28','AL','523'),('1987-10-28','AL','523'),('1987-10-28','AL','523'),('1987-10-28','AL','525'),('1987-10-28','AL','525'),('1987-10-28','AL','533'),('1987-10-28','AL','533'),('1987-10-28','AL','546'),('1987-10-28','AL','546'),('1987-10-28','AL','556'),('1987-10-28','AL','556'),('1987-10-28','AL','601'),('1987-10-28','AL','601'),('1987-10-28','AL','627'),('1987-10-28','AL','629'),('1987-10-28','AL','670'),('1987-10-28','AL','670'),('1987-10-28','AL','670'),('1987-10-28','AL','673'),('1987-10-28','AL','680'),('1987-10-29','AA','2'),('1987-10-29','AA','2'),('1987-10-29','AA','2'),('1987-10-29','AA','7'),('1987-10-29','AA','7'),('1987-10-29','AA','26'),('1987-10-29','AA','34'),('1987-10-29','AA','36'),('1987-10-29','AA','91'),('1987-10-29','AA','101'),('1987-10-29','AA','101'),('1987-10-29','AA','109'),('1987-10-29','AA','109'),('1987-10-29','AA','112'),('1987-10-29','AA','123'),('1987-10-29','AA','123'),('1987-10-29','AA','160'),('1987-10-29','AA','165'),('1987-10-29','AA','165'),('1987-10-29','AA','165'),('1987-10-29','AA','176'),('1987-10-29','AA','176'),('1987-10-29','AA','176'),('1987-10-29','AA','176'),('1987-10-29','AA','179'),('1987-10-29','AA','179'),('1987-10-29','AA','215'),('1987-10-29','AA','215'),('1987-10-29','AA','231'),('1987-10-29','AA','231'),('1987-10-29','AA','263'),('1987-10-29','AA','263'),('1987-10-29','AA','268'),('1987-10-29','AA','268'),('1987-10-29','AA','281'),('1987-10-29','AA','287'),('1987-10-29','AA','287'),('1987-10-29','AA','309'),('1987-10-29','AA','309'),('1987-10-29','AA','309'),('1987-10-29','AA','341'),('1987-10-29','AA','344'),('1987-10-29','AA','344'),('1987-10-29','AA','347'),('1987-10-29','AA','347'),('1987-10-29','AA','368'),('1987-10-29','AA','381'),('1987-10-29','AA','381'),('1987-10-29','AA','381'),('1987-10-29','AA','396'),('1987-10-29','AA','396'),('1987-10-29','AA','397'),('1987-10-29','AA','397'),('1987-10-29','AA','417'),('1987-10-29','AA','417'),('1987-10-29','AA','451'),('1987-10-29','AA','451'),('1987-10-29','AA','460'),('1987-10-29','AA','460'),('1987-10-29','AA','491'),('1987-10-29','AA','504'),('1987-10-29','AA','504'),('1987-10-29','AA','519'),('1987-10-29','AA','519'),('1987-10-29','AA','523'),('1987-10-29','AA','523'),('1987-10-29','AA','525'),('1987-10-29','AA','525'),('1987-10-29','AA','525'),('1987-10-29','AA','533'),('1987-10-29','AA','533'),('1987-10-29','AA','533'),('1987-10-29','AA','546'),('1987-10-29','AA','546'),('1987-10-29','AA','546'),('1987-10-29','AA','546'),('1987-10-29','AA','556'),('1987-10-29','AA','556'),('1987-10-29','AA','556'),('1987-10-29','AA','597'),('1987-10-29','AA','597'),('1987-10-29','AA','597'),('1987-10-29','AA','601'),('1987-10-29','AA','601'),('1987-10-29','AA','627'),('1987-10-29','AA','629'),('1987-10-29','AA','670'),('1987-10-29','AA','673'),('1987-10-29','AA','680'),('1987-10-29','AA','680'),('1987-10-29','AA','817'),('1987-10-29','AA','817'),('1987-10-29','AA','824'),('1987-10-29','AA','824'),('1987-10-29','AA','824'),('1987-10-29','AA','824'),('1987-10-29','AA','832'),('1987-10-29','AA','832'),('1987-10-29','AA','852'),('1987-10-29','AA','852'),('1987-10-29','AA','866'),('1987-10-29','AA','866'),('1987-10-29','AA','871'),('1987-10-29','AA','871'),('1987-10-29','AA','880'),('1987-10-29','AA','880'),('1987-10-29','AA','880'),('1987-10-29','AA','880'),('1987-10-29','AA','883'),('1987-10-29','AA','883'),('1987-10-29','AA','885'),('1987-10-29','AA','885'),('1987-10-29','AA','885'),('1987-10-29','AA','890'),('1987-10-29','AA','890'),('1987-10-29','AA','893'),('1987-10-29','AA','893'),('1987-10-29','AA','905'),('1987-10-29','AA','915'),('1987-10-29','AA','929'),('1987-10-29','AA','929'),('1987-10-29','AA','936'),('1987-10-29','AA','936'),('1987-10-29','AA','937'),('1987-10-29','AA','937'),('1987-10-29','AA','955'),('1987-10-29','AA','955'),('1987-10-29','AA','966'),('1987-10-29','AA','1002'),('1987-10-29','AA','1002'),('1987-10-29','AA','1004'),('1987-10-29','AA','1004'),('1987-10-29','AA','1015'),('1987-10-29','AA','1015'),('1987-10-29','AA','1021'),('1987-10-29','AA','1021'),('1987-10-29','AA','1041'),('1987-10-29','AA','1041'),('1987-10-29','AA','1046'),('1987-10-29','AA','1048'),('1987-10-29','AA','1048'),('1987-10-29','AA','1061'),('1987-10-29','AA','1061'),('1987-10-29','AA','1088'),('1987-10-29','AA','1088'),('1987-10-29','AA','2033'),('1987-10-29','AA','2033'),('1987-10-29','AA','2050'),('1987-10-29','AA','2058'),('1987-10-29','AA','2071'),('1987-10-29','AA','2071'),('1987-10-29','AA','2086'),('1987-10-29','AA','2105'),('1987-10-29','AA','2111'),('1987-10-29','AA','2123'),('1987-10-29','AA','2123'),('1987-10-29','AA','2147'),('1987-10-29','AA','2147'),('1987-10-29','AA','2199'),('1987-10-29','AA','2199'),('1987-10-29','AA','2207'),('1987-10-29','AA','2207'),('1987-10-29','AA','2217'),('1987-10-29','AA','2230'),('1987-10-29','AA','2251'),('1987-10-29','AA','2251'),('1987-10-29','AA','2275'),('1987-10-29','AA','2278'),('1987-10-29','AA','2351'),('1987-10-29','AA','2357'),('1987-10-29','AA','2361'),('1987-10-29','AA','2490'),('1987-10-29','AA','2528'),('1987-10-29','AA','2735'),('1987-10-29','AA','2735'),('1987-10-29','AA','2751'),('1987-10-29','AL','2'),('1987-10-29','AL','2'),('1987-10-29','AL','7'),('1987-10-29','AL','7'),('1987-10-29','AL','26'),('1987-10-29','AL','26'),('1987-10-29','AL','34'),('1987-10-29','AL','34'),('1987-10-29','AL','36'),('1987-10-29','AL','36'),('1987-10-29','AL','45'),('1987-10-29','AL','45'),('1987-10-29','AL','45'),('1987-10-29','AL','91'),('1987-10-29','AL','91'),('1987-10-29','AL','104'),('1987-10-29','AL','109'),('1987-10-29','AL','112'),('1987-10-29','AL','112'),('1987-10-29','AL','123'),('1987-10-29','AL','149'),('1987-10-29','AL','160'),('1987-10-29','AL','160'),('1987-10-29','AL','165'),('1987-10-29','AL','171'),('1987-10-29','AL','171'),('1987-10-29','AL','176'),('1987-10-29','AL','176'),('1987-10-29','AL','179'),('1987-10-29','AL','215'),('1987-10-29','AL','231'),('1987-10-29','AL','263'),('1987-10-29','AL','263'),('1987-10-29','AL','268'),('1987-10-29','AL','268'),('1987-10-29','AL','268'),('1987-10-29','AL','281'),('1987-10-29','AL','281'),('1987-10-29','AL','287'),('1987-10-29','AL','287'),('1987-10-29','AL','309'),('1987-10-29','AL','309'),('1987-10-29','AL','341'),('1987-10-29','AL','344'),('1987-10-29','AL','344'),('1987-10-29','AL','357'),('1987-10-29','AL','357'),('1987-10-29','AL','368'),('1987-10-29','AL','381'),('1987-10-29','AL','396'),('1987-10-29','AL','397'),('1987-10-29','AL','397'),('1987-10-29','AL','416'),('1987-10-29','AL','416'),('1987-10-29','AL','417'),('1987-10-29','AL','438'),('1987-10-29','AL','438'),('1987-10-29','AL','446'),('1987-10-29','AL','451'),('1987-10-29','AL','451'),('1987-10-29','AL','491'),('1987-10-29','AL','491'),('1987-10-29','AL','523'),('1987-10-29','AL','523'),('1987-10-29','AL','523'),('1987-10-29','AL','525'),('1987-10-29','AL','525'),('1987-10-29','AL','533'),('1987-10-29','AL','533'),('1987-10-29','AL','546'),('1987-10-29','AL','546'),('1987-10-29','AL','556'),('1987-10-29','AL','556'),('1987-10-29','AL','601'),('1987-10-29','AL','601'),('1987-10-29','AL','627'),('1987-10-29','AL','629'),('1987-10-29','AL','670'),('1987-10-29','AL','670'),('1987-10-29','AL','670'),('1987-10-29','AL','673'),('1987-10-29','AL','680'),('1987-10-30','AA','2'),('1987-10-30','AA','2'),('1987-10-30','AA','2'),('1987-10-30','AA','7'),('1987-10-30','AA','7'),('1987-10-30','AA','26'),('1987-10-30','AA','34'),('1987-10-30','AA','91'),('1987-10-30','AA','101'),('1987-10-30','AA','101'),('1987-10-30','AA','109'),('1987-10-30','AA','109'),('1987-10-30','AA','109'),('1987-10-30','AA','112'),('1987-10-30','AA','123'),('1987-10-30','AA','165'),('1987-10-30','AA','165'),('1987-10-30','AA','165'),('1987-10-30','AA','176'),('1987-10-30','AA','176'),('1987-10-30','AA','176'),('1987-10-30','AA','176'),('1987-10-30','AA','179'),('1987-10-30','AA','179'),('1987-10-30','AA','215'),('1987-10-30','AA','215'),('1987-10-30','AA','231'),('1987-10-30','AA','231'),('1987-10-30','AA','263'),('1987-10-30','AA','268'),('1987-10-30','AA','268'),('1987-10-30','AA','281'),('1987-10-30','AA','287'),('1987-10-30','AA','287'),('1987-10-30','AA','309'),('1987-10-30','AA','309'),('1987-10-30','AA','309'),('1987-10-30','AA','344'),('1987-10-30','AA','344'),('1987-10-30','AA','347'),('1987-10-30','AA','347'),('1987-10-30','AA','368'),('1987-10-30','AA','381'),('1987-10-30','AA','381'),('1987-10-30','AA','381'),('1987-10-30','AA','396'),('1987-10-30','AA','396'),('1987-10-30','AA','397'),('1987-10-30','AA','397'),('1987-10-30','AA','417'),('1987-10-30','AA','417'),('1987-10-30','AA','446'),('1987-10-30','AA','451'),('1987-10-30','AA','451'),('1987-10-30','AA','460'),('1987-10-30','AA','460'),('1987-10-30','AA','491'),('1987-10-30','AA','504'),('1987-10-30','AA','504'),('1987-10-30','AA','519'),('1987-10-30','AA','519'),('1987-10-30','AA','523'),('1987-10-30','AA','523'),('1987-10-30','AA','525'),('1987-10-30','AA','525'),('1987-10-30','AA','525'),('1987-10-30','AA','533'),('1987-10-30','AA','533'),('1987-10-30','AA','533'),('1987-10-30','AA','546'),('1987-10-30','AA','546'),('1987-10-30','AA','546'),('1987-10-30','AA','546'),('1987-10-30','AA','556'),('1987-10-30','AA','556'),('1987-10-30','AA','556'),('1987-10-30','AA','597'),('1987-10-30','AA','597'),('1987-10-30','AA','597'),('1987-10-30','AA','601'),('1987-10-30','AA','601'),('1987-10-30','AA','627'),('1987-10-30','AA','629'),('1987-10-30','AA','629'),('1987-10-30','AA','670'),('1987-10-30','AA','673'),('1987-10-30','AA','673'),('1987-10-30','AA','680'),('1987-10-30','AA','817'),('1987-10-30','AA','817'),('1987-10-30','AA','824'),('1987-10-30','AA','824'),('1987-10-30','AA','824'),('1987-10-30','AA','824'),('1987-10-30','AA','832'),('1987-10-30','AA','832'),('1987-10-30','AA','852'),('1987-10-30','AA','866'),('1987-10-30','AA','866'),('1987-10-30','AA','871'),('1987-10-30','AA','871'),('1987-10-30','AA','880'),('1987-10-30','AA','880'),('1987-10-30','AA','880'),('1987-10-30','AA','880'),('1987-10-30','AA','883'),('1987-10-30','AA','883'),('1987-10-30','AA','885'),('1987-10-30','AA','885'),('1987-10-30','AA','885'),('1987-10-30','AA','890'),('1987-10-30','AA','890'),('1987-10-30','AA','893'),('1987-10-30','AA','893'),('1987-10-30','AA','905'),('1987-10-30','AA','905'),('1987-10-30','AA','915'),('1987-10-30','AA','929'),('1987-10-30','AA','929'),('1987-10-30','AA','936'),('1987-10-30','AA','936'),('1987-10-30','AA','937'),('1987-10-30','AA','937'),('1987-10-30','AA','955'),('1987-10-30','AA','955'),('1987-10-30','AA','966'),('1987-10-30','AA','1002'),('1987-10-30','AA','1002'),('1987-10-30','AA','1004'),('1987-10-30','AA','1004'),('1987-10-30','AA','1015'),('1987-10-30','AA','1015'),('1987-10-30','AA','1021'),('1987-10-30','AA','1021'),('1987-10-30','AA','1041'),('1987-10-30','AA','1041'),('1987-10-30','AA','1046'),('1987-10-30','AA','1046'),('1987-10-30','AA','1048'),('1987-10-30','AA','1048'),('1987-10-30','AA','1061'),('1987-10-30','AA','1061'),('1987-10-30','AA','1088'),('1987-10-30','AA','1088'),('1987-10-30','AA','2033'),('1987-10-30','AA','2033'),('1987-10-30','AA','2050'),('1987-10-30','AA','2058'),('1987-10-30','AA','2071'),('1987-10-30','AA','2071'),('1987-10-30','AA','2086'),('1987-10-30','AA','2105'),('1987-10-30','AA','2111'),('1987-10-30','AA','2123'),('1987-10-30','AA','2123'),('1987-10-30','AA','2147'),('1987-10-30','AA','2147'),('1987-10-30','AA','2199'),('1987-10-30','AA','2199'),('1987-10-30','AA','2207'),('1987-10-30','AA','2207'),('1987-10-30','AA','2217'),('1987-10-30','AA','2230'),('1987-10-30','AA','2245'),('1987-10-30','AA','2251'),('1987-10-30','AA','2275'),('1987-10-30','AA','2278'),('1987-10-30','AA','2351'),('1987-10-30','AA','2357'),('1987-10-30','AA','2361'),('1987-10-30','AA','2490'),('1987-10-30','AA','2528'),('1987-10-30','AA','2528'),('1987-10-30','AA','2735'),('1987-10-30','AA','2735'),('1987-10-30','AA','2751'),('1987-10-30','AL','2'),('1987-10-30','AL','2'),('1987-10-30','AL','7'),('1987-10-30','AL','7'),('1987-10-30','AL','26'),('1987-10-30','AL','26'),('1987-10-30','AL','34'),('1987-10-30','AL','34'),('1987-10-30','AL','36'),('1987-10-30','AL','36'),('1987-10-30','AL','45'),('1987-10-30','AL','45'),('1987-10-30','AL','45'),('1987-10-30','AL','91'),('1987-10-30','AL','91'),('1987-10-30','AL','104'),('1987-10-30','AL','104'),('1987-10-30','AL','104'),('1987-10-30','AL','109'),('1987-10-30','AL','112'),('1987-10-30','AL','112'),('1987-10-30','AL','123'),('1987-10-30','AL','149'),('1987-10-30','AL','160'),('1987-10-30','AL','160'),('1987-10-30','AL','165'),('1987-10-30','AL','171'),('1987-10-30','AL','171'),('1987-10-30','AL','176'),('1987-10-30','AL','176'),('1987-10-30','AL','179'),('1987-10-30','AL','215'),('1987-10-30','AL','231'),('1987-10-30','AL','263'),('1987-10-30','AL','263'),('1987-10-30','AL','268'),('1987-10-30','AL','268'),('1987-10-30','AL','268'),('1987-10-30','AL','281'),('1987-10-30','AL','281'),('1987-10-30','AL','287'),('1987-10-30','AL','287'),('1987-10-30','AL','309'),('1987-10-30','AL','309'),('1987-10-30','AL','341'),('1987-10-30','AL','344'),('1987-10-30','AL','344'),('1987-10-30','AL','357'),('1987-10-30','AL','357'),('1987-10-30','AL','368'),('1987-10-30','AL','381'),('1987-10-30','AL','396'),('1987-10-30','AL','397'),('1987-10-30','AL','397'),('1987-10-30','AL','416'),('1987-10-30','AL','416'),('1987-10-30','AL','417'),('1987-10-30','AL','438'),('1987-10-30','AL','438'),('1987-10-30','AL','446'),('1987-10-30','AL','451'),('1987-10-30','AL','451'),('1987-10-30','AL','491'),('1987-10-30','AL','491'),('1987-10-30','AL','523'),('1987-10-30','AL','523'),('1987-10-30','AL','523'),('1987-10-30','AL','525'),('1987-10-30','AL','525'),('1987-10-30','AL','533'),('1987-10-30','AL','533'),('1987-10-30','AL','546'),('1987-10-30','AL','546'),('1987-10-30','AL','556'),('1987-10-30','AL','556'),('1987-10-30','AL','601'),('1987-10-30','AL','601'),('1987-10-30','AL','627'),('1987-10-30','AL','629'),('1987-10-30','AL','670'),('1987-10-30','AL','670'),('1987-10-30','AL','670'),('1987-10-30','AL','673'),('1987-10-30','AL','680'),('1987-10-31','AA','2'),('1987-10-31','AA','2'),('1987-10-31','AA','2'),('1987-10-31','AA','7'),('1987-10-31','AA','7'),('1987-10-31','AA','26'),('1987-10-31','AA','34'),('1987-10-31','AA','36'),('1987-10-31','AA','91'),('1987-10-31','AA','101'),('1987-10-31','AA','101'),('1987-10-31','AA','109'),('1987-10-31','AA','109'),('1987-10-31','AA','112'),('1987-10-31','AA','123'),('1987-10-31','AA','123'),('1987-10-31','AA','160'),('1987-10-31','AA','165'),('1987-10-31','AA','165'),('1987-10-31','AA','165'),('1987-10-31','AA','176'),('1987-10-31','AA','176'),('1987-10-31','AA','176'),('1987-10-31','AA','176'),('1987-10-31','AA','179'),('1987-10-31','AA','179'),('1987-10-31','AA','215'),('1987-10-31','AA','215'),('1987-10-31','AA','231'),('1987-10-31','AA','263'),('1987-10-31','AA','268'),('1987-10-31','AA','268'),('1987-10-31','AA','281'),('1987-10-31','AA','287'),('1987-10-31','AA','287'),('1987-10-31','AA','309'),('1987-10-31','AA','309'),('1987-10-31','AA','309'),('1987-10-31','AA','341'),('1987-10-31','AA','344'),('1987-10-31','AA','344'),('1987-10-31','AA','347'),('1987-10-31','AA','347'),('1987-10-31','AA','368'),('1987-10-31','AA','381'),('1987-10-31','AA','381'),('1987-10-31','AA','381'),('1987-10-31','AA','396'),('1987-10-31','AA','396'),('1987-10-31','AA','397'),('1987-10-31','AA','417'),('1987-10-31','AA','417'),('1987-10-31','AA','446'),('1987-10-31','AA','451'),('1987-10-31','AA','451'),('1987-10-31','AA','491'),('1987-10-31','AA','491'),('1987-10-31','AA','504'),('1987-10-31','AA','504'),('1987-10-31','AA','519'),('1987-10-31','AA','519'),('1987-10-31','AA','523'),('1987-10-31','AA','523'),('1987-10-31','AA','525'),('1987-10-31','AA','525'),('1987-10-31','AA','533'),('1987-10-31','AA','533'),('1987-10-31','AA','546'),('1987-10-31','AA','546'),('1987-10-31','AA','546'),('1987-10-31','AA','546'),('1987-10-31','AA','556'),('1987-10-31','AA','556'),('1987-10-31','AA','556'),('1987-10-31','AA','597'),('1987-10-31','AA','597'),('1987-10-31','AA','597'),('1987-10-31','AA','601'),('1987-10-31','AA','601'),('1987-10-31','AA','627'),('1987-10-31','AA','629'),('1987-10-31','AA','670'),('1987-10-31','AA','673'),('1987-10-31','AA','673'),('1987-10-31','AA','680'),('1987-10-31','AA','680'),('1987-10-31','AA','817'),('1987-10-31','AA','817'),('1987-10-31','AA','824'),('1987-10-31','AA','824'),('1987-10-31','AA','824'),('1987-10-31','AA','832'),('1987-10-31','AA','832'),('1987-10-31','AA','852'),('1987-10-31','AA','852'),('1987-10-31','AA','866'),('1987-10-31','AA','871'),('1987-10-31','AA','871'),('1987-10-31','AA','880'),('1987-10-31','AA','880'),('1987-10-31','AA','880'),('1987-10-31','AA','883'),('1987-10-31','AA','885'),('1987-10-31','AA','885'),('1987-10-31','AA','885'),('1987-10-31','AA','890'),('1987-10-31','AA','890'),('1987-10-31','AA','893'),('1987-10-31','AA','893'),('1987-10-31','AA','905'),('1987-10-31','AA','905'),('1987-10-31','AA','915'),('1987-10-31','AA','929'),('1987-10-31','AA','929'),('1987-10-31','AA','936'),('1987-10-31','AA','936'),('1987-10-31','AA','937'),('1987-10-31','AA','937'),('1987-10-31','AA','955'),('1987-10-31','AA','955'),('1987-10-31','AA','1002'),('1987-10-31','AA','1002'),('1987-10-31','AA','1004'),('1987-10-31','AA','1004'),('1987-10-31','AA','1015'),('1987-10-31','AA','1015'),('1987-10-31','AA','1021'),('1987-10-31','AA','1021'),('1987-10-31','AA','1041'),('1987-10-31','AA','1041'),('1987-10-31','AA','1046'),('1987-10-31','AA','1046'),('1987-10-31','AA','1048'),('1987-10-31','AA','1048'),('1987-10-31','AA','1061'),('1987-10-31','AA','1061'),('1987-10-31','AA','1088'),('1987-10-31','AA','1088'),('1987-10-31','AA','2033'),('1987-10-31','AA','2058'),('1987-10-31','AA','2086'),('1987-10-31','AA','2105'),('1987-10-31','AA','2123'),('1987-10-31','AA','2123'),('1987-10-31','AA','2147'),('1987-10-31','AA','2147'),('1987-10-31','AA','2199'),('1987-10-31','AA','2199'),('1987-10-31','AA','2207'),('1987-10-31','AA','2207'),('1987-10-31','AA','2217'),('1987-10-31','AA','2230'),('1987-10-31','AA','2251'),('1987-10-31','AA','2251'),('1987-10-31','AA','2275'),('1987-10-31','AA','2278'),('1987-10-31','AA','2351'),('1987-10-31','AA','2357'),('1987-10-31','AA','2361'),('1987-10-31','AA','2528'),('1987-10-31','AA','2528'),('1987-10-31','AA','2735'),('1987-10-31','AA','2735'),('1987-10-31','AL','2'),('1987-10-31','AL','2'),('1987-10-31','AL','7'),('1987-10-31','AL','7'),('1987-10-31','AL','26'),('1987-10-31','AL','26'),('1987-10-31','AL','34'),('1987-10-31','AL','34'),('1987-10-31','AL','36'),('1987-10-31','AL','36'),('1987-10-31','AL','91'),('1987-10-31','AL','91'),('1987-10-31','AL','104'),('1987-10-31','AL','104'),('1987-10-31','AL','109'),('1987-10-31','AL','112'),('1987-10-31','AL','112'),('1987-10-31','AL','149'),('1987-10-31','AL','160'),('1987-10-31','AL','160'),('1987-10-31','AL','165'),('1987-10-31','AL','171'),('1987-10-31','AL','171'),('1987-10-31','AL','176'),('1987-10-31','AL','176'),('1987-10-31','AL','179'),('1987-10-31','AL','215'),('1987-10-31','AL','231'),('1987-10-31','AL','263'),('1987-10-31','AL','268'),('1987-10-31','AL','268'),('1987-10-31','AL','268'),('1987-10-31','AL','287'),('1987-10-31','AL','287'),('1987-10-31','AL','309'),('1987-10-31','AL','309'),('1987-10-31','AL','344'),('1987-10-31','AL','344'),('1987-10-31','AL','357'),('1987-10-31','AL','357'),('1987-10-31','AL','381'),('1987-10-31','AL','396'),('1987-10-31','AL','397'),('1987-10-31','AL','397'),('1987-10-31','AL','397'),('1987-10-31','AL','416'),('1987-10-31','AL','417'),('1987-10-31','AL','438'),('1987-10-31','AL','438'),('1987-10-31','AL','451'),('1987-10-31','AL','451'),('1987-10-31','AL','491'),('1987-10-31','AL','491'),('1987-10-31','AL','523'),('1987-10-31','AL','523'),('1987-10-31','AL','525'),('1987-10-31','AL','525'),('1987-10-31','AL','533'),('1987-10-31','AL','546'),('1987-10-31','AL','546'),('1987-10-31','AL','556'),('1987-10-31','AL','556'),('1987-10-31','AL','601'),('1987-10-31','AL','601'),('1987-10-31','AL','627'),('1987-10-31','AL','670'),('1987-10-31','AL','673'),('1987-10-31','AL','680'),('1987-10-31','AL','745'),('1987-10-31','AL','797'),('1987-10-31','AL','905'),('1987-10-31','AL','936'),('1987-10-31','AL','966'),('1987-10-31','AL','982');\n \n-SELECT finalizeAggregation(Users) FROM (SELECT FlightDate, Carrier, uniqState(FlightNum) AS Users FROM test.ontime GROUP BY FlightDate, Carrier LIMIT 1);\n+SELECT ignore(finalizeAggregation(Users)) FROM (SELECT FlightDate, Carrier, uniqState(FlightNum) AS Users FROM test.ontime GROUP BY FlightDate, Carrier LIMIT 1);\n \n DROP TABLE test.ontime;\ndiff --git a/dbms/tests/queries/0_stateless/00502_custom_partitioning_local.reference b/dbms/tests/queries/0_stateless/00502_custom_partitioning_local.reference\nindex 9efd2d8a9655..f3811ddcf1db 100644\n--- a/dbms/tests/queries/0_stateless/00502_custom_partitioning_local.reference\n+++ b/dbms/tests/queries/0_stateless/00502_custom_partitioning_local.reference\n@@ -7,6 +7,7 @@ tuple()\tall_1_2_1\n Sum before DETACH PARTITION:\n 15\n Sum after DETACH PARTITION:\n+0\n *** Partitioned by week ***\n Parts before OPTIMIZE:\n \\'1999-12-27\\'\t19991227_1_1_0\ndiff --git a/dbms/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper.reference b/dbms/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper.reference\nindex ce412811db2e..313e84db2d77 100644\n--- a/dbms/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper.reference\n+++ b/dbms/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper.reference\n@@ -7,6 +7,7 @@ tuple()\tall_0_1_1\n Sum before DETACH PARTITION:\n 15\n Sum after DETACH PARTITION:\n+0\n *** Partitioned by week ***\n Parts before OPTIMIZE:\n \\'1999-12-27\\'\t19991227_0_0_0\ndiff --git a/dbms/tests/queries/0_stateless/00571_alter_nullable.reference b/dbms/tests/queries/0_stateless/00571_alter_nullable.reference\nnew file mode 100644\nindex 000000000000..53e76b43a0ff\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/00571_alter_nullable.reference\n@@ -0,0 +1,8 @@\n+hello\n+world\n+hello\t\\N\n+world\t\\N\n+hello\t\\N\n+world\t\\N\n+hello\t0\n+world\t0\ndiff --git a/dbms/tests/queries/0_stateless/00571_alter_nullable.sql b/dbms/tests/queries/0_stateless/00571_alter_nullable.sql\nnew file mode 100644\nindex 000000000000..66ad47b10afe\n--- /dev/null\n+++ b/dbms/tests/queries/0_stateless/00571_alter_nullable.sql\n@@ -0,0 +1,13 @@\n+DROP TABLE IF EXISTS test.nullable;\n+CREATE TABLE test.nullable (x String) ENGINE = MergeTree ORDER BY x;\n+INSERT INTO test.nullable VALUES ('hello'), ('world');\n+SELECT * FROM test.nullable;\n+ALTER TABLE test.nullable ADD COLUMN n Nullable(UInt64);\n+SELECT * FROM test.nullable;\n+ALTER TABLE test.nullable DROP COLUMN n;\n+ALTER TABLE test.nullable ADD COLUMN n Nullable(UInt64) DEFAULT NULL;\n+SELECT * FROM test.nullable;\n+ALTER TABLE test.nullable DROP COLUMN n;\n+ALTER TABLE test.nullable ADD COLUMN n Nullable(UInt64) DEFAULT 0;\n+SELECT * FROM test.nullable;\n+DROP TABLE test.nullable;\n",
  "problem_statement": "Option for returning result instead of empty\nNeed to add option(setting) to return result from one of the rows containing the initial values of aggregate functions instead of returning no result (as we discussed it here: https://groups.google.com/forum/#!topic/clickhouse/2JS_yzvYAHM)\nThis described in documentation: \n\"However, in contrast to standard SQL, if the table doesn't have any rows (either there aren't any at all, or there aren't any after using WHERE to filter), an empty result is returned, and not the result from one of the rows containing the initial values of aggregate functions.\"\n\nIt will be very useful.\nThanks!\n\n",
  "hints_text": "For now working with aggregate functions in sub-queries is uncomfortable(I would even say impossible). \nBecause for \"count\" we can do union with one, OK. But for example for \"avg\" union will be much more complicate and we can't  easy do sub-queries with aggregate functions. \n@alexey-milovidov Can you, please, tell when the option for this can be added?\n\nI hope, it is about few weeks.\n\nHello @rasmus93,\r\nThe following workaround will also work for AVG, SUM and other aggregate functions.\r\n\r\n```\r\nSELECT *\r\nFROM \r\n(\r\n    SELECT count(*) AS count\r\n    FROM mytable\r\n    UNION ALL \r\n    SELECT toUInt64 (0)\r\n) \r\nLIMIT 1\r\n```\nMay I know if this option is implemented?",
  "created_at": "2018-02-18T04:55:05Z",
  "modified_files": [
    "contrib/zookeeper",
    "dbms/src/AggregateFunctions/AggregateFunctionSequenceMatch.h",
    "dbms/src/Common/UInt128.h",
    "dbms/src/Core/Defines.h",
    "dbms/src/Core/Field.h",
    "dbms/src/Core/iostream_debug_helpers.cpp",
    "dbms/src/DataStreams/AddingConstColumnBlockInputStream.h",
    "dbms/src/DataStreams/AggregatingBlockInputStream.cpp",
    "dbms/src/DataStreams/AggregatingBlockInputStream.h",
    "dbms/src/DataStreams/AggregatingSortedBlockInputStream.h",
    "dbms/src/DataStreams/AsynchronousBlockInputStream.h",
    "dbms/src/DataStreams/BlockExtraInfoInputStream.h",
    "dbms/src/DataStreams/BlockIO.h",
    "dbms/src/DataStreams/BlockInputStreamFromRowInputStream.h",
    "dbms/src/DataStreams/BlocksListBlockInputStream.h",
    "dbms/src/DataStreams/CastTypeBlockInputStream.cpp",
    "dbms/src/DataStreams/CastTypeBlockInputStream.h",
    "dbms/src/DataStreams/CollapsingFinalBlockInputStream.h",
    "dbms/src/DataStreams/CollapsingSortedBlockInputStream.h",
    "dbms/src/DataStreams/ColumnGathererStream.cpp",
    "dbms/src/DataStreams/ColumnGathererStream.h",
    "dbms/src/DataStreams/ConcatBlockInputStream.h",
    "dbms/src/DataStreams/CreatingSetsBlockInputStream.h",
    "dbms/src/DataStreams/DistinctBlockInputStream.cpp",
    "dbms/src/DataStreams/DistinctBlockInputStream.h",
    "dbms/src/DataStreams/DistinctSortedBlockInputStream.cpp",
    "dbms/src/DataStreams/DistinctSortedBlockInputStream.h",
    "dbms/src/DataStreams/ExpressionBlockInputStream.cpp",
    "dbms/src/DataStreams/ExpressionBlockInputStream.h",
    "dbms/src/DataStreams/FilterBlockInputStream.cpp",
    "dbms/src/DataStreams/FilterBlockInputStream.h",
    "dbms/src/DataStreams/FilterColumnsBlockInputStream.cpp",
    "dbms/src/DataStreams/FilterColumnsBlockInputStream.h",
    "dbms/src/DataStreams/FormatFactory.cpp",
    "dbms/src/DataStreams/GraphiteRollupSortedBlockInputStream.h",
    "dbms/src/DataStreams/IBlockInputStream.cpp",
    "dbms/src/DataStreams/IBlockInputStream.h",
    "dbms/src/DataStreams/InputStreamFromASTInsertQuery.h",
    "dbms/src/DataStreams/LazyBlockInputStream.h",
    "dbms/src/DataStreams/LimitBlockInputStream.h",
    "dbms/src/DataStreams/LimitByBlockInputStream.h",
    "dbms/src/DataStreams/MaterializingBlockInputStream.cpp",
    "dbms/src/DataStreams/MaterializingBlockInputStream.h",
    "dbms/src/DataStreams/MergeSortingBlockInputStream.h",
    "dbms/src/DataStreams/MergingAggregatedBlockInputStream.cpp",
    "dbms/src/DataStreams/MergingAggregatedBlockInputStream.h",
    "dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.cpp",
    "dbms/src/DataStreams/MergingAggregatedMemoryEfficientBlockInputStream.h",
    "dbms/src/DataStreams/MergingSortedBlockInputStream.cpp",
    "dbms/src/DataStreams/MergingSortedBlockInputStream.h",
    "dbms/src/DataStreams/NativeBlockInputStream.cpp",
    "dbms/src/DataStreams/NativeBlockInputStream.h",
    "dbms/src/DataStreams/NullAndDoCopyBlockInputStream.h",
    "dbms/src/DataStreams/NullBlockInputStream.h",
    "dbms/src/DataStreams/NullableAdapterBlockInputStream.cpp",
    "dbms/src/DataStreams/NullableAdapterBlockInputStream.h",
    "dbms/src/DataStreams/OneBlockInputStream.h",
    "dbms/src/DataStreams/OwningBlockInputStream.h",
    "dbms/src/DataStreams/ParallelAggregatingBlockInputStream.cpp",
    "dbms/src/DataStreams/ParallelAggregatingBlockInputStream.h",
    "dbms/src/DataStreams/PartialSortingBlockInputStream.h",
    "dbms/src/DataStreams/RemoteBlockInputStream.cpp",
    "dbms/src/DataStreams/RemoteBlockInputStream.h",
    "dbms/src/DataStreams/RemoveColumnsBlockInputStream.h",
    "dbms/src/DataStreams/ReplacingSortedBlockInputStream.h",
    "dbms/src/DataStreams/SquashingBlockInputStream.h",
    "dbms/src/DataStreams/SummingSortedBlockInputStream.cpp",
    "dbms/src/DataStreams/SummingSortedBlockInputStream.h",
    "dbms/src/DataStreams/TotalsHavingBlockInputStream.cpp",
    "dbms/src/DataStreams/TotalsHavingBlockInputStream.h",
    "dbms/src/DataStreams/UnionBlockInputStream.h",
    "dbms/src/DataStreams/VersionedCollapsingSortedBlockInputStream.h",
    "dbms/src/DataTypes/DataTypeEnum.h",
    "dbms/src/Dictionaries/ClickHouseDictionarySource.cpp",
    "dbms/src/Dictionaries/DictionaryBlockInputStreamBase.cpp",
    "dbms/src/Dictionaries/DictionaryBlockInputStreamBase.h",
    "dbms/src/Dictionaries/ExecutableDictionarySource.cpp",
    "dbms/src/Dictionaries/MongoDBBlockInputStream.cpp",
    "dbms/src/Dictionaries/MongoDBBlockInputStream.h",
    "dbms/src/Dictionaries/MySQLBlockInputStream.cpp",
    "dbms/src/Dictionaries/MySQLBlockInputStream.h",
    "dbms/src/Dictionaries/ODBCBlockInputStream.cpp",
    "dbms/src/Dictionaries/ODBCBlockInputStream.h",
    "dbms/src/Functions/FunctionsArray.cpp",
    "dbms/src/Functions/FunctionsConversion.h",
    "dbms/src/Functions/FunctionsHigherOrder.cpp",
    "dbms/src/Functions/FunctionsMiscellaneous.cpp",
    "dbms/src/Functions/FunctionsTransform.h",
    "dbms/src/Interpreters/Aggregator.cpp",
    "dbms/src/Interpreters/Aggregator.h",
    "dbms/src/Interpreters/ClusterProxy/DescribeStreamFactory.cpp",
    "dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.cpp",
    "dbms/src/Interpreters/ClusterProxy/SelectStreamFactory.h",
    "dbms/src/Interpreters/DDLWorker.cpp",
    "dbms/src/Interpreters/ExpressionActions.cpp",
    "dbms/src/Interpreters/ExpressionActions.h",
    "dbms/src/Interpreters/ExpressionAnalyzer.cpp",
    "dbms/src/Interpreters/ExpressionAnalyzer.h",
    "dbms/src/Interpreters/InterpreterCheckQuery.cpp",
    "dbms/src/Interpreters/InterpreterCreateQuery.cpp",
    "dbms/src/Interpreters/InterpreterDescribeQuery.cpp",
    "dbms/src/Interpreters/InterpreterDescribeQuery.h",
    "dbms/src/Interpreters/InterpreterExistsQuery.cpp",
    "dbms/src/Interpreters/InterpreterExistsQuery.h",
    "dbms/src/Interpreters/InterpreterInsertQuery.cpp",
    "dbms/src/Interpreters/InterpreterKillQueryQuery.cpp",
    "dbms/src/Interpreters/InterpreterSelectQuery.cpp",
    "dbms/src/Interpreters/InterpreterSelectQuery.h",
    "dbms/src/Interpreters/InterpreterShowCreateQuery.cpp",
    "dbms/src/Interpreters/InterpreterShowCreateQuery.h",
    "dbms/src/Interpreters/Join.cpp",
    "dbms/src/Interpreters/castColumn.cpp",
    "dbms/src/Interpreters/executeQuery.cpp",
    "dbms/src/Server/Benchmark.cpp",
    "dbms/src/Server/ClusterCopier.cpp",
    "dbms/src/Server/PerformanceTest.cpp",
    "dbms/src/Server/TCPHandler.cpp",
    "dbms/src/Server/TCPHandler.h",
    "dbms/src/Storages/ITableDeclaration.cpp",
    "dbms/src/Storages/ITableDeclaration.h",
    "dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp",
    "dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.h",
    "dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp",
    "dbms/src/Storages/MergeTree/MergeTreeReadPool.cpp",
    "dbms/src/Storages/MergeTree/MergeTreeReadPool.h",
    "dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.cpp",
    "dbms/src/Storages/MergeTree/MergeTreeThreadBlockInputStream.h",
    "dbms/src/Storages/MergeTree/ReplicatedMergeTreeBlockOutputStream.cpp",
    "dbms/src/Storages/StorageBuffer.cpp",
    "dbms/src/Storages/StorageCatBoostPool.cpp",
    "dbms/src/Storages/StorageDistributed.cpp",
    "dbms/src/Storages/StorageFile.cpp",
    "dbms/src/Storages/StorageKafka.cpp",
    "dbms/src/Storages/StorageLog.cpp",
    "dbms/src/Storages/StorageMemory.cpp",
    "dbms/src/Storages/StorageMerge.cpp",
    "dbms/src/Storages/StorageNull.h",
    "dbms/src/Storages/StorageReplicatedMergeTree.cpp",
    "dbms/src/Storages/StorageSet.cpp",
    "dbms/src/Storages/StorageStripeLog.cpp",
    "dbms/src/Storages/StorageTinyLog.cpp",
    "dbms/src/Storages/System/StorageSystemNumbers.cpp",
    "dbms/src/TableFunctions/getStructureOfRemoteTable.cpp",
    "libs/libcommon/include/common/iostream_debug_helpers.h"
  ],
  "modified_test_files": [
    "dbms/src/Interpreters/tests/aggregate.cpp",
    "dbms/tests/queries/0_stateless/00276_sample.reference",
    "dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.reference",
    "dbms/tests/queries/0_stateless/00334_column_aggregate_function_limit.sql",
    "dbms/tests/queries/0_stateless/00502_custom_partitioning_local.reference",
    "dbms/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper.reference",
    "b/dbms/tests/queries/0_stateless/00571_alter_nullable.reference",
    "b/dbms/tests/queries/0_stateless/00571_alter_nullable.sql"
  ]
}