You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
`ALTER` query can make table definition invalid
**Describe what's wrong**

When a column is added to a table, the materialized expression (and maybe other expressions) might make the table definition invalid. E.g.: defining an alias with an already existing name. No error is thrown on alter, but only on the first insert after the alter.

[Repro](https://fiddle.clickhouse.com/5746afd4-ffbc-4da9-b4b8-4924b2324357):
```
CREATE TABLE test
(
    str String,
    mat_1 String MATERIALIZED concat(str, 'a' AS a),
)
ENGINE = MergeTree()
ORDER BY tuple();

INSERT INTO test (str) VALUES ('asd1');

ALTER TABLE test ADD COLUMN mat_2 String MATERIALIZED concat(str, 'b' AS a);

INSERT INTO test (str) VALUES ('asd2');
```

Result:
```
Received exception from server (version 24.6.2):
Code: 179. DB::Exception: Received from localhost:9000. DB::Exception: Different expressions with the same alias a:
'b' AS a
and
'a' AS a
: While processing 'b' AS a. (MULTIPLE_EXPRESSIONS_FOR_ALIAS)
(query: INSERT INTO test (str) VALUES ('asd2');)

```

**Does it reproduce on the most recent release?**

Yes.

**How to reproduce**

See above.

**Expected behavior**

The `ALTER` query should fail if it makes the table definition invalid.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
