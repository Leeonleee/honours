diff --git a/tests/queries/0_stateless/02240_get_type_serialization_streams.reference b/tests/queries/0_stateless/02240_get_type_serialization_streams.reference
index 3537720214f2..15e9bf875625 100644
--- a/tests/queries/0_stateless/02240_get_type_serialization_streams.reference
+++ b/tests/queries/0_stateless/02240_get_type_serialization_streams.reference
@@ -1,8 +1,8 @@
 ['{ArraySizes}','{ArrayElements, Regular}']
-['{ArraySizes}','{ArrayElements, TupleElement(keys, escape_tuple_delimiter = true), Regular}','{ArrayElements, TupleElement(values, escape_tuple_delimiter = true), Regular}']
-['{TupleElement(1, escape_tuple_delimiter = true), Regular}','{TupleElement(2, escape_tuple_delimiter = true), Regular}','{TupleElement(3, escape_tuple_delimiter = true), Regular}']
+['{ArraySizes}','{ArrayElements, TupleElement(keys), Regular}','{ArrayElements, TupleElement(values), Regular}']
+['{TupleElement(1), Regular}','{TupleElement(2), Regular}','{TupleElement(3), Regular}']
 ['{DictionaryKeys, Regular}','{DictionaryIndexes}']
 ['{NullMap}','{NullableElements, Regular}']
 ['{ArraySizes}','{ArrayElements, Regular}']
-['{ArraySizes}','{ArrayElements, TupleElement(keys, escape_tuple_delimiter = true), Regular}','{ArrayElements, TupleElement(values, escape_tuple_delimiter = true), Regular}']
-['{TupleElement(1, escape_tuple_delimiter = true), Regular}','{TupleElement(2, escape_tuple_delimiter = true), Regular}','{TupleElement(3, escape_tuple_delimiter = true), Regular}','{TupleElement(4, escape_tuple_delimiter = true), Regular}']
+['{ArraySizes}','{ArrayElements, TupleElement(keys), Regular}','{ArrayElements, TupleElement(values), Regular}']
+['{TupleElement(1), Regular}','{TupleElement(2), Regular}','{TupleElement(3), Regular}','{TupleElement(4), Regular}']
diff --git a/tests/queries/0_stateless/02966_nested_offsets_subcolumn.reference.j2 b/tests/queries/0_stateless/02966_nested_offsets_subcolumn.reference.j2
new file mode 100644
index 000000000000..055b0466ee21
--- /dev/null
+++ b/tests/queries/0_stateless/02966_nested_offsets_subcolumn.reference.j2
@@ -0,0 +1,11 @@
+{% for engine in ['Memory', 'Log', 'TinyLog', 'MergeTree ORDER BY (a) SETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 2000'] -%}
+--- {{ engine }} ---
+4500
+4500	4500
+4500
+4500	4500
+94500
+94500	94500
+94500
+94500	94500
+{% endfor -%}
diff --git a/tests/queries/0_stateless/02966_nested_offsets_subcolumn.sql.j2 b/tests/queries/0_stateless/02966_nested_offsets_subcolumn.sql.j2
new file mode 100644
index 000000000000..f9be206e3e70
--- /dev/null
+++ b/tests/queries/0_stateless/02966_nested_offsets_subcolumn.sql.j2
@@ -0,0 +1,36 @@
+
+{% for engine in ['Memory', 'Log', 'TinyLog', 'MergeTree ORDER BY (a) SETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 2000'] -%}
+
+SELECT '--- {{ engine }} ---';
+
+DROP TABLE IF EXISTS t_nested_offsets;
+
+CREATE TABLE t_nested_offsets
+(
+    `a` String,
+    `e.n` Array(String),
+    `e.t` Array(Int64)
+)
+ENGINE = Log;
+
+SYSTEM STOP MERGES t_nested_offsets;
+
+INSERT INTO t_nested_offsets SELECT number, range(number % 10), range(number % 10) FROM numbers(1000);
+
+SELECT sum(e.n.size0) FROM t_nested_offsets;
+SELECT sum(e.n.size0), sum(e.t.size0) FROM t_nested_offsets;
+
+SELECT sum(length(e.n)) FROM t_nested_offsets SETTINGS optimize_functions_to_subcolumns = 1;
+SELECT sum(length(e.n)), sum(length(e.t)) FROM t_nested_offsets SETTINGS optimize_functions_to_subcolumns = 1;
+
+INSERT INTO t_nested_offsets SELECT number, range(number % 10), range(number % 10) FROM numbers(20000);
+
+SELECT sum(e.n.size0) FROM t_nested_offsets;
+SELECT sum(e.n.size0), sum(e.t.size0) FROM t_nested_offsets;
+
+SELECT sum(length(e.n)) FROM t_nested_offsets SETTINGS optimize_functions_to_subcolumns = 1;
+SELECT sum(length(e.n)), sum(length(e.t)) FROM t_nested_offsets SETTINGS optimize_functions_to_subcolumns = 1;
+
+DROP TABLE t_nested_offsets;
+
+{% endfor -%}
