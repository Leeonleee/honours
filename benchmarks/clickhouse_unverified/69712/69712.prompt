You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Implement full Avro Union support for Avro Format SerDe
**Describe the unexpected behaviour**

Currently, Avro Union is supported only for these two special cases:
1. The Avro Union contains only a single type. Maps directly to `T`.
2. The Avro Union has exactly two types, while one of them is null. Maps to `Nullable(T)`.

I would expect the following Avro Schema to be supported:

```json
{
  "type": "record",
  "name": "TestRecord",
  "fields": [
    {"name": "name", "type": "string"},
    {"name": "variant_with_double", "type": ["double", "string"]},
    {"name": "variant_array", "type": {
      "type": "array",
      "items": ["double", "string"]
    }},
    {"name": "variant_map", "type": {
      "type": "map",
      "values": ["double", "string"]
    }}
  ]
}
```

ClickHouse already supports `Variant` type proposed by #54864 and implemented in https://github.com/ClickHouse/ClickHouse/pull/58047. Though still experimental, I suggest we use it as the ClickHouse solution to store Avro Union type.

So I'd like to produce generic `Variant(T1, T2, …)` from generic `avro::UnionType(T1, T2, ….)`.

**How to reproduce**

Try to read Avro file containing the schema mentioned above. The URL in the queries below is pointing to my branch in my fork, specifically to the file I am using for functionality tests in the Pull Request https://github.com/ClickHouse/ClickHouse/pull/69712 which should resolve this issue.

```sql
SET max_http_get_redirects = 2;

DESCRIBE TABLE url('https://github.com/jirislav/ClickHouse/raw/refs/heads/add_support_for_avro_union_input_format/tests/queries/0_stateless/data_avro/union_in_complex_types.avro');

SELECT * FROM
url('https://github.com/jirislav/ClickHouse/raw/refs/heads/add_support_for_avro_union_input_format/tests/queries/0_stateless/data_avro/union_in_complex_types.avro');
```

<details><summary>How I generated the avro file.</summary>

```sh
pip3 install avro-python3
```

```py
#!/usr/bin/env python3

import avro.schema
import avro.datafile
import avro.io
import io

# Define the schema
schema = avro.schema.parse('''
{
  "type": "record",
  "name": "TestRecord",
  "fields": [
    {"name": "name", "type": "string"},
    {"name": "variant_with_double", "type": ["double", "string"]},
    {"name": "variant_array", "type": {
      "type": "array",
      "items": ["double", "string"]
    }},
    {"name": "variant_map", "type": {
      "type": "map",
      "values": ["double", "string"]
    }}
  ]
}
''')

# Create sample data
records = [
    {
        "name": "record1",
        "variant_with_double": 42.0,
        "variant_array": [42.0, "test1"],
        "variant_map": {"key1": 42.0, "key2": "value1"}
    },
    {
        "name": "record2",
        "variant_with_double": "variant_string",
        "variant_array": ["test2", 23.5],
        "variant_map": {"key3": "value2", "key4": 15.7}
    },
    {
        "name": "record3",
        "variant_with_double": 15.5,
        "variant_array": [11.0, "test3"],
        "variant_map": {"key5": 100.0, "key6": "value3"}
    }
]

# Write the data to an Avro file
with open('union_in_complex_types.avro', 'wb') as avro_file:
    writer = avro.datafile.DataFileWriter(avro_file, avro.io.DatumWriter(), schema)
    for record in records:
        writer.append(record)
    writer.close()
```

</details>

```[tasklist]
### Tasks
- [ ] https://github.com/ClickHouse/ClickHouse/pull/69712
- [ ] https://github.com/ClickHouse/ClickHouse/pull/69712
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
