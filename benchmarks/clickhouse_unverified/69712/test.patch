diff --git a/tests/queries/0_stateless/03237_avro_union_in_complex_types.reference b/tests/queries/0_stateless/03237_avro_union_in_complex_types.reference
new file mode 100644
index 000000000000..758fd07a0da1
--- /dev/null
+++ b/tests/queries/0_stateless/03237_avro_union_in_complex_types.reference
@@ -0,0 +1,81 @@
+== DESCRIBE ==
+string_only	String					
+string_or_null	Nullable(String)					
+null_or_string	Nullable(String)					
+double_or_string	Variant(Float64, String)					
+string_or_double	Variant(Float64, String)					
+null_or_string_or_double	Variant(Float64, String)					
+string_or_double_or_null	Variant(Float64, String)					
+string_or_float_or_long	Variant(Float32, Int64, String)					
+long_or_string_or_float	Variant(Float32, Int64, String)					
+double_or_null_or_string_or_long	Variant(Float64, Int64, String)					
+double_or_long_or_string_in_array	Array(Variant(Float64, Int64, String))					
+double_or_string_or_long_or_null_in_map	Map(String, Variant(Float64, Int64, String))					
+
+== SELECT variantType ==
+String	0	1	Float64	String	String	Float64	String	Float32	Float64	['Float64','String','Int64']	['Float64','None']
+String	1	0	String	Float64	Float64	String	Float32	String	Int64	['Float64','Int64','String']	['String','Float64']
+String	0	1	Float64	String	None	None	Int64	Float32	String	['Float64','Int64','String']	['Float64','String']
+String	1	0	Float64	Float64	Float64	String	String	Float32	None	['Float64','String','Int64']	['String','Float64']
+String	0	0	Float64	String	None	Float64	Float32	String	Float64	['Float64','Int64','String']	['Int64','None']
+
+== SELECT * ==
+alpha	bravo	\N	3.1415926535	charlie	delta	2.7182818284	echo	42	-3.1415926535	[1.4142135623,'foxtrot',-100]	{'key1':3.1415926535,'key2':NULL}
+golf	\N	hotel	india	1.6180339887	3.1415926535	juliet	7.38906	kilo	1000	[-1.6180339887,0,'lima']	{'key3':'mike','key4':1e-9}
+november	oscar	\N	10000000000	papa	\N	\N	-5000000	1.7320508	quebec	[2.7182818284,1729,'romeo']	{'key5':-2.7182818284,'key6':'sierra'}
+tango	\N	uniform	-1.4142135623	-1.6180339887	0.00001	victor	whiskey	-987654340	\N	[-3.1415926535,'xray',31415926535]	{'key7':'yankee','key8':-987.654}
+zulu	alpha1	bravo1	2.718281828	charlie1	\N	-1.7320508075	1000000	delta1	-1.6180339887	[-2.7182818284,123456789,'echo1']	{'key9':9223372036854775807,'key10':NULL}
+
+== SELECT * WITH CustomSchema ==
+alpha	bravo	\N	3.1415926535	charlie	delta	2.7182818284	echo	42	-3.1415926535	[1.4142135623,'foxtrot',-100]	{'key1':3.1415926535,'key2':NULL}
+golf	\N	hotel	india	1.6180339887	3.1415926535	juliet	7.38906	kilo	1000	[-1.6180339887,0,'lima']	{'key3':'mike','key4':1e-9}
+november	oscar	\N	10000000000	papa	\N	\N	-5000000	1.7320508	quebec	[2.7182818284,1729,'romeo']	{'key5':-2.7182818284,'key6':'sierra'}
+tango	\N	uniform	-1.4142135623	-1.6180339887	0.00001	victor	whiskey	-987654340	\N	[-3.1415926535,'xray',31415926535]	{'key7':'yankee','key8':-987.654}
+zulu	alpha1	bravo1	2.718281828	charlie1	\N	-1.7320508075	1000000	delta1	-1.6180339887	[-2.7182818284,123456789,'echo1']	{'key9':9223372036854775807,'key10':NULL}
+
+== SELECT * WITH CustomSchema SwappedFirstLastVariant ==
+alpha	bravo	\N	3.1415926535	charlie	delta	2.7182818284	echo	42	-3.1415926535	[1.4142135623,'foxtrot',-100]	{'key1':3.1415926535,'key2':NULL}
+golf	\N	hotel	india	1.6180339887	3.1415926535	juliet	7.38906	kilo	1000	[-1.6180339887,0,'lima']	{'key3':'mike','key4':1e-9}
+november	oscar	\N	10000000000	papa	\N	\N	-5000000	1.7320508	quebec	[2.7182818284,1729,'romeo']	{'key5':-2.7182818284,'key6':'sierra'}
+tango	\N	uniform	-1.4142135623	-1.6180339887	0.00001	victor	whiskey	-987654340	\N	[-3.1415926535,'xray',31415926535]	{'key7':'yankee','key8':-987.654}
+zulu	alpha1	bravo1	2.718281828	charlie1	\N	-1.7320508075	1000000	delta1	-1.6180339887	[-2.7182818284,123456789,'echo1']	{'key9':9223372036854775807,'key10':NULL}
+
+== SELECT * WITH CustomSchema Float32 instead of Float64 ==
+2
+
+== SELECT * WITH CustomSchema more types than expected ==
+2
+
+== SELECT * WITH CustomSchema less types than expected ==
+2
+
+== CREATE TABLE avro_union_test_03237 ==
+
+== SELECT * FORMAT Avro | INSERT INTO avro_union_test_03237 FORMAT Avro ==
+
+== SELECT * FROM avro_union_test_03237 ==
+alpha	bravo	\N	3.1415926535	charlie	delta	2.7182818284	echo	42	-3.1415926535	[1.4142135623,'foxtrot',-100]	{'key1':3.1415926535,'key2':NULL}
+golf	\N	hotel	india	1.6180339887	3.1415926535	juliet	7.38906	kilo	1000	[-1.6180339887,0,'lima']	{'key3':'mike','key4':1e-9}
+november	oscar	\N	10000000000	papa	\N	\N	-5000000	1.7320508	quebec	[2.7182818284,1729,'romeo']	{'key5':-2.7182818284,'key6':'sierra'}
+tango	\N	uniform	-1.4142135623	-1.6180339887	0.00001	victor	whiskey	-987654340	\N	[-3.1415926535,'xray',31415926535]	{'key7':'yankee','key8':-987.654}
+zulu	alpha1	bravo1	2.718281828	charlie1	\N	-1.7320508075	1000000	delta1	-1.6180339887	[-2.7182818284,123456789,'echo1']	{'key9':9223372036854775807,'key10':NULL}
+
+== TRUNCATE TABLE avro_union_test_03237 ==
+
+== insert into table avro_union_test_03237 select * from file('union_in_complex_types.avro') ==
+
+== SELECT * FROM avro_union_test_03237 ==
+alpha	bravo	\N	3.1415926535	charlie	delta	2.7182818284	echo	42	-3.1415926535	[1.4142135623,'foxtrot',-100]	{'key1':3.1415926535,'key2':NULL}
+golf	\N	hotel	india	1.6180339887	3.1415926535	juliet	7.38906	kilo	1000	[-1.6180339887,0,'lima']	{'key3':'mike','key4':1e-9}
+november	oscar	\N	10000000000	papa	\N	\N	-5000000	1.7320508	quebec	[2.7182818284,1729,'romeo']	{'key5':-2.7182818284,'key6':'sierra'}
+tango	\N	uniform	-1.4142135623	-1.6180339887	0.00001	victor	whiskey	-987654340	\N	[-3.1415926535,'xray',31415926535]	{'key7':'yankee','key8':-987.654}
+zulu	alpha1	bravo1	2.718281828	charlie1	\N	-1.7320508075	1000000	delta1	-1.6180339887	[-2.7182818284,123456789,'echo1']	{'key9':9223372036854775807,'key10':NULL}
+
+== insert into table function file('union_in_complex_types_2.avro') select * from file('union_in_complex_types.avro') ==
+
+== SELECT * FROM file('union_in_complex_types_2.avro') ==
+alpha	bravo	\N	3.1415926535	charlie	delta	2.7182818284	echo	42	-3.1415926535	[1.4142135623,'foxtrot',-100]	{'key1':3.1415926535,'key2':NULL}
+golf	\N	hotel	india	1.6180339887	3.1415926535	juliet	7.38906	kilo	1000	[-1.6180339887,0,'lima']	{'key3':'mike','key4':1e-9}
+november	oscar	\N	10000000000	papa	\N	\N	-5000000	1.7320508	quebec	[2.7182818284,1729,'romeo']	{'key5':-2.7182818284,'key6':'sierra'}
+tango	\N	uniform	-1.4142135623	-1.6180339887	0.00001	victor	whiskey	-987654340	\N	[-3.1415926535,'xray',31415926535]	{'key7':'yankee','key8':-987.654}
+zulu	alpha1	bravo1	2.718281828	charlie1	\N	-1.7320508075	1000000	delta1	-1.6180339887	[-2.7182818284,123456789,'echo1']	{'key9':9223372036854775807,'key10':NULL}
diff --git a/tests/queries/0_stateless/03237_avro_union_in_complex_types.sh b/tests/queries/0_stateless/03237_avro_union_in_complex_types.sh
new file mode 100755
index 000000000000..ecbd19d8056b
--- /dev/null
+++ b/tests/queries/0_stateless/03237_avro_union_in_complex_types.sh
@@ -0,0 +1,166 @@
+#!/usr/bin/env bash
+# Tags: no-parallel, no-fasttest
+
+set -e
+
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CUR_DIR"/../shell_config.sh
+
+DATA_DIR=$CUR_DIR/data_avro
+
+CH_CLIENT="$CLICKHOUSE_CLIENT --allow_experimental_variant_type=1"
+
+cp $DATA_DIR/union_in_complex_types.avro $CLICKHOUSE_USER_FILES/union_in_complex_types.avro
+
+echo "== DESCRIBE =="
+$CH_CLIENT -q "desc file('union_in_complex_types.avro')"
+echo
+
+echo "== SELECT variantType =="
+$CH_CLIENT -q "
+  SELECT
+      toTypeName(string_only),
+      string_or_null IS NULL,
+      null_or_string IS NULL,
+      * EXCEPT (string_only, string_or_null, null_or_string, double_or_long_or_string_in_array, double_or_string_or_long_or_null_in_map) APPLY (x -> variantType(x)),
+      arrayMap(x -> variantType(x), double_or_long_or_string_in_array),
+      arrayMap(x -> variantType(x), mapValues(double_or_string_or_long_or_null_in_map))
+  FROM file('union_in_complex_types.avro')"
+echo
+
+echo "== SELECT * =="
+$CH_CLIENT -q "select * from file('union_in_complex_types.avro')"
+echo
+
+echo "== SELECT * WITH CustomSchema =="
+$CH_CLIENT -q "select * from file('union_in_complex_types.avro', 'Avro', '
+  string_only String,
+  string_or_null Nullable(String),
+  null_or_string Nullable(String),
+  double_or_string Variant(Float64, String),
+  string_or_double Variant(Float64, String),
+  null_or_string_or_double Variant(Float64, String),
+  string_or_double_or_null Variant(Float64, String),
+  string_or_float_or_long Variant(Float32, Int64, String),
+  long_or_string_or_float Variant(Float32, Int64, String),
+  double_or_null_or_string_or_long Variant(Float64, String, Int64),
+  double_or_long_or_string_in_array Array(Variant(Float64, String, Int64)),
+  double_or_string_or_long_or_null_in_map Map(String, Variant(Float64, Int64, String))
+');"
+echo
+
+echo "== SELECT * WITH CustomSchema SwappedFirstLastVariant =="
+$CH_CLIENT -q "select * from file('union_in_complex_types.avro', 'Avro', '
+  string_only String,
+  string_or_null Nullable(String),
+  null_or_string Nullable(String),
+  double_or_string Variant(String, Float64),
+  string_or_double Variant(String, Float64),
+  null_or_string_or_double Variant(String, Float64),
+  string_or_double_or_null Variant(String, Float64),
+  string_or_float_or_long Variant(String, Int64, Float32),
+  long_or_string_or_float Variant(String, Int64, Float32),
+  double_or_null_or_string_or_long Variant(Int64, String, Float64),
+  double_or_long_or_string_in_array Array(Variant(Int64, String, Float64)),
+  double_or_string_or_long_or_null_in_map Map(String, Variant(String, Int64, Float64))
+');"
+echo
+
+echo "== SELECT * WITH CustomSchema Float32 instead of Float64 =="
+$CH_CLIENT -q "select * from file('union_in_complex_types.avro', 'Avro', '
+  string_only String,
+  string_or_null Nullable(String),
+  null_or_string Nullable(String),
+  double_or_string Variant(Float32, String),
+  string_or_double Variant(Float32, String),
+  null_or_string_or_double Variant(Float32, String),
+  string_or_double_or_null Variant(Float32, String),
+  string_or_float_or_long Variant(Float32, Int64, String),
+  long_or_string_or_float Variant(Float32, Int64, String),
+  double_or_null_or_string_or_long Variant(Float32, String, Int64),
+  double_or_long_or_string_in_array Array(Variant(Float32, String, Int64)),
+  double_or_string_or_long_or_null_in_map Map(String, Variant(Float32, Int64, String))
+');" 2>&1 | grep -c 'DB::Exception: Destination Variant(Float32, String) and Avro Union containing Float64 are not compatible.'
+echo
+
+echo "== SELECT * WITH CustomSchema more types than expected =="
+$CH_CLIENT -q "select * from file('union_in_complex_types.avro', 'Avro', '
+  string_only String,
+  string_or_null Nullable(String),
+  null_or_string Nullable(String),
+  double_or_string Variant(Float64, String, Int64),
+  string_or_double Variant(Float64, String, Int64),
+  null_or_string_or_double Variant(Float64, String, Int64),
+  string_or_double_or_null Variant(Float64, String, Int64),
+  string_or_float_or_long Variant(Float32, Int64, String, Int64),
+  long_or_string_or_float Variant(Float32, Int64, String, Int64),
+  double_or_null_or_string_or_long Variant(Float64, String, Int64, Int64),
+  double_or_long_or_string_in_array Array(Variant(Float64, String, Int64)),
+  double_or_string_or_long_or_null_in_map Map(String, Variant(Float64, Int64, String))
+');" 2>&1 | grep -c 'DB::Exception: The number of (non-null) union types in Avro record (2) does not match the number of types in destination Variant type (3).'
+echo
+
+echo "== SELECT * WITH CustomSchema less types than expected =="
+$CH_CLIENT -q "select * from file('union_in_complex_types.avro', 'Avro', '
+  string_only String,
+  string_or_null Nullable(String),
+  null_or_string Nullable(String),
+  double_or_string Variant(Float64, String),
+  string_or_double Variant(Float64, String),
+  null_or_string_or_double Variant(Float64, String),
+  string_or_double_or_null Variant(Float64, String),
+  string_or_float_or_long Variant(Float32, Int64, String),
+  long_or_string_or_float Variant(Float32, Int64, String),
+  double_or_null_or_string_or_long Variant(Float64, String, Int64),
+  double_or_long_or_string_in_array Array(Variant(Float64, String, Int64)),
+  double_or_string_or_long_or_null_in_map Map(String, Variant(Float64, Int64))
+');" 2>&1 | grep -c 'DB::Exception: Destination Variant(Float64, Int64) and Avro Union containing String are not compatible.'
+echo
+
+echo "== CREATE TABLE avro_union_test_03237 =="
+$CH_CLIENT -q "CREATE TABLE avro_union_test_03237 (
+  string_only String,
+  string_or_null Nullable(String),
+  null_or_string Nullable(String),
+  double_or_string Variant(Float64, String),
+  string_or_double Variant(Float64, String),
+  null_or_string_or_double Variant(Float64, String),
+  string_or_double_or_null Variant(Float64, String),
+  string_or_float_or_long Variant(Float32, Int64, String),
+  long_or_string_or_float Variant(Float32, Int64, String),
+  double_or_null_or_string_or_long Variant(Float64, String, Int64),
+  double_or_long_or_string_in_array Array(Variant(Float64, String, Int64)),
+  double_or_string_or_long_or_null_in_map Map(String, Variant(Float64, Int64, String))
+) ENGINE = MergeTree ORDER BY tuple()"
+echo
+
+echo "== SELECT * FORMAT Avro | INSERT INTO avro_union_test_03237 FORMAT Avro =="
+$CH_CLIENT -q "SELECT * FROM file('union_in_complex_types.avro') FORMAT Avro" | tee /tmp/out.avro | $CH_CLIENT -q "INSERT INTO avro_union_test_03237 FORMAT Avro"
+echo
+
+
+echo "== SELECT * FROM avro_union_test_03237 =="
+$CH_CLIENT -q "SELECT * FROM avro_union_test_03237"
+echo
+
+echo "== TRUNCATE TABLE avro_union_test_03237 =="
+$CH_CLIENT -q "TRUNCATE TABLE avro_union_test_03237"
+echo
+
+echo "== insert into table avro_union_test_03237 select * from file('union_in_complex_types.avro') =="
+$CH_CLIENT -q "insert into table avro_union_test_03237 select * from file('union_in_complex_types.avro')"
+echo
+
+echo "== SELECT * FROM avro_union_test_03237 =="
+$CH_CLIENT -q "SELECT * FROM avro_union_test_03237"
+echo
+
+rm -f $CLICKHOUSE_USER_FILES/union_in_complex_types_2.avro
+
+echo "== insert into table function file('union_in_complex_types_2.avro') select * from file('union_in_complex_types.avro') =="
+$CH_CLIENT -q "insert into table function file('union_in_complex_types_2.avro') select * from file('union_in_complex_types.avro') format Avro"
+echo
+
+echo "== SELECT * FROM file('union_in_complex_types_2.avro') =="
+$CH_CLIENT -q "SELECT * FROM file('union_in_complex_types_2.avro')"
\ No newline at end of file
diff --git a/tests/queries/0_stateless/data_avro/union_in_complex_types.avro b/tests/queries/0_stateless/data_avro/union_in_complex_types.avro
new file mode 100644
index 000000000000..4e9d62f07c2d
Binary files /dev/null and b/tests/queries/0_stateless/data_avro/union_in_complex_types.avro differ
diff --git a/tests/queries/0_stateless/data_avro/union_in_complex_types.generate_avro.py b/tests/queries/0_stateless/data_avro/union_in_complex_types.generate_avro.py
new file mode 100644
index 000000000000..8d3f5437cb57
--- /dev/null
+++ b/tests/queries/0_stateless/data_avro/union_in_complex_types.generate_avro.py
@@ -0,0 +1,121 @@
+import io
+
+import avro.datafile
+import avro.io
+import avro.schema
+
+# Define the schema
+schema = avro.schema.parse(
+    """
+    {
+      "type": "record",
+      "name": "TestRecord",
+      "fields": [
+        {"name": "string_only", "type": ["string"]},
+        {"name": "string_or_null", "type": ["string", "null"]},
+        {"name": "null_or_string", "type": ["null", "string"]},
+        {"name": "double_or_string", "type": ["double", "string"]},
+        {"name": "string_or_double", "type": ["string", "double"]},
+        {"name": "null_or_string_or_double", "type": ["null", "string", "double"]},
+        {"name": "string_or_double_or_null", "type": ["string", "double", "null"]},
+        {"name": "string_or_float_or_long", "type": ["string", "float", "long"]},
+        {"name": "long_or_string_or_float", "type": ["long", "string", "float"]},
+        {"name": "double_or_null_or_string_or_long", "type": ["double", "null", "string", "long"]},
+        {"name": "double_or_long_or_string_in_array", "type": {
+          "type": "array",
+          "items": ["double", "long", "string"]
+        }},
+        {"name": "double_or_string_or_long_or_null_in_map", "type": {
+          "type": "map",
+          "values": ["double", "string", "long", "null"]
+        }}
+      ]
+    }
+    """
+)
+
+records = [
+    {
+        "string_only": "alpha",
+        "string_or_null": "bravo",
+        "null_or_string": None,
+        "double_or_string": 3.1415926535,
+        "string_or_double": "charlie",
+        "null_or_string_or_double": "delta",
+        "string_or_double_or_null": 2.7182818284,
+        "string_or_float_or_long": "echo",
+        "long_or_string_or_float": 42,
+        "double_or_null_or_string_or_long": -3.1415926535,
+        "double_or_long_or_string_in_array": [1.4142135623, "foxtrot", -100],
+        "double_or_string_or_long_or_null_in_map": {"key1": 3.1415926535, "key2": None},
+    },
+    {
+        "string_only": "golf",
+        "string_or_null": None,
+        "null_or_string": "hotel",
+        "double_or_string": "india",
+        "string_or_double": 1.6180339887,
+        "null_or_string_or_double": 3.1415926535,
+        "string_or_double_or_null": "juliet",
+        "string_or_float_or_long": 7.38906,
+        "long_or_string_or_float": "kilo",
+        "double_or_null_or_string_or_long": 1000,
+        "double_or_long_or_string_in_array": [-1.6180339887, 0, "lima"],
+        "double_or_string_or_long_or_null_in_map": {"key3": "mike", "key4": 1e-9},
+    },
+    {
+        "string_only": "november",
+        "string_or_null": "oscar",
+        "null_or_string": None,
+        "double_or_string": 1e10,
+        "string_or_double": "papa",
+        "null_or_string_or_double": None,
+        "string_or_double_or_null": None,
+        "string_or_float_or_long": -5000000,
+        "long_or_string_or_float": 1.7320508,
+        "double_or_null_or_string_or_long": "quebec",
+        "double_or_long_or_string_in_array": [2.7182818284, 1729, "romeo"],
+        "double_or_string_or_long_or_null_in_map": {
+            "key5": -2.7182818284,
+            "key6": "sierra",
+        },
+    },
+    {
+        "string_only": "tango",
+        "string_or_null": None,
+        "null_or_string": "uniform",
+        "double_or_string": -1.4142135623,
+        "string_or_double": -1.6180339887,
+        "null_or_string_or_double": 1e-5,
+        "string_or_double_or_null": "victor",
+        "string_or_float_or_long": "whiskey",
+        "long_or_string_or_float": -987654321,
+        "double_or_null_or_string_or_long": None,
+        "double_or_long_or_string_in_array": [-3.1415926535, "xray", 31415926535],
+        "double_or_string_or_long_or_null_in_map": {"key7": "yankee", "key8": -987.654},
+    },
+    {
+        "string_only": "zulu",
+        "string_or_null": "alpha1",
+        "null_or_string": "bravo1",
+        "double_or_string": 2.718281828,
+        "string_or_double": "charlie1",
+        "null_or_string_or_double": None,
+        "string_or_double_or_null": -1.7320508075,
+        "string_or_float_or_long": 1e6,
+        "long_or_string_or_float": "delta1",
+        "double_or_null_or_string_or_long": -1.6180339887,
+        "double_or_long_or_string_in_array": [-2.7182818284, 123456789, "echo1"],
+        "double_or_string_or_long_or_null_in_map": {
+            "key9": 9223372036854775807,
+            "key10": None,
+        },
+    },
+]
+
+# Write the data to an Avro file
+with open("union_in_complex_types.avro", "wb") as avro_file:
+    writer = avro.datafile.DataFileWriter(avro_file, avro.io.DatumWriter(), schema)
+    for record in records:
+        writer.append(record)
+    writer.close()
