diff --git a/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.reference b/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.reference
new file mode 100644
index 000000000000..3f5700b6d636
--- /dev/null
+++ b/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.reference
@@ -0,0 +1,9 @@
+2
+Expression ((Projection + Before ORDER BY))
+  MergingAggregated
+    ReadFromPreparedSource (Optimized trivial count)
+3
+Expression ((Projection + Before ORDER BY))
+  Aggregating
+    Expression (Before GROUP BY)
+      ReadFromMerge
diff --git a/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.sql b/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.sql
new file mode 100644
index 000000000000..9feb2aa2ad65
--- /dev/null
+++ b/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.sql
@@ -0,0 +1,32 @@
+-- Tests that Merge-engine (not: MergeTree!) tables support the trivial count
+-- optimization if all underlying tables support it
+
+DROP TABLE IF EXISTS mt1;
+DROP TABLE IF EXISTS mt2;
+DROP TABLE IF EXISTS merge;
+
+CREATE TABLE mt1 (id UInt64) ENGINE = MergeTree ORDER BY id;
+CREATE TABLE mt2 (id UInt64) ENGINE = MergeTree ORDER BY id;
+CREATE TABLE merge (id UInt64) ENGINE = Merge(currentDatabase(), '^mt[0-9]+$');
+
+INSERT INTO mt1 VALUES (1);
+INSERT INTO mt2 VALUES (1);
+
+SELECT count() FROM merge;
+
+-- can use the trivial count optimization
+EXPLAIN SELECT count() FROM merge settings allow_experimental_analyzer=0;
+
+CREATE TABLE mt3 (id UInt64) ENGINE = TinyLog;
+
+INSERT INTO mt2 VALUES (2);
+
+SELECT count() FROM merge;
+
+-- can't use the trivial count optimization as TinyLog doesn't support it
+EXPLAIN SELECT count() FROM merge settings allow_experimental_analyzer=0;
+
+DROP TABLE IF EXISTS mt1;
+DROP TABLE IF EXISTS mt2;
+DROP TABLE IF EXISTS mt3;
+DROP TABLE IF EXISTS merge;
