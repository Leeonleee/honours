You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
max_execution_speed setting does not work if SAMPLE is used
CC @zhang2014 

```
example.yandex.ru :) SET max_execution_speed = 1000000

SET max_execution_speed = 1000000

Ok.

0 rows in set. Elapsed: 0.001 sec. 

example.yandex.ru :) SELECT ...

1 rows in set. Elapsed: 10.360 sec. Processed 318.26 million rows, 57.65 GB (30.72 million rows/s., 5.56 GB/s.)
```
The setting max_execution_speed does not work at all.
**Describe the bug**

```
SET max_execution_speed = 1000000;
SELECT count() FROM system.numbers;
```
max_execution_speed doesn't seem to work as expected
#4430 introduced two new settings:
* max_execution_speed 
* max_execution_speed_bytes

Both of which should be very useful in a multi tenant environment, especially as a poor's man non-conserving query prioritization.

When progressImpl is called it checks current execution speed and if it higher than set in settings it sleeps, thus introducing back-pressure to executing threads. (?)

It doesn't seem to work when running aggregations (`SELECT count()...`) over a cluster (a distributed table). These limits are checked only on the executor node on a progress packet arrival, even though the thread that checked the limit sleeps, the back-pressure is not propagated to leaf nodes as these have no data to push to executor until the whole query is finished.

cc @zhang2014
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
