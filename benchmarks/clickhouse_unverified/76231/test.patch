diff --git a/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference b/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference
index 5b131307bcfc..e69032d49ebb 100644
--- a/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference
+++ b/tests/queries/0_stateless/02415_all_new_functions_must_be_documented.reference
@@ -141,6 +141,7 @@ arraySort
 arraySplit
 arrayStringConcat
 arraySum
+arraySymmetricDifference
 arrayUnion
 arrayUniq
 arrayWithConstant
diff --git a/tests/queries/0_stateless/03357_arraySymmetricDifference.reference b/tests/queries/0_stateless/03357_arraySymmetricDifference.reference
new file mode 100644
index 000000000000..c4885144c573
--- /dev/null
+++ b/tests/queries/0_stateless/03357_arraySymmetricDifference.reference
@@ -0,0 +1,16 @@
+Negative tests
+Const arguments
+[]
+[]
+[2,3]
+['b','c']
+[3,NULL]
+[1,3]
+[]
+[]
+[]
+[2,3]
+Array(Tuple(Nullable(UInt8), Array(Nullable(String))))
+Non-const arguments
+[(NULL,['c']),(2,['c',NULL])]
+[(NULL,['c']),(2,['c',NULL])]
diff --git a/tests/queries/0_stateless/03357_arraySymmetricDifference.sql b/tests/queries/0_stateless/03357_arraySymmetricDifference.sql
new file mode 100644
index 000000000000..ef4c13bcfa30
--- /dev/null
+++ b/tests/queries/0_stateless/03357_arraySymmetricDifference.sql
@@ -0,0 +1,30 @@
+SELECT 'Negative tests';
+SELECT arraySymmetricDifference(); -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }
+SELECT arraySymmetricDifference(1); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+SELECT arraySymmetricDifference(1, 2); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+SELECT arraySymmetricDifference(1, [1, 2]); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+SELECT arraySymmetricDifference([1, 2], 1); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }
+
+SELECT 'Const arguments';
+SELECT arraySort(arraySymmetricDifference([]));
+SELECT arraySort(arraySymmetricDifference([1, 2]));
+SELECT arraySort(arraySymmetricDifference([1, 2], [1, 3]));
+SELECT arraySort(arraySymmetricDifference(['a', 'b'], ['a', 'c']));
+SELECT arraySort(arraySymmetricDifference([1, NULL], [1, 3]));
+SELECT arraySort(arraySymmetricDifference([1, NULL], [NULL, 3]));
+SELECT arraySort(arraySymmetricDifference([1, 1], [1, 1]));
+SELECT arraySort(arraySymmetricDifference([1, 2], [1, 2]));
+SELECT arraySort(arraySymmetricDifference([1, 2], [1, 2], [1, 2]));
+SELECT arraySort(arraySymmetricDifference([1, 2], [1, 2], [1, 3]));
+
+SELECT toTypeName(arraySymmetricDifference([(1, ['a', 'b']), (Null, ['c'])], [(2, ['c', Null]), (1, ['a', 'b'])]));
+
+SELECT 'Non-const arguments';
+WITH
+    materialize([(1, ['a', 'b']), (NULL, ['c'])]) AS f,
+    materialize([(2, ['c', NULL]), (1, ['a', 'b'])]) AS s
+SELECT arraySymmetricDifference(f, s);
+WITH
+    materialize([(1, ['a', 'b']::Array(LowCardinality(String))), (NULL, ['c']::Array(LowCardinality(String)))]) AS f,
+    materialize([(2, ['c', NULL]::Array(LowCardinality(Nullable(String)))), (1, ['a', 'b']::Array(LowCardinality(String)))]) AS s
+SELECT arraySymmetricDifference(f, s)
\ No newline at end of file
