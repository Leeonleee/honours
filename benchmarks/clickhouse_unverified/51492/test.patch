diff --git a/tests/queries/0_stateless/01861_explain_pipeline.reference b/tests/queries/0_stateless/01861_explain_pipeline.reference
index aec3ae06dce3..427b3eaefc08 100644
--- a/tests/queries/0_stateless/01861_explain_pipeline.reference
+++ b/tests/queries/0_stateless/01861_explain_pipeline.reference
@@ -17,14 +17,12 @@ ExpressionTransform × 2
   (ReadFromMergeTree)
   ExpressionTransform × 2
     ReplacingSorted
-      ExpressionTransform
-        FilterSortedStreamByRange
-        Description: filter values in [(5), +inf)
-          ExpressionTransform
-            MergeTreeInOrder 0 → 1
-              ReplacingSorted 2 → 1
+      FilterSortedStreamByRange
+      Description: filter values in [(5), +inf)
+        ExpressionTransform
+          MergeTreeInOrder 0 → 1
+            ReplacingSorted 2 → 1
+              FilterSortedStreamByRange × 2
+              Description: filter values in [-inf, (5))
                 ExpressionTransform × 2
-                  FilterSortedStreamByRange × 2
-                  Description: filter values in [-inf, (5))
-                    ExpressionTransform × 2
-                      MergeTreeInOrder × 2 0 → 1
+                  MergeTreeInOrder × 2 0 → 1
diff --git a/tests/queries/0_stateless/02780_final_streams_data_skipping_index.reference b/tests/queries/0_stateless/02780_final_streams_data_skipping_index.reference
index d7a540ae479c..5242c6253250 100644
--- a/tests/queries/0_stateless/02780_final_streams_data_skipping_index.reference
+++ b/tests/queries/0_stateless/02780_final_streams_data_skipping_index.reference
@@ -9,17 +9,15 @@ ExpressionTransform × 2
     (ReadFromMergeTree)
     ExpressionTransform × 2
       AggregatingSortedTransform 2 → 1
-        ExpressionTransform × 2
-          FilterSortedStreamByRange × 2
-          Description: filter values in [(999424), +inf)
-            ExpressionTransform × 2
-              MergeTreeInOrder × 2 0 → 1
-                AggregatingSortedTransform
+        FilterSortedStreamByRange × 2
+        Description: filter values in [(999424), +inf)
+          ExpressionTransform × 2
+            MergeTreeInOrder × 2 0 → 1
+              AggregatingSortedTransform
+                FilterSortedStreamByRange
+                Description: filter values in [-inf, (999424))
                   ExpressionTransform
-                    FilterSortedStreamByRange
-                    Description: filter values in [-inf, (999424))
-                      ExpressionTransform
-                        MergeTreeInOrder 0 → 1
+                    MergeTreeInOrder 0 → 1
 EXPLAIN PIPELINE SELECT * FROM data FINAL WHERE v1 >= now() - INTERVAL 180 DAY
 SETTINGS max_threads=2, max_final_threads=2, force_data_skipping_indices='v1_index', use_skip_indexes_if_final=0
 FORMAT LineAsString;
@@ -30,14 +28,12 @@ ExpressionTransform × 2
     (ReadFromMergeTree)
     ExpressionTransform × 2
       AggregatingSortedTransform 2 → 1
-        ExpressionTransform × 2
-          FilterSortedStreamByRange × 2
-          Description: filter values in [(999424), +inf)
-            ExpressionTransform × 2
-              MergeTreeInOrder × 2 0 → 1
-                AggregatingSortedTransform
+        FilterSortedStreamByRange × 2
+        Description: filter values in [(999424), +inf)
+          ExpressionTransform × 2
+            MergeTreeInOrder × 2 0 → 1
+              AggregatingSortedTransform
+                FilterSortedStreamByRange
+                Description: filter values in [-inf, (999424))
                   ExpressionTransform
-                    FilterSortedStreamByRange
-                    Description: filter values in [-inf, (999424))
-                      ExpressionTransform
-                        MergeTreeInOrder 0 → 1
+                    MergeTreeInOrder 0 → 1
diff --git a/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.reference b/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.reference
new file mode 100644
index 000000000000..a8401b1cae8f
--- /dev/null
+++ b/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.reference
@@ -0,0 +1,9 @@
+1
+2
+3
+1
+2
+3
+1
+2
+3
diff --git a/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.sql b/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.sql
new file mode 100644
index 000000000000..394e3bff87bd
--- /dev/null
+++ b/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.sql
@@ -0,0 +1,81 @@
+SET do_not_merge_across_partitions_select_final=1;
+
+CREATE TABLE test_block_mismatch
+(
+    a UInt32,
+    b DateTime
+)
+ENGINE = ReplacingMergeTree
+PARTITION BY toYYYYMM(b)
+ORDER BY (toDate(b), a);
+
+INSERT INTO test_block_mismatch VALUES (1, toDateTime('2023-01-01 12:12:12'));
+INSERT INTO test_block_mismatch VALUES (1, toDateTime('2023-01-01 12:12:12'));
+SELECT count(*) FROM test_block_mismatch FINAL;
+
+INSERT INTO test_block_mismatch VALUES (1, toDateTime('2023-02-02 12:12:12'));
+INSERT INTO test_block_mismatch VALUES (1, toDateTime('2023-02-02 12:12:12'));
+SELECT count(*) FROM test_block_mismatch FINAL;
+
+optimize table test_block_mismatch final;
+system stop merges test_block_mismatch;
+
+INSERT INTO test_block_mismatch VALUES (2, toDateTime('2023-01-01 12:12:12'));
+INSERT INTO test_block_mismatch VALUES (2, toDateTime('2023-01-01 12:12:12'));
+-- one lonely part in 2023-02-02 partition and 3 parts in 2023-01-01 partition.
+-- lonely part will not be processed by PartsSplitter and 2023-01-01's parts will be - previously this led to the `Block structure mismatch in Pipe::unitePipes` exception.
+SELECT count(*) FROM test_block_mismatch FINAL;
+
+
+-- variations of the test above with slightly modified table definitions
+
+CREATE TABLE test_block_mismatch_sk1
+(
+    a UInt32,
+    b DateTime
+)
+ENGINE = ReplacingMergeTree
+PARTITION BY toYYYYMM(b)
+PRIMARY KEY (toDate(b))
+ORDER BY (toDate(b), a);
+
+INSERT INTO test_block_mismatch_sk1  VALUES (1, toDateTime('2023-01-01 12:12:12'));
+INSERT INTO test_block_mismatch_sk1 VALUES (1, toDateTime('2023-01-01 12:12:12'));
+SELECT count(*) FROM test_block_mismatch_sk1 FINAL;
+
+INSERT INTO test_block_mismatch_sk1 VALUES (1, toDateTime('2023-02-02 12:12:12'));
+INSERT INTO test_block_mismatch_sk1 VALUES (1, toDateTime('2023-02-02 12:12:12'));
+SELECT count(*) FROM test_block_mismatch_sk1 FINAL;
+
+optimize table test_block_mismatch_sk1 final;
+system stop merges test_block_mismatch_sk1;
+
+INSERT INTO test_block_mismatch_sk1 VALUES (2, toDateTime('2023-01-01 12:12:12'));
+INSERT INTO test_block_mismatch_sk1 VALUES (2, toDateTime('2023-01-01 12:12:12'));
+SELECT count(*) FROM test_block_mismatch_sk1 FINAL;
+
+
+CREATE TABLE test_block_mismatch_sk2
+(
+    a UInt32,
+    b DateTime
+)
+ENGINE = ReplacingMergeTree
+PARTITION BY toYYYYMM(b)
+PRIMARY KEY (a)
+ORDER BY (a, toDate(b));
+
+INSERT INTO test_block_mismatch_sk2  VALUES (1, toDateTime('2023-01-01 12:12:12'));
+INSERT INTO test_block_mismatch_sk2 VALUES (1, toDateTime('2023-01-01 12:12:12'));
+SELECT count(*) FROM test_block_mismatch_sk2 FINAL;
+
+INSERT INTO test_block_mismatch_sk2 VALUES (1, toDateTime('2023-02-02 12:12:12'));
+INSERT INTO test_block_mismatch_sk2 VALUES (1, toDateTime('2023-02-02 12:12:12'));
+SELECT count(*) FROM test_block_mismatch_sk2 FINAL;
+
+optimize table test_block_mismatch_sk2 final;
+system stop merges test_block_mismatch_sk2;
+
+INSERT INTO test_block_mismatch_sk2 VALUES (2, toDateTime('2023-01-01 12:12:12'));
+INSERT INTO test_block_mismatch_sk2 VALUES (2, toDateTime('2023-01-01 12:12:12'));
+SELECT count(*) FROM test_block_mismatch_sk2 FINAL;
