diff --git a/src/Databases/DatabaseFactory.cpp b/src/Databases/DatabaseFactory.cpp
index a4c8f3cdb77e..d0c5544607da 100644
--- a/src/Databases/DatabaseFactory.cpp
+++ b/src/Databases/DatabaseFactory.cpp
@@ -204,7 +204,8 @@ DatabasePtr DatabaseFactory::getImpl(const ASTCreateQuery & create, const String
                 mysql_database_settings->loadFromQuery(*engine_define); /// higher priority
 
                 return std::make_shared<DatabaseMySQL>(
-                    context, database_name, metadata_path, engine_define, configuration.database, std::move(mysql_database_settings), std::move(mysql_pool));
+                    context, database_name, metadata_path, engine_define, configuration.database,
+                    std::move(mysql_database_settings), std::move(mysql_pool), create.attach);
             }
 
             MySQLClient client(configuration.host, configuration.port, configuration.username, configuration.password);
diff --git a/src/Databases/MySQL/DatabaseMySQL.cpp b/src/Databases/MySQL/DatabaseMySQL.cpp
index f62e06aff8d8..cc6d808a564a 100644
--- a/src/Databases/MySQL/DatabaseMySQL.cpp
+++ b/src/Databases/MySQL/DatabaseMySQL.cpp
@@ -53,7 +53,8 @@ DatabaseMySQL::DatabaseMySQL(
     const ASTStorage * database_engine_define_,
     const String & database_name_in_mysql_,
     std::unique_ptr<ConnectionMySQLSettings> settings_,
-    mysqlxx::PoolWithFailover && pool)
+    mysqlxx::PoolWithFailover && pool,
+    bool attach)
     : IDatabase(database_name_)
     , WithContext(context_->getGlobalContext())
     , metadata_path(metadata_path_)
@@ -62,7 +63,19 @@ DatabaseMySQL::DatabaseMySQL(
     , database_settings(std::move(settings_))
     , mysql_pool(std::move(pool))
 {
-    empty(); /// test database is works fine.
+    try
+    {
+        /// Test that the database is working fine; it will also fetch tables.
+        empty();
+    }
+    catch (...)
+    {
+        if (attach)
+            tryLogCurrentException("DatabaseMySQL");
+        else
+            throw;
+    }
+
     thread = ThreadFromGlobalPool{&DatabaseMySQL::cleanOutdatedTables, this};
 }
 
diff --git a/src/Databases/MySQL/DatabaseMySQL.h b/src/Databases/MySQL/DatabaseMySQL.h
index e57ac442db1e..1ee090ecd524 100644
--- a/src/Databases/MySQL/DatabaseMySQL.h
+++ b/src/Databases/MySQL/DatabaseMySQL.h
@@ -45,7 +45,8 @@ class DatabaseMySQL final : public IDatabase, WithContext
         const ASTStorage * database_engine_define,
         const String & database_name_in_mysql,
         std::unique_ptr<ConnectionMySQLSettings> settings_,
-        mysqlxx::PoolWithFailover && pool);
+        mysqlxx::PoolWithFailover && pool,
+        bool attach);
 
     String getEngineName() const override { return "MySQL"; }
 
