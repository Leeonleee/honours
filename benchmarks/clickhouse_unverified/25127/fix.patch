diff --git a/src/Common/FieldVisitors.h b/src/Common/FieldVisitors.h
index 0384be39494f..5d3d30369cc0 100644
--- a/src/Common/FieldVisitors.h
+++ b/src/Common/FieldVisitors.h
@@ -269,6 +269,19 @@ class FieldVisitorHash : public StaticVisitor<>
     void operator() (const AggregateFunctionStateData & x) const;
 };
 
+/// This is a special visitor which is used to get partition ID.
+/// Calculate hash for UUID the same way as for UInt128.
+/// It worked this way until 21.5, and we cannot change it,
+/// or partition ID will be different in case UUID is used in partition key.
+/// (It is not recommended to use UUID as partition key).
+class LegacyFieldVisitorHash : public FieldVisitorHash
+{
+public:
+    using FieldVisitorHash::FieldVisitorHash;
+    using FieldVisitorHash::operator();
+    void operator() (const UUID & x) const { FieldVisitorHash::operator()(x.toUnderType()); }
+};
+
 
 template <typename T> constexpr bool isDecimalField() { return false; }
 template <> constexpr bool isDecimalField<DecimalField<Decimal32>>() { return true; }
diff --git a/src/Storages/MergeTree/MergeTreePartition.cpp b/src/Storages/MergeTree/MergeTreePartition.cpp
index a19bd263dbfc..710b259c3ec7 100644
--- a/src/Storages/MergeTree/MergeTreePartition.cpp
+++ b/src/Storages/MergeTree/MergeTreePartition.cpp
@@ -74,7 +74,7 @@ String MergeTreePartition::getID(const Block & partition_key_sample) const
     }
 
     SipHash hash;
-    FieldVisitorHash hashing_visitor(hash);
+    LegacyFieldVisitorHash hashing_visitor(hash);
     for (const Field & field : value)
         applyVisitor(hashing_visitor, field);
 
