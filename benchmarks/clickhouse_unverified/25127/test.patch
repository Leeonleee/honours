diff --git a/tests/queries/0_stateless/01891_partition_by_uuid.reference b/tests/queries/0_stateless/01891_partition_by_uuid.reference
new file mode 100644
index 000000000000..1835863e7ff7
--- /dev/null
+++ b/tests/queries/0_stateless/01891_partition_by_uuid.reference
@@ -0,0 +1,1 @@
+48406fdb38e23228b776558b4edfa795
diff --git a/tests/queries/0_stateless/01891_partition_by_uuid.sql b/tests/queries/0_stateless/01891_partition_by_uuid.sql
new file mode 100644
index 000000000000..19abbb2ebdbb
--- /dev/null
+++ b/tests/queries/0_stateless/01891_partition_by_uuid.sql
@@ -0,0 +1,7 @@
+drop table if exists tab;
+create table tab (id UUID, value UInt32) engine = MergeTree PARTITION BY id order by tuple();
+insert into tab values ('61f0c404-5cb3-11e7-907b-a6006ad3dba0', 1), ('61f0c404-5cb3-11e7-907b-a6006ad3dba0', 2);
+-- Here we check that partition id for UUID partition key did not change.
+-- Different result means Backward Incompatible Change. Old partitions will not be accepted by new server.
+select partition_id from system.parts where table = 'tab' and database = currentDatabase();
+drop table if exists tab;
diff --git a/tests/queries/0_stateless/01891_partition_hash.reference b/tests/queries/0_stateless/01891_partition_hash.reference
new file mode 100644
index 000000000000..56d11075e503
--- /dev/null
+++ b/tests/queries/0_stateless/01891_partition_hash.reference
@@ -0,0 +1,1 @@
+6ba51fa36c625adab5d58007c96e32bf
diff --git a/tests/queries/0_stateless/01891_partition_hash.sql b/tests/queries/0_stateless/01891_partition_hash.sql
new file mode 100644
index 000000000000..6e356e799aba
--- /dev/null
+++ b/tests/queries/0_stateless/01891_partition_hash.sql
@@ -0,0 +1,7 @@
+drop table if exists tab;
+create table tab (i8 Int8, i16 Int16, i32 Int32, i64 Int64, i128 Int128, i256 Int256, u8 UInt8, u16 UInt16, u32 UInt32, u64 UInt64, u128 UInt128, u256 UInt256, id UUID, s String, fs FixedString(33), a Array(UInt8), t Tuple(UInt16, UInt32), d Date, dt DateTime, dt64 DateTime64, dec128 Decimal128(3), dec256 Decimal256(4), lc LowCardinality(String)) engine = MergeTree PARTITION BY (i8, i16, i32, i64, i128, i256, u8, u16, u32, u64, u128, u256, id, s, fs, a, t, d, dt, dt64, dec128, dec256, lc) order by tuple();
+insert into tab values (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, '61f0c404-5cb3-11e7-907b-a6006ad3dba0', 'a', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', [1, 2, 3], (-1, -2), '2020-01-01', '2020-01-01 01:01:01', '2020-01-01 01:01:01', '123.456', '78.9101', 'a');
+-- Here we check that partition id did not change.
+-- Different result means Backward Incompatible Change. Old partitions will not be accepted by new server.
+select partition_id from system.parts where table = 'tab' and database = currentDatabase();
+drop table if exists tab;
diff --git a/tests/queries/0_stateless/01891_partition_hash_no_long_int.reference b/tests/queries/0_stateless/01891_partition_hash_no_long_int.reference
new file mode 100644
index 000000000000..061081b28add
--- /dev/null
+++ b/tests/queries/0_stateless/01891_partition_hash_no_long_int.reference
@@ -0,0 +1,1 @@
+04a875063d3809312ff884e90a5b4dad
diff --git a/tests/queries/0_stateless/01891_partition_hash_no_long_int.sql b/tests/queries/0_stateless/01891_partition_hash_no_long_int.sql
new file mode 100644
index 000000000000..bf5c24579239
--- /dev/null
+++ b/tests/queries/0_stateless/01891_partition_hash_no_long_int.sql
@@ -0,0 +1,7 @@
+drop table if exists tab;
+create table tab (i8 Int8, i16 Int16, i32 Int32, i64 Int64, u8 UInt8, u16 UInt16, u32 UInt32, u64 UInt64, id UUID, s String, fs FixedString(33), a Array(UInt8), t Tuple(UInt16, UInt32), d Date, dt DateTime, dt64 DateTime64, dec128 Decimal128(3), lc LowCardinality(String)) engine = MergeTree PARTITION BY (i8, i16, i32, i64, u8, u16, u32, u64, id, s, fs, a, t, d, dt, dt64, dec128, lc) order by tuple();
+insert into tab values (-1, -1, -1, -1, -1, -1, -1, -1, '61f0c404-5cb3-11e7-907b-a6006ad3dba0', 'a', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', [1, 2, 3], (-1, -2), '2020-01-01', '2020-01-01 01:01:01', '2020-01-01 01:01:01', '123.456', 'a');
+-- Here we check that partition id did not change.
+-- Different result means Backward Incompatible Change. Old partitions will not be accepted by new server.
+select partition_id from system.parts where table = 'tab' and database = currentDatabase();
+drop table if exists tab;
