You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
For enum columns in the primary key, the granule selection algorithm shouldn't depend on if string or numeric value is used in predicate 
For a table where an `enum column is used as primary key column`, then:
- for searches on that column with a numeric value, ClickHouse uses `generic exclusion search` over index entries
- for searches on that column with a string value, ClickHouse uses `binary search` over index entries

It should use the same algorithm in both cases. 

Minimal example:
```
SELECT version();
┌─version()─────┐
│ 22.12.1.21301 │
└───────────────┘


CREATE TABLE t
(
    c Enum8('Zero' = 0, 'One' = 1, 'Two' = 2, 'Three' = 3, 'Four' = 4, 'Five' = 5)
)
ENGINE = AggregatingMergeTree
ORDER BY c;


INSERT INTO t values('Zero');
INSERT INTO t values('One');
INSERT INTO t values('Two');


SET send_logs_level = 'trace';


----------------------------------------------------------
-- this triggers generic exclusion search
----------------------------------------------------------
SELECT * FROM t WHERE c = 1;

...
(SelectExecutor): Key condition: (_CAST(column 0) in [1, 1])
(SelectExecutor): Used generic exclusion search over index
...


----------------------------------------------------------
-- whereas this triggers binary search
----------------------------------------------------------

SELECT * FROM t WHERE c = 'One';

...
(SelectExecutor): Key condition: (column 0 in [1, 1])
(SelectExecutor): Running binary search on index
...
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
