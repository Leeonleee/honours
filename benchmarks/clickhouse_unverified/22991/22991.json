{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 22991,
  "instance_id": "ClickHouse__ClickHouse-22991",
  "issue_numbers": [
    "22290"
  ],
  "base_commit": "99c6daa9b5264c7b08dd4b8100050cdec038c3d6",
  "patch": "diff --git a/src/Interpreters/TreeRewriter.cpp b/src/Interpreters/TreeRewriter.cpp\nindex 73d7d3d004c8..153f64402f40 100644\n--- a/src/Interpreters/TreeRewriter.cpp\n+++ b/src/Interpreters/TreeRewriter.cpp\n@@ -293,13 +293,11 @@ void removeUnneededColumnsFromSelectClause(const ASTSelectQuery * select_query,\n         else\n         {\n             ASTFunction * func = elem->as<ASTFunction>();\n+\n+            /// Never remove untuple. It's result column may be in required columns.\n+            /// It is not easy to analyze untuple here, because types were not calculated yes.\n             if (func && func->name == \"untuple\")\n-                for (const auto & col : required_result_columns)\n-                    if (col.rfind(\"_ut_\", 0) == 0)\n-                    {\n-                        new_elements.push_back(elem);\n-                        break;\n-                    }\n+                new_elements.push_back(elem);\n         }\n     }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01803_untuple_subquery.reference b/tests/queries/0_stateless/01803_untuple_subquery.reference\nnew file mode 100644\nindex 000000000000..838ff3aa952b\n--- /dev/null\n+++ b/tests/queries/0_stateless/01803_untuple_subquery.reference\n@@ -0,0 +1,2 @@\n+(0.5,'92233720368547758.07',NULL)\t\t1.00\t256\t\\N\t\\N\n+\\N\ndiff --git a/tests/queries/0_stateless/01803_untuple_subquery.sql b/tests/queries/0_stateless/01803_untuple_subquery.sql\nnew file mode 100644\nindex 000000000000..512b4c561af8\n--- /dev/null\n+++ b/tests/queries/0_stateless/01803_untuple_subquery.sql\n@@ -0,0 +1,3 @@\n+SELECT (0.5, '92233720368547758.07', NULL), '', '1.00', untuple(('256', NULL)), NULL FROM (SELECT untuple(((NULL, untuple((('0.0000000100', (65536, NULL, (65535, 9223372036854775807), '25.7', (0.00009999999747378752, '10.25', 1048577), 65536)), '0.0000001024', '65537', NULL))), untuple((9223372036854775807, -inf, 0.5)), NULL, -9223372036854775808)), 257, 7, ('0.0001048575', (1024, NULL, (7, 3), (untuple(tuple(-NULL)), NULL, '0.0001048577', NULL), 0)), 0, (0, 0.9998999834060669, '65537'), untuple(tuple('10.25')));\n+\n+SELECT NULL FROM (SELECT untuple((NULL, dummy)));\n",
  "problem_statement": "Logical error: 'Cannot find column NULL in ActionsDAG result'\n```\r\nSELECT (0.5, '92233720368547758.07', NULL), '', '1.00', untuple(('256', NULL)), NULL FROM (SELECT untuple(((NULL, untuple((('0.0000000100', (65536, NULL, (65535, 9223372036854775807), '25.7', (0.00009999999747378752, '10.25', 1048577), 65536)), '0.0000001024', '65537', NULL))), untuple((9223372036854775807, -inf, 0.5)), NULL, -9223372036854775808)), 257, 7, ('0.0001048575', (1024, NULL, (7, 3), (untuple(tuple(-NULL)), NULL, '0.0001048577', NULL), 0)), 0, (0, 0.9998999834060669, '65537'), untuple(tuple('10.25')))\r\n\r\n\r\n\r\n\r\n\r\n\r\n2021.03.26 22:11:41.060721 [ 50 ] {fff23085-65e6-401e-8498-16aa9e971cbf} <Fatal> : Logical error: 'Cannot find column NULL in ActionsDAG result'.\r\n2021.03.26 22:11:41.061474 [ 44 ] {} <Trace> BaseDaemon: Received signal 6\r\n2021.03.26 22:11:41.062183 [ 156 ] {} <Fatal> BaseDaemon: ########################################\r\n2021.03.26 22:11:41.062561 [ 156 ] {} <Fatal> BaseDaemon: (version 21.4.1.6356, build id: 54FE96D1BDF0D7C238B0D1C7498601AFB1DA7D73) (from thread 50) (query_id: fff23085-65e6-401e-8498-16aa9e971cbf) Received signal Aborted (6)\r\n2021.03.26 22:11:41.062953 [ 156 ] {} <Fatal> BaseDaemon: \r\n2021.03.26 22:11:41.063331 [ 156 ] {} <Fatal> BaseDaemon: Stack trace: 0x7f901d9d618b 0x7f901d9b5859 0x1198ea96 0x1198eba5 0x11a95e31 0x1a9e2cea 0x1c306e85 0x1c2ff373 0x1c2e6674 0x1c2e620a 0x1b2804cf 0x1b4a4421 0x1b4a28ea 0x1be86812 0x1be92e58 0x1f942bcc 0x1f9433d0 0x1fa7fb73 0x1fa7c9fd 0x1fa7b888 0x7f901db8b609 0x7f901dab2293\r\n2021.03.26 22:11:41.063750 [ 156 ] {} <Fatal> BaseDaemon: 4. raise @ 0x4618b in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.03.26 22:11:41.063934 [ 156 ] {} <Fatal> BaseDaemon: 5. abort @ 0x25859 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.03.26 22:11:41.198666 [ 156 ] {} <Fatal> BaseDaemon: 6. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:51: DB::handle_error_code(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, std::__1::vector<void*, std::__1::allocator<void*> > const&) @ 0x1198ea96 in /workspace/clickhouse\r\n2021.03.26 22:11:41.322932 [ 156 ] {} <Fatal> BaseDaemon: 7. ./obj-x86_64-linux-gnu/../src/Common/Exception.cpp:58: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x1198eba5 in /workspace/clickhouse\r\n2021.03.26 22:11:41.423148 [ 156 ] {} <Fatal> BaseDaemon: 8. ./obj-x86_64-linux-gnu/../src/Common/Exception.h:40: DB::Exception::Exception<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x11a95e31 in /workspace/clickhouse\r\n2021.03.26 22:11:42.714139 [ 156 ] {} <Fatal> BaseDaemon: 9. ./obj-x86_64-linux-gnu/../src/Interpreters/ActionsDAG.cpp:884: DB::ActionsDAG::merge(DB::ActionsDAG&&, DB::ActionsDAG&&) @ 0x1a9e2cea in /workspace/clickhouse\r\n2021.03.26 22:11:42.848570 [ 156 ] {} <Fatal> BaseDaemon: 10. ./obj-x86_64-linux-gnu/../src/Processors/QueryPlan/Optimizations/mergeExpressions.cpp:34: DB::QueryPlanOptimizations::tryMergeExpressions(DB::QueryPlan::Node*, std::__1::list<DB::QueryPlan::Node, std::__1::allocator<DB::QueryPlan::Node> >&) @ 0x1c306e85 in /workspace/clickhouse\r\n2021.03.26 22:11:42.943667 [ 156 ] {} <Fatal> BaseDaemon: 11. ./obj-x86_64-linux-gnu/../src/Processors/QueryPlan/Optimizations/optimizeTree.cpp:76: DB::QueryPlanOptimizations::optimizeTree(DB::QueryPlanOptimizationSettings const&, DB::QueryPlan::Node&, std::__1::list<DB::QueryPlan::Node, std::__1::allocator<DB::QueryPlan::Node> >&) @ 0x1c2ff373 in /workspace/clickhouse\r\n2021.03.26 22:11:43.173463 [ 156 ] {} <Fatal> BaseDaemon: 12. ./obj-x86_64-linux-gnu/../src/Processors/QueryPlan/QueryPlan.cpp:345: DB::QueryPlan::optimize(DB::QueryPlanOptimizationSettings const&) @ 0x1c2e6674 in /workspace/clickhouse\r\n2021.03.26 22:11:43.394052 [ 156 ] {} <Fatal> BaseDaemon: 13. ./obj-x86_64-linux-gnu/../src/Processors/QueryPlan/QueryPlan.cpp:148: DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x1c2e620a in /workspace/clickhouse\r\n2021.03.26 22:11:43.880859 [ 156 ] {} <Fatal> BaseDaemon: 14. ./obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:300: DB::InterpreterSelectWithUnionQuery::execute() @ 0x1b2804cf in /workspace/clickhouse\r\n2021.03.26 22:11:44.505869 [ 156 ] {} <Fatal> BaseDaemon: 15. ./obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:550: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x1b4a4421 in /workspace/clickhouse\r\n2021.03.26 22:11:45.158766 [ 156 ] {} <Fatal> BaseDaemon: 16. ./obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:908: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x1b4a28ea in /workspace/clickhouse\r\n2021.03.26 22:11:45.818858 [ 156 ] {} <Fatal> BaseDaemon: 17. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:289: DB::TCPHandler::runImpl() @ 0x1be86812 in /workspace/clickhouse\r\n2021.03.26 22:11:46.526029 [ 156 ] {} <Fatal> BaseDaemon: 18. ./obj-x86_64-linux-gnu/../src/Server/TCPHandler.cpp:1520: DB::TCPHandler::run() @ 0x1be92e58 in /workspace/clickhouse\r\n2021.03.26 22:11:46.592564 [ 156 ] {} <Fatal> BaseDaemon: 19. ./obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x1f942bcc in /workspace/clickhouse\r\n2021.03.26 22:11:46.695511 [ 156 ] {} <Fatal> BaseDaemon: 20. ./obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerDispatcher.cpp:113: Poco::Net::TCPServerDispatcher::run() @ 0x1f9433d0 in /workspace/clickhouse\r\n2021.03.26 22:11:46.790577 [ 156 ] {} <Fatal> BaseDaemon: 21. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x1fa7fb73 in /workspace/clickhouse\r\n2021.03.26 22:11:46.879621 [ 156 ] {} <Fatal> BaseDaemon: 22. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x1fa7c9fd in /workspace/clickhouse\r\n2021.03.26 22:11:46.967127 [ 156 ] {} <Fatal> BaseDaemon: 23. ./obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x1fa7b888 in /workspace/clickhouse\r\n2021.03.26 22:11:46.967557 [ 156 ] {} <Fatal> BaseDaemon: 24. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n2021.03.26 22:11:46.967844 [ 156 ] {} <Fatal> BaseDaemon: 25. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so\r\n2021.03.26 22:11:48.065827 [ 156 ] {} <Fatal> BaseDaemon: Calculated checksum of the binary: 5DF9743F702F7C2A044EDD2C9697E25A. There is no information about the reference checksum.\r\n```\n",
  "hints_text": "https://clickhouse-test-reports.s3.yandex.net/22729/680d722f22232e5922477a440140902421b20be2/fuzzer_debug/report.html#fail1\n```sql\r\nSELECT NULL FROM (SELECT untuple((NULL, dummy)))\r\n```",
  "created_at": "2021-04-12T12:17:48Z",
  "modified_files": [
    "src/Interpreters/TreeRewriter.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01803_untuple_subquery.reference",
    "b/tests/queries/0_stateless/01803_untuple_subquery.sql"
  ]
}