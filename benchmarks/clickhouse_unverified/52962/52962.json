{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 52962,
  "instance_id": "ClickHouse__ClickHouse-52962",
  "issue_numbers": [
    "45023",
    "52723"
  ],
  "base_commit": "c1ca0f35e7688d1a5e479768cd43d81f930243d3",
  "patch": "diff --git a/src/Databases/MySQL/DatabaseMySQL.cpp b/src/Databases/MySQL/DatabaseMySQL.cpp\nindex 94e5ba1773e8..a4e5c4d92ea8 100644\n--- a/src/Databases/MySQL/DatabaseMySQL.cpp\n+++ b/src/Databases/MySQL/DatabaseMySQL.cpp\n@@ -144,6 +144,7 @@ ASTPtr DatabaseMySQL::getCreateTableQueryImpl(const String & table_name, Context\n     auto table_storage_define = database_engine_define->clone();\n     {\n         ASTStorage * ast_storage = table_storage_define->as<ASTStorage>();\n+        ast_storage->engine->kind = ASTFunction::Kind::TABLE_ENGINE;\n         ASTs storage_children = ast_storage->children;\n         auto storage_engine_arguments = ast_storage->engine->arguments;\n \ndiff --git a/src/Databases/PostgreSQL/DatabasePostgreSQL.cpp b/src/Databases/PostgreSQL/DatabasePostgreSQL.cpp\nindex 812a0d8717ed..1116c972f94b 100644\n--- a/src/Databases/PostgreSQL/DatabasePostgreSQL.cpp\n+++ b/src/Databases/PostgreSQL/DatabasePostgreSQL.cpp\n@@ -390,6 +390,7 @@ ASTPtr DatabasePostgreSQL::getCreateTableQueryImpl(const String & table_name, Co\n \n     auto create_table_query = std::make_shared<ASTCreateQuery>();\n     auto table_storage_define = database_engine_define->clone();\n+    table_storage_define->as<ASTStorage>()->engine->kind = ASTFunction::Kind::TABLE_ENGINE;\n     create_table_query->set(create_table_query->storage, table_storage_define);\n \n     auto columns_declare_list = std::make_shared<ASTColumns>();\ndiff --git a/src/Databases/SQLite/DatabaseSQLite.cpp b/src/Databases/SQLite/DatabaseSQLite.cpp\nindex 1cba9d1dc263..d031fd8e4201 100644\n--- a/src/Databases/SQLite/DatabaseSQLite.cpp\n+++ b/src/Databases/SQLite/DatabaseSQLite.cpp\n@@ -187,6 +187,7 @@ ASTPtr DatabaseSQLite::getCreateTableQueryImpl(const String & table_name, Contex\n     }\n     auto table_storage_define = database_engine_define->clone();\n     ASTStorage * ast_storage = table_storage_define->as<ASTStorage>();\n+    ast_storage->engine->kind = ASTFunction::Kind::TABLE_ENGINE;\n     auto storage_engine_arguments = ast_storage->engine->arguments;\n     auto table_id = storage->getStorageID();\n     /// Add table_name to engine arguments\n",
  "test_patch": "diff --git a/tests/integration/test_mysql_database_engine/test.py b/tests/integration/test_mysql_database_engine/test.py\nindex 18dde5307fdf..00b5eb9e8aa3 100644\n--- a/tests/integration/test_mysql_database_engine/test.py\n+++ b/tests/integration/test_mysql_database_engine/test.py\n@@ -1021,3 +1021,24 @@ def test_memory_leak(started_cluster):\n \n         clickhouse_node.query(\"DROP DATABASE test_database\")\n         clickhouse_node.restart_clickhouse()\n+\n+\n+def test_password_leak(started_cluster):\n+    with contextlib.closing(\n+        MySQLNodeInstance(\n+            \"root\", \"clickhouse\", started_cluster.mysql_ip, started_cluster.mysql_port\n+        )\n+    ) as mysql_node:\n+        mysql_node.query(\"DROP DATABASE IF EXISTS test_database\")\n+        mysql_node.query(\"CREATE DATABASE test_database DEFAULT CHARACTER SET 'utf8'\")\n+        mysql_node.query(\n+            \"CREATE TABLE `test_database`.`test_table` ( `id` int(11) NOT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB;\"\n+        )\n+\n+        clickhouse_node.query(\"DROP DATABASE IF EXISTS test_database\")\n+        clickhouse_node.query(\n+            \"CREATE DATABASE test_database ENGINE = MySQL('mysql57:3306', 'test_database', 'root', 'clickhouse') SETTINGS connection_auto_close = 1\"\n+        )\n+        assert \"clickhouse\" not in clickhouse_node.query(\n+            \"SHOW CREATE test_database.test_table\"\n+        )\ndiff --git a/tests/integration/test_postgresql_database_engine/test.py b/tests/integration/test_postgresql_database_engine/test.py\nindex 59a464f90202..bdf1056765e7 100644\n--- a/tests/integration/test_postgresql_database_engine/test.py\n+++ b/tests/integration/test_postgresql_database_engine/test.py\n@@ -400,6 +400,39 @@ def test_datetime(started_cluster):\n     assert \"DateTime64(6)\" in node1.query(\"show create table pg.test\")\n \n \n+def test_postgresql_password_leak(started_cluster):\n+    conn = get_postgres_conn(\n+        started_cluster.postgres_ip, started_cluster.postgres_port, database=True\n+    )\n+    cursor = conn.cursor()\n+\n+    cursor.execute(\"DROP SCHEMA IF EXISTS test_schema CASCADE\")\n+    cursor.execute(\"CREATE SCHEMA test_schema\")\n+    cursor.execute(\"CREATE TABLE test_schema.table1 (a integer)\")\n+    cursor.execute(\"CREATE TABLE table2 (a integer)\")\n+\n+    node1.query(\"DROP DATABASE IF EXISTS postgres_database\")\n+    node1.query(\n+        \"CREATE DATABASE postgres_database ENGINE = PostgreSQL('postgres1:5432', 'postgres_database', 'postgres', 'mysecretpassword', 'test_schema')\"\n+    )\n+\n+    node1.query(\"DROP DATABASE IF EXISTS postgres_database2\")\n+    node1.query(\n+        \"CREATE DATABASE postgres_database2 ENGINE = PostgreSQL('postgres1:5432', 'postgres_database', 'postgres', 'mysecretpassword')\"\n+    )\n+\n+    assert \"mysecretpassword\" not in node1.query(\"SHOW CREATE postgres_database.table1\")\n+    assert \"mysecretpassword\" not in node1.query(\n+        \"SHOW CREATE postgres_database2.table2\"\n+    )\n+\n+    node1.query(\"DROP DATABASE postgres_database\")\n+    node1.query(\"DROP DATABASE postgres_database2\")\n+\n+    cursor.execute(\"DROP SCHEMA test_schema CASCADE\")\n+    cursor.execute(\"DROP TABLE table2\")\n+\n+\n if __name__ == \"__main__\":\n     cluster.start()\n     input(\"Cluster created, press any key to destroy...\")\n",
  "problem_statement": "Error hiding password [HIDDEN] in SHOW CREATE TABLE of MySQL table\nInstead of a password, the login in the created SQL is closed.\r\n\r\n```\r\n> SHOW CREATE TABLE mydb1.table\r\n\r\nCREATE TABLE mydb1.table\r\n(\r\n    ...\r\n)\r\nENGINE = MySQL('127.0.0.1:3306', 'db1', 'table', '[HIDDEN]', 'password')\r\n```\r\n\r\nClickHouse server version 22.12.1.1752 (official build).\nMySQL connection password leaked in SHOW CREATE TABLE query\n**Describe the unexpected behaviour**\r\n\r\nCH masks the user instead of the password.\r\n\r\n<img width=\"990\" alt=\"image\" src=\"https://github.com/ClickHouse/ClickHouse/assets/22796953/79eda9b9-42cc-4bb8-b307-afa83130d7f6\">\r\n\r\nTo reproduce:\r\n\r\n- Create a MySQL database\r\n- Create a MySQL table inside the MySQL database\r\n- Run SHOW CREATE TABLE\r\n\n",
  "hints_text": "I couldn't reproduce the issue. The commands\r\n\r\n```\r\ncreate table mydb1.table(x Int32) engine=MySQL('127.0.0.1:3306', 'db1', 'table', 'user', 'password')\r\n\r\nshow create table mydb1.table\r\n```\r\n\r\noutput\r\n\r\n```\r\n\u250c\u2500statement\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 CREATE TABLE mydb1.table\r\n(\r\n    `x` Int32\r\n)\r\nENGINE = MySQL('127.0.0.1:3306', 'db1', 'table', 'user', '[HIDDEN]') \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\nduplicate https://github.com/ClickHouse/ClickHouse/issues/45023\nAFAIK it was fixed 9 months ago\n@den-crane I can reproduce it locally with mariadb and CH 23.6, will reopen this.\r\n\r\n<img width=\"1112\" alt=\"image\" src=\"https://github.com/ClickHouse/ClickHouse/assets/22796953/ad0c7961-4f82-4040-98ff-dda5d6e1fc14\">\r\n",
  "created_at": "2023-08-03T03:55:31Z",
  "modified_files": [
    "src/Databases/MySQL/DatabaseMySQL.cpp",
    "src/Databases/PostgreSQL/DatabasePostgreSQL.cpp",
    "src/Databases/SQLite/DatabaseSQLite.cpp"
  ],
  "modified_test_files": [
    "tests/integration/test_mysql_database_engine/test.py",
    "tests/integration/test_postgresql_database_engine/test.py"
  ]
}