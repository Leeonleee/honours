{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 25602,
  "instance_id": "ClickHouse__ClickHouse-25602",
  "issue_numbers": [
    "9958"
  ],
  "base_commit": "aa8d4aea54b0a6fec2f2cf9073e70b406c0e67c9",
  "patch": "diff --git a/src/IO/ReadBufferFromPocoSocket.cpp b/src/IO/ReadBufferFromPocoSocket.cpp\nindex d1ceaaf6a35d..e043764d280a 100644\n--- a/src/IO/ReadBufferFromPocoSocket.cpp\n+++ b/src/IO/ReadBufferFromPocoSocket.cpp\n@@ -76,7 +76,13 @@ ReadBufferFromPocoSocket::ReadBufferFromPocoSocket(Poco::Net::Socket & socket_,\n \n bool ReadBufferFromPocoSocket::poll(size_t timeout_microseconds) const\n {\n-    return available() || socket.poll(timeout_microseconds, Poco::Net::Socket::SELECT_READ | Poco::Net::Socket::SELECT_ERROR);\n+    if (available())\n+        return true;\n+\n+    Stopwatch watch;\n+    bool res = socket.poll(timeout_microseconds, Poco::Net::Socket::SELECT_READ | Poco::Net::Socket::SELECT_ERROR);\n+    ProfileEvents::increment(ProfileEvents::NetworkReceiveElapsedMicroseconds, watch.elapsedMicroseconds());\n+    return res;\n }\n \n }\n",
  "test_patch": "diff --git a/docker/test/base/Dockerfile b/docker/test/base/Dockerfile\nindex 44b9d42d6a11..a722132c3a50 100644\n--- a/docker/test/base/Dockerfile\n+++ b/docker/test/base/Dockerfile\n@@ -46,6 +46,7 @@ RUN apt-get update \\\n         pigz \\\n         pkg-config \\\n         tzdata \\\n+        pv \\\n         --yes --no-install-recommends\n \n # Sanitizer options for services (clickhouse-server)\ndiff --git a/docker/test/fasttest/run.sh b/docker/test/fasttest/run.sh\nindex 9fd2212e2dc5..6efdbf6178c3 100755\n--- a/docker/test/fasttest/run.sh\n+++ b/docker/test/fasttest/run.sh\n@@ -382,6 +382,9 @@ function run_tests\n \n         # needs psql\n         01889_postgresql_protocol_null_fields\n+\n+        # needs pv\n+        01923_network_receive_time_metric_insert\n     )\n \n     time clickhouse-test --hung-check -j 8 --order=random --use-skip-list \\\ndiff --git a/tests/queries/0_stateless/01923_network_receive_time_metric_insert.reference b/tests/queries/0_stateless/01923_network_receive_time_metric_insert.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/01923_network_receive_time_metric_insert.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/01923_network_receive_time_metric_insert.sh b/tests/queries/0_stateless/01923_network_receive_time_metric_insert.sh\nnew file mode 100755\nindex 000000000000..bcb3775f86a4\n--- /dev/null\n+++ b/tests/queries/0_stateless/01923_network_receive_time_metric_insert.sh\n@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+\n+CURDIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CURDIR\"/../shell_config.sh\n+\n+${CLICKHOUSE_CLIENT} --multiquery --query \"DROP TABLE IF EXISTS t; CREATE TABLE t (x UInt64) ENGINE = Memory;\"\n+\n+# Rate limit is chosen for operation to spent more than one second.\n+seq 1 1000 | pv --quiet --rate-limit 1000 | ${CLICKHOUSE_CLIENT} --query \"INSERT INTO t FORMAT TSV\"\n+\n+# We check that the value of NetworkReceiveElapsedMicroseconds correctly includes the time spent waiting data from the client.\n+${CLICKHOUSE_CLIENT} --multiquery --query \"SYSTEM FLUSH LOGS;\n+    WITH ProfileEvents['NetworkReceiveElapsedMicroseconds'] AS time\n+    SELECT time >= 1000000 ? 1 : time FROM system.query_log\n+        WHERE current_database = currentDatabase() AND query_kind = 'Insert' AND event_date >= yesterday() AND type = 2 ORDER BY event_time DESC LIMIT 1;\"\n+\n+${CLICKHOUSE_CLIENT} --query \"DROP TABLE t\"\n",
  "problem_statement": "query_log doesn't explain the reason of insert query slowness\n- One insert query with 28950 rows executed for more than 9 seconds and the ProfileEvents can not show the bottleneck.\r\n\r\n```sql\r\nRow 2:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\r\ntype:                 2\r\nevent_date:           2020-03-31\r\nevent_time:           2020-03-31 14:33:30\r\nquery_start_time:     2020-03-31 14:33:21\r\nquery_duration_ms:    9191\r\nread_rows:            0\r\nread_bytes:           0\r\nwritten_rows:         28950\r\nwritten_bytes:        95706647\r\nresult_rows:          28950\r\nresult_bytes:         95706647\r\nmemory_usage:         343670784\r\nquery:                insert into xxxxxxxxxxxx\r\nexception:\r\nstack_trace:\r\nis_initial_query:     1\r\nuser:                 ck_rw\r\nquery_id:             5b6eda08-51a8-4b90-b1f2-27ac6cfcb14f\r\naddress:              \ufffd\ufffd\r\n\ufffd\r\nport:                 58130\r\ninitial_user:         xxxx\r\ninitial_query_id:     5b6eda08-51a8-4b90-b1f2-27ac6cfcb14f\r\ninitial_address:      \ufffd\ufffd\r\n\ufffd\r\ninitial_port:         58130\r\ninterface:            1\r\nos_user:              db8b6be1be89\r\nclient_hostname:      db8b6be1be89\r\nclient_name:          Golang SQLDriver\r\nclient_revision:      54213\r\nclient_version_major: 1\r\nclient_version_minor: 1\r\nclient_version_patch: 54213\r\nhttp_method:          0\r\nhttp_user_agent:\r\nquota_key:\r\nrevision:             54419\r\nthread_numbers:       [55092]\r\nProfileEvents.Names:  ['Query','InsertQuery','FileOpen','WriteBufferFromFileDescriptorWrite','WriteBufferFromFileDescriptorWriteBytes','IOBufferAllocs','IOBufferAllocBytes','ArenaAllocChunks','ArenaAllocBytes','FunctionExecute','CreatedWriteBufferOrdinary','DiskWriteElapsedMicroseconds','NetworkReceiveElapsedMicroseconds','NetworkSendElapsedMicroseconds','InsertedRows','InsertedBytes','MergeTreeDataWriterRows','MergeTreeDataWriterUncompressedBytes','MergeTreeDataWriterCompressedBytes','MergeTreeDataWriterBlocks','ContextLock','RWLockAcquiredReadLocks','RealTimeMicroseconds','UserTimeMicroseconds','SystemTimeMicroseconds','SoftPageFaults']\r\nProfileEvents.Values: [1,1,90,114,30593676,263,91746153,2,8192,22,42,50421,652895,11,28950,95706647,28950,103371082,30589926,1,7,2,9191763,775680,519470,80599]\r\nSettings.Names:       ['max_threads','use_uncompressed_cache','background_pool_size','distributed_aggregation_memory_efficient','skip_unavailable_shards','force_index_by_date','log_queries','max_rows_to_read','max_rows_to_group_by','max_bytes_before_external_group_by','max_rows_to_sort','max_execution_time','max_columns_to_read','readonly','max_rows_to_transfer','max_rows_in_distinct','max_memory_usage','max_memory_usage_for_user','allow_experimental_data_skipping_indices']\r\nSettings.Values:      ['48','1','64','0','1','0','1','1000000000000','1000000000000','600000000000','1000000000000','600','200','0','1000000000000','1000000000000','68719476736','68719476736','1']\r\n\r\n2 rows in set. Elapsed: 0.444 sec. Processed 25.40 million rows, 1.14 GB (57.27 million rows/s., 2.58 GB/s.)\r\n\r\n```\r\n\r\n\r\n\r\n```sql\r\nSELECT\r\n    pe.Names,\r\n    pe.Values\r\nFROM system.query_log_all\r\nARRAY JOIN ProfileEvents AS pe\r\nWHERE (event_date = '2020-03-31') AND (type = 2) AND (query_id = '5b6eda08-51a8-4b90-b1f2-27ac6cfcb14f')\r\n\r\n\u250c\u2500pe.Names\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500pe.Values\u2500\u2510\r\n\u2502 Query                                   \u2502         1 \u2502\r\n\u2502 InsertQuery                             \u2502         1 \u2502\r\n\u2502 FileOpen                                \u2502        90 \u2502\r\n\u2502 WriteBufferFromFileDescriptorWrite      \u2502       114 \u2502\r\n\u2502 WriteBufferFromFileDescriptorWriteBytes \u2502  30593676 \u2502\r\n\u2502 IOBufferAllocs                          \u2502       263 \u2502\r\n\u2502 IOBufferAllocBytes                      \u2502  91746153 \u2502\r\n\u2502 ArenaAllocChunks                        \u2502         2 \u2502\r\n\u2502 ArenaAllocBytes                         \u2502      8192 \u2502\r\n\u2502 FunctionExecute                         \u2502        22 \u2502\r\n\u2502 CreatedWriteBufferOrdinary              \u2502        42 \u2502\r\n\u2502 DiskWriteElapsedMicroseconds            \u2502     50421 \u2502\r\n\u2502 NetworkReceiveElapsedMicroseconds       \u2502    652895 \u2502\r\n\u2502 NetworkSendElapsedMicroseconds          \u2502        11 \u2502\r\n\u2502 InsertedRows                            \u2502     28950 \u2502\r\n\u2502 InsertedBytes                           \u2502  95706647 \u2502\r\n\u2502 MergeTreeDataWriterRows                 \u2502     28950 \u2502\r\n\u2502 MergeTreeDataWriterUncompressedBytes    \u2502 103371082 \u2502\r\n\u2502 MergeTreeDataWriterCompressedBytes      \u2502  30589926 \u2502\r\n\u2502 MergeTreeDataWriterBlocks               \u2502         1 \u2502\r\n\u2502 ContextLock                             \u2502         7 \u2502\r\n\u2502 RWLockAcquiredReadLocks                 \u2502         2 \u2502\r\n\u2502 RealTimeMicroseconds                    \u2502   9191763 \u2502\r\n\u2502 UserTimeMicroseconds                    \u2502    775680 \u2502\r\n\u2502 SystemTimeMicroseconds                  \u2502    519470 \u2502\r\n\u2502 SoftPageFaults                          \u2502     80599 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n\r\n\r\n\r\nSELECT\r\n    pe.Names,\r\n    pe.Values / 1000000\r\nFROM system.query_log_all\r\nARRAY JOIN ProfileEvents AS pe\r\nWHERE (event_date = '2020-03-31') AND (type = 2) AND (query_id = '5b6eda08-51a8-4b90-b1f2-27ac6cfcb14f') AND (pe.Names LIKE '%seconds%')\r\n\r\n\u250c\u2500pe.Names\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500divide(pe.Values, 1000000)\u2500\u2510\r\n\u2502 DiskWriteElapsedMicroseconds      \u2502                   0.050421 \u2502\r\n\u2502 NetworkReceiveElapsedMicroseconds \u2502                   0.652895 \u2502\r\n\u2502 NetworkSendElapsedMicroseconds    \u2502                   0.000011 \u2502\r\n\u2502 RealTimeMicroseconds              \u2502                   9.191763 \u2502\r\n\u2502 UserTimeMicroseconds              \u2502                    0.77568 \u2502\r\n\u2502 SystemTimeMicroseconds            \u2502                    0.51947 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n```\r\n\r\n- It seems more info should be recorded, like waiting for something.\n",
  "hints_text": "I confirm, the value of the `NetworkReceiveElapsedMicroseconds` does not include the time spent waiting data from the client.\n`system.trace_log` helps:\r\n\r\n```\r\nmilovidov@milovidov-desktop:~/work/ClickHouse$ seq 1 1000 | pv --rate-limit 10 | clickhouse-client --query_profiler_real_time_period_ns 1000000 --query \"INSERT INTO t FORMAT TSV\" \r\n^C00 B 0:00:20 [10,1 B/s] [                                                                                      <=>                                                                                                                                 ]\r\n\r\nmilovidov@milovidov-desktop:~/work/ClickHouse$ clickhouse-client \r\nClickHouse client version 21.7.1.1.\r\nConnecting to localhost:9000 as user default.\r\nConnected to ClickHouse server version 21.7.1 revision 54449.\r\n\r\nmilovidov-desktop :) SELECT\u3000    count(),\u3000    arrayStringConcat(arrayMap(x -> concat(demangle(addressToSymbol(x)), '\\n    ', addressToLine(x)), trace), '\\n') AS sym\u3000FROM system.trace_log\u3000WHERE (query_id = 'cd6ac254-5932-4cf5-89d3-2b82017f6a8f') AND (event_date = today())\u3000GROUP BY trace\u3000ORDER BY count() DESC\u3000LIMIT 10\r\n\r\nSELECT\r\n    count(),\r\n    arrayStringConcat(arrayMap(x -> concat(demangle(addressToSymbol(x)), '\\n    ', addressToLine(x)), trace), '\\n') AS sym\r\nFROM system.trace_log\r\nWHERE (query_id = 'cd6ac254-5932-4cf5-89d3-2b82017f6a8f') AND (event_date = today())\r\nGROUP BY trace\r\nORDER BY count() DESC\r\nLIMIT 10\r\n\r\nQuery id: 851a3d57-899a-457e-b5e0-159fc87e555f\r\n\r\n\u250c\u2500count()\u2500\u252c\u2500sym\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   20374 \u2502 \r\n    /home/milovidov/work/ClickHouse/build/../base/glibc-compatibility/musl/x86_64/syscall.s:14\r\nepoll_wait\r\n    /home/milovidov/work/ClickHouse/build/../base/glibc-compatibility/musl/epoll.c:29\r\nPoco::Net::SocketImpl::pollImpl(Poco::Timespan&, int)\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Net/src/SocketImpl.cpp:0\r\nPoco::Net::SocketImpl::poll(Poco::Timespan const&, int)\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Net/src/SocketImpl.cpp:587\r\nDB::ReadBufferFromPocoSocket::poll(unsigned long) const\r\n    /home/milovidov/work/ClickHouse/build/../src/IO/ReadBufferFromPocoSocket.cpp:79\r\nDB::TCPHandler::readDataNext(unsigned long, long)\r\n    /home/milovidov/work/ClickHouse/build/../src/Server/TCPHandler.cpp:485\r\nDB::TCPHandler::processInsertQuery(DB::Settings const&)\r\n    /home/milovidov/work/ClickHouse/build/../src/Server/TCPHandler.cpp:541\r\nDB::TCPHandler::runImpl()\r\n    /home/milovidov/work/ClickHouse/build/../contrib/libcxx/include/functional:2236\r\nDB::TCPHandler::run()\r\n    /home/milovidov/work/ClickHouse/build/../src/Server/TCPHandler.cpp:1624\r\nPoco::Net::TCPServerConnection::start()\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Net/src/TCPServerConnection.cpp:57\r\nPoco::Net::TCPServerDispatcher::run()\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Net/src/TCPServerDispatcher.cpp:114\r\nPoco::PooledThread::run()\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Foundation/include/Poco/ScopedLock.h:36\r\nPoco::ThreadImpl::runnableEntry(void*)\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156\r\nstart_thread\r\n    /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n__clone\r\n    /usr/lib/x86_64-linux-gnu/libc-2.31.so \u2502\r\n\u2502       1 \u2502 DB::AddingDefaultBlockOutputStream::getHeader() const\r\n    /home/milovidov/work/ClickHouse/build/../src/DataStreams/AddingDefaultBlockOutputStream.h:33\r\nDB::InterpreterInsertQuery::execute()\r\n    /home/milovidov/work/ClickHouse/build/../src/Interpreters/InterpreterInsertQuery.cpp:0\r\nDB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*)\r\n    /home/milovidov/work/ClickHouse/build/../src/Interpreters/executeQuery.cpp:0\r\nDB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, bool)\r\n    /home/milovidov/work/ClickHouse/build/../src/Interpreters/executeQuery.cpp:933\r\nDB::TCPHandler::runImpl()\r\n    /home/milovidov/work/ClickHouse/build/../src/Server/TCPHandler.cpp:0\r\nDB::TCPHandler::run()\r\n    /home/milovidov/work/ClickHouse/build/../src/Server/TCPHandler.cpp:1624\r\nPoco::Net::TCPServerConnection::start()\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Net/src/TCPServerConnection.cpp:57\r\nPoco::Net::TCPServerDispatcher::run()\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Net/src/TCPServerDispatcher.cpp:114\r\nPoco::PooledThread::run()\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Foundation/include/Poco/ScopedLock.h:36\r\nPoco::ThreadImpl::runnableEntry(void*)\r\n    /home/milovidov/work/ClickHouse/build/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156\r\nstart_thread\r\n    /usr/lib/x86_64-linux-gnu/libpthread-2.31.so\r\n__clone\r\n    /usr/lib/x86_64-linux-gnu/libc-2.31.so \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n2 rows in set. Elapsed: 0 sec. Processed 20.84 thousand rows, 3.57 MB (1.04 million rows/s., 177.75 MB/s.)\r\n```",
  "created_at": "2021-06-22T20:22:54Z",
  "modified_files": [
    "src/IO/ReadBufferFromPocoSocket.cpp"
  ],
  "modified_test_files": [
    "docker/test/base/Dockerfile",
    "docker/test/fasttest/run.sh",
    "b/tests/queries/0_stateless/01923_network_receive_time_metric_insert.reference",
    "b/tests/queries/0_stateless/01923_network_receive_time_metric_insert.sh"
  ]
}