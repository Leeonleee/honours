diff --git a/tests/queries/0_stateless/02886_missed_json_subcolumns.reference b/tests/queries/0_stateless/02886_missed_json_subcolumns.reference
new file mode 100644
index 000000000000..d2bb7e33e7ec
--- /dev/null
+++ b/tests/queries/0_stateless/02886_missed_json_subcolumns.reference
@@ -0,0 +1,7 @@
+4	1
+{"id":"1","n":"aaa","obj.k4":null}
+{"id":"2","n":"bbb","obj.k4":null}
+{"id":"3","n":"ccc","obj.k4":null}
+{"id":"4","n":"ddd","obj.k4":null}
+4	1
+4	1
diff --git a/tests/queries/0_stateless/02886_missed_json_subcolumns.sql b/tests/queries/0_stateless/02886_missed_json_subcolumns.sql
new file mode 100644
index 000000000000..90a80509e99d
--- /dev/null
+++ b/tests/queries/0_stateless/02886_missed_json_subcolumns.sql
@@ -0,0 +1,29 @@
+DROP TABLE IF EXISTS t_mutations_subcolumns;
+
+SET allow_experimental_object_type = 1;
+
+CREATE TABLE t_missed_subcolumns (id UInt64, n String, obj Object(Nullable('json')))
+ENGINE = MergeTree ORDER BY id;
+
+INSERT INTO t_missed_subcolumns VALUES (1, 'aaa', '{"k1": {"k2": "foo"}, "k3": 5}');
+INSERT INTO t_missed_subcolumns VALUES (2, 'bbb', '{"k1": {"k2": "fee"}, "k3": 4}');
+INSERT INTO t_missed_subcolumns VALUES (3, 'ccc', '{"k1": {"k2": "foo", "k4": "baz"}, "k3": 4}');
+INSERT INTO t_missed_subcolumns VALUES (4, 'ddd', '{"k1": {"k2": "foo"}, "k3": 4}');
+
+OPTIMIZE TABLE t_missed_subcolumns FINAL;
+
+SELECT count(), min(id) FROM t_missed_subcolumns;
+
+SELECT * FROM t_missed_subcolumns WHERE obj.k4 = 5 ORDER BY id FORMAT JSONEachRow; 
+
+SELECT * FROM t_missed_subcolumns WHERE obj.k1.k3 = 'fee' ORDER BY id FORMAT JSONEachRow;
+
+SELECT id, n, obj.k4 FROM t_missed_subcolumns ORDER BY id FORMAT JSONEachRow;
+
+ALTER TABLE t_missed_subcolumns DELETE WHERE obj.k4 = 5;
+SELECT count(), min(id) FROM t_missed_subcolumns;
+
+DELETE FROM t_missed_subcolumns WHERE obj.k1.k3 = 'fee';
+SELECT count(), min(id) FROM t_missed_subcolumns;
+
+DROP TABLE IF EXISTS t_missed_subcolumns;
diff --git a/tests/queries/0_stateless/02887_mutations_subcolumns.reference b/tests/queries/0_stateless/02887_mutations_subcolumns.reference
new file mode 100644
index 000000000000..c2d6cbbd2253
--- /dev/null
+++ b/tests/queries/0_stateless/02887_mutations_subcolumns.reference
@@ -0,0 +1,10 @@
+6	1
+5	2
+4	3
+3	4
+4	ttt
+5	ttt
+6	ttt
+{"a":"1","obj":{"k1":1,"k2":null,"k3":null}}
+{"a":"3","obj":{"k1":null,"k2":null,"k3":1}}
+{"a":"1","obj":{"k1":1,"k2":null,"k3":null}}
diff --git a/tests/queries/0_stateless/02887_mutations_subcolumns.sql b/tests/queries/0_stateless/02887_mutations_subcolumns.sql
new file mode 100644
index 000000000000..a01158e1b063
--- /dev/null
+++ b/tests/queries/0_stateless/02887_mutations_subcolumns.sql
@@ -0,0 +1,48 @@
+DROP TABLE IF EXISTS t_mutations_subcolumns;
+
+SET allow_experimental_object_type = 1;
+
+CREATE TABLE t_mutations_subcolumns (id UInt64, n String, obj Object(Nullable('json')))
+ENGINE = MergeTree ORDER BY id;
+
+INSERT INTO t_mutations_subcolumns VALUES (1, 'aaa', '{"k1": {"k2": "foo"}, "k3": 5}');
+INSERT INTO t_mutations_subcolumns VALUES (2, 'bbb', '{"k1": {"k2": "fee"}, "k3": 4}');
+INSERT INTO t_mutations_subcolumns VALUES (3, 'ccc', '{"k1": {"k2": "foo", "k4": "baz"}, "k3": 4}');
+INSERT INTO t_mutations_subcolumns VALUES (4, 'ddd', '{"k1": {"k2": "foo"}, "k3": 4}');
+INSERT INTO t_mutations_subcolumns VALUES (5, 'eee', '{"k1": {"k2": "foo"}, "k3": 4}');
+INSERT INTO t_mutations_subcolumns VALUES (6, 'fff', '{"k1": {"k2": "foo"}, "k3": 4}');
+
+OPTIMIZE TABLE t_mutations_subcolumns FINAL;
+
+SELECT count(), min(id) FROM t_mutations_subcolumns;
+
+SET mutations_sync = 2;
+
+ALTER TABLE t_mutations_subcolumns DELETE WHERE obj.k3 = 5;
+SELECT count(), min(id) FROM t_mutations_subcolumns;  
+
+DELETE FROM t_mutations_subcolumns WHERE obj.k1.k2 = 'fee';
+SELECT count(), min(id) FROM t_mutations_subcolumns;
+
+ALTER TABLE t_mutations_subcolumns DELETE WHERE obj.k1 = ('foo', 'baz');
+SELECT count(), min(id) FROM t_mutations_subcolumns;
+
+ALTER TABLE t_mutations_subcolumns UPDATE n = 'ttt' WHERE obj.k1.k2 = 'foo';
+SELECT id, n FROM t_mutations_subcolumns;
+
+DROP TABLE IF EXISTS t_mutations_subcolumns;
+
+CREATE TABLE t_mutations_subcolumns (a UInt64, obj Object(Nullable('json')))
+ENGINE = MergeTree ORDER BY a PARTITION BY a;
+
+INSERT INTO t_mutations_subcolumns VALUES (1, '{"k1": 1}');
+INSERT INTO t_mutations_subcolumns VALUES (2, '{"k2": 1}');
+INSERT INTO t_mutations_subcolumns VALUES (3, '{"k3": 1}');
+
+ALTER TABLE t_mutations_subcolumns DELETE WHERE obj.k2 = 1;
+SELECT * FROM t_mutations_subcolumns ORDER BY a FORMAT JSONEachRow;
+
+ALTER TABLE t_mutations_subcolumns DELETE WHERE isNull(obj.k1);
+SELECT * FROM t_mutations_subcolumns ORDER BY a FORMAT JSONEachRow;
+
+DROP TABLE t_mutations_subcolumns;
