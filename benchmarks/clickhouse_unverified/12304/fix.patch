diff --git a/src/Storages/TTLDescription.cpp b/src/Storages/TTLDescription.cpp
index 6e0d323e8a05..2c29958250c6 100644
--- a/src/Storages/TTLDescription.cpp
+++ b/src/Storages/TTLDescription.cpp
@@ -272,6 +272,29 @@ TTLDescription TTLDescription::getTTLFromAST(
 }
 
 
+TTLTableDescription::TTLTableDescription(const TTLTableDescription & other)
+ : definition_ast(other.definition_ast ? other.definition_ast->clone() : nullptr)
+ , rows_ttl(other.rows_ttl)
+ , move_ttl(other.move_ttl)
+{
+}
+
+TTLTableDescription & TTLTableDescription::operator=(const TTLTableDescription & other)
+{
+    if (&other == this)
+        return *this;
+
+    if (other.definition_ast)
+        definition_ast = other.definition_ast->clone();
+    else
+        definition_ast.reset();
+
+    rows_ttl = other.rows_ttl;
+    move_ttl = other.move_ttl;
+
+    return *this;
+}
+
 TTLTableDescription TTLTableDescription::getTTLForTableFromAST(
     const ASTPtr & definition_ast,
     const ColumnsDescription & columns,
diff --git a/src/Storages/TTLDescription.h b/src/Storages/TTLDescription.h
index 906cfb0e6759..ab93967f1146 100644
--- a/src/Storages/TTLDescription.h
+++ b/src/Storages/TTLDescription.h
@@ -102,6 +102,10 @@ struct TTLTableDescription
     /// Moving data TTL (to other disks or volumes)
     TTLDescriptions move_ttl;
 
+    TTLTableDescription() = default;
+    TTLTableDescription(const TTLTableDescription & other);
+    TTLTableDescription & operator=(const TTLTableDescription & other);
+
     static TTLTableDescription getTTLForTableFromAST(
         const ASTPtr & definition_ast, const ColumnsDescription & columns, const Context & context, const KeyDescription & primary_key);
 };
