You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error on merge algorithm with reverse key and nested field
**Describe the bug**
The reverse sort order for MergeTree tables has an issue with Nested fields on tables that require transformations during merge, followed by the `FINAL` keyword.

**How to reproduce**
With the setup from #71095, run:

```sql
CREATE TABLE t0 (c0 Nested(c1 Int)) ENGINE = SummingMergeTree() ORDER BY (c0.c1 DESC) SETTINGS allow_experimental_reverse_key = 1;
INSERT INTO TABLE t0 (c0.c1) VALUES ([1]), ([2]);
SELECT 1 FROM t0 FINAL; --Logical error
```
Stack trace:
```
<Fatal> : Logical error: 'parts_ranges[0].event == PartsRangesIterator::EventType::RangeStart'.
<Fatal> : Stack trace (when copying this message, always include the lines below):

0. src/Common/StackTrace.cpp:381: StackTrace::tryCapture() @ 0x0000000025a9ed77
1. src/Common/StackTrace.h:48: DB::abortOnFailedAssertion(String const&) @ 0x0000000025a54d17
2. src/Processors/QueryPlan/PartsSplitter.cpp:480: (anonymous namespace)::splitPartsRanges(DB::RangesInDataParts, std::shared_ptr<Poco::Logger> const&) @ 0x0000000035bbd813
3. src/Processors/QueryPlan/PartsSplitter.cpp:908: DB::splitPartsWithRangesByPrimaryKey(DB::KeyDescription const&, std::shared_ptr<DB::ExpressionActions>, DB::RangesInDataParts, unsigned long, std::shared_ptr<DB::Context const>, std::function<DB::Pipe (DB::RangesInDataParts)>&&, bool, bool) @ 0x0000000035bb80e9
4. src/Processors/QueryPlan/ReadFromMergeTree.cpp:1355: DB::ReadFromMergeTree::spreadMarkRangesAmongStreamsFinal(DB::RangesInDataParts&&, unsigned long, std::vector<String, std::allocator<String>> const&, std::vector<String, std::allocator<String>> const&, std::optional<DB::ActionsDAG>&) @ 0x0000000035b6a943
5. src/Processors/QueryPlan/ReadFromMergeTree.cpp:1992: DB::ReadFromMergeTree::spreadMarkRanges(DB::RangesInDataParts&&, unsigned long, DB::ReadFromMergeTree::AnalysisResult&, std::optional<DB::ActionsDAG>&) @ 0x0000000035b78bda
6. src/Processors/QueryPlan/ReadFromMergeTree.cpp:2094: DB::ReadFromMergeTree::initializePipeline(DB::QueryPipelineBuilder&, DB::BuildQueryPipelineSettings const&) @ 0x0000000035b7b1a6
7. src/Processors/QueryPlan/ISourceStep.cpp:20: DB::ISourceStep::updatePipeline(std::vector<std::unique_ptr<DB::QueryPipelineBuilder, std::default_delete<DB::QueryPipelineBuilder>>, std::allocator<std::unique_ptr<DB::QueryPipelineBuilder, std::default_delete<DB::QueryPipelineBuilder>>>>, DB::BuildQueryPipelineSettings const&) @ 0x0000000035b0987c
8. src/Processors/QueryPlan/QueryPlan.cpp:188: DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x0000000035b40f79
9. src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:261: DB::InterpreterSelectQueryAnalyzer::buildQueryPipeline() @ 0x0000000032132713
10. src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:228: DB::InterpreterSelectQueryAnalyzer::execute() @ 0x0000000032132306
11. src/Interpreters/executeQuery.cpp:1368: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x000000003262f243
12. src/Interpreters/executeQuery.cpp:1535: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x000000003262914e
13. src/Server/TCPHandler.cpp:656: DB::TCPHandler::runImpl() @ 0x00000000350e6afc
14. src/Server/TCPHandler.cpp:2603: DB::TCPHandler::run() @ 0x0000000035111c6e
15. base/poco/Net/src/TCPServerConnection.cpp:40: Poco::Net::TCPServerConnection::start() @ 0x0000000038c03922
16. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x0000000038c045f2
17. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x0000000038b61cb7
18. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000038b5d5ae
19. ? @ 0x00007ffff7ca1e2e
20. ? @ 0x00007ffff7d33a4c
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
