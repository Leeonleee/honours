diff --git a/tests/queries/0_stateless/00309_formats_case_insensitive.reference b/tests/queries/0_stateless/00309_formats_case_insensitive.reference
new file mode 100644
index 000000000000..b74d7002833e
--- /dev/null
+++ b/tests/queries/0_stateless/00309_formats_case_insensitive.reference
@@ -0,0 +1,95 @@
+-- test FORMAT clause --
+0	Hello & world
+1	Hello & world
+2	Hello & world
+0,"Hello & world"
+1,"Hello & world"
+2,"Hello & world"
+<?xml version='1.0' encoding='UTF-8' ?>
+<result>
+	<meta>
+		<columns>
+			<column>
+				<name>number</name>
+				<type>UInt64</type>
+			</column>
+			<column>
+				<name>'Hello &amp; world'</name>
+				<type>String</type>
+			</column>
+		</columns>
+	</meta>
+	<data>
+		<row>
+			<number>0</number>
+			<field>Hello &amp; world</field>
+		</row>
+		<row>
+			<number>1</number>
+			<field>Hello &amp; world</field>
+		</row>
+		<row>
+			<number>2</number>
+			<field>Hello &amp; world</field>
+		</row>
+	</data>
+	<rows>3</rows>
+</result>
+{
+	"meta":
+	[
+		{
+			"name": "number",
+			"type": "UInt64"
+		},
+		{
+			"name": "'Hello & world'",
+			"type": "String"
+		}
+	],
+
+	"data":
+	[
+		{
+			"number": "0",
+			"'Hello & world'": "Hello & world"
+		},
+		{
+			"number": "1",
+			"'Hello & world'": "Hello & world"
+		},
+		{
+			"number": "2",
+			"'Hello & world'": "Hello & world"
+		}
+	],
+
+	"rows": 3
+}
+Row 1:
+──────
+number:          0
+'Hello & world': Hello & world
+
+Row 2:
+──────
+number:          1
+'Hello & world': Hello & world
+
+Row 3:
+──────
+number:          2
+'Hello & world': Hello & world
+-- test table function --
+0	Hello & world
+1	Hello & world
+2	Hello & world
+0	Hello & world
+1	Hello & world
+2	Hello & world
+-- test other function --
+0	Hello & world
+-- test table engine --
+0	Hello & world
+1	Hello & world
+2	Hello & world
diff --git a/tests/queries/0_stateless/00309_formats_case_insensitive.sql b/tests/queries/0_stateless/00309_formats_case_insensitive.sql
new file mode 100644
index 000000000000..b4037ed98619
--- /dev/null
+++ b/tests/queries/0_stateless/00309_formats_case_insensitive.sql
@@ -0,0 +1,23 @@
+SELECT '-- test FORMAT clause --';
+SET output_format_write_statistics = 0;
+SELECT number, 'Hello & world' FROM numbers(3) FORMAT Tsv;
+SELECT number, 'Hello & world' FROM numbers(3) FORMAT csv;
+SELECT number, 'Hello & world' FROM numbers(3) FORMAT xMl;
+SELECT number, 'Hello & world' FROM numbers(3) FORMAT JsonStrINGs;
+SELECT number, 'Hello & world' FROM numbers(3) FORMAT VERTICAL;
+
+SELECT '-- test table function --';
+INSERT INTO FUNCTION file('data_00309_formats_case_insensitive', 'Csv') SELECT number, 'Hello & world' FROM numbers(3) SETTINGS engine_file_truncate_on_insert=1;
+SELECT * FROM file('data_00309_formats_case_insensitive', 'Csv');
+
+INSERT INTO FUNCTION file('data_00309_formats_case_insensitive.cSv') SELECT number, 'Hello & world' FROM numbers(3) SETTINGS engine_file_truncate_on_insert=1;
+SELECT * FROM file('data_00309_formats_case_insensitive.cSv');
+
+SELECT '-- test other function --';
+SELECT * FROM format(cSv, '0,Hello & world');
+
+SELECT '-- test table engine --';
+DROP TABLE IF EXISTS test_00309_formats_case_insensitive;
+CREATE TABLE test_00309_formats_case_insensitive(a Int64, b String) ENGINE=File(Csv);
+INSERT INTO test_00309_formats_case_insensitive SELECT number, 'Hello & world' FROM numbers(3);
+SELECT * FROM test_00309_formats_case_insensitive;
