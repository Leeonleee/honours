You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Experimental quantile sketch based on bfloat16 histogram.
`bfloat16` is a 16-bit floating point data type that is the same as the corresponding most significant 16 bits of the `float`.
https://en.wikipedia.org/wiki/Bfloat16_floating-point_format

To calculate quantile, simply convert input value to 16 bit (convert to float, then take the most significant 16 bits), and calculate the histogram of these values.

Hash table is the preferred way to store histogram, because the number of distinct values is small:
```
SELECT uniq(bfloat)
FROM 
(
    SELECT
        number,
        toFloat32(number) AS f,
        bitShiftRight(bitAnd(reinterpretAsUInt32(reinterpretAsFixedString(f)), 4294901760) AS cut, 16),
        reinterpretAsFloat32(reinterpretAsFixedString(cut)) AS bfloat
    FROM numbers(100000000)
)

┌─uniq(bfloat)─┐
│         2623 │
└──────────────┘
```
(when increasing the range of values 1000 times, the number of distinct bfloat16 values increases just by 1280).

Then calculate quantile from the histogram.

This sketch is very simple and rough. Its relative precision is constant 1 / 256 = 0.390625%.

Linear array of values can be used if the number of values is very small, similar to `QuantileTimingTiny`.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
