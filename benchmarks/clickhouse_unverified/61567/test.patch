diff --git a/tests/queries/0_stateless/02516_projections_and_context.reference b/tests/queries/0_stateless/02516_projections_and_context.reference
index 6ed281c757a9..e69de29bb2d1 100644
--- a/tests/queries/0_stateless/02516_projections_and_context.reference
+++ b/tests/queries/0_stateless/02516_projections_and_context.reference
@@ -1,2 +0,0 @@
-1
-1
diff --git a/tests/queries/0_stateless/02516_projections_and_context.sql b/tests/queries/0_stateless/02516_projections_and_context.sql
index 2b659eafabc8..334544eb4fa0 100644
--- a/tests/queries/0_stateless/02516_projections_and_context.sql
+++ b/tests/queries/0_stateless/02516_projections_and_context.sql
@@ -5,6 +5,6 @@ set allow_experimental_analyzer = 0;
 SELECT count() FROM test1__fuzz_37 GROUP BY dictHas(NULL, (dictHas(NULL, (('', materialize(NULL)), materialize(NULL))), 'KeyKey')), dictHas('test_dictionary', tuple(materialize('Ke\0'))), tuple(dictHas(NULL, (tuple('Ke\0Ke\0Ke\0Ke\0Ke\0Ke\0\0\0\0Ke\0'), materialize(NULL)))), 'test_dicti\0nary', (('', materialize(NULL)), dictHas(NULL, (dictHas(NULL, tuple(materialize(NULL))), 'KeyKeyKeyKeyKeyKeyKeyKey')), materialize(NULL)); -- { serverError BAD_ARGUMENTS }
 SELECT count() FROM test1__fuzz_37 GROUP BY dictHas('non_existing_dictionary', materialize('a')); -- { serverError BAD_ARGUMENTS }
 set allow_experimental_analyzer = 1;
-SELECT count() FROM test1__fuzz_37 GROUP BY dictHas(NULL, (dictHas(NULL, (('', materialize(NULL)), materialize(NULL))), 'KeyKey')), dictHas('test_dictionary', tuple(materialize('Ke\0'))), tuple(dictHas(NULL, (tuple('Ke\0Ke\0Ke\0Ke\0Ke\0Ke\0\0\0\0Ke\0'), materialize(NULL)))), 'test_dicti\0nary', (('', materialize(NULL)), dictHas(NULL, (dictHas(NULL, tuple(materialize(NULL))), 'KeyKeyKeyKeyKeyKeyKeyKey')), materialize(NULL));
-SELECT count() FROM test1__fuzz_37 GROUP BY dictHas('non_existing_dictionary', materialize('a'));
+SELECT count() FROM test1__fuzz_37 GROUP BY dictHas(NULL, (dictHas(NULL, (('', materialize(NULL)), materialize(NULL))), 'KeyKey')), dictHas('test_dictionary', tuple(materialize('Ke\0'))), tuple(dictHas(NULL, (tuple('Ke\0Ke\0Ke\0Ke\0Ke\0Ke\0\0\0\0Ke\0'), materialize(NULL)))), 'test_dicti\0nary', (('', materialize(NULL)), dictHas(NULL, (dictHas(NULL, tuple(materialize(NULL))), 'KeyKeyKeyKeyKeyKeyKeyKey')), materialize(NULL)); -- { serverError BAD_ARGUMENTS }
+SELECT count() FROM test1__fuzz_37 GROUP BY dictHas('non_existing_dictionary', materialize('a')); -- { serverError BAD_ARGUMENTS }
 DROP TABLE test1__fuzz_37;
diff --git a/tests/queries/0_stateless/03013_group_by_use_nulls_with_materialize_and_analyzer.reference b/tests/queries/0_stateless/03013_group_by_use_nulls_with_materialize_and_analyzer.reference
new file mode 100644
index 000000000000..2c9c098cea04
--- /dev/null
+++ b/tests/queries/0_stateless/03013_group_by_use_nulls_with_materialize_and_analyzer.reference
@@ -0,0 +1,10 @@
+6
+6
+3
+\N
+0
+\N
+0
+\N
+0
+\N
diff --git a/tests/queries/0_stateless/03013_group_by_use_nulls_with_materialize_and_analyzer.sql b/tests/queries/0_stateless/03013_group_by_use_nulls_with_materialize_and_analyzer.sql
new file mode 100644
index 000000000000..b15593b2abd8
--- /dev/null
+++ b/tests/queries/0_stateless/03013_group_by_use_nulls_with_materialize_and_analyzer.sql
@@ -0,0 +1,11 @@
+set allow_experimental_analyzer = 1;
+set group_by_use_nulls = 1;
+set optimize_group_by_function_keys = 1;
+set optimize_injective_functions_in_group_by = 1;
+
+SELECT 3 + 3 from numbers(10) GROUP BY GROUPING SETS (('str'), (3 + 3)) order by all;
+SELECT materialize(3) from numbers(10) GROUP BY GROUPING SETS (('str'), (materialize(3))) order by all;
+SELECT ignore(3) from numbers(10) GROUP BY GROUPING SETS (('str'), (ignore(3))) order by all;
+SELECT materialize(ignore(3)) from numbers(10) GROUP BY GROUPING SETS (('str'), (materialize(ignore(3)))) order by all;
+SELECT ignore(materialize(3)) from numbers(10) GROUP BY GROUPING SETS (('str'), (ignore(materialize(3)))) order by all;
+
diff --git a/tests/queries/0_stateless/03014_group_by_use_nulls_injective_functions_and_analyzer.reference b/tests/queries/0_stateless/03014_group_by_use_nulls_injective_functions_and_analyzer.reference
new file mode 100644
index 000000000000..e90d21df61ff
--- /dev/null
+++ b/tests/queries/0_stateless/03014_group_by_use_nulls_injective_functions_and_analyzer.reference
@@ -0,0 +1,24 @@
+3
+4
+5
+6
+7
+8
+9
+10
+11
+12
+\N
+(((0)))
+(((0)))
+(((1)))
+(((2)))
+(((3)))
+(((4)))
+(((5)))
+(((6)))
+(((7)))
+(((8)))
+(((9)))
+6
+6
diff --git a/tests/queries/0_stateless/03014_group_by_use_nulls_injective_functions_and_analyzer.sql b/tests/queries/0_stateless/03014_group_by_use_nulls_injective_functions_and_analyzer.sql
new file mode 100644
index 000000000000..e7ea964b8768
--- /dev/null
+++ b/tests/queries/0_stateless/03014_group_by_use_nulls_injective_functions_and_analyzer.sql
@@ -0,0 +1,5 @@
+set allow_experimental_analyzer=1, group_by_use_nulls=1, optimize_injective_functions_in_group_by=1;
+SELECT bitNot(bitNot(number)) + 3 FROM numbers(10) GROUP BY GROUPING SETS (('str', bitNot(bitNot(number))), ('str')) order by all;
+SELECT tuple(tuple(tuple(number))) FROM numbers(10) GROUP BY GROUPING SETS (('str', tuple(tuple(number))), ('str')) order by all;
+SELECT materialize(3) + 3 FROM numbers(10) GROUP BY GROUPING SETS (('str', materialize(materialize(3))), ('str')) order by all;
+
diff --git a/tests/queries/0_stateless/03023_analyzer_optimize_group_by_function_keys_with_nulls.reference b/tests/queries/0_stateless/03023_analyzer_optimize_group_by_function_keys_with_nulls.reference
new file mode 100644
index 000000000000..4521d575ff3e
--- /dev/null
+++ b/tests/queries/0_stateless/03023_analyzer_optimize_group_by_function_keys_with_nulls.reference
@@ -0,0 +1,10 @@
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
diff --git a/tests/queries/0_stateless/03023_analyzer_optimize_group_by_function_keys_with_nulls.sql b/tests/queries/0_stateless/03023_analyzer_optimize_group_by_function_keys_with_nulls.sql
new file mode 100644
index 000000000000..f0b60caca363
--- /dev/null
+++ b/tests/queries/0_stateless/03023_analyzer_optimize_group_by_function_keys_with_nulls.sql
@@ -0,0 +1,5 @@
+set allow_experimental_analyzer=1;
+set group_by_use_nulls=1;
+set optimize_group_by_function_keys=1;
+SELECT ignore(toLowCardinality(number)) FROM numbers(10) GROUP BY GROUPING SETS ((ignore(toLowCardinality(number)), toLowCardinality(number)));
+
