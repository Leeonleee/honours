You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Function 'has' works incorrectly with 'Nullable' columns
**Describe what's wrong**

Function `has` works incorrectly when the second argument is a `nullable` column.

It may return 1 for expression `has([0, 1], a)`, when `a` is `Null`.

It looks like that for nullable columns the function uses an `underlying` column (`assumeNotNullable`), and the null bitmap is ignored.

(the result for second query is wrong)
https://fiddle.clickhouse.com/d508fc65-6e05-495f-a923-a142f6b906b7

**Does it reproduce on the most recent release?**

Yes


**How to reproduce**

* Which ClickHouse server version to use
23.8/24.1/latest

* `CREATE TABLE` statements for all tables involved
```sql
CREATE TABLE test (a Nullable(Int64)) ENGINE=Memory;
```
* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary
```sql
INSERT INTO test VALUES (1), (Null);
```
* Queries to run that lead to an unexpected result
```sql
SELECT a, has([0, 1], a) as b FROM test;

-----
1	1
\N	1
-----
```

**Expected behavior**
`has` should return 0 if the value is `Null` and `Null` is missing in the array
```
-----
1	1
\N	0
-----
```

> A clear and concise description of what you expected to happen.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
