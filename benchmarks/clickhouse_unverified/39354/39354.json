{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 39354,
  "instance_id": "ClickHouse__ClickHouse-39354",
  "issue_numbers": [
    "24892",
    "38741"
  ],
  "base_commit": "a0693c3a845e219a3d8e82efde3439701e8469d4",
  "patch": "diff --git a/src/Interpreters/ExpressionAnalyzer.cpp b/src/Interpreters/ExpressionAnalyzer.cpp\nindex 105d46eed1fa..25ef15315d16 100644\n--- a/src/Interpreters/ExpressionAnalyzer.cpp\n+++ b/src/Interpreters/ExpressionAnalyzer.cpp\n@@ -1988,6 +1988,23 @@ ExpressionAnalysisResult::ExpressionAnalysisResult(\n                 }\n             }\n \n+            // Here we need to set order by expression as required output to avoid\n+            // their removal from the ActionsDAG.\n+            const auto * select_query = query_analyzer.getSelectQuery();\n+            if (select_query->orderBy())\n+            {\n+                for (auto & child : select_query->orderBy()->children)\n+                {\n+                    auto * ast = child->as<ASTOrderByElement>();\n+                    ASTPtr order_expression = ast->children.at(0);\n+                    if (auto * function = order_expression->as<ASTFunction>();\n+                        function && (function->is_window_function || function->compute_after_window_functions))\n+                        continue;\n+                    const String & column_name = order_expression->getColumnName();\n+                    chain.getLastStep().addRequiredOutput(column_name);\n+                }\n+            }\n+\n             before_window = chain.getLastActions();\n             finalize_chain(chain);\n \n@@ -2007,7 +2024,6 @@ ExpressionAnalysisResult::ExpressionAnalysisResult(\n             // produced the expressions required to calculate window functions.\n             // They are not needed in the final SELECT result. Knowing the correct\n             // list of columns is important when we apply SELECT DISTINCT later.\n-            const auto * select_query = query_analyzer.getSelectQuery();\n             for (const auto & child : select_query->select()->children)\n             {\n                 step.addRequiredOutput(child->getColumnName());\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02366_window_function_order_by.reference b/tests/queries/0_stateless/02366_window_function_order_by.reference\nnew file mode 100644\nindex 000000000000..89f6c6c911a2\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_window_function_order_by.reference\n@@ -0,0 +1,37 @@\n+-- { echoOn }\n+SELECT groupArray(tuple(value)) OVER ()\n+FROM (select number value from numbers(10))\n+ORDER BY value ASC;\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]\n+SELECT count() OVER (ORDER BY number + 1) FROM numbers(10) ORDER BY number;\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+10\n+SELECT count() OVER (ORDER BY number + 1) + 1 as foo FROM numbers(10)\n+ORDER BY foo;\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+10\n+11\ndiff --git a/tests/queries/0_stateless/02366_window_function_order_by.sql b/tests/queries/0_stateless/02366_window_function_order_by.sql\nnew file mode 100644\nindex 000000000000..a3a02355cf71\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_window_function_order_by.sql\n@@ -0,0 +1,9 @@\n+-- { echoOn }\n+SELECT groupArray(tuple(value)) OVER ()\n+FROM (select number value from numbers(10))\n+ORDER BY value ASC;\n+\n+SELECT count() OVER (ORDER BY number + 1) FROM numbers(10) ORDER BY number;\n+\n+SELECT count() OVER (ORDER BY number + 1) + 1 as foo FROM numbers(10)\n+ORDER BY foo;\n",
  "problem_statement": "Window functions: Not found column number in block error when specifying ORDER BY that uses a column not mentioned in the SELECT\n**Describe the unexpected behaviour**\r\nNot found column number in block error when specifying ORDER BY that uses a column not mentioned in the SELECT.\r\n\r\n**How to reproduce**\r\n```\r\n:) select count() over (order by number + 1) from numbers(10) order by number\r\n\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column number in block. There are only columns: count() OVER (ORDER BY number + 1 ASC), plus(number, 1)\r\n```\r\n\r\n**Expected behavior**\r\nIt should work.\r\n\nNot found column value in block, with WF over tuple\n```sql\r\nSELECT groupArray(tuple(value)) OVER ()\r\nFROM (select number value from numbers(10))\r\nORDER BY value ASC;\r\n\r\nReceived exception from server (version 22.7.1):\r\nCode: 10. DB::Exception: Received from localhost:9000. \r\nDB::Exception: Not found column value in block. \r\nThere are only columns: groupArray(tuple(value)) OVER (), tuple(value). (NOT_FOUND_COLUMN_IN_BLOCK)\r\n```\r\n\r\nwithout tuple is OK\r\n```sql\r\nSELECT groupArray(value) OVER ()\r\nFROM (select number value from numbers(10))\r\nORDER BY value ASC;\r\n\u250c\u2500groupArray(value) OVER ()\u2500\u2510\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2502 [0,1,2,3,4,5,6,7,8,9]     \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n```sql\r\nSELECT value, groupArray(tuple(value)) OVER ()\r\nFROM (select number value from numbers(10))\r\nORDER BY value ASC;\r\n\u250c\u2500value\u2500\u252c\u2500groupArray(tuple(value)) OVER ()\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502     0 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     1 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     2 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     3 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     4 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     5 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     6 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     7 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     8 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2502     9 \u2502 [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)] \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "Another example,\r\n\r\n```\r\n                 3ms                      [clickhouse1] bash# echo -e \"select sum(salary) over (order by enroll_date desc range between 365 preceding and 365 preceding) AS sum, salary, enroll_date from empsalary order by empno FORMAT TabSeparatedWithNames\" | clickhouse client -n --allow_experimental_window_functions \"1\"\r\n                42ms                      [clickhouse1] Received exception from server (version 21.7.1):\r\n                42ms                      [clickhouse1] Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column empno in block. There are only columns: salary, enroll_date, sum(salary) OVER (ORDER BY enroll_date DESC RANGE BETWEEN 365 PRECEDING AND 365 PRECEDING).\r\n                49ms                      [clickhouse1] bash# echo $?\r\n```\nWorkaround: add the column from `ORDER BY` to `SELECT`.\r\n```\r\nselect number, count() over (order by number + 1) from numbers(10) order by number\r\n```\nThere could be another issue not related to tuples, but \r\n\r\n```sql\r\nSELECT (sum(a) * 100) / sum(sum(a)) OVER (PARTITION BY b) AS r\r\nFROM\r\n(\r\n    SELECT\r\n        1 AS a,\r\n        2 AS b\r\n    UNION ALL\r\n    SELECT\r\n        3 AS a,\r\n        4 AS b\r\n    UNION ALL\r\n    SELECT\r\n        5 AS a,\r\n        2 AS b\r\n) AS t\r\nGROUP BY b\r\n\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column multiply(sum(a), 100) in block. (NOT_FOUND_COLUMN_IN_BLOCK)\r\n```\r\n\r\nBut if you delete `* 100` then everything works fine\r\n\r\n```sql\r\nSELECT sum(a) / sum(sum(a)) OVER (PARTITION BY b) AS r\r\nFROM\r\n(\r\n    SELECT\r\n        1 AS a,\r\n        2 AS b\r\n    UNION ALL\r\n    SELECT\r\n        3 AS a,\r\n        4 AS b\r\n    UNION ALL\r\n    SELECT\r\n        5 AS a,\r\n        2 AS b\r\n) AS t\r\nGROUP BY b\r\n\r\nQuery id: 74d1b7b6-b3f6-48d4-b677-a2342905fafd\r\n\r\n\u250c\u2500r\u2500\u2510\r\n\u2502 1 \u2502\r\n\u2502 1 \u2502\r\n\u2514\u2500\u2500\u2500\u2518\r\n```\r\n\nThe problem here is related to ORDER BY clause. The following query works:\r\n```sql\r\nSELECT groupArray(tuple(value)) OVER ()\r\nFROM (select number value from numbers(10));\r\n```",
  "created_at": "2022-07-18T16:44:55Z",
  "modified_files": [
    "src/Interpreters/ExpressionAnalyzer.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02366_window_function_order_by.reference",
    "b/tests/queries/0_stateless/02366_window_function_order_by.sql"
  ]
}