diff --git a/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql
index 7234cee96e0e..505c406c2cca 100644
--- a/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql
+++ b/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql
@@ -12,7 +12,7 @@ DETACH TABLE rmt1;
 ATTACH TABLE rmt1;
 SHOW CREATE TABLE rmt1;
 
-CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('{default_path_test}{uuid}', '{default_name_test}') ORDER BY n;    -- { serverError 62 }
+CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('{default_path_test}{uuid}', '{default_name_test}') ORDER BY n;    -- { serverError 36 }
 CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('{default_path_test}test_01148', '{default_name_test}') ORDER BY n;
 SHOW CREATE TABLE rmt;
 RENAME TABLE rmt TO rmt2;   -- { serverError 48 }
@@ -24,7 +24,7 @@ SET distributed_ddl_output_mode='none';
 DROP DATABASE IF EXISTS test_01148_atomic;
 CREATE DATABASE test_01148_atomic ENGINE=Atomic;
 CREATE TABLE test_01148_atomic.rmt2 ON CLUSTER test_shard_localhost (n int, PRIMARY KEY n) ENGINE=ReplicatedMergeTree;
-CREATE TABLE test_01148_atomic.rmt3 AS test_01148_atomic.rmt2; -- { serverError 62 }
+CREATE TABLE test_01148_atomic.rmt3 AS test_01148_atomic.rmt2; -- { serverError 36 }
 CREATE TABLE test_01148_atomic.rmt4 ON CLUSTER test_shard_localhost AS test_01148_atomic.rmt2;
 SHOW CREATE TABLE test_01148_atomic.rmt2;
 RENAME TABLE test_01148_atomic.rmt4 to test_01148_atomic.rmt3;
diff --git a/tests/queries/0_stateless/02711_server_uuid_macro.reference b/tests/queries/0_stateless/02711_server_uuid_macro.reference
new file mode 100644
index 000000000000..d00491fd7e5b
--- /dev/null
+++ b/tests/queries/0_stateless/02711_server_uuid_macro.reference
@@ -0,0 +1,1 @@
+1
diff --git a/tests/queries/0_stateless/02711_server_uuid_macro.sql b/tests/queries/0_stateless/02711_server_uuid_macro.sql
new file mode 100644
index 000000000000..f10ed7f8f6f7
--- /dev/null
+++ b/tests/queries/0_stateless/02711_server_uuid_macro.sql
@@ -0,0 +1,15 @@
+DROP TABLE IF EXISTS test;
+
+-- You can create a table with the {server_uuid} substituted.
+CREATE TABLE test (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test', 'replica-{server_uuid}') ORDER BY x;
+
+-- The server UUID is correctly substituted.
+SELECT engine_full LIKE ('%replica-' || serverUUID()::String || '%') FROM system.tables WHERE database = currentDatabase() AND name = 'test';
+
+-- An attempt to create a second table with the same UUID results in error.
+CREATE TABLE test2 (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test', 'replica-{server_uuid}') ORDER BY x; -- { serverError REPLICA_ALREADY_EXISTS }
+
+-- The macro {server_uuid} is special, not a configuration-type macro. It's normal that it is inaccessible with the getMacro function.
+SELECT getMacro('server_uuid'); -- { serverError NO_ELEMENTS_IN_CONFIG }
+
+DROP TABLE test NO DELAY;
