diff --git a/tests/queries/0_stateless/02480_max_map_null_totals.reference b/tests/queries/0_stateless/02480_max_map_null_totals.reference
index 5cc9b5a495f9..8fa02ad2a394 100644
--- a/tests/queries/0_stateless/02480_max_map_null_totals.reference
+++ b/tests/queries/0_stateless/02480_max_map_null_totals.reference
@@ -1,119 +1,119 @@
 ([-1,0],[0,0])
-([1,2],[0,2])
 ([0,1],[0,1])
+([1,2],[0,2])
 
-([-1,0,1,2],[0,0,0,2])
+([-1,0,1,2],[0,0,1,2])
 ([-1,0],[0,0])
-([1,2],[0,2])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
-([-1,0],[0,0])
 ([1,2],[0,2])
-([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
 ([-1,0],[0,0])
+([-1,0,1,2],[0,0,1,2])
+([0,1],[0,1])
 ([1,2],[0,2])
+([-1,0],[0,0])
 ([0,1],[0,1])
+([1,2],[0,2])
 
-([-1,0,1,2],[0,0,0,2])
+([-1,0,1,2],[0,0,1,2])
 ([-1,0],[0,0])
-([1,2],[0,2])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
-([-1,0],[0,0])
 ([1,2],[0,2])
+([-1,0],[0,0])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
+([1,2],[0,2])
 ([0],[0])
-([2],[2])
 ([1],[1])
+([2],[2])
 
-([0,2],[0,2])
+([0,1,2],[0,1,2])
 ([0],[0])
-([2],[2])
+([0,1,2],[0,1,2])
 ([1],[1])
-([0,2],[0,2])
-([0],[0])
 ([2],[2])
+([0],[0])
+([0,1,2],[0,1,2])
 ([1],[1])
-([0,2],[0,2])
+([2],[2])
 -
 ([-1,0],[0,0])
-([1,2],[0,2])
 ([0,1],[0,1])
+([1,2],[0,2])
 
-([-1,0,1,2],[0,0,0,2])
+([-1,0,1,2],[0,0,1,2])
 ([-1,0],[0,0])
-([1,2],[0,2])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
-([-1,0],[0,0])
 ([1,2],[0,2])
-([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
 ([-1,0],[0,0])
+([-1,0,1,2],[0,0,1,2])
+([0,1],[0,1])
 ([1,2],[0,2])
+([-1,0],[0,0])
 ([0,1],[0,1])
+([1,2],[0,2])
 
-([-1,0,1,2],[0,0,0,2])
+([-1,0,1,2],[0,0,1,2])
 ([-1,0],[0,0])
-([1,2],[0,2])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
-([-1,0],[0,0])
 ([1,2],[0,2])
+([-1,0],[0,0])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
+([1,2],[0,2])
 ([0],[0])
-([2],[2])
 ([1],[1])
+([2],[2])
 
-([0,2],[0,2])
+([0,1,2],[0,1,2])
 ([0],[0])
-([2],[2])
+([0,1,2],[0,1,2])
 ([1],[1])
-([0,2],[0,2])
-([0],[0])
 ([2],[2])
+([0],[0])
+([0,1,2],[0,1,2])
 ([1],[1])
-([0,2],[0,2])
+([2],[2])
 -
 ([-1,0],[0,0])
-([1,2],[0,2])
 ([0,1],[0,1])
+([1,2],[0,2])
 
-([-1,0,1,2],[0,0,0,2])
+([-1,0,1,2],[0,0,1,2])
 ([-1,0],[0,0])
-([1,2],[0,2])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
-([-1,0],[0,0])
 ([1,2],[0,2])
-([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
 ([-1,0],[0,0])
+([-1,0,1,2],[0,0,1,2])
+([0,1],[0,1])
 ([1,2],[0,2])
+([-1,0],[0,0])
 ([0,1],[0,1])
+([1,2],[0,2])
 
-([-1,0,1,2],[0,0,0,2])
+([-1,0,1,2],[0,0,1,2])
 ([-1,0],[0,0])
-([1,2],[0,2])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
-([-1,0],[0,0])
 ([1,2],[0,2])
+([-1,0],[0,0])
+([-1,0,1,2],[0,0,1,2])
 ([0,1],[0,1])
-([-1,0,1,2],[0,0,0,2])
+([1,2],[0,2])
 ([0],[0])
-([2],[2])
 ([1],[1])
+([2],[2])
 
-([0,2],[0,2])
+([0,1,2],[0,1,2])
 ([0],[0])
-([2],[2])
+([0,1,2],[0,1,2])
 ([1],[1])
-([0,2],[0,2])
-([0],[0])
 ([2],[2])
+([0],[0])
+([0,1,2],[0,1,2])
 ([1],[1])
-([0,2],[0,2])
+([2],[2])
diff --git a/tests/queries/0_stateless/02480_max_map_null_totals.sql b/tests/queries/0_stateless/02480_max_map_null_totals.sql
index 81e2a5c42437..2c970e25fd5c 100644
--- a/tests/queries/0_stateless/02480_max_map_null_totals.sql
+++ b/tests/queries/0_stateless/02480_max_map_null_totals.sql
@@ -1,39 +1,39 @@
-SELECT maxMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT maxMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT maxMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT maxMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT maxMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT maxMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
 
-SELECT minMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT minMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT minMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT minMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT minMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT minMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
 
-SELECT sumMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT sumMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT sumMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT sumMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT sumMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT sumMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
 
 SELECT '-';
 
-SELECT maxMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT maxMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT maxMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT maxMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT maxMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT maxMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
 
-SELECT minMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT minMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT minMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT minMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT minMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT minMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
 
-SELECT sumMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT sumMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT sumMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT sumMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT sumMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT sumMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
 
 SELECT '-';
 
-SELECT maxMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT maxMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT maxMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT maxMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT maxMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT maxMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
 
-SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
 
-SELECT sumMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS;
-SELECT sumMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP;
-SELECT sumMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH CUBE;
+SELECT sumMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
+SELECT sumMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
+SELECT sumMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
\ No newline at end of file
