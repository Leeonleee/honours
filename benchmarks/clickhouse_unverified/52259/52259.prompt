You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Unexpected error: Not found column NULL in block
**Describe what's wrong**

The two SELECT statements should output the same results, but one of them throws an exception.

**Does it reproduce on recent release?**

It can be reproduced in the latest version.

**How to reproduce**

Version: 23.5.1 (commit eb5985e5fc0e83c94aa1af134f2718e9fe87979c)

Easy reproduce in ClickHouse fiddle: https://fiddle.clickhouse.com/11823026-1268-4336-b744-7729f9025eeb

_Set up database_

```sql
create table t0 (vkey UInt32, c0 Float32, primary key(c0)) engine = AggregatingMergeTree;
insert into t0 values (19000, 1);
```

_SELECT statement 1_

```sql
select 
    null as c_2_0, 
    ref_2.c0 as c_2_1, 
    ref_2.vkey as c_2_2 
  from 
    t0 as ref_2
  order by c_2_0 asc, c_2_1 asc, c_2_2 asc;
```
Then, I remove `c_2_2 asc` in the ORDER BY. The number of outputted rows should not be changed.

_SELECT statement 2_

```sql
select 
    null as c_2_0, 
    ref_2.c0 as c_2_1, 
    ref_2.vkey as c_2_2 
  from 
    t0 as ref_2
  order by c_2_0 asc, c_2_1 asc;
```

**Expected behavior**

The two SELECT statements output the same results, or both of them throw the same exceptions.

**Actual behavior**

One outputs a row, and another one throws an exception.

SELECT statement 1 throws an exception:
```
Received exception from server (version 23.4.2):
Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column NULL in block. There are only columns: vkey, c0. (NOT_FOUND_COLUMN_IN_BLOCK)
(query: select 
    null as c_2_0, 
    ref_2.c0 as c_2_1, 
    ref_2.vkey as c_2_2 
  from 
    t0 as ref_2
  order by c_2_0 asc, c_2_1 asc, c_2_2 asc;)
```

SELECT statement 2 outputs:
```
+-------+-------+-------+
| c_2_0 | c_2_1 | c_2_2 |
+-------+-------+-------+
| NULL  |     1 | 19000 |
+-------+-------+-------+
```

**Additional context**

The earliest reproducible version is 22 in fiddle: https://fiddle.clickhouse.com/a7482d31-b9f8-44bc-88e7-30368913c35d

Before version 22, both SELECT statements output one row (e.g., 21.12.4.1 https://fiddle.clickhouse.com/9aedf68b-3928-4b23-ae48-e61d21ba75bf)
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
