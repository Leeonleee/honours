You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Generate random data with boundaries

**Use case**
It could be useful to generate random data with boundaries.
Currently, both generateRandom functions and engine, allow to define a table like:

```sql
CREATE TABLE randomt
(
    `value` Decimal(5,2),
    `date` Date,
    `zone_id` UInt64,
    `type` Enum8('blue' = 0, 'green' = 1, 'red' = 2),
    `interests` Array(String)
)
ENGINE = GenerateRandom(123, 5, 3)
```
```sql
SELECT *
FROM randomt
LIMIT 5
```

```shell
┌────────value─┬───────date─┬──────────────zone_id─┬─type──┬─interests──────┐
│  17418655.70 │ 2018-08-16 │  9921422126199728620 │ green │ ['(nX']        │
│  -2712197.83 │ 1992-12-19 │  1576572515264284063 │ blue  │ ['','8NM','I'] │
│  15070040.36 │ 2102-11-15 │   688226268395004343 │ blue  │ ['b7<ZU','m*'] │
│ -16219929.50 │ 2033-01-18 │ 12076865034075318107 │ red   │ ['3']          │
│   2771016.64 │ 2051-03-21 │  8931155881545802352 │ blue  │ ['oU',';!>V']  │
└──────────────┴────────────┴──────────────────────┴───────┴────────────────┘
```

It works great for fuzzing test and some other things, but I'm thinking in the use case of generated 'mock' data with limits for each column.

For some fields (date and enum), the behaviour is correct (in the sense of mock data).

```sql
SELECT *
FROM randomt
WHERE (date = toDate('2020-10-20')) AND (type = 'blue')
LIMIT 5
```

```shell
┌───────value─┬───────date─┬──────────────zone_id─┬─type─┬─interests─┐
│  -459221.48 │ 2020-10-20 │ 16696499279086187682 │ blue │ ['R']     │
│ -5533672.64 │ 2020-10-20 │  5903887098779430673 │ blue │ []        │
└─────────────┴────────────┴──────────────────────┴──────┴───────────┘
┌───────value─┬───────date─┬──────────────zone_id─┬─type─┬─interests─────────────┐
│  7419336.56 │ 2020-10-20 │  4113108383613272096 │ blue │ ['A','~5^H+','"X@']   │
│ -2742208.19 │ 2020-10-20 │ 17036311104628448725 │ blue │ [' 4 5:','Nd?0','f9'] │
└─────────────┴────────────┴──────────────────────┴──────┴───────────────────────┘
┌──────value─┬───────date─┬──────────────zone_id─┬─type─┬─interests─┐
│ 3702796.40 │ 2020-10-20 │ 18297471488954938545 │ blue │ []        │
└────────────┴────────────┴──────────────────────┴──────┴───────────┘
```

But when selecting others like:

```sql
select * from randomt where date=toDate('2020-10-20') and type='blue' and zone_id in (array(1,2,3)) limit 5
```

The query hangs out.


**Describe the solution you'd like**

What if is possible something like:
```sql
CREATE TABLE randomt
(
    `value` Decimal(5,2) [min=0, max=100]
    `date` Date, [min=toDate('2020-10-01', max=toDate('2021,03-03')
    `zone_id` UInt64, [min=0, max=2000]
    `type` Enum8('blue' = 0, 'green' = 1, 'red' = 2),
    `interests` Array(String) (select interest in another_table)
)
ENGINE = GenerateRandom(123, 5, 3)
```
The syntax could be other, of course, it just as an example to illustrate.
For strings, min and max probably hasn't make sense, so something like a list of values could be useful.


**Describe alternatives you've considered**
clickhouse-obfuscated, but it would take too much disk space for the use case.


**Additional context**

If it doesn't make sense, or there are currently better alternatives, just say it :)
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
