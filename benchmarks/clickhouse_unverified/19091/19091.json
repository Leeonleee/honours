{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 19091,
  "instance_id": "ClickHouse__ClickHouse-19091",
  "issue_numbers": [
    "15754"
  ],
  "base_commit": "1e4b32aa3021165fd3d4c36a076b430fbb40b7df",
  "patch": "diff --git a/base/harmful/harmful.c b/base/harmful/harmful.c\nindex df625a3e4d6b..bfb68abbcfb3 100644\n--- a/base/harmful/harmful.c\n+++ b/base/harmful/harmful.c\n@@ -118,7 +118,9 @@ TRAP(logout)\n TRAP(logwtmp)\n TRAP(lrand48)\n TRAP(mallinfo)\n-TRAP(mallopt)\n+#if !defined(SANITIZER)\n+TRAP(mallopt) // Used by tsan\n+#endif\n TRAP(mblen)\n TRAP(mbrlen)\n TRAP(mbrtowc)\n@@ -193,7 +195,9 @@ TRAP(dbm_nextkey)\n TRAP(dbm_open)\n TRAP(dbm_store)\n TRAP(dirname)\n-TRAP(dlerror)\n+#if !defined(SANITIZER)\n+TRAP(dlerror) // Used by tsan\n+#endif\n TRAP(ftw)\n TRAP(getc_unlocked)\n //TRAP(getenv) // Ok at program startup\ndiff --git a/cmake/find/zlib.cmake b/cmake/find/zlib.cmake\nindex 9a82699dc3aa..bd96424b60d4 100644\n--- a/cmake/find/zlib.cmake\n+++ b/cmake/find/zlib.cmake\n@@ -35,6 +35,7 @@ if (NOT ZLIB_FOUND AND NOT MISSING_INTERNAL_ZLIB_LIBRARY)\n     set (ZLIB_INCLUDE_DIRECTORIES ${ZLIB_INCLUDE_DIR}) # for protobuf\n     set (ZLIB_FOUND 1) # for poco\n     set (ZLIB_LIBRARIES zlib CACHE INTERNAL \"\")\n+    set (ZLIB_LIBRARY_NAME ${ZLIB_LIBRARIES}) # for cassandra\n     set (ZLIB_NAME \"${INTERNAL_ZLIB_NAME}\")\n endif ()\n \ndiff --git a/contrib/cassandra b/contrib/cassandra\nindex d10187efb25b..9cbc1a806df5 160000\n--- a/contrib/cassandra\n+++ b/contrib/cassandra\n@@ -1,1 +1,1 @@\n-Subproject commit d10187efb25b26da391def077edf3c6f2f3a23dd\n+Subproject commit 9cbc1a806df5d40fddbf84533b9873542c6513d8\ndiff --git a/contrib/libuv b/contrib/libuv\nindex bc14c44b6269..e2e9b7e9f978 160000\n--- a/contrib/libuv\n+++ b/contrib/libuv\n@@ -1,1 +1,1 @@\n-Subproject commit bc14c44b6269c458f2cc7e09eb300f4b64899903\n+Subproject commit e2e9b7e9f978ce8a1367b5fe781d97d1ce9f94ab\n",
  "test_patch": "diff --git a/tests/integration/test_dictionaries_all_layouts_separate_sources/test_cassandra.py b/tests/integration/test_dictionaries_all_layouts_separate_sources/test_cassandra.py\nindex 2d54d8461690..0c69b7f7cbbd 100644\n--- a/tests/integration/test_dictionaries_all_layouts_separate_sources/test_cassandra.py\n+++ b/tests/integration/test_dictionaries_all_layouts_separate_sources/test_cassandra.py\n@@ -70,20 +70,14 @@ def started_cluster():\n     finally:\n         cluster.shutdown()\n \n-# We have a lot of race conditions in cassandra library\n-# https://github.com/ClickHouse/ClickHouse/issues/15754.\n-# TODO fix them and enable tests as soon as possible.\n @pytest.mark.parametrize(\"layout_name\", LAYOUTS_SIMPLE)\n def test_simple(started_cluster, layout_name):\n-    if not node.is_built_with_thread_sanitizer():\n-        simple_tester.execute(layout_name, node)\n+    simple_tester.execute(layout_name, node)\n \n @pytest.mark.parametrize(\"layout_name\", LAYOUTS_COMPLEX)\n def test_complex(started_cluster, layout_name):\n-    if not node.is_built_with_thread_sanitizer():\n-        complex_tester.execute(layout_name, node)\n+    complex_tester.execute(layout_name, node)\n     \n @pytest.mark.parametrize(\"layout_name\", LAYOUTS_RANGED)\n def test_ranged(started_cluster, layout_name):\n-    if not node.is_built_with_thread_sanitizer():\n-        ranged_tester.execute(layout_name, node)\n+    ranged_tester.execute(layout_name, node)\ndiff --git a/tests/tsan_suppressions.txt b/tests/tsan_suppressions.txt\nindex 8e7dce01a654..6a55155e3303 100644\n--- a/tests/tsan_suppressions.txt\n+++ b/tests/tsan_suppressions.txt\n@@ -1,2 +1,1 @@\n-# races in openSSL https://github.com/openssl/openssl/issues/11974\n-fun:evp_cipher_cache_constants\n+# We have no suppressions!\n",
  "problem_statement": "Race conditions in Cassandra library\nThread sanitizer found a lot of races in Cassandra library, examples: [1](https://gist.github.com/alesapin/96b14caa274a291f12dcf84cddc8ff5c), [2](https://gist.github.com/alesapin/bcb6ad9cd99e0c2e198ea4348db38145) and so on. I've tried to fix about 3 races, but there are much more. \r\n\r\n`RefCount` implementation seems unreliable, also `libuv` is not thread safe. Maybe we have to update library version? Or maybe we use it in the wrong way?\n",
  "hints_text": "",
  "created_at": "2021-01-14T18:06:47Z",
  "modified_files": [
    "base/harmful/harmful.c",
    "cmake/find/zlib.cmake",
    "contrib/cassandra",
    "contrib/libuv"
  ],
  "modified_test_files": [
    "tests/integration/test_dictionaries_all_layouts_separate_sources/test_cassandra.py",
    "tests/tsan_suppressions.txt"
  ]
}