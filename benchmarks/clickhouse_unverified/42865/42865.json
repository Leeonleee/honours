{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 42865,
  "instance_id": "ClickHouse__ClickHouse-42865",
  "issue_numbers": [
    "43029"
  ],
  "base_commit": "cca2620c44461ddd93e2ef6f2744c1f78cd4be9f",
  "patch": "diff --git a/src/Analyzer/Passes/QueryAnalysisPass.cpp b/src/Analyzer/Passes/QueryAnalysisPass.cpp\nindex 9db2d66d99d7..4f24051df793 100644\n--- a/src/Analyzer/Passes/QueryAnalysisPass.cpp\n+++ b/src/Analyzer/Passes/QueryAnalysisPass.cpp\n@@ -5527,9 +5527,15 @@ void QueryAnalyzer::resolveQuery(const QueryTreeNodePtr & query_node, Identifier\n       * 3. Check that there are no columns that are not specified in GROUP BY keys.\n       * 4. Validate GROUP BY modifiers.\n       */\n-    assertNoAggregateFunctionNodes(query_node_typed.getJoinTree(), \"in JOIN TREE\");\n-    assertNoGroupingFunction(query_node_typed.getJoinTree(), \"in JOIN TREE\");\n-    assertNoWindowFunctionNodes(query_node_typed.getJoinTree(), \"in JOIN TREE\");\n+    auto join_tree_node_type = query_node_typed.getJoinTree()->getNodeType();\n+    bool join_tree_is_subquery = join_tree_node_type == QueryTreeNodeType::QUERY || join_tree_node_type == QueryTreeNodeType::UNION;\n+\n+    if (!join_tree_is_subquery)\n+    {\n+        assertNoAggregateFunctionNodes(query_node_typed.getJoinTree(), \"in JOIN TREE\");\n+        assertNoGroupingFunction(query_node_typed.getJoinTree(), \"in JOIN TREE\");\n+        assertNoWindowFunctionNodes(query_node_typed.getJoinTree(), \"in JOIN TREE\");\n+    }\n \n     if (query_node_typed.hasWhere())\n     {\ndiff --git a/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp b/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp\nindex 674e02b16ec9..4091d37ec114 100644\n--- a/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp\n+++ b/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp\n@@ -781,6 +781,11 @@ void MergeTreeDataSelectExecutor::filterPartsByPartition(\n     ReadFromMergeTree::IndexStats & index_stats)\n {\n     const Settings & settings = context->getSettingsRef();\n+\n+    /// TODO: Analyzer syntax analyzer result\n+    if (settings.allow_experimental_analyzer)\n+        return;\n+\n     std::optional<PartitionPruner> partition_pruner;\n     std::optional<KeyCondition> minmax_idx_condition;\n     DataTypes minmax_columns_types;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02475_analyzer_join_tree_subquery.reference b/tests/queries/0_stateless/02475_analyzer_join_tree_subquery.reference\nnew file mode 100644\nindex 000000000000..623ba8fde995\n--- /dev/null\n+++ b/tests/queries/0_stateless/02475_analyzer_join_tree_subquery.reference\n@@ -0,0 +1,3 @@\n+45\n+--\n+45\ndiff --git a/tests/queries/0_stateless/02475_analyzer_join_tree_subquery.sql b/tests/queries/0_stateless/02475_analyzer_join_tree_subquery.sql\nnew file mode 100644\nindex 000000000000..eda905291669\n--- /dev/null\n+++ b/tests/queries/0_stateless/02475_analyzer_join_tree_subquery.sql\n@@ -0,0 +1,7 @@\n+SET allow_experimental_analyzer = 1;\n+\n+WITH subquery AS (SELECT sum(number) FROM numbers(10)) SELECT * FROM subquery;\n+\n+SELECT '--';\n+\n+WITH subquery AS (SELECT sum(number) FROM numbers(10)) SELECT (SELECT * FROM subquery);\n",
  "problem_statement": "SIGSEGV DB::TreeRewriterResult::getArrayJoinSourceNameSet() allow_experimental_analyzer=1\n```\r\n2022.11.08 11:21:03.863555 [ 452480 ] {} <Trace> BaseDaemon: Received signal 11\r\n2022.11.08 11:21:03.863976 [ 455262 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.11.08 11:21:03.864151 [ 455262 ] {} <Fatal> BaseDaemon: (version 22.11.1.1, build id: BD019FFE7A1D4A5EC3B03BD7E0F82AB378ABF7E2) (from thread 452490) (query_id: fb8308fb-87a7-452d-b0e5-4d8f1fc71632) (query: SELECT SUM(check <> 0) FROM ((SELECT (NOT (-1313224515)) AS `check` FROM t0 AS left)) as res) Received signal Segmentation fault (11)\r\n2022.11.08 11:21:03.864287 [ 455262 ] {} <Fatal> BaseDaemon: Address: 0x150 Access: read. Address not mapped to object.\r\n2022.11.08 11:21:03.864447 [ 455262 ] {} <Fatal> BaseDaemon: Stack trace: 0x1c871e18 0x1d52eb8b 0x1d684855 0x1dfbc59b 0x1dfbadb1 0x1dfbee8b 0x1dfbf076 0x1df7dbe5 0x1dfa3bdc 0x1c52ba8c 0x1c955b39 0x1c95a639 0x1d9fa5e7 0x1d9feb7a 0x1da808ca 0x21350483 0x21350cf3 0x215ab03a 0x215a93f0 0x215a7a28 0xb9fbae7 0x7face2f5d609 0x7face2e82163\r\n2022.11.08 11:21:04.232545 [ 455262 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Interpreters/TreeRewriter.cpp:0: DB::TreeRewriterResult::getArrayJoinSourceNameSet() const @ 0x1c871e18 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:05.268534 [ 455262 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Storages/MergeTree/KeyCondition.cpp:0: DB::KeyCondition::KeyCondition(DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::ExpressionActions> const&, bool, bool) @ 0x1d52eb8b in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:05.922356 [ 455262 ] {} <Fatal> BaseDaemon: 7.1. inlined from ./build_docker/../contrib/libcxx/include/optional:378: void std::__1::__optional_storage_base<DB::KeyCondition, false>::__construct[abi:v15003]<DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, std::__1::shared_ptr<DB::ExpressionActions>>(DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, std::__1::shared_ptr<DB::ExpressionActions>&&)\r\n2022.11.08 11:21:05.922633 [ 455262 ] {} <Fatal> BaseDaemon: 7.2. inlined from ./build_docker/../contrib/libcxx/include/optional:898: DB::KeyCondition& std::__1::optional<DB::KeyCondition>::emplace[abi:v15003]<DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, std::__1::shared_ptr<DB::ExpressionActions>, void>(DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, std::__1::shared_ptr<DB::ExpressionActions>&&)\r\n2022.11.08 11:21:05.922785 [ 455262 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp:793: DB::MergeTreeDataSelectExecutor::filterPartsByPartition(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>&, std::__1::optional<std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::MergeTreeData const&, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const> const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, long>>> const*, Poco::Logger*, std::__1::vector<DB::ReadFromMergeTree::IndexStat, std::__1::allocator<DB::ReadFromMergeTree::IndexStat>>&) @ 0x1d684855 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:06.509077 [ 455262 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Processors/QueryPlan/ReadFromMergeTree.cpp:962: DB::ReadFromMergeTree::selectRangesToRead(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>, std::__1::shared_ptr<DB::PrewhereInfo> const&, DB::ActionDAGNodes const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context const>, unsigned long, std::__1::shared_ptr<std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, long>>>>, DB::MergeTreeData const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, bool, Poco::Logger*) @ 0x1dfbc59b in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:07.078139 [ 455262 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/Processors/QueryPlan/ReadFromMergeTree.cpp:0: DB::ReadFromMergeTree::selectRangesToRead(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>) const @ 0x1dfbadb1 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:07.673058 [ 455262 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../src/Processors/QueryPlan/ReadFromMergeTree.cpp:1089: DB::ReadFromMergeTree::getAnalysisResult() const @ 0x1dfbee8b in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:08.139189 [ 455262 ] {} <Fatal> BaseDaemon: 11. ./build_docker/../src/Processors/QueryPlan/ReadFromMergeTree.cpp:1099: DB::ReadFromMergeTree::initializePipeline(DB::QueryPipelineBuilder&, DB::BuildQueryPipelineSettings const&) @ 0x1dfbf076 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:08.208757 [ 455262 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/Processors/QueryPlan/ISourceStep.cpp:0: DB::ISourceStep::updatePipeline(std::__1::vector<std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>, std::__1::allocator<std::__1::unique_ptr<DB::QueryPipelineBuilder, std::__1::default_delete<DB::QueryPipelineBuilder>>>>, DB::BuildQueryPipelineSettings const&) @ 0x1df7dbe5 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:08.348817 [ 455262 ] {} <Fatal> BaseDaemon: 13. ./build_docker/../src/Processors/QueryPlan/QueryPlan.cpp:0: DB::QueryPlan::buildQueryPipeline(DB::QueryPlanOptimizationSettings const&, DB::BuildQueryPipelineSettings const&) @ 0x1dfa3bdc in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:08.426582 [ 455262 ] {} <Fatal> BaseDaemon: 14. ./build_docker/../src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:98: DB::InterpreterSelectQueryAnalyzer::execute() @ 0x1c52ba8c in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:08.815986 [ 455262 ] {} <Fatal> BaseDaemon: 15. ./build_docker/../src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x1c955b39 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.219887 [ 455262 ] {} <Fatal> BaseDaemon: 16. ./build_docker/../src/Interpreters/executeQuery.cpp:1142: DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>, std::__1::optional<DB::FormatSettings> const&) @ 0x1c95a639 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.434085 [ 455262 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./build_docker/../contrib/libcxx/include/optional:260: ~__optional_destruct_base\r\n2022.11.08 11:21:09.434197 [ 455262 ] {} <Fatal> BaseDaemon: 17. ./build_docker/../src/Server/HTTPHandler.cpp:800: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::__1::optional<DB::CurrentThread::QueryScope>&) @ 0x1d9fa5e7 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.685329 [ 455262 ] {} <Fatal> BaseDaemon: 18. ./build_docker/../src/Server/HTTPHandler.cpp:976: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x1d9feb7a in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.719404 [ 455262 ] {} <Fatal> BaseDaemon: 19. ./build_docker/../src/Server/HTTP/HTTPServerConnection.cpp:0: DB::HTTPServerConnection::run() @ 0x1da808ca in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.745593 [ 455262 ] {} <Fatal> BaseDaemon: 20. ./build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x21350483 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.781639 [ 455262 ] {} <Fatal> BaseDaemon: 21.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:48: std::__1::default_delete<Poco::Net::TCPServerConnection>::operator()[abi:v15003](Poco::Net::TCPServerConnection*) const\r\n2022.11.08 11:21:09.781778 [ 455262 ] {} <Fatal> BaseDaemon: 21.2. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:305: std::__1::unique_ptr<Poco::Net::TCPServerConnection, std::__1::default_delete<Poco::Net::TCPServerConnection>>::reset[abi:v15003](Poco::Net::TCPServerConnection*)\r\n2022.11.08 11:21:09.781848 [ 455262 ] {} <Fatal> BaseDaemon: 21.3. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:259: ~unique_ptr\r\n2022.11.08 11:21:09.781904 [ 455262 ] {} <Fatal> BaseDaemon: 21. ./build_docker/../contrib/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() @ 0x21350cf3 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.822345 [ 455262 ] {} <Fatal> BaseDaemon: 22. ./build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x215ab03a in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.863938 [ 455262 ] {} <Fatal> BaseDaemon: 23. ./build_docker/../contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x215a93f0 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:09.899723 [ 455262 ] {} <Fatal> BaseDaemon: 24.1. inlined from ./build_docker/../contrib/poco/Foundation/include/Poco/SharedPtr.h:277: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable>>::get()\r\n2022.11.08 11:21:09.899866 [ 455262 ] {} <Fatal> BaseDaemon: 24.2. inlined from ./build_docker/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable>>::assign(Poco::Runnable*)\r\n2022.11.08 11:21:09.899953 [ 455262 ] {} <Fatal> BaseDaemon: 24.3. inlined from ./build_docker/../contrib/poco/Foundation/include/Poco/SharedPtr.h:208: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable>>::operator=(Poco::Runnable*)\r\n2022.11.08 11:21:09.900020 [ 455262 ] {} <Fatal> BaseDaemon: 24. ./build_docker/../contrib/poco/Foundation/src/Thread_POSIX.cpp:360: Poco::ThreadImpl::runnableEntry(void*) @ 0x215a7a28 in /home/ubuntu/thread-ch/clickhouse\r\n2022.11.08 11:21:16.189421 [ 455262 ] {} <Fatal> BaseDaemon: 26. ? @ 0x7face2f5d609 in ?\r\n2022.11.08 11:21:16.189517 [ 455262 ] {} <Fatal> BaseDaemon: 27. clone @ 0x7face2e82163 in ?\r\n2022.11.08 11:21:18.224131 [ 455262 ] {} <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read. (calculated checksum: 62F509E4AD69EDAC65AF33BF6DA9A663)\n",
  "hints_text": "",
  "created_at": "2022-11-01T14:09:54Z",
  "modified_files": [
    "src/Analyzer/Passes/QueryAnalysisPass.cpp",
    "src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02475_analyzer_join_tree_subquery.reference",
    "b/tests/queries/0_stateless/02475_analyzer_join_tree_subquery.sql"
  ]
}