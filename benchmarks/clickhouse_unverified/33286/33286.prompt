You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Error when parseDateTimeBestEffort is invoked on LowCardinality column from the joined subquery
**Describe what's wrong**
parseDateTimeBestEffort  does not work when invoked on a LowCardinality column from the joined subquery

**Does it reproduce on recent release?**
Have not tried

**How to reproduce**
Following sql query does not work:
```sql
SELECT parseDateTimeBestEffort(q0.date_field) as parsed_date
FROM (SELECT 1 as pk1) t1
inner join (
SELECT 1 as pk1, toLowCardinality('15-JUL-16') as date_field
) q0 on q0.pk1 = t1.pk1;
```

> e.displayText() = DB::ParsingException: Cannot read DateTime: neither Date nor Time was parsed successfully: while executing 'FUNCTION parseDateTimeBestEffort(date_field :: 0) -> parseDateTimeBestEffort(date_field) LowCardinality(DateTime) : 1' (version 21.3.12.2 (official build))

**Expected behavior**
Should work the same way as for following queries:
```sql
SELECT parseDateTimeBestEffort('12-JUL-16') as parsed_date;
-- |parsed_date|
-- |2016-07-12 00:00:00|

SELECT parseDateTimeBestEffort(toLowCardinality('13-JUL-16')) as parsed_date;
-- |parsed_date|
-- |2016-07-13 00:00:00|

SELECT parseDateTimeBestEffort(date_field) as parsed_date
FROM (
SELECT toInt64(330733) as pk1, toLowCardinality('14-JUL-16') as date_field
);
-- |parsed_date|
-- |2016-07-14 00:00:00|
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
