diff --git a/tests/queries/0_stateless/01119_optimize_trivial_insert_select.reference b/tests/queries/0_stateless/01119_optimize_trivial_insert_select.reference
new file mode 100644
index 000000000000..de22f396eaef
--- /dev/null
+++ b/tests/queries/0_stateless/01119_optimize_trivial_insert_select.reference
@@ -0,0 +1,4 @@
+1	4999999950000000	1	1
+2	4999999950000000	1	1
+3	49999995000000	1	1
+4	49999995000000	1	1
diff --git a/tests/queries/0_stateless/01119_optimize_trivial_insert_select.sql b/tests/queries/0_stateless/01119_optimize_trivial_insert_select.sql
new file mode 100644
index 000000000000..7be0ffbcc8ea
--- /dev/null
+++ b/tests/queries/0_stateless/01119_optimize_trivial_insert_select.sql
@@ -0,0 +1,11 @@
+drop table if exists t;
+create table t(n int, a Int64, s String) engine = MergeTree() order by a;
+
+insert into t select 1, sum(number) as c, getSetting('max_threads') from numbers_mt(100000000);
+insert into t select 2, sum(number) as c, getSetting('max_threads') from numbers_mt(100000000) group by 1;
+insert into t select 3, sum(number) as c, getSetting('max_threads') from numbers_mt(10000000) group by 3;
+insert into t select 4, sum(number) as c, getSetting('max_threads') as mt from numbers_mt(10000000) group by mt;
+
+select n, a, s != '1', s = toString(getSetting('max_threads')) from t order by n;
+
+drop table t;
