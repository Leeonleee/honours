diff --git a/docker/test/stress/run.sh b/docker/test/stress/run.sh
index b2c6036ba318..fcf99b34064e 100755
--- a/docker/test/stress/run.sh
+++ b/docker/test/stress/run.sh
@@ -352,7 +352,6 @@ else
     mv /var/log/clickhouse-server/clickhouse-server.log /var/log/clickhouse-server/clickhouse-server.backward.clean.log
 
     # Error messages (we should ignore some errors)
-    # FIXME https://github.com/ClickHouse/ClickHouse/issues/38629 ("pp.proj, errno: 21")
     # FIXME https://github.com/ClickHouse/ClickHouse/issues/38643 ("Unknown index: idx.")
     echo "Check for Error messages in server log:"
     zgrep -Fav -e "Code: 236. DB::Exception: Cancelled merging parts" \
@@ -376,7 +375,6 @@ else
                -e "and a merge is impossible: we didn't find" \
                -e "found in queue and some source parts for it was lost" \
                -e "is lost forever." \
-               -e "pp.proj, errno: 21" \
                -e "Unknown index: idx." \
         /var/log/clickhouse-server/clickhouse-server.backward.clean.log | zgrep -Fa "<Error>" > /test_output/bc_check_error_messages.txt \
         && echo -e 'Backward compatibility check: Error message in clickhouse-server.log (see bc_check_error_messages.txt)\tFAIL' >> /test_output/test_results.tsv \
diff --git a/tests/queries/0_stateless/01701_clear_projection_and_part_remove.reference b/tests/queries/0_stateless/01701_clear_projection_and_part_remove.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/01701_clear_projection_and_part_remove.sql b/tests/queries/0_stateless/01701_clear_projection_and_part_remove.sql
new file mode 100644
index 000000000000..e6cc4cbdb108
--- /dev/null
+++ b/tests/queries/0_stateless/01701_clear_projection_and_part_remove.sql
@@ -0,0 +1,19 @@
+drop table if exists tp_1;
+-- In this test, we are going to create an old part with written projection which does not exist in table metadata
+create table tp_1 (x Int32, y Int32, projection p (select x, y order by x)) engine = MergeTree order by y partition by intDiv(y, 100) settings old_parts_lifetime=1;
+insert into tp_1 select number, number from numbers(3);
+set mutations_sync = 2;
+alter table tp_1 add projection pp (select x, count() group by x);
+insert into tp_1 select number, number from numbers(4);
+-- Here we have a part with written projection pp
+alter table tp_1 detach partition '0';
+-- Move part to detached
+alter table tp_1 clear projection pp;
+-- Remove projection from table metadata
+alter table tp_1 drop projection pp;
+-- Now, we don't load projection pp for attached part, but it is written on disk
+alter table tp_1 attach partition '0';
+-- Make this part obsolete
+optimize table tp_1 final;
+-- Now, DROP TABLE triggers part removal
+drop table tp_1;
