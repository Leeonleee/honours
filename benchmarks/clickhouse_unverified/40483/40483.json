{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 40483,
  "instance_id": "ClickHouse__ClickHouse-40483",
  "issue_numbers": [
    "40333"
  ],
  "base_commit": "77ab88a3e522a9d6be66233e64c84c331a84fdc7",
  "patch": "diff --git a/src/Columns/ColumnObject.cpp b/src/Columns/ColumnObject.cpp\nindex e76862ad9889..1680f7050c69 100644\n--- a/src/Columns/ColumnObject.cpp\n+++ b/src/Columns/ColumnObject.cpp\n@@ -154,13 +154,15 @@ FieldInfo getFieldInfo(const Field & field)\n {\n     FieldVisitorToScalarType to_scalar_type_visitor;\n     applyVisitor(to_scalar_type_visitor, field);\n+    FieldVisitorToNumberOfDimensions to_number_dimension_visitor;\n \n     return\n     {\n         to_scalar_type_visitor.getScalarType(),\n         to_scalar_type_visitor.haveNulls(),\n         to_scalar_type_visitor.needConvertField(),\n-        applyVisitor(FieldVisitorToNumberOfDimensions(), field),\n+        applyVisitor(to_number_dimension_visitor, field),\n+        to_number_dimension_visitor.need_fold_dimension\n     };\n }\n \ndiff --git a/src/Columns/ColumnObject.h b/src/Columns/ColumnObject.h\nindex 4dc5bb5ce249..594c6e047c43 100644\n--- a/src/Columns/ColumnObject.h\n+++ b/src/Columns/ColumnObject.h\n@@ -35,6 +35,10 @@ struct FieldInfo\n \n     /// Number of dimension in array. 0 if field is scalar.\n     size_t num_dimensions;\n+\n+    /// If true then this field is an array of variadic dimension field\n+    /// and we need to normalize the dimension\n+    bool need_fold_dimension;\n };\n \n FieldInfo getFieldInfo(const Field & field);\ndiff --git a/src/DataTypes/ObjectUtils.cpp b/src/DataTypes/ObjectUtils.cpp\nindex b81c8c7a033e..3cf557ec5bfb 100644\n--- a/src/DataTypes/ObjectUtils.cpp\n+++ b/src/DataTypes/ObjectUtils.cpp\n@@ -737,14 +737,31 @@ Field FieldVisitorReplaceScalars::operator()(const Array & x) const\n     return res;\n }\n \n-size_t FieldVisitorToNumberOfDimensions::operator()(const Array & x) const\n+size_t FieldVisitorToNumberOfDimensions::operator()(const Array & x)\n {\n     const size_t size = x.size();\n     size_t dimensions = 0;\n     for (size_t i = 0; i < size; ++i)\n-        dimensions = std::max(dimensions, applyVisitor(*this, x[i]));\n+    {\n+        size_t element_dimensions = applyVisitor(*this, x[i]);\n+        if (i > 0 && element_dimensions != dimensions)\n+            need_fold_dimension = true;\n+        dimensions = std::max(dimensions, element_dimensions);\n+    }\n \n     return 1 + dimensions;\n }\n \n+Field FieldVisitorFoldDimension::operator()(const Array & x) const\n+{\n+    if (num_dimensions_to_fold == 0)\n+        return x;\n+    const size_t size = x.size();\n+    Array res(size);\n+    for (size_t i = 0; i < size; ++i)\n+    {\n+        res[i] = applyVisitor(FieldVisitorFoldDimension(num_dimensions_to_fold - 1), x[i]);\n+    }\n+    return res;\n+}\n }\ndiff --git a/src/DataTypes/ObjectUtils.h b/src/DataTypes/ObjectUtils.h\nindex 602d40cef6ad..2dde0ed3e652 100644\n--- a/src/DataTypes/ObjectUtils.h\n+++ b/src/DataTypes/ObjectUtils.h\n@@ -114,10 +114,42 @@ class FieldVisitorReplaceScalars : public StaticVisitor<Field>\n class FieldVisitorToNumberOfDimensions : public StaticVisitor<size_t>\n {\n public:\n-    size_t operator()(const Array & x) const;\n+    size_t operator()(const Array & x);\n \n     template <typename T>\n     size_t operator()(const T &) const { return 0; }\n+\n+    bool need_fold_dimension = false;\n+};\n+\n+/// Fold field (except Null) to the higher dimension, e.g. `1` -- fold 2 --> `[[1]]`\n+/// used to normalize dimension of element in an array. e.g [1, [2]] --> [[1], [2]]\n+class FieldVisitorFoldDimension : public StaticVisitor<Field>\n+{\n+public:\n+    explicit FieldVisitorFoldDimension(size_t num_dimensions_to_fold_) : num_dimensions_to_fold(num_dimensions_to_fold_) { }\n+\n+    Field operator()(const Array & x) const;\n+\n+    Field operator()(const Null & x) const { return x; }\n+\n+    template <typename T>\n+    Field operator()(const T & x) const\n+    {\n+        if (num_dimensions_to_fold == 0)\n+            return x;\n+        Array res(1,x);\n+        for (size_t i = 1; i < num_dimensions_to_fold; ++i)\n+        {\n+            Array new_res;\n+            new_res.push_back(std::move(res));\n+            res = std::move(new_res);\n+        }\n+        return res;\n+    }\n+\n+private:\n+    size_t num_dimensions_to_fold;\n };\n \n /// Receives range of objects, which contains collections\ndiff --git a/src/DataTypes/Serializations/SerializationObject.cpp b/src/DataTypes/Serializations/SerializationObject.cpp\nindex cf49fa8798d8..7ad7706ae1e1 100644\n--- a/src/DataTypes/Serializations/SerializationObject.cpp\n+++ b/src/DataTypes/Serializations/SerializationObject.cpp\n@@ -65,6 +65,8 @@ void SerializationObject<Parser>::deserializeTextImpl(IColumn & column, Reader &\n     for (size_t i = 0; i < paths.size(); ++i)\n     {\n         auto field_info = getFieldInfo(values[i]);\n+        if (field_info.need_fold_dimension)\n+            values[i] = applyVisitor(FieldVisitorFoldDimension(field_info.num_dimensions), std::move(values[i]));\n         if (isNothing(field_info.scalar_type))\n             continue;\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02287_type_object_convert.reference b/tests/queries/0_stateless/02287_type_object_convert.reference\nindex e8064176db13..2df54dcbcbc9 100644\n--- a/tests/queries/0_stateless/02287_type_object_convert.reference\n+++ b/tests/queries/0_stateless/02287_type_object_convert.reference\n@@ -12,3 +12,7 @@\n 2\t(0,2)\tTuple(x Int8, y Int8)\n {\"x\":1}\n {\"x\":1}\n+{\"x\":[[1],[1,2]]}\n+{\"x\":[[],[1,2]]}\n+{\"x\":[[],[[1],[2]]]}\n+{\"x\":[[],[[],[2]]]}\ndiff --git a/tests/queries/0_stateless/02287_type_object_convert.sql b/tests/queries/0_stateless/02287_type_object_convert.sql\nindex 53d456dba65e..2bc08cf7fe13 100644\n--- a/tests/queries/0_stateless/02287_type_object_convert.sql\n+++ b/tests/queries/0_stateless/02287_type_object_convert.sql\n@@ -26,5 +26,9 @@ SELECT id, data, toTypeName(data) FROM t_object_convert2 ORDER BY id;\n DROP TABLE t_object_convert;\n DROP TABLE t_object_convert2;\n \n-select CAST(CAST('{\"x\" : 1}', 'Object(\\'json\\')'), 'Object(Nullable(\\'json\\'))');\n-select CAST(CAST('{\"x\" : 1}', 'Object(Nullable(\\'json\\'))'), 'Object(\\'json\\')');\n+SELECT CAST(CAST('{\"x\" : 1}', 'Object(\\'json\\')'), 'Object(Nullable(\\'json\\'))');\n+SELECT CAST(CAST('{\"x\" : 1}', 'Object(Nullable(\\'json\\'))'), 'Object(\\'json\\')');\n+SELECT CAST('{\"x\" : [ 1 , [ 1 , 2] ]}', 'Object(\\'json\\')');\n+SELECT CAST('{\"x\" : [ {} , [ 1 , 2] ]}', 'Object(\\'json\\')');\n+SELECT CAST('{\"x\" : [ {} , [ 1 , [2]] ]}', 'Object(\\'json\\')');\n+SELECT CAST('{\"x\" : [ {} , [ {} , [2]] ]}', 'Object(\\'json\\')');\n",
  "problem_statement": "ClickHouse terminates on JSONAsObject\nClickHouse terminates on executing - version `22.8.1.1917`\r\n\r\n`SELECT * FROM url('https://datahub.io/core/geo-countries/r/0.geojson', JSONAsObject)`\r\n\r\nworks as expected with JSONAsString\r\n\r\n\r\n```\r\n2022.08.18 08:54:45.969150 [ 459927 ] {} <Fatal> BaseDaemon: 16.1. inlined from ./build_docker/../contrib/libcxx/include/vector:931: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::__vdeallocate()\r\n2022.08.18 08:54:45.969209 [ 459927 ] {} <Fatal> BaseDaemon: 16.2. inlined from ../contrib/libcxx/include/vector:1275: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::__move_assign(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&, std::__1::integral_constant<bool, true>)\r\n2022.08.18 08:54:45.969248 [ 459927 ] {} <Fatal> BaseDaemon: 16.3. inlined from ../contrib/libcxx/include/vector:1251: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::operator=(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&&)\r\n2022.08.18 08:54:45.969273 [ 459927 ] {} <Fatal> BaseDaemon: 16.4. inlined from ../src/Processors/Chunk.h:53: DB::Chunk::operator=(DB::Chunk&&)\r\n2022.08.18 08:54:45.969291 [ 459927 ] {} <Fatal> BaseDaemon: 16. ../src/Processors/Formats/Impl/ParallelParsingInputFormat.cpp:91: DB::ParallelParsingInputFormat::parserThreadFunction(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0x15dea232 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 08:54:45.996892 [ 459927 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:832: std::__1::__function::__policy_func<void ()>::operator=(std::nullptr_t)\r\n2022.08.18 08:54:45.996940 [ 459927 ] {} <Fatal> BaseDaemon: 17.2. inlined from ../contrib/libcxx/include/__functional/function.h:1157: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2022.08.18 08:54:45.996963 [ 459927 ] {} <Fatal> BaseDaemon: 17. ../src/Common/ThreadPool.cpp:284: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xa440b28 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 08:54:46.025058 [ 459927 ] {} <Fatal> BaseDaemon: 18.1. inlined from ./build_docker/../src/Common/ThreadPool.cpp:0: operator()\r\n2022.08.18 08:54:46.025110 [ 459927 ] {} <Fatal> BaseDaemon: 18.2. inlined from ../contrib/libcxx/include/type_traits:3640: decltype(static_cast<void>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(void&&)\r\n2022.08.18 08:54:46.025144 [ 459927 ] {} <Fatal> BaseDaemon: 18.3. inlined from ../contrib/libcxx/include/__functional/invoke.h:61: void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&)\r\n2022.08.18 08:54:46.025176 [ 459927 ] {} <Fatal> BaseDaemon: 18.4. inlined from ../contrib/libcxx/include/__functional/function.h:230: std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()>::operator()()\r\n2022.08.18 08:54:46.025206 [ 459927 ] {} <Fatal> BaseDaemon: 18. ../contrib/libcxx/include/__functional/function.h:711: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0xa442597 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 08:54:46.051554 [ 459927 ] {} <Fatal> BaseDaemon: 19.1. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:832: std::__1::__function::__policy_func<void ()>::operator=(std::nullptr_t)\r\n2022.08.18 08:54:46.051593 [ 459927 ] {} <Fatal> BaseDaemon: 19.2. inlined from ../contrib/libcxx/include/__functional/function.h:1157: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2022.08.18 08:54:46.051616 [ 459927 ] {} <Fatal> BaseDaemon: 19. ../src/Common/ThreadPool.cpp:284: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa43e44c in /var/lib/clickhouse/clickhouse\r\n2022.08.18 08:54:46.079663 [ 459927 ] {} <Fatal> BaseDaemon: 20.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:312: std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >::reset(std::__1::__thread_struct*)\r\n2022.08.18 08:54:46.079704 [ 459927 ] {} <Fatal> BaseDaemon: 20.2. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n2022.08.18 08:54:46.079726 [ 459927 ] {} <Fatal> BaseDaemon: 20.3. inlined from ../contrib/libcxx/include/tuple:210: ~__tuple_leaf\r\n2022.08.18 08:54:46.079743 [ 459927 ] {} <Fatal> BaseDaemon: 20.4. inlined from ../contrib/libcxx/include/tuple:470: ~tuple\r\n2022.08.18 08:54:46.079789 [ 459927 ] {} <Fatal> BaseDaemon: 20.5. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:54: std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >::operator()(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>*) const\r\n2022.08.18 08:54:46.079846 [ 459927 ] {} <Fatal> BaseDaemon: 20.6. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:315: std::__1::unique_ptr<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>, std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> > >::reset(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>*)\r\n2022.08.18 08:54:46.079897 [ 459927 ] {} <Fatal> BaseDaemon: 20.7. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n2022.08.18 08:54:46.079942 [ 459927 ] {} <Fatal> BaseDaemon: 20. ../contrib/libcxx/include/thread:295: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xa4416dd in /var/lib/clickhouse/clickhouse\r\n2022.08.18 08:54:46.079989 [ 459927 ] {} <Fatal> BaseDaemon: 21. ? @ 0x7f989919a609 in ?\r\n2022.08.18 08:54:46.080034 [ 459927 ] {} <Fatal> BaseDaemon: 22. clone @ 0x7f98990bf163 in ?\r\n2022.08.18 08:54:46.231250 [ 459927 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: AFC43756B281818FB7C9D3A2CD17E62A)\r\n```\n",
  "hints_text": "Please paste the full stack trace.\nFull output\r\n\r\n```\r\n2022.08.18 09:09:06.848969 [ 460572 ] {d38fc64d-312b-43ad-865a-dee28fcde97a} <Information> executeQuery: Read 1 rows, 1.00 B in 0.000318429 sec., 3140 rows/sec., 3.07 KiB/sec.\r\n2022.08.18 09:09:07.241188 [ 461785 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.08.18 09:09:07.241299 [ 461785 ] {} <Fatal> BaseDaemon: (version 22.8.1.1917 (official build), build id: F21F2655B08A660C) (from thread 460830) (query_id: 2100ca53-104b-4478-b104-eea400ffb677) (query: SELECT * FROM url('https://datahub.io/core/geo-countries/r/0.geojson', JSONAsObject)) Received signal Segmentation fault (11)\r\n2022.08.18 09:09:07.241346 [ 461785 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.\r\n2022.08.18 09:09:07.241388 [ 461785 ] {} <Fatal> BaseDaemon: Stack trace: 0xa31a4a8 0x15062052 0x15062052 0x15062052 0x15062052 0x15062052 0x150e2954 0x14235d83 0x1423070d 0x15db2873 0x15d559d3 0x15ce5835 0x15ce5346 0x15deb2cd 0x15dea232 0xa440b28 0xa442597 0xa43e44c 0xa4416dd 0x7f4effa0b609 0x7f4eff930163\r\n2022.08.18 09:09:07.344179 [ 461785 ] {} <Fatal> BaseDaemon: 2.1. inlined from ./build_docker/../src/Core/Field.h:888: double DB::get<double>(DB::Field const&)\r\n2022.08.18 09:09:07.344245 [ 461785 ] {} <Fatal> BaseDaemon: 2. ../src/Columns/ColumnVector.h:304: DB::ColumnVector<double>::insert(DB::Field const&) @ 0xa31a4a8 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:07.838596 [ 460572 ] {c1ebcb3c-dd62-4ba8-8227-2d82cde06c85} <Information> executeQuery: Read 94 rows, 10.09 KiB in 0.000561659 sec., 167361 rows/sec., 17.54 MiB/sec.\r\n2022.08.18 09:09:07.841020 [ 460572 ] {b2c9c50c-44d9-46b0-8d64-0a98a962dfb0} <Information> executeQuery: Read 76 rows, 8.03 KiB in 0.000424251 sec., 179139 rows/sec., 18.48 MiB/sec.\r\n2022.08.18 09:09:07.841909 [ 461785 ] {} <Fatal> BaseDaemon: 3. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:07.843509 [ 460572 ] {ca25b291-c9a6-482b-8921-3a2a0171959f} <Information> executeQuery: Read 371 rows, 12.82 KiB in 0.000449309 sec., 825712 rows/sec., 27.86 MiB/sec.\r\n2022.08.18 09:09:07.846285 [ 460572 ] {a055584c-9efc-495f-91b7-96f389c1a8da} <Information> executeQuery: Read 39 rows, 1.94 KiB in 0.00110689 sec., 35233 rows/sec., 1.72 MiB/sec.\r\n2022.08.18 09:09:07.849525 [ 460572 ] {04e106d3-6ab6-4410-b5b6-39af2b45aa15} <Information> executeQuery: Read 1 rows, 1.00 B in 0.000319782 sec., 3127 rows/sec., 3.05 KiB/sec.\r\n2022.08.18 09:09:08.326049 [ 461785 ] {} <Fatal> BaseDaemon: 4. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:08.809982 [ 461785 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:08.838600 [ 460572 ] {87f582bd-c642-41cd-bd35-43d65134b4b9} <Information> executeQuery: Read 94 rows, 10.09 KiB in 0.000590684 sec., 159137 rows/sec., 16.67 MiB/sec.\r\n2022.08.18 09:09:08.841495 [ 460572 ] {4c977a77-53de-481f-939e-7ea864b508e9} <Information> executeQuery: Read 76 rows, 8.03 KiB in 0.000440998 sec., 172336 rows/sec., 17.77 MiB/sec.\r\n2022.08.18 09:09:08.844787 [ 460572 ] {a6379430-3a6e-442a-b307-7dc9e1a11767} <Information> executeQuery: Read 371 rows, 12.82 KiB in 0.000681367 sec., 544493 rows/sec., 18.37 MiB/sec.\r\n2022.08.18 09:09:08.847961 [ 460572 ] {527bfb00-a964-4a24-89e5-f52b00839cd1} <Information> executeQuery: Read 40 rows, 1.99 KiB in 0.001142416 sec., 35013 rows/sec., 1.70 MiB/sec.\r\n2022.08.18 09:09:08.851230 [ 460572 ] {4e0be89b-abf3-4bc1-bba7-56a1f61d25f6} <Information> executeQuery: Read 1 rows, 1.00 B in 0.000307855 sec., 3248 rows/sec., 3.17 KiB/sec.\r\n2022.08.18 09:09:09.294138 [ 461785 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:09.777878 [ 461785 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:09.837615 [ 460572 ] {3b2e7b16-b65e-4114-8f09-264fa1e05bf4} <Information> executeQuery: Read 94 rows, 10.09 KiB in 0.000554467 sec., 169532 rows/sec., 17.76 MiB/sec.\r\n2022.08.18 09:09:09.840312 [ 460572 ] {b0a5e2ff-37aa-4f67-a96a-e77a110f8346} <Information> executeQuery: Read 76 rows, 8.03 KiB in 0.000438026 sec., 173505 rows/sec., 17.89 MiB/sec.\r\n2022.08.18 09:09:09.843035 [ 460572 ] {c1f49c4f-6f32-4815-bcbc-e318391c3b31} <Information> executeQuery: Read 371 rows, 12.82 KiB in 0.000510998 sec., 726030 rows/sec., 24.50 MiB/sec.\r\n2022.08.18 09:09:09.845869 [ 460572 ] {3ed0afcf-11cd-432c-afb3-fdd94e41d7ba} <Information> executeQuery: Read 40 rows, 1.99 KiB in 0.001124166 sec., 35581 rows/sec., 1.73 MiB/sec.\r\n2022.08.18 09:09:09.848955 [ 460572 ] {8f413fed-e65f-4169-a55c-c84a03be8358} <Information> executeQuery: Read 1 rows, 1.00 B in 0.000330114 sec., 3029 rows/sec., 2.96 KiB/sec.\r\n2022.08.18 09:09:10.248735 [ 461785 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Columns/ColumnObject.cpp:0: DB::ColumnObject::Subcolumn::insert(DB::Field, DB::FieldInfo) @ 0x150e2954 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:10.602251 [ 461785 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/DataTypes/Serializations/SerializationObject.cpp:82: void DB::SerializationObject<DB::JSONDataParser<DB::SimdJSONParser> >::deserializeTextImpl<DB::SerializationObject<DB::JSONDataParser<DB::SimdJSONParser> >::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>(DB::IColumn&, DB::SerializationObject<DB::JSONDataParser<DB::SimdJSONParser> >::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)&&) const @ 0x14235d83 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:10.838955 [ 460572 ] {8ca6b870-2b85-41d0-9031-3ab00719fbfe} <Information> executeQuery: Read 94 rows, 10.09 KiB in 0.000548538 sec., 171364 rows/sec., 17.96 MiB/sec.\r\n2022.08.18 09:09:10.842647 [ 460572 ] {d2637c28-4b94-43c7-9d9e-8776eeeb29ed} <Information> executeQuery: Read 76 rows, 8.03 KiB in 0.000879287 sec., 86433 rows/sec., 8.91 MiB/sec.\r\n2022.08.18 09:09:10.845770 [ 460572 ] {3038b219-57fe-4bad-8c9f-d8774189d457} <Information> executeQuery: Read 371 rows, 12.82 KiB in 0.000443549 sec., 836435 rows/sec., 28.22 MiB/sec.\r\n2022.08.18 09:09:10.848870 [ 460572 ] {53d0d187-b9b7-4e2f-ac36-c7a3dc1d84ea} <Information> executeQuery: Read 40 rows, 1.99 KiB in 0.001130807 sec., 35372 rows/sec., 1.72 MiB/sec.\r\n2022.08.18 09:09:10.852118 [ 460572 ] {7f03ead8-0e01-40db-a974-f52d82e95e54} <Information> executeQuery: Read 1 rows, 1.00 B in 0.00031836 sec., 3141 rows/sec., 3.07 KiB/sec.\r\n2022.08.18 09:09:10.956265 [ 461785 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../src/DataTypes/Serializations/SerializationObject.cpp:122: DB::SerializationObject<DB::JSONDataParser<DB::SimdJSONParser> >::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const @ 0x1423070d in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:11.547664 [ 461785 ] {} <Fatal> BaseDaemon: 11. ./build_docker/../src/Processors/Formats/Impl/JSONAsStringRowInputFormat.cpp:0: DB::JSONAsRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) @ 0x15db2873 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:11.840221 [ 460572 ] {054cc1ef-009b-4714-92fe-7d605baac371} <Information> executeQuery: Read 94 rows, 10.09 KiB in 0.000567547 sec., 165625 rows/sec., 17.35 MiB/sec.\r\n2022.08.18 09:09:11.842781 [ 460572 ] {037aa245-c7f0-40ff-af63-6c58c0bfd845} <Information> executeQuery: Read 76 rows, 8.03 KiB in 0.00044676 sec., 170113 rows/sec., 17.54 MiB/sec.\r\n2022.08.18 09:09:11.845414 [ 460572 ] {53432ad1-a612-4876-9c0e-5829f5c98124} <Information> executeQuery: Read 371 rows, 12.82 KiB in 0.000482843 sec., 768365 rows/sec., 25.93 MiB/sec.\r\n2022.08.18 09:09:11.848523 [ 460572 ] {dc763b1d-0b4b-47b0-a89f-123306eba97c} <Information> executeQuery: Read 36 rows, 1.74 KiB in 0.001101301 sec., 32688 rows/sec., 1.55 MiB/sec.\r\n2022.08.18 09:09:11.851594 [ 460572 ] {514fa86d-9947-404b-bd7e-5a6686047afe} <Information> executeQuery: Read 1 rows, 1.00 B in 0.000321401 sec., 3111 rows/sec., 3.04 KiB/sec.\r\n2022.08.18 09:09:12.131330 [ 461785 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/Processors/Formats/IRowInputFormat.cpp:0: DB::IRowInputFormat::generate() @ 0x15d559d3 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:12.710402 [ 461785 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./build_docker/../src/Processors/Chunk.h:90: DB::Chunk::hasRows() const\r\n2022.08.18 09:09:12.710476 [ 461785 ] {} <Fatal> BaseDaemon: 13.2. inlined from ../src/Processors/Chunk.h:92: DB::Chunk::empty() const\r\n2022.08.18 09:09:12.710502 [ 461785 ] {} <Fatal> BaseDaemon: 13.3. inlined from ../src/Processors/Chunk.h:93: DB::Chunk::operator bool() const\r\n2022.08.18 09:09:12.710531 [ 461785 ] {} <Fatal> BaseDaemon: 13. ../src/Processors/ISource.cpp:125: DB::ISource::tryGenerate() @ 0x15ce5835 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:12.838525 [ 460572 ] {047c8515-66a0-4816-bf73-fb3d57cdc157} <Information> executeQuery: Read 94 rows, 10.09 KiB in 0.000676708 sec., 138907 rows/sec., 14.56 MiB/sec.\r\n2022.08.18 09:09:12.841161 [ 460572 ] {93561329-3619-47c5-ac8b-098b8827b570} <Information> executeQuery: Read 76 rows, 8.03 KiB in 0.00049858 sec., 152432 rows/sec., 15.72 MiB/sec.\r\n2022.08.18 09:09:12.843755 [ 460572 ] {ef039d6b-b219-42c7-8db1-7876656ab8d7} <Information> executeQuery: Read 371 rows, 12.82 KiB in 0.000514879 sec., 720557 rows/sec., 24.31 MiB/sec.\r\n2022.08.18 09:09:12.846653 [ 460572 ] {c8bd6685-882f-4230-8b85-ae799b9c6a62} <Information> executeQuery: Read 36 rows, 1.74 KiB in 0.00123338 sec., 29188 rows/sec., 1.38 MiB/sec.\r\n2022.08.18 09:09:12.849709 [ 460572 ] {b4912438-e665-47bc-a69b-6a6e918a8dd2} <Information> executeQuery: Read 1 rows, 1.00 B in 0.00032331 sec., 3093 rows/sec., 3.02 KiB/sec.\r\n^[[B^[[B^[[B^[[B2022.08.18 09:09:13.288824 [ 461785 ] {} <Fatal> BaseDaemon: 14.1. inlined from ./build_docker/../contrib/libcxx/include/optional:321: std::__1::__optional_storage_base<DB::Chunk, false>::has_value() const\r\n2022.08.18 09:09:13.288913 [ 461785 ] {} <Fatal> BaseDaemon: 14.2. inlined from ../contrib/libcxx/include/optional:975: std::__1::optional<DB::Chunk>::operator bool() const\r\n2022.08.18 09:09:13.288956 [ 461785 ] {} <Fatal> BaseDaemon: 14. ../src/Processors/ISource.cpp:94: DB::ISource::work() @ 0x15ce5346 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:13.838673 [ 460572 ] {a369baef-1e9b-4815-b6fa-5745b9b1a821} <Information> executeQuery: Read 94 rows, 10.09 KiB in 0.000725377 sec., 129587 rows/sec., 13.58 MiB/sec.\r\n2022.08.18 09:09:13.842117 [ 460572 ] {6d50ea47-39c9-4c5d-8987-27caebaf532b} <Information> executeQuery: Read 76 rows, 8.03 KiB in 0.000546725 sec., 139009 rows/sec., 14.34 MiB/sec.\r\n2022.08.18 09:09:13.845353 [ 460572 ] {e80344d0-6fc2-439a-8ac5-34c782029386} <Information> executeQuery: Read 371 rows, 12.82 KiB in 0.000470094 sec., 789203 rows/sec., 26.63 MiB/sec.\r\n2022.08.18 09:09:13.849070 [ 460572 ] {77eadf49-d358-477c-abd4-0122827cd604} <Information> executeQuery: Read 36 rows, 1.74 KiB in 0.001219316 sec., 29524 rows/sec., 1.40 MiB/sec.\r\n2022.08.18 09:09:13.854572 [ 460572 ] {b88f497e-aff6-40a3-a9ea-6dc3ecc04d99} <Information> executeQuery: Read 1 rows, 1.00 B in 0.000514838 sec., 1942 rows/sec., 1.90 KiB/sec.\r\n2022.08.18 09:09:13.882458 [ 461785 ] {} <Fatal> BaseDaemon: 15. ./build_docker/../src/Processors/Formats/Impl/ParallelParsingInputFormat.h:157: DB::ParallelParsingInputFormat::InternalParser::getChunk() @ 0x15deb2cd in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:14.474069 [ 461785 ] {} <Fatal> BaseDaemon: 16.1. inlined from ./build_docker/../contrib/libcxx/include/vector:931: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::__vdeallocate()\r\n2022.08.18 09:09:14.474146 [ 461785 ] {} <Fatal> BaseDaemon: 16.2. inlined from ../contrib/libcxx/include/vector:1275: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::__move_assign(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&, std::__1::integral_constant<bool, true>)\r\n2022.08.18 09:09:14.474190 [ 461785 ] {} <Fatal> BaseDaemon: 16.3. inlined from ../contrib/libcxx/include/vector:1251: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::operator=(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&&)\r\n2022.08.18 09:09:14.474214 [ 461785 ] {} <Fatal> BaseDaemon: 16.4. inlined from ../src/Processors/Chunk.h:53: DB::Chunk::operator=(DB::Chunk&&)\r\n2022.08.18 09:09:14.474233 [ 461785 ] {} <Fatal> BaseDaemon: 16. ../src/Processors/Formats/Impl/ParallelParsingInputFormat.cpp:91: DB::ParallelParsingInputFormat::parserThreadFunction(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0x15dea232 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:14.501766 [ 461785 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:832: std::__1::__function::__policy_func<void ()>::operator=(std::nullptr_t)\r\n2022.08.18 09:09:14.501840 [ 461785 ] {} <Fatal> BaseDaemon: 17.2. inlined from ../contrib/libcxx/include/__functional/function.h:1157: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2022.08.18 09:09:14.501868 [ 461785 ] {} <Fatal> BaseDaemon: 17. ../src/Common/ThreadPool.cpp:284: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xa440b28 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:14.529969 [ 461785 ] {} <Fatal> BaseDaemon: 18.1. inlined from ./build_docker/../src/Common/ThreadPool.cpp:0: operator()\r\n2022.08.18 09:09:14.530063 [ 461785 ] {} <Fatal> BaseDaemon: 18.2. inlined from ../contrib/libcxx/include/type_traits:3640: decltype(static_cast<void>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(void&&)\r\n2022.08.18 09:09:14.530105 [ 461785 ] {} <Fatal> BaseDaemon: 18.3. inlined from ../contrib/libcxx/include/__functional/invoke.h:61: void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&)\r\n2022.08.18 09:09:14.530140 [ 461785 ] {} <Fatal> BaseDaemon: 18.4. inlined from ../contrib/libcxx/include/__functional/function.h:230: std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()>::operator()()\r\n2022.08.18 09:09:14.530195 [ 461785 ] {} <Fatal> BaseDaemon: 18. ../contrib/libcxx/include/__functional/function.h:711: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0xa442597 in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:14.556616 [ 461785 ] {} <Fatal> BaseDaemon: 19.1. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:832: std::__1::__function::__policy_func<void ()>::operator=(std::nullptr_t)\r\n2022.08.18 09:09:14.556671 [ 461785 ] {} <Fatal> BaseDaemon: 19.2. inlined from ../contrib/libcxx/include/__functional/function.h:1157: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2022.08.18 09:09:14.556694 [ 461785 ] {} <Fatal> BaseDaemon: 19. ../src/Common/ThreadPool.cpp:284: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa43e44c in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:14.584825 [ 461785 ] {} <Fatal> BaseDaemon: 20.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:312: std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >::reset(std::__1::__thread_struct*)\r\n2022.08.18 09:09:14.584899 [ 461785 ] {} <Fatal> BaseDaemon: 20.2. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n2022.08.18 09:09:14.584930 [ 461785 ] {} <Fatal> BaseDaemon: 20.3. inlined from ../contrib/libcxx/include/tuple:210: ~__tuple_leaf\r\n2022.08.18 09:09:14.584974 [ 461785 ] {} <Fatal> BaseDaemon: 20.4. inlined from ../contrib/libcxx/include/tuple:470: ~tuple\r\n2022.08.18 09:09:14.585018 [ 461785 ] {} <Fatal> BaseDaemon: 20.5. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:54: std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >::operator()(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>*) const\r\n2022.08.18 09:09:14.585071 [ 461785 ] {} <Fatal> BaseDaemon: 20.6. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:315: std::__1::unique_ptr<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>, std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> > >::reset(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>*)\r\n2022.08.18 09:09:14.585105 [ 461785 ] {} <Fatal> BaseDaemon: 20.7. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n2022.08.18 09:09:14.585131 [ 461785 ] {} <Fatal> BaseDaemon: 20. ../contrib/libcxx/include/thread:295: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xa4416dd in /var/lib/clickhouse/clickhouse\r\n2022.08.18 09:09:14.585162 [ 461785 ] {} <Fatal> BaseDaemon: 21. ? @ 0x7f4effa0b609 in ?\r\n2022.08.18 09:09:14.585187 [ 461785 ] {} <Fatal> BaseDaemon: 22. clone @ 0x7f4eff930163 in ?\r\n2022.08.18 09:09:14.736370 [ 461785 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: AFC43756B281818FB7C9D3A2CD17E62A)\r\n```\nStack from client - reproducible on 22.7\r\n\r\n```\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:40.420208 [ 462622 ] <Fatal> BaseDaemon: ########################################\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:40.420353 [ 462622 ] <Fatal> BaseDaemon: (version 22.8.1.1917 (official build), build id: F21F2655B08A660C) (from thread 462618) (query_id: 9e13d798-7cea-4d84-80f5-b238557430d6) (query: SELECT * FROM url('https://datahub.io/core/geo-countries/r/0.geojson', JSONAsObject)) Received signal Segmentation fault (11)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:40.420413 [ 462622 ] <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:40.420462 [ 462622 ] <Fatal> BaseDaemon: Stack trace: 0xa31a4a8 0x15062052 0x15062052 0x15062052 0x15062052 0x15062052 0x150e2954 0x14235d83 0x1423070d 0x15db2873 0x15d559d3 0x15ce5835 0x15ce5346 0x15deb2cd 0x15dea232 0xa440b28 0xa442597 0xa43e44c 0xa4416dd 0x7f3cedf41609 0x7f3cede66163\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:40.521598 [ 462622 ] <Fatal> BaseDaemon: 2.1. inlined from ./build_docker/../src/Core/Field.h:888: double DB::get<double>(DB::Field const&)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:40.521686 [ 462622 ] <Fatal> BaseDaemon: 2. ../src/Columns/ColumnVector.h:304: DB::ColumnVector<double>::insert(DB::Field const&) @ 0xa31a4a8 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:41.014646 [ 462622 ] <Fatal> BaseDaemon: 3. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:41.498708 [ 462622 ] <Fatal> BaseDaemon: 4. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:41.983394 [ 462622 ] <Fatal> BaseDaemon: 5. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:42.467870 [ 462622 ] <Fatal> BaseDaemon: 6. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:42.952313 [ 462622 ] <Fatal> BaseDaemon: 7. ./build_docker/../src/Columns/ColumnArray.cpp:0: DB::ColumnArray::insert(DB::Field const&) @ 0x15062052 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:43.422772 [ 462622 ] <Fatal> BaseDaemon: 8. ./build_docker/../src/Columns/ColumnObject.cpp:0: DB::ColumnObject::Subcolumn::insert(DB::Field, DB::FieldInfo) @ 0x150e2954 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:43.776715 [ 462622 ] <Fatal> BaseDaemon: 9. ./build_docker/../src/DataTypes/Serializations/SerializationObject.cpp:82: void DB::SerializationObject<DB::JSONDataParser<DB::SimdJSONParser> >::deserializeTextImpl<DB::SerializationObject<DB::JSONDataParser<DB::SimdJSONParser> >::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>(DB::IColumn&, DB::SerializationObject<DB::JSONDataParser<DB::SimdJSONParser> >::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)&&) const @ 0x14235d83 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:44.131347 [ 462622 ] <Fatal> BaseDaemon: 10. ./build_docker/../src/DataTypes/Serializations/SerializationObject.cpp:122: DB::SerializationObject<DB::JSONDataParser<DB::SimdJSONParser> >::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const @ 0x1423070d in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:44.722806 [ 462622 ] <Fatal> BaseDaemon: 11. ./build_docker/../src/Processors/Formats/Impl/JSONAsStringRowInputFormat.cpp:0: DB::JSONAsRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) @ 0x15db2873 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:45.307236 [ 462622 ] <Fatal> BaseDaemon: 12. ./build_docker/../src/Processors/Formats/IRowInputFormat.cpp:0: DB::IRowInputFormat::generate() @ 0x15d559d3 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:45.889477 [ 462622 ] <Fatal> BaseDaemon: 13.1. inlined from ./build_docker/../src/Processors/Chunk.h:90: DB::Chunk::hasRows() const\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:45.889536 [ 462622 ] <Fatal> BaseDaemon: 13.2. inlined from ../src/Processors/Chunk.h:92: DB::Chunk::empty() const\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:45.889559 [ 462622 ] <Fatal> BaseDaemon: 13.3. inlined from ../src/Processors/Chunk.h:93: DB::Chunk::operator bool() const\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:45.889602 [ 462622 ] <Fatal> BaseDaemon: 13. ../src/Processors/ISource.cpp:125: DB::ISource::tryGenerate() @ 0x15ce5835 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:46.468069 [ 462622 ] <Fatal> BaseDaemon: 14.1. inlined from ./build_docker/../contrib/libcxx/include/optional:321: std::__1::__optional_storage_base<DB::Chunk, false>::has_value() const\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:46.468158 [ 462622 ] <Fatal> BaseDaemon: 14.2. inlined from ../contrib/libcxx/include/optional:975: std::__1::optional<DB::Chunk>::operator bool() const\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:46.468180 [ 462622 ] <Fatal> BaseDaemon: 14. ../src/Processors/ISource.cpp:94: DB::ISource::work() @ 0x15ce5346 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.061844 [ 462622 ] <Fatal> BaseDaemon: 15. ./build_docker/../src/Processors/Formats/Impl/ParallelParsingInputFormat.h:157: DB::ParallelParsingInputFormat::InternalParser::getChunk() @ 0x15deb2cd in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.653682 [ 462622 ] <Fatal> BaseDaemon: 16.1. inlined from ./build_docker/../contrib/libcxx/include/vector:931: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::__vdeallocate()\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.653757 [ 462622 ] <Fatal> BaseDaemon: 16.2. inlined from ../contrib/libcxx/include/vector:1275: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::__move_assign(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&, std::__1::integral_constant<bool, true>)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.653787 [ 462622 ] <Fatal> BaseDaemon: 16.3. inlined from ../contrib/libcxx/include/vector:1251: std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >::operator=(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&&)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.653813 [ 462622 ] <Fatal> BaseDaemon: 16.4. inlined from ../src/Processors/Chunk.h:53: DB::Chunk::operator=(DB::Chunk&&)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.653832 [ 462622 ] <Fatal> BaseDaemon: 16. ../src/Processors/Formats/Impl/ParallelParsingInputFormat.cpp:91: DB::ParallelParsingInputFormat::parserThreadFunction(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0x15dea232 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.681392 [ 462622 ] <Fatal> BaseDaemon: 17.1. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:832: std::__1::__function::__policy_func<void ()>::operator=(std::nullptr_t)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.681466 [ 462622 ] <Fatal> BaseDaemon: 17.2. inlined from ../contrib/libcxx/include/__functional/function.h:1157: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.681495 [ 462622 ] <Fatal> BaseDaemon: 17. ../src/Common/ThreadPool.cpp:284: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xa440b28 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.709603 [ 462622 ] <Fatal> BaseDaemon: 18.1. inlined from ./build_docker/../src/Common/ThreadPool.cpp:0: operator()\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.709686 [ 462622 ] <Fatal> BaseDaemon: 18.2. inlined from ../contrib/libcxx/include/type_traits:3640: decltype(static_cast<void>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(void&&)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.709721 [ 462622 ] <Fatal> BaseDaemon: 18.3. inlined from ../contrib/libcxx/include/__functional/invoke.h:61: void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'()&)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.709779 [ 462622 ] <Fatal> BaseDaemon: 18.4. inlined from ../contrib/libcxx/include/__functional/function.h:230: std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()>::operator()()\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.709823 [ 462622 ] <Fatal> BaseDaemon: 18. ../contrib/libcxx/include/__functional/function.h:711: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0xa442597 in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.736225 [ 462622 ] <Fatal> BaseDaemon: 19.1. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:832: std::__1::__function::__policy_func<void ()>::operator=(std::nullptr_t)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.736291 [ 462622 ] <Fatal> BaseDaemon: 19.2. inlined from ../contrib/libcxx/include/__functional/function.h:1157: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.736323 [ 462622 ] <Fatal> BaseDaemon: 19. ../src/Common/ThreadPool.cpp:284: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa43e44c in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764334 [ 462622 ] <Fatal> BaseDaemon: 20.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:312: std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >::reset(std::__1::__thread_struct*)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764392 [ 462622 ] <Fatal> BaseDaemon: 20.2. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764414 [ 462622 ] <Fatal> BaseDaemon: 20.3. inlined from ../contrib/libcxx/include/tuple:210: ~__tuple_leaf\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764428 [ 462622 ] <Fatal> BaseDaemon: 20.4. inlined from ../contrib/libcxx/include/tuple:470: ~tuple\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764465 [ 462622 ] <Fatal> BaseDaemon: 20.5. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:54: std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >::operator()(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>*) const\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764503 [ 462622 ] <Fatal> BaseDaemon: 20.6. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:315: std::__1::unique_ptr<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>, std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> > >::reset(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>*)\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764541 [ 462622 ] <Fatal> BaseDaemon: 20.7. inlined from ../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764563 [ 462622 ] <Fatal> BaseDaemon: 20. ../contrib/libcxx/include/thread:295: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xa4416dd in /var/lib/clickhouse/clickhouse\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764586 [ 462622 ] <Fatal> BaseDaemon: 21. ? @ 0x7f3cedf41609 in ?\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.764607 [ 462622 ] <Fatal> BaseDaemon: 22. clone @ 0x7f3cede66163 in ?\r\n[noaa-clickhouse-blue-1.localdomain] 2022.08.18 09:12:47.917036 [ 462622 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: AFC43756B281818FB7C9D3A2CD17E62A)\r\n```\n@alexey-milovidov @gingerwizard minimal case to produce the core:\r\n\r\ntest.json:\r\n\r\n```json\r\n{\r\n\"array\":\r\n    [\r\n        { \"val\": 1 },\r\n        { \"val\": [1] }\r\n    ]\r\n}\r\n```\r\n\r\nQuery:\r\n\r\n```sql\r\nselect * from file('test.json', JSONAsObject);\r\n```\r\n\r\nI think the reason is `JSONAsObject ` will try to aggregate the keys, but fields in some key have different dimension, which causes parsing core.\nI think that for above example query, the expected result would be:\r\n\r\n```sql\r\n{\"array.val\":[1,[1]]}\r\n```\r\n\r\nBut I'm not sure CH has the sufficient data structure to represent this (array of variadic dimension elements). One solution I can think about is to normalize the dimension of all element in array to the max dim. For example, we can produce a result like:\r\n\r\n```sql\r\n{\"array.val\":[[1],[1]]} -- the first `1` converted to `[1]`\r\n```",
  "created_at": "2022-08-22T10:47:12Z",
  "modified_files": [
    "src/Columns/ColumnObject.cpp",
    "src/Columns/ColumnObject.h",
    "src/DataTypes/ObjectUtils.cpp",
    "src/DataTypes/ObjectUtils.h",
    "src/DataTypes/Serializations/SerializationObject.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/02287_type_object_convert.reference",
    "tests/queries/0_stateless/02287_type_object_convert.sql"
  ]
}