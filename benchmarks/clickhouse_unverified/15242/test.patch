diff --git a/tests/queries/0_stateless/01483_merge_table_join_and_group_by.reference b/tests/queries/0_stateless/01483_merge_table_join_and_group_by.reference
new file mode 100644
index 000000000000..b2c3ea56b7f7
--- /dev/null
+++ b/tests/queries/0_stateless/01483_merge_table_join_and_group_by.reference
@@ -0,0 +1,7 @@
+0	1
+0	1
+0	1
+0	1
+1
+0	1
+0	1
diff --git a/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql b/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql
new file mode 100644
index 000000000000..a6678ca9040e
--- /dev/null
+++ b/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql
@@ -0,0 +1,22 @@
+DROP TABLE IF EXISTS a;
+DROP TABLE IF EXISTS b;
+DROP TABLE IF EXISTS m;
+
+CREATE TABLE a (key UInt32) ENGINE = MergeTree ORDER BY key;
+CREATE TABLE b (key UInt32, ID UInt32) ENGINE = MergeTree ORDER BY key;
+CREATE TABLE m (key UInt32) ENGINE = Merge(currentDatabase(), 'a');
+
+INSERT INTO a VALUES (0);
+INSERT INTO b VALUES (0, 1);
+
+SELECT * FROM m INNER JOIN b USING(key);
+SELECT * FROM a INNER JOIN b USING(key) GROUP BY ID, key;
+SELECT * FROM m INNER JOIN b USING(key) WHERE ID = 1;
+SELECT * FROM m INNER JOIN b USING(key) GROUP BY ID, key;
+SELECT ID FROM m INNER JOIN b USING(key) GROUP BY ID;
+SELECT * FROM m INNER JOIN b USING(key) WHERE ID = 1 HAVING ID = 1 ORDER BY ID;
+SELECT * FROM m INNER JOIN b USING(key) WHERE ID = 1 GROUP BY ID, key HAVING ID = 1 ORDER BY ID;
+
+DROP TABLE IF EXISTS a;
+DROP TABLE IF EXISTS b;
+DROP TABLE IF EXISTS m;
