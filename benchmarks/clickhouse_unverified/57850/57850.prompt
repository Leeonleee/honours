You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
S3 - Allow passing SESSION_TOKEN into S3 function in SQL
**Use case**

We're planning on implementing integration to 3rd party ClickHouse databases (which will load data into tables directly from S3), for that we would like to pass credentials that are given from user accounts directly to ClickHouse without the user configuring ClickHouse to use those credentials by default, for easy plug-and-play.

**Describe the solution you'd like**

We would like to pass (`ACCESS_KEY`, `SECRET_KEY` and `SESSION_TOKEN`) to be used in the s3 function: `s3(path, [aws_access_key_id, aws_secret_access_key,] [format, [structure, [compression]]])` as [documented here](https://clickhouse.com/docs/en/integrations/s3#s3-table-functions), but currently we can't pass `SESSION_TOKEN`.

This will allow us to issue a new temporary `ACCESS_KEY`, `SECRET_KEY` and `SESSION_TOKEN` that will expire in a few hours (which is fine, since loading data into clickhouse shouldn't be a long running operation, and it's blocking) every time we want to load data into clickhouse, without requiring from the user to modify database configuration and / or IAM settings.
**Describe alternatives you've considered**

- Passing an `IAM_ROLE_ARN` and `EXTERNAL_ID` is fine too, but would require from the user to configure another trusted entity in the trusted entities policies of an extisting IAM Role (This also requires a modification of the S3 method)
- Letting the user configure credentials to clickhouse database with documentation, would require "heavy" changes such as deploying a Clickhouse Formation stack and / or changing configuration of the database (if it's on premises)
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
