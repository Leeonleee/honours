diff --git a/programs/client/Client.cpp b/programs/client/Client.cpp
index 9e90596b4f86..217684830d40 100644
--- a/programs/client/Client.cpp
+++ b/programs/client/Client.cpp
@@ -1,4 +1,3 @@
-#include <boost/algorithm/string/join.hpp>
 #include <cstdlib>
 #include <fcntl.h>
 #include <map>
@@ -7,7 +6,6 @@
 #include <memory>
 #include <optional>
 #include <Common/ThreadStatus.h>
-#include <Common/scope_guard_safe.h>
 #include <boost/program_options.hpp>
 #include <boost/algorithm/string/replace.hpp>
 #include <filesystem>
@@ -45,8 +43,6 @@
 
 #include <Processors/Transforms/getSourceFromASTInsertQuery.h>
 
-#include <Interpreters/InterpreterSetQuery.h>
-
 #include <Functions/registerFunctions.h>
 #include <AggregateFunctions/registerAggregateFunctions.h>
 #include <Formats/registerFormats.h>
@@ -1180,7 +1176,7 @@ void Client::processConfig()
 
     pager = config().getString("pager", "");
 
-    is_default_format = !config().has("vertical") && !config().has("format");
+    is_default_format = !config().has("vertical") && !config().has("output-format") && !config().has("format");
     if (is_default_format && checkIfStdoutIsRegularFile())
     {
         is_default_format = false;
@@ -1189,9 +1185,13 @@ void Client::processConfig()
         format = format_from_file_name ? *format_from_file_name : "TabSeparated";
     }
     else if (config().has("vertical"))
-        format = config().getString("format", "Vertical");
+    {
+        format = config().getString("output-format", config().getString("format", "Vertical"));
+    }
     else
-        format = config().getString("format", is_interactive ? "PrettyCompact" : "TabSeparated");
+    {
+        format = config().getString("output-format", config().getString("format", is_interactive ? "PrettyCompact" : "TabSeparated"));
+    }
 
     format_max_block_size = config().getUInt64("format_max_block_size",
         global_context->getSettingsRef().max_block_size);
diff --git a/programs/local/LocalServer.cpp b/programs/local/LocalServer.cpp
index 6f7d3681c467..e0124f03a64f 100644
--- a/programs/local/LocalServer.cpp
+++ b/programs/local/LocalServer.cpp
@@ -819,7 +819,6 @@ void LocalServer::addOptions(OptionsDescription & options_description)
         ("file,F", po::value<std::string>(), "path to file with data of the initial table (stdin if not specified)")
 
         ("input-format", po::value<std::string>(), "input format of the initial table data")
-        ("output-format", po::value<std::string>(), "default output format")
 
         ("logger.console", po::value<bool>()->implicit_value(true), "Log to console")
         ("logger.log", po::value<std::string>(), "Log file name")
diff --git a/src/Client/ClientBase.cpp b/src/Client/ClientBase.cpp
index 8b13f2a4ffde..c97669760f9e 100644
--- a/src/Client/ClientBase.cpp
+++ b/src/Client/ClientBase.cpp
@@ -2892,7 +2892,9 @@ void ClientBase::init(int argc, char ** argv)
 
         ("suggestion_limit", po::value<int>()->default_value(10000), "Suggestion limit for how many databases, tables and columns to fetch.")
 
-        ("format,f", po::value<std::string>(), "default output format")
+        ("format,f", po::value<std::string>(), "default output format (and input format for clickhouse-local)")
+        ("output-format", po::value<std::string>(), "default output format (this option has preference over --format)")
+
         ("vertical,E", "vertical output format, same as --format=Vertical or FORMAT Vertical or \\G at end of command")
         ("highlight", po::value<bool>()->default_value(true), "enable or disable basic syntax highlight in interactive command line")
 
@@ -2975,6 +2977,8 @@ void ClientBase::init(int argc, char ** argv)
         config().setBool("ignore-error", true);
     if (options.count("format"))
         config().setString("format", options["format"].as<std::string>());
+    if (options.count("output-format"))
+        config().setString("output-format", options["output-format"].as<std::string>());
     if (options.count("vertical"))
         config().setBool("vertical", true);
     if (options.count("stacktrace"))
