{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 34345,
  "instance_id": "ClickHouse__ClickHouse-34345",
  "issue_numbers": [
    "34335"
  ],
  "base_commit": "613c9fa3c2cddbb87b33c879be6b01b5748e3fb4",
  "patch": "diff --git a/src/Databases/DatabaseMemory.cpp b/src/Databases/DatabaseMemory.cpp\nindex 3309d25b1c28..a92c19f67c00 100644\n--- a/src/Databases/DatabaseMemory.cpp\n+++ b/src/Databases/DatabaseMemory.cpp\n@@ -78,7 +78,9 @@ ASTPtr DatabaseMemory::getCreateDatabaseQuery() const\n     auto create_query = std::make_shared<ASTCreateQuery>();\n     create_query->setDatabase(getDatabaseName());\n     create_query->set(create_query->storage, std::make_shared<ASTStorage>());\n-    create_query->storage->set(create_query->storage->engine, makeASTFunction(getEngineName()));\n+    auto engine = makeASTFunction(getEngineName());\n+    engine->no_empty_args = true;\n+    create_query->storage->set(create_query->storage->engine, engine);\n \n     if (const auto comment_value = getDatabaseComment(); !comment_value.empty())\n         create_query->set(create_query->comment, std::make_shared<ASTLiteral>(comment_value));\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01069_database_memory.reference b/tests/queries/0_stateless/01069_database_memory.reference\nindex e7486d57276f..15e2bec3355d 100644\n--- a/tests/queries/0_stateless/01069_database_memory.reference\n+++ b/tests/queries/0_stateless/01069_database_memory.reference\n@@ -1,4 +1,4 @@\n-CREATE DATABASE memory_01069\\nENGINE = Memory()\n+CREATE DATABASE memory_01069\\nENGINE = Memory\n 1\n 2\n 3\ndiff --git a/tests/queries/0_stateless/02021_create_database_with_comment.reference b/tests/queries/0_stateless/02021_create_database_with_comment.reference\nindex 65fc9b6d290e..693ea584b848 100644\n--- a/tests/queries/0_stateless/02021_create_database_with_comment.reference\n+++ b/tests/queries/0_stateless/02021_create_database_with_comment.reference\n@@ -1,5 +1,5 @@\n engine : Memory\n-CREATE DATABASE default\\nENGINE = Memory()\\nCOMMENT \\'Test DB with comment\\'\n+CREATE DATABASE default\\nENGINE = Memory\\nCOMMENT \\'Test DB with comment\\'\n comment=\tTest DB with comment\n \n engine : Atomic\ndiff --git a/tests/queries/0_stateless/02206_information_schema_show_database.reference b/tests/queries/0_stateless/02206_information_schema_show_database.reference\nnew file mode 100644\nindex 000000000000..551186fa0abe\n--- /dev/null\n+++ b/tests/queries/0_stateless/02206_information_schema_show_database.reference\n@@ -0,0 +1,1 @@\n+CREATE DATABASE INFORMATION_SCHEMA\\nENGINE = Memory\ndiff --git a/tests/queries/0_stateless/02206_information_schema_show_database.sql b/tests/queries/0_stateless/02206_information_schema_show_database.sql\nnew file mode 100644\nindex 000000000000..de5ca495e2e9\n--- /dev/null\n+++ b/tests/queries/0_stateless/02206_information_schema_show_database.sql\n@@ -0,0 +1,1 @@\n+SHOW CREATE DATABASE INFORMATION_SCHEMA;\n",
  "problem_statement": "SHOW CREATE DATABASE information_schema return wrong SQL `ENGINE=Memory()` instead of `ENGINE=Memory`\n**Describe what's wrong**\r\ninconsistent behavior \r\n\r\n```sql\r\nSHOW CREATE DATABASE information_schema\r\n```\r\nreturns the following SQL statement\r\n\r\n```sql\r\nCREATE DATABASE information_schema\r\nENGINE = Memory()\r\n```\r\n\r\nbut when you try to run these queries\r\n```sql\r\n DROP DATABASE information_schema;\r\n CREATE DATABASE information_schema\r\nENGINE = Memory()\r\n```\r\n\r\nIt returns\r\n\r\n> Code: 36. DB::Exception: Received from localhost:9000. DB::Exception: Database engine `Memory` cannot have arguments. (BAD_ARGUMENTS)\r\n\r\n\r\n**Does it reproduce on recent release?**\r\nreproduced any version from 21.11+\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2022-02-06T00:48:37Z",
  "modified_files": [
    "src/Databases/DatabaseMemory.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01069_database_memory.reference",
    "tests/queries/0_stateless/02021_create_database_with_comment.reference",
    "b/tests/queries/0_stateless/02206_information_schema_show_database.reference",
    "b/tests/queries/0_stateless/02206_information_schema_show_database.sql"
  ]
}