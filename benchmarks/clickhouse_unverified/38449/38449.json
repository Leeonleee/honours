{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 38449,
  "instance_id": "ClickHouse__ClickHouse-38449",
  "issue_numbers": [
    "38528"
  ],
  "base_commit": "25100ad5e52ee7845ec54ddaed1185a9cf2d333d",
  "patch": "diff --git a/src/Processors/Transforms/PartialSortingTransform.cpp b/src/Processors/Transforms/PartialSortingTransform.cpp\nindex 131bf4f8e7cc..b0f866cb3fdd 100644\n--- a/src/Processors/Transforms/PartialSortingTransform.cpp\n+++ b/src/Processors/Transforms/PartialSortingTransform.cpp\n@@ -71,7 +71,7 @@ bool compareWithThreshold(const ColumnRawPtrs & raw_block_columns, size_t min_bl\n     size_t raw_block_columns_size = raw_block_columns.size();\n     for (size_t i = 0; i < raw_block_columns_size; ++i)\n     {\n-        int res = sort_description[i].direction * raw_block_columns[i]->compareAt(min_block_index, 0, *threshold_columns[0], sort_description[i].nulls_direction);\n+        int res = sort_description[i].direction * raw_block_columns[i]->compareAt(min_block_index, 0, *threshold_columns[i], sort_description[i].nulls_direction);\n \n         if (res < 0)\n             return true;\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02345_partial_sort_transform_optimization.reference b/tests/queries/0_stateless/02345_partial_sort_transform_optimization.reference\nnew file mode 100644\nindex 000000000000..7b50765be554\n--- /dev/null\n+++ b/tests/queries/0_stateless/02345_partial_sort_transform_optimization.reference\n@@ -0,0 +1,15 @@\n+0\t999999\t999999\n+0\t999998\t999998\n+0\t999997\t999997\n+0\t999996\t999996\n+0\t999995\t999995\n+0\t999994\t999994\n+0\t999993\t999993\n+0\t999992\t999992\n+0\t999991\t999991\n+0\t999990\t999990\n+98974\n+98973\n+98972\n+98971\n+98970\ndiff --git a/tests/queries/0_stateless/02345_partial_sort_transform_optimization.sql b/tests/queries/0_stateless/02345_partial_sort_transform_optimization.sql\nnew file mode 100644\nindex 000000000000..eb395e5ec41b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02345_partial_sort_transform_optimization.sql\n@@ -0,0 +1,5 @@\n+-- Tags: no-backward-compatibility-check\n+\n+-- Regression for PartialSortingTransform optimization that requires at least 1500 rows.\n+SELECT * FROM (SELECT * FROM (SELECT 0 a, toNullable(number) b, toString(number) c FROM numbers(1e6)) ORDER BY a DESC, b DESC, c LIMIT 1500) limit 10;\n+SELECT number FROM (SELECT number, 1 AS k FROM numbers(100000) ORDER BY k ASC, number DESC LIMIT 1025, 1023) LIMIT 5;\n",
  "problem_statement": "PartialSortingTransform: downcast of address which does not point to an object of type ColumnVector\nhttps://s3.amazonaws.com/clickhouse-test-reports/38490/c24c041b1214345ab341726754d0f90bddb1095d/fuzzer_astfuzzerubsan,actions//report.html\r\n\r\n```\r\n2022.06.28 01:21:58.754707 [ 432 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.06.28 01:21:58.754786 [ 432 ] {} <Fatal> BaseDaemon: (version 22.7.1.1, build id: EF45FEAD681763DA) (from thread 428) (query_id: c8d8c025-3922-4030-ae47-87692c3f5415) (query: SELECT number, 1 AS k FROM numbers(100000) ORDER BY k ASC, number DESC LIMIT 1025, 1023 FORMAT Values) Received signal Unknown signal (-3)\r\n2022.06.28 01:21:58.754820 [ 432 ] {} <Fatal> BaseDaemon: Sanitizer trap.\r\n2022.06.28 01:21:58.754873 [ 432 ] {} <Fatal> BaseDaemon: Stack trace: 0xfe89d43 0x100f9071 0xfe3da06 0xfe5260d 0x243c9aad 0x254f1db1 0x254f0c8b 0x1d45a70b 0x25118351 0x2513f740 0x2513f317 0x251318f3 0x251312a4 0x25130e4a 0x25143f43 0x25143ea2 0x25143d5b 0xff3b641 0xff3e202 0x7fce19f41609 0x7fce19e66133\r\n2022.06.28 01:21:58.762976 [ 432 ] {} <Fatal> BaseDaemon: 0.1. inlined from ./build_docker/../src/Common/StackTrace.cpp:305: StackTrace::tryCapture()\r\n2022.06.28 01:21:58.763001 [ 432 ] {} <Fatal> BaseDaemon: 0. ../src/Common/StackTrace.cpp:266: StackTrace::StackTrace() @ 0xfe89d43 in /workspace/clickhouse\r\n2022.06.28 01:21:58.778914 [ 432 ] {} <Fatal> BaseDaemon: 1. ./build_docker/../src/Daemon/BaseDaemon.cpp:0: sanitizerDeathCallback() @ 0x100f9071 in /workspace/clickhouse\r\n2022.06.28 01:21:59.720554 [ 432 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0xfe3da06 in /workspace/clickhouse\r\n2022.06.28 01:22:00.647518 [ 432 ] {} <Fatal> BaseDaemon: 3. ? @ 0xfe5260d in /workspace/clickhouse\r\n2022.06.28 01:22:00.717521 [ 432 ] {} <Fatal> BaseDaemon: 4.1. inlined from ./build_docker/../src/Common/assert_cast.h:0: DB::ColumnVector<unsigned long> const& assert_cast<DB::ColumnVector<unsigned long> const&, DB::IColumn const&>(DB::IColumn const&)\r\n2022.06.28 01:22:00.717569 [ 432 ] {} <Fatal> BaseDaemon: 4. ../src/Columns/ColumnVector.h:219: DB::ColumnVector<unsigned long>::compareAt(unsigned long, unsigned long, DB::IColumn const&, int) const @ 0x243c9aad in /workspace/clickhouse\r\n2022.06.28 01:22:00.735708 [ 432 ] {} <Fatal> BaseDaemon: 5. ./build_docker/../src/Processors/Transforms/PartialSortingTransform.cpp:0: DB::(anonymous namespace)::compareWithThreshold(std::__1::vector<DB::IColumn const*, std::__1::allocator<DB::IColumn const*> > const&, unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > const&, DB::SortDescription const&) @ 0x254f1db1 in /workspace/clickhouse\r\n2022.06.28 01:22:00.751335 [ 432 ] {} <Fatal> BaseDaemon: 6. ./build_docker/../src/Processors/Transforms/PartialSortingTransform.cpp:156: DB::PartialSortingTransform::transform(DB::Chunk&) @ 0x254f0c8b in /workspace/clickhouse\r\n2022.06.28 01:22:00.766954 [ 432 ] {} <Fatal> BaseDaemon: 7. ./build_docker/../src/Processors/ISimpleTransform.h:33: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x1d45a70b in /workspace/clickhouse\r\n2022.06.28 01:22:00.778703 [ 432 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Processors/ISimpleTransform.cpp:99: DB::ISimpleTransform::work() @ 0x25118351 in /workspace/clickhouse\r\n2022.06.28 01:22:00.785994 [ 432 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:50: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) @ 0x2513f740 in /workspace/clickhouse\r\n2022.06.28 01:22:00.792709 [ 432 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:87: DB::ExecutionThreadContext::executeTask() @ 0x2513f317 in /workspace/clickhouse\r\n2022.06.28 01:22:00.807473 [ 432 ] {} <Fatal> BaseDaemon: 11. ./build_docker/../src/Processors/Executors/PipelineExecutor.cpp:222: DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x251318f3 in /workspace/clickhouse\r\n2022.06.28 01:22:00.820329 [ 432 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/Processors/Executors/PipelineExecutor.cpp:333: DB::PipelineExecutor::executeImpl(unsigned long) @ 0x251312a4 in /workspace/clickhouse\r\n2022.06.28 01:22:00.834712 [ 432 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:284: std::__1::unique_ptr<DB::ExecutingGraph, std::__1::default_delete<DB::ExecutingGraph> >::operator->() const\r\n2022.06.28 01:22:00.834740 [ 432 ] {} <Fatal> BaseDaemon: 13. ../src/Processors/Executors/PipelineExecutor.cpp:91: DB::PipelineExecutor::execute(unsigned long) @ 0x25130e4a in /workspace/clickhouse\r\n2022.06.28 01:22:00.849309 [ 432 ] {} <Fatal> BaseDaemon: 14. ./build_docker/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:0: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0x25143f43 in /workspace/clickhouse\r\n2022.06.28 01:22:00.863723 [ 432 ] {} <Fatal> BaseDaemon: 15. ./build_docker/../contrib/libcxx/include/type_traits:3648: decltype(static_cast<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) @ 0x25143ea2 in /workspace/clickhouse\r\n2022.06.28 01:22:00.878061 [ 432 ] {} <Fatal> BaseDaemon: 16.1. inlined from ./build_docker/../contrib/libcxx/include/tuple:0: operator()\r\n2022.06.28 01:22:00.878089 [ 432 ] {} <Fatal> BaseDaemon: 16. ../contrib/libcxx/include/type_traits:3640: decltype(static_cast<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) @ 0x25143d5b in /workspace/clickhouse\r\n2022.06.28 01:22:00.887537 [ 432 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./build_docker/../contrib/libcxx/include/__functional/function.h:1157: std::__1::function<void ()>::operator=(std::nullptr_t)\r\n2022.06.28 01:22:00.887558 [ 432 ] {} <Fatal> BaseDaemon: 17. ../src/Common/ThreadPool.cpp:284: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xff3b641 in /workspace/clickhouse\r\n2022.06.28 01:22:00.898664 [ 432 ] {} <Fatal> BaseDaemon: 18. ./build_docker/../src/Common/ThreadPool.cpp:0: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xff3e202 in /workspace/clickhouse\r\n2022.06.28 01:22:00.898687 [ 432 ] {} <Fatal> BaseDaemon: 19. ? @ 0x7fce19f41609 in ?\r\n2022.06.28 01:22:00.898703 [ 432 ] {} <Fatal> BaseDaemon: 20. clone @ 0x7fce19e66133 in ?\r\n2022.06.28 01:22:01.186369 [ 432 ] {} <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read. (calculated checksum: B5B8EF1A82E75D4E8745FC1D8B6E2736)\r\n\r\n```\r\n\r\nProbably related to #37992\n",
  "hints_text": "",
  "created_at": "2022-06-27T08:37:24Z",
  "modified_files": [
    "src/Processors/Transforms/PartialSortingTransform.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02345_partial_sort_transform_optimization.reference",
    "b/tests/queries/0_stateless/02345_partial_sort_transform_optimization.sql"
  ]
}