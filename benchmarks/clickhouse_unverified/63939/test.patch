diff --git a/tests/queries/0_stateless/03154_recursive_cte_distributed.reference b/tests/queries/0_stateless/03154_recursive_cte_distributed.reference
new file mode 100644
index 000000000000..0dd6d31104dc
--- /dev/null
+++ b/tests/queries/0_stateless/03154_recursive_cte_distributed.reference
@@ -0,0 +1,26 @@
+a		['']	0
+b	a	['a']	0
+c	a	['a']	0
+b	a	['','b']	1
+c	a	['','c']	1
+--
+a		['']	0
+b	a	['a']	0
+c	a	['a']	0
+b	a	['','b']	1
+c	a	['','c']	1
+--
+a		['']	0
+a		['']	0
+b	a	['a']	0
+b	a	['a']	0
+c	a	['a']	0
+c	a	['a']	0
+b	a	['','b']	1
+b	a	['','b']	1
+b	a	['','b']	1
+b	a	['','b']	1
+c	a	['','c']	1
+c	a	['','c']	1
+c	a	['','c']	1
+c	a	['','c']	1
diff --git a/tests/queries/0_stateless/03154_recursive_cte_distributed.sql b/tests/queries/0_stateless/03154_recursive_cte_distributed.sql
new file mode 100644
index 000000000000..b8c3356d5d6e
--- /dev/null
+++ b/tests/queries/0_stateless/03154_recursive_cte_distributed.sql
@@ -0,0 +1,48 @@
+-- Tags: shard
+
+SET allow_experimental_analyzer = 1;
+
+DROP TABLE IF EXISTS test_table;
+CREATE TABLE test_table
+(
+    id String,
+    parent_id String
+)
+ENGINE = MergeTree ORDER BY id;
+
+INSERT INTO test_table VALUES ('a', '');
+INSERT INTO test_table VALUES ('b', 'a');
+INSERT INTO test_table VALUES ('c', 'a');
+
+WITH RECURSIVE search_tree AS (
+    SELECT id, parent_id, [parent_id] AS path, toUInt64(0) AS depth
+    FROM test_table
+    UNION ALL
+    SELECT t.id, t.parent_id, arrayConcat(path, [t.id]) as path, depth + 1
+    FROM test_table t, search_tree st
+    WHERE t.parent_id = st.id)
+SELECT * FROM search_tree ORDER BY depth, id, parent_id;
+
+SELECT '--';
+
+WITH RECURSIVE search_tree AS (
+    SELECT id, parent_id, [parent_id] AS path, toUInt64(0) AS depth
+    FROM remote('127.0.0.1', currentDatabase(), test_table)
+    UNION ALL
+    SELECT t.id, t.parent_id, arrayConcat(path, [t.id]) as path, depth + 1
+    FROM remote('127.0.0.1', currentDatabase(), test_table) t, search_tree st
+    WHERE t.parent_id = st.id)
+SELECT * FROM search_tree ORDER BY depth, id, parent_id;
+
+SELECT '--';
+
+WITH RECURSIVE search_tree AS (
+    SELECT id, parent_id, [parent_id] AS path, toUInt64(0) AS depth
+    FROM remote('127.0.0.{1,2}', currentDatabase(), test_table)
+    UNION ALL
+    SELECT t.id, t.parent_id, arrayConcat(path, [t.id]) as path, depth + 1
+    FROM remote('127.0.0.{1,2}', currentDatabase(), test_table) t, search_tree st
+    WHERE t.parent_id = st.id)
+SELECT * FROM search_tree ORDER BY depth, id, parent_id;;
+
+DROP TABLE test_table;
