{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 57988,
  "instance_id": "ClickHouse__ClickHouse-57988",
  "issue_numbers": [
    "57987"
  ],
  "base_commit": "34cdecea70f9175acbc4654a45fdbb87a1e00e4d",
  "patch": "diff --git a/src/Interpreters/RequiredSourceColumnsVisitor.cpp b/src/Interpreters/RequiredSourceColumnsVisitor.cpp\nindex 1bcec02f0c0a..c07d783788ad 100644\n--- a/src/Interpreters/RequiredSourceColumnsVisitor.cpp\n+++ b/src/Interpreters/RequiredSourceColumnsVisitor.cpp\n@@ -8,6 +8,7 @@\n #include <Parsers/ASTSubquery.h>\n #include <Parsers/ASTTablesInSelectQuery.h>\n #include <Parsers/ASTInterpolateElement.h>\n+#include <Parsers/ASTLiteral.h>\n \n namespace DB\n {\n@@ -126,7 +127,7 @@ void RequiredSourceColumnsMatcher::visit(const ASTSelectQuery & select, const AS\n \n         if (const auto * identifier = node->as<ASTIdentifier>())\n             data.addColumnIdentifier(*identifier);\n-        else\n+        else if (!node->as<ASTLiteral>())\n             data.addColumnAliasIfAny(*node);\n     }\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02946_literal_alias_misclassification.reference b/tests/queries/0_stateless/02946_literal_alias_misclassification.reference\nnew file mode 100644\nindex 000000000000..d8e5a437352b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02946_literal_alias_misclassification.reference\n@@ -0,0 +1,2 @@\n+const\t1\n+const\t2\ndiff --git a/tests/queries/0_stateless/02946_literal_alias_misclassification.sql b/tests/queries/0_stateless/02946_literal_alias_misclassification.sql\nnew file mode 100644\nindex 000000000000..0d001bf1e4c6\n--- /dev/null\n+++ b/tests/queries/0_stateless/02946_literal_alias_misclassification.sql\n@@ -0,0 +1,24 @@\n+DROP TABLE IF EXISTS literal_alias_misclassification;\n+\n+CREATE TABLE literal_alias_misclassification\n+(\n+    `id` Int64,\n+    `a` Nullable(String),\n+    `b` Nullable(Int64)\n+)\n+ENGINE = MergeTree\n+ORDER BY id;\n+\n+\n+INSERT INTO literal_alias_misclassification values(1, 'a', 1);\n+INSERT INTO literal_alias_misclassification values(2, 'b', 2);\n+\n+SELECT 'const' AS r, b \n+FROM\n+  ( SELECT a AS r, b FROM literal_alias_misclassification ) AS t1\n+  LEFT JOIN\n+  ( SELECT a AS r FROM literal_alias_misclassification ) AS t2 \n+  ON t1.r = t2.r\n+ORDER BY b;\n+\n+DROP TABLE IF EXISTS literal_alias_misclassification;\n",
  "problem_statement": "When literal alias matches subquery alias, 'Not found column xx in block' error occurs.\n```\r\nCREATE TABLE test\r\n(\r\n    `id` Int64,\r\n    `a` Nullable(String),\r\n    `b` Nullable(Int64)\r\n)\r\nENGINE = MergeTree\r\nORDER BY id;\r\n```\r\n\r\n```\r\nSELECT 'const' AS r, b \r\nFROM\r\n  ( SELECT a AS r, b FROM test) AS t1\r\n  LEFT JOIN\r\n  ( SELECT a AS r FROM test) AS t2 \r\n  ON t1.r = t2.r\r\nORDER BY b;\r\n```\r\n\r\nCode: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column r in block. There are only columns: b. (NOT_FOUND_COLUMN_IN_BLOCK)\r\n\r\n![image](https://github.com/ClickHouse/ClickHouse/assets/67011523/be46de07-e10c-4f01-9adf-afaa510e82c5)\r\n\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2023-12-18T12:06:13Z",
  "modified_files": [
    "src/Interpreters/RequiredSourceColumnsVisitor.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02946_literal_alias_misclassification.reference",
    "b/tests/queries/0_stateless/02946_literal_alias_misclassification.sql"
  ]
}