You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
group by _part: Not found column _nothing in block
Test
```
DROP TABLE IF EXISTS  test_not_found_column_nothing;

CREATE TABLE test_not_found_column_nothing 
(
    col001 UInt8,
    col002 UInt8
) Engine=MergeTree ORDER BY tuple();

INSERT INTO test_not_found_column_nothing(col001) VALUES (1);

select _part, count() from test_not_found_column_nothing where col001 = 1 group by _part;

DROP TABLE IF EXIST test_not_found_column_nothing;
```

Stacktrace
```
Received exception from server (version 20.6.1):
Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column _nothing in block. There are only columns: : While executing MergeTreeThread. Stack trace:

0. /contrib/libcxx/include/exception:129: std::exception::capture() @ 0x15bd11e8 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
1. /contrib/libcxx/include/exception:109: std::exception::exception() @ 0x15bd11b5 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
2. /contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x214933f3 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
3. /src/Common/Exception.cpp:37: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x15bca4a3 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
4. /src/Core/Block.cpp:216: DB::Block::getPositionByName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x1c4438e2 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
5. /src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:181: DB::MergeTreeBaseSelectProcessor::readFromPartImpl() @ 0x1d6c916b in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
6. /src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:194: DB::MergeTreeBaseSelectProcessor::readFromPart() @ 0x1d6c9549 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
7. /src/Storages/MergeTree/MergeTreeBaseSelectProcessor.cpp:57: DB::MergeTreeBaseSelectProcessor::generate() @ 0x1d6c8451 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
8. /src/Processors/ISource.cpp:48: DB::ISource::work() @ 0x1d914eb7 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
9. /src/Processors/Sources/SourceWithProgress.cpp:30: DB::SourceWithProgress::work() @ 0x1dbc15cd in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
10. /src/Processors/Executors/PipelineExecutor.cpp:155: DB::executeJob(DB::IProcessor*) @ 0x1d96262c in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
11. /src/Processors/Executors/PipelineExecutor.cpp:172: DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1::operator()() const @ 0x1d9625a0 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
12. /contrib/libcxx/include/type_traits:3519: decltype(std::__1::forward<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(fp)()) std::__1::__invoke<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&) @ 0x1d96255d in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
13. /contrib/libcxx/include/__functional_base:349: void std::__1::__invoke_void_return_wrapper<void>::__call<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&>(DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1&) @ 0x1d96250d in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
14. /contrib/libcxx/include/functional:1540: std::__1::__function::__alloc_func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1, std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1>, void ()>::operator()() @ 0x1d9624dd in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
15. /contrib/libcxx/include/functional:1714: std::__1::__function::__func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1, std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::$_1>, void ()>::operator()() @ 0x1d96163e in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
16. /contrib/libcxx/include/functional:1867: std::__1::__function::__value_func<void ()>::operator()() const @ 0x15bed2b5 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
17. /contrib/libcxx/include/functional:2473: std::__1::function<void ()>::operator()() const @ 0x15bec225 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
18. /src/Processors/Executors/PipelineExecutor.cpp:633: DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x1d95fdd5 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
19. /src/Processors/Executors/PipelineExecutor.cpp:546: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0x1d9605e7 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
20. /src/Processors/Executors/PipelineExecutor.cpp:803: DB::PipelineExecutor::executeImpl(unsigned long)::$_5::operator()() const @ 0x1d96488c in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
21. /contrib/libcxx/include/type_traits:3525: decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_5 const&>(fp)()) std::__1::__invoke_constexpr<DB::PipelineExecutor::executeImpl(unsigned long)::$_5 const&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5 const&) @ 0x1d9647ed in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
22. /contrib/libcxx/include/tuple:1415: decltype(auto) std::__1::__apply_tuple_impl<DB::PipelineExecutor::executeImpl(unsigned long)::$_5 const&, std::__1::tuple<> const&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5 const&, std::__1::tuple<> const&, std::__1::__tuple_indices<>) @ 0x1d9647b1 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
23. /contrib/libcxx/include/tuple:1424: decltype(auto) std::__1::apply<DB::PipelineExecutor::executeImpl(unsigned long)::$_5 const&, std::__1::tuple<> const&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5 const&, std::__1::tuple<> const&) @ 0x1d964782 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
24. /src/Common/ThreadPool.h:168: ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_5>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&)::'lambda'()::operator()() const @ 0x1d96467c in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
25. /contrib/libcxx/include/type_traits:3519: decltype(std::__1::forward<DB::PipelineExecutor::executeImpl(unsigned long)::$_5>(fp)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_5>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&) @ 0x1d96460d in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
26. /contrib/libcxx/include/__functional_base:349: void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_5>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&)::'lambda'()&>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&...) @ 0x1d9645bd in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
27. /contrib/libcxx/include/functional:1540: std::__1::__function::__alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_5>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_5>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&)::'lambda'()>, void ()>::operator()() @ 0x1d96458d in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
28. /contrib/libcxx/include/functional:1714: std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_5>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::$_5>(DB::PipelineExecutor::executeImpl(unsigned long)::$_5&&)::'lambda'()>, void ()>::operator()() @ 0x1d96373e in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
29. /contrib/libcxx/include/functional:1867: std::__1::__function::__value_func<void ()>::operator()() const @ 0x15bed2b5 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
30. /contrib/libcxx/include/functional:2473: std::__1::function<void ()>::operator()() const @ 0x15bec225 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse
31. /src/Common/ThreadPool.cpp:227: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x15c0f520 in /home/mfilimonov/workspace/ClickHouse/build-vscode/clang_8_Debug/programs/clickhouse

```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
