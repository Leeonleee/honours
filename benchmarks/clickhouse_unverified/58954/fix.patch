diff --git a/src/DataTypes/DataTypesNumber.cpp b/src/DataTypes/DataTypesNumber.cpp
index 1c0c418411bd..e472021e756a 100644
--- a/src/DataTypes/DataTypesNumber.cpp
+++ b/src/DataTypes/DataTypesNumber.cpp
@@ -87,6 +87,7 @@ void registerDataTypeNumbers(DataTypeFactory & factory)
     factory.registerAlias("MEDIUMINT SIGNED", "Int32", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("INT SIGNED", "Int32", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("INTEGER SIGNED", "Int32", DataTypeFactory::CaseInsensitive);
+    factory.registerAlias("SIGNED", "Int64", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("BIGINT SIGNED", "Int64", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("TINYINT UNSIGNED", "UInt8", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("INT1 UNSIGNED", "UInt8", DataTypeFactory::CaseInsensitive);
@@ -94,9 +95,10 @@ void registerDataTypeNumbers(DataTypeFactory & factory)
     factory.registerAlias("MEDIUMINT UNSIGNED", "UInt32", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("INT UNSIGNED", "UInt32", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("INTEGER UNSIGNED", "UInt32", DataTypeFactory::CaseInsensitive);
+    factory.registerAlias("UNSIGNED", "UInt64", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("BIGINT UNSIGNED", "UInt64", DataTypeFactory::CaseInsensitive);
-    factory.registerAlias("BIT", "UInt64", DataTypeFactory::CaseInsensitive);  /// MySQL
-    factory.registerAlias("SET", "UInt64", DataTypeFactory::CaseInsensitive);  /// MySQL
+    factory.registerAlias("BIT", "UInt64", DataTypeFactory::CaseInsensitive);
+    factory.registerAlias("SET", "UInt64", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("YEAR", "UInt16", DataTypeFactory::CaseInsensitive);
     factory.registerAlias("TIME", "Int64", DataTypeFactory::CaseInsensitive);
 }
