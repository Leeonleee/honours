You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Cannot access the joined table's columns after `GROUP BY` in case first table's engine is Merge
**Describe the bug**
Cannot aggregate data after joining Merge table with MergeTree (with results of subquery execution in our case actually) table. "DB::Exception: Not found column ..." error occurs. See details below.

There is similar issue #11755 which has been already closed by #16993. Unfortunately that pull request doesn't fix this particular problem. 

We are using 20.8 LTS. Can we expect that the problem would be fixed in that version (it seems that #16993 hasn't been backported in 20.8 for some reason)?


**How to reproduce**
It was tested on **20.8.5.45** and **20.12.3.3**

Create tables an fill data:
```sql
CREATE TABLE test_table (Id Int32, Foo Int32) ENGINE = MergeTree ORDER BY Id;

CREATE TABLE test_table_merge AS test_table ENGINE = Merge(currentDatabase(), 'test_table');

INSERT INTO test_table (Id, Foo) VALUES (1, 1);
```

Tests on **20.8.5.45**:
```sql
-- Left table has Merge engine
SELECT any(t2.Foo)
FROM test_table_merge AS t1
LEFT JOIN test_table AS t2 ON t1.Id = t2.Id
GROUP BY t1.Id

/*
Received exception from server (version 20.8.5):
Code: 10. DB::Exception: Received from clickhouse-server:9000. DB::Exception: Not found column t2.Foo in block. There are only columns: Id.

0 rows in set. Elapsed: 0.003 sec.
*/

-- Left table hasn't Merge engine
SELECT any(t2.Foo)
FROM test_table AS t1
LEFT JOIN test_table AS t2 ON t1.Id = t2.Id
GROUP BY t1.Id

/*
┌─any(t2.Foo)─┐
│           1 │
└─────────────┘

1 rows in set. Elapsed: 0.016 sec.
*/
```

Tests on **20.12.3.3**:
```sql
-- Left table has Merge engine
SELECT any(t2.Foo)
FROM test_table_merge AS t1
LEFT JOIN test_table AS t2 ON t1.Id = t2.Id
GROUP BY t1.Id

/*
Received exception from server (version 20.12.3):
Code: 47. DB::Exception: Received from clickhouse-server:9000. DB::Exception: Unknown identifier (in aggregate function 'any'): t2.Foo.

0 rows in set. Elapsed: 0.003 sec.
*/

-- Left table hasn't Merge engine
SELECT any(t2.Foo)
FROM test_table AS t1
LEFT JOIN test_table AS t2 ON t1.Id = t2.Id
GROUP BY t1.Id

/*
┌─any(t2.Foo)─┐
│           1 │
└─────────────┘

1 rows in set. Elapsed: 0.013 sec.
*/
```

**Expected behavior**
Can access the joined table's columns after `GROUP BY`.
Engine Merge with Join does not use partition key / primary key
20.8.14.4 
affected all versions after https://github.com/ClickHouse/ClickHouse/issues/15228 https://github.com/ClickHouse/ClickHouse/pull/15242

```sql
create table foo(A Int64, V Int64, S String) Engine=MergeTree partition by V order by A;
insert into foo select number, number%5, '' from numbers(100000);
create table foo_merge as foo ENGINE=Merge(currentDatabase(), '^foo');

select count(), B from foo_merge join 
   (select materialize('') as S, 5 B) x using S 
where V = 4 
group by B

Key condition: unknown
MinMax index condition: unknown
Selected 5 parts by date, 5 parts by key, 15 marks by primary key, 15 marks to read from 5 ranges

Processed 100.00 thousand rows

select count(), B from foo_merge join 
   (select materialize('') as S, 5 B) x using S 
where V = 4 and A = 4 
group by B 

Key condition: unknown
MinMax index condition: unknown
Selected 5 parts by date, 5 parts by key, 15 marks by primary key, 15 marks to read from 5 ranges

Processed 100.00 thousand rows

```

without merge
```sql
select count(), B from foo join 
   (select materialize('') as S, 5 B) x using S 
where V = 4 and A = 4 
group by B 

Key condition: unknown, (column 0 in [4, 4]), and
MinMax index condition: (column 0 in [4, 4]), unknown, and
Selected 1 parts by date, 1 parts by key, 1 marks by primary key, 1 marks to read from 1 ranges
Processed 8.19 thousand rows
```

WA (subquery):

```sql
select count(), B from (select * from foo_merge) f join 
   (select materialize('') as S, 5 B) x using S 
where V = 4 and A = 4 
group by B 

Key condition: (column 0 in [4, 4]), unknown, and
MinMax index condition: unknown, (column 0 in [4, 4]), and
Selected 1 parts by date, 1 parts by key, 1 marks by primary key, 1 marks to read from 1 ranges
Processed 8.19 thousand rows

```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
