diff --git a/tests/queries/0_stateless/01483_merge_table_join_and_group_by.reference b/tests/queries/0_stateless/01483_merge_table_join_and_group_by.reference
index b2c3ea56b7f7..4261ccd8a1f8 100644
--- a/tests/queries/0_stateless/01483_merge_table_join_and_group_by.reference
+++ b/tests/queries/0_stateless/01483_merge_table_join_and_group_by.reference
@@ -5,3 +5,5 @@
 1
 0	1
 0	1
+1	0
+1
diff --git a/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql b/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql
index a6678ca9040e..68b4e7d4015a 100644
--- a/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql
+++ b/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql
@@ -17,6 +17,9 @@ SELECT ID FROM m INNER JOIN b USING(key) GROUP BY ID;
 SELECT * FROM m INNER JOIN b USING(key) WHERE ID = 1 HAVING ID = 1 ORDER BY ID;
 SELECT * FROM m INNER JOIN b USING(key) WHERE ID = 1 GROUP BY ID, key HAVING ID = 1 ORDER BY ID;
 
+SELECT sum(b.ID), sum(m.key) FROM m FULL JOIN b ON (m.key == b.key) GROUP BY key;
+SELECT sum(b.ID + m.key) FROM m FULL JOIN b ON (m.key == b.key) GROUP BY key;
+
 DROP TABLE IF EXISTS a;
 DROP TABLE IF EXISTS b;
 DROP TABLE IF EXISTS m;
diff --git a/tests/queries/0_stateless/01783_merge_engine_join_key_condition.reference b/tests/queries/0_stateless/01783_merge_engine_join_key_condition.reference
new file mode 100644
index 000000000000..4068a6e00ddd
--- /dev/null
+++ b/tests/queries/0_stateless/01783_merge_engine_join_key_condition.reference
@@ -0,0 +1,5 @@
+3	3
+1	4
+1	4
+1	4
+1	4
diff --git a/tests/queries/0_stateless/01783_merge_engine_join_key_condition.sql b/tests/queries/0_stateless/01783_merge_engine_join_key_condition.sql
new file mode 100644
index 000000000000..115ee42fe116
--- /dev/null
+++ b/tests/queries/0_stateless/01783_merge_engine_join_key_condition.sql
@@ -0,0 +1,23 @@
+DROP TABLE IF EXISTS foo;
+DROP TABLE IF EXISTS foo_merge;
+DROP TABLE IF EXISTS t2;
+
+CREATE TABLE foo(Id Int32, Val Int32) Engine=MergeTree PARTITION BY Val ORDER BY Id;
+INSERT INTO foo SELECT number, number%5 FROM numbers(100000);
+
+CREATE TABLE foo_merge as foo ENGINE=Merge(currentDatabase(), '^foo');
+
+CREATE TABLE t2 (Id Int32, Val Int32, X Int32) Engine=Memory;
+INSERT INTO t2 values (4, 3, 4);
+
+SET force_primary_key = 1;
+
+SELECT * FROM foo_merge WHERE Val = 3 AND Id = 3;
+SELECT count(), X FROM foo_merge JOIN t2 USING Val WHERE Val = 3 AND Id = 3 AND t2.X == 4 GROUP BY X;
+SELECT count(), X FROM foo_merge JOIN t2 USING Val WHERE Val = 3 AND (Id = 3 AND t2.X == 4) GROUP BY X;
+SELECT count(), X FROM foo_merge JOIN t2 USING Val WHERE Val = 3 AND Id = 3 GROUP BY X;
+SELECT count(), X FROM (SELECT * FROM foo_merge) f JOIN t2 USING Val WHERE Val = 3 AND Id = 3 GROUP BY X;
+
+DROP TABLE IF EXISTS foo;
+DROP TABLE IF EXISTS foo_merge;
+DROP TABLE IF EXISTS t2;
