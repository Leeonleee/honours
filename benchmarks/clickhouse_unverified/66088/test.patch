diff --git a/tests/queries/0_stateless/02010_array_index_bad_cast.reference b/tests/queries/0_stateless/02010_array_index_bad_cast.reference
index e69de29bb2d1..e22493782f08 100644
--- a/tests/queries/0_stateless/02010_array_index_bad_cast.reference
+++ b/tests/queries/0_stateless/02010_array_index_bad_cast.reference
@@ -0,0 +1,3 @@
+1
+0
+0
diff --git a/tests/queries/0_stateless/02010_array_index_bad_cast.sql b/tests/queries/0_stateless/02010_array_index_bad_cast.sql
index 14162e0d2e29..590e60eb42eb 100644
--- a/tests/queries/0_stateless/02010_array_index_bad_cast.sql
+++ b/tests/queries/0_stateless/02010_array_index_bad_cast.sql
@@ -1,3 +1,4 @@
--- This query throws exception about uncomparable data types (but at least it does not introduce bad cast in code).
 SET allow_suspicious_low_cardinality_types=1;
-SELECT has(materialize(CAST(['2021-07-14'] AS Array(LowCardinality(Nullable(DateTime))))), materialize('2021-07-14'::DateTime64(7))); -- { serverError ILLEGAL_COLUMN }
+SELECT has(materialize(CAST(['2021-07-14'] AS Array(LowCardinality(Nullable(DateTime))))), materialize('2021-07-14'::DateTime64(7)));
+SELECT has(materialize(CAST(['2021-07-14'] AS Array(LowCardinality(Nullable(DateTime))))), materialize('2021-07-14 00:00:01'::DateTime64(7)));
+SELECT has(materialize(CAST(['2021-07-14'] AS Array(LowCardinality(Nullable(DateTime))))), materialize(NULL));
diff --git a/tests/queries/0_stateless/03199_has_lc_fixed_string.reference b/tests/queries/0_stateless/03199_has_lc_fixed_string.reference
new file mode 100644
index 000000000000..b261da18d51a
--- /dev/null
+++ b/tests/queries/0_stateless/03199_has_lc_fixed_string.reference
@@ -0,0 +1,2 @@
+1
+0
diff --git a/tests/queries/0_stateless/03199_has_lc_fixed_string.sql b/tests/queries/0_stateless/03199_has_lc_fixed_string.sql
new file mode 100644
index 000000000000..3cb551804b7e
--- /dev/null
+++ b/tests/queries/0_stateless/03199_has_lc_fixed_string.sql
@@ -0,0 +1,7 @@
+DROP TABLE IF EXISTS 03199_fixedstring_array;
+CREATE TABLE 03199_fixedstring_array (arr Array(LowCardinality(FixedString(8)))) ENGINE = Memory;
+INSERT INTO 03199_fixedstring_array VALUES (['a', 'b']), (['c', 'd']);
+
+SELECT has(arr, toFixedString(materialize('a'), 1)) FROM 03199_fixedstring_array;
+
+DROP TABLE 03199_fixedstring_array;
