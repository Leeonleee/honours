diff --git a/tests/integration/test_backup_log/__init__.py b/tests/integration/test_backup_log/__init__.py
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/integration/test_backup_log/configs/config.d/backups.xml b/tests/integration/test_backup_log/configs/config.d/backups.xml
new file mode 100644
index 000000000000..5e2e3ee9d716
--- /dev/null
+++ b/tests/integration/test_backup_log/configs/config.d/backups.xml
@@ -0,0 +1,5 @@
+<clickhouse>
+    <backups>
+        <allowed_path>/backups</allowed_path>
+    </backups>
+</clickhouse>
diff --git a/tests/integration/test_backup_log/configs/config.xml b/tests/integration/test_backup_log/configs/config.xml
new file mode 100644
index 000000000000..e2c81f4068e3
--- /dev/null
+++ b/tests/integration/test_backup_log/configs/config.xml
@@ -0,0 +1,8 @@
+<clickhouse>
+    <backup_log>
+        <database>system</database>
+        <table>backup_log</table>
+        <partition_by>toYYYYMM(event_date)</partition_by>
+        <flush_interval_milliseconds>0</flush_interval_milliseconds>
+    </backup_log>
+</clickhouse>
diff --git a/tests/integration/test_backup_log/test.py b/tests/integration/test_backup_log/test.py
new file mode 100644
index 000000000000..a1c09d8e0913
--- /dev/null
+++ b/tests/integration/test_backup_log/test.py
@@ -0,0 +1,58 @@
+import pytest
+from helpers.cluster import ClickHouseCluster
+from helpers.test_tools import TSV
+
+
+cluster = ClickHouseCluster(__file__)
+
+instance = cluster.add_instance(
+    "instance",
+    main_configs=["configs/config.xml", "configs/config.d/backups.xml"],
+    stay_alive=True,
+)
+
+
+@pytest.fixture(scope="module", autouse=True)
+def start_cluster():
+    try:
+        cluster.start()
+        yield cluster
+    finally:
+        cluster.shutdown()
+
+
+def backup_table(backup_name):
+    instance.query("CREATE DATABASE test")
+    instance.query("CREATE TABLE test.table(x UInt32) ENGINE=MergeTree ORDER BY x")
+    instance.query("INSERT INTO test.table SELECT number FROM numbers(10)")
+    return instance.query(f"BACKUP TABLE test.table TO {backup_name}").split("\t")[0]
+
+
+def restore_table(backup_name):
+    return instance.query(f"RESTORE TABLE test.table FROM {backup_name}").split("\t")[0]
+
+
+def test_backup_log():
+    backup_name = "File('/backups/test_backup/')"
+    assert instance.query("SELECT * FROM system.tables WHERE name = 'backup_log'") == ""
+
+    backup_id = backup_table(backup_name)
+    assert instance.query(
+        f"SELECT status, error FROM system.backup_log WHERE id='{backup_id}' ORDER BY event_date, event_time_microseconds"
+    ) == TSV([["CREATING_BACKUP", ""], ["BACKUP_CREATED", ""]])
+
+    instance.query("DROP TABLE test.table SYNC")
+
+    restore_id = restore_table(backup_name)
+    assert instance.query(
+        f"SELECT status, error FROM system.backup_log WHERE id='{restore_id}' ORDER BY event_date, event_time_microseconds"
+    ) == TSV([["RESTORING", ""], ["RESTORED", ""]])
+
+    instance.restart_clickhouse()
+
+    assert instance.query(
+        f"SELECT status, error FROM system.backup_log WHERE id='{backup_id}' ORDER BY event_date, event_time_microseconds"
+    ) == TSV([["CREATING_BACKUP", ""], ["BACKUP_CREATED", ""]])
+    assert instance.query(
+        f"SELECT status, error FROM system.backup_log WHERE id='{restore_id}' ORDER BY event_date, event_time_microseconds"
+    ) == TSV([["RESTORING", ""], ["RESTORED", ""]])
diff --git a/tests/integration/test_backup_restore_new/test.py b/tests/integration/test_backup_restore_new/test.py
index a6ba0c8918fb..4a26a470aab8 100644
--- a/tests/integration/test_backup_restore_new/test.py
+++ b/tests/integration/test_backup_restore_new/test.py
@@ -1236,6 +1236,7 @@ def test_backup_all(exclude_system_log_tables):
             "transactions_info_log",
             "processors_profile_log",
             "asynchronous_insert_log",
+            "backup_log",
         ]
         exclude_from_backup += ["system." + table_name for table_name in log_tables]
 
