{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 77667,
  "instance_id": "ClickHouse__ClickHouse-77667",
  "issue_numbers": [
    "72958"
  ],
  "base_commit": "69c4f52ab9d1b207cd1de1a90f45d50554331081",
  "patch": "diff --git a/src/Functions/currentProfiles.cpp b/src/Functions/currentProfiles.cpp\nindex 3b6940e0af6a..53bc87fcc441 100644\n--- a/src/Functions/currentProfiles.cpp\n+++ b/src/Functions/currentProfiles.cpp\n@@ -1,4 +1,5 @@\n #include <Access/AccessControl.h>\n+#include <Access/ContextAccess.h>\n #include <Access/User.h>\n #include <Columns/ColumnArray.h>\n #include <Columns/ColumnConst.h>\n@@ -8,7 +9,6 @@\n #include <Functions/FunctionFactory.h>\n #include <Functions/IFunction.h>\n #include <Interpreters/Context.h>\n-#include \"Access/ContextAccess.h\"\n \n \n namespace DB\ndiff --git a/src/Functions/currentRoles.cpp b/src/Functions/currentRoles.cpp\nindex 3586f1373ea2..8851352d8df1 100644\n--- a/src/Functions/currentRoles.cpp\n+++ b/src/Functions/currentRoles.cpp\n@@ -1,15 +1,17 @@\n #include <base/sort.h>\n-#include <Functions/IFunction.h>\n-#include <Functions/FunctionFactory.h>\n-#include <Interpreters/Context.h>\n+\n #include <Access/AccessControl.h>\n+#include <Access/ContextAccess.h>\n #include <Access/EnabledRolesInfo.h>\n #include <Access/User.h>\n #include <Columns/ColumnArray.h>\n #include <Columns/ColumnConst.h>\n #include <Columns/ColumnString.h>\n-#include <DataTypes/DataTypeString.h>\n #include <DataTypes/DataTypeArray.h>\n+#include <DataTypes/DataTypeString.h>\n+#include <Functions/FunctionFactory.h>\n+#include <Functions/IFunction.h>\n+#include <Interpreters/Context.h>\n \n \n namespace DB\n@@ -75,8 +77,8 @@ namespace\n             {\n                 static_assert(kind == Kind::DEFAULT_ROLES);\n                 const auto & manager = context->getAccessControl();\n-                auto user = context->getUser();\n-                role_names = manager.tryReadNames(user->granted_roles.findGranted(user->default_roles));\n+                if (const auto user = context->getAccess()->tryGetUser())\n+                    role_names = manager.tryReadNames(user->granted_roles.findGranted(user->default_roles));\n             }\n \n             /// We sort the names because the result of the function should not depend on the order of UUIDs.\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/03362_default_profiles_context.sql b/tests/queries/0_stateless/03362_default_profiles_context.sql\nindex e0a0602533aa..92954c8ceac4 100644\n--- a/tests/queries/0_stateless/03362_default_profiles_context.sql\n+++ b/tests/queries/0_stateless/03362_default_profiles_context.sql\n@@ -1,1 +1,2 @@\n CREATE TEMPORARY TABLE t0 (c0 Int TTL defaultProfiles()) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\n+CREATE TEMPORARY TABLE t0 (c0 Int TTL defaultRoles()) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\n",
  "problem_statement": "Logical Error: No user in current context, it's a bug\n**Describe the bug**\r\nCalling `defaultRoles()` function inside a projection.\r\n\r\n**How to reproduce**\r\nRun: https://fiddle.clickhouse.com/aff007d7-9d06-4900-a287-63cf11588159\n",
  "hints_text": "Also happens in TTL expression here: https://fiddle.clickhouse.com/fcea29c4-5281-4d44-bef4-2712a084dff2\nThe issue still happens with `defaultRoles` function: https://fiddle.clickhouse.com/2e7fc7ec-6c02-4a96-af6e-963c501ad23f",
  "created_at": "2025-03-15T02:42:46Z",
  "modified_files": [
    "src/Functions/currentProfiles.cpp",
    "src/Functions/currentRoles.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/03362_default_profiles_context.sql"
  ]
}