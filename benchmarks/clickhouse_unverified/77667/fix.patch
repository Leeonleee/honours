diff --git a/src/Functions/currentProfiles.cpp b/src/Functions/currentProfiles.cpp
index 3b6940e0af6a..53bc87fcc441 100644
--- a/src/Functions/currentProfiles.cpp
+++ b/src/Functions/currentProfiles.cpp
@@ -1,4 +1,5 @@
 #include <Access/AccessControl.h>
+#include <Access/ContextAccess.h>
 #include <Access/User.h>
 #include <Columns/ColumnArray.h>
 #include <Columns/ColumnConst.h>
@@ -8,7 +9,6 @@
 #include <Functions/FunctionFactory.h>
 #include <Functions/IFunction.h>
 #include <Interpreters/Context.h>
-#include "Access/ContextAccess.h"
 
 
 namespace DB
diff --git a/src/Functions/currentRoles.cpp b/src/Functions/currentRoles.cpp
index 3586f1373ea2..8851352d8df1 100644
--- a/src/Functions/currentRoles.cpp
+++ b/src/Functions/currentRoles.cpp
@@ -1,15 +1,17 @@
 #include <base/sort.h>
-#include <Functions/IFunction.h>
-#include <Functions/FunctionFactory.h>
-#include <Interpreters/Context.h>
+
 #include <Access/AccessControl.h>
+#include <Access/ContextAccess.h>
 #include <Access/EnabledRolesInfo.h>
 #include <Access/User.h>
 #include <Columns/ColumnArray.h>
 #include <Columns/ColumnConst.h>
 #include <Columns/ColumnString.h>
-#include <DataTypes/DataTypeString.h>
 #include <DataTypes/DataTypeArray.h>
+#include <DataTypes/DataTypeString.h>
+#include <Functions/FunctionFactory.h>
+#include <Functions/IFunction.h>
+#include <Interpreters/Context.h>
 
 
 namespace DB
@@ -75,8 +77,8 @@ namespace
             {
                 static_assert(kind == Kind::DEFAULT_ROLES);
                 const auto & manager = context->getAccessControl();
-                auto user = context->getUser();
-                role_names = manager.tryReadNames(user->granted_roles.findGranted(user->default_roles));
+                if (const auto user = context->getAccess()->tryGetUser())
+                    role_names = manager.tryReadNames(user->granted_roles.findGranted(user->default_roles));
             }
 
             /// We sort the names because the result of the function should not depend on the order of UUIDs.
