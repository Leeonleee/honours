diff --git a/tests/queries/0_stateless/01375_compact_parts_codecs.reference b/tests/queries/0_stateless/01375_compact_parts_codecs.reference
new file mode 100644
index 000000000000..b48892597b61
--- /dev/null
+++ b/tests/queries/0_stateless/01375_compact_parts_codecs.reference
@@ -0,0 +1,9 @@
+12000	11890
+499500	499500	999
+499500	499500	999
+11965	11890
+499500	499500	999
+499500	499500	999
+5858	11890
+499500	499500	999
+499500	499500	999
diff --git a/tests/queries/0_stateless/01375_compact_parts_codecs.sql b/tests/queries/0_stateless/01375_compact_parts_codecs.sql
new file mode 100644
index 000000000000..698f4148a151
--- /dev/null
+++ b/tests/queries/0_stateless/01375_compact_parts_codecs.sql
@@ -0,0 +1,52 @@
+DROP TABLE IF EXISTS codecs;
+
+CREATE TABLE codecs (id UInt32, val UInt32, s String) 
+    ENGINE = MergeTree ORDER BY id
+    SETTINGS min_rows_for_wide_part = 10000;
+INSERT INTO codecs SELECT number, number, toString(number) FROM numbers(1000);
+SELECT sum(data_compressed_bytes), sum(data_uncompressed_bytes) 
+    FROM system.parts 
+    WHERE table = 'codecs' AND database = currentDatabase();
+
+SELECT sum(id), sum(val), max(s) FROM codecs;
+
+DETACH TABLE codecs;
+ATTACH table codecs;
+
+SELECT sum(id), sum(val), max(s) FROM codecs;
+
+DROP TABLE codecs;
+
+CREATE TABLE codecs (id UInt32 CODEC(NONE), val UInt32 CODEC(NONE), s String CODEC(NONE)) 
+    ENGINE = MergeTree ORDER BY id
+    SETTINGS min_rows_for_wide_part = 10000;
+INSERT INTO codecs SELECT number, number, toString(number) FROM numbers(1000);
+SELECT sum(data_compressed_bytes), sum(data_uncompressed_bytes) 
+    FROM system.parts 
+    WHERE table = 'codecs' AND database = currentDatabase();
+
+SELECT sum(id), sum(val), max(s) FROM codecs;
+
+DETACH TABLE codecs;
+ATTACH table codecs;
+
+SELECT sum(id), sum(val), max(s) FROM codecs;
+
+DROP TABLE codecs;
+
+CREATE TABLE codecs (id UInt32, val UInt32 CODEC(Delta, ZSTD), s String CODEC(ZSTD)) 
+    ENGINE = MergeTree ORDER BY id
+    SETTINGS min_rows_for_wide_part = 10000;
+INSERT INTO codecs SELECT number, number, toString(number) FROM numbers(1000);
+SELECT sum(data_compressed_bytes), sum(data_uncompressed_bytes) 
+    FROM system.parts 
+    WHERE table = 'codecs' AND database = currentDatabase();
+
+SELECT sum(id), sum(val), max(s) FROM codecs;
+
+DETACH TABLE codecs;
+ATTACH table codecs;
+
+SELECT sum(id), sum(val), max(s) FROM codecs;
+
+DROP TABLE codecs;
diff --git a/tests/queries/0_stateless/01390_check_table_codec.reference b/tests/queries/0_stateless/01390_check_table_codec.reference
new file mode 100644
index 000000000000..3025e6463d81
--- /dev/null
+++ b/tests/queries/0_stateless/01390_check_table_codec.reference
@@ -0,0 +1,2 @@
+all_1_1_0	1	
+all_1_1_0	1	
diff --git a/tests/queries/0_stateless/01390_check_table_codec.sql b/tests/queries/0_stateless/01390_check_table_codec.sql
new file mode 100644
index 000000000000..639d5bea6e4d
--- /dev/null
+++ b/tests/queries/0_stateless/01390_check_table_codec.sql
@@ -0,0 +1,15 @@
+SET check_query_single_value_result = 0;
+
+DROP TABLE IF EXISTS check_codec;
+
+CREATE TABLE check_codec(a Int, b Int CODEC(Delta, ZSTD)) ENGINE = MergeTree ORDER BY a SETTINGS min_bytes_for_wide_part = 0;
+INSERT INTO check_codec SELECT number, number * 2 FROM numbers(1000);
+CHECK TABLE check_codec;
+
+DROP TABLE check_codec;
+
+CREATE TABLE check_codec(a Int, b Int CODEC(Delta, ZSTD)) ENGINE = MergeTree ORDER BY a SETTINGS min_bytes_for_wide_part = '10M';
+INSERT INTO check_codec SELECT number, number * 2 FROM numbers(1000);
+CHECK TABLE check_codec;
+
+DROP TABLE check_codec;
