diff --git a/tests/integration/test_mysql_protocol/test.py b/tests/integration/test_mysql_protocol/test.py
index 02bdac89843f..4500c3612205 100644
--- a/tests/integration/test_mysql_protocol/test.py
+++ b/tests/integration/test_mysql_protocol/test.py
@@ -178,7 +178,7 @@ def test_mysql_client(started_cluster):
 
     assert (
         "mysql: [Warning] Using a password on the command line interface can be insecure.
"
-        "ERROR 194 (HY000): default: Authentication failed: password is incorrect, or there is no user with such name"
+        "ERROR 516 (HY000): default: Authentication failed: password is incorrect, or there is no user with such name"
         in stderr.decode()
     )
 
@@ -629,7 +629,7 @@ def test_python_client(started_cluster):
             port=server_port,
         )
 
-    assert exc_info.value.args[0] == 194
+    assert exc_info.value.args[0] == 516
     assert (
         "default: Authentication failed: password is incorrect, or there is no user with such name"
         in exc_info.value.args[1]
diff --git a/tests/queries/0_stateless/01119_session_log.sh b/tests/queries/0_stateless/01119_session_log.sh
index 3537fd9808f2..61bb7cf3ea83 100755
--- a/tests/queries/0_stateless/01119_session_log.sh
+++ b/tests/queries/0_stateless/01119_session_log.sh
@@ -16,7 +16,7 @@ and event_time >= now() - interval 5 minute"
 
 $CLICKHOUSE_CLIENT -m -q "
 select * from remote('127.0.0.2', system, one, 'default', '');
-select * from remote('127.0.0.2', system, one, 'default', 'wrong password'); -- { serverError REQUIRED_PASSWORD }
+select * from remote('127.0.0.2', system, one, 'default', 'wrong password'); -- { serverError AUTHENTICATION_FAILED }
 select * from remote('127.0.0.2', system, one, 'nonexistsnt_user_1119', ''); -- { serverError AUTHENTICATION_FAILED }
 set receive_timeout=1;
 select * from remote('127.0.0.2', system, one, ' INTERSERVER SECRET ', ''); -- { serverError NO_REMOTE_SHARD_AVAILABLE }
diff --git a/tests/queries/0_stateless/01555_system_distribution_queue_mask.reference b/tests/queries/0_stateless/01555_system_distribution_queue_mask.reference
index db98e1c9b12b..26aea1555a55 100644
--- a/tests/queries/0_stateless/01555_system_distribution_queue_mask.reference
+++ b/tests/queries/0_stateless/01555_system_distribution_queue_mask.reference
@@ -1,6 +1,6 @@
 masked flush only
-3,"default:*@127%2E0%2E0%2E1:9000,default:*@127%2E0%2E0%2E2:9000","REQUIRED_PASSWORD",1
+3,"default:*@127%2E0%2E0%2E1:9000,default:*@127%2E0%2E0%2E2:9000","AUTHENTICATION_FAILED",1
 masked
-3,"default:*@127%2E0%2E0%2E1:9000,default:*@127%2E0%2E0%2E2:9000","REQUIRED_PASSWORD",1
+3,"default:*@127%2E0%2E0%2E1:9000,default:*@127%2E0%2E0%2E2:9000","AUTHENTICATION_FAILED",1
 no masking
 1,"default@localhost:9000"
diff --git a/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql b/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql
index 4750db856fd7..3c14eccb9eee 100644
--- a/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql
+++ b/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql
@@ -17,8 +17,8 @@ system stop distributed sends dist_01555;
 
 insert into dist_01555 values (1)(2);
 -- since test_cluster_with_incorrect_pw contains incorrect password ignore error
-system flush distributed dist_01555; -- { serverError REQUIRED_PASSWORD }
-select length(splitByChar('*', data_path)), replaceRegexpOne(data_path, '^.*/([^/]*)/' , '\\1'), extract(last_exception, 'REQUIRED_PASSWORD'), dateDiff('s', last_exception_time, now()) < 3600 from system.distribution_queue where database = currentDatabase() and table = 'dist_01555' format CSV;
+system flush distributed dist_01555; -- { serverError AUTHENTICATION_FAILED }
+select length(splitByChar('*', data_path)), replaceRegexpOne(data_path, '^.*/([^/]*)/' , '\\1'), extract(last_exception, 'AUTHENTICATION_FAILED'), dateDiff('s', last_exception_time, now()) < 3600 from system.distribution_queue where database = currentDatabase() and table = 'dist_01555' format CSV;
 
 drop table dist_01555;
 
@@ -30,8 +30,8 @@ create table dist_01555 (key Int) Engine=Distributed(test_cluster_with_incorrect
 
 insert into dist_01555 values (1)(2);
 -- since test_cluster_with_incorrect_pw contains incorrect password ignore error
-system flush distributed dist_01555; -- { serverError REQUIRED_PASSWORD }
-select length(splitByChar('*', data_path)), replaceRegexpOne(data_path, '^.*/([^/]*)/' , '\\1'), extract(last_exception, 'REQUIRED_PASSWORD'), dateDiff('s', last_exception_time, now()) < 3600 from system.distribution_queue where database = currentDatabase() and table = 'dist_01555' format CSV;
+system flush distributed dist_01555; -- { serverError AUTHENTICATION_FAILED }
+select length(splitByChar('*', data_path)), replaceRegexpOne(data_path, '^.*/([^/]*)/' , '\\1'), extract(last_exception, 'AUTHENTICATION_FAILED'), dateDiff('s', last_exception_time, now()) < 3600 from system.distribution_queue where database = currentDatabase() and table = 'dist_01555' format CSV;
 
 drop table dist_01555;
 
diff --git a/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.reference b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.reference
new file mode 100644
index 000000000000..5d99d26a414a
--- /dev/null
+++ b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.reference
@@ -0,0 +1,3 @@
+1
+< HTTP/1.1 403 Forbidden
+If you use ClickHouse Cloud, the password can be reset at https://clickhouse.cloud/
diff --git a/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.sh b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.sh
new file mode 100755
index 000000000000..4a95f67bbe44
--- /dev/null
+++ b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.sh
@@ -0,0 +1,14 @@
+#!/usr/bin/env bash
+
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CUR_DIR"/../shell_config.sh
+
+# If the Authorization is set to "never", the credentials in the headers are ignored:
+URL="${CLICKHOUSE_PORT_HTTP_PROTO}://default:invalid_password@${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT_HTTP}/"
+${CLICKHOUSE_CURL} -H 'Authorization: never' "$URL?query=SELECT%201"
+
+# If the Authorization is set to "never", and the credentials are provided in URL parameters,
+# the server will return 403 instead of 401 Unauthorized, so there will be no prompt in the browser.
+URL="${CLICKHOUSE_PORT_HTTP_PROTO}://${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT_HTTP}/?user=default&password=invalid_password"
+${CLICKHOUSE_CURL} -H 'Authorization: never' -v "$URL?query=SELECT%201" 2>&1 | grep -P '403 Forbidden|ClickHouse Cloud'
