{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 76637,
  "instance_id": "ClickHouse__ClickHouse-76637",
  "issue_numbers": [
    "76319"
  ],
  "base_commit": "e314ce24a10876efa373300aa6c9ce3707b23658",
  "patch": "diff --git a/src/Access/AccessControl.cpp b/src/Access/AccessControl.cpp\nindex 432fe19634e6..fca4146adf8c 100644\n--- a/src/Access/AccessControl.cpp\n+++ b/src/Access/AccessControl.cpp\n@@ -621,7 +621,9 @@ AuthResult AccessControl::authenticate(const Credentials & credentials, const Po\n         /// It is typical when users install ClickHouse, type some password and instantly forget it.\n         if (credentials.getUserName().empty() || credentials.getUserName() == \"default\")\n         {\n-            error_code = ErrorCodes::REQUIRED_PASSWORD;\n+            if (credentials.allowInteractiveBasicAuthenticationInTheBrowser())\n+                error_code = ErrorCodes::REQUIRED_PASSWORD;\n+\n             message << R\"(\n \n If you use ClickHouse Cloud, the password can be reset at https://clickhouse.cloud/\ndiff --git a/src/Access/Credentials.h b/src/Access/Credentials.h\nindex 52f33385a0e8..e7cbf0743e15 100644\n--- a/src/Access/Credentials.h\n+++ b/src/Access/Credentials.h\n@@ -24,6 +24,7 @@ class Credentials\n \n     const String & getUserName() const;\n     bool isReady() const;\n+    virtual bool allowInteractiveBasicAuthenticationInTheBrowser() const { return false; }\n \n protected:\n     [[noreturn]] static void throwNotReady();\n@@ -66,9 +67,12 @@ class BasicCredentials\n     void setUserName(const String & user_name_);\n     void setPassword(const String & password_);\n     const String & getPassword() const;\n+    bool allowInteractiveBasicAuthenticationInTheBrowser() const override { return allow_interactive_basic_authentication_in_the_browser; }\n+    void enableInteractiveBasicAuthenticationInTheBrowser() { allow_interactive_basic_authentication_in_the_browser = true; }\n \n private:\n     String password;\n+    bool allow_interactive_basic_authentication_in_the_browser = false;\n };\n \n class CredentialsWithScramble : public Credentials\ndiff --git a/src/Server/HTTP/authenticateUserByHTTP.cpp b/src/Server/HTTP/authenticateUserByHTTP.cpp\nindex f96ffc2cb6a9..65a6851ecb2b 100644\n--- a/src/Server/HTTP/authenticateUserByHTTP.cpp\n+++ b/src/Server/HTTP/authenticateUserByHTTP.cpp\n@@ -217,6 +217,9 @@ bool authenticateUserByHTTP(\n         if (!basic_credentials)\n             throw Exception(ErrorCodes::AUTHENTICATION_FAILED, \"Invalid authentication: expected 'Basic' HTTP Authorization scheme\");\n \n+        if (request.get(\"Authorization\", \"\") != \"never\")\n+            basic_credentials->enableInteractiveBasicAuthenticationInTheBrowser();\n+\n         chassert(!user.empty());\n         basic_credentials->setUserName(user);\n         basic_credentials->setPassword(password);\n",
  "test_patch": "diff --git a/tests/integration/test_mysql_protocol/test.py b/tests/integration/test_mysql_protocol/test.py\nindex 02bdac89843f..4500c3612205 100644\n--- a/tests/integration/test_mysql_protocol/test.py\n+++ b/tests/integration/test_mysql_protocol/test.py\n@@ -178,7 +178,7 @@ def test_mysql_client(started_cluster):\n \n     assert (\n         \"mysql: [Warning] Using a password on the command line interface can be insecure.\\n\"\n-        \"ERROR 194 (HY000): default: Authentication failed: password is incorrect, or there is no user with such name\"\n+        \"ERROR 516 (HY000): default: Authentication failed: password is incorrect, or there is no user with such name\"\n         in stderr.decode()\n     )\n \n@@ -629,7 +629,7 @@ def test_python_client(started_cluster):\n             port=server_port,\n         )\n \n-    assert exc_info.value.args[0] == 194\n+    assert exc_info.value.args[0] == 516\n     assert (\n         \"default: Authentication failed: password is incorrect, or there is no user with such name\"\n         in exc_info.value.args[1]\ndiff --git a/tests/queries/0_stateless/01119_session_log.sh b/tests/queries/0_stateless/01119_session_log.sh\nindex 3537fd9808f2..61bb7cf3ea83 100755\n--- a/tests/queries/0_stateless/01119_session_log.sh\n+++ b/tests/queries/0_stateless/01119_session_log.sh\n@@ -16,7 +16,7 @@ and event_time >= now() - interval 5 minute\"\n \n $CLICKHOUSE_CLIENT -m -q \"\n select * from remote('127.0.0.2', system, one, 'default', '');\n-select * from remote('127.0.0.2', system, one, 'default', 'wrong password'); -- { serverError REQUIRED_PASSWORD }\n+select * from remote('127.0.0.2', system, one, 'default', 'wrong password'); -- { serverError AUTHENTICATION_FAILED }\n select * from remote('127.0.0.2', system, one, 'nonexistsnt_user_1119', ''); -- { serverError AUTHENTICATION_FAILED }\n set receive_timeout=1;\n select * from remote('127.0.0.2', system, one, ' INTERSERVER SECRET ', ''); -- { serverError NO_REMOTE_SHARD_AVAILABLE }\ndiff --git a/tests/queries/0_stateless/01555_system_distribution_queue_mask.reference b/tests/queries/0_stateless/01555_system_distribution_queue_mask.reference\nindex db98e1c9b12b..26aea1555a55 100644\n--- a/tests/queries/0_stateless/01555_system_distribution_queue_mask.reference\n+++ b/tests/queries/0_stateless/01555_system_distribution_queue_mask.reference\n@@ -1,6 +1,6 @@\n masked flush only\n-3,\"default:*@127%2E0%2E0%2E1:9000,default:*@127%2E0%2E0%2E2:9000\",\"REQUIRED_PASSWORD\",1\n+3,\"default:*@127%2E0%2E0%2E1:9000,default:*@127%2E0%2E0%2E2:9000\",\"AUTHENTICATION_FAILED\",1\n masked\n-3,\"default:*@127%2E0%2E0%2E1:9000,default:*@127%2E0%2E0%2E2:9000\",\"REQUIRED_PASSWORD\",1\n+3,\"default:*@127%2E0%2E0%2E1:9000,default:*@127%2E0%2E0%2E2:9000\",\"AUTHENTICATION_FAILED\",1\n no masking\n 1,\"default@localhost:9000\"\ndiff --git a/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql b/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql\nindex 4750db856fd7..3c14eccb9eee 100644\n--- a/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql\n+++ b/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql\n@@ -17,8 +17,8 @@ system stop distributed sends dist_01555;\n \n insert into dist_01555 values (1)(2);\n -- since test_cluster_with_incorrect_pw contains incorrect password ignore error\n-system flush distributed dist_01555; -- { serverError REQUIRED_PASSWORD }\n-select length(splitByChar('*', data_path)), replaceRegexpOne(data_path, '^.*/([^/]*)/' , '\\\\1'), extract(last_exception, 'REQUIRED_PASSWORD'), dateDiff('s', last_exception_time, now()) < 3600 from system.distribution_queue where database = currentDatabase() and table = 'dist_01555' format CSV;\n+system flush distributed dist_01555; -- { serverError AUTHENTICATION_FAILED }\n+select length(splitByChar('*', data_path)), replaceRegexpOne(data_path, '^.*/([^/]*)/' , '\\\\1'), extract(last_exception, 'AUTHENTICATION_FAILED'), dateDiff('s', last_exception_time, now()) < 3600 from system.distribution_queue where database = currentDatabase() and table = 'dist_01555' format CSV;\n \n drop table dist_01555;\n \n@@ -30,8 +30,8 @@ create table dist_01555 (key Int) Engine=Distributed(test_cluster_with_incorrect\n \n insert into dist_01555 values (1)(2);\n -- since test_cluster_with_incorrect_pw contains incorrect password ignore error\n-system flush distributed dist_01555; -- { serverError REQUIRED_PASSWORD }\n-select length(splitByChar('*', data_path)), replaceRegexpOne(data_path, '^.*/([^/]*)/' , '\\\\1'), extract(last_exception, 'REQUIRED_PASSWORD'), dateDiff('s', last_exception_time, now()) < 3600 from system.distribution_queue where database = currentDatabase() and table = 'dist_01555' format CSV;\n+system flush distributed dist_01555; -- { serverError AUTHENTICATION_FAILED }\n+select length(splitByChar('*', data_path)), replaceRegexpOne(data_path, '^.*/([^/]*)/' , '\\\\1'), extract(last_exception, 'AUTHENTICATION_FAILED'), dateDiff('s', last_exception_time, now()) < 3600 from system.distribution_queue where database = currentDatabase() and table = 'dist_01555' format CSV;\n \n drop table dist_01555;\n \ndiff --git a/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.reference b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.reference\nnew file mode 100644\nindex 000000000000..5d99d26a414a\n--- /dev/null\n+++ b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.reference\n@@ -0,0 +1,3 @@\n+1\n+< HTTP/1.1 403 Forbidden\r\n+If you use ClickHouse Cloud, the password can be reset at https://clickhouse.cloud/\ndiff --git a/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.sh b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.sh\nnew file mode 100755\nindex 000000000000..4a95f67bbe44\n--- /dev/null\n+++ b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.sh\n@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+\n+CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n+# shellcheck source=../shell_config.sh\n+. \"$CUR_DIR\"/../shell_config.sh\n+\n+# If the Authorization is set to \"never\", the credentials in the headers are ignored:\n+URL=\"${CLICKHOUSE_PORT_HTTP_PROTO}://default:invalid_password@${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT_HTTP}/\"\n+${CLICKHOUSE_CURL} -H 'Authorization: never' \"$URL?query=SELECT%201\"\n+\n+# If the Authorization is set to \"never\", and the credentials are provided in URL parameters,\n+# the server will return 403 instead of 401 Unauthorized, so there will be no prompt in the browser.\n+URL=\"${CLICKHOUSE_PORT_HTTP_PROTO}://${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT_HTTP}/?user=default&password=invalid_password\"\n+${CLICKHOUSE_CURL} -H 'Authorization: never' -v \"$URL?query=SELECT%201\" 2>&1 | grep -P '403 Forbidden|ClickHouse Cloud'\n",
  "problem_statement": "Embedded web UI makes unnecessary calls that could lead to blocked accounts\n### Company or project name\n\n_No response_\n\n### Describe what's wrong\n\n1. [Event listeners on the user and password fields](https://github.com/ClickHouse/ClickHouse/blob/21c8c117206d9a9e11fbd2459a07e88666874791/programs/server/play.html#L999-L1000) in the Play UI make an API call on every key stroke (since [this PR](https://github.com/ClickHouse/ClickHouse/pull/72198)). In an enterprise environment where - for instance - AD is used, this usually leads to blocked accounts. Depending on the length of the password, it will make a number of requests with incomplete credentials. There's usually an account block after a number of faulty login attempts.\n\n2. Closely related to the issue above: if no credentials are provided yet, the UI requests you to log in with a local account (`admin` or `default`). Next to the fact that it's recommended to have the `default` user disabled in a production environment, this authentication popup should be optional and not shown by default.\n\n### Does it reproduce on the most recent release?\n\nYes\n\n### How to reproduce\n\n1. Open the Play UI.\n2. Type anything in the credential fields.\n\n![Image](https://github.com/user-attachments/assets/5b9502b3-24e0-412c-b422-292473b4eeef)\n\nAnd, when you open the Play UI and have disabled the `default` user (or if it has a non-empty password), it shows:\n\n![Image](https://github.com/user-attachments/assets/43700dbb-6dcc-4131-afd6-1349fadd5719)\n\n### Expected behavior\n\nOnly make calls when either a query is executed or when the credentials are complete.\n\n### Error message and/or stacktrace\n\n_No response_\n\n### Additional context\n\n_No response_\n",
  "hints_text": "I will check why there is an authentication screen - I've also noticed it a few times.",
  "created_at": "2025-02-22T20:19:12Z",
  "modified_files": [
    "src/Access/AccessControl.cpp",
    "src/Access/Credentials.h",
    "src/Server/HTTP/authenticateUserByHTTP.cpp"
  ],
  "modified_test_files": [
    "tests/integration/test_mysql_protocol/test.py",
    "tests/queries/0_stateless/01119_session_log.sh",
    "tests/queries/0_stateless/01555_system_distribution_queue_mask.reference",
    "tests/queries/0_stateless/01555_system_distribution_queue_mask.sql",
    "b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.reference",
    "b/tests/queries/0_stateless/03362_basic_auth_interactive_not_with_authorization_never.sh"
  ]
}