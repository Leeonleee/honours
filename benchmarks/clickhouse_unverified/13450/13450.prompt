You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Long running Distributed DDL fail with `Cannot execute replicated DDL query on leader`
Hello,

I'm running into the following issue with some Distributed DDL queries, ie ALTER MODIFY COLUMN which are long running due to the need of rewriting data. They fail with `Cannot execute replicated DDL query on leader` error, but they don't have to.

The issues is here: https://github.com/ClickHouse/Clickhouse/blob/42b8ed3ec64d7077422afb898db174edf6c191b0/src/Interpreters/DDLWorker.cpp#L776 replicas wait only 20 seconds (20 tries with 1 second sleep after each) when checking the status of the migration, since those migrations are taking longer than that it fails with the above mentioned error.

Maybe we should wait as long as the execution lock is held by the a leader instead?

Example query:

```sql
ALTER TABLE test
    ON CLUSTER 'test'
    MODIFY COLUMN float_as_uint UInt16;
```

Note: I'm testing this on v19 but I believe current master is affected as well.
OPTIMIZE TABLE ON CLUSTER fail
Hello,
I have a problem when I play an OPTIMIZE ON CLUSTER on a ReplicatedMergeTree table. Here is the log:

```
2019.10.08 14:04:09.509533 [ 71 ] {9330b2b2-c41f-4b3f-8e29-540fb07b2c38} <Debug> DDLWorker: Processing task query-0001193846 (OPTIMIZE TABLE db.table_name ON CLUSTER lo01  FINAL)

2019.10.08 14:04:09.511245 [ 71 ] {9330b2b2-c41f-4b3f-8e29-540fb07b2c38} <Warning> DDLWorker: An error occurred while processing task query-0001193846 (OPTIMIZE TABLE db.table_name ON CLUSTER lo01 FINAL) : Code: 999, e.displayText() = Coordination::Exception: Transaction failed (No node): Op #1, path: /clickhouse/task_queue/ddl/query-0001193846/finished/clkh%2D01%2D03:9000, Stack trace:

0. /usr/bin/clickhouse-server(StackTrace::StackTrace()+0x22) [0x781c272]
1. /usr/bin/clickhouse-server() [0x6f3eda1]
2. /usr/bin/clickhouse-server(Coordination::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)+0x16e) [0x6f3f8be]
3. /usr/bin/clickhouse-server(zkutil::KeeperMultiException::KeeperMultiException(int, std::vector<std::shared_ptr<Coordination::Request>, std::allocator<std::shared_ptr<Coordination::Request> > > const&, std::vector<std::shared_ptr<Coordination::Response>, std::allocator<std::shared_ptr<Coordination::Response> > > const&)+0x56) [0x6f4e0a6]
4. /usr/bin/clickhouse-server(zkutil::KeeperMultiException::check(int, std::vector<std::shared_ptr<Coordination::Request>, std::allocator<std::shared_ptr<Coordination::Request> > > const&, std::vector<std::shared_ptr<Coordination::Response>, std::allocator<std::shared_ptr<Coordination::Response> > > const&)+0x41) [0x6f4e5e1]
5. /usr/bin/clickhouse-server(zkutil::ZooKeeper::multi(std::vector<std::shared_ptr<Coordination::Request>, std::allocator<std::shared_ptr<Coordination::Request> > > const&)+0x37) [0x6f4e657]
6. /usr/bin/clickhouse-server(DB::DDLWorker::processTask(DB::DDLTask&, std::shared_ptr<zkutil::ZooKeeper> const&)+0x36e) [0x674680e]
7. /usr/bin/clickhouse-server(DB::DDLWorker::processTasks()+0x475) [0x6747d75]
8. /usr/bin/clickhouse-server(DB::DDLWorker::runMainThread()+0xf8) [0x67486b8]
9. /usr/bin/clickhouse-server(ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::{lambda()#1}::operator()() const+0x49) [0x6748cd9]
10. /usr/bin/clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x1af) [0x71c778f]
11. /usr/bin/clickhouse-server() [0xb2ac5bf]
12. /lib/x86_64-linux-gnu/libpthread.so.0(+0x76db) [0x7f091e9d16db]
13. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3f) [0x7f091e15888f]
 (version 19.11.3.11 (official build))
2019.10.08 14:04:09.511305 [ 71 ] {9330b2b2-c41f-4b3f-8e29-540fb07b2c38} <Error> DDLWorker: ZooKeeper error: Code: 999, e.displayText() = Coordination::Exception: Transaction failed (No node): Op #1, path: /clickhouse/task_queue/ddl/query-0001193846/finished/clkh%2D01%2D03:9000, Stack trace:

0. /usr/bin/clickhouse-server(StackTrace::StackTrace()+0x22) [0x781c272]
1. /usr/bin/clickhouse-server() [0x6f3eda1]
2. /usr/bin/clickhouse-server(Coordination::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)+0x16e) [0x6f3f8be]
3. /usr/bin/clickhouse-server(zkutil::KeeperMultiException::KeeperMultiException(int, std::vector<std::shared_ptr<Coordination::Request>, std::allocator<std::shared_ptr<Coordination::Request> > > const&, std::vector<std::shared_ptr<Coordination::Response>, std::allocator<std::shared_ptr<Coordination::Response> > > const&)+0x56) [0x6f4e0a6]
4. /usr/bin/clickhouse-server(zkutil::KeeperMultiException::check(int, std::vector<std::shared_ptr<Coordination::Request>, std::allocator<std::shared_ptr<Coordination::Request> > > const&, std::vector<std::shared_ptr<Coordination::Response>, std::allocator<std::shared_ptr<Coordination::Response> > > const&)+0x41) [0x6f4e5e1]
5. /usr/bin/clickhouse-server(zkutil::ZooKeeper::multi(std::vector<std::shared_ptr<Coordination::Request>, std::allocator<std::shared_ptr<Coordination::Request> > > const&)+0x37) [0x6f4e657]
6. /usr/bin/clickhouse-server(DB::DDLWorker::processTask(DB::DDLTask&, std::shared_ptr<zkutil::ZooKeeper> const&)+0x36e) [0x674680e]
7. /usr/bin/clickhouse-server(DB::DDLWorker::processTasks()+0x475) [0x6747d75]
8. /usr/bin/clickhouse-server(DB::DDLWorker::runMainThread()+0xf8) [0x67486b8]
9. /usr/bin/clickhouse-server(ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::{lambda()#1}::operator()() const+0x49) [0x6748cd9]
10. /usr/bin/clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x1af) [0x71c778f]
11. /usr/bin/clickhouse-server() [0xb2ac5bf]
12. /lib/x86_64-linux-gnu/libpthread.so.0(+0x76db) [0x7f091e9d16db]
13. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3f) [0x7f091e15888f]
 (version 19.11.3.11 (official build))
2019.10.08 14:04:09.511321 [ 71 ] {9330b2b2-c41f-4b3f-8e29-540fb07b2c38} <Debug> DDLWorker: Processing tasks
2019.10.08 14:04:09.511336 [ 5 ] {} <Trace> DDLWorker: Too early to clean queue, will do it later.
2019.10.08 14:04:09.511924 [ 71 ] {9330b2b2-c41f-4b3f-8e29-540fb07b2c38} <Information> DDLWorker: Trying to process task query-0001193846 again
```

Do you have any idea what the problem might be? Thanks

The request is tempted to be played indefinitely and no other OPTIMIZE request can be played.

Cannot execute replicated DDL query on leader
I deleted all the zookeeper's for clickhouse path because its hard disk was full, after that I restarted the cluster.
Right now the data can not be inserted because the path is not created
Failed to execute ALTER TABLE ADD INDEX ON CLUSTER
CREATE TABLE test ON CLUSTER default
(
    `timestamp` DateTime,
    `field` UUID
)
ENGINE = ReplicatedMergeTree('/clickhouse/tables/{shard}/db/test', '{replica}')
PARTITION BY toYYYYMM(timestamp)
ORDER BY timestamp
SETTINGS index_granularity = 8192

┌─host──────────────────────────┬─port─┬─status─┬─error─┬─num_hosts_remaining─┬─num_hosts_active─┐
│ chi-clickhouse-db-default-1-0 │ 9000 │      0 │       │                   3 │                0 │
│ chi-clickhouse-db-default-1-1 │ 9000 │      0 │       │                   2 │                0 │
│ chi-clickhouse-db-default-0-0 │ 9000 │      0 │       │                   1 │                0 │
│ chi-clickhouse-db-default-0-1 │ 9000 │      0 │       │                   0 │                0 │
└───────────────────────────────┴──────┴────────┴───────┴─────────────────────┴──────────────────┘

4 rows in set. Elapsed: 0.119 sec.

ALTER TABLE test ON CLUSTER default
    ADD INDEX
    field_idx field TYPE minmax GRANULARITY 3


┌─host──────────────────────────┬─port─┬─status─┬─error─────────────────────────────────────────┬─num_hosts_remaining─┬─num_hosts_active─┐
│ chi-clickhouse-db-default-1-0 │ 9000 │     48 │ Cannot execute replicated DDL query on leader │                   3 │                0 │
│ chi-clickhouse-db-default-1-1 │ 9000 │     48 │ Cannot execute replicated DDL query on leader │                   2 │                0 │
│ chi-clickhouse-db-default-0-0 │ 9000 │     48 │ Cannot execute replicated DDL query on leader │                   1 │                0 │
│ chi-clickhouse-db-default-0-1 │ 9000 │     48 │ Cannot execute replicated DDL query on leader │                   0 │                0 │
└───────────────────────────────┴──────┴────────┴───────────────────────────────────────────────┴─────────────────────┴──────────────────┘
↓ Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.)                                                                                                                                                                                    0%Received exception from server (version 19.11.8):
Code: 48. DB::Exception: Received from localhost:9000. DB::Exception: There was an error on [chi-clickhouse-db-default-1-0:9000]: Cannot execute replicated DDL query on leader.

4 rows in set. Elapsed: 10.502 sec.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
