You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Crash when using direct join when right table is range dictionary
> You have to provide the following information whenever possible.

Reproduce: https://fiddle.clickhouse.com/d4e1257f-0671-4470-9563-214cdd6635e8


```
[a1b9834a6416] 2023.07.17 07:26:47.600997 [ 319 ] <Fatal> BaseDaemon: ########################################
[a1b9834a6416] 2023.07.17 07:26:47.601063 [ 319 ] <Fatal> BaseDaemon: (version 23.6.2.18 (official build), build id: D0E83BD1974B9B4B1FE300F9D23222CFF56067E2, git hash: 89f39a7ccfe0c068c03555d44036042fc1c09d22) (from thread 47) (query_id: 6cf44ab4-ed16-4172-bb1b-d39c32f965c4) (query: SELECT id, amount FROM ids INNER JOIN discounts_dict ON id = advertiser_id SETTINGS join_algorithm = 'direct';) Received signal Segmentation fault (11)
[a1b9834a6416] 2023.07.17 07:26:47.601096 [ 319 ] <Fatal> BaseDaemon: Address: 0x20. Access: read. Address not mapped to object.
[a1b9834a6416] 2023.07.17 07:26:47.601112 [ 319 ] <Fatal> BaseDaemon: Stack trace: 0x0000000010de1443 0x0000000008268716 0x0000000010dbd6a6 0x0000000010dbeccd 0x00000000134242a4 0x0000000014ef3c43 0x000000001505eb6e 0x0000000013a7d9b8 0x0000000013a7c3f4 0x0000000013b1a696 0x0000000013b1b5a4 0x0000000013e47e53 0x0000000013e43f2e 0x0000000014c6e9c4 0x0000000014c84c59 0x0000000017bf8a34 0x0000000017bf9c51 0x0000000017d7c0a7 0x0000000017d79adc 0x00007f7158c88609 0x00007f7158bad133
[a1b9834a6416] 2023.07.17 07:26:47.601164 [ 319 ] <Fatal> BaseDaemon: 2. ? @ 0x0000000010de1443 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601204 [ 319 ] <Fatal> BaseDaemon: 3. DB::RangeHashedDictionary<(DB::DictionaryKeyType)0>::hasKeys(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, std::vector<std::shared_ptr<DB::IDataType const>, std::allocator<std::shared_ptr<DB::IDataType const>>> const&) const @ 0x0000000008268716 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601220 [ 319 ] <Fatal> BaseDaemon: 4. ? @ 0x0000000010dbd6a6 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601239 [ 319 ] <Fatal> BaseDaemon: 5. ? @ 0x0000000010dbeccd in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601262 [ 319 ] <Fatal> BaseDaemon: 6. DB::DirectKeyValueJoin::joinBlock(DB::Block&, std::shared_ptr<DB::ExtraBlock>&) @ 0x00000000134242a4 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601291 [ 319 ] <Fatal> BaseDaemon: 7. DB::JoiningTransform::transformHeader(DB::Block, std::shared_ptr<DB::IJoin> const&) @ 0x0000000014ef3c43 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601313 [ 319 ] <Fatal> BaseDaemon: 8. DB::FilledJoinStep::FilledJoinStep(DB::DataStream const&, std::shared_ptr<DB::IJoin>, unsigned long) @ 0x000000001505eb6e in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601331 [ 319 ] <Fatal> BaseDaemon: 9. DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::optional<DB::Pipe>) @ 0x0000000013a7d9b8 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601353 [ 319 ] <Fatal> BaseDaemon: 10. DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x0000000013a7c3f4 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601374 [ 319 ] <Fatal> BaseDaemon: 11. DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x0000000013b1a696 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601394 [ 319 ] <Fatal> BaseDaemon: 12. DB::InterpreterSelectWithUnionQuery::execute() @ 0x0000000013b1b5a4 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601414 [ 319 ] <Fatal> BaseDaemon: 13. ? @ 0x0000000013e47e53 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601432 [ 319 ] <Fatal> BaseDaemon: 14. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x0000000013e43f2e in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601458 [ 319 ] <Fatal> BaseDaemon: 15. DB::TCPHandler::runImpl() @ 0x0000000014c6e9c4 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601479 [ 319 ] <Fatal> BaseDaemon: 16. DB::TCPHandler::run() @ 0x0000000014c84c59 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601503 [ 319 ] <Fatal> BaseDaemon: 17. Poco::Net::TCPServerConnection::start() @ 0x0000000017bf8a34 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601531 [ 319 ] <Fatal> BaseDaemon: 18. Poco::Net::TCPServerDispatcher::run() @ 0x0000000017bf9c51 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601551 [ 319 ] <Fatal> BaseDaemon: 19. Poco::PooledThread::run() @ 0x0000000017d7c0a7 in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601574 [ 319 ] <Fatal> BaseDaemon: 20. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017d79adc in /usr/bin/clickhouse
[a1b9834a6416] 2023.07.17 07:26:47.601597 [ 319 ] <Fatal> BaseDaemon: 21. ? @ 0x00007f7158c88609 in ?
[a1b9834a6416] 2023.07.17 07:26:47.601624 [ 319 ] <Fatal> BaseDaemon: 22. __clone @ 0x00007f7158bad133 in ?
[a1b9834a6416] 2023.07.17 07:26:47.729113 [ 319 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: AD6642440A13FE688E9E670BB288E827)
[a1b9834a6416] 2023.07.17 07:26:47.729312 [ 319 ] <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
[a1b9834a6416] 2023.07.17 07:26:47.729441 [ 319 ] <Fatal> BaseDaemon: Changed settings: join_algorithm = 'direct', output_format_pretty_color = false, output_format_pretty_grid_charset = 'ASCII'
```

`getByKeys` with range dictionary is tricky, probably we should disable direct join for range dictionary.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
