diff --git a/src/Parsers/ExpressionElementParsers.cpp b/src/Parsers/ExpressionElementParsers.cpp
index 3c4d0ed3937b..c32586ab4418 100644
--- a/src/Parsers/ExpressionElementParsers.cpp
+++ b/src/Parsers/ExpressionElementParsers.cpp
@@ -2196,6 +2196,18 @@ bool ParserStorageOrderByElement::parseImpl(Pos & pos, ASTPtr & node, Expected &
     if (!elem_p.parse(pos, expr_elem, expected))
         return false;
 
+    /// ParserExpression, in contrast to ParserExpressionWithOptionalAlias,
+    /// does not expect an alias after the expression. However, in certain cases,
+    /// it uses ParserExpressionWithOptionalAlias recursively, and use its result.
+    /// This is the case when it parses a single expression in parentheses, e.g.,
+    /// it does not allow
+    /// 1 AS x
+    /// but it can parse
+    /// (1 AS x)
+    /// which we should not allow as well.
+    if (!expr_elem->tryGetAlias().empty())
+        return false;
+
     if (!allow_order)
     {
         node = std::move(expr_elem);
diff --git a/src/Parsers/ParserDeleteQuery.cpp b/src/Parsers/ParserDeleteQuery.cpp
index d7cdcd920ad4..061351047914 100644
--- a/src/Parsers/ParserDeleteQuery.cpp
+++ b/src/Parsers/ParserDeleteQuery.cpp
@@ -52,6 +52,18 @@ bool ParserDeleteQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)
         if (!parser_exp_elem.parse(pos, query->predicate, expected))
             return false;
 
+        /// ParserExpression, in contrast to ParserExpressionWithOptionalAlias,
+        /// does not expect an alias after the expression. However, in certain cases,
+        /// it uses ParserExpressionWithOptionalAlias recursively, and use its result.
+        /// This is the case when it parses a single expression in parentheses, e.g.,
+        /// it does not allow
+        /// 1 AS x
+        /// but it can parse
+        /// (1 AS x)
+        /// which we should not allow as well.
+        if (!query->predicate->tryGetAlias().empty())
+            return false;
+
         if (s_settings.ignore(pos, expected))
         {
             ParserSetQuery parser_settings(true);
