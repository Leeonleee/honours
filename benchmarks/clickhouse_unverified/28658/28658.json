{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 28658,
  "instance_id": "ClickHouse__ClickHouse-28658",
  "issue_numbers": [
    "28581"
  ],
  "base_commit": "2a851546c7f75d4dd4cbca60b2bd79f98b7ef23c",
  "patch": "diff --git a/src/Interpreters/LogicalExpressionsOptimizer.cpp b/src/Interpreters/LogicalExpressionsOptimizer.cpp\nindex c0d5a16fa65a..936ed0149d2f 100644\n--- a/src/Interpreters/LogicalExpressionsOptimizer.cpp\n+++ b/src/Interpreters/LogicalExpressionsOptimizer.cpp\n@@ -225,22 +225,19 @@ void LogicalExpressionsOptimizer::addInExpression(const DisjunctiveEqualityChain\n \n     /// 1. Create a new IN expression based on information from the OR-chain.\n \n-    /// Construct a list of literals `x1, ..., xN` from the string `expr = x1 OR ... OR expr = xN`\n-    ASTPtr value_list = std::make_shared<ASTExpressionList>();\n+    /// Construct a tuple of literals `x1, ..., xN` from the string `expr = x1 OR ... OR expr = xN`\n+\n+    Tuple tuple;\n+    tuple.reserve(equality_functions.size());\n+\n     for (const auto * function : equality_functions)\n     {\n         const auto & operands = getFunctionOperands(function);\n-        value_list->children.push_back(operands[1]);\n+        tuple.push_back(operands[1]->as<ASTLiteral>()->value);\n     }\n \n     /// Sort the literals so that they are specified in the same order in the IN expression.\n-    /// Otherwise, they would be specified in the order of the ASTLiteral addresses, which is nondeterministic.\n-    std::sort(value_list->children.begin(), value_list->children.end(), [](const DB::ASTPtr & lhs, const DB::ASTPtr & rhs)\n-    {\n-        const auto * val_lhs = lhs->as<ASTLiteral>();\n-        const auto * val_rhs = rhs->as<ASTLiteral>();\n-        return val_lhs->value < val_rhs->value;\n-    });\n+    std::sort(tuple.begin(), tuple.end());\n \n     /// Get the expression `expr` from the chain `expr = x1 OR ... OR expr = xN`\n     ASTPtr equals_expr_lhs;\n@@ -250,14 +247,11 @@ void LogicalExpressionsOptimizer::addInExpression(const DisjunctiveEqualityChain\n         equals_expr_lhs = operands[0];\n     }\n \n-    auto tuple_function = std::make_shared<ASTFunction>();\n-    tuple_function->name = \"tuple\";\n-    tuple_function->arguments = value_list;\n-    tuple_function->children.push_back(tuple_function->arguments);\n+    auto tuple_literal = std::make_shared<ASTLiteral>(std::move(tuple));\n \n     ASTPtr expression_list = std::make_shared<ASTExpressionList>();\n     expression_list->children.push_back(equals_expr_lhs);\n-    expression_list->children.push_back(tuple_function);\n+    expression_list->children.push_back(tuple_literal);\n \n     /// Construct the expression `expr IN (x1, ..., xN)`\n     auto in_function = std::make_shared<ASTFunction>();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02023_transform_or_to_in.reference b/tests/queries/0_stateless/02023_transform_or_to_in.reference\nnew file mode 100644\nindex 000000000000..aa47d0d46d47\n--- /dev/null\n+++ b/tests/queries/0_stateless/02023_transform_or_to_in.reference\n@@ -0,0 +1,2 @@\n+0\n+0\ndiff --git a/tests/queries/0_stateless/02023_transform_or_to_in.sql b/tests/queries/0_stateless/02023_transform_or_to_in.sql\nnew file mode 100644\nindex 000000000000..c4ceeb76931e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02023_transform_or_to_in.sql\n@@ -0,0 +1,15 @@\n+DROP TABLE IF EXISTS t_transform_or;\n+\n+CREATE TABLE t_transform_or(B AggregateFunction(uniq, String), A String) Engine=MergeTree ORDER BY (A);\n+\n+INSERT INTO t_transform_or SELECT uniqState(''), '0';\n+\n+SELECT uniqMergeIf(B, (A = '1') OR (A = '2') OR (A = '3'))\n+FROM cluster(test_cluster_two_shards, currentDatabase(), t_transform_or)\n+SETTINGS legacy_column_name_of_tuple_literal = 0;\n+\n+SELECT uniqMergeIf(B, (A = '1') OR (A = '2') OR (A = '3'))\n+FROM cluster(test_cluster_two_shards, currentDatabase(), t_transform_or)\n+SETTINGS legacy_column_name_of_tuple_literal = 1;\n+\n+DROP TABLE t_transform_or;\n",
  "problem_statement": "Generated IN clause tuple not compatible in distributed queries\nVersion 21.8.3\r\n\r\nWith  `legacy_column_name_of_tuple_literal` set to 0, this query succeeds:\r\n\r\n```\r\nSELECT countIf(chi_count, video_level IN ('Video_3', 'Video_4', 'Video_5', 'Video_6', ' Video_7', 'Video_8', 'Video_9')) AS LBR\r\nFROM comcast_xcr_maple.atsec_cdvr_1m\r\nWHERE datetime > (now() - 300)\r\n```\r\n\r\nThis query fails:\r\n\r\n```\r\nSELECT countIf(chi_count, (video_level = 'Video_3') OR (video_level = 'Video_4') OR (video_level = 'Video_5') OR (video_level = 'Video_6') OR (video_level = 'Video_7') OR (video_level = 'Video_8') OR (video_level = 'Video_9')) AS LBR\r\nFROM comcast_xcr_maple.atsec_cdvr_1m\r\nWHERE datetime > (now() - 300)\r\n\r\nReceived exception from server (version 21.8.3):\r\nCode: 10. DB::Exception: Received from localhost:9440. DB::Exception: Not found column countIf(chi_count, in(video_level, tuple('Video_3', 'Video_4', 'Video_5', 'Video_6', 'Video_7', 'Video_8', 'Video_9'))) in block. There are only columns: countIf(chi_count, in(video_level, ('Video_3', 'Video_4', 'Video_5', 'Video_6', 'Video_7', 'Video_8', 'Video_9'))): While executing Remote. \r\n```\r\n\r\nBoth queries work with `legacy_column_name_of_tuple_literal` set to 1.  Presumably whatever code converts the multiple OR statements to a tuple uses the \"old\" column name and is incompatible with the new approach.\n",
  "hints_text": "Here was a comment from @CurtizJ but due to some bug of GitHub it is vanished.\r\nI post the comment here again:\r\n\r\n> Does all your shards have the same version after upgrade?\r\n\r\n> The setting legacy_column_name_of_tuple_literal is needed to set it to 1, while doing rolling update of cluster without breaking some queries. It's expected, that distributed queries with explicitly defined sets will fail, if versions of some nodes in cluster will differ. After update it's safe to set legacy_column_name_of_tuple_literal to default (0) and forget about it.\nAll shards have the same version.  We did the rolling update successfully and converted the legacy_column_name_of_tuple_literal back to 0.  Most queries worked fine, but it's only where the multiple OR phrases are converted into an IN clause that the error occurred.  Obviously we can rewrite the queries, but it's nevertheless a bug.\n> Here was a comment from @CurtizJ but due to some bug of GitHub it is vanished.\r\n\r\nI've deleted the comment after I read issue once again.\r\n\r\n\nOk. For some reason GitHub does not show that the comment was deleted.\nThe smallest reproducible I could manage.  Both servers have legacy_column_name_of_tuple_literal = 0.\r\n\r\n```\r\nCREATE TABLE test_tuple ON CLUSTER test_cluster\r\n(\r\n    `datetime` DateTime,\r\n    `chi_count` AggregateFunction(uniq, FixedString(16)),\r\n    `video_level` LowCardinality(String)\r\n)\r\nENGINE = MergeTree\r\nORDER BY (datetime, video_level)\r\n\r\nCREATE TABLE test_tuple_dist ON CLUSTER test_cluster as AS test_tuple\r\nENGINE = Distributed('test_cluster', 'default', 'test_tuple')\r\n\r\n```\r\nOn two shards I copied data from the existing table:\r\n\r\n```\r\nINSERT INTO test_tuple SELECT\r\n    datetime,\r\n    chi_count,\r\n    video_level\r\nFROM comcast_xcr.atsec_video_stats_1m\r\nWHERE datetime > (now() - 30)\r\nLIMIT 100\r\n```\r\n\r\nI wasn't sure of an easy way to create data for the AggregateFunction(uniq, FixedString(16)) column; that's why I just copied the data.  Also if I just make chi_count a UInt64 column there is no error.\r\n\r\nAgain, this query fails:\r\n\r\n```\r\nSELECT uniqMergeIf(chi_count, (video_level = 'Video_3') OR (video_level = 'Video_4') OR (video_level = 'Video_5') OR (video_level = 'Video_6') OR (video_level = 'Video_7') OR (video_level = 'Video_8') OR (video_level = 'Video_9')) AS LBR\r\nFROM test_tuple_dist\r\n\r\nReceived exception from server (version 21.8.3):\r\nCode: 10. DB::Exception: Received from localhost:9440. DB::Exception: Not found column uniqMergeIf(chi_count, in(video_level, tuple('Video_3', 'Video_4', 'Video_5', 'Video_6', 'Video_7', 'Video_8', 'Video_9'))) in block. There are only columns: uniqMergeIf(chi_count, in(video_level, ('Video_3', 'Video_4', 'Video_5', 'Video_6', 'Video_7', 'Video_8', 'Video_9'))): While executing Remote. \r\n```\r\n\r\nThis query succeeds:\r\n\r\n```\r\nSELECT uniqMergeIf(chi_count, video_level IN ('Video_3', 'Video_4', 'Video_5', 'Video_6', 'Video_7', 'Video_8', 'Video_9')) AS LBR\r\nFROM test_tuple_dist\r\n\r\n\u250c\u2500LBR\u2500\u2510\r\n\u2502   0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n1 rows in set. Elapsed: 0.015 sec. \r\n```\r\n\r\n\r\n\r\n\r\n\nNote that in the above there was no error if there was no data in one or both of that shards\n```sql\r\ndrop table if exists p;\r\n\r\ncreate table p(B AggregateFunction(uniq, String), A String) Engine=MergeTree ORDER BY (A);\r\n\r\ninsert into p select uniqState(''), '0';\r\n\r\n\r\nSELECT uniqMergeIf(B, (A = '1') OR (A = '2') OR (A = '3'))\r\nFROM cluster(test_cluster_two_shards, currentDatabase(), p)\r\nSETTINGS legacy_column_name_of_tuple_literal = 0;\r\n\r\nDB::Exception: Not found column uniqMergeIf(B, in(A, tuple('1', '2', '3'))) in block.\r\n\r\n\r\nSELECT uniqMergeIf(B, (A = '1') OR (A = '2') OR (A = '3'))\r\nFROM cluster(test_cluster_two_shards, currentDatabase(), p)\r\nSETTINGS legacy_column_name_of_tuple_literal = 1;\r\n\r\n\u250c\u2500uniqMergeIf(B, in(A, tuple('1', '2', '3')))\u2500\u2510\r\n\u2502                                           0 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\n```",
  "created_at": "2021-09-06T13:58:08Z",
  "modified_files": [
    "src/Interpreters/LogicalExpressionsOptimizer.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02023_transform_or_to_in.reference",
    "b/tests/queries/0_stateless/02023_transform_or_to_in.sql"
  ]
}