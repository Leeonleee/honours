You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Distributed ddl worker task loop forever for no znode error
**Describe the bug**
Distributed DDL task faided besause no znode and the worker will retry the task forever.

**Does it reproduce on recent release?**
version 20.12.3.3

**How to reproduce**
* ClickHouse version 20.12.3.3
* Setup a ClickHouse cluster
* Shutdown one CH node
* Send a Distributed sql to cluster
* Shutdown all nodes when all CH nodes except the showdown one finish the DDL task.
* Wait longer than `task_max_lifetime`  
* Start all CH node at once
* Then the first shutdown node's DDL worker will retry forever for no znode error.

**Expected behavior**
When all nodes startup the first shutdown node's ddl task may failed because ddl-task-cleaner may delete expired task, but the error should accur once but not forever.

**Error message and/or stacktrace**
```
2021.01.29 16:57:35.431774 [ 181362 ] {} <Debug> DDLWorker: Processing task query-0000000088 (CREATE DATABASE woo200 UUID '5758a8fd-1bfb-48b8-bdbf-9c3623a598f3' ON CLUSTER JACKY)
2021.01.29 16:57:35.436581 [ 181362 ] {} <Error> DDLWorker: ZooKeeper error: Code: 999, e.displayText() = Coordination::Exception: No node, Stack trace (when copying this message, always include the lines below):

0. /project/jd/clickhouse/build/../contrib/libcxx/include/exception:129: std::exception::capture() @ 0x6e23545 in /data1/home/wujianchao/server/clickhouse/clickhouse
1. /project/jd/clickhouse/build/../contrib/libcxx/include/exception:109: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1b8da876 in /data1/home/wujianchao/server/clickhouse/clickhouse
2. /project/jd/clickhouse/build/../src/Common/Exception.cpp:39: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x6e744ae in /data1/home/wujianchao/server/clickhouse/clickhouse
3. /project/jd/clickhouse/build/../src/Common/ZooKeeper/IKeeper.cpp:25: Coordination::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Coordination::Error, int) @ 0x175b6cc8 in /data1/home/wujianchao/server/clickhouse/clickhouse
4. /project/jd/clickhouse/build/../src/Common/ZooKeeper/IKeeper.cpp:41: Coordination::Exception::Exception(Coordination::Error) @ 0x175b74ea in /data1/home/wujianchao/server/clickhouse/clickhouse
5. /project/jd/clickhouse/build/../src/Interpreters/DDLWorker.cpp:1083: DB::DDLWorker::createStatusDirs(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<zkutil::ZooKeeper> const&) @ 0x1454b3e6 in /data1/home/wujianchao/server/clickhouse/clickhouse
6. /project/jd/clickhouse/build/../contrib/libcxx/include/memory:3826: DB::DDLWorker::processTask(DB::DDLTask&) @ 0x1453640c in /data1/home/wujianchao/server/clickhouse/clickhouse
7. /project/jd/clickhouse/build/../src/Interpreters/DDLWorker.cpp:719: DB::DDLWorker::enqueueTask(std::__1::unique_ptr<DB::DDLTask, std::__1::default_delete<DB::DDLTask> >) @ 0x14533565 in /data1/home/wujianchao/server/clickhouse/clickhouse
8. /project/jd/clickhouse/build/../src/Interpreters/DDLWorker.cpp:520: DB::DDLWorker::scheduleTasks()::'lambda'()::operator()() const @ 0x14529b68 in /data1/home/wujianchao/server/clickhouse/clickhouse
9. /project/jd/clickhouse/build/../contrib/libcxx/include/type_traits:3519: void std::__1::__invoke_void_return_wrapper<void>::__call<DB::DDLWorker::scheduleTasks()::'lambda'()&>(DB::DDLWorker::scheduleTasks()::'lambda'()&) @ 0x14559d97 in /data1/home/wujianchao/server/clickhouse/clickhouse
10. /project/jd/clickhouse/build/../contrib/libcxx/include/functional:1541: std::__1::__function::__func<DB::DDLWorker::scheduleTasks()::'lambda'(), std::__1::allocator<DB::DDLWorker::scheduleTasks()::'lambda'()>, void ()>::operator()() @ 0x14559ce3 in /data1/home/wujianchao/server/clickhouse/clickhouse
11. /project/jd/clickhouse/build/../contrib/libcxx/include/functional:1867: std::__1::function<void ()>::operator()() const @ 0x6e39852 in /data1/home/wujianchao/server/clickhouse/clickhouse
12. /project/jd/clickhouse/build/../src/Common/ThreadPool.cpp:239: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x6e8c8ba in /data1/home/wujianchao/server/clickhouse/clickhouse
13. /project/jd/clickhouse/build/../src/Common/ThreadPool.cpp:117: void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()::operator()() const @ 0x6e911ea in /data1/home/wujianchao/server/clickhouse/clickhouse
14. /project/jd/clickhouse/build/../contrib/libcxx/include/type_traits:3525: ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x6e979da in /data1/home/wujianchao/server/clickhouse/clickhouse
15. /project/jd/clickhouse/build/../contrib/libcxx/include/type_traits:3519: void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()&>(void&&...) @ 0x6ea0d06 in /data1/home/wujianchao/server/clickhouse/clickhouse
16. /project/jd/clickhouse/build/../contrib/libcxx/include/functional:1541: std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()>, void ()>::operator()() @ 0x6ea0b6d in /data1/home/wujianchao/server/clickhouse/clickhouse
17. /project/jd/clickhouse/build/../contrib/libcxx/include/functional:1867: std::__1::function<void ()>::operator()() const @ 0x6e39852 in /data1/home/wujianchao/server/clickhouse/clickhouse
18. /project/jd/clickhouse/build/../src/Common/ThreadPool.cpp:239: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x6e8aeea in /data1/home/wujianchao/server/clickhouse/clickhouse
19. /project/jd/clickhouse/build/../src/Common/ThreadPool.cpp:117: void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()::operator()() const @ 0x6e8d90a in /data1/home/wujianchao/server/clickhouse/clickhouse
20. /project/jd/clickhouse/build/../contrib/libcxx/include/type_traits:3519: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x6e998e9 in /data1/home/wujianchao/server/clickhouse/clickhouse
21. start_thread @ 0x7dc5 in /usr/lib64/libpthread-2.17.so
22. clone @ 0xf621d in /usr/lib64/libc-2.17.so
 (version 20.12.3.3)
```

**Additional context**
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
