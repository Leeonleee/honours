You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Integer division by zero in SELECT yandexConsistentHash(-6, 43966)
**Describe the bug**
Found by fuzz test.

```
019.08.03 00:51:53.956571 [ 48 ] {2f29ea7c-2860-4a1a-945f-f83be0bad835} <Debug> executeQuery: (from [::ffff:127.0.0.1]:44484) SELECT yandexConsistentHash(-6, 43966)
2019.08.03 00:51:53.970400 [ 52 ] {} <Error> BaseDaemon: ########################################
2019.08.03 00:51:53.970661 [ 52 ] {} <Error> BaseDaemon: (version 19.13.1.1) (from thread 48) Received signal Floating point exception (8).
2019.08.03 00:51:53.970782 [ 52 ] {} <Error> BaseDaemon: Integer divide by zero.
2019.08.03 00:51:54.728221 [ 52 ] {} <Error> BaseDaemon: #4 0xfaa2af2 unsigned long (anonymous namespace)::ConsistentHashingImpl<unsigned short>(unsigned short, unsigned short, unsigned short, unsigned short, unsigned long) /home/milovidov/work/ClickHouse/build/../libs/consistent-hashing/consistent_hashing.cpp:107
#5 0xfaa295e ConsistentHashing(unsigned long, unsigned long) /home/milovidov/work/ClickHouse/build/../libs/consistent-hashing/consistent_hashing.cpp:121
#6 0xda45c7b DB::YandexConsistentHashImpl::apply(unsigned long, unsigned int) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/FunctionsConsistentHashing.h:38
#7 0xda45640 void DB::FunctionConsistentHashImpl<DB::YandexConsistentHashImpl>::executeType<signed char>(COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, unsigned int, DB::ColumnVector<unsigned int>*) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/FunctionsConsistentHashing.h:219
#8 0xda4421b DB::FunctionConsistentHashImpl<DB::YandexConsistentHashImpl>::executeConstBuckets(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/FunctionsConsistentHashing.h:192
#9 0xda438ba DB::FunctionConsistentHashImpl<DB::YandexConsistentHashImpl>::executeImpl(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/FunctionsConsistentHashing.h:137
#10 0xd502b01 DB::PreparedFunctionImpl::executeImplDryRun(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/IFunction.h:67
#11 0xd500a45 DB::DefaultExecutable::executeImplDryRun(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/IFunction.h:422
#12 0x12aba40e DB::PreparedFunctionImpl::executeWithoutLowCardinalityColumns(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/IFunction.cpp:310
#13 0x12ab9fb6 DB::PreparedFunctionImpl::defaultImplementationForConstantArguments(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/IFunction.cpp:259
#14 0x12aba398 DB::PreparedFunctionImpl::executeWithoutLowCardinalityColumns(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/IFunction.cpp:303
#15 0x12abb57a DB::PreparedFunctionImpl::execute(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) /home/milovidov/work/ClickHouse/build/../dbms/src/Functions/IFunction.cpp:463
#16 0x11d3e063 DB::ExpressionAction::prepare(DB::Block&, DB::Settings const&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/ExpressionActions.cpp:216
#17 0x11d43fd9 DB::ExpressionActions::addImpl(DB::ExpressionAction, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/ExpressionActions.cpp:686
#18 0x11d438f3 DB::ExpressionActions::add(DB::ExpressionAction const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/ExpressionActions.cpp:649
#19 0x11d2584d DB::ScopeStack::addAction(DB::ExpressionAction const&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/ActionsVisitor.cpp:207
#20 0x11d289c5 DB::ActionsVisitor::visit(std::__1::shared_ptr<DB::IAST> const&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/ActionsVisitor.cpp:515
#21 0x11d28de3 DB::ActionsVisitor::visit(std::__1::shared_ptr<DB::IAST> const&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/ActionsVisitor.cpp:536
#22 0x11cfafaf DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ExpressionActions>&, bool) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/ExpressionAnalyzer.cpp:348
#23 0x11cff9a0 DB::ExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/ExpressionAnalyzer.cpp:811
#24 0x11d9fd67 DB::InterpreterSelectQuery::analyzeExpressions(DB::QueryProcessingStage::Enum, bool, std::__1::shared_ptr<DB::FilterInfo> const&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/InterpreterSelectQuery.cpp:539
#25 0x11dbfa4a void DB::InterpreterSelectQuery::executeImpl<DB::InterpreterSelectQuery::Pipeline>(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/InterpreterSelectQuery.cpp:810
#26 0x11d9df2e DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/InterpreterSelectQuery.cpp:333
#27 0x11d9c4a3 DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/InterpreterSelectQuery.cpp:160
#28 0x1202c02a std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) /home/milovidov/work/ClickHouse/contrib/libcxx/include/memory:3131
#29 0x1202a5ff DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/InterpreterSelectWithUnionQuery.cpp:88
#30 0x11d65fbb std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&&) /home/milovidov/work/ClickHouse/contrib/libcxx/include/memory:3131
#31 0x11d652eb DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::QueryProcessingStage::Enum) /home/milovidov/work/ClickHouse/build/../dbms/src/Interpreters/InterpreterFactory.cpp:92
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
