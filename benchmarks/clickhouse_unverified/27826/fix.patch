diff --git a/src/Columns/ColumnArray.cpp b/src/Columns/ColumnArray.cpp
index 1601fb1ff94e..7c7c6a4d9dbe 100644
--- a/src/Columns/ColumnArray.cpp
+++ b/src/Columns/ColumnArray.cpp
@@ -565,7 +565,7 @@ void ColumnArray::expand(const IColumn::Filter & mask, bool inverted)
     while (index >= 0)
     {
         offsets_data[index] = last_offset;
-        if (mask[index] ^ inverted)
+        if (!!mask[index] ^ inverted)
         {
             if (from < 0)
                 throw Exception("Too many bytes in mask", ErrorCodes::LOGICAL_ERROR);
diff --git a/src/Columns/ColumnFixedString.cpp b/src/Columns/ColumnFixedString.cpp
index e818e9744935..ce4f11a38d6a 100644
--- a/src/Columns/ColumnFixedString.cpp
+++ b/src/Columns/ColumnFixedString.cpp
@@ -354,7 +354,7 @@ void ColumnFixedString::expand(const IColumn::Filter & mask, bool inverted)
     chars.resize_fill(mask.size() * n, 0);
     while (index >= 0)
     {
-        if (mask[index] ^ inverted)
+        if (!!mask[index] ^ inverted)
         {
             if (from < 0)
                 throw Exception("Too many bytes in mask", ErrorCodes::LOGICAL_ERROR);
diff --git a/src/Columns/ColumnString.cpp b/src/Columns/ColumnString.cpp
index 2f5903abfc1a..d02fa66baf46 100644
--- a/src/Columns/ColumnString.cpp
+++ b/src/Columns/ColumnString.cpp
@@ -178,7 +178,7 @@ void ColumnString::expand(const IColumn::Filter & mask, bool inverted)
     while (index >= 0)
     {
         offsets_data[index] = last_offset;
-        if (mask[index] ^ inverted)
+        if (!!mask[index] ^ inverted)
         {
             if (from < 0)
                 throw Exception("Too many bytes in mask", ErrorCodes::LOGICAL_ERROR);
diff --git a/src/Columns/MaskOperations.cpp b/src/Columns/MaskOperations.cpp
index 6852c895d517..759d0af71272 100644
--- a/src/Columns/MaskOperations.cpp
+++ b/src/Columns/MaskOperations.cpp
@@ -26,7 +26,7 @@ void expandDataByMask(PaddedPODArray<T> & data, const PaddedPODArray<UInt8> & ma
     data.resize(mask.size());
     while (index >= 0)
     {
-        if (mask[index] ^ inverted)
+        if (!!mask[index] ^ inverted)
         {
             if (from < 0)
                 throw Exception("Too many bytes in mask", ErrorCodes::LOGICAL_ERROR);
