diff --git a/tests/integration/parallel_skip.json b/tests/integration/parallel_skip.json
index 6e1604f4eb57..cb2b98937caf 100644
--- a/tests/integration/parallel_skip.json
+++ b/tests/integration/parallel_skip.json
@@ -81,5 +81,15 @@
   "test_system_flush_logs/test.py::test_log_buffer_size_rows_flush_threshold",
   "test_system_flush_logs/test.py::test_log_max_size",
   "test_crash_log/test.py::test_pkill_query_log",
-  "test_crash_log/test.py::test_pkill"
+  "test_crash_log/test.py::test_pkill",
+
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_tcp",
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_postgres",
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_mysql",
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_http",
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_http_named_session",
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_grpc",
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_tcp_and_others",
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_tcp",
+  "test_profile_max_sessions_for_user/test.py::test_profile_max_sessions_for_user_end_session"
 ]
diff --git a/tests/integration/test_profile_max_sessions_for_user/__init__.py b/tests/integration/test_profile_max_sessions_for_user/__init__.py
new file mode 100755
index 000000000000..e69de29bb2d1
diff --git a/tests/integration/test_profile_max_sessions_for_user/configs/dhparam.pem b/tests/integration/test_profile_max_sessions_for_user/configs/dhparam.pem
new file mode 100755
index 000000000000..2e6cee0798d7
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/configs/dhparam.pem
@@ -0,0 +1,8 @@
+-----BEGIN DH PARAMETERS-----
+MIIBCAKCAQEAua92DDli13gJ+//ZXyGaggjIuidqB0crXfhUlsrBk9BV1hH3i7fR
+XGP9rUdk2ubnB3k2ejBStL5oBrkHm9SzUFSQHqfDjLZjKoUpOEmuDc4cHvX1XTR5
+Pr1vf5cd0yEncJWG5W4zyUB8k++SUdL2qaeslSs+f491HBLDYn/h8zCgRbBvxhxb
+9qeho1xcbnWeqkN6Kc9bgGozA16P9NLuuLttNnOblkH+lMBf42BSne/TWt3AlGZf
+slKmmZcySUhF8aKfJnLKbkBCFqOtFRh8zBA9a7g+BT/lSANATCDPaAk1YVih2EKb
+dpc3briTDbRsiqg2JKMI7+VdULY9bh3EawIBAg==
+-----END DH PARAMETERS-----
diff --git a/tests/integration/test_profile_max_sessions_for_user/configs/log.xml b/tests/integration/test_profile_max_sessions_for_user/configs/log.xml
new file mode 100644
index 000000000000..22f95a8bd5d4
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/configs/log.xml
@@ -0,0 +1,9 @@
+ <clickhouse>
+     <logger>
+         <level>trace</level>
+         <log>/var/log/clickhouse-server/clickhouse-server.log</log>
+         <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
+         <size>1000M</size>
+         <count>10</count>
+     </logger>
+ </clickhouse>
diff --git a/tests/integration/test_profile_max_sessions_for_user/configs/ports.xml b/tests/integration/test_profile_max_sessions_for_user/configs/ports.xml
new file mode 100644
index 000000000000..3123c4a3d9c7
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/configs/ports.xml
@@ -0,0 +1,9 @@
+ <clickhouse>
+    <postgresql_port>5433</postgresql_port>
+    <mysql_port>9001</mysql_port>
+    <grpc_port>9100</grpc_port>
+    <grpc replace="replace">
+        <!-- Enable if you want very detailed logs -->
+        <verbose_logs>false</verbose_logs>
+    </grpc>
+ </clickhouse>
diff --git a/tests/integration/test_profile_max_sessions_for_user/configs/server.crt b/tests/integration/test_profile_max_sessions_for_user/configs/server.crt
new file mode 100755
index 000000000000..070d37f3b778
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/configs/server.crt
@@ -0,0 +1,18 @@
+-----BEGIN CERTIFICATE-----
+MIIC+zCCAeOgAwIBAgIJANhP897Se2gmMA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNV
+BAMMCWxvY2FsaG9zdDAeFw0yMDA0MTgyMTE2NDBaFw0yMTA0MTgyMTE2NDBaMBQx
+EjAQBgNVBAMMCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
+ggEBAM92kcojQoMsjZ9YGhPMY6h/fDUsZeSKHLxgqE6wbmfU1oZKCPWqnvl+4n0J
+pnT5h1ETxxYZLepimKq0DEVPUTmCl0xmcKbtUNiaTUKYKsdita6b2vZCX9wUPN9p
+2Kjnm41l+aZNqIEBhIgHNWg9qowi20y0EIXR79jQLwwaInHAaJLZxVsqY2zjQ/D7
+1Zh82MXud7iqxBQiEfw9Cz35UFA239R8QTlPkVQfsN1gfLxnLk24QUX3o+hbUI1g
+nlSpyYDHYQlOmwz8doDs6THHAZNJ4bPE9xHNFpw6dGZdbtH+IKQ/qRZIiOaiNuzJ
+IOHl6XQDRDkW2LMTiCQ6fjC7Pz8CAwEAAaNQME4wHQYDVR0OBBYEFFvhaA/Eguyf
+BXkMj8BkNLBqMnz2MB8GA1UdIwQYMBaAFFvhaA/EguyfBXkMj8BkNLBqMnz2MAwG
+A1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBACeU/oL48eVAKH7NQntHhRaJ
+ZGeQzKIjrSBjFo8BGXD1nJZhUeFsylLrhCkC8/5/3grE3BNVX9bxcGjO81C9Mn4U
+t0z13d6ovJjCZSQArtLwgeJGlpH7gNdD3DyT8DQmrqYVnmnB7UmBu45XH1LWGQZr
+FAOhGRVs6s6mNj8QlLMgdmsOeOQnsGCMdoss8zV9vO2dc4A5SDSSL2mqGGY4Yjtt
+X+XlEhXXnksGyx8NGVOZX4wcj8WeCAj/lihQ7Zh6XYwZH9i+E46ompUwoziZnNPu
+2RH63tLNCxkOY2HF5VMlbMmzer3FkhlM6TAZZRPcvSphKPwXK4A33yqc6wnWvpc=
+-----END CERTIFICATE-----
diff --git a/tests/integration/test_profile_max_sessions_for_user/configs/server.key b/tests/integration/test_profile_max_sessions_for_user/configs/server.key
new file mode 100755
index 000000000000..b3dee82dcda4
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/configs/server.key
@@ -0,0 +1,28 @@
+-----BEGIN PRIVATE KEY-----
+MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPdpHKI0KDLI2f
+WBoTzGOof3w1LGXkihy8YKhOsG5n1NaGSgj1qp75fuJ9CaZ0+YdRE8cWGS3qYpiq
+tAxFT1E5gpdMZnCm7VDYmk1CmCrHYrWum9r2Ql/cFDzfadio55uNZfmmTaiBAYSI
+BzVoPaqMIttMtBCF0e/Y0C8MGiJxwGiS2cVbKmNs40Pw+9WYfNjF7ne4qsQUIhH8
+PQs9+VBQNt/UfEE5T5FUH7DdYHy8Zy5NuEFF96PoW1CNYJ5UqcmAx2EJTpsM/HaA
+7OkxxwGTSeGzxPcRzRacOnRmXW7R/iCkP6kWSIjmojbsySDh5el0A0Q5FtizE4gk
+On4wuz8/AgMBAAECggEAJ54J2yL+mZQRe2NUn4FBarTloDXZQ1pIgISov1Ybz0Iq
+sTxEF728XAKp95y3J9Fa0NXJB+RJC2BGrRpy2W17IlNY1yMc0hOxg5t7s4LhcG/e
+J/jlSG+GZL2MnlFVKXQJFWhq0yIzUmdayqstvLlB7z7cx/n+yb88YRfoVBRNjZEL
+Tdrsw+087igDjrIxZJ3eMN5Wi434n9s4yAoRQC1bP5wcWx0gD4MzdmL8ip6suiRc
+LRuBAhV/Op812xlxUhrF5dInUM9OLlGTXpUzexAS8Cyy7S4bfkW2BaCxTF7I7TFw
+Whx28CKn/G49tIuU0m6AlxWbXpLVePTFyMb7RJz5cQKBgQD7VQd2u3HM6eE3PcXD
+p6ObdLTUk8OAJ5BMmADFc71W0Epyo26/e8KXKGYGxE2W3fr13y+9b0fl5fxZPuhS
+MgvXEO7rItAVsLcp0IzaqY0WUee2b4XWPAU0XuPqvjYMpx8H5OEHqFK6lhZysAqM
+X7Ot3/Hux9X0MC4v5a/HNbDUOQKBgQDTUPaP3ADRrmpmE2sWuzWEnCSEz5f0tCLO
+wTqhV/UraWUNlAbgK5NB790IjH/gotBSqqNPLJwJh0LUfClKM4LiaHsEag0OArOF
+GhPMK1Ohps8c2RRsiG8+hxX2HEHeAVbkouEDPDiHdIW/92pBViDoETXL6qxDKbm9
+LkOcVeDfNwKBgQChh1xsqrvQ/t+IKWNZA/zahH9TwEP9sW/ESkz0mhYuHWA7nV4o
+ItpFW+l2n+Nd+vy32OFN1p9W2iD9GrklWpTRfEiRRqaFyjVt4mMkhaPvnGRXlAVo
+Utrldbb1v5ntN9txr2ARE9VXpe53dzzQSxGnxi4vUK/paK3GitAWMCOdwQKBgQCi
+hmGsUXQb0P6qVYMGr6PAw2re7t8baLRguoMCdqjs45nCMLh9D2apzvb8TTtJJU/+
+VJlYGqJEPdDrpjcHh8jBo8QBqCM0RGWYGG9jl2syKB6hPGCV/PU6bSE58Y/DVNpk
+7NUM7PM5UyhPddY2PC0A78Ole29UFLJzSzLa+b4DTwKBgH9Wh2k4YPnPcRrX89UL
+eSwWa1CGq6HWX8Kd5qyz256aeHWuG5nv15+rBt+D7nwajUsqeVkAXz5H/dHuG1xz
+jb7RW+pEjx0GVAmIbkM9vOLqEUfHHHPuk4AXCGGZ5sarPiKg4BHKBBsY1dpoO5UH
+0j71fRA6zurHnTXDaCLWlUpZ
+-----END PRIVATE KEY-----
diff --git a/tests/integration/test_profile_max_sessions_for_user/configs/ssl_conf.xml b/tests/integration/test_profile_max_sessions_for_user/configs/ssl_conf.xml
new file mode 100644
index 000000000000..778d327c4608
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/configs/ssl_conf.xml
@@ -0,0 +1,17 @@
+ <clickhouse>
+     <!-- Used with https_port and tcp_port_secure. Full ssl options list: https://github.com/ClickHouse-Extras/poco/blob/master/NetSSL_OpenSSL/include/Poco/Net/SSLManager.h#L71 -->
+     <openSSL>
+         <server> <!-- Used for https server AND secure tcp port -->
+             <!-- openssl req -subj "/CN=localhost" -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /etc/clickhouse-server/server.key -out /etc/clickhouse-server/server.crt -->
+             <certificateFile>/etc/clickhouse-server/config.d/server.crt</certificateFile>
+             <privateKeyFile>/etc/clickhouse-server/config.d/server.key</privateKeyFile>
+             <!-- openssl dhparam -out /etc/clickhouse-server/dhparam.pem 4096 -->
+             <dhParamsFile>/etc/clickhouse-server/config.d/dhparam.pem</dhParamsFile>
+             <verificationMode>none</verificationMode>
+             <loadDefaultCAFile>true</loadDefaultCAFile>
+             <cacheSessions>true</cacheSessions>
+             <disableProtocols>sslv2,sslv3</disableProtocols>
+             <preferServerCiphers>true</preferServerCiphers>
+         </server>
+     </openSSL>
+ </clickhouse>
diff --git a/tests/integration/test_profile_max_sessions_for_user/configs/users.xml b/tests/integration/test_profile_max_sessions_for_user/configs/users.xml
new file mode 100644
index 000000000000..3bed673b2ca0
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/configs/users.xml
@@ -0,0 +1,16 @@
+<clickhouse>
+    <profiles>
+        <default>
+            <max_sessions_for_user>2</max_sessions_for_user>
+            <function_sleep_max_microseconds_per_block>0</function_sleep_max_microseconds_per_block>
+        </default>
+    </profiles>
+
+    <users>
+        <default>
+        </default>      
+        <test_user>
+            <password>123</password>
+        </test_user>
+    </users>
+</clickhouse>
diff --git a/tests/integration/test_profile_max_sessions_for_user/protos/clickhouse_grpc.proto b/tests/integration/test_profile_max_sessions_for_user/protos/clickhouse_grpc.proto
new file mode 120000
index 000000000000..25d15f11e3bd
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/protos/clickhouse_grpc.proto
@@ -0,0 +1,1 @@
+../../../../src/Server/grpc_protos/clickhouse_grpc.proto
\ No newline at end of file
diff --git a/tests/integration/test_profile_max_sessions_for_user/test.py b/tests/integration/test_profile_max_sessions_for_user/test.py
new file mode 100755
index 000000000000..9e6a10e7e153
--- /dev/null
+++ b/tests/integration/test_profile_max_sessions_for_user/test.py
@@ -0,0 +1,222 @@
+import os
+
+import grpc
+import pymysql.connections
+import psycopg2 as py_psql
+import pytest
+import sys
+import threading
+
+from helpers.cluster import ClickHouseCluster, run_and_check
+
+MAX_SESSIONS_FOR_USER = 2
+POSTGRES_SERVER_PORT = 5433
+MYSQL_SERVER_PORT = 9001
+GRPC_PORT = 9100
+
+TEST_USER = "test_user"
+TEST_PASSWORD = "123"
+
+SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
+DEFAULT_ENCODING = "utf-8"
+
+# Use grpcio-tools to generate *pb2.py files from *.proto.
+proto_dir = os.path.join(SCRIPT_DIR, "./protos")
+gen_dir = os.path.join(SCRIPT_DIR, "./_gen")
+os.makedirs(gen_dir, exist_ok=True)
+run_and_check(
+    "python3 -m grpc_tools.protoc -I{proto_dir} --python_out={gen_dir} --grpc_python_out={gen_dir} \
+    {proto_dir}/clickhouse_grpc.proto".format(
+        proto_dir=proto_dir, gen_dir=gen_dir
+    ),
+    shell=True,
+)
+
+sys.path.append(gen_dir)
+
+import clickhouse_grpc_pb2
+import clickhouse_grpc_pb2_grpc
+
+cluster = ClickHouseCluster(__file__)
+instance = cluster.add_instance(
+    "node",
+    main_configs=[
+        "configs/ports.xml",
+        "configs/log.xml",
+        "configs/ssl_conf.xml",
+        "configs/dhparam.pem",
+        "configs/server.crt",
+        "configs/server.key",
+    ],
+    user_configs=["configs/users.xml"],
+    env_variables={"UBSAN_OPTIONS": "print_stacktrace=1"},
+)
+
+
+def get_query(name, id):
+    return f"SElECT '{name}', {id}, sleep(1)"
+
+
+def grpc_get_url():
+    return f"{instance.ip_address}:{GRPC_PORT}"
+
+
+def grpc_create_insecure_channel():
+    channel = grpc.insecure_channel(grpc_get_url())
+    grpc.channel_ready_future(channel).result(timeout=2)
+    return channel
+
+
+def grpc_query(query_text, channel, session_id_):
+    query_info = clickhouse_grpc_pb2.QueryInfo(
+        query=query_text,
+        session_id=session_id_,
+        user_name=TEST_USER,
+        password=TEST_PASSWORD,
+    )
+
+    stub = clickhouse_grpc_pb2_grpc.ClickHouseStub(channel)
+    result = stub.ExecuteQuery(query_info)
+    if result and result.HasField("exception"):
+        raise Exception(result.exception.display_text)
+    return result.output.decode(DEFAULT_ENCODING)
+
+
+def threaded_run_test(sessions):
+    thread_list = []
+    for i in range(len(sessions)):
+        thread = ThreadWithException(target=sessions[i], args=(i,))
+        thread_list.append(thread)
+        thread.start()
+
+    for thread in thread_list:
+        thread.join()
+
+    exception_count = 0
+    for i in range(len(sessions)):
+        if thread_list[i].run_exception != None:
+            exception_count += 1
+
+    assert exception_count == 1
+
+
+@pytest.fixture(scope="module")
+def started_cluster():
+    try:
+        cluster.start()
+        yield cluster
+    finally:
+        cluster.shutdown()
+
+
+class ThreadWithException(threading.Thread):
+    run_exception = None
+
+    def run(self):
+        try:
+            super().run()
+        except:
+            self.run_exception = sys.exc_info()
+
+    def join(self):
+        super().join()
+
+
+def postgres_session(id):
+    ch = py_psql.connect(
+        host=instance.ip_address,
+        port=POSTGRES_SERVER_PORT,
+        user=TEST_USER,
+        password=TEST_PASSWORD,
+        database="default",
+    )
+    cur = ch.cursor()
+    cur.execute(get_query("postgres_session", id))
+    cur.fetchall()
+
+
+def mysql_session(id):
+    client = pymysql.connections.Connection(
+        host=instance.ip_address,
+        user=TEST_USER,
+        password=TEST_PASSWORD,
+        database="default",
+        port=MYSQL_SERVER_PORT,
+    )
+    cursor = client.cursor(pymysql.cursors.DictCursor)
+    cursor.execute(get_query("mysql_session", id))
+    cursor.fetchall()
+
+
+def tcp_session(id):
+    instance.query(get_query("tcp_session", id), user=TEST_USER, password=TEST_PASSWORD)
+
+
+def http_session(id):
+    instance.http_query(
+        get_query("http_session", id), user=TEST_USER, password=TEST_PASSWORD
+    )
+
+
+def http_named_session(id):
+    instance.http_query(
+        get_query("http_named_session", id),
+        user=TEST_USER,
+        password=TEST_PASSWORD,
+        params={"session_id": id},
+    )
+
+
+def grpc_session(id):
+    grpc_query(
+        get_query("grpc_session", id), grpc_create_insecure_channel(), f"session_{id}"
+    )
+
+
+def test_profile_max_sessions_for_user_tcp(started_cluster):
+    threaded_run_test([tcp_session] * 3)
+
+
+def test_profile_max_sessions_for_user_postgres(started_cluster):
+    threaded_run_test([postgres_session] * 3)
+
+
+def test_profile_max_sessions_for_user_mysql(started_cluster):
+    threaded_run_test([mysql_session] * 3)
+
+
+def test_profile_max_sessions_for_user_http(started_cluster):
+    threaded_run_test([http_session] * 3)
+
+
+def test_profile_max_sessions_for_user_http_named_session(started_cluster):
+    threaded_run_test([http_named_session] * 3)
+
+
+def test_profile_max_sessions_for_user_grpc(started_cluster):
+    threaded_run_test([grpc_session] * 3)
+
+
+def test_profile_max_sessions_for_user_tcp_and_others(started_cluster):
+    threaded_run_test([tcp_session, grpc_session, grpc_session])
+    threaded_run_test([tcp_session, http_session, http_session])
+    threaded_run_test([tcp_session, mysql_session, mysql_session])
+    threaded_run_test([tcp_session, postgres_session, postgres_session])
+    threaded_run_test([tcp_session, http_session, postgres_session])
+    threaded_run_test([tcp_session, postgres_session, http_session])
+
+
+def test_profile_max_sessions_for_user_end_session(started_cluster):
+    for conection_func in [
+        tcp_session,
+        http_session,
+        grpc_session,
+        mysql_session,
+        postgres_session,
+    ]:
+        threaded_run_test([conection_func] * MAX_SESSIONS_FOR_USER)
+        threaded_run_test([conection_func] * MAX_SESSIONS_FOR_USER)
+
+
+def test_profile_max_sessions_for_user_end_session(started_cluster):
+    instance.query_and_get_error("SET max_sessions_for_user = 10")
diff --git a/tests/queries/0_stateless/02832_alter_max_sessions_for_user.reference b/tests/queries/0_stateless/02832_alter_max_sessions_for_user.reference
new file mode 100644
index 000000000000..f80f8738ff80
--- /dev/null
+++ b/tests/queries/0_stateless/02832_alter_max_sessions_for_user.reference
@@ -0,0 +1,12 @@
+test_alter_profile case: max_session_count 1 alter_sessions_count 1
+test_alter_profile case: max_session_count 2 alter_sessions_count 1
+USER_SESSION_LIMIT_EXCEEDED
+test_alter_profile case: max_session_count 1 alter_sessions_count 2
+test_alter_profile case: max_session_count 2 alter_sessions_count 2
+READONLY
+READONLY
+READONLY
+READONLY
+READONLY
+READONLY
+READONLY
diff --git a/tests/queries/0_stateless/02832_alter_max_sessions_for_user.sh b/tests/queries/0_stateless/02832_alter_max_sessions_for_user.sh
new file mode 100755
index 000000000000..546c54a4de94
--- /dev/null
+++ b/tests/queries/0_stateless/02832_alter_max_sessions_for_user.sh
@@ -0,0 +1,64 @@
+#!/usr/bin/env bash
+
+CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+# shellcheck source=../shell_config.sh
+. "$CURDIR"/../shell_config.sh
+
+SESSION_ID_PREFIX="02832_alter_max_sessions_session_$$"
+PROFILE="02832_alter_max_sessions_profile_$$"
+USER="02832_alter_max_sessions_user_$$"
+USER2="02832_alter_max_sessions_user_two_$$"
+ROLE="02832_alter_max_sessions_role_$$"
+
+${CLICKHOUSE_CLIENT} -q $"DROP USER IF EXISTS '${USER}'"
+${CLICKHOUSE_CLIENT} -q $"DROP PROFILE IF EXISTS ${PROFILE}"
+${CLICKHOUSE_CLIENT} -q $"CREATE SETTINGS PROFILE ${PROFILE}"
+${CLICKHOUSE_CLIENT} -q $"CREATE USER '${USER}' SETTINGS PROFILE '${PROFILE}'"
+
+function test_alter_profile()
+{
+    local max_session_count="$1"
+    local alter_sessions_count="$2"
+    echo $"test_alter_profile case: max_session_count ${max_session_count} alter_sessions_count ${alter_sessions_count}"
+
+    ${CLICKHOUSE_CLIENT} -q $"ALTER SETTINGS PROFILE ${PROFILE} SETTINGS max_sessions_for_user = ${max_session_count}"
+
+    # Create sesssions with $max_session_count resriction
+    for ((i = 1 ; i <= ${max_session_count} ; i++)); do
+        local session_id="${SESSION_ID_PREFIX}_${i}"
+         # Skip output from this query 
+         ${CLICKHOUSE_CURL} -sS -X POST "${CLICKHOUSE_URL}&user=${USER}&session_id=${session_id}&session_check=0" --data-binary "SELECT 1" > /dev/null
+    done
+
+    # Update resriction to $alter_sessions_count
+    ${CLICKHOUSE_CLIENT} -q $"ALTER SETTINGS PROFILE ${PROFILE} SETTINGS max_sessions_for_user = ${alter_sessions_count}"
+
+    # Simultaneous sessions should use max settings from profile ($alter_sessions_count)
+    for ((i = 1 ; i <= ${max_session_count} ; i++)); do
+        local session_id="${SESSION_ID_PREFIX}_${i}"
+        # ignore select 1, we need only errors
+        ${CLICKHOUSE_CURL} -sS -X POST "${CLICKHOUSE_URL}&user=${USER}&session_id=${session_id}&session_check=1" --data-binary "select sleep(0.3)" | grep -o  -m 1 'USER_SESSION_LIMIT_EXCEEDED' &
+    done
+
+    wait
+}
+
+test_alter_profile 1 1
+test_alter_profile 2 1
+test_alter_profile 1 2
+test_alter_profile 2 2
+
+${CLICKHOUSE_CLIENT} -q "SELECT 1 SETTINGS max_sessions_for_user = 1" 2>&1 | grep -m 1 -o 'READONLY' | head -1
+${CLICKHOUSE_CLIENT} -q $"SET max_sessions_for_user = 1 " 2>&1 | grep -o  -m 1 'READONLY' | head -1
+${CLICKHOUSE_CLIENT} --max_sessions_for_user=1 -q $"SELECT 1 " 2>&1 | grep -o  -m 1 'READONLY' | head -1
+# max_sessions_for_user is profile setting
+${CLICKHOUSE_CLIENT} -q $"CREATE USER ${USER2} SETTINGS max_sessions_for_user = 1 " 2>&1 | grep -o  -m 1 'READONLY' | head -1
+${CLICKHOUSE_CLIENT} -q $"ALTER USER ${USER} SETTINGS max_sessions_for_user = 1" 2>&1 | grep -o  -m 1 'READONLY' | head -1
+${CLICKHOUSE_CLIENT} -q $"CREATE ROLE ${ROLE} SETTINGS max_sessions_for_user = 1" 2>&1 | grep -o  -m 1 'READONLY' | head -1
+${CLICKHOUSE_CLIENT} -q $"CREATE ROLE ${ROLE}"
+${CLICKHOUSE_CLIENT} -q $"ALTER ROLE ${ROLE} SETTINGS max_sessions_for_user = 1 " 2>&1 | grep -o  -m 1 'READONLY' | head -1
+
+${CLICKHOUSE_CLIENT} -q $"DROP USER IF EXISTS '${USER}'"
+${CLICKHOUSE_CLIENT} -q $"DROP USER IF EXISTS '${USER2}'"
+${CLICKHOUSE_CLIENT} -q $"DROP PROFILE IF EXISTS ${PROFILE}"
+${CLICKHOUSE_CLIENT} -q $"DROP ROLE IF EXISTS ${ROLE}"
