{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 51205,
  "instance_id": "ClickHouse__ClickHouse-51205",
  "issue_numbers": [
    "49569"
  ],
  "base_commit": "97f76d712c6a040ebec65767d778c44f1292156f",
  "patch": "diff --git a/src/Storages/MergeTree/MergeTreeIndexSet.cpp b/src/Storages/MergeTree/MergeTreeIndexSet.cpp\nindex 120b3e434724..9c34a149128d 100644\n--- a/src/Storages/MergeTree/MergeTreeIndexSet.cpp\n+++ b/src/Storages/MergeTree/MergeTreeIndexSet.cpp\n@@ -554,7 +554,10 @@ void MergeTreeIndexConditionSet::traverseAST(ASTPtr & node) const\n     if (atomFromAST(node))\n     {\n         if (node->as<ASTIdentifier>() || node->as<ASTFunction>())\n-            node = makeASTFunction(\"__bitWrapperFunc\", node);\n+            /// __bitWrapperFunc* uses default implementation for Nullable types\n+            /// Here we additionally convert Null to 0,\n+            /// otherwise condition 'something OR NULL' will always return Null and filter everything.\n+            node = makeASTFunction(\"__bitWrapperFunc\", makeASTFunction(\"ifNull\", node, std::make_shared<ASTLiteral>(Field(0))));\n     }\n     else\n         node = std::make_shared<ASTLiteral>(UNKNOWN_FIELD);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.reference b/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.reference\nnew file mode 100644\nindex 000000000000..e6ce356cd457\n--- /dev/null\n+++ b/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.reference\n@@ -0,0 +1,1 @@\n+v1\tv2\ndiff --git a/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.sql b/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.sql\nnew file mode 100644\nindex 000000000000..fed030f170dc\n--- /dev/null\n+++ b/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.sql\n@@ -0,0 +1,15 @@\n+drop table if exists test_table;\n+CREATE TABLE test_table\n+(\n+    col1 String,\n+    col2 String,\n+    INDEX test_table_col2_idx col2 TYPE set(0) GRANULARITY 1\n+) ENGINE = MergeTree()\n+      ORDER BY col1\n+AS SELECT 'v1', 'v2';\n+\n+SELECT * FROM test_table\n+WHERE 1 == 1 AND col1 == col1 OR\n+       0 AND col2 == NULL;\n+\n+drop table if exists test_table;\n",
  "problem_statement": "Creating Index changes the query result, all rows are skipped\nClickhouse v22.8.17.17+\r\n\r\nI expect to get 1 row, but I get an empty result\r\n\r\n[https://fiddle.clickhouse.com/75841829-0825-4e49-878c-4e0ceba63bb0](https://fiddle.clickhouse.com/75841829-0825-4e49-878c-4e0ceba63bb0)\r\n\r\n\r\n```\r\nCREATE OR REPLACE TABLE test_table\r\n(\r\n    col1 String,\r\n    col2 String,\r\n    INDEX test_table_col2_idx col2 TYPE set(0) GRANULARITY 1\r\n) ENGINE = MergeTree()\r\n      ORDER BY col1\r\nAS SELECT 'v1', 'v2';\r\n\r\n-- empty result\r\nSELECT * FROM test_table\r\nWHERE 1 == 1 AND col1 == col1 OR\r\n       0 AND col2 == NULL;\r\n\r\nALTER TABLE test_table DROP INDEX test_table_col2_idx;\r\n\r\n-- 1 row in result\r\nSELECT *\r\nFROM test_table\r\nWHERE (1 == 1 AND col1 = 'v1' OR\r\n       0 AND col2 == NULL);\r\n```\n",
  "hints_text": "Works with analyzer https://fiddle.clickhouse.com/460f341c-0682-4b6b-bbaa-1fbc24d5be12\r\n",
  "created_at": "2023-06-20T19:45:36Z",
  "modified_files": [
    "src/Storages/MergeTree/MergeTreeIndexSet.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.reference",
    "b/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.sql"
  ]
}