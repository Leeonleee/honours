{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 12137,
  "instance_id": "ClickHouse__ClickHouse-12137",
  "issue_numbers": [
    "12117"
  ],
  "base_commit": "e05283d5d3c8cc1f9a5bf1a78a0fd4be915f97e7",
  "patch": "diff --git a/src/Functions/greatCircleDistance.cpp b/src/Functions/greatCircleDistance.cpp\nindex bff92d7738d3..5707326c60a9 100644\n--- a/src/Functions/greatCircleDistance.cpp\n+++ b/src/Functions/greatCircleDistance.cpp\n@@ -102,8 +102,6 @@ void geodistInit()\n inline float geodistDegDiff(float f)\n {\n     f = fabsf(f);\n-    while (f > 360)\n-        f -= 360;\n     if (f > 180)\n         f = 360 - f;\n     return f;\ndiff --git a/src/Interpreters/InterpreterCreateQuery.h b/src/Interpreters/InterpreterCreateQuery.h\nindex cf27f68ad734..30f18aa41345 100644\n--- a/src/Interpreters/InterpreterCreateQuery.h\n+++ b/src/Interpreters/InterpreterCreateQuery.h\n@@ -45,7 +45,8 @@ class InterpreterCreateQuery : public IInterpreter\n         internal = internal_;\n     }\n \n-    /// Obtain information about columns, their types, default values and column comments, for case when columns in CREATE query is specified explicitly.\n+    /// Obtain information about columns, their types, default values and column comments,\n+    ///  for case when columns in CREATE query is specified explicitly.\n     static ColumnsDescription getColumnsDescription(const ASTExpressionList & columns, const Context & context, bool sanity_check_compression_codecs);\n     static ConstraintsDescription getConstraintsDescription(const ASTExpressionList * constraints);\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01359_geodistance_loop.reference b/tests/queries/0_stateless/01359_geodistance_loop.reference\nnew file mode 100644\nindex 000000000000..8484d062f57d\n--- /dev/null\n+++ b/tests/queries/0_stateless/01359_geodistance_loop.reference\n@@ -0,0 +1,1 @@\n+inf\ndiff --git a/tests/queries/0_stateless/01359_geodistance_loop.sql b/tests/queries/0_stateless/01359_geodistance_loop.sql\nnew file mode 100644\nindex 000000000000..4c555a2538e6\n--- /dev/null\n+++ b/tests/queries/0_stateless/01359_geodistance_loop.sql\n@@ -0,0 +1,1 @@\n+SELECT geoDistance(0., 0., -inf, 1.);\n",
  "problem_statement": "SELECT geoDistance(0., 0., -inf, 1.) never returns\nQuery execution time limit is ignored as well (as expected, this is an infinite loop).\r\n\r\n```\r\n$ gdb --ex \"run -q 'SELECT geoDistance(0., 0., -inf, 1.)'\" build-clang10/programs/clickhouse-local\r\n\r\n^C\r\nThread 1 \"clickhouse-loca\" received signal SIGINT, Interrupt.\r\nDB::(anonymous namespace)::geodistDegDiff (f=inf) at /home/akuzm/ch3/ch/src/Functions/greatCircleDistance.cpp:105\r\n105\t    while (f > 360)\r\n(gdb) whe 20\r\n#0  DB::(anonymous namespace)::geodistDegDiff (f=inf) at /home/akuzm/ch3/ch/src/Functions/greatCircleDistance.cpp:105\r\n#1  0x00007fffeeaf7a22 in DB::TargetSpecific::Default::(anonymous namespace)::distance<(DB::(anonymous namespace)::Method)2> (lon1deg=0, lat1deg=0, lon2deg=-inf, lat2deg=1) at /home/akuzm/ch3/ch/src/Functions/greatCircleDistance.cpp:160\r\n#2  0x00007fffeeaf78f6 in DB::TargetSpecific::Default::FunctionGeoDistance<(DB::(anonymous namespace)::Method)2>::executeImpl (this=0x7fffc8601558, block=..., arguments=..., result=4, input_rows_count=1) at /home/akuzm/ch3/ch/src/Functions/greatCircleDistance.cpp:160\r\n#3  0x00007fffedf7ba70 in DB::ImplementationSelector<DB::IFunction>::selectAndExecute (this=0x7fffcfcc69b0, block=..., arguments=..., result=4, input_rows_count=1) at /home/akuzm/ch3/ch/src/Functions/PerformanceAdaptors.h:220\r\n#4  0x00007fffeeaf71fe in DB::FunctionGeoDistance<(DB::(anonymous namespace)::Method)2>::executeImpl (this=0x7fffcfcc69a0, block=..., arguments=..., result=4, input_rows_count=1) at /home/akuzm/ch3/ch/src/Functions/greatCircleDistance.cpp:303\r\n#5  0x00007fffedaf66c1 in DB::IFunction::executeImplDryRun (this=0x7fffcfcc69a0, block=..., arguments=..., result=4, input_rows_count=1) at /home/akuzm/ch3/ch/src/Functions/IFunctionImpl.h:207\r\n#6  0x00007fffedaf5bcf in DB::DefaultExecutable::executeDryRun (this=0x7fffc86016e0, block=..., arguments=..., result=4, input_rows_count=1) at /home/akuzm/ch3/ch/src/Functions/IFunctionAdaptors.h:156\r\n#7  0x00007fffee320133 in DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns (this=0x7fffcfc6aad8, block=..., args=..., result=4, input_rows_count=1, dry_run=true) at /home/akuzm/ch3/ch/src/Functions/IFunction.cpp:323\r\n#8  0x00007fffee31fd0e in DB::ExecutableFunctionAdaptor::defaultImplementationForConstantArguments (this=0x7fffcfc6aad8, block=..., args=..., result=4, input_rows_count=1, dry_run=true) at /home/akuzm/ch3/ch/src/Functions/IFunction.cpp:266\r\n#9  0x00007fffee3200b0 in DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns (this=0x7fffcfc6aad8, block=..., args=..., result=4, input_rows_count=1, dry_run=true) at /home/akuzm/ch3/ch/src/Functions/IFunction.cpp:316\r\n#10 0x00007fffee32123d in DB::ExecutableFunctionAdaptor::execute (this=0x7fffcfc6aad8, block=..., arguments=..., result=4, input_rows_count=1, dry_run=true) at /home/akuzm/ch3/ch/src/Functions/IFunction.cpp:486\r\n#11 0x00007fffe7ad0d06 in DB::ExpressionAction::prepare (this=0x7fffffff1758, sample_block=..., settings=..., names_not_for_constant_folding=...) at /home/akuzm/ch3/ch/src/Interpreters/ExpressionActions.cpp:206\r\n#12 0x00007fffe7ad4587 in DB::ExpressionActions::addImpl (this=0x7fffcfdc2c18, action=..., new_names=...) at /home/akuzm/ch3/ch/src/Interpreters/ExpressionActions.cpp:625\r\n#13 0x00007fffe7ad3eb3 in DB::ExpressionActions::add (this=0x7fffcfdc2c18, action=..., out_new_columns=...) at /home/akuzm/ch3/ch/src/Interpreters/ExpressionActions.cpp:586\r\n#14 0x00007fffe7733ec2 in DB::ScopeStack::addAction (this=0x7fffffff2eb0, action=...) at /home/akuzm/ch3/ch/src/Interpreters/ActionsVisitor.cpp:253\r\n#15 0x00007fffe773e0e6 in DB::ActionsMatcher::Data::addAction (this=0x7fffffff2e60, action=...) at /home/akuzm/ch3/ch/src/Interpreters/ActionsVisitor.h:116\r\n#16 0x00007fffe77372e8 in DB::ActionsMatcher::visit (node=..., ast=..., data=...) at /home/akuzm/ch3/ch/src/Interpreters/ActionsVisitor.cpp:593\r\n#17 0x00007fffe77342c7 in DB::ActionsMatcher::visit (ast=..., data=...) at /home/akuzm/ch3/ch/src/Interpreters/ActionsVisitor.cpp:310\r\n#18 0x00007fffe7af3bbd in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit (this=0x7fffffff2e18, ast=...) at /home/akuzm/ch3/ch/src/Interpreters/InDepthNodeVisitor.h:32\r\n#19 0x00007fffe7b01216 in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visitChildren (this=0x7fffffff2e18, ast=...) at /home/akuzm/ch3/ch/src/Interpreters/InDepthNodeVisitor.h:47\r\n```\n",
  "hints_text": "",
  "created_at": "2020-07-04T21:58:48Z",
  "modified_files": [
    "src/Functions/greatCircleDistance.cpp",
    "src/Interpreters/InterpreterCreateQuery.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01359_geodistance_loop.reference",
    "b/tests/queries/0_stateless/01359_geodistance_loop.sql"
  ]
}