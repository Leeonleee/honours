diff --git a/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.reference b/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.reference
index d00491fd7e5b..98fb6a686563 100644
--- a/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.reference
+++ b/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.reference
@@ -1,1 +1,4 @@
 1
+1
+1
+1
diff --git a/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.sql b/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.sql
index 3c9d14b58cb1..764117586b98 100644
--- a/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.sql
+++ b/dbms/tests/queries/0_stateless/01200_mutations_memory_consumption.sql
@@ -1,6 +1,6 @@
-DROP TABLE IF EXISTS table_with_pk;
+DROP TABLE IF EXISTS table_with_single_pk;
 
-CREATE TABLE table_with_pk
+CREATE TABLE table_with_single_pk
 (
   key UInt8,
   value String
@@ -8,9 +8,9 @@ CREATE TABLE table_with_pk
 ENGINE = MergeTree
 ORDER BY key;
 
-INSERT INTO table_with_pk SELECT number, toString(number % 10) FROM numbers(10000000);
+INSERT INTO table_with_single_pk SELECT number, toString(number % 10) FROM numbers(10000000);
 
-ALTER TABLE table_with_pk DELETE WHERE key % 77 = 0 SETTINGS mutations_sync = 1;
+ALTER TABLE table_with_single_pk DELETE WHERE key % 77 = 0 SETTINGS mutations_sync = 1;
 
 SYSTEM FLUSH LOGS;
 
@@ -20,6 +20,92 @@ SELECT
   DISTINCT read_bytes >= peak_memory_usage
 FROM
     system.part_log
-WHERE event_type = 'MutatePart' AND table = 'table_with_pk' AND database = currentDatabase();
+WHERE event_type = 'MutatePart' AND table = 'table_with_single_pk' AND database = currentDatabase();
 
-DROP TABLE IF EXISTS table_with_pk;
+DROP TABLE IF EXISTS table_with_single_pk;
+
+DROP TABLE IF EXISTS table_with_multi_pk;
+
+CREATE TABLE table_with_multi_pk
+(
+  key1 UInt8,
+  key2 UInt32,
+  key3 DateTime64(6, 'UTC'),
+  value String
+)
+ENGINE = MergeTree
+ORDER BY (key1, key2, key3);
+
+INSERT INTO table_with_multi_pk SELECT number % 32, number, toDateTime('2019-10-01 00:00:00'), toString(number % 10) FROM numbers(10000000);
+
+ALTER TABLE table_with_multi_pk DELETE WHERE key1 % 77 = 0 SETTINGS mutations_sync = 1;
+
+SYSTEM FLUSH LOGS;
+
+-- Memory usage for all mutations must be almost constant and less than
+-- read_bytes.
+SELECT
+  DISTINCT read_bytes >= peak_memory_usage
+  FROM
+      system.part_log
+ WHERE event_type = 'MutatePart' AND table = 'table_with_multi_pk' AND database = currentDatabase();
+
+DROP TABLE IF EXISTS table_with_multi_pk;
+
+
+DROP TABLE IF EXISTS table_with_function_pk;
+
+
+CREATE TABLE table_with_function_pk
+  (
+    key1 UInt8,
+    key2 UInt32,
+    key3 DateTime64(6, 'UTC'),
+    value String
+  )
+ENGINE = MergeTree
+ORDER BY (cast(value as UInt64), key2);
+
+INSERT INTO table_with_function_pk SELECT number % 32, number, toDateTime('2019-10-01 00:00:00'), toString(number % 10) FROM numbers(10000000);
+
+ALTER TABLE table_with_function_pk DELETE WHERE key1 % 77 = 0 SETTINGS mutations_sync = 1;
+
+SYSTEM FLUSH LOGS;
+
+-- Memory usage for all mutations must be almost constant and less than
+-- read_bytes.
+SELECT
+  DISTINCT read_bytes >= peak_memory_usage
+  FROM
+      system.part_log
+ WHERE event_type = 'MutatePart' AND table = 'table_with_function_pk' AND database = currentDatabase();
+
+DROP TABLE IF EXISTS table_with_function_pk;
+
+DROP TABLE IF EXISTS table_without_pk;
+
+CREATE TABLE table_without_pk
+(
+  key1 UInt8,
+  key2 UInt32,
+  key3 DateTime64(6, 'UTC'),
+  value String
+)
+ENGINE = MergeTree
+ORDER BY tuple();
+
+INSERT INTO table_without_pk SELECT number % 32, number, toDateTime('2019-10-01 00:00:00'), toString(number % 10) FROM numbers(10000000);
+
+ALTER TABLE table_without_pk DELETE WHERE key1 % 77 = 0 SETTINGS mutations_sync = 1;
+
+SYSTEM FLUSH LOGS;
+
+-- Memory usage for all mutations must be almost constant and less than
+-- read_bytes.
+SELECT
+  DISTINCT read_bytes >= peak_memory_usage
+  FROM
+      system.part_log
+ WHERE event_type = 'MutatePart' AND table = 'table_without_pk' AND database = currentDatabase();
+
+DROP TABLE IF EXISTS table_without_pk;
