diff --git a/tests/integration/test_mysql_protocol/test.py b/tests/integration/test_mysql_protocol/test.py
index 2ad11ae4f99a..02bdac89843f 100644
--- a/tests/integration/test_mysql_protocol/test.py
+++ b/tests/integration/test_mysql_protocol/test.py
@@ -178,7 +178,7 @@ def test_mysql_client(started_cluster):
 
     assert (
         "mysql: [Warning] Using a password on the command line interface can be insecure.
"
-        "ERROR 194 (00000): default: Authentication failed: password is incorrect, or there is no user with such name"
+        "ERROR 194 (HY000): default: Authentication failed: password is incorrect, or there is no user with such name"
         in stderr.decode()
     )
 
@@ -198,7 +198,7 @@ def test_mysql_client(started_cluster):
     expected_msg = "
".join(
         [
             "mysql: [Warning] Using a password on the command line interface can be insecure.",
-            "ERROR 81 (00000) at line 1: Code: 81. DB::Exception: Database system2 does not exist",
+            "ERROR 81 (HY000) at line 1: Code: 81. DB::Exception: Database system2 does not exist",
         ]
     )
     assert stderr[: len(expected_msg)].decode() == expected_msg
@@ -242,7 +242,7 @@ def test_mysql_client_exception(started_cluster):
     expected_msg = "
".join(
         [
             "mysql: [Warning] Using a password on the command line interface can be insecure.",
-            "ERROR 279 (00000) at line 1: Code: 279. DB::Exception: Connections to mysql failed: default@127.0.0.1:10086 as user default",
+            "ERROR 279 (HY000) at line 1: Code: 279. DB::Exception: Connections to mysql failed: default@127.0.0.1:10086 as user default",
         ]
     )
     assert stderr[: len(expected_msg)].decode() == expected_msg
diff --git a/tests/queries/0_stateless/01176_mysql_client_interactive.expect b/tests/queries/0_stateless/01176_mysql_client_interactive.expect
index 6bfff6dfab34..83642003ba40 100755
--- a/tests/queries/0_stateless/01176_mysql_client_interactive.expect
+++ b/tests/queries/0_stateless/01176_mysql_client_interactive.expect
@@ -35,18 +35,18 @@ expect "1 row in set"
 
 # exception before start
 send -- "select * from table_that_does_not_exist;\r"
-expect "ERROR 60 (00000): Code: 60"
+expect "ERROR 60 (HY000): Code: 60"
 
 # exception after start
 send -- "select throwIf(number) from numbers(2) settings max_block_size=1;\r"
-expect "ERROR 395 (00000): Code: 395"
+expect "ERROR 395 (HY000): Code: 395"
 
 # other formats
 send -- "select * from system.one format TSV;\r"
-expect "ERROR 1 (00000): Code: 1"
+expect "ERROR 1 (HY000): Code: 1"
 
 send -- "select * from system.one format JSON;\r"
-expect "ERROR 1 (00000): Code: 1"
+expect "ERROR 1 (HY000): Code: 1"
 
 send -- "select * from system.one format MySQLWire;\r"
 expect "| dummy |"
