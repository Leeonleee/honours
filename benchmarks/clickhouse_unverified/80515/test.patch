diff --git a/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.reference b/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.reference
index 4c1a3fd5c153..91dade3a7c4b 100644
--- a/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.reference
+++ b/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.reference
@@ -44,7 +44,7 @@ select * from tab order by (a + b) * c, sin(a / b);
 select * from (explain plan actions = 1 select * from tab order by (a + b) * c, sin(a / b)) where explain like '%sort description%';
   Prefix sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
   Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
-select * from tab order by (a + b) * c desc, sin(a / b) desc;
+select * from tab order by (a + b) * c desc, sin(a / b) desc nulls first;
 4	4	4	4
 4	4	4	4
 3	3	3	3
@@ -55,7 +55,7 @@ select * from tab order by (a + b) * c desc, sin(a / b) desc;
 1	1	1	1
 0	0	0	0
 0	0	0	0
-select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc) where explain like '%sort description%';
+select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc nulls first) where explain like '%sort description%';
   Prefix sort description: multiply(plus(a, b), c) DESC, sin(divide(a, b)) DESC
   Result sort description: multiply(plus(a, b), c) DESC, sin(divide(a, b)) DESC
 -- Exact match, mixed direction
@@ -168,7 +168,7 @@ select * from (explain plan actions = 1 select * from tab order by (a + b) * c,
   Prefix sort description: multiply(plus(a, b), c) ASC
   Result sort description: multiply(plus(a, b), c) ASC, intDiv(sin(divide(a, b)), 2) DESC
 -- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc;
-select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc) where explain like '%sort description%';
+select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc nulls first) where explain like '%sort description%';
   Prefix sort description: multiply(plus(a, b), c) DESC, intDiv(sin(divide(a, b)), 2) DESC
   Result sort description: multiply(plus(a, b), c) DESC, intDiv(sin(divide(a, b)), 2) DESC
 -- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), -2);
diff --git a/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql b/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql
index 0421cadf868b..81f27f3c441e 100644
--- a/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql
+++ b/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql
@@ -23,8 +23,8 @@ select * from (explain plan actions = 1 select * from tab order by (a + b) * c d
 select * from tab order by (a + b) * c, sin(a / b);
 select * from (explain plan actions = 1 select * from tab order by (a + b) * c, sin(a / b)) where explain like '%sort description%';
 
-select * from tab order by (a + b) * c desc, sin(a / b) desc;
-select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc) where explain like '%sort description%';
+select * from tab order by (a + b) * c desc, sin(a / b) desc nulls first;
+select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc nulls first) where explain like '%sort description%';
 
 -- Exact match, mixed direction
 select * from tab order by (a + b) * c desc, sin(a / b);
@@ -68,7 +68,7 @@ select * from (explain plan actions = 1 select * from tab order by (a + b) * c d
 select * from (explain plan actions = 1 select * from tab order by (a + b) * c, intDiv(sin(a / b), 2) desc) where explain like '%sort description%';
 
 -- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc;
-select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc) where explain like '%sort description%';
+select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc nulls first) where explain like '%sort description%';
 
 -- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), -2);
 select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), -2)) where explain like '%sort description%';
diff --git a/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.reference b/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.reference
index d8f2decba37e..3d94c5b5ebe1 100644
--- a/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.reference
+++ b/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.reference
@@ -44,7 +44,7 @@ select * from tab order by (a + b) * c, sin(a / b);
 select * from (explain plan actions = 1 select * from tab order by (a + b) * c, sin(a / b)) where explain like '%sort description%';
   Prefix sort description: multiply(plus(__table1.a, __table1.b), __table1.c) ASC, sin(divide(__table1.a, __table1.b)) ASC
   Result sort description: multiply(plus(__table1.a, __table1.b), __table1.c) ASC, sin(divide(__table1.a, __table1.b)) ASC
-select * from tab order by (a + b) * c desc, sin(a / b) desc;
+select * from tab order by (a + b) * c desc, sin(a / b) desc nulls first;
 4	4	4	4
 4	4	4	4
 3	3	3	3
@@ -55,7 +55,7 @@ select * from tab order by (a + b) * c desc, sin(a / b) desc;
 1	1	1	1
 0	0	0	0
 0	0	0	0
-select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc) where explain like '%sort description%';
+select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc nulls first) where explain like '%sort description%';
   Prefix sort description: multiply(plus(__table1.a, __table1.b), __table1.c) DESC, sin(divide(__table1.a, __table1.b)) DESC
   Result sort description: multiply(plus(__table1.a, __table1.b), __table1.c) DESC, sin(divide(__table1.a, __table1.b)) DESC
 -- Exact match, mixed direction
@@ -168,7 +168,7 @@ select * from (explain plan actions = 1 select * from tab order by (a + b) * c,
   Prefix sort description: multiply(plus(__table1.a, __table1.b), __table1.c) ASC
   Result sort description: multiply(plus(__table1.a, __table1.b), __table1.c) ASC, intDiv(sin(divide(__table1.a, __table1.b)), 2_UInt8) DESC
 -- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc;
-select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc) where explain like '%sort description%';
+select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc nulls first) where explain like '%sort description%';
   Prefix sort description: multiply(plus(__table1.a, __table1.b), __table1.c) DESC, intDiv(sin(divide(__table1.a, __table1.b)), 2_UInt8) DESC
   Result sort description: multiply(plus(__table1.a, __table1.b), __table1.c) DESC, intDiv(sin(divide(__table1.a, __table1.b)), 2_UInt8) DESC
 -- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), -2);
diff --git a/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql b/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql
index 907263168d0e..2c1941f2a914 100644
--- a/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql
+++ b/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql
@@ -23,8 +23,8 @@ select * from (explain plan actions = 1 select * from tab order by (a + b) * c d
 select * from tab order by (a + b) * c, sin(a / b);
 select * from (explain plan actions = 1 select * from tab order by (a + b) * c, sin(a / b)) where explain like '%sort description%';
 
-select * from tab order by (a + b) * c desc, sin(a / b) desc;
-select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc) where explain like '%sort description%';
+select * from tab order by (a + b) * c desc, sin(a / b) desc nulls first;
+select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc nulls first) where explain like '%sort description%';
 
 -- Exact match, mixed direction
 select * from tab order by (a + b) * c desc, sin(a / b);
@@ -68,7 +68,7 @@ select * from (explain plan actions = 1 select * from tab order by (a + b) * c d
 select * from (explain plan actions = 1 select * from tab order by (a + b) * c, intDiv(sin(a / b), 2) desc) where explain like '%sort description%';
 
 -- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc;
-select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc) where explain like '%sort description%';
+select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc nulls first) where explain like '%sort description%';
 
 -- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), -2);
 select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), -2)) where explain like '%sort description%';
diff --git a/tests/queries/0_stateless/03257_reverse_sorting_key.sql b/tests/queries/0_stateless/03257_reverse_sorting_key.sql
index 0777d101ca18..9dbb468734bd 100644
--- a/tests/queries/0_stateless/03257_reverse_sorting_key.sql
+++ b/tests/queries/0_stateless/03257_reverse_sorting_key.sql
@@ -17,8 +17,8 @@ select * from x1 where i = 3;
 
 select count() from x1 where i between 3 and 10;
 
-select trimLeft(explain) from (explain actions=1 select * from x1 order by i desc limit 5) where explain ilike '%sort%' settings max_threads=1, enable_analyzer=1;
-explain pipeline select * from x1 order by i desc limit 5 settings max_threads=1;
+select trimLeft(explain) from (explain actions=1 select * from x1 order by i desc nulls first limit 5) where explain ilike '%sort%' settings max_threads=1, enable_analyzer=1;
+explain pipeline select * from x1 order by i desc nulls first limit 5 settings max_threads=1;
 
 select * from x1 order by i desc limit 5;
 
@@ -37,8 +37,8 @@ select * from x2 where j = 1003;
 
 select count() from x2 where i between 3 and 10 and j between 1003 and 1008;
 
-select trimLeft(explain) from (explain actions=1 select * from x2 order by i, j desc limit 5) where explain ilike '%sort%' settings max_threads=1, enable_analyzer=1;
-explain pipeline select * from x2 order by i, j desc limit 5 settings max_threads=1;
+select trimLeft(explain) from (explain actions=1 select * from x2 order by i, j desc nulls first limit 5) where explain ilike '%sort%' settings max_threads=1, enable_analyzer=1;
+explain pipeline select * from x2 order by i, j desc nulls first limit 5 settings max_threads=1;
 
 select * from x2 order by i, j desc limit 5;
 
diff --git a/tests/queries/0_stateless/03513_read_in_order_nullable.reference b/tests/queries/0_stateless/03513_read_in_order_nullable.reference
new file mode 100644
index 000000000000..fed4783a9e25
--- /dev/null
+++ b/tests/queries/0_stateless/03513_read_in_order_nullable.reference
@@ -0,0 +1,64 @@
+--- table asc, query desc, last
+1
+0
+\N
+--- table asc, query desc, first
+\N
+1
+0
+--- table asc, query asc, last
+0
+1
+\N
+--- table asc, query asc, first
+\N
+0
+1
+--- table desc, query desc, last
+1
+0
+\N
+--- table desc, query desc, first
+\N
+1
+0
+--- table desc, query asc, last
+0
+1
+\N
+--- table desc, query asc, first
+\N
+0
+1
+--- table asc, query desc, last
+1
+0
+nan
+--- table asc, query desc, first
+nan
+1
+0
+--- table asc, query asc, last
+0
+1
+nan
+--- table asc, query asc, first
+nan
+0
+1
+--- table desc, query desc, last
+1
+0
+nan
+--- table desc, query desc, first
+nan
+1
+0
+--- table desc, query asc, last
+0
+1
+nan
+--- table desc, query asc, first
+nan
+0
+1
diff --git a/tests/queries/0_stateless/03513_read_in_order_nullable.sql b/tests/queries/0_stateless/03513_read_in_order_nullable.sql
new file mode 100644
index 000000000000..461cf1c959f1
--- /dev/null
+++ b/tests/queries/0_stateless/03513_read_in_order_nullable.sql
@@ -0,0 +1,54 @@
+SET optimize_read_in_order = 1;
+SET max_threads = 1;
+
+CREATE TABLE t0 (c0 Nullable(Int64)) ENGINE = MergeTree() ORDER BY c0 SETTINGS allow_nullable_key=1;
+INSERT INTO TABLE t0 VALUES (0);
+INSERT INTO TABLE t0 VALUES (NULL), (1);
+
+SELECT '--- table asc, query desc, last';
+SELECT * FROM t0 ORDER BY c0 DESC NULLS LAST;
+SELECT '--- table asc, query desc, first';
+SELECT * FROM t0 ORDER BY c0 DESC NULLS FIRST;
+SELECT '--- table asc, query asc, last';
+SELECT * FROM t0 ORDER BY c0 ASC NULLS LAST;
+SELECT '--- table asc, query asc, first';
+SELECT * FROM t0 ORDER BY c0 ASC NULLS FIRST;
+
+CREATE TABLE t1 (c0 Nullable(Int64)) ENGINE = MergeTree() ORDER BY c0 DESC SETTINGS allow_nullable_key=1, allow_experimental_reverse_key=1;
+INSERT INTO TABLE t1 VALUES (0);
+INSERT INTO TABLE t1 VALUES (NULL), (1);
+
+SELECT '--- table desc, query desc, last';
+SELECT * FROM t1 ORDER BY c0 DESC NULLS LAST;
+SELECT '--- table desc, query desc, first';
+SELECT * FROM t1 ORDER BY c0 DESC NULLS FIRST;
+SELECT '--- table desc, query asc, last';
+SELECT * FROM t1 ORDER BY c0 ASC NULLS LAST;
+SELECT '--- table desc, query asc, first';
+SELECT * FROM t1 ORDER BY c0 ASC NULLS FIRST;
+
+CREATE TABLE f0 (c0 Float64) ENGINE = MergeTree() ORDER BY c0;
+INSERT INTO TABLE f0 VALUES (0);
+INSERT INTO TABLE f0 VALUES (0/0), (1);
+
+SELECT '--- table asc, query desc, last';
+SELECT * FROM f0 ORDER BY c0 DESC NULLS LAST;
+SELECT '--- table asc, query desc, first';
+SELECT * FROM f0 ORDER BY c0 DESC NULLS FIRST;
+SELECT '--- table asc, query asc, last';
+SELECT * FROM f0 ORDER BY c0 ASC NULLS LAST;
+SELECT '--- table asc, query asc, first';
+SELECT * FROM f0 ORDER BY c0 ASC NULLS FIRST;
+
+CREATE TABLE f1 (c0 Float64) ENGINE = MergeTree() ORDER BY c0 DESC SETTINGS allow_experimental_reverse_key=1;
+INSERT INTO TABLE f1 VALUES (0);
+INSERT INTO TABLE f1 VALUES (0/0), (1);
+
+SELECT '--- table desc, query desc, last';
+SELECT * FROM f1 ORDER BY c0 DESC NULLS LAST;
+SELECT '--- table desc, query desc, first';
+SELECT * FROM f1 ORDER BY c0 DESC NULLS FIRST;
+SELECT '--- table desc, query asc, last';
+SELECT * FROM f1 ORDER BY c0 ASC NULLS LAST;
+SELECT '--- table desc, query asc, first';
+SELECT * FROM f1 ORDER BY c0 ASC NULLS FIRST;
