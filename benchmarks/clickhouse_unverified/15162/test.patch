diff --git a/tests/integration/test_distributed_load_balancing/test.py b/tests/integration/test_distributed_load_balancing/test.py
index 0758dc38ba70..df7b74fcae18 100644
--- a/tests/integration/test_distributed_load_balancing/test.py
+++ b/tests/integration/test_distributed_load_balancing/test.py
@@ -106,7 +106,7 @@ def get_node(query_node, table='dist', *args, **kwargs):
         LIMIT 1
     ) a
     JOIN system.clusters c
-    ON a._shard_num = c.shard_num AND cluster = 'shards_cluster'
+    ON a._shard_num = c.shard_num WHERE cluster = 'shards_cluster'
     """.format(query_id=query_id))
     return rows.strip()
 
diff --git a/tests/queries/0_stateless/00878_join_unexpected_results.reference b/tests/queries/0_stateless/00878_join_unexpected_results.reference
index 65fcbc257ca6..a389cb47a962 100644
--- a/tests/queries/0_stateless/00878_join_unexpected_results.reference
+++ b/tests/queries/0_stateless/00878_join_unexpected_results.reference
@@ -23,8 +23,6 @@ join_use_nulls = 1
 -
 \N	\N
 -
-1	1	\N	\N
-2	2	\N	\N
 -
 1	1	1	1
 2	2	\N	\N
@@ -51,8 +49,6 @@ join_use_nulls = 0
 -
 -
 -
-1	1	0	0
-2	2	0	0
 -
 1	1	1	1
 2	2	0	0
diff --git a/tests/queries/0_stateless/00878_join_unexpected_results.sql b/tests/queries/0_stateless/00878_join_unexpected_results.sql
index 6f6cd6e64792..0aef5208b26e 100644
--- a/tests/queries/0_stateless/00878_join_unexpected_results.sql
+++ b/tests/queries/0_stateless/00878_join_unexpected_results.sql
@@ -30,11 +30,11 @@ select * from t left outer join s on (t.a=s.a and t.b=s.b) where s.a is null;
 select '-';
 select s.* from t left outer join s on (t.a=s.a and t.b=s.b) where s.a is null;
 select '-';
-select t.*, s.* from t left join s on (s.a=t.a and t.b=s.b and t.a=toInt64(2)) order by t.a;
+select t.*, s.* from t left join s on (s.a=t.a and t.b=s.b and t.a=toInt64(2)) order by t.a; -- {serverError 403 }
 select '-';
 select t.*, s.* from t left join s on (s.a=t.a) order by t.a;
 select '-';
-select t.*, s.* from t left join s on (t.b=toInt64(2) and s.a=t.a) where s.b=2;
+select t.*, s.* from t left join s on (t.b=toInt64(2) and s.a=t.a) where s.b=2; -- {serverError 403 }
 
 select 'join_use_nulls = 0';
 set join_use_nulls = 0;
@@ -58,11 +58,11 @@ select '-';
 select '-';
 -- select s.* from t left outer join s on (t.a=s.a and t.b=s.b) where s.a is null; -- TODO
 select '-';
-select t.*, s.* from t left join s on (s.a=t.a and t.b=s.b and t.a=toInt64(2)) order by t.a;
+select t.*, s.* from t left join s on (s.a=t.a and t.b=s.b and t.a=toInt64(2)) order by t.a; -- {serverError 403 }
 select '-';
 select t.*, s.* from t left join s on (s.a=t.a) order by t.a;
 select '-';
-select t.*, s.* from t left join s on (t.b=toInt64(2) and s.a=t.a) where s.b=2;
+select t.*, s.* from t left join s on (t.b=toInt64(2) and s.a=t.a) where s.b=2; -- {serverError 403 }
 
 drop table t;
 drop table s;
diff --git a/tests/queries/0_stateless/01018_Distributed__shard_num.reference b/tests/queries/0_stateless/01018_Distributed__shard_num.reference
index 679383f969e1..f4b920117599 100644
--- a/tests/queries/0_stateless/01018_Distributed__shard_num.reference
+++ b/tests/queries/0_stateless/01018_Distributed__shard_num.reference
@@ -29,8 +29,6 @@ remote(Distributed)
 JOIN system.clusters
 1	10	localhost	::1	9000
 1	20	localhost	::1	9000
-1	10	localhost	::1	9000
-1	20	localhost	::1	9000
 dist_3
 100	foo
 foo	100	foo
diff --git a/tests/queries/0_stateless/01018_Distributed__shard_num.sql b/tests/queries/0_stateless/01018_Distributed__shard_num.sql
index ddb8505a4159..f6d5f23eca82 100644
--- a/tests/queries/0_stateless/01018_Distributed__shard_num.sql
+++ b/tests/queries/0_stateless/01018_Distributed__shard_num.sql
@@ -48,11 +48,12 @@ FROM (SELECT *, _shard_num FROM dist_1) a
 JOIN system.clusters b
 ON a._shard_num = b.shard_num
 WHERE b.cluster = 'test_cluster_two_shards_localhost';
+
 SELECT _shard_num, key, b.host_name, b.host_address, b.port
 FROM dist_1 a
 JOIN system.clusters b
 ON _shard_num = b.shard_num
-WHERE b.cluster = 'test_cluster_two_shards_localhost';
+WHERE b.cluster = 'test_cluster_two_shards_localhost'; -- { serverError 403 }
 
 -- rewrite does not work with aliases, hence Missing columns (47)
 SELECT a._shard_num, key FROM dist_1 a; -- { serverError 47; }
diff --git a/tests/queries/0_stateless/01081_PartialSortingTransform_full_column.sql b/tests/queries/0_stateless/01081_PartialSortingTransform_full_column.sql
index 768a20c8ca4e..eaf1278d9baa 100644
--- a/tests/queries/0_stateless/01081_PartialSortingTransform_full_column.sql
+++ b/tests/queries/0_stateless/01081_PartialSortingTransform_full_column.sql
@@ -2,7 +2,7 @@ drop table if exists test_01081;
 
 create table test_01081 (key Int) engine=MergeTree() order by key;
 insert into test_01081 select * from system.numbers limit 10;
-select 1 from remote('127.{1,2}', currentDatabase(), test_01081) lhs join system.one as rhs on rhs.dummy = 1 order by 1;
+select 1 from remote('127.{1,2}', currentDatabase(), test_01081) lhs join system.one as rhs on rhs.dummy = 1 order by 1; -- { serverError 403 }
 
 -- With multiple blocks triggers:
 --
@@ -11,6 +11,6 @@ select 1 from remote('127.{1,2}', currentDatabase(), test_01081) lhs join system
 --     _dummy Int Int32(size = 0), 1 UInt8 Const(size = 0, UInt8(size = 1)).
 
 insert into test_01081 select * from system.numbers limit 10;
-select 1 from remote('127.{1,2}', currentDatabase(), test_01081) lhs join system.one as rhs on rhs.dummy = 1 order by 1;
+select 1 from remote('127.{1,2}', currentDatabase(), test_01081) lhs join system.one as rhs on rhs.dummy = 1 order by 1; -- { serverError 403 }
 
 drop table if exists test_01081;
diff --git a/tests/queries/0_stateless/01101_literal_column_clash.reference b/tests/queries/0_stateless/01101_literal_column_clash.reference
index 47458541f793..e63f96416afe 100644
--- a/tests/queries/0_stateless/01101_literal_column_clash.reference
+++ b/tests/queries/0_stateless/01101_literal_column_clash.reference
@@ -8,7 +8,3 @@ xyzabc	2
 1	0	0	3
 \N	1	2	\N	0
 \N	1	0	\N	3
-1
-1
-1	hello\0\0\0
-1	hello\0\0\0
diff --git a/tests/queries/0_stateless/01101_literal_column_clash.sql b/tests/queries/0_stateless/01101_literal_column_clash.sql
index 2c665d3833b1..f96aad4bacf6 100644
--- a/tests/queries/0_stateless/01101_literal_column_clash.sql
+++ b/tests/queries/0_stateless/01101_literal_column_clash.sql
@@ -17,7 +17,6 @@ select null, isConstant(null), * from (select 2 x, null) a right join (select 3
 
 -- other cases with joins and constants
 
-select cast(1, 'UInt8') from (select arrayJoin([1, 2]) as a) t1 left join (select 1 as b) t2 on b = ignore('UInt8');
-
-select isConstant('UInt8'), toFixedString('hello', toUInt8(substring('UInt8', 5, 1))) from (select arrayJoin([1, 2]) as a) t1 left join (select 1 as b) t2 on b = ignore('UInt8');
+select cast(1, 'UInt8') from (select arrayJoin([1, 2]) as a) t1 left join (select 1 as b) t2 on b = ignore('UInt8'); -- { serverError 403 }
 
+select isConstant('UInt8'), toFixedString('hello', toUInt8(substring('UInt8', 5, 1))) from (select arrayJoin([1, 2]) as a) t1 left join (select 1 as b) t2 on b = ignore('UInt8');  -- { serverError 403 }
diff --git a/tests/queries/0_stateless/01478_not_equi-join_on.reference b/tests/queries/0_stateless/01478_not_equi-join_on.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/01478_not_equi-join_on.sql b/tests/queries/0_stateless/01478_not_equi-join_on.sql
new file mode 100644
index 000000000000..b52af5fcb46c
--- /dev/null
+++ b/tests/queries/0_stateless/01478_not_equi-join_on.sql
@@ -0,0 +1,7 @@
+SELECT * FROM (SELECT NULL AS a, 1 AS b) AS foo
+RIGHT JOIN (SELECT 1024 AS b) AS bar
+ON 1 = foo.b; -- { serverError 403 }
+
+SELECT * FROM (SELECT NULL AS a, 1 AS b) AS foo
+RIGHT JOIN (SELECT 1024 AS b) AS bar
+ON 1 = bar.b; -- { serverError 403 }
