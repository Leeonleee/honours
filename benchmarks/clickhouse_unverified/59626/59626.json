{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 59626,
  "instance_id": "ClickHouse__ClickHouse-59626",
  "issue_numbers": [
    "59036"
  ],
  "base_commit": "f7de95cec333a0795058314237d37c935f75f783",
  "patch": "diff --git a/src/Interpreters/executeQuery.cpp b/src/Interpreters/executeQuery.cpp\nindex f2aa51bd6dec..b52ce1f1448e 100644\n--- a/src/Interpreters/executeQuery.cpp\n+++ b/src/Interpreters/executeQuery.cpp\n@@ -103,7 +103,6 @@ namespace ErrorCodes\n     extern const int NOT_IMPLEMENTED;\n     extern const int QUERY_WAS_CANCELLED;\n     extern const int INCORRECT_DATA;\n-    extern const int SUPPORT_IS_DISABLED;\n }\n \n namespace FailPoints\n@@ -709,7 +708,9 @@ static std::tuple<ASTPtr, BlockIO> executeQueryImpl(\n     {\n         if (settings.dialect == Dialect::kusto && !internal)\n         {\n-            throw Exception(ErrorCodes::SUPPORT_IS_DISABLED, \"Kusto dialect is disabled until these two bugs will be fixed: https://github.com/ClickHouse/ClickHouse/issues/59037 and https://github.com/ClickHouse/ClickHouse/issues/59036\");\n+            ParserKQLStatement parser(end, settings.allow_settings_after_format_in_insert);\n+            /// TODO: parser should fail early when max_query_size limit is reached.\n+            ast = parseKQLQuery(parser, begin, end, \"\", max_query_size, settings.max_parser_depth);\n         }\n         else if (settings.dialect == Dialect::prql && !internal)\n         {\ndiff --git a/src/Parsers/Kusto/KustoFunctions/IParserKQLFunction.cpp b/src/Parsers/Kusto/KustoFunctions/IParserKQLFunction.cpp\nindex 6ef4a52ceffc..152c29e59419 100644\n--- a/src/Parsers/Kusto/KustoFunctions/IParserKQLFunction.cpp\n+++ b/src/Parsers/Kusto/KustoFunctions/IParserKQLFunction.cpp\n@@ -73,7 +73,7 @@ bool IParserKQLFunction::directMapping(\n \n     int argument_count = 0;\n     const auto begin = pos;\n-    while (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n     {\n         if (pos != begin)\n             out.append(\", \");\n@@ -148,11 +148,11 @@ String IParserKQLFunction::getConvertedArgument(const String & fn_name, IParser:\n     if (pos->type == TokenType::ClosingRoundBracket || pos->type == TokenType::ClosingSquareBracket)\n         return {};\n \n-    if (pos->isEnd() || pos->type == TokenType::PipeMark || pos->type == TokenType::Semicolon)\n+    if (!isValidKQLPos(pos) || pos->type == TokenType::PipeMark || pos->type == TokenType::Semicolon)\n         throw Exception(ErrorCodes::NUMBER_OF_ARGUMENTS_DOESNT_MATCH, \"Need more argument(s) in function: {}\", fn_name);\n \n     std::vector<String> tokens;\n-    while (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n     {\n         if (pos->type == TokenType::OpeningRoundBracket)\n             ++round_bracket_count;\n@@ -191,7 +191,7 @@ String IParserKQLFunction::getConvertedArgument(const String & fn_name, IParser:\n                 {\n                     ++pos;\n                     String array_index;\n-                    while (!pos->isEnd() && pos->type != TokenType::ClosingSquareBracket)\n+                    while (isValidKQLPos(pos) && pos->type != TokenType::ClosingSquareBracket)\n                     {\n                         array_index += getExpression(pos);\n                         ++pos;\n@@ -246,7 +246,7 @@ IParserKQLFunction::getOptionalArgument(const String & function_name, DB::IParse\n \n     const auto * begin = pos->begin;\n     std::stack<DB::TokenType> scopes;\n-    while (!pos->isEnd() && (!scopes.empty() || (pos->type != DB::TokenType::Comma && pos->type != DB::TokenType::ClosingRoundBracket)))\n+    while (isValidKQLPos(pos) && (!scopes.empty() || (pos->type != DB::TokenType::Comma && pos->type != DB::TokenType::ClosingRoundBracket)))\n     {\n         const auto token_type = pos->type;\n         if (isOpeningBracket(token_type))\n@@ -357,7 +357,7 @@ String IParserKQLFunction::getExpression(IParser::Pos & pos)\n     {\n         ++pos;\n         String array_index;\n-        while (!pos->isEnd() && pos->type != TokenType::ClosingSquareBracket)\n+        while (isValidKQLPos(pos) && pos->type != TokenType::ClosingSquareBracket)\n         {\n             array_index += getExpression(pos);\n             ++pos;\ndiff --git a/src/Parsers/Kusto/KustoFunctions/KQLDataTypeFunctions.cpp b/src/Parsers/Kusto/KustoFunctions/KQLDataTypeFunctions.cpp\nindex 8530fa6623d2..cca4fb3ce33f 100644\n--- a/src/Parsers/Kusto/KustoFunctions/KQLDataTypeFunctions.cpp\n+++ b/src/Parsers/Kusto/KustoFunctions/KQLDataTypeFunctions.cpp\n@@ -7,6 +7,7 @@\n #include <Parsers/Kusto/ParserKQLDateTypeTimespan.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n #include <Parsers/Kusto/ParserKQLStatement.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ParserSetQuery.h>\n #include \"Poco/String.h\"\n #include <format>\n@@ -51,7 +52,7 @@ bool DatatypeDatetime::convertImpl(String & out, IParser::Pos & pos)\n     else\n     {\n         auto start = pos;\n-        while (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+        while (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n         {\n             ++pos;\n             if (pos->type == TokenType::ClosingRoundBracket)\n@@ -77,7 +78,7 @@ bool DatatypeDynamic::convertImpl(String & out, IParser::Pos & pos)\n     if (pos->type == TokenType::OpeningCurlyBrace)\n         throw Exception(ErrorCodes::BAD_ARGUMENTS, \"Property bags are not supported for now in {}\", function_name);\n \n-    while (!pos->isEnd() && pos->type != TokenType::ClosingRoundBracket)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::ClosingRoundBracket)\n     {\n         if (const auto token_type = pos->type; token_type == TokenType::BareWord || token_type == TokenType::Number\n             || token_type == TokenType::QuotedIdentifier || token_type == TokenType::StringLiteral)\n@@ -117,7 +118,7 @@ bool DatatypeGuid::convertImpl(String & out, IParser::Pos & pos)\n     else\n     {\n         auto start = pos;\n-        while (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+        while (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n         {\n             ++pos;\n             if (pos->type == TokenType::ClosingRoundBracket)\ndiff --git a/src/Parsers/Kusto/KustoFunctions/KQLDateTimeFunctions.cpp b/src/Parsers/Kusto/KustoFunctions/KQLDateTimeFunctions.cpp\nindex e5f40ee604df..f059fd9aa6bc 100644\n--- a/src/Parsers/Kusto/KustoFunctions/KQLDateTimeFunctions.cpp\n+++ b/src/Parsers/Kusto/KustoFunctions/KQLDateTimeFunctions.cpp\n@@ -14,6 +14,7 @@\n #include <Parsers/Kusto/KustoFunctions/KQLTimeSeriesFunctions.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n #include <Parsers/Kusto/ParserKQLStatement.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ParserSetQuery.h>\n #include \"Poco/String.h\"\n namespace DB::ErrorCodes\n@@ -521,7 +522,7 @@ bool MakeTimeSpan::convertImpl(String & out, IParser::Pos & pos)\n     String second;\n     int arg_count = 0;\n     std::vector<String> args;\n-    while (!pos->isEnd() && pos->type != TokenType::ClosingRoundBracket)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::ClosingRoundBracket)\n     {\n         String arg = getConvertedArgument(fn_name, pos);\n         args.insert(args.begin(), arg);\n@@ -588,7 +589,7 @@ bool MakeDateTime::convertImpl(String & out, IParser::Pos & pos)\n     String arguments;\n     int arg_count = 0;\n \n-    while (!pos->isEnd() && pos->type != TokenType::ClosingRoundBracket)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::ClosingRoundBracket)\n     {\n         String arg = getConvertedArgument(fn_name, pos);\n         if (pos->type == TokenType::Comma)\ndiff --git a/src/Parsers/Kusto/KustoFunctions/KQLStringFunctions.cpp b/src/Parsers/Kusto/KustoFunctions/KQLStringFunctions.cpp\nindex afb8809c69ee..82cfa68b180b 100644\n--- a/src/Parsers/Kusto/KustoFunctions/KQLStringFunctions.cpp\n+++ b/src/Parsers/Kusto/KustoFunctions/KQLStringFunctions.cpp\n@@ -3,7 +3,7 @@\n #include <Parsers/Kusto/KustoFunctions/IParserKQLFunction.h>\n #include <Parsers/Kusto/KustoFunctions/KQLFunctionFactory.h>\n #include <Parsers/Kusto/KustoFunctions/KQLStringFunctions.h>\n-\n+#include <Parsers/Kusto/Utilities.h>\n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/split.hpp>\n #include <Poco/String.h>\n@@ -590,7 +590,7 @@ bool StrCatDelim::convertImpl(String & out, IParser::Pos & pos)\n     int arg_count = 0;\n     String args;\n \n-    while (!pos->isEnd() && pos->type != TokenType::Semicolon && pos->type != TokenType::ClosingRoundBracket)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::Semicolon && pos->type != TokenType::ClosingRoundBracket)\n     {\n         ++pos;\n         String arg = getConvertedArgument(fn_name, pos);\ndiff --git a/src/Parsers/Kusto/ParserKQLExtend.cpp b/src/Parsers/Kusto/ParserKQLExtend.cpp\nindex ac5beb805766..b37618f69fdf 100644\n--- a/src/Parsers/Kusto/ParserKQLExtend.cpp\n+++ b/src/Parsers/Kusto/ParserKQLExtend.cpp\n@@ -7,6 +7,7 @@\n #include <Parsers/Kusto/ParserKQLOperators.h>\n #include <Parsers/Kusto/ParserKQLProject.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ParserSelectQuery.h>\n #include <Parsers/ParserTablesInSelectQuery.h>\n \n@@ -44,7 +45,7 @@ bool ParserKQLExtend ::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n \n     int32_t round_bracket_count = 0;\n     int32_t square_bracket_count = 0;\n-    while (!npos->isEnd())\n+    while (isValidKQLPos(npos))\n     {\n         if (npos->type == TokenType::OpeningRoundBracket)\n             ++round_bracket_count;\ndiff --git a/src/Parsers/Kusto/ParserKQLMVExpand.cpp b/src/Parsers/Kusto/ParserKQLMVExpand.cpp\nindex bf5fbe64d0b6..7d242dffaf7c 100644\n--- a/src/Parsers/Kusto/ParserKQLMVExpand.cpp\n+++ b/src/Parsers/Kusto/ParserKQLMVExpand.cpp\n@@ -7,6 +7,7 @@\n #include <Parsers/Kusto/ParserKQLMakeSeries.h>\n #include <Parsers/Kusto/ParserKQLOperators.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ParserSelectQuery.h>\n #include <Parsers/ParserSetQuery.h>\n #include <Parsers/ParserTablesInSelectQuery.h>\n@@ -49,7 +50,7 @@ bool ParserKQLMVExpand::parseColumnArrayExprs(ColumnArrayExprs & column_array_ex\n     String to_type;\n     --expr_end_pos;\n \n-    while (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n     {\n         if (pos->type == TokenType::OpeningRoundBracket)\n             ++bracket_count;\n@@ -125,9 +126,9 @@ bool ParserKQLMVExpand::parseColumnArrayExprs(ColumnArrayExprs & column_array_ex\n \n         if (String(pos->begin, pos->end) == \"limit\")\n             break;\n-        if (!pos->isEnd())\n+        if (isValidKQLPos(pos))\n             ++pos;\n-        if (pos->isEnd() || pos->type == TokenType::PipeMark || pos->type == TokenType::Semicolon)\n+        if (!isValidKQLPos(pos) || pos->type == TokenType::PipeMark || pos->type == TokenType::Semicolon)\n         {\n             if (expr_end_pos < expr_begin_pos)\n             {\ndiff --git a/src/Parsers/Kusto/ParserKQLMakeSeries.cpp b/src/Parsers/Kusto/ParserKQLMakeSeries.cpp\nindex a37276530494..e89423e2fc9d 100644\n--- a/src/Parsers/Kusto/ParserKQLMakeSeries.cpp\n+++ b/src/Parsers/Kusto/ParserKQLMakeSeries.cpp\n@@ -6,6 +6,7 @@\n #include <Parsers/Kusto/ParserKQLMakeSeries.h>\n #include <Parsers/Kusto/ParserKQLOperators.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ParserSelectQuery.h>\n #include <Parsers/ParserTablesInSelectQuery.h>\n \n@@ -39,7 +40,7 @@ bool ParserKQLMakeSeries ::parseAggregationColumns(AggregationColumns & aggregat\n     ParserToken close_bracket(TokenType::ClosingRoundBracket);\n     ParserToken comma(TokenType::Comma);\n \n-    while (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n     {\n         String alias;\n         String aggregation_fun;\n@@ -96,7 +97,7 @@ bool ParserKQLMakeSeries ::parseFromToStepClause(FromToStepClause & from_to_step\n     auto step_pos = begin;\n     auto end_pos = begin;\n \n-    while (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n     {\n         if (String(pos->begin, pos->end) == \"from\")\n             from_pos = pos;\n@@ -175,7 +176,7 @@ bool ParserKQLMakeSeries ::makeSeries(KQLMakeSeries & kql_make_series, ASTPtr &\n         Tokens tokens(src.c_str(), src.c_str() + src.size());\n         IParser::Pos pos(tokens, max_depth);\n         String res;\n-        while (!pos->isEnd())\n+        while (isValidKQLPos(pos))\n         {\n             String tmp = String(pos->begin, pos->end);\n             if (tmp == \"parseDateTime64BestEffortOrNull\")\n@@ -201,7 +202,7 @@ bool ParserKQLMakeSeries ::makeSeries(KQLMakeSeries & kql_make_series, ASTPtr &\n         std::vector<String> group_expression_tokens;\n         Tokens tokens(group_expression.c_str(), group_expression.c_str() + group_expression.size());\n         IParser::Pos pos(tokens, max_depth);\n-        while (!pos->isEnd())\n+        while (isValidKQLPos(pos))\n         {\n             if (String(pos->begin, pos->end) == \"AS\")\n             {\ndiff --git a/src/Parsers/Kusto/ParserKQLOperators.cpp b/src/Parsers/Kusto/ParserKQLOperators.cpp\nindex 47982a5f73e5..d7364cb5fd73 100644\n--- a/src/Parsers/Kusto/ParserKQLOperators.cpp\n+++ b/src/Parsers/Kusto/ParserKQLOperators.cpp\n@@ -5,6 +5,7 @@\n #include <Parsers/Kusto/ParserKQLOperators.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n #include <Parsers/Kusto/ParserKQLStatement.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ASTFunction.h>\n #include <Parsers/ASTIdentifier.h>\n #include <Parsers/formatAST.h>\n@@ -148,7 +149,7 @@ String KQLOperators::genHasAnyAllOpExpr(std::vector<String> & tokens, IParser::P\n \n     String logic_op = (kql_op == \"has_all\") ? \" and \" : \" or \";\n \n-    while (!token_pos->isEnd() && token_pos->type != TokenType::PipeMark && token_pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(token_pos) && token_pos->type != TokenType::PipeMark && token_pos->type != TokenType::Semicolon)\n     {\n         auto tmp_arg = IParserKQLFunction::getExpression(token_pos);\n         if (token_pos->type == TokenType::Comma)\n@@ -217,7 +218,7 @@ String genInOpExprCis(std::vector<String> & tokens, DB::IParser::Pos & token_pos\n     --token_pos;\n \n     new_expr += ch_op;\n-    while (!token_pos->isEnd() && token_pos->type != DB::TokenType::PipeMark && token_pos->type != DB::TokenType::Semicolon)\n+    while (isValidKQLPos(token_pos) && token_pos->type != DB::TokenType::PipeMark && token_pos->type != DB::TokenType::Semicolon)\n     {\n         auto tmp_arg = String(token_pos->begin, token_pos->end);\n         if (token_pos->type != DB::TokenType::Comma && token_pos->type != DB::TokenType::ClosingRoundBracket\n@@ -329,7 +330,7 @@ bool KQLOperators::convert(std::vector<String> & tokens, IParser::Pos & pos)\n {\n     auto begin = pos;\n \n-    if (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+    if (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n     {\n         KQLOperatorValue op_value = KQLOperatorValue::none;\n \n@@ -339,14 +340,14 @@ bool KQLOperators::convert(std::vector<String> & tokens, IParser::Pos & pos)\n         if (token == \"!\")\n         {\n             ++pos;\n-            if (pos->isEnd() || pos->type == TokenType::PipeMark || pos->type == TokenType::Semicolon)\n+            if (!isValidKQLPos(pos) || pos->type == TokenType::PipeMark || pos->type == TokenType::Semicolon)\n                 throw Exception(ErrorCodes::SYNTAX_ERROR, \"Invalid negative operator\");\n             op = \"!\" + String(pos->begin, pos->end);\n         }\n         else if (token == \"matches\")\n         {\n             ++pos;\n-            if (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+            if (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n             {\n                 if (String(pos->begin, pos->end) == \"regex\")\n                     op += \" regex\";\n@@ -360,7 +361,7 @@ bool KQLOperators::convert(std::vector<String> & tokens, IParser::Pos & pos)\n         }\n \n         ++pos;\n-        if (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+        if (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n         {\n             if (String(pos->begin, pos->end) == \"~\")\n                 op += \"~\";\ndiff --git a/src/Parsers/Kusto/ParserKQLQuery.cpp b/src/Parsers/Kusto/ParserKQLQuery.cpp\nindex 30e9921e744d..29b26b4e3fed 100644\n--- a/src/Parsers/Kusto/ParserKQLQuery.cpp\n+++ b/src/Parsers/Kusto/ParserKQLQuery.cpp\n@@ -20,6 +20,7 @@\n #include <Parsers/Kusto/ParserKQLStatement.h>\n #include <Parsers/Kusto/ParserKQLSummarize.h>\n #include <Parsers/Kusto/ParserKQLTable.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ParserSelectWithUnionQuery.h>\n #include <Parsers/ParserTablesInSelectQuery.h>\n \n@@ -59,33 +60,34 @@ bool ParserKQLBase::setSubQuerySource(ASTPtr & select_query, ASTPtr & source, bo\n         if (!select_query || !select_query->as<ASTSelectQuery>()->tables()\n             || select_query->as<ASTSelectQuery>()->tables()->as<ASTTablesInSelectQuery>()->children.empty())\n             return false;\n-        table_expr = select_query->as<ASTSelectQuery>()->tables()->as<ASTTablesInSelectQuery>()->children[0];\n+        table_expr = select_query->as<ASTSelectQuery>()->tables()->as<ASTTablesInSelectQuery>()->children.at(0);\n         table_expr->as<ASTTablesInSelectQueryElement>()->table_expression\n-            = source->as<ASTSelectQuery>()->tables()->children[0]->as<ASTTablesInSelectQueryElement>()->table_expression;\n+            = source->as<ASTSelectQuery>()->tables()->children.at(0)->as<ASTTablesInSelectQueryElement>()->table_expression;\n+        table_expr->children.at(0) = table_expr->as<ASTTablesInSelectQueryElement>()->table_expression;\n         return true;\n     }\n \n     if (!select_query || select_query->as<ASTTablesInSelectQuery>()->children.empty()\n-        || !select_query->as<ASTTablesInSelectQuery>()->children[0]->as<ASTTablesInSelectQueryElement>()->table_expression\n+        || !select_query->as<ASTTablesInSelectQuery>()->children.at(0)->as<ASTTablesInSelectQueryElement>()->table_expression\n         || select_query->as<ASTTablesInSelectQuery>()\n-               ->children[0]\n+               ->children.at(0)\n                ->as<ASTTablesInSelectQueryElement>()\n                ->table_expression->as<ASTTableExpression>()\n                ->subquery->children.empty()\n         || select_query->as<ASTTablesInSelectQuery>()\n-               ->children[0]\n+               ->children.at(0)\n                ->as<ASTTablesInSelectQueryElement>()\n                ->table_expression->as<ASTTableExpression>()\n-               ->subquery->children[0]\n+               ->subquery->children.at(0)\n                ->as<ASTSelectWithUnionQuery>()\n                ->list_of_selects->children.empty()\n         || select_query->as<ASTTablesInSelectQuery>()\n-               ->children[0]\n+               ->children.at(0)\n                ->as<ASTTablesInSelectQueryElement>()\n                ->table_expression->as<ASTTableExpression>()\n-               ->subquery->children[0]\n+               ->subquery->children.at(0)\n                ->as<ASTSelectWithUnionQuery>()\n-               ->list_of_selects->children[0]\n+               ->list_of_selects->children.at(0)\n                ->as<ASTSelectQuery>()\n                ->tables()\n                ->as<ASTTablesInSelectQuery>()\n@@ -93,28 +95,29 @@ bool ParserKQLBase::setSubQuerySource(ASTPtr & select_query, ASTPtr & source, bo\n         return false;\n \n     table_expr = select_query->as<ASTTablesInSelectQuery>()\n-                     ->children[0]\n+                     ->children.at(0)\n                      ->as<ASTTablesInSelectQueryElement>()\n                      ->table_expression->as<ASTTableExpression>()\n-                     ->subquery->children[0]\n+                     ->subquery->children.at(0)\n                      ->as<ASTSelectWithUnionQuery>()\n-                     ->list_of_selects->children[0]\n+                     ->list_of_selects->children.at(0)\n                      ->as<ASTSelectQuery>()\n                      ->tables()\n                      ->as<ASTTablesInSelectQuery>()\n-                     ->children[0];\n+                     ->children.at(0);\n \n     if (!src_is_subquery)\n     {\n         table_expr->as<ASTTablesInSelectQueryElement>()->table_expression\n-            = source->as<ASTSelectQuery>()->tables()->children[0]->as<ASTTablesInSelectQueryElement>()->table_expression;\n+            = source->as<ASTSelectQuery>()->tables()->children.at(0)->as<ASTTablesInSelectQueryElement>()->table_expression;\n     }\n     else\n     {\n         table_expr->as<ASTTablesInSelectQueryElement>()->table_expression\n-            = source->children[0]->as<ASTTablesInSelectQueryElement>()->table_expression;\n+            = source->children.at(0)->as<ASTTablesInSelectQueryElement>()->table_expression;\n     }\n \n+    table_expr->children.at(0) = table_expr->as<ASTTablesInSelectQueryElement>()->table_expression;\n     return true;\n }\n \n@@ -130,7 +133,7 @@ String ParserKQLBase::getExprFromPipe(Pos & pos)\n {\n     BracketCount bracket_count;\n     auto end = pos;\n-    while (!end->isEnd() && end->type != TokenType::Semicolon)\n+    while (isValidKQLPos(end) && end->type != TokenType::Semicolon)\n     {\n         bracket_count.count(end);\n         if (end->type == TokenType::PipeMark && bracket_count.isZero())\n@@ -149,7 +152,7 @@ String ParserKQLBase::getExprFromToken(Pos & pos)\n     comma_pos.push_back(pos);\n \n     size_t paren_count = 0;\n-    while (!pos->isEnd() && pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::Semicolon)\n     {\n         if (pos->type == TokenType::PipeMark && paren_count == 0)\n             break;\n@@ -373,7 +376,7 @@ bool ParserKQLQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n \n     uint16_t bracket_count = 0;\n \n-    while (!pos->isEnd() && pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::Semicolon)\n     {\n         if (pos->type == TokenType::OpeningRoundBracket)\n             ++bracket_count;\n@@ -383,6 +386,9 @@ bool ParserKQLQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n         if (pos->type == TokenType::PipeMark && bracket_count == 0)\n         {\n             ++pos;\n+            if (!isValidKQLPos(pos))\n+                return false;\n+\n             String kql_operator(pos->begin, pos->end);\n \n             auto validate_kql_operator = [&]\n@@ -390,6 +396,9 @@ bool ParserKQLQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n                 if (kql_operator == \"order\" || kql_operator == \"sort\")\n                 {\n                     ++pos;\n+                    if (!isValidKQLPos(pos))\n+                        return false;\n+\n                     ParserKeyword s_by(\"by\");\n                     if (s_by.ignore(pos, expected))\n                     {\n@@ -401,6 +410,9 @@ bool ParserKQLQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n                 {\n                     auto op_pos_begin = pos;\n                     ++pos;\n+                    if (!isValidKQLPos(pos))\n+                        return false;\n+\n                     ParserToken s_dash(TokenType::Minus);\n                     if (s_dash.ignore(pos, expected))\n                     {\n@@ -418,6 +430,9 @@ bool ParserKQLQuery::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n             if (!validate_kql_operator())\n                 return false;\n             ++pos;\n+            if (!isValidKQLPos(pos))\n+                return false;\n+\n             operation_pos.push_back(std::make_pair(kql_operator, pos));\n         }\n         else\n@@ -627,6 +642,7 @@ bool ParserSimpleCHSubquery::parseImpl(Pos & pos, ASTPtr & node, Expected & expe\n     ASTPtr node_table_in_select_query_element = std::make_shared<ASTTablesInSelectQueryElement>();\n     node_table_in_select_query_element->as<ASTTablesInSelectQueryElement>()->table_expression = node_table_expr;\n \n+    node_table_in_select_query_element->children.emplace_back(node_table_expr);\n     ASTPtr res = std::make_shared<ASTTablesInSelectQuery>();\n \n     res->children.emplace_back(node_table_in_select_query_element);\ndiff --git a/src/Parsers/Kusto/ParserKQLSort.cpp b/src/Parsers/Kusto/ParserKQLSort.cpp\nindex 193b75567aae..7e5ac2b17e74 100644\n--- a/src/Parsers/Kusto/ParserKQLSort.cpp\n+++ b/src/Parsers/Kusto/ParserKQLSort.cpp\n@@ -4,6 +4,7 @@\n #include <Parsers/IParserBase.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n #include <Parsers/Kusto/ParserKQLSort.h>\n+#include <Parsers/Kusto/Utilities.h>\n \n namespace DB\n {\n@@ -24,7 +25,7 @@ bool ParserKQLSort::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n     if (!order_list.parse(pos_backup, order_expression_list, expected))\n         return false;\n \n-    while (!new_pos->isEnd() && new_pos->type != TokenType::PipeMark && new_pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(new_pos) && new_pos->type != TokenType::PipeMark && new_pos->type != TokenType::Semicolon)\n     {\n         String tmp(new_pos->begin, new_pos->end);\n         if (tmp == \"desc\" || tmp == \"asc\")\ndiff --git a/src/Parsers/Kusto/ParserKQLStatement.cpp b/src/Parsers/Kusto/ParserKQLStatement.cpp\nindex f61e2e99ffb0..668696fa9dc8 100644\n--- a/src/Parsers/Kusto/ParserKQLStatement.cpp\n+++ b/src/Parsers/Kusto/ParserKQLStatement.cpp\n@@ -5,6 +5,7 @@\n #include <Parsers/Kusto/KustoFunctions/KQLFunctionFactory.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n #include <Parsers/Kusto/ParserKQLStatement.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ParserSetQuery.h>\n \n namespace DB\n@@ -79,7 +80,7 @@ bool ParserKQLTableFunction::parseImpl(Pos & pos, ASTPtr & node, Expected & expe\n         {\n             ++paren_count;\n             auto pos_start = pos;\n-            while (!pos->isEnd())\n+            while (isValidKQLPos(pos))\n             {\n                 if (pos->type == TokenType::ClosingRoundBracket)\n                     --paren_count;\ndiff --git a/src/Parsers/Kusto/ParserKQLSummarize.cpp b/src/Parsers/Kusto/ParserKQLSummarize.cpp\nindex 11518fcc6849..a45717930bba 100644\n--- a/src/Parsers/Kusto/ParserKQLSummarize.cpp\n+++ b/src/Parsers/Kusto/ParserKQLSummarize.cpp\n@@ -15,6 +15,7 @@\n #include <Parsers/IParserBase.h>\n #include <Parsers/Kusto/ParserKQLQuery.h>\n #include <Parsers/Kusto/ParserKQLSummarize.h>\n+#include <Parsers/Kusto/Utilities.h>\n #include <Parsers/ParserSampleRatio.h>\n #include <Parsers/ParserSelectQuery.h>\n #include <Parsers/ParserSetQuery.h>\n@@ -120,7 +121,7 @@ bool ParserKQLSummarize::parseImpl(Pos & pos, ASTPtr & node, Expected & expected\n             if (String(equal_pos->begin, equal_pos->end) != \"=\")\n             {\n                 String groupby_fun = String(begin_pos->begin, begin_pos->end);\n-                if (equal_pos->isEnd() || equal_pos->type == TokenType::Comma || equal_pos->type == TokenType::Semicolon\n+                if (!equal_pos.isValid() || equal_pos->type == TokenType::Comma || equal_pos->type == TokenType::Semicolon\n                     || equal_pos->type == TokenType::PipeMark)\n                 {\n                     expr = groupby_fun;\n@@ -151,7 +152,7 @@ bool ParserKQLSummarize::parseImpl(Pos & pos, ASTPtr & node, Expected & expected\n         }\n     };\n \n-    while (!pos->isEnd() && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n+    while (isValidKQLPos(pos) && pos->type != TokenType::PipeMark && pos->type != TokenType::Semicolon)\n     {\n         if (pos->type == TokenType::OpeningRoundBracket)\n             ++bracket_count;\ndiff --git a/src/Parsers/Kusto/Utilities.cpp b/src/Parsers/Kusto/Utilities.cpp\nindex 72c1ee86628d..c43c97843287 100644\n--- a/src/Parsers/Kusto/Utilities.cpp\n+++ b/src/Parsers/Kusto/Utilities.cpp\n@@ -71,4 +71,12 @@ ASTPtr wrapInSelectWithUnion(const ASTPtr & select_query)\n \n     return select_with_union_query;\n }\n+\n+bool isValidKQLPos(IParser::Pos & pos)\n+{\n+    return (pos.isValid() ||\n+            pos->type == TokenType::ErrorSingleExclamationMark || // allow kql negative operators\n+            pos->type == TokenType::ErrorWrongNumber || // allow kql timespan data type with decimal like 2.6h\n+            std::string_view(pos->begin, pos->end) == \"~\");  // allow kql Case-Sensitive operators\n+}\n }\ndiff --git a/src/Parsers/Kusto/Utilities.h b/src/Parsers/Kusto/Utilities.h\nindex f19fad72287f..ae84a13a100d 100644\n--- a/src/Parsers/Kusto/Utilities.h\n+++ b/src/Parsers/Kusto/Utilities.h\n@@ -10,4 +10,5 @@ String extractTokenWithoutQuotes(IParser::Pos & pos);\n void setSelectAll(ASTSelectQuery & select_query);\n String wildcardToRegex(const String & wildcard);\n ASTPtr wrapInSelectWithUnion(const ASTPtr & select_query);\n+bool isValidKQLPos(IParser::Pos & pos);\n }\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02366_kql_create_table.reference b/tests/queries/0_stateless/02366_kql_create_table.reference\nnew file mode 100644\nindex 000000000000..35136b5ff425\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_create_table.reference\n@@ -0,0 +1,4 @@\n+-- test create table --\n+Theodore\n+Diaz\n+Theodore\tDiaz\t28\ndiff --git a/tests/queries/0_stateless/02366_kql_create_table.sql b/tests/queries/0_stateless/02366_kql_create_table.sql\nnew file mode 100644\nindex 000000000000..b266679b06aa\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_create_table.sql\n@@ -0,0 +1,29 @@\n+DROP TABLE IF EXISTS Customers;\n+CREATE TABLE Customers\n+(    \n+    FirstName Nullable(String),\n+    LastName String, \n+    Occupation String,\n+    Education String,\n+    Age Nullable(UInt8)\n+) ENGINE = Memory;\n+\n+INSERT INTO Customers VALUES  ('Theodore','Diaz','Skilled Manual','Bachelors',28),('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);\n+Select '-- test create table --' ;\n+Select * from kql(Customers|project FirstName) limit 1;;\n+DROP TABLE IF EXISTS kql_table1;\n+CREATE TABLE kql_table1 ENGINE = Memory AS select *, now() as new_column From kql(Customers | project LastName | filter LastName=='Diaz');\n+select LastName from kql_table1 limit 1;\n+DROP TABLE IF EXISTS kql_table2;\n+CREATE TABLE kql_table2\n+(    \n+    FirstName Nullable(String),\n+    LastName String, \n+    Age Nullable(UInt8)\n+) ENGINE = Memory;\n+INSERT INTO kql_table2 select * from kql(Customers|project FirstName,LastName,Age | filter FirstName=='Theodore');\n+select * from kql_table2 limit 1;\n+-- select * from kql(Customers | where FirstName !in (\"test\", \"test2\"));\n+DROP TABLE IF EXISTS Customers;\n+DROP TABLE IF EXISTS kql_table1;\n+DROP TABLE IF EXISTS kql_table2;\n\\ No newline at end of file\ndiff --git a/tests/queries/0_stateless/02366_kql_datatype.reference b/tests/queries/0_stateless/02366_kql_datatype.reference\nnew file mode 100644\nindex 000000000000..fe666f3734c7\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_datatype.reference\n@@ -0,0 +1,105 @@\n+-- bool\n+true\n+\\N\n+-- int\n+123\n+\\N\n+-- long\n+123\n+255\n+-1\n+\\N\n+456\n+-- real\n+0.01\n+\\N\n+nan\n+inf\n+-inf\n+-- datetime\n+2015-12-31 23:59:59.900000000\n+2015-12-31 00:00:00.000000000\n+2014-05-25 08:20:03.123456000\n+2014-11-08 15:55:55.000000000\n+2014-11-08 15:55:00.000000000\n+2014-11-08 00:00:00.000000000\n+\\N\n+2014-05-25 08:20:03.123456000\n+2014-11-08 15:55:55.123456000\n+-- time\n+1216984.12345\n+45055.123\n+86400\n+-86400\n+6.000000000000001e-9\n+6e-7\n+172800\n+259200\n+-- guid\n+\\N\n+-- timespan (time)\n+172800\n+1800\n+10\n+0.1\n+0.00001\n+1e-7\n+1120343\n+-- null\n+1\n+\\N\t\\N\t\\N\t\\N\t\\N\n+-- decimal\n+\\N\n+123.345\n+100000\n+-- dynamic\n+\\N\n+1\n+86400\n+[1,2,3]\n+[[1],[2],[3]]\n+['a','b','c']\n+-- cast functions\n+true\n+1\n+-- tobool(\"false\")\n+false\n+1\n+-- tobool(1)\n+true\n+1\n+-- tobool(123)\n+true\n+1\n+-- tobool(\"abc\")\n+\\N\n+\\N\n+-- todouble()\n+123.4\n+\\N\n+-- toreal()\n+123.4\n+\\N\n+-- toint()\n+1\n+\\N\n+-- tostring()\n+123\n+1\n+-- todatetime()\n+1\n+\\N\n+-- make_timespan()\n+01:12:00\t01:12:30\t1.12:30:55\n+-- totimespan()\n+1e-7\n+60\n+\\N\n+1120343\n+-- tolong()\n+123\n+\\N\n+-- todecimal()\n+123.345\n+\\N\n+\\N\ndiff --git a/tests/queries/0_stateless/02366_kql_datatype.sql b/tests/queries/0_stateless/02366_kql_datatype.sql\nnew file mode 100644\nindex 000000000000..ecd295042984\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_datatype.sql\n@@ -0,0 +1,117 @@\n+set dialect = 'kusto';\n+\n+print '-- bool'\n+print bool(true);\n+print bool(true);\n+print bool(null);\n+print '-- int';\n+print int(123);\n+print int(null);\n+print int('4'); -- { clientError BAD_ARGUMENTS }\n+print '-- long';\n+print long(123);\n+print long(0xff);\n+print long(-1);\n+print long(null);\n+print 456;\n+print '-- real';\n+print real(0.01);\n+print real(null);\n+print real(nan);\n+print real(+inf);\n+print real(-inf);\n+print double('4.2'); -- { clientError BAD_ARGUMENTS }\n+print '-- datetime';\n+print datetime(2015-12-31 23:59:59.9);\n+print datetime(2015-12-31);\n+print datetime('2014-05-25T08:20:03.123456');\n+print datetime('2014-11-08 15:55:55');\n+print datetime('2014-11-08 15:55');\n+print datetime('2014-11-08');\n+print datetime(null);\n+print datetime('2014-05-25T08:20:03.123456Z');\n+print datetime('2014-11-08 15:55:55.123456Z');\n+print '-- time';\n+print time('14.02:03:04.12345');\n+print time('12:30:55.123');\n+print time(1d);\n+print time(-1d);\n+print time(6nanoseconds);\n+print time(6tick);\n+print time(2);\n+print time(2) + 1d;\n+print '-- guid'\n+print guid(74be27de-1e4e-49d9-b579-fe0b331d3642);\n+print guid(null);\n+print '-- timespan (time)';\n+print timespan(2d); --              2 days\n+--print timespan(1.5h); -- \t        1.5 hour\n+print timespan(30m); -- \t        30 minutes\n+print timespan(10s); -- \t        10 seconds\n+--print timespan(0.1s); -- \t        0.1 second\n+print timespan(100ms); -- \t        100 millisecond\n+print timespan(10microsecond); -- \t10 microseconds\n+print timespan(1tick); --           100 nanoseconds\n+--print timespan(1.5h) / timespan(30m);\n+print timespan('12.23:12:23') / timespan(1s);\n+print '-- null';\n+print isnull(null);\n+print bool(null), int(null), long(null), real(null), double(null);\n+print '-- decimal';\n+print decimal(null);\n+print decimal(123.345);\n+print decimal(1e5);\n+print '-- dynamic'; -- no support for mixed types and bags for now\n+print dynamic(null);\n+print dynamic(1);\n+print dynamic(timespan(1d));\n+print dynamic([1,2,3]);\n+print dynamic([[1], [2], [3]]);\n+print dynamic(['a', \"b\", 'c']);\n+print '-- cast functions'\n+print '--tobool(\"true\")'; -- == true\n+print tobool('true'); -- == true\n+print tobool('true') == toboolean('true'); -- == true\n+print '-- tobool(\"false\")'; -- == false\n+print tobool('false'); -- == false\n+print tobool('false') == toboolean('false'); -- == false\n+print '-- tobool(1)'; -- == true\n+print tobool(1); -- == true\n+print tobool(1) == toboolean(1); -- == true\n+print '-- tobool(123)'; -- == true\n+print tobool(123); -- == true\n+print tobool(123) == toboolean(123); -- == true\n+print '-- tobool(\"abc\")'; -- == null\n+print tobool('abc'); -- == null\n+print tobool('abc') == toboolean('abc'); -- == null\n+print '-- todouble()';\n+print todouble('123.4');\n+print todouble('abc') == null;\n+print '-- toreal()';\n+print toreal(\"123.4\");\n+print toreal('abc') == null;\n+print '-- toint()';\n+print toint(\"123\") == int(123);\n+print toint('abc');\n+print '-- tostring()';\n+print tostring(123);\n+print tostring(null) == '';\n+print '-- todatetime()';\n+print todatetime(\"2015-12-24\") == datetime(2015-12-24);\n+print todatetime('abc') == null;\n+print '-- make_timespan()';\n+print v1=make_timespan(1,12), v2=make_timespan(1,12,30), v3=make_timespan(1,12,30,55.123);\n+print '-- totimespan()';\n+print totimespan(1tick);\n+print totimespan('0.00:01:00');\n+print totimespan('abc');\n+print totimespan('12.23:12:23') / totimespan(1s);\n+-- print totimespan(strcat('12.', '23', ':12:', '23')) / timespan(1s); -> 1120343\n+print '-- tolong()';\n+print tolong('123');\n+print tolong('abc');\n+print '-- todecimal()';\n+print todecimal(123.345);\n+print todecimal(null);\n+print todecimal('abc');\n+-- print todecimal(4 * 2 + 3); -> 11\ndiff --git a/tests/queries/0_stateless/02366_kql_distinct.reference b/tests/queries/0_stateless/02366_kql_distinct.reference\nnew file mode 100644\nindex 000000000000..2100f44f18c9\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_distinct.reference\n@@ -0,0 +1,27 @@\n+--  distinct * --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\\N\twhy\tProfessional\tPartial College\t38\n+--  distinct one column --\n+Skilled Manual\n+Management abcd defg\n+Professional\n+--  distinct two column --\n+Skilled Manual\tBachelors\n+Management abcd defg\tBachelors\n+Skilled Manual\tGraduate Degree\n+Professional\tGraduate Degree\n+Professional\tPartial College\n+--  distinct with where --\n+Skilled Manual\tBachelors\n+Management abcd defg\tBachelors\n+Skilled Manual\tGraduate Degree\n+Professional\tGraduate Degree\n+Professional\tPartial College\n+--  distinct with where, order --\n+Skilled Manual\tBachelors\n+Skilled Manual\tGraduate Degree\n+Professional\tGraduate Degree\ndiff --git a/tests/queries/0_stateless/02366_kql_distinct.sql b/tests/queries/0_stateless/02366_kql_distinct.sql\nnew file mode 100644\nindex 000000000000..3c997eb4865b\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_distinct.sql\n@@ -0,0 +1,28 @@\n+DROP TABLE IF EXISTS Customers;\n+CREATE TABLE Customers\n+(    \n+    FirstName Nullable(String),\n+    LastName String, \n+    Occupation String,\n+    Education String,\n+    Age Nullable(UInt8)\n+) ENGINE = Memory;\n+\n+INSERT INTO Customers VALUES ('Theodore','Diaz','Skilled Manual','Bachelors',28), ('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);\n+\n+set dialect = 'kusto';\n+\n+print '--  distinct * --';\n+Customers | distinct *;\n+\n+print '--  distinct one column --';\n+Customers | distinct Occupation;\n+\n+print '--  distinct two column --';\n+Customers | distinct Occupation, Education;\n+\n+print '--  distinct with where --';\n+Customers where Age <30 | distinct Occupation, Education;\n+\n+print '--  distinct with where, order --';\n+Customers |where Age <30 | order by Age| distinct Occupation, Education;\ndiff --git a/tests/queries/0_stateless/02366_kql_extend.reference b/tests/queries/0_stateless/02366_kql_extend.reference\nnew file mode 100644\nindex 000000000000..2936c9ea19c1\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_extend.reference\n@@ -0,0 +1,32 @@\n+-- extend #1 --\n+Aldi\tApple\t4\t2016-09-10\t400\n+Costco\tApple\t2\t2016-09-11\t200\n+-- extend #2 --\n+Apple\t200\n+Apple\t400\n+-- extend #3 --\n+Apple cost 480 on average based on 5 samples.\n+Snargaluff cost 28080 on average based on 5 samples.\n+-- extend #4 --\n+1\n+-- extend #5 --\n+Aldi\tApple\t4\t2016-09-10\tApple was purchased from Aldi for $4 on 2016-09-10\t400\n+Costco\tApple\t2\t2016-09-11\tApple was purchased from Costco for $2 on 2016-09-11\t200\n+-- extend #6 --\n+Aldi\tApple\t2016-09-10\t400\n+Costco\tApple\t2016-09-11\t200\n+Aldi\tApple\t2016-09-10\t600\n+Costco\tSnargaluff\t2016-09-12\t10000\n+Aldi\tApple\t2016-09-12\t700\n+Aldi\tSnargaluff\t2016-09-11\t40000\n+Costco\tSnargaluff\t2016-09-12\t10400\n+Aldi\tApple\t2016-09-12\t500\n+Aldi\tSnargaluff\t2016-09-11\t60000\n+Costco\tSnargaluff\t2016-09-10\t20000\n+-- extend #7 --\n+5\n+-- extend #8 --\n+-- extend #9 --\n+-- extend #10 --\n+-- extend #11 --\n+5\t[2,1]\ndiff --git a/tests/queries/0_stateless/02366_kql_extend.sql b/tests/queries/0_stateless/02366_kql_extend.sql\nnew file mode 100644\nindex 000000000000..51fb16c1ad81\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_extend.sql\n@@ -0,0 +1,58 @@\n+-- datatable(Supplier:string, Fruit:string, Price: real, Purchase:datetime)\n+-- [\n+--     'Aldi','Apple',4,'2016-09-10',\n+--     'Costco','Apple',2,'2016-09-11',\n+--     'Aldi','Apple',6,'2016-09-10',\n+--     'Costco','Snargaluff',100,'2016-09-12',\n+--     'Aldi','Apple',7,'2016-09-12',\n+--     'Aldi','Snargaluff',400,'2016-09-11',\n+--     'Costco','Snargaluff',104,'2016-09-12',\n+--     'Aldi','Apple',5,'2016-09-12',\n+--     'Aldi','Snargaluff',600,'2016-09-11',\n+--     'Costco','Snargaluff',200,'2016-09-10',\n+-- ]\n+\n+DROP TABLE IF EXISTS Ledger;\n+CREATE TABLE Ledger\n+(    \n+   Supplier Nullable(String),\n+   Fruit String ,\n+   Price Float64,\n+   Purchase Date \n+) ENGINE = Memory;\n+INSERT INTO Ledger VALUES  ('Aldi','Apple',4,'2016-09-10'), ('Costco','Apple',2,'2016-09-11'), ('Aldi','Apple',6,'2016-09-10'), ('Costco','Snargaluff',100,'2016-09-12'), ('Aldi','Apple',7,'2016-09-12'), ('Aldi','Snargaluff',400,'2016-09-11'),('Costco','Snargaluff',104,'2016-09-12'),('Aldi','Apple',5,'2016-09-12'),('Aldi','Snargaluff',600,'2016-09-11'),('Costco','Snargaluff',200,'2016-09-10');\n+\n+set dialect = 'kusto';\n+\n+print '-- extend #1 --';\n+Ledger | extend PriceInCents = 100 * Price | take 2;\n+\n+print '-- extend #2 --';\n+Ledger | extend PriceInCents = 100 * Price | sort by PriceInCents asc | project Fruit, PriceInCents | take 2;\n+\n+print '-- extend #3 --';\n+Ledger | extend PriceInCents = 100 * Price | sort by PriceInCents asc | project Fruit, PriceInCents | summarize AveragePrice = avg(PriceInCents), Purchases = count() by Fruit | extend Sentence = strcat(Fruit, ' cost ', tostring(AveragePrice), ' on average based on ', tostring(Purchases), ' samples.') | project Sentence | sort by Sentence asc;\n+\n+print '-- extend #4 --';\n+Ledger | extend a = Price | extend b = a | extend c = a, d = b + 500 | extend Pass = bool(b == a and c == a and d == b + 500) | summarize binary_all_and(Pass);\n+\n+print '-- extend #5 --';\n+Ledger | take 2 | extend strcat(Fruit, ' was purchased from ', Supplier, ' for $', tostring(Price), ' on ', tostring(Purchase)) | extend PriceInCents = 100 * Price;\n+\n+print '-- extend #6 --';\n+Ledger | extend Price = 100 * Price;\n+\n+print '-- extend #7 --';\n+print a = 4 | extend a = 5;\n+\n+print '-- extend #8 --';\n+-- print x = 5 | extend array_sort_desc(range(0, x), range(1, x + 1))\n+\n+print '-- extend #9 --';\n+print x = 19 | extend = 4 + ; -- { clientError SYNTAX_ERROR }\n+\n+print '-- extend #10 --';\n+Ledger | extend PriceInCents = * Price | sort by PriceInCents asc | project Fruit, PriceInCents | summarize AveragePrice = avg(PriceInCents), Purchases = count() by Fruit | extend Sentence = strcat(Fruit, ' cost ', tostring(AveragePrice), ' on average based on ', tostring(Purchases), ' samples.') | project Sentence; -- { clientError SYNTAX_ERROR }\n+\n+print '-- extend #11 --'; -- should ideally return this in the future: 5\t[2,1] because of the alias ex\n+print x = 5 | extend ex = array_sort_desc(dynamic([1, 2]), dynamic([3, 4]));\ndiff --git a/tests/queries/0_stateless/02366_kql_func_binary.reference b/tests/queries/0_stateless/02366_kql_func_binary.reference\nnew file mode 100644\nindex 000000000000..6276cd6d8675\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_binary.reference\n@@ -0,0 +1,7 @@\n+ -- binary functions\n+4\t7\n+1\n+1\n+1\n+7\t3\n+1\ndiff --git a/tests/queries/0_stateless/02366_kql_func_binary.sql b/tests/queries/0_stateless/02366_kql_func_binary.sql\nnew file mode 100644\nindex 000000000000..824022b564ce\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_binary.sql\n@@ -0,0 +1,8 @@\n+set dialect='kusto';\n+print ' -- binary functions';\n+print binary_and(4,7), binary_or(4,7);\n+print binary_shift_left(1, 1) == binary_shift_left(1, 65);\n+print binary_shift_right(2, 1) == binary_shift_right(2, 65);\n+print binary_shift_right(binary_shift_left(1, 65), 65) == 1;\n+print binary_xor(2, 5), bitset_count_ones(42);\n+print bitset_count_ones(binary_shift_left(binary_and(4,7), 1));\ndiff --git a/tests/queries/0_stateless/02366_kql_func_datetime.reference b/tests/queries/0_stateless/02366_kql_func_datetime.reference\nnew file mode 100644\nindex 000000000000..40d8d7e19ac9\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_datetime.reference\n@@ -0,0 +1,76 @@\n+-- dayofmonth()\n+31\n+-- dayofweek()\n+4.00:00:00\n+-- dayofyear()\n+365\n+-- getmonth()\n+10\n+-- getyear()\n+2015\n+-- hoursofday()\n+23\n+-- startofday()\n+2017-01-01 00:00:00.000000000\n+2016-12-31 00:00:00.000000000\n+2017-01-02 00:00:00.000000000\n+-- endofday()\n+2017-01-01 23:59:59.999999000\n+2016-12-31 23:59:59.999999000\n+2017-01-02 23:59:59.999999000\n+-- endofmonth()\n+2017-01-31 23:59:59.999999000\n+2016-12-31 23:59:59.999999000\n+2017-02-28 23:59:59.999999000\n+2022-09-30 23:59:59.999999000\n+-- startofweek()\n+2017-01-01 00:00:00.000000000\n+2016-12-25 00:00:00.000000000\n+2017-01-08 00:00:00.000000000\n+-- endofweek()\n+2017-01-07 23:59:59.999999000\n+2016-12-31 23:59:59.999999000\n+2017-01-14 23:59:59.999999000\n+-- startofyear()\n+2017-01-01 00:00:00.000000000\n+2016-01-01 00:00:00.000000000\n+2018-01-01 00:00:00.000000000\n+-- endofyear()\n+2017-12-31 23:59:59.999999000\n+2016-12-31 23:59:59.999999000\n+2018-12-31 23:59:59.999999000\n+-- unixtime_seconds_todatetime()\n+2019-01-01 00:00:00.000000000\n+1970-01-02 00:00:00.000000000\n+1969-12-31 00:00:00.000000000\n+-- unixtime_microseconds_todatetime\n+2019-01-01 00:00:00.000000\n+-- unixtime_milliseconds_todatetime()\n+2019-01-01 00:00:00.000\n+-- unixtime_nanoseconds_todatetime()\n+2019-01-01 00:00:00.000000000\n+-- weekofyear()\n+52\n+-- monthofyear()\n+12\n+-- weekofyear()\n+52\n+-- now()\n+1\n+-- make_datetime()\n+1\n+2017-10-01 12:10:00.0000000\n+2017-10-01 12:11:00.0000000\n+-- format_datetime\n+15-12-14 02:03:04.1234500\n+17-01-29 [09:00:05]\t2017-01-29 [09:00:05]\t17-01-29 [09:00:05 AM]\n+-- format_timespan()\n+02:03:04.1234500\n+29.09:00:05:12\n+-- ago()\n+-- datetime_diff()\n+17\t2\t13\t4\t29\t2\t5\t10\n+-- datetime_part()\n+2017\t4\t10\t44\t30\t303\t01\t02\t03\n+-- datetime_add()\n+2018-01-01 00:00:00.0000000\t2017-04-01 00:00:00.0000000\t2017-02-01 00:00:00.0000000\t2017-01-08 00:00:00.0000000\t2017-01-02 00:00:00.0000000\t2017-01-01 01:00:00.0000000\t2017-01-01 00:01:00.0000000\t2017-01-01 00:00:01.0000000\ndiff --git a/tests/queries/0_stateless/02366_kql_func_datetime.sql b/tests/queries/0_stateless/02366_kql_func_datetime.sql\nnew file mode 100644\nindex 000000000000..b1fba4166a9e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_datetime.sql\n@@ -0,0 +1,86 @@\n+set dialect = 'kusto';\n+\n+print '-- dayofmonth()';\n+print dayofmonth(datetime(2015-12-31));\n+print '-- dayofweek()';\n+print dayofweek(datetime(2015-12-31));\n+print '-- dayofyear()';\n+print dayofyear(datetime(2015-12-31));\n+print '-- getmonth()';\n+print getmonth(datetime(2015-10-12));\n+print '-- getyear()';\n+print getyear(datetime(2015-10-12));\n+print '-- hoursofday()';\n+print hourofday(datetime(2015-12-31 23:59:59.9));\n+print '-- startofday()';\n+print startofday(datetime(2017-01-01 10:10:17));\n+print startofday(datetime(2017-01-01 10:10:17), -1);\n+print startofday(datetime(2017-01-01 10:10:17), 1);\n+print '-- endofday()';\n+print endofday(datetime(2017-01-01 10:10:17));\n+print endofday(datetime(2017-01-01 10:10:17), -1);\n+print endofday(datetime(2017-01-01 10:10:17), 1);\n+print '-- endofmonth()';\n+print endofmonth(datetime(2017-01-01 10:10:17));\n+print endofmonth(datetime(2017-01-01 10:10:17), -1);\n+print endofmonth(datetime(2017-01-01 10:10:17), 1);\n+print endofmonth(datetime(2022-09-23));\n+print '-- startofweek()';\n+print startofweek(datetime(2017-01-01 10:10:17));\n+print startofweek(datetime(2017-01-01 10:10:17), -1);\n+print startofweek(datetime(2017-01-01 10:10:17), 1);\n+print '-- endofweek()';\n+print endofweek(datetime(2017-01-01 10:10:17));\n+print endofweek(datetime(2017-01-01 10:10:17), -1);\n+print endofweek(datetime(2017-01-01 10:10:17), 1);\n+print '-- startofyear()';\n+print startofyear(datetime(2017-01-01 10:10:17));\n+print startofyear(datetime(2017-01-01 10:10:17), -1);\n+print startofyear(datetime(2017-01-01 10:10:17), 1);\n+print '-- endofyear()';\n+print endofyear(datetime(2017-01-01 10:10:17));\n+print endofyear(datetime(2017-01-01 10:10:17), -1);\n+print endofyear(datetime(2017-01-01 10:10:17), 1);\n+print '-- unixtime_seconds_todatetime()';\n+print unixtime_seconds_todatetime(1546300800);\n+print unixtime_seconds_todatetime(1d);\n+print unixtime_seconds_todatetime(-1d);\n+print '-- unixtime_microseconds_todatetime';\n+print unixtime_microseconds_todatetime(1546300800000000);\n+print '-- unixtime_milliseconds_todatetime()';\n+print unixtime_milliseconds_todatetime(1546300800000);\n+print '-- unixtime_nanoseconds_todatetime()';\n+print unixtime_nanoseconds_todatetime(1546300800000000000);\n+print '-- weekofyear()';\n+print week_of_year(datetime(2000-01-01));\n+print '-- monthofyear()';\n+print monthofyear(datetime(2015-12-31));\n+print '-- weekofyear()';\n+print week_of_year(datetime(2000-01-01));\n+print '-- now()';\n+print getyear(now(-2d))>1900;\n+print '-- make_datetime()';\n+print make_datetime(2017,10,01,12,10) == datetime(2017-10-01 12:10:00);\n+print year_month_day_hour_minute = make_datetime(2017,10,01,12,10);\n+print year_month_day_hour_minute_second = make_datetime(2017,10,01,12,11,0.1234567);\n+print '-- format_datetime';\n+print format_datetime(datetime(2015-12-14 02:03:04.12345), 'y-M-d h:m:s.fffffff');\n+print v1=format_datetime(datetime(2017-01-29 09:00:05),'yy-MM-dd [HH:mm:ss]'), v2=format_datetime(datetime(2017-01-29 09:00:05), 'yyyy-M-dd [H:mm:ss]'), v3=format_datetime(datetime(2017-01-29 09:00:05), 'yy-MM-dd [hh:mm:ss tt]');\n+print '-- format_timespan()';\n+print format_timespan(time('14.02:03:04.12345'), 'h:m:s.fffffff');\n+print v1=format_timespan(time('29.09:00:05.12345'), 'dd.hh:mm:ss:FF');\n+-- print v2=format_timespan(time('29.09:00:05.12345'), 'ddd.h:mm:ss [fffffff]'); == '029.9:00:05 [1234500]'\n+print '-- ago()';\n+-- print ago(1d) - now();\n+print '-- datetime_diff()';\n+print year = datetime_diff('year',datetime(2017-01-01),datetime(2000-12-31)), quarter = datetime_diff('quarter',datetime(2017-07-01),datetime(2017-03-30)), month = datetime_diff('month',datetime(2017-01-01),datetime(2015-12-30)), week = datetime_diff('week',datetime(2017-10-29 00:00),datetime(2017-09-30 23:59)), day = datetime_diff('day',datetime(2017-10-29 00:00),datetime(2017-09-30 23:59)), hour = datetime_diff('hour',datetime(2017-10-31 01:00),datetime(2017-10-30 23:59)), minute = datetime_diff('minute',datetime(2017-10-30 23:05:01),datetime(2017-10-30 23:00:59)), second = datetime_diff('second',datetime(2017-10-30 23:00:10.100),datetime(2017-10-30 23:00:00.900));\n+-- millisecond = datetime_diff('millisecond',datetime(2017-10-30 23:00:00.200100),datetime(2017-10-30 23:00:00.100900)),\n+-- microsecond = datetime_diff('microsecond',datetime(2017-10-30 23:00:00.1009001),datetime(2017-10-30 23:00:00.1008009)),\n+-- nanosecond = datetime_diff('nanosecond',datetime(2017-10-30 23:00:00.0000000),datetime(2017-10-30 23:00:00.0000007))\n+print '-- datetime_part()';\n+print year = datetime_part(\"year\", datetime(2017-10-30 01:02:03.7654321)),quarter = datetime_part(\"quarter\", datetime(2017-10-30 01:02:03.7654321)),month = datetime_part(\"month\", datetime(2017-10-30 01:02:03.7654321)),weekOfYear = datetime_part(\"week_of_year\", datetime(2017-10-30 01:02:03.7654321)),day = datetime_part(\"day\", datetime(2017-10-30 01:02:03.7654321)),dayOfYear = datetime_part(\"dayOfYear\", datetime(2017-10-30 01:02:03.7654321)),hour = datetime_part(\"hour\", datetime(2017-10-30 01:02:03.7654321)),minute = datetime_part(\"minute\", datetime(2017-10-30 01:02:03.7654321)),second = datetime_part(\"second\", datetime(2017-10-30 01:02:03.7654321));\n+-- millisecond = datetime_part(\"millisecond\", dt),\n+-- microsecond = datetime_part(\"microsecond\", dt),\n+-- nanosecond = datetime_part(\"nanosecond\", dt)\n+print '-- datetime_add()';\n+print  year = datetime_add('year',1,make_datetime(2017,1,1)),quarter = datetime_add('quarter',1,make_datetime(2017,1,1)),month = datetime_add('month',1,make_datetime(2017,1,1)),week = datetime_add('week',1,make_datetime(2017,1,1)),day = datetime_add('day',1,make_datetime(2017,1,1)),hour = datetime_add('hour',1,make_datetime(2017,1,1)),minute = datetime_add('minute',1,make_datetime(2017,1,1)),second = datetime_add('second',1,make_datetime(2017,1,1));\n\\ No newline at end of file\ndiff --git a/tests/queries/0_stateless/02366_kql_func_dynamic.reference b/tests/queries/0_stateless/02366_kql_func_dynamic.reference\nnew file mode 100644\nindex 000000000000..564f1eebc4bb\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_dynamic.reference\n@@ -0,0 +1,152 @@\n+-- constant index value\n+1\tc\t['A',NULL,'C']\n+-- array_length()\n+1\n+1\n+-- array_sum()\n+1\n+1\n+-- array_index_of()\n+3\n+1\n+-- array_iif()\n+[1,5,3]\n+[1,5,3]\n+[1,5,NULL]\n+[NULL,NULL,NULL]\n+-- array_concat()\n+[1,2,3,4,5,6]\n+-- array_reverse()\n+[]\n+[1]\n+[4,3,2,1]\n+['example','an','is','this']\n+-- array_rotate_left()\n+[]\n+[]\n+[]\n+[3,4,5,1,2]\n+[1,2,3,4,5]\n+[3,4,5,1,2]\n+[4,5,1,2,3]\n+[1,2,3,4,5]\n+[4,5,1,2,3]\n+-- array_rotate_right()\n+[]\n+[]\n+[]\n+[4,5,1,2,3]\n+[1,2,3,4,5]\n+[4,5,1,2,3]\n+[3,4,5,1,2]\n+[1,2,3,4,5]\n+[3,4,5,1,2]\n+-- array_shift_left()\n+[]\n+[]\n+[]\n+[3,4,5,NULL,NULL]\n+[NULL,NULL,1,2,3]\n+[3,4,5,-1,-1]\n+['c','','']\n+-- array_shift_right()\n+[]\n+[]\n+[]\n+[3,4,5,NULL,NULL]\n+[NULL,NULL,1,2,3]\n+[3,4,5,-1,-1]\n+['c','','']\n+-- array_slice()\n+[3,4]\n+-- array_split()\n+[[1],[2,3],[4,5]]\n+[[1,2],[3,4,5]]\n+[[1],[2,3],[4,5]]\n+[[1,2,3,4],[],[4,5]]\n+-- array_sort_asc()\n+(['a','c','c','d',NULL])\n+([1,2,3,4])\n+['a','b','c']\n+(['p','q','r'],['hello','clickhouse','world'])\n+([NULL,'a','c','c','d'])\n+([NULL,'a','c','c','d'])\n+([NULL,NULL,NULL])\n+[1,2,3,NULL,NULL]\n+['a','e','b','c','d']\n+(['George','John','Paul','Ringo'])\n+(['blue','green','yellow',NULL,NULL])\n+([NULL,NULL,'blue','green','yellow'])\n+-- array_sort_desc()\n+(['d','c','c','a',NULL])\n+([4,3,2,1])\n+['c','b','a']\n+(['r','q','p'],['world','clickhouse','hello'])\n+([NULL,'d','c','c','a'])\n+([NULL,'d','c','c','a'])\n+([NULL,NULL,NULL])\n+[3,2,1,NULL,NULL]\n+['d','c','b','e','a']\n+(['Ringo','Paul','John','George'])\n+(['yellow','green','blue',NULL,NULL])\n+([NULL,NULL,'yellow','green','blue'])\n+-- jaccard_index()\n+0.75\n+0\n+0\n+nan\n+0\n+0.75\n+0.25\n+-- pack_array()\n+1\t2\t4\t[1,2,4]\n+['ab','0.0.0.42','4.2']\n+-- repeat()\n+[]\n+[1,1,1]\n+['asd','asd','asd']\n+[86400,86400,86400]\n+[true,true,true]\n+[NULL]\n+[NULL]\n+-- set_difference()\n+[]\n+[]\n+[]\n+[]\n+[4,5,6]\n+[4]\n+[1,3]\n+[1,2,3]\n+['d','s']\n+['Chewbacca','Han Solo']\n+-- set_has_element()\n+0\n+1\n+0\n+1\n+0\n+-- set_intersect()\n+[]\n+[1,2,3]\n+[1,2,3]\n+[]\n+[5]\n+[]\n+['a']\n+['Darth Vader']\n+-- set_union()\n+[]\n+[1,2,3]\n+[1,2,3,4,5,6]\n+[1,2,3,4]\n+[1,2,3,4,5]\n+[1,2,3]\n+['a','d','f','s']\n+['Chewbacca','Darth Sidious','Darth Vader','Han Solo']\n+-- zip()\n+[]\n+[[1,2],[3,4],[5,6]]\n+[['Darth','Vader','has a suit'],['Master','Yoda','doesn\\'t have a suit']]\n+[[1,10],[2,20],[3,NULL]]\n+[[NULL,1],[NULL,2],[NULL,3]]\ndiff --git a/tests/queries/0_stateless/02366_kql_func_dynamic.sql b/tests/queries/0_stateless/02366_kql_func_dynamic.sql\nnew file mode 100644\nindex 000000000000..b0956f032d0c\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_dynamic.sql\n@@ -0,0 +1,161 @@\n+DROP TABLE IF EXISTS array_test;\n+CREATE TABLE array_test (floats Array(Float64),\n+                         strings Array(String),\n+                         nullable_strings Array(Nullable(String))\n+                         ) ENGINE=Memory;\n+INSERT INTO array_test VALUES([1.0, 2.5], ['a', 'c'], ['A', NULL, 'C']);\n+set dialect = 'kusto';\n+print '-- constant index value';\n+array_test | project floats[0], strings[1], nullable_strings;\n+print '-- array_length()';\n+print array_length(dynamic(['John', 'Denver', 'Bob', 'Marley'])) == 4;\n+print array_length(dynamic([1, 2, 3])) == 3;\n+print '-- array_sum()';\n+print array_sum(dynamic([2, 5, 3])) == 10;\n+print array_sum(dynamic([2.5, 5.5, 3])) == 11;\n+print '-- array_index_of()';\n+print array_index_of(dynamic(['John', 'Denver', 'Bob', 'Marley']), 'Marley');\n+print array_index_of(dynamic([1, 2, 3]), 2);\n+print '-- array_iif()';\n+print array_iif(dynamic([true,false,true]), dynamic([1,2,3]), dynamic([4,5,6]));\n+print array_iif(dynamic([1,0,1]), dynamic([1,2,3]), dynamic([4,5,6]));\n+print array_iif(dynamic([true,false,true]), dynamic([1,2]), dynamic([4,5,6]));\n+print array_iif(dynamic(['a','b','c']), dynamic([1,2,3]), dynamic([4,5,6]));\n+print '-- array_concat()';\n+print array_concat(dynamic([1,2,3]),dynamic([4,5,6]));\n+print '-- array_reverse()';\n+print array_reverse(dynamic([]));\n+print array_reverse(dynamic([1]));\n+print array_reverse(dynamic([1,2,3,4]));\n+print array_reverse(dynamic([\"this\", \"is\", \"an\", \"example\"]));\n+print '-- array_rotate_left()';\n+print array_rotate_left(dynamic([]), 0);\n+print array_rotate_left(dynamic([]), 500);\n+print array_rotate_left(dynamic([]), -500);\n+print array_rotate_left(dynamic([1,2,3,4,5]), 2);\n+print array_rotate_left(dynamic([1,2,3,4,5]), 5);\n+print array_rotate_left(dynamic([1,2,3,4,5]), 7);\n+print array_rotate_left(dynamic([1,2,3,4,5]), -2);\n+print array_rotate_left(dynamic([1,2,3,4,5]), -5);\n+print array_rotate_left(dynamic([1,2,3,4,5]), -7);\n+print '-- array_rotate_right()';\n+print array_rotate_right(dynamic([]), 0);\n+print array_rotate_right(dynamic([]), 500);\n+print array_rotate_right(dynamic([]), -500);\n+print array_rotate_right(dynamic([1,2,3,4,5]), 2);\n+print array_rotate_right(dynamic([1,2,3,4,5]), 5);\n+print array_rotate_right(dynamic([1,2,3,4,5]), 7);\n+print array_rotate_right(dynamic([1,2,3,4,5]), -2);\n+print array_rotate_right(dynamic([1,2,3,4,5]), -5);\n+print array_rotate_right(dynamic([1,2,3,4,5]), -7);\n+print '-- array_shift_left()';\n+print array_shift_left(dynamic([]), 0);\n+print array_shift_left(dynamic([]), 555);\n+print array_shift_left(dynamic([]), -555);\n+print array_shift_left(dynamic([1,2,3,4,5]), 2);\n+print array_shift_left(dynamic([1,2,3,4,5]), -2);\n+print array_shift_left(dynamic([1,2,3,4,5]), 2, -1);\n+print array_shift_left(dynamic(['a', 'b', 'c']), 2);\n+print '-- array_shift_right()';\n+print array_shift_left(dynamic([]), 0);\n+print array_shift_left(dynamic([]), 555);\n+print array_shift_left(dynamic([]), -555);\n+print array_shift_right(dynamic([1,2,3,4,5]), -2);\n+print array_shift_right(dynamic([1,2,3,4,5]), 2);\n+print array_shift_right(dynamic([1,2,3,4,5]), -2, -1);\n+print array_shift_right(dynamic(['a', 'b', 'c']), -2);\n+print '-- array_slice()';\n+--print array_slice(dynamic([1,2,3]), 1, 2); -- will enable whe analyzer dixed\n+print array_slice(dynamic([1,2,3,4,5]), -3, -2);\n+print '-- array_split()';\n+print array_split(dynamic([1,2,3,4,5]), dynamic([1,-2]));\n+print array_split(dynamic([1,2,3,4,5]), 2);\n+print array_split(dynamic([1,2,3,4,5]), dynamic([1,3]));\n+print array_split(dynamic([1,2,3,4,5]), dynamic([-1,-2]));\n+print '-- array_sort_asc()';\n+print array_sort_asc(dynamic([null, 'd', 'a', 'c', 'c']));\n+print array_sort_asc(dynamic([4, 1, 3, 2]));\n+print array_sort_asc(dynamic(['b', 'a', 'c']), dynamic(['q', 'p', 'r']))[0];\n+print array_sort_asc(dynamic(['q', 'p', 'r']), dynamic(['clickhouse','hello', 'world']));\n+print array_sort_asc( dynamic(['d', null, 'a', 'c', 'c']) , false);\n+print array_sort_asc( dynamic(['d', null, 'a', 'c', 'c']) , 1 > 2);\n+print array_sort_asc( dynamic([null, null, null]) , false);\n+print array_sort_asc(dynamic([2, 1, null,3, null]), dynamic([20, 10, 40, 30, 50]), 1 < 2)[0];\n+print array_sort_asc(dynamic(['1','3','4','5','2']),dynamic([\"a\",\"b\",\"c\",\"d\",\"e\"]), dynamic([\"a\",\"b\",\"c\",\"d\",\"e\"]), dynamic([\"a\",\"b\",\"c\",\"d\",\"e\"]))[3];\n+print array_sort_asc(split(\"John,Paul,George,Ringo\", \",\"));\n+print array_sort_asc(dynamic([null,\"blue\",\"yellow\",\"green\",null]));\n+print array_sort_asc(dynamic([null,\"blue\",\"yellow\",\"green\",null]), false);\n+print '-- array_sort_desc()';\n+print array_sort_desc(dynamic([null, 'd', 'a', 'c', 'c']));\n+print array_sort_desc(dynamic([4, 1, 3, 2]));\n+print array_sort_desc(dynamic(['b', 'a', 'c']), dynamic(['q', 'p', 'r']))[0];\n+print array_sort_desc(dynamic(['q', 'p', 'r']), dynamic(['clickhouse','hello', 'world']));\n+print array_sort_desc( dynamic(['d', null, 'a', 'c', 'c']) , false);\n+print array_sort_desc( dynamic(['d', null, 'a', 'c', 'c']) , 1 > 2);\n+print array_sort_desc( dynamic([null, null, null]) , false);\n+print array_sort_desc(dynamic([2, 1, null,3, null]), dynamic([20, 10, 40, 30, 50]), 1 < 2)[0];\n+print array_sort_desc(dynamic(['1','3','4','5','2']),dynamic([\"a\",\"b\",\"c\",\"d\",\"e\"]), dynamic([\"a\",\"b\",\"c\",\"d\",\"e\"]), dynamic([\"a\",\"b\",\"c\",\"d\",\"e\"]))[3];\n+print array_sort_desc(split(\"John,Paul,George,Ringo\", \",\"));\n+print array_sort_desc(dynamic([null,\"blue\",\"yellow\",\"green\",null]));\n+print array_sort_desc(dynamic([null,\"blue\",\"yellow\",\"green\",null]), false);\n+print '-- jaccard_index()';\n+print jaccard_index(dynamic([1, 1, 2, 2, 3, 3]), dynamic([1, 2, 3, 4, 4, 4]));\n+print jaccard_index(dynamic([1, 2, 3]), dynamic([]));\n+print jaccard_index(dynamic([]), dynamic([1, 2, 3, 4]));\n+print jaccard_index(dynamic([]), dynamic([]));\n+print jaccard_index(dynamic([1, 2, 3]), dynamic([4, 5, 6, 7]));\n+print jaccard_index(dynamic(['a', 's', 'd']), dynamic(['f', 'd', 's', 'a']));\n+print jaccard_index(dynamic(['Chewbacca', 'Darth Vader', 'Han Solo']), dynamic(['Darth Sidious', 'Darth Vader']));\n+print '-- pack_array()';\n+print pack_array(); -- { clientError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\n+print x = 1 | extend y = x * 2 | extend z = y * 2 | extend pack_array(x,y,z);\n+print pack_array(strcat('a', 'b'), format_ipv4(42), tostring(4.2));\n+print '-- repeat()';\n+print repeat(1, 0);\n+print repeat(1, 3);\n+print repeat(\"asd\", 3);\n+print repeat(timespan(1d), 3);\n+print repeat(true, 3);\n+print repeat(1, -3);\n+print repeat(6.7,-4);\n+print '-- set_difference()';\n+print set_difference(dynamic([]), dynamic([]));\n+print set_difference(dynamic([]), dynamic([9]));\n+print set_difference(dynamic([]), dynamic([\"asd\"]));\n+print set_difference(dynamic([1, 1, 2, 2, 3, 3]), dynamic([1, 2, 3]));\n+print array_sort_asc(set_difference(dynamic([1, 4, 2, 3, 5, 4, 6]), dynamic([1, 2, 3])))[0];\n+print set_difference(dynamic([4]), dynamic([1, 2, 3]));\n+print array_sort_asc(set_difference(dynamic([1, 2, 3, 4, 5]), dynamic([5]), dynamic([2, 4])))[0];\n+print array_sort_asc(set_difference(dynamic([1, 2, 3]), dynamic([])))[0];\n+print array_sort_asc(set_difference(dynamic(['a', 's', 'd']), dynamic(['a', 'f'])))[0];\n+print array_sort_asc(set_difference(dynamic(['Chewbacca', 'Darth Vader', 'Han Solo']), dynamic(['Darth Sidious', 'Darth Vader'])))[0];\n+print '-- set_has_element()';\n+print set_has_element(dynamic([]), 9);\n+print set_has_element(dynamic([\"this\", \"is\", \"an\", \"example\"]), \"example\");\n+print set_has_element(dynamic([\"this\", \"is\", \"an\", \"example\"]), \"examplee\");\n+print set_has_element(dynamic([1, 2, 3]), 2);\n+print set_has_element(dynamic([1, 2, 3, 4.2]), 4);\n+print '-- set_intersect()';\n+print set_intersect(dynamic([]), dynamic([]));\n+print array_sort_asc(set_intersect(dynamic([1, 1, 2, 2, 3, 3]), dynamic([1, 2, 3])))[0];\n+print array_sort_asc(set_intersect(dynamic([1, 4, 2, 3, 5, 4, 6]), dynamic([1, 2, 3])))[0];\n+print set_intersect(dynamic([4]), dynamic([1, 2, 3]));\n+print set_intersect(dynamic([1, 2, 3, 4, 5]), dynamic([1, 3, 5]), dynamic([2, 5]));\n+print set_intersect(dynamic([1, 2, 3]), dynamic([]));\n+print set_intersect(dynamic(['a', 's', 'd']), dynamic(['a', 'f']));\n+print set_intersect(dynamic(['Chewbacca', 'Darth Vader', 'Han Solo']), dynamic(['Darth Sidious', 'Darth Vader']));\n+print '-- set_union()';\n+print set_union(dynamic([]), dynamic([]));\n+print array_sort_asc(set_union(dynamic([1, 1, 2, 2, 3, 3]), dynamic([1, 2, 3])))[0];\n+print array_sort_asc(set_union(dynamic([1, 4, 2, 3, 5, 4, 6]), dynamic([1, 2, 3])))[0];\n+print array_sort_asc(set_union(dynamic([4]), dynamic([1, 2, 3])))[0];\n+print array_sort_asc(set_union(dynamic([1, 3, 4]), dynamic([5]), dynamic([2, 4])))[0];\n+print array_sort_asc(set_union(dynamic([1, 2, 3]), dynamic([])))[0];\n+print array_sort_asc(set_union(dynamic(['a', 's', 'd']), dynamic(['a', 'f'])))[0];\n+print array_sort_asc(set_union(dynamic(['Chewbacca', 'Darth Vader', 'Han Solo']), dynamic(['Darth Sidious', 'Darth Vader'])))[0];\n+print '-- zip()';\n+print zip(dynamic([]), dynamic([]));\n+print zip(dynamic([1,3,5]), dynamic([2,4,6]));\n+print zip(dynamic(['Darth','Master']), dynamic(['Vader','Yoda']), dynamic(['has a suit','doesn\\'t have a suit']));\n+print zip(dynamic([1,2,3]), dynamic([10,20]));\n+print zip(dynamic([]), dynamic([1,2,3]));\n\\ No newline at end of file\ndiff --git a/tests/queries/0_stateless/02366_kql_func_ip.reference b/tests/queries/0_stateless/02366_kql_func_ip.reference\nnew file mode 100644\nindex 000000000000..2a0bbf53fff4\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_ip.reference\n@@ -0,0 +1,123 @@\n+-- ipv4_is_private(\\'127.0.0.1\\')\n+0\n+-- ipv4_is_private(\\'10.1.2.3\\')\n+1\n+-- ipv4_is_private(\\'192.168.1.1/24\\')\n+1\n+ipv4_is_private(strcat(\\'192.\\',\\'168.\\',\\'1.\\',\\'1\\',\\'/24\\'))\n+1\n+-- ipv4_is_private(\\'abc\\')\n+\\N\n+-- ipv4_netmask_suffix(\\'192.168.1.1/24\\')\n+24\n+-- ipv4_netmask_suffix(\\'192.168.1.1\\')\n+32\n+-- ipv4_netmask_suffix(\\'127.0.0.1/16\\')\n+16\n+-- ipv4_netmask_suffix(\\'abc\\')\n+\\N\n+ipv4_netmask_suffix(strcat(\\'127.\\', \\'0.\\', \\'0.1/16\\'))\n+16\n+-- ipv4_is_in_range(\\'127.0.0.1\\', \\'127.0.0.1\\')\n+1\n+-- ipv4_is_in_range(\\'192.168.1.6\\', \\'192.168.1.1/24\\')\n+1\n+-- ipv4_is_in_range(\\'192.168.1.1\\', \\'192.168.2.1/24\\')\n+0\n+-- ipv4_is_in_range(strcat(\\'192.\\',\\'168.\\', \\'1.1\\'), \\'192.168.2.1/24\\')\n+0\n+-- ipv4_is_in_range(\\'abc\\', \\'127.0.0.1\\')\n+\\N\n+-- parse_ipv6(127.0.0.1)\n+0000:0000:0000:0000:0000:ffff:7f00:0001\n+-- parse_ipv6(fe80::85d:e82c:9446:7994)\n+fe80:0000:0000:0000:085d:e82c:9446:7994\n+-- parse_ipv4(\\'127.0.0.1\\')\n+2130706433\n+-- parse_ipv4(\\'192.1.168.1\\') < parse_ipv4(\\'192.1.168.2\\')\n+1\n+-- parse_ipv4(arrayStringConcat([\\'127\\', \\'0\\', \\'0\\', \\'1\\'], \\'.\\'))\n+-- parse_ipv4_mask(\\'127.0.0.1\\', 24) == 2130706432\n+2130706432\n+-- parse_ipv4_mask(\\'abc\\', 31)\n+\\N\n+\\N\n+-- parse_ipv4_mask(\\'192.1.168.2\\', 31) == parse_ipv4_mask(\\'192.1.168.3\\', 31)\n+3221334018\n+3221334018\n+-- ipv4_is_match(\\'127.0.0.1\\', \\'127.0.0.1\\')\n+1\n+-- ipv4_is_match(\\'192.168.1.1\\', \\'192.168.1.255\\')\n+0\n+-- ipv4_is_match(\\'192.168.1.1/24\\', \\'192.168.1.255/24\\')\n+1\n+-- ipv4_is_match(\\'192.168.1.1\\', \\'192.168.1.255\\', 24)\n+1\n+-- ipv4_is_match(\\'abc\\', \\'def\\', 24)\n+\\N\n+-- ipv4_compare()\n+0\n+-1\n+1\n+0\n+0\n+0\n+0\n+0\n+0\n+0\n+0\n+-- format_ipv4()\n+192.168.1.0\n+192.168.1.1\n+192.168.1.0\n+192.168.1.0\n+1\n+1\n+127.0.0.0\n+-- format_ipv4_mask()\n+192.168.1.0/24\n+192.168.1.0/24\n+192.168.1.0/24\n+192.168.1.1/32\n+192.168.1.0/24\n+1\n+1\n+127.0.0.0/24\n+-- parse_ipv6_mask()\n+0000:0000:0000:0000:0000:0000:0000:0000\n+fe80:0000:0000:0000:085d:e82c:9446:7900\n+0000:0000:0000:0000:0000:ffff:c0a8:ff00\n+0000:0000:0000:0000:0000:ffff:c0a8:ff00\n+0000:0000:0000:0000:0000:ffff:ffff:ffff\n+fe80:0000:0000:0000:085d:e82c:9446:7994\n+fe80:0000:0000:0000:085d:e82c:9446:7900\n+0000:0000:0000:0000:0000:ffff:c0a8:ffff\n+0000:0000:0000:0000:0000:ffff:c0a8:ff00\n+-- ipv6_is_match()\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\n+1\ndiff --git a/tests/queries/0_stateless/02366_kql_func_ip.sql b/tests/queries/0_stateless/02366_kql_func_ip.sql\nnew file mode 100644\nindex 000000000000..c9b335f203a2\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_ip.sql\n@@ -0,0 +1,131 @@\n+set dialect='kusto';\n+print '-- ipv4_is_private(\\'127.0.0.1\\')';\n+print ipv4_is_private('127.0.0.1');\n+print '-- ipv4_is_private(\\'10.1.2.3\\')';\n+print ipv4_is_private('10.1.2.3');\n+print '-- ipv4_is_private(\\'192.168.1.1/24\\')';\n+print ipv4_is_private('192.168.1.1/24');\n+print 'ipv4_is_private(strcat(\\'192.\\',\\'168.\\',\\'1.\\',\\'1\\',\\'/24\\'))';\n+print ipv4_is_private(strcat('192.','168.','1.','1','/24'));\n+print '-- ipv4_is_private(\\'abc\\')';\n+print ipv4_is_private('abc'); -- == null\n+\n+print '-- ipv4_netmask_suffix(\\'192.168.1.1/24\\')';\n+print ipv4_netmask_suffix('192.168.1.1/24'); -- == 24\n+print '-- ipv4_netmask_suffix(\\'192.168.1.1\\')';\n+print ipv4_netmask_suffix('192.168.1.1'); -- == 32\n+print '-- ipv4_netmask_suffix(\\'127.0.0.1/16\\')';\n+print ipv4_netmask_suffix('127.0.0.1/16'); -- == 16\n+print '-- ipv4_netmask_suffix(\\'abc\\')';\n+print ipv4_netmask_suffix('abc'); -- == null\n+print 'ipv4_netmask_suffix(strcat(\\'127.\\', \\'0.\\', \\'0.1/16\\'))';\n+print ipv4_netmask_suffix(strcat('127.', '0.', '0.1/16')); -- == 16\n+\n+print '-- ipv4_is_in_range(\\'127.0.0.1\\', \\'127.0.0.1\\')';\n+print ipv4_is_in_range('127.0.0.1', '127.0.0.1'); -- == true\n+print '-- ipv4_is_in_range(\\'192.168.1.6\\', \\'192.168.1.1/24\\')';\n+print ipv4_is_in_range('192.168.1.6', '192.168.1.1/24'); -- == true\n+print '-- ipv4_is_in_range(\\'192.168.1.1\\', \\'192.168.2.1/24\\')';\n+print ipv4_is_in_range('192.168.1.1', '192.168.2.1/24'); -- == false\n+print '-- ipv4_is_in_range(strcat(\\'192.\\',\\'168.\\', \\'1.1\\'), \\'192.168.2.1/24\\')';\n+print ipv4_is_in_range(strcat('192.','168.', '1.1'), '192.168.2.1/24'); -- == false\n+print '-- ipv4_is_in_range(\\'abc\\', \\'127.0.0.1\\')'; -- == null\n+print ipv4_is_in_range('abc', '127.0.0.1');\n+\n+print '-- parse_ipv6(127.0.0.1)';\n+print parse_ipv6('127.0.0.1');\n+print '-- parse_ipv6(fe80::85d:e82c:9446:7994)';\n+print parse_ipv6('fe80::85d:e82c:9446:7994');\n+print '-- parse_ipv4(\\'127.0.0.1\\')';\n+print parse_ipv4('127.0.0.1');\n+print '-- parse_ipv4(\\'192.1.168.1\\') < parse_ipv4(\\'192.1.168.2\\')';\n+print parse_ipv4('192.1.168.1') < parse_ipv4('192.1.168.2');\n+print '-- parse_ipv4(arrayStringConcat([\\'127\\', \\'0\\', \\'0\\', \\'1\\'], \\'.\\'))';\n+print parse_ipv4(arrayStringConcat(['127', '0', '0', '1'], '.')); -- { clientError UNKNOWN_FUNCTION }\n+\n+print '-- parse_ipv4_mask(\\'127.0.0.1\\', 24) == 2130706432';\n+print parse_ipv4_mask('127.0.0.1', 24);\n+print '-- parse_ipv4_mask(\\'abc\\', 31)';\n+print parse_ipv4_mask('abc', 31)\n+print '-- parse_ipv4_mask(\\'192.1.168.2\\', 1000)';\n+print parse_ipv4_mask('192.1.168.2', 1000);\n+print '-- parse_ipv4_mask(\\'192.1.168.2\\', 31) == parse_ipv4_mask(\\'192.1.168.3\\', 31)';\n+--print parse_ipv4_mask('192.1.168.2', 31) == parse_ipv4_mask('192.1.168.3', 31); // this qual failed in analyzer 3221334018\n+print parse_ipv4_mask('192.1.168.2', 31);\n+print parse_ipv4_mask('192.1.168.3', 31);\n+print '-- ipv4_is_match(\\'127.0.0.1\\', \\'127.0.0.1\\')';\n+print ipv4_is_match('127.0.0.1', '127.0.0.1');\n+print '-- ipv4_is_match(\\'192.168.1.1\\', \\'192.168.1.255\\')';\n+print ipv4_is_match('192.168.1.1', '192.168.1.255');\n+print '-- ipv4_is_match(\\'192.168.1.1/24\\', \\'192.168.1.255/24\\')';\n+print ipv4_is_match('192.168.1.1/24', '192.168.1.255/24');\n+print '-- ipv4_is_match(\\'192.168.1.1\\', \\'192.168.1.255\\', 24)';\n+print ipv4_is_match('192.168.1.1', '192.168.1.255', 24);\n+print '-- ipv4_is_match(\\'abc\\', \\'def\\', 24)';\n+print ipv4_is_match('abc', 'dev', 24);\n+print '-- ipv4_compare()';\n+print ipv4_compare('127.0.0.1', '127.0.0.1');\n+print ipv4_compare('192.168.1.1', '192.168.1.255');\n+print ipv4_compare('192.168.1.255', '192.168.1.1');\n+print ipv4_compare('192.168.1.1/24', '192.168.1.255/24');\n+print ipv4_compare('192.168.1.1', '192.168.1.255', 24);\n+print ipv4_compare('192.168.1.1/24', '192.168.1.255');\n+print ipv4_compare('192.168.1.1', '192.168.1.255/24');\n+print ipv4_compare('192.168.1.1/30', '192.168.1.255/24');\n+print ipv4_compare('192.168.1.1', '192.168.1.0', 31);\n+print ipv4_compare('192.168.1.1/24', '192.168.1.255', 31);\n+print ipv4_compare('192.168.1.1', '192.168.1.255', 24);\n+print '-- format_ipv4()';\n+print format_ipv4('192.168.1.255', 24);\n+print format_ipv4('192.168.1.1', 32);\n+print format_ipv4('192.168.1.1/24', 32);\n+print format_ipv4(3232236031, 24);\n+print format_ipv4('192.168.1.1/24', -1) == '';\n+print format_ipv4('abc', 24) == '';\n+print format_ipv4(strcat('127.0', '.0.', '1', '/32'), 12 + 12);\n+print '-- format_ipv4_mask()';\n+print format_ipv4_mask('192.168.1.255', 24);\n+print format_ipv4_mask(3232236031, 24);\n+print format_ipv4_mask('192.168.1.1', 24);\n+print format_ipv4_mask('192.168.1.1', 32);\n+print format_ipv4_mask('192.168.1.1/24', 32);\n+print format_ipv4_mask('192.168.1.1/24', -1) == '';\n+print format_ipv4_mask('abc', 24) == '';\n+print format_ipv4_mask(strcat('127.0', '.0.', '1', '/32'), 12 + 12);\n+print '-- parse_ipv6_mask()';\n+print parse_ipv6_mask(\"127.0.0.1\", 24);\n+print parse_ipv6_mask(\"fe80::85d:e82c:9446:7994\", 120);\n+print parse_ipv6_mask(\"192.168.255.255\", 120);\n+print parse_ipv6_mask(\"192.168.255.255/24\", 124);\n+print parse_ipv6_mask(\"255.255.255.255\", 128);\n+print parse_ipv6_mask(\"fe80::85d:e82c:9446:7994\", 128);\n+print parse_ipv6_mask(\"fe80::85d:e82c:9446:7994/120\", 124);\n+print parse_ipv6_mask(\"::192.168.255.255\", 128);\n+print parse_ipv6_mask(\"::192.168.255.255/24\", 128);\n+print '-- ipv6_is_match()';\n+print ipv6_is_match('::ffff:7f00:1', '127.0.0.1') == true;\n+print ipv6_is_match('fe80::85d:e82c:9446:7994', 'fe80::85d:e82c:9446:7995') == false;\n+print ipv6_is_match('192.168.1.1/24', '192.168.1.255/24') == true;\n+print ipv6_is_match('fe80::85d:e82c:9446:7994/127', 'fe80::85d:e82c:9446:7995/127') == true;\n+print ipv6_is_match('fe80::85d:e82c:9446:7994', 'fe80::85d:e82c:9446:7995', 127) == true;\n+print ipv6_is_match('192.168.1.1',    '192.168.1.1'); --       // Equal IPs\n+print ipv6_is_match('192.168.1.1/24', '192.168.1.255'); --     // 24 bit IP4-prefix is used for comparison\n+print ipv6_is_match('192.168.1.1',    '192.168.1.255/24'); --  // 24 bit IP4-prefix is used for comparison\n+print ipv6_is_match('192.168.1.1/30', '192.168.1.255/24'); --  // 24 bit IP4-prefix is used for comparison\n+print ipv6_is_match('fe80::85d:e82c:9446:7994', 'fe80::85d:e82c:9446:7994'); --         // Equal IPs\n+print ipv6_is_match('fe80::85d:e82c:9446:7994/120', 'fe80::85d:e82c:9446:7998'); --     // 120 bit IP6-prefix is used for comparison\n+print ipv6_is_match('fe80::85d:e82c:9446:7994', 'fe80::85d:e82c:9446:7998/120'); --     // 120 bit IP6-prefix is used for comparison\n+print ipv6_is_match('fe80::85d:e82c:9446:7994/120', 'fe80::85d:e82c:9446:7998/120'); -- // 120 bit IP6-prefix is used for comparison\n+print ipv6_is_match('192.168.1.1',      '::ffff:c0a8:0101'); -- // Equal IPs\n+print ipv6_is_match('192.168.1.1/24',   '::ffff:c0a8:01ff'); -- // 24 bit IP-prefix is used for comparison\n+print ipv6_is_match('::ffff:c0a8:0101', '192.168.1.255/24'); -- // 24 bit IP-prefix is used for comparison\n+print ipv6_is_match('::192.168.1.1/30', '192.168.1.255/24'); -- // 24 bit IP-prefix is used for comparison\n+print ipv6_is_match('192.168.1.1',    '192.168.1.0',   31); -- // 31 bit IP4-prefix is used for comparison\n+print ipv6_is_match('192.168.1.1/24', '192.168.1.255', 31); -- // 24 bit IP4-prefix is used for comparison\n+print ipv6_is_match('192.168.1.1',    '192.168.1.255', 24); -- // 24 bit IP4-prefix is used for comparison\n+print ipv6_is_match('fe80::85d:e82c:9446:7994', 'fe80::85d:e82c:9446:7995',     127); -- // 127 bit IP6-prefix is used for comparison\n+print ipv6_is_match('fe80::85d:e82c:9446:7994/127', 'fe80::85d:e82c:9446:7998', 120); -- // 120 bit IP6-prefix is used for comparison\n+print ipv6_is_match('fe80::85d:e82c:9446:7994/120', 'fe80::85d:e82c:9446:7998', 127); -- // 120 bit IP6-prefix is used for comparison\n+print ipv6_is_match('192.168.1.1/24',   '::ffff:c0a8:01ff', 127); -- // 127 bit IP6-prefix is used for comparison\n+print ipv6_is_match('::ffff:c0a8:0101', '192.168.1.255',    120); -- // 120 bit IP6-prefix is used for comparison\n+print ipv6_is_match('::192.168.1.1/30', '192.168.1.255/24', 127); -- // 120 bit IP6-prefix is used for comparison\n\\ No newline at end of file\ndiff --git a/tests/queries/0_stateless/02366_kql_func_math.reference b/tests/queries/0_stateless/02366_kql_func_math.reference\nnew file mode 100644\nindex 000000000000..92f283abcb6e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_math.reference\n@@ -0,0 +1,4 @@\n+-- isnan --\n+1\n+0\n+0\ndiff --git a/tests/queries/0_stateless/02366_kql_func_math.sql b/tests/queries/0_stateless/02366_kql_func_math.sql\nnew file mode 100644\nindex 000000000000..4e83622eb6b8\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_math.sql\n@@ -0,0 +1,7 @@\n+set dialect = 'kusto';\n+print '-- isnan --';\n+print isnan(double(nan));\n+print isnan(4.2);\n+print isnan(4); -- { serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO }\n+print isnan(real(+inf));\n+print isnan(dynamic(null)); -- { serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO }\ndiff --git a/tests/queries/0_stateless/02366_kql_func_scalar.reference b/tests/queries/0_stateless/02366_kql_func_scalar.reference\nnew file mode 100644\nindex 000000000000..b7fa62c5d437\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_scalar.reference\n@@ -0,0 +1,16 @@\n+-- bin_at()\n+4.5\n+-12:0:0\n+2017-05-14 12:00:00.000000000\n+2017-05-14 00:00:00.000000000\n+2018-02-25 15:14:00.000000000\t5\n+2018-02-24 15:14:00.000000000\t3\n+2018-02-23 15:14:00.000000000\t4\n+-- bin()\n+4\n+1970-05-11 00:00:00.000000000\n+336:0:0\n+1970-05-11 13:45:07.345000000\n+1970-05-11 13:45:07.345623000\n+2022-09-26 10:13:23.987232000\n+1970-05-11 13:45:07.456336000\ndiff --git a/tests/queries/0_stateless/02366_kql_func_scalar.sql b/tests/queries/0_stateless/02366_kql_func_scalar.sql\nnew file mode 100644\nindex 000000000000..d7e94cfd9d15\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_scalar.sql\n@@ -0,0 +1,26 @@\n+DROP TABLE IF EXISTS Bin_at_test;\n+CREATE TABLE Bin_at_test\n+(    \n+    `Date` DateTime('UTC'),\n+    Num Nullable(UInt8)\n+) ENGINE = Memory;\n+INSERT INTO Bin_at_test VALUES ('2018-02-24T15:14:01',3), ('2018-02-23T16:14:01',4), ('2018-02-26T15:14:01',5);\n+\n+set dialect = 'kusto';\n+print '-- bin_at()';\n+print bin_at(6.5, 2.5, 7);\n+print bin_at(1h, 1d, 12h);\n+print bin_at(datetime(2017-05-15 10:20:00.0), 1d, datetime(1970-01-01 12:00:00.0));\n+print bin_at(datetime(2017-05-17 10:20:00.0), 7d, datetime(2017-06-04 00:00:00.0));\n+Bin_at_test | summarize sum(Num) by d = todatetime(bin_at(Date, 1d, datetime('2018-02-24 15:14:00'))) | order by d;\n+print '-- bin()';\n+print bin(4.5, 1);\n+print bin(datetime(1970-05-11 13:45:07), 1d);\n+print bin(16d, 7d);\n+print bin(datetime(1970-05-11 13:45:07.345623), 1ms);\n+-- print bin(datetime(2022-09-26 10:13:23.987234), 6ms); -> 2022-09-26 10:13:23.982000000\n+print bin(datetime(1970-05-11 13:45:07.345623), 1microsecond);\n+print bin(datetime(2022-09-26 10:13:23.987234), 6microseconds);\n+print bin(datetime(1970-05-11 13:45:07.456345672), 16microseconds);\n+-- print bin(datetime(2022-09-26 10:13:23.987234128), 1tick); -> 2022-09-26 10:13:23.987234100\n+-- print bin(datetime(2022-09-26 10:13:23.987234128), 99nanosecond); -> null\ndiff --git a/tests/queries/0_stateless/02366_kql_func_string.reference b/tests/queries/0_stateless/02366_kql_func_string.reference\nnew file mode 100644\nindex 000000000000..9bdd38ca5dba\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_string.reference\n@@ -0,0 +1,360 @@\n+-- test String Functions --\n+-- Customers |where Education contains \\'degree\\'\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+\n+-- Customers |where Education !contains \\'degree\\'\n+\\N\twhy\tProfessional\tPartial College\t38\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers |where Education contains \\'Degree\\'\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+\n+-- Customers |where Education !contains \\'Degree\\'\n+\\N\twhy\tProfessional\tPartial College\t38\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where FirstName endswith \\'RE\\'\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where ! FirstName endswith \\'RE\\'\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+--Customers | where FirstName endswith_cs \\'re\\'\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where FirstName !endswith_cs \\'re\\'\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where Occupation == \\'Skilled Manual\\'\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where Occupation != \\'Skilled Manual\\'\n+\\N\twhy\tProfessional\tPartial College\t38\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+\n+-- Customers | where Occupation has \\'skilled\\'\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where Occupation !has \\'skilled\\'\n+\\N\twhy\tProfessional\tPartial College\t38\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+\n+-- Customers | where Occupation has \\'Skilled\\'\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where Occupation !has \\'Skilled\\'\n+\\N\twhy\tProfessional\tPartial College\t38\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+\n+-- Customers | where Occupation hasprefix_cs \\'Ab\\'\n+\n+-- Customers | where Occupation !hasprefix_cs \\'Ab\\'\n+\\N\twhy\tProfessional\tPartial College\t38\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where Occupation hasprefix_cs \\'ab\\'\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+\n+-- Customers | where Occupation !hasprefix_cs \\'ab\\'\n+\\N\twhy\tProfessional\tPartial College\t38\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where Occupation hassuffix \\'Ent\\'\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+\n+-- Customers | where Occupation !hassuffix \\'Ent\\'\n+\\N\twhy\tProfessional\tPartial College\t38\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where Occupation hassuffix \\'ent\\'\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+\n+-- Customers | where Occupation hassuffix \\'ent\\'\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+\n+-- Customers |where Education in (\\'Bachelors\\',\\'High School\\')\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where Education !in (\\'Bachelors\\',\\'High School\\')\n+\\N\twhy\tProfessional\tPartial College\t38\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+\n+-- Customers | where FirstName matches regex \\'P.*r\\'\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+\n+-- Customers | where FirstName startswith \\'pet\\'\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+\n+-- Customers | where FirstName !startswith \\'pet\\'\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where FirstName startswith_cs \\'pet\\'\n+\n+-- Customers | where FirstName !startswith_cs \\'pet\\'\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where isempty(LastName)\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where isnotempty(LastName)\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+\\N\twhy\tProfessional\tPartial College\t38\n+\n+-- Customers | where isnotnull(FirstName)\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- Customers | where isnull(FirstName)\n+\\N\twhy\tProfessional\tPartial College\t38\n+\n+-- Customers | project url_decode(\\'https%3A%2F%2Fwww.test.com%2Fhello%20word\\') | take 1\n+https://www.test.com/hello word\n+\n+-- Customers | project url_encode(\\'https://www.test.com/hello word\\') | take 1\n+https%3A%2F%2Fwww.test.com%2Fhello%20word\n+\n+-- Customers | project name_abbr = strcat(substring(FirstName,0,3), \\' \\', substring(LastName,2))\n+\\N\n+Lat en\n+Pet ra\n+The az\n+Ste x\n+App \n+\n+-- Customers | project name = strcat(FirstName, \\' \\', LastName)\n+\\N\n+Latoya Shen\n+Peter Nara\n+Theodore Diaz\n+Stephanie Cox\n+Apple \n+\n+-- Customers | project FirstName, strlen(FirstName)\n+\\N\t\\N\n+Latoya\t6\n+Peter\t5\n+Theodore\t8\n+Stephanie\t9\n+Apple\t5\n+\n+-- Customers | project strrep(FirstName,2,\\'_\\')\n+\\N\n+Latoya_Latoya\n+Peter_Peter\n+Theodore_Theodore\n+Stephanie_Stephanie\n+Apple_Apple\n+\n+-- Customers | project toupper(FirstName)\n+\\N\n+LATOYA\n+PETER\n+THEODORE\n+STEPHANIE\n+APPLE\n+\n+-- Customers | project tolower(FirstName)\n+\\N\n+latoya\n+peter\n+theodore\n+stephanie\n+apple\n+\n+-- support subquery for in orerator (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/in-cs-operator) (subquery need to be wraped with bracket inside bracket); TODO: case-insensitive not supported yet\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- has_all (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/has-all-operator); TODO: subquery not supported yet\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- has_any (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/has-anyoperator); TODO: subquery not supported yet\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Apple\t\tSkilled Manual\tBachelors\t28\n+\n+-- countof (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/countoffunction)\n+3\n+3\n+1\n+\n+-- extract ( https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/extractfunction)\n+PINEAPPLE ice cream is 20\n+PINEAPPLE\n+20\n+\n+20\n+\\N\n+\\N\n+\\N\n+\\N\n+\\N\n+45.6\n+45.6\n+\n+-- extract_all (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/extractallfunction); TODO: captureGroups not supported yet\n+[['T','h','e'],['p','ric','e'],['P','INEAPPL','E'],['i','c','e'],['c','rea','m']]\n+\n+-- extract_json (https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/extractjsonfunction)\n+\n+\n+John\n+iPhone\n+\\N\n+26\n+26\n+26\n+26\n+\\N\n+\n+-- split (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/splitfunction)\n+['aa','bb']\n+['bbb']\n+['']\n+['a','','b']\n+['aa','cc']\n+['aabbcc']\n+['aaa','bbb','ccc']\n+[NULL]\n+\n+-- strcat_delim (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/strcat-delimfunction); TODO: only support string now.\n+1-2-Ab\n+\n+-- indexof (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/indexoffunction); TODO: length and occurrence not supported yet\n+2\n+2\n+-1\n+-- base64_encode_fromguid()\n+8jMxriJurkmwahbmqbIS6w==\n+-- base64_decode_toarray()\n+[]\n+[75,117,115,116,111]\n+-- base64_decode_toguid()\n+10e99626-bc2b-4c75-bb3e-fe606de25700\n+1\n+-- base64_encode_tostring\n+\n+S3VzdG8x\n+-- base64_decode_tostring\n+\n+Kusto1\n+-- parse_url()\n+{\"Scheme\":\"scheme\",\"Host\":\"\",\"Port\":\"0\",\"Path\":\"/this/is/a/path\",\"Username\":\"username\",\"Password\":\"password\",\"Query Parameters\":{\"k1\":\"v1\",\"k2\":\"v2\"},\"Fragment\":\"fragment\"}\n+-- parse_urlquery()\n+{\"Query Parameters\":{\"k1\":\"v1\",\"k2\":\"v2\",\"k3\":\"v3\"}}\n+-- strcmp()\n+0\t1\t-1\t1\n+-- substring()\n+CD\n+-- translate()\n+kusto\t\txxx\n+-- trim()\n+https://www.ibm.com\n+Te st1\n+ asd \n+asd\n+sd\n+-- trim_start()\n+www.ibm.com\n+Te st1// $\n+asdw\n+\n+asd\n+-- trim_end()\n+https\n+- Te st1\n+wasd\n+\n+asd\n+-- trim, trim_start, trim_end all at once\n+--https://bing.com--\t--\thttps://bing.com--\t--https://bing.com\thttps://bing.com\n+-- replace_regex\n+Number was: 1\n+-- has_any_index()\n+0\t1\t-1\t-1\n+-- parse_version()\n+1000000020000000300000040\n+1000000020000000000000000\n+1000000020000000000000000\n+\\N\n+\\N\n+\\N\n+\\N\n+1000000020000000300000004\n+1000000020000000000000000\n+1000000020000000300000000\n+1000000000000000000000000\n+-- parse_json()\n+[1,2,3]\n+[{\"a\":123.5,\"b\":\"{\\\\\"c\\\\\":456}\"}]\n+-- parse_command_line()\n+[NULL]\n+[NULL]\n+-- reverse()\n+321\n+43.321\n+\n+dsa\n+][\n+]3,2,1[\n+]\\'redaV\\',\\'htraD\\'[\n+000000000.00:00:21 51-01-7102\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+-- parse_csv()\n+['']\n+['aaa']\n+['aa','b','cc']\n+['record1','a','b','c']\ndiff --git a/tests/queries/0_stateless/02366_kql_func_string.sql b/tests/queries/0_stateless/02366_kql_func_string.sql\nnew file mode 100644\nindex 000000000000..d251b04e08bf\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_func_string.sql\n@@ -0,0 +1,313 @@\n+-- Tags: no-fasttest\n+\n+DROP TABLE IF EXISTS Customers;\n+CREATE TABLE Customers\n+(    \n+    FirstName Nullable(String),\n+    LastName String, \n+    Occupation String,\n+    Education String,\n+    Age Nullable(UInt8)\n+) ENGINE = Memory;\n+\n+INSERT INTO Customers VALUES ('Theodore','Diaz','Skilled Manual','Bachelors',28), ('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);\n+\n+-- datatable (Version:string) [\n+--     '1.2.3.4',\n+--     '1.2',\n+--     '1.2.3',\n+--     '1'\n+-- ]\n+\n+DROP TABLE IF EXISTS Versions;\n+CREATE TABLE Versions\n+(    \n+    Version String\n+) ENGINE = Memory;\n+INSERT INTO Versions VALUES ('1.2.3.4'),('1.2'),('1.2.3'),('1');\n+\n+\n+set dialect='kusto';\n+print '-- test String Functions --';\n+\n+print '-- Customers |where Education contains \\'degree\\'';\n+Customers |where Education contains 'degree' | order by LastName;\n+print '';\n+print '-- Customers |where Education !contains \\'degree\\'';\n+Customers |where Education !contains 'degree' | order by LastName;\n+print '';\n+print '-- Customers |where Education contains \\'Degree\\'';\n+Customers |where Education contains 'Degree' | order by LastName;\n+print '';\n+print '-- Customers |where Education !contains \\'Degree\\'';\n+Customers |where Education !contains 'Degree' | order by LastName;\n+print '';\n+print '-- Customers | where FirstName endswith \\'RE\\'';\n+Customers | where FirstName endswith 'RE' | order by LastName;\n+print '';\n+print '-- Customers | where ! FirstName endswith \\'RE\\'';\n+Customers | where FirstName ! endswith 'RE' | order by LastName;\n+print '';\n+print '--Customers | where FirstName endswith_cs \\'re\\'';\n+Customers | where FirstName endswith_cs 're' | order by LastName;\n+print '';\n+print '-- Customers | where FirstName !endswith_cs \\'re\\'';\n+Customers | where FirstName !endswith_cs 're' | order by LastName;\n+print '';\n+print '-- Customers | where Occupation == \\'Skilled Manual\\'';\n+Customers | where Occupation == 'Skilled Manual' | order by LastName;\n+print '';\n+print '-- Customers | where Occupation != \\'Skilled Manual\\'';\n+Customers | where Occupation != 'Skilled Manual' | order by LastName;\n+print '';\n+print '-- Customers | where Occupation has \\'skilled\\'';\n+Customers | where Occupation has 'skilled' | order by LastName;\n+print '';\n+print '-- Customers | where Occupation !has \\'skilled\\'';\n+Customers | where Occupation !has 'skilled' | order by LastName;\n+print '';\n+print '-- Customers | where Occupation has \\'Skilled\\'';\n+Customers | where Occupation has 'Skilled'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation !has \\'Skilled\\'';\n+Customers | where Occupation !has 'Skilled'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation hasprefix_cs \\'Ab\\'';\n+Customers | where Occupation hasprefix_cs 'Ab'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation !hasprefix_cs \\'Ab\\'';\n+Customers | where Occupation !hasprefix_cs 'Ab'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation hasprefix_cs \\'ab\\'';\n+Customers | where Occupation hasprefix_cs 'ab'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation !hasprefix_cs \\'ab\\'';\n+Customers | where Occupation !hasprefix_cs 'ab'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation hassuffix \\'Ent\\'';\n+Customers | where Occupation hassuffix 'Ent'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation !hassuffix \\'Ent\\'';\n+Customers | where Occupation !hassuffix 'Ent'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation hassuffix \\'ent\\'';\n+Customers | where Occupation hassuffix 'ent'| order by LastName;\n+print '';\n+print '-- Customers | where Occupation hassuffix \\'ent\\'';\n+Customers | where Occupation hassuffix 'ent'| order by LastName;\n+print '';\n+print '-- Customers |where Education in (\\'Bachelors\\',\\'High School\\')';\n+Customers |where Education in ('Bachelors','High School')| order by LastName;\n+print '';\n+print '-- Customers | where Education !in (\\'Bachelors\\',\\'High School\\')';\n+Customers | where Education !in ('Bachelors','High School')| order by LastName;\n+print '';\n+print '-- Customers | where FirstName matches regex \\'P.*r\\'';\n+Customers | where FirstName matches regex 'P.*r'| order by LastName;\n+print '';\n+print '-- Customers | where FirstName startswith \\'pet\\'';\n+Customers | where FirstName startswith 'pet'| order by LastName;\n+print '';\n+print '-- Customers | where FirstName !startswith \\'pet\\'';\n+Customers | where FirstName !startswith 'pet'| order by LastName;\n+print '';\n+print '-- Customers | where FirstName startswith_cs \\'pet\\'';\n+Customers | where FirstName startswith_cs 'pet'| order by LastName;\n+print '';\n+print '-- Customers | where FirstName !startswith_cs \\'pet\\'';\n+Customers | where FirstName !startswith_cs 'pet'| order by LastName;\n+print '';\n+print '-- Customers | where isempty(LastName)';\n+Customers | where isempty(LastName);\n+print '';\n+print '-- Customers | where isnotempty(LastName)';\n+Customers | where isnotempty(LastName);\n+print '';\n+print '-- Customers | where isnotnull(FirstName)';\n+Customers | where isnotnull(FirstName)| order by LastName;\n+print '';\n+print '-- Customers | where isnull(FirstName)';\n+Customers | where isnull(FirstName)| order by LastName;\n+print '';\n+print '-- Customers | project url_decode(\\'https%3A%2F%2Fwww.test.com%2Fhello%20word\\') | take 1';\n+Customers | project url_decode('https%3A%2F%2Fwww.test.com%2Fhello%20word') | take 1;\n+print '';\n+print '-- Customers | project url_encode(\\'https://www.test.com/hello word\\') | take 1';\n+Customers | project url_encode('https://www.test.com/hello word') | take 1;\n+print '';\n+print '-- Customers | project name_abbr = strcat(substring(FirstName,0,3), \\' \\', substring(LastName,2))';\n+Customers | project name_abbr = strcat(substring(FirstName,0,3), ' ', substring(LastName,2))| order by LastName;\n+print '';\n+print '-- Customers | project name = strcat(FirstName, \\' \\', LastName)';\n+Customers | project name = strcat(FirstName, ' ', LastName)| order by LastName;\n+print '';\n+print '-- Customers | project FirstName, strlen(FirstName)';\n+Customers | project FirstName, strlen(FirstName)| order by LastName;\n+print '';\n+print '-- Customers | project strrep(FirstName,2,\\'_\\')';\n+Customers | project strrep(FirstName,2,'_')| order by LastName;\n+print '';\n+print '-- Customers | project toupper(FirstName)';\n+Customers | project toupper(FirstName)| order by LastName;\n+print '';\n+print '-- Customers | project tolower(FirstName)';\n+Customers | project tolower(FirstName)| order by LastName;\n+print '';\n+print '-- support subquery for in orerator (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/in-cs-operator) (subquery need to be wraped with bracket inside bracket); TODO: case-insensitive not supported yet';\n+Customers | where Age in ((Customers|project Age|where Age < 30)) | order by LastName;\n+-- Customer | where LastName in~ (\"diaz\", \"cox\")\n+print '';\n+print '-- has_all (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/has-all-operator); TODO: subquery not supported yet';\n+Customers | where Occupation has_all ('manual', 'skilled') | order by LastName;\n+print '';\n+print '-- has_any (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/has-anyoperator); TODO: subquery not supported yet';\n+Customers|where Occupation has_any ('Skilled','abcd');\n+print '';\n+print '-- countof (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/countoffunction)';\n+Customers | project countof('The cat sat on the mat', 'at') | take 1;\n+Customers | project countof('The cat sat on the mat', 'at', 'normal') | take 1;\n+Customers | project countof('The cat sat on the mat', '\\\\s.he', 'regex') | take 1;\n+print '';\n+print '-- extract ( https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/extractfunction)';\n+print extract('(\\\\b[A-Z]+\\\\b).+(\\\\b\\\\d+)', 0, 'The price of PINEAPPLE ice cream is 20');\n+print extract('(\\\\b[A-Z]+\\\\b).+(\\\\b\\\\d+)', 1, 'The price of PINEAPPLE ice cream is 20');\n+print extract('(\\\\b[A-Z]+\\\\b).+(\\\\b\\\\d+)', 2, 'The price of PINEAPPLE ice cream is 20');\n+print extract('(\\\\b[A-Z]+\\\\b).+(\\\\b\\\\d+)', 3, 'The price of PINEAPPLE ice cream is 20');\n+print extract('(\\\\b[A-Z]+\\\\b).+(\\\\b\\\\d+)', 2, 'The price of PINEAPPLE ice cream is 20', typeof(real));\n+print extract(\"x=([0-9.]+)\", 1, \"hello x=45.6|wo\" , typeof(bool));\n+print extract(\"x=([0-9.]+)\", 1, \"hello x=45.6|wo\" , typeof(date));\n+print extract(\"x=([0-9.]+)\", 1, \"hello x=45.6|wo\" , typeof(guid));\n+print extract(\"x=([0-9.]+)\", 1, \"hello x=45.6|wo\" , typeof(int));\n+print extract(\"x=([0-9.]+)\", 1, \"hello x=45.6|wo\" , typeof(long));\n+print extract(\"x=([0-9.]+)\", 1, \"hello x=45.6|wo\" , typeof(real));\n+print extract(\"x=([0-9.]+)\", 1, \"hello x=45.6|wo\" , typeof(decimal));\n+print '';\n+print '-- extract_all (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/extractallfunction); TODO: captureGroups not supported yet';\n+Customers | project extract_all('(\\\\w)(\\\\w+)(\\\\w)','The price of PINEAPPLE ice cream is 20') | take 1;\n+print '';\n+print '-- extract_json (https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/extractjsonfunction)';\n+print extract_json('', ''); -- { serverError BAD_ARGUMENTS }\n+print extract_json('a', ''); -- { serverError BAD_ARGUMENTS }\n+print extract_json('$.firstName', '');\n+print extract_json('$.phoneNumbers[0].type', '');\n+print extractjson('$.firstName', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}');\n+print extract_json('$.phoneNumbers[0].type', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}', typeof(string));\n+print extract_json('$.phoneNumbers[0].type', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}', typeof(int));\n+print extract_json('$.age', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}');\n+print extract_json('$.age', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}', typeof(int));\n+print extract_json('$.age', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}', typeof(long));\n+-- print extract_json('$.age', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}', typeof(bool)); -> true\n+print extract_json('$.age', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}', typeof(double));\n+print extract_json('$.age', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}', typeof(guid));\n+-- print extract_json('$.phoneNumbers', '{\"firstName\":\"John\",\"lastName\":\"doe\",\"age\":26,\"address\":{\"streetAddress\":\"naist street\",\"city\":\"Nara\",\"postalCode\":\"630-0192\"},\"phoneNumbers\":[{\"type\":\"iPhone\",\"number\":\"0123-4567-8888\"},{\"type\":\"home\",\"number\":\"0123-4567-8910\"}]}', typeof(dynamic)); we won't be able to handle this particular case for a while, because it should return a dictionary\n+print '';\n+print '-- split (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/splitfunction)';\n+Customers | project split('aa_bb', '_') | take 1;\n+Customers | project split('aaa_bbb_ccc', '_', 1) | take 1;\n+Customers | project split('', '_') | take 1;\n+Customers | project split('a__b', '_') | take 1;\n+Customers | project split('aabbcc', 'bb') | take 1;\n+Customers | project split('aabbcc', '') | take 1;\n+Customers | project split('aaa_bbb_ccc', '_', -1) | take 1;\n+Customers | project split('aaa_bbb_ccc', '_', 10) | take 1;\n+print '';\n+print '-- strcat_delim (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/strcat-delimfunction); TODO: only support string now.';\n+Customers | project strcat_delim('-', '1', '2', strcat('A','b')) | take 1;\n+-- Customers | project strcat_delim('-', '1', '2', 'A' , 1s);\n+print '';\n+print '-- indexof (https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/indexoffunction); TODO: length and occurrence not supported yet';\n+Customers | project indexof('abcdefg','cde') | take 1;\n+Customers | project indexof('abcdefg','cde',2) | take 1;\n+Customers | project indexof('abcdefg','cde',6) | take 1;\n+print '-- base64_encode_fromguid()';\n+-- print base64_encode_fromguid(guid(null));\n+print base64_encode_fromguid(guid('ae3133f2-6e22-49ae-b06a-16e6a9b212eb'));\n+print base64_encode_fromguid(dynamic(null)); -- { serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO }\n+print base64_encode_fromguid(\"abcd1231\"); -- { serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO }\n+print '-- base64_decode_toarray()';\n+print base64_decode_toarray('');\n+print base64_decode_toarray('S3VzdG8=');\n+print '-- base64_decode_toguid()';\n+print base64_decode_toguid(\"JpbpECu8dUy7Pv5gbeJXAA==\");\n+print base64_decode_toguid(base64_encode_fromguid(guid('ae3133f2-6e22-49ae-b06a-16e6a9b212eb'))) == guid('ae3133f2-6e22-49ae-b06a-16e6a9b212eb');\n+print '-- base64_encode_tostring';\n+print base64_encode_tostring('');\n+print base64_encode_tostring('Kusto1');\n+print '-- base64_decode_tostring';\n+print base64_decode_tostring('');\n+print base64_decode_tostring('S3VzdG8x');\n+print '-- parse_url()';\n+print parse_url('scheme://username:password@host:1234/this/is/a/path?k1=v1&k2=v2#fragment');\n+print '-- parse_urlquery()';\n+print parse_urlquery('k1=v1&k2=v2&k3=v3');\n+print '-- strcmp()';\n+print strcmp('ABC','ABC'), strcmp('abc','ABC'), strcmp('ABC','abc'), strcmp('abcde','abc');\n+print '-- substring()';\n+print substring(\"ABCD\", -2, 2);\n+print '-- translate()';\n+print translate('krasp', 'otsku', 'spark'), translate('abc', '', 'ab'), translate('abc', 'x', 'abc');\n+print '-- trim()';\n+print trim(\"--\", \"--https://www.ibm.com--\");\n+print trim(\"[^\\w]+\", strcat(\"- \",\"Te st\", \"1\", \"// $\"));\n+print trim(\"\", \" asd \");\n+print trim(\"a$\", \"asd\");\n+print trim(\"^a\", \"asd\");\n+print '-- trim_start()';\n+print trim_start(\"https://\", \"https://www.ibm.com\");\n+print trim_start(\"[^\\w]+\", strcat(\"-  \",\"Te st\", \"1\", \"// $\"));\n+print trim_start(\"asd$\", \"asdw\");\n+print trim_start(\"asd$\", \"asd\");\n+print trim_start(\"d$\", \"asd\");\n+print '-- trim_end()';\n+print trim_end(\"://www.ibm.com\", \"https://www.ibm.com\");\n+print trim_end(\"[^\\w]+\", strcat(\"- \",\"Te st\", \"1\", \"// $\"));\n+print trim_end(\"^asd\", \"wasd\");\n+print trim_end(\"^asd\", \"asd\");\n+print trim_end(\"^a\", \"asd\");\n+print '-- trim, trim_start, trim_end all at once';\n+print str = \"--https://bing.com--\", pattern = '--' | extend start = trim_start(pattern, str), end = trim_end(pattern, str), both = trim(pattern, str);\n+print '-- replace_regex';\n+print replace_regex(strcat('Number is ', '1'), 'is (\\d+)', 'was: \\1');\n+print '-- has_any_index()';\n+print has_any_index('this is an example', dynamic(['this', 'example'])), has_any_index(\"this is an example\", dynamic(['not', 'example'])), has_any_index(\"this is an example\", dynamic(['not', 'found'])), has_any_index(\"this is an example\", dynamic([]));\n+print '-- parse_version()';\n+print parse_version(42); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n+-- print parse_version(''); -> NULL\n+print parse_version('1.2.3.40');\n+print parse_version('1.2');\n+print parse_version(strcat('1.', '2'));\n+print parse_version('1.2.4.5.6');\n+print parse_version('moo'); \n+print parse_version('moo.boo.foo');\n+print parse_version(strcat_delim('.', 'moo', 'boo', 'foo'));\n+Versions | project parse_version(Version);\n+print '-- parse_json()';\n+print parse_json(dynamic([1, 2, 3]));\n+print parse_json('{\"a\":123.5, \"b\":\"{\\\\\"c\\\\\":456}\"}');\n+print '-- parse_command_line()';\n+print parse_command_line(55, 'windows'); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n+-- print parse_command_line((52 + 3) * 4 % 2, 'windows'); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n+print parse_command_line('', 'windows');\n+print parse_command_line(strrep(' ', 6), 'windows'); \n+-- print parse_command_line('echo \\\"hello world!\\\" print$?', 'windows'); -> [\"echo\",\"hello world!\",\"print$?\"]\n+-- print parse_command_line(\"yolo swag 'asd bcd' \\\"moo moo \\\"\", 'windows'); -> [\"yolo\",\"swag\",\"'asd\",\"bcd'\",\"moo moo \"]\n+-- print parse_command_line(strcat_delim(' ', \"yolo\", \"swag\", \"\\'asd bcd\\'\", \"\\\"moo moo \\\"\"), 'windows'); -> [\"yolo\",\"swag\",\"'asd\",\"bcd'\",\"moo moo \"]\n+print '-- reverse()';\n+print reverse(123);\n+print reverse(123.34);\n+print reverse('');\n+print reverse(\"asd\");\n+print reverse(dynamic([]));\n+print reverse(dynamic([1, 2, 3]));\n+print reverse(dynamic(['Darth', \"Vader\"]));\n+print reverse(datetime(2017-10-15 12:00));\n+-- print reverse(timespan(3h)); -> 00:00:30\n+Customers | where Education contains 'degree' | order by reverse(FirstName);\n+print '-- parse_csv()';\n+print parse_csv('');\n+print parse_csv(65); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT }\n+print parse_csv('aaa');\n+print result=parse_csv('aa,b,cc');\n+print result_multi_record=parse_csv('record1,a,b,c\\nrecord2,x,y,z');\n+-- print result=parse_csv('aa,\"b,b,b\",cc,\"Escaping quotes: \"\"Title\"\"\",\"line1\\nline2\"'); -> [\"aa\",\"b,b,b\",\"cc\",\"Escaping quotes: \\\"Title\\\"\",\"line1\\nline2\"]\n+-- print parse_csv(strcat(strcat_delim(',', 'aa', '\"b,b,b\"', 'cc', '\"Escaping quotes: \"\"Title\"\"\"', '\"line1\\nline2\"'), '\\r\\n', strcat_delim(',', 'asd', 'qcf'))); -> [\"aa\",\"b,b,b\",\"cc\",\"Escaping quotes: \\\"Title\\\"\",\"line1\\nline2\"]\ndiff --git a/tests/queries/0_stateless/02366_kql_mvexpand.reference b/tests/queries/0_stateless/02366_kql_mvexpand.reference\nnew file mode 100644\nindex 000000000000..25be070eb0b7\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_mvexpand.reference\n@@ -0,0 +1,65 @@\n+-- mv-expand --\n+-- mv_expand_test_table | mv-expand c --\n+1\t['Salmon','Steak','Chicken']\t1\t[5,6,7,8]\n+1\t['Salmon','Steak','Chicken']\t2\t[5,6,7,8]\n+1\t['Salmon','Steak','Chicken']\t3\t[5,6,7,8]\n+1\t['Salmon','Steak','Chicken']\t4\t[5,6,7,8]\n+-- mv_expand_test_table | mv-expand c, d --\n+1\t['Salmon','Steak','Chicken']\t1\t5\n+1\t['Salmon','Steak','Chicken']\t2\t6\n+1\t['Salmon','Steak','Chicken']\t3\t7\n+1\t['Salmon','Steak','Chicken']\t4\t8\n+-- mv_expand_test_table | mv-expand b | mv-expand c --\n+1\tSalmon\t1\t[5,6,7,8]\n+1\tSalmon\t2\t[5,6,7,8]\n+1\tSalmon\t3\t[5,6,7,8]\n+1\tSalmon\t4\t[5,6,7,8]\n+1\tSteak\t1\t[5,6,7,8]\n+1\tSteak\t2\t[5,6,7,8]\n+1\tSteak\t3\t[5,6,7,8]\n+1\tSteak\t4\t[5,6,7,8]\n+1\tChicken\t1\t[5,6,7,8]\n+1\tChicken\t2\t[5,6,7,8]\n+1\tChicken\t3\t[5,6,7,8]\n+1\tChicken\t4\t[5,6,7,8]\n+-- mv_expand_test_table | mv-expand with_itemindex=index b, c, d --\n+0\t1\tSalmon\t1\t5\n+1\t1\tSteak\t2\t6\n+2\t1\tChicken\t3\t7\n+3\t1\t\t4\t8\n+-- mv_expand_test_table | mv-expand array_concat(c,d) --\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t1\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t2\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t3\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t4\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t5\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t6\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t7\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t8\n+-- mv_expand_test_table | mv-expand x = c, y = d --\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t1\t5\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t2\t6\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t3\t7\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t4\t8\n+-- mv_expand_test_table | mv-expand xy = array_concat(c, d) --\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t1\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t2\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t3\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t4\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t5\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t6\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t7\n+1\t['Salmon','Steak','Chicken']\t[1,2,3,4]\t[5,6,7,8]\t8\n+-- mv_expand_test_table | mv-expand xy = array_concat(c, d) limit 2| summarize count() by xy --\n+1\t1\n+2\t1\n+-- mv_expand_test_table | mv-expand with_itemindex=index c,d to typeof(bool) --\n+0\t1\t['Salmon','Steak','Chicken']\t1\ttrue\n+1\t1\t['Salmon','Steak','Chicken']\t2\ttrue\n+2\t1\t['Salmon','Steak','Chicken']\t3\ttrue\n+3\t1\t['Salmon','Steak','Chicken']\t4\ttrue\n+-- mv_expand_test_table | mv-expand c to typeof(bool) --\n+1\t['Salmon','Steak','Chicken']\t[5,6,7,8]\ttrue\n+1\t['Salmon','Steak','Chicken']\t[5,6,7,8]\ttrue\n+1\t['Salmon','Steak','Chicken']\t[5,6,7,8]\ttrue\n+1\t['Salmon','Steak','Chicken']\t[5,6,7,8]\ttrue\ndiff --git a/tests/queries/0_stateless/02366_kql_mvexpand.sql b/tests/queries/0_stateless/02366_kql_mvexpand.sql\nnew file mode 100644\nindex 000000000000..e77986096463\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_mvexpand.sql\n@@ -0,0 +1,35 @@\n+-- datatable(a: int, b: dynamic, c: dynamic, d: dynamic) [\n+--    1, dynamic(['Salmon', 'Steak', 'Chicken']), dynamic([1, 2, 3, 4]), dynamic([5, 6, 7, 8])\n+-- ]\n+\n+DROP TABLE IF EXISTS mv_expand_test_table;\n+CREATE TABLE mv_expand_test_table\n+(    \n+   a UInt8,\n+   b Array(String),\n+   c Array(Int8),\n+   d Array(Int8)\n+) ENGINE = Memory;\n+INSERT INTO mv_expand_test_table VALUES (1, ['Salmon', 'Steak','Chicken'],[1,2,3,4],[5,6,7,8]);\n+set dialect='kusto';\n+print '-- mv-expand --';\n+print '-- mv_expand_test_table | mv-expand c --';\n+mv_expand_test_table | mv-expand c;\n+print '-- mv_expand_test_table | mv-expand c, d --';\n+mv_expand_test_table | mv-expand c, d;\n+print '-- mv_expand_test_table | mv-expand b | mv-expand c --';\n+mv_expand_test_table | mv-expand b | mv-expand c;\n+print '-- mv_expand_test_table | mv-expand with_itemindex=index b, c, d --';\n+mv_expand_test_table | mv-expand with_itemindex=index b, c, d;\n+print '-- mv_expand_test_table | mv-expand array_concat(c,d) --';\n+mv_expand_test_table | mv-expand array_concat(c,d);\n+print '-- mv_expand_test_table | mv-expand x = c, y = d --';\n+mv_expand_test_table | mv-expand x = c, y = d;\n+print '-- mv_expand_test_table | mv-expand xy = array_concat(c, d) --';\n+mv_expand_test_table | mv-expand xy = array_concat(c, d);\n+print '-- mv_expand_test_table | mv-expand xy = array_concat(c, d) limit 2| summarize count() by xy --';\n+mv_expand_test_table | mv-expand xy = array_concat(c, d) limit 2| summarize count() by xy;\n+print '-- mv_expand_test_table | mv-expand with_itemindex=index c,d to typeof(bool) --';\n+mv_expand_test_table | mv-expand with_itemindex=index c,d to typeof(bool);\n+print '-- mv_expand_test_table | mv-expand c to typeof(bool) --';\n+mv_expand_test_table | mv-expand c to typeof(bool);\ndiff --git a/tests/queries/0_stateless/02366_kql_native_interval_format.reference b/tests/queries/0_stateless/02366_kql_native_interval_format.reference\nnew file mode 100644\nindex 000000000000..8a12c6885c4e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_native_interval_format.reference\n@@ -0,0 +1,23 @@\n+numeric\n+kusto\n+00:00:00\n+00:00:00.0000001\n+00:00:00.0010000\n+00:00:42\n+01:06:00\n+2.18:00:00\n+5.00:00:00\n+7.00:00:00\n+14.00:00:00\n+('00:01:12','21.00:00:00','00:00:00.0000002')\n+numeric\n+99\n+100\n+1\n+42\n+66\n+66\n+5\n+1\n+2\n+(72,3,200)\ndiff --git a/tests/queries/0_stateless/02366_kql_native_interval_format.sql.j2 b/tests/queries/0_stateless/02366_kql_native_interval_format.sql.j2\nnew file mode 100644\nindex 000000000000..0731687222da\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_native_interval_format.sql.j2\n@@ -0,0 +1,16 @@\n+select value from system.settings where name = 'interval_output_format';\n+\n+{% for format in ['kusto', 'numeric'] -%}\n+select '{{ format }}';\n+set interval_output_format = '{{ format }}';\n+select toIntervalNanosecond(99);\n+select toIntervalNanosecond(100);\n+select toIntervalMillisecond(1);\n+select toIntervalSecond(42);\n+select toIntervalMinute(66);\n+select toIntervalHour(66);\n+select toIntervalDay(5);\n+select toIntervalWeek(1);\n+select toIntervalWeek(2);\n+select toIntervalSecond(72) + toIntervalWeek(3) + toIntervalNanosecond(200);\n+{% endfor -%}\ndiff --git a/tests/queries/0_stateless/02366_kql_operator_in_sql.reference b/tests/queries/0_stateless/02366_kql_operator_in_sql.reference\nnew file mode 100644\nindex 000000000000..4e0987aa5c38\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_operator_in_sql.reference\n@@ -0,0 +1,60 @@\n+-- #1 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #2 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #3 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #4 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #5 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #6 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #7 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #8 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #9 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #10 --\n+-- #11 --\n+-- #12 --\n+-- #13 --\n+-- #14 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\n+-- #15 --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement abcd defg\tBachelors\t33\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Apple\t\tSkilled Manual\tBachelors\t28\ndiff --git a/tests/queries/0_stateless/02366_kql_operator_in_sql.sql b/tests/queries/0_stateless/02366_kql_operator_in_sql.sql\nnew file mode 100644\nindex 000000000000..0b02faa06807\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_operator_in_sql.sql\n@@ -0,0 +1,42 @@\n+DROP TABLE IF EXISTS Customers;\n+CREATE TABLE Customers\n+(    \n+    FirstName Nullable(String),\n+    LastName String, \n+    Occupation String,\n+    Education String,\n+    Age Nullable(UInt8)\n+) ENGINE = Memory;\n+\n+INSERT INTO Customers VALUES  ('Theodore','Diaz','Skilled Manual','Bachelors',28),('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);\n+Select '-- #1 --' ;\n+select * from kql($$Customers | where FirstName !in ('Peter', 'Latoya')$$);\n+Select '-- #2 --' ;\n+select * from kql($$Customers | where FirstName !in (\"test\", \"test2\")$$);\n+Select '-- #3 --' ;\n+select * from kql($$Customers | where FirstName !contains 'Pet'$$);\n+Select '-- #4 --' ;\n+select * from kql($$Customers | where FirstName !contains_cs 'Pet'$$);\n+Select '-- #5 --' ;\n+select * from kql($$Customers | where FirstName !endswith 'ter'$$);\n+Select '-- #6 --' ;\n+select * from kql($$Customers | where FirstName !endswith_cs 'ter'$$);\n+Select '-- #7 --' ;\n+select * from kql($$Customers | where FirstName != 'Peter'$$);\n+Select '-- #8 --' ;\n+select * from kql($$Customers | where FirstName !has 'Peter'$$);\n+Select '-- #9 --' ;\n+select * from kql($$Customers | where FirstName !has_cs 'peter'$$);\n+Select '-- #10 --' ;\n+-- select * from kql($$Customers | where FirstName !hasprefix 'Peter'$$); -- will enable when analyzer fixed `and` issue\n+Select '-- #11 --' ;\n+--select * from kql($$Customers | where FirstName !hasprefix_cs 'Peter'$$);\n+Select '-- #12 --' ;\n+--select * from kql($$Customers | where FirstName !hassuffix 'Peter'$$);\n+Select '-- #13 --' ;\n+--select * from kql($$Customers | where FirstName !hassuffix_cs 'Peter'$$);\n+Select '-- #14 --' ;\n+select * from kql($$Customers | where FirstName !startswith 'Peter'$$);\n+Select '-- #15 --' ;\n+select * from kql($$Customers | where FirstName !startswith_cs 'Peter'$$);\n+DROP TABLE IF EXISTS Customers;\ndiff --git a/tests/queries/0_stateless/02366_kql_summarize.reference b/tests/queries/0_stateless/02366_kql_summarize.reference\nnew file mode 100644\nindex 000000000000..aeb42feb6bea\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_summarize.reference\n@@ -0,0 +1,92 @@\n+-- test summarize --\n+12\t25\t46\t32.416666666666664\t389\n+Skilled Manual\t5\t26\t36\t30.2\t151\n+Professional\t6\t25\t46\t34.166666666666664\t205\n+Management abcd defg\t1\t33\t33\t33\t33\n+Skilled Manual\t0\n+Professional\t2\n+Management abcd defg\t0\n+Skilled Manual\t36\n+Professional\t38\n+Management abcd defg\t33\n+Skilled Manual\t26\n+Professional\t25\n+Management abcd defg\t33\n+Skilled Manual\t30.2\n+Professional\t29.25\n+Management abcd defg\t33\n+Skilled Manual\t151\n+Professional\t117\n+Management abcd defg\t33\n+4\n+2\n+40\t2\n+30\t4\n+20\t6\n+Skilled Manual\t5\n+Professional\t6\n+Management abcd defg\t1\n+-- make_list() --\n+Skilled Manual\t['Bachelors','Graduate Degree','High School','Partial College','Bachelors']\n+Professional\t['Graduate Degree','Partial College','Partial College','Partial College','Partial College','Partial College']\n+Management abcd defg\t['Bachelors']\n+Skilled Manual\t['Bachelors','Graduate Degree']\n+Professional\t['Graduate Degree','Partial College']\n+Management abcd defg\t['Bachelors']\n+-- make_list_if() --\n+Skilled Manual\t['Edward','Christine']\n+Professional\t['Dalton','Angel']\n+Management abcd defg\t['Stephanie']\n+Skilled Manual\t['Edward']\n+Professional\t['Dalton']\n+Management abcd defg\t['Stephanie']\n+-- make_set() --\n+Skilled Manual\t['Graduate Degree','High School','Partial College','Bachelors']\n+Professional\t['Graduate Degree','Partial College']\n+Management abcd defg\t['Bachelors']\n+Skilled Manual\t['Graduate Degree','Bachelors']\n+Professional\t['Graduate Degree','Partial College']\n+Management abcd defg\t['Bachelors']\n+-- make_set_if() --\n+Skilled Manual\t['Partial College','High School']\n+Professional\t['Partial College']\n+Management abcd defg\t['Bachelors']\n+Skilled Manual\t['High School']\n+Professional\t['Partial College']\n+Management abcd defg\t['Bachelors']\n+-- stdev() --\n+6.855102059227432\n+-- stdevif() --\n+7.557189365836421\n+-- binary_all_and --\n+42\n+-- binary_all_or --\n+46\n+-- binary_all_xor --\n+4\n+43.8\n+25.55\t30.5\t43.8\n+30.5\n+35\n+[25,35,45]\n+-- Summarize following sort --\n+Skilled Manual\t5\n+Professional\t6\n+Management abcd defg\t1\n+-- summarize with bin --\n+0\t1\n+245000\t2\n+0\t1\n+245\t2\n+0\t1\n+245\t2\n+2015-10-12 00:00:00.000000000\n+2016-10-12 00:00:00.000000000\n+-- make_list_with_nulls --\n+['Theodore','Stephanie','Peter','Latoya','Joshua','Edward','Dalton','Christine','Cameron','Angel','Apple',NULL]\n+Skilled Manual\t['Theodore','Peter','Edward','Christine','Apple']\n+Professional\t['Latoya','Joshua','Dalton','Cameron','Angel',NULL]\n+Management abcd defg\t['Stephanie']\n+Skilled Manual\t['Theodore','Peter','Edward','Christine','Apple']\t[28,26,36,33,28]\n+Professional\t['Latoya','Joshua','Dalton','Cameron','Angel',NULL]\t[25,26,42,28,46,38]\n+Management abcd defg\t['Stephanie']\t[33]\ndiff --git a/tests/queries/0_stateless/02366_kql_summarize.sql b/tests/queries/0_stateless/02366_kql_summarize.sql\nnew file mode 100644\nindex 000000000000..21a1b643d987\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_summarize.sql\n@@ -0,0 +1,102 @@\n+-- datatable(FirstName:string, LastName:string, Occupation:string, Education:string, Age:int) [\n+--     'Theodore', 'Diaz', 'Skilled Manual', 'Bachelors', 28, \n+--     'Stephanie', 'Cox', 'Management abcd defg', 'Bachelors', 33, \n+--     'Peter', 'Nara', 'Skilled Manual', 'Graduate Degree', 26, \n+--     'Latoya', 'Shen', 'Professional', 'Graduate Degree', 25, \n+--     'Joshua', 'Lee', 'Professional', 'Partial College', 26, \n+--     'Edward', 'Hernandez', 'Skilled Manual', 'High School', 36, \n+--     'Dalton', 'Wood', 'Professional', 'Partial College', 42, \n+--     'Christine', 'Nara', 'Skilled Manual', 'Partial College', 33, \n+--     'Cameron', 'Rodriguez', 'Professional', 'Partial College', 28, \n+--     'Angel', 'Stewart', 'Professional', 'Partial College', 46, \n+--     'Apple', '', 'Skilled Manual', 'Bachelors', 28, \n+--     dynamic(null), 'why', 'Professional', 'Partial College', 38\n+-- ]\n+\n+DROP TABLE IF EXISTS Customers;\n+CREATE TABLE Customers\n+(    \n+    FirstName Nullable(String),\n+    LastName String, \n+    Occupation String,\n+    Education String,\n+    Age Nullable(UInt8)\n+) ENGINE = Memory;\n+\n+INSERT INTO Customers VALUES  ('Theodore','Diaz','Skilled Manual','Bachelors',28),('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Joshua','Lee','Professional','Partial College',26),('Edward','Hernandez','Skilled Manual','High School',36),('Dalton','Wood','Professional','Partial College',42),('Christine','Nara','Skilled Manual','Partial College',33),('Cameron','Rodriguez','Professional','Partial College',28),('Angel','Stewart','Professional','Partial College',46),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);\n+\n+drop table if exists EventLog;\n+create table EventLog\n+(\n+    LogEntry String,\n+    Created Int64\n+) ENGINE = Memory;\n+\n+insert into EventLog values ('Darth Vader has entered the room.', 546), ('Rambo is suspciously looking at Darth Vader.', 245234), ('Darth Sidious electrocutes both using Force Lightning.', 245554);\n+\n+drop table if exists Dates;\n+create table Dates\n+(\n+    EventTime DateTime,\n+) ENGINE = Memory;\n+\n+Insert into Dates VALUES ('2015-10-12') , ('2016-10-12')\n+Select '-- test summarize --' ;\n+set dialect='kusto';\n+Customers | summarize count(), min(Age), max(Age), avg(Age), sum(Age);\n+Customers | summarize count(), min(Age), max(Age), avg(Age), sum(Age) by Occupation | order by Occupation;\n+Customers | summarize countif(Age>40) by Occupation | order by Occupation;\n+Customers | summarize MyMax = maxif(Age, Age<40) by Occupation | order by Occupation;\n+Customers | summarize MyMin = minif(Age, Age<40) by Occupation | order by Occupation;\n+Customers | summarize MyAvg = avgif(Age, Age<40) by Occupation | order by Occupation;\n+Customers | summarize MySum = sumif(Age, Age<40) by Occupation | order by Occupation;\n+Customers | summarize dcount(Education);\n+Customers | summarize dcountif(Education, Occupation=='Professional');\n+Customers | summarize count_ = count() by bin(Age, 10) | order by count_ asc;\n+Customers | summarize job_count = count() by Occupation | where job_count > 0 | order by Occupation;\n+Customers | summarize 'Edu Count'=count() by Education | sort by 'Edu Count' desc; -- { clientError 62 }\n+\n+print '-- make_list() --';\n+Customers | summarize f_list = make_list(Education) by Occupation | sort by Occupation;\n+Customers | summarize f_list = make_list(Education, 2) by Occupation | sort by Occupation;\n+print '-- make_list_if() --';\n+Customers | summarize f_list = make_list_if(FirstName, Age>30) by Occupation | sort by Occupation;\n+Customers | summarize f_list = make_list_if(FirstName, Age>30, 1) by Occupation | sort by Occupation;\n+print '-- make_set() --';\n+Customers | summarize f_list = make_set(Education) by Occupation | sort by Occupation;\n+Customers | summarize f_list = make_set(Education, 2) by Occupation | sort by Occupation;\n+print '-- make_set_if() --';\n+Customers | summarize f_list = make_set_if(Education, Age>30) by Occupation | sort by Occupation;\n+Customers | summarize f_list = make_set_if(Education, Age>30, 1) by Occupation | sort by Occupation;\n+print '-- stdev() --';\n+Customers | project Age | summarize stdev(Age);\n+print '-- stdevif() --';\n+Customers | project Age | summarize stdevif(Age, Age%2==0);\n+print '-- binary_all_and --';\n+Customers | project Age | where Age > 40 | summarize binary_all_and(Age);\n+print '-- binary_all_or --';\n+Customers | project Age | where Age > 40 | summarize binary_all_or(Age);\n+print '-- binary_all_xor --';\n+Customers | project Age | where Age > 40 | summarize binary_all_xor(Age);\n+\n+Customers | project Age | summarize percentile(Age, 95);\n+Customers | project Age | summarize percentiles(Age, 5, 50, 95)|project round(percentiles_Age[0],2),round(percentiles_Age[1],2),round(percentiles_Age[2],2);\n+Customers | project Age | summarize percentiles(Age, 5, 50, 95)[1];\n+Customers | summarize w=count() by AgeBucket=bin(Age, 5) | summarize percentilew(AgeBucket, w, 75);\n+Customers | summarize w=count() by AgeBucket=bin(Age, 5) | summarize percentilesw(AgeBucket, w, 50, 75, 99.9);\n+\n+print '-- Summarize following sort --';\n+Customers | sort by FirstName | summarize count() by Occupation | sort by Occupation;\n+\n+print '-- summarize with bin --';\n+EventLog | summarize count=count() by bin(Created, 1000);\n+EventLog | summarize count=count() by bin(unixtime_seconds_todatetime(Created/1000), 1s);\n+EventLog | summarize count=count() by time_label=bin(Created/1000, 1s);\n+Dates | project bin(datetime(EventTime), 1m);\n+print '-- make_list_with_nulls --';\n+Customers | summarize t = make_list_with_nulls(FirstName);\n+Customers | summarize f_list = make_list_with_nulls(FirstName) by Occupation | sort by Occupation;\n+Customers | summarize f_list = make_list_with_nulls(FirstName), a_list = make_list_with_nulls(Age) by Occupation | sort by Occupation;\n+-- TODO:\n+-- arg_max()\n+-- arg_min()\ndiff --git a/tests/queries/0_stateless/02366_kql_tabular.reference b/tests/queries/0_stateless/02366_kql_tabular.reference\nnew file mode 100644\nindex 000000000000..e70c02ce34fa\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_tabular.reference\n@@ -0,0 +1,139 @@\n+-- test Query only has table name: --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\t28\n+Stephanie\tCox\tManagement\tBachelors\t33\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Latoya\tShen\tProfessional\tGraduate Degree\t25\n+Joshua\tLee\tProfessional\tPartial College\t26\n+Edward\tHernandez\tSkilled Manual\tHigh School\t36\n+Dalton\tWood\tProfessional\tPartial College\t42\n+Christine\tNara\tSkilled Manual\tPartial College\t33\n+Cameron\tRodriguez\tProfessional\tPartial College\t28\n+Angel\tStewart\tProfessional\tPartial College\t46\n+-- Query has Column Selection --\n+Theodore\tDiaz\tSkilled Manual\n+Stephanie\tCox\tManagement\n+Peter\tNara\tSkilled Manual\n+Latoya\tShen\tProfessional\n+Joshua\tLee\tProfessional\n+Edward\tHernandez\tSkilled Manual\n+Dalton\tWood\tProfessional\n+Christine\tNara\tSkilled Manual\n+Cameron\tRodriguez\tProfessional\n+Angel\tStewart\tProfessional\n+-- Query has limit --\n+Theodore\tDiaz\tSkilled Manual\n+Stephanie\tCox\tManagement\n+Peter\tNara\tSkilled Manual\n+Latoya\tShen\tProfessional\n+Joshua\tLee\tProfessional\n+Theodore\tDiaz\tSkilled Manual\n+Stephanie\tCox\tManagement\n+Peter\tNara\tSkilled Manual\n+Latoya\tShen\tProfessional\n+Joshua\tLee\tProfessional\n+-- Query has second limit with bigger value --\n+Theodore\tDiaz\tSkilled Manual\n+Stephanie\tCox\tManagement\n+Peter\tNara\tSkilled Manual\n+Latoya\tShen\tProfessional\n+Joshua\tLee\tProfessional\n+-- Query has second limit with smaller value --\n+Theodore\tDiaz\tSkilled Manual\n+Stephanie\tCox\tManagement\n+Peter\tNara\tSkilled Manual\n+-- Query has second Column selection --\n+Theodore\tDiaz\n+Stephanie\tCox\n+Peter\tNara\n+-- Query has second Column selection with extra column --\n+-- Query with desc sort --\n+Theodore\n+Stephanie\n+Peter\n+Latoya\n+Joshua\n+Skilled Manual\n+Skilled Manual\n+Professional\n+Professional\n+Management\n+-- Query with asc sort --\n+Management\n+Professional\n+Professional\n+Skilled Manual\n+Skilled Manual\n+-- Query with sort (without keyword asc desc) --\n+Theodore\n+Stephanie\n+Peter\n+Latoya\n+Joshua\n+Skilled Manual\n+Skilled Manual\n+Professional\n+Professional\n+Management\n+-- Query with sort 2 Columns with different direction --\n+Stephanie\tCox\tManagement\n+Latoya\tShen\tProfessional\n+Joshua\tLee\tProfessional\n+Peter\tNara\tSkilled Manual\n+Theodore\tDiaz\tSkilled Manual\n+-- Query with second sort --\n+Stephanie\tCox\tManagement\n+Latoya\tShen\tProfessional\n+Joshua\tLee\tProfessional\n+Peter\tNara\tSkilled Manual\n+Theodore\tDiaz\tSkilled Manual\n+-- Test String Equals (==) --\n+Theodore\tDiaz\tSkilled Manual\n+Peter\tNara\tSkilled Manual\n+Edward\tHernandez\tSkilled Manual\n+Christine\tNara\tSkilled Manual\n+-- Test String Not equals (!=) --\n+Stephanie\tCox\tManagement\n+Latoya\tShen\tProfessional\n+Joshua\tLee\tProfessional\n+Dalton\tWood\tProfessional\n+Cameron\tRodriguez\tProfessional\n+Angel\tStewart\tProfessional\n+-- Test Filter using a list (in) --\n+Theodore\tDiaz\tSkilled Manual\tBachelors\n+Stephanie\tCox\tManagement\tBachelors\n+Edward\tHernandez\tSkilled Manual\tHigh School\n+-- Test Filter using a list (!in) --\n+Peter\tNara\tSkilled Manual\tGraduate Degree\n+Latoya\tShen\tProfessional\tGraduate Degree\n+Joshua\tLee\tProfessional\tPartial College\n+Dalton\tWood\tProfessional\tPartial College\n+Christine\tNara\tSkilled Manual\tPartial College\n+Cameron\tRodriguez\tProfessional\tPartial College\n+Angel\tStewart\tProfessional\tPartial College\n+-- Test Filter using common string operations (contains_cs) --\n+Joshua\tLee\tProfessional\tPartial College\n+Dalton\tWood\tProfessional\tPartial College\n+Christine\tNara\tSkilled Manual\tPartial College\n+Cameron\tRodriguez\tProfessional\tPartial College\n+Angel\tStewart\tProfessional\tPartial College\n+-- Test Filter using common string operations (startswith_cs) --\n+Latoya\tShen\tProfessional\tGraduate Degree\n+Joshua\tLee\tProfessional\tPartial College\n+Dalton\tWood\tProfessional\tPartial College\n+Cameron\tRodriguez\tProfessional\tPartial College\n+Angel\tStewart\tProfessional\tPartial College\n+-- Test Filter using common string operations (endswith_cs) --\n+Latoya\tShen\tProfessional\tGraduate Degree\n+Joshua\tLee\tProfessional\tPartial College\n+-- Test Filter using numerical equal (==) --\n+Peter\tNara\tSkilled Manual\tGraduate Degree\t26\n+Joshua\tLee\tProfessional\tPartial College\t26\n+-- Test Filter using numerical great and less (> , <) --\n+Stephanie\tCox\tManagement\tBachelors\t33\n+Edward\tHernandez\tSkilled Manual\tHigh School\t36\n+Christine\tNara\tSkilled Manual\tPartial College\t33\n+-- Test Filter using multi where --\n+Dalton\tWood\tProfessional\tPartial College\t42\n+Angel\tStewart\tProfessional\tPartial College\t46\n+-- Complex query with unknown function --\n+-- Missing column in front of startsWith --\ndiff --git a/tests/queries/0_stateless/02366_kql_tabular.sql b/tests/queries/0_stateless/02366_kql_tabular.sql\nnew file mode 100644\nindex 000000000000..1a3d1ed92ebf\n--- /dev/null\n+++ b/tests/queries/0_stateless/02366_kql_tabular.sql\n@@ -0,0 +1,93 @@\n+DROP TABLE IF EXISTS Customers;\n+CREATE TABLE Customers\n+(    \n+    FirstName Nullable(String),\n+    LastName String, \n+    Occupation String,\n+    Education String,\n+    Age Nullable(UInt8)\n+) ENGINE = Memory;\n+\n+INSERT INTO Customers VALUES ('Theodore','Diaz','Skilled Manual','Bachelors',28), ('Stephanie','Cox','Management','Bachelors',33), ('Peter','Nara','Skilled Manual','Graduate Degree',26), ('Latoya','Shen','Professional','Graduate Degree',25), ('Joshua','Lee','Professional','Partial College',26), ('Edward','Hernandez','Skilled Manual','High School',36), ('Dalton','Wood','Professional','Partial College',42), ('Christine','Nara','Skilled Manual','Partial College',33), ('Cameron','Rodriguez','Professional','Partial College',28), ('Angel','Stewart','Professional','Partial College',46);\n+\n+set dialect='kusto';\n+print '-- test Query only has table name: --';\n+Customers;\n+\n+print '-- Query has Column Selection --';\n+Customers | project FirstName,LastName,Occupation;\n+\n+print '-- Query has limit --';\n+Customers | project FirstName,LastName,Occupation | take 5;\n+Customers | project FirstName,LastName,Occupation | limit 5;\n+\n+print '-- Query has second limit with bigger value --';\n+Customers | project FirstName,LastName,Occupation | take 5 | take 7;\n+\n+print '-- Query has second limit with smaller value --';\n+Customers | project FirstName,LastName,Occupation | take 5 | take 3;\n+\n+print '-- Query has second Column selection --';\n+Customers | project FirstName,LastName,Occupation | take 3 | project FirstName,LastName;\n+\n+print '-- Query has second Column selection with extra column --';\n+Customers| project FirstName,LastName,Occupation | take 3 | project FirstName,LastName,Education;-- { serverError 47 }\n+\n+print '-- Query with desc sort --';\n+Customers | project FirstName | take 5 | sort by FirstName desc;\n+Customers | project Occupation | take 5 | order by Occupation desc;\n+\n+print '-- Query with asc sort --';\n+Customers | project Occupation | take 5 | sort by Occupation asc;\n+\n+print '-- Query with sort (without keyword asc desc) --';\n+Customers | project FirstName | take 5 | sort by FirstName;\n+Customers | project Occupation | take 5 | order by Occupation;\n+\n+print '-- Query with sort 2 Columns with different direction --';\n+Customers | project FirstName,LastName,Occupation | take 5 | sort by Occupation asc, LastName desc;\n+\n+print '-- Query with second sort --';\n+Customers | project FirstName,LastName,Occupation | take 5 | sort by Occupation desc |sort by Occupation asc, LastName desc;\n+\n+print '-- Test String Equals (==) --';\n+Customers | project FirstName,LastName,Occupation | where Occupation == 'Skilled Manual';\n+\n+print '-- Test String Not equals (!=) --';\n+Customers | project FirstName,LastName,Occupation | where Occupation != 'Skilled Manual';\n+\n+print '-- Test Filter using a list (in) --';\n+Customers | project FirstName,LastName,Occupation,Education | where Education in  ('Bachelors','High School');\n+\n+print '-- Test Filter using a list (!in) --';\n+set dialect='kusto';\n+Customers | project FirstName,LastName,Occupation,Education | where Education !in  ('Bachelors','High School');\n+\n+print '-- Test Filter using common string operations (contains_cs) --';\n+Customers | project FirstName,LastName,Occupation,Education | where Education contains_cs 'Coll';\n+\n+print '-- Test Filter using common string operations (startswith_cs) --';\n+Customers | project FirstName,LastName,Occupation,Education | where Occupation startswith_cs 'Prof';\n+\n+print '-- Test Filter using common string operations (endswith_cs) --';\n+Customers | project FirstName,LastName,Occupation,Education | where FirstName endswith_cs 'a';\n+\n+print '-- Test Filter using numerical equal (==) --';\n+Customers | project FirstName,LastName,Occupation,Education,Age | where Age == 26;\n+\n+print '-- Test Filter using numerical great and less (> , <) --';\n+Customers | project FirstName,LastName,Occupation,Education,Age | where Age > 30 and Age < 40;\n+\n+print '-- Test Filter using multi where --';\n+Customers | project FirstName,LastName,Occupation,Education,Age | where Age > 30 | where Occupation == 'Professional';\n+\n+print '-- Complex query with unknown function --';\n+hits | where CounterID == 62 and EventDate >= '2013-07-14' and EventDate <= '2013-07-15' and IsRefresh == 0 and DontCountHits == 0 | summarize count() by d=bin(poopoo(EventTime), 1m) | order by d | limit 10; -- { clientError UNKNOWN_FUNCTION }\n+\n+print '-- Missing column in front of startsWith --';\n+StormEvents | where startswith \"W\" | summarize Count=count() by State; -- { clientError SYNTAX_ERROR }\n+\n+SET max_query_size = 55;\n+SET dialect='kusto';\n+Customers | where Education contains 'degree' | order by LastName; -- { serverError 62 }\n+SET max_query_size=262144;\n",
  "problem_statement": "Experimental KQL: Clickhouse server v24.1.1.1 `SEGV` inside `DB::ParserKQLQuery::parseImpl`\n**Describe the bug**\r\n\r\nClickHouse server version 24.1.1.1 received SIGSEGV signal\r\nIt was found by an in-development fuzzer of WINGFUZZ.\r\n\r\n**How to reproduce**\r\n\r\nThe SQL statement to reproduce **(it is need to execute line by line)**: [poc-1.sql](https://drive.google.com/file/d/1LksdMH1DYP1s6GqlJ6dwbGRBfcRSsrsV/view?usp=sharing)\r\n\r\n\r\n**Stacktrace**\r\n\r\n```txt\r\nThread 3 \"HTTPHandler\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7fff3cced640 (LWP 704540)]\r\nDB::ParserKQLQuery::parseImpl (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/Kusto/ParserKQLQuery.cpp:376\r\n376     ./build/./src/Parsers/Kusto/ParserKQLQuery.cpp: No such file or directory.\r\n(gdb) bt\r\n#0  DB::ParserKQLQuery::parseImpl (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/Kusto/ParserKQLQuery.cpp:376\r\n#1  0x0000000016ca6c2e in DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0::operator()() const (this=<optimized out>) at ./build/./src/Parsers/IParserBase.cpp:13\r\n#2  DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&) (pos=..., func=...) at ./src/Parsers/IParserBase.h:31\r\n#3  DB::IParserBase::parse (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/IParserBase.cpp:11\r\n#4  0x0000000016df9fda in DB::ParserKQLWithUnionQuery::parseImpl (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/Kusto/ParserKQLStatement.cpp:42\r\n#5  0x0000000016ca6c2e in DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0::operator()() const (this=<optimized out>) at ./build/./src/Parsers/IParserBase.cpp:13\r\n#6  DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&) (pos=..., func=...) at ./src/Parsers/IParserBase.h:31\r\n#7  DB::IParserBase::parse (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/IParserBase.cpp:11\r\n#8  0x0000000016df9e14 in DB::ParserKQLWithOutput::parseImpl (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/Kusto/ParserKQLStatement.cpp:28\r\n#9  0x0000000016ca6c2e in DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0::operator()() const (this=<optimized out>) at ./build/./src/Parsers/IParserBase.cpp:13\r\n#10 DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&) (pos=..., func=...) at ./src/Parsers/IParserBase.h:31\r\n#11 DB::IParserBase::parse (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/IParserBase.cpp:11\r\n#12 0x0000000016df9d58 in DB::ParserKQLStatement::parseImpl (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/Kusto/ParserKQLStatement.cpp:18\r\n#13 0x0000000016ca6c2e in DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0::operator()() const (this=<optimized out>) at ./build/./src/Parsers/IParserBase.cpp:13\r\n#14 DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::__1::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&) (pos=..., func=...) at ./src/Parsers/IParserBase.h:31\r\n#15 DB::IParserBase::parse (this=<optimized out>, pos=..., node=..., expected=...) at ./build/./src/Parsers/IParserBase.cpp:11\r\n#16 0x0000000016e590e2 in DB::tryParseKQLQuery (parser=...,\r\n    _out_query_end=@0x7fff3cce9240: 0x7ff844077f40 \"INSERT INTO DATE_INFO_DICT (TV, SHAMSI, HIJRI, MILADI, S_DAY, H_DAY, S_MONTH, H_MONTH, WEEK_DAY_NAME, DAY_NUMBER, HOLIDAY, WEEK_NAME) VALUES ('2017-04-01', '1396-01-12', '1438-07-04', '2017-04-01', 12\"...,\r\n    all_queries_end=all_queries_end@entry=0x7ff8440b7f41 \"\\377\", out_error_message=..., hilite=false, query_description=..., allow_multi_statements=<optimized out>, max_query_size=262144, max_parser_depth=1000, skip_insignificant=<optimized out>)\r\n    at ./build/./src/Parsers/Kusto/parseKQLQuery.cpp:350\r\n#17 0x0000000016e5dad9 in DB::parseKQLQueryAndMovePosition (parser=..., pos=<error reading variable: Cannot access memory at address 0x60012>, end=0x7ff8446e7f80 \"\\002\", end@entry=0x7ff8440b7f41 \"\\377\", query_description=..., allow_multi_statements=6,\r\n    max_query_size=231, max_query_size@entry=262144, max_parser_depth=399957032) at ./build/./src/Parsers/Kusto/parseKQLQuery.cpp:447\r\n#18 0x0000000016e5dca2 in DB::parseKQLQuery (parser=...,\r\n    begin=0x7ff844077f40 \"INSERT INTO DATE_INFO_DICT (TV, SHAMSI, HIJRI, MILADI, S_DAY, H_DAY, S_MONTH, H_MONTH, WEEK_DAY_NAME, DAY_NUMBER, HOLIDAY, WEEK_NAME) VALUES ('2017-04-01', '1396-01-12', '1438-07-04', '2017-04-01', 12\"..., end=0x7ff8446e7f80 \"\\002\",\r\n    end@entry=0x7ff8440b7f41 \"\\377\", query_description=..., max_query_size=131078, max_query_size@entry=262144, max_parser_depth=<optimized out>) at ./build/./src/Parsers/Kusto/parseKQLQuery.cpp:463\r\n#19 0x0000000014b1788e in DB::executeQueryImpl (\r\n    begin=begin@entry=0x7ff844077f40 \"INSERT INTO DATE_INFO_DICT (TV, SHAMSI, HIJRI, MILADI, S_DAY, H_DAY, S_MONTH, H_MONTH, WEEK_DAY_NAME, DAY_NUMBER, HOLIDAY, WEEK_NAME) VALUES ('2017-04-01', '1396-01-12', '1438-07-04', '2017-04-01', 12\"...,\r\n    end=end@entry=0x7ff8440b7f41 \"\\377\", context=..., flags=..., stage=DB::QueryProcessingStage::Complete, istr=0x7ff844105900) at ./build/./src/Interpreters/executeQuery.cpp:715\r\n#20 0x0000000014b23a3e in DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::__1::shared_ptr<DB::Context>, std::__1::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::__1::optional<DB::FormatSettings> const&, std::__1::function<void (DB::IOutputFormat&)>) (istr=..., ostr=..., allow_into_outfile=false, context=..., set_result_details=..., flags=..., output_format_settings=..., handle_exception_in_output_format=...) at ./build/./src/Interpreters/executeQuery.cpp:1396\r\n#21 0x00000000162b2cd4 in DB::HTTPHandler::processQuery (this=this@entry=0x7ff844101920, request=..., params=..., response=..., used_output=..., query_scope=..., write_event=...) at ./build/./src/Server/HTTPHandler.cpp:901\r\n#22 0x00000000162ba58a in DB::HTTPHandler::handleRequest (this=0x7ff844101920, request=..., response=..., write_event=...) at ./build/./src/Server/HTTPHandler.cpp:1102\r\n#23 0x0000000016389b4a in DB::HTTPServerConnection::run (this=0x7ff8443151f0) at ./build/./src/Server/HTTP/HTTPServerConnection.cpp:70\r\n#24 0x000000001758b7e8 in Poco::Net::TCPServerConnection::start (this=0x17d6dc28 <__afl_area_ptr>) at ./build/./base/poco/Net/src/TCPServerConnection.cpp:43\r\n#25 0x000000001758c2f3 in Poco::Net::TCPServerDispatcher::run (this=0x1b0b2830) at ./build/./base/poco/Net/src/TCPServerDispatcher.cpp:115\r\n#26 0x0000000017616d01 in Poco::PooledThread::run (this=0x1a1c6180) at ./build/./base/poco/Foundation/src/ThreadPool.cpp:188\r\n#27 0x000000001761351c in Poco::ThreadImpl::runnableEntry (pThread=<optimized out>) at ./base/poco/Foundation/src/Thread_POSIX.cpp:335\r\n#28 0x00007ffff7e08ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442\r\n#29 0x00007ffff7e9a850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n\r\n```\r\n\r\n**Server log**\r\n\r\n```txt\r\n2024.01.19 15:12:34.326756 [ 707037 ] {} <Fatal> BaseDaemon: ########## Short fault info ############\r\n2024.01.19 15:12:34.326807 [ 707037 ] {} <Fatal> BaseDaemon: (version 24.1.1.1, build id: 1319B83D2FDC4C3F91EFCCF1725FDD21F7D0ADBF, git hash: ce13b21d95e610593d49e5cadc1888e3313892ef) (from thread 704540) Received signal 11\r\n2024.01.19 15:12:34.326837 [ 707037 ] {} <Fatal> BaseDaemon: Signal description: Segmentation fault\r\n2024.01.19 15:12:34.326814 [ 704541 ] {} <Trace> DynamicQueryHandler: Request URI: /query?database=default&default_format=ODBCDriver2&session_id=clickhouse_odbc_11482216046058260007\r\n2024.01.19 15:12:34.326864 [ 707037 ] {} <Fatal> BaseDaemon: Address: 0x7ff8449e8010. Access: read. Attempted access has violated the permissions assigned to the memory area.\r\n2024.01.19 15:12:34.326912 [ 704541 ] {} <Debug> HTTP-Session: 21a7a92f-6564-46f5-861c-0107d0edf31a Authenticating user 'default' from 127.0.0.1:40954\r\n2024.01.19 15:12:34.326924 [ 707037 ] {} <Fatal> BaseDaemon: Stack trace: 0x0000000016e07aec 0x0000000016ca6c2e 0x0000000016df9fda 0x0000000016ca6c2e 0x0000000016df9e14 0x0000000016ca6c2e 0x0000000016df9d58 0x0000000016ca6c2e 0x0000000016e590e2 0x0000000016e5dad9 0x0000000016e5dca2 0x0000000014b1788e 0x0000000014b23a3e 0x00000000162b2cd4 0x00000000162ba58a 0x0000000016389b4a 0x000000001758b7e8 0x000000001758c2f3 0x0000000017616d01 0x000000001761351c 0x00007ffff7e08ac3 0x00007ffff7e9a850\r\n2024.01.19 15:12:34.326953 [ 707037 ] {} <Fatal> BaseDaemon: ########################################\r\n2024.01.19 15:12:34.326964 [ 707037 ] {} <Fatal> BaseDaemon: (version 24.1.1.1, build id: 1319B83D2FDC4C3F91EFCCF1725FDD21F7D0ADBF, git hash: ce13b21d95e610593d49e5cadc1888e3313892ef) (from thread 704540) (query_id: 52d46ce3-3daf-4745-8c96-daea0ba12382) (query: ) Received signal Segmentation fault (11)\r\n2024.01.19 15:12:34.326972 [ 707037 ] {} <Fatal> BaseDaemon: Address: 0x7ff8449e8010. Access: read. Attempted access has violated the permissions assigned to the memory area.\r\n2024.01.19 15:12:34.326989 [ 707037 ] {} <Fatal> BaseDaemon: Stack trace: 0x0000000016e07aec 0x0000000016ca6c2e 0x0000000016df9fda 0x0000000016ca6c2e 0x0000000016df9e14 0x0000000016ca6c2e 0x0000000016df9d58 0x0000000016ca6c2e 0x0000000016e590e2 0x0000000016e5dad9 0x0000000016e5dca2 0x0000000014b1788e 0x0000000014b23a3e 0x00000000162b2cd4 0x00000000162ba58a 0x0000000016389b4a 0x000000001758b7e8 0x000000001758c2f3 0x0000000017616d01 0x000000001761351c 0x00007ffff7e08ac3 0x00007ffff7e9a850\r\n2024.01.19 15:12:34.327000 [ 704541 ] {} <Debug> HTTP-Session: 21a7a92f-6564-46f5-861c-0107d0edf31a Authenticated with global context as user 94309d50-4f52-5250-31bd-74fecac179db\r\n2024.01.19 15:12:34.327051 [ 704541 ] {} <Debug> HTTP-Session: 21a7a92f-6564-46f5-861c-0107d0edf31a Creating named session context with name: clickhouse_odbc_11482216046058260007, user_id: 94309d50-4f52-5250-31bd-74fecac179db\r\n2024.01.19 15:12:34.327089 [ 704541 ] {} <Trace> NamedSessionsStorage: Reuse session from storage with session_id: clickhouse_odbc_11482216046058260007, user_id: 94309d50-4f52-5250-31bd-74fecac179db\r\n2024.01.19 15:12:34.358287 [ 704541 ] {} <Error> DynamicQueryHandler: Code: 373. DB::Exception: Session clickhouse_odbc_11482216046058260007 is locked by a concurrent client. (SESSION_IS_LOCKED), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. ./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x00000000175a3d18 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n1. ./build/./src/Common/Exception.cpp:96: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000b42f15c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2. ./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<String const&>(int, FormatStringHelperImpl<std::type_identity<String const&>::type>, String const&) @ 0x000000000294cfc7 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n3. ./build/./src/Interpreters/Session.cpp:133: DB::NamedSessionsStorage::acquireSession(std::shared_ptr<DB::Context const> const&, StrongTypedef<wide::integer<128ul, unsigned int>, DB::UUIDTag> const&, String const&, std::chrono::duration<long long, std::ratio<1l, 1000000000l>>, bool) @ 0x00000000146f738c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n4. ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::Session::makeSessionContext(String const&, std::chrono::duration<long long, std::ratio<1l, 1000000000l>>, bool) @ 0x00000000146f4d58 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n5. ./build/./src/Server/HTTPHandler.cpp:583: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162ad843 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162ba58a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ? @ 0x00007ffff7e08ac3 in ?\r\n13. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.379818 [ 707037 ] {} <Fatal> BaseDaemon: 3.1. inlined from ./src/Parsers/Lexer.h:102: DB::Token::isEnd() const\r\n2024.01.19 15:12:34.379868 [ 707037 ] {} <Fatal> BaseDaemon: 3. ./build/./src/Parsers/Kusto/ParserKQLQuery.cpp:376: DB::ParserKQLQuery::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000016e07aec in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.385430 [ 707037 ] {} <Fatal> BaseDaemon: 4.1. inlined from ./build/./src/Parsers/IParserBase.cpp:13: operator()\r\n2024.01.19 15:12:34.385467 [ 707037 ] {} <Fatal> BaseDaemon: 4.2. inlined from ./src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)\r\n2024.01.19 15:12:34.385490 [ 707037 ] {} <Fatal> BaseDaemon: 4. ./build/./src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000016ca6c2e in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.393114 [ 707037 ] {} <Fatal> BaseDaemon: 5. ./build/./src/Parsers/Kusto/ParserKQLStatement.cpp:42: DB::ParserKQLWithUnionQuery::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000016df9fda in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.398726 [ 707037 ] {} <Fatal> BaseDaemon: 6.1. inlined from ./build/./src/Parsers/IParserBase.cpp:13: operator()\r\n2024.01.19 15:12:34.398757 [ 707037 ] {} <Fatal> BaseDaemon: 6.2. inlined from ./src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)\r\n2024.01.19 15:12:34.398763 [ 707037 ] {} <Fatal> BaseDaemon: 6. ./build/./src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000016ca6c2e in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.410300 [ 707037 ] {} <Fatal> BaseDaemon: 7. ./build/./src/Parsers/Kusto/ParserKQLStatement.cpp:0: DB::ParserKQLWithOutput::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000016df9e14 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.420066 [ 707037 ] {} <Fatal> BaseDaemon: 8.1. inlined from ./build/./src/Parsers/IParserBase.cpp:13: operator()\r\n2024.01.19 15:12:34.420105 [ 707037 ] {} <Fatal> BaseDaemon: 8.2. inlined from ./src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)\r\n2024.01.19 15:12:34.420126 [ 707037 ] {} <Fatal> BaseDaemon: 8. ./build/./src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000016ca6c2e in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.431057 [ 707037 ] {} <Fatal> BaseDaemon: 9. ./build/./src/Parsers/Kusto/ParserKQLStatement.cpp:18: DB::ParserKQLStatement::parseImpl(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000016df9d58 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.438794 [ 704516 ] {} <Trace> BaseDaemon: Received signal -1\r\n2024.01.19 15:12:34.438898 [ 704516 ] {} <Fatal> BaseDaemon: (version 24.1.1.1, build id: 1319B83D2FDC4C3F91EFCCF1725FDD21F7D0ADBF, git hash: ce13b21d95e610593d49e5cadc1888e3313892ef) (from thread 704541) Terminate called for uncaught exception:\r\n2024.01.19 15:12:34.438917 [ 704516 ] {} <Fatal> BaseDaemon: Code: 210. DB::NetException: I/O error: Broken pipe, while writing to socket (127.0.0.1:5273 -> 127.0.0.1:40954). (NETWORK_ERROR), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. ./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x00000000175a3d18 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n1. ./build/./src/Common/Exception.cpp:96: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000b42f15c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2. ./contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String, String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&, String&&) @ 0x000000000b86575a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n3. ./build/./src/IO/WriteBufferFromPocoSocket.cpp:116: DB::WriteBufferFromPocoSocket::socketSendBytes(char const*, unsigned long) @ 0x000000000b864fe2 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n4. ./src/IO/WriteBufferFromString.h:0: DB::WriteBufferFromHTTPServerResponse::writeHeaderProgressImpl(char const*) @ 0x00000000163922f5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n5. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:82: DB::WriteBufferFromHTTPServerResponse::finishSendHeaders() @ 0x0000000016392803 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.438979 [ 704516 ] {} <Fatal> BaseDaemon:\r\n0. ./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x00000000175a3d18 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n1. ./build/./src/Common/Exception.cpp:96: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000b42f15c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2. ./contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String, String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&, String&&) @ 0x000000000b86575a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n3. ./build/./src/IO/WriteBufferFromPocoSocket.cpp:116: DB::WriteBufferFromPocoSocket::socketSendBytes(char const*, unsigned long) @ 0x000000000b864fe2 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n4. ./src/IO/WriteBufferFromString.h:0: DB::WriteBufferFromHTTPServerResponse::writeHeaderProgressImpl(char const*) @ 0x00000000163922f5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n5. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:82: DB::WriteBufferFromHTTPServerResponse::finishSendHeaders() @ 0x0000000016392803 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439013 [ 704516 ] {} <Fatal> BaseDaemon: 0. ./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x00000000175a3d18 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n1. ./build/./src/Common/Exception.cpp:96: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000b42f15c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2. ./contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String, String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&, String&&) @ 0x000000000b86575a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n3. ./build/./src/IO/WriteBufferFromPocoSocket.cpp:116: DB::WriteBufferFromPocoSocket::socketSendBytes(char const*, unsigned long) @ 0x000000000b864fe2 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n4. ./src/IO/WriteBufferFromString.h:0: DB::WriteBufferFromHTTPServerResponse::writeHeaderProgressImpl(char const*) @ 0x00000000163922f5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n5. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:82: DB::WriteBufferFromHTTPServerResponse::finishSendHeaders() @ 0x0000000016392803 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439050 [ 704516 ] {} <Fatal> BaseDaemon: 1. ./build/./src/Common/Exception.cpp:96: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000b42f15c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2. ./contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String, String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&, String&&) @ 0x000000000b86575a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n3. ./build/./src/IO/WriteBufferFromPocoSocket.cpp:116: DB::WriteBufferFromPocoSocket::socketSendBytes(char const*, unsigned long) @ 0x000000000b864fe2 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n4. ./src/IO/WriteBufferFromString.h:0: DB::WriteBufferFromHTTPServerResponse::writeHeaderProgressImpl(char const*) @ 0x00000000163922f5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n5. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:82: DB::WriteBufferFromHTTPServerResponse::finishSendHeaders() @ 0x0000000016392803 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439094 [ 704516 ] {} <Fatal> BaseDaemon: 2. ./contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String, String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&, String&&) @ 0x000000000b86575a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n3. ./build/./src/IO/WriteBufferFromPocoSocket.cpp:116: DB::WriteBufferFromPocoSocket::socketSendBytes(char const*, unsigned long) @ 0x000000000b864fe2 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n4. ./src/IO/WriteBufferFromString.h:0: DB::WriteBufferFromHTTPServerResponse::writeHeaderProgressImpl(char const*) @ 0x00000000163922f5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n5. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:82: DB::WriteBufferFromHTTPServerResponse::finishSendHeaders() @ 0x0000000016392803 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439158 [ 704516 ] {} <Fatal> BaseDaemon: 3. ./build/./src/IO/WriteBufferFromPocoSocket.cpp:116: DB::WriteBufferFromPocoSocket::socketSendBytes(char const*, unsigned long) @ 0x000000000b864fe2 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n4. ./src/IO/WriteBufferFromString.h:0: DB::WriteBufferFromHTTPServerResponse::writeHeaderProgressImpl(char const*) @ 0x00000000163922f5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n5. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:82: DB::WriteBufferFromHTTPServerResponse::finishSendHeaders() @ 0x0000000016392803 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439198 [ 704516 ] {} <Fatal> BaseDaemon: 4. ./src/IO/WriteBufferFromString.h:0: DB::WriteBufferFromHTTPServerResponse::writeHeaderProgressImpl(char const*) @ 0x00000000163922f5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n5. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:82: DB::WriteBufferFromHTTPServerResponse::finishSendHeaders() @ 0x0000000016392803 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439423 [ 704516 ] {} <Fatal> BaseDaemon: 5. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:82: DB::WriteBufferFromHTTPServerResponse::finishSendHeaders() @ 0x0000000016392803 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439461 [ 704516 ] {} <Fatal> BaseDaemon: 6. ./contrib/llvm-project/libcxx/include/__mutex_base:0: DB::WriteBufferFromHTTPServerResponse::finalizeImpl() @ 0x0000000016393502 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439508 [ 704516 ] {} <Fatal> BaseDaemon: 7. ./src/IO/WriteBuffer.h:128: DB::WriteBuffer::finalize() @ 0x0000000002935c62 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439550 [ 704516 ] {} <Fatal> BaseDaemon: 8. ./build/./src/Server/HTTP/WriteBufferFromHTTPServerResponse.cpp:157: DB::WriteBufferFromHTTPServerResponse::~WriteBufferFromHTTPServerResponse() @ 0x00000000163933aa in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439605 [ 704516 ] {} <Fatal> BaseDaemon: 9. ./src/Server/HTTPHandler.h:94: DB::HTTPHandler::trySendExceptionToClient(String const&, int, DB::HTTPServerRequest&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x00000000162b80e5 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439638 [ 704516 ] {} <Fatal> BaseDaemon: 10. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x00000000162bc23c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439721 [ 704516 ] {} <Fatal> BaseDaemon: 11. ./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x0000000016389b4a in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439752 [ 704516 ] {} <Fatal> BaseDaemon: 12. ./build/./base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001758b7e8 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439780 [ 704516 ] {} <Fatal> BaseDaemon: 13. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:0: Poco::Net::TCPServerDispatcher::run() @ 0x000000001758c2f3 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439891 [ 704516 ] {} <Fatal> BaseDaemon: 14. ./build/./base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000017616d01 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439901 [ 704516 ] {} <Fatal> BaseDaemon: 15. ./base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001761351c in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439914 [ 704516 ] {} <Fatal> BaseDaemon: 16. ? @ 0x00007ffff7e08ac3 in ?\r\n17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439926 [ 704516 ] {} <Fatal> BaseDaemon: 17. ? @ 0x00007ffff7e9a850 in ?\r\n (version 24.1.1.1)\r\n2024.01.19 15:12:34.439933 [ 704516 ] {} <Fatal> BaseDaemon:  (version 24.1.1.1)\r\n2024.01.19 15:12:34.440144 [ 707037 ] {} <Fatal> BaseDaemon: 10.1. inlined from ./build/./src/Parsers/IParserBase.cpp:13: operator()\r\n2024.01.19 15:12:34.440175 [ 707037 ] {} <Fatal> BaseDaemon: 10.2. inlined from ./src/Parsers/IParserBase.h:31: bool DB::IParserBase::wrapParseImpl<DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0>(DB::IParser::Pos&, DB::IParserBase::IncreaseDepthTag, DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&)::$_0 const&)\r\n2024.01.19 15:12:34.440196 [ 707037 ] {} <Fatal> BaseDaemon: 10. ./build/./src/Parsers/IParserBase.cpp:11: DB::IParserBase::parse(DB::IParser::Pos&, std::shared_ptr<DB::IAST>&, DB::Expected&) @ 0x0000000016ca6c2e in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.454105 [ 707037 ] {} <Fatal> BaseDaemon: 11. ./build/./src/Parsers/Kusto/parseKQLQuery.cpp:0: DB::tryParseKQLQuery(DB::IParser&, char const*&, char const*, String&, bool, String const&, bool, unsigned long, unsigned long, bool) @ 0x0000000016e590e2 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n2024.01.19 15:12:34.469519 [ 707037 ] {} <Fatal> BaseDaemon: 12. ./build/./src/Parsers/Kusto/parseKQLQuery.cpp:447: DB::parseKQLQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long) @ 0x0000000016e5dad9 in /home/smyl/old-griffin/install/clickhouse-2204/bin/clickhouse\r\n```\n",
  "hints_text": "The deadline to fix is one month (Mar 1st, 2024) - if it will not be fixed, we will remove the experimental KQL altogether.\n@kashwy is working on it",
  "created_at": "2024-02-06T06:57:51Z",
  "modified_files": [
    "src/Interpreters/executeQuery.cpp",
    "src/Parsers/Kusto/KustoFunctions/IParserKQLFunction.cpp",
    "src/Parsers/Kusto/KustoFunctions/KQLDataTypeFunctions.cpp",
    "src/Parsers/Kusto/KustoFunctions/KQLDateTimeFunctions.cpp",
    "src/Parsers/Kusto/KustoFunctions/KQLStringFunctions.cpp",
    "src/Parsers/Kusto/ParserKQLExtend.cpp",
    "src/Parsers/Kusto/ParserKQLMVExpand.cpp",
    "src/Parsers/Kusto/ParserKQLMakeSeries.cpp",
    "src/Parsers/Kusto/ParserKQLOperators.cpp",
    "src/Parsers/Kusto/ParserKQLQuery.cpp",
    "src/Parsers/Kusto/ParserKQLSort.cpp",
    "src/Parsers/Kusto/ParserKQLStatement.cpp",
    "src/Parsers/Kusto/ParserKQLSummarize.cpp",
    "src/Parsers/Kusto/Utilities.cpp",
    "src/Parsers/Kusto/Utilities.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02366_kql_create_table.reference",
    "b/tests/queries/0_stateless/02366_kql_create_table.sql",
    "b/tests/queries/0_stateless/02366_kql_datatype.reference",
    "b/tests/queries/0_stateless/02366_kql_datatype.sql",
    "b/tests/queries/0_stateless/02366_kql_distinct.reference",
    "b/tests/queries/0_stateless/02366_kql_distinct.sql",
    "b/tests/queries/0_stateless/02366_kql_extend.reference",
    "b/tests/queries/0_stateless/02366_kql_extend.sql",
    "b/tests/queries/0_stateless/02366_kql_func_binary.reference",
    "b/tests/queries/0_stateless/02366_kql_func_binary.sql",
    "b/tests/queries/0_stateless/02366_kql_func_datetime.reference",
    "b/tests/queries/0_stateless/02366_kql_func_datetime.sql",
    "b/tests/queries/0_stateless/02366_kql_func_dynamic.reference",
    "b/tests/queries/0_stateless/02366_kql_func_dynamic.sql",
    "b/tests/queries/0_stateless/02366_kql_func_ip.reference",
    "b/tests/queries/0_stateless/02366_kql_func_ip.sql",
    "b/tests/queries/0_stateless/02366_kql_func_math.reference",
    "b/tests/queries/0_stateless/02366_kql_func_math.sql",
    "b/tests/queries/0_stateless/02366_kql_func_scalar.reference",
    "b/tests/queries/0_stateless/02366_kql_func_scalar.sql",
    "b/tests/queries/0_stateless/02366_kql_func_string.reference",
    "b/tests/queries/0_stateless/02366_kql_func_string.sql",
    "b/tests/queries/0_stateless/02366_kql_mvexpand.reference",
    "b/tests/queries/0_stateless/02366_kql_mvexpand.sql",
    "b/tests/queries/0_stateless/02366_kql_native_interval_format.reference",
    "b/tests/queries/0_stateless/02366_kql_native_interval_format.sql.j2",
    "b/tests/queries/0_stateless/02366_kql_operator_in_sql.reference",
    "b/tests/queries/0_stateless/02366_kql_operator_in_sql.sql",
    "b/tests/queries/0_stateless/02366_kql_summarize.reference",
    "b/tests/queries/0_stateless/02366_kql_summarize.sql",
    "b/tests/queries/0_stateless/02366_kql_tabular.reference",
    "b/tests/queries/0_stateless/02366_kql_tabular.sql"
  ]
}