You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
`byteJaccardIndex` is slow
**Describe the unexpected behaviour**

```
        std::unordered_set<char> haystack_set(haystack, haystack + haystack_size);
        std::unordered_set<char> needle_set(needle, needle + needle_size);
```

```
play-eu :) SELECT DISTINCT arrayJoin(tokens(lower(text))) AS word, byteJaccardIndex(word, 'clickhouse') AS distance FROM hackernews ORDER BY distance DESC LIMIT 20

SELECT DISTINCT
    arrayJoin(tokens(lower(text))) AS word,
    byteJaccardIndex(word, 'clickhouse') AS distance
FROM hackernews
ORDER BY distance DESC
LIMIT 20

Query id: 5d3d9a9a-eb45-42a5-92d2-d38738dc32ea

┌─word────────────┬───────────distance─┐
│ clickhouse      │                  1 │
│ clickhouses     │                  1 │
│ clikhouse       │                  1 │
│ clickehouse     │                  1 │
│ clikchouse      │                  1 │
│ chickenlicious  │                0.9 │
│ bokehlicious    │                0.9 │
│ 22clickhouse    │                0.9 │
│ flushcookies    │                0.9 │
│ clickhousecloud │                0.9 │
│ licheckouts     │                0.9 │
│ clickhousesql   │                0.9 │
│ suchlike        │ 0.8888888888888888 │
│ choleski        │ 0.8888888888888888 │
│ clickhous       │ 0.8888888888888888 │
│ suckhole        │ 0.8888888888888888 │
│ suchlikes       │ 0.8888888888888888 │
│ chuckholes      │ 0.8888888888888888 │
│ suckholes       │ 0.8888888888888888 │
│ clickholes      │ 0.8888888888888888 │
└─────────────────┴────────────────────┘

20 rows in set. Elapsed: 48.896 sec. Processed 37.17 million rows, 12.72 GB (760.21 thousand rows/s., 260.16 MB/s.)
Peak memory usage: 1.83 GiB.
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
