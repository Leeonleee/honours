{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 50826,
  "instance_id": "ClickHouse__ClickHouse-50826",
  "issue_numbers": [
    "50819"
  ],
  "base_commit": "7af9af1a3ff2565c8a902801277142e4f410f26a",
  "patch": "diff --git a/docs/en/operations/system-tables/merge_tree_settings.md b/docs/en/operations/system-tables/merge_tree_settings.md\nindex d8539908bf74..557835ce3b6b 100644\n--- a/docs/en/operations/system-tables/merge_tree_settings.md\n+++ b/docs/en/operations/system-tables/merge_tree_settings.md\n@@ -7,11 +7,17 @@ Contains information about settings for `MergeTree` tables.\n \n Columns:\n \n-- `name` (String) \u2014 Setting name.\n-- `value` (String) \u2014 Setting value.\n-- `description` (String) \u2014 Setting description.\n-- `type` (String) \u2014 Setting type (implementation specific string value).\n-- `changed` (UInt8) \u2014 Whether the setting was explicitly defined in the config or explicitly changed.\n+- `name` ([String](../../sql-reference/data-types/string.md)) \u2014 Setting name.\n+- `value` ([String](../../sql-reference/data-types/string.md)) \u2014 Setting value.\n+- `changed` ([UInt8](../../sql-reference/data-types/int-uint.md#uint-ranges)) \u2014 Whether the setting was explicitly defined in the config or explicitly changed.\n+- `description` ([String](../../sql-reference/data-types/string.md)) \u2014 Setting description.\n+- `min` ([Nullable](../../sql-reference/data-types/nullable.md)([String](../../sql-reference/data-types/string.md))) \u2014 Minimum value of the setting, if any is set via [constraints](../../operations/settings/constraints-on-settings.md#constraints-on-settings). If the setting has no minimum value, contains [NULL](../../sql-reference/syntax.md#null-literal).\n+- `max` ([Nullable](../../sql-reference/data-types/nullable.md)([String](../../sql-reference/data-types/string.md))) \u2014 Maximum value of the setting, if any is set via [constraints](../../operations/settings/constraints-on-settings.md#constraints-on-settings). If the setting has no maximum value, contains [NULL](../../sql-reference/syntax.md#null-literal).\n+- `readonly` ([UInt8](../../sql-reference/data-types/int-uint.md#uint-ranges)) \u2014 Shows whether the current user can change the setting:\n+    - `0` \u2014 Current user can change the setting.\n+    - `1` \u2014 Current user can\u2019t change the setting.\n+- `type` ([String](../../sql-reference/data-types/string.md)) \u2014 Setting type (implementation specific string value).\n+- `is_obsolete` ([UInt8](../../sql-reference/data-types/int-uint.md#uint-ranges)) _ Shows whether a setting is obsolete.\n \n **Example**\n ```sql\n@@ -21,35 +27,51 @@ SELECT * FROM system.merge_tree_settings LIMIT 4 FORMAT Vertical;\n ```response\n Row 1:\n \u2500\u2500\u2500\u2500\u2500\u2500\n-name:        index_granularity\n-value:       8192\n+name:        min_compress_block_size\n+value:       0\n changed:     0\n-description: How many rows correspond to one primary key value.\n-type:        SettingUInt64\n+description: When granule is written, compress the data in buffer if the size of pending uncompressed data is larger or equal than the specified threshold. If this setting is not set, the corresponding global setting is used.\n+min:         ____\n+max:         ____\n+readonly:    0\n+type:        UInt64\n+is_obsolete: 0\n \n Row 2:\n \u2500\u2500\u2500\u2500\u2500\u2500\n-name:        min_bytes_for_wide_part\n+name:        max_compress_block_size\n value:       0\n changed:     0\n-description: Minimal uncompressed size in bytes to create part in wide format instead of compact\n-type:        SettingUInt64\n+description: Compress the pending uncompressed data in buffer if its size is larger or equal than the specified threshold. Block of data will be compressed even if the current granule is not finished. If this setting is not set, the corresponding global setting is used.\n+min:         ____\n+max:         ____\n+readonly:    0\n+type:        UInt64\n+is_obsolete: 0\n \n Row 3:\n \u2500\u2500\u2500\u2500\u2500\u2500\n-name:        min_rows_for_wide_part\n-value:       0\n+name:        index_granularity\n+value:       8192\n changed:     0\n-description: Minimal number of rows to create part in wide format instead of compact\n-type:        SettingUInt64\n+description: How many rows correspond to one primary key value.\n+min:         ____\n+max:         ____\n+readonly:    0\n+type:        UInt64\n+is_obsolete: 0\n \n Row 4:\n \u2500\u2500\u2500\u2500\u2500\u2500\n-name:        merge_max_block_size\n-value:       8192\n+name:        max_digestion_size_per_segment\n+value:       268435456\n changed:     0\n-description: How many rows in blocks should be formed for merge operations.\n-type:        SettingUInt64\n+description: Max number of bytes to digest per segment to build GIN index.\n+min:         ____\n+max:         ____\n+readonly:    0\n+type:        UInt64\n+is_obsolete: 0\n \n-4 rows in set. Elapsed: 0.001 sec.\n+4 rows in set. Elapsed: 0.009 sec.\n ```\ndiff --git a/docs/en/operations/system-tables/server_settings.md b/docs/en/operations/system-tables/server_settings.md\nindex 3085b1acaf40..df482261ae82 100644\n--- a/docs/en/operations/system-tables/server_settings.md\n+++ b/docs/en/operations/system-tables/server_settings.md\n@@ -14,6 +14,7 @@ Columns:\n - `changed` ([UInt8](../../sql-reference/data-types/int-uint.md#uint-ranges)) \u2014 Shows whether a setting was specified in `config.xml`\n - `description` ([String](../../sql-reference/data-types/string.md)) \u2014 Short server setting description.\n - `type` ([String](../../sql-reference/data-types/string.md)) \u2014 Server setting value type.\n+- `is_obsolete` ([UInt8](../../sql-reference/data-types/int-uint.md#uint-ranges)) _ Shows whether a setting is obsolete.\n \n **Example**\n \n@@ -26,14 +27,22 @@ WHERE name LIKE '%thread_pool%'\n ```\n \n ``` text\n-\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500value\u2500\u252c\u2500default\u2500\u252c\u2500changed\u2500\u252c\u2500description\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500type\u2500\u2500\u2500\u2510\n-\u2502 max_thread_pool_size         \u2502 5000  \u2502 10000   \u2502       1 \u2502 The maximum number of threads that could be allocated from the OS and used for query execution and background operations.                           \u2502 UInt64 \u2502\n-\u2502 max_thread_pool_free_size    \u2502 1000  \u2502 1000    \u2502       0 \u2502 The maximum number of threads that will always stay in a global thread pool once allocated and remain idle in case of insufficient number of tasks. \u2502 UInt64 \u2502\n-\u2502 thread_pool_queue_size       \u2502 10000 \u2502 10000   \u2502       0 \u2502 The maximum number of tasks that will be placed in a queue and wait for execution.                                                                  \u2502 UInt64 \u2502\n-\u2502 max_io_thread_pool_size      \u2502 100   \u2502 100     \u2502       0 \u2502 The maximum number of threads that would be used for IO operations                                                                                  \u2502 UInt64 \u2502\n-\u2502 max_io_thread_pool_free_size \u2502 0     \u2502 0       \u2502       0 \u2502 Max free size for IO thread pool.                                                                                                                   \u2502 UInt64 \u2502\n-\u2502 io_thread_pool_queue_size    \u2502 10000 \u2502 10000   \u2502       0 \u2502 Queue size for IO thread pool.                                                                                                                      \u2502 UInt64 \u2502\n-\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500_\u2500value\u2500_\u2500default\u2500_\u2500changed\u2500_\u2500description\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500_\u2500type\u2500\u2500\u2500_\u2500is_obsolete\u2500\u2510\n+\u2502 max_thread_pool_size                        \u2502 10000 \u2502 10000   \u2502       1 \u2502 The maximum number of threads that could be allocated from the OS and used for query execution and background operations.                           \u2502 UInt64 \u2502           0 \u2502\n+\u2502 max_thread_pool_free_size                   \u2502 1000  \u2502 1000    \u2502       0 \u2502 The maximum number of threads that will always stay in a global thread pool once allocated and remain idle in case of insufficient number of tasks. \u2502 UInt64 \u2502           0 \u2502\n+\u2502 thread_pool_queue_size                      \u2502 10000 \u2502 10000   \u2502       0 \u2502 The maximum number of tasks that will be placed in a queue and wait for execution.                                                                  \u2502 UInt64 \u2502           0 \u2502\n+\u2502 max_io_thread_pool_size                     \u2502 100   \u2502 100     \u2502       0 \u2502 The maximum number of threads that would be used for IO operations                                                                                  \u2502 UInt64 \u2502           0 \u2502\n+\u2502 max_io_thread_pool_free_size                \u2502 0     \u2502 0       \u2502       0 \u2502 Max free size for IO thread pool.                                                                                                                   \u2502 UInt64 \u2502           0 \u2502\n+\u2502 io_thread_pool_queue_size                   \u2502 10000 \u2502 10000   \u2502       0 \u2502 Queue size for IO thread pool.                                                                                                                      \u2502 UInt64 \u2502           0 \u2502\n+\u2502 max_active_parts_loading_thread_pool_size   \u2502 64    \u2502 64      \u2502       0 \u2502 The number of threads to load active set of data parts (Active ones) at startup.                                                                    \u2502 UInt64 \u2502           0 \u2502\n+\u2502 max_outdated_parts_loading_thread_pool_size \u2502 32    \u2502 32      \u2502       0 \u2502 The number of threads to load inactive set of data parts (Outdated ones) at startup.                                                                \u2502 UInt64 \u2502           0 \u2502\n+\u2502 max_parts_cleaning_thread_pool_size         \u2502 128   \u2502 128     \u2502       0 \u2502 The number of threads for concurrent removal of inactive data parts.                                                                                \u2502 UInt64 \u2502           0 \u2502\n+\u2502 max_backups_io_thread_pool_size             \u2502 1000  \u2502 1000    \u2502       0 \u2502 The maximum number of threads that would be used for IO operations for BACKUP queries                                                               \u2502 UInt64 \u2502           0 \u2502\n+\u2502 max_backups_io_thread_pool_free_size        \u2502 0     \u2502 0       \u2502       0 \u2502 Max free size for backups IO thread pool.                                                                                                           \u2502 UInt64 \u2502           0 \u2502\n+\u2502 backups_io_thread_pool_queue_size           \u2502 0     \u2502 0       \u2502       0 \u2502 Queue size for backups IO thread pool.                                                                                                              \u2502 UInt64 \u2502           0 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n ```\n \n Using of `WHERE changed` can be useful, for example, when you want to check \ndiff --git a/docs/en/operations/system-tables/settings.md b/docs/en/operations/system-tables/settings.md\nindex afae45077cc1..7dd2345a2d0f 100644\n--- a/docs/en/operations/system-tables/settings.md\n+++ b/docs/en/operations/system-tables/settings.md\n@@ -17,6 +17,7 @@ Columns:\n     - `0` \u2014 Current user can change the setting.\n     - `1` \u2014 Current user can\u2019t change the setting.\n - `default` ([String](../../sql-reference/data-types/string.md)) \u2014 Setting default value.\n+- `is_obsolete` ([UInt8](../../sql-reference/data-types/int-uint.md#uint-ranges)) _ Shows whether a setting is obsolete.\n \n **Example**\n \n@@ -29,11 +30,14 @@ WHERE name LIKE '%min_i%'\n ```\n \n ``` text\n-\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500value\u2500\u2500\u2500\u2500\u2500\u252c\u2500changed\u2500\u252c\u2500description\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500min\u2500\u2500\u252c\u2500max\u2500\u2500\u252c\u2500readonly\u2500\u2510\n-\u2502 min_insert_block_size_rows                  \u2502 1048576   \u2502       0 \u2502 Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough.                                                                         \u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502        0 \u2502\n-\u2502 min_insert_block_size_bytes                 \u2502 268435456 \u2502       0 \u2502 Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.                                                                        \u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502        0 \u2502\n-\u2502 read_backoff_min_interval_between_events_ms \u2502 1000      \u2502       0 \u2502 Settings to reduce the number of threads in case of slow reads. Do not pay attention to the event, if the previous one has passed less than a certain amount of time. \u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502        0 \u2502\n-\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500_\u2500value\u2500\u2500\u2500\u2500\u2500_\u2500changed\u2500_\u2500description\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500_\u2500min\u2500\u2500_\u2500max\u2500\u2500_\u2500readonly\u2500_\u2500type\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500_\u2500default\u2500\u2500\u2500_\u2500alias_for\u2500_\u2500is_obsolete\u2500\u2510\n+\u2502 min_insert_block_size_rows                         \u2502 1048449   \u2502       0 \u2502 Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough.                                                                         \u2502 ____ \u2502 ____ \u2502        0 \u2502 UInt64       \u2502 1048449   \u2502           \u2502           0 \u2502\n+\u2502 min_insert_block_size_bytes                        \u2502 268402944 \u2502       0 \u2502 Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.                                                                        \u2502 ____ \u2502 ____ \u2502        0 \u2502 UInt64       \u2502 268402944 \u2502           \u2502           0 \u2502\n+\u2502 min_insert_block_size_rows_for_materialized_views  \u2502 0         \u2502       0 \u2502 Like min_insert_block_size_rows, but applied only during pushing to MATERIALIZED VIEW (default: min_insert_block_size_rows)                                           \u2502 ____ \u2502 ____ \u2502        0 \u2502 UInt64       \u2502 0         \u2502           \u2502           0 \u2502\n+\u2502 min_insert_block_size_bytes_for_materialized_views \u2502 0         \u2502       0 \u2502 Like min_insert_block_size_bytes, but applied only during pushing to MATERIALIZED VIEW (default: min_insert_block_size_bytes)                                         \u2502 ____ \u2502 ____ \u2502        0 \u2502 UInt64       \u2502 0         \u2502           \u2502           0 \u2502\n+\u2502 read_backoff_min_interval_between_events_ms        \u2502 1000      \u2502       0 \u2502 Settings to reduce the number of threads in case of slow reads. Do not pay attention to the event, if the previous one has passed less than a certain amount of time. \u2502 ____ \u2502 ____ \u2502        0 \u2502 Milliseconds \u2502 1000      \u2502           \u2502           0 \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n ```\n \n Using of `WHERE changed` can be useful, for example, when you want to check:\ndiff --git a/src/Interpreters/Context.cpp b/src/Interpreters/Context.cpp\nindex 9e4d1e8d1e20..35d147a85fe2 100644\n--- a/src/Interpreters/Context.cpp\n+++ b/src/Interpreters/Context.cpp\n@@ -784,15 +784,32 @@ Strings Context::getWarnings() const\n         auto lock = getLock();\n         common_warnings = shared->warnings;\n     }\n+    /// Make setting's name ordered\n+    std::set<String> obsolete_settings;\n     for (const auto & setting : settings)\n     {\n         if (setting.isValueChanged() && setting.isObsolete())\n+            obsolete_settings.emplace(setting.getName());\n+    }\n+\n+    if (!obsolete_settings.empty())\n+    {\n+        bool single_element = obsolete_settings.size() == 1;\n+        String res = single_element ? \"Obsolete setting [\" : \"Obsolete settings [\";\n+\n+        bool first = true;\n+        for (const auto & setting : obsolete_settings)\n         {\n-            common_warnings.emplace_back(\"Some obsolete setting is changed. \"\n-                                         \"Check 'select * from system.settings where changed' and read the changelog.\");\n-            break;\n+            res += first ? \"\" : \", \";\n+            res += \"'\" + setting + \"'\";\n+            first = false;\n         }\n+        res = res + \"]\" + (single_element ? \" is\" : \" are\")\n+            + \" changed. \"\n+              \"Please check 'select * from system.settings where changed and is_obsolete' and read the changelog.\";\n+        common_warnings.emplace_back(res);\n     }\n+\n     return common_warnings;\n }\n \n@@ -2205,9 +2222,9 @@ BackupsWorker & Context::getBackupsWorker() const\n     const bool allow_concurrent_restores = this->getConfigRef().getBool(\"backups.allow_concurrent_restores\", true);\n \n     const auto & config = getConfigRef();\n-    const auto & settings_ = getSettingsRef();\n-    UInt64 backup_threads = config.getUInt64(\"backup_threads\", settings_.backup_threads);\n-    UInt64 restore_threads = config.getUInt64(\"restore_threads\", settings_.restore_threads);\n+    const auto & settings_ref = getSettingsRef();\n+    UInt64 backup_threads = config.getUInt64(\"backup_threads\", settings_ref.backup_threads);\n+    UInt64 restore_threads = config.getUInt64(\"restore_threads\", settings_ref.restore_threads);\n \n     if (!shared->backups_worker)\n         shared->backups_worker.emplace(backup_threads, restore_threads, allow_concurrent_backups, allow_concurrent_restores);\n@@ -4478,10 +4495,10 @@ ReadSettings Context::getReadSettings() const\n \n ReadSettings Context::getBackupReadSettings() const\n {\n-    ReadSettings settings_ = getReadSettings();\n-    settings_.remote_throttler = getBackupsThrottler();\n-    settings_.local_throttler = getBackupsThrottler();\n-    return settings_;\n+    ReadSettings read_settings = getReadSettings();\n+    read_settings.remote_throttler = getBackupsThrottler();\n+    read_settings.local_throttler = getBackupsThrottler();\n+    return read_settings;\n }\n \n WriteSettings Context::getWriteSettings() const\n@@ -4510,14 +4527,13 @@ std::shared_ptr<AsyncReadCounters> Context::getAsyncReadCounters() const\n \n Context::ParallelReplicasMode Context::getParallelReplicasMode() const\n {\n-    const auto & settings_ = getSettingsRef();\n+    const auto & settings_ref = getSettingsRef();\n \n     using enum Context::ParallelReplicasMode;\n-    if (!settings_.parallel_replicas_custom_key.value.empty())\n+    if (!settings_ref.parallel_replicas_custom_key.value.empty())\n         return CUSTOM_KEY;\n \n-    if (settings_.allow_experimental_parallel_reading_from_replicas > 0\n-        && !settings_.use_hedged_requests)\n+    if (settings_ref.allow_experimental_parallel_reading_from_replicas > 0 && !settings_ref.use_hedged_requests)\n         return READ_TASKS;\n \n     return SAMPLE_KEY;\n@@ -4525,17 +4541,15 @@ Context::ParallelReplicasMode Context::getParallelReplicasMode() const\n \n bool Context::canUseParallelReplicasOnInitiator() const\n {\n-    const auto & settings_ = getSettingsRef();\n-    return getParallelReplicasMode() == ParallelReplicasMode::READ_TASKS\n-        && settings_.max_parallel_replicas > 1\n+    const auto & settings_ref = getSettingsRef();\n+    return getParallelReplicasMode() == ParallelReplicasMode::READ_TASKS && settings_ref.max_parallel_replicas > 1\n         && !getClientInfo().collaborate_with_initiator;\n }\n \n bool Context::canUseParallelReplicasOnFollower() const\n {\n-    const auto & settings_ = getSettingsRef();\n-    return getParallelReplicasMode() == ParallelReplicasMode::READ_TASKS\n-        && settings_.max_parallel_replicas > 1\n+    const auto & settings_ref = getSettingsRef();\n+    return getParallelReplicasMode() == ParallelReplicasMode::READ_TASKS && settings_ref.max_parallel_replicas > 1\n         && getClientInfo().collaborate_with_initiator;\n }\n \ndiff --git a/src/Storages/System/StorageSystemMergeTreeSettings.cpp b/src/Storages/System/StorageSystemMergeTreeSettings.cpp\nindex 6de3fb800f4e..0ddd45462084 100644\n--- a/src/Storages/System/StorageSystemMergeTreeSettings.cpp\n+++ b/src/Storages/System/StorageSystemMergeTreeSettings.cpp\n@@ -21,6 +21,7 @@ NamesAndTypesList SystemMergeTreeSettings<replicated>::getNamesAndTypes()\n         {\"max\",         std::make_shared<DataTypeNullable>(std::make_shared<DataTypeString>())},\n         {\"readonly\",    std::make_shared<DataTypeUInt8>()},\n         {\"type\",        std::make_shared<DataTypeString>()},\n+        {\"is_obsolete\", std::make_shared<DataTypeUInt8>()},\n     };\n }\n \n@@ -52,6 +53,7 @@ void SystemMergeTreeSettings<replicated>::fillData(MutableColumns & res_columns,\n         res_columns[5]->insert(max);\n         res_columns[6]->insert(writability == SettingConstraintWritability::CONST);\n         res_columns[7]->insert(setting.getTypeName());\n+        res_columns[8]->insert(setting.isObsolete());\n     }\n }\n \ndiff --git a/src/Storages/System/StorageSystemServerSettings.cpp b/src/Storages/System/StorageSystemServerSettings.cpp\nindex ad52c6896ac1..290b575465c5 100644\n--- a/src/Storages/System/StorageSystemServerSettings.cpp\n+++ b/src/Storages/System/StorageSystemServerSettings.cpp\n@@ -15,6 +15,7 @@ NamesAndTypesList StorageSystemServerSettings::getNamesAndTypes()\n         {\"changed\", std::make_shared<DataTypeUInt8>()},\n         {\"description\", std::make_shared<DataTypeString>()},\n         {\"type\", std::make_shared<DataTypeString>()},\n+        {\"is_obsolete\", std::make_shared<DataTypeUInt8>()},\n     };\n }\n \n@@ -33,6 +34,7 @@ void StorageSystemServerSettings::fillData(MutableColumns & res_columns, Context\n         res_columns[3]->insert(setting.isValueChanged());\n         res_columns[4]->insert(setting.getDescription());\n         res_columns[5]->insert(setting.getTypeName());\n+        res_columns[6]->insert(setting.isObsolete());\n     }\n }\n \ndiff --git a/src/Storages/System/StorageSystemSettings.cpp b/src/Storages/System/StorageSystemSettings.cpp\nindex c54f7eef25ff..dcb54eac0a0f 100644\n--- a/src/Storages/System/StorageSystemSettings.cpp\n+++ b/src/Storages/System/StorageSystemSettings.cpp\n@@ -21,6 +21,7 @@ NamesAndTypesList StorageSystemSettings::getNamesAndTypes()\n         {\"type\", std::make_shared<DataTypeString>()},\n         {\"default\", std::make_shared<DataTypeString>()},\n         {\"alias_for\", std::make_shared<DataTypeString>()},\n+        {\"is_obsolete\", std::make_shared<DataTypeUInt8>()},\n     };\n }\n \n@@ -51,6 +52,7 @@ void StorageSystemSettings::fillData(MutableColumns & res_columns, ContextPtr co\n         res_columns[6]->insert(writability == SettingConstraintWritability::CONST);\n         res_columns[7]->insert(setting.getTypeName());\n         res_columns[8]->insert(setting.getDefaultValueString());\n+        res_columns[10]->insert(setting.isObsolete());\n     };\n \n     const auto & settings_to_aliases = Settings::Traits::settingsToAliases();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01221_system_settings.reference b/tests/queries/0_stateless/01221_system_settings.reference\nindex 399b3778b668..e9c2f3fec320 100644\n--- a/tests/queries/0_stateless/01221_system_settings.reference\n+++ b/tests/queries/0_stateless/01221_system_settings.reference\n@@ -1,4 +1,4 @@\n-send_timeout\t300\t0\tTimeout for sending data to network, in seconds. If client needs to sent some data, but it did not able to send any bytes in this interval, exception is thrown. If you set this setting on client, the \\'receive_timeout\\' for the socket will be also set on the corresponding connection end on the server.\t\\N\t\\N\t0\tSeconds\t300\t\n-storage_policy\tdefault\t0\tName of storage disk policy\t\\N\t\\N\t0\tString\n+send_timeout\t300\t0\tTimeout for sending data to network, in seconds. If client needs to sent some data, but it did not able to send any bytes in this interval, exception is thrown. If you set this setting on client, the \\'receive_timeout\\' for the socket will be also set on the corresponding connection end on the server.\t\\N\t\\N\t0\tSeconds\t300\t\t0\n+storage_policy\tdefault\t0\tName of storage disk policy\t\\N\t\\N\t0\tString\t0\n 1\n 1\ndiff --git a/tests/queries/0_stateless/01945_show_debug_warning.expect b/tests/queries/0_stateless/01945_show_debug_warning.expect\nindex 4e6dd3e1b0fd..28b114b5af49 100755\n--- a/tests/queries/0_stateless/01945_show_debug_warning.expect\n+++ b/tests/queries/0_stateless/01945_show_debug_warning.expect\n@@ -55,7 +55,7 @@ expect eof\n \n spawn bash -c \"source $basedir/../shell_config.sh ; \\$CLICKHOUSE_CLIENT_BINARY \\$CLICKHOUSE_CLIENT_OPT --disable_suggestion --max_memory_usage_for_all_queries=123 --history_file=$history_file\"\n expect \"Warnings:\"\n-expect \" * Some obsolete setting is changed.\"\n+expect \" * Obsolete setting\"\n expect \":) \"\n send -- \"q\\r\"\n expect eof\ndiff --git a/tests/queries/0_stateless/01945_system_warnings.reference b/tests/queries/0_stateless/01945_system_warnings.reference\nindex 296a03447dbd..cfec2f638160 100644\n--- a/tests/queries/0_stateless/01945_system_warnings.reference\n+++ b/tests/queries/0_stateless/01945_system_warnings.reference\n@@ -1,5 +1,5 @@\n Server was built in debug mode. It will work slowly.\n 0\n-Some obsolete setting is changed. Check \\'select * from system.settings where changed\\' and read the changelog.\n+Obsolete setting [\\'multiple_joins_rewriter_version\\'] is changed. Please check \\'select * from system.settings where changed and is_obsolete\\' and read the changelog.\n 1\n 1\ndiff --git a/tests/queries/0_stateless/01945_system_warnings.sh b/tests/queries/0_stateless/01945_system_warnings.sh\nindex c9bd0fd4b8a0..249c3218bccb 100755\n--- a/tests/queries/0_stateless/01945_system_warnings.sh\n+++ b/tests/queries/0_stateless/01945_system_warnings.sh\n@@ -1,4 +1,5 @@\n #!/usr/bin/env bash\n+# Tags: no-parallel\n \n CUR_DIR=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n # shellcheck source=../shell_config.sh\n@@ -14,11 +15,12 @@ else\n     echo \"Server was built in debug mode. It will work slowly.\"\n fi\n \n-${CLICKHOUSE_CLIENT} -q \"SELECT count() FROM system.warnings WHERE message LIKE '%obsolete setting%'\"\n-${CLICKHOUSE_CLIENT} --multiple_joins_rewriter_version=42 -q \"SELECT message FROM system.warnings WHERE message LIKE '%obsolete setting%'\"\n+${CLICKHOUSE_CLIENT} -q \"SELECT count() FROM system.warnings WHERE message LIKE '%Obsolete setting%'\"\n+${CLICKHOUSE_CLIENT} --multiple_joins_rewriter_version=42 -q \"SELECT message FROM system.warnings WHERE message LIKE '%Obsolete setting%'\"\n \n # Avoid duplicated warnings\n ${CLICKHOUSE_CLIENT} -q \"SELECT count() = countDistinct(message) FROM system.warnings\"\n \n # Avoid too many warnings, especially in CI\n ${CLICKHOUSE_CLIENT} -q \"SELECT count() < 10 FROM system.warnings\"\n+\ndiff --git a/tests/queries/0_stateless/02117_show_create_table_system.reference b/tests/queries/0_stateless/02117_show_create_table_system.reference\nindex e08a581f5738..76a6b376a57b 100644\n--- a/tests/queries/0_stateless/02117_show_create_table_system.reference\n+++ b/tests/queries/0_stateless/02117_show_create_table_system.reference\n@@ -346,7 +346,8 @@ CREATE TABLE system.merge_tree_settings\n     `min` Nullable(String),\n     `max` Nullable(String),\n     `readonly` UInt8,\n-    `type` String\n+    `type` String,\n+    `is_obsolete` UInt8\n )\n ENGINE = SystemMergeTreeSettings\n COMMENT 'SYSTEM TABLE is built on the fly.'\n@@ -921,7 +922,8 @@ CREATE TABLE system.replicated_merge_tree_settings\n     `min` Nullable(String),\n     `max` Nullable(String),\n     `readonly` UInt8,\n-    `type` String\n+    `type` String,\n+    `is_obsolete` UInt8\n )\n ENGINE = SystemReplicatedMergeTreeSettings\n COMMENT 'SYSTEM TABLE is built on the fly.'\n@@ -996,7 +998,8 @@ CREATE TABLE system.settings\n     `readonly` UInt8,\n     `type` String,\n     `default` String,\n-    `alias_for` String\n+    `alias_for` String,\n+    `is_obsolete` UInt8\n )\n ENGINE = SystemSettings\n COMMENT 'SYSTEM TABLE is built on the fly.'\n",
  "problem_statement": "Add a column `is_obsolete` to `system.settings` and similar tables.\n**Use case**\r\n\r\n```\r\nWarnings:\r\n * Some obsolete setting is changed. Check 'select * from system.settings where changed' and read the changelog.\r\n```\r\n\r\nbut how do I know?\r\n\r\n**Additional context**\r\n\r\nThe warning message should list the specific obsolete settings as well.\r\n\n",
  "hints_text": "",
  "created_at": "2023-06-10T08:28:55Z",
  "modified_files": [
    "docs/en/operations/system-tables/merge_tree_settings.md",
    "docs/en/operations/system-tables/server_settings.md",
    "docs/en/operations/system-tables/settings.md",
    "src/Interpreters/Context.cpp",
    "src/Storages/System/StorageSystemMergeTreeSettings.cpp",
    "src/Storages/System/StorageSystemServerSettings.cpp",
    "src/Storages/System/StorageSystemSettings.cpp"
  ],
  "modified_test_files": [
    "tests/queries/0_stateless/01221_system_settings.reference",
    "tests/queries/0_stateless/01945_show_debug_warning.expect",
    "tests/queries/0_stateless/01945_system_warnings.reference",
    "tests/queries/0_stateless/01945_system_warnings.sh",
    "tests/queries/0_stateless/02117_show_create_table_system.reference"
  ]
}