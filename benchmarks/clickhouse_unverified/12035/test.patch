diff --git a/tests/queries/0_stateless/00800_low_cardinality_merge_join.reference b/tests/queries/0_stateless/00800_low_cardinality_merge_join.reference
new file mode 100644
index 000000000000..8e032c0a542c
--- /dev/null
+++ b/tests/queries/0_stateless/00800_low_cardinality_merge_join.reference
@@ -0,0 +1,41 @@
+0
+0
+0
+0
+0
+0
+0
+0
+0
+-
+0	0
+0	0
+0	0
+0	0
+0	0
+0	0
+0	0
+0	0
+0	0
+-
+0	1
+1	2
+2	0
+0	1
+1	2
+2	0
+0	1
+1	2
+2	0
+0	1
+1	2
+2	0
+0	1
+1	2
+2	0
+0	1
+1	2
+2	\N
+0	1
+1	2
+2	\N
diff --git a/tests/queries/0_stateless/00800_low_cardinality_merge_join.sql b/tests/queries/0_stateless/00800_low_cardinality_merge_join.sql
new file mode 100644
index 000000000000..1181ee453a61
--- /dev/null
+++ b/tests/queries/0_stateless/00800_low_cardinality_merge_join.sql
@@ -0,0 +1,30 @@
+set join_algorithm = 'partial_merge';
+
+select * from (select dummy as val from system.one) s1 any left join (select dummy as val from system.one) s2 using val;
+select * from (select toLowCardinality(dummy) as val from system.one) s1 any left join (select dummy as val from system.one) s2 using val;
+select * from (select dummy as val from system.one) s1 any left join (select toLowCardinality(dummy) as val from system.one) s2 using val;
+select * from (select toLowCardinality(dummy) as val from system.one) s1 any left join (select toLowCardinality(dummy) as val from system.one) s2 using val;
+select * from (select toLowCardinality(toNullable(dummy)) as val from system.one) s1 any left join (select dummy as val from system.one) s2 using val;
+select * from (select dummy as val from system.one) s1 any left join (select toLowCardinality(toNullable(dummy)) as val from system.one) s2 using val;
+select * from (select toLowCardinality(toNullable(dummy)) as val from system.one) s1 any left join (select toLowCardinality(dummy) as val from system.one) s2 using val;
+select * from (select toLowCardinality(dummy) as val from system.one) s1 any left join (select toLowCardinality(toNullable(dummy)) as val from system.one) s2 using val;
+select * from (select toLowCardinality(toNullable(dummy)) as val from system.one) s1 any left join (select toLowCardinality(toNullable(dummy)) as val from system.one) s2 using val;
+select '-';
+select * from (select dummy as val from system.one) s1 any left join (select dummy as val from system.one) s2 on val + 0 = val * 1; -- { serverError 352 }
+select * from (select dummy as val from system.one) s1 any left join (select dummy as rval from system.one) s2 on val + 0 = rval * 1;
+select * from (select toLowCardinality(dummy) as val from system.one) s1 any left join (select dummy as rval from system.one) s2 on val + 0 = rval * 1;
+select * from (select dummy as val from system.one) s1 any left join (select toLowCardinality(dummy) as rval from system.one) s2 on val + 0 = rval * 1;
+select * from (select toLowCardinality(dummy) as val from system.one) s1 any left join (select toLowCardinality(dummy) as rval from system.one) s2 on val + 0 = rval * 1;
+select * from (select toLowCardinality(toNullable(dummy)) as val from system.one) s1 any left join (select dummy as rval from system.one) s2 on val + 0 = rval * 1;
+select * from (select dummy as val from system.one) s1 any left join (select toLowCardinality(toNullable(dummy)) as rval from system.one) s2 on val + 0 = rval * 1;
+select * from (select toLowCardinality(toNullable(dummy)) as val from system.one) s1 any left join (select toLowCardinality(dummy) as rval from system.one) s2 on val + 0 = rval * 1;
+select * from (select toLowCardinality(dummy) as val from system.one) s1 any left join (select toLowCardinality(toNullable(dummy)) as rval from system.one) s2 on val + 0 = rval * 1;
+select * from (select toLowCardinality(toNullable(dummy)) as val from system.one) s1 any left join (select toLowCardinality(toNullable(dummy)) as rval from system.one) s2 on val + 0 = rval * 1;
+select '-';
+select * from (select number as l from system.numbers limit 3) s1 any left join (select number as r from system.numbers limit 3) s2 on l + 1 = r * 1;
+select * from (select toLowCardinality(number) as l from system.numbers limit 3) s1 any left join (select number as r from system.numbers limit 3) s2 on l + 1 = r * 1;
+select * from (select number as l from system.numbers limit 3) s1 any left join (select toLowCardinality(number) as r from system.numbers limit 3) s2 on l + 1 = r * 1;
+select * from (select toLowCardinality(number) as l from system.numbers limit 3) s1 any left join (select toLowCardinality(number) as r from system.numbers limit 3) s2 on l + 1 = r * 1;
+select * from (select toLowCardinality(toNullable(number)) as l from system.numbers limit 3) s1 any left join (select toLowCardinality(number) as r from system.numbers limit 3) s2 on l + 1 = r * 1;
+select * from (select toLowCardinality(number) as l from system.numbers limit 3) s1 any left join (select toLowCardinality(toNullable(number)) as r from system.numbers limit 3) s2 on l + 1 = r * 1;
+select * from (select toLowCardinality(toNullable(number)) as l from system.numbers limit 3) s1 any left join (select toLowCardinality(toNullable(number)) as r from system.numbers limit 3) s2 on l + 1 = r * 1;
diff --git a/tests/queries/0_stateless/01353_low_cardinality_join_types.reference b/tests/queries/0_stateless/01353_low_cardinality_join_types.reference
new file mode 100644
index 000000000000..85d3f3d598b3
--- /dev/null
+++ b/tests/queries/0_stateless/01353_low_cardinality_join_types.reference
@@ -0,0 +1,36 @@
+-
+LowCardinality(UInt64)	UInt64	String	LowCardinality(String)
+-
+UInt64	LowCardinality(UInt64)	LowCardinality(String)	String
+-
+LowCardinality(UInt64)	LowCardinality(UInt64)	LowCardinality(String)	LowCardinality(String)
+-
+LowCardinality(UInt64)	UInt64	String	LowCardinality(String)
+LowCardinality(UInt64)	UInt64	String	LowCardinality(String)
+LowCardinality(UInt64)	UInt64	String	LowCardinality(String)
+-
+UInt64	LowCardinality(UInt64)	LowCardinality(String)	String
+UInt64	LowCardinality(UInt64)	LowCardinality(String)	String
+UInt64	LowCardinality(UInt64)	LowCardinality(String)	String
+-
+LowCardinality(UInt64)	LowCardinality(UInt64)	LowCardinality(String)	LowCardinality(String)
+LowCardinality(UInt64)	LowCardinality(UInt64)	LowCardinality(String)	LowCardinality(String)
+LowCardinality(UInt64)	LowCardinality(UInt64)	LowCardinality(String)	LowCardinality(String)
+-
+LowCardinality(UInt64)	UInt64	String	LowCardinality(String)
+-
+UInt64	LowCardinality(UInt64)	LowCardinality(String)	String
+-
+LowCardinality(UInt64)	LowCardinality(UInt64)	LowCardinality(String)	LowCardinality(String)
+-
+LowCardinality(UInt64)	UInt64	String	LowCardinality(String)
+LowCardinality(UInt64)	UInt64	String	LowCardinality(String)
+LowCardinality(UInt64)	UInt64	String	LowCardinality(String)
+-
+UInt64	LowCardinality(UInt64)	LowCardinality(String)	String
+UInt64	LowCardinality(UInt64)	LowCardinality(String)	String
+UInt64	LowCardinality(UInt64)	LowCardinality(String)	String
+-
+LowCardinality(UInt64)	LowCardinality(UInt64)	LowCardinality(String)	LowCardinality(String)
+LowCardinality(UInt64)	LowCardinality(UInt64)	LowCardinality(String)	LowCardinality(String)
+LowCardinality(UInt64)	LowCardinality(UInt64)	LowCardinality(String)	LowCardinality(String)
diff --git a/tests/queries/0_stateless/01353_low_cardinality_join_types.sql b/tests/queries/0_stateless/01353_low_cardinality_join_types.sql
new file mode 100644
index 000000000000..91ebe97fa48a
--- /dev/null
+++ b/tests/queries/0_stateless/01353_low_cardinality_join_types.sql
@@ -0,0 +1,75 @@
+set join_algorithm = 'hash';
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select toLowCardinality(number) k, toString(number) s from numbers(2)) as js1
+join (select number+1 k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select number k, toLowCardinality(toString(number)) s from numbers(2)) as js1
+join (select toLowCardinality(number+1) k, toString(number+1) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select toLowCardinality(number) k, toLowCardinality(toString(number)) s from numbers(2)) as js1
+join (select toLowCardinality(number+1) k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select toLowCardinality(number) k, toString(number) s from numbers(2)) as js1
+full join (select number+1 k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select number k, toLowCardinality(toString(number)) s from numbers(2)) as js1
+full join (select toLowCardinality(number+1) k, toString(number+1) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select toLowCardinality(number) k, toLowCardinality(toString(number)) s from numbers(2)) as js1
+full join (select toLowCardinality(number+1) k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+set join_algorithm = 'prefer_partial_merge';
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select toLowCardinality(number) k, toString(number) s from numbers(2)) as js1
+join (select number+1 k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select number k, toLowCardinality(toString(number)) s from numbers(2)) as js1
+join (select toLowCardinality(number+1) k, toString(number+1) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select toLowCardinality(number) k, toLowCardinality(toString(number)) s from numbers(2)) as js1
+join (select toLowCardinality(number+1) k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select toLowCardinality(number) k, toString(number) s from numbers(2)) as js1
+full join (select number+1 k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select number k, toLowCardinality(toString(number)) s from numbers(2)) as js1
+full join (select toLowCardinality(number+1) k, toString(number+1) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
+
+select '-';
+select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
+from (select toLowCardinality(number) k, toLowCardinality(toString(number)) s from numbers(2)) as js1
+full join (select toLowCardinality(number+1) k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2
+using k order by js1.k, js2.k;
