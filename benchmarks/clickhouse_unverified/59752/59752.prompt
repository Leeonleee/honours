You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Logical error in `countMatches` found by AST Fuzzer
https://s3.amazonaws.com/clickhouse-test-reports/59563/a740fc7835ff54bda95c322d9d19e31349144d8e/ast_fuzzer__tsan_.html

```sql
SELECT  (39.08935546874999, 57.25528054528888), countMatches(toFixedString(materialize('foo'), 3), toFixedString(toFixedString('[f]{0}', 6), 6)) GROUP BY jumpConsistentHash(42, 57)
```

```
[...]
2024.02.07 18:10:03.407721 [ 1213 ] {} <Fatal> BaseDaemon: 12. DB::FunctionCountMatches<(anonymous namespace)::FunctionCountMatchesCaseSensitive>::executeImpl(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x00000000092fd4d6 in /workspace/clickhouse
2024.02.07 18:10:07.835696 [ 1213 ] {} <Fatal> BaseDaemon: 13. DB::IFunction::executeImplDryRun(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x0000000007453304 in /workspace/clickhouse
2024.02.07 18:10:12.281175 [ 1213 ] {} <Fatal> BaseDaemon: 14. DB::FunctionToExecutableFunctionAdaptor::executeDryRunImpl(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x0000000007452bb1 in /workspace/clickhouse
2024.02.07 18:10:12.324003 [ 1213 ] {} <Fatal> BaseDaemon: 15. ./build_docker/./src/Functions/IFunction.cpp:0: DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x0000000016671fe7 in /workspace/clickhouse
[...]
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
