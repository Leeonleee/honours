diff --git a/tests/queries/0_stateless/03168_read_in_order_buffering_1.reference b/tests/queries/0_stateless/03168_read_in_order_buffering_1.reference
new file mode 100644
index 000000000000..306885a09748
--- /dev/null
+++ b/tests/queries/0_stateless/03168_read_in_order_buffering_1.reference
@@ -0,0 +1,6 @@
+1
+0
+1
+0
+0
+0
diff --git a/tests/queries/0_stateless/03168_read_in_order_buffering_1.sql b/tests/queries/0_stateless/03168_read_in_order_buffering_1.sql
new file mode 100644
index 000000000000..75025dcadc80
--- /dev/null
+++ b/tests/queries/0_stateless/03168_read_in_order_buffering_1.sql
@@ -0,0 +1,45 @@
+DROP TABLE IF EXISTS t_read_in_order_1;
+
+CREATE TABLE t_read_in_order_1 (id UInt64, v UInt64)
+ENGINE = MergeTree ORDER BY id
+SETTINGS index_granularity = 1024, index_granularity_bytes = '10M';
+
+INSERT INTO t_read_in_order_1 SELECT number, number FROM numbers(1000000);
+
+SET max_threads = 8;
+SET optimize_read_in_order = 1;
+SET read_in_order_use_buffering = 1;
+
+SELECT count() FROM
+(
+    EXPLAIN PIPELINE SELECT * FROM t_read_in_order_1 ORDER BY id
+) WHERE explain LIKE '%BufferChunks%';
+
+SELECT count() FROM
+(
+    EXPLAIN PIPELINE SELECT * FROM t_read_in_order_1 ORDER BY id LIMIT 10
+) WHERE explain LIKE '%BufferChunks%';
+
+SELECT count() FROM
+(
+    EXPLAIN PIPELINE SELECT * FROM t_read_in_order_1 WHERE v % 10 = 0 ORDER BY id LIMIT 10
+) WHERE explain LIKE '%BufferChunks%';
+
+SET read_in_order_use_buffering = 0;
+
+SELECT count() FROM
+(
+    EXPLAIN PIPELINE SELECT * FROM t_read_in_order_1 ORDER BY id
+) WHERE explain LIKE '%BufferChunks%';
+
+SELECT count() FROM
+(
+    EXPLAIN PIPELINE SELECT * FROM t_read_in_order_1 ORDER BY id LIMIT 10
+) WHERE explain LIKE '%BufferChunks%';
+
+SELECT count() FROM
+(
+    EXPLAIN PIPELINE SELECT * FROM t_read_in_order_1 WHERE v % 10 = 0 ORDER BY id LIMIT 10
+) WHERE explain LIKE '%BufferChunks%';
+
+DROP TABLE t_read_in_order_1;
diff --git a/tests/queries/0_stateless/03168_read_in_order_buffering_2.reference b/tests/queries/0_stateless/03168_read_in_order_buffering_2.reference
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/tests/queries/0_stateless/03168_read_in_order_buffering_2.sql b/tests/queries/0_stateless/03168_read_in_order_buffering_2.sql
new file mode 100644
index 000000000000..1d3a75412e02
--- /dev/null
+++ b/tests/queries/0_stateless/03168_read_in_order_buffering_2.sql
@@ -0,0 +1,17 @@
+-- Tags: long, no-random-settings, no-tsan, no-asan, no-msan, no-s3-storage
+
+DROP TABLE IF EXISTS t_read_in_order_2;
+
+CREATE TABLE t_read_in_order_2 (id UInt64, v UInt64) ENGINE = MergeTree ORDER BY id;
+
+INSERT INTO t_read_in_order_2 SELECT number, number FROM numbers(10000000);
+OPTIMIZE TABLE t_read_in_order_2 FINAL;
+
+SET optimize_read_in_order = 1;
+SET max_threads = 4;
+SET read_in_order_use_buffering = 1;
+SET max_memory_usage = '100M';
+
+SELECT * FROM t_read_in_order_2 ORDER BY id FORMAT Null;
+
+DROP TABLE t_read_in_order_2;
