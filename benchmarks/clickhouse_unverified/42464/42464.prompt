You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
[ubsan] GregorianDate.h:334:36: runtime error: signed integer overflow
https://s3.amazonaws.com/clickhouse-test-reports/42407/597544a15b977506df68cf4a84eac4f37565398d/fuzzer_astfuzzerubsan//report.html

```sql
SELECT fromModifiedJulianDay(9223372036854775807 :: Int64)
```


<details>
<summary>Details</summary>

```
../src/Functions/GregorianDate.h:334:36: runtime error: signed integer overflow: 9223372036854775807 + 678575 cannot be represented in type 'long'
    #0 0x18967248 in DB::OrdinalDate<int>::OrdinalDate<long>(long) (/workspace/clickhouse+0x18967248) (BuildId: 2a88a3de5fd8cdbc127a234c6d8b26ca23df9cf8)
    #1 0x18967054 in DB::GregorianDate<int>::GregorianDate<long>(long) (/workspace/clickhouse+0x18967054) (BuildId: 2a88a3de5fd8cdbc127a234c6d8b26ca23df9cf8)
    #2 0x18966cbb in DB::ExecutableFunctionFromModifiedJulianDay<DB::NameFromModifiedJulianDay, DB::DataTypeNumber<long>, false>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x18966cbb) (BuildId: 2a88a3de5fd8cdbc127a234c6d8b26ca23df9cf8)
    #3 0x158b65fe in DB::IExecutableFunction::executeDryRunImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/workspace/clickhouse+0x158b65fe) (BuildId: 2a88a3de5fd8cdbc127a234c6d8b26ca23df9cf8)
    #4 0x299ed258 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/../src/Functions/IFunction.cpp:246:15
    #5 0x299ed712 in DB::IExecutableFunction::defaultImplementationForNulls(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/../src/Functions/IFunction.cpp:199:20
    #6 0x299ed1d1 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/../src/Functions/IFunction.cpp:241:20
    #7 0x299ec9d2 in DB::IExecutableFunction::defaultImplementationForConstantArguments(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/../src/Functions/IFunction.cpp:160:31
    #8 0x299ed157 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/../src/Functions/IFunction.cpp:238:20
    #9 0x299eeafa in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/../src/Functions/IFunction.cpp:302:22
    #10 0x299f00d0 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build_docker/../src/Functions/IFunction.cpp:372:16
    #11 0x2a2c45ad in DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<DB::ActionsDAG::Node const*, std::__1::allocator<DB::ActionsDAG::Node const*>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) build_docker/../src/Interpreters/ActionsDAG.cpp:203:37
    #12 0x2a87876b in DB::ScopeStack::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) build_docker/../src/Interpreters/ActionsVisitor.cpp:678:51
    #13 0x2a8880b3 in DB::ActionsMatcher::Data::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) build_docker/../src/Interpreters/ActionsVisitor.h:182:27
    #14 0x2a87dd57 in DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) build_docker/../src/Interpreters/ActionsVisitor.cpp:1296:14
    #15 0x2a88295b in DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) build_docker/../contrib/libcxx/include/vector
    #16 0x2a853e28 in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) build_docker/../src/Interpreters/InDepthNodeVisitor.h:37:13
    #17 0x2a83b245 in DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) build_docker/../src/Interpreters/ExpressionAnalyzer.cpp:555:48
    #18 0x2a8482eb in DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) build_docker/../src/Interpreters/ExpressionAnalyzer.cpp:1492:5
    #19 0x2a84d9d2 in DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) build_docker/../src/Interpreters/ExpressionAnalyzer.cpp:1963:24
    #20 0x2afea96e in DB::InterpreterSelectQuery::getSampleBlockImpl() build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:804:23
    #21 0x2afde781 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>)::$_1::operator()(bool) const build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:637:25
    #22 0x2afd56e4 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>) build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:640:5
    #23 0x2afd18ce in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:192:7
    #24 0x2b0559a7 in std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&>(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:725:32
    #25 0x2b0524cd in DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_docker/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:244:16
    #26 0x2b04ffb0 in DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) build_docker/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:146:13
    #27 0x2af8c5c7 in std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&>(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&) build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:725:32
    #28 0x2af8ae9a in DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) build_docker/../src/Interpreters/InterpreterFactory.cpp:128:16
    #29 0x2b494892 in DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) build_docker/../src/Interpreters/executeQuery.cpp:663:27
    #30 0x2b490dab in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) build_docker/../src/Interpreters/executeQuery.cpp:1105:30
    #31 0x2c61553f in DB::TCPHandler::runImpl() build_docker/../src/Server/TCPHandler.cpp:374:24
    #32 0x2c6361b9 in DB::TCPHandler::run() build_docker/../src/Server/TCPHandler.cpp:1899:9
    #33 0x2d5f006b in Poco::Net::TCPServerConnection::start() build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:43:3
    #34 0x2d5f0559 in Poco::Net::TCPServerDispatcher::run() build_docker/../contrib/poco/Net/src/TCPServerDispatcher.cpp:115:20
    #35 0x2d765726 in Poco::PooledThread::run() build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:199:14
    #36 0x2d7632ce in Poco::ThreadImpl::runnableEntry(void*) build_docker/../contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27
    #37 0x7fb2e5871608 in start_thread /build/glibc-SzIz7B/glibc-2.31/nptl/pthread_create.c:477:8
    #38 0x7fb2e5796132 in __clone /build/glibc-SzIz7B/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95

SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/Functions/GregorianDate.h:334:36 in 

```

```
2022.10.17 20:09:58.562624 [ 415 ] {} <Fatal> BaseDaemon: ########################################
2022.10.17 20:09:58.562708 [ 415 ] {} <Fatal> BaseDaemon: (version 22.10.1.1, build id: 2A88A3DE5FD8CDBC127A234C6D8B26CA23DF9CF8) (from thread 151) (query_id: 42a3308a-2409-4cac-b556-2e26aa655f68) (query: SELECT fromModifiedJulianDay(CAST(9223372036854775807, 'Nullable(Int64)')) GROUP BY GROUPING SETS ((NULL), (NULL), (NULL))) Received signal Unknown signal (-3)
2022.10.17 20:09:58.562740 [ 415 ] {} <Fatal> BaseDaemon: Sanitizer trap.
2022.10.17 20:09:58.562796 [ 415 ] {} <Fatal> BaseDaemon: Stack trace: 0x1f937f83 0x1fbd41f6 0x15878496 0x15888ed1 0x18967249 0x18967055 0x18966cbc 0x158b65ff 0x299ed259 0x299ed713 0x299ed1d2 0x299ec9d3 0x299ed158 0x299eeafb 0x299f00d1 0x2a2c45ae 0x2a87876c 0x2a8880b4 0x2a87dd58 0x2a88295c 0x2a853e29 0x2a83b246 0x2a8482ec 0x2a84d9d3 0x2afea96f 0x2afde782 0x2afd56e5 0x2afd18cf 0x2b0559a8 0x2b0524ce 0x2b04ffb1 0x2af8c5c8 0x2af8ae9b 0x2b494893 0x2b490dac 0x2c615540 0x2c6361ba 0x2d5f006c 0x2d5f055a 0x2d765727 0x2d7632cf 0x7fb2e5871609 0x7fb2e5796133
2022.10.17 20:09:58.572303 [ 415 ] {} <Fatal> BaseDaemon: 0.1. inlined from ./build_docker/../src/Common/StackTrace.cpp:332: StackTrace::tryCapture()
2022.10.17 20:09:58.572355 [ 415 ] {} <Fatal> BaseDaemon: 0. ./build_docker/../src/Common/StackTrace.cpp:293: StackTrace::StackTrace() @ 0x1f937f83 in /workspace/clickhouse
2022.10.17 20:09:58.590863 [ 415 ] {} <Fatal> BaseDaemon: 1. ./build_docker/../src/Daemon/BaseDaemon.cpp:0: sanitizerDeathCallback() @ 0x1fbd41f6 in /workspace/clickhouse
2022.10.17 20:09:59.563601 [ 415 ] {} <Fatal> BaseDaemon: 2. __sanitizer::Die() @ 0x15878496 in /workspace/clickhouse
2022.10.17 20:10:00.518177 [ 415 ] {} <Fatal> BaseDaemon: 3. ? @ 0x15888ed1 in /workspace/clickhouse
2022.10.17 20:10:01.473014 [ 415 ] {} <Fatal> BaseDaemon: 4. ? @ 0x18967249 in /workspace/clickhouse
2022.10.17 20:10:02.428886 [ 415 ] {} <Fatal> BaseDaemon: 5. DB::GregorianDate<int>::GregorianDate<long>(long) @ 0x18967055 in /workspace/clickhouse
2022.10.17 20:10:03.384223 [ 415 ] {} <Fatal> BaseDaemon: 6. DB::ExecutableFunctionFromModifiedJulianDay<DB::NameFromModifiedJulianDay, DB::DataTypeNumber<long>, false>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x18966cbc in /workspace/clickhouse
2022.10.17 20:10:04.340560 [ 415 ] {} <Fatal> BaseDaemon: 7. DB::IExecutableFunction::executeDryRunImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x158b65ff in /workspace/clickhouse
2022.10.17 20:10:04.353180 [ 415 ] {} <Fatal> BaseDaemon: 8. ./build_docker/../src/Functions/IFunction.cpp:0: DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x299ed259 in /workspace/clickhouse
2022.10.17 20:10:04.365993 [ 415 ] {} <Fatal> BaseDaemon: 9. ./build_docker/../src/Functions/IFunction.cpp:0: DB::IExecutableFunction::defaultImplementationForNulls(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x299ed713 in /workspace/clickhouse
2022.10.17 20:10:04.378187 [ 415 ] {} <Fatal> BaseDaemon: 10.1. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/detail/operator_bool.hpp:14: boost::intrusive_ptr<DB::IColumn const>::operator bool() const
2022.10.17 20:10:04.378241 [ 415 ] {} <Fatal> BaseDaemon: 10. ./build_docker/../src/Functions/IFunction.cpp:241: DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x299ed1d2 in /workspace/clickhouse
2022.10.17 20:10:04.390172 [ 415 ] {} <Fatal> BaseDaemon: 11. ./build_docker/../src/Functions/IFunction.cpp:0: DB::IExecutableFunction::defaultImplementationForConstantArguments(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x299ec9d3 in /workspace/clickhouse
2022.10.17 20:10:04.402244 [ 415 ] {} <Fatal> BaseDaemon: 12.1. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/detail/operator_bool.hpp:14: boost::intrusive_ptr<DB::IColumn const>::operator bool() const
2022.10.17 20:10:04.402282 [ 415 ] {} <Fatal> BaseDaemon: 12. ./build_docker/../src/Functions/IFunction.cpp:238: DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x299ed158 in /workspace/clickhouse
2022.10.17 20:10:04.415255 [ 415 ] {} <Fatal> BaseDaemon: 13.1. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:115: intrusive_ptr
2022.10.17 20:10:04.415289 [ 415 ] {} <Fatal> BaseDaemon: 13.2. inlined from ./build_docker/../contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:122: boost::intrusive_ptr<DB::IColumn const>::operator=(boost::intrusive_ptr<DB::IColumn const>&&)
2022.10.17 20:10:04.415312 [ 415 ] {} <Fatal> BaseDaemon: 13.3. inlined from ./build_docker/../src/Common/COW.h:136: COW<DB::IColumn>::immutable_ptr<DB::IColumn>::operator=(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&&)
2022.10.17 20:10:04.415327 [ 415 ] {} <Fatal> BaseDaemon: 13. ./build_docker/../src/Functions/IFunction.cpp:302: DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x299eeafb in /workspace/clickhouse
2022.10.17 20:10:04.428872 [ 415 ] {} <Fatal> BaseDaemon: 14. ./build_docker/../src/Functions/IFunction.cpp:0: DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x299f00d1 in /workspace/clickhouse
2022.10.17 20:10:04.618098 [ 415 ] {} <Fatal> BaseDaemon: 15. ./build_docker/../src/Interpreters/ActionsDAG.cpp:0: DB::ActionsDAG::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<DB::ActionsDAG::Node const*, std::__1::allocator<DB::ActionsDAG::Node const*> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) @ 0x2a2c45ae in /workspace/clickhouse
2022.10.17 20:10:04.677268 [ 415 ] {} <Fatal> BaseDaemon: 16. ./build_docker/../src/Interpreters/ActionsVisitor.cpp:0: DB::ScopeStack::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) @ 0x2a87876c in /workspace/clickhouse
2022.10.17 20:10:04.739770 [ 415 ] {} <Fatal> BaseDaemon: 17.1. inlined from ./build_docker/../contrib/libcxx/include/string:1445: std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const
2022.10.17 20:10:04.739829 [ 415 ] {} <Fatal> BaseDaemon: 17.2. inlined from ./build_docker/../contrib/libcxx/include/string:2231: ~basic_string
2022.10.17 20:10:04.739857 [ 415 ] {} <Fatal> BaseDaemon: 17. ./build_docker/../src/Interpreters/ActionsVisitor.h:182: DB::ActionsMatcher::Data::addFunction(std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) @ 0x2a8880b4 in /workspace/clickhouse
2022.10.17 20:10:04.800300 [ 415 ] {} <Fatal> BaseDaemon: 18. ./build_docker/../src/Interpreters/ActionsVisitor.cpp:0: DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x2a87dd58 in /workspace/clickhouse
2022.10.17 20:10:04.862373 [ 415 ] {} <Fatal> BaseDaemon: 19. ./build_docker/../contrib/libcxx/include/vector:0: DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x2a88295c in /workspace/clickhouse
2022.10.17 20:10:04.926129 [ 415 ] {} <Fatal> BaseDaemon: 20. ./build_docker/../src/Interpreters/InDepthNodeVisitor.h:46: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x2a853e29 in /workspace/clickhouse
2022.10.17 20:10:04.990103 [ 415 ] {} <Fatal> BaseDaemon: 21.1. inlined from ./build_docker/../src/Interpreters/ActionsVisitor.h:187: DB::ActionsMatcher::Data::getActions()
2022.10.17 20:10:04.990155 [ 415 ] {} <Fatal> BaseDaemon: 21. ./build_docker/../src/Interpreters/ExpressionAnalyzer.cpp:556: DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x2a83b246 in /workspace/clickhouse
2022.10.17 20:10:05.063883 [ 415 ] {} <Fatal> BaseDaemon: 22. ./build_docker/../src/Interpreters/ExpressionAnalyzer.cpp:0: DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x2a8482ec in /workspace/clickhouse
2022.10.17 20:10:05.138820 [ 415 ] {} <Fatal> BaseDaemon: 23. ./build_docker/../src/Interpreters/ExpressionAnalyzer.cpp:0: DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x2a84d9d3 in /workspace/clickhouse
2022.10.17 20:10:05.233198 [ 415 ] {} <Fatal> BaseDaemon: 24. ./build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:804: DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x2afea96f in /workspace/clickhouse
2022.10.17 20:10:05.325342 [ 415 ] {} <Fatal> BaseDaemon: 25. ./build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>)::$_1::operator()(bool) const @ 0x2afde782 in /workspace/clickhouse
2022.10.17 20:10:05.414078 [ 415 ] {} <Fatal> BaseDaemon: 26. ./build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>) @ 0x2afd56e5 in /workspace/clickhouse
2022.10.17 20:10:05.504528 [ 415 ] {} <Fatal> BaseDaemon: 27. ./build_docker/../src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x2afd18cf in /workspace/clickhouse
2022.10.17 20:10:05.543742 [ 415 ] {} <Fatal> BaseDaemon: 28. ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:725: std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x2b0559a8 in /workspace/clickhouse
2022.10.17 20:10:05.575557 [ 415 ] {} <Fatal> BaseDaemon: 29.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/compressed_pair.h:48: __compressed_pair_elem<DB::InterpreterSelectQuery *, void>
2022.10.17 20:10:05.575621 [ 415 ] {} <Fatal> BaseDaemon: 29.2. inlined from ./build_docker/../contrib/libcxx/include/__memory/compressed_pair.h:130: __compressed_pair<DB::InterpreterSelectQuery *, std::__1::default_delete<DB::InterpreterSelectQuery> >
2022.10.17 20:10:05.575647 [ 415 ] {} <Fatal> BaseDaemon: 29.3. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:220: unique_ptr<DB::InterpreterSelectQuery, std::__1::default_delete<DB::InterpreterSelectQuery>, void, void>
2022.10.17 20:10:05.575674 [ 415 ] {} <Fatal> BaseDaemon: 29. ./build_docker/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:244: DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x2b0524ce in /workspace/clickhouse
2022.10.17 20:10:05.606360 [ 415 ] {} <Fatal> BaseDaemon: 30. ./build_docker/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:0: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x2b04ffb1 in /workspace/clickhouse
2022.10.17 20:10:05.621206 [ 415 ] {} <Fatal> BaseDaemon: 31. ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:0: std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&>(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&) @ 0x2af8c5c8 in /workspace/clickhouse
2022.10.17 20:10:05.634016 [ 415 ] {} <Fatal> BaseDaemon: 32.1. inlined from ./build_docker/../src/Interpreters/InterpreterFactory.cpp:128: __compressed_pair_elem<DB::InterpreterSelectWithUnionQuery *, void>
2022.10.17 20:10:05.634078 [ 415 ] {} <Fatal> BaseDaemon: 32.2. inlined from ./build_docker/../contrib/libcxx/include/__memory/compressed_pair.h:130: __compressed_pair<DB::InterpreterSelectWithUnionQuery *, std::__1::default_delete<DB::InterpreterSelectWithUnionQuery> >
2022.10.17 20:10:05.634095 [ 415 ] {} <Fatal> BaseDaemon: 32.3. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:220: unique_ptr<DB::InterpreterSelectWithUnionQuery, std::__1::default_delete<DB::InterpreterSelectWithUnionQuery>, void, void>
2022.10.17 20:10:05.634112 [ 415 ] {} <Fatal> BaseDaemon: 32. ./build_docker/../src/Interpreters/InterpreterFactory.cpp:128: DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x2af8ae9b in /workspace/clickhouse
2022.10.17 20:10:05.685495 [ 415 ] {} <Fatal> BaseDaemon: 33. ./build_docker/../src/Interpreters/executeQuery.cpp:663: DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x2b494893 in /workspace/clickhouse
2022.10.17 20:10:05.740905 [ 415 ] {} <Fatal> BaseDaemon: 34. ./build_docker/../src/Interpreters/executeQuery.cpp:1105: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x2b490dac in /workspace/clickhouse
2022.10.17 20:10:05.786672 [ 415 ] {} <Fatal> BaseDaemon: 35. ./build_docker/../src/Server/TCPHandler.cpp:374: DB::TCPHandler::runImpl() @ 0x2c615540 in /workspace/clickhouse
2022.10.17 20:10:05.842942 [ 415 ] {} <Fatal> BaseDaemon: 36. ./build_docker/../src/Server/TCPHandler.cpp:1901: DB::TCPHandler::run() @ 0x2c6361ba in /workspace/clickhouse
2022.10.17 20:10:05.847198 [ 415 ] {} <Fatal> BaseDaemon: 37. ./build_docker/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x2d5f006c in /workspace/clickhouse
2022.10.17 20:10:05.854080 [ 415 ] {} <Fatal> BaseDaemon: 38.1. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:54: std::__1::default_delete<Poco::Net::TCPServerConnection>::operator()(Poco::Net::TCPServerConnection*) const
2022.10.17 20:10:05.854121 [ 415 ] {} <Fatal> BaseDaemon: 38.2. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:315: std::__1::unique_ptr<Poco::Net::TCPServerConnection, std::__1::default_delete<Poco::Net::TCPServerConnection> >::reset(Poco::Net::TCPServerConnection*)
2022.10.17 20:10:05.854138 [ 415 ] {} <Fatal> BaseDaemon: 38.3. inlined from ./build_docker/../contrib/libcxx/include/__memory/unique_ptr.h:269: ~unique_ptr
2022.10.17 20:10:05.854161 [ 415 ] {} <Fatal> BaseDaemon: 38. ./build_docker/../contrib/poco/Net/src/TCPServerDispatcher.cpp:116: Poco::Net::TCPServerDispatcher::run() @ 0x2d5f055a in /workspace/clickhouse
2022.10.17 20:10:05.861213 [ 415 ] {} <Fatal> BaseDaemon: 39. ./build_docker/../contrib/poco/Foundation/src/ThreadPool.cpp:213: Poco::PooledThread::run() @ 0x2d765727 in /workspace/clickhouse
2022.10.17 20:10:05.868161 [ 415 ] {} <Fatal> BaseDaemon: 40.1. inlined from ./build_docker/../contrib/poco/Foundation/include/Poco/SharedPtr.h:156: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >::assign(Poco::Runnable*)
2022.10.17 20:10:05.868203 [ 415 ] {} <Fatal> BaseDaemon: 40.2. inlined from ./build_docker/../contrib/poco/Foundation/include/Poco/SharedPtr.h:208: Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >::operator=(Poco::Runnable*)
2022.10.17 20:10:05.868219 [ 415 ] {} <Fatal> BaseDaemon: 40. ./build_docker/../contrib/poco/Foundation/src/Thread_POSIX.cpp:360: Poco::ThreadImpl::runnableEntry(void*) @ 0x2d7632cf in /workspace/clickhouse
2022.10.17 20:10:05.868250 [ 415 ] {} <Fatal> BaseDaemon: 41. ? @ 0x7fb2e5871609 in ?
2022.10.17 20:10:05.868279 [ 415 ] {} <Fatal> BaseDaemon: 42. clone @ 0x7fb2e5796133 in ?
2022.10.17 20:10:06.182179 [ 415 ] {} <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read. (calculated checksum: 982B9C738A6C457CEDEF03251BAE6B81)
```

</details>
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
