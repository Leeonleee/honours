diff --git a/src/Functions/FunctionsDecimalArithmetics.h b/src/Functions/FunctionsDecimalArithmetics.h
index c1349e3d6fc9..2bd0d7a22eab 100644
--- a/src/Functions/FunctionsDecimalArithmetics.h
+++ b/src/Functions/FunctionsDecimalArithmetics.h
@@ -247,7 +247,7 @@ class FunctionsDecimalArithmetics : public IFunction
 
     bool isVariadic() const override { return true; }
     size_t getNumberOfArguments() const override { return 0; }
-    bool isSuitableForShortCircuitArgumentsExecution(const DataTypesWithConstInfo & /*arguments*/) const override { return false; }
+    bool isSuitableForShortCircuitArgumentsExecution(const DataTypesWithConstInfo & /*arguments*/) const override { return Transform::suitable_for_short_circuit; }
 
     DataTypePtr getReturnTypeImpl(const ColumnsWithTypeAndName & arguments) const override
     {
diff --git a/src/Functions/divideDecimal.cpp b/src/Functions/divideDecimal.cpp
index c8d2c5edc8a1..081cef7cb94c 100644
--- a/src/Functions/divideDecimal.cpp
+++ b/src/Functions/divideDecimal.cpp
@@ -16,6 +16,7 @@ namespace
 struct DivideDecimalsImpl
 {
     static constexpr auto name = "divideDecimal";
+    static constexpr auto suitable_for_short_circuit = true;
 
     template <typename FirstType, typename SecondType>
     static Decimal256
diff --git a/src/Functions/multiplyDecimal.cpp b/src/Functions/multiplyDecimal.cpp
index 7e30a893d722..1e130b9f6a64 100644
--- a/src/Functions/multiplyDecimal.cpp
+++ b/src/Functions/multiplyDecimal.cpp
@@ -15,6 +15,7 @@ namespace
 struct MultiplyDecimalsImpl
 {
     static constexpr auto name = "multiplyDecimal";
+    static constexpr auto suitable_for_short_circuit = false;
 
     template <typename FirstType, typename SecondType>
     static Decimal256
