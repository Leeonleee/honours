You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
EOF from detectDefaultCompressionCodec start happening between v20.8.2.3 and v20.13.1.1?
I tried to upgrade ClickHouse from v20.8.2.3 to v20.13.1.1 but there are some errors while reading a merge_tree table..

**Error Messages:**
```
2020.12.22 11:19:36.084760 [ 20114 ] {} <Error> DB::MergeTreeData::loadDataParts(bool)::<lambda()>: Code: 32, e.displayText() = DB::Exception: Attempt to read after eof, Stack trace (when copying this message
, always include the lines below):                                                    
                                                                                      
0. /home/deploy/sources/ClickHouse.achimbab/build/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char
> > const&, int) @ 0xd00a9ac in /home/deploy/bin/clickhouse-limit-pushdown-test            
1. /home/deploy/sources/ClickHouse.achimbab/build/../src/Common/Exception.cpp:54: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @
0x4322081 in /home/deploy/bin/clickhouse-limit-pushdown-test                          
2. /home/deploy/sources/ClickHouse.achimbab/build/../contrib/libcxx/include/string:2134: DB::ReadBuffer::throwReadAfterEOF() @ 0x3963061 in /home/deploy/bin/clickhouse-limit-pushdown-test
3. /home/deploy/sources/ClickHouse.achimbab/build/../src/IO/ReadBuffer.h:108: DB::getCompressionCodecForFile(std::__1::shared_ptr<DB::IDisk> const&, std::__1::basic_string<char, std::__1::char_traits<char>, s
td::__1::allocator<char> > const&) @ 0xa52d62e in /home/deploy/bin/clickhouse-limit-pushdown-test
4. /home/deploy/sources/ClickHouse.achimbab/build/../contrib/libcxx/include/type_traits:3696: DB::IMergeTreeDataPart::detectDefaultCompressionCodec() const @ 0xa0231f5 in /home/deploy/bin/clickhouse-limit-pus
hdown-test                                                                                     
5. /home/deploy/sources/ClickHouse.achimbab/build/../contrib/libcxx/include/type_traits:3696: DB::IMergeTreeDataPart::loadDefaultCompressionCodec() @ 0xa023a72 in /home/deploy/bin/clickhouse-limit-pushdown-te
st                                                                                             
6. /home/deploy/sources/ClickHouse.achimbab/build/../src/Common/MemoryTracker.h:142: DB::IMergeTreeDataPart::loadColumnsChecksumsIndexes(bool, bool) @ 0xa02a360 in /home/deploy/bin/clickhouse-limit-pushdown-t
est                                                                                            
7. /home/deploy/sources/ClickHouse.achimbab/build/../src/Storages/MergeTree/MergeTreeData.cpp:868: DB::MergeTreeData::loadDataParts(bool)::'lambda'()::operator()() const @ 0xa0743aa in /home/deploy/bin/clickh
ouse-limit-pushdown-test                                                                       
8. /home/deploy/sources/ClickHouse.achimbab/build/../contrib/libcxx/include/functional:1853: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x432b487 in
 /home/deploy/bin/clickhouse-limit-pushdown-test                                             
9. /home/deploy/sources/ClickHouse.achimbab/build/../src/Common/ThreadPool.h:177: ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<vo
id ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambd
a1'()&&...)::'lambda'()::operator()() @ 0x432bc5a in /home/deploy/bin/clickhouse-limit-pushdown-test
10. /home/deploy/sources/ClickHouse.achimbab/build/../contrib/libcxx/include/functional:1853: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x432a967 in /home/
deploy/bin/clickhouse-limit-pushdown-test
11. /home/deploy/sources/ClickHouse.achimbab/build/../contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delet
e<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x432907f in /home/deplo
y/bin/clickhouse-limit-pushdown-test
12. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so
13. /build/glibc-2ORdQG/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x121a3f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so
 (version 20.13.1.1)
```

Was the data layout changed between v20.8.2.3 and v20.13.1.1?

Thank you.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
