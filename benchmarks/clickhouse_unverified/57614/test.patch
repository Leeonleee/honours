diff --git a/tests/queries/0_stateless/02516_join_with_totals_and_subquery_bug.reference b/tests/queries/0_stateless/02516_join_with_totals_and_subquery_bug.reference
index 19da8828c30e..83571fd9005f 100644
--- a/tests/queries/0_stateless/02516_join_with_totals_and_subquery_bug.reference
+++ b/tests/queries/0_stateless/02516_join_with_totals_and_subquery_bug.reference
@@ -9,3 +9,23 @@
 \N
 
 100000000000000000000
+---
+[]	0	['2']
+['0']	2	['0']
+['0']	2	['0']
+['1']	1	[]
+
+[]	3	[]
+---
+[]	0	['2']	1
+['0']	2	['0']	2
+['1']	1	[]	0
+
+[]	3	[]	3
+---
+[]	['2']	1
+['0']	['0']	2
+['0']	['0']	2
+['1']	[]	0
+
+[]	[]	3
diff --git a/tests/queries/0_stateless/02516_join_with_totals_and_subquery_bug.sql b/tests/queries/0_stateless/02516_join_with_totals_and_subquery_bug.sql
index 6b58d737a3ec..d39efb0b1937 100644
--- a/tests/queries/0_stateless/02516_join_with_totals_and_subquery_bug.sql
+++ b/tests/queries/0_stateless/02516_join_with_totals_and_subquery_bug.sql
@@ -1,5 +1,3 @@
-SET allow_experimental_analyzer = 1;
-
 SELECT *
 FROM
 (
@@ -34,7 +32,6 @@ INNER JOIN
 ) AS t2 USING (a)
 SETTINGS allow_experimental_analyzer=1;
 
-
 SELECT a
 FROM
 (
@@ -72,3 +69,46 @@ ALL LEFT JOIN
         WITH TOTALS
 ) AS js2 USING (a)
 ORDER BY b ASC NULLS FIRST;
+
+SELECT '---';
+SELECT
+    *
+FROM (
+    SELECT ([toString(number % 2)] :: Array(LowCardinality(String))) AS item_id, count() FROM numbers(3) GROUP BY item_id
+    WITH TOTALS
+) AS l
+FULL JOIN (
+    SELECT ([toString((number % 2) * 2)] :: Array(String)) AS item_id FROM numbers(3)
+) AS r
+ON l.item_id = r.item_id
+ORDER BY 1,2,3
+;
+
+SELECT '---';
+SELECT
+    *
+FROM (
+    SELECT ([toString(number % 2)] :: Array(LowCardinality(String))) AS item_id, count() FROM numbers(3) GROUP BY item_id
+    WITH TOTALS
+) AS l
+FULL JOIN (
+    SELECT ([toString((number % 2) * 2)] :: Array(String)) AS item_id, count() FROM numbers(3) GROUP BY item_id
+    WITH TOTALS
+) AS r
+ON l.item_id = r.item_id
+ORDER BY 1,2,3
+;
+
+SELECT '---';
+SELECT
+    *
+FROM (
+    SELECT ([toString(number % 2)] :: Array(String)) AS item_id FROM numbers(3)
+) AS l
+FULL JOIN (
+    SELECT ([toString((number % 2) * 2)] :: Array(LowCardinality(String))) AS item_id, count() FROM numbers(3) GROUP BY item_id
+    WITH TOTALS
+) AS r
+ON l.item_id = r.item_id
+ORDER BY 1,2,3
+;
