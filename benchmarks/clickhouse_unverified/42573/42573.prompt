You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Msan: use-of-uninitialized-value in `FunctionConvert` with suspicious `LowCardinality`
**Describe the bug**
[A link to the report
](https://s3.amazonaws.com/clickhouse-test-reports/0/772978d4c0487ecc77f80b9e2aba98b8278676d2/fuzzer_astfuzzermsan//report.html)

**How to reproduce**


```sql
DROP TABLE IF EXISTS alias_2__fuzz_25;

SET allow_suspicious_low_cardinality_types = 1;

CREATE TABLE alias_2__fuzz_25 (`dt` LowCardinality(Date), `col` DateTime, `col2` Nullable(Int256), `colAlias0` Nullable(DateTime64(3)) ALIAS col, `colAlias3` Nullable(Int32) ALIAS col3 + colAlias0, `colAlias1` LowCardinality(UInt16) ALIAS colAlias0 + col2, `colAlias2` LowCardinality(Int32) ALIAS colAlias0 + colAlias1, `col3` Nullable(UInt8)) ENGINE = MergeTree ORDER BY dt;

insert into alias_2__fuzz_25 (dt, col, col2, col3) values ('2020-02-01', 1, 2, 3);

SELECT colAlias0, colAlias2, colAlias3 FROM alias_2__fuzz_25;
```

```
==199240==WARNING: MemorySanitizer: use-of-uninitialized-value
 #0 0xbf49ccc in COW<DB::IColumn>::immutable_ptr<DB::IColumn> DB::ConvertImpl<DB::DataTypeDateTime64, DB::DataTypeNumber<unsigned short>, DB::NameToUInt16, DB::ConvertDefaultBehaviorTag>::execute<void*>(std::__1::vector<DB::ColumnWit
hTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, void*) (/usr/bin/clickhouse+0xbf49ccc) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #1 0xbeff4a1 in bool DB::callOnIndexAndDataType<DB::DataTypeNumber<unsigned short>, DB::FunctionConvert<DB::DataTypeNumber<unsigned short>, DB::NameToUInt16, DB::ToNumberMonotonicity<unsigned short>>::executeInternal(std::__1::vecto
r<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const::'lambda'(auto const&, auto const&)&, DB::ConvertDefaultBehaviorTag>(DB::TypeInd
ex, auto&&, DB::ConvertDefaultBehaviorTag&&) (/usr/bin/clickhouse+0xbeff4a1) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #2 0xbef645e in DB::FunctionConvert<DB::DataTypeNumber<unsigned short>, DB::NameToUInt16, DB::ToNumberMonotonicity<unsigned short>>::executeInternal(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeA
ndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/usr/bin/clickhouse+0xbef645e) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #3 0xbef4357 in DB::FunctionConvert<DB::DataTypeNumber<unsigned short>, DB::NameToUInt16, DB::ToNumberMonotonicity<unsigned short>>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndNa
me>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/usr/bin/clickhouse+0xbef4357) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #4 0xbd0c093 in DB::FunctionToExecutableFunctionAdaptor::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long
) const (/usr/bin/clickhouse+0xbd0c093) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #5 0x3ca8918e in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsi
gned long, bool) const build_docker/../src/Functions/IFunction.cpp:248:15
    #6 0x3ca8b491 in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lon
g, bool) const build_docker/../src/Functions/IFunction.cpp:302:22
    #7 0x3ca91b43 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build
_docker/../src/Functions/IFunction.cpp:372:16
    #8 0xbd0a7f5 in DB::IFunctionBase::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/usr/bin/cl
ickhouse+0xbd0a7f5) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #9 0xbe0634e in COW<DB::IColumn>::immutable_ptr<DB::IColumn> std::__1::__function::__policy_invoker<COW<DB::IColumn>::immutable_ptr<DB::IColumn> (std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndN
ame>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNullable const*, unsigned long)>::__call_impl<std::__1::__function::__default_alloc_func<DB::FunctionCast<DB::CastInternalName>::createFunctionAdaptor(std::__1::shared_
ptr<DB::IFunction>, std::__1::shared_ptr<DB::IDataType const> const&)::'lambda'(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNu
llable const*, unsigned long), COW<DB::IColumn>::immutable_ptr<DB::IColumn> (std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNulla
ble const*, unsigned long)>>(std::__1::__function::__policy_storage const*, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNullab
le const*, unsigned long) (/usr/bin/clickhouse+0xbe0634e) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #10 0xcaeb6a8 in DB::FunctionCast<DB::CastInternalName>::prepareRemoveNullable(std::__1::shared_ptr<DB::IDataType const> const&, std::__1::shared_ptr<DB::IDataType const> const&, bool) const::'lambda0'(std::__1::vector<DB::ColumnWit
hTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNullable const*, unsigned long)::operator()(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::
ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNullable const*, unsigned long) const (/usr/bin/clickhouse+0xcaeb6a8) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #11 0xcaeb20a in COW<DB::IColumn>::immutable_ptr<DB::IColumn> std::__1::__function::__policy_invoker<COW<DB::IColumn>::immutable_ptr<DB::IColumn> (std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAnd
Name>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNullable const*, unsigned long)>::__call_impl<std::__1::__function::__default_alloc_func<DB::FunctionCast<DB::CastInternalName>::prepareRemoveNullable(std::__1::shared
_ptr<DB::IDataType const> const&, std::__1::shared_ptr<DB::IDataType const> const&, bool) const::'lambda0'(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType
const> const&, DB::ColumnNullable const*, unsigned long), COW<DB::IColumn>::immutable_ptr<DB::IColumn> (std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType con
st> const&, DB::ColumnNullable const*, unsigned long)>>(std::__1::__function::__policy_storage const*, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType cons
t> const&, DB::ColumnNullable const*, unsigned long) (/usr/bin/clickhouse+0xcaeb20a) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #12 0xcaedc2e in DB::FunctionCast<DB::CastInternalName>::prepareUnpackDictionaries(std::__1::shared_ptr<DB::IDataType const> const&, std::__1::shared_ptr<DB::IDataType const> const&) const::'lambda0'(std::__1::vector<DB::ColumnWithT
ypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNullable const*, unsigned long)::operator()(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::Co
lumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNullable const*, unsigned long) const (/usr/bin/clickhouse+0xcaedc2e) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #13 0xcaec1ea in COW<DB::IColumn>::immutable_ptr<DB::IColumn> std::__1::__function::__policy_invoker<COW<DB::IColumn>::immutable_ptr<DB::IColumn> (std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAnd
Name>>&, std::__1::shared_ptr<DB::IDataType const> const&, DB::ColumnNullable const*, unsigned long)>::__call_impl<std::__1::__function::__default_alloc_func<DB::FunctionCast<DB::CastInternalName>::prepareUnpackDictionaries(std::__1::sh
ared_ptr<DB::IDataType const> const&, std::__1::shared_ptr<DB::IDataType const> const&) const::'lambda0'(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType co
nst> const&, DB::ColumnNullable const*, unsigned long), COW<DB::IColumn>::immutable_ptr<DB::IColumn> (std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const
> const&, DB::ColumnNullable const*, unsigned long)>>(std::__1::__function::__policy_storage const*, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>>&, std::__1::shared_ptr<DB::IDataType const>
 const&, DB::ColumnNullable const*, unsigned long) (/usr/bin/clickhouse+0xcaec1ea) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #14 0xbd2ffe7 in DB::ExecutableFunctionCast::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const (/us
r/bin/clickhouse+0xbd2ffe7) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #15 0x3ca8918e in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, uns
igned long, bool) const build_docker/../src/Functions/IFunction.cpp:248:15
    #16 0x3ca8b71c in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lo
ng, bool) const build_docker/../src/Functions/IFunction.cpp:306:18
    #17 0x3ca91b43 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const buil
d_docker/../src/Functions/IFunction.cpp:372:16
    #18 0x3f99d893 in DB::executeAction(DB::ExpressionActions::Action const&, DB::(anonymous namespace)::ExecutionContext&, bool) build_docker/../src/Interpreters/ExpressionActions.cpp:607:60
    #19 0x3f99d893 in DB::ExpressionActions::execute(DB::Block&, unsigned long&, bool) const build_docker/../src/Interpreters/ExpressionActions.cpp:724:13
    #20 0x45bd89c7 in DB::ExpressionTransform::transform(DB::Chunk&) build_docker/../src/Processors/Transforms/ExpressionTransform.cpp:23:17
    #21 0x31df97ca in DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) build_docker/../src/Processors/ISimpleTransform.h:32:9
    #22 0x45309e90 in DB::ISimpleTransform::work() build_docker/../src/Processors/ISimpleTransform.cpp:89:9
    #23 0x4538488d in DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*) build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:47:26
    #24 0x4538488d in DB::ExecutionThreadContext::executeTask() build_docker/../src/Processors/Executors/ExecutionThreadContext.cpp:92:9
    #25 0x4534abfc in DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:228:26
    #26 0x45348ce7 in DB::PipelineExecutor::executeSingleThread(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:194:5
    #27 0x45348ce7 in DB::PipelineExecutor::executeImpl(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:367:9
    #28 0x4534866d in DB::PipelineExecutor::execute(unsigned long) build_docker/../src/Processors/Executors/PipelineExecutor.cpp:89:9
    #29 0x45391cbb in DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) build_docker/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:79:24
    #30 0x45391cbb in DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0::operator()() const build_docker/../src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:107:13
    #31 0x45391cbb in decltype(static_cast<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(fp)()) std::__1::__invoke_constexpr<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::Pulling
AsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&) build_docker/../contrib/libcxx/include/type_traits:3648:23
    #32 0x45391cbb in decltype(auto) std::__1::__apply_tuple_impl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std:
:__1::tuple<>&, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/tuple:1595:1
    #33 0x45391cbb in decltype(auto) std::__1::apply<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::__1::tuple<>
&) build_docker/../contrib/libcxx/include/tuple:1604:1
    #34 0x45391cbb in ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()
::operator()() build_docker/../src/Common/ThreadPool.h:193:13
    #35 0x45391cbb in decltype(static_cast<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(fp)()) std::__1::__invoke<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull
(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&) build_docker/../contrib/libcxx/include/t
ype_traits:3640:23
    #36 0x45391cbb in void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipel
ineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(D
B::Chunk&, unsigned long)::$_0&&)::'lambda'()&) build_docker/../contrib/libcxx/include/__functional/invoke.h:61:9
    #37 0x45391cbb in std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB:
:Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>::operator()() build_docker/../contrib/libcxx/include/__functional/function.h:230:12
#38 0x45391cbb in void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk
&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) build_docker/../contrib/libcxx/include/__functional/function.h:711:1
6
    #39 0x25f3c5f0 in std::__1::__function::__policy_func<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:843:16
    #40 0x25f3c5f0 in std::__1::function<void ()>::operator()() const build_docker/../contrib/libcxx/include/__functional/function.h:1184:12
    #41 0x25f3c5f0 in ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) build_docker/../src/Common/ThreadPool.cpp:294:17
    #42 0x25f494c2 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()::operator()() const build_docker/../src/Common/ThreadPool.cpp:144:73
    #43 0x25f494c2 in decltype(static_cast<void>(fp)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&) build_
docker/../contrib/libcxx/include/type_traits:3640:23
    #44 0x25f494c2 in void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<voi
d ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(std::__1::tuple<void, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>&
, std::__1::__tuple_indices<>) build_docker/../contrib/libcxx/include/thread:282:5
    #45 0x25f494c2 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__
1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>>(void*) build_docker/../contrib/libcxx/include/thread:293:5
    #46 0x7fcf5ea53608 in start_thread /build/glibc-sMfBJT/glibc-2.31/nptl/pthread_create.c:477:8
    #47 0x7fcf5e978162 in __clone /build/glibc-sMfBJT/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95

  Uninitialized value was stored to memory at

#0 0xbc9b306 in realloc (/usr/bin/clickhouse+0xbc9b306) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #1 0x25ba90ad in Allocator<false, false>::realloc(void*, unsigned long, unsigned long, unsigned long) build_docker/../src/Common/Allocator.h:134:30
    #2 0xbd14ca8 in void DB::PODArrayBase<8ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::resize<>(unsigned long) (/usr/bin/clickhouse+0xbd14ca8) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #3 0x1046a000 in void DB::Adder<DB::AddSecondsImpl>::vectorVector<DB::PODArray<DB::DateTime64, 4096ul, Allocator<false, false>, 15ul, 16ul>, DB::PODArray<DB::DateTime64, 4096ul, Allocator<false, false>, 15ul, 16ul>>(DB::PODArray<DB:
:DateTime64, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, DB::PODArray<DB::DateTime64, 4096ul, Allocator<false, false>, 15ul, 16ul>&, DB::IColumn const&, DateLUTImpl const&, unsigned short) const (/usr/bin/clickhouse+0x1046a000)
 (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #4 0x1044715b in DB::DateTimeAddIntervalImpl<DB::DataTypeDateTime64, DB::DataTypeDateTime64, DB::AddSecondsImpl>::execute(DB::AddSecondsImpl, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>
> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned short) (/usr/bin/clickhouse+0x1044715b) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #5 0x10441a76 in DB::FunctionDateOrDateTimeAddInterval<DB::AddSecondsImpl>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> co
nst&, unsigned long) const (/usr/bin/clickhouse+0x10441a76) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #6 0xbd0c093 in DB::FunctionToExecutableFunctionAdaptor::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long
) const (/usr/bin/clickhouse+0xbd0c093) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #7 0x3ca8918e in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsi
gned long, bool) const build_docker/../src/Functions/IFunction.cpp:248:15
    #8 0x3ca8b491 in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lon
g, bool) const build_docker/../src/Functions/IFunction.cpp:302:22
    #9 0x3ca91b43 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const build
_docker/../src/Functions/IFunction.cpp:372:16
    #10 0xbd0a7f5 in DB::IFunctionBase::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/usr/bin/c
lickhouse+0xbd0a7f5) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #11 0x1ff5c3c3 in DB::FunctionBinaryArithmetic<DB::PlusImpl, DB::NamePlus, true, true, false>::executeDateTimeIntervalPlusMinus(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std:
:__1::shared_ptr<DB::IDataType const> const&, unsigned long, std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&) const (/usr/bin/clickhouse+0x1ff5c3c3) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #12 0x1ff58f9d in DB::FunctionBinaryArithmetic<DB::PlusImpl, DB::NamePlus, true, true, false>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::
IDataType const> const&, unsigned long) const (/usr/bin/clickhouse+0x1ff58f9d) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #13 0xbd0c093 in DB::FunctionToExecutableFunctionAdaptor::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lon
g) const (/usr/bin/clickhouse+0xbd0c093) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #14 0x3ca8918e in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, uns
igned long, bool) const build_docker/../src/Functions/IFunction.cpp:248:15
    #15 0x3ca89cf6 in DB::IExecutableFunction::defaultImplementationForNulls(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned
long, bool) const build_docker/../src/Functions/IFunction.cpp:199:20
    #16 0x3ca88e00 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, uns
igned long, bool) const build_docker/../src/Functions/IFunction.cpp:241:20
    #17 0x3ca8b491 in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lo
ng, bool) const build_docker/../src/Functions/IFunction.cpp:302:22
    #18 0x3ca91b43 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const buil
d_docker/../src/Functions/IFunction.cpp:372:16
    #19 0x3f99d893 in DB::executeAction(DB::ExpressionActions::Action const&, DB::(anonymous namespace)::ExecutionContext&, bool) build_docker/../src/Interpreters/ExpressionActions.cpp:607:60
    #20 0x3f99d893 in DB::ExpressionActions::execute(DB::Block&, unsigned long&, bool) const build_docker/../src/Interpreters/ExpressionActions.cpp:724:13

Uninitialized value was created by a heap allocation
    #0 0xbc9b5c0 in malloc (/usr/bin/clickhouse+0xbc9b5c0) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #1 0x25ba7c6c in Allocator<false, false>::allocNoTrack(unsigned long, unsigned long) build_docker/../src/Common/Allocator.h:227:27
    #2 0xbd150e4 in void DB::PODArrayBase<8ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::alloc<>(unsigned long) (/usr/bin/clickhouse+0xbd150e4) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #3 0x3da07f3f in DB::PODArrayBase<8ul, 4096ul, Allocator<false, false>, 15ul, 16ul>::alloc_for_num_elements(unsigned long) build_docker/../src/Common/PODArray.h:128:9
    #4 0x3da07f3f in DB::PODArray<DB::DateTime64, 4096ul, Allocator<false, false>, 15ul, 16ul>::PODArray(unsigned long) build_docker/../src/Common/PODArray.h:344:15
    #5 0x3da07f3f in DB::ColumnDecimal<DB::DateTime64>::ColumnDecimal(unsigned long, unsigned int) build_docker/../src/Columns/ColumnDecimal.h:34:9
    #6 0x3da07f3f in COW<DB::IColumn>::mutable_ptr<DB::ColumnDecimal<DB::DateTime64>> COWHelper<DB::ColumnVectorHelper, DB::ColumnDecimal<DB::DateTime64>>::create<int, unsigned int const&>(int&&, unsigned int const&) build_docker/../src
/Common/COW.h:284:71
    #7 0x3da07cc6 in DB::DataTypeDecimalBase<DB::DateTime64>::createColumn() const build_docker/../src/DataTypes/DataTypeDecimalBase.cpp:30:12
    #8 0x10446c2a in DB::DateTimeAddIntervalImpl<DB::DataTypeDateTime64, DB::DataTypeDateTime64, DB::AddSecondsImpl>::execute(DB::AddSecondsImpl, std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>
> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned short) (/usr/bin/clickhouse+0x10446c2a) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #9 0x10441a76 in DB::FunctionDateOrDateTimeAddInterval<DB::AddSecondsImpl>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> co
nst&, unsigned long) const (/usr/bin/clickhouse+0x10441a76) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #10 0xbd0c093 in DB::FunctionToExecutableFunctionAdaptor::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lon
g) const (/usr/bin/clickhouse+0xbd0c093) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #11 0x3ca8918e in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, uns
igned long, bool) const build_docker/../src/Functions/IFunction.cpp:248:15
    #12 0x3ca8b491 in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lo
ng, bool) const build_docker/../src/Functions/IFunction.cpp:302:22
    #13 0x3ca91b43 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const buil
d_docker/../src/Functions/IFunction.cpp:372:16
    #14 0xbd0a7f5 in DB::IFunctionBase::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const (/usr/bin/c
lickhouse+0xbd0a7f5) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #15 0x1ff5c3c3 in DB::FunctionBinaryArithmetic<DB::PlusImpl, DB::NamePlus, true, true, false>::executeDateTimeIntervalPlusMinus(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std:
:__1::shared_ptr<DB::IDataType const> const&, unsigned long, std::__1::shared_ptr<DB::IFunctionOverloadResolver> const&) const (/usr/bin/clickhouse+0x1ff5c3c3) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #16 0x1ff58f9d in DB::FunctionBinaryArithmetic<DB::PlusImpl, DB::NamePlus, true, true, false>::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::
IDataType const> const&, unsigned long) const (/usr/bin/clickhouse+0x1ff58f9d) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #17 0xbd0c093 in DB::FunctionToExecutableFunctionAdaptor::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lon
g) const (/usr/bin/clickhouse+0xbd0c093) (BuildId: a513f1c7233fdfedc7052d0fabc240ba3b910b0b)
    #18 0x3ca8918e in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, uns
igned long, bool) const build_docker/../src/Functions/IFunction.cpp:248:15
    #19 0x3ca89cf6 in DB::IExecutableFunction::defaultImplementationForNulls(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned
long, bool) const build_docker/../src/Functions/IFunction.cpp:199:20
    #20 0x3ca88e00 in DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, uns
igned long, bool) const build_docker/../src/Functions/IFunction.cpp:241:20
    #21 0x3ca8b491 in DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned lo
ng, bool) const build_docker/../src/Functions/IFunction.cpp:302:22
    #22 0x3ca91b43 in DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName>> const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const buil
d_docker/../src/Functions/IFunction.cpp:372:16
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
