You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
WHERE clause returns incorrect results on RAND() on GROUP BY passed on from WITH clause or subquery
If for example you have a table `users_items`,  that has `user_id`, `item_id` as columns, such that `user_id` can be associated with multiple `item_id`(s) and vice versa. 

And you want to assign a random value to each unique user via a `GROUP BY` and `RAND()` as the following:

```sql
WITH RandomUsers AS 
    (SELECT 
        user_id,
        rand() % 2 AS in_sample
    FROM users_items
    GROUP BY user_id)
SELECT user_id, in_sample
FROM RandomUsers
WHERE in_sample = 1
```
All rows are returned and not just those with `in_sample = 1`

**Does it reproduce on recent release?**

22.8.1 revision 54460

**How to reproduce**

```sql
WITH RandomUsers AS 
    (SELECT 
        user_id,
        rand() % 2 AS in_sample
    FROM users_items
    GROUP BY user_id)
SELECT user_id, in_sample
FROM RandomUsers
WHERE in_sample = 1
```

The `WHERE` CLAUSE does not work and all rows are returned irrespective of the condition. If however, you do a `GROUP BY` instead, the rows are aggregated correctly together. 

```sql
WITH RandomUsers AS 
    (SELECT 
        user_id,
        rand() % 2 AS in_sample
    FROM users_items
    GROUP BY user_id)
SELECT in_sample, count() 
FROM RandomUsers 
GROUP BY in_sample
```
The same issue occurs when using a subquery instead of a WITH.

To recreate the issue, one can follow the steps below:

**Create table**

```sql 
CREATE TABLE default.users_items
(
    `user_id` Int32,
    `item_id` Int32
)
ENGINE = Memory
```

**Example data**

[user_items_data.csv](https://github.com/ClickHouse/ClickHouse/files/9351609/user_items_data.csv)

**Expected behavior**

If the where clause specifies `in_sample = 1` then it should return only the rows where `in_sample` is `1` and not both. Same applies for when `in_sample = 0`.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
