{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 36526,
  "instance_id": "ClickHouse__ClickHouse-36526",
  "issue_numbers": [
    "36512"
  ],
  "base_commit": "2012b6717dbf6ae77274cc6e0b860d480b96a492",
  "patch": "diff --git a/docs/en/sql-reference/functions/date-time-functions.md b/docs/en/sql-reference/functions/date-time-functions.md\nindex 5f783cf41497..e37e86e99dc9 100644\n--- a/docs/en/sql-reference/functions/date-time-functions.md\n+++ b/docs/en/sql-reference/functions/date-time-functions.md\n@@ -375,7 +375,7 @@ Result:\n \n -   [Timezone](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone) server configuration parameter.\n \n-## toStartOfFiveMinute {#tostartoffiveminute}\n+## toStartOfFiveMinutes {#tostartoffiveminutes}\n \n Rounds down a date with time to the start of the five-minute interval.\n \ndiff --git a/docs/ru/sql-reference/functions/date-time-functions.md b/docs/ru/sql-reference/functions/date-time-functions.md\nindex edb2eec17f6d..da48cd940a72 100644\n--- a/docs/ru/sql-reference/functions/date-time-functions.md\n+++ b/docs/ru/sql-reference/functions/date-time-functions.md\n@@ -384,7 +384,7 @@ WITH toDateTime64('2020-01-01 10:20:30.999', 3) AS dt64 SELECT toStartOfSecond(d\n -   \u0427\u0430\u0441\u043e\u0432\u0430\u044f \u0437\u043e\u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 [timezone](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone).\n \n \n-## toStartOfFiveMinute {#tostartoffiveminute}\n+## toStartOfFiveMinutes {#tostartoffiveminutes}\n \n \u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0434\u0430\u0442\u0443-\u0441-\u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u0432\u043d\u0438\u0437 \u0434\u043e \u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u044f\u0442\u0438\u043c\u0438\u043d\u0443\u0442\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430.\n \ndiff --git a/docs/zh/sql-reference/functions/date-time-functions.md b/docs/zh/sql-reference/functions/date-time-functions.md\nindex 969f71011fd7..96477fadb3b2 100644\n--- a/docs/zh/sql-reference/functions/date-time-functions.md\n+++ b/docs/zh/sql-reference/functions/date-time-functions.md\n@@ -227,7 +227,7 @@ SELECT toStartOfSecond(dt64, 'Asia/Istanbul');\n \n -   [Timezone](../../operations/server-configuration-parameters/settings.md#server_configuration_parameters-timezone) \u670d\u52a1\u5668\u914d\u7f6e\u9009\u9879\u3002\n \n-## toStartOfFiveMinute {#tostartoffiveminute}\n+## toStartOfFiveMinutes {#tostartoffiveminutes}\n \n \u5c06DateTime\u4ee5\u4e94\u5206\u949f\u4e3a\u5355\u4f4d\u5411\u524d\u53d6\u6574\u5230\u6700\u63a5\u8fd1\u7684\u65f6\u95f4\u70b9\u3002\n \ndiff --git a/src/Common/DateLUTImpl.h b/src/Common/DateLUTImpl.h\nindex bfeb33897532..fcf4714bd37f 100644\n--- a/src/Common/DateLUTImpl.h\n+++ b/src/Common/DateLUTImpl.h\n@@ -565,7 +565,7 @@ class DateLUTImpl\n \n     /// NOTE: Assuming timezone offset is a multiple of 15 minutes.\n     inline Time toStartOfMinute(Time t) const { return toStartOfMinuteInterval(t, 1); }\n-    inline Time toStartOfFiveMinute(Time t) const { return toStartOfMinuteInterval(t, 5); }\n+    inline Time toStartOfFiveMinutes(Time t) const { return toStartOfMinuteInterval(t, 5); }\n     inline Time toStartOfFifteenMinutes(Time t) const { return toStartOfMinuteInterval(t, 15); }\n     inline Time toStartOfTenMinutes(Time t) const { return toStartOfMinuteInterval(t, 10); }\n     inline Time toStartOfHour(Time t) const { return roundDown(t, 3600); }\ndiff --git a/src/Functions/DateTimeTransforms.h b/src/Functions/DateTimeTransforms.h\nindex 5d1bcaf48cf8..065f08296d0d 100644\n--- a/src/Functions/DateTimeTransforms.h\n+++ b/src/Functions/DateTimeTransforms.h\n@@ -467,17 +467,17 @@ struct ToStartOfNanosecondImpl\n     using FactorTransform = ZeroTransform;\n };\n \n-struct ToStartOfFiveMinuteImpl\n+struct ToStartOfFiveMinutesImpl\n {\n-    static constexpr auto name = \"toStartOfFiveMinute\";\n+    static constexpr auto name = \"toStartOfFiveMinutes\";\n \n     static inline UInt32 execute(const DecimalUtils::DecimalComponents<DateTime64> & t, const DateLUTImpl & time_zone)\n     {\n-        return time_zone.toStartOfFiveMinute(t.whole);\n+        return time_zone.toStartOfFiveMinutes(t.whole);\n     }\n     static inline UInt32 execute(UInt32 t, const DateLUTImpl & time_zone)\n     {\n-        return time_zone.toStartOfFiveMinute(t);\n+        return time_zone.toStartOfFiveMinutes(t);\n     }\n     static inline UInt32 execute(Int32, const DateLUTImpl &)\n     {\ndiff --git a/src/Functions/registerFunctionsDateTime.cpp b/src/Functions/registerFunctionsDateTime.cpp\nindex c2d8acac6dd3..5f733b072811 100644\n--- a/src/Functions/registerFunctionsDateTime.cpp\n+++ b/src/Functions/registerFunctionsDateTime.cpp\n@@ -27,7 +27,7 @@ void registerFunctionToLastDayOfMonth(FunctionFactory &);\n void registerFunctionToStartOfQuarter(FunctionFactory &);\n void registerFunctionToStartOfYear(FunctionFactory &);\n void registerFunctionToStartOfMinute(FunctionFactory &);\n-void registerFunctionToStartOfFiveMinute(FunctionFactory &);\n+void registerFunctionToStartOfFiveMinutes(FunctionFactory &);\n void registerFunctionToStartOfTenMinutes(FunctionFactory &);\n void registerFunctionToStartOfFifteenMinutes(FunctionFactory &);\n void registerFunctionToStartOfHour(FunctionFactory &);\n@@ -109,7 +109,7 @@ void registerFunctionsDateTime(FunctionFactory & factory)\n     registerFunctionToStartOfMillisecond(factory);\n     registerFunctionToStartOfSecond(factory);\n     registerFunctionToStartOfMinute(factory);\n-    registerFunctionToStartOfFiveMinute(factory);\n+    registerFunctionToStartOfFiveMinutes(factory);\n     registerFunctionToStartOfTenMinutes(factory);\n     registerFunctionToStartOfFifteenMinutes(factory);\n     registerFunctionToStartOfHour(factory);\ndiff --git a/src/Functions/toStartOfFiveMinute.cpp b/src/Functions/toStartOfFiveMinute.cpp\ndeleted file mode 100644\nindex c154b8f2bc79..000000000000\n--- a/src/Functions/toStartOfFiveMinute.cpp\n+++ /dev/null\n@@ -1,18 +0,0 @@\n-#include <Functions/FunctionFactory.h>\n-#include <Functions/DateTimeTransforms.h>\n-#include <Functions/FunctionDateOrDateTimeToSomething.h>\n-\n-\n-namespace DB\n-{\n-\n-using FunctionToStartOfFiveMinute = FunctionDateOrDateTimeToSomething<DataTypeDateTime, ToStartOfFiveMinuteImpl>;\n-\n-void registerFunctionToStartOfFiveMinute(FunctionFactory & factory)\n-{\n-    factory.registerFunction<FunctionToStartOfFiveMinute>();\n-}\n-\n-}\n-\n-\ndiff --git a/src/Functions/toStartOfFiveMinutes.cpp b/src/Functions/toStartOfFiveMinutes.cpp\nnew file mode 100644\nindex 000000000000..b311c69d8c6c\n--- /dev/null\n+++ b/src/Functions/toStartOfFiveMinutes.cpp\n@@ -0,0 +1,19 @@\n+#include <Functions/FunctionFactory.h>\n+#include <Functions/DateTimeTransforms.h>\n+#include <Functions/FunctionDateOrDateTimeToSomething.h>\n+\n+\n+namespace DB\n+{\n+\n+using FunctionToStartOfFiveMinutes = FunctionDateOrDateTimeToSomething<DataTypeDateTime, ToStartOfFiveMinutesImpl>;\n+\n+void registerFunctionToStartOfFiveMinutes(FunctionFactory & factory)\n+{\n+    factory.registerFunction<FunctionToStartOfFiveMinutes>();\n+    factory.registerAlias(\"toStartOfFiveMinute\", FunctionToStartOfFiveMinutes::name);\n+}\n+\n+}\n+\n+\ndiff --git a/utils/db-generator/query_db_generator.cpp b/utils/db-generator/query_db_generator.cpp\nindex cdc2c9e2f046..18c9bdbca38f 100644\n--- a/utils/db-generator/query_db_generator.cpp\n+++ b/utils/db-generator/query_db_generator.cpp\n@@ -249,7 +249,7 @@ std::map<std::string, ColumnType> func_to_param_type = {\n         {\"alphatokens\", Type::s}, {\"toyear\", Type::d | Type::dt}, {\"tomonth\", Type::d | Type::dt}, {\"todayofmonth\", Type::d | Type::dt}, {\"tohour\", Type::dt},\n         {\"tominute\", Type::dt}, {\"tosecond\", Type::dt}, {\"touixtimestamp\", Type::dt}, {\"tostartofyear\", Type::d | Type::dt},\n         {\"tostartofquarter\", Type::d | Type::dt}, {\"tostartofmonth\", Type::d | Type::dt}, {\"tomonday\", Type::d | Type::dt},\n-        {\"tostartoffiveminute\", Type::dt}, {\"tostartoftenminutes\", Type::dt}, {\"tostartoffifteenminutes\", Type::d | Type::dt},\n+        {\"tostartoffiveminutes\", Type::dt}, {\"tostartoftenminutes\", Type::dt}, {\"tostartoffifteenminutes\", Type::d | Type::dt},\n         {\"tostartofinterval\", Type::d | Type::dt}, {\"totime\", Type::d | Type::dt}, {\"torelativehonthnum\", Type::d | Type::dt},\n         {\"torelativeweeknum\", Type::d | Type::dt}, {\"torelativedaynum\", Type::d | Type::dt}, {\"torelativehournum\", Type::d | Type::dt},\n         {\"torelativeminutenum\", Type::d | Type::dt}, {\"torelativesecondnum\", Type::d | Type::dt}, {\"datediff\", Type::d | Type::dt},\n",
  "test_patch": "diff --git a/src/Common/tests/gtest_DateLUTImpl.cpp b/src/Common/tests/gtest_DateLUTImpl.cpp\nindex 1eec83a6ec9d..d522448d3378 100644\n--- a/src/Common/tests/gtest_DateLUTImpl.cpp\n+++ b/src/Common/tests/gtest_DateLUTImpl.cpp\n@@ -119,7 +119,7 @@ TEST(DateLUTTest, TimeValuesInMiddleOfRange)\n     EXPECT_EQ(lut.toSecond(time), 11 /*unsigned*/);\n     EXPECT_EQ(lut.toMinute(time), 20 /*unsigned*/);\n     EXPECT_EQ(lut.toStartOfMinute(time), 1568650800 /*time_t*/);\n-    EXPECT_EQ(lut.toStartOfFiveMinute(time), 1568650800 /*time_t*/);\n+    EXPECT_EQ(lut.toStartOfFiveMinutes(time), 1568650800 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 1568650500 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfTenMinutes(time), 1568650800 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfHour(time), 1568649600 /*time_t*/);\n@@ -181,7 +181,7 @@ TEST(DateLUTTest, TimeValuesAtLeftBoderOfRange)\n     EXPECT_EQ(lut.toSecond(time), 0 /*unsigned*/);\n     EXPECT_EQ(lut.toMinute(time), 0 /*unsigned*/);\n     EXPECT_EQ(lut.toStartOfMinute(time), 0 /*time_t*/);\n-    EXPECT_EQ(lut.toStartOfFiveMinute(time), 0 /*time_t*/);\n+    EXPECT_EQ(lut.toStartOfFiveMinutes(time), 0 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 0 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfTenMinutes(time), 0 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfHour(time), 0 /*time_t*/);\n@@ -244,7 +244,7 @@ TEST(DateLUTTest, TimeValuesAtRightBoderOfRangeOfOldLUT)\n     EXPECT_EQ(lut.toMinute(time), 17 /*unsigned*/);\n     EXPECT_EQ(lut.toSecond(time), 53 /*unsigned*/);\n     EXPECT_EQ(lut.toStartOfMinute(time), 4294343820 /*time_t*/);\n-    EXPECT_EQ(lut.toStartOfFiveMinute(time), 4294343700 /*time_t*/);\n+    EXPECT_EQ(lut.toStartOfFiveMinutes(time), 4294343700 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 4294343700 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfTenMinutes(time), 4294343400 /*time_t*/);\n     EXPECT_EQ(lut.toStartOfHour(time), 4294342800 /*time_t*/);\ndiff --git a/tests/fuzz/all.dict b/tests/fuzz/all.dict\nindex 1863cd20bdd5..356428a0b867 100644\n--- a/tests/fuzz/all.dict\n+++ b/tests/fuzz/all.dict\n@@ -1311,7 +1311,7 @@\n \"toSecond\"\n \"toStartOfDay\"\n \"toStartOfFifteenMinutes\"\n-\"toStartOfFiveMinute\"\n+\"toStartOfFiveMinutes\"\n \"toStartOfHour\"\n \"toStartOfInterval\"\n \"toStartOfISOYear\"\ndiff --git a/tests/fuzz/dictionaries/functions.dict b/tests/fuzz/dictionaries/functions.dict\nindex 3f393aa6846c..1bdaed5ee1b5 100644\n--- a/tests/fuzz/dictionaries/functions.dict\n+++ b/tests/fuzz/dictionaries/functions.dict\n@@ -507,7 +507,7 @@\n \"toStartOfFifteenMinutes\"\n \"emptyArrayUInt8\"\n \"dictGetUInt8\"\n-\"toStartOfFiveMinute\"\n+\"toStartOfFiveMinutes\"\n \"cbrt\"\n \"toStartOfMinute\"\n \"dictGet\"\ndiff --git a/tests/performance/date_time_long.xml b/tests/performance/date_time_long.xml\nindex f210c807b124..240481969a8c 100644\n--- a/tests/performance/date_time_long.xml\n+++ b/tests/performance/date_time_long.xml\n@@ -16,7 +16,7 @@\n                <value>toISOYear</value>\n \n                <value>toStartOfMinute</value>\n-               <value>toStartOfFiveMinute</value>\n+               <value>toStartOfFiveMinutes</value>\n                <value>toStartOfFifteenMinutes</value>\n                <value>toStartOfHour</value>\n                <value>toStartOfDay</value>\ndiff --git a/tests/queries/0_stateless/00189_time_zones_long.reference b/tests/queries/0_stateless/00189_time_zones_long.reference\nindex df42e8f1b6ed..c55542f59a68 100644\n--- a/tests/queries/0_stateless/00189_time_zones_long.reference\n+++ b/tests/queries/0_stateless/00189_time_zones_long.reference\n@@ -107,7 +107,7 @@ toStartOfMinute\n 2019-02-06 19:57:00\n 2019-02-07 04:57:00\n 2019-02-06 11:57:00\n-toStartOfFiveMinute\n+toStartOfFiveMinutes\n 2019-02-06 22:55:00\n 2019-02-06 20:55:00\n 2019-02-06 19:55:00\ndiff --git a/tests/queries/0_stateless/00189_time_zones_long.sql b/tests/queries/0_stateless/00189_time_zones_long.sql\nindex ecc5f62ed1de..790b645e4f9f 100644\n--- a/tests/queries/0_stateless/00189_time_zones_long.sql\n+++ b/tests/queries/0_stateless/00189_time_zones_long.sql\n@@ -162,14 +162,14 @@ SELECT toString(toStartOfMinute(toDateTime(1549483055), 'Europe/London'), 'Europ\n SELECT toString(toStartOfMinute(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');\n SELECT toString(toStartOfMinute(toDateTime(1549483055), 'Pacific/Pitcairn'), 'Pacific/Pitcairn');\n \n-/* toStartOfFiveMinute */\n-\n-SELECT 'toStartOfFiveMinute';\n-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Europe/Moscow'), 'Europe/Moscow');\n-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Europe/Paris'), 'Europe/Paris');\n-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Europe/London'), 'Europe/London');\n-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');\n-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Pacific/Pitcairn'), 'Pacific/Pitcairn');\n+/* toStartOfFiveMinutes */\n+\n+SELECT 'toStartOfFiveMinutes';\n+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Europe/Moscow'), 'Europe/Moscow');\n+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Europe/Paris'), 'Europe/Paris');\n+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Europe/London'), 'Europe/London');\n+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');\n+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Pacific/Pitcairn'), 'Pacific/Pitcairn');\n \n /* toStartOfTenMinutes */\n \ndiff --git a/tests/queries/0_stateless/00534_filimonov.data b/tests/queries/0_stateless/00534_filimonov.data\nindex 827b3ee4fbc1..f07d79ed1bf3 100644\n--- a/tests/queries/0_stateless/00534_filimonov.data\n+++ b/tests/queries/0_stateless/00534_filimonov.data\n@@ -199,7 +199,7 @@ SELECT toMinute(NULL);\n SELECT toStartOfDay(NULL);\n SELECT toMonday(NULL);\n SELECT toUInt16OrZero(NULL);\n-SELECT toStartOfFiveMinute(NULL);\n+SELECT toStartOfFiveMinutes(NULL);\n SELECT halfMD5(NULL);\n SELECT toStartOfHour(NULL);\n SELECT toRelativeYearNum(NULL);\ndiff --git a/tests/queries/0_stateless/00921_datetime64_compatibility_long.python b/tests/queries/0_stateless/00921_datetime64_compatibility_long.python\nindex 03cc088fd875..fc8a229268b0 100644\n--- a/tests/queries/0_stateless/00921_datetime64_compatibility_long.python\n+++ b/tests/queries/0_stateless/00921_datetime64_compatibility_long.python\n@@ -28,7 +28,7 @@ toStartOfWeek(N, 'Europe/Moscow')\n toStartOfDay(N, 'Europe/Moscow')\n toStartOfHour(N, 'Europe/Moscow')\n toStartOfMinute(N, 'Europe/Moscow')\n-toStartOfFiveMinute(N, 'Europe/Moscow')\n+toStartOfFiveMinutes(N, 'Europe/Moscow')\n toStartOfTenMinutes(N, 'Europe/Moscow')\n toStartOfFifteenMinutes(N, 'Europe/Moscow')\n toStartOfInterval(N, INTERVAL 1 year, 'Europe/Moscow')\ndiff --git a/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference b/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference\nindex 230bfa0c117b..6dd1b4b93226 100644\n--- a/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference\n+++ b/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference\n@@ -98,7 +98,7 @@ Code: 43\n \"DateTime('Europe/Moscow')\",\"2019-09-16 19:20:00\"\n \"DateTime('Europe/Moscow')\",\"2019-09-16 19:20:00\"\n ------------------------------------------\n-SELECT toStartOfFiveMinute(N, \\'Europe/Moscow\\')\n+SELECT toStartOfFiveMinutes(N, \\'Europe/Moscow\\')\n Code: 43\n \"DateTime('Europe/Moscow')\",\"2019-09-16 19:20:00\"\n \"DateTime('Europe/Moscow')\",\"2019-09-16 19:20:00\"\ndiff --git a/tests/queries/0_stateless/01921_datatype_date32.reference b/tests/queries/0_stateless/01921_datatype_date32.reference\nindex 8beaefbeb38b..fc76ba92dc40 100644\n--- a/tests/queries/0_stateless/01921_datatype_date32.reference\n+++ b/tests/queries/0_stateless/01921_datatype_date32.reference\n@@ -104,7 +104,7 @@\n 2021-01-01\n -------toStartOfSecond---------\n -------toStartOfMinute---------\n--------toStartOfFiveMinute---------\n+-------toStartOfFiveMinutes---------\n -------toStartOfTenMinutes---------\n -------toStartOfFifteenMinutes---------\n -------toStartOfHour---------\ndiff --git a/tests/queries/0_stateless/01921_datatype_date32.sql b/tests/queries/0_stateless/01921_datatype_date32.sql\nindex e01bdfeee8d4..3ab026faab9c 100644\n--- a/tests/queries/0_stateless/01921_datatype_date32.sql\n+++ b/tests/queries/0_stateless/01921_datatype_date32.sql\n@@ -46,8 +46,8 @@ select '-------toStartOfSecond---------';\n select toStartOfSecond(x1) from t1; -- { serverError 43 }\n select '-------toStartOfMinute---------';\n select toStartOfMinute(x1) from t1; -- { serverError 43 }\n-select '-------toStartOfFiveMinute---------';\n-select toStartOfFiveMinute(x1) from t1; -- { serverError 43 }\n+select '-------toStartOfFiveMinutes---------';\n+select toStartOfFiveMinutes(x1) from t1; -- { serverError 43 }\n select '-------toStartOfTenMinutes---------';\n select toStartOfTenMinutes(x1) from t1; -- { serverError 43 }\n select '-------toStartOfFifteenMinutes---------';\ndiff --git a/tests/queries/0_stateless/01958_partial_hour_timezone.reference b/tests/queries/0_stateless/01958_partial_hour_timezone.reference\nindex a86391b491ca..ab2f72213904 100644\n--- a/tests/queries/0_stateless/01958_partial_hour_timezone.reference\n+++ b/tests/queries/0_stateless/01958_partial_hour_timezone.reference\n@@ -5,7 +5,7 @@ timeZoneOffset(t):                             -2670\n formatDateTime(t, '%F %T', 'Africa/Monrovia'): 1970-06-17 07:39:21\n toString(t, 'Africa/Monrovia'):                1970-06-17 07:39:21\n toStartOfMinute(t):                            1970-06-17 07:39:00\n-toStartOfFiveMinute(t):                        1970-06-17 07:35:00\n+toStartOfFiveMinutes(t):                       1970-06-17 07:35:00\n toStartOfFifteenMinutes(t):                    1970-06-17 07:30:00\n toStartOfTenMinutes(t):                        1970-06-17 07:30:00\n toStartOfHour(t):                              1970-06-17 07:00:00\ndiff --git a/tests/queries/0_stateless/01958_partial_hour_timezone.sql b/tests/queries/0_stateless/01958_partial_hour_timezone.sql\nindex 9bcb03ea4f2c..26350e55620d 100644\n--- a/tests/queries/0_stateless/01958_partial_hour_timezone.sql\n+++ b/tests/queries/0_stateless/01958_partial_hour_timezone.sql\n@@ -5,7 +5,7 @@ SELECT toUnixTimestamp(t),\n        formatDateTime(t, '%F %T', 'Africa/Monrovia'),\n        toString(t, 'Africa/Monrovia'),\n        toStartOfMinute(t),\n-       toStartOfFiveMinute(t),\n+       toStartOfFiveMinutes(t),\n        toStartOfFifteenMinutes(t),\n        toStartOfTenMinutes(t),\n        toStartOfHour(t),\ndiff --git a/tests/queries/0_stateless/02096_date_time_1970_saturation.sql b/tests/queries/0_stateless/02096_date_time_1970_saturation.sql\nindex e0c401443a75..8cf60c95f73b 100644\n--- a/tests/queries/0_stateless/02096_date_time_1970_saturation.sql\n+++ b/tests/queries/0_stateless/02096_date_time_1970_saturation.sql\n@@ -12,7 +12,7 @@ select toStartOfYear(toDate(0));\n select toStartOfYear(toDateTime(0, 'Europe/Moscow'));\n select toTime(toDateTime(0, 'Europe/Moscow'));\n select toStartOfMinute(toDateTime(0, 'Europe/Moscow'));\n-select toStartOfFiveMinute(toDateTime(0, 'Europe/Moscow'));\n+select toStartOfFiveMinutes(toDateTime(0, 'Europe/Moscow'));\n select toStartOfTenMinutes(toDateTime(0, 'Europe/Moscow'));\n select toStartOfFifteenMinutes(toDateTime(0, 'Europe/Moscow'));\n select toStartOfHour(toDateTime(0, 'Europe/Moscow'));\n@@ -25,7 +25,7 @@ select toStartOfQuarter(toDateTime(0, 'America/Los_Angeles'));\n select toStartOfYear(toDateTime(0, 'America/Los_Angeles'));\n select toTime(toDateTime(0, 'America/Los_Angeles'), 'America/Los_Angeles');\n select toStartOfMinute(toDateTime(0, 'America/Los_Angeles'));\n-select toStartOfFiveMinute(toDateTime(0, 'America/Los_Angeles'));\n+select toStartOfFiveMinutes(toDateTime(0, 'America/Los_Angeles'));\n select toStartOfTenMinutes(toDateTime(0, 'America/Los_Angeles'));\n select toStartOfFifteenMinutes(toDateTime(0, 'America/Los_Angeles'));\n select toStartOfHour(toDateTime(0, 'America/Los_Angeles'));\ndiff --git a/tests/testflows/datetime64_extended_range/requirements/requirements.md b/tests/testflows/datetime64_extended_range/requirements/requirements.md\nindex 659057ebfdc9..1546d4a2a46b 100644\n--- a/tests/testflows/datetime64_extended_range/requirements/requirements.md\n+++ b/tests/testflows/datetime64_extended_range/requirements/requirements.md\n@@ -54,7 +54,7 @@\n         * 4.2.0.4.19 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfHour](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofhour)\n         * 4.2.0.4.20 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfMinute](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofminute)\n         * 4.2.0.4.21 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfSecond](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofsecond)\n-        * 4.2.0.4.22 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffiveminute)\n+        * 4.2.0.4.22 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffiveminutes)\n         * 4.2.0.4.23 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfTenMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoftenminutes)\n         * 4.2.0.4.24 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFifteenMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffifteenminutes)\n         * 4.2.0.4.25 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfInterval](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofinterval)\n@@ -417,10 +417,10 @@ version: 1.0\n [ClickHouse] SHALL support correct operation of the [toStartOfSecond](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartofsecond)\n function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].\n \n-###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute\n+###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes\n version: 1.0\n \n-[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinute](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminute)\n+[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinutes](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminutes)\n function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].\n \n ###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfTenMinutes\ndiff --git a/tests/testflows/datetime64_extended_range/requirements/requirements.py b/tests/testflows/datetime64_extended_range/requirements/requirements.py\nindex 1bbaf3547d92..de25c0e9c264 100644\n--- a/tests/testflows/datetime64_extended_range/requirements/requirements.py\n+++ b/tests/testflows/datetime64_extended_range/requirements/requirements.py\n@@ -714,15 +714,15 @@\n     num=\"4.2.0.4.21\",\n )\n \n-RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinute = Requirement(\n-    name=\"RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute\",\n+RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinutes = Requirement(\n+    name=\"RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes\",\n     version=\"1.0\",\n     priority=None,\n     group=None,\n     type=None,\n     uid=None,\n     description=(\n-        \"[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinute](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminute)\\n\"\n+        \"[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinutes](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminutes)\\n\"\n         \"function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].\\n\"\n         \"\\n\"\n     ),\n@@ -1944,7 +1944,7 @@\n             num=\"4.2.0.4.21\",\n         ),\n         Heading(\n-            name=\"RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute\",\n+            name=\"RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes\",\n             level=5,\n             num=\"4.2.0.4.22\",\n         ),\n@@ -2282,7 +2282,7 @@\n         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfHour,\n         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfMinute,\n         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfSecond,\n-        RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinute,\n+        RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinutes,\n         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfTenMinutes,\n         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFifteenMinutes,\n         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfInterval,\n@@ -2399,7 +2399,7 @@\n         * 4.2.0.4.19 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfHour](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofhour)\n         * 4.2.0.4.20 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfMinute](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofminute)\n         * 4.2.0.4.21 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfSecond](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofsecond)\n-        * 4.2.0.4.22 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffiveminute)\n+        * 4.2.0.4.22 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffiveminutes)\n         * 4.2.0.4.23 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfTenMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoftenminutes)\n         * 4.2.0.4.24 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFifteenMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffifteenminutes)\n         * 4.2.0.4.25 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfInterval](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofinterval)\n@@ -2762,10 +2762,10 @@\n [ClickHouse] SHALL support correct operation of the [toStartOfSecond](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartofsecond)\n function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].\n \n-###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute\n+###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes\n version: 1.0\n \n-[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinute](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminute)\n+[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinutes](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminutes)\n function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].\n \n ###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfTenMinutes\ndiff --git a/tests/testflows/datetime64_extended_range/tests/date_time_functions.py b/tests/testflows/datetime64_extended_range/tests/date_time_functions.py\nindex 53add63e8f2b..9038d0a8ee7e 100644\n--- a/tests/testflows/datetime64_extended_range/tests/date_time_functions.py\n+++ b/tests/testflows/datetime64_extended_range/tests/date_time_functions.py\n@@ -576,13 +576,13 @@ def to_start_of_minutes_interval(self, interval, func):\n \n @TestScenario\n @Requirements(\n-    RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinute(\n+    RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinutes(\n         \"1.0\"\n     )\n )\n-def to_start_of_five_minute(self):\n-    \"\"\"Check the toStartOfFiveMinute with DateTime64 extended range.\"\"\"\n-    to_start_of_minutes_interval(interval=5, func=\"toStartOfFiveMinute\")\n+def to_start_of_five_minutes(self):\n+    \"\"\"Check the toStartOfFiveMinutes with DateTime64 extended range.\"\"\"\n+    to_start_of_minutes_interval(interval=5, func=\"toStartOfFiveMinutes\")\n \n \n @TestScenario\n",
  "problem_statement": "toStartOfFiveMinute - Minor inconsistency in naming\nI guess, function 'toStartOfFiveMinute' should be replaced by 'toStartOfFiveMinutes' (plural s is missing)\n",
  "hints_text": "",
  "created_at": "2022-04-22T02:51:53Z",
  "modified_files": [
    "docs/en/sql-reference/functions/date-time-functions.md",
    "docs/ru/sql-reference/functions/date-time-functions.md",
    "docs/zh/sql-reference/functions/date-time-functions.md",
    "src/Common/DateLUTImpl.h",
    "src/Functions/DateTimeTransforms.h",
    "src/Functions/registerFunctionsDateTime.cpp",
    "src/Functions/toStartOfFiveMinute.cpp",
    "b/src/Functions/toStartOfFiveMinutes.cpp",
    "utils/db-generator/query_db_generator.cpp"
  ],
  "modified_test_files": [
    "src/Common/tests/gtest_DateLUTImpl.cpp",
    "tests/fuzz/all.dict",
    "tests/fuzz/dictionaries/functions.dict",
    "tests/performance/date_time_long.xml",
    "tests/queries/0_stateless/00189_time_zones_long.reference",
    "tests/queries/0_stateless/00189_time_zones_long.sql",
    "tests/queries/0_stateless/00534_filimonov.data",
    "tests/queries/0_stateless/00921_datetime64_compatibility_long.python",
    "tests/queries/0_stateless/00921_datetime64_compatibility_long.reference",
    "tests/queries/0_stateless/01921_datatype_date32.reference",
    "tests/queries/0_stateless/01921_datatype_date32.sql",
    "tests/queries/0_stateless/01958_partial_hour_timezone.reference",
    "tests/queries/0_stateless/01958_partial_hour_timezone.sql",
    "tests/queries/0_stateless/02096_date_time_1970_saturation.sql",
    "tests/testflows/datetime64_extended_range/requirements/requirements.md",
    "tests/testflows/datetime64_extended_range/requirements/requirements.py",
    "tests/testflows/datetime64_extended_range/tests/date_time_functions.py"
  ]
}