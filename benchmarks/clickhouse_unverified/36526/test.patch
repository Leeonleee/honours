diff --git a/src/Common/tests/gtest_DateLUTImpl.cpp b/src/Common/tests/gtest_DateLUTImpl.cpp
index 1eec83a6ec9d..d522448d3378 100644
--- a/src/Common/tests/gtest_DateLUTImpl.cpp
+++ b/src/Common/tests/gtest_DateLUTImpl.cpp
@@ -119,7 +119,7 @@ TEST(DateLUTTest, TimeValuesInMiddleOfRange)
     EXPECT_EQ(lut.toSecond(time), 11 /*unsigned*/);
     EXPECT_EQ(lut.toMinute(time), 20 /*unsigned*/);
     EXPECT_EQ(lut.toStartOfMinute(time), 1568650800 /*time_t*/);
-    EXPECT_EQ(lut.toStartOfFiveMinute(time), 1568650800 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFiveMinutes(time), 1568650800 /*time_t*/);
     EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 1568650500 /*time_t*/);
     EXPECT_EQ(lut.toStartOfTenMinutes(time), 1568650800 /*time_t*/);
     EXPECT_EQ(lut.toStartOfHour(time), 1568649600 /*time_t*/);
@@ -181,7 +181,7 @@ TEST(DateLUTTest, TimeValuesAtLeftBoderOfRange)
     EXPECT_EQ(lut.toSecond(time), 0 /*unsigned*/);
     EXPECT_EQ(lut.toMinute(time), 0 /*unsigned*/);
     EXPECT_EQ(lut.toStartOfMinute(time), 0 /*time_t*/);
-    EXPECT_EQ(lut.toStartOfFiveMinute(time), 0 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFiveMinutes(time), 0 /*time_t*/);
     EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 0 /*time_t*/);
     EXPECT_EQ(lut.toStartOfTenMinutes(time), 0 /*time_t*/);
     EXPECT_EQ(lut.toStartOfHour(time), 0 /*time_t*/);
@@ -244,7 +244,7 @@ TEST(DateLUTTest, TimeValuesAtRightBoderOfRangeOfOldLUT)
     EXPECT_EQ(lut.toMinute(time), 17 /*unsigned*/);
     EXPECT_EQ(lut.toSecond(time), 53 /*unsigned*/);
     EXPECT_EQ(lut.toStartOfMinute(time), 4294343820 /*time_t*/);
-    EXPECT_EQ(lut.toStartOfFiveMinute(time), 4294343700 /*time_t*/);
+    EXPECT_EQ(lut.toStartOfFiveMinutes(time), 4294343700 /*time_t*/);
     EXPECT_EQ(lut.toStartOfFifteenMinutes(time), 4294343700 /*time_t*/);
     EXPECT_EQ(lut.toStartOfTenMinutes(time), 4294343400 /*time_t*/);
     EXPECT_EQ(lut.toStartOfHour(time), 4294342800 /*time_t*/);
diff --git a/tests/fuzz/all.dict b/tests/fuzz/all.dict
index 1863cd20bdd5..356428a0b867 100644
--- a/tests/fuzz/all.dict
+++ b/tests/fuzz/all.dict
@@ -1311,7 +1311,7 @@
 "toSecond"
 "toStartOfDay"
 "toStartOfFifteenMinutes"
-"toStartOfFiveMinute"
+"toStartOfFiveMinutes"
 "toStartOfHour"
 "toStartOfInterval"
 "toStartOfISOYear"
diff --git a/tests/fuzz/dictionaries/functions.dict b/tests/fuzz/dictionaries/functions.dict
index 3f393aa6846c..1bdaed5ee1b5 100644
--- a/tests/fuzz/dictionaries/functions.dict
+++ b/tests/fuzz/dictionaries/functions.dict
@@ -507,7 +507,7 @@
 "toStartOfFifteenMinutes"
 "emptyArrayUInt8"
 "dictGetUInt8"
-"toStartOfFiveMinute"
+"toStartOfFiveMinutes"
 "cbrt"
 "toStartOfMinute"
 "dictGet"
diff --git a/tests/performance/date_time_long.xml b/tests/performance/date_time_long.xml
index f210c807b124..240481969a8c 100644
--- a/tests/performance/date_time_long.xml
+++ b/tests/performance/date_time_long.xml
@@ -16,7 +16,7 @@
                <value>toISOYear</value>
 
                <value>toStartOfMinute</value>
-               <value>toStartOfFiveMinute</value>
+               <value>toStartOfFiveMinutes</value>
                <value>toStartOfFifteenMinutes</value>
                <value>toStartOfHour</value>
                <value>toStartOfDay</value>
diff --git a/tests/queries/0_stateless/00189_time_zones_long.reference b/tests/queries/0_stateless/00189_time_zones_long.reference
index df42e8f1b6ed..c55542f59a68 100644
--- a/tests/queries/0_stateless/00189_time_zones_long.reference
+++ b/tests/queries/0_stateless/00189_time_zones_long.reference
@@ -107,7 +107,7 @@ toStartOfMinute
 2019-02-06 19:57:00
 2019-02-07 04:57:00
 2019-02-06 11:57:00
-toStartOfFiveMinute
+toStartOfFiveMinutes
 2019-02-06 22:55:00
 2019-02-06 20:55:00
 2019-02-06 19:55:00
diff --git a/tests/queries/0_stateless/00189_time_zones_long.sql b/tests/queries/0_stateless/00189_time_zones_long.sql
index ecc5f62ed1de..790b645e4f9f 100644
--- a/tests/queries/0_stateless/00189_time_zones_long.sql
+++ b/tests/queries/0_stateless/00189_time_zones_long.sql
@@ -162,14 +162,14 @@ SELECT toString(toStartOfMinute(toDateTime(1549483055), 'Europe/London'), 'Europ
 SELECT toString(toStartOfMinute(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');
 SELECT toString(toStartOfMinute(toDateTime(1549483055), 'Pacific/Pitcairn'), 'Pacific/Pitcairn');
 
-/* toStartOfFiveMinute */
-
-SELECT 'toStartOfFiveMinute';
-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Europe/Moscow'), 'Europe/Moscow');
-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Europe/Paris'), 'Europe/Paris');
-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Europe/London'), 'Europe/London');
-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');
-SELECT toString(toStartOfFiveMinute(toDateTime(1549483055), 'Pacific/Pitcairn'), 'Pacific/Pitcairn');
+/* toStartOfFiveMinutes */
+
+SELECT 'toStartOfFiveMinutes';
+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Europe/Moscow'), 'Europe/Moscow');
+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Europe/Paris'), 'Europe/Paris');
+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Europe/London'), 'Europe/London');
+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');
+SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Pacific/Pitcairn'), 'Pacific/Pitcairn');
 
 /* toStartOfTenMinutes */
 
diff --git a/tests/queries/0_stateless/00534_filimonov.data b/tests/queries/0_stateless/00534_filimonov.data
index 827b3ee4fbc1..f07d79ed1bf3 100644
--- a/tests/queries/0_stateless/00534_filimonov.data
+++ b/tests/queries/0_stateless/00534_filimonov.data
@@ -199,7 +199,7 @@ SELECT toMinute(NULL);
 SELECT toStartOfDay(NULL);
 SELECT toMonday(NULL);
 SELECT toUInt16OrZero(NULL);
-SELECT toStartOfFiveMinute(NULL);
+SELECT toStartOfFiveMinutes(NULL);
 SELECT halfMD5(NULL);
 SELECT toStartOfHour(NULL);
 SELECT toRelativeYearNum(NULL);
diff --git a/tests/queries/0_stateless/00921_datetime64_compatibility_long.python b/tests/queries/0_stateless/00921_datetime64_compatibility_long.python
index 03cc088fd875..fc8a229268b0 100644
--- a/tests/queries/0_stateless/00921_datetime64_compatibility_long.python
+++ b/tests/queries/0_stateless/00921_datetime64_compatibility_long.python
@@ -28,7 +28,7 @@ toStartOfWeek(N, 'Europe/Moscow')
 toStartOfDay(N, 'Europe/Moscow')
 toStartOfHour(N, 'Europe/Moscow')
 toStartOfMinute(N, 'Europe/Moscow')
-toStartOfFiveMinute(N, 'Europe/Moscow')
+toStartOfFiveMinutes(N, 'Europe/Moscow')
 toStartOfTenMinutes(N, 'Europe/Moscow')
 toStartOfFifteenMinutes(N, 'Europe/Moscow')
 toStartOfInterval(N, INTERVAL 1 year, 'Europe/Moscow')
diff --git a/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference b/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference
index 230bfa0c117b..6dd1b4b93226 100644
--- a/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference
+++ b/tests/queries/0_stateless/00921_datetime64_compatibility_long.reference
@@ -98,7 +98,7 @@ Code: 43
 "DateTime('Europe/Moscow')","2019-09-16 19:20:00"
 "DateTime('Europe/Moscow')","2019-09-16 19:20:00"
 ------------------------------------------
-SELECT toStartOfFiveMinute(N, \'Europe/Moscow\')
+SELECT toStartOfFiveMinutes(N, \'Europe/Moscow\')
 Code: 43
 "DateTime('Europe/Moscow')","2019-09-16 19:20:00"
 "DateTime('Europe/Moscow')","2019-09-16 19:20:00"
diff --git a/tests/queries/0_stateless/01921_datatype_date32.reference b/tests/queries/0_stateless/01921_datatype_date32.reference
index 8beaefbeb38b..fc76ba92dc40 100644
--- a/tests/queries/0_stateless/01921_datatype_date32.reference
+++ b/tests/queries/0_stateless/01921_datatype_date32.reference
@@ -104,7 +104,7 @@
 2021-01-01
 -------toStartOfSecond---------
 -------toStartOfMinute---------
--------toStartOfFiveMinute---------
+-------toStartOfFiveMinutes---------
 -------toStartOfTenMinutes---------
 -------toStartOfFifteenMinutes---------
 -------toStartOfHour---------
diff --git a/tests/queries/0_stateless/01921_datatype_date32.sql b/tests/queries/0_stateless/01921_datatype_date32.sql
index e01bdfeee8d4..3ab026faab9c 100644
--- a/tests/queries/0_stateless/01921_datatype_date32.sql
+++ b/tests/queries/0_stateless/01921_datatype_date32.sql
@@ -46,8 +46,8 @@ select '-------toStartOfSecond---------';
 select toStartOfSecond(x1) from t1; -- { serverError 43 }
 select '-------toStartOfMinute---------';
 select toStartOfMinute(x1) from t1; -- { serverError 43 }
-select '-------toStartOfFiveMinute---------';
-select toStartOfFiveMinute(x1) from t1; -- { serverError 43 }
+select '-------toStartOfFiveMinutes---------';
+select toStartOfFiveMinutes(x1) from t1; -- { serverError 43 }
 select '-------toStartOfTenMinutes---------';
 select toStartOfTenMinutes(x1) from t1; -- { serverError 43 }
 select '-------toStartOfFifteenMinutes---------';
diff --git a/tests/queries/0_stateless/01958_partial_hour_timezone.reference b/tests/queries/0_stateless/01958_partial_hour_timezone.reference
index a86391b491ca..ab2f72213904 100644
--- a/tests/queries/0_stateless/01958_partial_hour_timezone.reference
+++ b/tests/queries/0_stateless/01958_partial_hour_timezone.reference
@@ -5,7 +5,7 @@ timeZoneOffset(t):                             -2670
 formatDateTime(t, '%F %T', 'Africa/Monrovia'): 1970-06-17 07:39:21
 toString(t, 'Africa/Monrovia'):                1970-06-17 07:39:21
 toStartOfMinute(t):                            1970-06-17 07:39:00
-toStartOfFiveMinute(t):                        1970-06-17 07:35:00
+toStartOfFiveMinutes(t):                       1970-06-17 07:35:00
 toStartOfFifteenMinutes(t):                    1970-06-17 07:30:00
 toStartOfTenMinutes(t):                        1970-06-17 07:30:00
 toStartOfHour(t):                              1970-06-17 07:00:00
diff --git a/tests/queries/0_stateless/01958_partial_hour_timezone.sql b/tests/queries/0_stateless/01958_partial_hour_timezone.sql
index 9bcb03ea4f2c..26350e55620d 100644
--- a/tests/queries/0_stateless/01958_partial_hour_timezone.sql
+++ b/tests/queries/0_stateless/01958_partial_hour_timezone.sql
@@ -5,7 +5,7 @@ SELECT toUnixTimestamp(t),
        formatDateTime(t, '%F %T', 'Africa/Monrovia'),
        toString(t, 'Africa/Monrovia'),
        toStartOfMinute(t),
-       toStartOfFiveMinute(t),
+       toStartOfFiveMinutes(t),
        toStartOfFifteenMinutes(t),
        toStartOfTenMinutes(t),
        toStartOfHour(t),
diff --git a/tests/queries/0_stateless/02096_date_time_1970_saturation.sql b/tests/queries/0_stateless/02096_date_time_1970_saturation.sql
index e0c401443a75..8cf60c95f73b 100644
--- a/tests/queries/0_stateless/02096_date_time_1970_saturation.sql
+++ b/tests/queries/0_stateless/02096_date_time_1970_saturation.sql
@@ -12,7 +12,7 @@ select toStartOfYear(toDate(0));
 select toStartOfYear(toDateTime(0, 'Europe/Moscow'));
 select toTime(toDateTime(0, 'Europe/Moscow'));
 select toStartOfMinute(toDateTime(0, 'Europe/Moscow'));
-select toStartOfFiveMinute(toDateTime(0, 'Europe/Moscow'));
+select toStartOfFiveMinutes(toDateTime(0, 'Europe/Moscow'));
 select toStartOfTenMinutes(toDateTime(0, 'Europe/Moscow'));
 select toStartOfFifteenMinutes(toDateTime(0, 'Europe/Moscow'));
 select toStartOfHour(toDateTime(0, 'Europe/Moscow'));
@@ -25,7 +25,7 @@ select toStartOfQuarter(toDateTime(0, 'America/Los_Angeles'));
 select toStartOfYear(toDateTime(0, 'America/Los_Angeles'));
 select toTime(toDateTime(0, 'America/Los_Angeles'), 'America/Los_Angeles');
 select toStartOfMinute(toDateTime(0, 'America/Los_Angeles'));
-select toStartOfFiveMinute(toDateTime(0, 'America/Los_Angeles'));
+select toStartOfFiveMinutes(toDateTime(0, 'America/Los_Angeles'));
 select toStartOfTenMinutes(toDateTime(0, 'America/Los_Angeles'));
 select toStartOfFifteenMinutes(toDateTime(0, 'America/Los_Angeles'));
 select toStartOfHour(toDateTime(0, 'America/Los_Angeles'));
diff --git a/tests/testflows/datetime64_extended_range/requirements/requirements.md b/tests/testflows/datetime64_extended_range/requirements/requirements.md
index 659057ebfdc9..1546d4a2a46b 100644
--- a/tests/testflows/datetime64_extended_range/requirements/requirements.md
+++ b/tests/testflows/datetime64_extended_range/requirements/requirements.md
@@ -54,7 +54,7 @@
         * 4.2.0.4.19 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfHour](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofhour)
         * 4.2.0.4.20 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfMinute](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofminute)
         * 4.2.0.4.21 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfSecond](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofsecond)
-        * 4.2.0.4.22 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffiveminute)
+        * 4.2.0.4.22 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffiveminutes)
         * 4.2.0.4.23 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfTenMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoftenminutes)
         * 4.2.0.4.24 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFifteenMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffifteenminutes)
         * 4.2.0.4.25 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfInterval](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofinterval)
@@ -417,10 +417,10 @@ version: 1.0
 [ClickHouse] SHALL support correct operation of the [toStartOfSecond](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartofsecond)
 function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].
 
-###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute
+###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes
 version: 1.0
 
-[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinute](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminute)
+[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinutes](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminutes)
 function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].
 
 ###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfTenMinutes
diff --git a/tests/testflows/datetime64_extended_range/requirements/requirements.py b/tests/testflows/datetime64_extended_range/requirements/requirements.py
index 1bbaf3547d92..de25c0e9c264 100644
--- a/tests/testflows/datetime64_extended_range/requirements/requirements.py
+++ b/tests/testflows/datetime64_extended_range/requirements/requirements.py
@@ -714,15 +714,15 @@
     num="4.2.0.4.21",
 )
 
-RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinute = Requirement(
-    name="RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute",
+RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinutes = Requirement(
+    name="RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes",
     version="1.0",
     priority=None,
     group=None,
     type=None,
     uid=None,
     description=(
-        "[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinute](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminute)
"
+        "[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinutes](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminutes)
"
         "function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].
"
         "
"
     ),
@@ -1944,7 +1944,7 @@
             num="4.2.0.4.21",
         ),
         Heading(
-            name="RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute",
+            name="RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes",
             level=5,
             num="4.2.0.4.22",
         ),
@@ -2282,7 +2282,7 @@
         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfHour,
         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfMinute,
         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfSecond,
-        RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinute,
+        RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinutes,
         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfTenMinutes,
         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFifteenMinutes,
         RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfInterval,
@@ -2399,7 +2399,7 @@
         * 4.2.0.4.19 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfHour](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofhour)
         * 4.2.0.4.20 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfMinute](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofminute)
         * 4.2.0.4.21 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfSecond](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofsecond)
-        * 4.2.0.4.22 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffiveminute)
+        * 4.2.0.4.22 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffiveminutes)
         * 4.2.0.4.23 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfTenMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoftenminutes)
         * 4.2.0.4.24 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFifteenMinutes](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartoffifteenminutes)
         * 4.2.0.4.25 [RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfInterval](#rqsrs-010datetime64extendedrangedatesandtimesfunctionstostartofinterval)
@@ -2762,10 +2762,10 @@
 [ClickHouse] SHALL support correct operation of the [toStartOfSecond](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartofsecond)
 function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].
 
-###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinute
+###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfFiveMinutes
 version: 1.0
 
-[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinute](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminute)
+[ClickHouse] SHALL support correct operation of the [toStartOfFiveMinutes](https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#tostartoffiveminutes)
 function used with the [DateTime64] data type when it stores dates within the [normal date range] and the [extended date range].
 
 ###### RQ.SRS-010.DateTime64.ExtendedRange.DatesAndTimesFunctions.toStartOfTenMinutes
diff --git a/tests/testflows/datetime64_extended_range/tests/date_time_functions.py b/tests/testflows/datetime64_extended_range/tests/date_time_functions.py
index 53add63e8f2b..9038d0a8ee7e 100644
--- a/tests/testflows/datetime64_extended_range/tests/date_time_functions.py
+++ b/tests/testflows/datetime64_extended_range/tests/date_time_functions.py
@@ -576,13 +576,13 @@ def to_start_of_minutes_interval(self, interval, func):
 
 @TestScenario
 @Requirements(
-    RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinute(
+    RQ_SRS_010_DateTime64_ExtendedRange_DatesAndTimesFunctions_toStartOfFiveMinutes(
         "1.0"
     )
 )
-def to_start_of_five_minute(self):
-    """Check the toStartOfFiveMinute with DateTime64 extended range."""
-    to_start_of_minutes_interval(interval=5, func="toStartOfFiveMinute")
+def to_start_of_five_minutes(self):
+    """Check the toStartOfFiveMinutes with DateTime64 extended range."""
+    to_start_of_minutes_interval(interval=5, func="toStartOfFiveMinutes")
 
 
 @TestScenario
