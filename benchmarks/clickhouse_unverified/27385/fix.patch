diff --git a/src/Server/TCPHandler.cpp b/src/Server/TCPHandler.cpp
index 269c33d952e5..0339b144f091 100644
--- a/src/Server/TCPHandler.cpp
+++ b/src/Server/TCPHandler.cpp
@@ -32,6 +32,7 @@
 #include <DataTypes/DataTypeLowCardinality.h>
 #include <Compression/CompressionFactory.h>
 #include <common/logger_useful.h>
+#include <fmt/format.h>
 
 #include <Processors/Executors/PullingAsyncPipelineExecutor.h>
 
@@ -46,6 +47,27 @@
 namespace DB
 {
 
+namespace
+{
+std::string formatHTTPErrorResponse(const Poco::Util::AbstractConfiguration& config)
+{
+    std::string result = fmt::format(
+        "HTTP/1.0 400 Bad Request\r
\r
"
+        "Port {} is for clickhouse-client program\r
",
+        config.getString("tcp_port"));
+
+    if (config.has("http_port"))
+    {
+        result += fmt::format(
+            "You must use port {} for HTTP.\r
",
+            config.getString("http_port"));
+    }
+
+    return result;
+}
+}
+
+
 namespace ErrorCodes
 {
     extern const int LOGICAL_ERROR;
@@ -922,10 +944,8 @@ void TCPHandler::receiveHello()
           */
         if (packet_type == 'G' || packet_type == 'P')
         {
-            writeString("HTTP/1.0 400 Bad Request\r
\r
"
-                "Port " + server.config().getString("tcp_port") + " is for clickhouse-client program.\r
"
-                "You must use port " + server.config().getString("http_port") + " for HTTP.\r
",
-                *out);
+            writeString(formatHTTPErrorResponse(server.config()),
+                        *out);
 
             throw Exception("Client has connected to wrong port", ErrorCodes::CLIENT_HAS_CONNECTED_TO_WRONG_PORT);
         }
