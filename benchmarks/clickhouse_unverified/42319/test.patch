diff --git a/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.reference b/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.reference
index e69de29bb2d1..338e1edb715d 100644
--- a/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.reference
+++ b/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.reference
@@ -0,0 +1,4 @@
+one	1
+two	1
+one	1
+two	1
diff --git a/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.sql b/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.sql
index e236e6d27671..b83f02dc79da 100644
--- a/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.sql
+++ b/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.sql
@@ -11,5 +11,6 @@ alter table enum_alter_issue detach partition id 'all';
 alter table enum_alter_issue modify column a Enum8('one' = 1, 'two' = 2, 'three' = 3);
 insert into enum_alter_issue values ('one', 1), ('two', 1);
 
-alter table enum_alter_issue attach partition id 'all'; -- {serverError TYPE_MISMATCH}
+alter table enum_alter_issue attach partition id 'all';
+select * from enum_alter_issue;
 drop table enum_alter_issue;
diff --git a/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.reference b/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.reference
new file mode 100644
index 000000000000..99a39410caef
--- /dev/null
+++ b/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.reference
@@ -0,0 +1,9 @@
+1	one	test1
+one	one	test1
+one	one	test
+one	one	test
+-----
+1	one	test1
+one	one	test1
+one	one	test
+one	one	test
diff --git a/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql b/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql
new file mode 100644
index 000000000000..7f48b41aa1e8
--- /dev/null
+++ b/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql
@@ -0,0 +1,94 @@
+drop table if exists src;
+create table src( A Int64, B String, C String) Engine=MergeTree order by A SETTINGS min_bytes_for_wide_part=0;
+insert into src values(1, 'one', 'test');
+
+alter table src detach partition tuple();
+alter table src modify column B Nullable(String);
+alter table src attach partition tuple();
+
+alter table src update C = 'test1' where 1 settings mutations_sync=2;
+select * from src;
+
+
+drop table if exists src;
+create table src( A String, B String, C String) Engine=MergeTree order by A SETTINGS min_bytes_for_wide_part=0;
+insert into src values('one', 'one', 'test');
+
+alter table src detach partition tuple();
+alter table src modify column A LowCardinality(String);
+alter table src attach partition tuple();
+
+alter table src update C = 'test1' where 1 settings mutations_sync=2;
+select * from src;
+
+
+drop table if exists src;
+create table src( A String, B String, C String) Engine=MergeTree order by A SETTINGS min_bytes_for_wide_part=0;
+insert into src values('one', 'one', 'test');
+
+alter table src detach partition tuple();
+alter table src modify column A LowCardinality(String);
+alter table src attach partition tuple();
+
+alter table src modify column C LowCardinality(String);
+select * from src;
+
+drop table if exists src;
+create table src( A String, B String, C String) Engine=MergeTree order by A SETTINGS min_bytes_for_wide_part=0;
+insert into src values('one', 'one', 'test');
+
+alter table src detach partition tuple();
+alter table src modify column B Nullable(String);
+alter table src attach partition tuple();
+
+alter table src rename column B to D;
+select * from src;
+
+select '-----';
+
+drop table if exists src;
+create table src( A Int64, B String, C String) Engine=ReplicatedMergeTree('/clickhouse/{database}/test/src1', '1') order by A SETTINGS min_bytes_for_wide_part=0;
+insert into src values(1, 'one', 'test');
+
+alter table src detach partition tuple();
+alter table src modify column B Nullable(String);
+alter table src attach partition tuple();
+
+alter table src update C = 'test1' where 1 settings mutations_sync=2;
+select * from src;
+
+
+drop table if exists src;
+create table src( A String, B String, C String) Engine=ReplicatedMergeTree('/clickhouse/{database}/test/src2', '1') order by A SETTINGS min_bytes_for_wide_part=0;
+insert into src values('one', 'one', 'test');
+
+alter table src detach partition tuple();
+alter table src modify column A LowCardinality(String);
+alter table src attach partition tuple();
+
+alter table src update C = 'test1' where 1 settings mutations_sync=2;
+select * from src;
+
+
+drop table if exists src;
+create table src( A String, B String, C String) Engine=ReplicatedMergeTree('/clickhouse/{database}/test/src3', '1') order by A SETTINGS min_bytes_for_wide_part=0;
+insert into src values('one', 'one', 'test');
+
+alter table src detach partition tuple();
+alter table src modify column A LowCardinality(String);
+alter table src attach partition tuple();
+
+alter table src modify column C LowCardinality(String);
+select * from src;
+
+drop table if exists src;
+create table src( A String, B String, C String) Engine=ReplicatedMergeTree('/clickhouse/{database}/test/src4', '1') order by A SETTINGS min_bytes_for_wide_part=0;
+insert into src values('one', 'one', 'test');
+
+alter table src detach partition tuple();
+alter table src modify column B Nullable(String);
+alter table src attach partition tuple();
+
+alter table src rename column B to D;
+select * from src;
+
