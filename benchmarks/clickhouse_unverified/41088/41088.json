{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 41088,
  "instance_id": "ClickHouse__ClickHouse-41088",
  "issue_numbers": [
    "37718"
  ],
  "base_commit": "a270eeef91b68503d57881591476a402704d451f",
  "patch": "diff --git a/.github/workflows/backport_branches.yml b/.github/workflows/backport_branches.yml\nindex a10864521842..1c51d06f3954 100644\n--- a/.github/workflows/backport_branches.yml\n+++ b/.github/workflows/backport_branches.yml\n@@ -349,6 +349,100 @@ jobs:\n           # shellcheck disable=SC2046\n           docker rm -f $(docker ps -a -q) ||:\n           sudo rm -fr \"$TEMP_PATH\" \"$CACHES_PATH\"\n+  BuilderBinDarwin:\n+    needs: [DockerHubPush]\n+    runs-on: [self-hosted, builder]\n+    steps:\n+      - name: Set envs\n+        run: |\n+          cat >> \"$GITHUB_ENV\" << 'EOF'\n+          TEMP_PATH=${{runner.temp}}/build_check\n+          IMAGES_PATH=${{runner.temp}}/images_path\n+          REPO_COPY=${{runner.temp}}/build_check/ClickHouse\n+          CACHES_PATH=${{runner.temp}}/../ccaches\n+          BUILD_NAME=binary_darwin\n+          EOF\n+      - name: Download changed images\n+        uses: actions/download-artifact@v2\n+        with:\n+          name: changed_images\n+          path: ${{ env.IMAGES_PATH }}\n+      - name: Clear repository\n+        run: |\n+          sudo rm -fr \"$GITHUB_WORKSPACE\" && mkdir \"$GITHUB_WORKSPACE\"\n+      - name: Check out repository code\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: 0 # otherwise we will have no info about contributors\n+      - name: Build\n+        run: |\n+          git -C \"$GITHUB_WORKSPACE\" submodule sync --recursive\n+          git -C \"$GITHUB_WORKSPACE\" submodule update --depth=1 --recursive --init --jobs=10\n+          sudo rm -fr \"$TEMP_PATH\"\n+          mkdir -p \"$TEMP_PATH\"\n+          cp -r \"$GITHUB_WORKSPACE\" \"$TEMP_PATH\"\n+          cd \"$REPO_COPY/tests/ci\" && python3 build_check.py \"$BUILD_NAME\"\n+      - name: Upload build URLs to artifacts\n+        if: ${{ success() || failure() }}\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: ${{ env.BUILD_URLS }}\n+          path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json\n+      - name: Cleanup\n+        if: always()\n+        run: |\n+          # shellcheck disable=SC2046\n+          docker kill $(docker ps -q) ||:\n+          # shellcheck disable=SC2046\n+          docker rm -f $(docker ps -a -q) ||:\n+          sudo rm -fr \"$TEMP_PATH\" \"$CACHES_PATH\"\n+  BuilderBinDarwinAarch64:\n+    needs: [DockerHubPush]\n+    runs-on: [self-hosted, builder]\n+    steps:\n+      - name: Set envs\n+        run: |\n+          cat >> \"$GITHUB_ENV\" << 'EOF'\n+          TEMP_PATH=${{runner.temp}}/build_check\n+          IMAGES_PATH=${{runner.temp}}/images_path\n+          REPO_COPY=${{runner.temp}}/build_check/ClickHouse\n+          CACHES_PATH=${{runner.temp}}/../ccaches\n+          BUILD_NAME=binary_darwin_aarch64\n+          EOF\n+      - name: Download changed images\n+        uses: actions/download-artifact@v2\n+        with:\n+          name: changed_images\n+          path: ${{ env.IMAGES_PATH }}\n+      - name: Clear repository\n+        run: |\n+          sudo rm -fr \"$GITHUB_WORKSPACE\" && mkdir \"$GITHUB_WORKSPACE\"\n+      - name: Check out repository code\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: 0 # otherwise we will have no info about contributors\n+      - name: Build\n+        run: |\n+          git -C \"$GITHUB_WORKSPACE\" submodule sync --recursive\n+          git -C \"$GITHUB_WORKSPACE\" submodule update --depth=1 --recursive --init --jobs=10\n+          sudo rm -fr \"$TEMP_PATH\"\n+          mkdir -p \"$TEMP_PATH\"\n+          cp -r \"$GITHUB_WORKSPACE\" \"$TEMP_PATH\"\n+          cd \"$REPO_COPY/tests/ci\" && python3 build_check.py \"$BUILD_NAME\"\n+      - name: Upload build URLs to artifacts\n+        if: ${{ success() || failure() }}\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: ${{ env.BUILD_URLS }}\n+          path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json\n+      - name: Cleanup\n+        if: always()\n+        run: |\n+          # shellcheck disable=SC2046\n+          docker kill $(docker ps -q) ||:\n+          # shellcheck disable=SC2046\n+          docker rm -f $(docker ps -a -q) ||:\n+          sudo rm -fr \"$TEMP_PATH\" \"$CACHES_PATH\"\n ############################################################################################\n ##################################### Docker images  #######################################\n ############################################################################################\n@@ -425,6 +519,46 @@ jobs:\n           # shellcheck disable=SC2046\n           docker rm -f $(docker ps -a -q) ||:\n           sudo rm -fr \"$TEMP_PATH\"\n+  BuilderSpecialReport:\n+    needs:\n+      - BuilderBinDarwin\n+      - BuilderBinDarwinAarch64\n+    runs-on: [self-hosted, style-checker]\n+    steps:\n+      - name: Set envs\n+        run: |\n+          cat >> \"$GITHUB_ENV\" << 'EOF'\n+          TEMP_PATH=${{runner.temp}}/report_check\n+          REPORTS_PATH=${{runner.temp}}/reports_dir\n+          CHECK_NAME=ClickHouse special build check\n+          NEEDS_DATA_PATH=${{runner.temp}}/needs.json\n+          EOF\n+      - name: Download json reports\n+        uses: actions/download-artifact@v2\n+        with:\n+          path: ${{ env.REPORTS_PATH }}\n+      - name: Clear repository\n+        run: |\n+          sudo rm -fr \"$GITHUB_WORKSPACE\" && mkdir \"$GITHUB_WORKSPACE\"\n+      - name: Check out repository code\n+        uses: actions/checkout@v2\n+      - name: Report Builder\n+        run: |\n+          sudo rm -fr \"$TEMP_PATH\"\n+          mkdir -p \"$TEMP_PATH\"\n+          cat > \"$NEEDS_DATA_PATH\" << 'EOF'\n+          ${{ toJSON(needs) }}\n+          EOF\n+          cd \"$GITHUB_WORKSPACE/tests/ci\"\n+          python3 build_report_check.py \"$CHECK_NAME\"\n+      - name: Cleanup\n+        if: always()\n+        run: |\n+          # shellcheck disable=SC2046\n+          docker kill $(docker ps -q) ||:\n+          # shellcheck disable=SC2046\n+          docker rm -f $(docker ps -a -q) ||:\n+          sudo rm -fr \"$TEMP_PATH\"\n ##############################################################################################\n ########################### FUNCTIONAl STATELESS TESTS #######################################\n ##############################################################################################\n@@ -592,6 +726,7 @@ jobs:\n       - DockerHubPush\n       - DockerServerImages\n       - BuilderReport\n+      - BuilderSpecialReport\n       - FunctionalStatelessTestAsan\n       - FunctionalStatefulTestDebug\n       - StressTestTsan\ndiff --git a/.github/workflows/release.yml b/.github/workflows/release.yml\nindex 7e12695990c4..ae905aa62ba9 100644\n--- a/.github/workflows/release.yml\n+++ b/.github/workflows/release.yml\n@@ -29,8 +29,12 @@ jobs:\n         rm -rf \"$TEMP_PATH\" && mkdir -p \"$TEMP_PATH\"\n         cp -r \"$GITHUB_WORKSPACE\" \"$TEMP_PATH\"\n         cd \"$REPO_COPY\"\n+        # Download and push packages to artifactory\n         python3 ./tests/ci/push_to_artifactory.py --release \"${{ github.ref }}\" \\\n           --commit '${{ github.sha }}' --artifactory-url \"${{ secrets.JFROG_ARTIFACTORY_URL }}\" --all\n+        # Download macos binaries to ${{runner.temp}}/download_binary\n+        python3 ./tests/ci/download_binary.py binary_darwin binary_darwin_aarch64\n+        mv '${{runner.temp}}/download_binary/'clickhouse-* '${{runner.temp}}/push_to_artifactory'\n     - name: Upload packages to release assets\n       uses: svenstaro/upload-release-action@v2\n       with:\ndiff --git a/.github/workflows/release_branches.yml b/.github/workflows/release_branches.yml\nindex 6403d00157f2..f579d1fee63e 100644\n--- a/.github/workflows/release_branches.yml\n+++ b/.github/workflows/release_branches.yml\n@@ -426,6 +426,100 @@ jobs:\n           # shellcheck disable=SC2046\n           docker rm -f $(docker ps -a -q) ||:\n           sudo rm -fr \"$TEMP_PATH\" \"$CACHES_PATH\"\n+  BuilderBinDarwin:\n+    needs: [DockerHubPush]\n+    runs-on: [self-hosted, builder]\n+    steps:\n+      - name: Set envs\n+        run: |\n+          cat >> \"$GITHUB_ENV\" << 'EOF'\n+          TEMP_PATH=${{runner.temp}}/build_check\n+          IMAGES_PATH=${{runner.temp}}/images_path\n+          REPO_COPY=${{runner.temp}}/build_check/ClickHouse\n+          CACHES_PATH=${{runner.temp}}/../ccaches\n+          BUILD_NAME=binary_darwin\n+          EOF\n+      - name: Download changed images\n+        uses: actions/download-artifact@v2\n+        with:\n+          name: changed_images\n+          path: ${{ env.IMAGES_PATH }}\n+      - name: Clear repository\n+        run: |\n+          sudo rm -fr \"$GITHUB_WORKSPACE\" && mkdir \"$GITHUB_WORKSPACE\"\n+      - name: Check out repository code\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: 0 # otherwise we will have no info about contributors\n+      - name: Build\n+        run: |\n+          git -C \"$GITHUB_WORKSPACE\" submodule sync --recursive\n+          git -C \"$GITHUB_WORKSPACE\" submodule update --depth=1 --recursive --init --jobs=10\n+          sudo rm -fr \"$TEMP_PATH\"\n+          mkdir -p \"$TEMP_PATH\"\n+          cp -r \"$GITHUB_WORKSPACE\" \"$TEMP_PATH\"\n+          cd \"$REPO_COPY/tests/ci\" && python3 build_check.py \"$BUILD_NAME\"\n+      - name: Upload build URLs to artifacts\n+        if: ${{ success() || failure() }}\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: ${{ env.BUILD_URLS }}\n+          path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json\n+      - name: Cleanup\n+        if: always()\n+        run: |\n+          # shellcheck disable=SC2046\n+          docker kill $(docker ps -q) ||:\n+          # shellcheck disable=SC2046\n+          docker rm -f $(docker ps -a -q) ||:\n+          sudo rm -fr \"$TEMP_PATH\" \"$CACHES_PATH\"\n+  BuilderBinDarwinAarch64:\n+    needs: [DockerHubPush]\n+    runs-on: [self-hosted, builder]\n+    steps:\n+      - name: Set envs\n+        run: |\n+          cat >> \"$GITHUB_ENV\" << 'EOF'\n+          TEMP_PATH=${{runner.temp}}/build_check\n+          IMAGES_PATH=${{runner.temp}}/images_path\n+          REPO_COPY=${{runner.temp}}/build_check/ClickHouse\n+          CACHES_PATH=${{runner.temp}}/../ccaches\n+          BUILD_NAME=binary_darwin_aarch64\n+          EOF\n+      - name: Download changed images\n+        uses: actions/download-artifact@v2\n+        with:\n+          name: changed_images\n+          path: ${{ env.IMAGES_PATH }}\n+      - name: Clear repository\n+        run: |\n+          sudo rm -fr \"$GITHUB_WORKSPACE\" && mkdir \"$GITHUB_WORKSPACE\"\n+      - name: Check out repository code\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: 0 # otherwise we will have no info about contributors\n+      - name: Build\n+        run: |\n+          git -C \"$GITHUB_WORKSPACE\" submodule sync --recursive\n+          git -C \"$GITHUB_WORKSPACE\" submodule update --depth=1 --recursive --init --jobs=10\n+          sudo rm -fr \"$TEMP_PATH\"\n+          mkdir -p \"$TEMP_PATH\"\n+          cp -r \"$GITHUB_WORKSPACE\" \"$TEMP_PATH\"\n+          cd \"$REPO_COPY/tests/ci\" && python3 build_check.py \"$BUILD_NAME\"\n+      - name: Upload build URLs to artifacts\n+        if: ${{ success() || failure() }}\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: ${{ env.BUILD_URLS }}\n+          path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json\n+      - name: Cleanup\n+        if: always()\n+        run: |\n+          # shellcheck disable=SC2046\n+          docker kill $(docker ps -q) ||:\n+          # shellcheck disable=SC2046\n+          docker rm -f $(docker ps -a -q) ||:\n+          sudo rm -fr \"$TEMP_PATH\" \"$CACHES_PATH\"\n ############################################################################################\n ##################################### Docker images  #######################################\n ############################################################################################\n@@ -505,6 +599,46 @@ jobs:\n           # shellcheck disable=SC2046\n           docker rm -f $(docker ps -a -q) ||:\n           sudo rm -fr \"$TEMP_PATH\"\n+  BuilderSpecialReport:\n+    needs:\n+      - BuilderBinDarwin\n+      - BuilderBinDarwinAarch64\n+    runs-on: [self-hosted, style-checker]\n+    steps:\n+      - name: Set envs\n+        run: |\n+          cat >> \"$GITHUB_ENV\" << 'EOF'\n+          TEMP_PATH=${{runner.temp}}/report_check\n+          REPORTS_PATH=${{runner.temp}}/reports_dir\n+          CHECK_NAME=ClickHouse special build check\n+          NEEDS_DATA_PATH=${{runner.temp}}/needs.json\n+          EOF\n+      - name: Download json reports\n+        uses: actions/download-artifact@v2\n+        with:\n+          path: ${{ env.REPORTS_PATH }}\n+      - name: Clear repository\n+        run: |\n+          sudo rm -fr \"$GITHUB_WORKSPACE\" && mkdir \"$GITHUB_WORKSPACE\"\n+      - name: Check out repository code\n+        uses: actions/checkout@v2\n+      - name: Report Builder\n+        run: |\n+          sudo rm -fr \"$TEMP_PATH\"\n+          mkdir -p \"$TEMP_PATH\"\n+          cat > \"$NEEDS_DATA_PATH\" << 'EOF'\n+          ${{ toJSON(needs) }}\n+          EOF\n+          cd \"$GITHUB_WORKSPACE/tests/ci\"\n+          python3 build_report_check.py \"$CHECK_NAME\"\n+      - name: Cleanup\n+        if: always()\n+        run: |\n+          # shellcheck disable=SC2046\n+          docker kill $(docker ps -q) ||:\n+          # shellcheck disable=SC2046\n+          docker rm -f $(docker ps -a -q) ||:\n+          sudo rm -fr \"$TEMP_PATH\"\n ##############################################################################################\n ########################### FUNCTIONAl STATELESS TESTS #######################################\n ##############################################################################################\n@@ -1847,6 +1981,7 @@ jobs:\n       - DockerHubPush\n       - DockerServerImages\n       - BuilderReport\n+      - BuilderSpecialReport\n       - FunctionalStatelessTestDebug0\n       - FunctionalStatelessTestDebug1\n       - FunctionalStatelessTestDebug2\n",
  "test_patch": "diff --git a/tests/ci/ast_fuzzer_check.py b/tests/ci/ast_fuzzer_check.py\nindex 9f3ddbe99326..f3939dc89adb 100644\n--- a/tests/ci/ast_fuzzer_check.py\n+++ b/tests/ci/ast_fuzzer_check.py\n@@ -17,7 +17,7 @@\n from s3_helper import S3Helper\n from get_robot_token import get_best_robot_token\n from pr_info import PRInfo\n-from build_download_helper import get_build_name_for_check, get_build_urls\n+from build_download_helper import get_build_name_for_check, read_build_urls\n from docker_pull_helper import get_image_with_version\n from commit_status_helper import post_commit_status\n from clickhouse_helper import ClickHouseHelper, prepare_tests_results_for_clickhouse\n@@ -69,7 +69,7 @@ def get_commit(gh, commit_sha):\n \n     build_name = get_build_name_for_check(check_name)\n     print(build_name)\n-    urls = get_build_urls(build_name, reports_path)\n+    urls = read_build_urls(build_name, reports_path)\n     if not urls:\n         raise Exception(\"No build URLs found\")\n \ndiff --git a/tests/ci/build_download_helper.py b/tests/ci/build_download_helper.py\nindex f5eb72dddee5..58997bed2536 100644\n--- a/tests/ci/build_download_helper.py\n+++ b/tests/ci/build_download_helper.py\n@@ -1,11 +1,11 @@\n #!/usr/bin/env python3\n \n-import os\n import json\n import logging\n+import os\n import sys\n import time\n-from typing import Optional\n+from typing import List, Optional\n \n import requests  # type: ignore\n \n@@ -41,11 +41,11 @@ def get_with_retries(\n     return response\n \n \n-def get_build_name_for_check(check_name):\n+def get_build_name_for_check(check_name) -> str:\n     return CI_CONFIG[\"tests_config\"][check_name][\"required_build\"]\n \n \n-def get_build_urls(build_name, reports_path):\n+def read_build_urls(build_name, reports_path) -> List[str]:\n     for root, _, files in os.walk(reports_path):\n         for f in files:\n             if build_name in f:\n@@ -56,7 +56,7 @@ def get_build_urls(build_name, reports_path):\n     return []\n \n \n-def dowload_build_with_progress(url, path):\n+def download_build_with_progress(url, path):\n     logging.info(\"Downloading from %s to temp path %s\", url, path)\n     for i in range(DOWNLOAD_RETRIES_COUNT):\n         try:\n@@ -104,14 +104,14 @@ def download_builds(result_path, build_urls, filter_fn):\n         if filter_fn(url):\n             fname = os.path.basename(url.replace(\"%2B\", \"+\").replace(\"%20\", \" \"))\n             logging.info(\"Will download %s to %s\", fname, result_path)\n-            dowload_build_with_progress(url, os.path.join(result_path, fname))\n+            download_build_with_progress(url, os.path.join(result_path, fname))\n \n \n def download_builds_filter(\n     check_name, reports_path, result_path, filter_fn=lambda _: True\n ):\n     build_name = get_build_name_for_check(check_name)\n-    urls = get_build_urls(build_name, reports_path)\n+    urls = read_build_urls(build_name, reports_path)\n     print(urls)\n \n     if not urls:\ndiff --git a/tests/ci/download_binary.py b/tests/ci/download_binary.py\nnew file mode 100755\nindex 000000000000..b95c86aa0bd7\n--- /dev/null\n+++ b/tests/ci/download_binary.py\n@@ -0,0 +1,79 @@\n+#!/usr/bin/env python\n+\"\"\"\n+This file is needed to avoid cicle import build_download_helper.py <=> env_helper.py\n+\"\"\"\n+\n+import argparse\n+import logging\n+import os\n+\n+from build_download_helper import download_build_with_progress\n+from ci_config import CI_CONFIG, BuildConfig\n+from env_helper import RUNNER_TEMP, S3_ARTIFACT_DOWNLOAD_TEMPLATE\n+from git_helper import Git, commit\n+from version_helper import get_version_from_repo, version_arg\n+\n+TEMP_PATH = os.path.join(RUNNER_TEMP, \"download_binary\")\n+\n+\n+def parse_args() -> argparse.Namespace:\n+    parser = argparse.ArgumentParser(\n+        formatter_class=argparse.ArgumentDefaultsHelpFormatter,\n+        description=\"Script to download binary artifacts from S3. Downloaded artifacts \"\n+        \"are renamed to clickhouse-{static_binary_name}\",\n+    )\n+    parser.add_argument(\n+        \"--version\",\n+        type=version_arg,\n+        default=get_version_from_repo().string,\n+        help=\"a version to generate a download url, get from the repo by default\",\n+    )\n+    parser.add_argument(\n+        \"--commit\",\n+        type=commit,\n+        default=Git(True).sha,\n+        help=\"a version to generate a download url, get from the repo by default\",\n+    )\n+    parser.add_argument(\"--rename\", default=True, help=argparse.SUPPRESS)\n+    parser.add_argument(\n+        \"--no-rename\",\n+        dest=\"rename\",\n+        action=\"store_false\",\n+        default=argparse.SUPPRESS,\n+        help=\"if set, the downloaded binary won't be renamed to \"\n+        \"clickhouse-{static_binary_name}, makes sense only for a single build name\",\n+    )\n+    parser.add_argument(\n+        \"build_names\",\n+        nargs=\"+\",\n+        help=\"the build names to download\",\n+    )\n+    args = parser.parse_args()\n+    if not args.rename and len(args.build_names) > 1:\n+        parser.error(\"`--no-rename` shouldn't be used with more than one build name\")\n+    return args\n+\n+\n+def main():\n+    logging.basicConfig(level=logging.INFO, format=\"%(asctime)s %(message)s\")\n+    args = parse_args()\n+    os.makedirs(TEMP_PATH, exist_ok=True)\n+    for build in args.build_names:\n+        # check if it's in CI_CONFIG\n+        config = CI_CONFIG[\"build_config\"][build]  # type: BuildConfig\n+        if args.rename:\n+            path = os.path.join(TEMP_PATH, f\"clickhouse-{config['static_binary_name']}\")\n+        else:\n+            path = os.path.join(TEMP_PATH, \"clickhouse\")\n+\n+        url = S3_ARTIFACT_DOWNLOAD_TEMPLATE.format(\n+            pr_or_release=f\"{args.version.major}.{args.version.minor}\",\n+            commit=args.commit,\n+            build_name=build,\n+            artifact=\"clickhouse\",\n+        )\n+        download_build_with_progress(url, path)\n+\n+\n+if __name__ == \"__main__\":\n+    main()\ndiff --git a/tests/ci/env_helper.py b/tests/ci/env_helper.py\nindex 12c21398781a..a18f47497fd9 100644\n--- a/tests/ci/env_helper.py\n+++ b/tests/ci/env_helper.py\n@@ -22,10 +22,14 @@\n REPORTS_PATH = os.getenv(\"REPORTS_PATH\", p.abspath(p.join(module_dir, \"./reports\")))\n REPO_COPY = os.getenv(\"REPO_COPY\", git_root)\n RUNNER_TEMP = os.getenv(\"RUNNER_TEMP\", p.abspath(p.join(module_dir, \"./tmp\")))\n-S3_URL = os.getenv(\"S3_URL\", \"https://s3.amazonaws.com\")\n-S3_DOWNLOAD = os.getenv(\"S3_DOWNLOAD\", S3_URL)\n S3_BUILDS_BUCKET = os.getenv(\"S3_BUILDS_BUCKET\", \"clickhouse-builds\")\n S3_TEST_REPORTS_BUCKET = os.getenv(\"S3_TEST_REPORTS_BUCKET\", \"clickhouse-test-reports\")\n+S3_URL = os.getenv(\"S3_URL\", \"https://s3.amazonaws.com\")\n+S3_DOWNLOAD = os.getenv(\"S3_DOWNLOAD\", S3_URL)\n+S3_ARTIFACT_DOWNLOAD_TEMPLATE = (\n+    f\"{S3_DOWNLOAD}/{S3_BUILDS_BUCKET}/\"\n+    \"{pr_or_release}/{commit}/{build_name}/{artifact}\"\n+)\n \n # These parameters are set only on demand, and only once\n _GITHUB_JOB_ID = \"\"\ndiff --git a/tests/ci/push_to_artifactory.py b/tests/ci/push_to_artifactory.py\nindex 6b407eb5bd89..dd8081227bf2 100755\n--- a/tests/ci/push_to_artifactory.py\n+++ b/tests/ci/push_to_artifactory.py\n@@ -8,8 +8,8 @@\n from typing import Dict, List, Tuple\n \n from artifactory import ArtifactorySaaSPath  # type: ignore\n-from build_download_helper import dowload_build_with_progress\n-from env_helper import RUNNER_TEMP, S3_BUILDS_BUCKET, S3_DOWNLOAD\n+from build_download_helper import download_build_with_progress\n+from env_helper import S3_ARTIFACT_DOWNLOAD_TEMPLATE, RUNNER_TEMP\n from git_helper import TAG_REGEXP, commit, removeprefix, removesuffix\n \n \n@@ -97,18 +97,6 @@ def fallback_to_all(url_or_name: str):\n \n \n class S3:\n-    template = (\n-        f\"{S3_DOWNLOAD}/\"\n-        # \"clickhouse-builds/\"\n-        f\"{S3_BUILDS_BUCKET}/\"\n-        # \"33333/\" or \"21.11/\" from --release, if pull request is omitted\n-        \"{pr}/\"\n-        # \"2bef313f75e4cacc6ea2ef2133e8849ecf0385ec/\"\n-        \"{commit}/\"\n-        # \"package_release/clickhouse-common-static_21.11.5.0_amd64.deb\"\n-        \"{s3_path_suffix}\"\n-    )\n-\n     def __init__(\n         self,\n         pr: int,\n@@ -117,7 +105,7 @@ def __init__(\n         force_download: bool,\n     ):\n         self._common = dict(\n-            pr=pr,\n+            pr_or_release=pr,\n             commit=commit,\n         )\n         self.force_download = force_download\n@@ -133,18 +121,19 @@ def download_package(self, package_file: str, s3_path_suffix: str):\n                 self.packages.replace_with_fallback(package_file)\n \n             return\n-        url = self.template.format_map(\n-            {**self._common, \"s3_path_suffix\": s3_path_suffix}\n+        build_name, artifact = s3_path_suffix.split(\"/\")\n+        url = S3_ARTIFACT_DOWNLOAD_TEMPLATE.format_map(\n+            {**self._common, \"build_name\": build_name, \"artifact\": artifact}\n         )\n         try:\n-            dowload_build_with_progress(url, path)\n+            download_build_with_progress(url, path)\n         except Exception as e:\n             if \"Cannot download dataset from\" in e.args[0]:\n                 new_url = Packages.fallback_to_all(url)\n                 logging.warning(\n                     \"Fallback downloading %s for old release\", fallback_path\n                 )\n-                dowload_build_with_progress(new_url, fallback_path)\n+                download_build_with_progress(new_url, fallback_path)\n                 self.packages.replace_with_fallback(package_file)\n \n     def download_deb(self):\ndiff --git a/tests/ci/version_helper.py b/tests/ci/version_helper.py\nindex de98b8431dec..966858c0747a 100755\n--- a/tests/ci/version_helper.py\n+++ b/tests/ci/version_helper.py\n@@ -20,7 +20,7 @@\n \n VERSIONS = Dict[str, Union[int, str]]\n \n-VERSIONS_TEMPLATE = \"\"\"# This variables autochanged by release_lib.sh:\n+VERSIONS_TEMPLATE = \"\"\"# This variables autochanged by tests/ci/version_helper.py:\n \n # NOTE: has nothing common with DBMS_TCP_PROTOCOL_VERSION,\n # only DBMS_TCP_PROTOCOL_VERSION should be incremented on protocol changes.\n",
  "problem_statement": "Package listing for macOS\n**Use case**\r\n\r\nWorking with a specific version in a MacOS environment (especially for devs)\r\n\r\n**Describe the solution you'd like**\r\n\r\nCurrently, we have a list for a lot of build packages for Linux distributions, it would be nice to do the same thing for MacOS. Something like: https://packages.clickhouse.com/tgz/stable/ but for macOS\r\n\r\n**Describe alternatives you've considered**\r\n\r\nIf I want to find a specific macOS build I need to go to the specific release, find the last commit, search for the build history, find the S3 bucket and then play around with the URL. It's not the best experience.\r\n\r\n\n",
  "hints_text": "The provided alternatives (to look at the pre-built binaries from release tags) don't seem to be ideal.\r\n\r\nI've followed the instructions for: https://github.com/ClickHouse/ClickHouse/releases/tag/v22.5.1.2079-stable\r\n\r\nwhich brings me to some builds like for example: https://github.com/ClickHouse/ClickHouse/runs/6493573871\r\n\r\nwhen trying out binaries for different OS/architectures and testing reported versions:\r\n\r\n```\r\nclickhouse client --version\r\n```\r\n\r\nthey don't match the expected `22.5.1.2079`\r\n\r\nthis is what I got so far: \r\n\r\n* MacOS with ARM64: https://s3.amazonaws.com/clickhouse-builds/37289/36b4ed19c54aeba59ff842499980c2d38ecda212/binary_darwin_aarch64/clickhouse\r\n   - `ClickHouse client version 22.5.1.1.`\r\n* MacOS with Intel: https://s3.amazonaws.com/clickhouse-builds/37289/36b4ed19c54aeba59ff842499980c2d38ecda212/binary_darwin/clickhouse\r\n   - `ClickHouse client version 22.5.1.1.`\r\n* Linux 64 binary: https://s3.amazonaws.com/clickhouse-builds/37289/36b4ed19c54aeba59ff842499980c2d38ecda212/binary_release/clickhouse\r\n   - `ClickHouse client version 22.5.1.1.`\r\n* Linux 64 binary performance (tgz): https://s3.amazonaws.com/clickhouse-builds/37289/36b4ed19c54aeba59ff842499980c2d38ecda212/performance/performance.tgz\r\n   - `ClickHouse client version 22.5.1.1988.`\r\n* Linux 64 binary (from packages tgz): https://packages.clickhouse.com/tgz/stable/clickhouse-common-static-22.5.1.2079-amd64.tgz\r\n   - `ClickHouse client version 22.5.1.2079 (official build).`\nHello @brodock, I can answer regarding the version.\r\n\r\nVersion is generated automatically based on complete or shallow repository checkout, and we didn't think of macOS binaries being critical before, so they have a mock version generated, see https://github.com/ClickHouse/ClickHouse/runs/6493573871#step:6:463.\r\n\r\nIt's possible to have them with a proper version, though.\r\n\r\nAnother point, we didn't build them yet in release branches yet.\n@Felixoid having MacOS binaries being built in the release branches would be very helpful for us, as I could then automate easier the install and update in our development kit\r\n\r\nIs this more or less a matter of changing a few lines in the CI build ?\nAlso https://github.com/Altinity/homebrew-clickhouse\nWhy not to use Docker images? Macs on M1 processor can run both x86 and AArch64 binaries and we have both of them available in Dockerhub.\n@nikitamikhaylov I understand that docker works for some users, but part of our internal process is to provide binaries people can run internally and poke them as needed on their own machines running native. It's much easier to run a tracing or hack some configuration when its not behind many layers of emulation/virtualization. This is also allows us to run the software closer to how we package and ship it to our users.\r\n\r\nour internal development kit can be found here: https://gitlab.com/gitlab-org/gitlab-development-kit\r\n\r\nthat's not to say we also don't support docker, we do, but in an alternate version: https://gitlab.com/gitlab-org/gitlab-compose-kit/\r\n\r\n",
  "created_at": "2022-09-07T17:23:04Z",
  "modified_files": [
    ".github/workflows/backport_branches.yml",
    ".github/workflows/release.yml",
    ".github/workflows/release_branches.yml"
  ],
  "modified_test_files": [
    "tests/ci/ast_fuzzer_check.py",
    "tests/ci/build_download_helper.py",
    "b/tests/ci/download_binary.py",
    "tests/ci/env_helper.py",
    "tests/ci/push_to_artifactory.py",
    "tests/ci/version_helper.py"
  ]
}