diff --git a/dbms/tests/integration/helpers/cluster.py b/dbms/tests/integration/helpers/cluster.py
index 329ea631bfc9..1090eb297e96 100644
--- a/dbms/tests/integration/helpers/cluster.py
+++ b/dbms/tests/integration/helpers/cluster.py
@@ -43,6 +43,17 @@ def subprocess_call(args):
     # print('run:', ' ' . join(args))
     subprocess.call(args)
 
+def get_odbc_bridge_path():
+    path = os.environ.get('CLICKHOUSE_TESTS_ODBC_BRIDGE_BIN_PATH')
+    if path is None:
+        server_path = os.environ.get('CLICKHOUSE_TESTS_SERVER_BIN_PATH')
+        if server_path is not None:
+            return os.path.join(os.path.dirname(server_path), 'clickhouse-odbc-bridge')
+        else:
+            return '/usr/bin/clickhouse-odbc-bridge'
+    return path
+
+
 class ClickHouseCluster:
     """ClickHouse cluster with several instances and (possibly) ZooKeeper.
 
@@ -53,12 +64,13 @@ class ClickHouseCluster:
     """
 
     def __init__(self, base_path, name=None, base_configs_dir=None, server_bin_path=None, client_bin_path=None,
-                 zookeeper_config_path=None, custom_dockerd_host=None):
+                 odbc_bridge_bin_path=None, zookeeper_config_path=None, custom_dockerd_host=None):
         self.base_dir = p.dirname(base_path)
         self.name = name if name is not None else ''
 
         self.base_configs_dir = base_configs_dir or os.environ.get('CLICKHOUSE_TESTS_BASE_CONFIG_DIR', '/etc/clickhouse-server/')
         self.server_bin_path = p.realpath(server_bin_path or os.environ.get('CLICKHOUSE_TESTS_SERVER_BIN_PATH', '/usr/bin/clickhouse'))
+        self.odbc_bridge_bin_path = p.realpath(odbc_bridge_bin_path or get_odbc_bridge_path())
         self.client_bin_path = p.realpath(client_bin_path or os.environ.get('CLICKHOUSE_TESTS_CLIENT_BIN_PATH', '/usr/bin/clickhouse-client'))
         self.zookeeper_config_path = p.join(self.base_dir, zookeeper_config_path) if zookeeper_config_path else p.join(HELPERS_DIR, 'zookeeper_config.xml')
 
@@ -116,8 +128,8 @@ def add_instance(self, name, config_dir=None, main_configs=[], user_configs=[],
         instance = ClickHouseInstance(
             self, self.base_dir, name, config_dir, main_configs, user_configs, macros, with_zookeeper,
             self.zookeeper_config_path, with_mysql, with_kafka, self.base_configs_dir, self.server_bin_path,
-            clickhouse_path_dir, with_odbc_drivers, hostname=hostname, env_variables=env_variables, image=image,
-            stay_alive=stay_alive, ipv4_address=ipv4_address, ipv6_address=ipv6_address)
+            self.odbc_bridge_bin_path, clickhouse_path_dir, with_odbc_drivers, hostname=hostname,
+            env_variables=env_variables, image=image, stay_alive=stay_alive, ipv4_address=ipv4_address, ipv6_address=ipv6_address)
 
         self.instances[name] = instance
         self.base_cmd.extend(['--file', instance.docker_compose_path])
@@ -340,6 +352,7 @@ def add_zookeeper_startup_command(self, command):
         hostname: {hostname}
         volumes:
             - {binary_path}:/usr/bin/clickhouse:ro
+            - {odbc_bridge_bin_path}:/usr/bin/clickhouse-odbc-bridge:ro
             - {configs_dir}:/etc/clickhouse-server/
             - {db_dir}:/var/lib/clickhouse/
             - {logs_dir}:/var/log/clickhouse-server/
@@ -372,7 +385,7 @@ class ClickHouseInstance:
 
     def __init__(
             self, cluster, base_path, name, custom_config_dir, custom_main_configs, custom_user_configs, macros,
-            with_zookeeper, zookeeper_config_path, with_mysql, with_kafka, base_configs_dir, server_bin_path,
+            with_zookeeper, zookeeper_config_path, with_mysql, with_kafka, base_configs_dir, server_bin_path, odbc_bridge_bin_path,
             clickhouse_path_dir, with_odbc_drivers, hostname=None, env_variables={}, image="yandex/clickhouse-integration-test",
             stay_alive=False, ipv4_address=None, ipv6_address=None):
 
@@ -392,6 +405,7 @@ def __init__(
 
         self.base_configs_dir = base_configs_dir
         self.server_bin_path = server_bin_path
+        self.odbc_bridge_bin_path = odbc_bridge_bin_path
 
         self.with_mysql = with_mysql
         self.with_kafka = with_kafka
@@ -649,6 +663,7 @@ def create_dir(self, destroy_dir=True):
                 name=self.name,
                 hostname=self.hostname,
                 binary_path=self.server_bin_path,
+                odbc_bridge_bin_path=self.odbc_bridge_bin_path,
                 configs_dir=configs_dir,
                 config_d_dir=config_d_dir,
                 db_dir=db_dir,
diff --git a/dbms/tests/integration/image/Dockerfile b/dbms/tests/integration/image/Dockerfile
index 897c210d7ac8..118968bd7450 100644
--- a/dbms/tests/integration/image/Dockerfile
+++ b/dbms/tests/integration/image/Dockerfile
@@ -18,7 +18,8 @@ RUN apt-get update && env DEBIAN_FRONTEND=noninteractive apt-get install --yes -
     python-pip \
     tzdata \
     libreadline-dev \
-    libicu-dev
+    libicu-dev \
+    curl
 
 ENV TZ=Europe/Moscow
 RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
diff --git a/dbms/tests/integration/image/dockerd-entrypoint.sh b/dbms/tests/integration/image/dockerd-entrypoint.sh
index d8bf95110235..6866da5f2766 100755
--- a/dbms/tests/integration/image/dockerd-entrypoint.sh
+++ b/dbms/tests/integration/image/dockerd-entrypoint.sh
@@ -9,5 +9,6 @@ echo "Start tests"
 export CLICKHOUSE_TESTS_SERVER_BIN_PATH=/clickhouse
 export CLICKHOUSE_TESTS_CLIENT_BIN_PATH=/clickhouse
 export CLICKHOUSE_TESTS_BASE_CONFIG_DIR=/clickhouse-config
+export CLICKHOUSE_ODBC_BRIDGE_BINARY_PATH=/clickhouse-odbc-bridge
 
 cd /ClickHouse/dbms/tests/integration && pytest $PYTEST_OPTS
diff --git a/dbms/tests/integration/runner b/dbms/tests/integration/runner
index 9d664065e644..3a84c3be23a0 100755
--- a/dbms/tests/integration/runner
+++ b/dbms/tests/integration/runner
@@ -51,6 +51,11 @@ if __name__ == "__main__":
         default=os.environ.get("CLICKHOUSE_TESTS_SERVER_BIN_PATH", os.environ.get("CLICKHOUSE_TESTS_CLIENT_BIN_PATH", "/usr/bin/clickhouse")),
         help="Path to clickhouse binary")
 
+    parser.add_argument(
+        "--bridge-binary",
+        default=os.environ.get("CLICKHOUSE_TESTS_ODBC_BRIDGE_BIN_PATH", "/usr/bin/clickhouse-odbc-bridge"),
+        help="Path to clickhouse-odbc-bridge binary")
+
     parser.add_argument(
         "--configs-dir",
         default=os.environ.get("CLICKHOUSE_TESTS_BASE_CONFIG_DIR", os.path.join(DEFAULT_CLICKHOUSE_ROOT, "dbms/programs/server")),
@@ -77,10 +82,11 @@ if __name__ == "__main__":
     if not args.disable_net_host:
         net = "--net=host"
 
-    cmd = "docker run {net} --name {name} --user={user} --privileged --volume={bin}:/clickhouse \
+    cmd = "docker run {net} --name {name} --user={user} --privileged --volume={bridge_bin}:/clickhouse-odbc-bridge --volume={bin}:/clickhouse \
         --volume={cfg}:/clickhouse-config --volume={pth}:/ClickHouse -e PYTEST_OPTS='{opts}' {img} ".format(
         net=net,
         bin=args.binary,
+        bridge_bin=args.bridge_binary,
         cfg=args.configs_dir,
         pth=args.clickhouse_root,
         opts=' '.join(args.pytest_args),
diff --git a/dbms/tests/integration/test_odbc_interaction/configs/config.xml b/dbms/tests/integration/test_odbc_interaction/configs/config.xml
index 1e4c14585a96..ac85a24152ea 100644
--- a/dbms/tests/integration/test_odbc_interaction/configs/config.xml
+++ b/dbms/tests/integration/test_odbc_interaction/configs/config.xml
@@ -1,12 +1,18 @@
 <?xml version="1.0"?>
 <yandex>
-	<logger>
-		<level>trace</level>
-		<log>/var/log/clickhouse-server/clickhouse-server.log</log>
-		<errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
-		<size>1000M</size>
-		<count>10</count>
-	</logger>
+    <logger>
+        <level>trace</level>
+        <log>/var/log/clickhouse-server/clickhouse-server.log</log>
+        <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
+        <log>/var/log/clickhouse-server/clickhouse-server.log</log>
+        <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
+        <odbc_bridge_log>/var/log/clickhouse-server/clickhouse-odbc-bridge.log</odbc_bridge_log>
+        <odbc_bridge_errlog>/var/log/clickhouse-server/clickhouse-odbc-bridge.err.log</odbc_bridge_errlog>
+        <odbc_bridge_level>trace</odbc_bridge_level>
+
+        <size>1000M</size>
+        <count>10</count>
+    </logger>
 
     <tcp_port>9000</tcp_port>
     <listen_host>127.0.0.1</listen_host>
diff --git a/dbms/tests/integration/test_odbc_interaction/test.py b/dbms/tests/integration/test_odbc_interaction/test.py
index bca7eb93b863..a19c71944dad 100644
--- a/dbms/tests/integration/test_odbc_interaction/test.py
+++ b/dbms/tests/integration/test_odbc_interaction/test.py
@@ -92,10 +92,10 @@ def test_mysql_simple_select_works(started_cluster):
 
     node1.query("INSERT INTO {}(id, name, money) select number, concat('name_', toString(number)), 3 from numbers(100) ".format(table_name))
 
-    # actually, I don't know, what wrong with that connection string, but libmyodbc always falls into segfault
-    node1.query("SELECT * FROM odbc('DSN={}', '{}')".format(mysql_setup["DSN"], table_name), ignore_error=True)
+    assert node1.query("SELECT count(*) FROM odbc('DSN={}', '{}')".format(mysql_setup["DSN"], table_name)) == '100
'
 
-    # server still works after segfault
+    # previously this test fails with segfault
+    # just to be sure :)
     assert node1.query("select 1") == "1
"
 
     conn.close()
