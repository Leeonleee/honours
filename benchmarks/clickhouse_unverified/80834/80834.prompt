You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Filter pushdown makes query fail with NOT_FOUND_COLUMN_IN_BLOCK
### Company or project name

_No response_

### Describe what's wrong

Query fail with `NOT_FOUND_COLUMN_IN_BLOCK` when there is constant predicate in `HAVING`:
```sql
SELECT
    number,
    countIf(1, number > 0)
FROM numbers(10)
GROUP BY number
HAVING (count() <= 10) AND 1
ORDER BY number ASC
SETTINGS enable_analyzer = 1, query_plan_filter_push_down = 1

Query id: 79293344-68ec-48bc-808b-805c30c24911


Elapsed: 0.004 sec.

Received exception from server (version 25.3.3):
Code: 10. DB::Exception: Received from int:9001. DB::Exception: Not found column 1_UInt8 in block. There are only columns: __table1.number, greater(__table1.number, 0_UInt8). (NOT_FOUND_COLUMN_IN_BLOCK)
```

Turn off filter push down --> query success:

```sql
SELECT
    number,
    countIf(1, number > 0)
FROM numbers(10)
GROUP BY number
HAVING (count() <= 10) AND 1
ORDER BY number ASC
SETTINGS enable_analyzer = 1, query_plan_filter_push_down = 0

Query id: 948e0b1a-c9b7-42b6-a4ea-345085708cbf

    ┌─number─┬─countIf(1, g⋯number, 0))─┐
 1. │      0 │                        0 │
 2. │      1 │                        1 │
 3. │      2 │                        1 │
 4. │      3 │                        1 │
 5. │      4 │                        1 │
 6. │      5 │                        1 │
 7. │      6 │                        1 │
 8. │      7 │                        1 │
 9. │      8 │                        1 │
10. │      9 │                        1 │
    └────────┴──────────────────────────┘
```

Replace `1` in `HAVING` with `2` --> also success:

```sql
SELECT
    number,
    countIf(1, number > 0)
FROM numbers(10)
GROUP BY number
HAVING (count() <= 10) AND 2
ORDER BY number ASC
SETTINGS enable_analyzer = 1, query_plan_filter_push_down = 1

Query id: 17d04480-93ba-4bdd-9202-801fcc00407f

    ┌─number─┬─countIf(1, g⋯number, 0))─┐
 1. │      0 │                        0 │
 2. │      1 │                        1 │
 3. │      2 │                        1 │
 4. │      3 │                        1 │
 5. │      4 │                        1 │
 6. │      5 │                        1 │
 7. │      6 │                        1 │
 8. │      7 │                        1 │
 9. │      8 │                        1 │
10. │      9 │                        1 │
    └────────┴──────────────────────────┘
```

So some identifier resolution saga here.

### Does it reproduce on the most recent release?

Yes

### How to reproduce

Fiddle cannot load while I'm writing this, but the query to reproduce is simple, can run anywhere.

### Expected behavior

_No response_

### Error message and/or stacktrace

_No response_

### Additional context

Our workaround is to not pushing down predicate in `HAVING` if it contains constant expression.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
