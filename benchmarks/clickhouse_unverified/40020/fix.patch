diff --git a/src/Common/ColumnsHashing.h b/src/Common/ColumnsHashing.h
index e921f4fbf9ab..c3a087c0a6ef 100644
--- a/src/Common/ColumnsHashing.h
+++ b/src/Common/ColumnsHashing.h
@@ -6,11 +6,9 @@
 #include <Common/Arena.h>
 #include <Common/LRUCache.h>
 #include <Common/assert_cast.h>
-#include "Columns/IColumn.h"
 #include <base/unaligned.h>
 
 #include <Columns/ColumnString.h>
-#include <Columns/ColumnConst.h>
 #include <Columns/ColumnFixedString.h>
 #include <Columns/ColumnLowCardinality.h>
 
@@ -85,11 +83,8 @@ struct HashMethodString
 
     HashMethodString(const ColumnRawPtrs & key_columns, const Sizes & /*key_sizes*/, const HashMethodContextPtr &)
     {
-        const IColumn * column = key_columns[0];
-        if (isColumnConst(*column))
-            column = &assert_cast<const ColumnConst &>(*column).getDataColumn();
-
-        const ColumnString & column_string = assert_cast<const ColumnString &>(*column);
+        const IColumn & column = *key_columns[0];
+        const ColumnString & column_string = assert_cast<const ColumnString &>(column);
         offsets = column_string.getOffsets().data();
         chars = column_string.getChars().data();
     }
diff --git a/src/Processors/Transforms/IntersectOrExceptTransform.cpp b/src/Processors/Transforms/IntersectOrExceptTransform.cpp
index 3e39123ae4ba..1ac82e99cf2d 100644
--- a/src/Processors/Transforms/IntersectOrExceptTransform.cpp
+++ b/src/Processors/Transforms/IntersectOrExceptTransform.cpp
@@ -128,7 +128,11 @@ void IntersectOrExceptTransform::accumulate(Chunk chunk)
     column_ptrs.reserve(key_columns_pos.size());
 
     for (auto pos : key_columns_pos)
+    {
+        /// Hash methods expect non-const column
+        columns[pos] = columns[pos]->convertToFullColumnIfConst();
         column_ptrs.emplace_back(columns[pos].get());
+    }
 
     if (!data)
         data.emplace();
@@ -160,8 +164,11 @@ void IntersectOrExceptTransform::filter(Chunk & chunk)
     column_ptrs.reserve(key_columns_pos.size());
 
     for (auto pos : key_columns_pos)
+    {
+        /// Hash methods expect non-const column
+        columns[pos] = columns[pos]->convertToFullColumnIfConst();
         column_ptrs.emplace_back(columns[pos].get());
-
+    }
     if (!data)
         data.emplace();
 
