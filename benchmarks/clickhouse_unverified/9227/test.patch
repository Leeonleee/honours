diff --git a/dbms/tests/queries/0_stateless/00061_merge_tree_alter.reference b/dbms/tests/queries/0_stateless/00061_merge_tree_alter.reference
index c7050040e8fa..571affd7231a 100644
--- a/dbms/tests/queries/0_stateless/00061_merge_tree_alter.reference
+++ b/dbms/tests/queries/0_stateless/00061_merge_tree_alter.reference
@@ -38,8 +38,8 @@ k	UInt64
 i32	Int32					
 n.ui8	Array(UInt8)					
 n.s	Array(String)					
-s	Int64					
-CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `n.ui8` Array(UInt8), `n.s` Array(String), `s` Int64) ENGINE = MergeTree(d, k, 8192)
+s	Int64	DEFAULT	\'0\'			
+CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `n.ui8` Array(UInt8), `n.s` Array(String), `s` Int64 DEFAULT \'0\') ENGINE = MergeTree(d, k, 8192)
 2015-01-01	6	38	[10,20,30]	['asd','qwe','qwe']	100500
 2015-01-01	7	39	[10,20,30]	['120','130','140']	0
 2015-01-01	8	40	[1,2,3]	['12','13','14']	0
@@ -49,9 +49,9 @@ k	UInt64
 i32	Int32					
 n.ui8	Array(UInt8)					
 n.s	Array(String)					
-s	UInt32					
+s	UInt32	DEFAULT	\'0\'			
 n.d	Array(Date)					
-CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `n.ui8` Array(UInt8), `n.s` Array(String), `s` UInt32, `n.d` Array(Date)) ENGINE = MergeTree(d, k, 8192)
+CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `n.ui8` Array(UInt8), `n.s` Array(String), `s` UInt32 DEFAULT \'0\', `n.d` Array(Date)) ENGINE = MergeTree(d, k, 8192)
 2015-01-01	6	38	[10,20,30]	['asd','qwe','qwe']	100500	['0000-00-00','0000-00-00','0000-00-00']
 2015-01-01	7	39	[10,20,30]	['120','130','140']	0	['0000-00-00','0000-00-00','0000-00-00']
 2015-01-01	8	40	[1,2,3]	['12','13','14']	0	['0000-00-00','0000-00-00','0000-00-00']
@@ -64,8 +64,8 @@ d	Date
 k	UInt64					
 i32	Int32					
 n.s	Array(String)					
-s	UInt32					
-CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `n.s` Array(String), `s` UInt32) ENGINE = MergeTree(d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `n.s` Array(String), `s` UInt32 DEFAULT \'0\') ENGINE = MergeTree(d, k, 8192)
 2015-01-01	6	38	['asd','qwe','qwe']	100500
 2015-01-01	7	39	['120','130','140']	0
 2015-01-01	8	40	['12','13','14']	0
@@ -73,8 +73,8 @@ CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `n.s` Array
 d	Date					
 k	UInt64					
 i32	Int32					
-s	UInt32					
-CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `s` UInt32) ENGINE = MergeTree(d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `s` UInt32 DEFAULT \'0\') ENGINE = MergeTree(d, k, 8192)
 2015-01-01	6	38	100500
 2015-01-01	7	39	0
 2015-01-01	8	40	0
@@ -82,10 +82,10 @@ CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `s` UInt32)
 d	Date					
 k	UInt64					
 i32	Int32					
-s	UInt32					
+s	UInt32	DEFAULT	\'0\'			
 n.s	Array(String)					
 n.d	Array(Date)					
-CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `s` UInt32, `n.s` Array(String), `n.d` Array(Date)) ENGINE = MergeTree(d, k, 8192)
+CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `s` UInt32 DEFAULT \'0\', `n.s` Array(String), `n.d` Array(Date)) ENGINE = MergeTree(d, k, 8192)
 2015-01-01	6	38	100500	[]	[]
 2015-01-01	7	39	0	[]	[]
 2015-01-01	8	40	0	[]	[]
@@ -93,8 +93,8 @@ CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `s` UInt32,
 d	Date					
 k	UInt64					
 i32	Int32					
-s	UInt32					
-CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `s` UInt32) ENGINE = MergeTree(d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE default.alter_00061 (`d` Date, `k` UInt64, `i32` Int32, `s` UInt32 DEFAULT \'0\') ENGINE = MergeTree(d, k, 8192)
 2015-01-01	6	38	100500
 2015-01-01	7	39	0
 2015-01-01	8	40	0
diff --git a/dbms/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper.reference b/dbms/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper.reference
index 29c265b2b9f3..6f2eb080286a 100644
--- a/dbms/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper.reference
+++ b/dbms/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper.reference
@@ -85,16 +85,16 @@ i32	Int32
 dt	DateTime					
 n.ui8	Array(UInt8)					
 n.s	Array(String)					
-s	Int64					
-CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.ui8` Array(UInt8), `n.s` Array(String), `s` Int64) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
+s	Int64	DEFAULT	\'0\'			
+CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.ui8` Array(UInt8), `n.s` Array(String), `s` Int64 DEFAULT \'0\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
 d	Date					
 k	UInt64					
 i32	Int32					
 dt	DateTime					
 n.ui8	Array(UInt8)					
 n.s	Array(String)					
-s	Int64					
-CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.ui8` Array(UInt8), `n.s` Array(String), `s` Int64) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
+s	Int64	DEFAULT	\'0\'			
+CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.ui8` Array(UInt8), `n.s` Array(String), `s` Int64 DEFAULT \'0\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
 2015-01-01	6	38	2014-07-15 13:26:50	[10,20,30]	['asd','qwe','qwe']	100500
 2015-01-01	7	39	2014-07-14 13:26:50	[10,20,30]	['120','130','140']	0
 2015-01-01	8	40	2012-12-12 12:12:12	[1,2,3]	['12','13','14']	0
@@ -106,18 +106,18 @@ i32	Int32
 dt	DateTime					
 n.ui8	Array(UInt8)					
 n.s	Array(String)					
-s	UInt32					
+s	UInt32	DEFAULT	\'0\'			
 n.d	Array(Date)					
-CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.ui8` Array(UInt8), `n.s` Array(String), `s` UInt32, `n.d` Array(Date)) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
+CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.ui8` Array(UInt8), `n.s` Array(String), `s` UInt32 DEFAULT \'0\', `n.d` Array(Date)) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
 d	Date					
 k	UInt64					
 i32	Int32					
 dt	DateTime					
 n.ui8	Array(UInt8)					
 n.s	Array(String)					
-s	UInt32					
+s	UInt32	DEFAULT	\'0\'			
 n.d	Array(Date)					
-CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.ui8` Array(UInt8), `n.s` Array(String), `s` UInt32, `n.d` Array(Date)) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
+CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.ui8` Array(UInt8), `n.s` Array(String), `s` UInt32 DEFAULT \'0\', `n.d` Array(Date)) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
 2015-01-01	6	38	2014-07-15 13:26:50	[10,20,30]	['asd','qwe','qwe']	100500	['0000-00-00','0000-00-00','0000-00-00']
 2015-01-01	7	39	2014-07-14 13:26:50	[10,20,30]	['120','130','140']	0	['0000-00-00','0000-00-00','0000-00-00']
 2015-01-01	8	40	2012-12-12 12:12:12	[1,2,3]	['12','13','14']	0	['0000-00-00','0000-00-00','0000-00-00']
@@ -128,15 +128,15 @@ k	UInt64
 i32	Int32					
 dt	DateTime					
 n.s	Array(String)					
-s	UInt32					
-CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.s` Array(String), `s` UInt32) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.s` Array(String), `s` UInt32 DEFAULT \'0\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
 d	Date					
 k	UInt64					
 i32	Int32					
 dt	DateTime					
 n.s	Array(String)					
-s	UInt32					
-CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.s` Array(String), `s` UInt32) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `n.s` Array(String), `s` UInt32 DEFAULT \'0\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
 2015-01-01	6	38	2014-07-15 13:26:50	['asd','qwe','qwe']	100500
 2015-01-01	7	39	2014-07-14 13:26:50	['120','130','140']	0
 2015-01-01	8	40	2012-12-12 12:12:12	['12','13','14']	0
@@ -146,14 +146,14 @@ d	Date
 k	UInt64					
 i32	Int32					
 dt	DateTime					
-s	UInt32					
-CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32 DEFAULT \'0\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
 d	Date					
 k	UInt64					
 i32	Int32					
 dt	DateTime					
-s	UInt32					
-CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32 DEFAULT \'0\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
 2015-01-01	6	38	2014-07-15 13:26:50	100500
 2015-01-01	7	39	2014-07-14 13:26:50	0
 2015-01-01	8	40	2012-12-12 12:12:12	0
@@ -163,18 +163,18 @@ d	Date
 k	UInt64					
 i32	Int32					
 dt	DateTime					
-s	UInt32					
+s	UInt32	DEFAULT	\'0\'			
 n.s	Array(String)					
 n.d	Array(Date)					
-CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32, `n.s` Array(String), `n.d` Array(Date)) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
+CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32 DEFAULT \'0\', `n.s` Array(String), `n.d` Array(Date)) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
 d	Date					
 k	UInt64					
 i32	Int32					
 dt	DateTime					
-s	UInt32					
+s	UInt32	DEFAULT	\'0\'			
 n.s	Array(String)					
 n.d	Array(Date)					
-CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32, `n.s` Array(String), `n.d` Array(Date)) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
+CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32 DEFAULT \'0\', `n.s` Array(String), `n.d` Array(Date)) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
 2015-01-01	6	38	2014-07-15 13:26:50	100500	[]	[]
 2015-01-01	7	39	2014-07-14 13:26:50	0	[]	[]
 2015-01-01	8	40	2012-12-12 12:12:12	0	[]	[]
@@ -184,14 +184,14 @@ d	Date
 k	UInt64					
 i32	Int32					
 dt	DateTime					
-s	UInt32					
-CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32 DEFAULT \'0\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
 d	Date					
 k	UInt64					
 i32	Int32					
 dt	DateTime					
-s	UInt32					
-CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
+s	UInt32	DEFAULT	\'0\'			
+CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` DateTime, `s` UInt32 DEFAULT \'0\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
 2015-01-01	6	38	2014-07-15 13:26:50	100500
 2015-01-01	7	39	2014-07-14 13:26:50	0
 2015-01-01	8	40	2012-12-12 12:12:12	0
@@ -201,14 +201,14 @@ d	Date
 k	UInt64					
 i32	Int32					
 dt	Date					
-s	DateTime					
-CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` Date, `s` DateTime) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
+s	DateTime	DEFAULT	\'0000-00-00 00:00:00\'			
+CREATE TABLE test.replicated_alter1 (`d` Date, `k` UInt64, `i32` Int32, `dt` Date, `s` DateTime DEFAULT \'0000-00-00 00:00:00\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r1\', d, k, 8192)
 d	Date					
 k	UInt64					
 i32	Int32					
 dt	Date					
-s	DateTime					
-CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` Date, `s` DateTime) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
+s	DateTime	DEFAULT	\'0000-00-00 00:00:00\'			
+CREATE TABLE test.replicated_alter2 (`d` Date, `k` UInt64, `i32` Int32, `dt` Date, `s` DateTime DEFAULT \'0000-00-00 00:00:00\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/test/alter\', \'r2\', d, k, 8192)
 2015-01-01	6	38	2014-07-15	1970-01-02 06:55:00
 2015-01-01	7	39	2014-07-14	0000-00-00 00:00:00
 2015-01-01	8	40	2012-12-12	0000-00-00 00:00:00
diff --git a/dbms/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper.sql b/dbms/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper.sql
index 7686c27fe34b..3ba1af5d547b 100644
--- a/dbms/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper.sql
+++ b/dbms/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper.sql
@@ -95,7 +95,7 @@ DESC TABLE test.replicated_alter2;
 SHOW CREATE TABLE test.replicated_alter2;
 SELECT * FROM test.replicated_alter1 ORDER BY k;
 
-ALTER TABLE test.replicated_alter1 MODIFY COLUMN dt Date, MODIFY COLUMN s DateTime;
+ALTER TABLE test.replicated_alter1 MODIFY COLUMN dt Date, MODIFY COLUMN s DateTime DEFAULT '0000-00-00 00:00:00';
 
 DESC TABLE test.replicated_alter1;
 SHOW CREATE TABLE test.replicated_alter1;
diff --git a/dbms/tests/queries/0_stateless/00079_defaulted_columns.reference b/dbms/tests/queries/0_stateless/00079_defaulted_columns.reference
index 207f25399fc0..03fd13f90441 100644
--- a/dbms/tests/queries/0_stateless/00079_defaulted_columns.reference
+++ b/dbms/tests/queries/0_stateless/00079_defaulted_columns.reference
@@ -28,13 +28,13 @@ some string	11
 payload	String					
 date	Date	MATERIALIZED	today()			
 key	UInt64	MATERIALIZED	0 * rand()			
-payload_length	UInt16	DEFAULT	length(payload) % 65535			
+payload_length	UInt64	DEFAULT	length(payload) % 65535			
 hello clickhouse	16
 some string	11
 payload	String					
 date	Date	MATERIALIZED	today()			
 key	UInt64	MATERIALIZED	0 * rand()			
-payload_length	UInt16	DEFAULT	CAST(length(payload), \'UInt16\')			
+payload_length	UInt16	DEFAULT	length(payload)			
 payload	String					
 date	Date	MATERIALIZED	today()			
 key	UInt64	MATERIALIZED	0 * rand()			
diff --git a/dbms/tests/queries/0_stateless/00079_defaulted_columns.sql b/dbms/tests/queries/0_stateless/00079_defaulted_columns.sql
index 8137b57dcbd7..77178478a4dc 100644
--- a/dbms/tests/queries/0_stateless/00079_defaulted_columns.sql
+++ b/dbms/tests/queries/0_stateless/00079_defaulted_columns.sql
@@ -20,7 +20,7 @@ create table defaulted (payload String, date materialized today(), key materiali
 desc table defaulted;
 insert into defaulted (payload) values ('hello clickhouse');
 select * from defaulted;
-alter table defaulted add column payload_length materialized length(payload);
+alter table defaulted add column payload_length UInt64 materialized length(payload);
 desc table defaulted;
 select *, payload_length from defaulted;
 insert into defaulted (payload) values ('some string');
diff --git a/dbms/tests/queries/0_stateless/00229_prewhere_column_missing.sql b/dbms/tests/queries/0_stateless/00229_prewhere_column_missing.sql
index da4cce9a9922..324e37bfce7b 100644
--- a/dbms/tests/queries/0_stateless/00229_prewhere_column_missing.sql
+++ b/dbms/tests/queries/0_stateless/00229_prewhere_column_missing.sql
@@ -16,7 +16,7 @@ select *, length(arr) as l from prewhere_column_missing;
 select *, length(arr) as l from prewhere_column_missing where l = 0;
 select *, length(arr) as l from prewhere_column_missing prewhere l = 0;
 
-alter table prewhere_column_missing add column hash_x default intHash64(x);
+alter table prewhere_column_missing add column hash_x UInt64 default intHash64(x);
 
 select * from prewhere_column_missing;
 select * from prewhere_column_missing where hash_x = intHash64(x);
diff --git a/dbms/tests/queries/0_stateless/00262_alter_alias.sql b/dbms/tests/queries/0_stateless/00262_alter_alias.sql
index 5a7007a6e0c1..56dbda65be7e 100644
--- a/dbms/tests/queries/0_stateless/00262_alter_alias.sql
+++ b/dbms/tests/queries/0_stateless/00262_alter_alias.sql
@@ -11,7 +11,7 @@ select array from aliases_test;
 alter table aliases_test modify column array default [0, 1, 2];
 select array from aliases_test;
 
-alter table aliases_test add column struct.key default [0, 1, 2], add column struct.value default array;
+alter table aliases_test add column struct.key Array(UInt8) default [0, 1, 2], add column struct.value Array(UInt8) default array;
 select struct.key, struct.value from aliases_test;
 
 alter table aliases_test modify column struct.value alias array;
diff --git a/dbms/tests/queries/0_stateless/00575_illegal_column_exception_when_drop_depen_column.sh b/dbms/tests/queries/0_stateless/00575_illegal_column_exception_when_drop_depen_column.sh
index 584cb2b218e2..293fce4c8d22 100755
--- a/dbms/tests/queries/0_stateless/00575_illegal_column_exception_when_drop_depen_column.sh
+++ b/dbms/tests/queries/0_stateless/00575_illegal_column_exception_when_drop_depen_column.sh
@@ -4,7 +4,7 @@ CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
 . $CURDIR/../shell_config.sh
 
 
-exception_pattern="Code: 44.*Cannot drop column id, because column id2 depends on it"
+exception_pattern="Code: 44.*Cannot drop column \`id\`, because column \`id2\` depends on it"
 
 ${CLICKHOUSE_CLIENT} --query "DROP TABLE IF EXISTS test_00575;"
 ${CLICKHOUSE_CLIENT} --query "CREATE TABLE test_00575 (dt Date DEFAULT now(), id UInt32, id2 UInt32 DEFAULT id + 1) ENGINE = MergeTree(dt, dt, 8192);"
diff --git a/dbms/tests/queries/0_stateless/00721_force_by_identical_result_after_merge_zookeeper.sql b/dbms/tests/queries/0_stateless/00721_force_by_identical_result_after_merge_zookeeper.sql
index aa386829276f..d9034c9d6cd2 100644
--- a/dbms/tests/queries/0_stateless/00721_force_by_identical_result_after_merge_zookeeper.sql
+++ b/dbms/tests/queries/0_stateless/00721_force_by_identical_result_after_merge_zookeeper.sql
@@ -9,7 +9,7 @@ SYSTEM SYNC REPLICA byte_identical_r2;
 
 -- Add a column with a default expression that will yield different values on different replicas.
 -- Call optimize to materialize it. Replicas should compare checksums and restore consistency.
-ALTER TABLE byte_identical_r1 ADD COLUMN y DEFAULT rand();
+ALTER TABLE byte_identical_r1 ADD COLUMN y UInt64 DEFAULT rand();
 OPTIMIZE TABLE byte_identical_r1 PARTITION tuple() FINAL;
 
 SELECT x, t1.y - t2.y FROM byte_identical_r1 t1 SEMI LEFT JOIN byte_identical_r2 t2 USING x ORDER BY x;
diff --git a/dbms/tests/queries/0_stateless/00916_add_materialized_column_after.sql b/dbms/tests/queries/0_stateless/00916_add_materialized_column_after.sql
index b52a471b2b7b..6a1f9bca955c 100644
--- a/dbms/tests/queries/0_stateless/00916_add_materialized_column_after.sql
+++ b/dbms/tests/queries/0_stateless/00916_add_materialized_column_after.sql
@@ -1,7 +1,7 @@
 DROP TABLE IF EXISTS add_materialized_column_after;
 
 CREATE TABLE add_materialized_column_after (x UInt32, z UInt64) ENGINE MergeTree ORDER BY x;
-ALTER TABLE add_materialized_column_after ADD COLUMN y MATERIALIZED toString(x) AFTER x;
+ALTER TABLE add_materialized_column_after ADD COLUMN y String MATERIALIZED toString(x) AFTER x;
 
 DESC TABLE add_materialized_column_after;
 
diff --git a/dbms/tests/queries/0_stateless/01079_alter_default_zookeeper.reference b/dbms/tests/queries/0_stateless/01079_alter_default_zookeeper.reference
new file mode 100644
index 000000000000..35ba20aff3ea
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01079_alter_default_zookeeper.reference
@@ -0,0 +1,11 @@
+CREATE TABLE default.alter_default (`date` Date, `key` UInt64, `value` String DEFAULT \'10\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/alter_default\', \'1\') ORDER BY key SETTINGS index_granularity = 8192
+1000
+CREATE TABLE default.alter_default (`date` Date, `key` UInt64, `value` UInt64 DEFAULT \'10\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/alter_default\', \'1\') ORDER BY key SETTINGS index_granularity = 8192
+CREATE TABLE default.alter_default (`date` Date, `key` UInt64, `value` UInt64 DEFAULT 10) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/alter_default\', \'1\') ORDER BY key SETTINGS index_granularity = 8192
+1000
+CREATE TABLE default.alter_default (`date` Date, `key` UInt64, `value` UInt64 DEFAULT 100) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/alter_default\', \'1\') ORDER BY key SETTINGS index_granularity = 8192
+CREATE TABLE default.alter_default (`date` Date, `key` UInt64, `value` UInt16 DEFAULT 100) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/alter_default\', \'1\') ORDER BY key SETTINGS index_granularity = 8192
+10000
+CREATE TABLE default.alter_default (`date` Date, `key` UInt64, `value` UInt8 DEFAULT 10) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/alter_default\', \'1\') ORDER BY key SETTINGS index_granularity = 8192
+CREATE TABLE default.alter_default (`date` Date, `key` UInt64, `value` UInt8 DEFAULT 10, `better_column` UInt8 DEFAULT \'1\') ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/alter_default\', \'1\') ORDER BY key SETTINGS index_granularity = 8192
+CREATE TABLE default.alter_default (`date` Date, `key` UInt64, `value` UInt8 DEFAULT 10, `better_column` UInt8 DEFAULT \'1\', `other_date` String DEFAULT 1) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/alter_default\', \'1\') ORDER BY key SETTINGS index_granularity = 8192
diff --git a/dbms/tests/queries/0_stateless/01079_alter_default_zookeeper.sql b/dbms/tests/queries/0_stateless/01079_alter_default_zookeeper.sql
new file mode 100644
index 000000000000..8779851e308b
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01079_alter_default_zookeeper.sql
@@ -0,0 +1,60 @@
+DROP TABLE IF EXISTS alter_default;
+
+CREATE TABLE alter_default
+(
+  date Date,
+  key UInt64
+)
+ENGINE ReplicatedMergeTree('/clickhouse/tables/alter_default', '1')
+ORDER BY key;
+
+INSERT INTO alter_default select toDate('2020-01-05'), number from system.numbers limit 100;
+
+-- Cannot add column without type
+ALTER TABLE alter_default ADD COLUMN value DEFAULT '10'; --{serverError 36}
+
+ALTER TABLE alter_default ADD COLUMN value String DEFAULT '10';
+
+SHOW CREATE TABLE alter_default;
+
+SELECT sum(cast(value as UInt64)) FROM alter_default;
+
+ALTER TABLE alter_default MODIFY COLUMN value UInt64;
+
+SHOW CREATE TABLE alter_default;
+
+ALTER TABLE alter_default MODIFY COLUMN value UInt64 DEFAULT 10;
+
+SHOW CREATE TABLE alter_default;
+
+SELECT sum(value) from alter_default;
+
+ALTER TABLE alter_default MODIFY COLUMN value DEFAULT 100;
+
+SHOW CREATE TABLE alter_default;
+
+ALTER TABLE alter_default MODIFY COLUMN value UInt16 DEFAULT 100;
+
+SHOW CREATE TABLE alter_default;
+
+SELECT sum(value) from alter_default;
+
+ALTER TABLE alter_default MODIFY COLUMN value UInt8 DEFAULT 10;
+
+SHOW CREATE TABLE alter_default;
+
+ALTER TABLE alter_default ADD COLUMN bad_column UInt8 DEFAULT 'q'; --{serverError 6}
+
+ALTER TABLE alter_default ADD COLUMN better_column UInt8 DEFAULT '1';
+
+SHOW CREATE TABLE alter_default;
+
+ALTER TABLE alter_default ADD COLUMN other_date String DEFAULT '0';
+
+ALTER TABLE alter_default MODIFY COLUMN other_date DateTime; --{serverError 41}
+
+ALTER TABLE alter_default MODIFY COLUMN other_date DEFAULT 1;
+
+SHOW CREATE TABLE alter_default;
+
+DROP TABLE IF EXISTS alter_default;
