You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
NOT_FOUND_COLUMN_IN_BLOCK exception on merge deduplicate propagated into projection
**Describe what's wrong**
```
CREATE TABLE dst
(
    `id` Int32,
    `string` String,
    PROJECTION dst_by_order_id
    (
        SELECT id
        GROUP BY id
    )
)
ENGINE = MergeTree
PRIMARY KEY id;

INSERT INTO dst VALUES (1, 'one');
INSERT INTO dst VALUES (1, 'one');

OPTIMIZE TABLE dst DEDUPLICATE

Received exception from server (version 24.6.1):
Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column string in block. There are only columns: id. (NOT_FOUND_COLUMN_IN_BLOCK)
```
https://fiddle.clickhouse.com/7f8d2c4c-40c0-4a7c-9891-27a164a28c2f

**Does it reproduce on the most recent release?**
yes

**Error message and/or stacktrace**

```
2024.06.21 21:50:25.601677 [ 855452 ] {e19f1ff6-12ff-42b4-876b-7eed601238ce::all_1_2_1} <Debug> MergeTask::MergeProjectionsStage: Selected 2 projection_parts from dst_by_order_id to dst_by_order_id
2024.06.21 21:50:25.601996 [ 855452 ] {e19f1ff6-12ff-42b4-876b-7eed601238ce::all_1_2_1} <Debug> MergeTask::PrepareStage: Merging 2 parts: from dst_by_order_id to dst_by_order_id into Compact with storage Full
2024.06.21 21:50:25.602086 [ 855452 ] {e19f1ff6-12ff-42b4-876b-7eed601238ce::all_1_2_1} <Debug> MergeTask::PrepareStage: DEDUPLICATE BY ('id', 'string')
2024.06.21 21:50:25.602498 [ 855452 ] {e19f1ff6-12ff-42b4-876b-7eed601238ce::all_1_2_1} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2024.06.21 21:50:25.602652 [ 855452 ] {e19f1ff6-12ff-42b4-876b-7eed601238ce::all_1_2_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part dst_by_order_id, total 1 rows starting from the beginning of the part, column id
2024.06.21 21:50:25.603025 [ 855452 ] {e19f1ff6-12ff-42b4-876b-7eed601238ce::all_1_2_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part dst_by_order_id, total 1 rows starting from the beginning of the part, column id
2024.06.21 21:50:26.003894 [ 856084 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 485.22 MiB, peak 502.31 MiB, free memory in arenas 16.37 MiB, will set to 561.58 MiB (RSS), difference: 76.35 MiB
2024.06.21 21:50:26.414928 [ 855452 ] {6ba66717-7f28-4c0a-96ba-1cbc301d62a0} <Debug> MemoryTracker: Peak memory usage background process to apply mutate/merge in table: 3.29 MiB.
2024.06.21 21:50:26.415338 [ 855452 ] {6ba66717-7f28-4c0a-96ba-1cbc301d62a0} <Error> executeQuery: Code: 10. DB::Exception: Not found column string in block. There are only columns: id. (NOT_FOUND_COLUMN_IN_BLOCK) (version 24.6.1.1
) (from 127.0.0.1:43934) (in query: OPTIMIZE TABLE dst DEDUPLICATE), Stack trace (when copying this message, always include the lines below):

0. /home/ubuntu/ClickHouse-proto/contrib/llvm-project/libcxx/include/exception:141: std::exception::capture() @ 0x000000000aac7262
1. /home/ubuntu/ClickHouse-proto/contrib/llvm-project/libcxx/include/exception:116: std::exception::exception[abi:v15000]() @ 0x000000000aac722d
2. /home/ubuntu/ClickHouse-proto/base/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(String const&, int) @ 0x0000000022db9960
3. /home/ubuntu/ClickHouse-proto/src/Common/Exception.cpp:99: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x0000000012ff6b0e
4. /home/ubuntu/ClickHouse-proto/src/Common/Exception.h:95: DB::Exception::Exception(String&&, int, bool) @ 0x000000000aabd1aa
5. /home/ubuntu/ClickHouse-proto/src/Common/Exception.h:68: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000aaba9a9
6. /home/ubuntu/ClickHouse-proto/src/Common/Exception.h:113: DB::Exception::Exception<String const&, String>(int, FormatStringHelperImpl<std::type_identity<String const&>::type, std::type_identity<String>::type>, String const&, Str
ing&&) @ 0x000000000b1759ad
7. /home/ubuntu/ClickHouse-proto/src/Core/Block.cpp:334: DB::Block::getPositionByName(String const&) const @ 0x0000000019c45b1a
8. /home/ubuntu/ClickHouse-proto/src/Processors/Transforms/DistinctSortedTransform.cpp:22: DB::calcColumnPositionsInHeader(DB::Block const&, std::vector<String, std::allocator<String>> const&, std::vector<unsigned long, std::alloca
tor<unsigned long>>&, std::vector<unsigned long, std::allocator<unsigned long>>&) @ 0x000000001dd74560
9. /home/ubuntu/ClickHouse-proto/src/Processors/Transforms/DistinctSortedTransform.cpp:72: DB::DistinctSortedTransform::isApplicable(DB::Block const&, DB::SortDescription const&, std::vector<String, std::allocator<String>> const&)
@ 0x000000001dd7436b
10. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergeTask.cpp:1127: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::createMergedStream() @ 0x000000001ce8e972
11. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergeTask.cpp:333: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x000000001ce8abb5
12. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergeTask.cpp:448: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x000000001ce8f978
13. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergeTask.cpp:924: DB::MergeTask::execute() @ 0x000000001ce948d2
14. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergeTask.cpp:833: DB::MergeTask::MergeProjectionsStage::executeProjections() const @ 0x000000001ce94817
15. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergeTask.cpp:875: DB::MergeTask::MergeProjectionsStage::execute() @ 0x000000001ce94ef8
16. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergeTask.cpp:924: DB::MergeTask::execute() @ 0x000000001ce948d2
17. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:57: DB::MergePlainMergeTreeTask::executeStep() @ 0x000000001d460fe0
18. /home/ubuntu/ClickHouse-proto/src/Storages/MergeTree/MergePlainMergeTreeTask.h:104: DB::executeHere(std::shared_ptr<DB::MergePlainMergeTreeTask>) @ 0x000000001d41c4a4
19. /home/ubuntu/ClickHouse-proto/src/Storages/StorageMergeTree.cpp:1193: DB::StorageMergeTree::merge(bool, String const&, bool, bool, std::vector<String, std::allocator<String>> const&, bool, std::shared_ptr<DB::MergeTreeTransacti
on> const&, PreformattedMessage&, bool) @ 0x000000001d41c36f
20. /home/ubuntu/ClickHouse-proto/src/Storages/StorageMergeTree.cpp:1632: DB::StorageMergeTree::optimize(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::IAST> const&,
 bool, bool, std::vector<String, std::allocator<String>> const&, bool, std::shared_ptr<DB::Context const>) @ 0x000000001d422f19
21. /home/ubuntu/ClickHouse-proto/src/Interpreters/InterpreterOptimizeQuery.cpp:84: DB::InterpreterOptimizeQuery::execute() @ 0x000000001bf168e5
22. /home/ubuntu/ClickHouse-proto/src/Interpreters/executeQuery.cpp:1210: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x000000001be
a7617
23. /home/ubuntu/ClickHouse-proto/src/Interpreters/executeQuery.cpp:1376: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x000000001bea1b0a
24. /home/ubuntu/ClickHouse-proto/src/Server/TCPHandler.cpp:556: DB::TCPHandler::runImpl() @ 0x000000001d7aef99
25. /home/ubuntu/ClickHouse-proto/src/Server/TCPHandler.cpp:2430: DB::TCPHandler::run() @ 0x000000001d7c495f
26. /home/ubuntu/ClickHouse-proto/base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x0000000022c63f99
27. /home/ubuntu/ClickHouse-proto/base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x0000000022c647e8
28. /home/ubuntu/ClickHouse-proto/base/poco/Foundation/src/ThreadPool.cpp:188: Poco::PooledThread::run() @ 0x0000000022e398d4
29. /home/ubuntu/ClickHouse-proto/base/poco/Foundation/src/Thread.cpp:46: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x0000000022e3667a
30. /home/ubuntu/ClickHouse-proto/base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000022e353be
31. ? @ 0x0000701f29094ac3
```

**Additional context**

https://github.com/ClickHouse/support-escalation/issues/2281
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
