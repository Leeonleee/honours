diff --git a/tests/queries/0_stateless/01691_DateTime64_clamp.reference b/tests/queries/0_stateless/01691_DateTime64_clamp.reference
index 75435aebd678..aee06a3350a4 100644
--- a/tests/queries/0_stateless/01691_DateTime64_clamp.reference
+++ b/tests/queries/0_stateless/01691_DateTime64_clamp.reference
@@ -10,11 +10,11 @@ SELECT CAST('2020-01-01 00:00:00.3' AS DateTime64(0, 'Asia/Istanbul'));
 2020-01-01 00:00:00
 SELECT toDateTime64(bitShiftLeft(toUInt64(1), 33), 2, 'Asia/Istanbul') FORMAT Null;
 SELECT toTimeZone(toDateTime(-2., 2), 'Asia/Istanbul');
-1970-01-01 02:00:00.00
+1970-01-01 01:59:58.00
 SELECT toDateTime64(-2., 2, 'Asia/Istanbul');
-1970-01-01 02:00:00.00
+1970-01-01 01:59:58.00
 SELECT toDateTime64(toFloat32(bitShiftLeft(toUInt64(1),33)), 2, 'Asia/Istanbul');
-2106-02-07 09:28:16.00
+2242-03-16 15:56:32.00
 SELECT toDateTime64(toFloat64(bitShiftLeft(toUInt64(1),33)), 2, 'Asia/Istanbul') FORMAT Null;
 -- These are outsize of extended range and hence clamped
 SELECT toDateTime64(-1 * bitShiftLeft(toUInt64(1), 35), 2, 'Asia/Istanbul');
diff --git a/tests/queries/0_stateless/01734_datetime64_from_float.reference b/tests/queries/0_stateless/01734_datetime64_from_float.reference
index 4021b6451aa0..b8baabccd2b2 100644
--- a/tests/queries/0_stateless/01734_datetime64_from_float.reference
+++ b/tests/queries/0_stateless/01734_datetime64_from_float.reference
@@ -1,3 +1,13 @@
 2005-03-18 03:58:31.222
 2005-03-18 03:58:31.222
 2005-03-18 03:58:31.222
+1970-01-01 00:00:00.000000000
+1970-01-01 00:00:00.000000000
+1900-04-15 00:53:20.000000000
+1900-04-15 00:53:20.000000000
+1900-01-01 00:00:00.000000000
+1900-01-01 00:00:00.000000000
+1900-01-01 00:00:00.000000000
+1900-01-01 00:00:00.000000000
+2261-07-15 11:33:20.000000000
+2261-07-15 11:33:20.000000000
diff --git a/tests/queries/0_stateless/01734_datetime64_from_float.sql b/tests/queries/0_stateless/01734_datetime64_from_float.sql
index bb837c681e3c..c4290a0cadb8 100644
--- a/tests/queries/0_stateless/01734_datetime64_from_float.sql
+++ b/tests/queries/0_stateless/01734_datetime64_from_float.sql
@@ -1,3 +1,22 @@
 SELECT CAST(1111111111.222 AS DateTime64(3, 'Asia/Istanbul'));
 SELECT toDateTime(1111111111.222, 3, 'Asia/Istanbul');
 SELECT toDateTime64(1111111111.222, 3, 'Asia/Istanbul');
+
+SELECT toDateTime64(0.0, 9, 'UTC') ;
+SELECT toDateTime64(0, 9, 'UTC');
+
+SELECT toDateTime64(-2200000000.0, 9, 'UTC'); -- 1900-01-01 < value
+SELECT toDateTime64(-2200000000, 9, 'UTC');
+
+SELECT toDateTime64(-2300000000.0, 9, 'UTC'); -- value < 1900-01-01
+SELECT toDateTime64(-2300000000, 9, 'UTC');
+
+SELECT toDateTime64(-999999999999.0, 9, 'UTC'); -- value << 1900-01-01
+SELECT toDateTime64(-999999999999, 9, 'UTC');
+
+SELECT toDateTime64(9200000000.0, 9, 'UTC'); -- value < 2262-04-11
+SELECT toDateTime64(9200000000, 9, 'UTC');
+
+SELECT toDateTime64(9300000000.0, 9, 'UTC'); -- { serverError 407 } # 2262-04-11 < value
+SELECT toDateTime64(9300000000, 9, 'UTC'); -- { serverError 407 }
+
