{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 50797,
  "instance_id": "ClickHouse__ClickHouse-50797",
  "issue_numbers": [
    "49938"
  ],
  "base_commit": "99a37b5b5821d1d271b078f6f0354d0fd2e37220",
  "patch": "diff --git a/src/DataTypes/DataTypeDateTime64.h b/src/DataTypes/DataTypeDateTime64.h\nindex aaa994850406..64cedd798d1b 100644\n--- a/src/DataTypes/DataTypeDateTime64.h\n+++ b/src/DataTypes/DataTypeDateTime64.h\n@@ -37,6 +37,8 @@ class DataTypeDateTime64 final : public DataTypeDecimalBase<DateTime64>, public\n \n     bool canBeUsedAsVersion() const override { return true; }\n \n+    bool isSummable() const override { return false; }\n+\n protected:\n     SerializationPtr doGetDefaultSerialization() const override;\n };\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.reference b/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.reference\nnew file mode 100644\nindex 000000000000..d395c4d6a0fc\n--- /dev/null\n+++ b/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.reference\n@@ -0,0 +1,1 @@\n+1\t2023-05-01 23:55:55.100\t15\ndiff --git a/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.sql b/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.sql\nnew file mode 100644\nindex 000000000000..db00f189330a\n--- /dev/null\n+++ b/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.sql\n@@ -0,0 +1,13 @@\n+DROP TABLE IF EXISTS summing_merge_tree_datetime64;\n+\n+CREATE TABLE summing_merge_tree_datetime64 ( `pk` UInt64, `timestamp` DateTime64(3), `value` UInt64 )\n+ENGINE = SummingMergeTree() ORDER BY pk;\n+\n+INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 1 value;\n+INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 2 value;\n+INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 3 value;\n+INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 4 value;\n+INSERT INTO summing_merge_tree_datetime64 SELECT 1 pk, '2023-05-01 23:55:55.100' timestamp, 5 value;\n+\n+SELECT * FROM summing_merge_tree_datetime64 FINAL;\n+DROP TABLE summing_merge_tree_datetime64;\n",
  "problem_statement": "SummingMergeTree support for DateTime64\n**Describe the unexpected behaviour**\r\n\r\nWhen using a `DateTime64` in a `SummingMergeTree` on a column that is not part of the sorting key or a summarizable field. You get the following error on insert time:\r\n\r\n```\r\nReceived exception from server (version 23.5.1):\r\nCode: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type DateTime64(3) of argument for aggregate function sumWithOverflow. (ILLEGAL_TYPE_OF_ARGUMENT)\r\n(query: INSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 1 value;)\r\n```\r\n\r\nThis was discovered in CH 22.8 but is also happening in master.\r\n\r\n**How to reproduce**\r\n\r\nTo reproduce the issue:\r\n\r\n```sql\r\nDROP DATABASE IF EXISTS summ;\r\nCREATE DATABASE summ;\r\n\r\nCREATE TABLE summ.landing ( `pk` UInt64, `timestamp` DateTime64(3), `value` UInt64)\r\nENGINE = SummingMergeTree() ORDER BY pk;\r\n\r\nINSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 1 value;\r\nINSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 2 value;\r\nINSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 3 value;\r\nINSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 4 value;\r\nINSERT INTO summ.landing SELECT 1 pk, now64(3) timestamp, 5 value;\r\n\r\nSELECT * FROM summ.landing FINAL FORMAT PrettyCompact;\r\n```\r\n\r\n**Expected behavior**\r\n\r\nI'd expect the DateTime64 column to behave in a similar way to how DateTime behaves, the column is not summarized, and an arbitrary value gets selected.\r\n\r\nSee:\r\n\r\n```sql\r\nDROP DATABASE IF EXISTS summ;\r\nCREATE DATABASE summ;\r\n\r\nCREATE TABLE summ.landing ( `pk` UInt64, `timestamp` DateTime, `value` UInt64)\r\nENGINE = SummingMergeTree() ORDER BY pk;\r\n\r\nINSERT INTO summ.landing SELECT 1 pk, now() timestamp, 1 value;\r\nINSERT INTO summ.landing SELECT 1 pk, now() timestamp, 2 value;\r\nINSERT INTO summ.landing SELECT 1 pk, now() timestamp, 3 value;\r\nINSERT INTO summ.landing SELECT 1 pk, now() timestamp, 4 value;\r\nINSERT INTO summ.landing SELECT 1 pk, now() timestamp, 5 value;\r\n\r\nSELECT * FROM summ.landing FINAL FORMAT PrettyCompact;\r\n\r\n```\r\n\r\n=> \r\n\r\n```\r\n\u250c\u2500pk\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500timestamp\u2500\u252c\u2500value\u2500\u2510\r\n\u2502  1 \u2502 2023-05-17 09:21:08 \u2502    15 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "The title is confusing. SummingMergeTree is trying to `sum` DateTime64 and throws an error, but actually you want the opposite.",
  "created_at": "2023-06-09T13:40:42Z",
  "modified_files": [
    "src/DataTypes/DataTypeDateTime64.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.reference",
    "b/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.sql"
  ]
}