diff --git a/tests/queries/0_stateless/00809_add_days_segfault.sql b/tests/queries/0_stateless/00809_add_days_segfault.sql
index 6791439708ab..d2d91dd2711b 100644
--- a/tests/queries/0_stateless/00809_add_days_segfault.sql
+++ b/tests/queries/0_stateless/00809_add_days_segfault.sql
@@ -9,4 +9,4 @@ SET send_logs_level = 'fatal';
 SELECT ignore(addDays((CAST((96.338) AS DateTime)), -3));
 SELECT ignore(subtractDays((CAST((-5263074.47) AS DateTime)), -737895));
 SELECT quantileDeterministic([], identity(( SELECT subtractDays((CAST((566450.398706) AS DateTime)), 54) ) )), '\0', []; -- { serverError 43 }
-SELECT sequenceCount((CAST((( SELECT NULL ) AS rg, ( SELECT ( SELECT [], '<e', caseWithExpr([NULL], -588755.149, []), retention(addWeeks((CAST((-7644612.39732) AS DateTime)), -23578040.02833), (CAST(([]) AS DateTime)), (CAST(([010977.08]) AS String))), emptyArrayToSingle('') ) , '\0', toUInt64([], 't3hw@'), '\0', toStartOfQuarter(-4230.1872, []) ) ) AS Date))); -- { serverError 43 }
+SELECT sequenceCount((CAST((( SELECT NULL ) AS rg, ( SELECT ( SELECT [], '<e', caseWithExpr([NULL], -588755.149, []), retention(addWeeks((CAST((-7644612.39732) AS DateTime)), -23578040.02833), (CAST(([]) AS DateTime)), (CAST(([010977.08]) AS String))), emptyArrayToSingle('') ) , '\0', toUInt64([], 't3hw@'), '\0', toStartOfQuarter(-4230.1872, []) ) ) AS Date))); -- { serverError 43, 36 }
diff --git a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
index a1a653361ee2..88f23334d316 100644
--- a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
+++ b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.reference
@@ -405,6 +405,16 @@ QUERY id: 0
     TABLE id: 7, table_name: system.numbers
   LIMIT
     CONSTANT id: 17, constant_value: UInt64_10, constant_value_type: UInt64
+other
+other
+other
+other
+other
+other
+other
+other
+other
+other
 SELECT transform(number, [NULL], _CAST([\'google\', \'censor.net\', \'yahoo\'], \'Array(Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4))\'), _CAST(\'other\', \'Enum8(\\\'censor.net\\\' = 1, \\\'google\\\' = 2, \\\'other\\\' = 3, \\\'yahoo\\\' = 4)\'))
 FROM
 (
diff --git a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.sql b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.sql
index 492d42cb6bc2..c3db61d1fb27 100644
--- a/tests/queries/0_stateless/02497_if_transform_strings_to_enum.sql
+++ b/tests/queries/0_stateless/02497_if_transform_strings_to_enum.sql
@@ -33,7 +33,7 @@ SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other')
 EXPLAIN SYNTAX SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') as value, value FROM system.numbers LIMIT 10;
 EXPLAIN QUERY TREE run_passes = 1 SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') as value, value FROM system.numbers LIMIT 10;
 
-SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10); -- { serverError 36 }
+SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10);
 EXPLAIN SYNTAX SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10);
 EXPLAIN QUERY TREE run_passes = 1 SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10);
 
diff --git a/tests/queries/0_stateless/02797_transform_narrow_types.reference b/tests/queries/0_stateless/02797_transform_narrow_types.reference
new file mode 100644
index 000000000000..5a2bd60ca833
--- /dev/null
+++ b/tests/queries/0_stateless/02797_transform_narrow_types.reference
@@ -0,0 +1,6 @@
+f
+s
+11
+11
+33
+3
diff --git a/tests/queries/0_stateless/02797_transform_narrow_types.sql b/tests/queries/0_stateless/02797_transform_narrow_types.sql
new file mode 100644
index 000000000000..56a02fb8af7a
--- /dev/null
+++ b/tests/queries/0_stateless/02797_transform_narrow_types.sql
@@ -0,0 +1,6 @@
+SELECT transform(-1, [-1, 2], ['f', 's'], 'g');
+SELECT transform(2, [-1, 2], ['f', 's'], 'g');
+SELECT transform(-1, [-1, 2], [11, 22], 33);
+SELECT transform(-1, [-1, 2], [11, 22]);
+SELECT transform(3, [-1, 2], [11, 22], 33);
+SELECT transform(3, [-1, 2], [11, 22]);
diff --git a/tests/queries/0_stateless/02798_generic_transform.reference b/tests/queries/0_stateless/02798_generic_transform.reference
new file mode 100644
index 000000000000..2140c3218b37
--- /dev/null
+++ b/tests/queries/0_stateless/02798_generic_transform.reference
@@ -0,0 +1,38 @@
+def
+def
+def
+hello
+def
+world
+def
+abc!
+def
+def
+
+
+
+hello
+
+world
+
+abc
+
+
+
+
+
+hello
+
+world
+
+abc
+
+
+123
+2023-03-03 00:00:00.000
+2023-02-02 00:00:00.000
+2023-01-01 00:00:00.000
+1	1
+42	42
+42
+42
diff --git a/tests/queries/0_stateless/02798_generic_transform.sql b/tests/queries/0_stateless/02798_generic_transform.sql
new file mode 100644
index 000000000000..6317d83fb297
--- /dev/null
+++ b/tests/queries/0_stateless/02798_generic_transform.sql
@@ -0,0 +1,12 @@
+SELECT transform((number, toString(number)), [(3, '3'), (5, '5'), (7, '7')], ['hello', 'world', 'abc!'], 'def') FROM system.numbers LIMIT 10;
+SELECT transform(toNullable(toInt256(number)), [3, 5, 7], ['hello', 'world', 'abc'], '') FROM system.numbers LIMIT 10;
+SELECT transform(toUInt256(number), [3, 5, 7], ['hello', 'world', 'abc'], '') FROM system.numbers LIMIT 10;
+
+select case 1::Nullable(Int32) when 1 then 123 else 0 end;
+
+SELECT transform(arrayJoin(['c', 'b', 'a']), ['a', 'b'], [toDateTime64('2023-01-01', 3), toDateTime64('2023-02-02', 3)], toDateTime64('2023-03-03', 3));
+
+SELECT transform(1, [1], [toDecimal32(1, 2)]), toDecimal32(1, 2);
+select transform(1, [1], [toDecimal32(42, 2)]), toDecimal32(42, 2);
+SELECT transform(1, [1], [toDecimal32(42, 2)], 0);
+SELECT transform(1, [1], [toDecimal32(42, 2)], toDecimal32(0, 2));
diff --git a/tests/queries/0_stateless/02799_transform_empty_arrays.reference b/tests/queries/0_stateless/02799_transform_empty_arrays.reference
new file mode 100644
index 000000000000..fd44083947ed
--- /dev/null
+++ b/tests/queries/0_stateless/02799_transform_empty_arrays.reference
@@ -0,0 +1,30 @@
+0
+1
+2
+3
+4
+5
+6
+7
+8
+9
+Hello
+Hello
+Hello
+Hello
+Hello
+Hello
+Hello
+Hello
+Hello
+Hello
+Hello 0
+Hello 1
+Hello 2
+Hello 3
+Hello 4
+Hello 5
+Hello 6
+Hello 7
+Hello 8
+Hello 9
diff --git a/tests/queries/0_stateless/02799_transform_empty_arrays.sql b/tests/queries/0_stateless/02799_transform_empty_arrays.sql
new file mode 100644
index 000000000000..84e3e9d29306
--- /dev/null
+++ b/tests/queries/0_stateless/02799_transform_empty_arrays.sql
@@ -0,0 +1,3 @@
+SELECT transform(number, [], [1]) FROM numbers(10);
+SELECT transform(number, [], [], 'Hello') FROM numbers(10);
+SELECT transform(number, [], [], 'Hello ' || number::String) FROM numbers(10);
diff --git a/tests/queries/0_stateless/02800_transform_alter.reference b/tests/queries/0_stateless/02800_transform_alter.reference
new file mode 100644
index 000000000000..cae8aeba20f8
--- /dev/null
+++ b/tests/queries/0_stateless/02800_transform_alter.reference
@@ -0,0 +1,6 @@
+1	a1	a1
+2	a2	b2
+3	a3	b3
+1	a1
+2	b2
+3	b3
diff --git a/tests/queries/0_stateless/02800_transform_alter.sql b/tests/queries/0_stateless/02800_transform_alter.sql
new file mode 100644
index 000000000000..7458f51c5a40
--- /dev/null
+++ b/tests/queries/0_stateless/02800_transform_alter.sql
@@ -0,0 +1,43 @@
+DROP TABLE IF EXISTS test_xy;
+DROP TABLE IF EXISTS updates;
+
+CREATE TABLE test_xy
+(
+    `x` Int32,
+    `y` String
+)
+ENGINE = MergeTree
+ORDER BY x;
+
+CREATE TABLE updates
+(
+    `x` Int32,
+    `y` String
+)
+ENGINE = MergeTree
+ORDER BY x;
+
+INSERT INTO test_xy(x, y) VALUES (1, 'a1'), (2, 'a2'), (3, 'a3');
+INSERT INTO updates(x, y) VALUES  (2, 'b2'), (3, 'b3');
+
+SELECT x, y,
+    transform(x,
+        (select groupArray(x) from (select x, y from updates order by x) t1),
+        (select groupArray(y) from (select x, y from updates order by x) t2),
+        y)
+FROM test_xy
+WHERE 1 ORDER BY x, y;
+
+SET mutations_sync = 1;
+ALTER table test_xy
+    UPDATE
+    y =  transform(x,
+        (select groupArray(x) from (select x, y from updates order by x) t1),
+        (select groupArray(y) from (select x, y from updates order by x) t2),
+        y)
+    WHERE 1;
+
+SELECT * FROM test_xy ORDER BY x, y;
+
+DROP TABLE test_xy;
+DROP TABLE updates;
diff --git a/tests/queries/0_stateless/02801_transform_nullable.reference b/tests/queries/0_stateless/02801_transform_nullable.reference
new file mode 100644
index 000000000000..48d529e7d907
--- /dev/null
+++ b/tests/queries/0_stateless/02801_transform_nullable.reference
@@ -0,0 +1,75 @@
+1970-01-01 00:00:01.000
+1970-01-01 00:00:02.000
+1970-01-01 00:00:00.000
+\N
+\N
+\N
+hello
+\N
+world
+\N
+abc
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+\N
+-1
+-1
+-1
+111
+-1
+222
+-1
+\N
+-1
+-1
+-1.1
+-1.1
+-1.1
+\N
+-1.1
+222
+-1.1
+333
+-1.1
+-1.1
+1
+1
+1
+\N
+1
+\N
+1
+\N
+1
+1
+Остальные
+\N
+-
+xyz
+Hello
+-
+xyz
+World
+-
+xyz
+-
+-
diff --git a/tests/queries/0_stateless/02801_transform_nullable.sql b/tests/queries/0_stateless/02801_transform_nullable.sql
new file mode 100644
index 000000000000..95f3c16600a1
--- /dev/null
+++ b/tests/queries/0_stateless/02801_transform_nullable.sql
@@ -0,0 +1,14 @@
+select transform('a', ['a', 'b'], [toDateTime64(1, 3, 'UTC'), toDateTime64(2, 3, 'UTC')], toDateTime64(0, 3, 'UTC'));
+select transform(2, [1, 2], [toDateTime64(1, 3, 'UTC'), toDateTime64(2, 3, 'UTC')], toDateTime64(0, 3, 'UTC'));
+select transform(null, [1, 2], [toDateTime64(1, 3, 'UTC'), toDateTime64(2, 3, 'UTC')], toDateTime64(0, 3, 'UTC'));
+
+SELECT transform(number, [3, 5, 7], ['hello', 'world', 'abc'], null) FROM system.numbers LIMIT 10;
+SELECT transform(null, ['3', '5', '7'], ['hello', 'world', 'abc'], null) FROM system.numbers LIMIT 10;
+SELECT transform(null, [null, null, null], [null, null, null], null) FROM system.numbers LIMIT 10;
+SELECT transform(toString(number), ['3', '5', '7'], [111, 222, null], -1) FROM system.numbers LIMIT 10;
+SELECT transform(toString(number), ['3', '5', '7'], [null, 222, 333], materialize(-1.1)) FROM system.numbers LIMIT 10;
+SELECT transform(toString(number), ['3', '5', '7'], [null, null, null], materialize(1)) FROM system.numbers LIMIT 10;
+SELECT transform(1, [2, 3], ['Meta.ua', null], materialize('Остальные')) AS title;
+SELECT transform(2, [2, 3], [null, 'Google'], materialize('Остальные')) AS title;
+
+SELECT transform(number % 3 = 1 ? NULL : number, [2, 5, NULL], ['Hello', 'World', 'xyz'], '-') FROM numbers(10);
