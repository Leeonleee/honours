{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 36468,
  "instance_id": "ClickHouse__ClickHouse-36468",
  "issue_numbers": [
    "36465"
  ],
  "base_commit": "dd93d5d872ddc19687637fd408b0aa05f6631c35",
  "patch": "diff --git a/src/Access/AccessEntityIO.cpp b/src/Access/AccessEntityIO.cpp\nindex 2f68bfaa8220..c0dbcb5c6bf7 100644\n--- a/src/Access/AccessEntityIO.cpp\n+++ b/src/Access/AccessEntityIO.cpp\n@@ -16,6 +16,13 @@\n #include <Interpreters/Access/InterpreterGrantQuery.h>\n #include <Interpreters/Access/InterpreterShowCreateAccessEntityQuery.h>\n #include <Interpreters/Access/InterpreterShowGrantsQuery.h>\n+#include <Parsers/Access/ASTCreateQuotaQuery.h>\n+#include <Parsers/Access/ASTCreateRoleQuery.h>\n+#include <Parsers/Access/ASTCreateRowPolicyQuery.h>\n+#include <Parsers/Access/ASTCreateSettingsProfileQuery.h>\n+#include <Parsers/Access/ASTCreateUserQuery.h>\n+#include <Parsers/Access/ASTGrantQuery.h>\n+#include <Parsers/ParserAttachAccessEntity.h>\n #include <Parsers/formatAST.h>\n #include <Parsers/parseQuery.h>\n #include <boost/range/algorithm/copy.hpp>\ndiff --git a/src/Access/AccessEntityIO.h b/src/Access/AccessEntityIO.h\nindex 68bb03f747c4..479a5d70c690 100644\n--- a/src/Access/AccessEntityIO.h\n+++ b/src/Access/AccessEntityIO.h\n@@ -1,51 +1,11 @@\n #pragma once\n \n-#include <Parsers/Access/ASTCreateQuotaQuery.h>\n-#include <Parsers/Access/ASTCreateRoleQuery.h>\n-#include <Parsers/Access/ASTCreateRowPolicyQuery.h>\n-#include <Parsers/Access/ASTCreateSettingsProfileQuery.h>\n-#include <Parsers/Access/ASTCreateUserQuery.h>\n-#include <Parsers/Access/ASTGrantQuery.h>\n-#include <Parsers/Access/ParserCreateQuotaQuery.h>\n-#include <Parsers/Access/ParserCreateRoleQuery.h>\n-#include <Parsers/Access/ParserCreateRowPolicyQuery.h>\n-#include <Parsers/Access/ParserCreateSettingsProfileQuery.h>\n-#include <Parsers/Access/ParserCreateUserQuery.h>\n-#include <Parsers/Access/ParserGrantQuery.h>\n #include <base/types.h>\n #include <memory>\n \n namespace DB\n {\n \n-/// Special parser for the 'ATTACH access entity' queries.\n-class ParserAttachAccessEntity : public IParserBase\n-{\n-protected:\n-    const char * getName() const override { return \"ATTACH access entity query\"; }\n-\n-    bool parseImpl(Pos & pos, ASTPtr & node, Expected & expected) override\n-    {\n-        ParserCreateUserQuery create_user_p;\n-        ParserCreateRoleQuery create_role_p;\n-        ParserCreateRowPolicyQuery create_policy_p;\n-        ParserCreateQuotaQuery create_quota_p;\n-        ParserCreateSettingsProfileQuery create_profile_p;\n-        ParserGrantQuery grant_p;\n-\n-        create_user_p.useAttachMode();\n-        create_role_p.useAttachMode();\n-        create_policy_p.useAttachMode();\n-        create_quota_p.useAttachMode();\n-        create_profile_p.useAttachMode();\n-        grant_p.useAttachMode();\n-\n-        return create_user_p.parse(pos, node, expected) || create_role_p.parse(pos, node, expected)\n-            || create_policy_p.parse(pos, node, expected) || create_quota_p.parse(pos, node, expected)\n-            || create_profile_p.parse(pos, node, expected) || grant_p.parse(pos, node, expected);\n-    }\n-};\n-\n struct IAccessEntity;\n using AccessEntityPtr = std::shared_ptr<const IAccessEntity>;\n \ndiff --git a/src/Parsers/ParserAttachAccessEntity.cpp b/src/Parsers/ParserAttachAccessEntity.cpp\nnew file mode 100644\nindex 000000000000..c6d1448d0e98\n--- /dev/null\n+++ b/src/Parsers/ParserAttachAccessEntity.cpp\n@@ -0,0 +1,33 @@\n+#include <Parsers/ParserAttachAccessEntity.h>\n+#include <Parsers/Access/ParserCreateQuotaQuery.h>\n+#include <Parsers/Access/ParserCreateRoleQuery.h>\n+#include <Parsers/Access/ParserCreateRowPolicyQuery.h>\n+#include <Parsers/Access/ParserCreateSettingsProfileQuery.h>\n+#include <Parsers/Access/ParserCreateUserQuery.h>\n+#include <Parsers/Access/ParserGrantQuery.h>\n+\n+namespace DB\n+{\n+\n+bool ParserAttachAccessEntity::parseImpl(Pos & pos, ASTPtr & node, Expected & expected)\n+{\n+    ParserCreateUserQuery create_user_p;\n+    ParserCreateRoleQuery create_role_p;\n+    ParserCreateRowPolicyQuery create_policy_p;\n+    ParserCreateQuotaQuery create_quota_p;\n+    ParserCreateSettingsProfileQuery create_profile_p;\n+    ParserGrantQuery grant_p;\n+\n+    create_user_p.useAttachMode();\n+    create_role_p.useAttachMode();\n+    create_policy_p.useAttachMode();\n+    create_quota_p.useAttachMode();\n+    create_profile_p.useAttachMode();\n+    grant_p.useAttachMode();\n+\n+    return create_user_p.parse(pos, node, expected) || create_role_p.parse(pos, node, expected)\n+        || create_policy_p.parse(pos, node, expected) || create_quota_p.parse(pos, node, expected)\n+        || create_profile_p.parse(pos, node, expected) || grant_p.parse(pos, node, expected);\n+}\n+\n+}\ndiff --git a/src/Parsers/ParserAttachAccessEntity.h b/src/Parsers/ParserAttachAccessEntity.h\nnew file mode 100644\nindex 000000000000..643af2d954e7\n--- /dev/null\n+++ b/src/Parsers/ParserAttachAccessEntity.h\n@@ -0,0 +1,18 @@\n+#pragma once\n+\n+#include <Parsers/IParserBase.h>\n+\n+namespace DB\n+{\n+\n+/// Special parser for the 'ATTACH access entity' queries.\n+class ParserAttachAccessEntity : public IParserBase\n+{\n+protected:\n+    const char * getName() const override { return \"ATTACH access entity query\"; }\n+\n+    bool parseImpl(Pos & pos, ASTPtr & node, Expected & expected) override;\n+\n+};\n+\n+}\n",
  "test_patch": "diff --git a/src/Parsers/tests/gtest_Parser.cpp b/src/Parsers/tests/gtest_Parser.cpp\nindex d42d4cf8d478..f8de8ed90e6a 100644\n--- a/src/Parsers/tests/gtest_Parser.cpp\n+++ b/src/Parsers/tests/gtest_Parser.cpp\n@@ -3,13 +3,15 @@\n #include <Parsers/ASTCreateQuery.h>\n #include <Parsers/ASTFunction.h>\n #include <Parsers/ASTIdentifier.h>\n+#include <Parsers/Access/ASTCreateUserQuery.h>\n+#include <Parsers/Access/ParserCreateUserQuery.h>\n #include <Parsers/ParserAlterQuery.h>\n #include <Parsers/ParserCreateQuery.h>\n #include <Parsers/ParserOptimizeQuery.h>\n #include <Parsers/ParserQueryWithOutput.h>\n+#include <Parsers/ParserAttachAccessEntity.h>\n #include <Parsers/formatAST.h>\n #include <Parsers/parseQuery.h>\n-#include \"Access/AccessEntityIO.h\"\n #include <string_view>\n #include <regex>\n #include <gtest/gtest.h>\n",
  "problem_statement": "Decouple ParserAttachAccessEntity from AccessEntityIO\n\r\n**Describe the unexpected behaviour**\r\nParserAttachAccessEntity was exposed in AccessEntityIO.h\r\n\r\n**Additional context**\r\nfollow-up #36172 password hash salt feature\r\n\n",
  "hints_text": "",
  "created_at": "2022-04-21T03:05:07Z",
  "modified_files": [
    "src/Access/AccessEntityIO.cpp",
    "src/Access/AccessEntityIO.h",
    "b/src/Parsers/ParserAttachAccessEntity.cpp",
    "b/src/Parsers/ParserAttachAccessEntity.h"
  ],
  "modified_test_files": [
    "src/Parsers/tests/gtest_Parser.cpp"
  ]
}