diff --git a/tests/queries/0_stateless/02893_vertical_final_array_join.reference b/tests/queries/0_stateless/02893_vertical_final_bugs.reference
similarity index 99%
rename from tests/queries/0_stateless/02893_vertical_final_array_join.reference
rename to tests/queries/0_stateless/02893_vertical_final_bugs.reference
index 27b54a2e42e3..ab23116aa5f2 100644
--- a/tests/queries/0_stateless/02893_vertical_final_array_join.reference
+++ b/tests/queries/0_stateless/02893_vertical_final_bugs.reference
@@ -1,3 +1,4 @@
+1	2	b	1
 -- { echo ON }
 SELECT arrayJoin([(k1, v), (k2, v)]) AS row, row.1 as k FROM t FINAL WHERE k1 != 3 AND k = 1 ORDER BY row SETTINGS enable_vertical_final = 0;
 (1,4)	1
diff --git a/tests/queries/0_stateless/02893_vertical_final_array_join.sql b/tests/queries/0_stateless/02893_vertical_final_bugs.sql
similarity index 65%
rename from tests/queries/0_stateless/02893_vertical_final_array_join.sql
rename to tests/queries/0_stateless/02893_vertical_final_bugs.sql
index cc2e37fdc6ef..e82ab674c58c 100644
--- a/tests/queries/0_stateless/02893_vertical_final_array_join.sql
+++ b/tests/queries/0_stateless/02893_vertical_final_bugs.sql
@@ -1,3 +1,15 @@
+-- https://github.com/ClickHouse/ClickHouse/issues/64543
+DROP TABLE IF EXISTS foo;
+DROP TABLE IF EXISTS bar;
+CREATE TABLE foo (id UInt64, seq UInt64) ENGINE = Memory;
+CREATE TABLE bar (id UInt64, seq UInt64, name String) ENGINE = ReplacingMergeTree ORDER BY id;
+INSERT INTO foo VALUES (1, 1);
+INSERT INTO bar VALUES (1, 1, 'a') (2, 2, 'b');
+INSERT INTO bar VALUES (1, 2, 'b') (2, 3, 'c');
+SELECT * FROM bar INNER JOIN foo USING id WHERE bar.seq > foo.seq SETTINGS final = 1;
+
+-- Same problem possible can happen with array join
+DROP TABLE IF EXISTS t;
 CREATE TABLE t (k1 UInt64, k2 UInt64, v UInt64) ENGINE = ReplacingMergeTree() ORDER BY (k1, k2);
 SET optimize_on_insert = 0;
 INSERT INTO t VALUES (1, 2, 3) (1, 2, 4) (2, 3, 4), (2, 3, 5);
