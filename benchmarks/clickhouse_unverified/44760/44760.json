{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 44760,
  "instance_id": "ClickHouse__ClickHouse-44760",
  "issue_numbers": [
    "44738"
  ],
  "base_commit": "6b1a697b12ae0087f95f122a92612c4887258aea",
  "patch": "diff --git a/src/QueryPipeline/RemoteQueryExecutor.cpp b/src/QueryPipeline/RemoteQueryExecutor.cpp\nindex e42b0141a277..49bc6a6326da 100644\n--- a/src/QueryPipeline/RemoteQueryExecutor.cpp\n+++ b/src/QueryPipeline/RemoteQueryExecutor.cpp\n@@ -375,7 +375,9 @@ std::optional<Block> RemoteQueryExecutor::processPacket(Packet packet)\n                 got_duplicated_part_uuids = true;\n             break;\n         case Protocol::Server::Data:\n-            /// If the block is not empty and is not a header block\n+            /// Note: `packet.block.rows() > 0` means it's a header block.\n+            /// We can actually return it, and the first call to RemoteQueryExecutor::read\n+            /// will return earlier. We should consider doing it.\n             if (packet.block && (packet.block.rows() > 0))\n                 return adaptBlockStructure(packet.block, header);\n             break;  /// If the block is empty - we will receive other packets before EndOfStream.\n@@ -412,10 +414,14 @@ std::optional<Block> RemoteQueryExecutor::processPacket(Packet packet)\n \n         case Protocol::Server::Totals:\n             totals = packet.block;\n+            if (totals)\n+                totals = adaptBlockStructure(totals, header);\n             break;\n \n         case Protocol::Server::Extremes:\n             extremes = packet.block;\n+            if (extremes)\n+                extremes = adaptBlockStructure(packet.block, header);\n             break;\n \n         case Protocol::Server::Log:\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02517_wrong_total_structure_crash.reference b/tests/queries/0_stateless/02517_wrong_total_structure_crash.reference\nnew file mode 100644\nindex 000000000000..e69de29bb2d1\ndiff --git a/tests/queries/0_stateless/02517_wrong_total_structure_crash.sql b/tests/queries/0_stateless/02517_wrong_total_structure_crash.sql\nnew file mode 100644\nindex 000000000000..86bc8c1128d6\n--- /dev/null\n+++ b/tests/queries/0_stateless/02517_wrong_total_structure_crash.sql\n@@ -0,0 +1,26 @@\n+-- Tags: no-ordinary-database\n+CREATE OR REPLACE TABLE alias10__fuzz_13 (`Id` Array(Array(UInt256)), `EventDate` Array(String), `field1` Array(Array(Nullable(Int8))), `field2` Array(Date), `field3` Array(Array(Array(UInt128)))) ENGINE = Distributed(test_shard_localhost, currentDatabase(), alias_local10);\n+\n+set allow_deprecated_syntax_for_merge_tree=1;\n+CREATE OR REPLACE TABLE alias_local10 (\n+  Id Int8,\n+  EventDate Date DEFAULT '2000-01-01',\n+  field1 Int8,\n+  field2 String,\n+  field3 ALIAS CASE WHEN field1 = 1 THEN field2 ELSE '0' END\n+) ENGINE = MergeTree(EventDate, (Id, EventDate), 8192);\n+\n+SET prefer_localhost_replica = 0;\n+\n+SELECT field1 FROM alias10__fuzz_13 WHERE arrayEnumerateDense(NULL, tuple('0.2147483646'), NULL) GROUP BY field1, arrayEnumerateDense(('0.02', '0.1', '0'), NULL) WITH TOTALS; -- { serverError TYPE_MISMATCH }\n+\n+\n+CREATE OR REPLACE TABLE local (x Int8) ENGINE = Memory;\n+CREATE OR REPLACE TABLE distributed (x Array(Int8)) ENGINE = Distributed(test_shard_localhost, currentDatabase(), local);\n+SET prefer_localhost_replica = 0;\n+SELECT x FROM distributed GROUP BY x WITH TOTALS; -- { serverError TYPE_MISMATCH }\n+\n+DROP TABLE distributed;\n+DROP TABLE local;\n+DROP TABLE alias_local10;\n+DROP TABLE alias10__fuzz_13;\n",
  "problem_statement": "Bad cast from type DB::ColumnVector<signed char> to DB::ColumnArray\n**Describe the bug**\r\n\r\nBuild the server in debug mode.\r\n\r\n```\r\nCREATE TABLE alias10__fuzz_13 (`Id` Array(Array(UInt256)), `EventDate` Array(String), `field1` Array(Array(Nullable(Int8))), `field2` Array(Date), `field3` Array(Array(Array(UInt128)))) ENGINE = Distributed(test_shard_localhost, currentDatabase(), alias_local10);\r\n\r\nset allow_deprecated_syntax_for_merge_tree=1;\r\nCREATE TABLE alias_local10 (\r\n  Id Int8,\r\n  EventDate Date DEFAULT '2000-01-01',\r\n  field1 Int8,\r\n  field2 String,\r\n  field3 ALIAS CASE WHEN field1 = 1 THEN field2 ELSE '0' END\r\n) ENGINE = MergeTree(EventDate, (Id, EventDate), 8192);\r\n\r\nSET prefer_localhost_replica = 0;\r\n\r\nSELECT field1 FROM alias10__fuzz_13 WHERE arrayEnumerateDense(NULL, tuple('0.2147483646'), NULL) GROUP BY field1, arrayEnumerateDense(('0.02', '0.1', '0'), NULL) WITH TOTALS;\r\n```\r\n\r\nhttps://s3.amazonaws.com/clickhouse-test-reports/0/e7df1f7113414a532f66a9de8b0e4c205efabe76/fuzzer_astfuzzerubsan/report.html\r\n\r\n```\r\n2022.12.30 12:08:53.266010 [ 956786 ] {a1830e0a-336f-4db8-bb68-c38834741464} <Fatal> : Logical error: 'Bad cast from type DB::ColumnVector<signed char> to DB::ColumnArray'.\r\n2022.12.30 12:08:53.266867 [ 956784 ] {} <Trace> BaseDaemon: Received signal 6\r\n2022.12.30 12:08:53.267648 [ 957342 ] {} <Fatal> BaseDaemon: ########################################\r\n2022.12.30 12:08:53.268092 [ 957342 ] {} <Fatal> BaseDaemon: (version 22.13.1.1, build id: 1A971B7E7086651D8F7D657F38C47B058907AEEE) (from thread 956786) (query_id: a1830e0a-336f-4db8-bb68-c38834741464) (query: SELECT field1 FROM alias10__fuzz_13 WHERE arrayEnumerateDense(NULL, tuple('0.2147483646'), NULL) GROUP BY field1, arrayEnumerateDense(('0.02', '0.1', '0'), NULL) WITH TOTALS) Received signal Aborted (6)\r\n2022.12.30 12:08:53.268493 [ 957342 ] {} <Fatal> BaseDaemon: \r\n2022.12.30 12:08:53.268776 [ 957342 ] {} <Fatal> BaseDaemon: Stack trace: 0x7fb9442cda7c 0x7fb944279476 0x7fb94425f7f3 0x217fa336 0x217fa3f5 0x217fa545 0x18be346a 0x18beb1cb 0x28c79cfa 0x2b78c5d6 0x2b78c313 0x2b748397 0x2b7452da 0x2b73d979 0x2b74de85 0x30d1fb99 0x30d203fc 0x30f863f4 0x30f82d7a 0x30f81b1e 0x7fb9442cbb43 0x7fb94435da00\r\n2022.12.30 12:08:53.269014 [ 957342 ] {} <Fatal> BaseDaemon: 4. pthread_kill @ 0x7fb9442cda7c in ?\r\n2022.12.30 12:08:53.269146 [ 957342 ] {} <Fatal> BaseDaemon: 5. gsignal @ 0x7fb944279476 in ?\r\n2022.12.30 12:08:53.269356 [ 957342 ] {} <Fatal> BaseDaemon: 6. abort @ 0x7fb94425f7f3 in ?\r\n2022.12.30 12:08:53.369859 [ 957342 ] {} <Fatal> BaseDaemon: 7. /home/milovidov/work/ClickHouse/src/Common/Exception.cpp:41: DB::abortOnFailedAssertion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x217fa336 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:53.467501 [ 957342 ] {} <Fatal> BaseDaemon: 8. /home/milovidov/work/ClickHouse/src/Common/Exception.cpp:64: DB::handle_error_code(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, bool, std::__1::vector<void*, std::__1::allocator<void*>> const&) @ 0x217fa3f5 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:53.552509 [ 957342 ] {} <Fatal> BaseDaemon: 9. /home/milovidov/work/ClickHouse/src/Common/Exception.cpp:78: DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0x217fa545 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:53.648922 [ 957342 ] {} <Fatal> BaseDaemon: 10. /home/milovidov/work/ClickHouse/src/Common/Exception.h:41: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, bool) @ 0x18be346a in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:53.751217 [ 957342 ] {} <Fatal> BaseDaemon: 11. /home/milovidov/work/ClickHouse/src/Common/assert_cast.h:47: DB::ColumnArray const& assert_cast<DB::ColumnArray const&, DB::IColumn const&>(DB::IColumn const&) @ 0x18beb1cb in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:53.835141 [ 957342 ] {} <Fatal> BaseDaemon: 12. /home/milovidov/work/ClickHouse/src/DataTypes/Serializations/SerializationArray.cpp:254: DB::SerializationArray::serializeBinaryBulkStatePrefix(DB::IColumn const&, DB::ISerialization::SerializeBinaryBulkSettings&, std::__1::shared_ptr<DB::ISerialization::SerializeBinaryBulkState>&) const @ 0x28c79cfa in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:53.904051 [ 957342 ] {} <Fatal> BaseDaemon: 13. /home/milovidov/work/ClickHouse/src/Formats/NativeWriter.cpp:61: DB::writeData(DB::ISerialization const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&, DB::WriteBuffer&, unsigned long, unsigned long) @ 0x2b78c5d6 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:53.965541 [ 957342 ] {} <Fatal> BaseDaemon: 14. /home/milovidov/work/ClickHouse/src/Formats/NativeWriter.cpp:153: DB::NativeWriter::write(DB::Block const&) @ 0x2b78c313 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:54.009892 [ 957117 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 1.31 GiB, peak 1.53 GiB, free memory in arenas 28.67 MiB, will set to 1.43 GiB (RSS), difference: 124.47 MiB\r\n2022.12.30 12:08:54.246021 [ 957342 ] {} <Fatal> BaseDaemon: 15. /home/milovidov/work/ClickHouse/src/Server/TCPHandler.cpp:931: DB::TCPHandler::sendTotals(DB::Block const&) @ 0x2b748397 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:54.406008 [ 956785 ] {} <Trace> KeeperTCPHandler: Received heartbeat for session #474\r\n2022.12.30 12:08:54.519261 [ 957342 ] {} <Fatal> BaseDaemon: 16. /home/milovidov/work/ClickHouse/src/Server/TCPHandler.cpp:801: DB::TCPHandler::processOrdinaryQueryWithProcessors() @ 0x2b7452da in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:54.765581 [ 957342 ] {} <Fatal> BaseDaemon: 17. /home/milovidov/work/ClickHouse/src/Server/TCPHandler.cpp:389: DB::TCPHandler::runImpl() @ 0x2b73d979 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:55.009853 [ 957117 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 1.43 GiB, peak 1.53 GiB, free memory in arenas 28.31 MiB, will set to 1.47 GiB (RSS), difference: 41.22 MiB\r\n2022.12.30 12:08:55.044380 [ 957342 ] {} <Fatal> BaseDaemon: 18. /home/milovidov/work/ClickHouse/src/Server/TCPHandler.cpp:1920: DB::TCPHandler::run() @ 0x2b74de85 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:55.064635 [ 957342 ] {} <Fatal> BaseDaemon: 19. /home/milovidov/work/ClickHouse/contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x30d1fb99 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:55.090835 [ 957342 ] {} <Fatal> BaseDaemon: 20. /home/milovidov/work/ClickHouse/contrib/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x30d203fc in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:55.121364 [ 957342 ] {} <Fatal> BaseDaemon: 21. /home/milovidov/work/ClickHouse/contrib/poco/Foundation/src/ThreadPool.cpp:199: Poco::PooledThread::run() @ 0x30f863f4 in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:55.149539 [ 957342 ] {} <Fatal> BaseDaemon: 22. /home/milovidov/work/ClickHouse/contrib/poco/Foundation/src/Thread.cpp:56: Poco::(anonymous namespace)::RunnableHolder::run() @ 0x30f82d7a in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:55.176250 [ 957342 ] {} <Fatal> BaseDaemon: 23. /home/milovidov/work/ClickHouse/contrib/poco/Foundation/src/Thread_POSIX.cpp:345: Poco::ThreadImpl::runnableEntry(void*) @ 0x30f81b1e in /home/milovidov/work/ClickHouse/build_debug/programs/clickhouse\r\n2022.12.30 12:08:55.176491 [ 957342 ] {} <Fatal> BaseDaemon: 24. ? @ 0x7fb9442cbb43 in ?\r\n2022.12.30 12:08:55.176677 [ 957342 ] {} <Fatal> BaseDaemon: 25. ? @ 0x7fb94435da00 in ?\r\n```\n",
  "hints_text": "```\r\nCREATE OR REPLACE TABLE local (x Int8) ENGINE = Memory;\r\nCREATE OR REPLACE TABLE distributed (x Array(Int8)) ENGINE = Distributed(test_shard_localhost, currentDatabase(), local);\r\nSET prefer_localhost_replica = 0;\r\nSELECT x FROM distributed GROUP BY x WITH TOTALS;\r\n```",
  "created_at": "2022-12-30T16:58:49Z",
  "modified_files": [
    "src/QueryPipeline/RemoteQueryExecutor.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02517_wrong_total_structure_crash.sql"
  ]
}