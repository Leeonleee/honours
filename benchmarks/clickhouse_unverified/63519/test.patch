diff --git a/tests/queries/0_stateless/03149_analyzer_join_projection_name.reference b/tests/queries/0_stateless/03149_analyzer_join_projection_name.reference
new file mode 100644
index 000000000000..f180c3869c37
--- /dev/null
+++ b/tests/queries/0_stateless/03149_analyzer_join_projection_name.reference
@@ -0,0 +1,19 @@
+analyzer=1, join with dictionary
+   ┌──uid─┬─name─┬─gid─┬─gname──┐
+1. │ 1231 │ John │ 1   │ Group1 │
+   └──────┴──────┴─────┴────────┘
+
+analyzer=1, join with table
+   ┌──uid─┬─name─┬─gid─┬─gname──┐
+1. │ 1231 │ John │ 1   │ Group1 │
+   └──────┴──────┴─────┴────────┘
+
+analyzer=0, join with dictionary
+   ┌──uid─┬─name─┬─gid─┬─gname──┐
+1. │ 1231 │ John │ 1   │ Group1 │
+   └──────┴──────┴─────┴────────┘
+
+analyzer=0, join with table
+   ┌──uid─┬─name─┬─gid─┬─gname──┐
+1. │ 1231 │ John │ 1   │ Group1 │
+   └──────┴──────┴─────┴────────┘
diff --git a/tests/queries/0_stateless/03149_analyzer_join_projection_name.sql b/tests/queries/0_stateless/03149_analyzer_join_projection_name.sql
new file mode 100644
index 000000000000..6d40dd6fb8f7
--- /dev/null
+++ b/tests/queries/0_stateless/03149_analyzer_join_projection_name.sql
@@ -0,0 +1,51 @@
+DROP DATABASE IF EXISTS db_for_dict_03149;
+CREATE DATABASE db_for_dict_03149;
+
+CREATE TABLE db_for_dict_03149.users (uid Int16, name String, gid LowCardinality(String), gname LowCardinality(String))
+  ENGINE=MergeTree order by tuple();
+CREATE TABLE db_for_dict_03149.groups (gid LowCardinality(String), gname LowCardinality(String))
+  ENGINE=MergeTree order by tuple();
+
+CREATE DICTIONARY db_for_dict_03149.groups_dict (
+    gid String, gname String
+)
+PRIMARY KEY gid, gname
+LAYOUT(COMPLEX_KEY_HASHED())
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() QUERY 'select * from db_for_dict_03149.groups'))
+LIFETIME(MIN 0 MAX 0);
+
+
+INSERT INTO db_for_dict_03149.groups VALUES ('1', 'Group1');
+
+INSERT INTO db_for_dict_03149.users VALUES (1231, 'John', '1', 'Group1');
+
+select 'analyzer=1, join with dictionary';
+
+SELECT u.uid, u.name, u.gid, u.gname
+FROM db_for_dict_03149.users u left join db_for_dict_03149.groups_dict g using gid, gname
+format PrettyCompactMonoBlock;
+
+select '';
+select 'analyzer=1, join with table';
+
+SELECT u.uid, u.name, u.gid, u.gname
+FROM db_for_dict_03149.users u left join db_for_dict_03149.groups g using gid, gname
+format PrettyCompactMonoBlock;
+
+
+set allow_experimental_analyzer=0;
+
+select '';
+select 'analyzer=0, join with dictionary';
+
+SELECT u.uid, u.name, u.gid, u.gname
+FROM db_for_dict_03149.users u left join db_for_dict_03149.groups_dict g using gid, gname
+format PrettyCompactMonoBlock;
+
+select '';
+select 'analyzer=0, join with table';
+SELECT u.uid, u.name, u.gid, u.gname
+FROM db_for_dict_03149.users u left join db_for_dict_03149.groups g using gid, gname
+format PrettyCompactMonoBlock;
+
+DROP DATABASE IF EXISTS db_for_dict_03149;
diff --git a/tests/queries/0_stateless/03149_analyzer_join_projection_name_2.reference b/tests/queries/0_stateless/03149_analyzer_join_projection_name_2.reference
new file mode 100644
index 000000000000..7ac7783b26e8
--- /dev/null
+++ b/tests/queries/0_stateless/03149_analyzer_join_projection_name_2.reference
@@ -0,0 +1,6 @@
+   ┌──uid─┬─name───┬─gid─┬─gname──┐
+1. │ 1231 │ John   │ 1   │ Group1 │
+2. │ 1234 │ Test   │ 2   │ Group1 │
+3. │ 6666 │ Ksenia │ 1   │ Group1 │
+4. │ 8888 │ Alice  │ 1   │ Group1 │
+   └──────┴────────┴─────┴────────┘
diff --git a/tests/queries/0_stateless/03149_analyzer_join_projection_name_2.sql b/tests/queries/0_stateless/03149_analyzer_join_projection_name_2.sql
new file mode 100644
index 000000000000..ea4122f33eaa
--- /dev/null
+++ b/tests/queries/0_stateless/03149_analyzer_join_projection_name_2.sql
@@ -0,0 +1,33 @@
+DROP DATABASE IF EXISTS db_for_dict_03149;
+CREATE DATABASE db_for_dict_03149;
+
+CREATE TABLE db_for_dict_03149.users (uid Int16, name String, gid LowCardinality(String), gname LowCardinality(String))
+  ENGINE=MergeTree order by tuple();
+CREATE TABLE db_for_dict_03149.groups (gid LowCardinality(String), gname LowCardinality(String))
+  ENGINE=MergeTree order by tuple();
+
+CREATE TABLE db_for_dict_03149.target (uid Int16, name String, gid LowCardinality(String), gname LowCardinality(String))
+  ENGINE=MergeTree order by tuple();
+
+CREATE DICTIONARY db_for_dict_03149.groups_dict (
+    gid String, gname String
+)
+PRIMARY KEY gid, gname
+LAYOUT(COMPLEX_KEY_HASHED())
+SOURCE(CLICKHOUSE(QUERY 'select * from db_for_dict_03149.groups'))
+LIFETIME(MIN 0 MAX 0);
+
+CREATE MATERIALIZED VIEW db_for_dict_03149.mv to db_for_dict_03149.target AS
+SELECT u.uid, u.name, u.gid, u.gname
+FROM db_for_dict_03149.users u left join db_for_dict_03149.groups_dict g using gid, gname;
+
+INSERT INTO db_for_dict_03149.groups VALUES ('1', 'Group1');
+
+INSERT INTO db_for_dict_03149.users VALUES (1231, 'John', '1', 'Group1');
+INSERT INTO db_for_dict_03149.users VALUES (6666, 'Ksenia', '1', 'Group1');
+INSERT INTO db_for_dict_03149.users VALUES (8888, 'Alice', '1', 'Group1');
+INSERT INTO db_for_dict_03149.users VALUES (1234, 'Test', '2', 'Group1');
+
+SELECT * FROM db_for_dict_03149.target ORDER BY uid format PrettyCompactMonoBlock;
+
+DROP DATABASE IF EXISTS db_for_dict_03149;
diff --git a/tests/queries/0_stateless/03408_cte_self_reference.sql b/tests/queries/0_stateless/03408_cte_self_reference.sql
index 3284a03cb3f6..8e6ce4ec747e 100644
--- a/tests/queries/0_stateless/03408_cte_self_reference.sql
+++ b/tests/queries/0_stateless/03408_cte_self_reference.sql
@@ -1,3 +1,4 @@
+-- Tags: no-tsan
 SET enable_analyzer = 1;
 
 WITH `cte1` AS (
