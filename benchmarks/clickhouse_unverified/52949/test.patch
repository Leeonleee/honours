diff --git a/tests/queries/0_stateless/02835_nested_array_lowcardinality.reference b/tests/queries/0_stateless/02835_nested_array_lowcardinality.reference
new file mode 100644
index 000000000000..c2936da0b4f5
--- /dev/null
+++ b/tests/queries/0_stateless/02835_nested_array_lowcardinality.reference
@@ -0,0 +1,30 @@
+[]	[]
+['0']	['']
+['0','1']	['','']
+['0','1','2']	['','','']
+['0','1','2','3']	['','','','']
+['0','1','2','3','4']	['','','','','']
+['0','1','2','3','4','5']	['','','','','','']
+['0','1','2','3','4','5','6']	['','','','','','','']
+['0','1','2','3','4','5','6','7']	['','','','','','','','']
+['0','1','2','3','4','5','6','7','8']	['','','','','','','','','']
+[]	[]
+[[]]	[[]]
+[[],['0']]	[[],[]]
+[[],['0'],['0','1']]	[[],[],[]]
+[[],['0'],['0','1'],['0','1','2']]	[[],[],[],[]]
+[[],['0'],['0','1'],['0','1','2'],[]]	[[],[],[],[],[]]
+[[],['0'],['0','1'],['0','1','2'],[],['0']]	[[],[],[],[],[],[]]
+[[],['0'],['0','1'],['0','1','2'],[],['0'],['0','1']]	[[],[],[],[],[],[],[]]
+[[],['0'],['0','1'],['0','1','2'],[],['0'],['0','1'],['0','1','2']]	[[],[],[],[],[],[],[],[]]
+[[],['0'],['0','1'],['0','1','2'],[],['0'],['0','1'],['0','1','2'],[]]	[[],[],[],[],[],[],[],[],[]]
+[]	[]
+[{}]	[{}]
+[{},{'k0':0}]	[{},{}]
+[{},{'k0':0},{'k0':0,'k1':1}]	[{},{},{}]
+[{},{'k0':0},{'k0':0,'k1':1},{'k0':0,'k1':1,'k2':2}]	[{},{},{},{}]
+[{},{'k0':0},{'k0':0,'k1':1},{'k0':0,'k1':1,'k2':2},{}]	[{},{},{},{},{}]
+[{},{'k0':0},{'k0':0,'k1':1},{'k0':0,'k1':1,'k2':2},{},{'k0':0}]	[{},{},{},{},{},{}]
+[{},{'k0':0},{'k0':0,'k1':1},{'k0':0,'k1':1,'k2':2},{},{'k0':0},{'k0':0,'k1':1}]	[{},{},{},{},{},{},{}]
+[{},{'k0':0},{'k0':0,'k1':1},{'k0':0,'k1':1,'k2':2},{},{'k0':0},{'k0':0,'k1':1},{'k0':0,'k1':1,'k2':2}]	[{},{},{},{},{},{},{},{}]
+[{},{'k0':0},{'k0':0,'k1':1},{'k0':0,'k1':1,'k2':2},{},{'k0':0},{'k0':0,'k1':1},{'k0':0,'k1':1,'k2':2},{}]	[{},{},{},{},{},{},{},{},{}]
diff --git a/tests/queries/0_stateless/02835_nested_array_lowcardinality.sql b/tests/queries/0_stateless/02835_nested_array_lowcardinality.sql
new file mode 100644
index 000000000000..36c1eb39cfd0
--- /dev/null
+++ b/tests/queries/0_stateless/02835_nested_array_lowcardinality.sql
@@ -0,0 +1,49 @@
+DROP TABLE IF EXISTS cool_table;
+
+CREATE TABLE IF NOT EXISTS cool_table
+(
+    id UInt64,
+    n Nested(n UInt64, lc1 LowCardinality(String))
+)
+ENGINE = MergeTree
+ORDER BY id;
+
+INSERT INTO cool_table SELECT number, range(number), range(number) FROM numbers(10);
+
+ALTER TABLE cool_table ADD COLUMN IF NOT EXISTS `n.lc2` Array(LowCardinality(String));
+
+SELECT n.lc1, n.lc2 FROM cool_table ORDER BY id;
+
+DROP TABLE IF EXISTS cool_table;
+
+CREATE TABLE IF NOT EXISTS cool_table
+(
+    id UInt64,
+    n Nested(n UInt64, lc1 Array(LowCardinality(String)))
+)
+ENGINE = MergeTree
+ORDER BY id;
+
+INSERT INTO cool_table SELECT number, range(number), arrayMap(x -> range(x % 4), range(number)) FROM numbers(10);
+
+ALTER TABLE cool_table ADD COLUMN IF NOT EXISTS `n.lc2` Array(Array(LowCardinality(String)));
+
+SELECT n.lc1, n.lc2 FROM cool_table ORDER BY id;
+
+DROP TABLE IF EXISTS cool_table;
+
+CREATE TABLE IF NOT EXISTS cool_table
+(
+    id UInt64,
+    n Nested(n UInt64, lc1 Map(LowCardinality(String), UInt64))
+)
+ENGINE = MergeTree
+ORDER BY id;
+
+INSERT INTO cool_table SELECT number, range(number), arrayMap(x -> (arrayMap(y -> 'k' || toString(y), range(x % 4)), range(x % 4))::Map(LowCardinality(String), UInt64), range(number)) FROM numbers(10);
+
+ALTER TABLE cool_table ADD COLUMN IF NOT EXISTS `n.lc2` Array(Map(LowCardinality(String), UInt64));
+
+SELECT n.lc1, n.lc2 FROM cool_table ORDER BY id;
+
+DROP TABLE IF EXISTS cool_table;
