diff --git a/dbms/tests/config/secure_ports.xml b/dbms/tests/config/secure_ports.xml
index db8b42e8d3f1..d915daaf743a 100644
--- a/dbms/tests/config/secure_ports.xml
+++ b/dbms/tests/config/secure_ports.xml
@@ -3,22 +3,8 @@
     <tcp_port_secure>9440</tcp_port_secure>
 
     <openSSL>
-        <server><certificateFile>/etc/clickhouse-server/server.crt</certificateFile>
-            <privateKeyFile>/etc/clickhouse-server/server.key</privateKeyFile>
-            <dhParamsFile>/etc/clickhouse-server/dhparam.pem</dhParamsFile>
-            <verificationMode>none</verificationMode>
-            <loadDefaultCAFile>true</loadDefaultCAFile>
-            <cacheSessions>true</cacheSessions>
-            <disableProtocols>sslv2,sslv3</disableProtocols>
-            <preferServerCiphers>true</preferServerCiphers>
-        </server>
-
         <client>
-            <loadDefaultCAFile>true</loadDefaultCAFile>
-            <cacheSessions>true</cacheSessions>
-            <disableProtocols>sslv2,sslv3</disableProtocols>
-            <preferServerCiphers>true</preferServerCiphers>
-            <invalidCertificateHandler>
+            <invalidCertificateHandler replace="replace">
                 <name>AcceptCertificateHandler</name>  <!-- For tests only-->
             </invalidCertificateHandler>
         </client>
diff --git a/dbms/tests/queries/0_stateless/00987_distributed_stack_overflow.sql b/dbms/tests/queries/0_stateless/00987_distributed_stack_overflow.sql
index 8bc7b6963b97..4baa6969b310 100644
--- a/dbms/tests/queries/0_stateless/00987_distributed_stack_overflow.sql
+++ b/dbms/tests/queries/0_stateless/00987_distributed_stack_overflow.sql
@@ -1,13 +1,18 @@
+DROP TABLE IF EXISTS distr0;
 DROP TABLE IF EXISTS distr1;
 DROP TABLE IF EXISTS distr2;
 
 CREATE TABLE distr (x UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), distr); -- { serverError 269 }
 
+CREATE TABLE distr0 (x UInt8) ENGINE = Distributed(test_shard_localhost, '', distr0);
+SELECT * FROM distr0; -- { serverError 306 }
+
 CREATE TABLE distr1 (x UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), distr2);
 CREATE TABLE distr2 (x UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), distr1);
 
 SELECT * FROM distr1; -- { serverError 306 }
 SELECT * FROM distr2; -- { serverError 306 }
 
+DROP TABLE distr0;
 DROP TABLE distr1;
 DROP TABLE distr2;
diff --git a/dbms/tests/queries/0_stateless/01033_storage_odbc_parsing_exception_check.reference b/dbms/tests/queries/0_stateless/01033_storage_odbc_parsing_exception_check.reference
index 7e6d9355882f..bba4944f4a81 100644
--- a/dbms/tests/queries/0_stateless/01033_storage_odbc_parsing_exception_check.reference
+++ b/dbms/tests/queries/0_stateless/01033_storage_odbc_parsing_exception_check.reference
@@ -1,1 +1,1 @@
-CREATE TABLE default.BannerDict (`BannerID` UInt64, `CompaignID` UInt64) ENGINE = ODBC(\'DSN=pgconn;Database=postgres\', somedb, bannerdict)
+CREATE TABLE default.BannerDict (`BannerID` UInt64, `CompaignID` UInt64) ENGINE = ODBC(\'DSN=pgconn;Database=postgres\', \'somedb\', \'bannerdict\')
diff --git a/dbms/tests/queries/0_stateless/01083_expressions_in_engine_arguments.reference b/dbms/tests/queries/0_stateless/01083_expressions_in_engine_arguments.reference
new file mode 100644
index 000000000000..c96ca993fd9e
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01083_expressions_in_engine_arguments.reference
@@ -0,0 +1,12 @@
+CREATE TABLE test_01083.file (`n` Int8) ENGINE = File(\'TSVWithNamesAndTypes\')
+CREATE TABLE test_01083.buffer (`n` Int8) ENGINE = Buffer(\'test_01083\', \'file\', 16, 10, 200, 10000, 1000000, 10000000, 1000000000)
+CREATE TABLE test_01083.merge (`n` Int8) ENGINE = Merge(\'test_01083\', \'distributed\')
+CREATE TABLE test_01083.merge_tf AS merge(\'test_01083\', \'.*\')
+CREATE TABLE test_01083.distributed (`n` Int8) ENGINE = Distributed(\'test_shard_localhost\', \'test_01083\', \'file\')
+CREATE TABLE test_01083.distributed_tf AS cluster(\'test_shard_localhost\', \'test_01083\', \'file\')
+CREATE TABLE test_01083.url (`n` UInt64, `_path` String) ENGINE = URL(\'https://localhost:8443/?query=select+n,+_path+from+test_01083.file+format+CSV\', \'CSV\')
+CREATE TABLE test_01083.rich_syntax AS remote(\'localhos{x|y|t}\', cluster(\'test_shard_localhost\', remote(\'127.0.0.{1..4}\', \'test_01083\', \'url\')))
+1
+1
+1
+1
diff --git a/dbms/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql b/dbms/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql
new file mode 100644
index 000000000000..3c4ac17f790d
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql
@@ -0,0 +1,60 @@
+DROP DATABASE IF EXISTS test_01083;
+CREATE DATABASE test_01083;
+USE test_01083;
+
+CREATE TABLE file (n Int8) ENGINE = File(upper('tsv') || 'WithNames' || 'AndTypes');
+CREATE TABLE buffer (n Int8) ENGINE = Buffer(currentDatabase(), file, 16, 10, 200, 10000, 1000000, 10000000, 1000000000);
+CREATE TABLE merge (n Int8) ENGINE = Merge('', lower('DISTRIBUTED'));
+CREATE TABLE merge_tf as merge(currentDatabase(), '.*');
+CREATE TABLE distributed (n Int8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'fi' || 'le');
+CREATE TABLE distributed_tf as cluster('test' || '_' || 'shard_localhost', '', 'fi' || 'le');
+
+INSERT INTO file VALUES (1);
+CREATE TABLE url (n UInt64, _path String) ENGINE=URL
+(
+    replace
+    (
+        'https://localhost:8443/?query='  || 'select n, _path from ' || currentDatabase() || '.file format CSV', ' ', '+'    -- replace `file` with `merge` here after #9246 is fixed
+    ),
+    CSV
+);
+
+-- The following line is needed just to disable checking stderr for emptiness
+SELECT nonexistentsomething; -- { serverError 47 }
+
+CREATE DICTIONARY dict (n UInt64, _path String DEFAULT '42') PRIMARY KEY n
+SOURCE(CLICKHOUSE(HOST 'localhost' PORT 9440 SECURE 1 USER 'default' TABLE 'url' DB 'test_01083')) LIFETIME(1) LAYOUT(CACHE(SIZE_IN_CELLS 1));
+
+-- TODO make fuzz test from this
+CREATE TABLE rich_syntax as remote
+(
+    'localhos{x|y|t}',
+    cluster
+    (
+        'test' || '_' || 'shard_localhost',
+        remote
+        (
+            '127.0.0.{1..4}',
+            if
+            (
+                toString(40 + 2.0) NOT IN ('hello', dictGetString(currentDatabase() || '.dict', '_path', toUInt64('0001'))),
+                currentDatabase(),
+                'FAIL'
+            ),
+            extract('123url456', '[a-z]+')
+        )
+    )
+);
+
+SHOW CREATE file;
+SHOW CREATE buffer;
+SHOW CREATE merge;
+SHOW CREATE merge_tf;
+SHOW CREATE distributed;
+SHOW CREATE distributed_tf;
+SHOW CREATE url;
+SHOW CREATE rich_syntax;
+
+SELECT n from rich_syntax;
+
+DROP DATABASE test_01083;
diff --git a/docker/test/stateless/Dockerfile b/docker/test/stateless/Dockerfile
index 6a448f7a16c4..35e1639b7149 100644
--- a/docker/test/stateless/Dockerfile
+++ b/docker/test/stateless/Dockerfile
@@ -61,7 +61,6 @@ CMD dpkg -i package_folder/clickhouse-common-static_*.deb; \
     ln -s /usr/share/clickhouse-test/config/server.key /etc/clickhouse-server/; \
     ln -s /usr/share/clickhouse-test/config/server.crt /etc/clickhouse-server/; \
     ln -s /usr/share/clickhouse-test/config/dhparam.pem /etc/clickhouse-server/; \
-    rm -f /etc/clickhouse-server/config.d/ssl.xml; \
     ln -sf /usr/share/clickhouse-test/config/client_config.xml /etc/clickhouse-client/config.xml; \
     service zookeeper start; sleep 5; \
     service clickhouse-server start && sleep 5 && clickhouse-test --testname --shard --zookeeper $ADDITIONAL_OPTIONS $SKIP_TESTS_OPTION 2>&1 | ts '%Y-%m-%d %H:%M:%S' | tee test_output/test_result.txt
diff --git a/docker/test/stateless_with_coverage/run.sh b/docker/test/stateless_with_coverage/run.sh
index 843d7c9ecdac..a64d92923882 100755
--- a/docker/test/stateless_with_coverage/run.sh
+++ b/docker/test/stateless_with_coverage/run.sh
@@ -68,7 +68,6 @@ ln -s /usr/share/clickhouse-test/config/zookeeper.xml /etc/clickhouse-server/con
     ln -s /usr/share/clickhouse-test/config/server.key /etc/clickhouse-server/; \
     ln -s /usr/share/clickhouse-test/config/server.crt /etc/clickhouse-server/; \
     ln -s /usr/share/clickhouse-test/config/dhparam.pem /etc/clickhouse-server/; \
-    rm -f /etc/clickhouse-server/config.d/ssl.xml; \
     ln -sf /usr/share/clickhouse-test/config/client_config.xml /etc/clickhouse-client/config.xml; \
     ln -s /usr/lib/llvm-8/bin/llvm-symbolizer /usr/bin/llvm-symbolizer
 
