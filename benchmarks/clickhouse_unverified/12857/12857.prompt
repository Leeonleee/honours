You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Error when import RANGE_HASHED dictionary over http with csv-, tsv- formats
**Describe the bug**
When I try to load *RANGE_HASHED* dictionary over http I'm getting error below:

```
Row 1:
Column 0,   name: hash_id,    type: UInt64,             parsed text: "4990954156238030839"
Column 1,   name: start_date, type: Nullable(DateTime), parsed text: "2018-12-31 21:00:00"
Column 2,   name: end_date,   type: Nullable(DateTime), parsed text: "2020-12-30 20:59:59"
Column 3,   name: start_date, type: DateTime,           ERROR: text "0.1<TAB>RU<LINE FEED>" is not like DateTime
```

I think the reason is unexpected extra start_date and end_date fields

**How to reproduce**
Version: 20.3.8.53

_Dictionary:_
```
CREATE DICTIONARY rates
(
	hash_id UInt64,
	start_date DateTime,
	end_date DateTime,
	price Float64,
	currency String
)
PRIMARY KEY hash_id
SOURCE(HTTP(
    url 'http://localhost/dictionary/rates.tsv'
    format 'TSV'
))
LAYOUT(RANGE_HASHED())
RANGE(MIN start_date MAX end_date)
LIFETIME(60);
```

_File:_
```
4990954156238030839	"2018-12-31 21:00:00"	"2020-12-30 20:59:59"	0.1	"RU"
```

**Error message and/or stacktrace**
```
2020.04.30 00:00:04.041356 [ 3740 ] {} <Error> ExternalDictionariesLoader: Could not load external dictionary 'default.customer_rate_all', next update is scheduled at 2020-04-30 00:07:23: Code: 41, e.displayText() = DB::Exception: Cannot parse datetime: (at row 1)

Row 1:
Column 0,   name: hash_id,    type: UInt64,             parsed text: "4990954156238030839"
Column 1,   name: start_date, type: Nullable(DateTime), parsed text: "2018-12-31 21:00:00"
Column 2,   name: end_date,   type: Nullable(DateTime), parsed text: "2020-12-30 20:59:59"
Column 3,   name: start_date, type: DateTime,           ERROR: text "0.1<TAB>RU<LINE FEED>" is not like DateTime

, Stack trace (when copying this message, always include the lines below):

0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x10542450 in /usr/bin/clickhouse
1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x8f4272d in /usr/bin/clickhouse
2. void DB::readDateTimeTextFallback<void>(long&, DB::ReadBuffer&, DateLUTImpl const&) @ 0x8f7d6c8 in /usr/bin/clickhouse
3. DB::DataTypeDateTime::deserializeTextEscaped(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const @ 0xceb003d in /usr/bin/clickhouse
4. DB::TabSeparatedRowInputFormat::readField(DB::IColumn&, std::__1::shared_ptr<DB::IDataType const> const&, bool) @ 0xdd90829 in /usr/bin/clickhouse
5. DB::TabSeparatedRowInputFormat::readRow(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::RowReadExtension&) @ 0xdd90bdb in /usr/bin/clickhouse
6. DB::IRowInputFormat::generate() @ 0xdc2b8d1 in /usr/bin/clickhouse
7. DB::ISource::work() @ 0xdba8ceb in /usr/bin/clickhouse
8. DB::InputStreamFromInputFormat::readImpl() @ 0xdb5986d in /usr/bin/clickhouse
9. DB::IBlockInputStream::read() @ 0xce5701f in /usr/bin/clickhouse
10. DB::ParallelParsingBlockInputStream::parserThreadFunction(unsigned long) @ 0xdb5e462 in /usr/bin/clickhouse
11. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8f6792b in /usr/bin/clickhouse
12. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() const @ 0x8f68608 in /usr/bin/clickhouse
13. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8f667eb in /usr/bin/clickhouse
14. ? @ 0x8f64c33 in /usr/bin/clickhouse
15. start_thread @ 0x8f27 in /lib/x86_64-linux-gnu/libpthread-2.30.so
16. clone @ 0xfd2ef in /lib/x86_64-linux-gnu/libc-2.30.so
 (version 20.3.8.53 (official build))
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
