{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 30483,
  "instance_id": "ClickHouse__ClickHouse-30483",
  "issue_numbers": [
    "30544"
  ],
  "base_commit": "feeb572219a4af37f70ea99017bf0712526aacc2",
  "patch": "diff --git a/src/Interpreters/UserDefinedSQLFunctionVisitor.cpp b/src/Interpreters/UserDefinedSQLFunctionVisitor.cpp\nindex 8df6932b1531..d9ac53097ab1 100644\n--- a/src/Interpreters/UserDefinedSQLFunctionVisitor.cpp\n+++ b/src/Interpreters/UserDefinedSQLFunctionVisitor.cpp\n@@ -18,7 +18,7 @@ namespace ErrorCodes\n     extern const int UNSUPPORTED_METHOD;\n }\n \n-void UserDefinedSQLFunctionMatcher::visit(ASTPtr & ast, Data &)\n+void UserDefinedSQLFunctionMatcher::visit(ASTPtr & ast, Data & data)\n {\n     auto * function = ast->as<ASTFunction>();\n     if (!function)\n@@ -27,7 +27,10 @@ void UserDefinedSQLFunctionMatcher::visit(ASTPtr & ast, Data &)\n     auto result = tryToReplaceFunction(*function);\n \n     if (result)\n+    {\n         ast = result;\n+        visit(ast, data);\n+    }\n }\n \n bool UserDefinedSQLFunctionMatcher::needChildVisit(const ASTPtr &, const ASTPtr &)\ndiff --git a/src/Parsers/ASTFunction.cpp b/src/Parsers/ASTFunction.cpp\nindex 3c78c4060d69..0c096b7f4cbf 100644\n--- a/src/Parsers/ASTFunction.cpp\n+++ b/src/Parsers/ASTFunction.cpp\n@@ -440,6 +440,7 @@ void ASTFunction::formatImplWithoutAlias(const FormatSettings & settings, Format\n \n             if (!written && 0 == strcmp(name.c_str(), \"lambda\"))\n             {\n+                /// Special case: zero elements tuple in lhs of lambda is printed as ().\n                 /// Special case: one-element tuple in lhs of lambda is printed as its element.\n \n                 if (frame.need_parens)\n@@ -449,9 +450,12 @@ void ASTFunction::formatImplWithoutAlias(const FormatSettings & settings, Format\n                 if (first_arg_func\n                     && first_arg_func->name == \"tuple\"\n                     && first_arg_func->arguments\n-                    && first_arg_func->arguments->children.size() == 1)\n+                    && (first_arg_func->arguments->children.size() == 1 || first_arg_func->arguments->children.empty()))\n                 {\n-                    first_arg_func->arguments->children[0]->formatImpl(settings, state, nested_need_parens);\n+                    if (first_arg_func->arguments->children.size() == 1)\n+                        first_arg_func->arguments->children[0]->formatImpl(settings, state, nested_need_parens);\n+                    else\n+                        settings.ostr << \"()\";\n                 }\n                 else\n                     arguments->children[0]->formatImpl(settings, state, nested_need_parens);\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.reference b/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.reference\nnew file mode 100644\nindex 000000000000..51993f072d58\n--- /dev/null\n+++ b/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.reference\n@@ -0,0 +1,2 @@\n+2\n+2\ndiff --git a/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.sql b/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.sql\nnew file mode 100644\nindex 000000000000..3d34413b9d3e\n--- /dev/null\n+++ b/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.sql\n@@ -0,0 +1,12 @@\n+-- Tags: no-parallel\n+\n+CREATE FUNCTION 02103_test_function AS x -> x + 1;\n+CREATE FUNCTION 02103_test_function_with_nested_function_empty_args AS () -> 02103_test_function(1);\n+CREATE FUNCTION 02103_test_function_with_nested_function_arg AS (x) -> 02103_test_function(x);\n+\n+SELECT 02103_test_function_with_nested_function_empty_args();\n+SELECT 02103_test_function_with_nested_function_arg(1);\n+\n+DROP FUNCTION 02103_test_function_with_nested_function_empty_args;\n+DROP FUNCTION 02103_test_function_with_nested_function_arg;\n+DROP FUNCTION 02103_test_function;\n",
  "problem_statement": "Server does not start after creating unary UDF\n```\r\n2021.10.22 07:14:33.963099 [ 3451059 ] {} <Error> Application: DB::Exception: Syntax error (in file ./user_defined/function_a_function.sql): failed at position 39 ('->'): -> ch(2)\r\n\r\n$ cat ./user_defined/function_a_function.sql\r\nCREATE FUNCTION a_function AS tuple() -> ch(2)\r\n```\n",
  "hints_text": "",
  "created_at": "2021-10-21T07:08:42Z",
  "modified_files": [
    "src/Interpreters/UserDefinedSQLFunctionVisitor.cpp",
    "src/Parsers/ASTFunction.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.reference",
    "b/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.sql"
  ]
}