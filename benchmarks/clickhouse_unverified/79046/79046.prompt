You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Client assertion on remote insert
### Describe the bug

This is a very recent regression. Maybe related to https://github.com/ClickHouse/ClickHouse/pull/78490 

### How to reproduce

Run:

```sql
CREATE OR REPLACE TABLE t0 (c0 Int) ENGINE = Memory;
INSERT INTO TABLE FUNCTION file('<path to file>', 'CSV', 'c0 Int') SELECT 1;
INSERT INTO TABLE FUNCTION remote('localhost:9000', default.t0) (c0) FROM INFILE '<path to file>' FORMAT CSV;
```

### Error message and/or stacktrace

Stack trace:

```
clickhouse: src/Parsers/ASTIdentifier.cpp:48: DB::ASTIdentifier::ASTIdentifier(std::vector<String> &&, bool, ASTs &&): Assertion `!part.empty()' failed.
########## Short fault info ############
(version 25.4.1.2867 (official build), build id: A11D2D6FCE96E2063C0B2D2D79F1C6B57A8BBC6F, git hash: 442cad87d1e5161d974cf497ffe6024110697cf5, architecture: x86_64) (from thread 2690293) Received signal 6
Signal description: Aborted

Stack trace: 0x00005b2cd5e71628 0x00005b2cd6137205 0x0000764f36045250 0x0000764f360a3f1d 0x0000764f3604519e 0x0000764f36028902 0x0000764f3602881e 0x0000764f3603b7c7 0x00005b2cddac778b 0x00005b2cddac8c9d 0x00005b2cdaca5191 0x00005b2cdad77d96 0x00005b2cdad785f0 0x00005b2cdc890ac2 0x00005b2cdc88fe78 0x00005b2cdc889597 0x00005b2cdc89435e 0x00005b2cdc8954db 0x00005b2cdc89c92b 0x00005b2cd5fe413b 0x00005b2ce0d72c26 0x00005b2cd5fef556 0x00005b2cd0146c8a 0x0000764f3602a3b8 0x0000764f3602a47b 0x00005b2cd014602e
########################################
(version 25.4.1.2867 (official build), build id: A11D2D6FCE96E2063C0B2D2D79F1C6B57A8BBC6F, git hash: 442cad87d1e5161d974cf497ffe6024110697cf5) (from thread 2690293) (no query) Received signal Aborted (6)

Stack trace: 0x00005b2cd5e71628 0x00005b2cd6137205 0x0000764f36045250 0x0000764f360a3f1d 0x0000764f3604519e 0x0000764f36028902 0x0000764f3602881e 0x0000764f3603b7c7 0x00005b2cddac778b 0x00005b2cddac8c9d 0x00005b2cdaca5191 0x00005b2cdad77d96 0x00005b2cdad785f0 0x00005b2cdc890ac2 0x00005b2cdc88fe78 0x00005b2cdc889597 0x00005b2cdc89435e 0x00005b2cdc8954db 0x00005b2cdc89c92b 0x00005b2cd5fe413b 0x00005b2ce0d72c26 0x00005b2cd5fef556 0x00005b2cd0146c8a 0x0000764f3602a3b8 0x0000764f3602a47b 0x00005b2cd014602e
0.0. inlined from src/Common/StackTrace.cpp:386: StackTrace::tryCapture()
0. src/Common/StackTrace.cpp:355: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000fcdb628
1. src/Common/SignalHandlers.cpp:106: signalHandler(int, siginfo_t*, void*) @ 0x000000000ffa1205
2. ? @ 0x0000764f36045250
3. ? @ 0x0000764f360a3f1d
4. ? @ 0x0000764f3604519e
5. ? @ 0x0000764f36028902
6. ? @ 0x0000764f3602881e
7. ? @ 0x0000764f3603b7c7
8. src/Parsers/ASTIdentifier.cpp:48: DB::ASTIdentifier::ASTIdentifier(std::vector<String, std::allocator<String>>&&, bool, absl::InlinedVector<std::shared_ptr<DB::IAST>, 7ul, std::allocator<std::shared_ptr<DB::IAST>>>&&) @ 0x000000001793178b
9. src/Parsers/ASTIdentifier.cpp:192: DB::ASTTableIdentifier::ASTTableIdentifier(DB::StorageID const&, absl::InlinedVector<std::shared_ptr<DB::IAST>, 7ul, std::allocator<std::shared_ptr<DB::IAST>>>&&) @ 0x0000000017932c9d
10.0. inlined from contrib/llvm-project/libcxx/include/__memory/construct_at.h:41: DB::ASTTableIdentifier* std::construct_at[abi:se190107]<DB::ASTTableIdentifier, DB::StorageID const&, DB::ASTTableIdentifier*>(DB::ASTTableIdentifier*, DB::StorageID const&)
10.1. inlined from contrib/llvm-project/libcxx/include/__memory/construct_at.h:49: DB::ASTTableIdentifier* std::__construct_at[abi:se190107]<DB::ASTTableIdentifier, DB::StorageID const&, DB::ASTTableIdentifier*>(DB::ASTTableIdentifier*, DB::StorageID const&)
10.2. inlined from contrib/llvm-project/libcxx/include/__memory/allocator_traits.h:328: void std::allocator_traits<std::allocator<DB::ASTTableIdentifier>>::construct[abi:se190107]<DB::ASTTableIdentifier, DB::StorageID const&, void, 0>(std::allocator<DB::ASTTableIdentifier>&, DB::ASTTableIdentifier*, DB::StorageID const&)
10.3. inlined from contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:264: __shared_ptr_emplace<const DB::StorageID &, std::allocator<DB::ASTTableIdentifier>, 0>
10. contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:843: std::shared_ptr<DB::ASTTableIdentifier> std::allocate_shared[abi:se190107]<DB::ASTTableIdentifier, std::allocator<DB::ASTTableIdentifier>, DB::StorageID const&, 0>(std::allocator<DB::ASTTableIdentifier> const&, DB::StorageID const&) @ 0x0000000014b0f191
11.0. inlined from contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:851: std::shared_ptr<DB::ASTTableIdentifier> std::make_shared[abi:se190107]<DB::ASTTableIdentifier, DB::StorageID const&, 0>(DB::StorageID const&)
11. src/Interpreters/processColumnTransformers.cpp:30: DB::(anonymous namespace)::processColumnTransformersImpl(DB::ColumnsDescription const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::IAST>, String const&, DB::StorageID const&) @ 0x0000000014be1d96
12. src/Interpreters/processColumnTransformers.cpp:67: DB::processColumnTransformers(String const&, DB::StorageID const&, DB::ColumnsDescription const&, std::shared_ptr<DB::IAST>) @ 0x0000000014be25f0
13. src/Client/ClientBase.cpp:1909: DB::ClientBase::sendData(DB::Block&, DB::ColumnsDescription const&, std::shared_ptr<DB::IAST>) @ 0x00000000166faac2
14. src/Client/ClientBase.cpp:1824: DB::ClientBase::processInsertQuery(String const&, std::shared_ptr<DB::IAST>) @ 0x00000000166f9e78
15. src/Client/ClientBase.cpp:2279: DB::ClientBase::processParsedSingleQuery(String const&, String const&, std::shared_ptr<DB::IAST>, std::optional<bool>, bool) @ 0x00000000166f3597
16. src/Client/ClientBase.cpp:2643: DB::ClientBase::executeMultiQuery(String const&) @ 0x00000000166fe35e
17. src/Client/ClientBase.cpp:2827: DB::ClientBase::processQueryText(String const&) @ 0x00000000166ff4db
18. src/Client/ClientBase.cpp:3380: DB::ClientBase::runInteractive() @ 0x000000001670692b
19. programs/client/Client.cpp:401: DB::Client::main(std::vector<String, std::allocator<String>> const&) @ 0x000000000fe4e13b
20. base/poco/Util/src/Application.cpp:315: Poco::Util::Application::run() @ 0x000000001abdcc26
21. programs/client/Client.cpp:1141: mainEntryClickHouseClient(int, char**) @ 0x000000000fe59556
22. programs/main.cpp:295: main @ 0x0000000009fb0c8a
23. ? @ 0x0000764f3602a3b8
24. ? @ 0x0000764f3602a47b
25. _start @ 0x0000000009fb002e
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
