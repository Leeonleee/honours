You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
CREATE OR REPLACE TABLE on a DISTRIBUTED table while performing writes
Hi everyone, 

ClickHouse server version 21.5.5.12 (official build). (docker image)

**Some notes:**
Have 2 servers `ch1`, `ch2`, each has 2 tables `t1` and `t2` and another table `distributed_t1`

I tried to use `CREATE OR REPLACE TABLE` on table `distributed_t1` while performing writes+read from that table

While performing writes, RECREATed distributed_t1 and pointed it to t2 instead of t1

But some of the data was missing from t1, how do i know?
I have used insert bulks of 100 inserts, and after recreating, count() returned a number that doesn't divide by 100, meaning some of it was missing.

To be precise, the data that should have been on the _other_ server is missing.

**Example:**
```
CREATE TABLE t1 ON CLUSTER my_cluster (a UInt64, b UInt64) ENGINE=MergeTree()
CREATE TABLE t2 ON CLUSTER my_cluster (a UInt64, b UInt64) ENGINE=MergeTree()
CREATE TABLE IF NOT EXISTS distributed_t1 ON CLUSTER my_cluster ( a UInt64, b UInt64 ) ENGINE = Distributed('my_cluster', 'default', 't1', b) SETTINGS fsync_after_insert = 0, fsync_directories = 0
```
Recreate:
```
CREATE OR REPLACE TABLE distributed_t1 ON CLUSTER my_cluster ( a UInt64, b UInt64 ) ENGINE = Distributed('my_cluster', 'default', 't2', b) SETTINGS fsync_after_insert = 0, fsync_directories = 0
```
Writes are sequential number of column `b`, all writes are written to `ch1`, when recreating, sometimes half (because there are 2 servers) of the data is missing from `t1` and `t2` on both server servers

Not sure if related, but same things can also happen while reading from Merge() engine and recreating it

My question is, how far ATOMIC are those commands over an atomic database?
I was expecting the server to flush writes to a certain point, do the command, and then continue with the same pointer to the same table in that point of time

What am I missing? Am I missing something?

Thanks.
REPLACE TABLE replaces table even in case the insertion fails
**Describe the unexpected behaviour**
1. `CREATE TABLE t1 (...) ENGINE ReplicatedReplacingMergeTree(...) ...`
2. insert data into t1.
3. `CREATE TABLE t2 (...) ENGINE Join(ANY, LEFT, ...)`.
4. `REPLACE TABLE t2 ENGINE Join(ANY, LEFT, ...) AS SELECT ... FROM t1`
5. the insertion fails with `exception: Code: 241, e.displayText() = DB::Exception: Memory limit (total) exceeded: would use 704.69 GiB (attempt to allocate chunk of 132317568 bytes), maximum: 704.68 GiB: While executing CreatingSetsTransform (version 21.3.2.5)`
6. `t2` is replaced with a subset of data from `t1`.

**How to reproduce**
* Which ClickHouse server version to use
21.3.2.5

* Which interface to use, if matters
clickhouse-client

**Expected behavior**
If the query fails, the replacement should not happen.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
