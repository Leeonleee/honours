{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 79844,
  "instance_id": "ClickHouse__ClickHouse-79844",
  "issue_numbers": [
    "79263"
  ],
  "base_commit": "4bfa47ce7399fdc23206c8841a6f09c15c607602",
  "patch": "diff --git a/src/Storages/ObjectStorage/StorageObjectStorageCluster.cpp b/src/Storages/ObjectStorage/StorageObjectStorageCluster.cpp\nindex 7ac875d8734c..e9b42b78084e 100644\n--- a/src/Storages/ObjectStorage/StorageObjectStorageCluster.cpp\n+++ b/src/Storages/ObjectStorage/StorageObjectStorageCluster.cpp\n@@ -85,6 +85,18 @@ std::string StorageObjectStorageCluster::getName() const\n     return configuration->getEngineName();\n }\n \n+std::optional<UInt64> StorageObjectStorageCluster::totalRows(ContextPtr query_context) const\n+{\n+    configuration->update(object_storage, query_context);\n+    return configuration->totalRows();\n+}\n+\n+std::optional<UInt64> StorageObjectStorageCluster::totalBytes(ContextPtr query_context) const\n+{\n+    configuration->update(object_storage, query_context);\n+    return configuration->totalBytes();\n+}\n+\n void StorageObjectStorageCluster::updateQueryToSendIfNeeded(\n     ASTPtr & query,\n     const DB::StorageSnapshotPtr & storage_snapshot,\ndiff --git a/src/Storages/ObjectStorage/StorageObjectStorageCluster.h b/src/Storages/ObjectStorage/StorageObjectStorageCluster.h\nindex 581bf7d52977..fa35d7211d3b 100644\n--- a/src/Storages/ObjectStorage/StorageObjectStorageCluster.h\n+++ b/src/Storages/ObjectStorage/StorageObjectStorageCluster.h\n@@ -29,6 +29,9 @@ class StorageObjectStorageCluster : public IStorageCluster\n \n     String getPathSample(StorageInMemoryMetadata metadata, ContextPtr context);\n \n+    std::optional<UInt64> totalRows(ContextPtr query_context) const override;\n+    std::optional<UInt64> totalBytes(ContextPtr query_context) const override;\n+\n private:\n     void updateQueryToSendIfNeeded(\n         ASTPtr & query,\n",
  "test_patch": "diff --git a/tests/integration/test_storage_iceberg/test.py b/tests/integration/test_storage_iceberg/test.py\nindex 4429040725c7..eb7eee446921 100644\n--- a/tests/integration/test_storage_iceberg/test.py\n+++ b/tests/integration/test_storage_iceberg/test.py\n@@ -650,6 +650,8 @@ def add_df(mode):\n         )\n         assert len(cluster_secondary_queries) == 1\n \n+    # write 3 times\n+    assert int(instance.query(f\"SELECT count() FROM {table_function_expr_cluster}\")) == 100 * 3\n \n @pytest.mark.parametrize(\"format_version\", [\"1\", \"2\"])\n @pytest.mark.parametrize(\"storage_type\", [\"s3\", \"azure\", \"local\"])\n",
  "problem_statement": "Wrong result of `count()` when selecting using `icebergS3Cluster` table function\n### Describe what's wrong\n\nResult of `count()` is 42, I expect 14.\n\n### Does it reproduce on the most recent release?\n\nYes\n\n### How to reproduce\n\n```sql\nSELECT hostName() AS host, count()\nFROM icebergS3Cluster('replicated_cluster', 'http://minio:9000/warehouse/data', '[masked]:Secret(name='minio_root_user')', '[masked]:Secret(name='minio_root_password')')\n```\nOutput:\n```\nclickhouse1\t42\n```\n\nHow table looks like:\n```sql\nSELECT hostName() AS host, *\nFROM icebergS3Cluster('replicated_cluster', 'http://minio:9000/warehouse/data', '[masked]:Secret(name='minio_root_user')', '[masked]:Secret(name='minio_root_password')')\n```\nOutput:\n```\nclickhouse1    Eve    89.01    60\nclickhouse1    Leo    67.89    130\nclickhouse1    Charlie    67.89    40\nclickhouse1    Nina    34.56    150\nclickhouse1    Ivan    34.56    100\nclickhouse1    Heidi    90.12    90\nclickhouse1    Frank    12.34    70\nclickhouse1    Bob    123.45    30\nclickhouse1    Karl    23.45    120\nclickhouse1    Judy    78.9    110\nclickhouse1    Grace    56.78    80\nclickhouse1    David    45.67    50\nclickhouse1    Mallory    11.12    140\nclickhouse1    Alice    195.23    20\n```\n\nCluster:\n```xml\n        <replicated_cluster>\n            <shard>\n                <internal_replication>true</internal_replication>\n                <replica>\n                    <host>clickhouse1</host>\n                    <port>9000</port>\n                </replica>\n                <replica>\n                    <host>clickhouse2</host>\n                    <port>9000</port>\n                </replica>\n                <replica>\n                    <host>clickhouse3</host>\n                    <port>9000</port>\n                </replica>\n            </shard>\n        </replicated_cluster>\n```\n### Additional context\n\nSeems like the output of count() is multiplied by the number of nodes in the cluster. When I use a cluster with two nodes, output of the same query is 28.\n\n\n",
  "hints_text": "Guess it's after this PR - https://github.com/ClickHouse/ClickHouse/pull/78090\nEach node takes result from metadata instead of calculate only part of rows.\n@alesapin",
  "created_at": "2025-05-05T10:24:51Z",
  "modified_files": [
    "src/Storages/ObjectStorage/StorageObjectStorageCluster.cpp",
    "src/Storages/ObjectStorage/StorageObjectStorageCluster.h"
  ],
  "modified_test_files": [
    "tests/integration/test_storage_iceberg/test.py"
  ]
}