diff --git a/src/Core/BaseSettingsProgramOptions.h b/src/Core/BaseSettingsProgramOptions.h
index 6e1ecce6a34b..f482c08cf130 100644
--- a/src/Core/BaseSettingsProgramOptions.h
+++ b/src/Core/BaseSettingsProgramOptions.h
@@ -11,8 +11,16 @@ template <typename T>
 void addProgramOptionAsMultitoken(T &cmd_settings, boost::program_options::options_description & options, std::string_view name, const typename T::SettingFieldRef & field)
 {
     auto on_program_option = boost::function1<void, const Strings &>([&cmd_settings, name](const Strings & values) { cmd_settings.set(name, values.back()); });
-    options.add(boost::shared_ptr<boost::program_options::option_description>(new boost::program_options::option_description(
-            name.data(), boost::program_options::value<Strings>()->multitoken()->composing()->notifier(on_program_option), field.getDescription())));
+    if (field.getTypeName() == "Bool")
+    {
+        options.add(boost::shared_ptr<boost::program_options::option_description>(new boost::program_options::option_description(
+                name.data(), boost::program_options::value<Strings>()->multitoken()->composing()->implicit_value(std::vector<std::string>{"1"}, "1")->notifier(on_program_option), field.getDescription())));
+    }
+    else
+    {
+        options.add(boost::shared_ptr<boost::program_options::option_description>(new boost::program_options::option_description(
+                name.data(), boost::program_options::value<Strings>()->multitoken()->composing()->notifier(on_program_option), field.getDescription())));
+    }
 }
 
 template <typename T>
@@ -36,8 +44,16 @@ template <typename T>
 void addProgramOption(T & cmd_settings, boost::program_options::options_description & options, std::string_view name, const typename T::SettingFieldRef & field)
 {
     auto on_program_option = boost::function1<void, const std::string &>([&cmd_settings, name](const std::string & value) { cmd_settings.set(name, value); });
-    options.add(boost::shared_ptr<boost::program_options::option_description>(new boost::program_options::option_description(
-            name.data(), boost::program_options::value<std::string>()->composing()->notifier(on_program_option), field.getDescription()))); // NOLINT
+    if (field.getTypeName() == "Bool")
+    {
+        options.add(boost::shared_ptr<boost::program_options::option_description>(new boost::program_options::option_description(
+                name.data(), boost::program_options::value<std::string>()->composing()->implicit_value("1")->notifier(on_program_option), field.getDescription()))); // NOLINT
+    }
+    else
+    {
+        options.add(boost::shared_ptr<boost::program_options::option_description>(new boost::program_options::option_description(
+                name.data(), boost::program_options::value<std::string>()->composing()->notifier(on_program_option), field.getDescription()))); // NOLINT
+    }
 }
 
 template <typename T>
