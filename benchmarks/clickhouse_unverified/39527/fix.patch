diff --git a/contrib/nats-io-cmake/CMakeLists.txt b/contrib/nats-io-cmake/CMakeLists.txt
index 5588d5750c47..579bf6f8ae48 100644
--- a/contrib/nats-io-cmake/CMakeLists.txt
+++ b/contrib/nats-io-cmake/CMakeLists.txt
@@ -18,6 +18,8 @@ elseif(WIN32)
     set(NATS_PLATFORM_INCLUDE "apple")
 endif()
 
+add_definitions(-DNATS_HAS_TLS)
+
 file(GLOB PS_SOURCES "${NATS_IO_SOURCE_DIR}/${NATS_PLATFORM_INCLUDE}/*.c")
 set(SRCS
     "${NATS_IO_SOURCE_DIR}/asynccb.c"
diff --git a/src/Storages/NATS/NATSConnection.cpp b/src/Storages/NATS/NATSConnection.cpp
index 359754bb1440..64beb9f2dffb 100644
--- a/src/Storages/NATS/NATSConnection.cpp
+++ b/src/Storages/NATS/NATSConnection.cpp
@@ -9,7 +9,6 @@
 namespace DB
 {
 
-//static const auto CONNECT_SLEEP = 200;
 static const auto RETRIES_MAX = 20;
 static const auto CONNECTED_TO_BUFFER_SIZE = 256;
 
@@ -19,6 +18,10 @@ NATSConnectionManager::NATSConnectionManager(const NATSConfiguration & configura
     , log(log_)
     , event_handler(loop.getLoop(), log)
 {
+    const char * val = std::getenv("CLICKHOUSE_NATS_TLS_SECURE");
+    std::string tls_secure = val == nullptr ? std::string("1") : std::string(val);
+    if (tls_secure == "0")
+        skip_verification = true;
 }
 
 
@@ -92,6 +95,9 @@ void NATSConnectionManager::connectImpl()
     if (configuration.secure)
     {
         natsOptions_SetSecure(options, true);
+    }
+    if (skip_verification)
+    {
         natsOptions_SkipServerVerification(options, true);
     }
     if (!configuration.url.empty())
diff --git a/src/Storages/NATS/NATSConnection.h b/src/Storages/NATS/NATSConnection.h
index 78a273164db4..c699f859446a 100644
--- a/src/Storages/NATS/NATSConnection.h
+++ b/src/Storages/NATS/NATSConnection.h
@@ -65,6 +65,9 @@ class NATSConnectionManager
     // true if at any point successfully connected to NATS
     bool has_connection = false;
 
+    // use CLICKHOUSE_NATS_TLS_SECURE=0 env var to skip TLS verification of server cert
+    bool skip_verification = false;
+
     std::mutex mutex;
 };
 
