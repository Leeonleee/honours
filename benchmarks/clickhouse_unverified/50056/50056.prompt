You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Wrong result of the boolean expression with JIT (`compile_expressions`) while comparing NaNs
**Describe what's wrong**

The SELECT statement with contradictory WHERE conditions should return empty results. However, it outputs one row.

**Does it reproduce on recent release?**

It can be reproduced in the latest version.

**How to reproduce**

Version: 23.5.1.1 (commit 30464b939781e3aa0897acf9a38839760a2282f8)

_Set up database_

```sql
create table t3 (pkey UInt32, primary key(pkey)) engine = MergeTree;
create table t5 (pkey UInt32, primary key(pkey)) engine = MergeTree;
insert into t3 (pkey) values (2);
insert into t5 (pkey) values (2);
```

_bug-triggering query_

```sql
select *
from
  t5 as ref_0
    RIGHT join t3 as ref_3
    on (ref_0.pkey = ref_3.pkey)
where (acos(ref_3.pkey) <> atan(ref_0.pkey)) and
      (not (acos(ref_3.pkey) <> atan(ref_0.pkey)));
```

**Expected behavior**

The query must output empty because the conditions `acos(ref_3.pkey) <> atan(ref_0.pkey)` and `not (acos(ref_3.pkey) <> atan(ref_0.pkey))` are contradictory. 

**Actual behavior**

It outputs one row
```
┌─pkey─┬─ref_3.pkey─┐
│    2 │          2 │
└──────┴────────────┘

1 row in set. Elapsed: 0.003 sec.
```

**Additional context**

The earliest reproducible version is 21.7 in [fiddle](https://fiddle.clickhouse.com/)..
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
