You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Invalid number of rows in Chunk column Int32: expected 99, got 5: While executing TinyLog 
**How to reproduce**
Most likely problem is a result of failed INSERT in TinyLog as bug is triggered often on small VM and rarely on big server. There is an error about memory limit before error.

```
2020.07.10 14:16:09.298115 [ 73 ] {} <Error> DynamicQueryHandler: Code: 241, e.displayText() = DB::Exception: Memory limit (total) exceeded: would use 39.79 GiB (attempt to alloc
ate chunk of 4202772 bytes), maximum: 39.79 GiB, Stack trace (when copying this message, always include the lines below):
```

```
2020.07.10 14:16:09.298194 [ 102 ] {7457fbb7-6c87-46e4-81b4-b1c05af4372b} <Error> executeQuery: Code: 49, e.displayText() = DB::Exception: Invalid number of rows in Chunk column Int32: expected 99, got 5: While executing TinyLog (version 20.5.2.7 (official build)) (from 172.17.0.1:60726) (in query: SELECT DISTINCT * FROM (SELECT t0.c0 FROM t0 WHERE t0.c1 GROUP BY t0.c0 UNION ALL SELECT t0.c0 FROM t0 WHERE (NOT (t0.c1)) GROUP BY t0.c0 UNION ALL SELECT t0.c0 FROM t0 WHERE ((t0.c1) IS NULL) GROUP BY t0.c0) FORMAT TabSeparatedWithNamesAndTypes;), Stack trace (when copying this message, always include the lines below):

0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x10ed0da0 in /usr/bin/clickhouse
1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x95c923d in /usr/bin/clickhouse
2. ? @ 0xe6d3587 in /usr/bin/clickhouse
3. DB::Chunk::Chunk(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >, unsigned long) @ 0xe6d2739 in /usr/bin/clickhouse
4. DB::TinyLogSource::generate() @ 0xe32e474 in /usr/bin/clickhouse
5. DB::ISource::work() @ 0xe6dd3ab in /usr/bin/clickhouse
6. DB::SourceWithProgress::work() @ 0xe91f337 in /usr/bin/clickhouse
7. ? @ 0xe70aa21 in /usr/bin/clickhouse
8. ? @ 0xe70f1a6 in /usr/bin/clickhouse
9. ? @ 0xe70f7f2 in /usr/bin/clickhouse
10. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x95f6e97 in /usr/bin/clickhouse
11. ? @ 0x95f5383 in /usr/bin/clickhouse
12. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so
13. __clone @ 0x12188f in /lib/x86_64-linux-gnu/libc-2.27.so
```

**Additional context**
Bug found with SQLancer TLPDistinct oracle.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
