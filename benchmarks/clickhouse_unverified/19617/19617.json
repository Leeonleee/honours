{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 19617,
  "instance_id": "ClickHouse__ClickHouse-19617",
  "issue_numbers": [
    "10333"
  ],
  "base_commit": "b8d6655131a76717589d83b3e2d6f3970db4f9b9",
  "patch": "diff --git a/src/Functions/neighbor.cpp b/src/Functions/neighbor.cpp\nindex 942d23b31ccb..598e1225877e 100644\n--- a/src/Functions/neighbor.cpp\n+++ b/src/Functions/neighbor.cpp\n@@ -50,6 +50,10 @@ class FunctionNeighbor : public IFunction\n \n     bool useDefaultImplementationForConstants() const override { return false; }\n \n+    /// We do not use default implementation for LowCardinality because this is not a pure function.\n+    /// If used, optimization for LC may execute function only for dictionary, which gives wrong result.\n+    bool useDefaultImplementationForLowCardinalityColumns() const override { return false; }\n+\n     DataTypePtr getReturnTypeImpl(const DataTypes & arguments) const override\n     {\n         size_t number_of_arguments = arguments.size();\n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01670_neighbor_lc_bug.reference b/tests/queries/0_stateless/01670_neighbor_lc_bug.reference\nnew file mode 100644\nindex 000000000000..fd1bc1a154ca\n--- /dev/null\n+++ b/tests/queries/0_stateless/01670_neighbor_lc_bug.reference\n@@ -0,0 +1,15 @@\n+0\t\t\n+0\t\t\n+0\t0\t0\n+1\t1\t1\n+2\t2\t2\n+3\t3\t3\n+4\t4\t4\n+0\t0\t0\n+1\t1\t1\n+2\t2\t2\n+\u250c\u2500\u001b[1mrowNr\u001b[0m\u2500\u252c\u2500\u001b[1mval_string\u001b[0m\u2500\u252c\u2500\u001b[1mstr_m1\u001b[0m\u2500\u2500\u2500\u252c\u2500\u001b[1mstr_p1\u001b[0m\u2500\u2500\u2500\u252c\u2500\u001b[1mval_low\u001b[0m\u2500\u2500\u252c\u2500\u001b[1mlow_m1\u001b[0m\u2500\u2500\u2500\u252c\u2500\u001b[1mlow_p1\u001b[0m\u2500\u2500\u2500\u2510\n+\u2502     1 \u2502 String 1   \u2502          \u2502 String 1 \u2502 String 1 \u2502          \u2502 String 1 \u2502\n+\u2502     2 \u2502 String 1   \u2502 String 1 \u2502 String 2 \u2502 String 1 \u2502 String 1 \u2502 String 2 \u2502\n+\u2502     3 \u2502 String 2   \u2502 String 1 \u2502          \u2502 String 2 \u2502 String 1 \u2502          \u2502\n+\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\ndiff --git a/tests/queries/0_stateless/01670_neighbor_lc_bug.sql b/tests/queries/0_stateless/01670_neighbor_lc_bug.sql\nnew file mode 100644\nindex 000000000000..de9afcf14950\n--- /dev/null\n+++ b/tests/queries/0_stateless/01670_neighbor_lc_bug.sql\n@@ -0,0 +1,43 @@\n+SELECT\n+    neighbor(n, -2) AS int,\n+    neighbor(s, -2) AS str,\n+    neighbor(lcs, -2) AS lowCstr\n+FROM\n+(\n+    SELECT\n+        number % 5 AS n,\n+        toString(n) AS s,\n+        CAST(s, 'LowCardinality(String)') AS lcs\n+    FROM numbers(10)\n+);\n+\n+drop table if exists neighbor_test;\n+\n+CREATE TABLE neighbor_test\n+(\n+    `rowNr` UInt8,\n+    `val_string` String,\n+    `val_low` LowCardinality(String)\n+)\n+ENGINE = MergeTree\n+PARTITION BY tuple()\n+ORDER BY rowNr;\n+\n+INSERT INTO neighbor_test VALUES (1, 'String 1', 'String 1'), (2, 'String 1', 'String 1'), (3, 'String 2', 'String 2');\n+\n+SELECT\n+    rowNr,\n+    val_string,\n+    neighbor(val_string, -1) AS str_m1,\n+    neighbor(val_string, 1) AS str_p1,\n+    val_low,\n+    neighbor(val_low, -1) AS low_m1,\n+    neighbor(val_low, 1) AS low_p1\n+FROM \n+(\n+    SELECT *\n+    FROM neighbor_test\n+    ORDER BY val_string ASC\n+) format PrettyCompact;\n+\n+drop table if exists neighbor_test;\n",
  "problem_statement": "neighbor + LowCardinality = wrong result\n```\r\nSELECT\r\n    neighbor(n, -2) AS int,\r\n    neighbor(s, -2) AS str,\r\n    neighbor(lcs, -2) AS lowCstr\r\nFROM\r\n(\r\n    SELECT\r\n        number % 5 AS n,\r\n        toString(n) AS s,\r\n        CAST(s, 'LowCardinality(String)') AS lcs\r\n    FROM numbers(10)\r\n)\r\n\r\n\u250c\u2500int\u2500\u252c\u2500str\u2500\u252c\u2500lowCstr\u2500\u2510\r\n\u2502   0 \u2502     \u2502         \u2502\r\n\u2502   0 \u2502     \u2502         \u2502\r\n\u2502   0 \u2502 0   \u2502 0       \u2502\r\n\u2502   1 \u2502 1   \u2502 1       \u2502\r\n\u2502   2 \u2502 2   \u2502 2       \u2502\r\n\u2502   3 \u2502 3   \u2502         \u2502\r\n\u2502   4 \u2502 4   \u2502         \u2502\r\n\u2502   0 \u2502 0   \u2502 0       \u2502\r\n\u2502   1 \u2502 1   \u2502 1       \u2502\r\n\u2502   2 \u2502 2   \u2502 2       \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\n",
  "hints_text": "newest version still is affected by this, as i have had to notice in some usecases lately.\r\n\r\nThere are not only missing results like in the Example by denny, but also totally different ones as well:\r\n\r\nCREATE TABLE neighbor_test (\r\n  rowNr UInt8,\r\n  val_string String, \r\n  val_low LowCardinality(String)\r\n) ENGINE=MergeTree() ORDER BY rowNr PARTITION BY tuple();\r\n\r\nINSERT INTO neighbor_test\r\nVALUES\r\n(1, 'String 1', 'String 1'),\r\n(2, 'String 1', 'String 1'),\r\n(3, 'String 2', 'String 2');\r\n\r\nSELECT\r\n    rowNr,\r\n    val_string,\r\n    neighbor(val_string, -1) AS str_m1,\r\n    neighbor(val_string, 1) AS str_p1,\r\n    val_low,\r\n    neighbor(val_low, -1) AS low_m1,\r\n    neighbor(val_low, 1) AS low_p1\r\n\r\nFROM \r\n(\r\n    SELECT *\r\n    FROM neighbor_test\r\n    ORDER BY val_string ASC\r\n)\r\n\r\nRow 1:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\r\nrowNr:      1\r\nval_string: String 1\r\nstr_m1:     \r\nstr_p1:     String 1\r\nval_low:    String 1\r\nlow_m1:     \r\nlow_p1:     String 2\r\n\r\nRow 2:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\r\nrowNr:      2\r\nval_string: String 1\r\nstr_m1:     String 1\r\nstr_p1:     String 2\r\nval_low:    String 1\r\nlow_m1:     \r\nlow_p1:     String 2\r\n\r\nRow 3:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\r\nrowNr:      3\r\nval_string: String 2\r\nstr_m1:     String 1\r\nstr_p1:     \r\nval_low:    String 2\r\nlow_m1:     String 1\r\nlow_p1:     \r\n",
  "created_at": "2021-01-26T10:32:47Z",
  "modified_files": [
    "src/Functions/neighbor.cpp"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01670_neighbor_lc_bug.reference",
    "b/tests/queries/0_stateless/01670_neighbor_lc_bug.sql"
  ]
}