{
  "repo": "ClickHouse/ClickHouse",
  "pull_number": 21477,
  "instance_id": "ClickHouse__ClickHouse-21477",
  "issue_numbers": [
    "20558"
  ],
  "base_commit": "5f6c8eb1d03fe0363437fab26bb73ebd827f7f80",
  "patch": "diff --git a/src/Interpreters/MutationsInterpreter.cpp b/src/Interpreters/MutationsInterpreter.cpp\nindex 05f1a6be2b38..6e732ea6783e 100644\n--- a/src/Interpreters/MutationsInterpreter.cpp\n+++ b/src/Interpreters/MutationsInterpreter.cpp\n@@ -273,10 +273,9 @@ MutationsInterpreter::MutationsInterpreter(\n     , commands(std::move(commands_))\n     , context(context_)\n     , can_execute(can_execute_)\n+    , select_limits(SelectQueryOptions().analyze(!can_execute).ignoreLimits())\n {\n     mutation_ast = prepare(!can_execute);\n-    SelectQueryOptions limits = SelectQueryOptions().analyze(!can_execute).ignoreLimits();\n-    select_interpreter = std::make_unique<InterpreterSelectQuery>(mutation_ast, context, storage, metadata_snapshot_, limits);\n }\n \n static NameSet getKeyColumns(const StoragePtr & storage, const StorageMetadataPtr & metadata_snapshot)\n@@ -767,6 +766,9 @@ QueryPipelinePtr MutationsInterpreter::addStreamsForLaterStages(const std::vecto\n \n void MutationsInterpreter::validate()\n {\n+    if (!select_interpreter)\n+        select_interpreter = std::make_unique<InterpreterSelectQuery>(mutation_ast, context, storage, metadata_snapshot, select_limits);\n+\n     const Settings & settings = context.getSettingsRef();\n \n     /// For Replicated* storages mutations cannot employ non-deterministic functions\n@@ -794,6 +796,9 @@ BlockInputStreamPtr MutationsInterpreter::execute()\n     if (!can_execute)\n         throw Exception(\"Cannot execute mutations interpreter because can_execute flag set to false\", ErrorCodes::LOGICAL_ERROR);\n \n+    if (!select_interpreter)\n+        select_interpreter = std::make_unique<InterpreterSelectQuery>(mutation_ast, context, storage, metadata_snapshot, select_limits);\n+\n     QueryPlan plan;\n     select_interpreter->buildQueryPlan(plan);\n \ndiff --git a/src/Interpreters/MutationsInterpreter.h b/src/Interpreters/MutationsInterpreter.h\nindex 18658e605adb..dcebba5743ec 100644\n--- a/src/Interpreters/MutationsInterpreter.h\n+++ b/src/Interpreters/MutationsInterpreter.h\n@@ -76,6 +76,7 @@ class MutationsInterpreter\n     MutationCommands commands;\n     Context context;\n     bool can_execute;\n+    SelectQueryOptions select_limits;\n \n     ASTPtr mutation_ast;\n \n",
  "test_patch": "diff --git a/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.reference b/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.reference\nnew file mode 100644\nindex 000000000000..d00491fd7e5b\n--- /dev/null\n+++ b/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.reference\n@@ -0,0 +1,1 @@\n+1\ndiff --git a/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.sql b/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.sql\nnew file mode 100644\nindex 000000000000..efb444eb4b1f\n--- /dev/null\n+++ b/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.sql\n@@ -0,0 +1,12 @@\n+DROP TABLE IF EXISTS mmm;\n+\n+CREATE TABLE mmm ENGINE=MergeTree ORDER BY number\n+AS SELECT number, rand() % 10 AS a FROM numbers(1000);\n+\n+ALTER TABLE mmm DELETE WHERE a IN (SELECT a FROM mmm) SETTINGS mutations_sync=1;\n+\n+SELECT is_done FROM system.mutations WHERE table = 'mmm' and database=currentDatabase();\n+\n+SELECT * FROM mmm;\n+\n+DROP TABLE IF EXISTS mmm;\n",
  "problem_statement": "21.X Deadlock in mutations referencing the same table in subquery\n```\r\ncreate table mmm engine=MergeTree ORDER BY number AS select number, rand()%10 as a from numbers(1000);\r\nalter table mmm delete where a in (select a from mmm);\r\nselect * from system.mutations;\r\n```\r\n\r\n20.12 - works. \r\n\r\n21.1 and newer - hangs.\r\n\r\nStacktrace from 21.3:\r\n\r\n```\r\n\r\n\r\n\r\n__lll_lock_wait\r\n__GI___pthread_mutex_lock\r\nstd::__1::mutex::lock()\r\nDB::StorageMergeTree::getFirstAlterMutationCommandsForPart(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&) const\r\nDB::MergeTreeData::getAlterConversionsForPart(std::__1::shared_ptr<DB::IMergeTreeDataPart const>) const\r\nDB::injectRequiredColumns(DB::MergeTreeData const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)\r\nDB::getReadTaskColumns(DB::MergeTreeData const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::PrewhereInfo> const&, bool)\r\nDB::MergeTreeReadPool::fillPerPartInfo(std::__1::vector<DB::RangesInDataPart, std::__1::allocator<DB::RangesInDataPart> > const&, bool)\r\nDB::MergeTreeReadPool::MergeTreeReadPool(unsigned long, unsigned long, unsigned long, std::__1::vector<DB::RangesInDataPart, std::__1::allocator<DB::RangesInDataPart> >&&, DB::MergeTreeData const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PrewhereInfo> const&, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::MergeTreeReadPool::BackoffSettings const&, unsigned long, bool)\r\nDB::MergeTreeDataSelectExecutor::spreadMarkRangesAmongStreams(std::__1::vector<DB::RangesInDataPart, std::__1::allocator<DB::RangesInDataPart> >&&, unsigned long, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, unsigned long, bool, DB::SelectQueryInfo const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::Settings const&, DB::MergeTreeReaderSettings const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const\r\nDB::MergeTreeDataSelectExecutor::readFromParts(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const\r\nDB::MergeTreeDataSelectExecutor::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const\r\nDB::StorageMergeTree::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int)\r\nDB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&, std::__1::shared_ptr<DB::PrewhereDAGInfo> const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)\r\nDB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>)\r\nDB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&)\r\nDB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&)\r\nDB::ActionsMatcher::makeSet(DB::ASTFunction const&, DB::ActionsMatcher::Data&, bool)\r\nDB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&)\r\nDB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&)\r\nDB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&)\r\nDB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool)\r\nDB::SelectQueryExpressionAnalyzer::appendPrewhere(DB::ExpressionActionsChain&, bool, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)\r\nDB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&)\r\nDB::InterpreterSelectQuery::getSampleBlockImpl()\r\n\r\nDB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&)\r\nDB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryOptions const&)\r\nDB::MutationsInterpreter::MutationsInterpreter(std::__1::shared_ptr<DB::IStorage>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::MutationCommands, DB::Context const&, bool)\r\nDB::StorageMergeTree::selectPartsToMutate(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&)\r\n\r\n\r\n\u2502      2020 \u2502 1e5d8a33-a0d8-481b-ad74-6f7e9d5321db \u2502 __lll_lock_wait\r\n__GI___pthread_mutex_lock\r\nstd::__1::mutex::lock()\r\nDB::StorageMergeTree::getMutationsStatus() const\r\nDB::StorageSystemMutations::fillData(std::__1::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn> > >&, DB::Context const&, DB::SelectQueryInfo const&) const\r\nDB::IStorageSystemOneBlock<DB::StorageSystemMutations>::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int)\r\nDB::IStorage::read(DB::QueryPlan&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int)\r\nDB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&, std::__1::shared_ptr<DB::PrewhereDAGInfo> const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)\r\nDB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>)\r\nDB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&)\r\nDB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&)\r\nDB::InterpreterSelectWithUnionQuery::execute()\r\n\r\nDB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool)\r\nDB::TCPHandler::runImpl()\r\nDB::TCPHandler::run()\r\nPoco::Net::TCPServerConnection::start()\r\nPoco::Net::TCPServerDispatcher::run()\r\nPoco::PooledThread::run()\r\nPoco::ThreadImpl::runnableEntry(void*)\r\nstart_thread\r\nclone \u2502\r\n\r\n```\n",
  "hints_text": "",
  "created_at": "2021-03-05T12:34:12Z",
  "modified_files": [
    "src/Interpreters/MutationsInterpreter.cpp",
    "src/Interpreters/MutationsInterpreter.h"
  ],
  "modified_test_files": [
    "b/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.reference",
    "b/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.sql"
  ]
}