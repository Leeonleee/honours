You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
MaterializeMySQL: support time data type
<Error> MaterializeMySQLSyncThread: Code: 50, e.displayText() = DB::Exception: Unknown data type family: time, Stack trace (when copying this message, always include the lines below):

0. DB::DataTypeFactory::findCreatorByName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xd7689b2 in /usr/bin/clickhouse
1. DB::DataTypeFactory::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IAST> const&) const @ 0xd767d18 in /usr/bin/clickhouse
2. DB::DataTypeFactory::get(std::__1::shared_ptr<DB::IAST> const&) const @ 0xd767b00 in /usr/bin/clickhouse
3. ? @ 0xdf117d8 in /usr/bin/clickhouse
4. DB::MySQLInterpreter::InterpreterCreateImpl::getRewrittenQueries(DB::MySQLParser::ASTCreateQuery const&, DB::Context const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xdf0dd57 in /usr/bin/clickhouse
5. DB::MySQLInterpreter::InterpreterMySQLDDLQuery<DB::MySQLInterpreter::InterpreterCreateImpl>::execute() @ 0xdba14bc in /usr/bin/clickhouse
6. DB::InterpreterExternalDDLQuery::execute() @ 0xdba0507 in /usr/bin/clickhouse
7. ? @ 0xdeec307 in /usr/bin/clickhouse
8. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0xdeeaedd in /usr/bin/clickhouse
9. ? @ 0xdb4d8c4 in /usr/bin/clickhouse
10. DB::MaterializeMySQLSyncThread::executeDDLAtomic(DB::MySQLReplication::QueryEvent const&) @ 0xdb4d3ab in /usr/bin/clickhouse
11. DB::commitMetadata(std::__1::function<void ()> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xdb6bf5e in /usr/bin/clickhouse
12. DB::MaterializeMetadata::transaction(DB::MySQLReplication::Position const&, std::__1::function<void ()> const&) @ 0xdb6c451 in /usr/bin/clickhouse
13. DB::MaterializeMySQLSyncThread::onEvent(DB::MaterializeMySQLSyncThread::Buffers&, std::__1::shared_ptr<DB::MySQLReplication::EventBase> const&, DB::MaterializeMetadata&) @ 0xdb48be8 in /usr/bin/clickhouse
14. DB::MaterializeMySQLSyncThread::synchronization(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0xdb4624c in /usr/bin/clickhouse
15. ? @ 0xdb64b7a in /usr/bin/clickhouse
16. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7d1baad in /usr/bin/clickhouse
17. ? @ 0x7d1f5d3 in /usr/bin/clickhouse
18. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so
19. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so
 (version 20.12.3.3 (official build))
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
