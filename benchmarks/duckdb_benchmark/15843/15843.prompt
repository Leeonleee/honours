You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Binder error when using query_table with an alias
### What happens?

Giving `query_table` an alias and referencing columns via that throws a `BinderError`, e.g.:
```
Binder Error: Referenced table "f" not found!
Candidate tables: "unnamed_subquery"
LINE 1: SELECT bar, f.baz FROM query_table('foo') as f;
                    ^
```
Referencing `baz` without the alias works as expected. My guess would be that the alias is either dropped or pulled into a subquery (like `SELECT bar, f.baz FROM (FROM foo as f)`) when `query_table` is transformed.

### To Reproduce

Run with DuckDB CLI client:
```sql
CREATE TABLE foo AS SELECT 1 as bar, 2 as baz;
SELECT bar, f.baz FROM query_table('foo') as f;
```

Output:
```
Binder Error: Referenced table "f" not found!
Candidate tables: "unnamed_subquery"
LINE 1: SELECT bar, f.baz FROM query_table('foo') as f;
                    ^
```

### OS:

6.6.10-1-MANJARO, x86_64 GNU/Linux

### DuckDB Version:

v1.1.3 19864453f7

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Lennart Hensler

### Affiliation:

Private usage

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
