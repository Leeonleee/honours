You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
ZRANDMEMBER only ever returns first n elements in sorted set
**Describe the bug**
`ZRANDMEMBER` should return random elements from the specified sorted set, instead, it only returns the lowest scoring element(s).




**To Reproduce**
Steps to reproduce the behavior:
1. Insert some elements into a sorted set: `redis-cli zadd x 2 b 1 a 4 d 3 c`
2. Get a random member multiple times: `seq 25 | xargs -I {} redis-cli ZRANDMEMBER x 1`
3. The output will always be "a".

**Expected behavior**
I expect to get a pseudo random element for each invocation of `ZRANDMEMBER`.

The same steps above produce the expected randomized response when run against a standard redis docker image:

```sh
# seq 25 | xargs -I {} redis-cli ZRANDMEMBER x 1
1) "a"
1) "a"
1) "d"
1) "b"
1) "d"
1) "b"
1) "d"
1) "b"
1) "a"
1) "c"
1) "b"
1) "a"
1) "b"
1) "d"
1) "a"
1) "b"
1) "d"
1) "a"
1) "b"
1) "d"
1) "d"
1) "b"
1) "b"
1) "d"
1) "a"
```


**Environment (please complete the following information):**
 - OS: ubuntu 20.04
 - Kernel: Linux 7e19e630bc09 6.4.16-linuxkit #1 SMP PREEMPT Fri Nov 10 14:49:23 UTC 2023 aarch64 aarch64 aarch64 GNU/Linux
 - Containerized?: Docker
 - Dragonfly Version: v1.15.0

**Reproducible Code Snippet**
```
redis-cli zadd x 2 b 1 a 4 d 3 c
seq 25 | xargs -I {} redis-cli ZRANDMEMBER x 1
```

**Additional context**
The [dragonfly website](https://www.dragonflydb.io/docs/command-reference/compatibility) says it is fully compatible with Redis' implementation of `ZRANDMEMBER`, so it appears to be a bug instead of an intentional partial implementation.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
