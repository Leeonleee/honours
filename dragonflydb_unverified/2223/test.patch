diff --git a/src/core/string_set_test.cc b/src/core/string_set_test.cc
index 3d2f4b138c19..58e3ba656a60 100644
--- a/src/core/string_set_test.cc
+++ b/src/core/string_set_test.cc
@@ -448,4 +448,11 @@ TEST_F(StringSetTest, Reserve) {
   }
 }
 
+TEST_F(StringSetTest, IterateEmpty) {
+  for (const auto& s : *ss_) {
+    // We're iterating to make sure there is no crash. However, if we got here, it's a bug
+    CHECK(false) << "Found entry " << s << " in empty set";
+  }
+}
+
 }  // namespace dfly
diff --git a/src/server/rdb_test.cc b/src/server/rdb_test.cc
index 69f266c7378f..cc6c7259a0be 100644
--- a/src/server/rdb_test.cc
+++ b/src/server/rdb_test.cc
@@ -257,6 +257,55 @@ TEST_F(RdbTest, ReloadExpired) {
   ASSERT_THAT(resp, ArgType(RespExpr::NIL));
 }
 
+TEST_F(RdbTest, HashmapExpiry) {
+  // Add non-expiring elements
+  Run({"hset", "key", "key1", "val1", "key2", "val2"});
+  Run({"debug", "reload"});
+  EXPECT_THAT(Run({"hgetall", "key"}),
+              RespArray(UnorderedElementsAre("key1", "val1", "key2", "val2")));
+
+  // Add expiring elements
+  Run({"hsetex", "key", "5", "key3", "val3", "key4", "val4"});
+  Run({"debug", "reload"});  // Reload before expiration
+  EXPECT_THAT(Run({"hgetall", "key"}),
+              RespArray(UnorderedElementsAre("key1", "val1", "key2", "val2", "key3", "val3", "key4",
+                                             "val4")));
+  AdvanceTime(10'000);
+  EXPECT_THAT(Run({"hgetall", "key"}),
+              RespArray(UnorderedElementsAre("key1", "val1", "key2", "val2")));
+
+  Run({"hsetex", "key", "5", "key5", "val5", "key6", "val6"});
+  EXPECT_THAT(Run({"hgetall", "key"}),
+              RespArray(UnorderedElementsAre("key1", "val1", "key2", "val2", "key5", "val5", "key6",
+                                             "val6")));
+  AdvanceTime(10'000);
+  Run({"debug", "reload"});  // Reload after expiration
+  EXPECT_THAT(Run({"hgetall", "key"}),
+              RespArray(UnorderedElementsAre("key1", "val1", "key2", "val2")));
+}
+
+TEST_F(RdbTest, SetExpiry) {
+  // Add non-expiring elements
+  Run({"sadd", "key", "key1", "key2"});
+  Run({"debug", "reload"});
+  EXPECT_THAT(Run({"smembers", "key"}), RespArray(UnorderedElementsAre("key1", "key2")));
+
+  // Add expiring elements
+  Run({"saddex", "key", "5", "key3", "key4"});
+  Run({"debug", "reload"});  // Reload before expiration
+  EXPECT_THAT(Run({"smembers", "key"}),
+              RespArray(UnorderedElementsAre("key1", "key2", "key3", "key4")));
+  AdvanceTime(10'000);
+  EXPECT_THAT(Run({"smembers", "key"}), RespArray(UnorderedElementsAre("key1", "key2")));
+
+  Run({"saddex", "key", "5", "key5", "key6"});
+  EXPECT_THAT(Run({"smembers", "key"}),
+              RespArray(UnorderedElementsAre("key1", "key2", "key5", "key6")));
+  AdvanceTime(10'000);
+  Run({"debug", "reload"});  // Reload after expiration
+  EXPECT_THAT(Run({"smembers", "key"}), RespArray(UnorderedElementsAre("key1", "key2")));
+}
+
 TEST_F(RdbTest, SaveFlush) {
   Run({"debug", "populate", "500000"});
 
