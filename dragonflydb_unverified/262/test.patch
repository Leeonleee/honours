diff --git a/src/server/json_family_test.cc b/src/server/json_family_test.cc
index 83eb278f7108..ce82acb2f68b 100644
--- a/src/server/json_family_test.cc
+++ b/src/server/json_family_test.cc
@@ -456,4 +456,62 @@ TEST_F(JsonFamilyTest, NumMultBy) {
   EXPECT_EQ(resp, R"([{"a":"a"},{"a":"a","b":2},{"a":"a","b":"b"},{"a":2,"b":"b","c":6}])");
 }
 
+TEST_F(JsonFamilyTest, Del) {
+  string json = R"(
+    {"a":{}, "b":{"a":1}, "c":{"a":1, "b":2}, "d":{"a":1, "b":2, "c":3}, "e": [1,2,3,4,5]}}
+  )";
+
+  auto resp = Run({"set", "json", json});
+  ASSERT_THAT(resp, "OK");
+
+  resp = Run({"JSON.DEL", "json", "$.d.*"});
+  EXPECT_THAT(resp, IntArg(3));
+
+  resp = Run({"GET", "json"});
+  EXPECT_EQ(resp, R"({"a":{},"b":{"a":1},"c":{"a":1,"b":2},"d":{},"e":[1,2,3,4,5]})");
+
+  resp = Run({"JSON.DEL", "json", "$.e[*]"});
+  EXPECT_THAT(resp, IntArg(5));
+
+  resp = Run({"GET", "json"});
+  EXPECT_EQ(resp, R"({"a":{},"b":{"a":1},"c":{"a":1,"b":2},"d":{},"e":[]})");
+
+  resp = Run({"JSON.DEL", "json", "$..*"});
+  EXPECT_THAT(resp, IntArg(8));
+
+  resp = Run({"GET", "json"});
+  EXPECT_EQ(resp, R"({})");
+
+  resp = Run({"JSON.DEL", "json"});
+  EXPECT_THAT(resp, IntArg(1));
+
+  resp = Run({"GET", "json"});
+  EXPECT_THAT(resp, ArgType(RespExpr::NIL));
+
+  json = R"(
+    {"a":[{"b": [1,2,3]}], "b": [{"c": 2}], "c']":[1,2,3]}
+  )";
+
+  resp = Run({"set", "json", json});
+  ASSERT_THAT(resp, "OK");
+
+  resp = Run({"JSON.DEL", "json", "$.a[0].b[0]"});
+  EXPECT_THAT(resp, IntArg(1));
+
+  resp = Run({"GET", "json"});
+  EXPECT_EQ(resp, R"({"a":[{"b":[2,3]}],"b":[{"c":2}],"c']":[1,2,3]})");
+
+  resp = Run({"JSON.DEL", "json", "$.b[0].c"});
+  EXPECT_THAT(resp, IntArg(1));
+
+  resp = Run({"GET", "json"});
+  EXPECT_EQ(resp, R"({"a":[{"b":[2,3]}],"b":[{}],"c']":[1,2,3]})");
+
+  resp = Run({"JSON.DEL", "json", "$.*"});
+  EXPECT_THAT(resp, IntArg(3));
+
+  resp = Run({"GET", "json"});
+  EXPECT_EQ(resp, R"({})");
+}
+
 }  // namespace dfly
