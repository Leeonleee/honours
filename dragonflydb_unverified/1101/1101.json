{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 1101,
  "instance_id": "dragonflydb__dragonfly-1101",
  "issue_numbers": [
    "1095"
  ],
  "base_commit": "c952251381de2c0734fefde585755578dc3d7965",
  "patch": "diff --git a/src/facade/redis_parser.cc b/src/facade/redis_parser.cc\nindex 4cccce032524..4480966c92b4 100644\n--- a/src/facade/redis_parser.cc\n+++ b/src/facade/redis_parser.cc\n@@ -215,6 +215,7 @@ auto RedisParser::ParseNum(Buffer str, int64_t* res) -> Result {\n   if (str.size() < 4) {\n     return INPUT_PENDING;\n   }\n+  DCHECK(str[0] == '$' || str[0] == '*' || str[0] == '%');\n \n   char* s = reinterpret_cast<char*>(str.data() + 1);\n   char* pos = reinterpret_cast<char*>(memchr(s, '\\n', str.size() - 1));\n@@ -250,7 +251,7 @@ auto RedisParser::ConsumeArrayLen(Buffer str) -> Result {\n       return BAD_ARRAYLEN;\n     case OK:\n       if (len < -1 || len > kMaxArrayLen) {\n-        VLOG_IF(1, len > kMaxArrayLen) << \"Milti bulk len is too big \" << len;\n+        VLOG_IF(1, len > kMaxArrayLen) << \"Multi bulk len is too big \" << len;\n \n         return BAD_ARRAYLEN;\n       }\n@@ -297,14 +298,6 @@ auto RedisParser::ConsumeArrayLen(Buffer str) -> Result {\n auto RedisParser::ParseArg(Buffer str) -> Result {\n   char c = str[0];\n \n-  if (c == '_') {  // Resp3 NIL\n-    state_ = FINISH_ARG_S;\n-    cached_expr_->emplace_back(RespExpr::NIL);\n-    cached_expr_->back().u = Buffer{};\n-    last_consumed_ += 3;  // '_','\\r','\\n'\n-    return OK;\n-  }\n-\n   if (c == '$') {\n     int64_t len;\n \n@@ -340,6 +333,15 @@ auto RedisParser::ParseArg(Buffer str) -> Result {\n     return BAD_BULKLEN;\n   }\n \n+  if (c == '_') {  // Resp3 NIL\n+    // TODO: Do we need to validate that str[1:2] == \"\\r\\n\"?\n+    state_ = FINISH_ARG_S;\n+    cached_expr_->emplace_back(RespExpr::NIL);\n+    cached_expr_->back().u = Buffer{};\n+    last_consumed_ += 3;  // '_','\\r','\\n'\n+    return OK;\n+  }\n+\n   if (c == '*') {\n     return ConsumeArrayLen(str);\n   }\n",
  "test_patch": "diff --git a/src/facade/redis_parser_test.cc b/src/facade/redis_parser_test.cc\nindex 8d5c076c0664..2f2ef254e1e6 100644\n--- a/src/facade/redis_parser_test.cc\n+++ b/src/facade/redis_parser_test.cc\n@@ -191,4 +191,10 @@ TEST_F(RedisParserTest, LargeBulk) {\n   ASSERT_EQ(RedisParser::OK, Parse(\"\\r\\n\"));\n }\n \n+TEST_F(RedisParserTest, NILs) {\n+  ASSERT_EQ(RedisParser::BAD_BULKLEN, Parse(\"_\\r\\n\"));\n+  parser_.SetClientMode();\n+  ASSERT_EQ(RedisParser::OK, Parse(\"_\\r\\n\"));\n+}\n+\n }  // namespace facade\n",
  "problem_statement": "Server crashes on a malformed network request\n**Describe the bug**\r\nDragonfly server crashes (aborts) on a malformed network request.\r\n\r\n**To Reproduce**\r\n```\r\necho X4lQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgDAAAARKSKxgAAAMtpQ0NQmW9vAAAokWNgUzyTWFCQ\\\r\nwyTAwJCbV1IU5O6kEBEZpcAxBBKTiwscAwJ8GHCCb9cYGEH0ZV2QSrjVYQWcKanFyUD6AxCnlZcU\\\r\nlAAAMMYA2SJJ2WA2yDyRIqCjgOwGEDsdwp4CVgNhrwCrCQlyBrL3ANl8SUjsdCQ21C4Q4PHJzEtN\\\r\nLFIoBvqZRCcTBogw/BwIDhtGsTPo4YqqM5lmmf/MPkyvFQAKAAAADUlIACAAAAAgCAMAAABExVcG\\\r\nBkRSAAAAZAAAACAIAwAAAETFVwYG5gkIsaSZDNtbGRgkbgHEVBYwMPC3MDBsO59cWlQGNYYRZAUA\\\r\nE3U55welRYcAAAAPUExURWbMzP///wAAAC5/EQODUE5HDQoaAAAZdEVYdFNvZnR3YXJlAEFkb2Jl\\\r\nIEltYWdlUmVhZHlxyWU8AAAAW0lEQVQ4yt2TQQqAQAwDM83+/80eVNhF23rxoHPNQCC0okEQBSBi\\\r\n////f5TinwoAlXCsmwqAPRtXwZbAacWeF8JZUwhLfi9MeSI0S7oRliHfmvjsyck58eR5GzbSZgM1\\\r\nf8sMbQAAAABJRU5ErkJg | base64 -d | nc 127.0.0.1 6379\r\n```\r\n\r\n**Expected behavior**\r\nAn error should be returned instead of crashing. According to the crash log, an assertion was triggered which can probably be rewritten as an error handler.\r\n\r\n**Crash log from the server**\r\n```\r\n...\r\ndragonfly_connection.cc:879] Check failed: RespExpr::STRING == arg.type (0 vs. 4)\r\n*** Check failure stack trace: ***\r\n    @     0x555555aa8c53  (unknown)\r\n    @     0x555555aa1417  (unknown)\r\n...\r\n```\r\n\r\n**Environment**\r\nTested on the latest docker image.\r\n```\r\ndocker run --network=host --ulimit memlock=-1 docker.dragonflydb.io/dragonflydb/dragonfly\r\n```\r\n\r\nThanks.\r\n\n",
  "hints_text": "",
  "created_at": "2023-04-17T15:04:03Z",
  "modified_files": [
    "src/facade/redis_parser.cc"
  ],
  "modified_test_files": [
    "src/facade/redis_parser_test.cc"
  ]
}