You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
crash during connection migration
```
F20240211 10:58:17.426013 1814968 uring_socket.cc:373] Check failed: !error_cb_wrapper_ 
*** Check failure stack trace: ***
    @     0x55cd16b6ada7  google::LogMessage::SendToLog()
    @     0x55cd16b632e3  google::LogMessage::Flush()
    @     0x55cd16b64c7f  google::LogMessageFatal::~LogMessageFatal()
    @     0x55cd168c6587  util::fb2::UringSocket::RegisterOnErrorCb()
    @     0x55cd16481608  facade::Connection::OnPostMigrateThread()
    @     0x55cd16894b75  util::ListenerInterface::Migrate()
    @     0x55cd1647e1cb  facade::Connection::HandleMigrateRequest()
    @     0x55cd16481b04  facade::Connection::IoLoop()
    @     0x55cd16481eac  facade::Connection::ConnectionFlow()
    @     0x55cd16482e0d  facade::Connection::HandleRequests()
    @     0x55cd16894233  util::ListenerInterface::RunSingleConnection()

```

to reproduce, run dragonfly in build-opt: `./dragonfly --logtostderr --proactor_threads=2`
then  load the lua script with `redis-cli --eval ./fill.lua k2 , 100`
```lua
local function randomString(length)
	local chars = {}
	for i = 1, length do
		chars[i] = string.char(math.random(33, 126))
	end
	return table.concat(chars)
end

local upper = tonumber(ARGV[1])

for i = 1, upper do
    redis.call('zadd', KEYS[1], i, randomString(10))
end
```

and then run memtier: `memtier_benchmark  --command "evalsha f3be7dc8bd0e838ee3920321ce6999e9ae888e0f 1 __key__ 10000" --hide-histogram -n 1000 --distinct-client-seed --threads=2 -c 2 --key-maximum=1000000`
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
