You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
XRANGE incorrectly interprets the `end` parameter when only the timestamp portion is provided
### Describe the Bug
- `XRANGE key start end [COUNT count]` allows passing in `start` and `end` IDs with only the timestamp portion.
- For the `start` parameter, `XRANGE` auto-completes the sequence number to `0`, which is correct.
- For the `end` parameter, `XRANGE` also auto-completes the sequence number to `0`, **which is incorrect**.
- For the `end` parameter, **it should use the max value of an unsigned 64-bit integer as the sequence instead**.
- For instance:
  - `1609459200000` as the `start` parameter should be converted to `1609459200000-0`
  - `1609459200000` as the `end` parameter should be converted to `1609459200000-18446744073709551615`
- **Please double for check the `XREVRANGE` command as well** since the conversion logic should be the same.

### To Reproduce
- Start a Dragonfly server, and follow the commands below:

```shell
$> XADD mystream "1609459200000-0" sensor 0 temperature 0
"1609459200000-0"

$> XADD mystream "1609459200001-0" sensor 1 temperature 1
"1609459200001-0"

$> XADD mystream "1609459200001-1" sensor 2 temperature 2
"1609459200001-1"

$> XADD mystream "1609459200002-0" sensor 3 temperature 3
"1609459200002-0"

# Retrieve entries using only the timestamp portion of the IDs.
# The IDs are interpreted as "1609459200000-0" and "1609459200001-0".
$> XRANGE mystream "1609459200000" "1609459200001"
1) 1) "1609459200000-0"
   2) 1) "sensor"
      2) "0"
      3) "temperature"
      4) "0"
2) 1) "1609459200001-0"
   2) 1) "sensor"
      2) "1"
      3) "temperature"
      4) "1"

# Retrieve entries using only the timestamp portion of the IDs, with exclusive range for the end ID.
# The IDs are interpreted as "1609459200000-0" and "(1609459200001-0".
$> XRANGE mystream "1609459200000" "(1609459200001"
1) 1) "1609459200000-0"
   2) 1) "sensor"
      2) "0"
      3) "temperature"
      4) "0"
```

### Expected Behavior

```shell
# Add the same 4 stream entries as above.

# Retrieve entries using only the timestamp portion of the IDs.
# The IDs should be interpreted as "1609459200000-0" and "1609459200001-18446744073709551615"
$> XRANGE mystream "1609459200000" "1609459200001"
1) 1) "1609459200000-0"
   2) 1) "sensor"
      2) "0"
      3) "temperature"
      4) "0"
2) 1) "1609459200001-0"
   2) 1) "sensor"
      2) "1"
      3) "temperature"
      4) "1"
3) 1) "1609459200001-1"
   2) 1) "sensor"
      2) "2"
      3) "temperature"
      4) "2"

# Retrieve entries using only the timestamp portion of the IDs, with exclusive range for the end ID.
# Similarly, the IDs should be interpreted as "1609459200000-0" and "(1609459200001-18446744073709551615".
$> XRANGE mystream "1609459200000" "(1609459200001"
1) 1) "1609459200000-0"
   2) 1) "sensor"
      2) "0"
      3) "temperature"
      4) "0"
2) 1) "1609459200001-0"
   2) 1) "sensor"
      2) "1"
      3) "temperature"
      4) "1"
3) 1) "1609459200001-1"
   2) 1) "sensor"
      2) "2"
      3) "temperature"
      4) "2"
```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
