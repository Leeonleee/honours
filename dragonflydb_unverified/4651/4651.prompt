You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Deadlock inside Dns resolve function
**Describe the bug**
First of all: I am not entirely sure if this is a bug in our java redis cluster client library or in dragonfly itself.
However since i have already once created a ticket here where indeed dragonfly was not handling things truly like redis did, i want to create the issue here and see where it leads us.

We are seeing rising connections on our dragonfly instance after some time.
I suppose that the lattice library is refreshing its internal representation of the cluster topology, as we do get these entries (filtered for these) via the `client list` command:


<details>
  <summary>client list output</summary>

```
id=105831 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=12 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67701 idle=67701 db=0 flags=t phase=process lib-name= lib-ver=
id=105832 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=13 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67701 idle=67701 db=0 flags=t phase=process lib-name= lib-ver=
id=105835 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=15 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67693 idle=67693 db=0 flags=t phase=process lib-name= lib-ver=
id=105836 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=16 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67691 idle=67691 db=0 flags=t phase=process lib-name= lib-ver=
id=105837 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=19 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67691 idle=67691 db=0 flags=t phase=process lib-name= lib-ver=
id=105838 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=20 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67690 idle=67690 db=0 flags=t phase=process lib-name= lib-ver=
id=105839 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=21 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67690 idle=67690 db=0 flags=t phase=process lib-name= lib-ver=
id=105842 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=22 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67690 idle=67690 db=0 flags=t phase=process lib-name= lib-ver=
id=105849 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=24 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67657 idle=67657 db=0 flags=t phase=process lib-name= lib-ver=
id=105854 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=27 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67636 idle=67636 db=0 flags=t phase=process lib-name= lib-ver=
id=105857 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=31 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67624 idle=67624 db=0 flags=t phase=process lib-name= lib-ver=
id=105870 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=37 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67563 idle=67503 db=0 flags=at phase=shutting_down lib-name= lib-ver=
id=105889 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=38 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67477 idle=67477 db=0 flags=t phase=process lib-name= lib-ver=
id=105894 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=39 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67458 idle=67458 db=0 flags=t phase=process lib-name= lib-ver=
id=105899 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=40 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67438 idle=67438 db=0 flags=t phase=process lib-name= lib-ver=
id=105900 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=41 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67432 idle=67432 db=0 flags=t phase=process lib-name= lib-ver=
id=105905 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=42 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67418 idle=67418 db=0 flags=t phase=process lib-name= lib-ver=
id=105906 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=43 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67418 idle=67418 db=0 flags=t phase=process lib-name= lib-ver=
id=105907 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=44 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67416 idle=67416 db=0 flags=t phase=process lib-name= lib-ver=
id=105910 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=45 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67401 idle=67401 db=0 flags=t phase=process lib-name= lib-ver=
id=105911 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=46 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67401 idle=67401 db=0 flags=t phase=process lib-name= lib-ver=
id=105914 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=47 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67393 idle=67393 db=0 flags=t phase=process lib-name= lib-ver=
id=105915 addr=0.0.0.0:0 laddr=10.137.60.6:6379 fd=48 name=lettuce#ClusterTopologyRefresh tid=0 irqmatch=0 age=67391 idle=67331 db=0 flags=at phase=shutting_down lib-name= lib-ver=
```
</details>

They did have this issue in the past and say that it is fixed, so my hope is that this is just another small implementation detail like last time.

refs: https://github.com/redis/lettuce/issues/1736

**To Reproduce**
Steps to reproduce the behavior:
1. Create a dragonfly cluster in emulated mode with multiple replicas
2. Run a java application which is using the lattice library `io.lettuce:lettuce-core:6.5.0.RELEASE`
3. delete one pod after the other and wait for them to come back before proceeding with the next
4. See connection count rising

**Expected behavior**
Connection count should not increase with old aged connections.

**Screenshots**
-

**Environment (please complete the following information):**
 - OS: bottlerocket 1.26.1
 - Kernel: # Command: 6.1.112
 - Containerized?: Kubernetes
 - Dragonfly Version: 1.25.2

**Reproducible Code Snippet**
-

**Additional context**
-
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
