{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 1849,
  "instance_id": "dragonflydb__dragonfly-1849",
  "issue_numbers": [
    "1842"
  ],
  "base_commit": "02fff36e3e292baf0dc1b4d10680d2830efe2e4f",
  "patch": "diff --git a/src/server/server_family.cc b/src/server/server_family.cc\nindex 85a5f33c53f1..3aea9e90d617 100644\n--- a/src/server/server_family.cc\n+++ b/src/server/server_family.cc\n@@ -1101,16 +1101,21 @@ void ServerFamily::Config(CmdArgList args, ConnectionContext* cntx) {\n   }\n \n   if (sub_cmd == \"GET\" && args.size() == 2) {\n-    // Send empty response, like Redis does, unless the param is supported\n-\n-    string_view param = ArgS(args, 1);\n-    vector<string> names = config_registry.List(param);\n     vector<string> res;\n+    string_view param = ArgS(args, 1);\n \n-    for (const auto& name : names) {\n-      absl::CommandLineFlag* flag = CHECK_NOTNULL(absl::FindCommandLineFlag(name));\n-      res.push_back(name);\n-      res.push_back(flag->CurrentValue());\n+    // Support 'databases' for backward compatibility.\n+    if (param == \"databases\") {\n+      res.emplace_back(param);\n+      res.push_back(absl::StrCat(absl::GetFlag(FLAGS_dbnum)));\n+    } else {\n+      vector<string> names = config_registry.List(param);\n+\n+      for (const auto& name : names) {\n+        absl::CommandLineFlag* flag = CHECK_NOTNULL(absl::FindCommandLineFlag(name));\n+        res.push_back(name);\n+        res.push_back(flag->CurrentValue());\n+      }\n     }\n \n     return (*cntx)->SendStringArr(res, RedisReplyBuilder::MAP);\n",
  "test_patch": "diff --git a/tests/dragonfly/server_family_test.py b/tests/dragonfly/server_family_test.py\nindex dffc2f454ae9..759257e166c2 100644\n--- a/tests/dragonfly/server_family_test.py\n+++ b/tests/dragonfly/server_family_test.py\n@@ -63,6 +63,15 @@ async def test_connection_name(async_client: aioredis.Redis):\n     assert name == \"test_conn_name\"\n \n \n+async def test_get_databases(async_client: aioredis.Redis):\n+    \"\"\"\n+    make sure that the config get databases command is working\n+    to ensure compatibility with UI frameworks like AnotherRedisDesktopManager\n+    \"\"\"\n+    dbnum = await async_client.config_get(\"databases\")\n+    assert dbnum == {\"databases\": \"16\"}\n+\n+\n async def test_client_list(df_factory):\n     instance = df_factory.create(port=1111, admin_port=1112)\n     instance.start()\n",
  "problem_statement": "Error on Command CONFIG GET databases\nDescribe the bug\r\ndragonfly 1.9.0 no report number of databases\r\n\r\nTo Reproduce\r\nSteps to reproduce the behavior:\r\n\r\nredis-cli -p xxxx CONFIG GET databases\r\nGet empty array\r\nOn other versions this command return:\r\n1) \"databases\"\r\n2) \"24\"\r\n\r\nEnvironment (please complete the following information):\r\n\r\nOS: [ubuntu 22.04]\r\nKernel: # 5.15.0-73-generic\r\nContainerized?: Bare Metal\r\nDragonfly Version: 1.9.0\r\n\n",
  "hints_text": "Other commands, for example:\r\nconfig get maxmemory\r\nconfig get maxclients\r\n\r\nworks fine\nChanged in #1751. Dragonfly was using the `--dbnum` flag for this so `config get dbnum` still works. @romange was the alias removed intentionally?\n@fernandomacho does \"config get/set dbnum\" work for your use-case?\n In my case use flagfile config:\r\n--dbnum=24\r\n\nThe command:\r\n\r\nconfig get dbnum\r\n\r\nWorks fine.\r\nBut all visual clients for example \"Another Redis desktop manager\" or redisinsight read the param:\r\nCONFIG GET databases\nfair enough, I will bring it back.",
  "created_at": "2023-09-12T14:56:24Z",
  "modified_files": [
    "src/server/server_family.cc"
  ],
  "modified_test_files": [
    "tests/dragonfly/server_family_test.py"
  ]
}