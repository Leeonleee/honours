diff --git a/src/server/cluster/cluster_family_test.cc b/src/server/cluster/cluster_family_test.cc
index d523bb5ae35c..feaa1d6d5875 100644
--- a/src/server/cluster/cluster_family_test.cc
+++ b/src/server/cluster/cluster_family_test.cc
@@ -696,7 +696,7 @@ class ClusterFamilyEmulatedTest : public ClusterFamilyTest {
  public:
   ClusterFamilyEmulatedTest() {
     SetTestFlag("cluster_mode", "emulated");
-    SetTestFlag("cluster_announce_ip", "fake-host");
+    SetTestFlag("announce_ip", "fake-host");
   }
 };
 
diff --git a/tests/dragonfly/cluster_test.py b/tests/dragonfly/cluster_test.py
index 0e17ecf277f0..c9e2ef53e8a9 100644
--- a/tests/dragonfly/cluster_test.py
+++ b/tests/dragonfly/cluster_test.py
@@ -199,7 +199,9 @@ def test_cluster_pipeline(self, cluster_client: redis.RedisCluster):
         assert val == [True, "bar"]
 
 
-@dfly_args({"cluster_mode": "emulated", "cluster_announce_ip": "127.0.0.2"})
+# Unfortunately we can't test --announce_port here because that causes the Python Cluster client to
+# throw if it can't access the port in `CLUSTER SLOTS` :|
+@dfly_args({"cluster_mode": "emulated", "announce_ip": "127.0.0.2"})
 class TestEmulatedWithAnnounceIp:
     def test_cluster_slots_command(self, df_server, cluster_client: redis.RedisCluster):
         expected = {(0, 16383): {"primary": ("127.0.0.2", df_server.port), "replicas": []}}
@@ -323,7 +325,7 @@ async def test_emulated_cluster_with_replicas(df_factory):
     await close_clients(c_master, *c_replicas)
 
 
-@dfly_args({"cluster_mode": "emulated", "cluster_announce_ip": "127.0.0.2"})
+@dfly_args({"cluster_mode": "emulated"})
 async def test_cluster_info(async_client):
     res = await async_client.execute_command("CLUSTER INFO")
     assert len(res) == 16
@@ -347,7 +349,7 @@ async def test_cluster_info(async_client):
     }
 
 
-@dfly_args({"cluster_mode": "emulated", "cluster_announce_ip": "127.0.0.2"})
+@dfly_args({"cluster_mode": "emulated", "announce_ip": "127.0.0.2"})
 @pytest.mark.asyncio
 async def test_cluster_nodes(df_server, async_client):
     res = await async_client.execute_command("CLUSTER NODES")
diff --git a/tests/dragonfly/replication_test.py b/tests/dragonfly/replication_test.py
index da027b8d7dac..f80984db3d44 100644
--- a/tests/dragonfly/replication_test.py
+++ b/tests/dragonfly/replication_test.py
@@ -2213,3 +2213,24 @@ async def test_replica_reconnect(df_factory, break_conn):
     assert await c_replica.execute_command("get k") == "6789"
 
     await disconnect_clients(c_master, c_replica)
+
+
+@pytest.mark.asyncio
+async def test_announce_ip_port(df_factory):
+    master = df_factory.create()
+    replica = df_factory.create(announce_ip="overrode-host", announce_port="1337")
+
+    master.start()
+    replica.start()
+
+    # Connect clients, connect replica to master
+    c_master = master.client()
+    c_replica = replica.client()
+    await c_replica.execute_command(f"REPLICAOF localhost {master.port}")
+    await wait_available_async(c_replica)
+
+    role, node = await c_master.execute_command("role")
+    assert role == "master"
+    host, port, _ = node[0]
+    assert host == "overrode-host"
+    assert port == "1337"
