{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 5133,
  "instance_id": "dragonflydb__dragonfly-5133",
  "issue_numbers": [
    "5132"
  ],
  "base_commit": "62833a29c7eb407731ecb75d3082045506161a6d",
  "patch": "diff --git a/src/facade/reply_capture.cc b/src/facade/reply_capture.cc\nindex 9a03d6039808..4d6380a2d29a 100644\n--- a/src/facade/reply_capture.cc\n+++ b/src/facade/reply_capture.cc\n@@ -85,7 +85,7 @@ void CapturingReplyBuilder::Capture(Payload val, bool collapse_if_needed) {\n   if (!stack_.empty()) {\n     auto& last = stack_.top();\n     last.first->arr.push_back(std::move(val));\n-    if (collapse_if_needed && last.second-- == 1) {\n+    if (last.second-- == 1 && collapse_if_needed) {\n       CollapseFilledCollections();\n     }\n   } else {\ndiff --git a/src/server/debugcmd.cc b/src/server/debugcmd.cc\nindex b195c46aafa7..a3f986491e52 100644\n--- a/src/server/debugcmd.cc\n+++ b/src/server/debugcmd.cc\n@@ -954,6 +954,10 @@ void DebugCmd::Exec(facade::SinkReplyBuilder* builder) {\n \n void DebugCmd::LogTraffic(CmdArgList args, facade::SinkReplyBuilder* builder) {\n   optional<string> path;\n+  if (ProactorBase::me()->GetKind() != ProactorBase::IOURING) {\n+    return builder->SendError(\"Traffic recording supported only on iouring\");\n+  }\n+\n   if (args.size() == 1 && absl::AsciiStrToUpper(facade::ToSV(args.front())) != \"STOP\"sv) {\n     path = ArgS(args, 0);\n     LOG(INFO) << \"Logging to traffic to \" << *path << \"*.bin\";\n",
  "test_patch": "diff --git a/src/facade/reply_builder_test.cc b/src/facade/reply_builder_test.cc\nindex 72d1791280c4..977aa0a60f08 100644\n--- a/src/facade/reply_builder_test.cc\n+++ b/src/facade/reply_builder_test.cc\n@@ -807,8 +807,6 @@ TEST_F(RedisReplyBuilderTest, SendLabeledScoredArray) {\n }\n \n TEST_F(RedisReplyBuilderTest, BasicCapture) {\n-  GTEST_SKIP() << \"Unmark when CaptuingReplyBuilder is updated\";\n-\n   using namespace std;\n   string_view kTestSws[] = {\"a1\"sv, \"a2\"sv, \"a3\"sv, \"a4\"sv};\n \n@@ -868,8 +866,8 @@ TEST_F(RedisReplyBuilderTest, BasicCapture) {\n   for (auto& f : funcs) {\n     f(builder_.get());\n     auto expected = TakePayload();\n-    // f(&crb);\n-    // CapturingReplyBuilder::Apply(crb.Take(), builder_.get());\n+    f(&crb);\n+    CapturingReplyBuilder::Apply(crb.Take(), builder_.get());\n     auto actual = TakePayload();\n     EXPECT_EQ(expected, actual);\n   }\n",
  "problem_statement": "Dragonfly 1.30 crashes during Sidekiq CI\n**Describe the bug**\nDragonfly 1.29 works, 1.30 crashes.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Start docker image on macOS or Linux.\n2. Run Sidekiq test suite.\n\n\n```\nI20250514 18:49:28.505877     1 dfly_main.cc:752] Starting dragonfly df-v1.30.0-561c0a47338791905f167de6faa12a38bc66a272\nW20250514 18:49:28.506024     1 dfly_main.cc:791] SWAP is enabled. Consider disabling it when running Dragonfly.\nI20250514 18:49:28.506065     1 dfly_main.cc:796] maxmemory has not been specified. Deciding myself....\nI20250514 18:49:28.506071     1 dfly_main.cc:805] Found 3.43GiB available memory. Setting maxmemory to 2.74GiB\nW20250514 18:49:28.506179     1 dfly_main.cc:375] Weird error 1 switching to epoll\nI20250514 18:49:28.506762     1 proactor_pool.cc:149] Running 8 io threads\nI20250514 18:49:28.511287     1 server_family.cc:839] Host OS: Linux 6.13.7-orbstack-00283-g9d1400e7e9c6 aarch64 with 8 threads\nI20250514 18:49:28.511831     1 snapshot_storage.cc:182] Load snapshot: Searching for snapshot in directory: \"/data\"\nW20250514 18:49:28.511868     1 server_family.cc:938] Load snapshot: No snapshot found\nI20250514 18:49:28.515223    12 listener_interface.cc:101] sock[19] AcceptServer - listening on port 6379\nF20250514 18:49:35.228960    13 reply_capture.cc:65] Check failed: stack_.empty() \n*** Check failure stack trace: ***\n    @     0xaaaab9c6c104  google::LogMessage::SendToLog()\n    @     0xaaaab9c64fe8  google::LogMessage::Flush()\n    @     0xaaaab9c66924  google::LogMessageFatal::~LogMessageFatal()\n    @     0xaaaab96ba33c  facade::CapturingReplyBuilder::Take()\n    @     0xaaaab940840c  dfly::MultiCommandSquasher::SquashedHopCb()\n    @     0xaaaab94090b4  _ZN4absl12lts_2024072219functional_internal12InvokeObjectIZN4dfly20MultiCommandSquasher15ExecuteSquashedEPN6facade17RedisReplyBuilderEEUlPT_PT0_E0_NS3_11Transaction14RunnableResultEJPSD_PNS3_11EngineShardEEEESA_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n    @     0xaaaab95d9ed8  dfly::Transaction::RunCallback()\n    @     0xaaaab95dc6e8  dfly::Transaction::RunInShard()\n    @     0xaaaab952309c  dfly::EngineShard::PollExecution()\n    @     0xaaaab95d52d4  _ZNSt17_Function_handlerIFvvEZN4dfly11Transaction11DispatchHopEvEUlvE1_E9_M_invokeERKSt9_Any_data\n    @     0xaaaab9ab4d20  util::fb2::FiberQueue::Run()\n    @     0xaaaab962cc04  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberEN4util3fb219FixedStackAllocatorEZNS6_6detail15WorkerFiberImplIZN4dfly9TaskQueue5StartESt17basic_string_viewIcSt11char_traitsIcEEEUlvE_JEEC4IS7_EESF_NS6_13FiberPriorityERKNS0_12preallocatedEOT_OSG_EUlOS4_E_EEEEvNS1_10transfer_tE\n    @     0xaaaab9ad4f94  make_fcontext\n*** SIGABRT received at time=1747248575 on cpu 2 ***\nPC: @     0xffff8edef1f0  (unknown)  (unknown)\n    @     0xaaaab9cc2214        480  absl::lts_20240722::AbslFailureSignalHandler()\n    @     0xffff8f070868       4960  (unknown)\n    @     0xffff8edaa67c        208  gsignal\n    @     0xffff8ed97130         32  abort\n    @     0xaaaab9c71bc4        336  google::DumpStackTraceAndExit()\n    @     0xaaaab9c655e4        192  google::LogMessage::Fail()\n    @     0xaaaab9c6c104         16  google::LogMessage::SendToLog()\n    @     0xaaaab9c64fe8        208  google::LogMessage::Flush()\n    @     0xaaaab9c66924         80  google::LogMessageFatal::~LogMessageFatal()\n    @     0xaaaab96ba33c         16  facade::CapturingReplyBuilder::Take[abi:cxx11]()\n    @     0xaaaab940840c        240  dfly::MultiCommandSquasher::SquashedHopCb()\n    @     0xaaaab94090b4       1392  absl::lts_20240722::functional_internal::InvokeObject<>()\n    @     0xaaaab95d9ed8         16  dfly::Transaction::RunCallback()\n    @     0xaaaab95dc6e8        288  dfly::Transaction::RunInShard()\n    @     0xaaaab952309c        352  dfly::EngineShard::PollExecution()\n    @     0xaaaab95d52d4        336  std::_Function_handler<>::_M_invoke()\n    @     0xaaaab9ab4d20        144  util::fb2::FiberQueue::Run()\n    @     0xaaaab962cc04        304  boost::context::detail::fiber_entry<>()\n[failure_signal_handler.cc : 345] RAW: Signal 5 raised at PC=0xffff8ed971ec while already in AbslFailureSignalHandler()\n*** SIGTRAP received at time=1747248575 on cpu 2 ***\nPC: @     0xffff8ed971ec  (unknown)  abort\n    @     0xaaaab9cc2214        480  absl::lts_20240722::AbslFailureSignalHandler()\n    @     0xffff8f070868       4960  (unknown)\n    @     0xaaaab9c71bc4        336  google::DumpStackTraceAndExit()\n    @     0xaaaab9c655e4        192  google::LogMessage::Fail()\n    @     0xaaaab9c6c104         16  google::LogMessage::SendToLog()\n    @     0xaaaab9c64fe8        208  google::LogMessage::Flush()\n    @     0xaaaab9c66924         80  google::LogMessageFatal::~LogMessageFatal()\n    @     0xaaaab96ba33c         16  facade::CapturingReplyBuilder::Take[abi:cxx11]()\n    @     0xaaaab940840c        240  dfly::MultiCommandSquasher::SquashedHopCb()\n    @     0xaaaab94090b4       1392  absl::lts_20240722::functional_internal::InvokeObject<>()\n    @     0xaaaab95d9ed8         16  dfly::Transaction::RunCallback()\n    @     0xaaaab95dc6e8        288  dfly::Transaction::RunInShard()\n    @     0xaaaab952309c        352  dfly::EngineShard::PollExecution()\n    @     0xaaaab95d52d4        336  std::_Function_handler<>::_M_invoke()\n    @     0xaaaab9ab4d20        144  util::fb2::FiberQueue::Run()\n    @     0xaaaab962cc04        304  boost::context::detail::fiber_entry<>()\nsrc/sidekiq (main *) % \n```\n",
  "hints_text": "This is with macOS 15.4 and OrbStack. Also crashes on Github's CI runner running \"real\" Linux.\nv1.29.0 works. v1.30.0 crashes.\nThanks @mperham  hwo can we reproduce it?\n1. git clone github.com/sidekiq/sidekiq\n2. Run `bundle` once to download deps.\n3. Run `bundle exec rake` every time you want to run the test suite.\n[This PR](https://github.com/dragonflydb/dragonfly/pull/5012) caused the regression. I will create a patch release.\nI think the bug is at this line: https://github.com/dragonflydb/dragonfly/pull/5012/files#diff-679cf896d933163d3fd05ceaadba85581f25b421d4a316daa555c6ce2fa4b5adR88",
  "created_at": "2025-05-14T20:31:41Z",
  "modified_files": [
    "src/facade/reply_capture.cc",
    "src/server/debugcmd.cc"
  ],
  "modified_test_files": [
    "src/facade/reply_builder_test.cc"
  ]
}