diff --git a/tests/dragonfly/conftest.py b/tests/dragonfly/conftest.py
index b0942bd02cdc..635ac565eac2 100644
--- a/tests/dragonfly/conftest.py
+++ b/tests/dragonfly/conftest.py
@@ -254,7 +254,7 @@ def port_picker():
 
 @pytest.fixture(scope="function")
 def memcached_client(df_server: DflyInstance):
-    client = pymemcache.Client(f"localhost:{df_server.mc_port}", default_noreply=False)
+    client = pymemcache.Client(f"127.0.0.1:{df_server.mc_port}", default_noreply=False)
 
     yield client
 
diff --git a/tests/dragonfly/pymemcached_test.py b/tests/dragonfly/pymemcached_test.py
index 9316fcbcaabb..0578c0d11f8b 100644
--- a/tests/dragonfly/pymemcached_test.py
+++ b/tests/dragonfly/pymemcached_test.py
@@ -2,8 +2,9 @@
 from . import dfly_args
 from .instance import DflyInstance
 import socket
+import random
 
-DEFAULT_ARGS = {"memcached_port": 12111, "proactor_threads": 4}
+DEFAULT_ARGS = {"memcached_port": 11211, "proactor_threads": 4}
 
 # Generic basic tests
 
@@ -122,3 +123,14 @@ def test_version(memcached_client: MCClient):
     stats = memcached_client.stats()
     version = stats[b"version"].decode("utf-8")
     assert version.startswith("v") or version == "dev"
+
+
+@dfly_args(DEFAULT_ARGS)
+def test_flags(memcached_client: MCClient):
+    for i in range(1, 20):
+        flags = random.randrange(50, 1000)
+        memcached_client.set("a", "real-value", flags=flags, noreply=True)
+
+        res = memcached_client.raw_command("get a", "END\r
").split()
+        if len(res) > 0:
+            assert res[2].decode() == str(flags)
