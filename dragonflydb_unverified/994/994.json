{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 994,
  "instance_id": "dragonflydb__dragonfly-994",
  "issue_numbers": [
    "993"
  ],
  "base_commit": "ef4062d81723bb33f249c7543572886f8a84ab7b",
  "patch": "diff --git a/src/server/hset_family.cc b/src/server/hset_family.cc\nindex 29c889a8b650..94ac497546aa 100644\n--- a/src/server/hset_family.cc\n+++ b/src/server/hset_family.cc\n@@ -1103,15 +1103,15 @@ StringMap* HSetFamily::ConvertToStrMap(uint8_t* lp) {\n   sm->Reserve(lplen / 2);\n \n   uint8_t* lp_elem = lpFirst(lp);\n-  uint8_t intbuf[LP_INTBUF_SIZE];\n+  uint8_t intbuf[2][LP_INTBUF_SIZE];\n \n   DCHECK(lp_elem);  // empty containers are not allowed.\n \n   do {\n-    string_view key = LpGetView(lp_elem, intbuf);\n+    string_view key = LpGetView(lp_elem, intbuf[0]);\n     lp_elem = lpNext(lp, lp_elem);  // switch to value\n     DCHECK(lp_elem);\n-    string_view value = LpGetView(lp_elem, intbuf);\n+    string_view value = LpGetView(lp_elem, intbuf[1]);\n     lp_elem = lpNext(lp, lp_elem);       // switch to next key\n     CHECK(sm->AddOrUpdate(key, value));  // must be unique\n   } while (lp_elem);\n",
  "test_patch": "diff --git a/src/server/hset_family_test.cc b/src/server/hset_family_test.cc\nindex e281e58e5306..5be16d1f9fe1 100644\n--- a/src/server/hset_family_test.cc\n+++ b/src/server/hset_family_test.cc\n@@ -215,4 +215,14 @@ TEST_F(HSetFamilyTest, HSetEx) {\n   EXPECT_THAT(Run({\"HGET\", \"k\", \"f\"}), ArgType(RespExpr::NIL));\n }\n \n+TEST_F(HSetFamilyTest, TriggerConvertToStrMap) {\n+  const int kElements = 200;\n+  // Enough for IsGoodForListpack to become false\n+  for (size_t i = 0; i < kElements; i++) {\n+    auto k = absl::StrCat(100500700u + i);\n+    Run({\"HSET\", \"hk\", k, \"100500700\"});\n+  }\n+  EXPECT_THAT(Run({\"HLEN\", \"hk\"}), IntArg(kElements));\n+}\n+\n }  // namespace dfly\n",
  "problem_statement": "Server misbehaving on Golang benchmarks\n**Describe the bug**\r\nDragonfly docker container exit on benchmarks\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone repository with benchmarks on Golang\r\n```bash\r\ngit clone --branch dragonflydb-server-misbehaving https://github.com/doutivity/research-online-redis-go.git\r\n```\r\n2. Up\r\n```bash\r\ndocker-compose up -d # or make env-up\r\n```\r\n\r\n3. See containers and DragonflyDB docker image version\r\n```bash\r\ndocker ps\r\n```\r\n```text\r\nCONTAINER ID   IMAGE                                         COMMAND                  CREATED          STATUS                    PORTS      NAMES\r\n1b9eb22dabfb   golang:1.20.0-alpine                          \"sleep 1d\"               21 minutes ago   Up 21 minutes                        research-online-redis-go-app\r\n3e30488a2868   eqalpha/keydb:latest                          \"docker-entrypoint.s\u2026\"   21 minutes ago   Up 21 minutes             6379/tcp   research-online-keydb-1\r\n929c4c9fb81c   docker.dragonflydb.io/dragonflydb/dragonfly   \"entrypoint.sh drago\u2026\"   21 minutes ago   Up 10 minutes (healthy)   6379/tcp   research-online-dragonflydb-1\r\n3a41ada90d8a   redis:latest                                  \"docker-entrypoint.s\u2026\"   21 minutes ago   Up 21 minutes             6379/tcp   research-online-redis-1\r\n```\r\n```bash\r\ndocker image inspect docker.dragonflydb.io/dragonflydb/dragonfly --format '{{.RepoDigests}}'\r\n```\r\n```text\r\n[docker.dragonflydb.io/dragonflydb/dragonfly@sha256:a588d8f6924742772253e669dd088b31e17207967563b435401d0a8a9293b09d]\r\n```\r\n4. Monitor DragonflyDB container logs in **Terminal 1**\r\n```bash\r\ndocker logs -f research-online-dragonflydb-1\r\n```\r\n```text\r\nI20230326 05:15:07.822724     1 init.cc:56] dragonfly running in opt mode.\r\nI20230326 05:15:07.822762     1 dfly_main.cc:476] Starting dragonfly df-v1.0.0-bb78c6eae3ad8a46f5bfc5fca8d99aed5758cd75\r\nI20230326 05:15:07.822789     1 dfly_main.cc:499] maxmemory has not been specified. Deciding myself....\r\nI20230326 05:15:07.822846     1 dfly_main.cc:504] Found 6.23GiB available memory. Setting maxmemory to 4.98GiB\r\nI20230326 05:15:07.847543    19 proactor.cc:413] IORing with 1024 entries, allocated 102720 bytes, cq_entries is 2048\r\nI20230326 05:15:07.875667     1 proactor_pool.cc:66] Running 12 io threads\r\nI20230326 05:15:07.887950     1 server_family.cc:422] Data directory is \"/data\"\r\nI20230326 05:15:07.888072    11 listener_interface.cc:86] sock[39] AcceptServer - listening on port 6379\r\n```\r\n5. In steps 1-4 all fine\r\n6. Run benchmarks for Redis, KeyDB and DragonflyDB in **Terminal 2**\r\n```bash\r\ndocker exec research-online-redis-go-app go test ./... -v -bench=. -benchmem -benchtime=1000x -count=10 # or make bench\r\n```\r\n```text\r\nBenchmarkKeydbHashOnlineStorage-12               \t    1000\t     15060 ns/op\t     373 B/op\t      10 allocs/op\r\nBenchmarkKeydbHashOnlineStorage-12               \t    1000\t     14848 ns/op\t     379 B/op\t      10 allocs/op\r\nBenchmarkKeydbHashOnlineStorage-12               \t    1000\t     14501 ns/op\t     378 B/op\t      10 allocs/op\r\nBenchmarkDragonflydbHashOnlineStorage\r\n    online_storage_test.go:86: \r\n        \tError Trace:\t/go/src/github.com/doutivity/research-online-redis-go/online_storage_test.go:86\r\n        \t            \t\t\t\t/usr/local/go/src/testing/benchmark.go:815\r\n        \t            \t\t\t\t/usr/local/go/src/runtime/asm_amd64.s:1598\r\n        \tError:      \tReceived unexpected error:\r\n        \t            \tdial tcp: lookup dragonflydb1 on 127.0.0.11:53: server misbehaving\r\n        \tTest:       \tBenchmarkDragonflydbHashOnlineStorage\r\n```\r\n7. Go to logs in **Terminal 1**\r\n```text\r\nF20230326 05:18:15.663136    16 hset_family.cc:1112] Check failed: sm->AddOrUpdate(key, value) \r\n*** Check failure stack trace: ***\r\n    @     0x55a25f1b6c73  google::LogMessage::SendToLog()\r\n    @     0x55a25f1af437  google::LogMessage::Flush()\r\n    @     0x55a25f1b0dbf  google::LogMessageFatal::~LogMessageFatal()\r\n    @     0x55a25ee586bf  dfly::HSetFamily::ConvertToStrMap()\r\n    @     0x55a25ee58db3  dfly::(anonymous namespace)::OpSet()\r\n    @     0x55a25ee58fce  _ZNSt17_Function_handlerIFN6facade8OpStatusEPN4dfly11TransactionEPNS2_11EngineShardEEZNS3_18ScheduleSingleHopTIZNS2_10HSetFamily4HSetEN4absl12lts_202301254SpanINSC_IcEEEEPNS2_17ConnectionContextEEUlS4_S6_E_EEDTclfp_fpTLDn0EEEOT_EUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_\r\n    @     0x55a25eda5344  _ZNSt17_Function_handlerIFvvEZN4dfly11Transaction17ScheduleSingleHopESt8functionIFN6facade8OpStatusEPS2_PNS1_11EngineShardEEEEUlvE_E9_M_invokeERKSt9_Any_data.lto_priv.0\r\n    @     0x55a25ed6da61  util::fibers_ext::FiberQueue::Run()\r\n    @     0x55a25edc3138  _ZN5boost6fibers14worker_contextIZN4dfly11EngineShardC4EPN4util12ProactorBaseEbP9mi_heap_sEUlvE0_JEE4run_EONS_7context5fiberE\r\n    @     0x55a25edbc2a3  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberENS0_21basic_fixedsize_stackINS0_12stack_traitsEEESt5_BindIFMNS_6fibers14worker_contextIZN4dfly11EngineShardC4EPN4util12ProactorBaseEbP9mi_heap_sEUlvE0_JEEEFS4_OS4_EPSJ_St12_PlaceholderILi1EEEEEEEEvNS1_10transfer_tE\r\n    @     0x55a25f23c0bf  make_fcontext\r\n*** SIGABRT received at time=1679807895 on cpu 7 ***\r\nPC: @     0x7fbe5bb0700b  (unknown)  raise\r\n[failure_signal_handler.cc : 332] RAW: Signal 11 raised at PC=0x7fbe5bae6941 while already in AbslFailureSignalHandler()\r\n*** SIGSEGV received at time=1679807895 on cpu 7 ***\r\nPC: @     0x7fbe5bae6941  (unknown)  abort\r\n```\r\n\r\n**Expected behavior**\r\nHave to success as Redis and KeyDB\r\n\r\n**Screenshots**\r\nAlready add logs\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 20.04\r\n - Kernel: ```Linux yaroslav-G3-3579 5.15.0-67-generic #74~20.04.1-Ubuntu SMP Wed Feb 22 14:52:34 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux```\r\n - Containerized: docker-compose \r\n - Dragonfly Version: df-v1.0.0-bb78c6eae3ad8a46f5bfc5fca8d99aed5758cd75 from docker logs\r\n\r\n**Reproducible Code Snippet**\r\nhttps://github.com/doutivity/research-online-redis-go/tree/dragonflydb-server-misbehaving\r\n\r\n**Additional context**\r\nWhen try run benchmarks with less iterations then DragonflyDB works:\r\n```bash\r\ndocker exec research-online-redis-go-app go test ./... -v -bench=. -benchmem -benchtime=50x -count=10 | tee all-bench-10.txt\r\nbenchstat all-bench-10.txt\r\n```\r\n```text\r\nBenchmarkDragonflydbSortedSetOnlineStorage-12    \t      50\t     23309 ns/op\t    2866 B/op\t      23 allocs/op\r\nPASS\r\nok  \tgithub.com/doutivity/research-online-redis-go\t1.190s\r\nbenchstat all-bench-10.txt\r\nname                                  time/op\r\nRedisHashOnlineStorage-12             79.1\u00b5s \u00b147%\r\nKeydbHashOnlineStorage-12             43.0\u00b5s \u00b154%\r\nDragonflydbHashOnlineStorage-12       27.9\u00b5s \u00b117%\r\nRedisSortedSetOnlineStorage-12        25.5\u00b5s \u00b1 8%\r\nKeydbSortedSetOnlineStorage-12        28.8\u00b5s \u00b115%\r\nDragonflydbSortedSetOnlineStorage-12  24.2\u00b5s \u00b111%\r\n\r\nname                                  alloc/op\r\nRedisHashOnlineStorage-12             2.96kB \u00b1 2%\r\nKeydbHashOnlineStorage-12             2.95kB \u00b1 3%\r\nDragonflydbHashOnlineStorage-12       2.86kB \u00b1 3%\r\nRedisSortedSetOnlineStorage-12        3.01kB \u00b1 3%\r\nKeydbSortedSetOnlineStorage-12        2.98kB \u00b1 3%\r\nDragonflydbSortedSetOnlineStorage-12  2.86kB \u00b1 0%\r\n\r\nname                                  allocs/op\r\nRedisHashOnlineStorage-12               27.0 \u00b1 0%\r\nKeydbHashOnlineStorage-12               27.0 \u00b1 0%\r\nDragonflydbHashOnlineStorage-12         23.0 \u00b1 0%\r\nRedisSortedSetOnlineStorage-12          27.0 \u00b1 0%\r\nKeydbSortedSetOnlineStorage-12          27.0 \u00b1 0%\r\nDragonflydbSortedSetOnlineStorage-12    23.0 \u00b1 0%\r\n```\n",
  "hints_text": "@YaroslavPodorvanov  thank you! Will be fixed.",
  "created_at": "2023-03-26T08:33:38Z",
  "modified_files": [
    "src/server/hset_family.cc"
  ],
  "modified_test_files": [
    "src/server/hset_family_test.cc"
  ]
}