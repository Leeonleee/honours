{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 5303,
  "instance_id": "dragonflydb__dragonfly-5303",
  "issue_numbers": [
    "5272"
  ],
  "base_commit": "eb3074ce14090ad4e5e30af403761fbf219b45fa",
  "patch": "diff --git a/src/server/multi_command_squasher.cc b/src/server/multi_command_squasher.cc\nindex 8caf9f77ee25..92dace25f63b 100644\n--- a/src/server/multi_command_squasher.cc\n+++ b/src/server/multi_command_squasher.cc\n@@ -153,10 +153,14 @@ bool MultiCommandSquasher::ExecuteStandalone(RedisReplyBuilder* rb, const Stored\n   auto* tx = cntx_->transaction;\n   if (cmd->Cid()->IsTransactional()) {\n     tx->MultiSwitchCmd(cmd->Cid());\n-    tx->InitByArgs(cntx_->ns, cntx_->conn_state.db_index, args);\n+    auto status = tx->InitByArgs(cntx_->ns, cntx_->conn_state.db_index, args);\n+    if (status != OpStatus::OK) {\n+      rb->SendError(status);\n+      rb->ConsumeLastError();\n+      return !opts_.error_abort;\n+    }\n   }\n   service_->InvokeCmd(cmd->Cid(), args, CommandContext{tx, rb, cntx_});\n-\n   return true;\n }\n \n@@ -195,10 +199,13 @@ OpStatus MultiCommandSquasher::SquashedHopCb(EngineShard* es, RespVersion resp_v\n     crb.SetReplyMode(dispatched.cmd->ReplyMode());\n \n     local_tx->MultiSwitchCmd(dispatched.cmd->Cid());\n-    local_tx->InitByArgs(cntx_->ns, local_cntx.conn_state.db_index, args);\n-    service_->InvokeCmd(dispatched.cmd->Cid(), args,\n-                        CommandContext{local_cntx.transaction, &crb, &local_cntx});\n-\n+    auto status = local_tx->InitByArgs(cntx_->ns, local_cntx.conn_state.db_index, args);\n+    if (status != OpStatus::OK) {\n+      crb.SendError(status);\n+    } else {\n+      service_->InvokeCmd(dispatched.cmd->Cid(), args,\n+                          CommandContext{local_cntx.transaction, &crb, &local_cntx});\n+    }\n     move_reply(crb.Take(), &dispatched.reply);\n \n     // Assert commands made no persistent state changes to stub context state\ndiff --git a/src/server/transaction.cc b/src/server/transaction.cc\nindex 168a22c30266..17b8c9e86395 100644\n--- a/src/server/transaction.cc\n+++ b/src/server/transaction.cc\n@@ -307,12 +307,14 @@ void Transaction::PrepareMultiFps(CmdArgList keys) {\n }\n \n void Transaction::StoreKeysInArgs(const KeyIndex& key_index) {\n-  DCHECK(!key_index.bonus);\n   DCHECK(kv_fp_.empty());\n   DCHECK(args_slices_.empty());\n \n   // even for a single key we may have multiple arguments per key (MSET).\n+  if (key_index.bonus)\n+    args_slices_.emplace_back(*key_index.bonus, *key_index.bonus + 1);\n   args_slices_.emplace_back(key_index.start, key_index.end);\n+\n   for (string_view key : key_index.Range(full_args_))\n     kv_fp_.push_back(LockTag(key).Fingerprint());\n }\n",
  "test_patch": "diff --git a/src/server/multi_test.cc b/src/server/multi_test.cc\nindex 57456149e86e..74606cb2cb97 100644\n--- a/src/server/multi_test.cc\n+++ b/src/server/multi_test.cc\n@@ -330,6 +330,29 @@ TEST_F(MultiTest, MultiWithoutTx) {\n   EXPECT_EQ(resp.GetVec()[4], \"OK3\");\n }\n \n+TEST_F(MultiTest, MultiCommandsWithBonusKeys) {\n+  absl::FlagSaver fs;\n+  absl::SetFlag(&FLAGS_multi_exec_squash, true);\n+\n+  EXPECT_EQ(Shard(\"za\", shard_set->size()), Shard(\"zb\", shard_set->size()));\n+  EXPECT_EQ(Shard(\"zb\", shard_set->size()), Shard(\"ze\", shard_set->size()));\n+\n+  // Check bonus keys are correctly processed with squashing\n+  Run({\"multi\"});\n+  Run({\"zadd\", \"za\", \"1\", \"a\", \"2\", \"b\"});\n+  Run({\"zadd\", \"zb\", \"2\", \"b\", \"3\", \"c\"});\n+  Run({\"zinterstore\", \"ze\", \"2\", \"za\", \"zb\"});\n+  auto resp = Run({\"exec\"});\n+  EXPECT_THAT(resp.GetVec()[2], IntArg(1));\n+  EXPECT_THAT(Run({\"zcard\", \"ze\"}), IntArg(1));\n+\n+  // Check squashing correctly pre-validates commands\n+  Run({\"multi\"});\n+  Run({\"zinterstore\", \"ze\", \"2\", \"za\", \"zb\", \"z one extra\"});\n+  resp = Run({\"exec\"});\n+  EXPECT_THAT(resp, ErrArg(\"syntax error\"));\n+}\n+\n TEST_F(MultiTest, MultiHop) {\n   Run({\"set\", kKey1, \"1\"});\n \n",
  "problem_statement": "Crash in transaction.cc - Check failed: !key_index.bonus\nSteps to reproduction:\n- Start the `traffic-replay` tool on the recorded traffic\n- Wait 11.5 minutes\n\n[traffic.tar.gz](https://github.com/user-attachments/files/20686075/traffic.tar.gz)\n\nThe crash log:\n```\nF20250611 10:09:57.899080  1992 transaction.cc:310] Check failed: !key_index.bonus \n*** Check failure stack trace: ***\n    @     0x59fc446b24d3  google::LogMessage::Fail()\n    @     0x59fc446b2419  google::LogMessage::SendToLog()\n    @     0x59fc446b1bcc  google::LogMessage::Flush()\n    @     0x59fc446b5cc4  google::LogMessageFatal::~LogMessageFatal()\n    @     0x59fc442061f9  dfly::Transaction::StoreKeysInArgs()\n    @     0x59fc442068a0  dfly::Transaction::InitByKeys()\n    @     0x59fc4420792f  dfly::Transaction::InitByArgs()\n    @     0x59fc43fd6ac3  dfly::MultiCommandSquasher::SquashedHopCb()\n    @     0x59fc43fd6eb5  _ZZN4dfly20MultiCommandSquasher15ExecuteSquashedEPN6facade17RedisReplyBuilderEENKUlPT_PT0_E_clINS_11TransactionENS_11EngineShardEEEDaS5_S7_\n    @     0x59fc43fda1dd  _ZSt13__invoke_implIN6facade8OpStatusERKZN4dfly20MultiCommandSquasher15ExecuteSquashedEPNS0_17RedisReplyBuilderEEUlPT_PT0_E_JPNS2_11TransactionEPNS2_11EngineShardEEES6_St14__invoke_otherOS8_DpOT1_\n    @     0x59fc43fd9f58  _ZSt8__invokeIRKZN4dfly20MultiCommandSquasher15ExecuteSquashedEPN6facade17RedisReplyBuilderEEUlPT_PT0_E_JPNS0_11TransactionEPNS0_11EngineShardEEENSt15__invoke_resultIS5_JDpT0_EE4typeEOS5_DpOSH_\n    @     0x59fc43fd9975  _ZSt6invokeIRKZN4dfly20MultiCommandSquasher15ExecuteSquashedEPN6facade17RedisReplyBuilderEEUlPT_PT0_E_JPNS0_11TransactionEPNS0_11EngineShardEEENSt13invoke_resultIS5_JDpT0_EE4typeEOS5_DpOSH_\n    @     0x59fc43fd936d  _ZN4absl12lts_2024072219functional_internal12InvokeObjectIZN4dfly20MultiCommandSquasher15ExecuteSquashedEPN6facade17RedisReplyBuilderEEUlPT_PT0_E_NS3_11Transaction14RunnableResultEJPSD_PNS3_11EngineShardEEEESA_NS1_7VoidPtrEDpNS1_8ForwardTIT1_E4typeE\n    @     0x59fc4421e49e  absl::lts_20240722::FunctionRef<>::operator()()\n    @     0x59fc4420b00b  dfly::Transaction::RunCallback()\n    @     0x59fc4420a486  dfly::Transaction::RunInShard()\n    @     0x59fc43ad4c07  _ZZN4dfly11EngineShard13PollExecutionEPKcPNS_11TransactionEENKUlS4_bE_clES4_b\n    @     0x59fc43ad59b2  dfly::EngineShard::PollExecution()\n    @     0x59fc4420e037  dfly::Transaction::DispatchHop()\n    @     0x59fc4420d3a3  dfly::Transaction::Execute()\n    @     0x59fc4420d267  dfly::Transaction::ScheduleSingleHop()\n    @     0x59fc43fd726a  dfly::MultiCommandSquasher::ExecuteSquashed()\n    @     0x59fc43fd7cf8  dfly::MultiCommandSquasher::Run()\n    @     0x59fc43cdd10e  dfly::MultiCommandSquasher::Execute()\n    @     0x59fc43ca23b6  dfly::Service::Exec()\n    @     0x59fc43ca5dac  _ZZN4dfly7Service8RegisterEPNS_15CommandRegistryEENKUlN4absl12lts_202407224SpanIKSt17basic_string_viewIcSt11char_traitsIcEEEERKNS_14CommandContextEE4_clESB_SE_\n    @     0x59fc43cce561  _ZN3fu27abi_4006detail10invocation6invokeIRKZN4dfly7Service8RegisterEPNS4_15CommandRegistryEEUlN4absl12lts_202407224SpanIKSt17basic_string_viewIcSt11char_traitsIcEEEERKNS4_14CommandContextEE4_JSG_SJ_EEEDTclcl7forwardIT_Efp_Espcl7forwardIT0_Efp0_EEEOSN_DpOSO_\n    @     0x59fc43cc958c  _ZN3fu27abi_4006detail12type_erasure16invocation_table14function_traitIKFvN4absl12lts_202407224SpanIKSt17basic_string_viewIcSt11char_traitsIcEEEERKN4dfly14CommandContextEEE16internal_invokerINS2_3boxILb1EZNSE_7Service8RegisterEPNSE_15CommandRegistryEEUlSD_SH_E4_SaISP_EEELb1EE6invokeEPKNS2_13data_accessorEmSD_SH_\n    @     0x59fc441b6e67  _ZNK3fu27abi_4006detail12type_erasure6tables6vtableINS1_8propertyILb0ELb0EJKFvN4absl12lts_202407224SpanIKSt17basic_string_viewIcSt11char_traitsIcEEEERKN4dfly14CommandContextEEEEEE6invokeILm0EJPKNS2_13data_accessorERKmSE_SI_EEEDcDpOT0_\n    @     0x59fc441b6f00  _ZN3fu27abi_4006detail12type_erasure7erasureILb1ENS1_6configILb1ELb1ENS_16capacity_defaultEEENS1_8propertyILb0ELb0EJKFvN4absl12lts_202407224SpanIKSt17basic_string_viewIcSt11char_traitsIcEEEERKN4dfly14CommandContextEEEEEE6invokeILm0ERKSN_JSG_SK_EEEDcOT0_DpOT1_\n    @     0x59fc441b6f7e  fu2::abi_400::detail::type_erasure::invocation_table::operator_impl<>::operator()()\n    @     0x59fc441b33c9  dfly::CommandId::Invoke()\n*** SIGABRT received at time=1749625798 on cpu 6 ***\nPC: @     0x7b2a16c7ab2c  (unknown)  pthread_kill\n    @     0x59fc4473a60e         64  absl::lts_20240722::WriteFailureInfo()\n    @     0x59fc4473a88a         96  absl::lts_20240722::AbslFailureSignalHandler()\n    @     0x7b2a16c21330       1808  (unknown)\n    @     0x7b2a16c2127e         32  raise\n    @     0x7b2a16c048ff        192  abort\n    @     0x59fc446bd2fe        176  google::DumpStackTraceAndExit()\n    @     0x59fc446b24d3         16  google::LogMessage::Fail()\n    @     0x59fc446b2419        160  google::LogMessage::SendToLog()\n    @     0x59fc446b1bcc         80  google::LogMessage::Flush()\n    @     0x59fc446b5cc4         32  google::LogMessageFatal::~LogMessageFatal()\n    @     0x59fc442061f9        352  dfly::Transaction::StoreKeysInArgs()\n    @     0x59fc442068a0        432  dfly::Transaction::InitByKeys()\n    @     0x59fc4420792f        208  dfly::Transaction::InitByArgs()\n    @     0x59fc43fd6ac3       1456  dfly::MultiCommandSquasher::SquashedHopCb()\n    @     0x59fc43fd6eb5         64  dfly::MultiCommandSquasher::ExecuteSquashed()::{lambda()#1}::operator()<>()\n    @     0x59fc43fda1dd         64  std::__invoke_impl<>()\n    @     0x59fc43fd9f58         64  std::__invoke<>()\n    @     0x59fc43fd9975         64  std::invoke<>()\n    @     0x59fc43fd936d         96  absl::lts_20240722::functional_internal::InvokeObject<>()\n    @     0x59fc4421e49e         64  absl::lts_20240722::FunctionRef<>::operator()()\n    @     0x59fc4420b00b        240  dfly::Transaction::RunCallback()\n    @     0x59fc4420a486        384  dfly::Transaction::RunInShard()\n    @     0x59fc43ad4c07         64  dfly::EngineShard::PollExecution()::{lambda()#1}::operator()()\n    @     0x59fc43ad59b2        416  dfly::EngineShard::PollExecution()\n    @     0x59fc4420e037        448  dfly::Transaction::DispatchHop()\n    @     0x59fc4420d3a3         64  dfly::Transaction::Execute()\n    @     0x59fc4420d267         48  dfly::Transaction::ScheduleSingleHop()\n    @     0x59fc43fd726a        416  dfly::MultiCommandSquasher::ExecuteSquashed()\n    @     0x59fc43fd7cf8        288  dfly::MultiCommandSquasher::Run()\n    @     0x59fc43cdd10e        240  dfly::MultiCommandSquasher::Execute()\n    @     0x59fc43ca23b6        400  dfly::Service::Exec()\n    @     0x59fc43ca5dac         64  dfly::Service::Register()::{lambda()#6}::operator()()\n    @ ... and at least 33 more frames\n[2]    1985 IOT instruction (core dumped)  ./dragonfly --dbfilename= --logtostderr 2>&1\n```\n",
  "hints_text": "",
  "created_at": "2025-06-15T18:51:51Z",
  "modified_files": [
    "src/server/multi_command_squasher.cc",
    "src/server/transaction.cc"
  ],
  "modified_test_files": [
    "src/server/multi_test.cc"
  ]
}