{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 2375,
  "instance_id": "dragonflydb__dragonfly-2375",
  "issue_numbers": [
    "2374"
  ],
  "base_commit": "13c2e672b0ea26b2d5a20d758ffa24f6dc11f79a",
  "patch": "diff --git a/src/server/main_service.cc b/src/server/main_service.cc\nindex a522dc059518..2e5f606348d3 100644\n--- a/src/server/main_service.cc\n+++ b/src/server/main_service.cc\n@@ -1463,7 +1463,7 @@ facade::ConnectionContext* Service::CreateContext(util::FiberSocketBase* peer,\n }\n \n const CommandId* Service::FindCmd(std::string_view cmd) const {\n-  return registry_.Find(cmd);\n+  return registry_.Find(registry_.RenamedOrOriginal(cmd));\n }\n \n bool Service::IsLocked(DbIndex db_index, std::string_view key) const {\n",
  "test_patch": "diff --git a/tests/dragonfly/snapshot_test.py b/tests/dragonfly/snapshot_test.py\nindex 9a3867fa8616..9241e9eccc54 100644\n--- a/tests/dragonfly/snapshot_test.py\n+++ b/tests/dragonfly/snapshot_test.py\n@@ -196,6 +196,35 @@ async def test_snapshot(self, df_seeder_factory, async_client, df_server):\n         assert super().get_main_file(\"test-set-snapshot_cron-summary.dfs\")\n \n \n+@dfly_args(\n+    {**BASIC_ARGS, \"dbfilename\": \"test-save-rename-command\", \"rename_command\": \"save=save-foo\"}\n+)\n+class TestSnapshotShutdownWithRenameSave(SnapshotTestBase):\n+    \"\"\"Test set snapshot_cron flag\"\"\"\n+\n+    @pytest.fixture(autouse=True)\n+    def setup(self, tmp_dir: Path):\n+        super().setup(tmp_dir)\n+\n+    @pytest.mark.asyncio\n+    async def test_snapshot(self, df_server, df_seeder_factory):\n+        \"\"\"Checks that on shutdown we save snapshot\"\"\"\n+        seeder = df_seeder_factory.create(port=df_server.port)\n+        await seeder.run(target_deviation=0.1)\n+\n+        start_capture = await seeder.capture()\n+        a_client = aioredis.Redis(port=df_server.port)\n+\n+        df_server.stop()\n+        df_server.start()\n+\n+        a_client = aioredis.Redis(port=df_server.port)\n+        await wait_available_async(a_client)\n+        await a_client.connection_pool.disconnect()\n+\n+        assert await seeder.compare(start_capture, port=df_server.port)\n+\n+\n @dfly_args({**BASIC_ARGS})\n class TestOnlyOneSaveAtATime(SnapshotTestBase):\n     \"\"\"Dragonfly does not allow simultaneous save operations, send 2 save operations and make sure one is rejected\"\"\"\n",
  "problem_statement": "When renaming the `save` command, Dragonfly crashes when taking a snapshot\n**Describe the bug**\r\nWhen renaming the `save` command and passing `snapshot_cron`, Dragonfly crashes when taking a snapshot.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Start Dragonfly:\r\n```\r\n./dragonfly --logtostderr --snapshot_cron '* * * * *' --rename_command save=save-foo\r\n```\r\n2. Wait for up to 1 min, you the error should be:\r\n```\r\nF20240104 14:30:00.000104 1367889 server_family.cc:1063] Check failed: 'cid' Must be non NULL\r\n*** Check failure stack trace: ***\r\n    @     0x562a673089f3  google::LogMessage::SendToLog()\r\n    @     0x562a673011b7  google::LogMessage::Flush()\r\n    @     0x562a67302b3f  google::LogMessageFatal::~LogMessageFatal()\r\n    @     0x562a66a61fdc  dfly::ServerFamily::DoSave()\r\n    @     0x562a66a6b5e1  dfly::ServerFamily::SnapshotScheduling()\r\n    @     0x562a66a6b8b0  _ZN5boost7context6detail11fiber_entryINS1_12fiber_recordINS0_5fiberENS0_21basic_fixedsize_stackINS0_12stack_traitsEEEZN4util3fb26detail15WorkerFiberImplIZZN4dfly12ServerFamily4InitEPNS8_12AcceptServerESt6vectorIPN6facade8ListenerESaISJ_EEENKUlvE5_clEvEUlvE_JEEC4IS7_EESt17basic_string_viewIcSt11char_traitsIcEERKNS0_12preallocatedEOT_OSN_EUlOS4_E_EEEEvNS1_10transfer_tE\r\n    @     0x562a671254ff  make_fcontext\r\n*** SIGABRT received at time=1704375000 on cpu 5 ***\r\nPC: @     0x7f269b603884  (unknown)  __pthread_kill_implementation\r\n[1]    1367880 IOT instruction (core dumped)  ./dragonfly --logtostderr --snapshot_cron '* * * * *' --rename_command\r\n```\r\n\r\n**Expected behavior**\r\nNo crash\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Fedora 38\r\n - Kernel: Linux fedora 6.5.12-200.aiven1.fc38.x86_64 \r\n - Containerized?: No\r\n - Dragonfly Version: 1.13.0\r\n\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2024-01-04T15:57:16Z",
  "modified_files": [
    "src/server/main_service.cc"
  ],
  "modified_test_files": [
    "tests/dragonfly/snapshot_test.py"
  ]
}