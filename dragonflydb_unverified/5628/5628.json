{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 5628,
  "instance_id": "dragonflydb__dragonfly-5628",
  "issue_numbers": [
    "5548"
  ],
  "base_commit": "f7b5524194484bf9b0d4e403793528360902df15",
  "patch": "diff --git a/src/facade/dragonfly_connection.cc b/src/facade/dragonfly_connection.cc\nindex 3c4792127fe1..106586a7d0ed 100644\n--- a/src/facade/dragonfly_connection.cc\n+++ b/src/facade/dragonfly_connection.cc\n@@ -2142,6 +2142,10 @@ bool Connection::IsReplySizeOverLimit() const {\n     LOG_EVERY_T(INFO, 10) << \"Commands squashing current reply size is overlimit: \" << current\n                           << \"/\" << reply_size_limit\n                           << \". Falling back to single command dispatch (instead of squashing)\";\n+    // Used by testing. Should not be used in production, therefore debug log level 5.\n+    DVLOG(5) << \"Commands squashing current reply size is overlimit: \" << current << \"/\"\n+             << reply_size_limit\n+             << \". Falling back to single command dispatch (instead of squashing)\";\n   }\n   return over_limit;\n }\n",
  "test_patch": "diff --git a/tests/dragonfly/memory_test.py b/tests/dragonfly/memory_test.py\nindex 0ba29d6bcbdd..58dd7edbb209 100644\n--- a/tests/dragonfly/memory_test.py\n+++ b/tests/dragonfly/memory_test.py\n@@ -229,18 +229,19 @@ async def test_cache_eviction_with_rss_deny_oom(\n async def test_throttle_on_commands_squashing_replies_bytes(df_factory: DflyInstanceFactory):\n     df = df_factory.create(\n         proactor_threads=2,\n-        squashed_reply_size_limit=500_000_000,\n-        vmodule=\"dragonfly_connection=2\",\n+        squashed_reply_size_limit=100_000_000,\n+        vmodule=\"dragonfly_connection=5\",\n     )\n     df.start()\n \n     client = df.client()\n-    # 0.5gb\n+    # 100mb\n     await client.execute_command(\"debug populate 64 test 3125 rand type hash elements 500\")\n \n     async def poll():\n         # At any point we should not cross this limit\n-        assert df.rss < 1_500_000_000\n+        # 2x the reply_size_limit, 200mb\n+        assert df.rss < 200_000_000\n         cl = df.client()\n         pipe = cl.pipeline(transaction=False)\n         for i in range(64):\n",
  "problem_statement": "Python test failed: test_throttle_on_commands_squashing_replies_bytes\nhttps://github.com/dragonflydb/dragonfly/actions/runs/16448103448/job/46485539128\n",
  "hints_text": "```\nE       assert 0 > 0\nE        +  where 0 = len([])\n\ndragonfly/memory_test.py:260: AssertionError\n```\nhttps://github.com/dragonflydb/dragonfly/actions/runs/16553980044/job/46812791355",
  "created_at": "2025-08-06T12:42:49Z",
  "modified_files": [
    "src/facade/dragonfly_connection.cc"
  ],
  "modified_test_files": [
    "tests/dragonfly/memory_test.py"
  ]
}