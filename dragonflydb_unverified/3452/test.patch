diff --git a/.github/actions/regression-tests/action.yml b/.github/actions/regression-tests/action.yml
index 5d8d001df6c5..888201b10415 100644
--- a/.github/actions/regression-tests/action.yml
+++ b/.github/actions/regression-tests/action.yml
@@ -41,7 +41,12 @@ runs:
 
         # timeout returns 124 if we exceeded the timeout duration
         if [[ $code -eq 124 ]]; then
-          echo "TIMEDOUT=1">> "$GITHUB_OUTPUT";
+          echo "ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘"
+          echo "ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ TESTS TIMEDOUT ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘"
+          echo "ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘"
+          # Copy the last log file because we timedout and pytest did not copy it over
+          # the /tmp/failed/ folder
+          cat /tmp/last_test_log_dir.txt | xargs -I {} mv {}/ /tmp/failed/
           exit 1
         fi
 
@@ -50,26 +55,6 @@ runs:
           exit 1
         fi
 
-    - name: Print last log on timeout
-      if: failure()
-      shell: bash
-      env:
-        TIMEDOUT_STEP_1: ${{ steps.first.outputs.TIMEDOUT }}
-        TIMEDOUT_STEP_2: ${{ steps.second.outputs.TIMEDOUT }}
-      run: |
-        if [[ "${{ env.TIMEDOUT_STEP_1 }}" -eq 1 ]] || [[ "${{ env.TIMEDOUT_STEP_2 }}" -eq 1 ]]; then
-          echo "ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘"
-          echo "ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ TESTS TIMEDOUT ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘"
-          echo "ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘ ğŸ›‘"
-
-          # It could be the case that the first test failed and the folder was not created. We need mkdir
-          # therefore so plz do not remove
-          mkdir /tmp/failed
-          # Copy over the logs of the test that timedout. We need this because the exception/failure
-          # handlers do not run when the shell command TIMEOUT sends a SIGTERM to terminate the pytest process.
-          cat /tmp/last_test_log_dir.txt | xargs -I {} cp -r {}/ /tmp/failed/
-        fi
-
     - name: Send notification on failure
       if: failure() && github.ref == 'refs/heads/main'
       shell: bash
diff --git a/tests/dragonfly/conftest.py b/tests/dragonfly/conftest.py
index e5fe89d82f90..9e061b464983 100644
--- a/tests/dragonfly/conftest.py
+++ b/tests/dragonfly/conftest.py
@@ -30,6 +30,7 @@
 DATABASE_INDEX = 0
 BASE_LOG_DIR = "/tmp/dragonfly_logs/"
 FAILED_PATH = "/tmp/failed/"
+LAST_LOGS = "/tmp/last_test_log_dir.txt"
 
 
 # runs on pytest start
@@ -56,7 +57,7 @@ def pytest_runtest_setup(item):
     item.log_dir = test_dir
 
     # needs for action.yml to get logs if timedout is happen for test
-    last_logs = open("/tmp/last_test_log_dir.txt", "w")
+    last_logs = open(LAST_LOGS, "w")
     last_logs.write(test_dir)
     last_logs.close()
 
@@ -378,6 +379,9 @@ def copy_failed_logs(log_dir, report):
             logging.error(f"ğŸªµğŸªµğŸªµğŸªµğŸªµğŸªµ {file} ğŸªµğŸªµğŸªµğŸªµğŸªµğŸªµ")
             shutil.copy(file, test_failed_path)
 
+    # Clean up
+    os.remove(LAST_LOGS)
+
 
 # tests results we get on the "call" state
 # but we can not copy logs until "teardown" state because the server isn't stoped
