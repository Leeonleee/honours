{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 1324,
  "instance_id": "dragonflydb__dragonfly-1324",
  "issue_numbers": [
    "1290",
    "1305"
  ],
  "base_commit": "e5b5e35e55424df3c70a7d6db5b1fc68395ef611",
  "patch": "diff --git a/src/redis/listpack.c b/src/redis/listpack.c\nindex 238f97d425f4..21b2596d36ff 100644\n--- a/src/redis/listpack.c\n+++ b/src/redis/listpack.c\n@@ -180,7 +180,8 @@ int lpStringToInt64(const char *s, unsigned long slen, int64_t *value) {\n     int negative = 0;\n     uint64_t v;\n \n-    if (plen == slen)\n+    /* Abort if length indicates this cannot possibly be an int */\n+    if (slen == 0)\n         return 0;\n \n     /* Special case: first and only digit is 0. */\n@@ -958,7 +959,7 @@ unsigned char *lpPrependInteger(unsigned char *lp, long long lval) {\n     return lpInsertInteger(lp, lval, p, LP_BEFORE, NULL);\n }\n \n-/* Append the specified element 'ele' of length 'len' at the end of the\n+/* Append the specified element 'ele' of length 'size' at the end of the\n  * listpack. It is implemented in terms of lpInsert(), so the return value is\n  * the same as lpInsert(). */\n unsigned char *lpAppend(unsigned char *lp, const unsigned char *ele, uint32_t size) {\ndiff --git a/src/server/debugcmd.cc b/src/server/debugcmd.cc\nindex c17e4c86e76c..a304b4a6f634 100644\n--- a/src/server/debugcmd.cc\n+++ b/src/server/debugcmd.cc\n@@ -215,7 +215,7 @@ void DebugCmd::Load(string_view filename) {\n   }\n \n   absl::Cleanup rev_state = [this] {\n-    sf_.service().SwitchState(GlobalState::SAVING, GlobalState::ACTIVE);\n+    sf_.service().SwitchState(GlobalState::LOADING, GlobalState::ACTIVE);\n   };\n \n   const CommandId* cid = sf_.service().FindCmd(\"FLUSHALL\");\ndiff --git a/src/server/rdb_load.cc b/src/server/rdb_load.cc\nindex 8e40547789f7..4c27f5846057 100644\n--- a/src/server/rdb_load.cc\n+++ b/src/server/rdb_load.cc\n@@ -60,6 +60,7 @@ namespace {\n \n constexpr size_t kYieldPeriod = 50000;\n constexpr size_t kMaxBlobLen = 1ULL << 16;\n+constexpr char kErrCat[] = \"dragonfly.rdbload\";\n \n inline void YieldIfNeeded(size_t i) {\n   if (i % kYieldPeriod == 0) {\n@@ -70,7 +71,7 @@ inline void YieldIfNeeded(size_t i) {\n class error_category : public std::error_category {\n  public:\n   const char* name() const noexcept final {\n-    return \"dragonfly.rdbload\";\n+    return kErrCat;\n   }\n \n   string message(int ev) const final;\n@@ -980,7 +981,8 @@ string_view RdbLoaderBase::OpaqueObjLoader::ToSV(const RdbVariant& obj) {\n \n   const base::PODArray<char>* ch_arr = get_if<base::PODArray<char>>(&obj);\n   if (ch_arr) {\n-    return string_view(ch_arr->data(), ch_arr->size());\n+    // pass non-null pointer to avoid UB with lp API.\n+    return ch_arr->empty() ? \"\"sv : string_view{ch_arr->data(), ch_arr->size()};\n   }\n \n   const LzfString* lzf = get_if<LzfString>(&obj);\n@@ -990,7 +992,7 @@ string_view RdbLoaderBase::OpaqueObjLoader::ToSV(const RdbVariant& obj) {\n                        lzf->uncompressed_len) == 0) {\n       LOG(ERROR) << \"Invalid LZF compressed string\";\n       ec_ = RdbError(errc::rdb_file_corrupted);\n-      return string_view{};\n+      return string_view{tset_blob_.data(), 0};\n     }\n     return string_view{tset_blob_.data(), tset_blob_.size()};\n   }\ndiff --git a/src/server/stream_family.cc b/src/server/stream_family.cc\nindex cc9238447eea..6b19f91545f6 100644\n--- a/src/server/stream_family.cc\n+++ b/src/server/stream_family.cc\n@@ -118,6 +118,11 @@ inline string NoGroupError(string_view key, string_view cgroup) {\n   return absl::StrCat(\"-NOGROUP No such consumer group '\", cgroup, \"' for key name '\", key, \"'\");\n }\n \n+inline const uint8_t* SafePtr(MutableSlice field) {\n+  return field.empty() ? reinterpret_cast<const uint8_t*>(\"\")\n+                       : reinterpret_cast<const uint8_t*>(field.data());\n+}\n+\n bool ParseID(string_view strid, bool strict, uint64_t missing_seq, ParsedStreamId* dest) {\n   if (strid.empty() || strid.size() > 127)\n     return false;\n@@ -394,7 +399,8 @@ int StreamAppendItem(stream* s, CmdArgList fields, streamID* added_id, streamID*\n     lp = lpAppendInteger(lp, numfields);\n     for (int64_t i = 0; i < numfields; i++) {\n       MutableSlice field = fields[i * 2];\n-      lp = lpAppend(lp, reinterpret_cast<const uint8_t*>(field.data()), field.size());\n+\n+      lp = lpAppend(lp, SafePtr(field), field.size());\n     }\n     lp = lpAppendInteger(lp, 0); /* Master entry zero terminator. */\n     raxInsert(s->rax_tree, (unsigned char*)&rax_key, sizeof(rax_key), lp, NULL);\n@@ -468,8 +474,8 @@ int StreamAppendItem(stream* s, CmdArgList fields, streamID* added_id, streamID*\n   for (int64_t i = 0; i < numfields; i++) {\n     MutableSlice field = fields[i * 2], value = fields[i * 2 + 1];\n     if (!(flags & STREAM_ITEM_FLAG_SAMEFIELDS))\n-      lp = lpAppend(lp, reinterpret_cast<const uint8_t*>(field.data()), field.size());\n-    lp = lpAppend(lp, reinterpret_cast<const uint8_t*>(value.data()), value.size());\n+      lp = lpAppend(lp, SafePtr(field), field.size());\n+    lp = lpAppend(lp, SafePtr(value), value.size());\n   }\n   /* Compute and store the lp-count field. */\n   int64_t lp_count = numfields;\n",
  "test_patch": "diff --git a/src/server/rdb_test.cc b/src/server/rdb_test.cc\nindex e174abb3c5ac..37202db3f254 100644\n--- a/src/server/rdb_test.cc\n+++ b/src/server/rdb_test.cc\n@@ -5,6 +5,7 @@\n \n extern \"C\" {\n #include \"redis/crc64.h\"\n+#include \"redis/listpack.h\"\n #include \"redis/redis_aux.h\"\n #include \"redis/zmalloc.h\"\n }\n@@ -318,7 +319,7 @@ TEST_F(RdbTest, SaveManyDbs) {\n }\n \n TEST_F(RdbTest, HMapBugs) {\n-  // Force OBJ_ENCODING_HT encoding.\n+  // Force kEncodingStrMap2 encoding.\n   server.hash_max_listpack_value = 0;\n   Run({\"hset\", \"hmap1\", \"key1\", \"val\", \"key2\", \"val2\"});\n   Run({\"hset\", \"hmap2\", \"key1\", string(690557, 'a')});\n@@ -328,6 +329,26 @@ TEST_F(RdbTest, HMapBugs) {\n   EXPECT_EQ(2, CheckedInt({\"hlen\", \"hmap1\"}));\n }\n \n+TEST_F(RdbTest, Issue1305) {\n+  /***************\n+   * The code below crashes because of the weird listpack API that assumes that lpInsert\n+   * pointers are null then it should do deletion :(. See lpInsert comments for more info.\n+\n+     uint8_t* lp = lpNew(128);\n+     lpAppend(lp, NULL, 0);\n+     lpFree(lp);\n+\n+  */\n+\n+  // Force kEncodingStrMap2 encoding.\n+  server.hash_max_listpack_value = 0;\n+  Run({\"hset\", \"hmap\", \"key1\", \"val\", \"key2\", \"\"});\n+\n+  server.hash_max_listpack_value = 32;\n+  Run({\"debug\", \"reload\"});\n+  EXPECT_EQ(2, CheckedInt({\"hlen\", \"hmap\"}));\n+}\n+\n TEST_F(RdbTest, JsonTest) {\n   string_view data[] = {\n       R\"({\"a\":1})\"sv,                          //\n",
  "problem_statement": "run REPLICAOF ,Segmentation fault (core dumped)\n> REPLICAOF 172.15.12.100 6379\r\nI20230524 17:05:22.074071  8869 [server_family.cc:2000](http://server_family.cc:2000/)] Replicating [172.31.128.100:6379](http://172.15.12.100:6379/)\r\nI20230524 17:05:22.298261  8869 [replica.cc:616](http://replica.cc:616/)] Started full sync with [172.15.12.100:6379](http://172.31.128.100:6379/)\r\n*** SIGSEGV received at time=1684919123 on cpu 119 ***\r\nPC: @     0x561f6b56e390  (unknown)  dfly::detail::Segment<>::Bucket::FindByFp<>()\r\nSegmentation fault (core dumped)\ndragonfly restart crash\nstacktrace below.\r\nrun using the following command:\r\n```\r\n/data/app/dragonfly-x86_64 --logtostderr --cache_mode=true --dbnum 16 --bind 0.0.0.0 --port 6379 --save_schedule *:30 --maxmemory=230g --keys_output_limit=12288 --dir /data/app/ --requirepass ... --masterauth ...  >> /data/app/dragonfly.log 2>&1 & \r\n```\r\n\r\nfrom the log I see the load procedure has finished but some threads are still loading (LoadItemsBuffer). \r\nreported by @kissingtiger\r\n\r\nhis machine is 256GB, 128 cpu machine (not sure if number of threads is relevant).\r\nAlso, not clear to me why it's \"key loaded: 0\".\r\n\r\n```\r\nI20230529 14:10:12.530941 134156 proactor_pool.cc:73] Running 128 io threads\r\nI20230529 14:10:12.811714 134156 server_family.cc:166] Data directory is \"/data/app\"\r\nI20230529 14:10:12.814015 134156 server_family.cc:654] Loading /data/app/dump-2023-05-28T23:43:13-summary.dfs\r\nI20230529 14:10:12.856622 134171 server_family.cc:752] Done loading RDB, keys loaded: 0\r\nI20230529 14:10:12.856663 134171 server_family.cc:753] Loading finished after 41 ms\r\nI20230529 14:10:12.882462 134180 listener_interface.cc:96] sock[386] AcceptServer - listening on port 6379\r\nW20230529 14:10:12.906056 134183 dfly_main.cc:169] Remote version - HTTP GET error [version.dragonflydb.io:443/v1], error: 337047686\r\nW20230529 14:10:12.906100 134183 dfly_main.cc:171] ssl error: tls_process_server_certificate/certificate verify failed\r\n\r\nThread 110 \"Proactor108\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7ffff5133640 (LWP 134596)]\r\ndfly::detail::Segment<dfly::CompactObj, dfly::ExpirePeriod, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::SegmentPolicy>::Bucket::FindByFp<dfly::CompactObj&, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::EqPred() const::{lambda(auto:1 const&, auto:2 const&)#1}&>(unsigned char, bool, dfly::CompactObj&, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::EqPred() const::{lambda(auto:1 const&, auto:2 const&)#1}&) const [clone .constprop.0] () at ../src/core/dash_internal.h:973\r\n973 ../src/core/dash_internal.h: No such file or directory.\r\n#0 dfly::detail::Segment<dfly::CompactObj, dfly::ExpirePeriod, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::SegmentPolicy>::Bucket::FindByFp<dfly::CompactObj&, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::EqPred() const::{lambda(auto:1 const&, auto:2 const&)#1}&>(unsigned char, bool, dfly::CompactObj&, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::EqPred() const::{lambda(auto:1 const&, auto:2 const&)#1}&) const [clone .constprop.0] () at ../src/core/dash_internal.h:973\r\n#1 0x0000555555792756 in dfly::detail::Segment<dfly::CompactObj, dfly::ExpirePeriod, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::SegmentPolicy>::FindIt<dfly::CompactObj&, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::EqPred() const::{lambda(auto:1 const&, auto:2 const&)#1}>(dfly::CompactObj&, unsigned long, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::EqPred() const::{lambda(auto:1 const&, auto:2 const&)#1}&&) const () at ../src/core/dash_internal.h:1069\r\n#2 0x0000555555615410 in dfly::detail::Segment<dfly::CompactObj, dfly::ExpirePeriod, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::SegmentPolicy>::Insert<dfly::CompactObj, dfly::ExpirePeriod, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::EqPred() const::{lambda(auto:1 const&, auto:2 const&)#1}>(dfly::CompactObj&&, dfly::ExpirePeriod&&, unsigned long, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::EqPred() const::{lambda(auto:1 const&, auto:2 const&)#1}&&) () at ../src/core/dash_internal.h:1048\r\n#3 dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::InsertInternal<dfly::CompactObj, dfly::ExpirePeriod, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::DefaultEvictionPolicy>(dfly::CompactObj&&, dfly::ExpirePeriod&&, dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::DefaultEvictionPolicy&) [clone .constprop.0] () at ../src/core/dash.h:729\r\n#4 0x000055555570a10d in dfly::DashTable<dfly::CompactObj, dfly::ExpirePeriod, dfly::detail::ExpireTablePolicy>::Insert<dfly::CompactObj, dfly::ExpirePeriod> () at ../src/core/dash.h:138\r\n#5 dfly::DbSlice::AddOrUpdateInternal () at ../src/server/db_slice.cc:703\r\n#6 0x000055555570a3a0 in dfly::DbSlice::AddOrUpdate () at ../src/server/db_slice.cc:715\r\n#7 0x00005555558406ce in dfly::RdbLoader::LoadItemsBuffer () at ../src/server/rdb_load.cc:2168\r\n#8 operator() () at ../src/server/rdb_load.cc:2141\r\n#9 _M_invoke () at /usr/include/c++/9/bits/std_function.h:300\r\n#10 0x000055555564e445 in std::function<void ()>::operator()() const () at /usr/include/c++/9/bits/std_function.h:688\r\n#11 util::fb2::FiberQueue::Run () at ../helio/util/fibers/fiberqueue_threadpool.cc:45\r\n#12 0x00005555556f8ab8 in operator() () at ../src/server/engine_shard_set.cc:204\r\n#13 __invoke_impl<void, dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()> > () at /usr/include/c++/9/bits/invoke.h:60\r\n#14 __invoke<dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()> > () at /usr/include/c++/9/bits/invoke.h:95\r\n#15 __apply_impl<dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()>, std::tuple<> > () at /usr/include/c++/9/tuple:1684\r\n#16 apply<dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()>, std::tuple<> > () at /usr/include/c++/9/tuple:1694\r\n#17 run_ () at ../helio/util/fibers/detail/fiber_interface.h:218\r\n#18 operator() () at ../helio/util/fibers/detail/fiber_interface.h:207\r\n#19 __invoke_impl<boost::context::fiber, util::fb2::detail::WorkerFiberImpl<Fn, Arg>::WorkerFiberImpl(std::string_view, const boost::context::preallocated&, StackAlloc&&, Fn&&, Arg&& ...) [with StackAlloc = boost::context::basic_fixedsize_stack<boost::context::stack_traits>; Fn = dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()>; Arg = {}]::<lambda(util::fb2::detail::WorkerFiberImpl<dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()> >::FbCntx&&)>&, boost::context::fiber> () at /usr/include/c++/9/bits/invoke.h:60\r\n#20 __invoke<util::fb2::detail::WorkerFiberImpl<Fn, Arg>::WorkerFiberImpl(std::string_view, const boost::context::preallocated&, StackAlloc&&, Fn&&, Arg&& ...) [with StackAlloc = boost::context::basic_fixedsize_stack<boost::context::stack_traits>; Fn = dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()>; Arg = {}]::<lambda(util::fb2::detail::WorkerFiberImpl<dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()> >::FbCntx&&)>&, boost::context::fiber> () at /usr/include/c++/9/bits/invoke.h:96\r\n#21 invoke<util::fb2::detail::WorkerFiberImpl<Fn, Arg>::WorkerFiberImpl(std::string_view, const boost::context::preallocated&, StackAlloc&&, Fn&&, Arg&& ...) [with StackAlloc = boost::context::basic_fixedsize_stack<boost::context::stack_traits>; Fn = dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()>; Arg = {}]::<lambda(util::fb2::detail::WorkerFiberImpl<dfly::EngineShard::EngineShard(util::fb2::ProactorBase*, bool, mi_heap_t*)::<lambda()> >::FbCntx&&)>&, boost::context::fiber> () at /usr/include/c++/9/functional:82\r\n```\n",
  "hints_text": "@kissingtiger  does it reproduce consistently?  \r\nDo you have the core file ? Or the rest of the stack trace? \r\nCan you please attach the whole log?\n@romange \r\nslave run: replicaof 172.15.116.185 6379\r\ndragonfly log output\uff1a\r\nI20230528 21:25:47.965194 22771 replica.cc:616] Started full sync with 172.15.116.185:6379\r\nE20230528 21:25:47.974120 23053 rdb_load.cc:895] Zset ziplist integrity check failed.\r\nE20230528 21:25:48.019320 23127 rdb_load.cc:895] Zset ziplist integrity check failed.\r\nW20230528 21:25:48.046562 22771 replica.cc:267] Error syncing with 172.15.116.185:6379 dragonfly.rdbload:5 Internal error when loadB file 5\r\nW20230528 21:25:48.547762 22771 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.685994 22678 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686005 22684 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686019 22665 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686034 22752 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686043 22711 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686035 22729 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686064 22669 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686062 22696 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686071 22714 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686061 22694 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686125 22667 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686133 22723 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686095 22689 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686242 22846 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686197 22699 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686179 22825 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686180 22837 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686115 22719 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686121 22726 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686185 22741 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686221 22906 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686223 22787 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686106 22737 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686192 22744 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686234 22828 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686144 22806 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686131 22875 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686189 22792 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686233 22856 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686172 22796 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686192 22832 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686173 22703 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686249 22910 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686260 22903 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686261 22782 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686194 22706 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686208 22887 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686100 22759 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686228 22914 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686213 22882 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686172 22762 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686241 22748 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686172 22673 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686178 22732 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686185 22686 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686235 22898 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686154 22755 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686199 22769 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.686133 22765 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.688176 22771 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.688931 22867 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689144 22778 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689170 22775 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689241 22811 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689366 22871 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689401 22858 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689478 22891 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689492 22844 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689535 22878 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689553 22893 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689575 22862 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689580 22850 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689637 22802 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 21:25:48.689664 22819 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nI20230528 21:25:48.689685 23358 replica.cc:616] Started full sync with 172.15.116.185:6379\r\n*** SIGSEGV received at time=1685280565 on cpu 95 ***\r\nPC: @     0x55dd09aa8d12  (unknown)  dfly::StringMap::ObjEqual()\r\nSegmentation fault (core dumped)\nDo you think it will be possible to save the snapshot on the master using save command and share it with us @kissingtiger ?\nAlso, where are you syncing from? Is it redis or dragonfly?\n@romange \r\nmaster and slave all dragonfly.\r\nos: Alibaba Cloud Linux release 3 (kernel 5.10.134-13.1.al8.x86_64)\r\ndragonfly version: v1.3.0-f80afca9c23e2f30373437520a162c591eaa2005\r\nstart commond:\r\ndragonfly-x86_64 --logtostderr --cache_mode=true --dbnum 16 --bind 0.0.0.0 --port 6379 --save_schedule *:30 --maxmemory=230g --keys_output_limit=12288 --dir /data/app/ --requirepass xxx --masterauth xxx\r\n\r\nI have two questions:\r\n1\u3001If the number of dragonfly instance keys exceeds 10 million, restarting the dragonfly instance will also result in the same error message\r\n2\u3001If the number of Dragonfly master and slave instance keys is relatively small, execute the slave command from the database, and the master-slave function is normal. If the number of Dragonfly master instance keys is already 10 million, and then add the slave, it will fail\nWhat dragonfly version do you run and how many threads are on your instance? \n\nAre you saying that you get a segfault when restarting the master without replication? Can you also attach the log file for this?\ndragonfly version: v1.3.0-f80afca9c23e2f30373437520a162c591eaa2005\r\nos\uff1acpu 128c   mem 256g\r\nRunning 128 io threads\nMy machine is 128 cores, do I need to reserve some CPU\uff1f\r\nmaster role, run save is ok\n@romange Could you please help me check if there is a problem with the startup command?\r\nos: Alibaba Cloud Linux release 3 (kernel 5.10.134-13.1.al8.x86_64\uff09\r\n     128 cores 256g memory\r\ndragonfly version: v1.3.0-f80afca9c23e2f30373437520a162c591eaa2005\r\nstart commond:\r\ndragonfly-x86_64 --logtostderr --cache_mode=true --dbnum 16 --bind 0.0.0.0 --port 6379 --save_schedule *:30 --maxmemory=230g --keys_output_limit=12288 --dir /data/app/ --requirepass xxx --masterauth xxx\nYour start command is good. It seems to be a problem on our side.\r\nWill you be able to hop on https://discord.gg/HsPjXGVH85  and ping me there? i am romange#0778\r\n\n@romange \r\ni add a slave ,logs output:\r\nI20230528 22:50:17.978691  7297 init.cc:57] /data/app/dragonfly-x86_64 running in opt mode.\r\nI20230528 22:50:17.978737  7297 dfly_main.cc:584] Starting dragonfly df-v1.3.0-f80afca9c23e2f30373437520a162c591eaa2005\r\nI20230528 22:50:17.978791  7297 dfly_main.cc:637] Max memory limit is: 80.00GiB\r\nI20230528 22:50:17.989140  7477 uring_proactor.cc:156] IORing with 1024 entries, allocated 102720 bytes, cq_entries is 2048\r\nI20230528 22:50:18.001204  7297 proactor_pool.cc:73] Running 64 io threads\r\nI20230528 22:50:18.032270  7297 server_family.cc:166] Data directory is \"/data/app\"\r\nI20230528 22:50:18.032779  7309 listener_interface.cc:96] sock[131] AcceptServer - listening on port 6379\r\nW20230528 22:50:18.089366  7312 dfly_main.cc:169] Remote version - HTTP GET error [version.dragonflydb.io:443/v1], error: 337047686\r\nW20230528 22:50:18.089381  7312 dfly_main.cc:171] ssl error: tls_process_server_certificate/certificate verify failed\r\n\r\n\r\nI20230528 23:04:40.528254  7302 server_family.cc:2000] Replicating 172.15.128.100:6379\r\nW20230528 23:04:40.544265  7302 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615521  7350 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615535  7400 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615546  7356 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615552  7441 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615617  7431 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615592  7365 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615567  7339 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615597  7342 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615542  7439 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615607  7330 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615594  7413 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615613  7380 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615612  7336 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615587  7368 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615631  7422 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615636  7304 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615640  7472 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615648  7445 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615664  7447 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615665  7489 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615667  7435 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615573  7396 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615546  7453 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615587  7468 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615633  7333 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615643  7416 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615592  7377 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615589  7419 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615605  7410 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615639  7347 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615665  7355 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615586  7394 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615599  7459 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.615656  7486 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616403  7346 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616451  7371 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616465  7477 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616489  7374 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616518  7462 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616536  7360 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616567  7306 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616544  7312 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616588  7405 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616531  7428 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616536  7302 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616621  7474 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616640  7322 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616598  7409 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616565  7390 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616621  7386 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616533  7481 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616701  7383 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616552  7363 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616607  7482 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616534  7316 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616688  7466 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616582  7451 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616547  7402 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616556  7309 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616559  7325 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616585  7425 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616580  7319 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616652  7327 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.616576  7457 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.619932  7350 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.620172  7356 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.620312  7394 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.621527  7459 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.621608  7342 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.621897  7336 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.622020  7439 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.622185  7431 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.622289  7413 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.622359  7441 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.622568  7365 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.622879  7422 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.622928  7453 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.623158  7330 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.623294  7304 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.623591  7489 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.623663  7419 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.623929  7468 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.625402  7445 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.625907  7472 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.626195  7396 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.626550  7400 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.626703  7368 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.627152  7435 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.627200  7333 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.627406  7339 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.627575  7447 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.628088  7416 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.628310  7410 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.628528  7486 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.628593  7377 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.628600  7346 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.628767  7477 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.629379  7360 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.629590  7374 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.630344  7371 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.630743  7405 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.631263  7428 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.631301  7462 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.631330  7312 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.631883  7474 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.631999  7402 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.632429  7316 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.632704  7302 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.632861  7386 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.632921  7425 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.633473  7363 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.633515  7482 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.633566  7319 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.633587  7451 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.633965  7383 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.634253  7327 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.634348  7309 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.634431  7390 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.634511  7325 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.639786  7355 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.640525  7347 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.641117  7306 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.647192  7457 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.647243  7481 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.647243  7466 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.647259  7409 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.647264  7322 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230528 23:04:40.649437  7380 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nI20230528 23:04:40.699565  7302 replica.cc:616] Started full sync with 172.15.128.100:6379\r\n*** SIGSEGV received at time=1685286280 on cpu 24 ***\r\nPC: @     0x5614b5449390  (unknown)  dfly::detail::Segment<>::Bucket::FindByFp<>()\ncan you please try running slave via gdb like this:\r\n```\r\ngdb --args dragonfly-x86_64 --logtostderr --cache_mode=true --dbnum 16 --bind 0.0.0.0 --port 6379 --save_schedule *:30 --maxmemory=230g --keys_output_limit=12288 --dir /data/app/ --requirepass xxx --masterauth xxx\r\n```\r\n\r\nand then try syncing it as usual until it crashes in gdb and then type `bt` to see the call stack. Please paste it here.\n@romange \r\ngdb --args dragonfly-x86_64 --logtostderr --cache_mode=true --dbnum 16 --bind 0.0.0.0 --port 6379 --save_schedule *:30 --maxmemory=80g --keys_output_limit=12288 --dir /data/app/ --requirepass xxx --masterauth xxx\r\nGNU gdb (GDB) Red Hat Enterprise Linux 9.2-7.1.al8\r\nCopyright (C) 2020 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.\r\nType \"show copying\" and \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-redhat-linux-gnu\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n    <http://www.gnu.org/software/gdb/documentation/>.\r\n\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\"...\r\nReading symbols from dragonfly-x86_64...\r\n(gdb) bt\r\nNo stack.\r\n(gdb) bt\r\nNo stack.\r\n(gdb) \r\nNo stack.\r\n(gdb) \r\nNo stack.\r\n(gdb) \r\nNo stack.\r\n(gdb) bt\r\nNo stack.\r\n(gdb) bt\r\nNo stack.\r\n\r\nbut the slave role logs:\r\nI20230529 13:16:09.411885 17313 server_family.cc:2000] Replicating 172.15.128.104:6379\r\nW20230529 13:16:09.438244 17313 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510196 17454 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510195 17345 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510234 17456 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510188 17386 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510263 17377 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510246 17365 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510260 17425 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510224 17475 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510332 17389 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510243 17497 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510306 17374 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510267 17434 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510327 17499 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510241 17328 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510278 17450 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510346 17353 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510305 17439 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510324 17350 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510279 17347 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510267 17380 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510304 17313 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510277 17372 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510584 17468 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510578 17448 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510571 17493 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510586 17407 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510654 17369 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510682 17323 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510689 17441 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510751 17477 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510812 17357 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510841 17383 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510869 17484 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510881 17460 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510890 17341 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510905 17393 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510910 17329 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510919 17419 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510980 17337 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510993 17479 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510952 17398 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510921 17481 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510924 17489 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511044 17404 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511068 17410 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510952 17360 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510962 17487 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510983 17428 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511041 17333 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510933 17431 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510988 17470 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511055 17413 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511085 17362 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510994 17315 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511101 17401 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511040 17320 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510985 17395 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510941 17319 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511087 17462 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511041 17422 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510980 17338 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511003 17466 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.510952 17443 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.511126 17416 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514577 17345 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514583 17456 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514647 17454 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514679 17386 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514803 17475 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514807 17425 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514818 17365 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514829 17377 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514883 17497 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.514979 17313 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515033 17389 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515060 17499 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515094 17328 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515164 17434 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515198 17374 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515205 17439 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515295 17468 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515327 17450 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515400 17448 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515435 17372 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515460 17380 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515506 17323 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515511 17487 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515630 17493 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515672 17353 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515673 17441 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515704 17357 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515741 17350 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515749 17383 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515797 17347 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515830 17329 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515836 17422 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515858 17484 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515893 17477 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515908 17419 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.515992 17341 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516108 17398 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516120 17460 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516132 17393 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516165 17337 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516266 17481 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516266 17479 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516326 17489 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516337 17404 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516366 17407 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516389 17410 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516419 17431 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516482 17428 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516566 17362 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516569 17413 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516700 17315 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516712 17466 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516759 17333 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516796 17320 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516803 17443 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516842 17395 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516845 17360 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.516862 17470 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.522485 17462 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.522486 17369 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.522496 17416 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.522505 17338 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.522504 17319 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nW20230529 13:16:09.522544 17401 uring_proactor.cc:203] CQE error: 125 cqe.flags=0\r\nI20230529 13:16:09.558283 17313 replica.cc:616] Started full sync with 172.15.128.104:6379\r\n*** SIGSEGV received at time=1685337370 on cpu 18 ***\r\nPC: @     0x55ff0b9ce390  (unknown)  dfly::detail::Segment<>::Bucket::FindByFp<>()\r\n\r\n\r\nzhe master role logs:\r\nE20230529 13:15:11.631170  4285 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.631166  4517 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.631207  4539 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.630605  4186 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.631234  4355 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.631234  4531 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.630937  4643 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.631263  4640 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.631299  4662 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.631314  4612 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.630940  4646 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.630980  4425 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.630836  4483 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.630833  4266 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.630656  4189 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.631182  4597 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.632668  4589 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.631203  4368 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.631261  4576 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.630757  4238 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.630846  4245 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.630849  4475 rdb_save.cc:1158] io error system:103\r\nE20230529 13:15:11.630820  4527 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.631203  4547 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.631280  4628 rdb_save.cc:1158] io error system:104\r\nE20230529 13:15:11.631165  4593 rdb_save.cc:1158] io error system:104\n@romange \r\nDiscord app, I applied to add friends, romange#0778\nIt looks like, in `gdb`, you need to type in `run` for the process to start, then wait for it to crash, and then type `bt` to get the stack\nthank you @chakaz . I just instructed @kissingtiger  to use `gdb -batch -ex \"run\" -ex \"bt\" --args ....` that does the same\nthe user sent TERM signal to the process during the load. Seems that during shutdown sequence the rdb load fiber was still active (and it should not be).\nto reproduce the problem run:\r\n```\r\nservice dragonfly stop\r\nservice dragonfly start\r\n\r\n```\r\n\r\nwrapper start script:\r\n```\r\ncat dragonfly-start.sh\r\n\r\n#!/bin/bash\r\ncd /data/app/\r\n/data/app/dragonfly-x86_64 --logtostderr --cache_mode=true --dbnum 16 --bind 0.0.0.0 --port 6379 --save_schedule *:30 --maxmemory=230g --keys_output_limit=12288 --dir /data/app/   >> /data/app/dragonfly.log 2>&1 &\r\n\r\necho $! > /run/dragonfly.pid\r\n```\r\n\r\nservice file:\r\n\r\n```\r\ncat /usr/lib/systemd/system/dragonfly.service \r\n[Unit]\r\nDescription=Dragonfly\r\nAfter=network.target\r\n\r\n[Service]\r\nType=forking\r\nPIDFile=/run/dragonfly.pid\r\nExecStart=/data/app/dragonfly-start.sh\r\n#PrivateTmp=true\r\nKillMode=process\r\nRestart=on-failure\r\nRestartSec=30\r\nRemainAfterExit=yes\r\n\r\n\r\n[Install]\r\nWantedBy=multi-user.target \r\n\r\n```\r\n\r\n",
  "created_at": "2023-05-30T13:51:16Z"
}