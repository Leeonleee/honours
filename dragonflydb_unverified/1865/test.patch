diff --git a/src/server/test_utils.cc b/src/server/test_utils.cc
index 24daf6f7e924..236bec185f41 100644
--- a/src/server/test_utils.cc
+++ b/src/server/test_utils.cc
@@ -19,6 +19,7 @@ extern "C" {
 #include "base/logging.h"
 #include "base/stl_util.h"
 #include "facade/dragonfly_connection.h"
+#include "server/acl/acl_log.h"
 #include "util/fibers/pool.h"
 
 using namespace std;
@@ -563,6 +564,7 @@ void BaseFamilyTest::SetTestFlag(string_view flag_name, string_view new_value) {
 }
 
 void BaseFamilyTest::TestInitAclFam() {
+  absl::SetFlag(&FLAGS_acllog_max_len, 0);
   service_->TestInit();
 }
 
diff --git a/tests/dragonfly/acl_family_test.py b/tests/dragonfly/acl_family_test.py
index f237692cad91..ff4f76b0fc01 100644
--- a/tests/dragonfly/acl_family_test.py
+++ b/tests/dragonfly/acl_family_test.py
@@ -349,3 +349,42 @@ async def test_good_acl_file(df_local_factory, tmp_dir):
     assert "user vlad off nopass +@STRING" in result
 
     await client.close()
+
+
+@pytest.mark.asyncio
+async def test_acl_log(async_client):
+    res = await async_client.execute_command("ACL LOG")
+    assert [] == res
+
+    await async_client.execute_command("ACL SETUSER elon >mars ON +@string +@dangerous")
+
+    with pytest.raises(redis.exceptions.ResponseError):
+        await async_client.execute_command("AUTH elon wrong")
+
+    res = await async_client.execute_command("ACL LOG")
+    assert 1 == len(res)
+    assert res[0]["reason"] == "AUTH"
+    assert res[0]["object"] == "AUTH"
+    assert res[0]["username"] == "elon"
+
+    await async_client.execute_command("ACL LOG RESET")
+    res = await async_client.execute_command("ACL LOG")
+    assert 0 == len(res)
+
+    res = await async_client.execute_command("AUTH elon mars")
+    res = await async_client.execute_command("SET mykey 22")
+
+    with pytest.raises(redis.exceptions.ResponseError):
+        await async_client.execute_command("HSET mk kk 22")
+
+    res = await async_client.execute_command("ACL LOG")
+    assert 1 == len(res)
+    assert res[0]["reason"] == "COMMAND"
+    assert res[0]["object"] == "HSET"
+    assert res[0]["username"] == "elon"
+
+    with pytest.raises(redis.exceptions.ResponseError):
+        await async_client.execute_command("LPUSH mylist 2")
+
+    res = await async_client.execute_command("ACL LOG")
+    assert 2 == len(res)
