diff --git a/src/server/main_service.cc b/src/server/main_service.cc
index 3299c1e28f06..27c321539bdd 100644
--- a/src/server/main_service.cc
+++ b/src/server/main_service.cc
@@ -793,6 +793,7 @@ void Service::Init(util::AcceptServer* acceptor, std::vector<facade::Listener*>
   config_registry.RegisterMutable("table_growth_margin");
   config_registry.RegisterMutable("tcp_keepalive");
   config_registry.RegisterMutable("timeout");
+  config_registry.RegisterMutable("send_timeout");
   config_registry.RegisterMutable("managed_service_info");
 
   config_registry.RegisterMutable(
diff --git a/src/server/server_state.cc b/src/server/server_state.cc
index 433bf98a0c65..8fdbabfc23b9 100644
--- a/src/server/server_state.cc
+++ b/src/server/server_state.cc
@@ -23,6 +23,8 @@ extern "C" {
 ABSL_FLAG(uint32_t, interpreter_per_thread, 10, "Lua interpreters per thread");
 ABSL_FLAG(uint32_t, timeout, 0,
           "Close the connection after it is idle for N seconds (0 to disable)");
+ABSL_FLAG(uint32_t, send_timeout, 0,
+          "Close the connection after it is stuck on send for N seconds (0 to disable)");
 
 namespace dfly {
 
@@ -239,7 +241,8 @@ void ServerState::ConnectionsWatcherFb(util::ListenerInterface* main) {
     }
 
     uint32_t timeout = absl::GetFlag(FLAGS_timeout);
-    if (timeout == 0) {
+    uint32_t send_timeout = absl::GetFlag(FLAGS_send_timeout);
+    if (timeout == 0 && send_timeout == 0) {
       continue;
     }
 
@@ -262,8 +265,11 @@ void ServerState::ConnectionsWatcherFb(util::ListenerInterface* main) {
         is_replica = dfly_conn->cntx()->replica_conn;
       }
 
-      if ((phase == Phase::READ_SOCKET || dfly_conn->IsSending()) && !is_replica &&
-          dfly_conn->idle_time() > timeout) {
+      bool idle_read = timeout != 0 && !is_replica && phase == Phase::READ_SOCKET &&
+                       dfly_conn->idle_time() > timeout;
+      bool stuck_sending = send_timeout != 0 && !is_replica && dfly_conn->IsSending() &&
+                           dfly_conn->idle_time() > send_timeout;
+      if (idle_read || stuck_sending) {
         conn_refs.push_back(dfly_conn->Borrow());
       }
     };
