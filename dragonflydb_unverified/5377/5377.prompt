You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
zrange fails when range values have more than 10 significant digits
**Describe the bug**
If the start or stop index value passed to `zrange` has greater than 10 significant digits it will error


**To Reproduce**
```txl
zadd foobar 11111111111 test1 11111111112 test2
(integer) 2
127.0.0.1:6379> zrange foobar 0 11111111111
(error) ERR value is not an integer or out of range
```

**Expected behavior**
If stop is greater than the last index, it should return all of the elements from start to the end of the set as described in the redis docs. The above code will work with out error in redis

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Environment (please complete the following information):**
 - OS: Manjaro / Arch
 - Kernel: `Linux ronin 5.10.235-1-MANJARO #1 SMP PREEMPT Fri Mar 28 09:51:32 UTC 2025 x86_64 GNU/Linux`
 - Containerized?: Containerized / kubernetes
 - Dragonfly Version: 1.31.0



**Additional context**
We use epoc timestamps with millisecond level precision and this causes an error with dragonfly. the same code was working while we were on redis. 

Additionally, the dragonfly documentation indicates that a set can contain 2B elements, but it would appear it would not be possible to read the value after the set has grown past a certain size

We recognize that the code that exposed the problem is conflating scores via `zadd` and indexes via `zrange` and we should be using `zrangebyscore`. We will change this on our end, but it did not error when we were using stock redis, and would return the data we expected it to return
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
