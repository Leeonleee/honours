You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
After restart dragonfly converts negative int16 values into 2^16-{value}
**Describe the bug**
Hello guys! We're running dragonfly with int16 negative values for a few weeks and all were fine. 
But after today's restart we experinced some unexpected behaviour, all negative values in DB (at least in hash sets) were converted into 2^16- {value} (like 65296 instead of -240). And it occured right after restart, here are logs from client side (we're using redis/go-redis v9), error occurs right after exit from loading state:
```
2023/07/19 06:42:54.704568 ERROR:[miner] failed to get users for batchNumber:10,workerNumber:14: cannot scan redis.result 65176 into struct field UTCOffsetField.UTCOffset of type int16, error-strconv.ParseInt: parsing "65176": value out of range

2023-07-19 06:42:54    
2023/07/19 06:42:54.703264 ERROR:[miner] failed to get users for batchNumber:11,workerNumber:67: ERR Can not execute during LOADING
```


And direct DB call `HGET XXX "utc_offset"` returned that 65XXX value on both replica and master nodes.


**To Reproduce**
the reason is because internally both Redis and Dragonfly have differrent data structures
for hset
(called encodings)
so for small hash maps it works well
to reproduce - you need to force Dragonfly to switch to large encoding
hset xxx baraaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa -200
like this

**Expected behavior**
Values should stay the same

**Screenshots**

**Environment (please complete the following information):**
 - Containerized?: running in docker
 - Dragonfly Version: 1.30

**Reproducible Code Snippet**
```
# Minimal code snippet to reproduce this bug
```

**Additional context**
[Discord thread](https://discord.com/channels/981533931486724126/981533931960676364/1131182704633860187)
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
