diff --git a/src/server/zset_family_test.cc b/src/server/zset_family_test.cc
index da6fa0abbdc5..f1b109908d75 100644
--- a/src/server/zset_family_test.cc
+++ b/src/server/zset_family_test.cc
@@ -478,6 +478,16 @@ TEST_F(ZSetFamilyTest, ZPopMax) {
   ASSERT_THAT(resp, ArrLen(0));
 }
 
+TEST_F(ZSetFamilyTest, ZAddPopCrash) {
+  for (int i = 0; i < 129; ++i) {
+    auto resp = Run({"zadd", "key", absl::StrCat(i), absl::StrCat("element:", i)});
+    EXPECT_THAT(resp, IntArg(1));
+  }
+
+  auto resp = Run({"zpopmin", "key"});
+  EXPECT_EQ(resp, "element:0");
+}
+
 TEST_F(ZSetFamilyTest, Resp3) {
   Run({"hello", "3"});
   Run({"zadd", "x", "1", "a", "2", "b"});
diff --git a/tests/dragonfly/utility.py b/tests/dragonfly/utility.py
index 30029723d4c1..27010d7b2700 100644
--- a/tests/dragonfly/utility.py
+++ b/tests/dragonfly/utility.py
@@ -199,7 +199,7 @@ def gen_shrink_cmd(self):
         ('SPOP {k}', ValueType.SET),
         ('HSETNX {k} v0 {val}', ValueType.HSET),
         ('HINCRBY {k} v1 1', ValueType.HSET),
-        # ('ZPOPMIN {k} 1', ValueType.ZSET), https://github.com/dragonflydb/dragonfly/issues/949
+        ('ZPOPMIN {k} 1', ValueType.ZSET),
         ('ZADD {k} 0 {val}', ValueType.ZSET),
         ('JSON.NUMINCRBY {k} $..i 1', ValueType.JSON),
         ('JSON.ARRPOP {k} $.arr', ValueType.JSON),
