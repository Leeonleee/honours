{
  "repo": "dragonflydb/dragonfly",
  "pull_number": 2672,
  "instance_id": "dragonflydb__dragonfly-2672",
  "issue_numbers": [
    "2664"
  ],
  "base_commit": "7e4527098ba75ecc87c1a4b8d0ce5e70138f2d9c",
  "patch": "diff --git a/src/facade/facade.cc b/src/facade/facade.cc\nindex e0cd559ed499..f5a832ad0d8f 100644\n--- a/src/facade/facade.cc\n+++ b/src/facade/facade.cc\n@@ -160,7 +160,7 @@ ostream& operator<<(ostream& os, const facade::RespExpr& e) {\n       os << \"i\" << get<int64_t>(e.u);\n       break;\n     case RespExpr::DOUBLE:\n-      os << \"d\" << get<int64_t>(e.u);\n+      os << \"d\" << get<double>(e.u);\n       break;\n     case RespExpr::STRING:\n       os << \"'\" << ToSV(get<RespExpr::Buffer>(e.u)) << \"'\";\ndiff --git a/src/server/main_service.cc b/src/server/main_service.cc\nindex f2ea0e21ebb5..d3d58f2e5293 100644\n--- a/src/server/main_service.cc\n+++ b/src/server/main_service.cc\n@@ -74,7 +74,8 @@ ABSL_FLAG(bool, multi_exec_squash, true,\n           \"Whether multi exec will squash single shard commands to optimize performance\");\n \n ABSL_FLAG(bool, track_exec_frequencies, true, \"Whether to track exec frequencies for multi exec\");\n-\n+ABSL_FLAG(bool, lua_resp2_legacy_float, false,\n+          \"Return rounded down integers instead of floats for lua scripts with RESP2\");\n ABSL_FLAG(uint32_t, multi_eval_squash_buffer, 4_KB, \"Max buffer for squashed commands per script\");\n \n ABSL_DECLARE_FLAG(bool, primary_port_http_enabled);\n@@ -303,7 +304,12 @@ class EvalSerializer : public ObjectExplorer {\n   }\n \n   void OnDouble(double d) final {\n-    rb_->SendDouble(d);\n+    if (rb_->IsResp3() || !absl::GetFlag(FLAGS_lua_resp2_legacy_float)) {\n+      rb_->SendDouble(d);\n+    } else {\n+      long val = static_cast<long>(floor(d));\n+      rb_->SendLong(val);\n+    }\n   }\n \n   void OnInt(int64_t val) final {\n",
  "test_patch": "diff --git a/src/server/dragonfly_test.cc b/src/server/dragonfly_test.cc\nindex 67406a98329c..cbba7780f954 100644\n--- a/src/server/dragonfly_test.cc\n+++ b/src/server/dragonfly_test.cc\n@@ -25,6 +25,7 @@ extern \"C\" {\n ABSL_DECLARE_FLAG(float, mem_defrag_threshold);\n ABSL_DECLARE_FLAG(std::vector<std::string>, rename_command);\n ABSL_DECLARE_FLAG(double, oom_deny_ratio);\n+ABSL_DECLARE_FLAG(bool, lua_resp2_legacy_float);\n \n namespace dfly {\n \n@@ -706,6 +707,20 @@ TEST_F(DflyEngineTest, Latency) {\n   Run({\"latency\", \"latest\"});\n }\n \n+TEST_F(DflyEngineTest, EvalBug2664) {\n+  absl::FlagSaver fs;\n+  absl::SetFlag(&FLAGS_lua_resp2_legacy_float, true);\n+\n+  auto resp = Run({\"eval\", \"return 42.9\", \"0\"});\n+  EXPECT_THAT(resp, IntArg(42));\n+\n+  resp = Run({\"hello\", \"3\"});\n+  ASSERT_THAT(resp, ArrLen(14));\n+\n+  resp = Run({\"eval\", \"return 42.9\", \"0\"});\n+  EXPECT_THAT(resp, DoubleArg(42.9));\n+}\n+\n // TODO: to test transactions with a single shard since then all transactions become local.\n // To consider having a parameter in dragonfly engine controlling number of shards\n // unconditionally from number of cpus. TO TEST BLPOP under multi for single/multi argument case.\n",
  "problem_statement": "tonumber not match lua 5.4 behaviour\n**Describe the bug**\r\n`tonumber` in lua 5.4 must never return a `string`, that have to return a `number` or `fail` \r\n\r\nBut with a `float` input it return a `string` ! \r\n\r\nRef: https://www.lua.org/manual/5.4/manual.html#tonumber\r\n\r\n**To Reproduce**\r\n```\r\n127.0.0.1:6379> eval 'return tonumber(34343.223121)' 0\r\n\"34343.223121\"\r\n```\r\n\r\n**Expected behavior**\r\nthis is from Redis v7\r\n\r\n```\r\n127.0.0.1:6379> eval 'return tonumber(34343.223121)' 0\r\n(integer) 34343\r\n```\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: ubuntu 22.04\r\n - Kernel: 6.5.0-21-generic\r\n - Containerized?: Kubernetes\r\n - Dragonfly Version: v1.14.1\r\n\n",
  "hints_text": "lua does not return a string but RESP2 [can not return floats](https://redis.io/docs/reference/protocol-spec/#resp-protocol-description) so it returns strings instead. I do not think that Redis7 behavior is the correct one since `tonumber` should not round down numbers. I suggest that we return floats for RESP3 and strings for RESP2 - see https://redis.io/docs/reference/protocol-spec/#doubles \r\n\r\nWill that work for you @aarnaud  ?\nfloat instead of string when using `myvar = tonumber(\"1222.1212\")`  should work to move from redis to dragonflagdb\n@aarnaud what redis client do you use? \n@aarnaud i just checked - it's working as expected:\r\n```\r\n> redis-cli  -3\r\n\r\n127.0.0.1:6379> eval 'return tonumber(34343.223121)' 0\r\n(double) 34343.223121\r\n```\r\n\r\nplease upgrade to resp3 to benefit from using floats.\nI think i don't have the control of the api version use by the app. I just notice the difference between Redis and Dragonfly because there is crashes in logs. \r\nI opened this issue because Dragonfly is normally `fully compatible with Redis APIs` \nWhat's the app and what's the redis client? Most clients should support resp3 so I am curious to learn why the friction exists.\nIt's Sentry, they have there own legacy client (RB, redis blaster) that is still used a some point, I checked quickly config option and I don't find a way to specify the protocol. for example on Snuba.  \r\n\r\nFor now, the deployment with the helm release redis-ha will do the job to have a resilient redis. But I had big hope on Dragonfly\r\n\r\nThere is also in lua redis.log that don't exist\nredis.log is already merged and will be present in 1.15.\r\nI will add legacy support for doubles for RESP2 under a flag for 1.15 as well.\nwaw, thanks @romange  ",
  "created_at": "2024-02-28T20:26:18Z",
  "modified_files": [
    "src/facade/facade.cc",
    "src/server/main_service.cc"
  ],
  "modified_test_files": [
    "src/server/dragonfly_test.cc"
  ]
}