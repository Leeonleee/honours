You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
support Sidekiq Pro's reliable scheduler script by marking it with allow-undeclared-keys
Redis Lua requires the user to define all keys touched by a Lua script when invoking that script in order to run correctly in Redis Cluster.

The problem is that Sidekiq Pro's reliable scheduler does not know which queue (list) it will touch next when invoked. And Redis allows us to violate that requirement since Sidekiq does not support Redis Cluster.

The Lua scheduler is a simple loop:

- Take the first job off ZSet "scheduled" where score is < Time.now.to_f.
- Parse the JSON to get the `queue` element.
- Push the job onto that named queue.

As you can see, we know the Lua script will touch `scheduled` but we don't know the name of the queue because the scheduled set holds future jobs for all queues and the job data itself tells us which queue to mutate.

Unfortunately it looks like DragonflyDB enforces this Lua requirement, making Sidekiq Pro's reliable scheduler feature incompatible. Redis does allow it as long as it is not running in Cluster mode.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
