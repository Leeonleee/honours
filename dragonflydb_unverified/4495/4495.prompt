You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Dragonfly crashes during migrations
Dragonfly crashes during migrations, with stack trace:
```
#0  __pthread_kill_implementation (threadid=281474836474368, signo=signo@entry=11, no_tid=no_tid@entry=0) at ./nptl/pthread_kill.c:44
#1  0x0000fffff7d97690 in __pthread_kill_internal (signo=11, threadid=<optimized out>) at ./nptl/pthread_kill.c:78
#2  0x0000fffff7d4cb3c in __GI_raise (sig=11) at ../sysdeps/posix/raise.c:26
#3  <signal handler called>
#4  0x0000aaaaaaf2e4fc in dfly::DashTable<dfly::CompactObj, dfly::CompactObj, dfly::detail::PrimeTablePolicy>::Iterator<false, true>::GetVersion<true> (this=<optimized out>)
    at /var/lib/dragonfly/dragonfly/dragonfly/src/core/dash.h:430
#5  dfly::RestoreStreamer::WriteBucket (this=this@entry=0x3bd5e0c1598, it=...) at /var/lib/dragonfly/dragonfly/dragonfly/src/server/journal/streamer.cc:300
#6  0x0000aaaaaaf2f178 in dfly::RestoreStreamer::OnDbChange (this=0x3bd5e0c1598, db_index=<optimized out>, req=...) at /var/lib/dragonfly/dragonfly/dragonfly/src/server/journal/streamer.cc:337
#7  0x0000aaaaaaee31cc in std::function<void (unsigned short, dfly::DbSlice::ChangeReq const&)>::operator()(unsigned short, dfly::DbSlice::ChangeReq const&) const (__args#1=..., __args#0=<optimized out>, 
    this=0x3bd5e0e5558) at /usr/include/c++/13/bits/std_function.h:591
#8  dfly::DbSlice::FlushChangeToEarlierCallbacks (this=this@entry=0x3bd5e0f0440, db_ind=db_ind@entry=0, it=..., upper_bound=3889649) at /var/lib/dragonfly/dragonfly/dragonfly/src/server/db_slice.cc:1196
#9  0x0000aaaaaaf2eaf8 in operator() (it=..., __closure=<optimized out>) at /usr/include/c++/13/bits/allocator.h:184
#10 dfly::DashTable<dfly::CompactObj, dfly::CompactObj, dfly::detail::PrimeTablePolicy>::TraverseBuckets<dfly::RestoreStreamer::Run()::<lambda(dfly::DashTable<dfly::CompactObj, dfly::CompactObj, dfly::detail::PrimeTablePolicy>::bucket_iterator)> > (cb=..., cursor=..., this=<optimized out>) at /var/lib/dragonfly/dragonfly/dragonfly/src/core/dash.h:1003
#11 dfly::RestoreStreamer::Run (this=0x3bd5e0c1e98) at /var/lib/dragonfly/dragonfly/dragonfly/src/server/journal/streamer.cc:211
#12 0x0000aaaaaae00224 in std::function<void (std::unique_ptr<dfly::cluster::OutgoingMigration::SliceSlotMigration, std::default_delete<dfly::cluster::OutgoingMigration::SliceSlotMigration> >&)>::operator()(std::unique_ptr<dfly::cluster::OutgoingMigration::SliceSlotMigration, std::default_delete<dfly::cluster::OutgoingMigration::SliceSlotMigration> >&) const (__args#0=..., this=<optimized out>)
    at /usr/include/c++/13/bits/std_function.h:591
#13 operator() (__closure=<synthetic pointer>, pb=<optimized out>) at /var/lib/dragonfly/dragonfly/dragonfly/src/server/cluster/outgoing_slot_migration.cc:137
#14 operator() (context=<optimized out>, __closure=<synthetic pointer>) at /var/lib/dragonfly/dragonfly/dragonfly/helio/util/proactor_pool.h:194
#15 std::__invoke_impl<void, util::ProactorPool::AwaitFiberOnAll<dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)> >(dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)>&&)::<lambda(util::ProactorPool::ProactorBase*)>, util::fb2::ProactorBase*> (
    __f=<synthetic pointer>) at /usr/include/c++/13/bits/invoke.h:61
#16 std::__invoke<util::ProactorPool::AwaitFiberOnAll<dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)> >(dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)>&&)::<lambda(util::ProactorPool::ProactorBase*)>, util::fb2::ProactorBase*> (
    __fn=<synthetic pointer>) at /usr/include/c++/13/bits/invoke.h:96
#17 std::__apply_impl<util::ProactorPool::AwaitFiberOnAll<dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)> >(dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)>&&)::<lambda(util::ProactorPool::ProactorBase*)>, std::tuple<util::fb2::ProactorBase*>, 0> (__t=<synthetic pointer>, __f=<synthetic pointer>) at /usr/include/c++/13/tuple:2302
#18 std::apply<util::ProactorPool::AwaitFiberOnAll<dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)> >(dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)>&&)::<lambda(util::ProactorPool::ProactorBase*)>, std::tuple<util::fb2::ProactorBase*> > (
    __t=<synthetic pointer>, __f=<synthetic pointer>) at /usr/include/c++/13/tuple:2313
#19 util::fb2::detail::WorkerFiberImpl<const util::ProactorPool::AwaitFiberOnAll<dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)> >(dfly::cluster::OutgoingMigration::OnAllShards(std::function<void(std::unique_ptr<SliceSlotMigration>&)>)::<lambda(util::fb2::ProactorBase*)>&&)::<lambda(util::ProactorPool::ProactorBase*)>, util::fb2::ProactorBase*&>::run_ (c=..., this=0xffffc4040e00) at /var/lib/dragonfly/dragonfly/dragonfly/helio/util/fibers/detail/fiber_interface.h:304

```

Running Dragonfly v1.26.1

This is running 100x100GB shards, each populated to 75% memory. I'll add more information below...
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
