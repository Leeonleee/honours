You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Segfault on calls to HEXPIRE
**Describe the bug**
There seems to be some sort of race condition in v.1.24.0 where if one calls `HEXPIRE` on fields using the same key in parallell, we get a segfault. I've provided some code that triggers it in 100% of the cases I've tried. However, there might be random variables at play, that I haven't obvserved, so please do try a few runs if it doesn't happen right away.

**To Reproduce**
Steps to reproduce the behavior:
0. Run Dragonflydb locally on port 6379
1. Generate some stable ids
```
for run in {1..100}; do touch $(uuidgen); done;
```
2. Insert some values
```
ls | xargs -P 8 -I{} sh -c 'echo "HSET abc {} 1" | nc -c localhost 6379'
```
3. HEXPIRE these elements in parallell
```
ls | xargs -P 8 -I{} sh -c 'echo "HEXPIRE abc 10 FIELDS 1 {}" | nc -c localhost 6379'
```
4. At step 3 a similar error to this should occur serverside:
```
*** SIGSEGV received at time=1729702103 on cpu 12 ***
PC: @     0x5e996c28e944  (unknown)  dfly::SdsUpdateExpireTime()
```
EDIT: You might need to substitute `nc -c` with `nc -q0` or `nc -w0` depending on your distribution.

**Expected behavior**
Even if there's parallell calls (especially when we're not operating on the same underlying field), I wouldn't expect there to be a segfault.

**Environment (please complete the following information):**
 - OS: I think this is irrellevant. Happens on both Ubuntu, offical docker, and arch.
 - Kernel: # Command: I think this is irrellevant. Happens on both Ubuntu, offical docker, and arch.
 - Containerized?: Yes, docker.
 - Dragonfly Version: v1.24.0

**Additional context**
I wrote the code for `HEXPIRE`, so I regret not being able to debug this. But I think one would need to know more about the inner workings than I do. It seems like an  `sds` ends up in an invalid state / gets deleted somehow, and then gets acted upon.
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
