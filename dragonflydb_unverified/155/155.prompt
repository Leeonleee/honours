You will be provided with a partial code base and an issue statement explaining a problem to resolve.

<issue>
Leaking connections when used with redis-py's asyncio.ConnectionPool
### My setup:
Ubuntu 20.04.4 machine with Linux kernel 5.18
Dragonfly x86_64 version 0.3 alpha (bare metal)


### Issue:
When running an async redis client and using pipelining in order to batch transactions, after a short period of time Dragonfly stops responding and it just hangs.
When observing the open connections, I found out that there are multiple ESTABLISHED connections to Dragonfly, all of them are just hanging.

Same code works just fine with the latest redis-server and the connections are closed properly.

### Python code to reproduce the problem:

```python
connection_pools = {
    "my_db" : None,
    "my_db2" : None
}

connection_pools[db_name] = aioredis.ConnectionPool(host=config["hostname"], port=config["port"], db=config["databases"][db_name], password=config["password"], decode_responses=True, max_connections=16)

async def post_to_redis(my_list, my_list2, db_name):
        if connection_pools[db_name] is None:
                await init_pool(db_name)
            results = None
        try:
                redis_client = aioredis.Redis(connection_pool=connection_pools[db_name])
                async with redis_client.pipeline(transaction=True) as pipe:
                        for k,v in list(my_list):
                                pipe.hsetnx(name=k, key="name", value=v)
                        for k,v in list(my_list2):
                                pipe.hsetnx(name=k, key="name2", value=v)
                        if len(pipe.command_stack) > 0:
                                results = await pipe.execute()
        finally:
                await redis_client.close()
                return results

async def do_concurrent(db_name):
        tasks = []
        for i in range(1,100):
                tasks.append(post_to_redis(my_list, my_list2, db_name))
        res = await asyncio.gather(*tasks)```
</issue>

I need you to solve the provided issue by generating a code fix that can be applied directly to the repository

Respond below:
