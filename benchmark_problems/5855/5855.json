{
  "repo": "duckdb/duckdb",
  "pull_number": 5855,
  "instance_id": "duckdb__duckdb-5855",
  "issue_numbers": [
    "5788",
    "5788"
  ],
  "base_commit": "46f8e0b7cee4ebdb0762a676e75cd976ce314cd1",
  "patch": "diff --git a/src/planner/expression_binder/select_binder.cpp b/src/planner/expression_binder/select_binder.cpp\nindex 9d9bd1aecef8..8aa2140a8973 100644\n--- a/src/planner/expression_binder/select_binder.cpp\n+++ b/src/planner/expression_binder/select_binder.cpp\n@@ -92,6 +92,11 @@ BindResult SelectBinder::BindColumnRef(unique_ptr<ParsedExpression> *expr_ptr, i\n \t\t\t\t                      \"effects. This is not yet supported.\",\n \t\t\t\t                      colref.column_names[0]);\n \t\t\t}\n+\t\t\tif (node.select_list[index]->HasSubquery()) {\n+\t\t\t\tthrow BinderException(\"Alias \\\"%s\\\" referenced in a SELECT clause - but the expression has a subquery.\"\n+\t\t\t\t                      \" This is not yet supported.\",\n+\t\t\t\t                      colref.column_names[0]);\n+\t\t\t}\n \t\t\tauto result = BindResult(node.select_list[index]->Copy());\n \t\t\tif (result.expression->type == ExpressionType::BOUND_COLUMN_REF) {\n \t\t\t\tauto &result_expr = (BoundColumnRefExpression &)*result.expression;\n",
  "test_patch": "diff --git a/test/fuzzer/pedro/binder_assertion_error.test b/test/fuzzer/pedro/binder_assertion_error.test\nindex dbabda88405d..f2807f61891b 100644\n--- a/test/fuzzer/pedro/binder_assertion_error.test\n+++ b/test/fuzzer/pedro/binder_assertion_error.test\n@@ -20,7 +20,7 @@ SELECT (SELECT 0) c0 WHERE (SELECT c0);\n statement error\n select (select 42) as a, (select a);\n ----\n-Serialization Error: Cannot copy BoundSubqueryExpression\n+This is not yet supported\n \n # The last a should resolve to 1 from the (select 1) a\n # The b should resolve to 3\ndiff --git a/test/sql/binder/test_select_clause_alias.test b/test/sql/binder/test_select_clause_alias.test\nindex 6020fa679d9c..6d88bce7ddc5 100644\n--- a/test/sql/binder/test_select_clause_alias.test\n+++ b/test/sql/binder/test_select_clause_alias.test\n@@ -42,3 +42,22 @@ SELECT a + 1 AS b, i + 1 AS a FROM integers\n # expressions with side effects are not supported yet\n statement error\n SELECT RANDOM() AS a, a + 1 AS b FROM integers\n+----\n+This is not yet supported\n+\n+statement ok\n+create table orders as\n+select\n+    cast(random()*100 as integer) + 1 as customer_id,\n+    date '2020-01-01' + interval (cast(random()*365*10 as integer)) days as order_date,\n+    cast(random()*1000 as integer) as order_amount,\n+from range(0, 1000)\n+order by order_date;\n+\n+# expressions with subqueries are not supported yet\n+statement error\n+select\n+    (select distinct date_trunc('month', order_date) from orders) as month,\n+    (select sum(order_amount) from orders where date_trunc('month', order_date) = month) as revenue;\n+----\n+This is not yet supported\n",
  "problem_statement": "Error when trying to join to alias\n### What happens?\n\nThis query fails with `Serialization Error: Cannot copy BoundSubqueryExpression`\n\n### To Reproduce\n\n```sql\r\ncreate table orders as\r\nselect \r\n    cast(random()*100 as integer) + 1 as customer_id, \r\n    date '2020-01-01' + interval (cast(random()*365*10 as integer)) days as order_date,\r\n    cast(random()*1000 as integer) as order_amount,\r\nfrom range(0, 1000)\r\norder by order_date;\r\n\r\nselect \r\n    (select distinct date_trunc('month', order_date) from orders) as month,\r\n    (select sum(order_amount) from orders where date_trunc('month', order_date) = month) as revenue;\r\n```\n\n### OS:\n\nmacOS\n\n### DuckDB Version:\n\nv0.6.1 919cad22e8\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nGeorge Fraser\n\n### Affiliation:\n\nFivetran\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\nError when trying to join to alias\n### What happens?\n\nThis query fails with `Serialization Error: Cannot copy BoundSubqueryExpression`\n\n### To Reproduce\n\n```sql\r\ncreate table orders as\r\nselect \r\n    cast(random()*100 as integer) + 1 as customer_id, \r\n    date '2020-01-01' + interval (cast(random()*365*10 as integer)) days as order_date,\r\n    cast(random()*1000 as integer) as order_amount,\r\nfrom range(0, 1000)\r\norder by order_date;\r\n\r\nselect \r\n    (select distinct date_trunc('month', order_date) from orders) as month,\r\n    (select sum(order_amount) from orders where date_trunc('month', order_date) = month) as revenue;\r\n```\n\n### OS:\n\nmacOS\n\n### DuckDB Version:\n\nv0.6.1 919cad22e8\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nGeorge Fraser\n\n### Affiliation:\n\nFivetran\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "(I filled out the affiliation but this is not actually Fivetran-related)\n(I filled out the affiliation but this is not actually Fivetran-related)",
  "created_at": "2023-01-08T12:50:39Z",
  "modified_files": [
    "src/planner/expression_binder/select_binder.cpp"
  ],
  "modified_test_files": [
    "test/fuzzer/pedro/binder_assertion_error.test",
    "test/sql/binder/test_select_clause_alias.test"
  ]
}