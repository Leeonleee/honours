{
  "repo": "duckdb/duckdb",
  "pull_number": 7301,
  "instance_id": "duckdb__duckdb-7301",
  "issue_numbers": [
    "7269",
    "7269"
  ],
  "base_commit": "43a97f90780a2b534c27540310526013c7deca24",
  "patch": "diff --git a/tools/pythonpkg/src/pyrelation.cpp b/tools/pythonpkg/src/pyrelation.cpp\nindex d2523946e673..4debb345cfe7 100644\n--- a/tools/pythonpkg/src/pyrelation.cpp\n+++ b/tools/pythonpkg/src/pyrelation.cpp\n@@ -875,6 +875,7 @@ void DuckDBPyRelation::Print() {\n \n string DuckDBPyRelation::Explain(ExplainType type) {\n \tAssertRelation();\n+\tpy::gil_scoped_release release;\n \tauto res = rel->Explain(type);\n \tD_ASSERT(res->type == duckdb::QueryResultType::MATERIALIZED_RESULT);\n \tauto &materialized = (duckdb::MaterializedQueryResult &)*res;\n",
  "test_patch": "diff --git a/tools/pythonpkg/tests/fast/api/test_explain.py b/tools/pythonpkg/tests/fast/api/test_explain.py\nindex e92311bd8ae7..dab6d54bf690 100644\n--- a/tools/pythonpkg/tests/fast/api/test_explain.py\n+++ b/tools/pythonpkg/tests/fast/api/test_explain.py\n@@ -37,3 +37,9 @@ def test_explain_analyze(self):\n \n \t\tres = duckdb.sql('select 42').explain(1)\n \t\tassert isinstance(res, str)\n+\n+\tdef test_explain_df(self):\n+\t\tpd = pytest.importorskip(\"pandas\")\n+\t\tdf = pd.DataFrame({'a': [42]})\n+\t\tres = duckdb.sql('select * from df').explain('ANALYZE')\n+\t\tassert isinstance(res, str)\n",
  "problem_statement": "explain(type=\"analyze\") throwing an \"Invalid Input Error\" when used with a dataframe\n### What happens?\n\nWhen using Python API's `.explain(type='analyze')`, an InvalidInputException is thrown in a simple case:\r\n\r\n`con.sql('select * from df1').explain(type=\"analyze\")'\r\n\r\n> InvalidInputException: Invalid Input Error: Attempting to get collection from an unsuccessful query result\r\n: Error Invalid Input Error: PandasScan called but GIL was already held!\n\n### To Reproduce\n\nEnv: Duckdb 0.7.2-dev2552, Pandas 1.5.3, Python 3.9.16\r\n\r\nFails when select includes a dataframe: \r\n```\r\nimport duckdb\r\nimport pandas as pd\r\ndf1 = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nwith duckdb.connect() as con: \r\n    con.sql(\"PRAGMA enable_profiling=json;\")\r\n    print(con.sql('select * from df1').df())\r\n    print(con.sql('select * from df1').explain(type=\"analyze\"))  # error here\r\n```\r\n>InvalidInputException: Invalid Input Error: Attempting to get collection from an unsuccessful query result\r\n> : Error Invalid Input Error: PandasScan called but GIL was already held!\r\n\r\nSucceeds against a table: \r\n```\r\nimport duckdb\r\nimport pandas as pd\r\ndf1 = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nwith duckdb.connect() as con: \r\n    con.sql(\"PRAGMA enable_profiling=json;\")\r\n    con.sql('create table df1t as select * from df1')\r\n    print(con.sql('select * from df1t').df())\r\n    print(con.sql('select * from df1t').explain(type=\"analyze\"))\r\n```\r\n\r\nAnd, succeeds as \"explain analyze\":\r\n```import duckdb\r\nimport pandas as pd\r\ndf1 = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nwith duckdb.connect() as con: \r\n    con.sql(\"PRAGMA enable_profiling=json;\")\r\n    print(con.sql('explain analyze select * from df1'))\r\n```\r\n\r\nRelated to https://github.com/duckdb/duckdb/pull/6561?\n\n### OS:\n\nWindows\n\n### DuckDB Version:\n\n\u2502 0.7.2-dev2552   \u2502 98590facb8 \u2502\n\n### DuckDB Client:\n\nPython\n\n### Full Name:\n\nP Timmins\n\n### Affiliation:\n\nIqmo\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\nexplain(type=\"analyze\") throwing an \"Invalid Input Error\" when used with a dataframe\n### What happens?\n\nWhen using Python API's `.explain(type='analyze')`, an InvalidInputException is thrown in a simple case:\r\n\r\n`con.sql('select * from df1').explain(type=\"analyze\")'\r\n\r\n> InvalidInputException: Invalid Input Error: Attempting to get collection from an unsuccessful query result\r\n: Error Invalid Input Error: PandasScan called but GIL was already held!\n\n### To Reproduce\n\nEnv: Duckdb 0.7.2-dev2552, Pandas 1.5.3, Python 3.9.16\r\n\r\nFails when select includes a dataframe: \r\n```\r\nimport duckdb\r\nimport pandas as pd\r\ndf1 = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nwith duckdb.connect() as con: \r\n    con.sql(\"PRAGMA enable_profiling=json;\")\r\n    print(con.sql('select * from df1').df())\r\n    print(con.sql('select * from df1').explain(type=\"analyze\"))  # error here\r\n```\r\n>InvalidInputException: Invalid Input Error: Attempting to get collection from an unsuccessful query result\r\n> : Error Invalid Input Error: PandasScan called but GIL was already held!\r\n\r\nSucceeds against a table: \r\n```\r\nimport duckdb\r\nimport pandas as pd\r\ndf1 = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nwith duckdb.connect() as con: \r\n    con.sql(\"PRAGMA enable_profiling=json;\")\r\n    con.sql('create table df1t as select * from df1')\r\n    print(con.sql('select * from df1t').df())\r\n    print(con.sql('select * from df1t').explain(type=\"analyze\"))\r\n```\r\n\r\nAnd, succeeds as \"explain analyze\":\r\n```import duckdb\r\nimport pandas as pd\r\ndf1 = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nwith duckdb.connect() as con: \r\n    con.sql(\"PRAGMA enable_profiling=json;\")\r\n    print(con.sql('explain analyze select * from df1'))\r\n```\r\n\r\nRelated to https://github.com/duckdb/duckdb/pull/6561?\n\n### OS:\n\nWindows\n\n### DuckDB Version:\n\n\u2502 0.7.2-dev2552   \u2502 98590facb8 \u2502\n\n### DuckDB Client:\n\nPython\n\n### Full Name:\n\nP Timmins\n\n### Affiliation:\n\nIqmo\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "\n",
  "created_at": "2023-04-29T20:25:35Z"
}