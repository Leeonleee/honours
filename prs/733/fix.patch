diff --git a/scripts/amalgamation.py b/scripts/amalgamation.py
index 2381c1b459da..2034c068b235 100644
--- a/scripts/amalgamation.py
+++ b/scripts/amalgamation.py
@@ -153,6 +153,8 @@ def generate_amalgamation(source_file, header_file):
 
     copy_if_different(temp_header, header_file)
     copy_if_different(temp_source, source_file)
+    os.remove(temp_header)
+    os.remove(temp_source)
 
 
 
diff --git a/tools/pythonpkg/duckdb_python.cpp b/tools/pythonpkg/duckdb_python.cpp
index fe9d984085f8..64192546ed91 100644
--- a/tools/pythonpkg/duckdb_python.cpp
+++ b/tools/pythonpkg/duckdb_python.cpp
@@ -227,13 +227,7 @@ struct PandasScanFunction : public TableFunction {
 					if (PyUnicode_READY(val) != 0) {
 						throw runtime_error("failure in PyUnicode_READY");
 					}
-					if (PyUnicode_KIND(val) == PyUnicode_1BYTE_KIND) {
-						auto ucs1 = PyUnicode_1BYTE_DATA(val);
-						auto length = PyUnicode_GET_LENGTH(val);
-						tgt_ptr[row] = string_t((const char*) ucs1, length);
-					} else {
-						tgt_ptr[row] = StringVector::AddString(output.data[col_idx], ((py::object*) &val)->cast<string>());
-					}
+					tgt_ptr[row] = StringVector::AddString(output.data[col_idx], ((py::object*) &val)->cast<string>());
 #else
 					if (!py::isinstance<py::str>(*((py::object*) &val))) {
 						FlatVector::SetNull(output.data[col_idx], row, true);
diff --git a/tools/pythonpkg/setup.py b/tools/pythonpkg/setup.py
index 5a5a75194bf5..b7e925730825 100755
--- a/tools/pythonpkg/setup.py
+++ b/tools/pythonpkg/setup.py
@@ -36,7 +36,8 @@
 
 
 toolchain_args = ['-std=c++11']
-#toolchain_args = ['-std=c++11', '-Wall', '-O0', '-g']
+if 'DUCKDEBUG' in os.environ:
+    toolchain_args = ['-std=c++11', '-Wall', '-O0', '-g']
 
 if platform.system() == 'Darwin':
     toolchain_args.extend(['-stdlib=libc++', '-mmacosx-version-min=10.7'])
