{
  "repo": "duckdb/duckdb",
  "pull_number": 9744,
  "instance_id": "duckdb__duckdb-9744",
  "issue_numbers": [
    "9742",
    "9742"
  ],
  "base_commit": "802c71dafccae1dde17e1970436860fabf3c134f",
  "patch": "diff --git a/src/parser/transform/expression/transform_multi_assign_reference.cpp b/src/parser/transform/expression/transform_multi_assign_reference.cpp\nindex e2c4937fe0b7..658e617ab4b7 100644\n--- a/src/parser/transform/expression/transform_multi_assign_reference.cpp\n+++ b/src/parser/transform/expression/transform_multi_assign_reference.cpp\n@@ -15,13 +15,13 @@ unique_ptr<ParsedExpression> Transformer::TransformMultiAssignRef(duckdb_libpgqu\n \t\t\treturn TransformExpression(root.source);\n \t\t}\n \n+\t\tint provided_values = func.args ? func.args->length : 0;\n \t\t// Too many columns (ie. (x, y) = (1, 2, 3) )\n-\t\tif (root.ncolumns < func.args->length) {\n+\t\tif (root.ncolumns < provided_values || !func.args) {\n \t\t\tthrow ParserException(\n \t\t\t    \"Could not perform multiple assignment, target only expects %d values, %d were provided\", root.ncolumns,\n-\t\t\t    func.args->length);\n+\t\t\t    provided_values);\n \t\t}\n-\n \t\t// Get the expression corresponding with the current column\n \t\tidx_t idx = 1;\n \t\tauto list = func.args->head;\n",
  "test_patch": "diff --git a/test/sql/types/struct/update_empty_row.test b/test/sql/types/struct/update_empty_row.test\nnew file mode 100644\nindex 000000000000..af4c8b22cfe0\n--- /dev/null\n+++ b/test/sql/types/struct/update_empty_row.test\n@@ -0,0 +1,8 @@\n+# name: test/sql/types/struct/update_empty_row.test\n+# description: Test storing structs in in-memory tables\n+# group: [struct]\n+\n+statement error\n+UPDATE t0 SET ( c0 ) = ROW ( );\n+----\n+target only expects 1 values, 0 were provided\n",
  "problem_statement": "DuckDB parser crashes when giving empty ROW\n### What happens?\n\nThe latest release version of DuckDB (`v0.9.1` `401c8061c6ece`) crashes when executing the following query:\r\n\r\n```sql\r\nUPDATE t0 SET ( c0 ) = ROW ( );\r\n```\r\n\r\nHere is the stack trace from GDB: \r\n\r\n```\r\n#0  0x0000aaaaabb10ba4 in duckdb::Transformer::TransformMultiAssignRef (this=this@entry=0xffffffffd0f0, root=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transform/expression/transform_multi_assign_reference.cpp:19\r\n#1  0x0000aaaaabb0cc44 in duckdb::Transformer::TransformExpression (this=this@entry=0xffffffffd0f0, node=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transform/expression/transform_expression.cpp:79\r\n#2  0x0000aaaaabb0cf74 in duckdb::Transformer::TransformExpression (this=this@entry=0xffffffffd0f0, node=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/include/duckdb/common/optional_ptr.hpp:35\r\n#3  0x0000aaaaab5a61bc in duckdb::Transformer::TransformUpdateSetInfo (this=this@entry=0xffffffffd0f0, target_list=<optimized out>, where_clause=0xaaaaac6bc9e0)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/include/duckdb/common/optional_ptr.hpp:43\r\n#4  0x0000aaaaab5a66c8 in duckdb::Transformer::TransformUpdate (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/include/duckdb/common/unique_ptr.hpp:38\r\n#5  0x0000aaaaaaf657a8 in duckdb::Transformer::TransformStatementInternal (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transformer.cpp:165\r\n#6  0x0000aaaaaaf658e4 in duckdb::Transformer::TransformStatement (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transformer.cpp:60\r\n#7  0x0000aaaaaaf657fc in duckdb::Transformer::TransformStatementInternal (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transformer.cpp:135\r\n#8  0x0000aaaaaaf658e4 in duckdb::Transformer::TransformStatement (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transformer.cpp:60\r\n#9  0x0000aaaaaaf662c4 in duckdb::Transformer::TransformParseTree (this=this@entry=0xffffffffd0f0, tree=<optimized out>, statements=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/include/duckdb/common/optional_ptr.hpp:35\r\n#10 0x0000aaaaaaf6a4c0 in duckdb::Parser::ParseQuery (this=this@entry=0xffffffffd398,\r\n    query=\"UPDATE ONLY v0 . v1099 AS a21 SET ( v0 ) = ROW ( ), ( v0 ) = DEFAULT, WHERE DEFAULT IN ( PIVOT LATERAL ROWS FROM ( v0 ( ) ) CROSS JOIN v1099 ASOF JOIN v1099 ON TRUE POSITIONAL JOIN v1099 ASOF JOIN v10\"...) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/parser.cpp:178\r\n#11 0x0000aaaaaaf53de8 in duckdb_shell_sqlite3_prepare_v2 (db=0xaaaaac58c8e0,\r\n    zSql=0xaaaaac5a1450 \"UPDATE ONLY v0 . v1099 AS a21 SET ( v0 ) = ROW ( ), ( v0 ) = DEFAULT, WHERE DEFAULT IN ( PIVOT LATERAL ROWS FROM ( v0 ( ) ) CROSS JOIN v1099 ASOF JOIN v1099 ON TRUE POSITIONAL JOIN v1099 ASOF JOIN v10\"..., nByte=<optimized out>, ppStmt=0xffffffffd5e0, pzTail=0xffffffffd5e8)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/sqlite3_api_wrapper/sqlite3_api_wrapper.cpp:170\r\n#12 0x0000aaaaaaf3d800 in shell_exec (pArg=0xffffffffd908,\r\n    zSql=0xaaaaac5a1450 \"UPDATE ONLY v0 . v1099 AS a21 SET ( v0 ) = ROW ( ), ( v0 ) = DEFAULT, WHERE DEFAULT IN ( PIVOT LATERAL ROWS FROM ( v0 ( ) ) CROSS JOIN v1099 ASOF JOIN v1099 ON TRUE POSITIONAL JOIN v1099 ASOF JOIN v10\"..., pzErrMsg=<optimized out>) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/shell/shell.c:13142\r\n#13 0x0000aaaaaaf3f484 in runOneSqlLine (p=0xffffffffd908,\r\n    zSql=0xaaaaac5a1450 \"UPDATE ONLY v0 . v1099 AS a21 SET ( v0 ) = ROW ( ), ( v0 ) = DEFAULT, WHERE DEFAULT IN ( PIVOT LATERAL ROWS FROM ( v0 ( ) ) CROSS JOIN v1099 ASOF JOIN v1099 ON TRUE POSITIONAL JOIN v1099 ASOF JOIN v10\"..., in=0x0, startline=1) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/shell/shell.c:19654\r\n#14 0x0000aaaaaaf46afc in process_input (p=0xffffffffd908) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/shell/shell.c:19772\r\n#15 0x0000aaaaaaf29fec in main (argc=<optimized out>, argv=0xffffffffec68) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/shell/shell.c:20585\r\n```\r\n\r\nThe bug is also reproducible from the latest `main` branch (`60ddc316ca0c1`)\n\n### To Reproduce\n\n1. Clone the DuckDB Git from the official repo.\r\n2. Checkout to either the latest main or release version: `0.9.1` (`401c8061c6ece`).\r\n3. Compile the DuckDB binary by using either `make reldebug` or `make debug`.\r\n4. Run the compiled DuckDB and input the following SQL:\r\n\r\n```sql\r\nUPDATE t0 SET ( c0 ) = ROW ( );\r\n```\r\n\r\n5. Observe and log the crash information.\n\n### OS:\n\nUbuntu 20.04 LTS\n\n### DuckDB Version:\n\nv0.9.1 `401c806`\n\n### DuckDB Client:\n\nDuckDB official command line client\n\n### Full Name:\n\nYu Liang\n\n### Affiliation:\n\nThe Pennsylvania State University\n\n### Have you tried this on the latest `main` branch?\n\nI have tested with a main build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\nDuckDB parser crashes when giving empty ROW\n### What happens?\n\nThe latest release version of DuckDB (`v0.9.1` `401c8061c6ece`) crashes when executing the following query:\r\n\r\n```sql\r\nUPDATE t0 SET ( c0 ) = ROW ( );\r\n```\r\n\r\nHere is the stack trace from GDB: \r\n\r\n```\r\n#0  0x0000aaaaabb10ba4 in duckdb::Transformer::TransformMultiAssignRef (this=this@entry=0xffffffffd0f0, root=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transform/expression/transform_multi_assign_reference.cpp:19\r\n#1  0x0000aaaaabb0cc44 in duckdb::Transformer::TransformExpression (this=this@entry=0xffffffffd0f0, node=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transform/expression/transform_expression.cpp:79\r\n#2  0x0000aaaaabb0cf74 in duckdb::Transformer::TransformExpression (this=this@entry=0xffffffffd0f0, node=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/include/duckdb/common/optional_ptr.hpp:35\r\n#3  0x0000aaaaab5a61bc in duckdb::Transformer::TransformUpdateSetInfo (this=this@entry=0xffffffffd0f0, target_list=<optimized out>, where_clause=0xaaaaac6bc9e0)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/include/duckdb/common/optional_ptr.hpp:43\r\n#4  0x0000aaaaab5a66c8 in duckdb::Transformer::TransformUpdate (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/include/duckdb/common/unique_ptr.hpp:38\r\n#5  0x0000aaaaaaf657a8 in duckdb::Transformer::TransformStatementInternal (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transformer.cpp:165\r\n#6  0x0000aaaaaaf658e4 in duckdb::Transformer::TransformStatement (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transformer.cpp:60\r\n#7  0x0000aaaaaaf657fc in duckdb::Transformer::TransformStatementInternal (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transformer.cpp:135\r\n#8  0x0000aaaaaaf658e4 in duckdb::Transformer::TransformStatement (this=this@entry=0xffffffffd0f0, stmt=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/transformer.cpp:60\r\n#9  0x0000aaaaaaf662c4 in duckdb::Transformer::TransformParseTree (this=this@entry=0xffffffffd0f0, tree=<optimized out>, statements=...)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/include/duckdb/common/optional_ptr.hpp:35\r\n#10 0x0000aaaaaaf6a4c0 in duckdb::Parser::ParseQuery (this=this@entry=0xffffffffd398,\r\n    query=\"UPDATE ONLY v0 . v1099 AS a21 SET ( v0 ) = ROW ( ), ( v0 ) = DEFAULT, WHERE DEFAULT IN ( PIVOT LATERAL ROWS FROM ( v0 ( ) ) CROSS JOIN v1099 ASOF JOIN v1099 ON TRUE POSITIONAL JOIN v1099 ASOF JOIN v10\"...) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/src/parser/parser.cpp:178\r\n#11 0x0000aaaaaaf53de8 in duckdb_shell_sqlite3_prepare_v2 (db=0xaaaaac58c8e0,\r\n    zSql=0xaaaaac5a1450 \"UPDATE ONLY v0 . v1099 AS a21 SET ( v0 ) = ROW ( ), ( v0 ) = DEFAULT, WHERE DEFAULT IN ( PIVOT LATERAL ROWS FROM ( v0 ( ) ) CROSS JOIN v1099 ASOF JOIN v1099 ON TRUE POSITIONAL JOIN v1099 ASOF JOIN v10\"..., nByte=<optimized out>, ppStmt=0xffffffffd5e0, pzTail=0xffffffffd5e8)\r\n    at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/sqlite3_api_wrapper/sqlite3_api_wrapper.cpp:170\r\n#12 0x0000aaaaaaf3d800 in shell_exec (pArg=0xffffffffd908,\r\n    zSql=0xaaaaac5a1450 \"UPDATE ONLY v0 . v1099 AS a21 SET ( v0 ) = ROW ( ), ( v0 ) = DEFAULT, WHERE DEFAULT IN ( PIVOT LATERAL ROWS FROM ( v0 ( ) ) CROSS JOIN v1099 ASOF JOIN v1099 ON TRUE POSITIONAL JOIN v1099 ASOF JOIN v10\"..., pzErrMsg=<optimized out>) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/shell/shell.c:13142\r\n#13 0x0000aaaaaaf3f484 in runOneSqlLine (p=0xffffffffd908,\r\n    zSql=0xaaaaac5a1450 \"UPDATE ONLY v0 . v1099 AS a21 SET ( v0 ) = ROW ( ), ( v0 ) = DEFAULT, WHERE DEFAULT IN ( PIVOT LATERAL ROWS FROM ( v0 ( ) ) CROSS JOIN v1099 ASOF JOIN v1099 ON TRUE POSITIONAL JOIN v1099 ASOF JOIN v10\"..., in=0x0, startline=1) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/shell/shell.c:19654\r\n#14 0x0000aaaaaaf46afc in process_input (p=0xffffffffd908) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/shell/shell.c:19772\r\n#15 0x0000aaaaaaf29fec in main (argc=<optimized out>, argv=0xffffffffec68) at /Users/sly/Desktop/Projects/DBMSs/duckdb/duckdb_ori/tools/shell/shell.c:20585\r\n```\r\n\r\nThe bug is also reproducible from the latest `main` branch (`60ddc316ca0c1`)\n\n### To Reproduce\n\n1. Clone the DuckDB Git from the official repo.\r\n2. Checkout to either the latest main or release version: `0.9.1` (`401c8061c6ece`).\r\n3. Compile the DuckDB binary by using either `make reldebug` or `make debug`.\r\n4. Run the compiled DuckDB and input the following SQL:\r\n\r\n```sql\r\nUPDATE t0 SET ( c0 ) = ROW ( );\r\n```\r\n\r\n5. Observe and log the crash information.\n\n### OS:\n\nUbuntu 20.04 LTS\n\n### DuckDB Version:\n\nv0.9.1 `401c806`\n\n### DuckDB Client:\n\nDuckDB official command line client\n\n### Full Name:\n\nYu Liang\n\n### Affiliation:\n\nThe Pennsylvania State University\n\n### Have you tried this on the latest `main` branch?\n\nI have tested with a main build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2023-11-21T09:21:51Z"
}