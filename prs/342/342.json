{
  "repo": "duckdb/duckdb",
  "pull_number": 342,
  "instance_id": "duckdb__duckdb-342",
  "issue_numbers": [
    "327"
  ],
  "base_commit": "89e7df80fe270ec45a528b85d52df7519a4ec954",
  "patch": "diff --git a/src/execution/operator/helper/physical_execute.cpp b/src/execution/operator/helper/physical_execute.cpp\nindex 64211d045b7a..ea574393e703 100644\n--- a/src/execution/operator/helper/physical_execute.cpp\n+++ b/src/execution/operator/helper/physical_execute.cpp\n@@ -9,5 +9,5 @@ void PhysicalExecute::GetChunkInternal(ClientContext &context, DataChunk &chunk,\n }\n \n unique_ptr<PhysicalOperatorState> PhysicalExecute::GetOperatorState() {\n-\treturn make_unique<PhysicalOperatorState>(plan->children.size() > 0 ? plan->children[0].get() : nullptr);\n+\treturn plan->GetOperatorState();\n }\n",
  "test_patch": "diff --git a/test/sql/simple/test_limit.cpp b/test/sql/simple/test_limit.cpp\nindex 4328f2afc471..ea73b9742901 100644\n--- a/test/sql/simple/test_limit.cpp\n+++ b/test/sql/simple/test_limit.cpp\n@@ -37,3 +37,22 @@ TEST_CASE(\"Test LIMIT keyword\", \"[limit]\") {\n \t// subquery in limit\n \tREQUIRE_FAIL(con.Query(\"SELECT a FROM test LIMIT (SELECT MIN(a) FROM test)\"));\n }\n+\n+\n+\n+\n+TEST_CASE(\"LIMIT Bug #321 Crazy Result\", \"[limit]\") {\n+\tunique_ptr<QueryResult> result;\n+\tDuckDB db(nullptr);\n+\tConnection con(db);\n+\tcon.EnableQueryVerification();\n+\n+\tREQUIRE_NO_FAIL(con.Query(\"CREATE TABLE test (a STRING);\"));\n+\tREQUIRE_NO_FAIL(con.Query(\"INSERT INTO test VALUES ('Hello World')\"));\n+\n+\tauto prep = con.Prepare(\"SELECT * FROM test LIMIT 3\");\n+\tvector<Value> params;\n+\tparams.clear();\n+\tresult = prep->Execute(params);\n+\tREQUIRE(CHECK_COLUMN(result, 0, {\"Hello World\"}));\n+}\n",
  "problem_statement": "Using LIMIT in a query gives no results\nAfter loading in data a simple query like `SELECT * FROM tbl LIMIT 3` results in nothing being returned:\r\n\r\n```\r\n>>> c.execute('select * from dict limit 3;')\r\n<duckdb.Cursor object at 0x7fd7ddb22070>\r\n>>> c.fetchone()\r\n>>>\r\n```\r\n\r\nWhile if I omit the limit statement:\r\n\r\n```\r\n>>> c.execute('select * from dict;')\r\n<duckdb.Cursor object at 0x7fd7ddb22070>\r\n>>> c.fetchone()\r\n[0, '0', 10826]\r\n>>> \r\n```\r\n\r\nThe same holds when using `fetchall()`. I am using duckdb through Python.\n",
  "hints_text": "confirmed, something odd happening here. It works when adding a ORDER BY though.",
  "created_at": "2019-11-07T12:08:14Z"
}