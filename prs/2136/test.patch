diff --git a/tools/rpkg/tests/testthat/test-DBItest.R b/tools/rpkg/tests/testthat/test-DBItest.R
index 2c384e4d5ed2..e025f5edaf57 100644
--- a/tools/rpkg/tests/testthat/test-DBItest.R
+++ b/tools/rpkg/tests/testthat/test-DBItest.R
@@ -11,22 +11,6 @@ DBItest::test_all(c(
 
   if (packageVersion("DBItest") < "1.7.0.9004") "roundtrip_timestamp", # broken test
 
-  "send_query_params", # multiple bind parameters
-  "get_query_params",
-  "bind_return_value",
-  "bind_too_many",
-  "bind_not_enough",
-  "bind_multi_row_unequal_length",
-  "bind_unnamed_param_named_placeholders",
-  "bind_multi_row",
-  "bind_multi_row_zero_length",
-  "bind_multi_row_statement",
-  "bind_repeated",
-  "bind_integer",
-  "bind_repeated_untouched",
-  "bind_.*",
-
-
   "data_64_bit_numeric_warning", # 64 bit, not now
   "data_64_bit_lossless",
   "roundtrip_64_bit_character",
@@ -38,4 +22,4 @@ DBItest::test_all(c(
   "append_roundtrip_64_bit_roundtrip",
 
   "column_info_consistent" # won't fix: https://github.com/r-dbi/DBItest/issues/181
-))
\ No newline at end of file
+))
diff --git a/tools/rpkg/tests/testthat/test_bind.R b/tools/rpkg/tests/testthat/test_bind.R
index 4447143ad616..1587cecca8e3 100644
--- a/tools/rpkg/tests/testthat/test_bind.R
+++ b/tools/rpkg/tests/testthat/test_bind.R
@@ -44,7 +44,7 @@ test_that("dbBind() works as expected for all types", {
 
   test_convert(con, "TIMESTAMP", as.POSIXct("2019-11-26 21:11Z", "UTC"))
 
-  test_convert(con, "STRING", as.factor("Hello, World"))
+  expect_warning(test_convert(con, "STRING", as.factor("Hello, World")))
 
   dbDisconnect(con, shutdown = T)
 })
@@ -106,18 +106,15 @@ test_that("various error cases for dbBind()", {
 
   expect_error(dbBind(q, list()))
   expect_error(dbBind(q, list(1, 2)))
+  expect_error(dbBind(q, list("asdf")))
   expect_error(dbBind(q, list("asdf", "asdf")))
 
   expect_error(dbBind(q))
 
-  expect_error(dbBind(q, 1))
-  expect_error(dbBind(q, 1, 2))
   expect_error(dbBind(q, "asdf"))
-  expect_error(dbBind(q, "asdf", "asdf"))
 
   dbClearResult(q)
 
-  expect_error(dbGetQuery(con, "SELECT CAST (? AS INTEGER)", 1, 2))
   expect_error(dbGetQuery(con, "SELECT CAST (? AS INTEGER)", "asdf"))
   expect_error(dbGetQuery(con, "SELECT CAST (? AS INTEGER)", "asdf", "asdf"))
   expect_error(dbGetQuery(con, "SELECT CAST (? AS INTEGER)"))
