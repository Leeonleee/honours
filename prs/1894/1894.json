{
  "repo": "duckdb/duckdb",
  "pull_number": 1894,
  "instance_id": "duckdb__duckdb-1894",
  "issue_numbers": [
    "1890"
  ],
  "base_commit": "922380c7cbb3fc94276883bceee5790f8af62df2",
  "patch": "diff --git a/src/function/scalar/operators/add.cpp b/src/function/scalar/operators/add.cpp\nindex 55795de81f44..b286f9e8ea39 100644\n--- a/src/function/scalar/operators/add.cpp\n+++ b/src/function/scalar/operators/add.cpp\n@@ -76,13 +76,26 @@ date_t AddOperator::Operation(interval_t left, date_t right) {\n \treturn AddOperator::Operation<date_t, interval_t, date_t>(right, left);\n }\n \n+dtime_t AddIntervalToTimeOperation(dtime_t left, interval_t right, date_t &date) {\n+\tint64_t diff = right.micros - ((right.micros / Interval::MICROS_PER_DAY) * Interval::MICROS_PER_DAY);\n+\tleft += diff;\n+\tif (left.micros >= Interval::MICROS_PER_DAY) {\n+\t\tleft.micros -= Interval::MICROS_PER_DAY;\n+\t\tdate.days++;\n+\t} else if (left.micros < 0) {\n+\t\tleft.micros += Interval::MICROS_PER_DAY;\n+\t\tdate.days--;\n+\t}\n+\treturn left;\n+}\n+\n template <>\n timestamp_t AddOperator::Operation(timestamp_t left, interval_t right) {\n \tdate_t date;\n \tdtime_t time;\n \tTimestamp::Convert(left, date, time);\n \tauto new_date = AddOperator::Operation<date_t, interval_t, date_t>(date, right);\n-\tauto new_time = AddTimeOperator::Operation<dtime_t, interval_t, dtime_t>(time, right);\n+\tauto new_time = AddIntervalToTimeOperation(time, right, new_date);\n \treturn Timestamp::FromDatetime(new_date, new_time);\n }\n \n@@ -214,14 +227,8 @@ hugeint_t DecimalAddOverflowCheck::Operation(hugeint_t left, hugeint_t right) {\n //===--------------------------------------------------------------------===//\n template <>\n dtime_t AddTimeOperator::Operation(dtime_t left, interval_t right) {\n-\tint64_t diff = right.micros - ((right.micros / Interval::MICROS_PER_DAY) * Interval::MICROS_PER_DAY);\n-\tleft += diff;\n-\tif (left.micros >= Interval::MICROS_PER_DAY) {\n-\t\tleft.micros -= Interval::MICROS_PER_DAY;\n-\t} else if (left.micros < 0) {\n-\t\tleft.micros += Interval::MICROS_PER_DAY;\n-\t}\n-\treturn left;\n+\tdate_t date(0);\n+\treturn AddIntervalToTimeOperation(left, right, date);\n }\n \n template <>\n",
  "test_patch": "diff --git a/test/issues/general/test_1890.test b/test/issues/general/test_1890.test\nnew file mode 100644\nindex 000000000000..2a26d910426f\n--- /dev/null\n+++ b/test/issues/general/test_1890.test\n@@ -0,0 +1,16 @@\n+# name: test/issues/general/test_1890.test\n+# description: Issue 1890: INTERVAL not working as expected across day boundry\n+# group: [general]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+query I\n+SELECT TIMESTAMP '2000-01-01 00:00:00' - INTERVAL 1 MINUTE\n+----\n+1999-12-31 23:59:00\n+\n+query I\n+SELECT TIMESTAMP '2000-01-01 23:59:00' + INTERVAL 1 MINUTE\n+----\n+2000-01-02 00:00:00\n",
  "problem_statement": "INTERVAL not working as expected across day boundry\nWhen subtracting x minutes from a timestamp, the wrong timestamp occurs if the new timestamp crosses a day boundary (midnight).\r\n\r\ne.g. _SELECT TIMESTAMP '2000-01-01 00:00:00' - INTERVAL 1 MINUTE_ \r\nshould return '1999-12-31 23:59:00', instead it returns '2000-01-01 23:59:00'\r\n\r\n\n",
  "hints_text": "Thanks for the report! I can confirm this is incorrect. I will have a look.",
  "created_at": "2021-06-22T16:44:55Z"
}