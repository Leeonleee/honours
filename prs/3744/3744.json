{
  "repo": "duckdb/duckdb",
  "pull_number": 3744,
  "instance_id": "duckdb__duckdb-3744",
  "issue_numbers": [
    "3728"
  ],
  "base_commit": "ac159c1673f87f0cd489a12eb024c446e7ace285",
  "patch": "diff --git a/tools/pythonpkg/src/pyresult.cpp b/tools/pythonpkg/src/pyresult.cpp\nindex a4dbb4ba8bdf..62ef13708c26 100644\n--- a/tools/pythonpkg/src/pyresult.cpp\n+++ b/tools/pythonpkg/src/pyresult.cpp\n@@ -435,6 +435,10 @@ py::str GetTypeToPython(const LogicalType &type) {\n \tcase LogicalTypeId::INTERVAL: {\n \t\treturn py::str(\"TIMEDELTA\");\n \t}\n+\tcase LogicalTypeId::USER:\n+\tcase LogicalTypeId::ENUM: {\n+\t\treturn py::str(type.ToString());\n+\t}\n \tdefault:\n \t\tthrow NotImplementedException(\"unsupported type: \" + type.ToString());\n \t}\n",
  "test_patch": "diff --git a/tools/pythonpkg/tests/fast/api/test_3728.py b/tools/pythonpkg/tests/fast/api/test_3728.py\nnew file mode 100644\nindex 000000000000..9862dc8f789c\n--- /dev/null\n+++ b/tools/pythonpkg/tests/fast/api/test_3728.py\n@@ -0,0 +1,15 @@\n+import duckdb\n+\n+class Test3728(object):\n+    def test_3728_describe_enum(self, duckdb_cursor):\n+        # Create an in-memory database, but the problem is also present in file-backed DBs\n+        cursor = duckdb.connect(\":memory:\")\n+\n+        # Create an arbitrary enum type\n+        cursor.execute(\"CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');\")\n+\n+        # Create a table where one or more columns are enum typed\n+        cursor.execute(\"CREATE TABLE person (name text, current_mood mood);\")\n+\n+        # This fails with \"RuntimeError: Not implemented Error: unsupported type: mood\"\n+        assert cursor.table(\"person\").execute().description() == [('name', 'STRING', None, None, None, None, None), ('current_mood', 'mood', None, None, None, None, None)]\n",
  "problem_statement": "Python API bug: `duckdb.DuckDBPyResult.description()` raises when enums are involved\n#### What happens?\r\n\r\nThe relational API in python raises a `RuntimeError` on `duckdb.DuckDBPyResult.description()` when the relation contains one or more Enum-typed columns.\r\n\r\n#### To Reproduce\r\n\r\nThe following piece of code will raise on the last line:\r\n\r\n```py\r\nimport duckdb\r\n\r\n# Create an in-memory database, but the problem is also present in file-backed DBs\r\ncursor = duckdb.connect(\":memory:\")\r\n\r\n# Create an arbitrary enum type\r\ncursor.execute(\"CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');\")\r\n\r\n# Create a table where one or more columns are enum typed\r\ncursor.execute(\"CREATE TABLE person (name text, current_mood mood);\")\r\n\r\n# Describing the table causes no problems\r\ncursor.table(\"person\").describe()\r\n\r\n# This fails with \"RuntimeError: Not implemented Error: unsupported type: mood\"\r\ncursor.table(\"person\").execute().description()\r\n```\r\n\r\n#### Environment (please complete the following information):\r\n - OS: MacOS ARM / Ubuntu ARM\r\n - DuckDB Version: 0.3.4\r\n - DuckDB Client: Python\r\n\r\n#### Before Submitting\r\n\r\n- [x] **Have you tried this on the latest `master` branch?** Yes, the problem has been present for a while.\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?** Yes.\r\n\n",
  "hints_text": "",
  "created_at": "2022-05-31T08:01:36Z"
}