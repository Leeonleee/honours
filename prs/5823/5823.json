{
  "repo": "duckdb/duckdb",
  "pull_number": 5823,
  "instance_id": "duckdb__duckdb-5823",
  "issue_numbers": [
    "5694",
    "5694"
  ],
  "base_commit": "2dcdc245566bb9a0fc717bc9d2c3867f911abc6d",
  "patch": "diff --git a/src/function/scalar/list/list_sort.cpp b/src/function/scalar/list/list_sort.cpp\nindex 7e5c05e13632..2689e7e00937 100644\n--- a/src/function/scalar/list/list_sort.cpp\n+++ b/src/function/scalar/list/list_sort.cpp\n@@ -23,7 +23,6 @@ struct ListSortBindData : public FunctionData {\n \tvector<LogicalType> payload_types;\n \n \tClientContext &context;\n-\tunique_ptr<GlobalSortState> global_sort_state;\n \tRowLayout payload_layout;\n \tvector<BoundOrderByNode> orders;\n \n@@ -94,6 +93,7 @@ void SinkDataChunk(Vector *child_vector, SelectionVector &sel, idx_t offset_list\n \tpayload_chunk.Verify();\n \n \t// sink\n+\tkey_chunk.Flatten();\n \tlocal_sort_state.SinkChunk(key_chunk, payload_chunk);\n \tdata_to_sort = true;\n }\n@@ -116,8 +116,7 @@ static void ListSortFunction(DataChunk &args, ExpressionState &state, Vector &re\n \n \t// initialize the global and local sorting state\n \tauto &buffer_manager = BufferManager::GetBufferManager(info.context);\n-\tinfo.global_sort_state = make_unique<GlobalSortState>(buffer_manager, info.orders, info.payload_layout);\n-\tauto &global_sort_state = *info.global_sort_state;\n+\tGlobalSortState global_sort_state(buffer_manager, info.orders, info.payload_layout);\n \tLocalSortState local_sort_state;\n \tlocal_sort_state.Initialize(global_sort_state, buffer_manager);\n \n",
  "test_patch": "diff --git a/data/parquet-testing/list_sort_segfault.parquet b/data/parquet-testing/list_sort_segfault.parquet\nnew file mode 100644\nindex 000000000000..ff72afc9d9d6\nBinary files /dev/null and b/data/parquet-testing/list_sort_segfault.parquet differ\ndiff --git a/test/sql/function/list/list_sort.test b/test/sql/function/list/list_sort.test\nindex 8003568630f6..73961e0a970d 100644\n--- a/test/sql/function/list/list_sort.test\n+++ b/test/sql/function/list/list_sort.test\n@@ -404,4 +404,17 @@ select k, array_sort(k,'DESC') from (values ([1,2,3,4])) as t(k);\n query IIII\n select k, v, map(k,v), map(k,v)[(array_sort(k,'DESC'))[1]] from (values ([1,2,3,4],[2,3,4,5])) as t(k,v);\n ----\n-[1, 2, 3, 4]\t[2, 3, 4, 5]\t{1=2, 2=3, 3=4, 4=5}\t[5]\n\\ No newline at end of file\n+[1, 2, 3, 4]\t[2, 3, 4, 5]\t{1=2, 2=3, 3=4, 4=5}\t[5]\n+\n+# bug fixes test for #5694\n+\n+require parquet\n+\n+statement ok\n+CREATE TABLE stage AS SELECT * FROM 'data/parquet-testing/list_sort_segfault.parquet';\n+\n+statement ok\n+CREATE TABLE health (a VARCHAR[]);\n+\n+statement ok\n+INSERT INTO health SELECT list_sort(string_to_array(s, ',')) AS a FROM stage;\n\\ No newline at end of file\n",
  "problem_statement": "\"segmentation fault\" regression since 0.6.0\n### What happens?\r\n\r\n`INSERT` fails with \"segmentation fault\" error. The issue exists on 0.6.0 and 0.6.1 and is not reproducible on 0.5.1.\r\n\r\n### To Reproduce\r\nExtract the attached \r\n[jvm_crush5_cp.csv.zip](https://github.com/duckdb/duckdb/files/10225864/jvm_crush5_cp.csv.zip)\r\nto the work directory\r\n\r\n`./duckdb`\r\n\r\n```\r\nCREATE TABLE t_raw as\r\n  SELECT\r\n    h1, \r\n    h2, \r\n    h3,\r\n    CAST(c1 as TIMESTAMP) as c1,\r\n    n1,\r\n    LOWER(TRIM(s)) as s,\r\n    n2\r\n  FROM read_csv_auto('jvm_crush5_cp.csv', ALL_VARCHAR=1);\r\n\r\n    CREATE TABLE t_healthy (\r\n        h1 VARCHAR,\r\n        h2 VARCHAR,\r\n        h3 VARCHAR,\r\n        c1 TIMESTAMP,\r\n        n1 INT,\r\n        a VARCHAR[],\r\n        n2 INT,\r\n        PRIMARY KEY(h1, n1)\r\n   );\r\n\r\n  INSERT INTO t_healthy\r\n     SELECT\r\n         h1,\r\n         h2,\r\n         h3,\r\n         c1,\r\n         CAST(n1 as INT) as n1,\r\n         list_sort(string_to_array(s, ',')) as a,\r\n         CAST(n2 as INT) as n2\r\n      FROM t_raw\r\n      WHERE (\r\n(n1 = '1' AND s IN ('1822','1823','1824','1825','1826','1827','1828','1829','1830','1831','1832','1833','1834','1835','1836','1837','1838','1839','1840','1841','1842','1843','1844','1845','1846','1847','1848','1849','1850','1851','1852','1853','1854','1855','1856','1857','1858','1859','1860','1861','1862','1863','1864','1865','1866','1867','1868','1869','1870','1871','1872','1873','1874','1875','1876','1877','1878','1879','1880','1881','1882','1883','1884','1885','1886','1887','1888','1889','1890','1891','1892','1893','1894','1895','1896','1897','1898','1899','1900','1901','1902','1903','1904','1905','1906','1907','1908','1909','1910','1911','1912','1913','1914','1915','1916','1917','1918','1919','1920','1921','1922','1923','1924','1925','1926','1927','1928','1929','1930','1931','1932','1933','1934','1935','1936','1937','1938','1939','1940','1941','1942','1943','1944','1945','1946','1947','1948','1949','1950','1951','1952','1953','1954','1955','1956','1957','1958','1959','1960','1961','1962','1963','1964','1965','1966','1967','1968','1969','1970','1971','1972','1973','1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988','1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','na'))\r\n);\r\n```\r\n`Segmentation fault`\r\n\r\n### OS:\r\n\r\nmac os, centos 7\r\n\r\n### DuckDB Version:\r\n\r\n0.6.0, 0.6.1\r\n\r\n### DuckDB Client:\r\n\r\nCLI, JDBC\r\n\r\n### Full Name:\r\n\r\nAndrii Karaivanskyi\r\n\r\n### Affiliation:\r\n\r\nIndeed\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n\"segmentation fault\" regression since 0.6.0\n### What happens?\r\n\r\n`INSERT` fails with \"segmentation fault\" error. The issue exists on 0.6.0 and 0.6.1 and is not reproducible on 0.5.1.\r\n\r\n### To Reproduce\r\nExtract the attached \r\n[jvm_crush5_cp.csv.zip](https://github.com/duckdb/duckdb/files/10225864/jvm_crush5_cp.csv.zip)\r\nto the work directory\r\n\r\n`./duckdb`\r\n\r\n```\r\nCREATE TABLE t_raw as\r\n  SELECT\r\n    h1, \r\n    h2, \r\n    h3,\r\n    CAST(c1 as TIMESTAMP) as c1,\r\n    n1,\r\n    LOWER(TRIM(s)) as s,\r\n    n2\r\n  FROM read_csv_auto('jvm_crush5_cp.csv', ALL_VARCHAR=1);\r\n\r\n    CREATE TABLE t_healthy (\r\n        h1 VARCHAR,\r\n        h2 VARCHAR,\r\n        h3 VARCHAR,\r\n        c1 TIMESTAMP,\r\n        n1 INT,\r\n        a VARCHAR[],\r\n        n2 INT,\r\n        PRIMARY KEY(h1, n1)\r\n   );\r\n\r\n  INSERT INTO t_healthy\r\n     SELECT\r\n         h1,\r\n         h2,\r\n         h3,\r\n         c1,\r\n         CAST(n1 as INT) as n1,\r\n         list_sort(string_to_array(s, ',')) as a,\r\n         CAST(n2 as INT) as n2\r\n      FROM t_raw\r\n      WHERE (\r\n(n1 = '1' AND s IN ('1822','1823','1824','1825','1826','1827','1828','1829','1830','1831','1832','1833','1834','1835','1836','1837','1838','1839','1840','1841','1842','1843','1844','1845','1846','1847','1848','1849','1850','1851','1852','1853','1854','1855','1856','1857','1858','1859','1860','1861','1862','1863','1864','1865','1866','1867','1868','1869','1870','1871','1872','1873','1874','1875','1876','1877','1878','1879','1880','1881','1882','1883','1884','1885','1886','1887','1888','1889','1890','1891','1892','1893','1894','1895','1896','1897','1898','1899','1900','1901','1902','1903','1904','1905','1906','1907','1908','1909','1910','1911','1912','1913','1914','1915','1916','1917','1918','1919','1920','1921','1922','1923','1924','1925','1926','1927','1928','1929','1930','1931','1932','1933','1934','1935','1936','1937','1938','1939','1940','1941','1942','1943','1944','1945','1946','1947','1948','1949','1950','1951','1952','1953','1954','1955','1956','1957','1958','1959','1960','1961','1962','1963','1964','1965','1966','1967','1968','1969','1970','1971','1972','1973','1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988','1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','na'))\r\n);\r\n```\r\n`Segmentation fault`\r\n\r\n### OS:\r\n\r\nmac os, centos 7\r\n\r\n### DuckDB Version:\r\n\r\n0.6.0, 0.6.1\r\n\r\n### DuckDB Client:\r\n\r\nCLI, JDBC\r\n\r\n### Full Name:\r\n\r\nAndrii Karaivanskyi\r\n\r\n### Affiliation:\r\n\r\nIndeed\r\n\r\n### Have you tried this on the latest `master` branch?\r\n\r\n- [X] I agree\r\n\r\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\r\n\r\n- [X] I agree\n",
  "hints_text": "I'm getting an assertion failure in debug mode:\r\n\r\n```Error: INTERNAL Error: Assertion triggered in file \"/Users/hannes/source/duckdb/src/common/sort/sorted_block.cpp\" on line 93: count == payload_data->Count()```\nAlso getting a use-after-free sanitiser failure:\r\n```\r\n==403==ERROR: AddressSanitizer: heap-use-after-free on address 0x000118d06000 at pc 0x000104e1221c bp 0x00016ff0ebd0 sp 0x00016ff0ebc8\r\nREAD of size 8 at 0x000118d06000 thread T2\r\n    #0 0x104e12218 in std::__1::vector<bool, std::__1::allocator<bool> >::__make_ref(unsigned long) const vector:2477\r\n    #1 0x104d71704 in std::__1::vector<bool, std::__1::allocator<bool> >::operator[](unsigned long) const vector:2377\r\n    #2 0x104db05ac in duckdb::LocalSortState::SinkChunk(duckdb::DataChunk&, duckdb::DataChunk&) sort_state.cpp:189\r\n    #3 0x1035cbeb8 in duckdb::SinkDataChunk(duckdb::Vector*, duckdb::SelectionVector&, unsigned long long, std::__1::vector<duckdb::LogicalType, std::__1::allocator<duckdb::LogicalType> >&, std::__1::vector<duckdb::LogicalType, std::__1::allocator<duckdb::LogicalType> >&, duckdb::Vector&, duckdb::LocalSortState&, bool&, duckdb::Vector&) list_sort.cpp:97\r\n    #4 0x1035d1584 in duckdb::ListSortFunction(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&) list_sort.cpp:191\r\n   ...\r\n\r\n0x000118d06000 is located 256 bytes inside of 728-byte region [0x000118d05f00,0x000118d061d8)\r\nfreed by thread T0 here:\r\n    #0 0x11658e330 in wrap__ZdlPv+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x4e330)\r\n    #1 0x1036d8a54 in std::__1::default_delete<duckdb::GlobalSortState>::operator()(duckdb::GlobalSortState*) const unique_ptr.h:57\r\n    #2 0x1036d858c in std::__1::unique_ptr<duckdb::GlobalSortState, std::__1::default_delete<duckdb::GlobalSortState> >::reset(duckdb::GlobalSortState*) unique_ptr.h:318\r\n    #3 0x1036d7668 in std::__1::unique_ptr<duckdb::GlobalSortState, std::__1::default_delete<duckdb::GlobalSortState> >::operator=(std::__1::unique_ptr<duckdb::GlobalSortState, std::__1::default_delete<duckdb::GlobalSortState> >&&) unique_ptr.h:237\r\n    #4 0x1035d071c in duckdb::ListSortFunction(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&) list_sort.cpp:119\r\n  ...\r\n\r\npreviously allocated by thread T2 here:\r\n    #0 0x11658def0 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x4def0)\r\n    #1 0x106751090 in std::__1::unique_ptr<duckdb::GlobalSortState, std::__1::default_delete<duckdb::GlobalSortState> > duckdb::make_unique<duckdb::GlobalSortState, duckdb::BufferManager&, std::__1::vector<duckdb::BoundOrderByNode, std::__1::allocator<duckdb::BoundOrderByNode> >&, duckdb::RowLayout&>(duckdb::BufferManager&, std::__1::vector<duckdb::BoundOrderByNode, std::__1::allocator<duckdb::BoundOrderByNode> >&, duckdb::RowLayout&) helper.hpp:41\r\n    #2 0x1035d06d0 in duckdb::ListSortFunction(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&) list_sort.cpp:119\r\n...```\nLooks like list_sort is where this happens, maybe @taniabogatsch can have a look (next year)\nThis is just a guess, but can this be related to this fix? https://github.com/duckdb/duckdb/issues/5124\nI'm getting an assertion failure in debug mode:\r\n\r\n```Error: INTERNAL Error: Assertion triggered in file \"/Users/hannes/source/duckdb/src/common/sort/sorted_block.cpp\" on line 93: count == payload_data->Count()```\nAlso getting a use-after-free sanitiser failure:\r\n```\r\n==403==ERROR: AddressSanitizer: heap-use-after-free on address 0x000118d06000 at pc 0x000104e1221c bp 0x00016ff0ebd0 sp 0x00016ff0ebc8\r\nREAD of size 8 at 0x000118d06000 thread T2\r\n    #0 0x104e12218 in std::__1::vector<bool, std::__1::allocator<bool> >::__make_ref(unsigned long) const vector:2477\r\n    #1 0x104d71704 in std::__1::vector<bool, std::__1::allocator<bool> >::operator[](unsigned long) const vector:2377\r\n    #2 0x104db05ac in duckdb::LocalSortState::SinkChunk(duckdb::DataChunk&, duckdb::DataChunk&) sort_state.cpp:189\r\n    #3 0x1035cbeb8 in duckdb::SinkDataChunk(duckdb::Vector*, duckdb::SelectionVector&, unsigned long long, std::__1::vector<duckdb::LogicalType, std::__1::allocator<duckdb::LogicalType> >&, std::__1::vector<duckdb::LogicalType, std::__1::allocator<duckdb::LogicalType> >&, duckdb::Vector&, duckdb::LocalSortState&, bool&, duckdb::Vector&) list_sort.cpp:97\r\n    #4 0x1035d1584 in duckdb::ListSortFunction(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&) list_sort.cpp:191\r\n   ...\r\n\r\n0x000118d06000 is located 256 bytes inside of 728-byte region [0x000118d05f00,0x000118d061d8)\r\nfreed by thread T0 here:\r\n    #0 0x11658e330 in wrap__ZdlPv+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x4e330)\r\n    #1 0x1036d8a54 in std::__1::default_delete<duckdb::GlobalSortState>::operator()(duckdb::GlobalSortState*) const unique_ptr.h:57\r\n    #2 0x1036d858c in std::__1::unique_ptr<duckdb::GlobalSortState, std::__1::default_delete<duckdb::GlobalSortState> >::reset(duckdb::GlobalSortState*) unique_ptr.h:318\r\n    #3 0x1036d7668 in std::__1::unique_ptr<duckdb::GlobalSortState, std::__1::default_delete<duckdb::GlobalSortState> >::operator=(std::__1::unique_ptr<duckdb::GlobalSortState, std::__1::default_delete<duckdb::GlobalSortState> >&&) unique_ptr.h:237\r\n    #4 0x1035d071c in duckdb::ListSortFunction(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&) list_sort.cpp:119\r\n  ...\r\n\r\npreviously allocated by thread T2 here:\r\n    #0 0x11658def0 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x4def0)\r\n    #1 0x106751090 in std::__1::unique_ptr<duckdb::GlobalSortState, std::__1::default_delete<duckdb::GlobalSortState> > duckdb::make_unique<duckdb::GlobalSortState, duckdb::BufferManager&, std::__1::vector<duckdb::BoundOrderByNode, std::__1::allocator<duckdb::BoundOrderByNode> >&, duckdb::RowLayout&>(duckdb::BufferManager&, std::__1::vector<duckdb::BoundOrderByNode, std::__1::allocator<duckdb::BoundOrderByNode> >&, duckdb::RowLayout&) helper.hpp:41\r\n    #2 0x1035d06d0 in duckdb::ListSortFunction(duckdb::DataChunk&, duckdb::ExpressionState&, duckdb::Vector&) list_sort.cpp:119\r\n...```\nLooks like list_sort is where this happens, maybe @taniabogatsch can have a look (next year)\nThis is just a guess, but can this be related to this fix? https://github.com/duckdb/duckdb/issues/5124",
  "created_at": "2023-01-04T09:56:24Z"
}