diff --git a/tools/shell/shell.c b/tools/shell/shell.c
index 4fea104d5734..fa0d95a1a266 100644
--- a/tools/shell/shell.c
+++ b/tools/shell/shell.c
@@ -11493,7 +11493,7 @@ static int shell_callback(
       }
       if (strcmp(azArg[0], "logical_plan") == 0
             || strcmp(azArg[0], "logical_opt") == 0
-            || strcmp(azArg[0], "physical_plan") == 0) { 
+            || strcmp(azArg[0], "physical_plan") == 0) {
         utf8_printf(p->out, "
┌─────────────────────────────┐
");
         utf8_printf(p->out, "│┌───────────────────────────┐│
");
         if (strcmp(azArg[0], "logical_plan") == 0) {
@@ -11682,7 +11682,6 @@ static int shell_callback(
         }else if( aiType && aiType[i]==SQLITE_INTEGER ){
           utf8_printf(p->out,"%s", azArg[i]);
         }else if( aiType && aiType[i]==SQLITE_FLOAT ){
-          char z[50];
           double r = sqlite3_column_double(p->pStmt, i);
           sqlite3_uint64 ur;
           memcpy(&ur,&r,sizeof(r));
@@ -11691,8 +11690,7 @@ static int shell_callback(
           }else if( ur==0xfff0000000000000LL ){
             raw_printf(p->out, "-1e999");
           }else{
-            sqlite3_snprintf(50,z,"%!.20g", r);
-            raw_printf(p->out, "%s", z);
+            utf8_printf(p->out,"%s", azArg[i]);
           }
         }else if( aiType && aiType[i]==SQLITE_BLOB && p->pStmt ){
           const void *pBlob = sqlite3_column_blob(p->pStmt, i);
