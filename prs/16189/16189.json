{
  "repo": "duckdb/duckdb",
  "pull_number": 16189,
  "instance_id": "duckdb__duckdb-16189",
  "issue_numbers": [
    "16134",
    "16134"
  ],
  "base_commit": "5b8f3542dd62ec1c9f18a96f64088367d770f4bc",
  "patch": "diff --git a/extension/autocomplete/autocomplete_extension.cpp b/extension/autocomplete/autocomplete_extension.cpp\nindex 62db1f89ae63..609ecbffe834 100644\n--- a/extension/autocomplete/autocomplete_extension.cpp\n+++ b/extension/autocomplete/autocomplete_extension.cpp\n@@ -47,7 +47,10 @@ static vector<AutoCompleteSuggestion> ComputeSuggestions(vector<AutoCompleteCand\n \tfor (idx_t i = 0; i < available_suggestions.size(); i++) {\n \t\tauto &suggestion = available_suggestions[i];\n \t\tconst int32_t BASE_SCORE = 10;\n-\t\tauto &str = suggestion.candidate;\n+\t\tauto str = suggestion.candidate;\n+\t\tif (suggestion.extra_char != '\\0') {\n+\t\t\tstr += suggestion.extra_char;\n+\t\t}\n \t\tauto bonus = suggestion.score_bonus;\n \t\tif (matches.find(str) != matches.end()) {\n \t\t\t// entry already exists\n@@ -73,6 +76,9 @@ static vector<AutoCompleteSuggestion> ComputeSuggestions(vector<AutoCompleteCand\n \t\t\tthrow InternalException(\"Auto-complete match not found\");\n \t\t}\n \t\tauto &suggestion = available_suggestions[entry->second];\n+\t\tif (suggestion.extra_char != '\\0') {\n+\t\t\tresult.pop_back();\n+\t\t}\n \t\tif (suggestion.candidate_type == CandidateType::KEYWORD) {\n \t\t\tif (prefix_is_lower) {\n \t\t\t\tresult = StringUtil::Lower(result);\n",
  "test_patch": "diff --git a/test/sql/function/autocomplete/identical_schema_table.test b/test/sql/function/autocomplete/identical_schema_table.test\nnew file mode 100644\nindex 000000000000..9d44a567dc54\n--- /dev/null\n+++ b/test/sql/function/autocomplete/identical_schema_table.test\n@@ -0,0 +1,16 @@\n+# name: test/sql/function/autocomplete/identical_schema_table.test\n+# description: Test sql_auto_complete\n+# group: [autocomplete]\n+\n+require autocomplete\n+\n+statement ok\n+CREATE SCHEMA my_catalog_entry;\n+\n+statement ok\n+CREATE TABLE my_catalog_entry(i INT);\n+\n+query II\n+FROM sql_auto_complete('FROM my_c') LIMIT 1;\n+----\n+my_catalog_entry\t5\n",
  "problem_statement": "Auto completion in v1.2.0 is adding a '.' to table names\n### What happens?\n\nWhen using tab completion on a table name without a qualifying schema name, an extra '.' is being appended to the completed name\n\ne.g.\n\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > .tables\nRussian_tax   reject_scans  rejects\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > from russ\n\nhitting tab now gives\n\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > from russian_tax.  <-- extra '.' character\n\nwhereas\n\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > from main.Russi\n\nhitting tab now gives the correct\n\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > from main.Russian_tax\n\n\n\n### To Reproduce\n\nSee above CLI examples\n\n### OS:\n\niOS and Debian\n\n### DuckDB Version:\n\n1.2.0\n\n### DuckDB Client:\n\nCLI\n\n### Hardware:\n\nMacbook Pro M3 \n\n### Full Name:\n\nMaurice Hickey\n\n### Affiliation:\n\nNisos\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nNo - Other reason (please specify in the issue body)\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\nAuto completion in v1.2.0 is adding a '.' to table names\n### What happens?\n\nWhen using tab completion on a table name without a qualifying schema name, an extra '.' is being appended to the completed name\n\ne.g.\n\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > .tables\nRussian_tax   reject_scans  rejects\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > from russ\n\nhitting tab now gives\n\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > from russian_tax.  <-- extra '.' character\n\nwhereas\n\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > from main.Russi\n\nhitting tab now gives the correct\n\n\ud83e\udd86\ud83e\udd86\ud83e\udd86 > from main.Russian_tax\n\n\n\n### To Reproduce\n\nSee above CLI examples\n\n### OS:\n\niOS and Debian\n\n### DuckDB Version:\n\n1.2.0\n\n### DuckDB Client:\n\nCLI\n\n### Hardware:\n\nMacbook Pro M3 \n\n### Full Name:\n\nMaurice Hickey\n\n### Affiliation:\n\nNisos\n\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\n\nI have tested with a stable release\n\n### Did you include all relevant data sets for reproducing the issue?\n\nNo - Other reason (please specify in the issue body)\n\n### Did you include all code required to reproduce the issue?\n\n- [x] Yes, I have\n\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\n\n- [x] Yes, I have\n",
  "hints_text": "Thanks for opening this issue! Based on our automated check, it seems that your post contains some code but it does not use [code blocks](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks) to format it.\n          \nPlease double-check your post and revise it if necessary. To employ syntax highlighting, it's recommended to use code blocks with triple backticks, e.g.:\n````\n```sql\nSELECT ...\n```\n````\nIf this is a false positive, feel free to disregard this comment.\n\nThanks for the report!\n\nI cannot reproduce this with only a table - this seems to work correctly for me:\n\n```sql\ncreate table Russian_tax(i int);\nD from sql_auto_complete('from russ') limit 1;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 suggestion  \u2502 suggestion_start \u2502\n\u2502   varchar   \u2502      int32       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Russian_tax \u2502        5         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\nOnly when I create a schema with the same name do I get this completion:\n\n```sql\nD create schema Russian_tax;\nD from sql_auto_complete('from russ') limit 1;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  suggestion  \u2502 suggestion_start \u2502\n\u2502   varchar    \u2502      int32       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Russian_tax. \u2502        5         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\nDo you perhaps have a schema with this name as well?\n\nIf not, could you provide a full reproducible example including the schema/table definitions.\nThanks for opening this issue in the DuckDB issue tracker! To resolve this issue, our team needs a reproducible example. This includes:\n\n* A source code snippet which reproduces the issue.\n* The snippet should be self-contained, i.e., it should contain all imports and should use relative paths instead of hard coded paths (please avoid `/Users/JohnDoe/...`).\n* A lot of issues can be reproduced with plain SQL code executed in the [DuckDB command line client](https://duckdb.org/docs/api/cli/overview). If you can provide such an example, it greatly simplifies the reproduction process and likely results in a faster fix.\n* If the script needs additional data, please share the data as a CSV, JSON, or Parquet file. Unfortunately, we cannot fix issues that can only be reproduced with a confidential data set. [Support contracts](https://duckdblabs.com/#support) allow sharing confidential data with the core DuckDB team under NDA.\n\nFor more detailed guidelines on how to create reproducible examples, please visit Stack Overflow's [\u201cMinimal, Reproducible Example\u201d](https://stackoverflow.com/help/minimal-reproducible-example) page.\n\nI had a further look ... The \"issue\", if it can be called an \"issue\", occurs when the filename (and I therefore presume the database name) is the same as the table name. e.g file \"russian_tax.duckdb\" and table name \"russian_tax\",  I assume that the CLI tab completion is completing what it thinks is the database or schema  name?\nYes, it seems that if there are duplicates it prefers to suggest database/schema names over tables. We could flip that around - it makes sense to prefer tables imo.\nThanks for opening this issue! Based on our automated check, it seems that your post contains some code but it does not use [code blocks](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks) to format it.\n          \nPlease double-check your post and revise it if necessary. To employ syntax highlighting, it's recommended to use code blocks with triple backticks, e.g.:\n````\n```sql\nSELECT ...\n```\n````\nIf this is a false positive, feel free to disregard this comment.\n\nThanks for the report!\n\nI cannot reproduce this with only a table - this seems to work correctly for me:\n\n```sql\ncreate table Russian_tax(i int);\nD from sql_auto_complete('from russ') limit 1;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 suggestion  \u2502 suggestion_start \u2502\n\u2502   varchar   \u2502      int32       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Russian_tax \u2502        5         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\nOnly when I create a schema with the same name do I get this completion:\n\n```sql\nD create schema Russian_tax;\nD from sql_auto_complete('from russ') limit 1;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  suggestion  \u2502 suggestion_start \u2502\n\u2502   varchar    \u2502      int32       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Russian_tax. \u2502        5         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\nDo you perhaps have a schema with this name as well?\n\nIf not, could you provide a full reproducible example including the schema/table definitions.\nThanks for opening this issue in the DuckDB issue tracker! To resolve this issue, our team needs a reproducible example. This includes:\n\n* A source code snippet which reproduces the issue.\n* The snippet should be self-contained, i.e., it should contain all imports and should use relative paths instead of hard coded paths (please avoid `/Users/JohnDoe/...`).\n* A lot of issues can be reproduced with plain SQL code executed in the [DuckDB command line client](https://duckdb.org/docs/api/cli/overview). If you can provide such an example, it greatly simplifies the reproduction process and likely results in a faster fix.\n* If the script needs additional data, please share the data as a CSV, JSON, or Parquet file. Unfortunately, we cannot fix issues that can only be reproduced with a confidential data set. [Support contracts](https://duckdblabs.com/#support) allow sharing confidential data with the core DuckDB team under NDA.\n\nFor more detailed guidelines on how to create reproducible examples, please visit Stack Overflow's [\u201cMinimal, Reproducible Example\u201d](https://stackoverflow.com/help/minimal-reproducible-example) page.\n\nI had a further look ... The \"issue\", if it can be called an \"issue\", occurs when the filename (and I therefore presume the database name) is the same as the table name. e.g file \"russian_tax.duckdb\" and table name \"russian_tax\",  I assume that the CLI tab completion is completing what it thinks is the database or schema  name?\nYes, it seems that if there are duplicates it prefers to suggest database/schema names over tables. We could flip that around - it makes sense to prefer tables imo.",
  "created_at": "2025-02-11T16:51:09Z"
}