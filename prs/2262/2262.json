{
  "repo": "duckdb/duckdb",
  "pull_number": 2262,
  "instance_id": "duckdb__duckdb-2262",
  "issue_numbers": [
    "2261"
  ],
  "base_commit": "a3c48ea352c90965efb8b850bf14973f9edd3fc8",
  "patch": "diff --git a/extension/parquet/parquet_reader.cpp b/extension/parquet/parquet_reader.cpp\nindex c61682d7677e..8e13ab0eca2f 100644\n--- a/extension/parquet/parquet_reader.cpp\n+++ b/extension/parquet/parquet_reader.cpp\n@@ -478,6 +478,24 @@ static void FilterOperationSwitch(Vector &v, Value &constant, parquet_filter_t &\n \tcase LogicalTypeId::VARCHAR:\n \t\tTemplatedFilterOperation<string_t, OP>(v, string_t(constant.str_value), filter_mask, count);\n \t\tbreak;\n+\tcase LogicalTypeId::DECIMAL:\n+\t\tswitch (v.GetType().InternalType()) {\n+\t\tcase PhysicalType::INT16:\n+\t\t\tTemplatedFilterOperation<int16_t, OP>(v, constant.value_.smallint, filter_mask, count);\n+\t\t\tbreak;\n+\t\tcase PhysicalType::INT32:\n+\t\t\tTemplatedFilterOperation<int32_t, OP>(v, constant.value_.integer, filter_mask, count);\n+\t\t\tbreak;\n+\t\tcase PhysicalType::INT64:\n+\t\t\tTemplatedFilterOperation<int64_t, OP>(v, constant.value_.bigint, filter_mask, count);\n+\t\t\tbreak;\n+\t\tcase PhysicalType::INT128:\n+\t\t\tTemplatedFilterOperation<hugeint_t, OP>(v, constant.value_.hugeint, filter_mask, count);\n+\t\t\tbreak;\n+\t\tdefault:\n+\t\t\tthrow InternalException(\"Unsupported internal type for decimal\");\n+\t\t}\n+\t\tbreak;\n \tdefault:\n \t\tthrow NotImplementedException(\"Unsupported type for filter %s\", v.ToString());\n \t}\n",
  "test_patch": "diff --git a/data/parquet-testing/arrow/lineitem-arrow.parquet b/data/parquet-testing/arrow/lineitem-arrow.parquet\nnew file mode 100644\nindex 000000000000..bf19dd5c8722\nBinary files /dev/null and b/data/parquet-testing/arrow/lineitem-arrow.parquet differ\ndiff --git a/data/parquet-testing/decimals.parquet b/data/parquet-testing/decimals.parquet\nnew file mode 100644\nindex 000000000000..44c379c0c631\nBinary files /dev/null and b/data/parquet-testing/decimals.parquet differ\ndiff --git a/test/sql/copy/parquet/decimal_filter.test b/test/sql/copy/parquet/decimal_filter.test\nnew file mode 100644\nindex 000000000000..4087e2d8a723\n--- /dev/null\n+++ b/test/sql/copy/parquet/decimal_filter.test\n@@ -0,0 +1,28 @@\n+# name: test/sql/copy/parquet/decimal_filter.test\n+# description: Decimal filter pushdown into Parquet\n+# group: [parquet]\n+\n+require parquet\n+\n+statement ok\n+pragma enable_verification\n+\n+query IIII\n+select * from 'data/parquet-testing/decimals.parquet'\n+----\n+0.1\t0.1\t0.1\t0.1\n+-0.1\t-0.1\t-0.1\t-0.1\n+\n+loop i 1 5\n+\n+query IIII\n+select * from 'data/parquet-testing/decimals.parquet' WHERE l${i}=0.1\n+----\n+0.1\t0.1\t0.1\t0.1\n+\n+query IIII\n+select * from 'data/parquet-testing/decimals.parquet' WHERE l${i}=-0.1\n+----\n+-0.1\t-0.1\t-0.1\t-0.1\n+\n+endloop\n\\ No newline at end of file\ndiff --git a/test/sql/copy/parquet/lineitem_arrow.test b/test/sql/copy/parquet/lineitem_arrow.test\nnew file mode 100644\nindex 000000000000..4d3d318cb429\n--- /dev/null\n+++ b/test/sql/copy/parquet/lineitem_arrow.test\n@@ -0,0 +1,33 @@\n+# name: test/sql/copy/parquet/lineitem_arrow.test\n+# description: Issue #2261: TPC-H Q6 fails on Parquet input\n+# group: [parquet]\n+\n+require tpch\n+\n+require parquet\n+\n+statement ok\n+CREATE TABLE lineitem AS SELECT * FROM 'data/parquet-testing/arrow/lineitem-arrow.parquet'\n+\n+query I nosort q01\n+PRAGMA tpch(1)\n+----\n+\n+query I nosort q06\n+PRAGMA tpch(6)\n+----\n+\n+statement ok\n+DROP TABLE lineitem\n+\n+statement ok\n+CREATE VIEW lineitem AS SELECT * FROM 'data/parquet-testing/arrow/lineitem-arrow.parquet'\n+\n+query I nosort q01\n+PRAGMA tpch(1)\n+----\n+\n+query I nosort q06\n+PRAGMA tpch(6)\n+----\n+\n",
  "problem_statement": "TPC-H Q6 fails on Parquet input\nI ran the following query from Python:\r\n\r\n```\r\nWITH lineitem AS (SELECT * FROM \"0.parquet\")\r\nSELECT\r\n    sum(l_extendedprice * l_discount) AS revenue\r\nFROM\r\n    lineitem\r\nWHERE\r\n    l_shipdate >= CAST('1994-01-01' AS date)\r\n    AND l_shipdate < CAST('1995-01-01' AS date)\r\n    AND l_discount BETWEEN 0.05\r\n    AND 0.07\r\n    AND l_quantity < 24;\r\n```\r\n\r\nwith the following Parquet file: https://drive.google.com/file/d/1kdsASWJ0KEdP8IDigHN-9ibVJBbHlVSP/view?usp=sharing\r\n\r\nand got the following exception:\r\n\r\n```\r\nRuntimeError: Not implemented Error: Unsupported type for filter FLAT DECIMAL(15,2): (UNKNOWN COUNT) [ ]\r\n```\r\n\r\nThe Parquet files were obtained by using `CALL dbgen(sf=1);` and then exporting each TPC-H table to Arrow format, which I then wrote to Parquet format (using `pyarrow.parquet` -- I know that DuckDB can also export Parquet files, but this gave me the control I was looking for). \r\n\r\n**Environment (please complete the following information):**\r\n - Linux gcc 9.3\r\n - git master\r\n\n",
  "hints_text": "",
  "created_at": "2021-09-10T11:03:14Z"
}