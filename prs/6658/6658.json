{
  "repo": "duckdb/duckdb",
  "pull_number": 6658,
  "instance_id": "duckdb__duckdb-6658",
  "issue_numbers": [
    "6656",
    "6656"
  ],
  "base_commit": "d967b11e3a6ebdc982a87124c30588369462bce1",
  "patch": "diff --git a/src/function/scalar/list/list_concat.cpp b/src/function/scalar/list/list_concat.cpp\nindex 6e79edf92bcb..50a7b4960b6f 100644\n--- a/src/function/scalar/list/list_concat.cpp\n+++ b/src/function/scalar/list/list_concat.cpp\n@@ -82,9 +82,10 @@ static unique_ptr<FunctionData> ListConcatBind(ClientContext &context, ScalarFun\n \t\tthrow ParameterNotResolvedException();\n \t} else if (lhs.id() == LogicalTypeId::SQLNULL || rhs.id() == LogicalTypeId::SQLNULL) {\n \t\t// we mimic postgres behaviour: list_concat(NULL, my_list) = my_list\n-\t\tbound_function.arguments[0] = lhs;\n-\t\tbound_function.arguments[1] = rhs;\n-\t\tbound_function.return_type = rhs.id() == LogicalTypeId::SQLNULL ? lhs : rhs;\n+\t\tauto return_type = rhs.id() == LogicalTypeId::SQLNULL ? lhs : rhs;\n+\t\tbound_function.arguments[0] = return_type;\n+\t\tbound_function.arguments[1] = return_type;\n+\t\tbound_function.return_type = return_type;\n \t} else {\n \t\tD_ASSERT(lhs.id() == LogicalTypeId::LIST);\n \t\tD_ASSERT(rhs.id() == LogicalTypeId::LIST);\ndiff --git a/src/storage/statistics/list_stats.cpp b/src/storage/statistics/list_stats.cpp\nindex 82cb59428e4e..c1364f2b5283 100644\n--- a/src/storage/statistics/list_stats.cpp\n+++ b/src/storage/statistics/list_stats.cpp\n@@ -34,12 +34,16 @@ void ListStats::Copy(BaseStatistics &stats, const BaseStatistics &other) {\n }\n \n const BaseStatistics &ListStats::GetChildStats(const BaseStatistics &stats) {\n-\tD_ASSERT(stats.GetStatsType() == StatisticsType::LIST_STATS);\n+\tif (stats.GetStatsType() != StatisticsType::LIST_STATS) {\n+\t\tthrow InternalException(\"ListStats::GetChildStats called on stats that is not a list\");\n+\t}\n \tD_ASSERT(stats.child_stats);\n \treturn stats.child_stats[0];\n }\n BaseStatistics &ListStats::GetChildStats(BaseStatistics &stats) {\n-\tD_ASSERT(stats.GetStatsType() == StatisticsType::LIST_STATS);\n+\tif (stats.GetStatsType() != StatisticsType::LIST_STATS) {\n+\t\tthrow InternalException(\"ListStats::GetChildStats called on stats that is not a list\");\n+\t}\n \tD_ASSERT(stats.child_stats);\n \treturn stats.child_stats[0];\n }\ndiff --git a/src/storage/statistics/struct_stats.cpp b/src/storage/statistics/struct_stats.cpp\nindex 20ed70345118..53e548c699ea 100644\n--- a/src/storage/statistics/struct_stats.cpp\n+++ b/src/storage/statistics/struct_stats.cpp\n@@ -34,7 +34,9 @@ BaseStatistics StructStats::CreateEmpty(LogicalType type) {\n }\n \n const BaseStatistics *StructStats::GetChildStats(const BaseStatistics &stats) {\n-\tD_ASSERT(stats.GetStatsType() == StatisticsType::STRUCT_STATS);\n+\tif (stats.GetStatsType() != StatisticsType::STRUCT_STATS) {\n+\t\tthrow InternalException(\"Calling StructStats::GetChildStats on stats that is not a struct\");\n+\t}\n \treturn stats.child_stats.get();\n }\n \n",
  "test_patch": "diff --git a/test/sql/types/list/list_concat_null.test b/test/sql/types/list/list_concat_null.test\nnew file mode 100644\nindex 000000000000..48aa3dbec60a\n--- /dev/null\n+++ b/test/sql/types/list/list_concat_null.test\n@@ -0,0 +1,15 @@\n+# name: test/sql/types/list/list_concat_null.test\n+# description: Issue #6656 - Segmentation Fault on Select query on table with column of array type\n+# group: [list]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+CREATE table x1 (b INT[]);\n+\n+statement ok\n+SELECT b || NULL from x1;\n+\n+statement ok\n+SELECT NULL || NULL from x1;\n",
  "problem_statement": "Segmentation Fault on Select query on table with column of array type.\n### What happens?\n\nsegmentation fault\n\n### To Reproduce\n\nCREATE table x1 (b INT[]);\r\nSELECT b || NULL from x1;\r\n\r\nMay need to execute the select query multiple times to observe segmentation fault.\r\n\n\n### OS:\n\nmacOS12.6.3\n\n### DuckDB Version:\n\n0.7.1\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nNishita Dutta\n\n### Affiliation:\n\nNational University of Singapore\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\nSegmentation Fault on Select query on table with column of array type.\n### What happens?\n\nsegmentation fault\n\n### To Reproduce\n\nCREATE table x1 (b INT[]);\r\nSELECT b || NULL from x1;\r\n\r\nMay need to execute the select query multiple times to observe segmentation fault.\r\n\n\n### OS:\n\nmacOS12.6.3\n\n### DuckDB Version:\n\n0.7.1\n\n### DuckDB Client:\n\nCLI\n\n### Full Name:\n\nNishita Dutta\n\n### Affiliation:\n\nNational University of Singapore\n\n### Have you tried this on the latest `master` branch?\n\n- [X] I agree\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] I agree\n",
  "hints_text": "\n",
  "created_at": "2023-03-10T06:55:06Z"
}