{
  "repo": "duckdb/duckdb",
  "pull_number": 9791,
  "instance_id": "duckdb__duckdb-9791",
  "issue_numbers": [
    "9768"
  ],
  "base_commit": "6812703823d1d66566bc7eaac2b6e4b273c85333",
  "patch": "diff --git a/src/common/hive_partitioning.cpp b/src/common/hive_partitioning.cpp\nindex d7211ff9bfbf..5a90a29356f3 100644\n--- a/src/common/hive_partitioning.cpp\n+++ b/src/common/hive_partitioning.cpp\n@@ -65,7 +65,7 @@ static void ConvertKnownColRefToConstants(unique_ptr<Expression> &expr,\n //  - http(s)://domain(:port)/lala/kasdl/var1=value1/?not-a-var=not-a-value\n //  - folder/folder/folder/../var1=value1/etc/.//var2=value2\n const string &HivePartitioning::RegexString() {\n-\tstatic string REGEX = \"[\\\\/\\\\\\\\]([^\\\\/\\\\?\\\\\\\\]+)=([^\\\\/\\\\n\\\\?\\\\\\\\]+)\";\n+\tstatic string REGEX = \"[\\\\/\\\\\\\\]([^\\\\/\\\\?\\\\\\\\]+)=([^\\\\/\\\\n\\\\?\\\\\\\\]*)\";\n \treturn REGEX;\n }\n \n",
  "test_patch": "diff --git a/data/parquet-testing/hive-partitioning/empty_string/key=/part-0.parquet b/data/parquet-testing/hive-partitioning/empty_string/key=/part-0.parquet\nnew file mode 100644\nindex 000000000000..93c45523a7af\nBinary files /dev/null and b/data/parquet-testing/hive-partitioning/empty_string/key=/part-0.parquet differ\ndiff --git a/data/parquet-testing/hive-partitioning/empty_string/key=a/part-0.parquet b/data/parquet-testing/hive-partitioning/empty_string/key=a/part-0.parquet\nnew file mode 100644\nindex 000000000000..9efb4ec09a72\nBinary files /dev/null and b/data/parquet-testing/hive-partitioning/empty_string/key=a/part-0.parquet differ\ndiff --git a/test/sql/copy/parquet/parquet_hive_empty.test b/test/sql/copy/parquet/parquet_hive_empty.test\nnew file mode 100644\nindex 000000000000..ab11846371b7\n--- /dev/null\n+++ b/test/sql/copy/parquet/parquet_hive_empty.test\n@@ -0,0 +1,14 @@\n+# name: test/sql/copy/parquet/parquet_hive_empty.test\n+# description: Test empty partitioning values\n+# group: [parquet]\n+\n+require parquet\n+\n+query II\n+select * \n+from parquet_scan('data/parquet-testing/hive-partitioning/empty_string/*/*.parquet', hive_partitioning=1)\n+ORDER BY ALL\n+----\n+a\ta\n+b\t(empty)\n+\n",
  "problem_statement": " Error when reading a parquet partition with an empty string key\n### What happens?\n\nduckdb allows creation of partition with an empty string as key but fails when reading it when passing hive_types with :\r\n\r\n```\r\nError: Binder Error: Hive partition mismatch between file \"ds_pqt/key=/data_0.parquet\" and \"ds_pqt/key=a/data_0.parquet\"\r\n```\r\n\r\nI'm not sure it's related to https://github.com/duckdb/duckdb/issues/9763\n\n### To Reproduce\n\n```\r\nCREATE TABLE tbl(key VARCHAR, name VARCHAR);\r\nINSERT INTO tbl VALUES ('a', 'Mark'), ('', 'Hannes');\r\nCOPY (SELECT * FROM tbl) TO 'ds_pqt' (FORMAT PARQUET, PARTITION_BY (key));\r\n\r\nSELECT * FROM read_parquet('ds_pqt/**/*.parquet',  hive_types={'key': string});\r\n```\n\n### OS:\n\nlinux\n\n### DuckDB Version:\n\n0.9.2\n\n### DuckDB Client:\n\ncli\n\n### Full Name:\n\nNicolas Chuche\n\n### Affiliation:\n\nMTES : https://github.com/MTES-MCT/\n\n### Have you tried this on the latest `main` branch?\n\nI have tested with a main build\n\n### Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?\n\n- [X] Yes, I have\n",
  "hints_text": "Reproduced, it's basically the same problem of https://github.com/duckdb/duckdb/issues/9763, could we maybe consolidate it there?\r\n\r\nThe workaround to both problems, is funnily enough doing:\r\n```\r\nSELECT * FROM read_parquet('ds_pqt/**/*.parquet', hive_partitioning=0);\r\n```\nThis workaround doesn't work for partitions generated by arrow where key is only in the hive string and not in parquet files :-(\nThe problem is real, thank you for bringing this up.\r\nThe suggestion was a joke of sort, I should have made explicitly it's not a proper way around the problem.\r\n\r\nI don't have any timeline, but either here or on the other issue you will be updated.",
  "created_at": "2023-11-24T11:19:40Z"
}