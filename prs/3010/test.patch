diff --git a/tools/rpkg/tests/testthat/test_register_arrow.R b/tools/rpkg/tests/testthat/test_register_arrow.R
index cacf70980b13..2671273c28f0 100644
--- a/tools/rpkg/tests/testthat/test_register_arrow.R
+++ b/tools/rpkg/tests/testthat/test_register_arrow.R
@@ -374,3 +374,36 @@ test_that("we can list registered arrow tables", {
 
   expect_equal(length(duckdb::duckdb_list_arrow(con)), 0)
 })
+
+
+test_that("duckdb can read arrow timestamps", {
+  con <- DBI::dbConnect(duckdb::duckdb(), timezone_out = "UTC")
+  on.exit(dbDisconnect(con, shutdown = TRUE))
+
+  timestamp <- as.POSIXct("2022-01-30 11:59:29")
+
+  for (unit in c("s", "ms", "us", "ns")) {
+    tbl <- arrow::arrow_table(t = arrow::Array$create(timestamp, type = arrow::timestamp(unit)))
+    duckdb::duckdb_register_arrow(con, "timestamps", tbl)
+
+    if (unit == "ns") {
+      # warning when precision loss
+      expect_warning({ res <- dbGetQuery(con, "SELECT t FROM timestamps") })
+    } else {
+      expect_warning({ res <- dbGetQuery(con, "SELECT t FROM timestamps") }, regexp = NA)
+    }
+    expect_equal(res[[1]], as.POSIXct(as.character(timestamp), tz = "UTC"))
+
+    res <- dbGetQuery(con, "SELECT year(t), month(t), day(t), hour(t), minute(t), second(t) FROM timestamps")
+
+    expect_equal(res[[1]], 2022)
+    expect_equal(res[[2]], 1)
+    expect_equal(res[[3]], 30)
+    expect_equal(res[[4]], 11)
+    expect_equal(res[[5]], 59)
+    expect_equal(res[[6]], 29)
+
+    duckdb::duckdb_unregister_arrow(con, "timestamps")
+  }
+})
+
