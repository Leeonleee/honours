diff --git a/src/function/scalar/string/like.cpp b/src/function/scalar/string/like.cpp
index 2769235da3bc..b2c75d557ac4 100644
--- a/src/function/scalar/string/like.cpp
+++ b/src/function/scalar/string/like.cpp
@@ -335,14 +335,18 @@ parse_bracket : {
 }
 }
 
+static char GetEscapeChar(string_t escape) {
+	// Only one escape character should be allowed
+	if (escape.GetSize() > 1) {
+		throw SyntaxException("Invalid escape string. Escape string must be empty or one character.");
+	}
+	return escape.GetSize() == 0 ? '\0' : *escape.GetDataUnsafe();
+}
+
 struct LikeEscapeOperator {
 	template <class TA, class TB, class TC>
 	static inline bool Operation(TA str, TB pattern, TC escape) {
-		// Only one escape character should be allowed
-		if (escape.GetSize() > 1) {
-			throw SyntaxException("Invalid escape string. Escape string must be empty or one character.");
-		}
-		char escape_char = escape.GetSize() == 0 ? '\0' : *escape.GetDataUnsafe();
+		char escape_char = GetEscapeChar(escape);
 		return LikeOperatorFunction(str.GetDataUnsafe(), str.GetSize(), pattern.GetDataUnsafe(), pattern.GetSize(),
 		                            escape_char);
 	}
@@ -362,24 +366,44 @@ struct LikeOperator {
 	}
 };
 
+bool ILikeOperatorFunction(string_t &str, string_t &pattern, char escape = '\0') {
+	auto str_data = str.GetDataUnsafe();
+	auto str_size = str.GetSize();
+	auto pat_data = pattern.GetDataUnsafe();
+	auto pat_size = pattern.GetSize();
+
+	// lowercase both the str and the pattern
+	idx_t str_llength = LowerFun::LowerLength(str_data, str_size);
+	auto str_ldata = unique_ptr<char[]>(new char[str_llength]);
+	LowerFun::LowerCase(str_data, str_size, str_ldata.get());
+
+	idx_t pat_llength = LowerFun::LowerLength(pat_data, pat_size);
+	auto pat_ldata = unique_ptr<char[]>(new char[pat_llength]);
+	LowerFun::LowerCase(pat_data, pat_size, pat_ldata.get());
+	string_t str_lcase(str_ldata.get(), str_llength);
+	string_t pat_lcase(pat_ldata.get(), pat_llength);
+	return LikeOperatorFunction(str_lcase, pat_lcase, escape);
+}
+
+struct ILikeEscapeOperator {
+	template <class TA, class TB, class TC>
+	static inline bool Operation(TA str, TB pattern, TC escape) {
+		char escape_char = GetEscapeChar(escape);
+		return ILikeOperatorFunction(str, pattern, escape_char);
+	}
+};
+
+struct NotILikeEscapeOperator {
+	template <class TA, class TB, class TC>
+	static inline bool Operation(TA str, TB pattern, TC escape) {
+		return !ILikeEscapeOperator::Operation(str, pattern, escape);
+	}
+};
+
 struct ILikeOperator {
 	template <class TA, class TB, class TR>
 	static inline TR Operation(TA str, TB pattern) {
-		auto str_data = str.GetDataUnsafe();
-		auto str_size = str.GetSize();
-		auto pat_data = pattern.GetDataUnsafe();
-		auto pat_size = pattern.GetSize();
-		// lowercase both the str and the pattern
-		idx_t str_llength = LowerFun::LowerLength(str_data, str_size);
-		auto str_ldata = unique_ptr<char[]>(new char[str_llength]);
-		LowerFun::LowerCase(str_data, str_size, str_ldata.get());
-
-		idx_t pat_llength = LowerFun::LowerLength(pat_data, pat_size);
-		auto pat_ldata = unique_ptr<char[]>(new char[pat_llength]);
-		LowerFun::LowerCase(pat_data, pat_size, pat_ldata.get());
-		string_t str_lcase(str_ldata.get(), str_llength);
-		string_t pat_lcase(pat_ldata.get(), pat_llength);
-		return LikeOperatorFunction(str_lcase, pat_lcase);
+		return ILikeOperatorFunction(str, pattern);
 	}
 };
 
@@ -487,5 +511,11 @@ void LikeEscapeFun::RegisterFunction(BuiltinFunctions &set) {
 	set.AddFunction({"not_like_escape"},
 	                ScalarFunction({LogicalType::VARCHAR, LogicalType::VARCHAR, LogicalType::VARCHAR},
 	                               LogicalType::BOOLEAN, LikeEscapeFunction<NotLikeEscapeOperator>));
+
+	set.AddFunction({"ilike_escape"}, ScalarFunction({LogicalType::VARCHAR, LogicalType::VARCHAR, LogicalType::VARCHAR},
+	                                                 LogicalType::BOOLEAN, LikeEscapeFunction<ILikeEscapeOperator>));
+	set.AddFunction({"not_ilike_escape"},
+	                ScalarFunction({LogicalType::VARCHAR, LogicalType::VARCHAR, LogicalType::VARCHAR},
+	                               LogicalType::BOOLEAN, LikeEscapeFunction<NotILikeEscapeOperator>));
 }
 } // namespace duckdb
diff --git a/third_party/libpg_query/grammar/statements/select.y b/third_party/libpg_query/grammar/statements/select.y
index de6e485fb7c4..c9a0961132f3 100644
--- a/third_party/libpg_query/grammar/statements/select.y
+++ b/third_party/libpg_query/grammar/statements/select.y
@@ -1807,11 +1807,10 @@ a_expr:		c_expr									{ $$ = $1; }
 				}
 			| a_expr ILIKE a_expr ESCAPE a_expr					%prec ILIKE
 				{
-					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
-											   list_make2($3, $5),
+					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
+											   list_make3($1, $3, $5),
 											   @2);
-					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
-												   $1, (PGNode *) n, @2);
+					$$ = (PGNode *) n;
 				}
 			| a_expr NOT_LA ILIKE a_expr						%prec NOT_LA
 				{
@@ -1820,11 +1819,10 @@ a_expr:		c_expr									{ $$ = $1; }
 				}
 			| a_expr NOT_LA ILIKE a_expr ESCAPE a_expr			%prec NOT_LA
 				{
-					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
-											   list_make2($4, $6),
+					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
+											   list_make3($1, $4, $6),
 											   @2);
-					$$ = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
-												   $1, (PGNode *) n, @2);
+					$$ = (PGNode *) n;
 				}
 
 			| a_expr SIMILAR TO a_expr							%prec SIMILAR
diff --git a/third_party/libpg_query/src_backend_parser_gram.cpp b/third_party/libpg_query/src_backend_parser_gram.cpp
index c1ec80b14aa2..8298de0e607b 100644
--- a/third_party/libpg_query/src_backend_parser_gram.cpp
+++ b/third_party/libpg_query/src_backend_parser_gram.cpp
@@ -2423,38 +2423,38 @@ static const yytype_uint16 yyrline[] =
     1706,  1714,  1729,  1731,  1733,  1735,  1737,  1739,  1741,  1743,
     1745,  1747,  1749,  1751,  1753,  1755,  1758,  1760,  1762,  1765,
     1767,  1769,  1771,  1774,  1779,  1784,  1791,  1796,  1803,  1808,
-    1816,  1821,  1830,  1838,  1846,  1854,  1872,  1880,  1888,  1896,
-    1904,  1912,  1916,  1920,  1924,  1932,  1940,  1956,  1964,  1972,
-    1980,  1988,  1996,  2004,  2008,  2012,  2016,  2020,  2028,  2036,
-    2044,  2052,  2072,  2094,  2105,  2112,  2126,  2142,  2144,  2146,
-    2148,  2150,  2152,  2154,  2156,  2158,  2160,  2162,  2164,  2166,
-    2168,  2170,  2172,  2174,  2176,  2178,  2180,  2184,  2188,  2192,
-    2206,  2207,  2208,  2215,  2227,  2242,  2254,  2256,  2268,  2279,
-    2303,  2314,  2323,  2327,  2334,  2342,  2350,  2361,  2369,  2397,
-    2433,  2444,  2445,  2452,  2458,  2462,  2466,  2470,  2474,  2478,
-    2482,  2486,  2490,  2494,  2498,  2502,  2506,  2510,  2514,  2518,
-    2520,  2522,  2526,  2535,  2540,  2547,  2562,  2569,  2573,  2577,
-    2581,  2585,  2599,  2600,  2604,  2605,  2609,  2610,  2617,  2618,
-    2622,  2623,  2628,  2636,  2638,  2652,  2655,  2682,  2683,  2686,
-    2687,  2698,  2704,  2711,  2720,  2737,  2782,  2790,  2798,  2806,
-    2814,  2835,  2836,  2839,  2840,  2844,  2854,  2855,  2857,  2858,
-    2859,  2862,  2863,  2866,  2867,  2868,  2869,  2870,  2871,  2872,
-    2873,  2874,  2875,  2876,  2877,  2880,  2882,  2887,  2889,  2894,
-    2896,  2898,  2900,  2902,  2904,  2906,  2908,  2922,  2924,  2928,
-    2932,  2939,  2944,  2951,  2955,  2961,  2965,  2974,  2985,  2986,
-    2990,  2994,  3001,  3002,  3003,  3004,  3005,  3006,  3007,  3008,
-    3009,  3010,  3020,  3024,  3031,  3038,  3039,  3055,  3059,  3064,
-    3068,  3083,  3088,  3092,  3095,  3098,  3099,  3100,  3103,  3110,
-    3120,  3134,  3135,  3139,  3150,  3151,  3154,  3155,  3158,  3162,
-    3169,  3173,  3181,  3192,  3193,  3197,  3198,  3202,  3203,  3206,
-    3207,  3217,  3218,  3222,  3223,  3226,  3242,  3250,  3258,  3273,
-    3291,  3292,  3295,  3296,  3299,  3303,  3304,  3307,  3308,  3309,
-    3319,  3320,  3331,  3335,  3362,  3364,  3369,  3371,  3381,  3384,
-    3395,  3399,  3403,  3415,  3419,  3428,  3435,  3473,  3477,  3481,
-    3485,  3489,  3493,  3497,  3503,  3504,  3520,  3521,  3522,  3525,
-    3526,  3532,  3533,  3534,  3537,  3538,  3539,  3542,  3543,  3544,
-    3547,  3548,  3551,  3553,  3558,  3559,  3562,  3570,  3571,  3572,
-    3573,  3576,  3577,     7,    18,    19,    23,    24,    25,    26,
+    1815,  1820,  1828,  1836,  1844,  1852,  1870,  1878,  1886,  1894,
+    1902,  1910,  1914,  1918,  1922,  1930,  1938,  1954,  1962,  1970,
+    1978,  1986,  1994,  2002,  2006,  2010,  2014,  2018,  2026,  2034,
+    2042,  2050,  2070,  2092,  2103,  2110,  2124,  2140,  2142,  2144,
+    2146,  2148,  2150,  2152,  2154,  2156,  2158,  2160,  2162,  2164,
+    2166,  2168,  2170,  2172,  2174,  2176,  2178,  2182,  2186,  2190,
+    2204,  2205,  2206,  2213,  2225,  2240,  2252,  2254,  2266,  2277,
+    2301,  2312,  2321,  2325,  2332,  2340,  2348,  2359,  2367,  2395,
+    2431,  2442,  2443,  2450,  2456,  2460,  2464,  2468,  2472,  2476,
+    2480,  2484,  2488,  2492,  2496,  2500,  2504,  2508,  2512,  2516,
+    2518,  2520,  2524,  2533,  2538,  2545,  2560,  2567,  2571,  2575,
+    2579,  2583,  2597,  2598,  2602,  2603,  2607,  2608,  2615,  2616,
+    2620,  2621,  2626,  2634,  2636,  2650,  2653,  2680,  2681,  2684,
+    2685,  2696,  2702,  2709,  2718,  2735,  2780,  2788,  2796,  2804,
+    2812,  2833,  2834,  2837,  2838,  2842,  2852,  2853,  2855,  2856,
+    2857,  2860,  2861,  2864,  2865,  2866,  2867,  2868,  2869,  2870,
+    2871,  2872,  2873,  2874,  2875,  2878,  2880,  2885,  2887,  2892,
+    2894,  2896,  2898,  2900,  2902,  2904,  2906,  2920,  2922,  2926,
+    2930,  2937,  2942,  2949,  2953,  2959,  2963,  2972,  2983,  2984,
+    2988,  2992,  2999,  3000,  3001,  3002,  3003,  3004,  3005,  3006,
+    3007,  3008,  3018,  3022,  3029,  3036,  3037,  3053,  3057,  3062,
+    3066,  3081,  3086,  3090,  3093,  3096,  3097,  3098,  3101,  3108,
+    3118,  3132,  3133,  3137,  3148,  3149,  3152,  3153,  3156,  3160,
+    3167,  3171,  3179,  3190,  3191,  3195,  3196,  3200,  3201,  3204,
+    3205,  3215,  3216,  3220,  3221,  3224,  3240,  3248,  3256,  3271,
+    3289,  3290,  3293,  3294,  3297,  3301,  3302,  3305,  3306,  3307,
+    3317,  3318,  3329,  3333,  3360,  3362,  3367,  3369,  3379,  3382,
+    3393,  3397,  3401,  3413,  3417,  3426,  3433,  3471,  3475,  3479,
+    3483,  3487,  3491,  3495,  3501,  3502,  3518,  3519,  3520,  3523,
+    3524,  3530,  3531,  3532,  3535,  3536,  3537,  3540,  3541,  3542,
+    3545,  3546,  3549,  3551,  3556,  3557,  3560,  3568,  3569,  3570,
+    3571,  3574,  3575,     7,    18,    19,    23,    24,    25,    26,
        7,    16,    34,    41,    46,    47,    48,    49,     8,    33,
       62,    66,    67,    72,    73,    78,    79,    83,    84,    89,
       90,     7,    16,    25,    34,    43,    52,     5,    11,     7,
@@ -21273,16 +21273,15 @@ YYLTYPE yylloc;
   case 779:
 #line 1809 "third_party/libpg_query/grammar/statements/select.y"
     {
-					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
-											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
+					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
+											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
 											   (yylsp[(2) - (5)]));
-					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
-												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
+					(yyval.node) = (PGNode *) n;
 				;}
     break;
 
   case 780:
-#line 1817 "third_party/libpg_query/grammar/statements/select.y"
+#line 1816 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
 												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
@@ -21290,18 +21289,17 @@ YYLTYPE yylloc;
     break;
 
   case 781:
-#line 1822 "third_party/libpg_query/grammar/statements/select.y"
+#line 1821 "third_party/libpg_query/grammar/statements/select.y"
     {
-					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
-											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
+					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
+											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
 											   (yylsp[(2) - (6)]));
-					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
-												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
+					(yyval.node) = (PGNode *) n;
 				;}
     break;
 
   case 782:
-#line 1831 "third_party/libpg_query/grammar/statements/select.y"
+#line 1829 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
 											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
@@ -21312,7 +21310,7 @@ YYLTYPE yylloc;
     break;
 
   case 783:
-#line 1839 "third_party/libpg_query/grammar/statements/select.y"
+#line 1837 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
 											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
@@ -21323,7 +21321,7 @@ YYLTYPE yylloc;
     break;
 
   case 784:
-#line 1847 "third_party/libpg_query/grammar/statements/select.y"
+#line 1845 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
 											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
@@ -21334,7 +21332,7 @@ YYLTYPE yylloc;
     break;
 
   case 785:
-#line 1855 "third_party/libpg_query/grammar/statements/select.y"
+#line 1853 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
 											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
@@ -21345,7 +21343,7 @@ YYLTYPE yylloc;
     break;
 
   case 786:
-#line 1873 "third_party/libpg_query/grammar/statements/select.y"
+#line 1871 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGNullTest *n = makeNode(PGNullTest);
 					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
@@ -21356,7 +21354,7 @@ YYLTYPE yylloc;
     break;
 
   case 787:
-#line 1881 "third_party/libpg_query/grammar/statements/select.y"
+#line 1879 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGNullTest *n = makeNode(PGNullTest);
 					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
@@ -21367,7 +21365,7 @@ YYLTYPE yylloc;
     break;
 
   case 788:
-#line 1889 "third_party/libpg_query/grammar/statements/select.y"
+#line 1887 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGNullTest *n = makeNode(PGNullTest);
 					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
@@ -21378,7 +21376,7 @@ YYLTYPE yylloc;
     break;
 
   case 789:
-#line 1897 "third_party/libpg_query/grammar/statements/select.y"
+#line 1895 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGNullTest *n = makeNode(PGNullTest);
 					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
@@ -21389,7 +21387,7 @@ YYLTYPE yylloc;
     break;
 
   case 790:
-#line 1905 "third_party/libpg_query/grammar/statements/select.y"
+#line 1903 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGNullTest *n = makeNode(PGNullTest);
 					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
@@ -21400,7 +21398,7 @@ YYLTYPE yylloc;
     break;
 
   case 791:
-#line 1912 "third_party/libpg_query/grammar/statements/select.y"
+#line 1910 "third_party/libpg_query/grammar/statements/select.y"
     {
 				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
 				(yyval.node) = (PGNode *) n;
@@ -21408,7 +21406,7 @@ YYLTYPE yylloc;
     break;
 
   case 792:
-#line 1916 "third_party/libpg_query/grammar/statements/select.y"
+#line 1914 "third_party/libpg_query/grammar/statements/select.y"
     {
 				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
 				(yyval.node) = (PGNode *) n;
@@ -21416,7 +21414,7 @@ YYLTYPE yylloc;
     break;
 
   case 793:
-#line 1920 "third_party/libpg_query/grammar/statements/select.y"
+#line 1918 "third_party/libpg_query/grammar/statements/select.y"
     {
 				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
 				(yyval.node) = (PGNode *) n;
@@ -21424,7 +21422,7 @@ YYLTYPE yylloc;
     break;
 
   case 794:
-#line 1925 "third_party/libpg_query/grammar/statements/select.y"
+#line 1923 "third_party/libpg_query/grammar/statements/select.y"
     {
 				PGLambdaFunction *n = makeNode(PGLambdaFunction);
 				n->parameters = (yyvsp[(1) - (3)].list);
@@ -21435,7 +21433,7 @@ YYLTYPE yylloc;
     break;
 
   case 795:
-#line 1933 "third_party/libpg_query/grammar/statements/select.y"
+#line 1931 "third_party/libpg_query/grammar/statements/select.y"
     {
 				PGLambdaFunction *n = makeNode(PGLambdaFunction);
 				n->parameters = list_make1((yyvsp[(1) - (3)].node));
@@ -21446,7 +21444,7 @@ YYLTYPE yylloc;
     break;
 
   case 796:
-#line 1941 "third_party/libpg_query/grammar/statements/select.y"
+#line 1939 "third_party/libpg_query/grammar/statements/select.y"
     {
 					if (list_length((yyvsp[(1) - (3)].list)) != 2)
 						ereport(ERROR,
@@ -21465,7 +21463,7 @@ YYLTYPE yylloc;
     break;
 
   case 797:
-#line 1957 "third_party/libpg_query/grammar/statements/select.y"
+#line 1955 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGBooleanTest *b = makeNode(PGBooleanTest);
 					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
@@ -21476,7 +21474,7 @@ YYLTYPE yylloc;
     break;
 
   case 798:
-#line 1965 "third_party/libpg_query/grammar/statements/select.y"
+#line 1963 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGBooleanTest *b = makeNode(PGBooleanTest);
 					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
@@ -21487,7 +21485,7 @@ YYLTYPE yylloc;
     break;
 
   case 799:
-#line 1973 "third_party/libpg_query/grammar/statements/select.y"
+#line 1971 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGBooleanTest *b = makeNode(PGBooleanTest);
 					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
@@ -21498,7 +21496,7 @@ YYLTYPE yylloc;
     break;
 
   case 800:
-#line 1981 "third_party/libpg_query/grammar/statements/select.y"
+#line 1979 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGBooleanTest *b = makeNode(PGBooleanTest);
 					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
@@ -21509,7 +21507,7 @@ YYLTYPE yylloc;
     break;
 
   case 801:
-#line 1989 "third_party/libpg_query/grammar/statements/select.y"
+#line 1987 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGBooleanTest *b = makeNode(PGBooleanTest);
 					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
@@ -21520,7 +21518,7 @@ YYLTYPE yylloc;
     break;
 
   case 802:
-#line 1997 "third_party/libpg_query/grammar/statements/select.y"
+#line 1995 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGBooleanTest *b = makeNode(PGBooleanTest);
 					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
@@ -21531,35 +21529,35 @@ YYLTYPE yylloc;
     break;
 
   case 803:
-#line 2005 "third_party/libpg_query/grammar/statements/select.y"
+#line 2003 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
 				;}
     break;
 
   case 804:
-#line 2009 "third_party/libpg_query/grammar/statements/select.y"
+#line 2007 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
 				;}
     break;
 
   case 805:
-#line 2013 "third_party/libpg_query/grammar/statements/select.y"
+#line 2011 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
 				;}
     break;
 
   case 806:
-#line 2017 "third_party/libpg_query/grammar/statements/select.y"
+#line 2015 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
 				;}
     break;
 
   case 807:
-#line 2021 "third_party/libpg_query/grammar/statements/select.y"
+#line 2019 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
 												   "BETWEEN",
@@ -21570,7 +21568,7 @@ YYLTYPE yylloc;
     break;
 
   case 808:
-#line 2029 "third_party/libpg_query/grammar/statements/select.y"
+#line 2027 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
 												   "NOT BETWEEN",
@@ -21581,7 +21579,7 @@ YYLTYPE yylloc;
     break;
 
   case 809:
-#line 2037 "third_party/libpg_query/grammar/statements/select.y"
+#line 2035 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
 												   "BETWEEN SYMMETRIC",
@@ -21592,7 +21590,7 @@ YYLTYPE yylloc;
     break;
 
   case 810:
-#line 2045 "third_party/libpg_query/grammar/statements/select.y"
+#line 2043 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
 												   "NOT BETWEEN SYMMETRIC",
@@ -21603,7 +21601,7 @@ YYLTYPE yylloc;
     break;
 
   case 811:
-#line 2053 "third_party/libpg_query/grammar/statements/select.y"
+#line 2051 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* in_expr returns a PGSubLink or a list of a_exprs */
 					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
@@ -21626,7 +21624,7 @@ YYLTYPE yylloc;
     break;
 
   case 812:
-#line 2073 "third_party/libpg_query/grammar/statements/select.y"
+#line 2071 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* in_expr returns a PGSubLink or a list of a_exprs */
 					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
@@ -21651,7 +21649,7 @@ YYLTYPE yylloc;
     break;
 
   case 813:
-#line 2095 "third_party/libpg_query/grammar/statements/select.y"
+#line 2093 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGSubLink *n = makeNode(PGSubLink);
 					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
@@ -21665,7 +21663,7 @@ YYLTYPE yylloc;
     break;
 
   case 814:
-#line 2106 "third_party/libpg_query/grammar/statements/select.y"
+#line 2104 "third_party/libpg_query/grammar/statements/select.y"
     {
 					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
 						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
@@ -21675,7 +21673,7 @@ YYLTYPE yylloc;
     break;
 
   case 815:
-#line 2113 "third_party/libpg_query/grammar/statements/select.y"
+#line 2111 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/*
 					 * The SQL spec only allows DEFAULT in "contextually typed
@@ -21692,7 +21690,7 @@ YYLTYPE yylloc;
     break;
 
   case 816:
-#line 2126 "third_party/libpg_query/grammar/statements/select.y"
+#line 2124 "third_party/libpg_query/grammar/statements/select.y"
     {
 				PGList *func_name = list_make1(makeString("construct_array"));
 				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
@@ -21701,140 +21699,140 @@ YYLTYPE yylloc;
     break;
 
   case 817:
-#line 2143 "third_party/libpg_query/grammar/statements/select.y"
+#line 2141 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 818:
-#line 2145 "third_party/libpg_query/grammar/statements/select.y"
+#line 2143 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
     break;
 
   case 819:
-#line 2147 "third_party/libpg_query/grammar/statements/select.y"
+#line 2145 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 820:
-#line 2149 "third_party/libpg_query/grammar/statements/select.y"
+#line 2147 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 821:
-#line 2151 "third_party/libpg_query/grammar/statements/select.y"
+#line 2149 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 822:
-#line 2153 "third_party/libpg_query/grammar/statements/select.y"
+#line 2151 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 823:
-#line 2155 "third_party/libpg_query/grammar/statements/select.y"
+#line 2153 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 824:
-#line 2157 "third_party/libpg_query/grammar/statements/select.y"
+#line 2155 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 825:
-#line 2159 "third_party/libpg_query/grammar/statements/select.y"
+#line 2157 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 826:
-#line 2161 "third_party/libpg_query/grammar/statements/select.y"
+#line 2159 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 827:
-#line 2163 "third_party/libpg_query/grammar/statements/select.y"
+#line 2161 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 828:
-#line 2165 "third_party/libpg_query/grammar/statements/select.y"
+#line 2163 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 829:
-#line 2167 "third_party/libpg_query/grammar/statements/select.y"
+#line 2165 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 830:
-#line 2169 "third_party/libpg_query/grammar/statements/select.y"
+#line 2167 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 831:
-#line 2171 "third_party/libpg_query/grammar/statements/select.y"
+#line 2169 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 832:
-#line 2173 "third_party/libpg_query/grammar/statements/select.y"
+#line 2171 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 833:
-#line 2175 "third_party/libpg_query/grammar/statements/select.y"
+#line 2173 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 834:
-#line 2177 "third_party/libpg_query/grammar/statements/select.y"
+#line 2175 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 835:
-#line 2179 "third_party/libpg_query/grammar/statements/select.y"
+#line 2177 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
     break;
 
   case 836:
-#line 2181 "third_party/libpg_query/grammar/statements/select.y"
+#line 2179 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
 				;}
     break;
 
   case 837:
-#line 2185 "third_party/libpg_query/grammar/statements/select.y"
+#line 2183 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
 				;}
     break;
 
   case 838:
-#line 2189 "third_party/libpg_query/grammar/statements/select.y"
+#line 2187 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
 				;}
     break;
 
   case 839:
-#line 2193 "third_party/libpg_query/grammar/statements/select.y"
+#line 2191 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
 				;}
     break;
 
   case 840:
-#line 2206 "third_party/libpg_query/grammar/statements/select.y"
+#line 2204 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 841:
-#line 2207 "third_party/libpg_query/grammar/statements/select.y"
+#line 2205 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 842:
-#line 2209 "third_party/libpg_query/grammar/statements/select.y"
+#line 2207 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGPositionalReference *n = makeNode(PGPositionalReference);
 					n->position = (yyvsp[(2) - (2)].ival);
@@ -21844,7 +21842,7 @@ YYLTYPE yylloc;
     break;
 
   case 843:
-#line 2216 "third_party/libpg_query/grammar/statements/select.y"
+#line 2214 "third_party/libpg_query/grammar/statements/select.y"
     {
 					if ((yyvsp[(2) - (2)].list))
 					{
@@ -21859,7 +21857,7 @@ YYLTYPE yylloc;
     break;
 
   case 844:
-#line 2228 "third_party/libpg_query/grammar/statements/select.y"
+#line 2226 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGParamRef *p = makeNode(PGParamRef);
 					p->number = (yyvsp[(1) - (2)].ival);
@@ -21877,7 +21875,7 @@ YYLTYPE yylloc;
     break;
 
   case 845:
-#line 2243 "third_party/libpg_query/grammar/statements/select.y"
+#line 2241 "third_party/libpg_query/grammar/statements/select.y"
     {
 					if ((yyvsp[(4) - (4)].list))
 					{
@@ -21892,12 +21890,12 @@ YYLTYPE yylloc;
     break;
 
   case 846:
-#line 2255 "third_party/libpg_query/grammar/statements/select.y"
+#line 2253 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 847:
-#line 2257 "third_party/libpg_query/grammar/statements/select.y"
+#line 2255 "third_party/libpg_query/grammar/statements/select.y"
     {
 					if ((yyvsp[(2) - (2)].list)) {
 						PGAIndirection *n = makeNode(PGAIndirection);
@@ -21912,7 +21910,7 @@ YYLTYPE yylloc;
     break;
 
   case 848:
-#line 2269 "third_party/libpg_query/grammar/statements/select.y"
+#line 2267 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGSubLink *n = makeNode(PGSubLink);
 					n->subLinkType = PG_EXPR_SUBLINK;
@@ -21926,7 +21924,7 @@ YYLTYPE yylloc;
     break;
 
   case 849:
-#line 2280 "third_party/libpg_query/grammar/statements/select.y"
+#line 2278 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/*
 					 * Because the select_with_parens nonterminal is designed
@@ -21953,7 +21951,7 @@ YYLTYPE yylloc;
     break;
 
   case 850:
-#line 2304 "third_party/libpg_query/grammar/statements/select.y"
+#line 2302 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGSubLink *n = makeNode(PGSubLink);
 					n->subLinkType = PG_EXISTS_SUBLINK;
@@ -21967,7 +21965,7 @@ YYLTYPE yylloc;
     break;
 
   case 851:
-#line 2315 "third_party/libpg_query/grammar/statements/select.y"
+#line 2313 "third_party/libpg_query/grammar/statements/select.y"
     {
 				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
 				  g->args = (yyvsp[(3) - (4)].list);
@@ -21977,14 +21975,14 @@ YYLTYPE yylloc;
     break;
 
   case 852:
-#line 2324 "third_party/libpg_query/grammar/statements/select.y"
+#line 2322 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
 				;}
     break;
 
   case 853:
-#line 2328 "third_party/libpg_query/grammar/statements/select.y"
+#line 2326 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
 					n->agg_order = (yyvsp[(4) - (6)].list);
@@ -21994,7 +21992,7 @@ YYLTYPE yylloc;
     break;
 
   case 854:
-#line 2335 "third_party/libpg_query/grammar/statements/select.y"
+#line 2333 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
 					n->func_variadic = true;
@@ -22005,7 +22003,7 @@ YYLTYPE yylloc;
     break;
 
   case 855:
-#line 2343 "third_party/libpg_query/grammar/statements/select.y"
+#line 2341 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
 					n->func_variadic = true;
@@ -22016,7 +22014,7 @@ YYLTYPE yylloc;
     break;
 
   case 856:
-#line 2351 "third_party/libpg_query/grammar/statements/select.y"
+#line 2349 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
 					n->agg_order = (yyvsp[(5) - (7)].list);
@@ -22030,7 +22028,7 @@ YYLTYPE yylloc;
     break;
 
   case 857:
-#line 2362 "third_party/libpg_query/grammar/statements/select.y"
+#line 2360 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
 					n->agg_order = (yyvsp[(5) - (7)].list);
@@ -22041,7 +22039,7 @@ YYLTYPE yylloc;
     break;
 
   case 858:
-#line 2370 "third_party/libpg_query/grammar/statements/select.y"
+#line 2368 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/*
 					 * We consider AGGREGATE(*) to invoke a parameterless
@@ -22060,7 +22058,7 @@ YYLTYPE yylloc;
     break;
 
   case 859:
-#line 2398 "third_party/libpg_query/grammar/statements/select.y"
+#line 2396 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
 					/*
@@ -22099,22 +22097,22 @@ YYLTYPE yylloc;
     break;
 
   case 860:
-#line 2434 "third_party/libpg_query/grammar/statements/select.y"
+#line 2432 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 861:
-#line 2444 "third_party/libpg_query/grammar/statements/select.y"
+#line 2442 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 862:
-#line 2445 "third_party/libpg_query/grammar/statements/select.y"
+#line 2443 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 863:
-#line 2453 "third_party/libpg_query/grammar/statements/select.y"
+#line 2451 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
 											   list_make1((yyvsp[(4) - (5)].node)),
@@ -22123,129 +22121,129 @@ YYLTYPE yylloc;
     break;
 
   case 864:
-#line 2459 "third_party/libpg_query/grammar/statements/select.y"
+#line 2457 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 865:
-#line 2463 "third_party/libpg_query/grammar/statements/select.y"
+#line 2461 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 866:
-#line 2467 "third_party/libpg_query/grammar/statements/select.y"
+#line 2465 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
 				;}
     break;
 
   case 867:
-#line 2471 "third_party/libpg_query/grammar/statements/select.y"
+#line 2469 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 868:
-#line 2475 "third_party/libpg_query/grammar/statements/select.y"
+#line 2473 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
 				;}
     break;
 
   case 869:
-#line 2479 "third_party/libpg_query/grammar/statements/select.y"
+#line 2477 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 870:
-#line 2483 "third_party/libpg_query/grammar/statements/select.y"
+#line 2481 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
 				;}
     break;
 
   case 871:
-#line 2487 "third_party/libpg_query/grammar/statements/select.y"
+#line 2485 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 872:
-#line 2491 "third_party/libpg_query/grammar/statements/select.y"
+#line 2489 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
 				;}
     break;
 
   case 873:
-#line 2495 "third_party/libpg_query/grammar/statements/select.y"
+#line 2493 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 874:
-#line 2499 "third_party/libpg_query/grammar/statements/select.y"
+#line 2497 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 875:
-#line 2503 "third_party/libpg_query/grammar/statements/select.y"
+#line 2501 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 876:
-#line 2507 "third_party/libpg_query/grammar/statements/select.y"
+#line 2505 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 877:
-#line 2511 "third_party/libpg_query/grammar/statements/select.y"
+#line 2509 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 878:
-#line 2515 "third_party/libpg_query/grammar/statements/select.y"
+#line 2513 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 879:
-#line 2519 "third_party/libpg_query/grammar/statements/select.y"
+#line 2517 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
     break;
 
   case 880:
-#line 2521 "third_party/libpg_query/grammar/statements/select.y"
+#line 2519 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
     break;
 
   case 881:
-#line 2523 "third_party/libpg_query/grammar/statements/select.y"
+#line 2521 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
 				;}
     break;
 
   case 882:
-#line 2527 "third_party/libpg_query/grammar/statements/select.y"
+#line 2525 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* overlay(A PLACING B FROM C FOR D) is converted to
 					 * overlay(A, B, C, D)
@@ -22257,7 +22255,7 @@ YYLTYPE yylloc;
     break;
 
   case 883:
-#line 2536 "third_party/libpg_query/grammar/statements/select.y"
+#line 2534 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* position(A in B) is converted to position(B, A) */
 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
@@ -22265,7 +22263,7 @@ YYLTYPE yylloc;
     break;
 
   case 884:
-#line 2541 "third_party/libpg_query/grammar/statements/select.y"
+#line 2539 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* substring(A from B for C) is converted to
 					 * substring(A, B, C) - thomas 2000-11-28
@@ -22275,7 +22273,7 @@ YYLTYPE yylloc;
     break;
 
   case 885:
-#line 2548 "third_party/libpg_query/grammar/statements/select.y"
+#line 2546 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* TREAT(expr AS target) converts expr of a particular type to target,
 					 * which is defined to be a subtype of the original expression.
@@ -22293,7 +22291,7 @@ YYLTYPE yylloc;
     break;
 
   case 886:
-#line 2563 "third_party/libpg_query/grammar/statements/select.y"
+#line 2561 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* various trim expressions are defined in SQL
 					 * - thomas 1997-07-19
@@ -22303,35 +22301,35 @@ YYLTYPE yylloc;
     break;
 
   case 887:
-#line 2570 "third_party/libpg_query/grammar/statements/select.y"
+#line 2568 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
 				;}
     break;
 
   case 888:
-#line 2574 "third_party/libpg_query/grammar/statements/select.y"
+#line 2572 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
 				;}
     break;
 
   case 889:
-#line 2578 "third_party/libpg_query/grammar/statements/select.y"
+#line 2576 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
 				;}
     break;
 
   case 890:
-#line 2582 "third_party/libpg_query/grammar/statements/select.y"
+#line 2580 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
 				;}
     break;
 
   case 891:
-#line 2586 "third_party/libpg_query/grammar/statements/select.y"
+#line 2584 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
 					c->args = (yyvsp[(3) - (4)].list);
@@ -22341,57 +22339,57 @@ YYLTYPE yylloc;
     break;
 
   case 892:
-#line 2599 "third_party/libpg_query/grammar/statements/select.y"
+#line 2597 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
     break;
 
   case 893:
-#line 2600 "third_party/libpg_query/grammar/statements/select.y"
+#line 2598 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 894:
-#line 2604 "third_party/libpg_query/grammar/statements/select.y"
+#line 2602 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
     break;
 
   case 895:
-#line 2605 "third_party/libpg_query/grammar/statements/select.y"
+#line 2603 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = NULL; ;}
     break;
 
   case 896:
-#line 2609 "third_party/libpg_query/grammar/statements/select.y"
+#line 2607 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.boolean) = true; ;}
     break;
 
   case 897:
-#line 2610 "third_party/libpg_query/grammar/statements/select.y"
+#line 2608 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.boolean) = false; ;}
     break;
 
   case 898:
-#line 2617 "third_party/libpg_query/grammar/statements/select.y"
+#line 2615 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 899:
-#line 2618 "third_party/libpg_query/grammar/statements/select.y"
+#line 2616 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 900:
-#line 2622 "third_party/libpg_query/grammar/statements/select.y"
+#line 2620 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
     break;
 
   case 901:
-#line 2624 "third_party/libpg_query/grammar/statements/select.y"
+#line 2622 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
     break;
 
   case 902:
-#line 2629 "third_party/libpg_query/grammar/statements/select.y"
+#line 2627 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
 					n->name = (yyvsp[(1) - (3)].str);
@@ -22400,12 +22398,12 @@ YYLTYPE yylloc;
     break;
 
   case 903:
-#line 2637 "third_party/libpg_query/grammar/statements/select.y"
+#line 2635 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
     break;
 
   case 904:
-#line 2639 "third_party/libpg_query/grammar/statements/select.y"
+#line 2637 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = makeNode(PGWindowDef);
 					n->name = (yyvsp[(2) - (2)].str);
@@ -22421,12 +22419,12 @@ YYLTYPE yylloc;
     break;
 
   case 905:
-#line 2652 "third_party/libpg_query/grammar/statements/select.y"
+#line 2650 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.windef) = NULL; ;}
     break;
 
   case 906:
-#line 2657 "third_party/libpg_query/grammar/statements/select.y"
+#line 2655 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = makeNode(PGWindowDef);
 					n->name = NULL;
@@ -22443,27 +22441,27 @@ YYLTYPE yylloc;
     break;
 
   case 907:
-#line 2682 "third_party/libpg_query/grammar/statements/select.y"
+#line 2680 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 908:
-#line 2683 "third_party/libpg_query/grammar/statements/select.y"
+#line 2681 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = NULL; ;}
     break;
 
   case 909:
-#line 2686 "third_party/libpg_query/grammar/statements/select.y"
+#line 2684 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 910:
-#line 2687 "third_party/libpg_query/grammar/statements/select.y"
+#line 2685 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 911:
-#line 2699 "third_party/libpg_query/grammar/statements/select.y"
+#line 2697 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
@@ -22472,7 +22470,7 @@ YYLTYPE yylloc;
     break;
 
   case 912:
-#line 2705 "third_party/libpg_query/grammar/statements/select.y"
+#line 2703 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
@@ -22481,7 +22479,7 @@ YYLTYPE yylloc;
     break;
 
   case 913:
-#line 2711 "third_party/libpg_query/grammar/statements/select.y"
+#line 2709 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = makeNode(PGWindowDef);
 					n->frameOptions = FRAMEOPTION_DEFAULTS;
@@ -22492,7 +22490,7 @@ YYLTYPE yylloc;
     break;
 
   case 914:
-#line 2721 "third_party/libpg_query/grammar/statements/select.y"
+#line 2719 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
 					/* reject invalid cases */
@@ -22512,7 +22510,7 @@ YYLTYPE yylloc;
     break;
 
   case 915:
-#line 2738 "third_party/libpg_query/grammar/statements/select.y"
+#line 2736 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
 					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
@@ -22552,7 +22550,7 @@ YYLTYPE yylloc;
     break;
 
   case 916:
-#line 2783 "third_party/libpg_query/grammar/statements/select.y"
+#line 2781 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = makeNode(PGWindowDef);
 					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
@@ -22563,7 +22561,7 @@ YYLTYPE yylloc;
     break;
 
   case 917:
-#line 2791 "third_party/libpg_query/grammar/statements/select.y"
+#line 2789 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = makeNode(PGWindowDef);
 					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
@@ -22574,7 +22572,7 @@ YYLTYPE yylloc;
     break;
 
   case 918:
-#line 2799 "third_party/libpg_query/grammar/statements/select.y"
+#line 2797 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = makeNode(PGWindowDef);
 					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
@@ -22585,7 +22583,7 @@ YYLTYPE yylloc;
     break;
 
   case 919:
-#line 2807 "third_party/libpg_query/grammar/statements/select.y"
+#line 2805 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = makeNode(PGWindowDef);
 					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
@@ -22596,7 +22594,7 @@ YYLTYPE yylloc;
     break;
 
   case 920:
-#line 2815 "third_party/libpg_query/grammar/statements/select.y"
+#line 2813 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGWindowDef *n = makeNode(PGWindowDef);
 					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
@@ -22607,27 +22605,27 @@ YYLTYPE yylloc;
     break;
 
   case 921:
-#line 2835 "third_party/libpg_query/grammar/statements/select.y"
+#line 2833 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 922:
-#line 2836 "third_party/libpg_query/grammar/statements/select.y"
+#line 2834 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 923:
-#line 2839 "third_party/libpg_query/grammar/statements/select.y"
+#line 2837 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(1) - (1)].list);;}
     break;
 
   case 924:
-#line 2840 "third_party/libpg_query/grammar/statements/select.y"
+#line 2838 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
     break;
 
   case 925:
-#line 2844 "third_party/libpg_query/grammar/statements/select.y"
+#line 2842 "third_party/libpg_query/grammar/statements/select.y"
     {
 		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
 		na->name = (yyvsp[(1) - (3)].str);
@@ -22639,221 +22637,221 @@ YYLTYPE yylloc;
     break;
 
   case 926:
-#line 2854 "third_party/libpg_query/grammar/statements/select.y"
+#line 2852 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 927:
-#line 2855 "third_party/libpg_query/grammar/statements/select.y"
+#line 2853 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 928:
-#line 2857 "third_party/libpg_query/grammar/statements/select.y"
+#line 2855 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
     break;
 
   case 929:
-#line 2858 "third_party/libpg_query/grammar/statements/select.y"
+#line 2856 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
     break;
 
   case 930:
-#line 2859 "third_party/libpg_query/grammar/statements/select.y"
+#line 2857 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
     break;
 
   case 931:
-#line 2862 "third_party/libpg_query/grammar/statements/select.y"
+#line 2860 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 932:
-#line 2863 "third_party/libpg_query/grammar/statements/select.y"
+#line 2861 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
     break;
 
   case 933:
-#line 2866 "third_party/libpg_query/grammar/statements/select.y"
+#line 2864 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "+"; ;}
     break;
 
   case 934:
-#line 2867 "third_party/libpg_query/grammar/statements/select.y"
+#line 2865 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "-"; ;}
     break;
 
   case 935:
-#line 2868 "third_party/libpg_query/grammar/statements/select.y"
+#line 2866 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "*"; ;}
     break;
 
   case 936:
-#line 2869 "third_party/libpg_query/grammar/statements/select.y"
+#line 2867 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "/"; ;}
     break;
 
   case 937:
-#line 2870 "third_party/libpg_query/grammar/statements/select.y"
+#line 2868 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "%"; ;}
     break;
 
   case 938:
-#line 2871 "third_party/libpg_query/grammar/statements/select.y"
+#line 2869 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "^"; ;}
     break;
 
   case 939:
-#line 2872 "third_party/libpg_query/grammar/statements/select.y"
+#line 2870 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "<"; ;}
     break;
 
   case 940:
-#line 2873 "third_party/libpg_query/grammar/statements/select.y"
+#line 2871 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = ">"; ;}
     break;
 
   case 941:
-#line 2874 "third_party/libpg_query/grammar/statements/select.y"
+#line 2872 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "="; ;}
     break;
 
   case 942:
-#line 2875 "third_party/libpg_query/grammar/statements/select.y"
+#line 2873 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "<="; ;}
     break;
 
   case 943:
-#line 2876 "third_party/libpg_query/grammar/statements/select.y"
+#line 2874 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = ">="; ;}
     break;
 
   case 944:
-#line 2877 "third_party/libpg_query/grammar/statements/select.y"
+#line 2875 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.conststr) = "<>"; ;}
     break;
 
   case 945:
-#line 2881 "third_party/libpg_query/grammar/statements/select.y"
+#line 2879 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 946:
-#line 2883 "third_party/libpg_query/grammar/statements/select.y"
+#line 2881 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 947:
-#line 2888 "third_party/libpg_query/grammar/statements/select.y"
+#line 2886 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 948:
-#line 2890 "third_party/libpg_query/grammar/statements/select.y"
+#line 2888 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 949:
-#line 2895 "third_party/libpg_query/grammar/statements/select.y"
+#line 2893 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 950:
-#line 2897 "third_party/libpg_query/grammar/statements/select.y"
+#line 2895 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 951:
-#line 2899 "third_party/libpg_query/grammar/statements/select.y"
+#line 2897 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString("~~")); ;}
     break;
 
   case 952:
-#line 2901 "third_party/libpg_query/grammar/statements/select.y"
+#line 2899 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString("!~~")); ;}
     break;
 
   case 953:
-#line 2903 "third_party/libpg_query/grammar/statements/select.y"
+#line 2901 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString("~~~")); ;}
     break;
 
   case 954:
-#line 2905 "third_party/libpg_query/grammar/statements/select.y"
+#line 2903 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString("!~~~")); ;}
     break;
 
   case 955:
-#line 2907 "third_party/libpg_query/grammar/statements/select.y"
+#line 2905 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString("~~*")); ;}
     break;
 
   case 956:
-#line 2909 "third_party/libpg_query/grammar/statements/select.y"
+#line 2907 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString("!~~*")); ;}
     break;
 
   case 957:
-#line 2923 "third_party/libpg_query/grammar/statements/select.y"
+#line 2921 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 958:
-#line 2925 "third_party/libpg_query/grammar/statements/select.y"
+#line 2923 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 959:
-#line 2929 "third_party/libpg_query/grammar/statements/select.y"
+#line 2927 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
 				;}
     break;
 
   case 960:
-#line 2933 "third_party/libpg_query/grammar/statements/select.y"
+#line 2931 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
 				;}
     break;
 
   case 961:
-#line 2940 "third_party/libpg_query/grammar/statements/select.y"
+#line 2938 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = (yyvsp[(1) - (1)].list);
 				;}
     break;
 
   case 962:
-#line 2944 "third_party/libpg_query/grammar/statements/select.y"
+#line 2942 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = NULL;
 				;}
     break;
 
   case 963:
-#line 2952 "third_party/libpg_query/grammar/statements/select.y"
+#line 2950 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
 				;}
     break;
 
   case 964:
-#line 2956 "third_party/libpg_query/grammar/statements/select.y"
+#line 2954 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
 				;}
     break;
 
   case 965:
-#line 2962 "third_party/libpg_query/grammar/statements/select.y"
+#line 2960 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (yyvsp[(1) - (1)].node);
 				;}
     break;
 
   case 966:
-#line 2966 "third_party/libpg_query/grammar/statements/select.y"
+#line 2964 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
 					na->name = (yyvsp[(1) - (3)].str);
@@ -22865,7 +22863,7 @@ YYLTYPE yylloc;
     break;
 
   case 967:
-#line 2975 "third_party/libpg_query/grammar/statements/select.y"
+#line 2973 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
 					na->name = (yyvsp[(1) - (3)].str);
@@ -22877,115 +22875,115 @@ YYLTYPE yylloc;
     break;
 
   case 968:
-#line 2985 "third_party/libpg_query/grammar/statements/select.y"
+#line 2983 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
     break;
 
   case 969:
-#line 2986 "third_party/libpg_query/grammar/statements/select.y"
+#line 2984 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
     break;
 
   case 970:
-#line 2991 "third_party/libpg_query/grammar/statements/select.y"
+#line 2989 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
 				;}
     break;
 
   case 971:
-#line 2994 "third_party/libpg_query/grammar/statements/select.y"
+#line 2992 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 972:
-#line 3001 "third_party/libpg_query/grammar/statements/select.y"
+#line 2999 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 973:
-#line 3002 "third_party/libpg_query/grammar/statements/select.y"
+#line 3000 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) "year"; ;}
     break;
 
   case 974:
-#line 3003 "third_party/libpg_query/grammar/statements/select.y"
+#line 3001 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) "month"; ;}
     break;
 
   case 975:
-#line 3004 "third_party/libpg_query/grammar/statements/select.y"
+#line 3002 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) "day"; ;}
     break;
 
   case 976:
-#line 3005 "third_party/libpg_query/grammar/statements/select.y"
+#line 3003 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) "hour"; ;}
     break;
 
   case 977:
-#line 3006 "third_party/libpg_query/grammar/statements/select.y"
+#line 3004 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) "minute"; ;}
     break;
 
   case 978:
-#line 3007 "third_party/libpg_query/grammar/statements/select.y"
+#line 3005 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) "second"; ;}
     break;
 
   case 979:
-#line 3008 "third_party/libpg_query/grammar/statements/select.y"
+#line 3006 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) "millisecond"; ;}
     break;
 
   case 980:
-#line 3009 "third_party/libpg_query/grammar/statements/select.y"
+#line 3007 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (char*) "microsecond"; ;}
     break;
 
   case 981:
-#line 3010 "third_party/libpg_query/grammar/statements/select.y"
+#line 3008 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 982:
-#line 3021 "third_party/libpg_query/grammar/statements/select.y"
+#line 3019 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
 				;}
     break;
 
   case 983:
-#line 3025 "third_party/libpg_query/grammar/statements/select.y"
+#line 3023 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
 				;}
     break;
 
   case 984:
-#line 3032 "third_party/libpg_query/grammar/statements/select.y"
+#line 3030 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 985:
-#line 3038 "third_party/libpg_query/grammar/statements/select.y"
+#line 3036 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
     break;
 
   case 986:
-#line 3039 "third_party/libpg_query/grammar/statements/select.y"
+#line 3037 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 987:
-#line 3056 "third_party/libpg_query/grammar/statements/select.y"
+#line 3054 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
 				;}
     break;
 
   case 988:
-#line 3060 "third_party/libpg_query/grammar/statements/select.y"
+#line 3058 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* not legal per SQL99, but might as well allow it */
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
@@ -22993,14 +22991,14 @@ YYLTYPE yylloc;
     break;
 
   case 989:
-#line 3065 "third_party/libpg_query/grammar/statements/select.y"
+#line 3063 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
 				;}
     break;
 
   case 990:
-#line 3069 "third_party/libpg_query/grammar/statements/select.y"
+#line 3067 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/*
 					 * Since there are no cases where this syntax allows
@@ -23018,44 +23016,44 @@ YYLTYPE yylloc;
     break;
 
   case 991:
-#line 3084 "third_party/libpg_query/grammar/statements/select.y"
+#line 3082 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.list) = (yyvsp[(1) - (1)].list);
 				;}
     break;
 
   case 992:
-#line 3088 "third_party/libpg_query/grammar/statements/select.y"
+#line 3086 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 993:
-#line 3092 "third_party/libpg_query/grammar/statements/select.y"
+#line 3090 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 994:
-#line 3095 "third_party/libpg_query/grammar/statements/select.y"
+#line 3093 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 995:
-#line 3098 "third_party/libpg_query/grammar/statements/select.y"
+#line 3096 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
     break;
 
   case 996:
-#line 3099 "third_party/libpg_query/grammar/statements/select.y"
+#line 3097 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 997:
-#line 3100 "third_party/libpg_query/grammar/statements/select.y"
+#line 3098 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 998:
-#line 3104 "third_party/libpg_query/grammar/statements/select.y"
+#line 3102 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGSubLink *n = makeNode(PGSubLink);
 					n->subselect = (yyvsp[(1) - (1)].node);
@@ -23065,12 +23063,12 @@ YYLTYPE yylloc;
     break;
 
   case 999:
-#line 3110 "third_party/libpg_query/grammar/statements/select.y"
+#line 3108 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1000:
-#line 3121 "third_party/libpg_query/grammar/statements/select.y"
+#line 3119 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGCaseExpr *c = makeNode(PGCaseExpr);
 					c->casetype = InvalidOid; /* not analyzed yet */
@@ -23083,17 +23081,17 @@ YYLTYPE yylloc;
     break;
 
   case 1001:
-#line 3134 "third_party/libpg_query/grammar/statements/select.y"
+#line 3132 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1002:
-#line 3135 "third_party/libpg_query/grammar/statements/select.y"
+#line 3133 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1003:
-#line 3140 "third_party/libpg_query/grammar/statements/select.y"
+#line 3138 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGCaseWhen *w = makeNode(PGCaseWhen);
 					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
@@ -23104,48 +23102,48 @@ YYLTYPE yylloc;
     break;
 
   case 1004:
-#line 3150 "third_party/libpg_query/grammar/statements/select.y"
+#line 3148 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1005:
-#line 3151 "third_party/libpg_query/grammar/statements/select.y"
+#line 3149 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = NULL; ;}
     break;
 
   case 1006:
-#line 3154 "third_party/libpg_query/grammar/statements/select.y"
+#line 3152 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1007:
-#line 3155 "third_party/libpg_query/grammar/statements/select.y"
+#line 3153 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = NULL; ;}
     break;
 
   case 1008:
-#line 3159 "third_party/libpg_query/grammar/statements/select.y"
+#line 3157 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
 				;}
     break;
 
   case 1009:
-#line 3163 "third_party/libpg_query/grammar/statements/select.y"
+#line 3161 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
 				;}
     break;
 
   case 1010:
-#line 3170 "third_party/libpg_query/grammar/statements/select.y"
+#line 3168 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
 				;}
     break;
 
   case 1011:
-#line 3174 "third_party/libpg_query/grammar/statements/select.y"
+#line 3172 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGAIndices *ai = makeNode(PGAIndices);
 					ai->is_slice = false;
@@ -23156,7 +23154,7 @@ YYLTYPE yylloc;
     break;
 
   case 1012:
-#line 3182 "third_party/libpg_query/grammar/statements/select.y"
+#line 3180 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGAIndices *ai = makeNode(PGAIndices);
 					ai->is_slice = true;
@@ -23167,57 +23165,57 @@ YYLTYPE yylloc;
     break;
 
   case 1013:
-#line 3192 "third_party/libpg_query/grammar/statements/select.y"
+#line 3190 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1014:
-#line 3193 "third_party/libpg_query/grammar/statements/select.y"
+#line 3191 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.node) = NULL; ;}
     break;
 
   case 1015:
-#line 3197 "third_party/libpg_query/grammar/statements/select.y"
+#line 3195 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1016:
-#line 3198 "third_party/libpg_query/grammar/statements/select.y"
+#line 3196 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1017:
-#line 3202 "third_party/libpg_query/grammar/statements/select.y"
+#line 3200 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 1018:
-#line 3203 "third_party/libpg_query/grammar/statements/select.y"
+#line 3201 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1021:
-#line 3217 "third_party/libpg_query/grammar/statements/select.y"
+#line 3215 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1022:
-#line 3218 "third_party/libpg_query/grammar/statements/select.y"
+#line 3216 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 1023:
-#line 3222 "third_party/libpg_query/grammar/statements/select.y"
+#line 3220 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1024:
-#line 3223 "third_party/libpg_query/grammar/statements/select.y"
+#line 3221 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1025:
-#line 3227 "third_party/libpg_query/grammar/statements/select.y"
+#line 3225 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.target) = makeNode(PGResTarget);
 					(yyval.target)->name = (yyvsp[(3) - (3)].str);
@@ -23228,7 +23226,7 @@ YYLTYPE yylloc;
     break;
 
   case 1026:
-#line 3243 "third_party/libpg_query/grammar/statements/select.y"
+#line 3241 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.target) = makeNode(PGResTarget);
 					(yyval.target)->name = (yyvsp[(2) - (2)].str);
@@ -23239,7 +23237,7 @@ YYLTYPE yylloc;
     break;
 
   case 1027:
-#line 3251 "third_party/libpg_query/grammar/statements/select.y"
+#line 3249 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.target) = makeNode(PGResTarget);
 					(yyval.target)->name = NULL;
@@ -23250,7 +23248,7 @@ YYLTYPE yylloc;
     break;
 
   case 1028:
-#line 3259 "third_party/libpg_query/grammar/statements/select.y"
+#line 3257 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGColumnRef *n = makeNode(PGColumnRef);
 					PGAStar *star = makeNode(PGAStar);
@@ -23268,7 +23266,7 @@ YYLTYPE yylloc;
     break;
 
   case 1029:
-#line 3274 "third_party/libpg_query/grammar/statements/select.y"
+#line 3272 "third_party/libpg_query/grammar/statements/select.y"
     {
 					PGColumnRef *n = makeNode(PGColumnRef);
 					PGAStar *star = makeNode(PGAStar);
@@ -23287,74 +23285,74 @@ YYLTYPE yylloc;
     break;
 
   case 1030:
-#line 3291 "third_party/libpg_query/grammar/statements/select.y"
+#line 3289 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1031:
-#line 3292 "third_party/libpg_query/grammar/statements/select.y"
+#line 3290 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
     break;
 
   case 1032:
-#line 3295 "third_party/libpg_query/grammar/statements/select.y"
+#line 3293 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1033:
-#line 3296 "third_party/libpg_query/grammar/statements/select.y"
+#line 3294 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NULL; ;}
     break;
 
   case 1034:
-#line 3299 "third_party/libpg_query/grammar/statements/select.y"
+#line 3297 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1035:
-#line 3303 "third_party/libpg_query/grammar/statements/select.y"
+#line 3301 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
     break;
 
   case 1036:
-#line 3304 "third_party/libpg_query/grammar/statements/select.y"
+#line 3302 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 1037:
-#line 3307 "third_party/libpg_query/grammar/statements/select.y"
+#line 3305 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1038:
-#line 3308 "third_party/libpg_query/grammar/statements/select.y"
+#line 3306 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 1039:
-#line 3309 "third_party/libpg_query/grammar/statements/select.y"
+#line 3307 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NULL; ;}
     break;
 
   case 1040:
-#line 3319 "third_party/libpg_query/grammar/statements/select.y"
+#line 3317 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
     break;
 
   case 1041:
-#line 3320 "third_party/libpg_query/grammar/statements/select.y"
+#line 3318 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
     break;
 
   case 1042:
-#line 3332 "third_party/libpg_query/grammar/statements/select.y"
+#line 3330 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 1043:
-#line 3336 "third_party/libpg_query/grammar/statements/select.y"
+#line 3334 "third_party/libpg_query/grammar/statements/select.y"
     {
 					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
@@ -23382,32 +23380,32 @@ YYLTYPE yylloc;
     break;
 
   case 1044:
-#line 3363 "third_party/libpg_query/grammar/statements/select.y"
+#line 3361 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1045:
-#line 3365 "third_party/libpg_query/grammar/statements/select.y"
+#line 3363 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1046:
-#line 3369 "third_party/libpg_query/grammar/statements/select.y"
+#line 3367 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1047:
-#line 3371 "third_party/libpg_query/grammar/statements/select.y"
+#line 3369 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1048:
-#line 3382 "third_party/libpg_query/grammar/statements/select.y"
+#line 3380 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1049:
-#line 3385 "third_party/libpg_query/grammar/statements/select.y"
+#line 3383 "third_party/libpg_query/grammar/statements/select.y"
     {
 						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
 											 yyscanner);
@@ -23415,21 +23413,21 @@ YYLTYPE yylloc;
     break;
 
   case 1050:
-#line 3396 "third_party/libpg_query/grammar/statements/select.y"
+#line 3394 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 1051:
-#line 3400 "third_party/libpg_query/grammar/statements/select.y"
+#line 3398 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 1052:
-#line 3404 "third_party/libpg_query/grammar/statements/select.y"
+#line 3402 "third_party/libpg_query/grammar/statements/select.y"
     {
 					if ((yyvsp[(2) - (2)].list))
 					{
@@ -23444,14 +23442,14 @@ YYLTYPE yylloc;
     break;
 
   case 1053:
-#line 3416 "third_party/libpg_query/grammar/statements/select.y"
+#line 3414 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 1054:
-#line 3420 "third_party/libpg_query/grammar/statements/select.y"
+#line 3418 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* This is a bit constant per SQL99:
 					 * Without Feature F511, "BIT data type",
@@ -23463,7 +23461,7 @@ YYLTYPE yylloc;
     break;
 
   case 1055:
-#line 3429 "third_party/libpg_query/grammar/statements/select.y"
+#line 3427 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* generic type 'literal' syntax */
 					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
@@ -23473,7 +23471,7 @@ YYLTYPE yylloc;
     break;
 
   case 1056:
-#line 3436 "third_party/libpg_query/grammar/statements/select.y"
+#line 3434 "third_party/libpg_query/grammar/statements/select.y"
     {
 					/* generic syntax with a type modifier */
 					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
@@ -23514,191 +23512,191 @@ YYLTYPE yylloc;
     break;
 
   case 1057:
-#line 3474 "third_party/libpg_query/grammar/statements/select.y"
+#line 3472 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
 				;}
     break;
 
   case 1058:
-#line 3478 "third_party/libpg_query/grammar/statements/select.y"
+#line 3476 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
 				;}
     break;
 
   case 1059:
-#line 3482 "third_party/libpg_query/grammar/statements/select.y"
+#line 3480 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
 				;}
     break;
 
   case 1060:
-#line 3486 "third_party/libpg_query/grammar/statements/select.y"
+#line 3484 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
 				;}
     break;
 
   case 1061:
-#line 3490 "third_party/libpg_query/grammar/statements/select.y"
+#line 3488 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 1062:
-#line 3494 "third_party/libpg_query/grammar/statements/select.y"
+#line 3492 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
 				;}
     break;
 
   case 1063:
-#line 3498 "third_party/libpg_query/grammar/statements/select.y"
+#line 3496 "third_party/libpg_query/grammar/statements/select.y"
     {
 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
 				;}
     break;
 
   case 1064:
-#line 3503 "third_party/libpg_query/grammar/statements/select.y"
+#line 3501 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1065:
-#line 3504 "third_party/libpg_query/grammar/statements/select.y"
+#line 3502 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1066:
-#line 3520 "third_party/libpg_query/grammar/statements/select.y"
+#line 3518 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1067:
-#line 3521 "third_party/libpg_query/grammar/statements/select.y"
+#line 3519 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1068:
-#line 3522 "third_party/libpg_query/grammar/statements/select.y"
+#line 3520 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1069:
-#line 3525 "third_party/libpg_query/grammar/statements/select.y"
+#line 3523 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1070:
-#line 3526 "third_party/libpg_query/grammar/statements/select.y"
+#line 3524 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1071:
-#line 3532 "third_party/libpg_query/grammar/statements/select.y"
+#line 3530 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1072:
-#line 3533 "third_party/libpg_query/grammar/statements/select.y"
+#line 3531 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1073:
-#line 3534 "third_party/libpg_query/grammar/statements/select.y"
+#line 3532 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1074:
-#line 3537 "third_party/libpg_query/grammar/statements/select.y"
+#line 3535 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1075:
-#line 3538 "third_party/libpg_query/grammar/statements/select.y"
+#line 3536 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1076:
-#line 3539 "third_party/libpg_query/grammar/statements/select.y"
+#line 3537 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1077:
-#line 3542 "third_party/libpg_query/grammar/statements/select.y"
+#line 3540 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1078:
-#line 3543 "third_party/libpg_query/grammar/statements/select.y"
+#line 3541 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1079:
-#line 3544 "third_party/libpg_query/grammar/statements/select.y"
+#line 3542 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1080:
-#line 3547 "third_party/libpg_query/grammar/statements/select.y"
+#line 3545 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1081:
-#line 3548 "third_party/libpg_query/grammar/statements/select.y"
+#line 3546 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 1082:
-#line 3552 "third_party/libpg_query/grammar/statements/select.y"
+#line 3550 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
     break;
 
   case 1083:
-#line 3554 "third_party/libpg_query/grammar/statements/select.y"
+#line 3552 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1084:
-#line 3558 "third_party/libpg_query/grammar/statements/select.y"
+#line 3556 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1085:
-#line 3559 "third_party/libpg_query/grammar/statements/select.y"
+#line 3557 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.list) = NIL; ;}
     break;
 
   case 1087:
-#line 3570 "third_party/libpg_query/grammar/statements/select.y"
+#line 3568 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1088:
-#line 3571 "third_party/libpg_query/grammar/statements/select.y"
+#line 3569 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1089:
-#line 3572 "third_party/libpg_query/grammar/statements/select.y"
+#line 3570 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1090:
-#line 3573 "third_party/libpg_query/grammar/statements/select.y"
+#line 3571 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1091:
-#line 3576 "third_party/libpg_query/grammar/statements/select.y"
+#line 3574 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1092:
-#line 3577 "third_party/libpg_query/grammar/statements/select.y"
+#line 3575 "third_party/libpg_query/grammar/statements/select.y"
     { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
@@ -24888,7 +24886,7 @@ YYLTYPE yylloc;
 
 
 /* Line 1267 of yacc.c.  */
-#line 24892 "third_party/libpg_query/grammar/grammar_out.cpp"
+#line 24890 "third_party/libpg_query/grammar/grammar_out.cpp"
       default: break;
     }
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
