diff --git a/tools/pythonpkg/tests/fast/arrow/test_dataset.py b/tools/pythonpkg/tests/fast/arrow/test_dataset.py
index e91d29c5e159..8c24783b0052 100644
--- a/tools/pythonpkg/tests/fast/arrow/test_dataset.py
+++ b/tools/pythonpkg/tests/fast/arrow/test_dataset.py
@@ -51,4 +51,34 @@ def test_parallel_dataset_register(self,duckdb_cursor):
 
         rel = duckdb_conn.register("dataset",userdata_parquet_dataset)
 
-        assert duckdb_conn.execute("Select count(*) from dataset where first_name = 'Jose' and salary > 134708.82").fetchone()[0] == 12
\ No newline at end of file
+        assert duckdb_conn.execute("Select count(*) from dataset where first_name = 'Jose' and salary > 134708.82").fetchone()[0] == 12
+
+    def test_parallel_dataset_roundtrip(self,duckdb_cursor):
+        if not can_run:
+            return
+
+        duckdb_conn = duckdb.connect()
+        duckdb_conn.execute("PRAGMA threads=4")
+        duckdb_conn.execute("PRAGMA verify_parallelism")
+
+        parquet_filename = os.path.join(os.path.dirname(os.path.realpath(__file__)),'data','userdata1.parquet')
+
+        userdata_parquet_dataset= pyarrow.dataset.dataset([
+            parquet_filename,
+            parquet_filename,
+            parquet_filename,
+        ]
+        , format="parquet")
+
+        rel = duckdb_conn.register("dataset",userdata_parquet_dataset)
+
+        query = duckdb_conn.execute("SELECT * FROM dataset order by id" )
+        record_batch_reader = query.fetch_record_batch(2048)
+
+        arrow_table = record_batch_reader.read_all()
+        # reorder since order of rows isn't deterministic
+        df = userdata_parquet_dataset.to_table().to_pandas().sort_values('id').reset_index(drop=True)
+        # turn it into an arrow table
+        arrow_table_2 = pyarrow.Table.from_pandas(df)
+
+        assert arrow_table.equals(arrow_table_2)
\ No newline at end of file
diff --git a/tools/rpkg/tests/testthat/test_fetch_arrow.R b/tools/rpkg/tests/testthat/test_fetch_arrow.R
index 90ccc3b446cc..f419ea11e2af 100644
--- a/tools/rpkg/tests/testthat/test_fetch_arrow.R
+++ b/tools/rpkg/tests/testthat/test_fetch_arrow.R
@@ -208,7 +208,7 @@ test_that("duckdb_fetch_arrow() record_batch_reader multiple vectors per chunk",
     cur_batch <- record_batch_reader$read_next_batch()
     expect_equal(904,cur_batch$num_rows)
 
-    expect_error(record_batch_reader$read_next_batch())
+    record_batch_reader$read_next_batch()
     
     dbDisconnect(con, shutdown = T)
 })
