{
  "repo": "duckdb/duckdb",
  "pull_number": 2723,
  "instance_id": "duckdb__duckdb-2723",
  "issue_numbers": [
    "2471"
  ],
  "base_commit": "32060df047520f8dd0c7545963da11ace5f48d81",
  "patch": "diff --git a/data/csv/issue2471.csv b/data/csv/issue2471.csv\nnew file mode 100644\nindex 000000000000..d285998d68d6\n--- /dev/null\n+++ b/data/csv/issue2471.csv\n@@ -0,0 +1,2301 @@\n+isin,value\n+XXXXXS0676294696,1\n+XXXXXS1767931121,1\n+XXXXXS2262065233,1\n+XXXXUS68217JAA25,1\n+XXXXUS665772CP21,1\n+XXXXSI0002104196,1\n+XXXXUSY52758AD47,1\n+XXXXUS127055AH48,1\n+XXXXXS1799641045,1\n+XXXXXS0097777253,1\n+XXXXXS1379171140,1\n+XXXXUS45174XAA00,1\n+XXXXXS2282210231,1\n+XXXXUS63743HEU23,1\n+XXXXUS84762LAV71,1\n+XXXXXS1487495316,1\n+XXXXUS87612EBE59,1\n+XXXXFR0013524410,1\n+XXXXUS06406RAD98,1\n+XXXXUS478375AS78,1\n+XXXXUS26444HAE18,1\n+XXXXXS1565064273,1\n+XXXXXS1558078496,1\n+XXXXXS1721386834,1\n+XXXXUS14913Q2P38,1\n+XXXXXS1207683522,1\n+XXXXFR0124665995,1\n+XXXXUS89236THM09,1\n+XXXXUS6325C0DQ11,1\n+XXXXUSG07402DP58,1\n+XXXXXS0308427581,1\n+XXXXXS1599128680,1\n+XXXXUS83001AAC62,1\n+XXXXXS2073593274,1\n+XXXXES0305523005,1\n+XXXXUS606822BS23,1\n+XXXXUS427096AF94,1\n+XXXXES0000012F84,1\n+XXXXUS03762UAD72,1\n+XXXXXS1405770907,1\n+XXXXUS15135UAF66,1\n+XXXXUS69784DAB47,1\n+XXXXXS1577950311,1\n+XXXXUSP6040KAB37,1\n+XXXXXS1711550290,1\n+XXXXUS778296AA10,1\n+XXXXXS2049419398,1\n+XXXXUS606822AD62,1\n+XXXXXS1871087133,1\n+XXXXEU000A19XC51,1\n+XXXXXS1766775628,1\n+XXXXXS2001732010,1\n+XXXXUS50540RAY80,1\n+XXXXUSY7140WAC20,1\n+XXXXUS231021AT37,1\n+XXXXDE000LB2CHW4,1\n+XXXXUSU81522AC57,1\n+XXXXPTCMGTOM0029,1\n+XXXXXS1558083652,1\n+XXXXUS037833DT41,1\n+XXXXUS349553AM97,1\n+XXXXDE0001030278,1\n+XXXXUS084664BV29,1\n+XXXXUS06406FAD50,1\n+XXXXXS2178043530,1\n+XXXXUS931427AC23,1\n+XXXXXS2028846363,1\n+XXXXFR0013420023,1\n+XXXXUS59284BAB45,1\n+XXXXXS2360598630,1\n+XXXXUSP1850NAA92,1\n+XXXXXS1975716595,1\n+XXXXUS760759AN05,1\n+XXXXXS1410482282,1\n+XXXXXS2114852721,1\n+XXXXXS1575992596,1\n+XXXXXS1239401216,1\n+XXXXUS669827DP92,1\n+XXXXUS171340AH58,1\n+XXXXXS1611857795,1\n+XXXXDE000A2LQPF4,1\n+XXXXXS0938722666,1\n+XXXXUS02156LAA98,1\n+XXXXUS03027XBC39,1\n+XXXXXS2203824789,1\n+XXXXUS06738EBN40,1\n+XXXXUS059895AN23,1\n+XXXXDE000A2YNR08,1\n+XXXXUS12189LAT89,1\n+XXXXXS1757394322,1\n+XXXXXS1578203462,1\n+XXXXUS07330MAC10,1\n+XXXXUS15137TAA88,1\n+XXXXXS1496345684,1\n+XXXXXS2077601610,1\n+XXXXXS2071735687,1\n+XXXXXS2055646835,1\n+XXXXXS1489814340,1\n+XXXXXS2189766970,1\n+XXXXXS1382791975,1\n+XXXXXS1835946564,1\n+XXXXXS2238947126,1\n+XXXXUS531229AB89,1\n+XXXXUS12674TAB26,1\n+XXXXXS2228373671,1\n+XXXXXS1751004232,1\n+XXXXUS58733RAE27,1\n+XXXXUS98105FAF18,1\n+XXXXUS404280CC17,1\n+XXXXXS1730863260,1\n+XXXXXS2330932620,1\n+XXXXUS772739AL23,1\n+XXXXUS460690BQ26,1\n+XXXXIT0005142952,1\n+XXXXXS0775914277,1\n+XXXXUS843646AM23,1\n+XXXXUSU05632AL52,1\n+XXXXUS471048BM91,1\n+XXXXXS2278994681,1\n+XXXXUS202795JM30,1\n+XXXXUS984121CJ06,1\n+XXXXXS1788516679,1\n+XXXXXS1590823859,1\n+XXXXUS872287AF41,1\n+XXXXUS529043AD36,1\n+XXXXXS2056490423,1\n+XXXXUS04522KAA43,1\n+XXXXXS1639849204,1\n+XXXXEU000A1G0EM3,1\n+XXXXUS98313RAD89,1\n+XXXXDE000NWB2MC1,1\n+XXXXUS756109AX24,1\n+XXXXXS1308289146,1\n+XXXXUS23636BAS88,1\n+XXXXXS2282094494,1\n+XXXXUS120568BC39,1\n+XXXXUS471048BQ06,1\n+XXXXUS22822VAR24,1\n+XXXXXS0177600920,1\n+XXXXUS98310WAN83,1\n+XXXXUS718286CP01,1\n+XXXXUS084423AV48,1\n+XXXXUSG82016AN96,1\n+XXXXES0457089003,1\n+XXXXDE000A287179,1\n+XXXXUS459058JA24,1\n+XXXXXS2352309681,1\n+XXXXUS46647PCC86,1\n+XXXXXS1629363109,1\n+XXXXXS2312738599,1\n+XXXXUS09659X2G64,1\n+XXXXXS2291336167,1\n+XXXXUSG08820BX29,1\n+XXXXUS68389XBY04,1\n+XXXXUSG2585XAA75,1\n+XXXXUS931142DU48,1\n+XXXXXS1377237869,1\n+XXXXXS1641457277,1\n+XXXXUS06367WJM64,1\n+XXXXXS2194913443,1\n+XXXXXS1827041721,1\n+XXXXXS1318709497,1\n+XXXXUS247361ZT81,1\n+XXXXUS485134BQ27,1\n+XXXXUS12591DAC56,1\n+XXXXEU000A1G0BN7,1\n+XXXXDE000DB7XJB9,1\n+XXXXFR0013359197,1\n+XXXXXS1551932046,1\n+XXXXXS2315827209,1\n+XXXXUS45631XAA72,1\n+XXXXXS2113151059,1\n+XXXXUSG42045AC15,1\n+XXXXFR0013066743,1\n+XXXXUS05553LAA17,1\n+XXXXXS1596778008,1\n+XXXXXS2110832040,1\n+XXXXUS226775AF15,1\n+XXXXUS00213MAS35,1\n+XXXXXS2055089960,1\n+XXXXUS22547AAD37,1\n+XXXXUS91913YAS90,1\n+XXXXFR0013396512,1\n+XXXXUS084670BJ68,1\n+XXXXUS14042RBT77,1\n+XXXXXS0826634874,1\n+XXXXXS2156583259,1\n+XXXXUS92553PAU66,1\n+XXXXUS172967MA69,1\n+XXXXXS1167204699,1\n+XXXXFR0010096826,1\n+XXXXIT0005422032,1\n+XXXXUS369550BD98,1\n+XXXXPTSDRAOM0012,1\n+XXXXUS65158NAB82,1\n+XXXXXS1514149159,1\n+XXXXUS52603BAC19,1\n+XXXXUS500630DJ45,1\n+XXXXXS2070055095,1\n+XXXXUSF2R125CF03,1\n+XXXXXS1843443356,1\n+XXXXXS1698906259,1\n+XXXXUS254687DZ66,1\n+XXXXXS0848436365,1\n+XXXXXS2353018141,1\n+XXXXXS0541453147,1\n+XXXXUS717265AJ16,1\n+XXXXUS12429TAD63,1\n+XXXXXS2002491517,1\n+XXXXUS00774MAK18,1\n+XXXXXS1508782098,1\n+XXXXUS126650DJ69,1\n+XXXXUS20826FAQ90,1\n+XXXXUS63946BAF76,1\n+XXXXXS2055786763,1\n+XXXXUSG8200TAH35,1\n+XXXXDE000A19UNN9,1\n+XXXXXS1171593293,1\n+XXXXXS2192430572,1\n+XXXXUSY708CHAA88,1\n+XXXXXS2051106073,1\n+XXXXXS2286299016,1\n+XXXXXS0148889420,1\n+XXXXXS1881014374,1\n+XXXXUS900123CP36,1\n+XXXXUS87973PAB04,1\n+XXXXXS2090281580,1\n+XXXXUS86787EAT47,1\n+XXXXXS1701884204,1\n+XXXXXS1634368507,1\n+XXXXUS37045XDL73,1\n+XXXXDE0001102481,1\n+XXXXXS1637124741,1\n+XXXXUS74762EAF97,1\n+XXXXFR0013332988,1\n+XXXXUS29736RAQ39,1\n+XXXXDE000NWB0AF3,1\n+XXXXXS0932307100,1\n+XXXXUS50067PAA75,1\n+XXXXUS98212BAL71,1\n+XXXXUS36321PAA84,1\n+XXXXUS459058JC89,1\n+XXXXUS882508BH65,1\n+XXXXXS1150695192,1\n+XXXXXS1717011982,1\n+XXXXUS63938CAE84,1\n+XXXXXS1893631769,1\n+XXXXUS046353AD01,1\n+XXXXUS33939HAA77,1\n+XXXXUS25746UDB26,1\n+XXXXXS1859258383,1\n+XXXXUS74432QBT13,1\n+XXXXUS58933YAY14,1\n+XXXXXS2090807293,1\n+XXXXFR0013144003,1\n+XXXXUS58013MFM10,1\n+XXXXXS1506604088,1\n+XXXXUS911312BL96,1\n+XXXXFR0013479102,1\n+XXXXXS1903442744,1\n+XXXXUS89153VAG41,1\n+XXXXUS225310AN19,1\n+XXXXXS2207648937,1\n+XXXXUS05947KAZ30,1\n+XXXXXS2113121904,1\n+XXXXXS2231715322,1\n+XXXXXS2020670779,1\n+XXXXUS72650RAR30,1\n+XXXXUS98978VAM54,1\n+XXXXXS1953778807,1\n+XXXXUS92343VFE92,1\n+XXXXUS166756AR79,1\n+XXXXUS46592BAA08,1\n+XXXXXS2228387465,1\n+XXXXXS1979287437,1\n+XXXXXS2064648525,1\n+XXXXUS50220PAA12,1\n+XXXXXS2024715794,1\n+XXXXFR0014003RL9,1\n+XXXXUS29413XAD93,1\n+XXXXUS882508BD51,1\n+XXXXUS46650CAA71,1\n+XXXXXS1631415400,1\n+XXXXUS67078AAC71,1\n+XXXXXS1048428442,1\n+XXXXUS83368JKG49,1\n+XXXXUS05958AAJ79,1\n+XXXXUS92340LAE92,1\n+XXXXUS320517AD78,1\n+XXXXXS1056232322,1\n+XXXXUSY4836TBT70,1\n+XXXXUS17308CC539,1\n+XXXXXS1649890891,1\n+XXXXPTOTEXOE0024,1\n+XXXXXS2016010881,1\n+XXXXUS38143U8H71,1\n+XXXXUS45866FAN42,1\n+XXXXXS1888230254,1\n+XXXXUS26442CBC73,1\n+XXXXUSH42097CL90,1\n+XXXXUS69375MAA18,1\n+XXXXUS85172FAN96,1\n+XXXXFR00140049N1,1\n+XXXXUS92340LAF67,1\n+XXXXUS845743BL61,1\n+XXXXUS63254ABC18,1\n+XXXXUS25468PCT12,1\n+XXXXXS0926785808,1\n+XXXXXS2276735326,1\n+XXXXUS71654QCD25,1\n+XXXXXS1979259220,1\n+XXXXUS38141GXK56,1\n+XXXXUS713448FB91,1\n+XXXXUS136440AL88,1\n+XXXXXS0496975110,1\n+XXXXXS1548444816,1\n+XXXXUS161175BY99,1\n+XXXXUS36962G6S82,1\n+XXXXUS50076QAZ90,1\n+XXXXXS1877512258,1\n+XXXXXS2068241400,1\n+XXXXFR0013254273,1\n+XXXXXS1190974011,1\n+XXXXUS575767AK42,1\n+XXXXXS2227050379,1\n+XXXXXS2278566299,1\n+XXXXUS502431AF64,1\n+XXXXUS26444HAH49,1\n+XXXXXS1405763019,1\n+XXXXUS02209SBM44,1\n+XXXXUS88165FAF99,1\n+XXXXDE000A11QTK7,1\n+XXXXXS2356227343,1\n+XXXXXS1642590480,1\n+XXXXUS767744AA37,1\n+XXXXXS2344385815,1\n+XXXXXS2125913942,1\n+XXXXUS651229AX48,1\n+XXXXUS30161MAR43,1\n+XXXXDE000DKB0440,1\n+XXXXXS1972557737,1\n+XXXXUS460599AC74,1\n+XXXXUS78454LAL45,1\n+XXXXUS693070AD69,1\n+XXXXUS36966TJA16,1\n+XXXXXS1823351348,1\n+XXXXFR0013517190,1\n+XXXXUS69121KAC80,1\n+XXXXXS1892127470,1\n+XXXXUS60687YAH27,1\n+XXXXUS836205BA15,1\n+XXXXXS1860216909,1\n+XXXXXS1584041252,1\n+XXXXUS025816BF52,1\n+XXXXXS1550144072,1\n+XXXXUSY00284AW20,1\n+XXXXUS82460CAL81,1\n+XXXXIT0005246340,1\n+XXXXUS655664AR15,1\n+XXXXXS1944412664,1\n+XXXXNL0000116127,1\n+XXXXXS1910118055,1\n+XXXXUS59217GEH83,1\n+XXXXUSJ54675AB95,1\n+XXXXXS2364423652,1\n+XXXXUS00652MAG78,1\n+XXXXUS610202BR34,1\n+XXXXUS225313AN57,1\n+XXXXUS097023CX16,1\n+XXXXUSY6142NAE86,1\n+XXXXUS69370RAL15,1\n+XXXXUS17252MAL46,1\n+XXXXUS61747WAL37,1\n+XXXXXS1596739364,1\n+XXXXXS2055727916,1\n+XXXXUS984848AK72,1\n+XXXXXS1156024116,1\n+XXXXBE0000321308,1\n+XXXXXS1979280853,1\n+XXXXAT0000A22H40,1\n+XXXXUS166764BT68,1\n+XXXXXS1636469865,1\n+XXXXXS1111084718,1\n+XXXXBE0002292614,1\n+XXXXUS14149YBF43,1\n+XXXXUS913017BP39,1\n+XXXXUS70452AAA16,1\n+XXXXXS2166185053,1\n+XXXXFR00140005R4,1\n+XXXXUS05348EAV11,1\n+XXXXUS80386WAA36,1\n+XXXXUSU2339CDW56,1\n+XXXXUS896818AS01,1\n+XXXXXS1980828997,1\n+XXXXXS1488480333,1\n+XXXXXS1760129608,1\n+XXXXUS74727PBE07,1\n+XXXXXS1130913558,1\n+XXXXDE000A289RC9,1\n+XXXXXS1686846061,1\n+XXXXDE000A3H2Y16,1\n+XXXXUS459200JZ55,1\n+XXXXXS2353272284,1\n+XXXXXS1523966197,1\n+XXXXXS1574068844,1\n+XXXXXS2231563805,1\n+XXXXUS21039CAB00,1\n+XXXXXS1309529680,1\n+XXXXUS67077MAU27,1\n+XXXXXS0419346977,1\n+XXXXXS1288903278,1\n+XXXXUS171232AQ41,1\n+XXXXXS2284240137,1\n+XXXXXS2177013252,1\n+XXXXUS448579AF96,1\n+XXXXUSF0266LAC03,1\n+XXXXUS03746AAA88,1\n+XXXXFR0014002GI0,1\n+XXXXXS1933874387,1\n+XXXXUS278642AS20,1\n+XXXXUS26442CAQ78,1\n+XXXXUS06051GGC78,1\n+XXXXXS1807201899,1\n+XXXXUSP3699PGJ05,1\n+XXXXUS172967HD63,1\n+XXXXUS75973QAA58,1\n+XXXXXS2049149821,1\n+XXXXFR0011686401,1\n+XXXXXS2265369657,1\n+XXXXUS383909AF54,1\n+XXXXUSY72570AN72,1\n+XXXXXS1914937021,1\n+XXXXUS649840CQ63,1\n+XXXXUS70109HAK14,1\n+XXXXUS00774MAM73,1\n+XXXXUS677415CF62,1\n+XXXXXS2341269970,1\n+XXXXUSP98047AC08,1\n+XXXXBE0002629104,1\n+XXXXUS124857AP86,1\n+XXXXUSP79171AF45,1\n+XXXXUS097023BL86,1\n+XXXXFR0013393899,1\n+XXXXUS65409QBK76,1\n+XXXXXS0274270817,1\n+XXXXUS41283LAQ86,1\n+XXXXUS00206RBA95,1\n+XXXXUS591539AA97,1\n+XXXXXS2205083749,1\n+XXXXUS29359NAA37,1\n+XXXXUS709599BH60,1\n+XXXXUS18539UAD72,1\n+XXXXGB0030880693,1\n+XXXXXS0277265269,1\n+XXXXUS59562EAH80,1\n+XXXXUS024836AE87,1\n+XXXXXS1627940601,1\n+XXXXXS1492680811,1\n+XXXXXS1403264291,1\n+XXXXUS316773CH12,1\n+XXXXDE000A13SWG1,1\n+XXXXUS031162BE93,1\n+XXXXXS2305736543,1\n+XXXXUSQ2704MAA64,1\n+XXXXIT0005151854,1\n+XXXXXS2177575177,1\n+XXXXXS1004042575,1\n+XXXXUS437076AV48,1\n+XXXXUS78413KAB89,1\n+XXXXUS40049JAV98,1\n+XXXXUS907818FB91,1\n+XXXXUS49427RAL69,1\n+XXXXUS159864AG27,1\n+XXXXUS530307AA53,1\n+XXXXUSJ54675AA13,1\n+XXXXUS717081EZ22,1\n+XXXXUS695127AD26,1\n+XXXXUS747525BJ18,1\n+XXXXXS2080321198,1\n+XXXXUS00130HCB96,1\n+XXXXXS2000538343,1\n+XXXXIT0005188831,1\n+XXXXDE000A2DASM5,1\n+XXXXUS12597YAA73,1\n+XXXXUS27409LAC72,1\n+XXXXUS913017DD80,1\n+XXXXUS96949LAA35,1\n+XXXXUS713448EQ79,1\n+XXXXDE0001053569,1\n+XXXXUS207597EN17,1\n+XXXXUS68327LAC00,1\n+XXXXXS1564337993,1\n+XXXXUS30161NAU54,1\n+XXXXDE000DL19U31,1\n+XXXXXS2250155467,1\n+XXXXXS1240177342,1\n+XXXXXS1622394143,1\n+XXXXDE000A19S4V6,1\n+XXXXUS845743BP75,1\n+XXXXUS69351UAW36,1\n+XXXXXS1805476659,1\n+XXXXUS76117WAC38,1\n+XXXXXS2161831776,1\n+XXXXUS12642KAB08,1\n+XXXXUS343412AC69,1\n+XXXXCH0595205532,1\n+XXXXUS00182FBC95,1\n+XXXXXS1496770626,1\n+XXXXXS1196405556,1\n+XXXXXS1859543073,1\n+XXXXUS785592AU04,1\n+XXXXXS2188805688,1\n+XXXXXS1457499645,1\n+XXXXXS1752476538,1\n+XXXXXS1648263926,1\n+XXXXUS15189TAR86,1\n+XXXXXS1808482746,1\n+XXXXXS2100663579,1\n+XXXXUS82481LAD10,1\n+XXXXUS205768AS39,1\n+XXXXUS570535AX23,1\n+XXXXXS2035564629,1\n+XXXXUS205768AT12,1\n+XXXXUS84265VAF22,1\n+XXXXUSF2893TAM83,1\n+XXXXBE6320936287,1\n+XXXXUSV3855LAA71,1\n+XXXXUS20467BAB53,1\n+XXXXUS842587DF14,1\n+XXXXXS1657420441,1\n+XXXXUS053332AZ56,1\n+XXXXUS28228PAA93,1\n+XXXXUS92840VAF94,1\n+XXXXUS459058GQ03,1\n+XXXXUS00914AAH59,1\n+XXXXXS1692177857,1\n+XXXXXS1383389670,1\n+XXXXUS822582AT91,1\n+XXXXUS291011BP85,1\n+XXXXUS71568QAN79,1\n+XXXXXS0169950531,1\n+XXXXXS1408351887,1\n+XXXXFR0012599892,1\n+XXXXUS17186HAC60,1\n+XXXXUS126408HL09,1\n+XXXXUS009158AV87,1\n+XXXXUS04685A2R10,1\n+XXXXUS74348GCB41,1\n+XXXXXS0874864860,1\n+XXXXUS96812WAA36,1\n+XXXXXS1490726590,1\n+XXXXUS67077MAL28,1\n+XXXXXS1687330032,1\n+XXXXGB00B39R3707,1\n+XXXXUS69370RAA59,1\n+XXXXUSU52799BE93,1\n+XXXXUS928881AA95,1\n+XXXXXS2329602135,1\n+XXXXUS880451AW92,1\n+XXXXXS1247796185,1\n+XXXXUS717081EN91,1\n+XXXXUSP37146AA81,1\n+XXXXUS459200JC60,1\n+XXXXFR0013141066,1\n+XXXXUS48126DT415,1\n+XXXXUS50540RAT95,1\n+XXXXUS797440BZ64,1\n+XXXXXS2002019060,1\n+XXXXUS38141GXS82,1\n+XXXXUSH7220NAJ93,1\n+XXXXXS2284250441,1\n+XXXXUS585270AC58,1\n+XXXXUS156431AN85,1\n+XXXXXS1619838292,1\n+XXXXXS1023039545,1\n+XXXXDE000A1KRJQ6,1\n+XXXXUSU14178EB60,1\n+XXXXUS12505JAA16,1\n+XXXXUS341081FD42,1\n+XXXXXS1165128585,1\n+XXXXUS370425RZ53,1\n+XXXXXS2357352702,1\n+XXXXUS00774MAE57,1\n+XXXXCND100042M14,1\n+XXXXUS269246BS28,1\n+XXXXUS29273VAM28,1\n+XXXXXS1909057306,1\n+XXXXUS969457BY52,1\n+XXXXXS2056730323,1\n+XXXXUS86959LAG86,1\n+XXXXUS61744YAP34,1\n+XXXXUS44701QBF81,1\n+XXXXUS28470RAK86,1\n+XXXXUS126650DN71,1\n+XXXXXS2193734733,1\n+XXXXUS131193AE46,1\n+XXXXUS637432NT82,1\n+XXXXXS2242418957,1\n+XXXXUS00138CAS70,1\n+XXXXXS2341882913,1\n+XXXXUS48128BAB71,1\n+XXXXXS1426039696,1\n+XXXXUSU5462TAD55,1\n+XXXXFR0013183563,1\n+XXXXXS1457608286,1\n+XXXXUS126650CW89,1\n+XXXXUS68621CAA71,1\n+XXXXXS1840618059,1\n+XXXXXS1955187692,1\n+XXXXXS1973750869,1\n+XXXXXS2126094049,1\n+XXXXUS904678AU32,1\n+XXXXEU000A287074,1\n+XXXXXS1055037920,1\n+XXXXXS1218289103,1\n+XXXXUS17275RBE18,1\n+XXXXXS2337670694,1\n+XXXXUS67059NAB47,1\n+XXXXUS405024AA84,1\n+XXXXUS91911KAN28,1\n+XXXXUS826200AD92,1\n+XXXXFR0013505625,1\n+XXXXUS94974BGP94,1\n+XXXXUS38937LAB71,1\n+XXXXUS00254ENB47,1\n+XXXXXS0835676353,1\n+XXXXUS84605LAC00,1\n+XXXXUSF1R15XK854,1\n+XXXXUS60687YAP43,1\n+XXXXCH0271428333,1\n+XXXXDE000A2G8VU3,1\n+XXXXXS0785710046,1\n+XXXXUS91159HHP82,1\n+XXXXXS0146173371,1\n+XXXXUS878091BF35,1\n+XXXXUS15119CAA71,1\n+XXXXXS0207920942,1\n+XXXXXS2153597518,1\n+XXXXUS87305QCB59,1\n+XXXXUSG2176WAA48,1\n+XXXXUS50066AAG85,1\n+XXXXIT0005175242,1\n+XXXXXS1050461034,1\n+XXXXXS2026202643,1\n+XXXXUS651639AN69,1\n+XXXXUS78442PGD24,1\n+XXXXUS20338QAB95,1\n+XXXXXS1713462668,1\n+XXXXXS2081500907,1\n+XXXXUS538034AQ25,1\n+XXXXXS1735583095,1\n+XXXXUS053773BG13,1\n+XXXXXS1536786939,1\n+XXXXUS294429AM71,1\n+XXXXXS1333667506,1\n+XXXXXS0224427160,1\n+XXXXUS780097BD21,1\n+XXXXDE0001030575,1\n+XXXXXS1825455030,1\n+XXXXXS1677902162,1\n+XXXXEU000A3JZQG7,1\n+XXXXXS2133246327,1\n+XXXXXS1997071243,1\n+XXXXFR0014001IO6,1\n+XXXXXS1400169931,1\n+XXXXXS2289133915,1\n+XXXXXS1422334448,1\n+XXXXUS459506AK78,1\n+XXXXUS586054AC25,1\n+XXXXXS1713474325,1\n+XXXXUS126117AU49,1\n+XXXXUS118230AP60,1\n+XXXXUS76025LAA26,1\n+XXXXXS2279870732,1\n+XXXXUS74456QBW50,1\n+XXXXUS931142EB57,1\n+XXXXXS2073787470,1\n+XXXXXS0278326441,1\n+XXXXFR0013365491,1\n+XXXXXS2207192605,1\n+XXXXXS2357812556,1\n+XXXXUS252131AH00,1\n+XXXXUS893830BJ77,1\n+XXXXXS2156506854,1\n+XXXXXS2251170390,1\n+XXXXUSP5880UAB63,1\n+XXXXXS1572363858,1\n+XXXXUS573334AH20,1\n+XXXXXS1854532865,1\n+XXXXUS64952WEB54,1\n+XXXXXS2075811948,1\n+XXXXUS980883AC68,1\n+XXXXUS459058GF48,1\n+XXXXUS6325C1CR85,1\n+XXXXUS06051GHC69,1\n+XXXXXS2162033729,1\n+XXXXUS63254AAZ12,1\n+XXXXUS89378TAC71,1\n+XXXXUS020002AQ48,1\n+XXXXXS1807174559,1\n+XXXXFR0011417591,1\n+XXXXUS500769CH58,1\n+XXXXXS1790931114,1\n+XXXXUS90015NAB91,1\n+XXXXUS15189WAH34,1\n+XXXXUS00287YBC21,1\n+XXXXXS2231259305,1\n+XXXXUS674599CH65,1\n+XXXXXS2001168447,1\n+XXXXUS778296AF07,1\n+XXXXUS759916AB50,1\n+XXXXIL0011736738,1\n+XXXXUS55354GAF72,1\n+XXXXXS2051471105,1\n+XXXXXS1815424202,1\n+XXXXUS36962GW752,1\n+XXXXXS1849464323,1\n+XXXXUS69371RQ748,1\n+XXXXUS30036FAA93,1\n+XXXXFR0014001LQ5,1\n+XXXXXS1850111789,1\n+XXXXXS2057070182,1\n+XXXXUS50066CAJ80,1\n+XXXXUS233851DY79,1\n+XXXXGB0032452392,1\n+XXXXUS049164BH82,1\n+XXXXUS74005PBB94,1\n+XXXXFR0013409612,1\n+XXXXUS74445PAB85,1\n+XXXXUS46513JXN61,1\n+XXXXUS548661CP07,1\n+XXXXFR0011398767,1\n+XXXXUS06051GGL77,1\n+XXXXUS75884RAV50,1\n+XXXXFR0011337880,1\n+XXXXUS980236AQ66,1\n+XXXXXS2154336254,1\n+XXXXUS345397XL24,1\n+XXXXUS75884RAY99,1\n+XXXXUS61761JZN26,1\n+XXXXUS713448BY31,1\n+XXXXUS494550BM77,1\n+XXXXXS2116222022,1\n+XXXXUS62944TAE55,1\n+XXXXUS404280BZ11,1\n+XXXXUS073730AE32,1\n+XXXXUS90401CAC38,1\n+XXXXUS94974BFN55,1\n+XXXXUS198280AH20,1\n+XXXXFR0013519071,1\n+XXXXUSP989MJBR17,1\n+XXXXXS2345050251,1\n+XXXXXS2029997942,1\n+XXXXUSY7138AAB62,1\n+XXXXUS780097BQ34,1\n+XXXXXS1839105662,1\n+XXXXUS676167CA51,1\n+XXXXUS900123AW05,1\n+XXXXUS38381CAC64,1\n+XXXXUSP3772NHK11,1\n+XXXXFR0013455854,1\n+XXXXXS2196322155,1\n+XXXXUS26884ABM45,1\n+XXXXXS2049827160,1\n+XXXXUS65526QAA85,1\n+XXXXUS131347CK09,1\n+XXXXUSP01014AA03,1\n+XXXXXS1756367147,1\n+XXXXBE0000344532,1\n+XXXXUS718172BM02,1\n+XXXXUS075887BW84,1\n+XXXXUS90520EAK73,1\n+XXXXXS1605393054,1\n+XXXXUS82452TAA51,1\n+XXXXXS1500338618,1\n+XXXXUS023608AG75,1\n+XXXXUS023135BJ40,1\n+XXXXUS298785HR03,1\n+XXXXXS2078535346,1\n+XXXXUSU8302WAG97,1\n+XXXXUS67077MAE84,1\n+XXXXXS2334361354,1\n+XXXXXS2082818951,1\n+XXXXES0205032040,1\n+XXXXXS1959337236,1\n+XXXXUS89236TCQ67,1\n+XXXXXS1505674918,1\n+XXXXUS76029LAA89,1\n+XXXXDE000A3H3J14,1\n+XXXXXS1987097430,1\n+XXXXUS060505FQ25,1\n+XXXXUS589331AQ02,1\n+XXXXUSP79171AE79,1\n+XXXXUS494550BN50,1\n+XXXXEU000A1U9803,1\n+XXXXUS64110DAF15,1\n+XXXXFR0011339753,1\n+XXXXUS251526CD98,1\n+XXXXUS670346AP04,1\n+XXXXUS608328BF64,1\n+XXXXUS58933YAT29,1\n+XXXXXS2183820617,1\n+XXXXFR0013310018,1\n+XXXXXS0821168423,1\n+XXXXUSG85158AA43,1\n+XXXXXS2231588547,1\n+XXXXUS48305QAF00,1\n+XXXXUS786514BU22,1\n+XXXXUS55336VAM28,1\n+XXXXUS303901BB79,1\n+XXXXUSG2763RAA44,1\n+XXXXUS86564UAA88,1\n+XXXXXS2230884657,1\n+XXXXXS1784067529,1\n+XXXXUSV04008AA29,1\n+XXXXUS428102AC14,1\n+XXXXXS1791326728,1\n+XXXXXS0186855150,1\n+XXXXXS2055625839,1\n+XXXXUS378272AX69,1\n+XXXXXS2342227837,1\n+XXXXXS2033327854,1\n+XXXXXS0969368934,1\n+XXXXUSU5462TAF04,1\n+XXXXXS1891723030,1\n+XXXXBE0002280494,1\n+XXXXUS110122DF26,1\n+XXXXUS78355HKP37,1\n+XXXXUS47233JDS42,1\n+XXXXXS1452410571,1\n+XXXXUS05574LFY92,1\n+XXXXUS20030NCS80,1\n+XXXXXS1266660635,1\n+XXXXUS38341PAA03,1\n+XXXXUS436440AM32,1\n+XXXXUS073685AH26,1\n+XXXXUS82937VAB36,1\n+XXXXUS91087BAN01,1\n+XXXXXS1753595328,1\n+XXXXUS054561AJ49,1\n+XXXXXS1485596511,1\n+XXXXXS1679505070,1\n+XXXXUS06406HDA41,1\n+XXXXUS893647BK28,1\n+XXXXXS1038896426,1\n+XXXXUS278642AE34,1\n+XXXXUSU04644CX30,1\n+XXXXFR0013451507,1\n+XXXXUS87470LAG68,1\n+XXXXXS1853426895,1\n+XXXXUS571903BG74,1\n+XXXXUS96208LAA98,1\n+XXXXXS1686550960,1\n+XXXXUS20030NCE94,1\n+XXXXPTBPIAOM0026,1\n+XXXXXS0729895200,1\n+XXXXFR0010945436,1\n+XXXXUS654902AC90,1\n+XXXXUS14913R2L06,1\n+XXXXXS1934392413,1\n+XXXXUS62922LAA61,1\n+XXXXUS146869AD48,1\n+XXXXXS2123970241,1\n+XXXXUS500769HJ69,1\n+XXXXUS742718ER62,1\n+XXXXUS20030NCC39,1\n+XXXXUS03523TBU16,1\n+XXXXUS68323AFH23,1\n+XXXXXS2079716937,1\n+XXXXXS1796233150,1\n+XXXXIT0004695075,1\n+XXXXDE000A2GSCW3,1\n+XXXXXS2199351615,1\n+XXXXXS1884698256,1\n+XXXXUS983024AL46,1\n+XXXXFR0013399110,1\n+XXXXUS94973VAX55,1\n+XXXXUS257559AK07,1\n+XXXXXS1120891012,1\n+XXXXUSQ0426RNF11,1\n+XXXXUSU7089FAC69,1\n+XXXXUS283837AB81,1\n+XXXXFR0011332196,1\n+XXXXFR0013237484,1\n+XXXXUS14913R2N61,1\n+XXXXUS71568PAG46,1\n+XXXXUS46647PBK12,1\n+XXXXUS68389XBN49,1\n+XXXXUSG93654AF17,1\n+XXXXUS713448DD75,1\n+XXXXUS98462YAD22,1\n+XXXXXS2339232147,1\n+XXXXXS1079698376,1\n+XXXXUSG90073AD26,1\n+XXXXUS74368CAX20,1\n+XXXXUSY62196AD53,1\n+XXXXUS57636QAR56,1\n+XXXXUS808513AX31,1\n+XXXXXS2281036249,1\n+XXXXUS90265EAT73,1\n+XXXXUS29379VBE20,1\n+XXXXXS2210014788,1\n+XXXXUSU74079AQ46,1\n+XXXXSK4120008673,1\n+XXXXUS478160BV55,1\n+XXXXUSU20845AE04,1\n+XXXXUS363576AB52,1\n+XXXXUS404119CA57,1\n+XXXXUS857477BL68,1\n+XXXXUS534187AR02,1\n+XXXXUS025816CD95,1\n+XXXXUS26138EAY59,1\n+XXXXXS2010044209,1\n+XXXXXS0368361217,1\n+XXXXUS712219AG90,1\n+XXXXXS1139688268,1\n+XXXXUS195869AQ57,1\n+XXXXUS37045XDE31,1\n+XXXXUS26112TAJ51,1\n+XXXXXS1109959467,1\n+XXXXUS06051GJU40,1\n+XXXXUS15135BAW19,1\n+XXXXFR0013238268,1\n+XXXXXS1586341981,1\n+XXXXXS1550212416,1\n+XXXXUS02665WDD02,1\n+XXXXXS1958648294,1\n+XXXXUSU78585AC73,1\n+XXXXUS08265TAC36,1\n+XXXXUS78469XAE76,1\n+XXXXXS2228897158,1\n+XXXXUS085209AG93,1\n+XXXXUS98978VAH69,1\n+XXXXSK4000015475,1\n+XXXXUS254687DD54,1\n+XXXXUS361448BB85,1\n+XXXXXS2262838381,1\n+XXXXUS902494AX19,1\n+XXXXUS82460P2A28,1\n+XXXXXS1719267855,1\n+XXXXXS2189594315,1\n+XXXXUS26441CAL90,1\n+XXXXUS62987BAA08,1\n+XXXXUS11120VAA17,1\n+XXXXXS2322253944,1\n+XXXXXS1577951715,1\n+XXXXUS87973RAB69,1\n+XXXXXS2050982755,1\n+XXXXXS1700429480,1\n+XXXXXS0932036154,1\n+XXXXXS1084874533,1\n+XXXXXS1953035844,1\n+XXXXUS488401AC40,1\n+XXXXUS459058JE46,1\n+XXXXUSQ25738AA54,1\n+XXXXUS69349LAG32,1\n+XXXXDE000DL19S68,1\n+XXXXXS1897340854,1\n+XXXXXS2210960378,1\n+XXXXUS15189XAQ16,1\n+XXXXXS0823975585,1\n+XXXXXS2154325489,1\n+XXXXUS066716AH49,1\n+XXXXUS78397DAA63,1\n+XXXXXS1517196272,1\n+XXXXUS6325C1CX53,1\n+XXXXUS857006AE01,1\n+XXXXUSN3700LAD75,1\n+XXXXUS191216DJ60,1\n+XXXXXS1180063056,1\n+XXXXUS15135UAM18,1\n+XXXXUS412822AD08,1\n+XXXXXS2357281257,1\n+XXXXUS29355AAG22,1\n+XXXXXS0430799725,1\n+XXXXUS05537GAA31,1\n+XXXXXS1084942470,1\n+XXXXUS09681MAD02,1\n+XXXXUS055451AV01,1\n+XXXXUS46647PAQ90,1\n+XXXXUS89417EAL39,1\n+XXXXXS1387174375,1\n+XXXXUS67077MAP32,1\n+XXXXXS2257857834,1\n+XXXXDE000A3E45M6,1\n+XXXXUS24023KAE82,1\n+XXXXXS1651444140,1\n+XXXXDE000A2R9ZT1,1\n+XXXXUSG471ABNU06,1\n+XXXXUS709599AY03,1\n+XXXXXS2170362672,1\n+XXXXXS2138134809,1\n+XXXXUS00440EAW75,1\n+XXXXUS126307AZ02,1\n+XXXXXS1687484698,1\n+XXXXUS44920UAK43,1\n+XXXXXS2325748106,1\n+XXXXUS48123KAE64,1\n+XXXXUS46647PBP09,1\n+XXXXXS1410582313,1\n+XXXXXS2171713006,1\n+XXXXXS1392459381,1\n+XXXXUS58933YAU91,1\n+XXXXUS059165EF30,1\n+XXXXDE000SHFM758,1\n+XXXXXS2209344543,1\n+XXXXXS0113419690,1\n+XXXXDE000A1RQCP0,1\n+XXXXUS780097BE04,1\n+XXXXXS2205088896,1\n+XXXXXS2326546434,1\n+XXXXEU000A285VM2,1\n+XXXXXS1167203881,1\n+XXXXXS1505149325,1\n+XXXXUS603051AA15,1\n+XXXXUSU6775MAE85,1\n+XXXXXS2225890537,1\n+XXXXUS246724AA69,1\n+XXXXXS1405782159,1\n+XXXXXS1843435410,1\n+XXXXXS1262602532,1\n+XXXXUSN01007AA64,1\n+XXXXXS2332186001,1\n+XXXXXS0372391945,1\n+XXXXXS1031019562,1\n+XXXXUS031162BK53,1\n+XXXXUS63861VAC19,1\n+XXXXUS87724RAJ14,1\n+XXXXDE000A1RQCG9,1\n+XXXXXS2198575271,1\n+XXXXUS82620KAR41,1\n+XXXXUS81257VAB71,1\n+XXXXXS1402194952,1\n+XXXXUS446413AL01,1\n+XXXXUS89236YAB02,1\n+XXXXUS629377CG50,1\n+XXXXXS2295690742,1\n+XXXXUSU65478AX42,1\n+XXXXDE000NRW0MJ2,1\n+XXXXXS2278364075,1\n+XXXXUS891092AD06,1\n+XXXXUS872882AF24,1\n+XXXXGB00BMBL1G81,1\n+XXXXUSG6714UAA81,1\n+XXXXDE000A2YN058,1\n+XXXXXS1747955174,1\n+XXXXUS42809HAH03,1\n+XXXXXS1856940462,1\n+XXXXXS0799658637,1\n+XXXXUS06368EJS28,1\n+XXXXXS1942629061,1\n+XXXXUS46653NAA00,1\n+XXXXUS500472AE51,1\n+XXXXXS1709374497,1\n+XXXXUS460690BS81,1\n+XXXXXS2010030752,1\n+XXXXXS1428468885,1\n+XXXXUS57636QAM69,1\n+XXXXUS494550BK12,1\n+XXXXUS459058FF56,1\n+XXXXXS2307863642,1\n+XXXXXS2102988354,1\n+XXXXXS2106056653,1\n+XXXXUS900123CX69,1\n+XXXXUS256677AG02,1\n+XXXXUS55336VAG59,1\n+XXXXUS86959LAH69,1\n+XXXXXS2358225477,1\n+XXXXUS448579AH52,1\n+XXXXUS74456QBA31,1\n+XXXXXS1629969327,1\n+XXXXUS15189TBB26,1\n+XXXXUS00913RAC07,1\n+XXXXUS48266XAA37,1\n+XXXXUS606822AV60,1\n+XXXXUS15189TAS69,1\n+XXXXXS0834371469,1\n+XXXXUS682051AE72,1\n+XXXXUSU18510AE44,1\n+XXXXUS4581X0DA31,1\n+XXXXDE000A1YCQ29,1\n+XXXXUS89832QAE98,1\n+XXXXUS064159VK97,1\n+XXXXDE000NRW0KF4,1\n+XXXXUSP3579ECF27,1\n+XXXXXS1634368259,1\n+XXXXDE000HV2AL33,1\n+XXXXXS0074371617,1\n+XXXXUS65473PAK12,1\n+XXXXUS224044CE55,1\n+XXXXXS1079726334,1\n+XXXXDE000A2TSDD4,1\n+XXXXXS2190256706,1\n+XXXXUS00191AAD81,1\n+XXXXUS80283LAJ26,1\n+XXXXUS136385AT87,1\n+XXXXXS2305362951,1\n+XXXXUS00817YAV02,1\n+XXXXUS207597EL50,1\n+XXXXUS277432AL49,1\n+XXXXXS1819966687,1\n+XXXXUS24422EUJ62,1\n+XXXXUS10554CAA09,1\n+XXXXXS2333564503,1\n+XXXXUS05890MAA18,1\n+XXXXUS48305QAA13,1\n+XXXXRU000A0JXTS9,1\n+XXXXXS2146086181,1\n+XXXXFR0013396355,1\n+XXXXUS254010AD30,1\n+XXXXUS125581GR39,1\n+XXXXXS2269194499,1\n+XXXXUS693506BP19,1\n+XXXXDE000RLP0835,1\n+XXXXFI4000466412,1\n+XXXXXS1793296465,1\n+XXXXUS90290MAD39,1\n+XXXXUS842434CS98,1\n+XXXXUS828807DG99,1\n+XXXXXS1143502901,1\n+XXXXXS1811198701,1\n+XXXXXS0197703118,1\n+XXXXXS2083146964,1\n+XXXXUS680223AL88,1\n+XXXXXS1551677260,1\n+XXXXUS69121KAD63,1\n+XXXXDE000BLB6JE1,1\n+XXXXXS1908248963,1\n+XXXXUS24422EVR79,1\n+XXXXUSC58437AA91,1\n+XXXXUSG7420TAB29,1\n+XXXXUS29250NAZ87,1\n+XXXXDE0001135044,1\n+XXXXXS1967636272,1\n+XXXXXS2213668085,1\n+XXXXUS50249AAB98,1\n+XXXXXS1667074121,1\n+XXXXXS1572408380,1\n+XXXXXS1357027652,1\n+XXXXXS1269175466,1\n+XXXXDE000DL19TQ2,1\n+XXXXXS0890073991,1\n+XXXXUS900151AB70,1\n+XXXXXS2329241447,1\n+XXXXUS69362BBA98,1\n+XXXXUS743820AA01,1\n+XXXXUS81180WAV37,1\n+XXXXUS67778M2A78,1\n+XXXXUS92769XAR61,1\n+XXXXDE000A2GSP56,1\n+XXXXXS2196328608,1\n+XXXXUS632525AU59,1\n+XXXXXS1789752182,1\n+XXXXXS2034822564,1\n+XXXXXS2262220143,1\n+XXXXUS02209SBP74,1\n+XXXXUS458140AX85,1\n+XXXXFR0000188799,1\n+XXXXUS595112BP79,1\n+XXXXUS026375AR68,1\n+XXXXXS1622626379,1\n+XXXXUS14149YBJ64,1\n+XXXXUS151191BD46,1\n+XXXXXS2020606682,1\n+XXXXAT0000A2RK00,1\n+XXXXXS1939356645,1\n+XXXXUS67103HAC16,1\n+XXXXXS1586214956,1\n+XXXXXS2239632859,1\n+XXXXUS92343VEP58,1\n+XXXXDE000A1TNDK2,1\n+XXXXUS74166MAF32,1\n+XXXXUS832696AR95,1\n+XXXXUS04636NAB91,1\n+XXXXXS2350031048,1\n+XXXXXS1627782771,1\n+XXXXUS00206RJJ23,1\n+XXXXXS2010029234,1\n+XXXXXS1843455103,1\n+XXXXUS86745KAE47,1\n+XXXXUS12802D2D78,1\n+XXXXUSU0901RAA50,1\n+XXXXUS893647BL01,1\n+XXXXXS2324372510,1\n+XXXXXS1617831026,1\n+XXXXXS2066347316,1\n+XXXXUS25468PCR55,1\n+XXXXUS026609AC14,1\n+XXXXUS05526DBQ79,1\n+XXXXFR0013453974,1\n+XXXXUS592173AE84,1\n+XXXXUS85440KAA25,1\n+XXXXUS59001KAH32,1\n+XXXXUS86787EBE68,1\n+XXXXFR0013504644,1\n+XXXXXS0357124618,1\n+XXXXUS91086QAG38,1\n+XXXXUS87612BBG68,1\n+XXXXUS898813AR11,1\n+XXXXXS2199713384,1\n+XXXXXS0426513387,1\n+XXXXUS45112EAH27,1\n+XXXXIT0005390874,1\n+XXXXDE000A2LQRS3,1\n+XXXXUS06675GAN51,1\n+XXXXXS0593606121,1\n+XXXXUS87164KAC80,1\n+XXXXUS20451RAB87,1\n+XXXXUS65412JAC71,1\n+XXXXGB00BMBL1D50,1\n+XXXXUS00971YAJ91,1\n+XXXXUSF8586CBQ45,1\n+XXXXXS0897453493,1\n+XXXXUS29273RAS85,1\n+XXXXFR0013396876,1\n+XXXXXS1627193359,1\n+XXXXXS1729892924,1\n+XXXXUS46849LTL52,1\n+XXXXUS47102XAJ46,1\n+XXXXUS38748YAA01,1\n+XXXXUS035240AR13,1\n+XXXXXS1810960390,1\n+XXXXUS63859UBG76,1\n+XXXXXS2109806369,1\n+XXXXXS2247301794,1\n+XXXXUS146869AF95,1\n+XXXXUS05674RAC88,1\n+XXXXUS90265EAN04,1\n+XXXXUS341081FA03,1\n+XXXXUS23833NAH70,1\n+XXXXXS1412547660,1\n+XXXXXS2010031214,1\n+XXXXDE000A3E5FR9,1\n+XXXXXS1720761490,1\n+XXXXXS1405775708,1\n+XXXXUS209111FY40,1\n+XXXXXS0909369489,1\n+XXXXXS2307573993,1\n+XXXXXS1617864621,1\n+XXXXUS37954JAC09,1\n+XXXXUS54988LAB27,1\n+XXXXUS254687CV61,1\n+XXXXUS718286CG02,1\n+XXXXXS2049726990,1\n+XXXXXS2084497705,1\n+XXXXUS40060QAA31,1\n+XXXXUS907818FN30,1\n+XXXXXS1790099862,1\n+XXXXDE000LFA1784,1\n+XXXXXS2189387520,1\n+XXXXUS404280CG21,1\n+XXXXXS1046224884,1\n+XXXXUS23329PAE07,1\n+XXXXUS94419LAL53,1\n+XXXXUS06279JAA79,1\n+XXXXUS46625HJZ47,1\n+XXXXUS865033AC86,1\n+XXXXUS548661CW57,1\n+XXXXXS2058557344,1\n+XXXXUS45827MAA53,1\n+XXXXUS00131LAK17,1\n+XXXXGB0047524268,1\n+XXXXDE000A2NB9Z3,1\n+XXXXXS1219499032,1\n+XXXXUS824348AQ95,1\n+XXXXUS20825CAX20,1\n+XXXXUS41135WAA99,1\n+XXXXDE000A19X8B2,1\n+XXXXXS0881362502,1\n+XXXXUS68329AAH14,1\n+XXXXUS98420EAC93,1\n+XXXXUS892331AM12,1\n+XXXXXS2066357034,1\n+XXXXSI0002103966,1\n+XXXXUS05946KAH41,1\n+XXXXUSJ7620TAB73,1\n+XXXXUS90265EAP51,1\n+XXXXXS1759468967,1\n+XXXXUS22003BAL09,1\n+XXXXUS60687YBJ73,1\n+XXXXUSG7777BAA29,1\n+XXXXFR0014000Y93,1\n+XXXXUS532457BT48,1\n+XXXXXS1321920735,1\n+XXXXUS62947QAX60,1\n+XXXXUS00101JAF30,1\n+XXXXUS125509BU20,1\n+XXXXUS698299AW45,1\n+XXXXXS1944388856,1\n+XXXXUSP06048AC91,1\n+XXXXFR0013186046,1\n+XXXXUS29978AAC80,1\n+XXXXFR0013505518,1\n+XXXXXS1807421315,1\n+XXXXUS05541VAE65,1\n+XXXXUS202795JH45,1\n+XXXXXS2052466815,1\n+XXXXUS46579RAA23,1\n+XXXXXS2270393379,1\n+XXXXXS0683568223,1\n+XXXXXS2015296465,1\n+XXXXUS149123CD18,1\n+XXXXXS1109836038,1\n+XXXXXS2329146539,1\n+XXXXUS681919BA38,1\n+XXXXXS2069040389,1\n+XXXXUS05946KAJ07,1\n+XXXXUS03835VAF31,1\n+XXXXSI0002103487,1\n+XXXXUS04621XAM02,1\n+XXXXUS60687YAX76,1\n+XXXXUSU75000BS44,1\n+XXXXUS62954HAD08,1\n+XXXXDE000NWB17P2,1\n+XXXXUS814120AC54,1\n+XXXXUS91324PDK57,1\n+XXXXUS87612BBR24,1\n+XXXXXS1514045886,1\n+XXXXUSU76198AA52,1\n+XXXXFR0013203734,1\n+XXXXXS1880442717,1\n+XXXXUS12505BAD29,1\n+XXXXUS903724AT98,1\n+XXXXUS90265EAR18,1\n+XXXXUSC42970AH34,1\n+XXXXDE000NLB8739,1\n+XXXXUS24703TAJ51,1\n+XXXXUS85172FAL31,1\n+XXXXDE000SHFM691,1\n+XXXXUS89832QAB59,1\n+XXXXUS89236TJF30,1\n+XXXXUS69353REF10,1\n+XXXXUS90187BAB71,1\n+XXXXUS85858EAA10,1\n+XXXXUS370334CF96,1\n+XXXXUS251526BR93,1\n+XXXXUS06051GJT76,1\n+XXXXXS2022388586,1\n+XXXXXS1497606365,1\n+XXXXFR0014002O10,1\n+XXXXUS74101XAE04,1\n+XXXXUSP01703AD22,1\n+XXXXXS2230649654,1\n+XXXXXS2099130382,1\n+XXXXIL0011677668,1\n+XXXXXS0092157600,1\n+XXXXUSU7136QAB78,1\n+XXXXUS24422EUY30,1\n+XXXXXS1716970261,1\n+XXXXUS50065XAK00,1\n+XXXXUS09681MAE84,1\n+XXXXUS00912XAT19,1\n+XXXXCH0520042489,1\n+XXXXUS929160AT60,1\n+XXXXXS2363117321,1\n+XXXXUS181396AE20,1\n+XXXXXS2274957237,1\n+XXXXXS1526108235,1\n+XXXXXS2250008245,1\n+XXXXUS01748TAB70,1\n+XXXXXS2187689380,1\n+XXXXXS2011969818,1\n+XXXXXS1508351357,1\n+XXXXXS2177580508,1\n+XXXXUS68323ADP66,1\n+XXXXUS89469AAD63,1\n+XXXXXS2009038113,1\n+XXXXUS16412XAC92,1\n+XXXXUS83368RAU68,1\n+XXXXFR0010961581,1\n+XXXXDE000NRW0LA3,1\n+XXXXXS1801906279,1\n+XXXXXS1840614736,1\n+XXXXUS25466AAQ40,1\n+XXXXXS1972090119,1\n+XXXXUSU76198AB36,1\n+XXXXUS680665AH97,1\n+XXXXDE000A168Y22,1\n+XXXXUS98310WAQ15,1\n+XXXXXS0415532273,1\n+XXXXUS12189TAK07,1\n+XXXXDE0001102432,1\n+XXXXUS55608KAJ43,1\n+XXXXUS845437BP68,1\n+XXXXUS05252BDE65,1\n+XXXXUS89832QAF63,1\n+XXXXXS2357430789,1\n+XXXXAT0000A2N7F1,1\n+XXXXXS1953146245,1\n+XXXXUS74256LBJ70,1\n+XXXXUS530715AN13,1\n+XXXXBE0000349580,1\n+XXXXES0313307201,1\n+XXXXUS02361DAP50,1\n+XXXXUS210518DE35,1\n+XXXXXS1205618470,1\n+XXXXUS23338VAB27,1\n+XXXXXS2010032881,1\n+XXXXDE000A3H3D69,1\n+XXXXXS1845161790,1\n+XXXXXS1940840132,1\n+XXXXUS743315AX14,1\n+XXXXUS717081DH33,1\n+XXXXUS01626PAH91,1\n+XXXXUS86765BAT61,1\n+XXXXUSJ09748AC83,1\n+XXXXPTOTEUOE0019,1\n+XXXXUSY46006AC99,1\n+XXXXXS2225893630,1\n+XXXXSK4120008871,1\n+XXXXUS78490FJJ93,1\n+XXXXUS808513BK01,1\n+XXXXXS0611398008,1\n+XXXXXS2297209293,1\n+XXXXUS74340XBN03,1\n+XXXXUS50247VAB53,1\n+XXXXUS04010LAV53,1\n+XXXXUS88032XAP96,1\n+XXXXUS05369GAA67,1\n+XXXXUS828807DE42,1\n+XXXXXS1812887443,1\n+XXXXUS65336YAN31,1\n+XXXXBE0002443183,1\n+XXXXXS1841967356,1\n+XXXXUS617726AK00,1\n+XXXXUSG38327AB13,1\n+XXXXXS2278534099,1\n+XXXXUS172967KA87,1\n+XXXXUSU9226VAE75,1\n+XXXXUS88732JAJ79,1\n+XXXXUS961214DQ36,1\n+XXXXUS06051GGK94,1\n+XXXXUS594918BK99,1\n+XXXXXS2345827120,1\n+XXXXXS1969593943,1\n+XXXXFR0011619436,1\n+XXXXUS00213MAV63,1\n+XXXXUSU9273ACY92,1\n+XXXXDE000NRW0JV3,1\n+XXXXUS038222AN54,1\n+XXXXUSY20721BE87,1\n+XXXXXS1634369224,1\n+XXXXUS71677KAB44,1\n+XXXXUSP93077AC28,1\n+XXXXXS0544644957,1\n+XXXXXS1644451434,1\n+XXXXUS71647NBD03,1\n+XXXXUS00037BAF94,1\n+XXXXUS149123CB51,1\n+XXXXUS402635AR75,1\n+XXXXUS233851DS02,1\n+XXXXXS1323450236,1\n+XXXXXS2247552446,1\n+XXXXXS2022093434,1\n+XXXXXS1023541847,1\n+XXXXUS837004CB48,1\n+XXXXUSF8586CRW49,1\n+XXXXNL0013332430,1\n+XXXXXS1703063179,1\n+XXXXUS054561AM77,1\n+XXXXUS67091TAB17,1\n+XXXXXS2264545273,1\n+XXXXFR0012199156,1\n+XXXXXS1517173149,1\n+XXXXXS1615065320,1\n+XXXXUS20030NAM39,1\n+XXXXUS828807DA20,1\n+XXXXXS1730911689,1\n+XXXXUS594918BC73,1\n+XXXXUS55608PBG81,1\n+XXXXDE000SHFM725,1\n+XXXXUSY54788AB31,1\n+XXXXXS2355604708,1\n+XXXXXS1970690829,1\n+XXXXXS1910947941,1\n+XXXXUS460146CS07,1\n+XXXXUS87264AAR68,1\n+XXXXUS22822VAM37,1\n+XXXXUS66989HAP38,1\n+XXXXUS437076BN13,1\n+XXXXXS2166619663,1\n+XXXXUS045167ET64,1\n+XXXXEU000A1Z99P9,1\n+XXXXUS298785HS85,1\n+XXXXUS060335AA40,1\n+XXXXUS559080AP17,1\n+XXXXUS74735K2B72,1\n+XXXXUS667274AD67,1\n+XXXXUS678858BT77,1\n+XXXXUSC4R803AH92,1\n+XXXXUS44267DAD93,1\n+XXXXXS1265778933,1\n+XXXXUS98105GAK85,1\n+XXXXFR0011697028,1\n+XXXXUS55354GAL41,1\n+XXXXDE000AAR0223,1\n+XXXXXS2035536098,1\n+XXXXUS459200KB68,1\n+XXXXUSG8185TAB55,1\n+XXXXIT0005388175,1\n+XXXXXS1014610254,1\n+XXXXXS2071383397,1\n+XXXXXS1716927766,1\n+XXXXUS95000U2M49,1\n+XXXXDE000CZ40MN2,1\n+XXXXUS89157FAA84,1\n+XXXXXS2284257701,1\n+XXXXXS1852560819,1\n+XXXXUS455780CT15,1\n+XXXXIT0001278511,1\n+XXXXUS25746UDJ51,1\n+XXXXUS17858PAB76,1\n+XXXXUS037389AU72,1\n+XXXXXS2361252971,1\n+XXXXXS1492681116,1\n+XXXXUS539830BE89,1\n+XXXXUS50066RAN61,1\n+XXXXUS09581JAA43,1\n+XXXXDE000A2LQRA1,1\n+XXXXXS1592168451,1\n+XXXXUS893574AM57,1\n+XXXXUS902494BG76,1\n+XXXXXS2100690036,1\n+XXXXUS27409LAA17,1\n+XXXXXS1377745937,1\n+XXXXUS911312BN52,1\n+XXXXUS05578AAA60,1\n+XXXXUS603374AF69,1\n+XXXXUS460599AE31,1\n+XXXXXS2052134496,1\n+XXXXUS816851AT63,1\n+XXXXXS2262077675,1\n+XXXXXS1377681272,1\n+XXXXUSU1109MAT37,1\n+XXXXUS401617AD75,1\n+XXXXXS1191877452,1\n+XXXXFR0011181171,1\n+XXXXUS001192AK93,1\n+XXXXUS759509AE27,1\n+XXXXUS760942BD38,1\n+XXXXXS1309437215,1\n+XXXXXS1708168890,1\n+XXXXUS29379VCA98,1\n+XXXXDE0001141760,1\n+XXXXUS53220KAF57,1\n+XXXXXS2248458395,1\n+XXXXFR0013414091,1\n+XXXXXS2356029541,1\n+XXXXXS2358724123,1\n+XXXXUS29278GAA67,1\n+XXXXUSP70809AB71,1\n+XXXXUS48666KAY55,1\n+XXXXUS256163AC07,1\n+XXXXXS1043545059,1\n+XXXXXS2320459063,1\n+XXXXFR0013368263,1\n+XXXXXS2363719050,1\n+XXXXXS0808635436,1\n+XXXXUS87264ABD63,1\n+XXXXDE000NRW0LN6,1\n+XXXXUS251526BS76,1\n+XXXXXS1851278421,1\n+XXXXUS80413TAU34,1\n+XXXXXS1992918661,1\n+XXXXUS828807CS47,1\n+XXXXXS1860402954,1\n+XXXXUS097023BQ73,1\n+XXXXDE000A1R0105,1\n+XXXXUS141781BN33,1\n+XXXXUS65409QBH48,1\n+XXXXUS17298CJY57,1\n+XXXXXS1751178499,1\n+XXXXXS2112335752,1\n+XXXXUS89832QAD16,1\n+XXXXUS71567PAT75,1\n+XXXXUS92936MAF41,1\n+XXXXUS984851AG07,1\n+XXXXXS2282095970,1\n+XXXXUS893574AR45,1\n+XXXXXS0947658208,1\n+XXXXXS2083302419,1\n+XXXXUS30216JAC99,1\n+XXXXXS2059777594,1\n+XXXXXS2182067350,1\n+XXXXUS670002AB05,1\n+XXXXXS1652855815,1\n+XXXXUS69352JAN72,1\n+XXXXGB00B4RMG977,1\n+XXXXUS98419MAJ99,1\n+XXXXUS606822BN36,1\n+XXXXUSJ77549AN39,1\n+XXXXUS165167DF18,1\n+XXXXUS639057AD02,1\n+XXXXUS829259AU46,1\n+XXXXUS570535AU83,1\n+XXXXUS65334HAG74,1\n+XXXXXS1454980159,1\n+XXXXXS0347908096,1\n+XXXXXS0253359961,1\n+XXXXUS00182FBJ49,1\n+XXXXUS60687YBL20,1\n+XXXXES00000126Z1,1\n+XXXXXS1197775692,1\n+XXXXFR0013066388,1\n+XXXXUS225433AR25,1\n+XXXXUS832696AT51,1\n+XXXXXS1821830160,1\n+XXXXUS224044CH86,1\n+XXXXUS90327QD487,1\n+XXXXES0413900608,1\n+XXXXUS00105DAG07,1\n+XXXXXS1634252628,1\n+XXXXUS891160MJ94,1\n+XXXXXS2233109409,1\n+XXXXXS2082777405,1\n+XXXXXS1405775534,1\n+XXXXXS1081321595,1\n+XXXXUSP989MJBE04,1\n+XXXXFR0013108933,1\n+XXXXXS1781811143,1\n+XXXXXS2354308194,1\n+XXXXXS2116905691,1\n+XXXXXS1909177625,1\n+XXXXUS46556KAB26,1\n+XXXXXS1880450140,1\n+XXXXUSP06518AF40,1\n+XXXXUS80281LAP04,1\n+XXXXXS2243564478,1\n+XXXXXS1938443329,1\n+XXXXUS09660V2B87,1\n+XXXXPTEDPKOM0034,1\n+XXXXXS1412266907,1\n+XXXXUS059165EN63,1\n+XXXXUSG5002FAM89,1\n+XXXXUS458140BK55,1\n+XXXXXS2189906816,1\n+XXXXUS341081FM41,1\n+XXXXFR0013455540,1\n+XXXXUS22822VAS07,1\n+XXXXUS29364NAT54,1\n+XXXXUS929160AV17,1\n+XXXXXS1917548247,1\n+XXXXXS1958533553,1\n+XXXXXS2055089457,1\n+XXXXXS1963744260,1\n+XXXXUS125523BV13,1\n+XXXXUS09709THH77,1\n+XXXXUS911312BJ41,1\n+XXXXUS37045VAQ32,1\n+XXXXUS00254EMP42,1\n+XXXXUS743315AQ62,1\n+XXXXNO0010823347,1\n+XXXXXS0903532090,1\n+XXXXXS1303929894,1\n+XXXXFR0013424868,1\n+XXXXUS854502AA92,1\n+XXXXXS2081615473,1\n+XXXXUS478160CJ19,1\n+XXXXFR0013413960,1\n+XXXXXS0270347304,1\n+XXXXXS1555094066,1\n+XXXXUS91086QBF46,1\n+XXXXXS0690623771,1\n+XXXXXS0949964810,1\n+XXXXUS55608JAP30,1\n+XXXXUS64952WDP59,1\n+XXXXUSU63768AA01,1\n+XXXXXS1973748707,1\n+XXXXUSP2121VAH70,1\n+XXXXIT0005447187,1\n+XXXXUS053773BF30,1\n+XXXXES0378641338,1\n+XXXXXS1695301900,1\n+XXXXUS741503AW60,1\n+XXXXXS1837142790,1\n+XXXXUS080555AF20,1\n+XXXXUS89420GAE98,1\n+XXXXXS2120882183,1\n+XXXXXS2306072732,1\n+XXXXXS1732478000,1\n+XXXXUSJ7771KPK71,1\n+XXXXUS03027XAU46,1\n+XXXXUS06051GFU85,1\n+XXXXUS00913RAB24,1\n+XXXXUS09061GAH48,1\n+XXXXUS86765BAP40,1\n+XXXXXS1377682676,1\n+XXXXBE0002803840,1\n+XXXXUS57636QAJ31,1\n+XXXXUS037735CE55,1\n+XXXXXS1846632104,1\n+XXXXUS59156RBB33,1\n+XXXXXS2010045271,1\n+XXXXUS56109BAB36,1\n+XXXXXS1824425182,1\n+XXXXUS761713AY21,1\n+XXXXUS00206RKE17,1\n+XXXXXS1143974159,1\n+XXXXUS63861CAD11,1\n+XXXXXS1887330188,1\n+XXXXXS2057887197,1\n+XXXXUS828807CY15,1\n+XXXXUSP32133CG63,1\n+XXXXES0205032016,1\n+XXXXES00000128D4,1\n+XXXXXS2208843503,1\n+XXXXUS90931CAA62,1\n+XXXXXS2126300479,1\n+XXXXUS30216BHP04,1\n+XXXXXS1267053103,1\n+XXXXUS48268KAF84,1\n+XXXXUS37045XBK19,1\n+XXXXUSP37878AA69,1\n+XXXXXS1172951508,1\n+XXXXXS2226808322,1\n+XXXXUSU12501AV13,1\n+XXXXUS097023CE35,1\n+XXXXUS48249DAA90,1\n+XXXXUS23636BAR06,1\n+XXXXXS0629974352,1\n+XXXXUS842587CV72,1\n+XXXXUS302154BN89,1\n+XXXXUS65339KBA79,1\n+XXXXUS94973VAT44,1\n+XXXXUS74165HAB42,1\n+XXXXXS1822829799,1\n+XXXXXS2317061864,1\n+XXXXUS025816BZ17,1\n+XXXXEU000A1U9944,1\n+XXXXUS571748BN17,1\n+XXXXUS31620RAJ41,1\n+XXXXXS2080785343,1\n+XXXXUS538034AV10,1\n+XXXXUS78015K7L29,1\n+XXXXFR0011109180,1\n+XXXXXS2208638838,1\n+XXXXXS2262211076,1\n+XXXXUS57629WCQ15,1\n+XXXXUS04685A2Q37,1\n+XXXXXS2102867483,1\n+XXXXUS418056AX57,1\n+XXXXUS771196BN10,1\n+XXXXXS2019814503,1\n+XXXXUS65364UAB26,1\n+XXXXUS42225UAH77,1\n+XXXXXS1490138226,1\n+XXXXXS2339427747,1\n+XXXXUS75405UAD81,1\n+XXXXUS89356BAC28,1\n+XXXXUS501499AB36,1\n+XXXXXS1562601424,1\n+XXXXUS17027NAB82,1\n+XXXXUS906548CM25,1\n+XXXXXS1639097747,1\n+XXXXUS031162AW01,1\n+XXXXUS95709TAL44,1\n+XXXXUS80627DAC02,1\n+XXXXUS780097BJ90,1\n+XXXXUS00914AAB89,1\n+XXXXXS2090949160,1\n+XXXXUS780153BE13,1\n+XXXXUS05526DBN49,1\n+XXXXDE000A2TR6H3,1\n+XXXXUS85434VAB45,1\n+XXXXUS42217KBC99,1\n+XXXXUSP14008AE91,1\n+XXXXXS2247718435,1\n+XXXXUS298785GX89,1\n+XXXXFR0013220266,1\n+XXXXUS606822BR40,1\n+XXXXUS75625QAC33,1\n+XXXXUS202795JF88,1\n+XXXXXS0593062788,1\n+XXXXXS1808340019,1\n+XXXXUS89153VAU35,1\n+XXXXUS632307AB07,1\n+XXXXUS283695BK98,1\n+XXXXXS1799523276,1\n+XXXXCH0576402181,1\n+XXXXXS1652866002,1\n+XXXXXS1713462742,1\n+XXXXUS42218SAF56,1\n+XXXXUS65341BAD82,1\n+XXXXXS2084510069,1\n+XXXXXS1789759195,1\n+XXXXDE000LB2V5T1,1\n+XXXXXS2062919589,1\n+XXXXXS1078235733,1\n+XXXXUS00973RAJ23,1\n+XXXXXS2348241048,1\n+XXXXXS1574790751,1\n+XXXXUS166764AP55,1\n+XXXXXS2215180550,1\n+XXXXUS904678AW97,1\n+XXXXUS35906ABG22,1\n+XXXXUS46507MAE21,1\n+XXXXUS00185AAB08,1\n+XXXXUS90352JAC71,1\n+XXXXUS209111FM02,1\n+XXXXUS776743AN67,1\n+XXXXUS75524DAP50,1\n+XXXXXS1379107219,1\n+XXXXUS70450YAG89,1\n+XXXXUS341081FJ12,1\n+XXXXUS858912AF50,1\n+XXXXXS2166002076,1\n+XXXXXS2010324585,1\n+XXXXUS120568BB55,1\n+XXXXUSU57346AJ47,1\n+XXXXDE000NWB18M7,1\n+XXXXUS907818FG88,1\n+XXXXXS2109790001,1\n+XXXXUSU91505AN47,1\n+XXXXFR0014004016,1\n+XXXXUS48667QAP00,1\n+XXXXUS23304RAB15,1\n+XXXXUS78440PAE88,1\n+XXXXUS718549AH14,1\n+XXXXUS04685A2U49,1\n+XXXXUS87161CAL90,1\n+XXXXFR0010981746,1\n+XXXXUS11271LAE20,1\n+XXXXUS855244AQ29,1\n+XXXXXS1590568132,1\n+XXXXFR0013321080,1\n+XXXXXS1137512668,1\n+XXXXUS59524QAA31,1\n+XXXXUS485134BR00,1\n+XXXXUS961214EB57,1\n+XXXXUSN82008AU28,1\n+XXXXUS532457AZ17,1\n+XXXXXS1641623381,1\n+XXXXXS1634523754,1\n+XXXXUS037833CH12,1\n+XXXXUS38145GAH39,1\n+XXXXUS559080AG18,1\n+XXXXUS00084DAT72,1\n+XXXXNL0012650477,1\n+XXXXFI4000331004,1\n+XXXXXS2208277983,1\n+XXXXDE000LB2CTH0,1\n+XXXXUS362420AD35,1\n+XXXXUS55300RAA95,1\n+XXXXUS025816CA56,1\n+XXXXUS806854AD77,1\n+XXXXXS1949711094,1\n+XXXXUS373334KM26,1\n+XXXXUS09952AAC09,1\n+XXXXXS1568888777,1\n+XXXXUSV7780TAC72,1\n+XXXXUSP14517AA73,1\n+XXXXUS44107TAU07,1\n+XXXXUS24422EVC01,1\n+XXXXXS1624344542,1\n+XXXXUSN9836ZAA68,1\n+XXXXUSH4209UAT37,1\n+XXXXFR0000186413,1\n+XXXXUS651639AW68,1\n+XXXXUS45685EAG17,1\n+XXXXDE000A3H2VA6,1\n+XXXXUS037833EC07,1\n+XXXXXS1883352095,1\n+XXXXUS494550BJ49,1\n+XXXXUSU09513HX08,1\n+XXXXDE000A2TSTF5,1\n+XXXXUS254687FX90,1\n+XXXXUS50249AAE38,1\n+XXXXXS2230859469,1\n+XXXXXS0473964509,1\n+XXXXUS494550BL94,1\n+XXXXXS2366276595,1\n+XXXXXS2122922573,1\n+XXXXXS1072516690,1\n+XXXXXS2055647213,1\n+XXXXXS1679350014,1\n+XXXXUSY4935NAS37,1\n+XXXXUS156700BD72,1\n+XXXXUS539439AQ24,1\n+XXXXUS11041RAL24,1\n+XXXXUS26441CAS44,1\n+XXXXUS713448EM65,1\n+XXXXUS22411VAG32,1\n+XXXXXS0934983999,1\n+XXXXUS06406YAA01,1\n+XXXXXS1998797663,1\n+XXXXXS2342908949,1\n+XXXXUS42225UAD63,1\n+XXXXXS2229470146,1\n+XXXXXS1953255616,1\n+XXXXXS1322048619,1\n+XXXXDE000A2LQSH4,1\n+XXXXUS064159YN00,1\n+XXXXUSU29195AD36,1\n+XXXXXS2348591707,1\n+XXXXXS2286436451,1\n+XXXXXS2300292963,1\n+XXXXUS89114QCK22,1\n+XXXXUS55300RAG65,1\n+XXXXXS2171874519,1\n+XXXXDE000BLB6JA9,1\n+XXXXUS68902VAH06,1\n+XXXXUS87973RAV24,1\n+XXXXFR0014000PF1,1\n+XXXXUS747262AZ65,1\n+XXXXEU000A1U9936,1\n+XXXXUS907818EY04,1\n+XXXXXS2034629134,1\n+XXXXUS853254BN98,1\n+XXXXUS44106MAQ50,1\n+XXXXXS2011522914,1\n+XXXXUS97650WAG33,1\n+XXXXUS05526DAV73,1\n+XXXXFR0013141074,1\n+XXXXUS46513YJJ82,1\n+XXXXUSP9810XAB75,1\n+XXXXUS455780BZ83,1\n+XXXXXS1586385178,1\n+XXXXUSU2089PAD34,1\n+XXXXIT0001205589,1\n+XXXXUS21684AAC09,1\n+XXXXUSU75111AG60,1\n+XXXXUS68389XCE31,1\n+XXXXUS05252ACR05,1\n+XXXXUS74112BAL99,1\n+XXXXUS02665WDW82,1\n+XXXXUS29244UAF57,1\n+XXXXUS438516CA21,1\n+XXXXUS225401AM02,1\n+XXXXUS56585ABD37,1\n+XXXXFR0013342128,1\n+XXXXDE000A3KNQA0,1\n+XXXXEU000A1G0DD4,1\n+XXXXDE000A255CW0,1\n+XXXXUS45721RAC79,1\n+XXXXUS949746SA05,1\n+XXXXXS2052467110,1\n+XXXXUS74256LEJ44,1\n+XXXXUS00206RDK59,1\n+XXXXFR0013445137,1\n+XXXXUS92537VAA89,1\n+XXXXXS1090161875,1\n+XXXXXS1793297604,1\n+XXXXXS1567389728,1\n+XXXXPTRAACOM0013,1\n+XXXXNO0010981939,1\n+XXXXUSC8814PAG57,1\n+XXXXXS2114143758,1\n+XXXXDE000A1RQDW4,1\n+XXXXUS857524AB80,1\n+XXXXXS1523130984,1\n+XXXXFR0010804500,1\n+XXXXXS1725342288,1\n+XXXXUS632525AS04,1\n+XXXXXS0211898126,1\n+XXXXUS853254AK68,1\n+XXXXDE000MHB25J1,1\n+XXXXUS29135LAD29,1\n+XXXXXS2122990653,1\n+XXXXUS824348BL99,1\n+XXXXXS1195224552,1\n+XXXXXS1948752826,1\n+XXXXUS337738AQ13,1\n+XXXXXS1435031270,1\n+XXXXUSY39694AA51,1\n+XXXXUS906548CR12,1\n+XXXXUS455780CK06,1\n+XXXXUS38141GXA74,1\n+XXXXBE0000338476,1\n+XXXXEU000A1G0EB6,1\n+XXXXUSP73699BH55,1\n+XXXXUS22266LAF31,1\n+XXXXUS105756BF62,1\n+XXXXEU000A1Z99M6,1\n+XXXXUS80622GAC87,1\n+XXXXXS2248032653,1\n+XXXXUS10373QBG47,1\n+XXXXES0239140017,1\n+XXXXUS26442CAP95,1\n+XXXXUS38148BAD01,1\n+XXXXXS2013709220,1\n+XXXXUS86771WAA36,1\n+XXXXXS2176560444,1\n+XXXXUS025816BN86,1\n+XXXXUS501044CQ29,1\n+XXXXXS1632358112,1\n+XXXXXS2249740601,1\n+XXXXXS1526515892,1\n+XXXXXS1651453729,1\n+XXXXUS89236TED37,1\n+XXXXDE000NRW0KZ2,1\n+XXXXUS606839AB40,1\n+XXXXXS2297220423,1\n+XXXXES0413860547,1\n+XXXXUS15135BAV36,1\n+XXXXUS25466AAP66,1\n+XXXXXS1843449122,1\n+XXXXFI4000440227,1\n+XXXXUS037833AY62,1\n+XXXXUS55336VAS97,1\n+XXXXUS55336VAJ98,1\n+XXXXUS17287HAA86,1\n+XXXXXS2046736752,1\n+XXXXDE000CZ45VB7,1\n+XXXXUS695114CW67,1\n+XXXXUS37045VAT70,1\n+XXXXXS1503116599,1\n+XXXXXS1839386908,1\n+XXXXXS2234849649,1\n+XXXXUS808513BC84,1\n+XXXXUS82620KAD54,1\n+XXXXXS1467389745,1\n+XXXXUS69889MAA09,1\n+XXXXDE000A2BPJ45,1\n+XXXXXS1590806508,1\n+XXXXXS1062900912,1\n+XXXXUS909287AA20,1\n+XXXXUS833034AH47,1\n+XXXXXS1843441731,1\n+XXXXXS1753808929,1\n+XXXXUS46647PAA49,1\n+XXXXUS66989HAM07,1\n+XXXXXS1087984164,1\n+XXXXUS4581X0DN51,1\n+XXXXUS36962GXZ26,1\n+XXXXXS0753143709,1\n+XXXXUS337738AU25,1\n+XXXXFR0011755156,1\n+XXXXXS1520899532,1\n+XXXXXS2057842176,1\n+XXXXXS2351310482,1\n+XXXXUS71654QBB77,1\n+XXXXUS02209SAV51,1\n+XXXXDE000A2TSTE8,1\n+XXXXXS1575045338,1\n+XXXXUS875372AA29,1\n+XXXXUSY7140WAF50,1\n+XXXXUS718549AE82,1\n+XXXXUS694308HP52,1\n+XXXXXS2012984154,1\n+XXXXES0000106700,1\n+XXXXXS1407695680,1\n+XXXXXS1368698251,1\n+XXXXXS2035564975,1\n+XXXXGR0124037715,1\n+XXXXUSU7025WAA00,1\n+XXXXXS2334361271,1\n+XXXXXS2079388828,1\n+XXXXUS222213AV22,1\n+XXXXUS13645RAY09,1\n+XXXXUS90015WAG87,1\n+XXXXXS2289588167,1\n+XXXXUS515110BN30,1\n+XXXXUS209111FW83,1\n+XXXXXS2049422343,1\n+XXXXUS00206RMJ85,1\n+XXXXUS98955DAA81,1\n+XXXXUS061202AA55,1\n+XXXXUS33616CAB63,1\n+XXXXXS1405769487,1\n+XXXXUS744573AK22,1\n+XXXXUS50066PAP53,1\n+XXXXUS01609WAY84,1\n+XXXXXS1685653211,1\n+XXXXUS628530AV91,1\n+XXXXUS075896AC47,1\n+XXXXXS2177122624,1\n+XXXXUS949746SB87,1\n+XXXXUS15189TAV98,1\n+XXXXXS2347497906,1\n+XXXXUS126408HD82,1\n+XXXXUS836205AR58,1\n+XXXXXS2360310044,1\n+XXXXUS22410JAA43,1\n+XXXXXS1374393103,1\n+XXXXUS404280BG30,1\n+XXXXIT0005374043,1\n+XXXXXS1110449458,1\n+XXXXUS30034WAA45,1\n+XXXXUS90320LAG23,1\n+XXXXUS05578BAT35,1\n+XXXXXS1509009483,1\n+XXXXXS2344772426,1\n+XXXXUS020564AE00,1\n+XXXXUS279158AE95,1\n+XXXXUS001055AQ51,1\n+XXXXUS05502FAC23,1\n+XXXXUS29273VAH33,1\n+XXXXXS2358231798,1\n+XXXXFR0013512381,1\n+XXXXUS913017DB25,1\n+XXXXUS67011XAA19,1\n+XXXXXS1220923996,1\n+XXXXXS2203969246,1\n+XXXXXS0304274599,1\n+XXXXUS58933NAX75,1\n+XXXXUS676167CC18,1\n+XXXXUS04686E2R28,1\n+XXXXUS844741BF49,1\n+XXXXXS1110833123,1\n+XXXXUS23636BAY56,1\n+XXXXUS87227LAA52,1\n+XXXXUS709599BC73,1\n+XXXXUS361448BE25,1\n+XXXXUSU37818AT53,1\n+XXXXUS292480AM22,1\n+XXXXXS2243350753,1\n+XXXXXS0911024635,1\n+XXXXDE000A13R8M3,1\n+XXXXUS12513GBA67,1\n+XXXXUS44962LAC19,1\n+XXXXDE000A13SL91,1\n+XXXXXS1308278453,1\n+XXXXXS2000504444,1\n+XXXXUS904764AS64,1\n+XXXXUS045167CW12,1\n+XXXXUS42704MAA09,1\n+XXXXUS74834LAY65,1\n+XXXXUS110122CV84,1\n+XXXXUS097023CU76,1\n+XXXXES0000012H33,1\n+XXXXUS46132FAC41,1\n+XXXXFR0013424876,1\n+XXXXUS91324PBN15,1\n+XXXXDE000A2R7JE1,1\n+XXXXUS24820RAG39,1\n+XXXXXS2339015393,1\n+XXXXDE000A289NF1,1\n+XXXXUS94876QAA40,1\n+XXXXXS2013512608,1\n+XXXXXS0944835734,1\n+XXXXUS87612EAR71,1\n+XXXXUS019736AF46,1\n+XXXXUS00206RBH49,1\n+XXXXXS2067265475,1\n+XXXXXS2187529180,1\n+XXXXUS892331AE95,1\n+XXXXXS0811690550,1\n+XXXXUS20030NDN84,1\n+XXXXUS94106LBP31,1\n+XXXXDE000A3H2Z80,1\n+XXXXUS676167BW80,1\n+XXXXUS693483AE93,1\n+XXXXXS0914791412,1\n+XXXXUS48667QAQ82,1\n+XXXXUS110122DD77,1\n+XXXXUSN39427AK07,1\n+XXXXUS20826FAF36,1\n+XXXXFR0013456621,1\n+XXXXXS2182121405,1\n+XXXXUS929089AC42,1\n+XXXXUSY52758AE20,1\n+XXXXUS38869AAB35,1\n+XXXXUS125491AP51,1\n+XXXXUS226373AQ18,1\n+XXXXXS1125272143,1\n+XXXXXS2082380515,1\n+XXXXUS29246QAB14,1\n+XXXXUS88732JBD90,1\n+XXXXUS92240MBJ62,1\n+XXXXUS49456BAR24,1\n+XXXXXS1965523084,1\n+XXXXUS85571BAU98,1\n+XXXXUS009158BB15,1\n+XXXXXS2013539635,1\n+XXXXUS026874BE68,1\n+XXXXUS09239BAB53,1\n+XXXXDE000A2RYD83,1\n+XXXXUS89788JAA79,1\n+XXXXXS2258398911,1\n+XXXXUS63861WAD74,1\n+XXXXUS501044DC24,1\n+XXXXUS57636QAG91,1\n+XXXXXS1030998469,1\n+XXXXUS6174468C63,1\n+XXXXUS22411VAN82,1\n+XXXXBE0000333428,1\n+XXXXXS2110110686,1\n+XXXXUS15238RAG74,1\n+XXXXUS00206RKG64,1\n+XXXXUS25470DAK54,1\n+XXXXUS110122DC94,1\n+XXXXXS1684269332,1\n+XXXXUS683720AA42,1\n+XXXXXS0545440900,1\n+XXXXXS1970667769,1\n+XXXXUS161175BK95,1\n+XXXXUS85513LAB09,1\n+XXXXUS842587DH79,1\n+XXXXXS1195502031,1\n+XXXXUSP37878AB43,1\n+XXXXUS86562MBV19,1\n+XXXXGB00B52WS153,1\n+XXXXFR0013447604,1\n+XXXXXS1867406024,1\n+XXXXUS12008RAM97,1\n+XXXXUS444454AD48,1\n+XXXXXS1814900806,1\n+XXXXUSP9367RAG67,1\n+XXXXXS0172989252,1\n+XXXXBE0002272418,1\n+XXXXXS1419661118,1\n+XXXXUS90138FAD42,1\n+XXXXXS1508390090,1\n+XXXXXS2115094737,1\n+XXXXUS404530AB34,1\n+XXXXXS2243322976,1\n+XXXXUSY20721AJ83,1\n+XXXXUS023551AJ38,1\n+XXXXUS855244AP46,1\n+XXXXXS2240512124,1\n+XXXXUS74251VAF94,1\n+XXXXUS53079EBL74,1\n+XXXXXS0863076930,1\n+XXXXXS2013574202,1\n+XXXXXS2014370915,1\n+XXXXUS12189LAM37,1\n+XXXXUS89352HAZ29,1\n+XXXXUS37231BAA61,1\n+XXXXUS69371RQ821,1\n+XXXXUS29246QAD79,1\n+XXXXUS928668BB76,1\n+XXXXIT0005094088,1\n+XXXXUSJ45174AF61,1\n+XXXXUS031162CS70,1\n+XXXXUS759351AM18,1\n+XXXXUS22411VAK44,1\n+XXXXUS778296AG89,1\n+XXXXUS581557BJ38,1\n+XXXXXS2109391214,1\n+XXXXUS878091BD86,1\n+XXXXXS0387079907,1\n+XXXXUS03027XBJ81,1\n+XXXXXS1054522922,1\n+XXXXUS466313AH63,1\n+XXXXUS92857WBC38,1\n+XXXXUS00138EAS37,1\n+XXXXXS2014278944,1\n+XXXXFR0010371401,1\n+XXXXUS00928QAP63,1\n+XXXXXS1767930586,1\n+XXXXXS0780267406,1\n+XXXXXS1691798240,1\n+XXXXXS2259627235,1\n+XXXXDE0001789337,1\n+XXXXXS1602515733,1\n+XXXXUSY81647AB84,1\n+XXXXSK4120009044,1\n+XXXXUS879369AG12,1\n+XXXXXS2196324011,1\n+XXXXDE000A1RQB11,1\n+XXXXXS1570025111,1\n+XXXXUS740189AP05,1\n+XXXXFR0013020450,1\n+XXXXUS14162VAB27,1\n+XXXXFR0013299591,1\n+XXXXUS478375AL26,1\n+XXXXXS1071713470,1\n+XXXXUS961214EQ27,1\n+XXXXBE6316405560,1\n+XXXXUS91127KAE29,1\n+XXXXUS914886AE62,1\n+XXXXXS1246658501,1\n+XXXXDE000SLB4204,1\n+XXXXUS29766LAA44,1\n+XXXXPTTAPDOM0005,1\n+XXXXUS117043AE96,1\n+XXXXUS47216FAA57,1\n+XXXXXS1856799421,1\n+XXXXUS20030NDH17,1\n+XXXXUS571748AX08,1\n+XXXXXS2109394077,1\n+XXXXUS110122DN59,1\n+XXXXXS1379158048,1\n+XXXXUS716564AB55,1\n+XXXXXS2347769833,1\n+XXXXXS1901718509,1\n+XXXXXS0877741479,1\n+XXXXUS87938WAW38,1\n+XXXXXS2351301499,1\n+XXXXUS25468PDM59,1\n+XXXXUS78472GAA76,1\n+XXXXUS29717PAZ09,1\n+XXXXUS00912XBE31,1\n+XXXXUS277432AW04,1\n+XXXXUS45867XAG97,1\n+XXXXDE000LB01ZU3,1\n+XXXXUS247109BS95,1\n+XXXXUS345370BT64,1\n+XXXXUS67103HAD98,1\n+XXXXXS2179038232,1\n+XXXXXS2178221490,1\n+XXXXUS00404AAP49,1\n+XXXXUSG20011AC94,1\n+XXXXXS1991047306,1\n+XXXXUS79588TAC45,1\n+XXXXUS163092AD18,1\n+XXXXUS750236AX98,1\n+XXXXFR0013367604,1\n+XXXXXS0138036842,1\n+XXXXUS031162CR97,1\ndiff --git a/src/include/duckdb/storage/table/column_data.hpp b/src/include/duckdb/storage/table/column_data.hpp\nindex 277835d0fbc7..de19daa1fdcd 100644\n--- a/src/include/duckdb/storage/table/column_data.hpp\n+++ b/src/include/duckdb/storage/table/column_data.hpp\n@@ -96,7 +96,7 @@ class ColumnData {\n \t                      idx_t result_idx);\n \n \tvirtual void Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids,\n-\t                    idx_t offset, idx_t update_count);\n+\t                    idx_t update_count);\n \tvirtual void UpdateColumn(Transaction &transaction, const vector<column_t> &column_path, Vector &update_vector,\n \t                          row_t *row_ids, idx_t update_count, idx_t depth);\n \tvirtual unique_ptr<BaseStatistics> GetUpdateStatistics();\ndiff --git a/src/include/duckdb/storage/table/list_column_data.hpp b/src/include/duckdb/storage/table/list_column_data.hpp\nindex 2acf1c743b06..03b6ce262e76 100644\n--- a/src/include/duckdb/storage/table/list_column_data.hpp\n+++ b/src/include/duckdb/storage/table/list_column_data.hpp\n@@ -42,7 +42,7 @@ class ListColumnData : public ColumnData {\n \tidx_t Fetch(ColumnScanState &state, row_t row_id, Vector &result) override;\n \tvoid FetchRow(Transaction &transaction, ColumnFetchState &state, row_t row_id, Vector &result,\n \t              idx_t result_idx) override;\n-\tvoid Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids, idx_t offset,\n+\tvoid Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids,\n \t            idx_t update_count) override;\n \tvoid UpdateColumn(Transaction &transaction, const vector<column_t> &column_path, Vector &update_vector,\n \t                  row_t *row_ids, idx_t update_count, idx_t depth) override;\ndiff --git a/src/include/duckdb/storage/table/standard_column_data.hpp b/src/include/duckdb/storage/table/standard_column_data.hpp\nindex ff9efa83f831..154d6546ab29 100644\n--- a/src/include/duckdb/storage/table/standard_column_data.hpp\n+++ b/src/include/duckdb/storage/table/standard_column_data.hpp\n@@ -38,7 +38,7 @@ class StandardColumnData : public ColumnData {\n \tidx_t Fetch(ColumnScanState &state, row_t row_id, Vector &result) override;\n \tvoid FetchRow(Transaction &transaction, ColumnFetchState &state, row_t row_id, Vector &result,\n \t              idx_t result_idx) override;\n-\tvoid Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids, idx_t offset,\n+\tvoid Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids,\n \t            idx_t update_count) override;\n \tvoid UpdateColumn(Transaction &transaction, const vector<column_t> &column_path, Vector &update_vector,\n \t                  row_t *row_ids, idx_t update_count, idx_t depth) override;\ndiff --git a/src/include/duckdb/storage/table/struct_column_data.hpp b/src/include/duckdb/storage/table/struct_column_data.hpp\nindex d2491984e8ac..0b50a2a158f1 100644\n--- a/src/include/duckdb/storage/table/struct_column_data.hpp\n+++ b/src/include/duckdb/storage/table/struct_column_data.hpp\n@@ -41,7 +41,7 @@ class StructColumnData : public ColumnData {\n \tidx_t Fetch(ColumnScanState &state, row_t row_id, Vector &result) override;\n \tvoid FetchRow(Transaction &transaction, ColumnFetchState &state, row_t row_id, Vector &result,\n \t              idx_t result_idx) override;\n-\tvoid Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids, idx_t offset,\n+\tvoid Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids,\n \t            idx_t update_count) override;\n \tvoid UpdateColumn(Transaction &transaction, const vector<column_t> &column_path, Vector &update_vector,\n \t                  row_t *row_ids, idx_t update_count, idx_t depth) override;\ndiff --git a/src/include/duckdb/storage/table/update_segment.hpp b/src/include/duckdb/storage/table/update_segment.hpp\nindex 589135a1ac40..e6c429353810 100644\n--- a/src/include/duckdb/storage/table/update_segment.hpp\n+++ b/src/include/duckdb/storage/table/update_segment.hpp\n@@ -37,7 +37,7 @@ class UpdateSegment {\n \tvoid FetchUpdates(Transaction &transaction, idx_t vector_index, Vector &result);\n \tvoid FetchCommitted(idx_t vector_index, Vector &result);\n \tvoid FetchCommittedRange(idx_t start_row, idx_t count, Vector &result);\n-\tvoid Update(Transaction &transaction, idx_t column_index, Vector &update, row_t *ids, idx_t offset, idx_t count,\n+\tvoid Update(Transaction &transaction, idx_t column_index, Vector &update, row_t *ids, idx_t count,\n \t            Vector &base_data);\n \tvoid FetchRow(Transaction &transaction, idx_t row_id, Vector &result, idx_t result_idx);\n \n@@ -78,7 +78,7 @@ class UpdateSegment {\n \t                                     idx_t row_idx, Vector &result, idx_t result_idx);\n \ttypedef void (*rollback_update_function_t)(UpdateInfo *base_info, UpdateInfo *rollback_info);\n \ttypedef idx_t (*statistics_update_function_t)(UpdateSegment *segment, SegmentStatistics &stats, Vector &update,\n-\t                                              idx_t offset, idx_t count, SelectionVector &sel);\n+\t                                              idx_t count, SelectionVector &sel);\n \n private:\n \tinitialize_update_function_t initialize_update_function;\ndiff --git a/src/storage/table/column_data.cpp b/src/storage/table/column_data.cpp\nindex 009301deff08..da13dcf1c22f 100644\n--- a/src/storage/table/column_data.cpp\n+++ b/src/storage/table/column_data.cpp\n@@ -298,24 +298,24 @@ void ColumnData::FetchRow(Transaction &transaction, ColumnFetchState &state, row\n }\n \n void ColumnData::Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids,\n-                        idx_t offset, idx_t update_count) {\n+                        idx_t update_count) {\n \tlock_guard<mutex> update_guard(update_lock);\n \tif (!updates) {\n \t\tupdates = make_unique<UpdateSegment>(*this);\n \t}\n \tVector base_vector(type);\n \tColumnScanState state;\n-\tauto fetch_count = Fetch(state, row_ids[offset], base_vector);\n+\tauto fetch_count = Fetch(state, row_ids[0], base_vector);\n \n \tbase_vector.Normalify(fetch_count);\n-\tupdates->Update(transaction, column_index, update_vector, row_ids, offset, update_count, base_vector);\n+\tupdates->Update(transaction, column_index, update_vector, row_ids, update_count, base_vector);\n }\n \n void ColumnData::UpdateColumn(Transaction &transaction, const vector<column_t> &column_path, Vector &update_vector,\n                               row_t *row_ids, idx_t update_count, idx_t depth) {\n \t// this method should only be called at the end of the path in the base column case\n \tD_ASSERT(depth >= column_path.size());\n-\tColumnData::Update(transaction, column_path[0], update_vector, row_ids, 0, update_count);\n+\tColumnData::Update(transaction, column_path[0], update_vector, row_ids, update_count);\n }\n \n unique_ptr<BaseStatistics> ColumnData::GetUpdateStatistics() {\ndiff --git a/src/storage/table/list_column_data.cpp b/src/storage/table/list_column_data.cpp\nindex 2ef7c1f58989..74cf5bfe7075 100644\n--- a/src/storage/table/list_column_data.cpp\n+++ b/src/storage/table/list_column_data.cpp\n@@ -218,7 +218,7 @@ idx_t ListColumnData::Fetch(ColumnScanState &state, row_t row_id, Vector &result\n }\n \n void ListColumnData::Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids,\n-                            idx_t offset, idx_t update_count) {\n+                            idx_t update_count) {\n \tthrow NotImplementedException(\"List Update is not supported.\");\n }\n \ndiff --git a/src/storage/table/row_group.cpp b/src/storage/table/row_group.cpp\nindex 46d6b5039fd4..eea66a50b8e8 100644\n--- a/src/storage/table/row_group.cpp\n+++ b/src/storage/table/row_group.cpp\n@@ -608,7 +608,13 @@ void RowGroup::Update(Transaction &transaction, DataChunk &update_chunk, row_t *\n \t\tauto column = column_ids[i];\n \t\tD_ASSERT(column != COLUMN_IDENTIFIER_ROW_ID);\n \t\tD_ASSERT(columns[column]->type.id() == update_chunk.data[i].GetType().id());\n-\t\tcolumns[column]->Update(transaction, column, update_chunk.data[i], ids, offset, count);\n+\t\tif (offset > 0) {\n+\t\t\tVector sliced_vector(update_chunk.data[i], offset);\n+\t\t\tsliced_vector.Normalify(count);\n+\t\t\tcolumns[column]->Update(transaction, column, sliced_vector, ids + offset, count);\n+\t\t} else {\n+\t\t\tcolumns[column]->Update(transaction, column, update_chunk.data[i], ids, count);\n+\t\t}\n \t\tMergeStatistics(column, *columns[column]->GetUpdateStatistics());\n \t}\n }\ndiff --git a/src/storage/table/standard_column_data.cpp b/src/storage/table/standard_column_data.cpp\nindex 9618db674b73..b9854a08611f 100644\n--- a/src/storage/table/standard_column_data.cpp\n+++ b/src/storage/table/standard_column_data.cpp\n@@ -105,16 +105,16 @@ idx_t StandardColumnData::Fetch(ColumnScanState &state, row_t row_id, Vector &re\n }\n \n void StandardColumnData::Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids,\n-                                idx_t offset, idx_t update_count) {\n-\tColumnData::Update(transaction, column_index, update_vector, row_ids, offset, update_count);\n-\tvalidity.Update(transaction, column_index, update_vector, row_ids, offset, update_count);\n+                                idx_t update_count) {\n+\tColumnData::Update(transaction, column_index, update_vector, row_ids, update_count);\n+\tvalidity.Update(transaction, column_index, update_vector, row_ids, update_count);\n }\n \n void StandardColumnData::UpdateColumn(Transaction &transaction, const vector<column_t> &column_path,\n                                       Vector &update_vector, row_t *row_ids, idx_t update_count, idx_t depth) {\n \tif (depth >= column_path.size()) {\n \t\t// update this column\n-\t\tColumnData::Update(transaction, column_path[0], update_vector, row_ids, 0, update_count);\n+\t\tColumnData::Update(transaction, column_path[0], update_vector, row_ids, update_count);\n \t} else {\n \t\t// update the child column (i.e. the validity column)\n \t\tvalidity.UpdateColumn(transaction, column_path, update_vector, row_ids, update_count, depth + 1);\ndiff --git a/src/storage/table/struct_column_data.cpp b/src/storage/table/struct_column_data.cpp\nindex ba5398b3af36..8dcf50ab81d9 100644\n--- a/src/storage/table/struct_column_data.cpp\n+++ b/src/storage/table/struct_column_data.cpp\n@@ -152,11 +152,11 @@ idx_t StructColumnData::Fetch(ColumnScanState &state, row_t row_id, Vector &resu\n }\n \n void StructColumnData::Update(Transaction &transaction, idx_t column_index, Vector &update_vector, row_t *row_ids,\n-                              idx_t offset, idx_t update_count) {\n-\tvalidity.Update(transaction, column_index, update_vector, row_ids, offset, update_count);\n+                              idx_t update_count) {\n+\tvalidity.Update(transaction, column_index, update_vector, row_ids, update_count);\n \tauto &child_entries = StructVector::GetEntries(update_vector);\n \tfor (idx_t i = 0; i < child_entries.size(); i++) {\n-\t\tsub_columns[i]->Update(transaction, column_index, *child_entries[i], row_ids, offset, update_count);\n+\t\tsub_columns[i]->Update(transaction, column_index, *child_entries[i], row_ids, update_count);\n \t}\n }\n \ndiff --git a/src/storage/table/update_segment.cpp b/src/storage/table/update_segment.cpp\nindex 32aefd05bcd9..1a8ac09002e7 100644\n--- a/src/storage/table/update_segment.cpp\n+++ b/src/storage/table/update_segment.cpp\n@@ -886,60 +886,56 @@ unique_ptr<BaseStatistics> UpdateSegment::GetStatistics() {\n \treturn stats.statistics->Copy();\n }\n \n-idx_t UpdateValidityStatistics(UpdateSegment *segment, SegmentStatistics &stats, Vector &update, idx_t offset,\n-                               idx_t count, SelectionVector &sel) {\n+idx_t UpdateValidityStatistics(UpdateSegment *segment, SegmentStatistics &stats, Vector &update, idx_t count,\n+                               SelectionVector &sel) {\n \tauto &mask = FlatVector::Validity(update);\n \tauto &validity = (ValidityStatistics &)*stats.statistics;\n \tif (!mask.AllValid() && !validity.has_null) {\n \t\tfor (idx_t i = 0; i < count; i++) {\n-\t\t\tauto idx = offset + i;\n-\t\t\tif (!mask.RowIsValid(idx)) {\n+\t\t\tif (!mask.RowIsValid(i)) {\n \t\t\t\tvalidity.has_null = true;\n \t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \t}\n-\tsel.Initialize((sel_t *)(FlatVector::INCREMENTAL_VECTOR + offset));\n+\tsel.Initialize((sel_t *)(FlatVector::INCREMENTAL_VECTOR));\n \treturn count;\n }\n \n template <class T>\n-idx_t TemplatedUpdateNumericStatistics(UpdateSegment *segment, SegmentStatistics &stats, Vector &update, idx_t offset,\n-                                       idx_t count, SelectionVector &sel) {\n+idx_t TemplatedUpdateNumericStatistics(UpdateSegment *segment, SegmentStatistics &stats, Vector &update, idx_t count,\n+                                       SelectionVector &sel) {\n \tauto update_data = FlatVector::GetData<T>(update);\n \tauto &mask = FlatVector::Validity(update);\n \n \tif (mask.AllValid()) {\n \t\tfor (idx_t i = 0; i < count; i++) {\n-\t\t\tauto idx = offset + i;\n-\t\t\tNumericStatistics::Update<T>(stats, update_data[idx]);\n+\t\t\tNumericStatistics::Update<T>(stats, update_data[i]);\n \t\t}\n-\t\tsel.Initialize((sel_t *)(FlatVector::INCREMENTAL_VECTOR + offset));\n+\t\tsel.Initialize((sel_t *)(FlatVector::INCREMENTAL_VECTOR));\n \t\treturn count;\n \t} else {\n \t\tidx_t not_null_count = 0;\n \t\tsel.Initialize(STANDARD_VECTOR_SIZE);\n \t\tfor (idx_t i = 0; i < count; i++) {\n-\t\t\tauto idx = offset + i;\n-\t\t\tif (mask.RowIsValid(idx)) {\n-\t\t\t\tsel.set_index(not_null_count++, idx);\n-\t\t\t\tNumericStatistics::Update<T>(stats, update_data[idx]);\n+\t\t\tif (mask.RowIsValid(i)) {\n+\t\t\t\tsel.set_index(not_null_count++, i);\n+\t\t\t\tNumericStatistics::Update<T>(stats, update_data[i]);\n \t\t\t}\n \t\t}\n \t\treturn not_null_count;\n \t}\n }\n \n-idx_t UpdateStringStatistics(UpdateSegment *segment, SegmentStatistics &stats, Vector &update, idx_t offset,\n-                             idx_t count, SelectionVector &sel) {\n+idx_t UpdateStringStatistics(UpdateSegment *segment, SegmentStatistics &stats, Vector &update, idx_t count,\n+                             SelectionVector &sel) {\n \tauto update_data = FlatVector::GetData<string_t>(update);\n \tauto &mask = FlatVector::Validity(update);\n \tif (mask.AllValid()) {\n \t\tfor (idx_t i = 0; i < count; i++) {\n-\t\t\tauto idx = offset + i;\n-\t\t\t((StringStatistics &)*stats.statistics).Update(update_data[idx]);\n-\t\t\tif (!update_data[idx].IsInlined()) {\n-\t\t\t\tupdate_data[idx] = segment->GetStringHeap().AddString(update_data[idx]);\n+\t\t\t((StringStatistics &)*stats.statistics).Update(update_data[i]);\n+\t\t\tif (!update_data[i].IsInlined()) {\n+\t\t\t\tupdate_data[i] = segment->GetStringHeap().AddString(update_data[i]);\n \t\t\t}\n \t\t}\n \t\tsel.Initialize(FlatVector::INCREMENTAL_SELECTION_VECTOR);\n@@ -948,12 +944,11 @@ idx_t UpdateStringStatistics(UpdateSegment *segment, SegmentStatistics &stats, V\n \t\tidx_t not_null_count = 0;\n \t\tsel.Initialize(STANDARD_VECTOR_SIZE);\n \t\tfor (idx_t i = 0; i < count; i++) {\n-\t\t\tauto idx = offset + i;\n-\t\t\tif (mask.RowIsValid(idx)) {\n-\t\t\t\tsel.set_index(not_null_count++, idx);\n-\t\t\t\t((StringStatistics &)*stats.statistics).Update(update_data[idx]);\n-\t\t\t\tif (!update_data[idx].IsInlined()) {\n-\t\t\t\t\tupdate_data[idx] = segment->GetStringHeap().AddString(update_data[idx]);\n+\t\t\tif (mask.RowIsValid(i)) {\n+\t\t\t\tsel.set_index(not_null_count++, i);\n+\t\t\t\t((StringStatistics &)*stats.statistics).Update(update_data[i]);\n+\t\t\t\tif (!update_data[i].IsInlined()) {\n+\t\t\t\t\tupdate_data[i] = segment->GetStringHeap().AddString(update_data[i]);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n@@ -1045,8 +1040,8 @@ static idx_t SortSelectionVector(SelectionVector &sel, idx_t count, row_t *ids)\n \treturn pos;\n }\n \n-void UpdateSegment::Update(Transaction &transaction, idx_t column_index, Vector &update, row_t *ids, idx_t offset,\n-                           idx_t count, Vector &base_data) {\n+void UpdateSegment::Update(Transaction &transaction, idx_t column_index, Vector &update, row_t *ids, idx_t count,\n+                           Vector &base_data) {\n \t// obtain an exclusive lock\n \tauto write_lock = lock.GetExclusiveLock();\n \n@@ -1056,7 +1051,7 @@ void UpdateSegment::Update(Transaction &transaction, idx_t column_index, Vector\n \tSelectionVector sel;\n \t{\n \t\tlock_guard<mutex> stats_guard(stats_lock);\n-\t\tcount = statistics_update_function(this, stats, update, offset, count, sel);\n+\t\tcount = statistics_update_function(this, stats, update, count, sel);\n \t}\n \tif (count == 0) {\n \t\treturn;\n",
  "test_patch": "diff --git a/test/sql/update/string_update_issue_2471.test_coverage b/test/sql/update/string_update_issue_2471.test_coverage\nnew file mode 100644\nindex 000000000000..6711d6014452\n--- /dev/null\n+++ b/test/sql/update/string_update_issue_2471.test_coverage\n@@ -0,0 +1,27 @@\n+# name: test/sql/update/string_update_issue_2471.test_coverage\n+# description: Repeated update of string values\n+# group: [update]\n+\n+statement ok\n+CREATE VIEW test_table_view AS SELECT * FROM 'data/csv/issue2471.csv'\n+\n+statement ok\n+create table test_table (isin VARCHAR(20), value VARCHAR(1));\n+\n+statement ok\n+insert into test_table SELECT * FROM test_table_view;\n+\n+statement ok\n+UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin;\n+\n+query IIIII\n+select count(distinct isin), min(isin), max(isin), min(value), max(value) from test_table;\n+----\n+2300\tXXXXAT0000A22H40\tXXXXXS2366276595\t1\t1\n+\n+loop i 0 100\n+\n+statement ok\n+UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin\n+\n+endloop\n",
  "problem_statement": "Python: In-memory duckdb keep increasing indefinitely\n#### What happens?\r\nI run a in-memory duckdb python (initialise it with a table of 200K records, memory~250MB after inserting those, id column as the primary key) and the process subscribe to a stream of update (pandas dataframe) which keep updating the table by **cursor.executemany(\"UPDATE TABLE set field1 = ?, field2= ? where id = ?\", df.to_records())** for 500 records every second.\r\n\r\nHowever, the memory of the python program keep increasing even there is no new records inserted ( I keep reusing the cursor for the updates)\r\n\r\nIf i comment out the **cursor.executemany** statement and just print out the dataframe. The memory doesn't increase while getting the update from the data stream.\r\n\r\nTherefore, I am quite sure the memory increment is due to the update statement. I also set the memory limit by _PRAGMA memory_limit='1GB';_\r\n\r\nMoreover, I got segmentation fault if i try to run a update-select (update a big table with 20k records from a table with 500 records) statement . If i just have say 5k records in that big table , then it runs fine.\r\n\r\n#### To Reproduce\r\nI will try to create a sample program later. But for now, wondering if I am doing anything wrong with the in-memory database.\r\n\r\n#### Environment (please complete the following information):\r\n - OS: Windows 10\r\n - DuckDB Version: duckdb-0.3.0\r\n - DuckDB Client: Python\r\n\r\n#### Before Submitting\r\n\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [ ] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\n",
  "hints_text": "And i noticed that even after i deleted all the records from the table. The memory is not freed up. \r\nAny ideas how to reclaim those memory ?\r\n\r\nThanks\nThanks for the report!\r\n\r\n> However, the memory of the python program keep increasing even there is no new records inserted ( I keep reusing the cursor for the updates)\r\n\r\nThat is perhaps related to the fact that in-memory databases are not checkpointed/flushed, or perhaps related to string updates not being properly cleaned up. What kind of data are you inserting into the tables (types, size of values, etc)?\r\n\r\n> Moreover, I got segmentation fault if i try to run a update-select (update a big table with 20k records from a table with 500 records) statement . If i just have say 5k records in that big table , then it runs fine.\r\n\r\nCould you share the query/data that triggers this crash please?\r\n\r\n> And i noticed that even after i deleted all the records from the table. The memory is not freed up. Any ideas how to reclaim those memory ?\r\n\r\n`DROP TABLE` should reclaim the memory. Delete only marks tuples as deleted, and in-memory databases are not checkpointed/flushed yet, which means the deleted tuples will not be cleaned up from memory. This is related to #109.\r\n\nWill try to create a repeatable example later this week.\nHi. I found that there are different behavior for \r\n\r\n```\r\nduckdb.connect(database=':memory', read_only=False)\r\n```\r\nvs\r\n```\r\nduckdb.connect()\r\n```\r\n\r\nthe 1st one caused me segmentation fault during UPDATE executemany on a large table.\r\n\r\nWhat is the difference between the two ?\r\n\r\nThanks\nIn the first one you are creating an on-disk database called `:memory`. There is a missing colon in the end. The correct syntax is `:memory:` for creating an in-memory database.\r\n\r\nCould you create a reproducible example of the segmentation fault?\nHere is the reproducible example:\r\n\r\n\r\n```\r\nimport duckdb\r\nimport pandas as pd\r\n# import pyarrow as pa\r\n\r\nimport faulthandler\r\nfaulthandler.enable()\r\n\r\nprint('Start')\r\nconn: duckdb.DuckDBPyConnection = duckdb.connect()\r\ncursor = conn.cursor()\r\ndata = pd.read_csv('data.csv')\r\n\r\nconn.execute(\"create table test_table (isin VARCHAR(12), value VARCHAR(1))\")\r\n# arrow_table = pa.Table.from_pydict(data)\r\n# cursor.register_arrow(f'test_table_view', arrow_table)\r\n\r\ncursor.register('test_table_view', data)\r\ncursor.execute(\"insert into test_table SELECT * FROM test_table_view\")\r\ncursor.execute(\"UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin\")\r\n\r\n# for i in range(1000):\r\n#     cursor.execute(\"UPDATE test_table set value = tdv.value FROM test_table_view tdv where tdv.isin = test_table.isin\")\r\n\r\n# Not able to reach this statement\r\ncursor.close()\r\nconn.close()\r\nprint('End')\r\n\r\n```\r\n\r\n\r\n[data.csv](https://github.com/duckdb/duckdb/files/7504128/data.csv)\r\n```\r\n\r\nroot@goorm:/workspace/pythonContainer# python3 /workspace/pythonContainer/update_from_view.py\r\nStart\r\nFatal Python error: Segmentation fault\r\n\r\nCurrent thread 0x00007fe3b11be600 (most recent call first):\r\n  File \"/workspace/pythonContainer/update_from_view.py\", line 19 in <module>\r\nSegmentation fault (core dumped)\r\nroot@goorm:/workspace/pythonContainer#\r\n\r\n\r\n```\r\n\r\nI noticed that the VARCHAR/TEXT column type is the cause of the segmentation fault. \r\nEg. if you change the type to eg. INTEGER, it runs fine.\r\n\r\n\n@Mytherin could you plz take a look. Thanks!\nThanks for the update! I can indeed reproduce the problem here. I will have a look.",
  "created_at": "2021-12-02T10:46:47Z"
}