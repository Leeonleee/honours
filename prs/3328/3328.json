{
  "repo": "duckdb/duckdb",
  "pull_number": 3328,
  "instance_id": "duckdb__duckdb-3328",
  "issue_numbers": [
    "3294",
    "3294"
  ],
  "base_commit": "52d9a8b8599cf822698905289a57e2224e5904c6",
  "patch": "diff --git a/src/storage/compression/validity_uncompressed.cpp b/src/storage/compression/validity_uncompressed.cpp\nindex b1798e5ba50c..386935e43ad5 100644\n--- a/src/storage/compression/validity_uncompressed.cpp\n+++ b/src/storage/compression/validity_uncompressed.cpp\n@@ -237,7 +237,12 @@ void ValidityScanPartial(ColumnSegment &segment, ColumnScanState &state, idx_t s\n \t// the bitwise ops we use below don't work if the vector size is too small\n \tValidityMask source_mask(input_data);\n \tfor (idx_t i = 0; i < scan_count; i++) {\n-\t\tresult_mask.Set(result_offset + i, source_mask.RowIsValid(start + i));\n+\t\tif (!source_mask.RowIsValid(start + i)) {\n+\t\t\tif (result_mask.AllValid()) {\n+\t\t\t\tresult_mask.Initialize(MaxValue<idx_t>(STANDARD_VECTOR_SIZE, result_offset + scan_count));\n+\t\t\t}\n+\t\t\tresult_mask.SetInvalid(result_offset + i);\n+\t\t}\n \t}\n #else\n \t// the code below does what the fallback code above states, but using bitwise ops:\n",
  "test_patch": "diff --git a/test/sql/delete/list_delete.test b/test/sql/delete/list_delete.test\nnew file mode 100644\nindex 000000000000..388fa7e34f42\n--- /dev/null\n+++ b/test/sql/delete/list_delete.test\n@@ -0,0 +1,28 @@\n+# name: test/sql/delete/list_delete.test\n+# description: Test list deletions\n+# group: [delete]\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+CREATE TABLE aggr (k int[]);\n+\n+statement ok\n+INSERT INTO aggr VALUES ([0, 1, 1, 1, 4, 0, 3, 3, 2, 2, 4, 4, 2, 4, 0, 0, 0, 1, 2, 3, 4, 2, 3, 3, 1]);\n+\n+statement ok\n+INSERT INTO aggr VALUES ([]), ([NULL]), (NULL), ([0, 1, 1, 1, 4, NULL, 0, 3, 3, 2, NULL, 2, 4, 4, 2, 4, 0, 0, 0, 1, NULL, 2, 3, 4, 2, 3, 3, 1]);\n+\n+query I\n+SELECT COUNT(k) FROM aggr\n+----\n+4\n+\n+statement ok\n+DELETE FROM aggr;\n+\n+query I\n+SELECT COUNT(k) FROM aggr\n+----\n+0\n",
  "problem_statement": "DELETE triggers assertion with STANDARD_VECTOR_SIZE = 2\n#### What happens?\r\n\r\nI created a table and then inserted some lists into that table. This followed by a `DELETE` on that table triggers an assertion. This happens when compiling DuckDB with a `STANDARD_VECTOR_SIZE` of 2. I am assuming that this is a bug because we test DuckDB for different vector sizes.\r\n\r\n#### To Reproduce\r\nSteps to reproduce the behavior.\r\n\r\nChange the `STANDARD_VECTOR_SIZE` in `vector_size.hpp` to 2. Then compile and run the following queries.\r\n\r\n```\r\nCREATE TABLE aggr (k int[]);\r\nINSERT INTO aggr VALUES ([0, 1, 1, 1, 4, 0, 3, 3, 2, 2, 4, 4, 2, 4, 0, 0, 0, 1, 2, 3, 4, 2, 3, 3, 1]);\r\nINSERT INTO aggr VALUES ([]), ([NULL]), (NULL), ([0, 1, 1, 1, 4, NULL, 0, 3, 3, 2, NULL, 2, 4, 4, 2, 4, 0, 0, 0, 1, NULL, 2, 3, 4, 2, 3, 3, 1]);\r\n\r\nDELETE FROM aggr;\r\n```\r\n\r\nWith the following assertion:\r\n```\r\nError: INTERNAL Error: INTERNAL Error: Assertion triggered in file \"/Users/tania/DuckDB/duckdb-master/duckdb/src/include/duckdb/common/types/validity_mask.hpp\" on line 227: row_idx <= STANDARD_VECTOR_SIZE\r\n```\r\n\r\n#### Environment (please complete the following information):\r\n - OS: iOS\r\n - DuckDB Version: 22\r\n - DuckDB Client: CLI\r\n\r\n#### Before Submitting\r\n\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\nDELETE triggers assertion with STANDARD_VECTOR_SIZE = 2\n#### What happens?\r\n\r\nI created a table and then inserted some lists into that table. This followed by a `DELETE` on that table triggers an assertion. This happens when compiling DuckDB with a `STANDARD_VECTOR_SIZE` of 2. I am assuming that this is a bug because we test DuckDB for different vector sizes.\r\n\r\n#### To Reproduce\r\nSteps to reproduce the behavior.\r\n\r\nChange the `STANDARD_VECTOR_SIZE` in `vector_size.hpp` to 2. Then compile and run the following queries.\r\n\r\n```\r\nCREATE TABLE aggr (k int[]);\r\nINSERT INTO aggr VALUES ([0, 1, 1, 1, 4, 0, 3, 3, 2, 2, 4, 4, 2, 4, 0, 0, 0, 1, 2, 3, 4, 2, 3, 3, 1]);\r\nINSERT INTO aggr VALUES ([]), ([NULL]), (NULL), ([0, 1, 1, 1, 4, NULL, 0, 3, 3, 2, NULL, 2, 4, 4, 2, 4, 0, 0, 0, 1, NULL, 2, 3, 4, 2, 3, 3, 1]);\r\n\r\nDELETE FROM aggr;\r\n```\r\n\r\nWith the following assertion:\r\n```\r\nError: INTERNAL Error: INTERNAL Error: Assertion triggered in file \"/Users/tania/DuckDB/duckdb-master/duckdb/src/include/duckdb/common/types/validity_mask.hpp\" on line 227: row_idx <= STANDARD_VECTOR_SIZE\r\n```\r\n\r\n#### Environment (please complete the following information):\r\n - OS: iOS\r\n - DuckDB Version: 22\r\n - DuckDB Client: CLI\r\n\r\n#### Before Submitting\r\n\r\n- [x] **Have you tried this on the latest `master` branch?**\r\n* **Python**: `pip install duckdb --upgrade --pre`\r\n* **R**: `install.packages(\"https://github.com/duckdb/duckdb/releases/download/master-builds/duckdb_r_src.tar.gz\", repos = NULL)`\r\n* **Other Platforms**: You can find binaries [here](https://github.com/duckdb/duckdb/releases/tag/master-builds) or compile from source.\r\n\r\n- [x] **Have you tried the steps to reproduce? Do they include all relevant data and configuration? Does the issue you report still appear there?**\r\n\n",
  "hints_text": "\n",
  "created_at": "2022-03-30T08:23:12Z"
}