diff --git a/test/rigger/test_rigger.cpp b/test/rigger/test_rigger.cpp
index d3207d241166..d3a658f38c6a 100644
--- a/test/rigger/test_rigger.cpp
+++ b/test/rigger/test_rigger.cpp
@@ -125,7 +125,7 @@ TEST_CASE("Test queries found by Rigger that cause problems in other systems", "
 	}
 }
 
-TEST_CASE("Tests found by Rigger", "[rigger]") {
+TEST_CASE("SQLancer", "[rigger]") {
 	unique_ptr<QueryResult> result;
 	DuckDB db(nullptr);
 	Connection con(db);
@@ -758,4 +758,12 @@ TEST_CASE("Tests found by Rigger", "[rigger]") {
 		REQUIRE(CHECK_COLUMN(result, 0, {Value()}));
 		REQUIRE(CHECK_COLUMN(result, 1, {"0"}));
 	}
+	SECTION("709") {
+		REQUIRE_NO_FAIL(con.Query("CREATE TABLE t0(c0 DATETIME DEFAULT(0.45428781614730807), c1 DATE, PRIMARY KEY(c1));"));
+		REQUIRE_NO_FAIL(con.Query("CREATE TABLE t1(c0 DOUBLE NOT NULL, c1 BOOLEAN);"));
+		REQUIRE_NO_FAIL(con.Query("insert into t0 (c0, c1) values (NULL, '2019-11-26');"));
+		REQUIRE_NO_FAIL(con.Query("insert into t1 values (42, true);"));
+
+		REQUIRE_NO_FAIL(con.Query("SELECT t0.rowid, t1.c1, t1.c0 FROM t1, t0 WHERE (((t1.rowid NOT IN (((t1.c1) ::BOOLEAN), ((t1.c0) ::INT1))))AND((false BETWEEN '[' AND t1.c0))) UNION SELECT t0.rowid, t1.c1, t1.c0 FROM t1, t0 WHERE (NOT (((t1.rowid NOT IN (((t1.c1) ::BOOLEAN), ((t1.c0) ::INT1))))AND((false BETWEEN '[' AND t1.c0)))) UNION SELECT t0.rowid, t1.c1, t1.c0 FROM t1, t0 WHERE (((((t1.rowid NOT IN (((t1.c1) ::BOOLEAN), ((t1.c0) ::TINYINT))))AND((false BETWEEN '[' AND t1.c0)))) IS NULL);"));
+	}
 }
