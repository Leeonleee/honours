{
  "repo": "duckdb/duckdb",
  "pull_number": 13182,
  "instance_id": "duckdb__duckdb-13182",
  "issue_numbers": [
    "13120",
    "13120"
  ],
  "base_commit": "c27cac0c8a1b15e84da64f4f48f2c5bdc8f9d4fa",
  "patch": "diff --git a/src/function/scalar/struct/struct_extract.cpp b/src/function/scalar/struct/struct_extract.cpp\nindex 26fc31fe694e..b4ef1c8d6156 100644\n--- a/src/function/scalar/struct/struct_extract.cpp\n+++ b/src/function/scalar/struct/struct_extract.cpp\n@@ -98,7 +98,7 @@ static unique_ptr<FunctionData> StructExtractBind(ClientContext &context, Scalar\n \t}\n \n \tbound_function.return_type = std::move(return_type);\n-\treturn make_uniq<StructExtractBindData>(key_index);\n+\treturn StructExtractFun::GetBindData(key_index);\n }\n \n static unique_ptr<FunctionData> StructExtractBindIndex(ClientContext &context, ScalarFunction &bound_function,\n@@ -134,7 +134,7 @@ static unique_ptr<FunctionData> StructExtractBindIndex(ClientContext &context, S\n \t\t                      index, struct_children.size());\n \t}\n \tbound_function.return_type = struct_children[NumericCast<idx_t>(index - 1)].second;\n-\treturn make_uniq<StructExtractBindData>(NumericCast<idx_t>(index - 1));\n+\treturn StructExtractFun::GetBindData(NumericCast<idx_t>(index - 1));\n }\n \n static unique_ptr<BaseStatistics> PropagateStructExtractStats(ClientContext &context, FunctionStatisticsInput &input) {\n@@ -146,6 +146,10 @@ static unique_ptr<BaseStatistics> PropagateStructExtractStats(ClientContext &con\n \treturn struct_child_stats[info.index].ToUnique();\n }\n \n+unique_ptr<FunctionData> StructExtractFun::GetBindData(idx_t index) {\n+\treturn make_uniq<StructExtractBindData>(index);\n+}\n+\n ScalarFunction StructExtractFun::KeyExtractFunction() {\n \treturn ScalarFunction(\"struct_extract\", {LogicalTypeId::STRUCT, LogicalType::VARCHAR}, LogicalType::ANY,\n \t                      StructExtractFunction, StructExtractBind, nullptr, PropagateStructExtractStats);\ndiff --git a/src/include/duckdb/function/scalar/nested_functions.hpp b/src/include/duckdb/function/scalar/nested_functions.hpp\nindex 2ac436ff2c9b..d29607ead95f 100644\n--- a/src/include/duckdb/function/scalar/nested_functions.hpp\n+++ b/src/include/duckdb/function/scalar/nested_functions.hpp\n@@ -125,6 +125,7 @@ struct StructExtractFun {\n \tstatic ScalarFunction KeyExtractFunction();\n \tstatic ScalarFunction IndexExtractFunction();\n \tstatic ScalarFunctionSet GetFunctions();\n+\tstatic unique_ptr<FunctionData> GetBindData(idx_t index);\n \tstatic void RegisterFunction(BuiltinFunctions &set);\n };\n \ndiff --git a/src/planner/filter/struct_filter.cpp b/src/planner/filter/struct_filter.cpp\nindex 4cc45c5d366c..2c9c3541f7b4 100644\n--- a/src/planner/filter/struct_filter.cpp\n+++ b/src/planner/filter/struct_filter.cpp\n@@ -2,7 +2,9 @@\n #include \"duckdb/storage/statistics/base_statistics.hpp\"\n #include \"duckdb/storage/statistics/struct_stats.hpp\"\n #include \"duckdb/common/string_util.hpp\"\n+#include \"duckdb/planner/expression/bound_constant_expression.hpp\"\n #include \"duckdb/planner/expression/bound_function_expression.hpp\"\n+#include \"duckdb/function/scalar/nested_functions.hpp\"\n \n namespace duckdb {\n \n@@ -36,6 +38,12 @@ unique_ptr<TableFilter> StructFilter::Copy() const {\n }\n \n unique_ptr<Expression> StructFilter::ToExpression(const Expression &column) const {\n-\tthrow NotImplementedException(\"StructFilter::ToExpression not yet supported\");\n+\tauto &child_type = StructType::GetChildType(column.return_type, child_idx);\n+\tvector<unique_ptr<Expression>> arguments;\n+\targuments.push_back(column.Copy());\n+\targuments.push_back(make_uniq<BoundConstantExpression>(Value::BIGINT(NumericCast<int64_t>(child_idx))));\n+\tauto child = make_uniq<BoundFunctionExpression>(child_type, StructExtractFun::IndexExtractFunction(),\n+\t                                                std::move(arguments), StructExtractFun::GetBindData(child_idx));\n+\treturn child_filter->ToExpression(*child);\n }\n } // namespace duckdb\n",
  "test_patch": "diff --git a/test/sql/copy/parquet/hive_partitioning_struct.test b/test/sql/copy/parquet/hive_partitioning_struct.test\nnew file mode 100644\nindex 000000000000..45e2adb19bdc\n--- /dev/null\n+++ b/test/sql/copy/parquet/hive_partitioning_struct.test\n@@ -0,0 +1,27 @@\n+# name: test/sql/copy/parquet/hive_partitioning_struct.test\n+# description: Test hive partitioning and struct pushdown\n+# group: [parquet]\n+\n+require parquet\n+\n+statement ok\n+PRAGMA enable_verification\n+\n+statement ok\n+COPY (SELECT i//50 id, {'a': i} s FROM range(100) t(i)) TO '__TEST_DIR__/hive_partitioned_struct_col' (FORMAT PARQUET, PARTITION_BY (id))\n+\n+query II\n+SELECT * FROM read_parquet('__TEST_DIR__/hive_partitioned_struct_col/**/*.parquet', hive_partitioning=1) WHERE s.a=42\n+----\n+0\t{'a': 42}\n+\n+# what if the hive types themselves are structs?\n+statement ok\n+COPY (SELECT i id, {'a': i//2} s FROM range(100) t(i)) TO '__TEST_DIR__/hive_partitioned_struct' (FORMAT PARQUET, PARTITION_BY (s))\n+\n+query II\n+SELECT * FROM read_parquet('__TEST_DIR__/hive_partitioned_struct/**/*.parquet', hive_partitioning=1, hive_types={'s': 'STRUCT(a INT)'}) WHERE s.a=42 ORDER BY ALL\n+----\n+84\t{'a': 42}\n+85\t{'a': 42}\n+\n",
  "problem_statement": "bug: StructFilter::ToExpression not yet supported\n### What happens?\r\n\r\nI was trying to reproduce an example from overture maps and duckdb, I'm on duckdb `'1.0.1-dev3196'` and when I run the code I get `NotImplementedException: Not implemented Error: StructFilter::ToExpression not yet supported`\r\n\r\nFor the record this doesn't happen in duckdb=1.0.0 . I need the nightly because I need this https://github.com/duckdb/duckdb/pull/12503\r\n\r\n### To Reproduce\r\n\r\n```python\r\nimport duckdb \r\nduckdb.sql(\"load spatial;\")\r\n\r\nsql = \"\"\"SELECT\r\n      id,\r\n      names.primary as primary_name,\r\n      height,\r\n      geometry\r\n    FROM read_parquet('s3://overturemaps-us-west-2/release/2024-06-13-beta.1/theme=buildings/type=*/*', filename=true, hive_partitioning=1)\r\n    WHERE primary_name IS NOT NULL\r\n    AND bbox.xmin > -84.36\r\n    AND bbox.xmax < -82.42\r\n    AND bbox.ymin > 41.71\r\n    AND bbox.ymax < 43.33;\r\n\"\"\"\r\n\r\ntdb = duckdb.sql(sql)\r\nduckdb.sql(\"SELECT * FROM tdb LIMIT 10;\")\r\n```\r\n\r\n```python-traceback\r\n---------------------------------------------------------------------------\r\nNotImplementedException                   Traceback (most recent call last)\r\nFile [~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/core/formatters.py:711](http://localhost:8888/lab/tree/~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/core/formatters.py#line=710), in PlainTextFormatter.__call__(self, obj)\r\n    704 stream = StringIO()\r\n    705 printer = pretty.RepresentationPrinter(stream, self.verbose,\r\n    706     self.max_width, self.newline,\r\n    707     max_seq_length=self.max_seq_length,\r\n    708     singleton_pprinters=self.singleton_printers,\r\n    709     type_pprinters=self.type_printers,\r\n    710     deferred_pprinters=self.deferred_printers)\r\n--> 711 printer.pretty(obj)\r\n    712 printer.flush()\r\n    713 return stream.getvalue()\r\n\r\nFile [~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/lib/pretty.py:411](http://localhost:8888/lab/tree/~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/lib/pretty.py#line=410), in RepresentationPrinter.pretty(self, obj)\r\n    408                         return meth(obj, self, cycle)\r\n    409                 if cls is not object \\\r\n    410                         and callable(cls.__dict__.get('__repr__')):\r\n--> 411                     return _repr_pprint(obj, self, cycle)\r\n    413     return _default_pprint(obj, self, cycle)\r\n    414 finally:\r\n\r\nFile [~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/lib/pretty.py:779](http://localhost:8888/lab/tree/~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/lib/pretty.py#line=778), in _repr_pprint(obj, p, cycle)\r\n    777 \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\r\n    778 # Find newlines and replace them with p.break_()\r\n--> 779 output = repr(obj)\r\n    780 lines = output.splitlines()\r\n    781 with p.group():\r\n\r\nNotImplementedException: Not implemented Error: StructFilter::ToExpression not yet supported\r\n\r\n```\r\n\r\n### OS:\r\n\r\nMacOS - Sonoma 14.5\r\n\r\n### DuckDB Version:\r\n\r\n1.0.1-dev3196\r\n\r\n### DuckDB Client:\r\n\r\nPython\r\n\r\n### Full Name:\r\n\r\nNaty Clementi\r\n\r\n### Affiliation:\r\n\r\nVoltron Data\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a nightly build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\nbug: StructFilter::ToExpression not yet supported\n### What happens?\r\n\r\nI was trying to reproduce an example from overture maps and duckdb, I'm on duckdb `'1.0.1-dev3196'` and when I run the code I get `NotImplementedException: Not implemented Error: StructFilter::ToExpression not yet supported`\r\n\r\nFor the record this doesn't happen in duckdb=1.0.0 . I need the nightly because I need this https://github.com/duckdb/duckdb/pull/12503\r\n\r\n### To Reproduce\r\n\r\n```python\r\nimport duckdb \r\nduckdb.sql(\"load spatial;\")\r\n\r\nsql = \"\"\"SELECT\r\n      id,\r\n      names.primary as primary_name,\r\n      height,\r\n      geometry\r\n    FROM read_parquet('s3://overturemaps-us-west-2/release/2024-06-13-beta.1/theme=buildings/type=*/*', filename=true, hive_partitioning=1)\r\n    WHERE primary_name IS NOT NULL\r\n    AND bbox.xmin > -84.36\r\n    AND bbox.xmax < -82.42\r\n    AND bbox.ymin > 41.71\r\n    AND bbox.ymax < 43.33;\r\n\"\"\"\r\n\r\ntdb = duckdb.sql(sql)\r\nduckdb.sql(\"SELECT * FROM tdb LIMIT 10;\")\r\n```\r\n\r\n```python-traceback\r\n---------------------------------------------------------------------------\r\nNotImplementedException                   Traceback (most recent call last)\r\nFile [~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/core/formatters.py:711](http://localhost:8888/lab/tree/~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/core/formatters.py#line=710), in PlainTextFormatter.__call__(self, obj)\r\n    704 stream = StringIO()\r\n    705 printer = pretty.RepresentationPrinter(stream, self.verbose,\r\n    706     self.max_width, self.newline,\r\n    707     max_seq_length=self.max_seq_length,\r\n    708     singleton_pprinters=self.singleton_printers,\r\n    709     type_pprinters=self.type_printers,\r\n    710     deferred_pprinters=self.deferred_printers)\r\n--> 711 printer.pretty(obj)\r\n    712 printer.flush()\r\n    713 return stream.getvalue()\r\n\r\nFile [~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/lib/pretty.py:411](http://localhost:8888/lab/tree/~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/lib/pretty.py#line=410), in RepresentationPrinter.pretty(self, obj)\r\n    408                         return meth(obj, self, cycle)\r\n    409                 if cls is not object \\\r\n    410                         and callable(cls.__dict__.get('__repr__')):\r\n--> 411                     return _repr_pprint(obj, self, cycle)\r\n    413     return _default_pprint(obj, self, cycle)\r\n    414 finally:\r\n\r\nFile [~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/lib/pretty.py:779](http://localhost:8888/lab/tree/~/mambaforge/envs/ibis-dev/lib/python3.11/site-packages/IPython/lib/pretty.py#line=778), in _repr_pprint(obj, p, cycle)\r\n    777 \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\r\n    778 # Find newlines and replace them with p.break_()\r\n--> 779 output = repr(obj)\r\n    780 lines = output.splitlines()\r\n    781 with p.group():\r\n\r\nNotImplementedException: Not implemented Error: StructFilter::ToExpression not yet supported\r\n\r\n```\r\n\r\n### OS:\r\n\r\nMacOS - Sonoma 14.5\r\n\r\n### DuckDB Version:\r\n\r\n1.0.1-dev3196\r\n\r\n### DuckDB Client:\r\n\r\nPython\r\n\r\n### Full Name:\r\n\r\nNaty Clementi\r\n\r\n### Affiliation:\r\n\r\nVoltron Data\r\n\r\n### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.\r\n\r\nI have tested with a nightly build\r\n\r\n### Did you include all relevant data sets for reproducing the issue?\r\n\r\nYes\r\n\r\n### Did you include all code required to reproduce the issue?\r\n\r\n- [X] Yes, I have\r\n\r\n### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?\r\n\r\n- [X] Yes, I have\n",
  "hints_text": "\n",
  "created_at": "2024-07-29T08:10:43Z"
}